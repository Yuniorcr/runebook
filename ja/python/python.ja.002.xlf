<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="9f31906aca316ff8b57d19aca5194eba09630bfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'monotonic'&lt;/code&gt;: &lt;a href=&quot;#time.monotonic&quot;&gt;&lt;code&gt;time.monotonic()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540b18b61e118f48ed8f329e8d1a3c57ce40d556" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mtime'&lt;/code&gt; (mandatory): an integer or floating-point number representing the modification time of the source code;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57317cfd0a22140533320b39a486ec23b153dc9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mutex+cond'&lt;/code&gt;: a lock uses a mutex and a condition variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0398b292319c23ac113148a0b713bb32c5bb4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'namereplace'&lt;/code&gt; (also only supported when writing) replaces unsupported characters with &lt;code&gt;\N{...}&lt;/code&gt; escape sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5cabc9e693f6ff3c70987022b9b5d01c57d6b6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'nt'&lt;/code&gt;: Windows threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c8aad4beff560e8409561b93517a2d37a76579" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'peercert'&lt;/code&gt;: peer certificate; result of &lt;a href=&quot;ssl#ssl.SSLSocket.getpeercert&quot;&gt;&lt;code&gt;ssl.SSLSocket.getpeercert()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718ff024330163c488122f4667005753a252ba7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'peername'&lt;/code&gt;: the remote address to which the socket is connected, result of &lt;a href=&quot;socket#socket.socket.getpeername&quot;&gt;&lt;code&gt;socket.socket.getpeername()&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;None&lt;/code&gt; on error)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52544336112bed9357960af37923b7feaeefff7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'perf_counter'&lt;/code&gt;: &lt;a href=&quot;#time.perf_counter&quot;&gt;&lt;code&gt;time.perf_counter()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb76c6878d6fcf14983d39e50c843c82349a242a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'pipe'&lt;/code&gt;: pipe object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbbbb7d5ea7db27b1282688b6f98115ef9e4ffe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'process_time'&lt;/code&gt;: &lt;a href=&quot;#time.process_time&quot;&gt;&lt;code&gt;time.process_time()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca4536cbfbe7ef66e0a7e333a8d462f378dcfa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'pthread'&lt;/code&gt;: POSIX threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1100cbce12d7845cc9ec84ec2d8a7c51d697ebe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'r'&lt;/code&gt; is an alias for &lt;code&gt;'a'&lt;/code&gt; and should only be used for Python2/3 code bases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62094339ca9c86e42d9bc5046a7d0b1b39a1d389" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'replace'&lt;/code&gt; causes a replacement marker (such as &lt;code&gt;'?'&lt;/code&gt;) to be inserted where there is malformed data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a9657138f1d083933ee247a2d11ecd429459f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'s'&lt;/code&gt; is an alias for &lt;code&gt;'b'&lt;/code&gt; and should only be used for Python2/3 code bases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abb25359256e933e6a836abcdf78c9809a6ea07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'seconds'&lt;/code&gt;: Include &lt;a href=&quot;#datetime.datetime.hour&quot;&gt;&lt;code&gt;hour&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#datetime.datetime.minute&quot;&gt;&lt;code&gt;minute&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#datetime.datetime.second&quot;&gt;&lt;code&gt;second&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;HH:MM:SS&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165d7df61f26c004d63129ef5a114eef8e2f4787" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'seconds'&lt;/code&gt;: Include &lt;a href=&quot;#datetime.time.hour&quot;&gt;&lt;code&gt;hour&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#datetime.time.minute&quot;&gt;&lt;code&gt;minute&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#datetime.time.second&quot;&gt;&lt;code&gt;second&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;HH:MM:SS&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0991cee8b9956c479562db2492caed8424c2ba98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'semaphore'&lt;/code&gt;: a lock uses a semaphore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4567b8660163981f42d5c3421cf6619138283f29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'size'&lt;/code&gt; (optional): the size in bytes of the source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567e45bf32eb623356d2284df67a5ad11d9ac618" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'socket'&lt;/code&gt;: &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed57a3a552c07bf9c2e17bf57d34370ecc4f9224" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'sockname'&lt;/code&gt;: the socket&amp;rsquo;s own address, result of &lt;a href=&quot;socket#socket.socket.getsockname&quot;&gt;&lt;code&gt;socket.socket.getsockname()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bcd922d45c4408ee112ab378bd1205e862e6761" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'solaris'&lt;/code&gt;: Solaris threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5332c0dd72463c990c65efc6ca71b4a600138c89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'ssl_object'&lt;/code&gt;: &lt;a href=&quot;ssl#ssl.SSLObject&quot;&gt;&lt;code&gt;ssl.SSLObject&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;ssl#ssl.SSLSocket&quot;&gt;&lt;code&gt;ssl.SSLSocket&lt;/code&gt;&lt;/a&gt; instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1dd70f636ba5a953ef9652213b0d021cb3f069" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'sslcontext'&lt;/code&gt;: &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9683724d5821e7d84e6feae26374c2a0e5a5d0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'store'&lt;/code&gt; - This just stores the argument&amp;rsquo;s value. This is the default action. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8887a60ad0d00053bc1e781218e9c65603c48a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'store_const'&lt;/code&gt; - This stores the value specified by the &lt;a href=&quot;#const&quot;&gt;const&lt;/a&gt; keyword argument. The &lt;code&gt;'store_const'&lt;/code&gt; action is most commonly used with optional arguments that specify some sort of flag. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2acd69b3853aecc9e0568eee9396170fb95910bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'store_true'&lt;/code&gt; and &lt;code&gt;'store_false'&lt;/code&gt; - These are special cases of &lt;code&gt;'store_const'&lt;/code&gt; used for storing the values &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt; respectively. In addition, they create default values of &lt;code&gt;False&lt;/code&gt; and &lt;code&gt;True&lt;/code&gt; respectively. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f1edf8eac4bdf234e7c11e24fb9b49bd47ad87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'strict'&lt;/code&gt; to raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; exception if there is an encoding error. The default value of &lt;code&gt;None&lt;/code&gt; has the same effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb61987b693445a6df8bf680359d6a9967eacbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'subprocess'&lt;/code&gt;: &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt;&lt;/a&gt; instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd36e921d2e629e61a196cca9b6df26df026af6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'surrogateescape'&lt;/code&gt; will represent any incorrect bytes as code points in the Unicode Private Use Area ranging from U+DC80 to U+DCFF. These private code points will then be turned back into the same bytes when the &lt;code&gt;surrogateescape&lt;/code&gt; error handler is used when writing data. This is useful for processing files in an unknown encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="673401bf699b177486abfdf88e771d847712f671" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'thread_time'&lt;/code&gt;: &lt;a href=&quot;#time.thread_time&quot;&gt;&lt;code&gt;time.thread_time()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4aeb2ae0456fce9f7946c410c5e2eb84dca23e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'time'&lt;/code&gt;: &lt;a href=&quot;#time.time&quot;&gt;&lt;code&gt;time.time()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10bc69ba4b82876326069e338caccc249a393c55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'u'&lt;/code&gt; will be removed together with the rest of the &lt;a href=&quot;https://docs.python.org/3.8/c-api/unicode.html#c.Py_UNICODE&quot;&gt;&lt;code&gt;Py_UNICODE&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5f82d9d8a6a37b201fee89fb0cda3032f97d7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'version'&lt;/code&gt; - This expects a &lt;code&gt;version=&lt;/code&gt; keyword argument in the &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; call, and prints version information and exits when invoked:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd63877e2643a1ba3bbaf0c9a4d5da319659d45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'x'&lt;/code&gt; or &lt;code&gt;'x:'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f98948a4e289a1d4fd974d404bf3231ff3f178" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'xmlcharrefreplace'&lt;/code&gt; is only supported when writing to a file. Characters not supported by the encoding are replaced with the appropriate XML character reference &lt;code&gt;&amp;amp;#nnn;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27598726a17a9a23c407ae74fe262f2592e1d070" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(?P=quote)&lt;/code&gt; (as shown)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a11f2a418edf76cd42230ae4483d415e5d0ff5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(flags &amp;amp; 0x03) == 0x00&lt;/code&gt;: &lt;em&gt;value&lt;/em&gt; is formatted as-is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53759a823e71d63b0c46b76d91c963fada6afc25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(flags &amp;amp; 0x03) == 0x01&lt;/code&gt;: call &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; on &lt;em&gt;value&lt;/em&gt; before formatting it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7899c7f4d6cd0cbadae1122f30aced1d585db08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(flags &amp;amp; 0x03) == 0x02&lt;/code&gt;: call &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; on &lt;em&gt;value&lt;/em&gt; before formatting it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ff8b1d321507b037e70091a7ac694ad4e29af9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(flags &amp;amp; 0x03) == 0x03&lt;/code&gt;: call &lt;a href=&quot;functions#ascii&quot;&gt;&lt;code&gt;ascii()&lt;/code&gt;&lt;/a&gt; on &lt;em&gt;value&lt;/em&gt; before formatting it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238bfb40a4369ea6c85dce39d9ebfb6fd9fd2fd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(flags &amp;amp; 0x04) == 0x04&lt;/code&gt;: pop &lt;em&gt;fmt_spec&lt;/em&gt; from the stack and use it, else use an empty &lt;em&gt;fmt_spec&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d4f988f5a0e3f9403d98fac850a0577504be46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--altinstall&lt;/code&gt;: if an alternate installation is requested, the &lt;code&gt;pipX&lt;/code&gt; script will &lt;em&gt;not&lt;/em&gt; be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b6c7ffa2d09dbbe538b5285ef09560a04c8df1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--default-pip&lt;/code&gt;: if a &amp;ldquo;default pip&amp;rdquo; installation is requested, the &lt;code&gt;pip&lt;/code&gt; script will be installed in addition to the two regular scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b568d37749b011e3d9a284c17e4c16c3e365d7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--root &amp;lt;dir&amp;gt;&lt;/code&gt;: Installs &lt;code&gt;pip&lt;/code&gt; relative to the given root directory rather than the root of the currently active virtual environment (if any) or the default root for the current Python installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227298702c24d7dc20e93d0ff02fc7518c7164a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--user&lt;/code&gt;: Installs &lt;code&gt;pip&lt;/code&gt; into the user site packages directory rather than globally for the current Python installation (this option is not permitted inside an active virtual environment).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9226dce0af56e2bcc9c63f58384a8621a4e4ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-m&lt;/code&gt; specifies that a module is being profiled instead of a script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86d4fa9208b566668873bf923c519e0b97366ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-o&lt;/code&gt; writes the profile results to a file instead of to stdout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd00da6433bba97d59f53562bc4d4d0f2bc0101" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-s&lt;/code&gt; specifies one of the &lt;a href=&quot;#pstats.Stats.sort_stats&quot;&gt;&lt;code&gt;sort_stats()&lt;/code&gt;&lt;/a&gt; sort values to sort the output by. This only applies when &lt;code&gt;-o&lt;/code&gt; is not supplied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12440d2881d6ac58abdd3f9361508fbe4729ffde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/dev/poll&lt;/code&gt; Polling Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbb0009eb49ffaac681560fb35cce1458e262bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/dev/poll&lt;/code&gt; behaviour is very close to the standard &lt;code&gt;poll()&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b5956caff09f9e96914a309854ffc8adc6547a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0 &amp;lt;= hour &amp;lt; 24&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e943899022b8726ce052c1a47772eb1d3fe1e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0 &amp;lt;= microsecond &amp;lt; 1000000&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa586f27a3667eb6f3f60a47c66b07e873d54d8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0 &amp;lt;= minute &amp;lt; 60&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d8291be8107d6cb9709f2eaf28067646431ba9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0 &amp;lt;= second &amp;lt; 60&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca8329c347b7e464d48bdb296e78839fed8b68d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0 &amp;lt;= seconds &amp;lt; 3600*24&lt;/code&gt; (the number of seconds in one day)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d726829f3f0bbfd9dbe4e2b98595fa7d9acca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; &amp;ndash; relative to the start of the file (&lt;a href=&quot;os#os.SEEK_SET&quot;&gt;&lt;code&gt;os.SEEK_SET&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca531b1fa645b911482471c596cd393c1661b24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; means unbuffered (read and write are one system call and can return short)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af14cc8438cb9dc120b4423e00b9f86dedb604f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt;: readable streaming transport of the standard input (&lt;em&gt;stdin&lt;/em&gt;), or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if the subprocess was not created with &lt;code&gt;stdin=PIPE&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95593851abe57b44ebabef5e19fae4e285a6846" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x01&lt;/code&gt; a tuple of default values for positional-only and positional-or-keyword parameters in positional order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec632c6ce88cc3e52871e6266d3cac9f7e03f1bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x02&lt;/code&gt; a dictionary of keyword-only parameters&amp;rsquo; default values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67f7d9bbee97966bb8a9fb2d2d6edf0304e4f86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x04&lt;/code&gt; an annotation dictionary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61edddeb3328a94fff8f21aeb1291e5fd7acfd4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0x08&lt;/code&gt; a tuple containing cells for free variables, making a closure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d8220e8e27d8a3b85f2af0a5d60ef235bed9fd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1 &amp;lt;= day &amp;lt;= number of days in the given month and year&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1898d26648bf8e53fc88ab1ff7977512cc5bac4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1 &amp;lt;= month &amp;lt;= 12&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4608457736ec3549ea2d9546b37272f132c562" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; &amp;ndash; relative to the current buffer position (&lt;a href=&quot;os#os.SEEK_CUR&quot;&gt;&lt;code&gt;os.SEEK_CUR&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794dc4eeaa6267317ec702b7d873140be2ae7e64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; means line buffered (only usable if &lt;code&gt;universal_newlines=True&lt;/code&gt; i.e., in a text mode)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2d3c290016c1f2a8059a53ffdd3c9a04c43d78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt;: writable streaming transport of the standard output (&lt;em&gt;stdout&lt;/em&gt;), or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if the subprocess was not created with &lt;code&gt;stdout=PIPE&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c4d7e47703ba540dbd05297cff18d288570e5ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&lt;/code&gt; &amp;ndash; relative to the end of the file (&lt;a href=&quot;os#os.SEEK_END&quot;&gt;&lt;code&gt;os.SEEK_END&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c4e684e442ea6b08ef1d7f529d93a3d63d7459" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&lt;/code&gt;: writable streaming transport of the standard error (&lt;em&gt;stderr&lt;/em&gt;), or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if the subprocess was not created with &lt;code&gt;stderr=PIPE&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9efd686c80e33f67b28b37ef19f48d2aca24436" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=foo.bar&lt;/code&gt;: Articles are filed in the &lt;code&gt;foo.bar&lt;/code&gt; group instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f828e94b979973b97a7c39e70d15e99c9344e21f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@singledispatchmethod&lt;/code&gt; supports nesting with other decorators such as &lt;code&gt;@classmethod&lt;/code&gt;. Note that to allow for &lt;code&gt;dispatcher.register&lt;/code&gt;, &lt;code&gt;singledispatchmethod&lt;/code&gt; must be the &lt;em&gt;outer most&lt;/em&gt; decorator. Here is the &lt;code&gt;Negator&lt;/code&gt; class with the &lt;code&gt;neg&lt;/code&gt; methods being class bound:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d43897b47ce330452e0d255d84f56b433025f64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AF_BLUETOOTH&lt;/code&gt; supports the following protocols and address formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198992cf5a80b83dd7a4a2d74b03db4262aae020" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AF_NETLINK&lt;/code&gt; sockets are represented as pairs &lt;code&gt;(pid, groups)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af01875ca3276d4b1397c4447440d5a94e5ee792" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AnyStr&lt;/code&gt; is a type variable defined as &lt;code&gt;AnyStr = TypeVar('AnyStr', str, bytes)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8aece7e559300fb1a3dba7bdf5660d7ccd1815e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Attr&lt;/code&gt; inherits from &lt;code&gt;Node&lt;/code&gt;, so inherits all its attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c44c93937707512379249b8934aefd83f98863" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Attributes&lt;/code&gt; objects implement a portion of the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-mapping&quot;&gt;mapping protocol&lt;/a&gt;, including the methods &lt;code&gt;copy()&lt;/code&gt;, &lt;code&gt;get()&lt;/code&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;items()&lt;/code&gt;, &lt;code&gt;keys()&lt;/code&gt;, and &lt;code&gt;values()&lt;/code&gt;. The following methods are also provided:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2311686b155d5b1ab8cf869b4ebb8b085621587" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A|B&lt;/code&gt;, where &lt;em&gt;A&lt;/em&gt; and &lt;em&gt;B&lt;/em&gt; can be arbitrary REs, creates a regular expression that will match either &lt;em&gt;A&lt;/em&gt; or &lt;em&gt;B&lt;/em&gt;. An arbitrary number of REs can be separated by the &lt;code&gt;'|'&lt;/code&gt; in this way. This can be used inside groups (see below) as well. As the target string is scanned, REs separated by &lt;code&gt;'|'&lt;/code&gt; are tried from left to right. When one pattern completely matches, that branch is accepted. This means that once &lt;em&gt;A&lt;/em&gt; matches, &lt;em&gt;B&lt;/em&gt; will not be tested further, even if it would produce a longer overall match. In other words, the &lt;code&gt;'|'&lt;/code&gt; operator is never greedy. To match a literal &lt;code&gt;'|'&lt;/code&gt;, use &lt;code&gt;\|&lt;/code&gt;, or enclose it inside a character class, as in &lt;code&gt;[|]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e4b7898db8a6999203d4e2a4ea05f5c96761a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BTPROTO_HCI&lt;/code&gt; accepts &lt;code&gt;(device_id,)&lt;/code&gt; where &lt;code&gt;device_id&lt;/code&gt; is either an integer or a string with the Bluetooth address of the interface. (This depends on your OS; NetBSD and DragonFlyBSD expect a Bluetooth address while everything else expects an integer.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab8ee92c44c6d069a309008b5920178ab3031f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BTPROTO_L2CAP&lt;/code&gt; accepts &lt;code&gt;(bdaddr, psm)&lt;/code&gt; where &lt;code&gt;bdaddr&lt;/code&gt; is the Bluetooth address as a string and &lt;code&gt;psm&lt;/code&gt; is an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ecb91b5a4638140c488a8eecfa58af0ec5f708d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BTPROTO_RFCOMM&lt;/code&gt; accepts &lt;code&gt;(bdaddr, channel)&lt;/code&gt; where &lt;code&gt;bdaddr&lt;/code&gt; is the Bluetooth address as a string and &lt;code&gt;channel&lt;/code&gt; is an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19bb83a6ff91ada559fc678d7596d6e7fe51fe3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BTPROTO_SCO&lt;/code&gt; accepts &lt;code&gt;bdaddr&lt;/code&gt; where &lt;code&gt;bdaddr&lt;/code&gt; is a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object containing the Bluetooth address in a string format. (ex. &lt;code&gt;b'12:23:34:45:56:67'&lt;/code&gt;) This protocol is not supported under FreeBSD.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc2eb7c0bf37977492e54986a2ad1737fd8896a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BaseHeader&lt;/code&gt; also provides the following method, which is called by the email library code and should not in general be called by application programs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b00ef5c2aa6bda410dd86d779713298a7c7e6691" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BaseHeader&lt;/code&gt; by itself cannot be used to create a header object. It defines a protocol that each specialized header cooperates with in order to produce the header object. Specifically, &lt;code&gt;BaseHeader&lt;/code&gt; requires that the specialized class provide a &lt;a href=&quot;functions#classmethod&quot;&gt;&lt;code&gt;classmethod()&lt;/code&gt;&lt;/a&gt; named &lt;code&gt;parse&lt;/code&gt;. This method is called as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e883a65a4adfb3e6abd26b4c0c1ce12f1cea39f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BaseHeader&lt;/code&gt;&amp;rsquo;s &lt;code&gt;__new__&lt;/code&gt; then creates the header instance, and calls its &lt;code&gt;init&lt;/code&gt; method. The specialized class only needs to provide an &lt;code&gt;init&lt;/code&gt; method if it wishes to set additional attributes beyond those provided by &lt;code&gt;BaseHeader&lt;/code&gt; itself. Such an &lt;code&gt;init&lt;/code&gt; method should look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aebd2c82b37cd89d8485c624a738bd5eb6f44ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BitmapImage&lt;/code&gt; for images in XBM format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63afd500c60744dec53a915842119dbc8cd55226" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BufferedProtocol&lt;/code&gt; implementations allow explicit manual allocation and control of the receive buffer. Event loops can then use the buffer provided by the protocol to avoid unnecessary data copies. This can result in noticeable performance improvement for protocols that receive big amounts of data. Sophisticated protocol implementations can significantly reduce the number of buffer allocations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1d6f90cee4e690ace4f897aa0c90b39f726de2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Built-in function&lt;/code&gt;&lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b1c85d6e081f27b6dcf53deee5f912049f25a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CHECK_CRC32&lt;/code&gt;: 32-bit Cyclic Redundancy Check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f859d3aba42f7e49dc1d9a1d7d3526c6903d91f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CHECK_CRC64&lt;/code&gt;: 64-bit Cyclic Redundancy Check. This is the default for &lt;code&gt;FORMAT_XZ&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22024fe818e766c4ef70037bc35f4b6be34a726c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CHECK_NONE&lt;/code&gt; and &lt;code&gt;CHECK_CRC32&lt;/code&gt; are always supported. &lt;code&gt;CHECK_CRC64&lt;/code&gt; and &lt;code&gt;CHECK_SHA256&lt;/code&gt; may be unavailable if you are using a version of &lt;strong&gt;liblzma&lt;/strong&gt; that was compiled with a limited feature set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b0d09b20eb2cc929c03ebf2dc38d0a562fae620" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CHECK_NONE&lt;/code&gt;: No integrity check. This is the default (and the only acceptable value) for &lt;code&gt;FORMAT_ALONE&lt;/code&gt; and &lt;code&gt;FORMAT_RAW&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daef6fe0699e43edb7ac41d91dbf1d205dad4c51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CHECK_SHA256&lt;/code&gt;: 256-bit Secure Hash Algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241db193b959ca40e3df350f8b91f2356299ccbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class&lt;/code&gt;&lt;a href=&quot;multiprocessing#multiprocessing.Queue&quot;&gt;&lt;code&gt;multiprocessing.Queue&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt;&lt;a href=&quot;multiprocessing#multiprocessing.Queue&quot;&gt;&lt;code&gt;multiprocessing.Queue&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a40b04dd6e66dba433a934a165b064eeeb30ea58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class&lt;/code&gt;&lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt;&lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34e77c0dbf59d988de373ba11ac9df9ac52d4d23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CloseBoundaryNotFoundDefect&lt;/code&gt; &amp;ndash; A start boundary was found, but no corresponding close boundary was ever found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413a9e55a7b8f9a3dbb777d055862c699afdd533" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Comment&lt;/code&gt; represents a comment in the XML document. It is a subclass of &lt;code&gt;Node&lt;/code&gt;, but cannot have child nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad9466a2fdc43a7aabb2607bfc284cd4ff50628" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Context()&lt;/code&gt; creates an empty context with no values in it. To get a copy of the current context use the &lt;a href=&quot;#contextvars.copy_context&quot;&gt;&lt;code&gt;copy_context()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb559a5c90a377c922c0abcff85fb6823f61df8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ContextDecorator&lt;/code&gt; is used by &lt;a href=&quot;#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextmanager()&lt;/code&gt;&lt;/a&gt;, so you get this functionality automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc4d271f27e3b8ebab6d0189f83400502e317d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ContextDecorator&lt;/code&gt; lets you instead write:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4574dfabe40d1ae8e0d35394d97955893a97392" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DEFAULTSECT&lt;/code&gt; cannot be removed from the parser:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1d8d689967131e8e688f0766260565659d8afb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DOMException&lt;/code&gt; is currently not supported in &lt;a href=&quot;#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt;. Instead, &lt;a href=&quot;#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt; uses standard Python exceptions such as &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9015607c2ff774ddd087c7cfcedc1c380ac7e24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentType&lt;/code&gt; is a specialization of &lt;code&gt;Node&lt;/code&gt;, and adds the following attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6879c3d5a876f3c19a11352d9d87412a27b5470" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Element&lt;/code&gt; is a subclass of &lt;code&gt;Node&lt;/code&gt;, so inherits all the attributes of that class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf1f870ab774f5431966cc0f6cebc3cd4f858fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Enum&lt;/code&gt; classes with methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1403fca6d621d15c249081283fd5db4dc11816f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Enum&lt;/code&gt; member type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3aff4818663630b50aeec9ae84230bc23bfa4ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_LZMA1&lt;/code&gt; (for use with &lt;code&gt;FORMAT_ALONE&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="676df170faa309ed6e33ac496b83ef45e2bce988" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_LZMA2&lt;/code&gt; (for use with &lt;code&gt;FORMAT_XZ&lt;/code&gt; and &lt;code&gt;FORMAT_RAW&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6cebaf9a6067c628f65cf7c1e1d452a59e3ba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;False&lt;/code&gt; if an item of &lt;em&gt;s&lt;/em&gt; is equal to &lt;em&gt;x&lt;/em&gt;, else &lt;code&gt;True&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1daa586f72aef07a105cb4c4a0620082a281377" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;False&lt;/code&gt; if the &lt;a href=&quot;#bz2.BZ2Decompressor.decompress&quot;&gt;&lt;code&gt;decompress()&lt;/code&gt;&lt;/a&gt; method can provide more decompressed data before requiring new uncompressed input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d137d74dbe224c6f73f9c6c38c9b862aeedfda1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;False&lt;/code&gt; if the &lt;a href=&quot;#lzma.LZMADecompressor.decompress&quot;&gt;&lt;code&gt;decompress()&lt;/code&gt;&lt;/a&gt; method can provide more decompressed data before requiring new uncompressed input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4b1c0a6b02bb351219f13522e8abdbd1650690" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;False&lt;/code&gt; is also returned if the path doesn&amp;rsquo;t exist or is a broken symlink; other errors (such as permission errors) are propagated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8820a85da1f880d99fe92a81421a3ba523da9b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;False&lt;/code&gt; is also returned if the path doesn&amp;rsquo;t exist; other errors (such as permission errors) are propagated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbcc76b05547caa8dd4081c9579c17f2d0e2c583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FieldStorage&lt;/code&gt; objects also support being used in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, which will automatically close them when done.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddcbd75862651631c85be60963b3e9f47e85d3f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Filter(False, &quot;&amp;lt;unknown&amp;gt;&quot;)&lt;/code&gt; excludes empty tracebacks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7081dee2301d32f4409555afef61919ce3653e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Filter(False, tracemalloc.__file__)&lt;/code&gt; excludes traces of the &lt;a href=&quot;#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3204d728578d3ea979404e19ebdb4329346f1b75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Filter(True, subprocess.__file__)&lt;/code&gt; only includes traces of the &lt;a href=&quot;subprocess#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6af8b6ca8689d078e0804edd80862633bd1784d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Filters&lt;/code&gt; can be used by &lt;code&gt;Handlers&lt;/code&gt; and &lt;code&gt;Loggers&lt;/code&gt; for more sophisticated filtering than is provided by levels. The base filter class only allows events which are below a certain point in the logger hierarchy. For example, a filter initialized with &amp;lsquo;A.B&amp;rsquo; will allow events logged by loggers &amp;lsquo;A.B&amp;rsquo;, &amp;lsquo;A.B.C&amp;rsquo;, &amp;lsquo;A.B.C.D&amp;rsquo;, &amp;lsquo;A.B.D&amp;rsquo; etc. but not &amp;lsquo;A.BB&amp;rsquo;, &amp;lsquo;B.A.B&amp;rsquo; etc. If initialized with the empty string, all events are passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2127f407505c7f8cd158ddfb63abdf0912c342c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FirstHeaderLineIsContinuationDefect&lt;/code&gt; &amp;ndash; The message had a continuation line as its first header line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d86bb2ee77146830a9c1b67bca0060df5e7502c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Generic[T]&lt;/code&gt; as a base class defines that the class &lt;code&gt;LoggedVar&lt;/code&gt; takes a single type parameter &lt;code&gt;T&lt;/code&gt; . This also makes &lt;code&gt;T&lt;/code&gt; valid as a type within the class body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0014957e6e6dec3a258f998c1fc1fd1d3f8b865" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HH:MM:SS+HH:MM[:SS[.ffffff]]&lt;/code&gt;, if &lt;a href=&quot;#datetime.time.microsecond&quot;&gt;&lt;code&gt;microsecond&lt;/code&gt;&lt;/a&gt; is 0 and &lt;a href=&quot;#datetime.time.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; does not return &lt;code&gt;None&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccdbf80b2d8ff19edf4c80b850b55ca7c48397e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HH:MM:SS.ffffff+HH:MM[:SS[.ffffff]]&lt;/code&gt;, if &lt;a href=&quot;#datetime.time.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; does not return &lt;code&gt;None&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4b8a03b44a56cec7af348bf87320b06cf77bb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HH:MM:SS.ffffff&lt;/code&gt;, if &lt;a href=&quot;#datetime.time.microsecond&quot;&gt;&lt;code&gt;microsecond&lt;/code&gt;&lt;/a&gt; is not 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd6e44986f07a11cb09a9f522e59d4f8a9b49a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HH:MM:SS&lt;/code&gt;, if &lt;a href=&quot;#datetime.time.microsecond&quot;&gt;&lt;code&gt;microsecond&lt;/code&gt;&lt;/a&gt; is 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228a5960f728abc99721887a90aa2baf452f0fe5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTMLCalendar&lt;/code&gt; has the following attributes you can override to customize the CSS classes used by the calendar:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522c1fb8fc0d82f1328091e50b992f505ad44a99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTMLCalendar&lt;/code&gt; instances have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4d399666acf5bd4c034a5183ffefd43d1a70f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTTP_PROXY&lt;/code&gt; will be ignored if a variable &lt;code&gt;REQUEST_METHOD&lt;/code&gt; is set; see the documentation on &lt;a href=&quot;#urllib.request.getproxies&quot;&gt;&lt;code&gt;getproxies()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50804600b6c9c4f8ac2bddd79ba7e6d155bc9eb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HeaderRegistry&lt;/code&gt; has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3d27acbe7b44b4bfaed8077089d427dfc20d63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InvalidBase64CharactersDefect&lt;/code&gt; &amp;ndash; When decoding a block of base64 encoded bytes, characters outside the base64 alphabet were encountered. The characters are ignored, but the resulting decoded bytes may be invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313f4b7c0f892c4bdc419efa130bf4e83d9bd03b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InvalidBase64LengthDefect&lt;/code&gt; &amp;ndash; When decoding a block of base64 encoded bytes, the number of non-padding base64 characters was invalid (1 more than a multiple of 4). The encoded block was kept as-is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275ab03520ba5867fc213142d04e7e3af7a8c840" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InvalidBase64PaddingDefect&lt;/code&gt; &amp;ndash; When decoding a block of base64 encoded bytes, the padding was not correct. Enough padding is added to perform the decode, but the resulting decoded bytes may be invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4329b1a764892e2d06e50fd6434aa61cf4e46cea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KQ_FILTER_NETDEV&lt;/code&gt; filter flags (not available on Mac OS X):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b091cb33c56617cd57e122b0f11316b83f76ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KQ_FILTER_PROC&lt;/code&gt; filter flags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b2c2601cc9bafa890b3cd81df6f66aa78ba38d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KQ_FILTER_READ&lt;/code&gt; and &lt;code&gt;KQ_FILTER_WRITE&lt;/code&gt; filter flags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae0a9120bd0d0ef2d879471708049c95fb85c20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KQ_FILTER_VNODE&lt;/code&gt; filter flags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a69c167edbc2a1dc61d99c28d266cea41f0907" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCK_EX&lt;/code&gt; &amp;ndash; acquire an exclusive lock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a580c51f2d6d57f05ce3b8c8ec6184a56c3769f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCK_SH&lt;/code&gt; &amp;ndash; acquire a shared lock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dfc08c7488a3dbe51defff1f9a20d56a2a3d90a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCK_UN&lt;/code&gt; &amp;ndash; unlock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a99ef93488d3878d0d4df0daa292fc2572ca636b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_EMERG&lt;/code&gt;, &lt;code&gt;LOG_ALERT&lt;/code&gt;, &lt;code&gt;LOG_CRIT&lt;/code&gt;, &lt;code&gt;LOG_ERR&lt;/code&gt;, &lt;code&gt;LOG_WARNING&lt;/code&gt;, &lt;code&gt;LOG_NOTICE&lt;/code&gt;, &lt;code&gt;LOG_INFO&lt;/code&gt;, &lt;code&gt;LOG_DEBUG&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a21ec660ccf1622bb6c3b4a5ee1be82bd68b3c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_KERN&lt;/code&gt;, &lt;code&gt;LOG_USER&lt;/code&gt;, &lt;code&gt;LOG_MAIL&lt;/code&gt;, &lt;code&gt;LOG_DAEMON&lt;/code&gt;, &lt;code&gt;LOG_AUTH&lt;/code&gt;, &lt;code&gt;LOG_LPR&lt;/code&gt;, &lt;code&gt;LOG_NEWS&lt;/code&gt;, &lt;code&gt;LOG_UUCP&lt;/code&gt;, &lt;code&gt;LOG_CRON&lt;/code&gt;, &lt;code&gt;LOG_SYSLOG&lt;/code&gt;, &lt;code&gt;LOG_LOCAL0&lt;/code&gt; to &lt;code&gt;LOG_LOCAL7&lt;/code&gt;, and, if defined in &lt;code&gt;&amp;lt;syslog.h&amp;gt;&lt;/code&gt;, &lt;code&gt;LOG_AUTHPRIV&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b41b8e33d814b43f37e66181a4956074e9df71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_PID&lt;/code&gt;, &lt;code&gt;LOG_CONS&lt;/code&gt;, &lt;code&gt;LOG_NDELAY&lt;/code&gt;, and, if defined in &lt;code&gt;&amp;lt;syslog.h&amp;gt;&lt;/code&gt;, &lt;code&gt;LOG_ODELAY&lt;/code&gt;, &lt;code&gt;LOG_NOWAIT&lt;/code&gt;, and &lt;code&gt;LOG_PERROR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb1a2f104e3d8a66e71684121acfa0b4dcfadaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Literal[...]&lt;/code&gt; cannot be subclassed. At runtime, an arbitrary value is allowed as type argument to &lt;code&gt;Literal[...]&lt;/code&gt;, but type checkers may impose restrictions. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0586&quot; id=&quot;index-21&quot;&gt;&lt;strong&gt;PEP 586&lt;/strong&gt;&lt;/a&gt; for more details about literal types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84206a6b2e04974df4452bffe4d7a7a8af6a3179" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINYEAR &amp;lt;= year &amp;lt;= MAXYEAR&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a4db1b0cb0464de8ef883bd432da6cf27f9b4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MagicMock&lt;/code&gt; has all of the supported magic methods configured except for some of the obscure and obsolete ones. You can still set these up if you want.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d47764681a3b37e85d87105ae50383989f031ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MagicMock&lt;/code&gt; is a subclass of &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; with default implementations of most of the magic methods. You can use &lt;code&gt;MagicMock&lt;/code&gt; without having to configure the magic methods yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bee06bdb416ee659e8cba9becf58431af6b81cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MalformedHeaderDefect&lt;/code&gt; &amp;ndash; A header was found that was missing a colon, or was otherwise malformed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07dca505478b98055186d2ddd46c279a4e011326" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MisplacedEnvelopeHeaderDefect&lt;/code&gt; - A &amp;ldquo;Unix From&amp;rdquo; header was found in the middle of a header block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012704a6ec2c1ce6c49b8c880fca8aa0e59e3e29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MissingHeaderBodySeparatorDefect&lt;/code&gt; - A line was found while parsing headers that had no leading white space but contained no &amp;lsquo;:&amp;rsquo;. Parsing continues assuming that the line represents the first line of the body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d491aaed8a338d1e4ae831c6f334e09edc181e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;#module-curses.textpad&quot;&gt;&lt;code&gt;curses.textpad&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;#module-curses.textpad&quot;&gt;&lt;code&gt;curses.textpad&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="03dc17fa88242790d0d7c5b9f707bab81550693a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;argparse#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;argparse#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd0f66229b0efea5b566c67d48e019c58a20a95f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;array#module-array&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;array#module-array&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0111a08ca228b6a60c38172c56244aa7c49a98b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;base64#module-base64&quot;&gt;&lt;code&gt;base64&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;base64#module-base64&quot;&gt;&lt;code&gt;base64&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a24079cd1a3fa7a80fe060003d61fd12accec50a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;binascii#module-binascii&quot;&gt;&lt;code&gt;binascii&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;binascii#module-binascii&quot;&gt;&lt;code&gt;binascii&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d12ff29eafa50fa0cca748464b1b344d1423109" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;binhex#module-binhex&quot;&gt;&lt;code&gt;binhex&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;binhex#module-binhex&quot;&gt;&lt;code&gt;binhex&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df665357d3a68e95b80c8c56309d7ead1a068139" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;calendar#module-calendar&quot;&gt;&lt;code&gt;calendar&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;calendar#module-calendar&quot;&gt;&lt;code&gt;calendar&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5721fe8e3254f2a08afba845e4f6ca58cacf8fb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;cmath#module-cmath&quot;&gt;&lt;code&gt;cmath&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;cmath#module-cmath&quot;&gt;&lt;code&gt;cmath&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff747402ed8b81346eb4108c8e23120ab5e027d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;compileall#module-compileall&quot;&gt;&lt;code&gt;compileall&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;compileall#module-compileall&quot;&gt;&lt;code&gt;compileall&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df926356580905e53f0293560089d2e6bf26fafd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;configparser#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;configparser#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3a348516bd811005954aeae5a8f48728d63c406" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;copy#module-copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;copy#module-copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8dff6062f46c3f831a8da06a26aa2f7da545f3f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;copyreg#module-copyreg&quot;&gt;&lt;code&gt;copyreg&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;copyreg#module-copyreg&quot;&gt;&lt;code&gt;copyreg&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05ea3661d414865017ce86c522a98b38d59e21de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;curses.ascii#module-curses.ascii&quot;&gt;&lt;code&gt;curses.ascii&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;curses.ascii#module-curses.ascii&quot;&gt;&lt;code&gt;curses.ascii&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0d468c52d69926d62307c15f0054c7ca64eb01d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;curses.panel#module-curses.panel&quot;&gt;&lt;code&gt;curses.panel&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;curses.panel#module-curses.panel&quot;&gt;&lt;code&gt;curses.panel&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b84a198fe16c6351b7363ec3b0892a0447eb870" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;datetime#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;datetime#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c499d968c3a0255ce3288e9462ed1317a2f8179" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;dbm#module-dbm&quot;&gt;&lt;code&gt;dbm&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;dbm#module-dbm&quot;&gt;&lt;code&gt;dbm&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2dc3623dbd355a98e8d949db0e7dc2b8376b485" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;doctest#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;doctest#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f278b3574afba01210a795edb77f1da6d29d4331" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc6e7edc6e9fd366ae9e83a728d201f26c352fbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;fnmatch#module-fnmatch&quot;&gt;&lt;code&gt;fnmatch&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;fnmatch#module-fnmatch&quot;&gt;&lt;code&gt;fnmatch&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ddf7ef7d02310d9178919fdb92028aaeec34d5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;glob#module-glob&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;glob#module-glob&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2662076c4c2db38a4a92ce774c96bbee165c3845" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;grp#module-grp&quot;&gt;&lt;code&gt;grp&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;grp#module-grp&quot;&gt;&lt;code&gt;grp&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d965701b82e4539cfdd5a77589edabac7ccfbbc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;gzip#module-gzip&quot;&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;gzip#module-gzip&quot;&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec354f9f6ce78bd292c38a6adb1bd1abea0aba13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;hashlib#module-hashlib&quot;&gt;&lt;code&gt;hashlib&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;hashlib#module-hashlib&quot;&gt;&lt;code&gt;hashlib&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fbd5f74703b3d6c1eae26c6168e7ae194068b693" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;hmac#module-hmac&quot;&gt;&lt;code&gt;hmac&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;hmac#module-hmac&quot;&gt;&lt;code&gt;hmac&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4772643072c8d55d655cadffbe975836e40c8fb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;http.cookiejar#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;http.cookiejar#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0e2359af31a1001e213100ca7e7e5ff6f27c42f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;http.cookies#module-http.cookies&quot;&gt;&lt;code&gt;http.cookies&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;http.cookies#module-http.cookies&quot;&gt;&lt;code&gt;http.cookies&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c160138ed02c2ff68d7a148fe1467eee4552581" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;imaplib#module-imaplib&quot;&gt;&lt;code&gt;imaplib&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;imaplib#module-imaplib&quot;&gt;&lt;code&gt;imaplib&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78a56cfc957763671f91d7f918cfb1912dbb2cb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;io#module-io&quot;&gt;&lt;code&gt;io&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;io#module-io&quot;&gt;&lt;code&gt;io&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="70b7822fe520d54c2af43b0ecabbc42922d3577a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;json#module-json&quot;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;json#module-json&quot;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3da792ffac963b6e8e0c64f0fe7fa55a6a5d2a1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;locale#module-locale&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;locale#module-locale&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a69099eb485b48072e7dd4e1c7fa2584d7a46e56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;logging#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;logging#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ae9a4b0614a079b95b6e53b4431411977b7fc23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;logging.config#module-logging.config&quot;&gt;&lt;code&gt;logging.config&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;logging.config#module-logging.config&quot;&gt;&lt;code&gt;logging.config&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6c8cdbdccf7cb1ae55868aa2063e055897ec5e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;logging.handlers#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;logging.handlers#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aadb382a73705bfc20b30c0ec8afe56b0d140cf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;mailbox#module-mailbox&quot;&gt;&lt;code&gt;mailbox&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;mailbox#module-mailbox&quot;&gt;&lt;code&gt;mailbox&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f3969795b7d54b0ce7033c6ea6c9abfdf95ee66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f08b04f235b2397084d5e6be7f5a48ce88c8f5c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;netrc#module-netrc&quot;&gt;&lt;code&gt;netrc&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;netrc#module-netrc&quot;&gt;&lt;code&gt;netrc&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb2e426bd77fbe45d267c227298a515c724473c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;nntplib#module-nntplib&quot;&gt;&lt;code&gt;nntplib&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;nntplib#module-nntplib&quot;&gt;&lt;code&gt;nntplib&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="117989504cf1bd4ddae4d71bc0db4fcf71340f88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;numbers#module-numbers&quot;&gt;&lt;code&gt;numbers&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;numbers#module-numbers&quot;&gt;&lt;code&gt;numbers&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ccd0d46cc9db9721c678d98b82d84498416e9ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4578090f008cae0fa99f4eb9b688e30e35d47d78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c1f80becbfcefb91ee2db6f5e2cc9b13f6414f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;pickletools#module-pickletools&quot;&gt;&lt;code&gt;pickletools&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;pickletools#module-pickletools&quot;&gt;&lt;code&gt;pickletools&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ac6acd28c1980f05dcf52b7e131322fc3f9be6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;poplib#module-poplib&quot;&gt;&lt;code&gt;poplib&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;poplib#module-poplib&quot;&gt;&lt;code&gt;poplib&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2e390161680603e9f1f14f00824a9f131273766" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;pwd#module-pwd&quot;&gt;&lt;code&gt;pwd&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;pwd#module-pwd&quot;&gt;&lt;code&gt;pwd&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7267fa2ad071db33d4117f05c9bda52b55c1b1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;py_compile#module-py_compile&quot;&gt;&lt;code&gt;py_compile&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;py_compile#module-py_compile&quot;&gt;&lt;code&gt;py_compile&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5d330f5b2dbcdb870b66f6e69fe1cd54490f404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;quopri#module-quopri&quot;&gt;&lt;code&gt;quopri&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;quopri#module-quopri&quot;&gt;&lt;code&gt;quopri&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3e6bf3b1e4ce0feb9a28d79a66163d7e2d6e985" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3aac17e6df56a0583662f8d6375bf58dbde62140" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;shelve#module-shelve&quot;&gt;&lt;code&gt;shelve&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;shelve#module-shelve&quot;&gt;&lt;code&gt;shelve&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="170e1a3d20fce6e9d05fcdb2cd7da0365d015058" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;shlex#module-shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;shlex#module-shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f4eb6cea86af3b63f6381eec599df1987342597" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;smtpd#module-smtpd&quot;&gt;&lt;code&gt;smtpd&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;smtpd#module-smtpd&quot;&gt;&lt;code&gt;smtpd&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84ae2f8dfd10e8d267e50ccb69ddd612a7f08179" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;smtplib#module-smtplib&quot;&gt;&lt;code&gt;smtplib&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;smtplib#module-smtplib&quot;&gt;&lt;code&gt;smtplib&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b20caf2b8bc6bb6f3c1d0c796621f88bea00d9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;socketserver#module-socketserver&quot;&gt;&lt;code&gt;socketserver&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;socketserver#module-socketserver&quot;&gt;&lt;code&gt;socketserver&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2440e9b4b3b06f7219d5158f9604ec9a3a082ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;spwd#module-spwd&quot;&gt;&lt;code&gt;spwd&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;spwd#module-spwd&quot;&gt;&lt;code&gt;spwd&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="58ea215bfd577b71b7bedb491c4e84376b1bfdd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;ssl#module-ssl&quot;&gt;&lt;code&gt;ssl&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;ssl#module-ssl&quot;&gt;&lt;code&gt;ssl&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65874aaf7295a78108ac775af29abf9577259785" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5615e6136f69e0d91c55b29f5b52eed7a547d55e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;symbol#module-symbol&quot;&gt;&lt;code&gt;symbol&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;symbol#module-symbol&quot;&gt;&lt;code&gt;symbol&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d76f6276308b08972b04e522009ec5fdd90d5d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;termios#module-termios&quot;&gt;&lt;code&gt;termios&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;termios#module-termios&quot;&gt;&lt;code&gt;termios&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47048c918113f50e496530160375a97f7a91ecab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;time#module-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;time#module-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a68cff0871de0600fe68d2c39d485581a0bcc84b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;token#module-token&quot;&gt;&lt;code&gt;token&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;token#module-token&quot;&gt;&lt;code&gt;token&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65ffd3850ff69959a545f0f87e0ed518835dcc74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;tokenize#module-tokenize&quot;&gt;&lt;code&gt;tokenize&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;tokenize#module-tokenize&quot;&gt;&lt;code&gt;tokenize&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f81dc0f5e9cb1066874dbde55dce4e9cae2f5d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;tty#module-tty&quot;&gt;&lt;code&gt;tty&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;tty#module-tty&quot;&gt;&lt;code&gt;tty&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ced029f03cb60a82c164d7da7a1ab4c1e776b896" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de02da4575c27f782b79375518043127ecd3aeb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bcd10a38fdfa6d7be221cb399d413292dc76983" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;uu#module-uu&quot;&gt;&lt;code&gt;uu&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;uu#module-uu&quot;&gt;&lt;code&gt;uu&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4593b5d2c4f90b9fe169ed5888606d236bb3b722" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;xdrlib#module-xdrlib&quot;&gt;&lt;code&gt;xdrlib&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;xdrlib#module-xdrlib&quot;&gt;&lt;code&gt;xdrlib&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9751171f88f1e5b7d249e560b1851b9daf81217b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;xml.sax.handler#module-xml.sax.handler&quot;&gt;&lt;code&gt;xml.sax.handler&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;xml.sax.handler#module-xml.sax.handler&quot;&gt;&lt;code&gt;xml.sax.handler&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7b7f24b236ceae1f5bb4ccbe0c8b27b8cdb81ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;xml.sax.reader#module-xml.sax.xmlreader&quot;&gt;&lt;code&gt;xml.sax.xmlreader&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;xml.sax.reader#module-xml.sax.xmlreader&quot;&gt;&lt;code&gt;xml.sax.xmlreader&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36fb7c9fd6dd7da2f9a47e526fd2632cee2923e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;xml.sax.utils#module-xml.sax.saxutils&quot;&gt;&lt;code&gt;xml.sax.saxutils&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;xml.sax.utils#module-xml.sax.saxutils&quot;&gt;&lt;code&gt;xml.sax.saxutils&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e08c20c27c2ebbca577231c859350d825a1a0e3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;zipfile#module-zipfile&quot;&gt;&lt;code&gt;zipfile&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;zipfile#module-zipfile&quot;&gt;&lt;code&gt;zipfile&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64604eeccf9214010e285e436fee5b03df0a7406" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;zlib#module-zlib&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;zlib#module-zlib&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46cb1f9fa66b701cbd7b7a00047bc35466ce30b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MultipartInvariantViolationDefect&lt;/code&gt; &amp;ndash; A message claimed to be a &lt;em&gt;multipart&lt;/em&gt;, but no subparts were found. Note that when a message has this defect, its &lt;a href=&quot;email.compat32-message#email.message.Message.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; method may return &lt;code&gt;False&lt;/code&gt; even though its content type claims to be &lt;em&gt;multipart&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee841b85c5ecfa04e30d63e79429c73d74badf06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N&lt;/code&gt; (an integer). &lt;code&gt;N&lt;/code&gt; arguments from the command line will be gathered together into a list. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e877428c082b566d7276caa7185605e6fbc43e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NamedNodeMap&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; inherit from &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6261f07d0bf4297f521e8b4d831649c9edf9ca56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NamedTuple&lt;/code&gt; subclasses can also have docstrings and methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8523f6d9b06f62959dea96172ab6b58cffa36aed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NoBoundaryInMultipartDefect&lt;/code&gt; &amp;ndash; A message claimed to be a multipart, but had no &lt;em&gt;boundary&lt;/em&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5089821c6f095df8f6d0a0bf4cfb945098bac582" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NodeList&lt;/code&gt; objects are implemented using Python&amp;rsquo;s built-in list type. These objects provide the interface defined in the DOM specification, but with earlier versions of Python they do not support the official API. They are, however, much more &amp;ldquo;Pythonic&amp;rdquo; than the interface defined in the W3C recommendations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="678467b47e50bbe058a7bb725859a8d80de20b83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; (a compound shape has to be constructed using the &lt;a href=&quot;#turtle.Shape.addcomponent&quot;&gt;&lt;code&gt;addcomponent()&lt;/code&gt;&lt;/a&gt; method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfc35590c7f924a62879d024d3f14c2fe637bdef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; if this information is unknown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d837c401b39f670ae79ea11998538e3c05364f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; is returned to indicate success. An exception is raised when the call failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b93241e7879960f38d250b2396089425c777966" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt;, &lt;code&gt;True&lt;/code&gt;, and &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44aad10253a4203088a0d9bdceb44b3a30a5e18d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt;, integers, bytes objects and (unicode) strings are the only native Python objects that can directly be used as parameters in these function calls. &lt;code&gt;None&lt;/code&gt; is passed as a C &lt;code&gt;NULL&lt;/code&gt; pointer, bytes objects and strings are passed as pointer to the memory block that contains their data (&lt;code&gt;char *&lt;/code&gt; or &lt;code&gt;wchar_t *&lt;/code&gt;). Python integers are passed as the platforms default C &lt;code&gt;int&lt;/code&gt; type, their value is masked to fit into the C type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726b691dd6a3ba578bf890b6b5dd5eb804696681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NotImplementedError&lt;/code&gt; and &lt;code&gt;NotImplemented&lt;/code&gt; are not interchangeable, even though they have similar names and purposes. See &lt;a href=&quot;constants#NotImplemented&quot;&gt;&lt;code&gt;NotImplemented&lt;/code&gt;&lt;/a&gt; for details on when to use it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d827694637bae1dc98fe721d2de20e38ad221ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NotImplementedError&lt;/code&gt; and &lt;code&gt;NotImplemented&lt;/code&gt; are not interchangeable, even though they have similar names and purposes. See &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; for details on when to use it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d11a2917928765fc33e1320570cb7e6653e84d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Optional[X]&lt;/code&gt; is equivalent to &lt;code&gt;Union[X, None]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b2ce5bd075752edce7cb6267e10afd100991d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PACKET_BROADCAST&lt;/code&gt; - Physical-layer broadcast packet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8589ee04639c6140011c54a64e23d2b823eba769" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PACKET_HOST&lt;/code&gt; (the default) - Packet addressed to the local host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3dd57664b403979e3e8fae7e396d0815e23703" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PACKET_MULTIHOST&lt;/code&gt; - Packet sent to a physical-layer multicast address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="776b6129516f77e4d01a218633d6df00f0bf307b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PACKET_OTHERHOST&lt;/code&gt; - Packet to some other host that has been caught by a device driver in promiscuous mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec06c21d68911b200b53511fc38d05fbc524be93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PACKET_OUTGOING&lt;/code&gt; - Packet originating from the local host that is looped back to a packet socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228d9ccca958f850c994a93311f2a9914f88e381" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PhotoImage&lt;/code&gt; for images in PGM, PPM, GIF and PNG formats. The latter is supported starting with Tk 8.6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2483c79c3692775eb1cf87101aee4fae11b9b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Request&lt;/code&gt; objects are not callable, so the return value of instantiating our mocked out &lt;code&gt;request.Request&lt;/code&gt; is a non-callable mock. With the spec in place any typos in our asserts will raise the correct error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dafa4fb0961d6008a123d1abcbf09ca262ee86db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEEK_CUR&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; &amp;ndash; current stream position; &lt;em&gt;offset&lt;/em&gt; may be negative</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b2b6a5409494fae402e1ea064036734789ecc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEEK_CUR&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;: &amp;ldquo;seek&amp;rdquo; to the current position; &lt;em&gt;offset&lt;/em&gt; must be zero, which is a no-operation (all other values are unsupported).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224bc629310fd4e526394d0688c609e0b07c505d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEEK_END&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt; &amp;ndash; end of the stream; &lt;em&gt;offset&lt;/em&gt; is usually negative</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f968a610688da614fdbfce8670aba65a2f933f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEEK_END&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt;: seek to the end of the stream; &lt;em&gt;offset&lt;/em&gt; must be zero (all other values are unsupported).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3be8655900e5b79b9bcfb826f472c70933ab8e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEEK_SET&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; &amp;ndash; start of the stream (the default); &lt;em&gt;offset&lt;/em&gt; should be zero or positive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c526dc57d11b18aaf46af39f4c9cb078ce072f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEEK_SET&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;: seek from the start of the stream (the default); &lt;em&gt;offset&lt;/em&gt; must either be a number returned by &lt;a href=&quot;#io.TextIOBase.tell&quot;&gt;&lt;code&gt;TextIOBase.tell()&lt;/code&gt;&lt;/a&gt;, or zero. Any other &lt;em&gt;offset&lt;/em&gt; value produces undefined behaviour.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7834f8eccd042627eb164556a948438f7b56d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SMTPUTF8&lt;/code&gt; was given in the &lt;em&gt;mail_options&lt;/em&gt; but is not supported by the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfb3838ee142ac2172444b4140bd653f237dd29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Server&lt;/code&gt; additionally has an &lt;a href=&quot;#multiprocessing.managers.BaseManager.address&quot;&gt;&lt;code&gt;address&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1a72607e6305a41ba14948b9fcebf1c805888f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Server&lt;/code&gt; is retained as an alias for &lt;a href=&quot;#xmlrpc.client.ServerProxy&quot;&gt;&lt;code&gt;ServerProxy&lt;/code&gt;&lt;/a&gt; for backwards compatibility. New code should use &lt;a href=&quot;#xmlrpc.client.ServerProxy&quot;&gt;&lt;code&gt;ServerProxy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59cf3772f9d26e2913a32bc586a13a6da6390eb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleNamespace&lt;/code&gt; may be useful as a replacement for &lt;code&gt;class NS: pass&lt;/code&gt;. However, for a structured record type use &lt;a href=&quot;collections#collections.namedtuple&quot;&gt;&lt;code&gt;namedtuple()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c5db67e8462033f2e1776b1b1d386598adc560" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StartBoundaryNotFoundDefect&lt;/code&gt; &amp;ndash; The start boundary claimed in the &lt;em&gt;Content-Type&lt;/em&gt; header was never found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331c7ed9922a0c62619e6e5eb06a2331b718ff76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StartElementHandler&lt;/code&gt; will receive the following strings for each element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105fab404c5b06739ff5dc12b1b3c70befa8ffd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Text&lt;/code&gt; is an alias for &lt;code&gt;str&lt;/code&gt;. It is provided to supply a forward compatible path for Python 2 code: in Python 2, &lt;code&gt;Text&lt;/code&gt; is an alias for &lt;code&gt;unicode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697501498495624c355c008305361dc09c86d0fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tools/scripts/diff.py&lt;/code&gt; is a command-line front-end to this class and contains a good example of its use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065f2a3263c882472116173b1101a084dbf40717" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tools/scripts/ndiff.py&lt;/code&gt; is a command-line front-end to this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87b8a5735f626bb15a7737826ce34325fe1e1a2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if a domain was explicitly specified by the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d383673736ac4428e8b421cc3cf26d863e6fb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if a port or set of ports was explicitly specified by the server (in the &lt;em&gt;Set-Cookie&lt;/em&gt; / &lt;em&gt;Set-Cookie2&lt;/em&gt; header).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bdb437a6648e8cb306ce86ad2fc69be137fbb85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if an item of &lt;em&gt;s&lt;/em&gt; is equal to &lt;em&gt;x&lt;/em&gt;, else &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01fe00235cf4e4527a9ca0548865482259dae1a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if arbitrary Unicode strings can be used as file names (within limitations imposed by the file system).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10296320d6a296e2c2a5e70214a55e54dd2e2f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if cookie has passed the time at which the server requested it should expire. If &lt;em&gt;now&lt;/em&gt; is given (in seconds since the epoch), return whether the cookie has expired at the specified time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3715f1ab7c99907fd36f5e389527fefc8edf6e9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if cookie should only be returned over a secure connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="089703c3b70669d0937760dec1bedfb1e3715e74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if other code jumps to here, otherwise &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52cf2c30a611b33898f2ea26c365e2761d4da34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the &lt;a href=&quot;#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module is tracing Python memory allocations, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73eddc4810a51631fa2d60c12260422a76b74300" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the address is allocated for private networks. See &lt;a href=&quot;https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml&quot;&gt;iana-ipv4-special-registry&lt;/a&gt; (for IPv4) or &lt;a href=&quot;https://www.iana.org/assignments/iana-ipv6-special-registry/iana-ipv6-special-registry.xhtml&quot;&gt;iana-ipv6-special-registry&lt;/a&gt; (for IPv6).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3360c1cd0f068be5265c184d1b1a8db80445782e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the address is allocated for public networks. See &lt;a href=&quot;https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml&quot;&gt;iana-ipv4-special-registry&lt;/a&gt; (for IPv4) or &lt;a href=&quot;https://www.iana.org/assignments/iana-ipv6-special-registry/iana-ipv6-special-registry.xhtml&quot;&gt;iana-ipv6-special-registry&lt;/a&gt; (for IPv6).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a886f04f0ee6f36191b8332e0a5697d75b2822" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the address is otherwise IETF reserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd56c4d5dec5d35db1e58924dfbef4979632f2c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the address is reserved for link-local usage. See &lt;a href=&quot;https://tools.ietf.org/html/rfc3927.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3927&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772b438bc8a2c5dcec9d79a1cd4ba6963f160691" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the address is reserved for multicast use. See &lt;a href=&quot;https://tools.ietf.org/html/rfc3171.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 3171&lt;/strong&gt;&lt;/a&gt; (for IPv4) or &lt;a href=&quot;https://tools.ietf.org/html/rfc2373.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2373&lt;/strong&gt;&lt;/a&gt; (for IPv6).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9dd18ce0abccc7c6db883a02cbd521fbe765b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the address is reserved for site-local usage. Note that the site-local address space has been deprecated by &lt;a href=&quot;https://tools.ietf.org/html/rfc3879.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 3879&lt;/strong&gt;&lt;/a&gt;. Use &lt;a href=&quot;#ipaddress.IPv4Address.is_private&quot;&gt;&lt;code&gt;is_private&lt;/code&gt;&lt;/a&gt; to test if this address is in the space of unique local addresses as defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc4193.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 4193&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c029d9b6792c8513f54cb7062ebaca8de3697f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the address is unspecified. See &lt;a href=&quot;https://tools.ietf.org/html/rfc5735.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 5735&lt;/strong&gt;&lt;/a&gt; (for IPv4) or &lt;a href=&quot;https://tools.ietf.org/html/rfc2373.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2373&lt;/strong&gt;&lt;/a&gt; (for IPv6).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f1ec2bb80a61cd28b0d6fc3a2fd17a70a925102" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the domain explicitly specified by the server began with a dot (&lt;code&gt;'.'&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec00c16f4b00dbf97e26dbc91cbe352f9bce5a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the end-of-stream marker has been reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4d824e854e9a4af6f535420fafc5b27c4e02b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the epoll object is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031938879a8c7e71c8971443edfb6df76fc50169" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the file is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ddf22c4454d4bc36be0f53cd8afc72c5d1be89e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the kqueue object is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687a41be906b6a25c636435feb65114fa5149ee2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the native OS type of the environment is bytes (eg. &lt;code&gt;False&lt;/code&gt; on Windows).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634f1a4fd3ac9b15410283662e835f01b8c301ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the polling object is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6d3c2791383915bec2a08ce103f53afba04644" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the running interpreter is Jython.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981551f27707c9b43e39b5675c52a157f4dc6e40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the stream is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e717dfc45ddf8fa78a955cb72c4f2462a0805875" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the system is Android.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c6482c0254488fab5a5083f6929f57c67ad317" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if this cookie was received as an &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-24&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; cookie (ie. the cookie arrived in a &lt;em&gt;Set-Cookie&lt;/em&gt; header, and the value of the Version cookie-attribute in that header was 1). This attribute is provided because &lt;a href=&quot;#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt; may &amp;lsquo;downgrade&amp;rsquo; RFC 2109 cookies to Netscape cookies, in which case &lt;a href=&quot;#http.cookiejar.Cookie.version&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt; is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef5285db725314394e8a3871d85960782c3e1e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if this is a loopback address. See &lt;a href=&quot;https://tools.ietf.org/html/rfc3330.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 3330&lt;/strong&gt;&lt;/a&gt; (for IPv4) or &lt;a href=&quot;https://tools.ietf.org/html/rfc2373.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2373&lt;/strong&gt;&lt;/a&gt; (for IPv6).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231c6f7ed15136e131fedd2e7ce796ca8b89c5c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if this is a session cookie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b258d37a17d357605b7e8b2bb7ecd4349c412ff1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if this network is partly or wholly contained in &lt;em&gt;other&lt;/em&gt; or &lt;em&gt;other&lt;/em&gt; is wholly contained in this network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c115941e811302cf7868fe89a886d0e5503074" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; when verbose output is enabled. Should be checked when more detailed information is desired about a running test. &lt;em&gt;verbose&lt;/em&gt; is set by &lt;code&gt;test.regrtest&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff20a25f9f9bbe9f585eed9337a30905340b6ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt;/&lt;code&gt;False&lt;/code&gt; value indicating whether the item&amp;rsquo;s children should be displayed or hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40260a4b17f04d743794e0c93be3e2227e2f7dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type[Any]&lt;/code&gt; is equivalent to &lt;code&gt;Type&lt;/code&gt; which in turn is equivalent to &lt;code&gt;type&lt;/code&gt;, which is the root of Python&amp;rsquo;s metaclass hierarchy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe18b0438a24195e2e85ec47ef86770f0fcb729" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TypedDict&lt;/code&gt; creates a dictionary type that expects all of its instances to have a certain set of keys, where each key is associated with a value of a consistent type. This expectation is not checked at runtime but is only enforced by type checkers. Usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7b1adf598548410e29b657190dc44b612707b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U-00000000&lt;/code&gt; &amp;hellip; &lt;code&gt;U-0000007F&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f1dd35c3eb0acb5a57f4ff9c7d216ad08a621d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U-00000080&lt;/code&gt; &amp;hellip; &lt;code&gt;U-000007FF&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5bca33f57885324d0a08b6b300eb59a1131834" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U-00000800&lt;/code&gt; &amp;hellip; &lt;code&gt;U-0000FFFF&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e2d589941d4784b5bbe40534284aac90c7314f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U-00010000&lt;/code&gt; &amp;hellip; &lt;code&gt;U-0010FFFF&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d218df63e3e14b9431121a137b9c0c0cd900a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unpacker&lt;/code&gt; is the complementary class which unpacks XDR data values from a string buffer. The input buffer is given as &lt;em&gt;data&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4946de6a101e02f29f92199c61ce2e8f0357d08e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WinError&lt;/code&gt; is a function which will call Windows &lt;code&gt;FormatMessage()&lt;/code&gt; api to get the string representation of an error code, and &lt;em&gt;returns&lt;/em&gt; an exception. &lt;code&gt;WinError&lt;/code&gt; takes an optional error code parameter, if no one is used, it calls &lt;a href=&quot;#ctypes.GetLastError&quot;&gt;&lt;code&gt;GetLastError()&lt;/code&gt;&lt;/a&gt; to retrieve it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4bfed01725c066df3aa967ccc3cc915077c8d0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Writer&lt;/code&gt; objects (&lt;a href=&quot;#csv.DictWriter&quot;&gt;&lt;code&gt;DictWriter&lt;/code&gt;&lt;/a&gt; instances and objects returned by the &lt;a href=&quot;#csv.writer&quot;&gt;&lt;code&gt;writer()&lt;/code&gt;&lt;/a&gt; function) have the following public methods. A &lt;em&gt;row&lt;/em&gt; must be an iterable of strings or numbers for &lt;code&gt;Writer&lt;/code&gt; objects and a dictionary mapping fieldnames to strings or numbers (by passing them through &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; first) for &lt;a href=&quot;#csv.DictWriter&quot;&gt;&lt;code&gt;DictWriter&lt;/code&gt;&lt;/a&gt; objects. Note that complex numbers are written out surrounded by parens. This may cause some problems for other programs which read CSV files (assuming they support complex numbers at all).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7605b951672655f0371560ddfc74430b6af927df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YYYY-MM-DDTHH:MM:SS+HH:MM[:SS[.ffffff]]&lt;/code&gt;, if &lt;a href=&quot;#datetime.datetime.microsecond&quot;&gt;&lt;code&gt;microsecond&lt;/code&gt;&lt;/a&gt; is 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4fe1400328fac243f87fe23413226bb2dffda31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YYYY-MM-DDTHH:MM:SS.ffffff+HH:MM[:SS[.ffffff]]&lt;/code&gt;, if &lt;a href=&quot;#datetime.datetime.microsecond&quot;&gt;&lt;code&gt;microsecond&lt;/code&gt;&lt;/a&gt; is not 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf64d448a68f885b0219634ffe0cea66ee7d241" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YYYY-MM-DDTHH:MM:SS.ffffff&lt;/code&gt;, if &lt;a href=&quot;#datetime.datetime.microsecond&quot;&gt;&lt;code&gt;microsecond&lt;/code&gt;&lt;/a&gt; is not 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9f0b8104aaa5d14bb70fbbfa28f960288d71ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YYYY-MM-DDTHH:MM:SS&lt;/code&gt;, if &lt;a href=&quot;#datetime.datetime.microsecond&quot;&gt;&lt;code&gt;microsecond&lt;/code&gt;&lt;/a&gt; is 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9190b93c230660d9a16f37e20376c2de20b2f348" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\f&lt;/code&gt; or &lt;code&gt;\x0c&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbdce735af311d68a8d0e3b9f6670b9dc3787cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\v&lt;/code&gt; or &lt;code&gt;\x0b&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d978477ee996b12301724abe7326aecebf18a8d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__VENV_BIN_NAME__&lt;/code&gt; is replaced with the name of the bin directory (either &lt;code&gt;bin&lt;/code&gt; or &lt;code&gt;Scripts&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865feace518d32a0eac63c7910eadaa099dbe4ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__VENV_DIR__&lt;/code&gt; is replaced with the absolute path of the environment directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f58c0a05e5a12346cbe4f79dac01c2ddb5dcf97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__VENV_NAME__&lt;/code&gt; is replaced with the environment name (final path segment of environment directory).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6308235848123ba3e04c445cb3d9675f5d77a2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__VENV_PROMPT__&lt;/code&gt; is replaced with the prompt (the environment name surrounded by parentheses and with a following space)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e8d7aa9aa4d2b40805f6572d34d11c83534e19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__VENV_PYTHON__&lt;/code&gt; is replaced with the absolute path of the environment&amp;rsquo;s executable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001b6ed0ae0e32d3579018daf226d194cc592d15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__aexit__&lt;/code&gt;: &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac98801cbad94e8f29ac641ffd53863853507f6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__bool__&lt;/code&gt;: &lt;code&gt;True&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6683dfc639b0ef02507cc3b0cf781d317d5950c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__complex__&lt;/code&gt;: &lt;code&gt;1j&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b257396150b3ec976bbf80e573363cf077d666" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__contains__&lt;/code&gt;, &lt;code&gt;__iter__&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdee527045fd02254c2ed531697afa19aa5f4c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__contains__&lt;/code&gt;, &lt;code&gt;__iter__&lt;/code&gt;, &lt;code&gt;__len__&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d35e0ac39a57cd7b6436f010415f5561bd91b5a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__contains__&lt;/code&gt;, &lt;code&gt;__iter__&lt;/code&gt;, &lt;code&gt;__len__&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;discard&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="605be098952e92e27a8f117c957d24b5a242aacb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__contains__&lt;/code&gt;, &lt;code&gt;__iter__&lt;/code&gt;, &lt;code&gt;__reversed__&lt;/code&gt;, &lt;code&gt;index&lt;/code&gt;, and &lt;code&gt;count&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91b2e5a8c003b1e07c01100bb4833a56ca2b63d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__contains__&lt;/code&gt;, &lt;code&gt;keys&lt;/code&gt;, &lt;code&gt;items&lt;/code&gt;, &lt;code&gt;values&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;__eq__&lt;/code&gt;, and &lt;code&gt;__ne__&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e5de90cfc88097315094413f31698293824f8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__contains__&lt;/code&gt;: &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c60197214381850a31219849341973f0c68fd5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__dir__&lt;/code&gt;, &lt;code&gt;__format__&lt;/code&gt; and &lt;code&gt;__subclasses__&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49a22469e9e307a382503d4a91e38ecdb78548f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__exit__&lt;/code&gt;: &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8fef09b3be2feaa45f4c9860b7ef9e3fee3aa94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__file__&lt;/code&gt;, &lt;code&gt;__cached__&lt;/code&gt;, &lt;code&gt;__loader__&lt;/code&gt; and &lt;code&gt;__package__&lt;/code&gt; are &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#import-mod-attrs&quot;&gt;set as normal&lt;/a&gt; based on the module spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dcc087a24e219889f3c13e8075f61a9f2bd7537" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__float__&lt;/code&gt;: &lt;code&gt;1.0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e57cfb1f896034b088cd7c09b584cc62ddce4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__future__&lt;/code&gt; &amp;mdash; Future statement definitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c05f303b3ef4722b3302d9320d6574d7799f98f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__ge__&lt;/code&gt;: &lt;code&gt;NotImplemented&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6177f674de0a25970d061e3c5df652fe7fc7bee2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__get__&lt;/code&gt;, &lt;code&gt;__set__&lt;/code&gt; and &lt;code&gt;__delete__&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0fbd50d760f3c8c2c634b984cc4c5ad146eb6e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__getattr__&lt;/code&gt;, &lt;code&gt;__setattr__&lt;/code&gt;, &lt;code&gt;__init__&lt;/code&gt; and &lt;code&gt;__new__&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e17b7f7a30adbc9927de1d3acd6ebd485f6cd79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__getformat__&lt;/code&gt; and &lt;code&gt;__setformat__&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4a1558b641b59c9795c378d9382b61cc2c2aa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__getitem__&lt;/code&gt;, &lt;code&gt;__iter__&lt;/code&gt;, &lt;code&gt;__len__&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b226697c2d30f3242e108dbd90de2b3d7d7964" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__getitem__&lt;/code&gt;, &lt;code&gt;__len__&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219dcd9e1c3251516f2a107d77135d480c55dc35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__getitem__&lt;/code&gt;, &lt;code&gt;__setitem__&lt;/code&gt;, &lt;code&gt;__delitem__&lt;/code&gt;, &lt;code&gt;__iter__&lt;/code&gt;, &lt;code&gt;__len__&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569ba1b503aef5aa9c69c24764dc1ce3b1f37a11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__getitem__&lt;/code&gt;, &lt;code&gt;__setitem__&lt;/code&gt;, &lt;code&gt;__delitem__&lt;/code&gt;, &lt;code&gt;__len__&lt;/code&gt;, &lt;code&gt;insert&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d789b12e3615bb9b93e269dd4de26d7dea3ae56a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__gt__&lt;/code&gt;: &lt;code&gt;NotImplemented&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed54e4988bb2cab07cc46503e9efc959b3463434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__hash__&lt;/code&gt;, &lt;code&gt;__sizeof__&lt;/code&gt;, &lt;code&gt;__repr__&lt;/code&gt; and &lt;code&gt;__str__&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6201e988c33fa886bfbbf59c4fb1fb43d840c5b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__hash__&lt;/code&gt;: default hash for the mock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35157bed390373878a7a450c28cffd04e4e06ff8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__index__&lt;/code&gt;: &lt;code&gt;1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344dbec80e98bd78d5c5ba28cebe49cf79e4edbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__int64&lt;/code&gt; or &lt;code&gt;long long&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8c09554bfab33286cc054db89a2c2f63631abb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__int__&lt;/code&gt;: &lt;code&gt;1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b017900b9c2bb7dea7c30cd3fa722a2dd25072e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__iter__&lt;/code&gt;: &lt;code&gt;iter([])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb45dd876077f4f31630254d244888b73920f6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__le__&lt;/code&gt;, &lt;code&gt;__lt__&lt;/code&gt;, &lt;code&gt;__eq__&lt;/code&gt;, &lt;code&gt;__ne__&lt;/code&gt;, &lt;code&gt;__gt__&lt;/code&gt;, &lt;code&gt;__ge__&lt;/code&gt;, &lt;code&gt;__and__&lt;/code&gt;, &lt;code&gt;__or__&lt;/code&gt;, &lt;code&gt;__sub__&lt;/code&gt;, &lt;code&gt;__xor__&lt;/code&gt;, and &lt;code&gt;isdisjoint&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4806ec79e047ddce51126d03e643801c7e2a0e5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__le__&lt;/code&gt;: &lt;code&gt;NotImplemented&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de025175288b178e94bb4011180efc397ecd3904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__len__&lt;/code&gt;: &lt;code&gt;0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2f6660531fbf0196b56936f761c4ca759399b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__lt__&lt;/code&gt;: &lt;code&gt;NotImplemented&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d4af7788289ae25cae58b7520c176895d29e67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__main__&lt;/code&gt; &amp;mdash; Top-level script environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1938c939dc3fb107efde1180b4489a494b189c98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__members__&lt;/code&gt; is a read-only ordered mapping of &lt;code&gt;member_name&lt;/code&gt;:&lt;code&gt;member&lt;/code&gt; items. It is only available on the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3533a837103e2e07075171c32e77828557fc7be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__name__&lt;/code&gt; is set to &lt;em&gt;run_name&lt;/em&gt; if this optional argument is not &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; and to &lt;code&gt;'&amp;lt;run_path&amp;gt;'&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac4a8ad88fee85df8ae2740ae6a89f904c32425" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__name__&lt;/code&gt; is set to &lt;em&gt;run_name&lt;/em&gt; if this optional argument is not &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, to &lt;code&gt;mod_name + '.__main__'&lt;/code&gt; if the named module is a package and to the &lt;em&gt;mod_name&lt;/em&gt; argument otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e19aae50dd7b9e272dd0315e2cbb44e06438d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__prepare__&lt;/code&gt;, &lt;code&gt;__instancecheck__&lt;/code&gt;, &lt;code&gt;__subclasscheck__&lt;/code&gt;, &lt;code&gt;__del__&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f0ec8c3e75700a1ec5337eb5ba3c71c5626b13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__reduce__&lt;/code&gt;, &lt;code&gt;__reduce_ex__&lt;/code&gt;, &lt;code&gt;__getinitargs__&lt;/code&gt;, &lt;code&gt;__getnewargs__&lt;/code&gt;, &lt;code&gt;__getstate__&lt;/code&gt; and &lt;code&gt;__setstate__&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f2ffb61376efdcc09fbfa202d6f97ee25aa703" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__reversed__&lt;/code&gt; and &lt;code&gt;__missing__&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd6a0306f27d5571676ca8aaab2dd8ca39dc51ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__round__&lt;/code&gt;, &lt;code&gt;__floor__&lt;/code&gt;, &lt;code&gt;__trunc__&lt;/code&gt; and &lt;code&gt;__ceil__&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ab76c5ceb3e1b70cc99c18454eff14c65240a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__sizeof__&lt;/code&gt;: default sizeof for the mock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bded4cc6c32b0cdac8b5588f955ec7f3bce60d50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__spec__&lt;/code&gt; will be set appropriately for the &lt;em&gt;actually&lt;/em&gt; imported module (that is, &lt;code&gt;__spec__.name&lt;/code&gt; will always be &lt;em&gt;mod_name&lt;/em&gt; or &lt;code&gt;mod_name + '.__main__&lt;/code&gt;, never &lt;em&gt;run_name&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b6ea90281d49856a1d2325694c447cad2de64c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__str__&lt;/code&gt;: default str for the mock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9061158b3c03e1d60c43590badfea1e793b415b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_dummy_thread&lt;/code&gt; &amp;mdash; Drop-in replacement for the &lt;code&gt;_thread&lt;/code&gt; module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85c0786413098f80ab2d907cbd48d9bafa0cea1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_generate_next_value_&lt;/code&gt; &amp;ndash; used by the &lt;a href=&quot;#functional-api&quot;&gt;Functional API&lt;/a&gt; and by &lt;a href=&quot;#enum.auto&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/a&gt; to get an appropriate value for an enum member; may be overridden</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="431b40bed257ef18e30fb32bfe2915e2c550f2de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_ignore_&lt;/code&gt; &amp;ndash; a list of names, either as a &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list()&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt;, that will not be transformed into members, and will be removed from the final class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba139d0fae1d2a78db2c9146a3200c272f938213" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_makeResult()&lt;/code&gt; instantiates the class or callable passed in the &lt;code&gt;TextTestRunner&lt;/code&gt; constructor as the &lt;code&gt;resultclass&lt;/code&gt; argument. It defaults to &lt;a href=&quot;#unittest.TextTestResult&quot;&gt;&lt;code&gt;TextTestResult&lt;/code&gt;&lt;/a&gt; if no &lt;code&gt;resultclass&lt;/code&gt; is provided. The result class is instantiated with the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6726e9833aad36802fba1ea973f44dbde21588ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_missing_&lt;/code&gt; &amp;ndash; a lookup function used when a value is not found; may be overridden</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84913308961d97b84bbc99cbe7282937048a628f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_name_&lt;/code&gt; &amp;ndash; name of the member</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa8e63aec5bd970871cb95fbb520ccce4a02fae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_order_&lt;/code&gt; &amp;ndash; used in Python 2/3 code to ensure member order is consistent (class attribute, removed during class creation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045759c2365a4adcc7c553aff064af5e4753d131" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_thread&lt;/code&gt; &amp;mdash; Low-level threading API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbdf45cce28b3f5422a971763ebe03199af2f9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_value_&lt;/code&gt; &amp;ndash; value of the member; can be set / modified in &lt;code&gt;__new__&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e6a53fd62b9339c1fc37960a98473939a804b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a * b&lt;/code&gt; inner product</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a9bad395a807333e812f9fc55516ae540ccd61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a + b&lt;/code&gt; vector addition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d2838671991f904dff74e5691651c55d5c9096" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a - b&lt;/code&gt; vector subtraction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4edf2696f74a439bcad9a185bc2909386f2a08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = iadd(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a += b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8ea8dafdd506ccfaf94bda643047614c53ea75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = iand(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;amp;= b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8e240081f01b59f957490b7033eaf770d17041" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = iconcat(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a += b&lt;/code&gt; for &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2bed680afca0243a053171bf15dbe2e4afa060" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = ifloordiv(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a //= b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f13febb8c36d7c88fad77699e604c96bc155c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = ilshift(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;lt;&amp;lt;= b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae0a2c8e477573676b6a11d6baef0272dd455d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = imatmul(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a @= b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b466e1f4418679a9da9e6acb6cd8bd6b6f316f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = imod(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a %= b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596108bcb67e2c1d9e79b4d129b501bf7aa77cd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = imul(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a *= b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf707601ede9ce97dae3eed62f29f28897cef36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = ior(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a |= b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b1af570814e0c1a6c78d1cc7baeace2937fc7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = ipow(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a **= b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1bff2b652b8afe3db6dd257f1c69eb823e0f4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = irshift(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;gt;&amp;gt;= b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda9d1011f6c86cdf5d8039a3c078b1e009bc04f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = isub(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a -= b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12cf42dde7227f91a79c05d7098d32285e65550a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = itruediv(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a /= b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b15258a5f991e37c2cad8ae8591cc385c05300" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a = ixor(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a ^= b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b771d231049aad29d2982967399228ecb6483034" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.rotate(angle)&lt;/code&gt; rotation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097cf0e3f458d3cc4ca87f37734de946e2359fe2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a2b_*&lt;/code&gt; functions accept Unicode strings containing only ASCII characters. Other functions only accept &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt; (such as &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; and other objects that support the buffer protocol).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ffdcd0dd49bca5871ae64957441e0f22571d41d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a[i1:i2] == b[j1:j2]&lt;/code&gt; (the sub-sequences are equal).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7fd099c8785598fb2d990ae4a1c78467697e52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a[i1:i2]&lt;/code&gt; should be deleted. Note that &lt;code&gt;j1 == j2&lt;/code&gt; in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4394f0f4e391c04e33c285cfa7d743da7812ada" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a[i1:i2]&lt;/code&gt; should be replaced by &lt;code&gt;b[j1:j2]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1102c99e7621ceb51f44a70f2512bc71e6f37897" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abc&lt;/code&gt; &amp;mdash; Abstract Base Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3133c8b314c3926124955af17490b1b76019db73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abs(a)&lt;/code&gt; absolute value of a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def2ba7fad2b5a45d7da284f0b04d93843634abd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aclose&lt;/code&gt;, &lt;code&gt;__aiter__&lt;/code&gt;, &lt;code&gt;__anext__&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e531aa95b843f2e4be28caf6fe648e4f4cbba9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;address&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3104bcd8341bee22b33322c76f330198d158b6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aifc&lt;/code&gt; &amp;mdash; Read and write AIFF and AIFC files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2aba006c6079b9146b8f7888f84dab647e22a49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argparse.REMAINDER&lt;/code&gt;. All the remaining command-line arguments are gathered into a list. This is commonly useful for command line utilities that dispatch to other command line utilities:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0fc7b47519dbcf27d6748094ba20eb980d4042c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argparse&lt;/code&gt; &amp;mdash; Parser for command-line options, arguments and sub-commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722b50cd661fcdf6d77ba8f5ae7d83fac773b16f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argtypes&lt;/code&gt; must be a sequence of C data types (the &lt;code&gt;printf&lt;/code&gt; function is probably not a good example here, because it takes a variable number and different types of parameters depending on the format string, on the other hand this is quite handy to experiment with this feature):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d4f82324fa90b74a666f0318c6cbf40d12d41a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt; &amp;mdash; Efficient arrays of numeric values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cada8ac3a38274cea07e4d88570d5e0d26bb8a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asend&lt;/code&gt;, &lt;code&gt;athrow&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d150f02e9b6d0b5851b26c75afc05f648e201e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ast&lt;/code&gt; &amp;mdash; Abstract Syntax Trees</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc6ebbf538e0ee478a132ba4ad80e7e63f2b133" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asynchat&lt;/code&gt; &amp;mdash; Asynchronous socket command/response handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8139fbe907a7813ea5c94a90abdb5309e3ac2c72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asyncio&lt;/code&gt; &amp;mdash; Asynchronous I/O</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5acf7d10bf43cfaf496016c683aa1f93b288107" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asyncore&lt;/code&gt; &amp;mdash; Asynchronous socket handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5afe9793c04168b2ab967e235427515bbbff0d1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;at&lt;/code&gt; specifies the location of this Path within the zipfile, e.g. &amp;lsquo;dir/file.txt&amp;rsquo;, &amp;lsquo;dir/&amp;rsquo;, or &amp;lsquo;&amp;rsquo;. Defaults to the empty string, indicating the root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484a504ade8388e949ef02ce418c0b9a1c326faa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atexit&lt;/code&gt; &amp;mdash; Exit handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b1467f42671b745582f7946ba41cd3b6abcd72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;audioop&lt;/code&gt; &amp;mdash; Manipulate raw audio data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4531eab2000ecdf0f9ef07e5c897f3864700e4b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autocommit&lt;/code&gt; mode means that statements that modify the database take effect immediately. A &lt;code&gt;BEGIN&lt;/code&gt; or &lt;code&gt;SAVEPOINT&lt;/code&gt; statement disables &lt;code&gt;autocommit&lt;/code&gt; mode, and a &lt;code&gt;COMMIT&lt;/code&gt;, a &lt;code&gt;ROLLBACK&lt;/code&gt;, or a &lt;code&gt;RELEASE&lt;/code&gt; that ends the outermost transaction, turns &lt;code&gt;autocommit&lt;/code&gt; mode back on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec585495eb897cada6b9079f15b9b7948389886" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_accepted_socket&quot;&gt;&lt;code&gt;loop.connect_accepted_socket()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_accepted_socket&quot;&gt;&lt;code&gt;loop.connect_accepted_socket()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9df0f3ef06ba5db5cdae61908ffbbf28e4650f38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt;&lt;code&gt;loop.connect_read_pipe()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt;&lt;code&gt;loop.connect_read_pipe()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2323f06e7d1ac32ceea5f86b044359b0a0c68df7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt;&lt;code&gt;loop.connect_write_pipe()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt;&lt;code&gt;loop.connect_write_pipe()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="992cabd7cbafb46472eaa5525b58568dbe58e19f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2daab23da110b31a3acd52e924cebdfef30cd8bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_datagram_endpoint&quot;&gt;&lt;code&gt;loop.create_datagram_endpoint()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_datagram_endpoint&quot;&gt;&lt;code&gt;loop.create_datagram_endpoint()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6364ccf62991b0f9419768caf5eb13194a47a4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_server&quot;&gt;&lt;code&gt;loop.create_server()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_server&quot;&gt;&lt;code&gt;loop.create_server()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c73f45c174ae4c6e300bc09d9fe16e489067c53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt;&lt;code&gt;loop.create_unix_connection()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt;&lt;code&gt;loop.create_unix_connection()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="409f3fc251d7f4a9ab6a964c907475eff42e1eb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_server&quot;&gt;&lt;code&gt;loop.create_unix_server()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_server&quot;&gt;&lt;code&gt;loop.create_unix_server()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="031cfebac118c9e0061d01ce7e0148fb389a2c6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.getaddrinfo&quot;&gt;&lt;code&gt;loop.getaddrinfo()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.getaddrinfo&quot;&gt;&lt;code&gt;loop.getaddrinfo()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f15cb9a1bd2ca1a6b6ca871b1687da1b9333b6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.getnameinfo&quot;&gt;&lt;code&gt;loop.getnameinfo()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.getnameinfo&quot;&gt;&lt;code&gt;loop.getnameinfo()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="67316184321e67dfe7edfd54cbe5e99d1c3b3912" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.run_in_executor&quot;&gt;&lt;code&gt;loop.run_in_executor()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.run_in_executor&quot;&gt;&lt;code&gt;loop.run_in_executor()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64dc3e5a0908d53a4ead39a91dcf33da2e6a01ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sendfile&quot;&gt;&lt;code&gt;loop.sendfile()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sendfile&quot;&gt;&lt;code&gt;loop.sendfile()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f32789a7e08230f627141e908f301538fc460aa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.shutdown_asyncgens&quot;&gt;&lt;code&gt;loop.shutdown_asyncgens()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.shutdown_asyncgens&quot;&gt;&lt;code&gt;loop.shutdown_asyncgens()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ec33770b6cea79f2d4d4cc3080f141d69de6a87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_accept&quot;&gt;&lt;code&gt;loop.sock_accept()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_accept&quot;&gt;&lt;code&gt;loop.sock_accept()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4cea1406acdbf667b1683ac1f52670dd1c85e0bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_connect&quot;&gt;&lt;code&gt;loop.sock_connect()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_connect&quot;&gt;&lt;code&gt;loop.sock_connect()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27dd012d3ea5efc04d8634c63ffd7b9fab0a2245" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_recv&quot;&gt;&lt;code&gt;loop.sock_recv()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_recv&quot;&gt;&lt;code&gt;loop.sock_recv()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d7665eec5e7962de080f62e743d9f7c97b405d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_recv_into&quot;&gt;&lt;code&gt;loop.sock_recv_into()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_recv_into&quot;&gt;&lt;code&gt;loop.sock_recv_into()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f7cf176945d1f0bd4ac292be436e69027229813" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_sendall&quot;&gt;&lt;code&gt;loop.sock_sendall()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_sendall&quot;&gt;&lt;code&gt;loop.sock_sendall()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cfdd764f68ecf40e9a3397011d222a66f9069638" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_sendfile&quot;&gt;&lt;code&gt;loop.sock_sendfile()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sock_sendfile&quot;&gt;&lt;code&gt;loop.sock_sendfile()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4e39373ad0e85bec2133398f853b3abfe64e182" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.start_tls&quot;&gt;&lt;code&gt;loop.start_tls()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-eventloop#asyncio.loop.start_tls&quot;&gt;&lt;code&gt;loop.start_tls()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20325ba972bfb6da22830495567f27580b5c878b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-stream#asyncio.open_connection&quot;&gt;&lt;code&gt;open_connection()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-stream#asyncio.open_connection&quot;&gt;&lt;code&gt;open_connection()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="717ea30e22b0d2869a104c80b1a6c3795f2748e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-stream#asyncio.open_unix_connection&quot;&gt;&lt;code&gt;open_unix_connection()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-stream#asyncio.open_unix_connection&quot;&gt;&lt;code&gt;open_unix_connection()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4b0ea16b425bd1a58cb0897eca73cfb2fe33501" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt;&lt;code&gt;start_server()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt;&lt;code&gt;start_server()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53bb1bdedf91b824f0d53eb9430e55e2d2d4ab4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-stream#asyncio.start_unix_server&quot;&gt;&lt;code&gt;start_unix_server()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-stream#asyncio.start_unix_server&quot;&gt;&lt;code&gt;start_unix_server()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="254a07792779145328e6aa8810dc7058dc07d0df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_exec&quot;&gt;&lt;code&gt;create_subprocess_exec()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_exec&quot;&gt;&lt;code&gt;create_subprocess_exec()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44de0c20577e68631f5e65bbbc573b67b23e2253" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_shell&quot;&gt;&lt;code&gt;create_subprocess_shell()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_shell&quot;&gt;&lt;code&gt;create_subprocess_shell()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b72fdcf9efcf6f6ddf8a3d2e8938f95bf6749c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.gather&quot;&gt;&lt;code&gt;gather()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.gather&quot;&gt;&lt;code&gt;gather()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="18634ad7721c77f99d75992424b1545e08a90cc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.shield&quot;&gt;&lt;code&gt;shield()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.shield&quot;&gt;&lt;code&gt;shield()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e650cea110781e95534dc801abf14e6bba68d624" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.sleep&quot;&gt;&lt;code&gt;sleep()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.sleep&quot;&gt;&lt;code&gt;sleep()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cee0dd80293717fc5791d0de02f2b4074e88abe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="260efaaa58fc758498194018569c690bcea0a58f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.wait_for&quot;&gt;&lt;code&gt;wait_for()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;await&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.wait_for&quot;&gt;&lt;code&gt;wait_for()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7fa930fdf756d97893fdad7505a7056ab8430e5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b'%r'&lt;/code&gt; is deprecated, but will not be removed during the 3.x series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ff0af98e5ac097291f7e48aa53cae00e9ff8d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b'%s'&lt;/code&gt; is deprecated, but will not be removed during the 3.x series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95454fc99963131dc54d8a3b7d45fae8944fe8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b[j1:j2]&lt;/code&gt; should be inserted at &lt;code&gt;a[i1:i1]&lt;/code&gt;. Note that &lt;code&gt;i1 == i2&lt;/code&gt; in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37576007030c60a8a1e305800ffb5d6ac78e3cc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;base64&lt;/code&gt; &amp;mdash; Base16, Base32, Base64, Base85 Data Encodings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c119ceb60d3565265f8b38d20511ca4c6908e46c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;base_name&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;root_dir&lt;/code&gt;, &lt;code&gt;base_dir&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e345ba440024db1b359457fef4330007f988e2a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bdb&lt;/code&gt; &amp;mdash; Debugger framework</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63f68b80303e767acbe67964926d9f9dbd3f050" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binascii&lt;/code&gt; &amp;mdash; Convert between binary and ASCII</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8892cabab37cb37ae49675dd2b3fb46718595dd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binhex&lt;/code&gt; &amp;mdash; Encode and decode binhex4 files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26cf5ec3aac5f117e2b69f9fe49e7aafd4adb7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bisect&lt;/code&gt; &amp;mdash; Array bisection algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4072bda41e42312f06fcf49a98131cf59cd41ff2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bool&lt;/code&gt; or &lt;code&gt;int&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1dc5033de4d0c1ccc24ec76d6bf1984743fe14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;builtins&lt;/code&gt; &amp;mdash; Built-in objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2b5810c475442630eab81d2af046bccba76430" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;byref(obj, offset)&lt;/code&gt; corresponds to this C code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9aa5a1ad07db723031f6dfd483c6829334a3358" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bz2&lt;/code&gt; &amp;mdash; Support for &lt;strong&gt;bzip2&lt;/strong&gt; compression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b23b213e52ac40bd5b3256e17d7a8fdab7f13e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cafile&lt;/code&gt; - resolved path to cafile or &lt;code&gt;None&lt;/code&gt; if the file doesn&amp;rsquo;t exist,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034eecaf6cfd471f49262ccad66697b42636c334" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;calendar&lt;/code&gt; &amp;mdash; General calendar-related functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e3c895aa60510d1f2cc44918177fc3a072c81c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;call_list&lt;/code&gt; is particularly useful for making assertions on &amp;ldquo;chained calls&amp;rdquo;. A chained call is multiple calls on a single line of code. This results in multiple entries in &lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt;&lt;code&gt;mock_calls&lt;/code&gt;&lt;/a&gt; on a mock. Manually constructing the sequence of calls can be tedious.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c978d8263d0a144bb4e6d439d27c25965ff00a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BaseProtocol.connection_lost&quot;&gt;&lt;code&gt;connection_lost()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BaseProtocol.connection_lost&quot;&gt;&lt;code&gt;connection_lost()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf05736efa54d8d4f70a428e33554329a90c53ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BaseProtocol.connection_made&quot;&gt;&lt;code&gt;connection_made()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BaseProtocol.connection_made&quot;&gt;&lt;code&gt;connection_made()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23071bfd1a469d58362286c641ba62ffe23597a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BaseProtocol.pause_writing&quot;&gt;&lt;code&gt;pause_writing()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BaseProtocol.pause_writing&quot;&gt;&lt;code&gt;pause_writing()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f758b6e8241eda6b0fd51243eff72e624b091b9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BaseProtocol.resume_writing&quot;&gt;&lt;code&gt;resume_writing()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BaseProtocol.resume_writing&quot;&gt;&lt;code&gt;resume_writing()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f8a9edcc598ff24e79f7054468a560cdb5989059" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BufferedProtocol.buffer_updated&quot;&gt;&lt;code&gt;buffer_updated()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BufferedProtocol.buffer_updated&quot;&gt;&lt;code&gt;buffer_updated()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8a3cabd65b13bc4f6f6c995225eb5ff8e123e78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BufferedProtocol.eof_received&quot;&gt;&lt;code&gt;eof_received()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BufferedProtocol.eof_received&quot;&gt;&lt;code&gt;eof_received()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="445ec692cd59e49988302d38ee03291065a88ed8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BufferedProtocol.get_buffer&quot;&gt;&lt;code&gt;get_buffer()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.BufferedProtocol.get_buffer&quot;&gt;&lt;code&gt;get_buffer()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37c633633070e08aef01975ae1d19cfac8965999" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.DatagramProtocol.datagram_received&quot;&gt;&lt;code&gt;datagram_received()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.DatagramProtocol.datagram_received&quot;&gt;&lt;code&gt;datagram_received()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="373e8fc97faee2f21a3d5a7623e900632b59b867" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.DatagramProtocol.error_received&quot;&gt;&lt;code&gt;error_received()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.DatagramProtocol.error_received&quot;&gt;&lt;code&gt;error_received()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c607d93c45e0f2e12216f5abbe262b987a25101f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.Protocol.data_received&quot;&gt;&lt;code&gt;data_received()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.Protocol.data_received&quot;&gt;&lt;code&gt;data_received()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ca9680f46788ea9ab7d5536720cbb563e34bb155" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.Protocol.eof_received&quot;&gt;&lt;code&gt;eof_received()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.Protocol.eof_received&quot;&gt;&lt;code&gt;eof_received()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f222c44da339c4a22c98d8a0ad8a7311f786b3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.SubprocessProtocol.pipe_connection_lost&quot;&gt;&lt;code&gt;pipe_connection_lost()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.SubprocessProtocol.pipe_connection_lost&quot;&gt;&lt;code&gt;pipe_connection_lost()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47e93db9c3f876d754c19573fa270ae851b80b7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.SubprocessProtocol.pipe_data_received&quot;&gt;&lt;code&gt;pipe_data_received()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.SubprocessProtocol.pipe_data_received&quot;&gt;&lt;code&gt;pipe_data_received()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6de4d1f1eb32bef8e6dfaf6cbbafd3a60ec3af8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.SubprocessProtocol.process_exited&quot;&gt;&lt;code&gt;process_exited()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;a href=&quot;asyncio-protocol#asyncio.SubprocessProtocol.process_exited&quot;&gt;&lt;code&gt;process_exited()&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2b88e188674a19c5c74277b06e62865221161f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;capath&lt;/code&gt; - resolved path to capath or &lt;code&gt;None&lt;/code&gt; if the directory doesn&amp;rsquo;t exist,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d404c500864085110eb916c36c603174e212833" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cgi&lt;/code&gt; &amp;mdash; Common Gateway Interface support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7fcca8bce79735616536ac62c1e1f2fc38b3afb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cgitb&lt;/code&gt; &amp;mdash; Traceback manager for CGI scripts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e5024fbfce645d85803c8940665c38b1b621f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;channels()&lt;/code&gt; to set the number of channels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba6db5891a0baa45d6c6894327429552045c8503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char *&lt;/code&gt; (NUL terminated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553a0f371a4622b36a3ba5dadeda848ff7798410" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;check_warnings&lt;/code&gt; accepts 2-tuples of the form &lt;code&gt;(&quot;message regexp&quot;,
WarningCategory)&lt;/code&gt; as positional arguments. If one or more &lt;em&gt;filters&lt;/em&gt; are provided, or if the optional keyword argument &lt;em&gt;quiet&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, it checks to make sure the warnings are as expected: each specified filter must match at least one of the warnings raised by the enclosed code or the test fails, and if any warnings are raised that do not match any of the specified filters the test fails. To disable the first of these checks, set &lt;em&gt;quiet&lt;/em&gt; to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8983d317678d52b5c8b8b9f85e9f6b1f1f9404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;children_system&lt;/code&gt; - system time of all child processes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9552501d04cd75a46e369af6d1977a83197606b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;children_user&lt;/code&gt; - user time of all child processes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff3ca1d3d47407b4f69b975901d71d98475df6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chunk&lt;/code&gt; &amp;mdash; Read IFF chunked data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b62b22d4e434a89781bac1e5d39860d921c0f4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt; (mandatory). This is the fully qualified name of the handler class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7611ba0a16f8288fabce1c0970f68316db3e366" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clear()&lt;/code&gt; and &lt;code&gt;copy()&lt;/code&gt; are included for consistency with the interfaces of mutable containers that don&amp;rsquo;t support slicing operations (such as &lt;a href=&quot;#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt;). &lt;code&gt;copy()&lt;/code&gt; is not part of the &lt;a href=&quot;collections.abc#collections.abc.MutableSequence&quot;&gt;&lt;code&gt;collections.abc.MutableSequence&lt;/code&gt;&lt;/a&gt; ABC, but most concrete mutable sequence classes provide it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14412d9b086223a921f62fe2f06b00bf84a659a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clear&lt;/code&gt; &amp;ndash; a Boolean value which, if true, will delete the contents of any existing target directory, before creating the environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c50438cfdcd9c2b0d629d6cccff87455bd0603" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clone()&lt;/code&gt;, &lt;code&gt;undo()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424961deec643df67c00efa73ca78a2f2a23f182" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;close&lt;/code&gt;, &lt;code&gt;__iter__&lt;/code&gt;, &lt;code&gt;__next__&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bea5f4c3d60d9ff26b7b1f96462ceca84529bb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;close&lt;/code&gt;, &lt;code&gt;closed&lt;/code&gt;, &lt;code&gt;__enter__&lt;/code&gt;, &lt;code&gt;__exit__&lt;/code&gt;, &lt;code&gt;flush&lt;/code&gt;, &lt;code&gt;isatty&lt;/code&gt;, &lt;code&gt;__iter__&lt;/code&gt;, &lt;code&gt;__next__&lt;/code&gt;, &lt;code&gt;readable&lt;/code&gt;, &lt;code&gt;readline&lt;/code&gt;, &lt;code&gt;readlines&lt;/code&gt;, &lt;code&gt;seekable&lt;/code&gt;, &lt;code&gt;tell&lt;/code&gt;, &lt;code&gt;writable&lt;/code&gt;, and &lt;code&gt;writelines&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e49da2427040ea8dcd9f3db1dbf3686c6d2eeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cmath&lt;/code&gt; &amp;mdash; Mathematical functions for complex numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b2b6fa9224fd6cbbd3439f518ed609d67c69db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cmd&lt;/code&gt; &amp;mdash; Support for line-oriented command interpreters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c882dafc9c55cf95619cca55e2b8db5e1bb5f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;code&lt;/code&gt; &amp;mdash; Interpreter base classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea12faf5214341720d4416bdeea2af0095d12d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;code&lt;/code&gt;, &lt;code&gt;filename&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;argcount&lt;/code&gt;, &lt;code&gt;posonlyargcount&lt;/code&gt;, &lt;code&gt;kwonlyargcount&lt;/code&gt;, &lt;code&gt;nlocals&lt;/code&gt;, &lt;code&gt;stacksize&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a528213c7a127116264c010c573f1bb14549b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;codecs&lt;/code&gt; &amp;mdash; Codec registry and base classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61059a05d267a572cc03760fb1a4f5963fe22085" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;codeop&lt;/code&gt; &amp;mdash; Compile Python code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22eef332ba7800bdefd3a97e3ba9d6354a776434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collected&lt;/code&gt; is the total number of objects collected inside this generation;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d510838ce0dcbd9a50687a494da66bdaca123e21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collections.abc&lt;/code&gt; &amp;mdash; Abstract Base Classes for Containers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7986a71fc2aab30b885e6e27c6967c119be9c549" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collections&lt;/code&gt; &amp;mdash; Container datatypes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940deff6714a5205da48b089bd01b6ca9665eaf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collections&lt;/code&gt; is the number of times this generation was collected;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630e6d8992fe84b7866d1718a574d6bd054d24ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;colorsys&lt;/code&gt; &amp;mdash; Conversions between color systems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21292283eac16340b6291f9f64048df9594164c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;comment&lt;/code&gt;, &lt;code&gt;pi&lt;/code&gt;: the current comment / processing instruction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ab8638ce7eeba6890bb976363f043aadb7aa7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compare&lt;/code&gt;: If true (the default), this field is included in the generated equality and comparison methods (&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__gt__&quot;&gt;&lt;code&gt;__gt__()&lt;/code&gt;&lt;/a&gt;, et al.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c91754cc0d20c9773187a80f67e8f59c599b57b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compileall&lt;/code&gt; &amp;mdash; Byte-compile Python libraries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebd82698bb2370925fd8f9823f82e58fb8e75b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;computer_name&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd6a32b91ddfe2db8fe79feea04d1f8a294cdc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;concurrent.futures&lt;/code&gt; &amp;mdash; Launching parallel tasks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98adf06a0c4dd5300a22a0f4868e79bf8b8e9aff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;configparser&lt;/code&gt; &amp;mdash; Configuration file parser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5a68aeee24825fd50f299550bc69527321dfd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; declarations map to variables in their respective scope (e.g. &lt;code&gt;xml.dom.minidom.Node.PROCESSING_INSTRUCTION_NODE&lt;/code&gt;); they must not be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b59369777a53701a8833251eaeece8cf16aebc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;contextlib&lt;/code&gt; &amp;mdash; Utilities for &lt;code&gt;with&lt;/code&gt;-statement contexts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7bdd4c369b48e22c50a96969c136cf6df332df9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;contextvars&lt;/code&gt; &amp;mdash; Context Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76262400f9682fd0b89fa8d4f8089476aa42d240" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;copy&lt;/code&gt; &amp;mdash; Shallow and deep copy operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21621aaf4f65aa0c25af4ef4ecefdabdc23354ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;copyreg&lt;/code&gt; &amp;mdash; Register &lt;code&gt;pickle&lt;/code&gt; support functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03fa13b99fe71fb7dcfa1fa282c7a0387ba7f5db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crit&lt;/code&gt; or &lt;code&gt;critical&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a9cddb9ebb2612a331b35f957f8ae6448b4928" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crypt&lt;/code&gt; &amp;mdash; Function to check Unix passwords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af82eb8f2060b61ee05c840c74f180806ba119f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;csv&lt;/code&gt; &amp;mdash; CSV File Reading and Writing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996d60594f32845466fa0f8743709ac99d0e9d59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ctypes&lt;/code&gt; &amp;mdash; A foreign function library for Python</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3795c27396058f4777bc3e982f3155e25101865" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;curses.ascii&lt;/code&gt; &amp;mdash; Utilities for ASCII characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c1a8770d701512cee8f7b598aa79b58a6a58b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;curses.panel&lt;/code&gt; &amp;mdash; A panel stack extension for curses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c595fbb18714fb01b6d467d5f7f4d4654164755" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;curses.textpad&lt;/code&gt; &amp;mdash; Text input widget for curses programs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b1d6a87df7bdabbab3b605c2a72a23805362db4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;curses&lt;/code&gt; &amp;mdash; Terminal handling for character-cell displays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec6a16a6c74dd4455854897feda1475e7a4ef69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;d.ctime()&lt;/code&gt; is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb6d8a009b0f9135df3ddf99333f870310f7536f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;d.timetuple()&lt;/code&gt; is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e6a9e7ff8e25f47be6c173b94614e82d27d12d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;d.tzinfo.utcoffset(d)&lt;/code&gt; does not return &lt;code&gt;None&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="819edf157a9aef952da98ec05f525c2c67bdc381" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;d.tzinfo&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ff82e8f593905f953c355ecd1000d9cbaacb92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dataclasses&lt;/code&gt; &amp;mdash; Data Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38151843b63a8632eeb03ec16bfedd9cd5dc19e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datetime&lt;/code&gt; &amp;mdash; Basic date and time types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="336760b29a811410a15887eafec165b80aba0052" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dbm&lt;/code&gt; &amp;mdash; Interfaces to Unix &amp;ldquo;databases&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68e77055d9280fb50436c72e7a4b8c252605fd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decimal&lt;/code&gt; &amp;mdash; Decimal fixed point and floating point arithmetic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1411115c2cae951bdc16e288004f85119b9125" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt;, &lt;code&gt;default_factory&lt;/code&gt;, &lt;code&gt;init&lt;/code&gt;, &lt;code&gt;repr&lt;/code&gt;, &lt;code&gt;hash&lt;/code&gt;, &lt;code&gt;compare&lt;/code&gt;, and &lt;code&gt;metadata&lt;/code&gt; have the identical meaning and values as they do in the &lt;a href=&quot;#dataclasses.field&quot;&gt;&lt;code&gt;field()&lt;/code&gt;&lt;/a&gt; declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ad39573e8e8f56e8cdfedf15e690de8793b69f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt;: If provided, this will be the default value for this field. This is needed because the &lt;a href=&quot;#dataclasses.field&quot;&gt;&lt;code&gt;field()&lt;/code&gt;&lt;/a&gt; call itself replaces the normal position of the default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a746a501436d63d64217e1f2127f8bc09a069a59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default_factory&lt;/code&gt;: If provided, it must be a zero-argument callable that will be called when a default value is needed for this field. Among other purposes, this can be used to specify fields with mutable default values, as discussed below. It is an error to specify both &lt;code&gt;default&lt;/code&gt; and &lt;code&gt;default_factory&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a00d9b7bde4c0fb64798c522b4e3da4d67c9ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;depth&lt;/code&gt;: Maximum search depth used by match finder. 0 (default) means to select automatically based on other filter options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13f8f72d1d5acae29045417330696daed7aa82e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;description&lt;/code&gt; &amp;ndash; Description associated with the non-&lt;em&gt;text&lt;/em&gt; part</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf336ee5ac78201aa5b94782a489c00b6279f7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dest&lt;/code&gt; allows a custom attribute name to be provided:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03e3fc313bb2fd3a7f3f09a7b64470bae1ade43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;detach&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;read1&lt;/code&gt;, and &lt;code&gt;write&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93fac9a80dc1491c9540773fa7b5a5f19611c83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;detach&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;readline&lt;/code&gt;, and &lt;code&gt;write&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951f913772b19be87f2cc08ed2b84f510c5acfd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devpoll()&lt;/code&gt; objects are linked to the number of file descriptors allowed at the time of instantiation. If your program reduces this value, &lt;code&gt;devpoll()&lt;/code&gt; will fail. If your program increases this value, &lt;code&gt;devpoll()&lt;/code&gt; may return an incomplete list of active file descriptors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="081a647557327a7a1a44b2722683e21b66b88f6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dict_size&lt;/code&gt;: Dictionary size in bytes. This should be between 4 KiB and 1.5 GiB (inclusive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300c468f0510cdc978ef26f3dcb6e902bcc76a23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;difflib&lt;/code&gt; &amp;mdash; Helpers for computing deltas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda29a589a2fdcd3ebba9a96ea4e76c9ee14dd67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dis&lt;/code&gt; &amp;mdash; Disassembler for Python bytecode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0044a0e24f5659014a25f7ccd04fcae963a059ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;distutils&lt;/code&gt; &amp;mdash; Building and installing Python modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f36ce35370e4aa3d3b8a09f43d9d3e96a2714ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doCleanupsClass()&lt;/code&gt; pops methods off the stack of cleanup functions one at a time, so it can be called at any time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7675b53dd83a3f86764d1f600bbc8428ce5e0b6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doctest&lt;/code&gt; &amp;mdash; Test interactive Python examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df77f39f60cde265002456e41c2ebc6b638b2283" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;double&lt;/code&gt; or &lt;code&gt;float&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9ed3ea3399456e360171b10cf9a299b96621a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dummy_threading&lt;/code&gt; &amp;mdash; Drop-in replacement for the &lt;code&gt;threading&lt;/code&gt; module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f624cdb197f60df194255f4ece576c743e3c7155" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elapsed&lt;/code&gt; - elapsed real time since a fixed point in the past</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe718bc73fb0f42568ecb0922d7a44b6098122d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.charset&lt;/code&gt;: Representing character sets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4d5c40324527545186f7c8f1550aaa486b5bcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.contentmanager&lt;/code&gt;: Managing MIME Content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57184f1d4422a08bc25f767baecc858d4db4c210" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.encoders&lt;/code&gt;: Encoders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbeef0325e419a6811e5343282d6895940d9cfc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.errors&lt;/code&gt;: Exception and Defect classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04349d5a820f1f92378c770070bfd8f6c594ff6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.generator&lt;/code&gt;: Generating MIME documents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="376e25c49a7f54246fb2994d8f730eb0b1d69b6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.header&lt;/code&gt;: Internationalized headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4225f5aecaa21ee94ee78ea7bd0204eafd29ff33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.headerregistry&lt;/code&gt;: Custom Header Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6677c97546ab2a5d1f5887bdc9e5da9a57e7cf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.iterators&lt;/code&gt;: Iterators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e94955c97a50a6125f9c74f34d903a39677bcfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.message.Message&lt;/code&gt;: Representing an email message using the &lt;code&gt;compat32&lt;/code&gt; API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5c4a2130cd5778b71b1691159784d206fedb6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.message&lt;/code&gt;: Representing an email message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06255de90547e578c5740be657e631cd14a1b51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.mime&lt;/code&gt;: Creating email and MIME objects from scratch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1a95f95ca473cb019f715bb44dadb8119ab85b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.parser&lt;/code&gt;: Parsing email messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dae879254f9dc91108d45db26c32df50a5ec01a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.policy&lt;/code&gt;: Policy Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d258a1b629c9b4bcd3b9fd4eb3b4db004ea0964" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.utils&lt;/code&gt;: Miscellaneous utilities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74aa3bb9683be692ae2c3f1adae0da702fbbb5fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email&lt;/code&gt; &amp;mdash; An email and MIME handling package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46fe1cea88fc319d1beda0adcbd7b669d492894" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email&lt;/code&gt;: Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6817135ed4e443599ad42a45f4e0ce1cdd7b5e07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emerg&lt;/code&gt; or &lt;code&gt;panic&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d414e288bd5537776b210b4aa70bdb1406b03920" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;encoding&lt;/code&gt; &amp;ndash; Content transfer encoding of the non-&lt;em&gt;text&lt;/em&gt; part</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13551862b24d431c316183ea895e6fb5d1ba9969" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end-ns&lt;/code&gt;: &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; (this may change in a future version)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae96d313db5e896f25abd0312f67427124572c78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ensurepip&lt;/code&gt; &amp;mdash; Bootstrapping the &lt;code&gt;pip&lt;/code&gt; installer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdeaa19c52a5ceaa07bbb9c7fd50d5e0ac3bbb83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enum&lt;/code&gt; &amp;mdash; Support for enumerations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="019726c73cb2fa874e73c2b7ea6430af0d4f8968" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;epoll&lt;/code&gt; objects support the context management protocol: when used in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, the new file descriptor is automatically closed at the end of the block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69fcb511efad215151e650772304e46586edcdab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eq&lt;/code&gt;: If true (the default), an &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt; method will be generated. This method compares the class as if it were a tuple of its fields, in order. Both instances in the comparison must be of the identical type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7755546bf3d97a2f7ad47048f386359bbb006557" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;err&lt;/code&gt; or &lt;code&gt;error&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b03233824abfb8e0330905cdd037f865d25e00f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;errno&lt;/code&gt; &amp;mdash; Standard errno system symbols</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1402dcc6434c7c23500ba2c372c3d7bdd08fcab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event&lt;/code&gt; is a constant and can be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069e6d93f40f24446a9c1dc5dadbb6763367ae92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;executable&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;cwd&lt;/code&gt;, &lt;code&gt;env&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb78501b93d584d25a512018e1597d9b185e86f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;faulthandler&lt;/code&gt; &amp;mdash; Dump the Python traceback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e85ff13da9c3eb0bb9d09941bb7b0a0a77dba9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fcntl&lt;/code&gt; &amp;mdash; The &lt;code&gt;fcntl&lt;/code&gt; and &lt;code&gt;ioctl&lt;/code&gt; system calls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a3686ee3c4e342dc374e7c997effde344a655d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823e3cc60a6ddd1e6a84a193ba1f6204ff159e9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;field&lt;/code&gt;s may optionally specify a default value, using normal Python syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30dab4068f2f6a4ac1be5332e7389ac50c7d9639" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddaf74b479b6c232a71a8ac2b034653fb8859216" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filecmp&lt;/code&gt; &amp;mdash; File and Directory Comparisons</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768279ae7557ca9b1c8eadba7b04a8b97c395921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fileinput&lt;/code&gt; &amp;mdash; Iterate over lines from multiple input streams</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316b2e8de46fbd8def8a4febfd9493b34b88ef5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt; &amp;ndash; Filename of the non-&lt;em&gt;text&lt;/em&gt; part</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b3a8718061071d4185cb7a60f7fa27af254a4ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fileno&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt;, &lt;code&gt;access&lt;/code&gt;, &lt;code&gt;offset&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7d6c2e474ed78eaa41f4d377b0d26fc0045e49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fileno&lt;/code&gt;, &lt;code&gt;seek&lt;/code&gt;, and &lt;code&gt;truncate&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513e8ea76bb2ad391bc14885c142799457aa03ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filters&lt;/code&gt; (optional). A list of ids of the filters for this handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f1c6fcb3da4cd94ee71704cde678e9443cb6fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filters&lt;/code&gt; (optional). A list of ids of the filters for this logger.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df4824e7363fcc22920fbda01ca45dcb3166de7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fnmatch&lt;/code&gt; &amp;mdash; Unix filename pattern matching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4c2d62dc6d734a32da29fa925425f3a30ef7bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fold in [0, 1]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df85021d1cc6c9a7c679db7b996f20877de8f03f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for in&lt;/code&gt;&lt;a href=&quot;asyncio-task#asyncio.as_completed&quot;&gt;&lt;code&gt;as_completed()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf84c5ba6a00d652c627e5f2bd4e749a63252015" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;formatter&lt;/code&gt; &amp;mdash; Generic output formatting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71cb0cb02f865f82d72b91e24796615e9164bf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;formatter&lt;/code&gt; (optional). The id of the formatter for this handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f175bd2a6f0f4d28a78edc2313ca6f1bc66e1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fractions&lt;/code&gt; &amp;mdash; Rational numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98bcfd9483a2fa4c2abca60e54d45fce784f76e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;frozen&lt;/code&gt;: If true (the default is &lt;code&gt;False&lt;/code&gt;), assigning to fields will generate an exception. This emulates read-only frozen instances. If &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setattr__&quot;&gt;&lt;code&gt;__setattr__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delattr__&quot;&gt;&lt;code&gt;__delattr__()&lt;/code&gt;&lt;/a&gt; is defined in the class, then &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised. See the discussion below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f012efd3d22ba86ca6ee8ea119c9d7c9c975d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ftplib&lt;/code&gt; &amp;mdash; FTP protocol client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0942aa38608ac20fa2abaa42d4eabaa348a3a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fullurl&lt;/code&gt;, &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;headers&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5807c41ee14fc3e6f88342ed5c119231d51adbfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fun(*args, **kwds)&lt;/code&gt; raises &lt;em&gt;exc&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5fb1fbd483ccd9a2199d8cc4718d15da794d32b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fun(*args, **kwds)&lt;/code&gt; raises &lt;em&gt;exc&lt;/em&gt; and the message matches regex &lt;em&gt;r&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891c5fc6642048b9bc769924b272874d6888df7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fun(*args, **kwds)&lt;/code&gt; raises &lt;em&gt;warn&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5ee4e06a10be013a8c1a5d22120074965d2bf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fun(*args, **kwds)&lt;/code&gt; raises &lt;em&gt;warn&lt;/em&gt; and the message matches regex &lt;em&gt;r&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf2a70a7cd0c19aa6a396cdaa8665c94d41986f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;func_pointer&lt;/code&gt;, &lt;code&gt;arguments&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc28c24ee063847aec81aaed33e1f2db5838cce3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;functools&lt;/code&gt; &amp;mdash; Higher-order functions and operations on callable objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fd225c1b68d10e4ce8084c1543edaf16bd3f3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gc&lt;/code&gt; &amp;mdash; Garbage Collector interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838949aa2d81fcace22f340c52ae5e42be6703f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get_buffer()&lt;/code&gt; must return an object implementing the &lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;buffer protocol&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030cac35faa1aeb0a1ac95a915d2216951ac99a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getcode()&lt;/code&gt; &amp;ndash; return the HTTP status code of the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a08f950cbd3f178ae1691b2dcfd1c25858cf373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getopt&lt;/code&gt; &amp;mdash; C-style parser for command line options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193c9e1a651eac01dfd606c0a68192926ada97a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getpass&lt;/code&gt; &amp;mdash; Portable password input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08cda361973b427905030d4fb94e9f6fdb76b159" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getrandom()&lt;/code&gt; relies on entropy gathered from device drivers and other sources of environmental noise. Unnecessarily reading large quantities of data will have a negative impact on other users of the &lt;code&gt;/dev/random&lt;/code&gt; and &lt;code&gt;/dev/urandom&lt;/code&gt; devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e52d76d6ea1c2fb40380ad816c1e0a27a08f56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gettext&lt;/code&gt; &amp;mdash; Multilingual internationalization services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f75c72498bd61d6eaf17109a8162d25bb88e68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;geturl()&lt;/code&gt; &amp;mdash; return the URL of the resource retrieved, commonly used to determine if a redirect was followed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b893b2256c650e826e77b7829f562b4261232f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;glob&lt;/code&gt; &amp;mdash; Unix style pathname pattern expansion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89dfcc1658dd65d64d11cd731efce1c63edb89b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;grp&lt;/code&gt; &amp;mdash; The group database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ef27da404c365f471f47a0f22a4082700e9912" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gzip&lt;/code&gt; &amp;mdash; Support for &lt;strong&gt;gzip&lt;/strong&gt; files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49170bf3ed47c185262b0fb8b72c11bf75d9c179" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handle&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a414ebe6e4dc01871389761a08b7d5e6ed31023d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handlers&lt;/code&gt; (optional). A list of ids of the handlers for this logger.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0e8f888876de15ee1d27d7906bf618591578b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hash&lt;/code&gt;: This can be a bool or &lt;code&gt;None&lt;/code&gt;. If true, this field is included in the generated &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method. If &lt;code&gt;None&lt;/code&gt; (the default), use the value of &lt;code&gt;compare&lt;/code&gt;: this would normally be the expected behavior. A field should be considered in the hash if it&amp;rsquo;s used for comparisons. Setting this value to anything other than &lt;code&gt;None&lt;/code&gt; is discouraged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f03f77ab060b86df90285078ae870ddc47911ccd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hashlib&lt;/code&gt; &amp;mdash; Secure hashes and message digests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e25838ec69a7351e77f674478925519d474923" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;heapq&lt;/code&gt; &amp;mdash; Heap queue algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95fc081d20c29692a5332ee03b6e0169543a0310" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hmac&lt;/code&gt; &amp;mdash; Keyed-Hashing for Message Authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea40ddc2c1053ba505db9c1d58547bd99d9460e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hook&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;traceback&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a33a9b7fe67df82ea20d10c84e080a54c9f54c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hook&lt;/code&gt;, &lt;code&gt;unraisable&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d089d3d76a4bb1616d3e1feaeb25b60b9d02fddf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;family&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d12bc0cc08ccde3d27d8c4dc1e75c8b9e9b5f1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html.entities&lt;/code&gt; &amp;mdash; Definitions of HTML general entities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0796ce3c4d1f4af7ad64de54bb22253df1a64b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html.parser&lt;/code&gt; &amp;mdash; Simple HTML and XHTML parser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae78e7911c437cef0187f92add226117d1496e70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html&lt;/code&gt; &amp;mdash; HyperText Markup Language support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a5019e9e8198a9ed7d167e02ef4f4eb4f84141" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http.client&lt;/code&gt; &amp;mdash; HTTP protocol client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1236d64358dc00c635305a63e9430d0a714fdf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http.cookiejar&lt;/code&gt; &amp;mdash; Cookie handling for HTTP clients</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31cf0116dec54524e99b69e997eb79b1b391c4f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http.cookies&lt;/code&gt; &amp;mdash; HTTP state management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33993e186065f1fa46c6e890f1a0d7af48dbc6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http.server&lt;/code&gt; &amp;mdash; HTTP servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d1b35bb6910efea04e6976a59e30d4cf68b51e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http&lt;/code&gt; &amp;mdash; HTTP modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ded9b54404df7e3ae31bef263462b92f9f903ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http_error_&amp;lt;type&amp;gt;()&lt;/code&gt; &amp;mdash; signal that the handler knows how to handle HTTP errors with HTTP error code &lt;em&gt;type&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d84300de051acef8db37bf50011d3317233ce51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imaplib&lt;/code&gt; &amp;mdash; IMAP4 protocol client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ca5c3ff1e32d33977f0fd38b92b6031002ebcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imghdr&lt;/code&gt; &amp;mdash; Determine the type of an image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e038371c8dd559f9853972441ade33e8bb18db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imp&lt;/code&gt; &amp;mdash; Access the import internals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e719565972e7dcbe705f07a7c2aacbc664d70e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;importlib.metadata&lt;/code&gt; is a library that provides for access to installed package metadata. Built in part on Python&amp;rsquo;s import system, this library intends to replace similar functionality in the &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html#entry-points&quot;&gt;entry point API&lt;/a&gt; and &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html#metadata-api&quot;&gt;metadata API&lt;/a&gt; of &lt;code&gt;pkg_resources&lt;/code&gt;. Along with &lt;code&gt;importlib.resources&lt;/code&gt; in &lt;a href=&quot;https://docs.python.org/3/library/importlib.html#module-importlib.resources&quot;&gt;Python 3.7 and newer&lt;/a&gt; (backported as &lt;a href=&quot;https://importlib-resources.readthedocs.io/en/latest/index.html&quot;&gt;importlib_resources&lt;/a&gt; for older versions of Python), this can eliminate the need to use the older and less efficient &lt;code&gt;pkg_resources&lt;/code&gt; package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c5a8e1317a073781afd262b83843cb08552496" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;importlib&lt;/code&gt; &amp;mdash; The implementation of &lt;code&gt;import&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053bd951dcbf30db1926d22ca97a8a21aedc284d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index&lt;/code&gt; raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when &lt;em&gt;x&lt;/em&gt; is not found in &lt;em&gt;s&lt;/em&gt;. Not all implementations support passing the additional arguments &lt;em&gt;i&lt;/em&gt; and &lt;em&gt;j&lt;/em&gt;. These arguments allow efficient searching of subsections of the sequence. Passing the extra arguments is roughly equivalent to using &lt;code&gt;s[i:j].index(x)&lt;/code&gt;, only without copying any data and with the returned index being relative to the start of the sequence rather than the start of the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b59ad68beed25c2cecba3a16569531410cf69ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;info()&lt;/code&gt; &amp;mdash; return the meta-information of the page, such as headers, in the form of an &lt;a href=&quot;email.parser#email.message_from_string&quot;&gt;&lt;code&gt;email.message_from_string()&lt;/code&gt;&lt;/a&gt; instance (see &lt;a href=&quot;http://jkorpela.fi/http.html&quot;&gt;Quick Reference to HTTP Headers&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b73a6eb20ad7de6fc87173bdcc3c2b98a38c37d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0494d49caeff1e643ed0ec699131e6fba46a7dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt;: If true (the default), a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method will be generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea1e28629d86349bcd471d632718493127d487f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt;: If true (the default), this field is included as a parameter to the generated &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="930b8dc0626cbfbb2e41cea7024ac1fdc7b1b760" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inline&lt;/code&gt; and &lt;code&gt;attachment&lt;/code&gt; are the only valid values in common use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4968834876922be6b49c0632c4d080b085fbf477" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inspect&lt;/code&gt; &amp;mdash; Inspect live objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7cb4f5c367df4d89decfb58e7c47ee817aadb6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt;, &lt;code&gt;i1&lt;/code&gt;, &lt;code&gt;i2&lt;/code&gt;, &lt;code&gt;i4&lt;/code&gt;, &lt;code&gt;i8&lt;/code&gt; or &lt;code&gt;biginteger&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fab0459bf8bd36aad31c3f30d57c2d11e0c9ead" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;io&lt;/code&gt; &amp;mdash; Core tools for working with streams</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86535f4fedd849135c30b10a68f69dac65e5896" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ipaddress&lt;/code&gt; &amp;mdash; IPv4/IPv6 manipulation library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5bbca05067167f750614c7fc4faef861ad2257" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;itertools&lt;/code&gt; &amp;mdash; Functions creating iterators for efficient looping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4819cd316d51226e8b444fd636bcd4a0c7d08d6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;j&lt;/code&gt;: Articles from peers are filed in the junk group instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44064800036f2111320e079df201907a5292f35c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;json&lt;/code&gt; &amp;mdash; JSON encoder and decoder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9b2a8283274a38541a3a33214009da4610c86f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;k * a&lt;/code&gt; and &lt;code&gt;a * k&lt;/code&gt; multiplication with scalar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479ad980986f8f26949ff56b3250df6f7043d920" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;, &lt;code&gt;file_name&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3849b9b17e89e8173802379061c6f73183070b4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;, &lt;code&gt;index&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568a338ca905c8a73054f88134b3df131ccb83a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;, &lt;code&gt;sub_key&lt;/code&gt;, &lt;code&gt;access&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f7fc919055ca883b74c33dd80136b24fc8a70bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;, &lt;code&gt;sub_key&lt;/code&gt;, &lt;code&gt;file_name&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4d5b14bd3d53226bf308a53775cd8022a54fa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;, &lt;code&gt;sub_key&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c742f88c588515f5ef8e573bc7ea97b855e2651f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;, &lt;code&gt;sub_key&lt;/code&gt;, &lt;code&gt;value_name&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b76e9bf8b22a566934d41ee5eea02b6daf8fbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dedb93dbb8ceeb91e4ffd49fe3e083188a59ee7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keyword&lt;/code&gt; &amp;mdash; Testing for Python keywords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae9dacefd03d20490d58d313eadaa9ba373365f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;kwds&lt;/code&gt; is a dictionary containing one pre-initialized key, &lt;code&gt;defects&lt;/code&gt;. &lt;code&gt;defects&lt;/code&gt; is an empty list. The parse method should append any detected defects to this list. On return, the &lt;code&gt;kwds&lt;/code&gt; dictionary &lt;em&gt;must&lt;/em&gt; contain values for at least the keys &lt;code&gt;decoded&lt;/code&gt; and &lt;code&gt;defects&lt;/code&gt;. &lt;code&gt;decoded&lt;/code&gt; should be the string value for the header (that is, the header value fully decoded to unicode). The parse method should assume that &lt;em&gt;string&lt;/em&gt; may contain content-transfer-encoded parts, but should correctly handle all valid unicode characters as well so that it can parse un-encoded header values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e3f817932e1b1d836ac776a8937b06b8c20cb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lc&lt;/code&gt;: Number of literal context bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36cc15ba1632e6a0b18265d38377f16fcc6c9752" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;len(view)&lt;/code&gt; is equal to the length of &lt;a href=&quot;#memoryview.tolist&quot;&gt;&lt;code&gt;tolist&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;view.ndim = 0&lt;/code&gt;, the length is 1. If &lt;code&gt;view.ndim = 1&lt;/code&gt;, the length is equal to the number of elements in the view. For higher dimensions, the length is equal to the length of the nested list representation of the view. The &lt;a href=&quot;#memoryview.itemsize&quot;&gt;&lt;code&gt;itemsize&lt;/code&gt;&lt;/a&gt; attribute will give you the number of bytes in a single element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20d16372c4cefc2155fe6e1370f6156c8abb574" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;level&lt;/code&gt; (optional). The level of the handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955ead5725dabc945c9017a9574ede70c0bb08af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;level&lt;/code&gt; (optional). The level of the logger.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96d4cfd1443b6fae1c3065011a086eae7571f62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lib2to3&lt;/code&gt; - 2to3&amp;rsquo;s library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0568be695bd9b2170093b293069373376357a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;library&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6fca047a03e8e50d0a4279faaa6ea9620e502f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;linecache&lt;/code&gt; &amp;mdash; Random access to text lines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c12d8fb677c042e4c1f204aac13b60bd052125" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locale&lt;/code&gt; &amp;mdash; Internationalization services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae27f3c275f0ac8fbc0028458e1e81127a4acfb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logging.config&lt;/code&gt; &amp;mdash; Logging configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f100f770bc24eddfa74f41b9e5e3c5fc7566dbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logging.handlers&lt;/code&gt; &amp;mdash; Logging handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792a31f8013992d82a559b7b542b0fbbebc3b48e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logging&lt;/code&gt; &amp;mdash; Logging facility for Python</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6210c59012d742b6ed60c2407de2b2fabb405bb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lp&lt;/code&gt;: Number of literal position bits. The sum &lt;code&gt;lc + lp&lt;/code&gt; must be at most 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad81279d25e367cd70abb8bc30f220f576cdbec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lzma&lt;/code&gt; &amp;mdash; Compression using the LZMA algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb0f25d74200ed1e0334a7126af0958c5b9f1fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;m.end('quote')&lt;/code&gt; (etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="695da2490dd970429cd51b7eaa78a2e3d7457bc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;m&lt;/code&gt;: The group is moderated and all postings must be approved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e5b1ec29f8b1a6f6196fa4a245c3e0c02edc6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;machine&lt;/code&gt; - hardware identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdba150064a973117636345341367983a8c32c23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mailbox&lt;/code&gt; &amp;mdash; Manipulate mailboxes in various formats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5dbe411aa1dd20775e2668b90093b6943a3105" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mailcap&lt;/code&gt; &amp;mdash; Mailcap file handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47e916981186e5cf5599aef3cd287983902accc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;main&lt;/code&gt; supports being used from the interactive interpreter by passing in the argument &lt;code&gt;exit=False&lt;/code&gt;. This displays the result on standard output without calling &lt;a href=&quot;sys#sys.exit&quot;&gt;&lt;code&gt;sys.exit()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a65c6e36c0f3b2af60b4265283c3684a4abc28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maintype&lt;/code&gt; &amp;ndash; Main MIME type of the non-&lt;em&gt;text&lt;/em&gt; part</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4dc8b874b5968af9c06806b075cb9514b74371" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;marshal&lt;/code&gt; &amp;mdash; Internal Python object serialization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800175d7e6580d2899120ad1e0ab6c80b1d815ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;math&lt;/code&gt; &amp;mdash; Mathematical functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f0e12df8f4f811c80883070acb89fa6001a137" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;metadata&lt;/code&gt;: This can be a mapping or None. None is treated as an empty dict. This value is wrapped in &lt;a href=&quot;types#types.MappingProxyType&quot;&gt;&lt;code&gt;MappingProxyType()&lt;/code&gt;&lt;/a&gt; to make it read-only, and exposed on the &lt;a href=&quot;#dataclasses.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; object. It is not used at all by Data Classes, and is provided as a third-party extension mechanism. Multiple third-parties can each have their own key, to use as a namespace in the metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02870214939398f55b9b5e1489ab3c520413cd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mf&lt;/code&gt;: What match finder to use &amp;ndash; &lt;code&gt;MF_HC3&lt;/code&gt;, &lt;code&gt;MF_HC4&lt;/code&gt;, &lt;code&gt;MF_BT2&lt;/code&gt;, &lt;code&gt;MF_BT3&lt;/code&gt;, or &lt;code&gt;MF_BT4&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d400ba0cfacb9f189bda312f3bd452ee7cc5ff74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mimetypes&lt;/code&gt; &amp;mdash; Map filenames to MIME types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3080fda03321329c4a90f94dc914b7ac2c6bcee0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mmap&lt;/code&gt; &amp;mdash; Memory-mapped file support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9f756e0e6af7b0452e5652d705ec23b745756c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mock&lt;/code&gt; already provides a feature to help with this, called speccing. If you use a class or instance as the &lt;code&gt;spec&lt;/code&gt; for a mock then you can only access attributes on the mock that exist on the real class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768eabab9ce29f7acb2be40dec84f2485a69b579" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; assumes discrete data and returns a single value. This is the standard treatment of the mode as commonly taught in schools:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb37378f27481730bcd890276dbff9af11492f7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt;: &lt;code&gt;MODE_FAST&lt;/code&gt; or &lt;code&gt;MODE_NORMAL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33ce84aa7059422ed60ff940338dcc63aea2487" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt;, &lt;code&gt;filename&lt;/code&gt;, &lt;code&gt;sys.path&lt;/code&gt;, &lt;code&gt;sys.meta_path&lt;/code&gt;, &lt;code&gt;sys.path_hooks&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db37f6703e03af48cf66d3b9f4e3dcbc7f262ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c0a53b8b0926db0d21d1bd6a71eb11d165859c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modulefinder&lt;/code&gt; &amp;mdash; Find modules used by a script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47dc14f20abe013ba283f896d092ae64e2936242" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modulo&lt;/code&gt; must be nonzero and have at most &amp;lsquo;precision&amp;rsquo; digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66045ce1217ce1870926bc6bcb8c415df4810e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msilib&lt;/code&gt; &amp;mdash; Read and write Microsoft Installer files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98345bb3c7f5cdc241a65db5c50a5c3818eaf40c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;msvcrt&lt;/code&gt; &amp;mdash; Useful routines from the MS VC++ runtime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ded59b54db0ecdbbca103cc22dd5c015b561842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;multiprocessing.shared_memory&lt;/code&gt; &amp;mdash; Provides shared memory for direct access across processes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b70968453eb1de834a04bc5398d65898c96a319" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;multiprocessing&lt;/code&gt; &amp;mdash; Process-based parallelism</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f1e9bb5182c723b3c4702b369bcb6739c08d8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt;: No local postings are allowed, only articles from peers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079e71a34aa9247c8da3acf9c0abc02e3da1e029" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: The name of the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343efc2d1a4e7e103ab33f37327bccc82373db5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;namespace&lt;/code&gt; - The &lt;a href=&quot;#argparse.Namespace&quot;&gt;&lt;code&gt;Namespace&lt;/code&gt;&lt;/a&gt; object that will be returned by &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt;. Most actions add an attribute to this object using &lt;a href=&quot;functions#setattr&quot;&gt;&lt;code&gt;setattr()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d66f072667bb55df0611f1d76f920fa1144347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nbytes == product(shape) * itemsize == len(m.tobytes())&lt;/code&gt;. This is the amount of space in bytes that the array would use in a contiguous representation. It is not necessarily equal to &lt;code&gt;len(m)&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fea316f497677c1e973a2f9059b1c1632bed25b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;netrc&lt;/code&gt; &amp;mdash; netrc file processing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d642445bc8fed133eac2f2cd6342b6745168e2e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nice_len&lt;/code&gt;: What should be considered a &amp;ldquo;nice length&amp;rdquo; for a match. This should be 273 or less.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ca6dd3564f4e549639c3a78012db080f7935a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nis&lt;/code&gt; &amp;mdash; Interface to Sun&amp;rsquo;s NIS (Yellow Pages)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2765672ef5583ec2ca31e5b581a1492316deac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nntplib&lt;/code&gt; &amp;mdash; NNTP protocol client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e5f2238522f34c4f95a3fc3994aba25e55fbea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node&lt;/code&gt; is an object of type &lt;code&gt;xml.dom.minidom.Document&lt;/code&gt;, &lt;code&gt;xml.dom.minidom.Element&lt;/code&gt; or &lt;code&gt;xml.dom.minidom.Text&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59ef9581b68ee8df291163aba4d63e59c637801" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nodename&lt;/code&gt; - name of machine on network (implementation-defined)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b91aae740079e93a2c7e5ca2d0ca3487bf6be8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;not&lt;/code&gt; has a lower priority than non-Boolean operators, so &lt;code&gt;not a == b&lt;/code&gt; is interpreted as &lt;code&gt;not (a == b)&lt;/code&gt;, and &lt;code&gt;a == not b&lt;/code&gt; is a syntax error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3d27d1c477ee9484c2f42a4b286c863fc83338" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ntpath&lt;/code&gt; for Windows paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9732aa29cbe1ff46efdde086041a34af736b45bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;numbers&lt;/code&gt; &amp;mdash; Numeric abstract base classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c41e6be6db1459df3cb09ac7096ce3deb39926" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;openssl_cafile&lt;/code&gt; - hard coded path to a cafile,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529ba27bd4d01c7caf9972b9508a28b8cc4f1fd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;openssl_cafile_env&lt;/code&gt; - OpenSSL&amp;rsquo;s environment key that points to a cafile,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314f603df9f440eaa05c388da786c3dec6b21acf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;openssl_capath&lt;/code&gt; - hard coded path to a capath directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0f3d2cc97824f1f9a4fcf41a428cddad815e44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;openssl_capath_env&lt;/code&gt; - OpenSSL&amp;rsquo;s environment key that points to a capath,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f8f4f5ec0ba00fa16661a4ea6f531f7d6ec1e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;operator&lt;/code&gt; &amp;mdash; Standard operators as functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93420ef3b261f118abcc2669060e1b8f9df4d98c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;option_string&lt;/code&gt; - The option string that was used to invoke this action. The &lt;code&gt;option_string&lt;/code&gt; argument is optional, and will be absent if the action is associated with a positional argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2631fd522f41eb8cc9a7d95d957e7aad7059fb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optparse&lt;/code&gt; &amp;mdash; Parser for command line options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bf8017cc200a849a329a43e44196b8a0942e0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;order&lt;/code&gt;: If true (the default is &lt;code&gt;False&lt;/code&gt;), &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__lt__&quot;&gt;&lt;code&gt;__lt__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__le__&quot;&gt;&lt;code&gt;__le__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__gt__&quot;&gt;&lt;code&gt;__gt__()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ge__&quot;&gt;&lt;code&gt;__ge__()&lt;/code&gt;&lt;/a&gt; methods will be generated. These compare the class as if it were a tuple of its fields, in order. Both instances in the comparison must be of the identical type. If &lt;code&gt;order&lt;/code&gt; is true and &lt;code&gt;eq&lt;/code&gt; is false, a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ec86cc2cdd479a21c517065e81fac400b4880e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;os.DirEntry&lt;/code&gt; instances are not intended to be stored in long-lived data structures; if you know the file metadata has changed or if a long time has elapsed since calling &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt;, call &lt;code&gt;os.stat(entry.path)&lt;/code&gt; to fetch up-to-date information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c997ef24647a430cabc19b6fa90ef260b392215" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;os.path&lt;/code&gt; &amp;mdash; Common pathname manipulations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61ce8e607060646a3fdc4b8a2d734bf21860e00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;os&lt;/code&gt; &amp;mdash; Miscellaneous operating system interfaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3205197a03576dbc305ae4ea2b1858ce31be9912" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ossaudiodev&lt;/code&gt; &amp;mdash; Access to OSS-compatible audio devices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2cef2ebb4a9513318dfaba3baa397b52b9239d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parser.clear()&lt;/code&gt; leaves it intact,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3811187aeb10d3d2e9016b873855bec6bcad986" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parser.get(section, option, **kwargs)&lt;/code&gt; - the second argument is &lt;strong&gt;not&lt;/strong&gt; a fallback value. Note however that the section-level &lt;code&gt;get()&lt;/code&gt; methods are compatible both with the mapping protocol and the classic configparser API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd12c687cff5269cb3ab355ddb04d990ef221d46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parser.items()&lt;/code&gt; is compatible with the mapping protocol (returns a list of &lt;em&gt;section_name&lt;/em&gt;, &lt;em&gt;section_proxy&lt;/em&gt; pairs including the DEFAULTSECT). However, this method can also be invoked with arguments: &lt;code&gt;parser.items(section, raw,
vars)&lt;/code&gt;. The latter call returns a list of &lt;em&gt;option&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt; pairs for a specified &lt;code&gt;section&lt;/code&gt;, with all interpolations expanded (unless &lt;code&gt;raw=True&lt;/code&gt; is provided).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9e4fb4ef35ceeae3bb72dd107bc114201cac6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parser.popitem()&lt;/code&gt; never returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034318fb979885b0efbae3abcbe8b9d6292dda10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parser&lt;/code&gt; &amp;mdash; Access Python parse trees</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c5b98ada9d0a084fb8c2e87ac749202af1fec0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parser&lt;/code&gt; - The ArgumentParser object which contains this action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e4402c6cf84b075d0646f0045f0db1733842b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parser['section']&lt;/code&gt; in particular returns a proxy for the section&amp;rsquo;s data in the parser. This means that the values are not copied but they are taken from the original parser on demand. What&amp;rsquo;s even more important is that when values are changed on a section proxy, they are actually mutated in the original parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e472f63f077c1f0b4aca934f7ae82f3fe5bda80b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;patch.dict(...)&lt;/code&gt;, &lt;code&gt;patch.multiple(...)&lt;/code&gt; and &lt;code&gt;patch.object(...)&lt;/code&gt; are available for alternate use-cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e1a9f4a30491b44c6e297234e8ecc2796f0fae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; should be an absolute path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43942fdffbe56d1fa42e3a791dafbbf17809b508" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pathlib&lt;/code&gt; &amp;mdash; Object-oriented filesystem paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc9cc2f41cc0a7eefbf8f9413168cd02e8550e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pathname&lt;/code&gt;, &lt;code&gt;recursive&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f0736271b8c4ef0e38832e5c439dc920b598e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pb&lt;/code&gt;: Number of position bits; must be at most 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff87ed0af900e518fa1a59c616d64d12c9b916b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pdb.py&lt;/code&gt; can also be invoked as a script to debug other scripts. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff56e3f8d9f5d3650cf0e9fc99a0c17d9cdb4adc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pdb&lt;/code&gt; &amp;mdash; The Python Debugger</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5065a1300b8fb1619e1e7b8a065caf54fd823a5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pickle&lt;/code&gt; &amp;mdash; Python object serialization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba0daac21482270652049221711ef1b648f6d2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pickletools&lt;/code&gt; &amp;mdash; Tools for pickle developers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415a23b81312764a0296f74ffa3c2b9f3bc35b7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pipes&lt;/code&gt; &amp;mdash; Interface to shell pipelines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865f4a0973f03d9d399bbd391e83cb1c77a66056" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pkgutil&lt;/code&gt; &amp;mdash; Package extension utility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3fba1a26739e4043bb4b3ea34d56406dc87842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;platform&lt;/code&gt; &amp;mdash; Access to underlying platform&amp;rsquo;s identifying data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8614b351adffaba8a8b531e837758eab46805aa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;platform&lt;/code&gt; value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4814dee4606e285d7e6db987251d6258829f6c4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;plistlib&lt;/code&gt; &amp;mdash; Generate and parse Mac OS X &lt;code&gt;.plist&lt;/code&gt; files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa08a6f3fceed8ce16fb349b2887974ccdc4ffe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pointer&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;, &lt;code&gt;offset&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f596d5bba3d2c33764d1e0dab25e80047d7d4354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;popen2.Popen3&lt;/code&gt; and &lt;code&gt;popen2.Popen4&lt;/code&gt; basically work as &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt;&lt;/a&gt;, except that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69cebd4e70be8503928dc2f74d5a5b2c24679146" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;poplib&lt;/code&gt; &amp;mdash; POP3 protocol client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbfd97c709a9715885fe870cbc43848c03f512d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port&lt;/code&gt;, &lt;code&gt;protocolname&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda61be3a4bdcdc5f66f661e0169af828a00084e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;posix&lt;/code&gt; &amp;mdash; The most common POSIX system calls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a8da1678be2e16caa0ea89640548eec948651f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;posixpath&lt;/code&gt; for UNIX-style paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9985e8ec3199ed4e7b4da3a1c027da5267f067" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pprint&lt;/code&gt; &amp;mdash; Data pretty printer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84688598f264c02c2a8fea2ec73fc98dba8094cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;preset&lt;/code&gt;: A compression preset to use as a source of default values for options that are not specified explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e949ce1a23b1ae7d35043df6ab88facab290cde5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;print()&lt;/code&gt; can also be used, but is not a debugger command &amp;mdash; this executes the Python &lt;a href=&quot;functions#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0cc38d5e4cc01b483c6120e14f6f505306f136a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;printf&lt;/code&gt;-style Bytes Formatting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e44ec7183788ca440893aac3d61c16a0d1c060" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;printf&lt;/code&gt;-style String Formatting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5ef86b171dd0a29fdb3c92a70b90e7a169b1cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prompt&lt;/code&gt; &amp;ndash; a String to be used after virtual environment is activated (defaults to &lt;code&gt;None&lt;/code&gt; which means directory name of the environment would be used).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0a648051799d62d0e8474b8f0d26e80f811935" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;propagate&lt;/code&gt; (optional). The propagation setting of the logger.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae822d505f33caa2744411801f8fdf413818ee65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pty&lt;/code&gt; &amp;mdash; Pseudo-terminal utilities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5b46dfb63a4b9a5f96af8642ba041a6f83c59a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pwd&lt;/code&gt; &amp;mdash; The password database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c74ba470e4722f18eb0b2fdc87be6305f304ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;py_compile&lt;/code&gt; &amp;mdash; Compile Python source files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5369208136176e89086db06f10a2fd8b8d18519" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pyclbr&lt;/code&gt; &amp;mdash; Python class browser support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f7ece301253ea81d4bc3d60dd5acaeba3d000d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pydoc&lt;/code&gt; &amp;mdash; Documentation generator and online help system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b047f9eab69f0e2bdfc6bab32db4985303fe2b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;qsort()&lt;/code&gt; must be called with a pointer to the data to sort, the number of items in the data array, the size of one item, and a pointer to the comparison function, the callback. The callback will then be called with two pointers to items, and it must return a negative integer if the first item is smaller than the second, a zero if they are equal, and a positive integer otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6d504dae37289ec8d668b32d4aecd686120dc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;queue&lt;/code&gt; &amp;mdash; A synchronized queue class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51702e08830aa491f4d9013e44d344a06153419d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;quopri&lt;/code&gt; &amp;mdash; Encode and decode MIME quoted-printable data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a1cd788b172678903fda74c6d6f849b84c91f81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;r'\.\pipe{PipeName}'&lt;/code&gt;. To use &lt;a href=&quot;#multiprocessing.connection.Client&quot;&gt;&lt;code&gt;Client()&lt;/code&gt;&lt;/a&gt; to connect to a named pipe on a remote computer called &lt;em&gt;ServerName&lt;/em&gt; one should use an address of the form &lt;code&gt;r'\&lt;em&gt;ServerName&lt;/em&gt;\pipe{PipeName}'&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e97461f6bb48d26fb325cba8b9e772be5f6e838" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;random&lt;/code&gt; &amp;mdash; Generate pseudo-random numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2cccd59ff6645127260dbb7a2865511fb33c16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ratio()&lt;/code&gt; returns a float in [0, 1], measuring the similarity of the sequences. As a rule of thumb, a &lt;code&gt;ratio()&lt;/code&gt; value over 0.6 means the sequences are close matches:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df16280357559aad20a426127e011c9cf600fa05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;re&lt;/code&gt; &amp;mdash; Regular expression operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f2dcd0d3084cf2653ea24d947931bb3ab305a4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;readinto&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af578bdb94e021771804112316d4432c619de35d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;readline&lt;/code&gt; &amp;mdash; GNU readline interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da12b8bfe76e77657354718029655beeeaaf8887" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;register_function()&lt;/code&gt; can also be used as a decorator. The previous server example can register functions in a decorator way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ae7eac25002eb86d941f9f2c0e132982858ecb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;release&lt;/code&gt; - operating system release</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6f29aa6e6d09b3c42b63d1ddc8928ad2e88db4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove()&lt;/code&gt; raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when &lt;em&gt;x&lt;/em&gt; is not found in &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6a58ba5a155f2bd0c98366ed6be0d759785ea0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repr&lt;/code&gt;: If true (the default), a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; method will be generated. The generated repr string will have the class name and the name and repr of each field, in the order they are defined in the class. Fields that are marked as being excluded from the repr are not included. For example: &lt;code&gt;InventoryItem(name='widget', unit_price=3.0, quantity_on_hand=10)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2091342b777ae18dae8f6d9d11bbff7a9b70686b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repr&lt;/code&gt;: If true (the default), this field is included in the string returned by the generated &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91cd3d7ef825f5904224059869b308a41fef172f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reprlib&lt;/code&gt; &amp;mdash; Alternate &lt;code&gt;repr()&lt;/code&gt; implementation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5a2a527d4427b67e2f7a98c70ad8ac9e74e41c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resource&lt;/code&gt; &amp;mdash; Resource usage information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc64711bfafbea943aa03695e7128e9aeb58ed3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;result&lt;/code&gt; is a list of strings, so let&amp;rsquo;s pretty-print it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006f3e80008b649bee0fe4341d0a40eacbfd5c56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;retryFactor&lt;/code&gt; (multiplier, defaulting to 2.0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3247f19604dfce9acbf2e9ab56350d29e9a9426" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;retryMax&lt;/code&gt; (maximum delay, defaulting to 30.0 seconds).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76e7521b1ccbd6a196858f1582316ada21b4883" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;retryStart&lt;/code&gt; (initial delay, defaulting to 1.0 seconds).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c018e95cdd97eeb377ef33772875425c5c00bfc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rlcompleter&lt;/code&gt; &amp;mdash; Completion function for GNU readline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79533c56f190dcc1974e43e8b4b81eb5f015190b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runpy&lt;/code&gt; &amp;mdash; Locating and executing Python modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8c5bbf0ca27d85883a789b708792bb61500d19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s * n&lt;/code&gt; or &lt;code&gt;n * s&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad804d337bb039defdcff62e3a26f3842a124d35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s.extend(t)&lt;/code&gt; or &lt;code&gt;s += t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70dd17eb07067852f34c45e61ed374123e19490" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scanf()&lt;/code&gt; Token</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec44f6f5a05d7a8c9d2e0604741d247542c1cca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sched&lt;/code&gt; &amp;mdash; Event scheduler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb7ea14011599238611bda3e858fde7142e93c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;secrets&lt;/code&gt; &amp;mdash; Generate secure random numbers for managing secrets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa492374376c569f0abb5579abe0e3c36717872" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;select&lt;/code&gt; &amp;mdash; Waiting for I/O completion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd291b95ecb3ad221ffb054030d3deed57391a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;selectors&lt;/code&gt; &amp;mdash; High-level I/O multiplexing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1807cde150af7f313990ba23249bfc08468ba7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt;, &lt;code&gt;address&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d98b120d39d836f25e09fcd2be25c708a8343a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt;, &lt;code&gt;buffer&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddf833f41441419e8d8c471a9334050f99bb2b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt;, &lt;code&gt;cmd&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1785eac67262d2ac2a2e705f49091c60dbf61d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt;, &lt;code&gt;data&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4eb945a1deb3b92fea3fe905dbc732f0e378d7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt;, &lt;code&gt;family&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c347cc6c0a2008c99a6c24b3e85474f39b2f543" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c453adb1b31ecc2c4c6dd8bfdec228f0e29e76ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;self&lt;/code&gt;, &lt;code&gt;line&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e02d37f196b6fffc82a7c0f63ff8ec5c80eba7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;send&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d097b1a5b455f77f48af0f8edc03c95840cf3fe6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;send_message&lt;/code&gt; serializes &lt;em&gt;msg&lt;/em&gt; using &lt;a href=&quot;email.generator#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;BytesGenerator&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;\r\n&lt;/code&gt; as the &lt;em&gt;linesep&lt;/em&gt;, and calls &lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt;&lt;code&gt;sendmail()&lt;/code&gt;&lt;/a&gt; to transmit the resulting message. Regardless of the values of &lt;em&gt;from_addr&lt;/em&gt; and &lt;em&gt;to_addrs&lt;/em&gt;, &lt;code&gt;send_message&lt;/code&gt; does not transmit any &lt;em&gt;Bcc&lt;/em&gt; or &lt;em&gt;Resent-Bcc&lt;/em&gt; headers that may appear in &lt;em&gt;msg&lt;/em&gt;. If any of the addresses in &lt;em&gt;from_addr&lt;/em&gt; and &lt;em&gt;to_addrs&lt;/em&gt; contain non-ASCII characters and the server does not advertise &lt;code&gt;SMTPUTF8&lt;/code&gt; support, an &lt;code&gt;SMTPNotSupported&lt;/code&gt; error is raised. Otherwise the &lt;code&gt;Message&lt;/code&gt; is serialized with a clone of its &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt; with the &lt;a href=&quot;email.policy#email.policy.EmailPolicy.utf8&quot;&gt;&lt;code&gt;utf8&lt;/code&gt;&lt;/a&gt; attribute set to &lt;code&gt;True&lt;/code&gt;, and &lt;code&gt;SMTPUTF8&lt;/code&gt; and &lt;code&gt;BODY=8BITMIME&lt;/code&gt; are added to &lt;em&gt;mail_options&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01adabb98ab6e6557481ba0fcedd10379209f06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;servicename&lt;/code&gt;, &lt;code&gt;protocolname&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b597ee73967a125a627ac6dacb28011341b1ba4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setfmt()&lt;/code&gt; to set the output format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0251a1550f66d8de088e79d8d3a3eb581f0559" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setrlimit&lt;/code&gt; may also raise &lt;a href=&quot;#resource.error&quot;&gt;&lt;code&gt;error&lt;/code&gt;&lt;/a&gt; if the underlying system call fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94673bf727750d63a84db62e93544ed360a8965" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shelve&lt;/code&gt; &amp;mdash; Python object persistence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ce6d8fd3d872857eb6e86032648c5ee58be6ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shlex&lt;/code&gt; &amp;mdash; Simple lexical analysis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151fb674bc6413b9c67df6844cbc24eda5ae353c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shutil&lt;/code&gt; &amp;mdash; High-level file operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a280dcd08694b82ab84e47a9a0934abf58cfbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;side_effect&lt;/code&gt; allows you to perform side effects, including raising an exception when a mock is called:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f02edb01df33e15b5fe90258796e8eb7da5a425" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;signal&lt;/code&gt; &amp;mdash; Set handlers for asynchronous events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="172b4b677840cc8324ddae64b29b5b76066afbe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;site&lt;/code&gt; &amp;mdash; Site-specific configuration hook</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50da3bd0d7cd936201da3ee1196ff88eaa8801e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sleep()&lt;/code&gt; always suspends the current task, allowing other tasks to run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f83ea6edded6b0abc0f5b7fc232bd9c927e2347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;smtpd&lt;/code&gt; &amp;mdash; SMTP Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc48b4dd1ea2ec1c6ae23477749e21895572dfc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;smtplib&lt;/code&gt; &amp;mdash; SMTP protocol client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37100c35e8f549bf50a3cf5330493c69be054bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sndhdr&lt;/code&gt; &amp;mdash; Determine type of sound file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec146811c821f63acf1da44e3f8d486082df1cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sock.setblocking(False)&lt;/code&gt; is equivalent to &lt;code&gt;sock.settimeout(0.0)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92edd9727ca5ac687843dacba284aca5c3baf231" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sock.setblocking(True)&lt;/code&gt; is equivalent to &lt;code&gt;sock.settimeout(None)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5525b984a70b59b6ada91b59e14205dffe470fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;socket&lt;/code&gt; &amp;mdash; Low-level networking interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b651b889e572369f3d2d248961fe215674bfe3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;socketserver.ForkingMixIn.server_close()&lt;/code&gt; waits until all child processes complete, except if &lt;code&gt;socketserver.ForkingMixIn.block_on_close&lt;/code&gt; attribute is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920a306dd45393bbd73fe8c0bd08bf66d019f4d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;socketserver.ThreadingMixIn.server_close()&lt;/code&gt; waits until all non-daemon threads complete, except if &lt;code&gt;socketserver.ThreadingMixIn.block_on_close&lt;/code&gt; attribute is false. Use daemonic threads by setting &lt;code&gt;ThreadingMixIn.daemon_threads&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; to not wait until threads complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9af15e6054f314e31383230355f61986d34db2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;socketserver&lt;/code&gt; &amp;mdash; A framework for network servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be688dc7afa956f8f396584b4474b0ee8662503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source&lt;/code&gt;, &lt;code&gt;filename&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91036538e22e62f5b8a8fe11772e669caa84c685" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;speed()&lt;/code&gt; to set the sample rate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a1db0b4b46be0a676ead2ad859807fe7aee90c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;spwd&lt;/code&gt; &amp;mdash; The shadow password database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65090dd6bb75c92d5a31a55659232f62d2861d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sqlite3&lt;/code&gt; &amp;mdash; DB-API 2.0 interface for SQLite databases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d581bfa5c8815cc4c238c75f67a110bc2b039a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;src&lt;/code&gt;, &lt;code&gt;dst&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98953aca80f1174202b1fe50332aee9591fffb27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ssize_t&lt;/code&gt; or &lt;code&gt;Py_ssize_t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2922a228d693e2c415a8df44e950725842755383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ssl&lt;/code&gt; &amp;mdash; TLS/SSL wrapper for socket objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361170780ce765f59cb9182fd25d9f4181835989" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start-ns&lt;/code&gt;: a tuple &lt;code&gt;(prefix, uri)&lt;/code&gt; naming the declared namespace mapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e33f8ef8398f20abab55a757d1f437cefad9460" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;: the current Element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974725e5d86bc49f9754d01b90715e1a699da699" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stat&lt;/code&gt; &amp;mdash; Interpreting &lt;code&gt;stat()&lt;/code&gt; results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e843e5230b69b5582c46cd9dace466f38710a0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;statistics&lt;/code&gt; &amp;mdash; Mathematical statistics functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c19198b446070ae8686a02adcbd42d77756abc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stdin&lt;/code&gt; is used for all interactive input (including calls to &lt;a href=&quot;functions#input&quot;&gt;&lt;code&gt;input()&lt;/code&gt;&lt;/a&gt;);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd302e0f91d3b6580f1b28e48c17cd36803e9b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stdin=PIPE&lt;/code&gt; and &lt;code&gt;stdout=PIPE&lt;/code&gt; must be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07b200ff205b6fb0533ace6133694d6db0f59a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stdout&lt;/code&gt; is used for the output of &lt;a href=&quot;functions#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-expression&quot;&gt;expression&lt;/a&gt; statements and for the prompts of &lt;a href=&quot;functions#input&quot;&gt;&lt;code&gt;input()&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c510cb3e510919491211d00bf3e89c72169814" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;str(uuid)&lt;/code&gt; returns a string in the form &lt;code&gt;12345678-1234-5678-1234-567812345678&lt;/code&gt; where the 32 hexadecimal digits represent the UUID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8134b79974d079ef840ea023bad9c7378a1de426" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;str&lt;/code&gt; is the built-in string &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-class&quot;&gt;class&lt;/a&gt;. For general information about strings, see &lt;a href=&quot;stdtypes#textseq&quot;&gt;Text Sequence Type &amp;mdash; str&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d90e3b513f8c6f8b3eff5f69d228c750985a090" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;str&lt;/code&gt; or &lt;code&gt;bytes&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e61393c0a849cc24befd885274100cd68a000c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strftime()&lt;/code&gt; and &lt;code&gt;strptime()&lt;/code&gt; Behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41148cc760e2bbde8641dcbad7719d194826247" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strftime()&lt;/code&gt; and &lt;code&gt;strptime()&lt;/code&gt; Format Codes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffcf422e329027c95d0a24889be1ae98547ef95b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strict_ns_domain&lt;/code&gt; is a collection of flags. Its value is constructed by or-ing together (for example, &lt;code&gt;DomainStrictNoDots|DomainStrictNonDomain&lt;/code&gt; means both flags are set).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8516383530b42d9f130a335f85429235e8500206" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; &amp;mdash; Common string operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468f7e4fa422e45b31c0c69acf4fb1e0a76721bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stringprep&lt;/code&gt; &amp;mdash; Internet String Preparation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d97b65419a342c9e5ceb53803bf176104c24bfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct&lt;/code&gt; &amp;mdash; Interpret bytes as packed binary data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6ac18b250c887d5f70490f170ac7dcc94d447f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subprocess&lt;/code&gt; &amp;mdash; Subprocess management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04811ef0e28d7560145ca3308a6f97b948d52230" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subtype&lt;/code&gt; &amp;ndash; Sub-MIME type of the non-&lt;em&gt;text&lt;/em&gt; part</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31ec4301229b4b18a789cac1e6cdcb22016a867" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sunau&lt;/code&gt; &amp;mdash; Read and write Sun AU files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174330a2e4be00f471fcb871f521a293bb9bec5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symbol&lt;/code&gt; &amp;mdash; Constants used with Python parse trees</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a4e47e8c0a295a11473b632fde8f83de2d1c90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symlinks&lt;/code&gt; &amp;ndash; a Boolean value indicating whether to attempt to symlink the Python binary rather than copying.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c35bc140a5254bb1838f5c24b5706b6d5e33596" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;symtable&lt;/code&gt; &amp;mdash; Access to the compiler&amp;rsquo;s symbol tables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1cf909c8cf73dd703fe714b8565769abb239424" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sys.displayhook&lt;/code&gt; is called on the result of evaluating an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-expression&quot;&gt;expression&lt;/a&gt; entered in an interactive Python session. The display of these values can be customized by assigning another one-argument function to &lt;code&gt;sys.displayhook&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e27835f07a9727a0480e264dd20c4995641256" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sys&lt;/code&gt; &amp;mdash; System-specific parameters and functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87202b0b7e52b7a1ef5c8cb16b75901d961c383a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sysconfig&lt;/code&gt; &amp;mdash; Provide access to Python&amp;rsquo;s configuration information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce35409267d178a3355163ca5eb42fe42331980d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;syslog&lt;/code&gt; &amp;mdash; Unix syslog library routines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a8f909a1e8676971f96b6114303a2a0addf2ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sysname&lt;/code&gt; - operating system name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b23476cd87cd5f5fdb8b69cb81bc5f88dc6eaad3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;system_site_packages&lt;/code&gt; &amp;ndash; a Boolean value indicating that the system Python site-packages should be available to the environment (defaults to &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1fb94f13fd49b02cccd9ef0a6b7000dd498cd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t.tzinfo.utcoffset(None)&lt;/code&gt; does not return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3f3019c710b11fb5a98abc7fe4c8d8fcc76f5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t.tzinfo&lt;/code&gt; is not &lt;code&gt;None&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6345e4b39537de9b9491609f62e728db48f273c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t1 = t2 // i&lt;/code&gt; or &lt;code&gt;t1 = t2 // t3&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2283b4da2c4f0cd7bea3b9aee5bcd7f3f2ac3857" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tabnanny&lt;/code&gt; &amp;mdash; Detection of ambiguous indentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c69cb35bdd260b35b286f94819dfa7342ef2d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tarfile&lt;/code&gt; &amp;mdash; Read and write tar archive files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e396a840f7b6d3325a1578f53a1d4058db111b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tee&lt;/code&gt; iterators are not threadsafe. A &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; may be raised when using simultaneously iterators returned by the same &lt;a href=&quot;#itertools.tee&quot;&gt;&lt;code&gt;tee()&lt;/code&gt;&lt;/a&gt; call, even if the original &lt;em&gt;iterable&lt;/em&gt; is threadsafe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8862aba2b396a54619bbba227e4a4a8ed9e9d574" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;telnetlib&lt;/code&gt; &amp;mdash; Telnet client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010beb5cfbcdc9c986d89bba15fa725ff0db45de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tempfile&lt;/code&gt; &amp;mdash; Generate temporary files and directories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb96181c55667085b343e1ea6e72d62654c487a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;termios&lt;/code&gt; &amp;mdash; POSIX style tty control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb8f4580606f9d0abcf8de00f0f9fc588ddd9fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test.support.script_helper&lt;/code&gt; &amp;mdash; Utilities for the Python execution tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a02105dbefb91b12347c7f7e0e9576054b1ff8d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test.support&lt;/code&gt; &amp;mdash; Utilities for the Python test suite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7dc34e898a66a367d69219eeb6a17f7a79e2075" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt; &amp;mdash; Regression tests package for Python</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971b58467402fc405dd4493ed1097443be7464bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;textwrap&lt;/code&gt; &amp;mdash; Text wrapping and filling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69b4563879b9dfb7c5a36f7d339258bb5b6f4c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;threading&lt;/code&gt; &amp;mdash; Thread-based parallelism</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f41dac984548e51e64e7eb92a17ad0dbd69ef4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;time&lt;/code&gt; &amp;mdash; Time access and conversions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ceca89b1412460475bbaccaeaed97e19383f3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;time&lt;/code&gt; has the same format as &lt;code&gt;offset&lt;/code&gt; except that no leading sign (&amp;lsquo;-&amp;lsquo; or &amp;lsquo;+&amp;rsquo;) is allowed. The default, if time is not given, is 02:00:00.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f248606b93d9daaf9ef5d77392f9e8cc210f34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timedelta.seconds&lt;/code&gt; and &lt;code&gt;timedelta.microseconds&lt;/code&gt; are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f77fef27d62361a1799b12a11af1cffaf5136185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeit&lt;/code&gt; &amp;mdash; Measure execution time of small code snippets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f394c7fd346c82e534d81fe65755be0d8ae95c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tkinter.scrolledtext&lt;/code&gt; &amp;mdash; Scrolled Text Widget</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40177f8c65499ca67a4fdbc1b150f99571bf0664" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tkinter.tix&lt;/code&gt; &amp;mdash; Extension widgets for Tk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf2edf3c1b7d1f572ab5cc1ae92b07b5e8fa9cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tkinter.ttk&lt;/code&gt; &amp;mdash; Tk themed widgets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1e1b4deee53e66410400c4be0dfce8ad89f5c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tkinter/__init__.py&lt;/code&gt; is a last resort for most, but can be a good place to go when nothing else makes sense.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34adfc1245fa3d6fa240b31227af084736237bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tkinter&lt;/code&gt; &amp;mdash; Python interface to Tcl/Tk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce584e7e5518c7c04a001d7f50269546d98aa456" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;token&lt;/code&gt; &amp;mdash; Constants used with Python parse trees</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a86574087e288656f07a8eb05044a8c8f5b291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tokenize&lt;/code&gt; &amp;mdash; Tokenizer for Python source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a64f24583d65d8d0e3ccbe237de017de21bcaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trace&lt;/code&gt; &amp;mdash; Trace or track Python statement execution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492c5be9b59cd56932c46e8e3fcb612e023b9138" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;traceback&lt;/code&gt; &amp;mdash; Print or retrieve a stack traceback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab4db9d3fc90622d8714a9e44eb9cf826c8d693" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tracemalloc&lt;/code&gt; &amp;mdash; Trace memory allocations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5aeae2a9e93ad501043de4ab0b3d5b866d2bbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tracer()&lt;/code&gt;, delay, &lt;code&gt;update()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea49e785d6a336c11b1fa2189bad52c20cb476f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ttk.Widget&lt;/code&gt; defines standard options and methods supported by Tk themed widgets and is not supposed to be directly instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51e2d4e1c6bae18c9108a20adcbc39cf3492016" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tty&lt;/code&gt; &amp;mdash; Terminal control functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5dae09b14ae63ee6156d92e509fbd05831a9daf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;turtle&lt;/code&gt; &amp;mdash; Turtle graphics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1702ad1194f9a303a14743290f1b4d06f2c61445" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; &amp;ndash; Full MIME type of the non-&lt;em&gt;text&lt;/em&gt; part</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1feeb041c7da35209005a4b872bd325dff6c711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt;: The type of the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb2c13256732a4b1778c6c446e41950c37e7017e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type=&lt;/code&gt; can take any callable that takes a single string argument and returns the converted value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da1ad2b47535c4a96d2bbfbc727dcb3b2963ab7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typecode&lt;/code&gt;, &lt;code&gt;initializer&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5474069c0c72ded04275a9b4fd85ba290212a692" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;types&lt;/code&gt; &amp;mdash; Dynamic type creation and names for built-in types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d96241e1045e6627fdb62324dff599590ed994f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typing&lt;/code&gt; &amp;mdash; Support for type hints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27b55f58278fbb3df36227e8541eeb26111115b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uncollectable&lt;/code&gt; is the total number of objects which were found to be uncollectable (and were therefore moved to the &lt;a href=&quot;#gc.garbage&quot;&gt;&lt;code&gt;garbage&lt;/code&gt;&lt;/a&gt; list) inside this generation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa21141acb2419cbfe53889a0078c7cd79304b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unicodedata&lt;/code&gt; &amp;mdash; Unicode Database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7466b6bc52eb96c8f6c6b4d7a411dc2866a7d55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unittest.mock&lt;/code&gt; &amp;mdash; getting started</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44da8b2dc06242a039f923b7e1ef1e8dfe8d8260" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unittest.mock&lt;/code&gt; &amp;mdash; mock object library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c367943278bd7e60592e7477c771f7059f860c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unittest&lt;/code&gt; &amp;mdash; Unit testing framework</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f8cfb9b738411665582642ec6607f5844218d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsafe_hash&lt;/code&gt;: If &lt;code&gt;False&lt;/code&gt; (the default), a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; method is generated according to how &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;frozen&lt;/code&gt; are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a5562d4c698add05bd9e459e2d7c1e8abf2c6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsigned __int64&lt;/code&gt; or &lt;code&gt;unsigned long long&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebdad96e0d04906041c67d314640942a5132173f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;upgrade&lt;/code&gt; &amp;ndash; a Boolean value which, if true, will upgrade an existing environment with the running Python - for use when that Python has been upgraded in-place (defaults to &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13cd748d86fa9b5ba4be0823ea7910bf28dd8512" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urllib.error&lt;/code&gt; &amp;mdash; Exception classes raised by urllib.request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d9b610460a53b18406a638a61773e8d3ab29ee9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urllib.parse&lt;/code&gt; &amp;mdash; Parse URLs into components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4b399b53ad2e20e230e70d66a2ca485bf5e6be9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urllib.request&lt;/code&gt; &amp;mdash; Extensible library for opening URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f78301531be582a0b488349da0001152df6845" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urllib.response&lt;/code&gt; &amp;mdash; Response classes used by urllib</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd631b9295157cf8c4c3b36e8afe1b70e5993ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urllib.robotparser&lt;/code&gt; &amp;mdash; Parser for robots.txt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ebd980b9a685f4a2c9f614ceccb725221f231b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urllib&lt;/code&gt; &amp;mdash; URL handling modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b538ee60646c26a40922d7f6e649bec109deab3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urllib&lt;/code&gt; is a package that collects several modules for working with URLs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f612661f450859be8af7f867cae6378025c7a8c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;user&lt;/code&gt; - user time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3b4723706c378c4dc52a044e4d7c15e4ffe7b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;utcoffset()&lt;/code&gt; is transformed into a string of the form &lt;code&gt;&amp;plusmn;HHMM[SS[.ffffff]]&lt;/code&gt;, where &lt;code&gt;HH&lt;/code&gt; is a 2-digit string giving the number of UTC offset hours, &lt;code&gt;MM&lt;/code&gt; is a 2-digit string giving the number of UTC offset minutes, &lt;code&gt;SS&lt;/code&gt; is a 2-digit string giving the number of UTC offset seconds and &lt;code&gt;ffffff&lt;/code&gt; is a 6-digit string giving the number of UTC offset microseconds. The &lt;code&gt;ffffff&lt;/code&gt; part is omitted when the offset is a whole number of seconds and both the &lt;code&gt;ffffff&lt;/code&gt; and the &lt;code&gt;SS&lt;/code&gt; part is omitted when the offset is a whole number of minutes. For example, if &lt;code&gt;utcoffset()&lt;/code&gt; returns &lt;code&gt;timedelta(hours=-3, minutes=-30)&lt;/code&gt;, &lt;code&gt;%z&lt;/code&gt; is replaced with the string &lt;code&gt;'-0330'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7c1f2a5f3df2e05d21da90a02a4d0c8dadb646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uu&lt;/code&gt; &amp;mdash; Encode and decode uuencode files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33cfdfc758d03f084c5d8966eccba13b068e7736" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uuid&lt;/code&gt; &amp;mdash; UUID objects according to &lt;strong&gt;RFC 4122&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68bec8eb060802496093aa7c9a049129544fed6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;values&lt;/code&gt; - The associated command-line arguments, with any type conversions applied. Type conversions are specified with the &lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt; keyword argument to &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474c8eb674d502fa8fa0f4ade3b68adc728680a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;venv&lt;/code&gt; &amp;mdash; Creation of virtual environments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c8df304d06723365fc6bca305fbdfe774775e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;version&lt;/code&gt; - operating system version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8a17baff6b3cc73a05991bf63be60fd1f32558" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wait()&lt;/code&gt; schedules coroutines as Tasks automatically and later returns those implicitly created Task objects in &lt;code&gt;(done, pending)&lt;/code&gt; sets. Therefore the following code won&amp;rsquo;t work as expected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7589c49ede8adab6cc68e24e3da434dd39dae64a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;walk&lt;/code&gt; iterates over the subparts of any part where &lt;a href=&quot;#email.message.EmailMessage.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;True&lt;/code&gt;, even though &lt;code&gt;msg.get_content_maintype() == 'multipart'&lt;/code&gt; may return &lt;code&gt;False&lt;/code&gt;. We can see this in our example by making use of the &lt;code&gt;_structure&lt;/code&gt; debug helper function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4bcc3059123c057bc3c32e8bb84a8d7d44505d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;walk&lt;/code&gt; iterates over the subparts of any part where &lt;a href=&quot;#email.message.Message.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;True&lt;/code&gt;, even though &lt;code&gt;msg.get_content_maintype() == 'multipart'&lt;/code&gt; may return &lt;code&gt;False&lt;/code&gt;. We can see this in our example by making use of the &lt;code&gt;_structure&lt;/code&gt; debug helper function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68bd4453b0591b9a21eb565ee941d685432f0848" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;warn&lt;/code&gt; or &lt;code&gt;warning&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749d7cd07b3f23d268ebcc559dd2bdde872f53ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;warnings&lt;/code&gt; &amp;mdash; Warning control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d039c2249756e2b54440fbffd7baf644711324a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wave&lt;/code&gt; &amp;mdash; Read and write WAV files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b632bbf871e525d9358bab662a5638ba079dfcc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wchar_t *&lt;/code&gt; (NUL terminated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18794f2b432c54d807f1dc2c2c3c53ac3249f0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;weakref&lt;/code&gt; &amp;mdash; Weak references</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36f4f4704c5297c5e3d862ff31396424970696a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;webbrowser&lt;/code&gt; &amp;mdash; Convenient Web-browser controller</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e177187af0951e85d5c8fe6b1a8f6ff7cfdfa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;winreg&lt;/code&gt; &amp;mdash; Windows registry access</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d414880364f2815cc7541927f62d31a80dcad626" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;winsound&lt;/code&gt; &amp;mdash; Sound-playing interface for Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411ee440350ce571255063704be59af5f5615668" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;with_pip&lt;/code&gt; &amp;ndash; a Boolean value which, if true, ensures pip is installed in the virtual environment. This uses &lt;a href=&quot;ensurepip#module-ensurepip&quot;&gt;&lt;code&gt;ensurepip&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;--default-pip&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a091c5b32911d51aa2d0307008be1d010075b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;with_prefixlen&lt;/code&gt; and &lt;code&gt;compressed&lt;/code&gt; are always the same as &lt;code&gt;str(network)&lt;/code&gt;. &lt;code&gt;exploded&lt;/code&gt; uses the exploded form the network address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227260faa470b48e40fec0a49d9c0f38509f1746" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;wsgiref&lt;/code&gt; &amp;mdash; WSGI Utilities and Reference Implementation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf405f59359745ec66621f63ffa688b585a13b2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt;: No local postings, and articles from peers are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cadeaf41f383247a963e06e859ac7f19c740bb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xdrlib&lt;/code&gt; &amp;mdash; Encode and decode XDR data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ef2afb74559d1bd4bf48e1a46428a1da260c03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xml.dom.minidom&lt;/code&gt; &amp;mdash; Minimal DOM implementation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5778bfacf19cd2cec65af0527fa6e2c081bf3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xml.dom.pulldom&lt;/code&gt; &amp;mdash; Support for building partial DOM trees</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e40e8e593717d60902c356ec31aa9476adbd54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xml.dom&lt;/code&gt; &amp;mdash; The Document Object Model API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b643921c8aabd21748d9d651d4f092eadd32d7cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xml.etree.ElementTree&lt;/code&gt; &amp;mdash; The ElementTree XML API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd72e1dc00a7bc21f48f6b5a9a07610d4d12393" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xml.parsers.expat&lt;/code&gt; &amp;mdash; Fast XML parsing using Expat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6cc70865398609bd8ae7e2aa80092369f95651" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xml.sax.handler&lt;/code&gt; &amp;mdash; Base classes for SAX handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b86e6bc41d8f02d6684ee09e127803ff56e253e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xml.sax.saxutils&lt;/code&gt; &amp;mdash; SAX Utilities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6ce736a853749049d1d945ecdda425a2d5d486" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xml.sax.xmlreader&lt;/code&gt; &amp;mdash; Interface for XML parsers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590ee3047874390709270b4b864beed438d71d39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xml.sax&lt;/code&gt; &amp;mdash; Support for SAX2 parsers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc5243eaddf755adb5119e0b2621000c825867b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlparser&lt;/code&gt; objects have the following attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb9a3f81772b7833ca9f422d42a8932abd7e15e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlparser&lt;/code&gt; objects have the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a131450e23bb293609a4d4db7d03d0893a62b792" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlrpc.client&lt;/code&gt; &amp;mdash; XML-RPC client access</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d51cc530d1ac0143c75c707a5b214b375de63a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlrpc.server&lt;/code&gt; &amp;mdash; Basic XML-RPC servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6dfc4e590b269e7c67cb973708b477f9046aa0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlrpc&lt;/code&gt; &amp;mdash; XMLRPC server and client modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0640432bf9123c1512e82f722ce1188728b8b14f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlrpc&lt;/code&gt; is a package that collects server and client modules implementing XML-RPC. The modules are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2dd2cc03d094db4ba4eb1ef8aa1e18422a024a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xmlrpclib&lt;/code&gt; doesn&amp;rsquo;t expand external entities and omits them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342fbf5ab72e7874c49c3ac1df3f37c6cd3cc936" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt; must be nonnegative</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0501b678bae2a9d3da88dd3f63645f43f8e1af50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt;: Local postings and articles from peers are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a060ea877cf61a2da73a11bc9dafc0d316e446" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;your_time_func&lt;/code&gt; should return a single number, or a list of numbers whose sum is the current time (like what &lt;a href=&quot;os#os.times&quot;&gt;&lt;code&gt;os.times()&lt;/code&gt;&lt;/a&gt; returns). If the function returns a single time number, or the list of returned numbers has length 2, then you will get an especially fast version of the dispatch routine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f7051b2517b59143b3913309bc7e26ac8be2a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;your_time_func&lt;/code&gt; should return a single number. If it returns integers, you can also invoke the class constructor with a second argument specifying the real duration of one unit of time. For example, if &lt;code&gt;your_integer_time_func&lt;/code&gt; returns times measured in thousands of seconds, you would construct the &lt;code&gt;Profile&lt;/code&gt; instance as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a24a57e8e84def95ed956f648ffbfe9fe9969d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zipapp&lt;/code&gt; &amp;mdash; Manage executable Python zip archives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4206860b0275e92e258935b8138c644b2c5edec0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zipfile&lt;/code&gt; &amp;mdash; Work with ZIP archives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141060e1e296ca4539c5589407efb0dc2b378b97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zipimport&lt;/code&gt; &amp;mdash; Import modules from Zip archives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b561e59d8f0f4343f433bdcbc78033d463662a3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zlib&lt;/code&gt; &amp;mdash; Compression compatible with &lt;strong&gt;gzip&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821b0aa8d95f042ec22109940100faa0851ceaf0" translate="yes" xml:space="preserve">
          <source>&lt;em id=&quot;index-6&quot;&gt;newline&lt;/em&gt; controls how &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;universal newlines&lt;/a&gt; mode works (it only applies to text mode). It can be &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;''&lt;/code&gt;, &lt;code&gt;'\n'&lt;/code&gt;, &lt;code&gt;'\r'&lt;/code&gt;, and &lt;code&gt;'\r\n'&lt;/code&gt;. It works as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb8c465591baa9537e8dc4f5551d51338cb6efb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Alexandr Sokolovskiy&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85c544b6713c787d0292c342b6673beda4828ef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;An Advanced 4.3BSD Interprocess Communication Tutorial&lt;/em&gt;, by Samuel J. Leffler et al,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b296588cffd17b7ebc3fbe5f30c173448ce1df" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;An Introductory 4.3BSD Interprocess Communication Tutorial&lt;/em&gt;, by Stuart Sechrest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e079d27ee60660bf4e7f0e036d3c01e8c07ea5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CompilerFlag&lt;/em&gt; is the (bitfield) flag that should be passed in the fourth argument to the built-in function &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt; to enable the feature in dynamically compiled code. This flag is stored in the &lt;code&gt;compiler_flag&lt;/code&gt; attribute on &lt;code&gt;_Feature&lt;/code&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beefd2449cdeea25de4ac44a134684d9280b6e2e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Deterministic profiling&lt;/em&gt; is meant to reflect the fact that all &lt;em&gt;function call&lt;/em&gt;, &lt;em&gt;function return&lt;/em&gt;, and &lt;em&gt;exception&lt;/em&gt; events are monitored, and precise timings are made for the intervals between these events (during which time the user&amp;rsquo;s code is executing). In contrast, &lt;em&gt;statistical profiling&lt;/em&gt; (which is not done by this module) randomly samples the effective instruction pointer, and deduces where time is being spent. The latter technique traditionally involves less overhead (as the code does not need to be instrumented), but provides only relative indications of where time is being spent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d411a9e909ee803310360ceb3acb52bd2151707" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Errors&lt;/em&gt; may be given to set the desired error handling scheme. The default error handler is &lt;code&gt;'strict'&lt;/code&gt; meaning that decoding errors raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; (or a more codec specific subclass, such as &lt;a href=&quot;exceptions#UnicodeDecodeError&quot;&gt;&lt;code&gt;UnicodeDecodeError&lt;/code&gt;&lt;/a&gt;). Refer to &lt;a href=&quot;#codec-base-classes&quot;&gt;Codec Base Classes&lt;/a&gt; for more information on codec error handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef02afa8cc3aeb7b6d8dd5c02558e1322c1702ba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Errors&lt;/em&gt; may be given to set the desired error handling scheme. The default error handler is &lt;code&gt;'strict'&lt;/code&gt; meaning that encoding errors raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; (or a more codec specific subclass, such as &lt;a href=&quot;exceptions#UnicodeEncodeError&quot;&gt;&lt;code&gt;UnicodeEncodeError&lt;/code&gt;&lt;/a&gt;). Refer to &lt;a href=&quot;#codec-base-classes&quot;&gt;Codec Base Classes&lt;/a&gt; for more information on codec error handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3abd2633374bb70da27fbe846067852cf8a03d99" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Future&lt;/em&gt; objects are used to bridge &lt;strong&gt;low-level callback-based code&lt;/strong&gt; with high-level async/await code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb24f9a5195516a8b9c806f129b749c034d91d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Incomplete Types&lt;/em&gt; are structures, unions or arrays whose members are not yet specified. In C, they are specified by forward declarations, which are defined later:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1e54295789c6d4ae642e287a2fe0f84232e923" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;KEYWORD_ONLY&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;KEYWORD_ONLY&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cae8b54777d248e24aed55f40c13db7e08b47a70" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MandatoryRelease&lt;/em&gt; may also be &lt;code&gt;None&lt;/code&gt;, meaning that a planned feature got dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa904747f892753bd9f6f1a5c35966c1ab2035a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;OptionalRelease&lt;/em&gt; records the first release in which the feature was accepted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b83e891d15815225a77b89464edaafae1a81795" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;POSITIONAL_ONLY&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;POSITIONAL_ONLY&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c8f2f9de0a77efb6e0afedc5e82bc7cccb5350b1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;POSITIONAL_OR_KEYWORD&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;POSITIONAL_OR_KEYWORD&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f2eafe1a1ebf1735931ce71588e7ab05be7736db" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Polar coordinates&lt;/em&gt; give an alternative way to represent a complex number. In polar coordinates, a complex number &lt;em&gt;z&lt;/em&gt; is defined by the modulus &lt;em&gt;r&lt;/em&gt; and the phase angle &lt;em&gt;phi&lt;/em&gt;. The modulus &lt;em&gt;r&lt;/em&gt; is the distance from &lt;em&gt;z&lt;/em&gt; to the origin, while the phase &lt;em&gt;phi&lt;/em&gt; is the counterclockwise angle, measured in radians, from the positive x-axis to the line segment that joins the origin to &lt;em&gt;z&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86761531f31ad11ca43f3455077878d64fdf98e7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SSLv2&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;SSLv2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a9dcc63c5acda946e46c9bc9728fb9c5e6b2089e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SSLv3&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;SSLv3&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="45aebfa5f3d312a3b7531768b9b6a9433f37e266" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Salted hashing&lt;/em&gt; (or just hashing) with BLAKE2 or any other general-purpose cryptographic hash function, such as SHA-256, is not suitable for hashing passwords. See &lt;a href=&quot;https://blake2.net/#qa&quot;&gt;BLAKE2 FAQ&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ddf1953df2339542c00bd4a510d94c690d8745d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Server&lt;/em&gt; objects are asynchronous context managers. When used in an &lt;code&gt;async with&lt;/code&gt; statement, it&amp;rsquo;s guaranteed that the Server object is closed and not accepting new connections when the &lt;code&gt;async with&lt;/code&gt; statement is completed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb163b1f469f9f05eee4643bf48b9bcd718bcd2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TLS&lt;/em&gt; (&lt;em&gt;SSLv23&lt;/em&gt;) &lt;a href=&quot;#id9&quot; id=&quot;id4&quot;&gt;3&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d087c9a3674faf0d372d392ab89fcc9244de5a1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TLSv1.1&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;TLSv1.1&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1f4dcf782a975949a26bc511f159526fd65d1f10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TLSv1.2&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;TLSv1.2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f3224fc7f021eec889253746f0fa0bfe35dcdd6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TLSv1&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;TLSv1&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4cb45e221299bfa502ec642cec5d6a59491735ac" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Tasks&lt;/em&gt; are used to schedule coroutines &lt;em&gt;concurrently&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795b141759871709f69c8b195f8cc5c19dc29478" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This method can not delete keys with subkeys.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7e62d3ec6ff8155b27747a93a118f64e8b0a0c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Token&lt;/em&gt; objects are returned by the &lt;a href=&quot;#contextvars.ContextVar.set&quot;&gt;&lt;code&gt;ContextVar.set()&lt;/code&gt;&lt;/a&gt; method. They can be passed to the &lt;a href=&quot;#contextvars.ContextVar.reset&quot;&gt;&lt;code&gt;ContextVar.reset()&lt;/code&gt;&lt;/a&gt; method to revert the value of the variable to what it was before the corresponding &lt;em&gt;set&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69249b2d9b835636ad495bffa53d6fd0f5b3632f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;VAR_KEYWORD&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;VAR_KEYWORD&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="131380ba96aabc467e48912541aba1e33e35c871" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;VAR_POSITIONAL&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;VAR_POSITIONAL&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7f928ea26cccc9feda8b5b3a30d5dce259f1db94" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;_maintype&lt;/em&gt; is the &lt;em&gt;Content-Type&lt;/em&gt; major type (e.g. &lt;em&gt;text&lt;/em&gt; or &lt;em&gt;image&lt;/em&gt;), and &lt;em&gt;_subtype&lt;/em&gt; is the &lt;em&gt;Content-Type&lt;/em&gt; minor type (e.g. &lt;em&gt;plain&lt;/em&gt; or &lt;em&gt;gif&lt;/em&gt;). &lt;em&gt;_params&lt;/em&gt; is a parameter key/value dictionary and is passed directly to &lt;a href=&quot;email.compat32-message#email.message.Message.add_header&quot;&gt;&lt;code&gt;Message.add_header&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa66ed169296bd6100ed2c4b70aa42b88635b3a9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;_params&lt;/em&gt; are passed straight through to the &lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt;&lt;code&gt;MIMEBase&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bfed3304adb6d44a24eb47fe4bbcd40f02def12" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;_params&lt;/em&gt; are passed straight through to the base class constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b8264f15e14d37c9f47f078d80f57973b997b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;_subparts&lt;/em&gt; is a sequence of initial subparts for the payload. It must be possible to convert this sequence to a list. You can always attach new subparts to the message by using the &lt;a href=&quot;email.compat32-message#email.message.Message.attach&quot;&gt;&lt;code&gt;Message.attach&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c80ca7c5a538c8c31471e8766d750770121825" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; have the same elements in the same number, regardless of their order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3544481cf283b036deb56d3fd50ef9a2c43b9f3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;abs_tol&lt;/em&gt; is the minimum absolute tolerance &amp;ndash; useful for comparisons near zero. &lt;em&gt;abs_tol&lt;/em&gt; must be at least zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381a809177a8c1ce23594dae4952225279726462" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;access&lt;/em&gt; is an integer that specifies an access mask that describes the desired security access for the key. Default is &lt;a href=&quot;#winreg.KEY_READ&quot;&gt;&lt;code&gt;KEY_READ&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;#access-rights&quot;&gt;Access Rights&lt;/a&gt; for other allowed values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea9a2f94e98a0078799f8533398285c93eae6ee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;access&lt;/em&gt; is an integer that specifies an access mask that describes the desired security access for the key. Default is &lt;a href=&quot;#winreg.KEY_WOW64_64KEY&quot;&gt;&lt;code&gt;KEY_WOW64_64KEY&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;#access-rights&quot;&gt;Access Rights&lt;/a&gt; for other allowed values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39015e4f40da3fa78b19ca95ce15baf78970a43" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;access&lt;/em&gt; is an integer that specifies an access mask that describes the desired security access for the key. Default is &lt;a href=&quot;#winreg.KEY_WRITE&quot;&gt;&lt;code&gt;KEY_WRITE&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;#access-rights&quot;&gt;Access Rights&lt;/a&gt; for other allowed values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed571ee0951f196ff19573e361b75c0dab2dbd5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;access&lt;/em&gt; may be specified in lieu of &lt;em&gt;flags&lt;/em&gt; and &lt;em&gt;prot&lt;/em&gt; as an optional keyword parameter. It is an error to specify both &lt;em&gt;flags&lt;/em&gt;, &lt;em&gt;prot&lt;/em&gt; and &lt;em&gt;access&lt;/em&gt;. See the description of &lt;em&gt;access&lt;/em&gt; above for information on how to use this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa2ec5589aea1b2d867df6ada4f1fa6ca055e95" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;action&lt;/em&gt; is one of the following strings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3637ee043ee917ad70b4e51e961a00e16f6b7b22" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;addr&lt;/em&gt; - Optional bytes-like object specifying the hardware physical address, whose interpretation depends on the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d74f823c0fbb109478ad7e0ec2b5cbb9a72e4f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;addr_type&lt;/em&gt; is one of &lt;code&gt;TIPC_ADDR_NAMESEQ&lt;/code&gt;, &lt;code&gt;TIPC_ADDR_NAME&lt;/code&gt;, or &lt;code&gt;TIPC_ADDR_ID&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aac273cc286bdeb26ee96297a4de5125de1b3c2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;address&lt;/em&gt; is the address on which the manager process listens for new connections. If &lt;em&gt;address&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; then an arbitrary one is chosen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8086c2484d83086a9a059d9eaa2e76b2203df6a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;address&lt;/em&gt; is the address to be used by the bound socket or named pipe of the listener object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303c27441d1edc80d68ab28fd7f1dc6026f420b3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;adjustable&lt;/em&gt;: &lt;code&gt;True&lt;/code&gt; if the clock can be changed automatically (e.g. by a NTP daemon) or manually by the system administrator, &lt;code&gt;False&lt;/code&gt; otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac39d868c04d336ea125c712046f8b7ed32be43c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;adobe&lt;/em&gt; controls whether the encoded byte sequence is framed with &lt;code&gt;&amp;lt;~&lt;/code&gt; and &lt;code&gt;~&amp;gt;&lt;/code&gt;, which is used by the Adobe implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056264efb18e37e96c2ef2c3d9f417c7ffd63ff5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;adobe&lt;/em&gt; controls whether the input sequence is in Adobe Ascii85 format (i.e. is framed with &amp;lt;~ and ~&amp;gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2958e52878e5fc5b54d6cfc155ad08052a5f3d35" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;after_in_child&lt;/em&gt; is a function called from the child process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2409a4456ada2a702b3caa2c3964130c74b96886" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;after_in_parent&lt;/em&gt; is a function called from the parent process after forking a child process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34ee0810cf969e6229da957a5cf4f33373690c1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;allow_broadcast&lt;/em&gt; tells the kernel to allow this endpoint to send messages to the broadcast address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bebed732f7de4d7c8d3b9abd5eecfafbca2d6a2f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;allow_no_value&lt;/em&gt;, default value: &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642d3102048c0bc8a8b274c161b9d04799049e42" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;amount&lt;/em&gt; defaults to 1.0 if omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a982de63b32a63f23073a80cf5696fc4b22831c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;args&lt;/em&gt; is a list of the positional parameter names. &lt;em&gt;varargs&lt;/em&gt; is the name of the &lt;code&gt;*&lt;/code&gt; parameter or &lt;code&gt;None&lt;/code&gt; if arbitrary positional arguments are not accepted. &lt;em&gt;varkw&lt;/em&gt; is the name of the &lt;code&gt;**&lt;/code&gt; parameter or &lt;code&gt;None&lt;/code&gt; if arbitrary keyword arguments are not accepted. &lt;em&gt;defaults&lt;/em&gt; is an &lt;em&gt;n&lt;/em&gt;-tuple of default argument values corresponding to the last &lt;em&gt;n&lt;/em&gt; positional parameters, or &lt;code&gt;None&lt;/code&gt; if there are no such defaults defined. &lt;em&gt;kwonlyargs&lt;/em&gt; is a list of keyword-only parameter names in declaration order. &lt;em&gt;kwonlydefaults&lt;/em&gt; is a dictionary mapping parameter names from &lt;em&gt;kwonlyargs&lt;/em&gt; to the default values used if no argument is supplied. &lt;em&gt;annotations&lt;/em&gt; is a dictionary mapping parameter names to annotations. The special key &lt;code&gt;&quot;return&quot;&lt;/code&gt; is used to report the function return value annotation (if any).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4ad9e345bae367d42da01fb279e298d2f303cf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;args&lt;/em&gt; is required for all calls and should be a string, or a sequence of program arguments. Providing a sequence of arguments is generally preferred, as it allows the module to take care of any required escaping and quoting of arguments (e.g. to permit spaces in file names). If passing a single string, either &lt;em&gt;shell&lt;/em&gt; must be &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; (see below) or else the string must simply name the program to be executed without specifying any arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c440133bfa10957857be2df0f83d55d8ca2c832" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;args&lt;/em&gt; is the argument tuple for the target invocation. Defaults to &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788f14bda59dda3ec8f24b4967e2a49a1ed3ba40" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;args&lt;/em&gt; must be a list of strings represented by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66794e82a51c53c6e7f0e938aa19424793971d8b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;args&lt;/em&gt; should be a sequence of program arguments or else a single string or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. By default, the program to execute is the first item in &lt;em&gt;args&lt;/em&gt; if &lt;em&gt;args&lt;/em&gt; is a sequence. If &lt;em&gt;args&lt;/em&gt; is a string, the interpretation is platform-dependent and described below. See the &lt;em&gt;shell&lt;/em&gt; and &lt;em&gt;executable&lt;/em&gt; arguments for additional differences from the default behavior. Unless otherwise stated, it is recommended to pass &lt;em&gt;args&lt;/em&gt; as a sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fffb6abd09211c033d5a493f90529fcfeeff5e0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;arguments&lt;/em&gt; is a tuple containing the parameters originally passed to the function call, this allows specializing the behavior on the arguments used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4588d39c42f70721cb9cd84e9b515abfaa362944" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;authkey&lt;/em&gt; is the authentication key which will be used to check the validity of incoming connections to the server process. If &lt;em&gt;authkey&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; then &lt;code&gt;current_process().authkey&lt;/code&gt; is used. Otherwise &lt;em&gt;authkey&lt;/em&gt; is used and it must be a byte string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b460f80da8a25ade7dc1594524c9c4b03d7f9079" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;authobject&lt;/em&gt; must be a callable object taking an optional single argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9172b133eb7149d9be01e9164102a076f107863" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;authobject&lt;/em&gt; must be a callable object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e59feac478db677927db2ffda0e085a14d6231" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;authreq&lt;/em&gt; should be the name of the header where the information about the realm is included in the request, &lt;em&gt;host&lt;/em&gt; should be the host to authenticate to, &lt;em&gt;req&lt;/em&gt; should be the (failed) &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object, and &lt;em&gt;headers&lt;/em&gt; should be the error headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b15ecea3ccc64e3eb3de715d952dc4a91952e5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;backlog&lt;/em&gt; is the maximum number of queued connections passed to &lt;a href=&quot;socket#socket.socket.listen&quot;&gt;&lt;code&gt;listen()&lt;/code&gt;&lt;/a&gt; (defaults to 100).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3da310f45d3dad786662f4c483fbc0105776abb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;base_dir&lt;/em&gt; is the directory where we start archiving from; i.e. &lt;em&gt;base_dir&lt;/em&gt; will be the common prefix of all files and directories in the archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013ff68188ff4e8608df591b37ba6601444ae5f5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;base_name&lt;/em&gt; is the name of the file to create, including the path, minus any format-specific extension. &lt;em&gt;format&lt;/em&gt; is the archive format: one of &amp;ldquo;zip&amp;rdquo; (if the &lt;a href=&quot;zlib#module-zlib&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt; module is available), &amp;ldquo;tar&amp;rdquo;, &amp;ldquo;gztar&amp;rdquo; (if the &lt;a href=&quot;zlib#module-zlib&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt; module is available), &amp;ldquo;bztar&amp;rdquo; (if the &lt;a href=&quot;bz2#module-bz2&quot;&gt;&lt;code&gt;bz2&lt;/code&gt;&lt;/a&gt; module is available), or &amp;ldquo;xztar&amp;rdquo; (if the &lt;a href=&quot;lzma#module-lzma&quot;&gt;&lt;code&gt;lzma&lt;/code&gt;&lt;/a&gt; module is available).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2519ac9b58f1b8a80feccb933ae64c7655402a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;basename&lt;/em&gt; is intended for internal use only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269f902a4db76aad94ed6115dc09f741dfa3eacd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;before&lt;/em&gt; is a function called before forking a child process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4145d3c34887c26d84321eedf9b2c3febde0f87" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;bl&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;bl&lt;/em&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
