<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="e367c2302e72de69a7a939f03f510bb5eab31173" translate="yes" xml:space="preserve">
          <source>Supported values for &lt;em&gt;address_family&lt;/em&gt; are currently &lt;a href=&quot;#socket.AF_INET&quot;&gt;&lt;code&gt;AF_INET&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socket.AF_INET6&quot;&gt;&lt;code&gt;AF_INET6&lt;/code&gt;&lt;/a&gt;. If the IP address string &lt;em&gt;ip_string&lt;/em&gt; is invalid, &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; will be raised. Note that exactly what is valid depends on both the value of &lt;em&gt;address_family&lt;/em&gt; and the underlying implementation of &lt;code&gt;inet_pton()&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;address_familyで&lt;/em&gt;サポートされている値は、現在&lt;a href=&quot;#socket.AF_INET&quot;&gt; &lt;code&gt;AF_INET&lt;/code&gt; &lt;/a&gt;およびAF_INET6 &lt;a href=&quot;#socket.AF_INET6&quot;&gt; &lt;code&gt;AF_INET6&lt;/code&gt; &lt;/a&gt;。IPアドレス文字列&lt;em&gt;ip_string&lt;/em&gt;が無効な場合、&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;が発生します。正確に何が有効かは、&lt;em&gt;address_family&lt;/em&gt;の値と &lt;code&gt;inet_pton()&lt;/code&gt; の基礎となる実装の両方に依存することに注意してください。</target>
        </trans-unit>
        <trans-unit id="0e9fde244b17f9b103b9bf324659c200069ab093" translate="yes" xml:space="preserve">
          <source>Supported values for &lt;em&gt;address_family&lt;/em&gt; are currently &lt;a href=&quot;#socket.AF_INET&quot;&gt;&lt;code&gt;AF_INET&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socket.AF_INET6&quot;&gt;&lt;code&gt;AF_INET6&lt;/code&gt;&lt;/a&gt;. If the bytes object &lt;em&gt;packed_ip&lt;/em&gt; is not the correct length for the specified address family, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised. &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised for errors from the call to &lt;a href=&quot;#socket.inet_ntop&quot;&gt;&lt;code&gt;inet_ntop()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;address_familyで&lt;/em&gt;サポートされている値は、現在&lt;a href=&quot;#socket.AF_INET&quot;&gt; &lt;code&gt;AF_INET&lt;/code&gt; &lt;/a&gt;およびAF_INET6 &lt;a href=&quot;#socket.AF_INET6&quot;&gt; &lt;code&gt;AF_INET6&lt;/code&gt; &lt;/a&gt;。bytesオブジェクトの&lt;em&gt;packed_ip&lt;/em&gt;が指定されたアドレスファミリに対して適切な長さでない&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;、ValueErrorが発生します。&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;#socket.inet_ntop&quot;&gt; &lt;code&gt;inet_ntop()&lt;/code&gt; の&lt;/a&gt;呼び出しからのエラーに対して発生します。</target>
        </trans-unit>
        <trans-unit id="09e336d73118eb768da01cca5618d57d7b503e9d" translate="yes" xml:space="preserve">
          <source>Supported, &lt;a href=&quot;https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml&quot;&gt;IANA-registered&lt;/a&gt; status codes available in &lt;a href=&quot;#http.HTTPStatus&quot;&gt;&lt;code&gt;http.HTTPStatus&lt;/code&gt;&lt;/a&gt; are:</source>
          <target state="translated">サポートされている、&lt;a href=&quot;https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml&quot;&gt;IANAに登録さ&lt;/a&gt;れている&lt;a href=&quot;#http.HTTPStatus&quot;&gt; &lt;code&gt;http.HTTPStatus&lt;/code&gt; で&lt;/a&gt;利用可能なステータスコードは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="fbbbea93c1c5df9b273b63f34add5d6a935c85e8" translate="yes" xml:space="preserve">
          <source>Supporting a variable number of context managers</source>
          <target state="translated">可変数のコンテキストマネージャーをサポート</target>
        </trans-unit>
        <trans-unit id="430fdd77b068348b7fc76000478a45dd8feb2327" translate="yes" xml:space="preserve">
          <source>Supporting sub-commands.</source>
          <target state="translated">サブコマンドをサポートしています。</target>
        </trans-unit>
        <trans-unit id="5353a4310fa3de26f04bb5315747474ebebe3b0d" translate="yes" xml:space="preserve">
          <source>Supports the following objects and types by default:</source>
          <target state="translated">デフォルトでは以下のオブジェクトとタイプをサポートしています。</target>
        </trans-unit>
        <trans-unit id="ed7383e628fad324b7b5dbc2ef5232ff9eb0de60" translate="yes" xml:space="preserve">
          <source>Suppose a car travels 10 km at 40 km/hr, then another 10 km at 60 km/hr. What is the average speed?</source>
          <target state="translated">車が時速40kmで10km走行し、さらに時速60kmで10km走行したとします。平均速度はどれくらいでしょうか?</target>
        </trans-unit>
        <trans-unit id="4ed7afaf4b512d83ce6e0b4b0ff8ec5635d0cee0" translate="yes" xml:space="preserve">
          <source>Suppose an investor purchases an equal value of shares in each of three companies, with P/E (price/earning) ratios of 2.5, 3 and 10. What is the average P/E ratio for the investor&amp;rsquo;s portfolio?</source>
          <target state="translated">投資家がP / E（価格/収益）比が2.5、3、および10である3社それぞれの株式を同額購入するとします。投資家のポートフォリオの平均P / E比はいくつですか？</target>
        </trans-unit>
        <trans-unit id="eaf782ee46dbe7ee16e8a3fa45ccff536424ea2f" translate="yes" xml:space="preserve">
          <source>Suppose we want to create a class whose instances represent temporary directories. The directories should be deleted with their contents when the first of the following events occurs:</source>
          <target state="translated">インスタンスが一時的なディレクトリを表すクラスを作成したいとします。ディレクトリは、以下のイベントの最初のイベントが発生したときに、その内容とともに削除されなければなりません。</target>
        </trans-unit>
        <trans-unit id="dae8fd2ae7a644b210a65c97e04dd4a10af6eaf1" translate="yes" xml:space="preserve">
          <source>Suppose you are writing a poker program where a player&amp;rsquo;s hand is represented as a 5-character string with each character representing a card, &amp;ldquo;a&amp;rdquo; for ace, &amp;ldquo;k&amp;rdquo; for king, &amp;ldquo;q&amp;rdquo; for queen, &amp;ldquo;j&amp;rdquo; for jack, &amp;ldquo;t&amp;rdquo; for 10, and &amp;ldquo;2&amp;rdquo; through &amp;ldquo;9&amp;rdquo; representing the card with that value.</source>
          <target state="translated">プレーヤーの手がカードを表す5文字の文字列として表されるポーカープログラムを作成しているとします。各文字はエースの場合は「a」、キングの場合は「k」、クイーンの場合は「q」、ジャックの場合は「j」、 「t」は10、「2」から「9」はその値のカードを表します。</target>
        </trans-unit>
        <trans-unit id="f393e730a2a08893c63f470b503752ca86b2b301" translate="yes" xml:space="preserve">
          <source>Surprises</source>
          <target state="translated">Surprises</target>
        </trans-unit>
        <trans-unit id="b24247fb5a9d8d8059901182187be57626f3ba71" translate="yes" xml:space="preserve">
          <source>Suspend</source>
          <target state="translated">Suspend</target>
        </trans-unit>
        <trans-unit id="a7ac10f457b6a58e8db141ff4f40d96148eeab0e" translate="yes" xml:space="preserve">
          <source>Suspend execution of the calling thread for the given number of seconds. The argument may be a floating point number to indicate a more precise sleep time. The actual suspension time may be less than that requested because any caught signal will terminate the &lt;a href=&quot;#time.sleep&quot;&gt;&lt;code&gt;sleep()&lt;/code&gt;&lt;/a&gt; following execution of that signal&amp;rsquo;s catching routine. Also, the suspension time may be longer than requested by an arbitrary amount because of the scheduling of other activity in the system.</source>
          <target state="translated">指定された秒数の間、呼び出しスレッドの実行を中断します。引数は、より正確なスリープ時間を示す浮動小数点数にすることができます。キャッチされたシグナルは、そのシグナルのキャッチルーチンの実行に続いて&lt;a href=&quot;#time.sleep&quot;&gt; &lt;code&gt;sleep()&lt;/code&gt; &lt;/a&gt;を終了するため、実際の一時停止時間は要求された時間よりも短い場合があります。また、システム内の他のアクティビティーのスケジューリングのために、中断時間は、要求されたものよりも任意の量だけ長くなる場合があります。</target>
        </trans-unit>
        <trans-unit id="721fc37163cc5ef97473efd877420d38d14966c0" translate="yes" xml:space="preserve">
          <source>Suspend execution of the calling thread until the delivery of one of the signals specified in the signal set &lt;em&gt;sigset&lt;/em&gt;. The function accepts the signal (removes it from the pending list of signals), and returns the signal number.</source>
          <target state="translated">シグナルセット&lt;em&gt;sigsetで&lt;/em&gt;指定されたシグナルの1つが配信されるまで、呼び出しスレッドの実行を一時停止します。関数はシグナルを受け入れ（保留中のシグナルのリストから削除）、シグナル番号を返します。</target>
        </trans-unit>
        <trans-unit id="0d6d4c32622974b9d1c49557ecd6fdc3384f6d0f" translate="yes" xml:space="preserve">
          <source>Suspend execution of the calling thread until the delivery of one of the signals specified in the signal set &lt;em&gt;sigset&lt;/em&gt;. The function accepts the signal and removes it from the pending list of signals. If one of the signals in &lt;em&gt;sigset&lt;/em&gt; is already pending for the calling thread, the function will return immediately with information about that signal. The signal handler is not called for the delivered signal. The function raises an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; if it is interrupted by a signal that is not in &lt;em&gt;sigset&lt;/em&gt;.</source>
          <target state="translated">シグナルセット&lt;em&gt;sigsetで&lt;/em&gt;指定されたシグナルの1つが配信されるまで、呼び出しスレッドの実行を一時停止します。関数は信号を受け入れ、保留中の信号リストから削除します。&lt;em&gt;sigset&lt;/em&gt;内のシグナルの1つが呼び出しスレッドですでに保留されている場合、関数はそのシグナルに関する情報をすぐに返します。配信されたシグナルに対してシグナルハンドラは呼び出されません。この関数は、&lt;em&gt;sigsetに&lt;/em&gt;ないシグナルによって割り込まれた場合、&lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt;を発生させます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5be3b88fe6050f07242146d412f9682bcec1857" translate="yes" xml:space="preserve">
          <source>Suspend or resume input or output on file descriptor &lt;em&gt;fd&lt;/em&gt;. The &lt;em&gt;action&lt;/em&gt; argument can be &lt;code&gt;TCOOFF&lt;/code&gt; to suspend output, &lt;code&gt;TCOON&lt;/code&gt; to restart output, &lt;code&gt;TCIOFF&lt;/code&gt; to suspend input, or &lt;code&gt;TCION&lt;/code&gt; to restart input.</source>
          <target state="translated">ファイル記述子&lt;em&gt;fdで&lt;/em&gt;入力または出力を一時停止または再開します。&lt;em&gt;アクション&lt;/em&gt;引数には、することができ &lt;code&gt;TCOOFF&lt;/code&gt; 出力、停止する &lt;code&gt;TCOON&lt;/code&gt; を再起動出力に &lt;code&gt;TCIOFF&lt;/code&gt; 入力、または一時停止する &lt;code&gt;TCION&lt;/code&gt; を再起動入力します。</target>
        </trans-unit>
        <trans-unit id="496f3ed6f7e14ef62d9e444944e5bf0608249526" translate="yes" xml:space="preserve">
          <source>Swaps the two top-most stack items.</source>
          <target state="translated">一番上の2つのスタックアイテムを入れ替えます。</target>
        </trans-unit>
        <trans-unit id="2e0dcb00e65a28125117875b793974ff78034961" translate="yes" xml:space="preserve">
          <source>Switching protocol should only be done when both protocols are documented to support the switch.</source>
          <target state="translated">プロトコルの切り替えは、両方のプロトコルがスイッチをサポートするために文書化されている場合にのみ行う必要があります。</target>
        </trans-unit>
        <trans-unit id="fe0965f151a6bf0067ecb9aa1896964bf350a557" translate="yes" xml:space="preserve">
          <source>Symbol tables are generated by the compiler from AST just before bytecode is generated. The symbol table is responsible for calculating the scope of every identifier in the code. &lt;a href=&quot;#module-symtable&quot;&gt;&lt;code&gt;symtable&lt;/code&gt;&lt;/a&gt; provides an interface to examine these tables.</source>
          <target state="translated">シンボルテーブルは、バイトコードが生成される直前に、ASTからコンパイラによって生成されます。シンボルテーブルは、コード内のすべての識別子のスコープを計算します。&lt;a href=&quot;#module-symtable&quot;&gt; &lt;code&gt;symtable&lt;/code&gt; &lt;/a&gt;は、これらのテーブルを調べるためのインターフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="08f7ff9d34edbbf7d7ae7d368633ffd9090dec8b" translate="yes" xml:space="preserve">
          <source>Symbol used to annotate a negative monetary value.</source>
          <target state="translated">負の金銭的価値を注釈するために使用される記号です。</target>
        </trans-unit>
        <trans-unit id="dc9ab385c43a04a353935818fc27997e22e5f289" translate="yes" xml:space="preserve">
          <source>Symbol used to annotate a positive monetary value.</source>
          <target state="translated">正の金銭的価値を注釈するために使用される記号。</target>
        </trans-unit>
        <trans-unit id="66e9aca03dcf567e45a76a6d9b9aff78a6e0594a" translate="yes" xml:space="preserve">
          <source>Symbolic constants are used to specify particular system resources and to request usage information about either the current process or its children.</source>
          <target state="translated">シンボリック定数は、特定のシステムリソースを指定したり、現在のプロセスやその子プロセスの使用情報を要求したりするために使用されます。</target>
        </trans-unit>
        <trans-unit id="15d2715339927ab1cacbd3a795da09326886df84" translate="yes" xml:space="preserve">
          <source>Symbolic link.</source>
          <target state="translated">シンボリックリンク。</target>
        </trans-unit>
        <trans-unit id="b5fbcc04189e5e7ee4d138a02eb7cd6accc39d21" translate="yes" xml:space="preserve">
          <source>Symbolic value</source>
          <target state="translated">象徴的な値</target>
        </trans-unit>
        <trans-unit id="cbcf7ae51d210c4ce6c53f74b6ecb4c2b26819b4" translate="yes" xml:space="preserve">
          <source>Synchronization</source>
          <target state="translated">Synchronization</target>
        </trans-unit>
        <trans-unit id="29a7d1ea3d952fb85c579718deee912747842d8b" translate="yes" xml:space="preserve">
          <source>Synchronization Primitives</source>
          <target state="translated">同期プリミティブ</target>
        </trans-unit>
        <trans-unit id="cbba062bbc83d66b28e943658c29a28c7fa8e0a9" translate="yes" xml:space="preserve">
          <source>Synchronization between processes</source>
          <target state="translated">プロセス間の同期化</target>
        </trans-unit>
        <trans-unit id="36f95c993c41614d9487682d4095effab046a2f5" translate="yes" xml:space="preserve">
          <source>Synchronization primitives</source>
          <target state="translated">同期プリミティブ</target>
        </trans-unit>
        <trans-unit id="dd9c2ef1022d2fe014d89f4287eec32c29bfe326" translate="yes" xml:space="preserve">
          <source>Synchronize and close the persistent &lt;em&gt;dict&lt;/em&gt; object. Operations on a closed shelf will fail with a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">永続的な&lt;em&gt;dict&lt;/em&gt;オブジェクトを同期して閉じます。閉じた棚での操作は&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; で&lt;/a&gt;失敗します。</target>
        </trans-unit>
        <trans-unit id="69f7b0bd705db19c171a6d38cf3af9ce071ab2f2" translate="yes" xml:space="preserve">
          <source>Synchronize the on-disk directory and data files. This method is called by the &lt;code&gt;Shelve.sync()&lt;/code&gt; method.</source>
          <target state="translated">ディスク上のディレクトリとデータファイルを同期します。このメソッドは、 &lt;code&gt;Shelve.sync()&lt;/code&gt; メソッドによって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c1f2bcf942acd2dc75db00756276387b3576d4b5" translate="yes" xml:space="preserve">
          <source>Synchronized mode. This will cause changes to the database to be immediately written to the file.</source>
          <target state="translated">同期モードです。これにより、データベースへの変更が即座にファイルに書き込まれます。</target>
        </trans-unit>
        <trans-unit id="478e0859dcfcb931254a976e6eb032edd080e8e0" translate="yes" xml:space="preserve">
          <source>Synchronous idle</source>
          <target state="translated">同期アイドル</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="de4af2ff6c0bd31526ce7f5f8ca08783d0cc5ed7" translate="yes" xml:space="preserve">
          <source>SyntaxError</source>
          <target state="translated">SyntaxError</target>
        </trans-unit>
        <trans-unit id="239fde2b81323f82aa960faa292c8b84c09678bd" translate="yes" xml:space="preserve">
          <source>SyntaxWarning</source>
          <target state="translated">SyntaxWarning</target>
        </trans-unit>
        <trans-unit id="f99a1e0c4f99a37b7ffe012e980d6c18e08746d3" translate="yes" xml:space="preserve">
          <source>SysLogHandler</source>
          <target state="translated">SysLogHandler</target>
        </trans-unit>
        <trans-unit id="bc0792d8dc81e8aa30b987246a5ce97c40cd6833" translate="yes" xml:space="preserve">
          <source>System</source>
          <target state="translated">System</target>
        </trans-unit>
        <trans-unit id="dd32ed28eedb2fad18cd75ec03e544cf0d2ca3ec" translate="yes" xml:space="preserve">
          <source>System V file locking enforcement. This flag is shared with &lt;a href=&quot;#stat.S_ISGID&quot;&gt;&lt;code&gt;S_ISGID&lt;/code&gt;&lt;/a&gt;: file/record locking is enforced on files that do not have the group execution bit (&lt;a href=&quot;#stat.S_IXGRP&quot;&gt;&lt;code&gt;S_IXGRP&lt;/code&gt;&lt;/a&gt;) set.</source>
          <target state="translated">System Vファイルロックの実施。このフラグは&lt;a href=&quot;#stat.S_ISGID&quot;&gt; &lt;code&gt;S_ISGID&lt;/code&gt; &lt;/a&gt;と共有されます。ファイル/レコードのロックは、グループ実行ビット（&lt;a href=&quot;#stat.S_IXGRP&quot;&gt; &lt;code&gt;S_IXGRP&lt;/code&gt; &lt;/a&gt;）が設定されていないファイルに適用されます。</target>
        </trans-unit>
        <trans-unit id="bd4230b8fa1e196ceea27a4c97446bbf43db362e" translate="yes" xml:space="preserve">
          <source>System which created ZIP archive.</source>
          <target state="translated">ZIPアーカイブを作成したシステム</target>
        </trans-unit>
        <trans-unit id="d5ff5bc7b647223447ff8bbcf7017bf138ec3ea5" translate="yes" xml:space="preserve">
          <source>System-wide real-time clock. Setting this clock requires appropriate privileges.</source>
          <target state="translated">システム全体のリアルタイムクロック。このクロックを設定するには、適切な権限が必要です。</target>
        </trans-unit>
        <trans-unit id="47e68638ef3b94e3c34563e1179f97e827fb9bec" translate="yes" xml:space="preserve">
          <source>SystemError</source>
          <target state="translated">SystemError</target>
        </trans-unit>
        <trans-unit id="7cc841d8ecdbfbc0498942bb2b4d8fa89ce32a41" translate="yes" xml:space="preserve">
          <source>SystemExit</source>
          <target state="translated">SystemExit</target>
        </trans-unit>
        <trans-unit id="eb1c93ed6255e73b69cef6bc348253d7b278840c" translate="yes" xml:space="preserve">
          <source>SystemExit.code</source>
          <target state="translated">SystemExit.code</target>
        </trans-unit>
        <trans-unit id="c2c53d66948214258a26ca9ca845d7ac0c17f8e7" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="translated">T</target>
        </trans-unit>
        <trans-unit id="c8079de7f39924a818429b6bbcf89203b522e2b1" translate="yes" xml:space="preserve">
          <source>T flag</source>
          <target state="translated">ティーフラッグ</target>
        </trans-unit>
        <trans-unit id="100693b0324bc7e8a80c61cdf57cf7ead8f74082" translate="yes" xml:space="preserve">
          <source>T. Dierks et. al.</source>
          <target state="translated">T.Dierks et.</target>
        </trans-unit>
        <trans-unit id="d1ffc191533bb2cbb8bf40d3119d9fe2916278fe" translate="yes" xml:space="preserve">
          <source>TCP Echo Client</source>
          <target state="translated">TCPエコークライアント</target>
        </trans-unit>
        <trans-unit id="5b0877d2c21a8a83292debfb59a6c929390d3c9c" translate="yes" xml:space="preserve">
          <source>TCP Echo Server</source>
          <target state="translated">TCPエコーサーバ</target>
        </trans-unit>
        <trans-unit id="5ef15cad06042dc4a49f48eedea031e55b9ecf0c" translate="yes" xml:space="preserve">
          <source>TCP echo client using streams</source>
          <target state="translated">ストリームを使用した TCP エコークライアント</target>
        </trans-unit>
        <trans-unit id="73bbf4f27b80ee62463e82c07b0eb7dcc7b9c6f2" translate="yes" xml:space="preserve">
          <source>TCP echo client using the &lt;a href=&quot;#asyncio.open_connection&quot;&gt;&lt;code&gt;asyncio.open_connection()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">&lt;a href=&quot;#asyncio.open_connection&quot;&gt; &lt;code&gt;asyncio.open_connection()&lt;/code&gt; &lt;/a&gt;関数を使用したTCPエコークライアント：</target>
        </trans-unit>
        <trans-unit id="2c08259ebc5b31cf20f523f0ca4fc480ddcb6886" translate="yes" xml:space="preserve">
          <source>TCP echo server using streams</source>
          <target state="translated">ストリームを用いた TCP エコーサーバ</target>
        </trans-unit>
        <trans-unit id="2f7ae8465b345c81e3dc31fb3c5cb5c918ab2831" translate="yes" xml:space="preserve">
          <source>TCP echo server using the &lt;a href=&quot;#asyncio.start_server&quot;&gt;&lt;code&gt;asyncio.start_server()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">&lt;a href=&quot;#asyncio.start_server&quot;&gt; &lt;code&gt;asyncio.start_server()&lt;/code&gt; &lt;/a&gt;関数を使用したTCPエコーサーバー：</target>
        </trans-unit>
        <trans-unit id="7adc41db35e4460161060a3765be2f4ce053917f" translate="yes" xml:space="preserve">
          <source>TEST_PREFIX</source>
          <target state="translated">TEST_PREFIX</target>
        </trans-unit>
        <trans-unit id="6d9797f70add1e44d57484714671c7206b7319ef" translate="yes" xml:space="preserve">
          <source>TIFF Files</source>
          <target state="translated">TIFFファイル</target>
        </trans-unit>
        <trans-unit id="cdeae3d22c263be0cc15f30b6b04620cb8d92ba6" translate="yes" xml:space="preserve">
          <source>TIPC related constants, matching the ones exported by the C socket API. See the TIPC documentation for more information.</source>
          <target state="translated">C ソケット API でエクスポートされた定数と一致する TIPC 関連の定数。詳細は TIPC のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="0baa8888f9d0aa88c338a67431b067309925ea86" translate="yes" xml:space="preserve">
          <source>TKDocs</source>
          <target state="translated">TKDocs</target>
        </trans-unit>
        <trans-unit id="fbbfb6a7ead947e0fa27a3b7b0d471dcc4e2e9cf" translate="yes" xml:space="preserve">
          <source>TLS 1.3</source>
          <target state="translated">TLS1.</target>
        </trans-unit>
        <trans-unit id="49c878ba00b23828e711672cf8e175f204471d48" translate="yes" xml:space="preserve">
          <source>TLS 1.3 features like early data, deferred TLS client cert request, signature algorithm configuration, and rekeying are not supported yet.</source>
          <target state="translated">TLS 1.3 の初期データ、遅延された TLS クライアント証明書要求、署名アルゴリズム設定、リキーなどの機能はまだサポートされていません。</target>
        </trans-unit>
        <trans-unit id="e44a2f555a3fa72211507497bc3b16d61be51770" translate="yes" xml:space="preserve">
          <source>TLS 1.3 protocol will be available with &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt; in OpenSSL &amp;gt;= 1.1.1. There is no dedicated PROTOCOL constant for just TLS 1.3.</source>
          <target state="translated">TLS 1.3プロトコルは、OpenSSL&amp;gt; = 1.1.1の&lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt;で利用できます。TLS 1.3専用のPROTOCOL定数はありません。</target>
        </trans-unit>
        <trans-unit id="300c5ad845fddb16bd752e6113d28d8e57573058" translate="yes" xml:space="preserve">
          <source>TLS 1.3 uses a disjunct set of cipher suites. All AES-GCM and ChaCha20 cipher suites are enabled by default. The method &lt;a href=&quot;#ssl.SSLContext.set_ciphers&quot;&gt;&lt;code&gt;SSLContext.set_ciphers()&lt;/code&gt;&lt;/a&gt; cannot enable or disable any TLS 1.3 ciphers yet, but &lt;a href=&quot;#ssl.SSLContext.get_ciphers&quot;&gt;&lt;code&gt;SSLContext.get_ciphers()&lt;/code&gt;&lt;/a&gt; returns them.</source>
          <target state="translated">TLS 1.3は、暗号スイートの分離したセットを使用します。すべてのAES-GCMおよびChaCha20暗号スイートは、デフォルトで有効になっています。&lt;a href=&quot;#ssl.SSLContext.set_ciphers&quot;&gt; &lt;code&gt;SSLContext.set_ciphers()&lt;/code&gt; &lt;/a&gt;メソッドは、TLS 1.3暗号をまだ有効または無効にすることはできませんが、&lt;a href=&quot;#ssl.SSLContext.get_ciphers&quot;&gt; &lt;code&gt;SSLContext.get_ciphers()&lt;/code&gt; &lt;/a&gt;はそれらを返します。</target>
        </trans-unit>
        <trans-unit id="4c9f6c270dbdfd7c10f6e315eda01961135acc43" translate="yes" xml:space="preserve">
          <source>TLS Upgrade</source>
          <target state="translated">TLSアップグレード</target>
        </trans-unit>
        <trans-unit id="1925fffff55dc3ab10762126722e13334b4e97f9" translate="yes" xml:space="preserve">
          <source>TOS is an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;. Call its &lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; method. If this yields a new value, push it on the stack (leaving the iterator below it). If the iterator indicates it is exhausted TOS is popped, and the byte code counter is incremented by &lt;em&gt;delta&lt;/em&gt;.</source>
          <target state="translated">TOSは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;イテレータ&lt;/a&gt;です。その&lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt; &lt;code&gt;__next__()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。これにより新しい値が生成される場合は、それをスタックにプッシュします（イテレーターをその下に残します）。イテレータがそれを使い果たしたことを示す場合、TOSがポップされ、バイトコードカウンタが&lt;em&gt;deltaだけ&lt;/em&gt;インクリメントされます。</target>
        </trans-unit>
        <trans-unit id="6518048fef935aa22f2005310f203a44163eed2f" translate="yes" xml:space="preserve">
          <source>TOS is result of &lt;code&gt;__exit__()&lt;/code&gt; or &lt;code&gt;__aexit__()&lt;/code&gt; function call pushed by &lt;a href=&quot;#opcode-WITH_CLEANUP_START&quot;&gt;&lt;code&gt;WITH_CLEANUP_START&lt;/code&gt;&lt;/a&gt;. SECOND is &lt;code&gt;None&lt;/code&gt; or an exception type (pushed when an exception has been raised).</source>
          <target state="translated">TOSは、 &lt;code&gt;__exit__()&lt;/code&gt; によってプッシュされた&lt;a href=&quot;#opcode-WITH_CLEANUP_START&quot;&gt; &lt;code&gt;WITH_CLEANUP_START&lt;/code&gt; &lt;/a&gt; __（）または &lt;code&gt;__aexit__()&lt;/code&gt; 関数呼び出しの結果です。SECONDは &lt;code&gt;None&lt;/code&gt; または例外タイプです（例外が発生したときにプッシュされます）。</target>
        </trans-unit>
        <trans-unit id="fe06eb6459c87f0e497ce1805f076f104bfecf78" translate="yes" xml:space="preserve">
          <source>Tab</source>
          <target state="translated">Tab</target>
        </trans-unit>
        <trans-unit id="4184dd72104948d4639fb02992b945838da9b7f6" translate="yes" xml:space="preserve">
          <source>Tab Identifiers</source>
          <target state="translated">タブ識別子</target>
        </trans-unit>
        <trans-unit id="ed8e6b927b4b9b1d5b371f2cbda818df4e9c2773" translate="yes" xml:space="preserve">
          <source>Tab Options</source>
          <target state="translated">タブオプション</target>
        </trans-unit>
        <trans-unit id="51f3a2b97c44b6a3c489db9429828e97e0f34041" translate="yes" xml:space="preserve">
          <source>TabError</source>
          <target state="translated">TabError</target>
        </trans-unit>
        <trans-unit id="2206975a0bc82674c0da51c6c27096e7cdc13c17" translate="yes" xml:space="preserve">
          <source>Tabify Region</source>
          <target state="translated">領域をタブ化</target>
        </trans-unit>
        <trans-unit id="5c5654cdd4ba7e4325c694865e3aa84d89b76f3e" translate="yes" xml:space="preserve">
          <source>Tabular ListBox</source>
          <target state="translated">表形式リストボックス</target>
        </trans-unit>
        <trans-unit id="15acd88369228a7f1fe88365876d812d72d0097e" translate="yes" xml:space="preserve">
          <source>Tag Options</source>
          <target state="translated">タグオプション</target>
        </trans-unit>
        <trans-unit id="e301d53adc28f8dfd9375071aa503322cf99bba4" translate="yes" xml:space="preserve">
          <source>Tajik</source>
          <target state="translated">Tajik</target>
        </trans-unit>
        <trans-unit id="0f61aa9290c984334ded57f6b79fcd7a9c37e221" translate="yes" xml:space="preserve">
          <source>Take a key value &lt;em&gt;ch&lt;/em&gt;, and return &lt;code&gt;True&lt;/code&gt; if the current terminal type recognizes a key with that value.</source>
          <target state="translated">キー値&lt;em&gt;chを&lt;/em&gt;取り、現在の端末タイプがその値のキーを認識する場合は &lt;code&gt;True&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a1bf82aa7514021d06d60729000a11f5c6462fa9" translate="yes" xml:space="preserve">
          <source>Take a snapshot of traces of memory blocks allocated by Python. Return a new &lt;a href=&quot;#tracemalloc.Snapshot&quot;&gt;&lt;code&gt;Snapshot&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">Pythonによって割り当てられたメモリブロックのトレースのスナップショットを取得します。新しい&lt;a href=&quot;#tracemalloc.Snapshot&quot;&gt; &lt;code&gt;Snapshot&lt;/code&gt; &lt;/a&gt;インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="5b3da8de64c814d9b3266a7876910cf8fa78ebd3" translate="yes" xml:space="preserve">
          <source>Take two (non complex) numbers as arguments and return a pair of numbers consisting of their quotient and remainder when using integer division. With mixed operand types, the rules for binary arithmetic operators apply. For integers, the result is the same as &lt;code&gt;(a // b, a % b)&lt;/code&gt;. For floating point numbers the result is &lt;code&gt;(q, a % b)&lt;/code&gt;, where &lt;em&gt;q&lt;/em&gt; is usually &lt;code&gt;math.floor(a /
b)&lt;/code&gt; but may be 1 less than that. In any case &lt;code&gt;q * b + a % b&lt;/code&gt; is very close to &lt;em&gt;a&lt;/em&gt;, if &lt;code&gt;a % b&lt;/code&gt; is non-zero it has the same sign as &lt;em&gt;b&lt;/em&gt;, and &lt;code&gt;0
&amp;lt;= abs(a % b) &amp;lt; abs(b)&lt;/code&gt;.</source>
          <target state="translated">引数として2つの（非複素数）数値を取り、整数除算を使用する場合、商と剰余で構成される数値のペアを返します。混合オペランドタイプでは、2項算術演算子のルールが適用されます。整数の場合、結果は &lt;code&gt;(a // b, a % b)&lt;/code&gt; と同じです。浮動小数点数の場合、結果は &lt;code&gt;(q, a % b)&lt;/code&gt; 。ここで、&lt;em&gt;q&lt;/em&gt;は通常 &lt;code&gt;math.floor(a / b)&lt;/code&gt; が、それよりも1少ない場合があります。任意のケースにおいて &lt;code&gt;q * b + a % b&lt;/code&gt; 非常に近くにある場合は、 &lt;code&gt;a % b&lt;/code&gt; ゼロでは同じ符号有する&lt;em&gt;Bを&lt;/em&gt;、そして &lt;code&gt;0 &amp;lt;= abs(a % b) &amp;lt; abs(b)&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b550fa31fa155f09d009498f80c69ed7a5f7214" translate="yes" xml:space="preserve">
          <source>Take two snapshots and display the differences:</source>
          <target state="translated">スナップ写真を2枚撮って、その違いを表示します。</target>
        </trans-unit>
        <trans-unit id="7ef7f5d9e4af8c0c66f8e8f30af4e07e8b357199" translate="yes" xml:space="preserve">
          <source>Takes a descriptor and returns whenever there is data available to read</source>
          <target state="translated">記述子を受け取り、読み込み可能なデータがある場合はいつでも返します。</target>
        </trans-unit>
        <trans-unit id="29dd968868abb9574902a11a99e959b2c749985b" translate="yes" xml:space="preserve">
          <source>Takes a descriptor and returns whenever there is data available to write</source>
          <target state="translated">記述子を受け取り、書き込み可能なデータがある場合はいつでも返します。</target>
        </trans-unit>
        <trans-unit id="f364904f9bca83617ee18d0f66b705bf631e1470" translate="yes" xml:space="preserve">
          <source>Takes a producer object and adds it to the producer queue associated with the channel. When all currently-pushed producers have been exhausted the channel will consume this producer&amp;rsquo;s data by calling its &lt;code&gt;more()&lt;/code&gt; method and send the data to the remote endpoint.</source>
          <target state="translated">プロデューサーオブジェクトを取得し、チャネルに関連付けられたプロデューサーキューに追加します。現在プッシュされているすべてのプロデューサーが使い果たされると、チャネルは &lt;code&gt;more()&lt;/code&gt; メソッドを呼び出してこのプロデューサーのデータを消費し、データをリモートエンドポイントに送信します。</target>
        </trans-unit>
        <trans-unit id="ff928e238afcf6f2cd7cd54fb1287dd9d8cf9798" translate="yes" xml:space="preserve">
          <source>Takes an instance &lt;code&gt;sock&lt;/code&gt; of &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt;, and returns an instance of &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;ssl.SSLSocket&lt;/code&gt;&lt;/a&gt;, a subtype of &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt;, which wraps the underlying socket in an SSL context. &lt;code&gt;sock&lt;/code&gt; must be a &lt;a href=&quot;socket#socket.SOCK_STREAM&quot;&gt;&lt;code&gt;SOCK_STREAM&lt;/code&gt;&lt;/a&gt; socket; other socket types are unsupported.</source>
          <target state="translated">インスタンスかかる &lt;code&gt;sock&lt;/code&gt; の&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; を&lt;/a&gt;、とのインスタンスを返し&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;ssl.SSLSocket&lt;/code&gt; &lt;/a&gt;のサブタイプ&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; &lt;/a&gt; SSLコンテキストの基礎となるソケットをラップ、。 &lt;code&gt;sock&lt;/code&gt; は&lt;a href=&quot;socket#socket.SOCK_STREAM&quot;&gt; &lt;code&gt;SOCK_STREAM&lt;/code&gt; &lt;/a&gt;ソケットでなければなりません。他のソケットタイプはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="34d6d23eb55d67c76ef90341b26b6e54587f6d13" translate="yes" xml:space="preserve">
          <source>Takes an optional &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;&lt;em&gt;fp&lt;/em&gt;, which is ignored by the base class. Initializes &amp;ldquo;protected&amp;rdquo; instance variables &lt;em&gt;_info&lt;/em&gt; and &lt;em&gt;_charset&lt;/em&gt; which are set by derived classes, as well as &lt;em&gt;_fallback&lt;/em&gt;, which is set through &lt;a href=&quot;#gettext.NullTranslations.add_fallback&quot;&gt;&lt;code&gt;add_fallback()&lt;/code&gt;&lt;/a&gt;. It then calls &lt;code&gt;self._parse(fp)&lt;/code&gt; if &lt;em&gt;fp&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">オプションの&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;&lt;em&gt;fpを受け取り&lt;/em&gt;ます。これは、基本クラスによって無視されます。初期化「保護」インスタンス変数&lt;em&gt;_info&lt;/em&gt;と&lt;em&gt;_charset&lt;/em&gt;派生クラス、ならびにによって設定され&lt;em&gt;_fallback&lt;/em&gt;介して設定されている、&lt;a href=&quot;#gettext.NullTranslations.add_fallback&quot;&gt; &lt;code&gt;add_fallback()&lt;/code&gt; &lt;/a&gt;。次に、&lt;em&gt;fp&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合は、 &lt;code&gt;self._parse(fp)&lt;/code&gt; を呼び出します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8b4636270f85b3fbf49ec462c18c732c12489509" translate="yes" xml:space="preserve">
          <source>Takes no action.</source>
          <target state="translated">何もしない</target>
        </trans-unit>
        <trans-unit id="d44c8bec65a784d54741226d3313e62820c0d3c0" translate="yes" xml:space="preserve">
          <source>Takes the logging configuration from a dictionary. The contents of this dictionary are described in &lt;a href=&quot;#logging-config-dictschema&quot;&gt;Configuration dictionary schema&lt;/a&gt; below.</source>
          <target state="translated">辞書からロギング構成を取得します。この辞書の内容については、以下の&lt;a href=&quot;#logging-config-dictschema&quot;&gt;構成辞書スキーマで&lt;/a&gt;説明しています。</target>
        </trans-unit>
        <trans-unit id="0b24523566c5e88f7857c12583bae9db24b5f7ff" translate="yes" xml:space="preserve">
          <source>TarFile Objects</source>
          <target state="translated">TarFile オブジェクト</target>
        </trans-unit>
        <trans-unit id="338ec1e68af6f6ecd45d04f6ae39977241f13226" translate="yes" xml:space="preserve">
          <source>TarInfo Objects</source>
          <target state="translated">TarInfo オブジェクト</target>
        </trans-unit>
        <trans-unit id="df740b79240b1ed7d5039a52848bff953794ae64" translate="yes" xml:space="preserve">
          <source>Task Object</source>
          <target state="translated">タスクオブジェクト</target>
        </trans-unit>
        <trans-unit id="76ff5d606073755c34a850d78d36a327964fe96b" translate="yes" xml:space="preserve">
          <source>Task object.</source>
          <target state="translated">タスクオブジェクト。</target>
        </trans-unit>
        <trans-unit id="090ec5f560fc50377fcd95e5cda128e91b276e98" translate="yes" xml:space="preserve">
          <source>Tasks</source>
          <target state="translated">Tasks</target>
        </trans-unit>
        <trans-unit id="b518979fdc61af5116b8c56f428e81decb342dd2" translate="yes" xml:space="preserve">
          <source>Tasks and Futures</source>
          <target state="translated">タスクと未来</target>
        </trans-unit>
        <trans-unit id="c06119a570c94693c9d4d0837718d89596fcbf13" translate="yes" xml:space="preserve">
          <source>Tasks are used to run coroutines in event loops. If a coroutine awaits on a Future, the Task suspends the execution of the coroutine and waits for the completion of the Future. When the Future is &lt;em&gt;done&lt;/em&gt;, the execution of the wrapped coroutine resumes.</source>
          <target state="translated">タスクは、イベントループでコルーチンを実行するために使用されます。コルーチンがFutureで待機する場合、タスクはコルーチンの実行を中断し、Futureの完了を待ちます。Futureが&lt;em&gt;終了&lt;/em&gt;すると、ラップされたコルーチンの実行が再開されます。</target>
        </trans-unit>
        <trans-unit id="7ad2539642036f28e8b61b0f9b6d99c5a5830bd2" translate="yes" xml:space="preserve">
          <source>Tasks awaiting on &lt;a href=&quot;asyncio-task#asyncio.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; will now block until the &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; method is called again.</source>
          <target state="translated">&lt;a href=&quot;asyncio-task#asyncio.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;で待機していたタスクは、&lt;a href=&quot;stdtypes#set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;メソッドが再度呼び出されるまでブロックされるようになりました。</target>
        </trans-unit>
        <trans-unit id="81a5cbff1d85f3a27872443b815bea858276d844" translate="yes" xml:space="preserve">
          <source>Tasks support the &lt;a href=&quot;contextvars#module-contextvars&quot;&gt;&lt;code&gt;contextvars&lt;/code&gt;&lt;/a&gt; module. When a Task is created it copies the current context and later runs its coroutine in the copied context.</source>
          <target state="translated">タスクは&lt;a href=&quot;contextvars#module-contextvars&quot;&gt; &lt;code&gt;contextvars&lt;/code&gt; &lt;/a&gt;モジュールをサポートします。タスクが作成されると、現在のコンテキストがコピーされ、後でそのコルーチンがコピーされたコンテキストで実行されます。</target>
        </trans-unit>
        <trans-unit id="c851c0b9d4006555fe7f3404359f227c45d9d618" translate="yes" xml:space="preserve">
          <source>Tcl and the Tk Toolkit</source>
          <target state="translated">Tcl と Tk ツールキット</target>
        </trans-unit>
        <trans-unit id="43a5e042b92461e70adb58a52473afadf173f803" translate="yes" xml:space="preserve">
          <source>Tcl&amp;rsquo;2004 conference presentation</source>
          <target state="translated">TCL'2004カンファレンスプレゼンテーション</target>
        </trans-unit>
        <trans-unit id="4ad4a8a864c413b47f4e059d9acf57f436c5a7c4" translate="yes" xml:space="preserve">
          <source>Tcl/Tk documentation:</source>
          <target state="translated">Tcl/Tk のドキュメント。</target>
        </trans-unit>
        <trans-unit id="a3403aac734e1750dc5ff0e3802a01f145f5a272" translate="yes" xml:space="preserve">
          <source>Tcl/Tk recent man pages</source>
          <target state="translated">Tcl/TKの最近の人のページ</target>
        </trans-unit>
        <trans-unit id="d158527ef8c2142b4c46d702046ebf260285bd9e" translate="yes" xml:space="preserve">
          <source>Technical Detail</source>
          <target state="translated">技術的な詳細</target>
        </trans-unit>
        <trans-unit id="aa834a46f3cebd900ddb52e6657f6cf355273c46" translate="yes" xml:space="preserve">
          <source>Technically, the returned distribution metadata object is an &lt;a href=&quot;https://docs.python.org/3/library/email.message.html#email.message.EmailMessage&quot;&gt;email.message.Message&lt;/a&gt; instance, but this is an implementation detail, and not part of the stable API. You should only use dictionary-like methods and syntax to access the metadata contents.</source>
          <target state="translated">技術的には、返される配布メタデータオブジェクトは&lt;a href=&quot;https://docs.python.org/3/library/email.message.html#email.message.EmailMessage&quot;&gt;email.message.Message&lt;/a&gt;インスタンスですが、これは実装の詳細であり、安定したAPIの一部ではありません。メタデータのコンテンツにアクセスするには、辞書のようなメソッドと構文のみを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="3ea0075bea730eec77b806506f32f0d381fcc64b" translate="yes" xml:space="preserve">
          <source>Tell Turtle&amp;rsquo;s state</source>
          <target state="translated">カメの状態を教えて</target>
        </trans-unit>
        <trans-unit id="57c9fa98eae32bb5e5b49439a7536aa770d066a7" translate="yes" xml:space="preserve">
          <source>Tell the &lt;a href=&quot;#socketserver.BaseServer.serve_forever&quot;&gt;&lt;code&gt;serve_forever()&lt;/code&gt;&lt;/a&gt; loop to stop and wait until it does.</source>
          <target state="translated">知らせる&lt;a href=&quot;#socketserver.BaseServer.serve_forever&quot;&gt; &lt;code&gt;serve_forever()&lt;/code&gt; &lt;/a&gt;を停止し、それがないまで待機するループを。</target>
        </trans-unit>
        <trans-unit id="f6d6d31710ade58855c0e0dc2e38de65e346cb3d" translate="yes" xml:space="preserve">
          <source>Tell the driver that there is likely to be a pause in the output, making it possible for the device to handle the pause more intelligently. You might use this after playing a spot sound effect, before waiting for user input, or before doing disk I/O.</source>
          <target state="translated">出力に一時停止が発生する可能性が高いことをドライバに伝え、デバイスがよりインテリジェントに一時停止を処理できるようにします。これは、スポット効果音を再生した後、ユーザ入力を待つ前、またはディスク I/O を行う前に使用することができます。</target>
        </trans-unit>
        <trans-unit id="979f0c58a42b6ec68148003150326a19672c0c06" translate="yes" xml:space="preserve">
          <source>Tells the logging system to use the class &lt;em&gt;klass&lt;/em&gt; when instantiating a logger. The class should define &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; such that only a name argument is required, and the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; should call &lt;code&gt;Logger.__init__()&lt;/code&gt;. This function is typically called before any loggers are instantiated by applications which need to use custom logger behavior. After this call, as at any other time, do not instantiate loggers directly using the subclass: continue to use the &lt;a href=&quot;#logging.getLogger&quot;&gt;&lt;code&gt;logging.getLogger()&lt;/code&gt;&lt;/a&gt; API to get your loggers.</source>
          <target state="translated">ロガーをインスタンス化するときにクラス&lt;em&gt;klass&lt;/em&gt;を使用するようにロギングシステムに&lt;em&gt;指示&lt;/em&gt;します。クラスは&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;を定義して、名前引数のみが必要となるようにし、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Logger.__init__()&lt;/code&gt; 呼び出すようにする必要があります。この関数は通常、カスタムロガー動作を使用する必要があるアプリケーションによってロガーがインスタンス化される前に呼び出されます。この呼び出しの後、他の場合と同様に、サブクラスを使用してロガーを直接インスタンス化しないでください。ロガーを取得するために引き続き&lt;a href=&quot;#logging.getLogger&quot;&gt; &lt;code&gt;logging.getLogger()&lt;/code&gt; &lt;/a&gt; APIを使用してください。</target>
        </trans-unit>
        <trans-unit id="1ee4ea885f6bcb046b3f3aa350eedc6e6efae427" translate="yes" xml:space="preserve">
          <source>Telnet Example</source>
          <target state="translated">Telnet の例</target>
        </trans-unit>
        <trans-unit id="986434a39af28397b35384c75e8a00e8ea6b0648" translate="yes" xml:space="preserve">
          <source>Telnet Objects</source>
          <target state="translated">Telnet オブジェクト</target>
        </trans-unit>
        <trans-unit id="78c16f64ddfd962c1a4af200be96953360f3c35a" translate="yes" xml:space="preserve">
          <source>Template Objects</source>
          <target state="translated">テンプレートオブジェクト</target>
        </trans-unit>
        <trans-unit id="e3efa6f36d852abc780df7bdacccc378b52ac40e" translate="yes" xml:space="preserve">
          <source>Template objects following methods:</source>
          <target state="translated">以下の方法でテンプレートオブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="dc68610743d7021a571f80b8ceb084cbd65c3e6a" translate="yes" xml:space="preserve">
          <source>Template strings</source>
          <target state="translated">テンプレート文字列</target>
        </trans-unit>
        <trans-unit id="5a89087fcb3dbd31fb0209ea648ced885e6487d2" translate="yes" xml:space="preserve">
          <source>Template strings provide simpler string substitutions as described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0292&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 292&lt;/strong&gt;&lt;/a&gt;. A primary use case for template strings is for internationalization (i18n) since in that context, the simpler syntax and functionality makes it easier to translate than other built-in string formatting facilities in Python. As an example of a library built on template strings for i18n, see the &lt;a href=&quot;http://flufli18n.readthedocs.io/en/latest/&quot;&gt;flufl.i18n&lt;/a&gt; package.</source>
          <target state="translated">テンプレート文字列は、&lt;a href=&quot;https://www.python.org/dev/peps/pep-0292&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 292で&lt;/strong&gt;&lt;/a&gt;説明されているように、より単純な文字列置換を提供します。テンプレート文字列の主な使用例は、国際化（i18n）です。そのコンテキストでは、構文と機能が単純であるため、Pythonの他の組み込みの文字列フォーマット機能よりも翻訳が簡単です。i18nのテンプレート文字列に基づいて構築されたライブラリの例として、&lt;a href=&quot;http://flufli18n.readthedocs.io/en/latest/&quot;&gt;flufl.i18n&lt;/a&gt;パッケージを参照してください。</target>
        </trans-unit>
        <trans-unit id="8a9deb261f9b2f4d0f7eded9969ecdd7d5833596" translate="yes" xml:space="preserve">
          <source>Template strings support &lt;code&gt;$&lt;/code&gt;-based substitutions, using the following rules:</source>
          <target state="translated">テンプレート文字列は、次のルールを使用して、 &lt;code&gt;$&lt;/code&gt; ベースの置換をサポートします。</target>
        </trans-unit>
        <trans-unit id="0947e54aa814a89db0132f2a3a8abba379ef8ac5" translate="yes" xml:space="preserve">
          <source>Temporarily Suppressing Warnings</source>
          <target state="translated">警告の一時的な抑制</target>
        </trans-unit>
        <trans-unit id="fb0de27eea1e97b394b820d91ec3fc9180ea1196" translate="yes" xml:space="preserve">
          <source>Temporarily set the environment variable &lt;code&gt;envvar&lt;/code&gt; to the value of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">一時的に環境変数 &lt;code&gt;envvar&lt;/code&gt; をvalueの値に設定し &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c6165ec5ae55f10e836365e531adb4499b9792f" translate="yes" xml:space="preserve">
          <source>Temporarily sets the current theme to &lt;em&gt;themename&lt;/em&gt;, apply specified &lt;em&gt;settings&lt;/em&gt; and then restore the previous theme.</source>
          <target state="translated">現在のテーマを一時的に&lt;em&gt;themename&lt;/em&gt;に&lt;em&gt;設定し&lt;/em&gt;、指定した&lt;em&gt;設定&lt;/em&gt;を適用してから、以前のテーマを復元し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f9891b3e90ff69ceb72b7031cf9b6011e339fc99" translate="yes" xml:space="preserve">
          <source>Temporarily unset the environment variable &lt;code&gt;envvar&lt;/code&gt;.</source>
          <target state="translated">環境変数 &lt;code&gt;envvar&lt;/code&gt; を一時的に設定解除します。</target>
        </trans-unit>
        <trans-unit id="69631d1cc986e660695cb30ca0598a3183aa39ab" translate="yes" xml:space="preserve">
          <source>Temporary breakpoint, which is removed automatically when it is first hit. The arguments are the same as for &lt;a href=&quot;#pdbcommand-break&quot;&gt;&lt;code&gt;break&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一時的なブレークポイント。最初にヒットしたときに自動的に削除されます。引数は&lt;a href=&quot;#pdbcommand-break&quot;&gt; &lt;code&gt;break&lt;/code&gt; &lt;/a&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="714a4b8e0ad4f7e2f284e3700b61738448e85029" translate="yes" xml:space="preserve">
          <source>Terminal elements are represented in much the same way, but without any child elements and the addition of the source text which was identified. The example of the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; keyword above is representative. The various types of terminal symbols are defined in the C header file &lt;code&gt;Include/token.h&lt;/code&gt; and the Python module &lt;a href=&quot;token#module-token&quot;&gt;&lt;code&gt;token&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">端末要素はほとんど同じ方法で表現されますが、子要素や識別されたソーステキストは追加されません。上記の&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt;キーワードの例は代表的なものです。さまざまなタイプの終端記号が、Cヘッダーファイル &lt;code&gt;Include/token.h&lt;/code&gt; およびPythonモジュール&lt;a href=&quot;token#module-token&quot;&gt; &lt;code&gt;token&lt;/code&gt; &lt;/a&gt;定義されています。</target>
        </trans-unit>
        <trans-unit id="6f5954e9ee331c9765fcb2626ab0eea8827305bb" translate="yes" xml:space="preserve">
          <source>Terminal resize event</source>
          <target state="translated">端末リサイズイベント</target>
        </trans-unit>
        <trans-unit id="072eb39d82843db4dd7fa61737a180b6aeb46526" translate="yes" xml:space="preserve">
          <source>Terminate if the window is 1 line, otherwise insert newline.</source>
          <target state="translated">ウィンドウが1行の場合は終了し、そうでない場合は改行を挿入します。</target>
        </trans-unit>
        <trans-unit id="fd033bc9a5266b01e8d52bb455c0d01450f65fe0" translate="yes" xml:space="preserve">
          <source>Terminate the SMTP session and close the connection. Return the result of the SMTP &lt;code&gt;QUIT&lt;/code&gt; command.</source>
          <target state="translated">SMTPセッションを終了し、接続を閉じます。SMTP &lt;code&gt;QUIT&lt;/code&gt; コマンドの結果を返します。</target>
        </trans-unit>
        <trans-unit id="56021beb31597eb1df8180161a2353ef1babbdef" translate="yes" xml:space="preserve">
          <source>Terminate the process. On Unix this is done using the &lt;code&gt;SIGTERM&lt;/code&gt; signal; on Windows &lt;code&gt;TerminateProcess()&lt;/code&gt; is used. Note that exit handlers and finally clauses, etc., will not be executed.</source>
          <target state="translated">プロセスを終了します。Unixでは、これは &lt;code&gt;SIGTERM&lt;/code&gt; シグナルを使用して行われます。Windowsでは &lt;code&gt;TerminateProcess()&lt;/code&gt; が使用されます。出口ハンドラーやfinally節などは実行されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="180e106003e06373ecda6bf07c34be4f01515a40" translate="yes" xml:space="preserve">
          <source>Terminate, returning the window contents.</source>
          <target state="translated">終了し、ウィンドウの内容を返します。</target>
        </trans-unit>
        <trans-unit id="573640e028ca71d2e1a5f91f98a1da47339051c3" translate="yes" xml:space="preserve">
          <source>Terminates a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; clause. The interpreter recalls whether the exception has to be re-raised or execution has to be continued depending on the value of TOS.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;節を終了します。インタプリタは、TOSの値に応じて、例外を再発生させる必要があるか、実行を継続する必要があるかをリコールします。</target>
        </trans-unit>
        <trans-unit id="a6f331fdf9d1e91ec6c3749198d30191ebd4b47c" translate="yes" xml:space="preserve">
          <source>Terminates an &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-for&quot;&gt;&lt;code&gt;async for&lt;/code&gt;&lt;/a&gt; loop. Handles an exception raised when awaiting a next item. If TOS is &lt;a href=&quot;exceptions#StopAsyncIteration&quot;&gt;&lt;code&gt;StopAsyncIteration&lt;/code&gt;&lt;/a&gt; pop 7 values from the stack and restore the exception state using the second three of them. Otherwise re-raise the exception using the three values from the stack. An exception handler block is removed from the block stack.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-for&quot;&gt; &lt;code&gt;async for&lt;/code&gt; &lt;/a&gt;ループを終了します。次のアイテムを待つときに発生した例外を処理します。TOSが&lt;a href=&quot;exceptions#StopAsyncIteration&quot;&gt; &lt;code&gt;StopAsyncIteration&lt;/code&gt; の&lt;/a&gt;場合、スタックから7つの値をポップし、2番目の3つを使用して例外状態を復元します。それ以外の場合は、スタックの3つの値を使用して例外を再発生させます。例外ハンドラブロックがブロックスタックから削除されます。</target>
        </trans-unit>
        <trans-unit id="56a0877f18348cf0be96e625fedb6746aeee4fd0" translate="yes" xml:space="preserve">
          <source>Test &lt;em&gt;x&lt;/em&gt; for membership in &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;sの&lt;/em&gt;メンバーシップについて&lt;em&gt;x&lt;/em&gt;をテストします。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5463ef35f9a17bd79bc9011c028c2e5fc9f65e5f" translate="yes" xml:space="preserve">
          <source>Test &lt;em&gt;x&lt;/em&gt; for non-membership in &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;sの&lt;/em&gt;非メンバーシップについて&lt;em&gt;x&lt;/em&gt;をテストします。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eb6fdd2e9dab95cad6f2778f0163bd3ef28d1d0e" translate="yes" xml:space="preserve">
          <source>Test Discovery</source>
          <target state="translated">テストディスカバリー</target>
        </trans-unit>
        <trans-unit id="ab7ed7054249cf37446be8e0a0b5203982c7e901" translate="yes" xml:space="preserve">
          <source>Test Driven Development</source>
          <target state="translated">テスト駆動開発</target>
        </trans-unit>
        <trans-unit id="5bdbfab66783753cdeb866267c3e01eab16087f3" translate="yes" xml:space="preserve">
          <source>Test cases</source>
          <target state="translated">テストケース</target>
        </trans-unit>
        <trans-unit id="f786dd8c58ee071092250227304be11a0ce508ee" translate="yes" xml:space="preserve">
          <source>Test code should be modified much less frequently than the code it tests.</source>
          <target state="translated">テストコードの修正頻度は、テストするコードよりもはるかに少ないはずです。</target>
        </trans-unit>
        <trans-unit id="b3c54db43b5f25ef6cbe415cd8d28c97adca5c02" translate="yes" xml:space="preserve">
          <source>Test discovery is implemented in &lt;a href=&quot;#unittest.TestLoader.discover&quot;&gt;&lt;code&gt;TestLoader.discover()&lt;/code&gt;&lt;/a&gt;, but can also be used from the command line. The basic command-line usage is:</source>
          <target state="translated">テスト検出は&lt;a href=&quot;#unittest.TestLoader.discover&quot;&gt; &lt;code&gt;TestLoader.discover()&lt;/code&gt; に&lt;/a&gt;実装されていますが、コマンドラインからも使用できます。基本的なコマンドラインの使用法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="ae6fc69df923b84e706cb7874cf768d1ea87acab" translate="yes" xml:space="preserve">
          <source>Test discovery loads tests by importing them. Once test discovery has found all the test files from the start directory you specify it turns the paths into package names to import. For example &lt;code&gt;foo/bar/baz.py&lt;/code&gt; will be imported as &lt;code&gt;foo.bar.baz&lt;/code&gt;.</source>
          <target state="translated">テストディスカバリは、テストをインポートしてロードします。テストディスカバリが指定した開始ディレクトリからすべてのテストファイルを検出すると、パスをパッケージ名に変換してインポートします。たとえば、 &lt;code&gt;foo/bar/baz.py&lt;/code&gt; は &lt;code&gt;foo.bar.baz&lt;/code&gt; としてインポートされます。</target>
        </trans-unit>
        <trans-unit id="ac2618574421564be2711f0c9df7d88b7cb3369f" translate="yes" xml:space="preserve">
          <source>Test examples associated with object &lt;em&gt;f&lt;/em&gt;; for example, &lt;em&gt;f&lt;/em&gt; may be a string, a module, a function, or a class object.</source>
          <target state="translated">オブジェクト&lt;em&gt;fに&lt;/em&gt;関連するテスト例。たとえば、&lt;em&gt;f&lt;/em&gt;は文字列、モジュール、関数、またはクラスオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="3fd9094d262fa8bc19984e455b37cda962b9dd52" translate="yes" xml:space="preserve">
          <source>Test examples in docstrings in functions and classes reachable from module &lt;em&gt;m&lt;/em&gt; (or module &lt;a href=&quot;__main__#module-__main__&quot;&gt;&lt;code&gt;__main__&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;m&lt;/em&gt; is not supplied or is &lt;code&gt;None&lt;/code&gt;), starting with &lt;code&gt;m.__doc__&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;m.__doc__&lt;/code&gt; で始まる、モジュール&lt;em&gt;m&lt;/em&gt;（または&lt;em&gt;m&lt;/em&gt;が指定されていないか &lt;code&gt;None&lt;/code&gt; の場合はモジュール&lt;a href=&quot;__main__#module-__main__&quot;&gt; &lt;code&gt;__main__&lt;/code&gt; &lt;/a&gt;&lt;em&gt;）&lt;/em&gt;から到達可能な関数およびクラスのdocstringのテスト例。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c8e11e0daab30f5e8535ab9421c43ae03c6ece4e" translate="yes" xml:space="preserve">
          <source>Test examples in the file named &lt;em&gt;filename&lt;/em&gt;. Return &lt;code&gt;(failure_count,
test_count)&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt;という名前の&lt;em&gt;ファイルで&lt;/em&gt;例をテストし&lt;em&gt;ます&lt;/em&gt;。 &lt;code&gt;(failure_count, test_count)&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="1fdc88bc9bdb7b33c186720ef5c4e0fd14d158bb" translate="yes" xml:space="preserve">
          <source>Test for syntax errors in &lt;em&gt;statement&lt;/em&gt; by attempting to compile &lt;em&gt;statement&lt;/em&gt;. &lt;em&gt;testcase&lt;/em&gt; is the &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; instance for the test. &lt;em&gt;errtext&lt;/em&gt; is the regular expression which should match the string representation of the raised &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;lineno&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, compares to the line of the exception. If &lt;em&gt;offset&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, compares to the offset of the exception.</source>
          <target state="translated">で構文エラーのためのテスト&lt;em&gt;文の&lt;/em&gt;コンパイルしようとすることによって&lt;em&gt;文を&lt;/em&gt;。&lt;em&gt;testcase&lt;/em&gt;は&lt;em&gt;テスト&lt;/em&gt;の&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;インスタンスです。&lt;em&gt;errtextは&lt;/em&gt;高めの文字列表現と一致する必要があり、正規表現である&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;lineno&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、例外の行と比較します。&lt;em&gt;offset&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、例外のオフセットと比較します。</target>
        </trans-unit>
        <trans-unit id="c4235725b64e90a6f1d7737e25022f2edd399fe5" translate="yes" xml:space="preserve">
          <source>Test for syntax warning in &lt;em&gt;statement&lt;/em&gt; by attempting to compile &lt;em&gt;statement&lt;/em&gt;. Test also that the &lt;a href=&quot;exceptions#SyntaxWarning&quot;&gt;&lt;code&gt;SyntaxWarning&lt;/code&gt;&lt;/a&gt; is emitted only once, and that it will be converted to a &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; when turned into error. &lt;em&gt;testcase&lt;/em&gt; is the &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; instance for the test. &lt;em&gt;errtext&lt;/em&gt; is the regular expression which should match the string representation of the emitted &lt;a href=&quot;exceptions#SyntaxWarning&quot;&gt;&lt;code&gt;SyntaxWarning&lt;/code&gt;&lt;/a&gt; and raised &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;lineno&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, compares to the line of the warning and exception. If &lt;em&gt;offset&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, compares to the offset of the exception.</source>
          <target state="translated">構文警告のためのテスト&lt;em&gt;文の&lt;/em&gt;コンパイルしようとすることによって&lt;em&gt;文を&lt;/em&gt;。また、その試験&lt;a href=&quot;exceptions#SyntaxWarning&quot;&gt; &lt;code&gt;SyntaxWarning&lt;/code&gt; は&lt;/a&gt;一度だけ放射され、それはに変換されるということである&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;エラーになったとき。&lt;em&gt;testcase&lt;/em&gt;は、&lt;em&gt;テスト&lt;/em&gt;の&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;インスタンスです。&lt;em&gt;errtextが&lt;/em&gt;放出されるの文字列表現と一致する必要があり、正規表現で&lt;a href=&quot;exceptions#SyntaxWarning&quot;&gt; &lt;code&gt;SyntaxWarning&lt;/code&gt; を&lt;/a&gt;して上げ&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;lineno&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、警告と例外の行と比較します。&lt;em&gt;オフセット&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; でない場合、例外のオフセットと比較します。</target>
        </trans-unit>
        <trans-unit id="e8e482572a6e2a0b7cec6b7a36589209058e88d1" translate="yes" xml:space="preserve">
          <source>Test modules and packages can customize test loading and discovery by through the &lt;a href=&quot;#load-tests-protocol&quot;&gt;load_tests protocol&lt;/a&gt;.</source>
          <target state="translated">テストモジュールとパッケージは、&lt;a href=&quot;#load-tests-protocol&quot;&gt;load_testsプロトコルを使用&lt;/a&gt;して、テストの読み込みと検出をカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="1fe477cac5445537b9dc7ac19f68f459535df4a3" translate="yes" xml:space="preserve">
          <source>Test modules can be specified by file path as well:</source>
          <target state="translated">テストモジュールはファイルパスで指定することもできます。</target>
        </trans-unit>
        <trans-unit id="51c68a35f2582d9e248723342ef0b4d3c4ab9a13" translate="yes" xml:space="preserve">
          <source>Test that &lt;em&gt;expr&lt;/em&gt; is (or is not) &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;expr&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; であるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="09baf90b22e7f8fe91854aa6e1a470a4312b5398" translate="yes" xml:space="preserve">
          <source>Test that &lt;em&gt;expr&lt;/em&gt; is true (or false).</source>
          <target state="translated">&lt;em&gt;expr&lt;/em&gt;が真（または偽）であることをテストします。</target>
        </trans-unit>
        <trans-unit id="3736830b5e038d416279e9e6f5c58bc4301451f3" translate="yes" xml:space="preserve">
          <source>Test that &lt;em&gt;first&lt;/em&gt; and &lt;em&gt;second&lt;/em&gt; are approximately (or not approximately) equal by computing the difference, rounding to the given number of decimal &lt;em&gt;places&lt;/em&gt; (default 7), and comparing to zero. Note that these methods round the values to the given number of &lt;em&gt;decimal places&lt;/em&gt; (i.e. like the &lt;a href=&quot;functions#round&quot;&gt;&lt;code&gt;round()&lt;/code&gt;&lt;/a&gt; function) and not &lt;em&gt;significant digits&lt;/em&gt;.</source>
          <target state="translated">テストことを&lt;em&gt;第一&lt;/em&gt;及び&lt;em&gt;第二の&lt;/em&gt;約（またはしない略）は、小数点以下の所定数に丸める、差を計算することによって等しく&lt;em&gt;場所&lt;/em&gt;（デフォルト7）、およびゼロと比較します。これらのメソッドは、&lt;em&gt;有効桁&lt;/em&gt;数ではなく、指定された&lt;em&gt;小数点以下の桁数&lt;/em&gt;（つまり、&lt;a href=&quot;functions#round&quot;&gt; &lt;code&gt;round()&lt;/code&gt; &lt;/a&gt;関数のように）に値を丸めることに注意してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="08f1d05ada5fc1ff6126334b279a2a1edfe50b8c" translate="yes" xml:space="preserve">
          <source>Test that &lt;em&gt;first&lt;/em&gt; and &lt;em&gt;second&lt;/em&gt; are equal. If the values do not compare equal, the test will fail.</source>
          <target state="translated">&lt;em&gt;1番目&lt;/em&gt;と&lt;em&gt;2番目&lt;/em&gt;が等しいことをテストします。値が等しくない場合、テストは失敗します。</target>
        </trans-unit>
        <trans-unit id="3ee894a74d8ec94f5ae9d3bcfca07533d6dd5eaf" translate="yes" xml:space="preserve">
          <source>Test that &lt;em&gt;first&lt;/em&gt; and &lt;em&gt;second&lt;/em&gt; are not equal. If the values do compare equal, the test will fail.</source>
          <target state="translated">&lt;em&gt;1番目&lt;/em&gt;と&lt;em&gt;2番目&lt;/em&gt;が等しくないことをテストします。値が等しい場合、テストは失敗します。</target>
        </trans-unit>
        <trans-unit id="0fd50d60f4aebeb0a25dcb9e5609c7f8246051b3" translate="yes" xml:space="preserve">
          <source>Test that &lt;em&gt;first&lt;/em&gt; and &lt;em&gt;second&lt;/em&gt; evaluate (or don&amp;rsquo;t evaluate) to the same object.</source>
          <target state="translated">&lt;em&gt;最初&lt;/em&gt;と&lt;em&gt;2番目&lt;/em&gt;が同じオブジェクトに対して評価する（または評価しない）ことをテストします。</target>
        </trans-unit>
        <trans-unit id="9a1cf6be14d0576501e4cf568a99625aa36624c7" translate="yes" xml:space="preserve">
          <source>Test that &lt;em&gt;first&lt;/em&gt; is (or is not) in &lt;em&gt;second&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;最初&lt;/em&gt;が&lt;em&gt;2番目に&lt;/em&gt;ある（またはない）テスト。</target>
        </trans-unit>
        <trans-unit id="9fab7717de343b5f61fcb12f39620674b0cf8da4" translate="yes" xml:space="preserve">
          <source>Test that &lt;em&gt;first&lt;/em&gt; is respectively &amp;gt;, &amp;gt;=, &amp;lt; or &amp;lt;= than &lt;em&gt;second&lt;/em&gt; depending on the method name. If not, the test will fail:</source>
          <target state="translated">メソッド名に応じて、&lt;em&gt;最初&lt;/em&gt;がそれぞれ&amp;gt;、&amp;gt; =、&amp;lt;、または&amp;lt;=が&lt;em&gt;2番目&lt;/em&gt;よりも大きいことをテストします。そうでない場合、テストは失敗します。</target>
        </trans-unit>
        <trans-unit id="758622e273eb447756fd82218de39fd9e387ffba" translate="yes" xml:space="preserve">
          <source>Test that &lt;em&gt;obj&lt;/em&gt; is (or is not) an instance of &lt;em&gt;cls&lt;/em&gt; (which can be a class or a tuple of classes, as supported by &lt;a href=&quot;functions#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt;). To check for the exact type, use &lt;a href=&quot;#unittest.TestCase.assertIs&quot;&gt;&lt;code&gt;assertIs(type(obj), cls)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;obj&lt;/em&gt;が&lt;em&gt;clsの&lt;/em&gt;インスタンスであるかどうかをテストします（&lt;a href=&quot;functions#isinstance&quot;&gt; &lt;code&gt;isinstance()&lt;/code&gt; で&lt;/a&gt;サポートされているように、クラスまたはクラスのタプルにすることができます）。正確なタイプを確認するには、&lt;a href=&quot;#unittest.TestCase.assertIs&quot;&gt; &lt;code&gt;assertIs(type(obj), cls)&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9e5a55f49dd7a534f8b2cf1e904ca582f1f5f129" translate="yes" xml:space="preserve">
          <source>Test that a &lt;em&gt;regex&lt;/em&gt; search matches (or does not match) &lt;em&gt;text&lt;/em&gt;. In case of failure, the error message will include the pattern and the &lt;em&gt;text&lt;/em&gt; (or the pattern and the part of &lt;em&gt;text&lt;/em&gt; that unexpectedly matched). &lt;em&gt;regex&lt;/em&gt; may be a regular expression object or a string containing a regular expression suitable for use by &lt;a href=&quot;re#re.search&quot;&gt;&lt;code&gt;re.search()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;正規表現&lt;/em&gt;検索が&lt;em&gt;textと&lt;/em&gt;一致する（または一致しない）ことをテストし&lt;em&gt;ます&lt;/em&gt;。失敗した場合、エラーメッセージにはパターンと&lt;em&gt;テキスト&lt;/em&gt;（またはパターンと&lt;em&gt;テキスト&lt;/em&gt;の一部が予期せず一致した）が含まれます。&lt;em&gt;regex&lt;/em&gt;は、正規表現オブジェクトまたは&lt;a href=&quot;re#re.search&quot;&gt; &lt;code&gt;re.search()&lt;/code&gt; &lt;/a&gt;での使用に適した正規表現を含む文字列です。</target>
        </trans-unit>
        <trans-unit id="af0edbd1e9710f76fdbabc4e0b0bffc3e19f660e" translate="yes" xml:space="preserve">
          <source>Test that a warning is triggered when &lt;em&gt;callable&lt;/em&gt; is called with any positional or keyword arguments that are also passed to &lt;a href=&quot;#unittest.TestCase.assertWarns&quot;&gt;&lt;code&gt;assertWarns()&lt;/code&gt;&lt;/a&gt;. The test passes if &lt;em&gt;warning&lt;/em&gt; is triggered and fails if it isn&amp;rsquo;t. Any exception is an error. To catch any of a group of warnings, a tuple containing the warning classes may be passed as &lt;em&gt;warnings&lt;/em&gt;.</source>
          <target state="translated">ときに警告がトリガされていることをテスト&lt;em&gt;呼び出し可能に&lt;/em&gt;も渡される任意の位置またはキーワード引数で呼び出され&lt;a href=&quot;#unittest.TestCase.assertWarns&quot;&gt; &lt;code&gt;assertWarns()&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;警告&lt;/em&gt;がトリガーされた場合、テストは成功し、トリガーされなかった場合は失敗します。例外はすべてエラーです。警告のグループのいずれかをキャッチするには、警告クラスを含むタプルを&lt;em&gt;warnings&lt;/em&gt;として渡すことができ&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="fe7655599618476a611da3f9b310926487e95bca" translate="yes" xml:space="preserve">
          <source>Test that an exception is raised when &lt;em&gt;callable&lt;/em&gt; is called with any positional or keyword arguments that are also passed to &lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt;&lt;code&gt;assertRaises()&lt;/code&gt;&lt;/a&gt;. The test passes if &lt;em&gt;exception&lt;/em&gt; is raised, is an error if another exception is raised, or fails if no exception is raised. To catch any of a group of exceptions, a tuple containing the exception classes may be passed as &lt;em&gt;exception&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt; &lt;code&gt;assertRaises()&lt;/code&gt; に&lt;/a&gt;も渡される位置引数またはキーワード引数で&lt;em&gt;callable&lt;/em&gt;が呼び出されたときに例外が発生することをテストします。&lt;em&gt;例外&lt;/em&gt;が発生した場合、テストは成功し、別の例外が発生した場合はエラー、例外が発生しなかった場合は失敗します。例外のグループのいずれかをキャッチするには、例外クラスを含むタプルをexceptionとして渡すことができ&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9369d81fe32ae88f220c14ff0fbb2c0171f7b74c" translate="yes" xml:space="preserve">
          <source>Test that sequence &lt;em&gt;first&lt;/em&gt; contains the same elements as &lt;em&gt;second&lt;/em&gt;, regardless of their order. When they don&amp;rsquo;t, an error message listing the differences between the sequences will be generated.</source>
          <target state="translated">順序に関係なく、&lt;em&gt;最初&lt;/em&gt;にシーケンスに&lt;em&gt;second&lt;/em&gt;と同じ要素が含まれていることをテストします。そうでない場合、シーケンス間の違いをリストするエラーメッセージが生成されます。</target>
        </trans-unit>
        <trans-unit id="fd95d388e0bc9cfcb7e0be95b669bdc0516c58ce" translate="yes" xml:space="preserve">
          <source>Test that the multiline string &lt;em&gt;first&lt;/em&gt; is equal to the string &lt;em&gt;second&lt;/em&gt;. When not equal a diff of the two strings highlighting the differences will be included in the error message. This method is used by default when comparing strings with &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">複数行の文字列&lt;em&gt;first&lt;/em&gt;が文字列&lt;em&gt;second&lt;/em&gt;と等しいことをテストします。等しくない場合、違いを強調表示する2つの文字列の差分がエラーメッセージに含まれます。このメソッドは、ストリングを&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; で&lt;/a&gt;比較するときにデフォルトで使用されます。</target>
        </trans-unit>
        <trans-unit id="2a09605ab8c6b2346563311c688a8c06a6dbfc71" translate="yes" xml:space="preserve">
          <source>Test that two dictionaries are equal. If not, an error message is constructed that shows the differences in the dictionaries. This method will be used by default to compare dictionaries in calls to &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つの辞書が等しいことをテストします。そうでない場合は、辞書の違いを示すエラーメッセージが作成されます。このメソッドは、デフォルトで&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; の&lt;/a&gt;呼び出しで辞書を比較するために使用されます。</target>
        </trans-unit>
        <trans-unit id="b4a7f4372cff07bb2871cfb34af58249fa008917" translate="yes" xml:space="preserve">
          <source>Test the widget&amp;rsquo;s state. If a callback is not specified, returns &lt;code&gt;True&lt;/code&gt; if the widget state matches &lt;em&gt;statespec&lt;/em&gt; and &lt;code&gt;False&lt;/code&gt; otherwise. If callback is specified then it is called with args if widget state matches &lt;em&gt;statespec&lt;/em&gt;.</source>
          <target state="translated">ウィジェットの状態をテストします。コールバックが指定されていない場合、ウィジェットの状態が&lt;em&gt;statespec&lt;/em&gt;と一致する場合は &lt;code&gt;True&lt;/code&gt; を、そうでない場合は &lt;code&gt;False&lt;/code&gt; を返します。コールバックが指定されている場合、ウィジェットの状態が&lt;em&gt;statespecと&lt;/em&gt;一致する場合、それはargsで&lt;em&gt;呼び出され&lt;/em&gt;ます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3252a55c6d8b2b05365bf27eff7c204fbe5a8d0f" translate="yes" xml:space="preserve">
          <source>Test whether &lt;em&gt;filename&lt;/em&gt; matches &lt;em&gt;pattern&lt;/em&gt;, returning &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;; the comparison is case-sensitive and does not apply &lt;a href=&quot;os.path#os.path.normcase&quot;&gt;&lt;code&gt;os.path.normcase()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;ファイル名が&lt;/em&gt;&lt;em&gt;パターン&lt;/em&gt;と一致するかどうかをテストし、&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;返します。比較では大文字と小文字が区別され、&lt;a href=&quot;os.path#os.path.normcase&quot;&gt; &lt;code&gt;os.path.normcase()&lt;/code&gt; &lt;/a&gt;は適用されません。</target>
        </trans-unit>
        <trans-unit id="1bbae1e68b4ab8b26adcd3775306845fefd99a62" translate="yes" xml:space="preserve">
          <source>Test whether every element in &lt;em&gt;other&lt;/em&gt; is in the set.</source>
          <target state="translated">&lt;em&gt;他の&lt;/em&gt;すべての要素がセット内にあるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="f947d05a8e989c8b1556bb5a7ea38dede393dbe6" translate="yes" xml:space="preserve">
          <source>Test whether every element in the set is in &lt;em&gt;other&lt;/em&gt;.</source>
          <target state="translated">セット内のすべての要素が&lt;em&gt;other&lt;/em&gt;内にあるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="2a8c5d283f0787819be784087bb6409980272a0e" translate="yes" xml:space="preserve">
          <source>Test whether self and other have the same exponent or whether both are &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">selfとotherの指数が同じかどうか、または両方が &lt;code&gt;NaN&lt;/code&gt; かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="3637628b04fc850c896798d027ee4ca99b188b72" translate="yes" xml:space="preserve">
          <source>Test whether the &lt;em&gt;filename&lt;/em&gt; string matches the &lt;em&gt;pattern&lt;/em&gt; string, returning &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;. Both parameters are case-normalized using &lt;a href=&quot;os.path#os.path.normcase&quot;&gt;&lt;code&gt;os.path.normcase()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#fnmatch.fnmatchcase&quot;&gt;&lt;code&gt;fnmatchcase()&lt;/code&gt;&lt;/a&gt; can be used to perform a case-sensitive comparison, regardless of whether that&amp;rsquo;s standard for the operating system.</source>
          <target state="translated">&lt;em&gt;ファイル名の&lt;/em&gt;文字列が&lt;em&gt;パターン&lt;/em&gt;文字列と一致するかどうかをテストし、&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; を&lt;/a&gt;返します。どちらのパラメーターも&lt;a href=&quot;os.path#os.path.normcase&quot;&gt; &lt;code&gt;os.path.normcase()&lt;/code&gt; &lt;/a&gt;を使用して大文字と小文字が正規化されています。&lt;a href=&quot;#fnmatch.fnmatchcase&quot;&gt; &lt;code&gt;fnmatchcase()&lt;/code&gt; &lt;/a&gt;は、オペレーティングシステムの標準であるかどうかに関係なく、大文字と小文字を区別する比較を実行するために使用できます。</target>
        </trans-unit>
        <trans-unit id="bee05867c711f322cfcfe9e76c439a43d28a27a4" translate="yes" xml:space="preserve">
          <source>Test whether the given pair of screen-relative character-cell coordinates are enclosed by the given window, returning &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. It is useful for determining what subset of the screen windows enclose the location of a mouse event.</source>
          <target state="translated">指定された画面相対文字セル座標のペアが指定されたウィンドウに囲まれているかどうかをテストし、 &lt;code&gt;True&lt;/code&gt; または &lt;code&gt;False&lt;/code&gt; を返します。画面ウィンドウのどのサブセットがマウスイベントの場所を囲むかを決定するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="916b10a98c94b3646aca3f798189b9bf36bdb056" translate="yes" xml:space="preserve">
          <source>Test whether the set is a proper subset of &lt;em&gt;other&lt;/em&gt;, that is, &lt;code&gt;set &amp;lt;= other and set != other&lt;/code&gt;.</source>
          <target state="translated">セットが&lt;em&gt;otherの&lt;/em&gt;適切なサブセットであるかどうかをテストします。つまり、 &lt;code&gt;set &amp;lt;= other and set != other&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d432513ee0123cd1a13733349fd041b83c5b1e43" translate="yes" xml:space="preserve">
          <source>Test whether the set is a proper superset of &lt;em&gt;other&lt;/em&gt;, that is, &lt;code&gt;set &amp;gt;=
other and set != other&lt;/code&gt;.</source>
          <target state="translated">セットが&lt;em&gt;otherの&lt;/em&gt;適切なスーパーセットであるかどうかをテストします。つまり、 &lt;code&gt;set &amp;gt;= other and set != other&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0f23698d1ee41342775e72b59b793d4fa4ee7350" translate="yes" xml:space="preserve">
          <source>Test whether the tarfile is valid or not.</source>
          <target state="translated">tar ファイルが有効かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="1f73fcb0d952970335312a2670a1276fac62abe7" translate="yes" xml:space="preserve">
          <source>Test whether the zipfile is valid or not.</source>
          <target state="translated">ZIPファイルが有効かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="5a8150059a72c4f17d4247e501bd049f3fd08488" translate="yes" xml:space="preserve">
          <source>Tested code can be refactored more easily.</source>
          <target state="translated">テスト済みのコードは、より簡単にリファクタリングすることができます。</target>
        </trans-unit>
        <trans-unit id="61f38d1d8201f094a34ac329beb6d755ed79a79e" translate="yes" xml:space="preserve">
          <source>Testing Warnings</source>
          <target state="translated">テストの警告</target>
        </trans-unit>
        <trans-unit id="cc43c151a25f111033e3c67c5282813bd0bb7c14" translate="yes" xml:space="preserve">
          <source>Testing for SSL support</source>
          <target state="translated">SSL対応テスト</target>
        </trans-unit>
        <trans-unit id="7b6553cde91fa3c13041b8a95dc60f532ab97659" translate="yes" xml:space="preserve">
          <source>Testing frameworks built on top of &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; may want access to the &lt;a href=&quot;#unittest.TestResult&quot;&gt;&lt;code&gt;TestResult&lt;/code&gt;&lt;/a&gt; object generated by running a set of tests for reporting purposes; a &lt;a href=&quot;#unittest.TestResult&quot;&gt;&lt;code&gt;TestResult&lt;/code&gt;&lt;/a&gt; instance is returned by the &lt;code&gt;TestRunner.run()&lt;/code&gt; method for this purpose.</source>
          <target state="translated">上に構築されたフレームワークのテスト&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;にアクセスしたいことがあり&lt;a href=&quot;#unittest.TestResult&quot;&gt; &lt;code&gt;TestResult&lt;/code&gt; の&lt;/a&gt;目的を報告するための一連のテストを実行することによって生成されたオブジェクトを、この目的のために、&lt;a href=&quot;#unittest.TestResult&quot;&gt; &lt;code&gt;TestResult&lt;/code&gt; &lt;/a&gt;インスタンスが &lt;code&gt;TestRunner.run()&lt;/code&gt; メソッドによって返されます。</target>
        </trans-unit>
        <trans-unit id="fe919eee0e3ca452b798ae6980b4e58c4af2b5a5" translate="yes" xml:space="preserve">
          <source>Testing frameworks can use the following methods to collect information on the test:</source>
          <target state="translated">テストフレームワークでは、以下のような方法でテストの情報を収集することができます。</target>
        </trans-unit>
        <trans-unit id="38686aaaf5fc5e003212208b9184a178fba7333f" translate="yes" xml:space="preserve">
          <source>Testing in Python Mailing List</source>
          <target state="translated">Pythonのメーリングリストでのテスト</target>
        </trans-unit>
        <trans-unit id="da11bed90e87fd7fb0fbcc4f8ff64942c6b34747" translate="yes" xml:space="preserve">
          <source>Testing range objects for equality with &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; compares them as sequences. That is, two range objects are considered equal if they represent the same sequence of values. (Note that two range objects that compare equal might have different &lt;a href=&quot;#range.start&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#range.stop&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#range.step&quot;&gt;&lt;code&gt;step&lt;/code&gt;&lt;/a&gt; attributes, for example &lt;code&gt;range(0) == range(2, 1, 3)&lt;/code&gt; or &lt;code&gt;range(0, 3, 2) == range(0, 4, 2)&lt;/code&gt;.)</source>
          <target state="translated">&lt;code&gt;==&lt;/code&gt; および &lt;code&gt;!=&lt;/code&gt; を使用して範囲オブジェクトが等しいかどうかをテストすると、それらがシーケンスとして比較されます。つまり、2つの範囲オブジェクトが同じ値のシーケンスを表す場合、それらは等しいと見なされます。等しい比較2つの距離のオブジェクトが異なるかもしれないこと（注&lt;a href=&quot;#range.start&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#range.stop&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt;及び&lt;a href=&quot;#range.step&quot;&gt; &lt;code&gt;step&lt;/code&gt; &lt;/a&gt;例の属性を、 &lt;code&gt;range(0) == range(2, 1, 3)&lt;/code&gt; 又は &lt;code&gt;range(0, 3, 2) == range(0, 4, 2)&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="003efaa02b4b57128dcca991ec741e8a4eeb3716" translate="yes" xml:space="preserve">
          <source>Testing that a weak reference object is still live should be done using the expression &lt;code&gt;ref() is not None&lt;/code&gt;. Normally, application code that needs to use a reference object should follow this pattern:</source>
          <target state="translated">弱参照オブジェクトがまだライブであることのテストは、式 &lt;code&gt;ref() is not None&lt;/code&gt; ことを使用して行う必要があります。通常、参照オブジェクトを使用する必要があるアプリケーションコードは、次のパターンに従う必要があります。</target>
        </trans-unit>
        <trans-unit id="34733bb1e62600c3f8ae30cae693f94f1778a9ed" translate="yes" xml:space="preserve">
          <source>Testing your CGI script</source>
          <target state="translated">CGI スクリプトのテスト</target>
        </trans-unit>
        <trans-unit id="4e19688909d746da7f053c97e9a89a6180114515" translate="yes" xml:space="preserve">
          <source>Tests can be numerous, and their set-up can be repetitive. Luckily, we can factor out set-up code by implementing a method called &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt;, which the testing framework will automatically call for every single test we run:</source>
          <target state="translated">テストは多数になる可能性があり、そのセットアップは繰り返し行うことができます。幸い、&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt;と呼ばれるメソッドを実装することで、セットアップコードを分解できます。これは、テストフレームワークが、実行するすべてのテストごとに自動的に呼び出します。</target>
        </trans-unit>
        <trans-unit id="d252b8a5f27daa8e41c6d3c2cb5eda98be0ec9ff" translate="yes" xml:space="preserve">
          <source>Tests embedded in documentation strings.</source>
          <target state="translated">ドキュメントの文字列に埋め込まれたテスト。</target>
        </trans-unit>
        <trans-unit id="1406d991822128e10256d130b2e562a9f4a563b8" translate="yes" xml:space="preserve">
          <source>Tests for modules written in C must be in separate modules anyway, so why not be consistent?</source>
          <target state="translated">C で書かれたモジュールのテストは、いずれにせよ別々のモジュールで行わなければならないので、なぜ一貫性を持たせないのでしょうか?</target>
        </trans-unit>
        <trans-unit id="09983bd6189c4e80c72f5f7dbeabf106aff83bf9" translate="yes" xml:space="preserve">
          <source>Tests grouped by a &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; are always accessed by iteration. Subclasses can lazily provide tests by overriding &lt;a href=&quot;#unittest.TestSuite.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt;. Note that this method may be called several times on a single suite (for example when counting tests or comparing for equality) so the tests returned by repeated iterations before &lt;a href=&quot;#unittest.TestSuite.run&quot;&gt;&lt;code&gt;TestSuite.run()&lt;/code&gt;&lt;/a&gt; must be the same for each call iteration. After &lt;a href=&quot;#unittest.TestSuite.run&quot;&gt;&lt;code&gt;TestSuite.run()&lt;/code&gt;&lt;/a&gt;, callers should not rely on the tests returned by this method unless the caller uses a subclass that overrides &lt;code&gt;TestSuite._removeTestAtIndex()&lt;/code&gt; to preserve test references.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;によってグループ化されたテストは、常に反復によってアクセスされます。サブクラスは、&lt;a href=&quot;#unittest.TestSuite.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;オーバーライドすることにより、遅延してテストを提供できます。このメソッドは、単一のスイートで複数回呼び出される可能性があることに注意してください（たとえば、テストを数えるとき、または等しいかどうかを比較するとき&lt;a href=&quot;#unittest.TestSuite.run&quot;&gt; &lt;code&gt;TestSuite.run()&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;#unittest.TestSuite.run&quot;&gt; &lt;code&gt;TestSuite.run()&lt;/code&gt; の&lt;/a&gt;後、呼び出し元が &lt;code&gt;TestSuite._removeTestAtIndex()&lt;/code&gt; をオーバーライドするサブクラスを使用してテスト参照を保持しない限り、呼び出し元はこのメソッドによって返されるテストに依存しないでください。</target>
        </trans-unit>
        <trans-unit id="746f46b044088f5f407262ed246469a3a9cd3ffd" translate="yes" xml:space="preserve">
          <source>Tests that two lists or tuples are equal. If not, an error message is constructed that shows only the differences between the two. An error is also raised if either of the parameters are of the wrong type. These methods are used by default when comparing lists or tuples with &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つのリストまたはタプルが等しいことをテストします。そうでない場合は、2つの違いのみを示すエラーメッセージが作成されます。いずれかのパラメーターのタイプが間違っている場合も、エラーが発生します。これらのメソッドは、リストまたはタプルを&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; &lt;/a&gt;と比較するときにデフォルトで使用されます。</target>
        </trans-unit>
        <trans-unit id="12cb88d29c157a8c448f5221a48fcec3e2a2416d" translate="yes" xml:space="preserve">
          <source>Tests that two sequences are equal. If a &lt;em&gt;seq_type&lt;/em&gt; is supplied, both &lt;em&gt;first&lt;/em&gt; and &lt;em&gt;second&lt;/em&gt; must be instances of &lt;em&gt;seq_type&lt;/em&gt; or a failure will be raised. If the sequences are different an error message is constructed that shows the difference between the two.</source>
          <target state="translated">2つのシーケンスが等しいことをテストします。&lt;em&gt;seq_type&lt;/em&gt;が指定されている場合、&lt;em&gt;1番目&lt;/em&gt;と&lt;em&gt;2番目の&lt;/em&gt;両方が&lt;em&gt;seq_typeの&lt;/em&gt;インスタンスである必要があります。そうで&lt;em&gt;ない&lt;/em&gt;場合、エラーが発生します。シーケンスが異なる場合、2つの違いを示すエラーメッセージが作成されます。</target>
        </trans-unit>
        <trans-unit id="50b57be9042dd364aa10610ff756601a77a8bc1e" translate="yes" xml:space="preserve">
          <source>Tests that two sets are equal. If not, an error message is constructed that lists the differences between the sets. This method is used by default when comparing sets or frozensets with &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つのセットが等しいことをテストします。そうでない場合は、セット間の違いをリストするエラーメッセージが作成されます。このメソッドは、セットまたは&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; &lt;/a&gt;セットをassertEqual（）と比較するときにデフォルトで使用されます。</target>
        </trans-unit>
        <trans-unit id="f2e5d85501569c4ac7d093b6592e30df4f105c2c" translate="yes" xml:space="preserve">
          <source>Tests the image data contained in the file named by &lt;em&gt;filename&lt;/em&gt;, and returns a string describing the image type. If optional &lt;em&gt;h&lt;/em&gt; is provided, the &lt;em&gt;filename&lt;/em&gt; is ignored and &lt;em&gt;h&lt;/em&gt; is assumed to contain the byte stream to test.</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt;で指定されたファイルに含まれる画像データをテストし、画像タイプを説明する文字列を返します。オプションの&lt;em&gt;h&lt;/em&gt;を指定すると、&lt;em&gt;ファイル名&lt;/em&gt;は無視され、&lt;em&gt;h&lt;/em&gt;はテストするバイトストリームを含むと見なされます。</target>
        </trans-unit>
        <trans-unit id="c9efb9d787a1a844d9d75c706c96b2d104de210f" translate="yes" xml:space="preserve">
          <source>Text Encodings</source>
          <target state="translated">テキストエンコーディング</target>
        </trans-unit>
        <trans-unit id="109f7c2f219315f947611c43c343d61302c960d4" translate="yes" xml:space="preserve">
          <source>Text I/O</source>
          <target state="translated">テキスト入出力</target>
        </trans-unit>
        <trans-unit id="76ff03d8469b4fa76d987bf57d0bfa338515e0f7" translate="yes" xml:space="preserve">
          <source>Text I/O expects and produces &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; objects. This means that whenever the backing store is natively made of bytes (such as in the case of a file), encoding and decoding of data is made transparently as well as optional translation of platform-specific newline characters.</source>
          <target state="translated">テキストI / Oは&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;オブジェクトを予期して生成します。つまり、バッキングストアがバイトでネイティブに作成されている場合（ファイルの場合など）は常に、データのエンコードとデコードが透過的に行われ、プラットフォーム固有の改行文字のオプションの変換も行われます。</target>
        </trans-unit>
        <trans-unit id="d25b06b6b4a420e9c0c72ee30c50397503bc4867" translate="yes" xml:space="preserve">
          <source>Text I/O over a binary storage (such as a file) is significantly slower than binary I/O over the same storage, because it requires conversions between unicode and binary data using a character codec. This can become noticeable handling huge amounts of text data like large log files. Also, &lt;code&gt;TextIOWrapper.tell()&lt;/code&gt; and &lt;code&gt;TextIOWrapper.seek()&lt;/code&gt; are both quite slow due to the reconstruction algorithm used.</source>
          <target state="translated">バイナリストレージ（ファイルなど）を介したテキストI / Oは、文字コーデックを使用したユニコードとバイナリデータ間の変換が必要なため、同じストレージを介したバイナリI / Oよりも大幅に遅くなります。これは、大きなログファイルのような大量のテキストデータの処理で顕著になる可能性があります。また、 &lt;code&gt;TextIOWrapper.tell()&lt;/code&gt; と &lt;code&gt;TextIOWrapper.seek()&lt;/code&gt; は、使用される再構築アルゴリズムのため、どちらも非常に低速です。</target>
        </trans-unit>
        <trans-unit id="b20688b2fd1febba21368c0b5690809bc433f2a2" translate="yes" xml:space="preserve">
          <source>Text Munging</source>
          <target state="translated">テキストのマンギング</target>
        </trans-unit>
        <trans-unit id="5e7edac2cc88ea213ca3d3f3af0c25e020e3d37c" translate="yes" xml:space="preserve">
          <source>Text Processing</source>
          <target state="translated">テキスト処理</target>
        </trans-unit>
        <trans-unit id="d75341f5e2708bd83dd875c8ee696d0a3461cbc3" translate="yes" xml:space="preserve">
          <source>Text Processing Services</source>
          <target state="translated">テキスト処理サービス</target>
        </trans-unit>
        <trans-unit id="d38c3fcbffdd11a45d7bcdcb6653c5f250097c68" translate="yes" xml:space="preserve">
          <source>Text Sequence Type &amp;mdash; &lt;code&gt;str&lt;/code&gt;</source>
          <target state="translated">テキストシーケンスタイプ&amp;mdash; &lt;code&gt;str&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4da446389b00cf2098e337f3e9ec304abd5ae69d" translate="yes" xml:space="preserve">
          <source>Text Sequence Type &amp;mdash; str</source>
          <target state="translated">テキストシーケンスタイプ&amp;mdash; str</target>
        </trans-unit>
        <trans-unit id="6b61b4bd4d90f6dc874cfca9d95be9fb364f9b14" translate="yes" xml:space="preserve">
          <source>Text Transforms</source>
          <target state="translated">テキストの変換</target>
        </trans-unit>
        <trans-unit id="7ddeaf5fb25a3098cc61cf569a9609c8423fe0ca" translate="yes" xml:space="preserve">
          <source>Text and CDATASection Objects</source>
          <target state="translated">テキストとCDATASectionオブジェクト</target>
        </trans-unit>
        <trans-unit id="7e6151b50920d76fbcb71fc57c974ef648c49885" translate="yes" xml:space="preserve">
          <source>Text coloring is done in the background, so uncolorized text is occasionally visible. To change the color scheme, use the Configure IDLE dialog Highlighting tab. The marking of debugger breakpoint lines in the editor and text in popups and dialogs is not user-configurable.</source>
          <target state="translated">テキストの色付けは背景で行われるため、色付けされていないテキストが見えることがあります。カラースキームを変更するには、[IDLE ダイアログの強調表示の設定]タブを使用します。エディタ内のデバッガのブレークポイント行やポップアップやダイアログ内のテキストのマーキングは、ユーザーが設定することはできません。</target>
        </trans-unit>
        <trans-unit id="8a57dc74ece05356ee746dfe80671051d658e460" translate="yes" xml:space="preserve">
          <source>Text colors</source>
          <target state="translated">テキストの色</target>
        </trans-unit>
        <trans-unit id="660f799d669d5b7231f67c281132ba4f5cffb5db" translate="yes" xml:space="preserve">
          <source>Text file busy</source>
          <target state="translated">テキストファイルがビジー状態</target>
        </trans-unit>
        <trans-unit id="3831f3c17839811e5844d39136a6e4d1069c7fd7" translate="yes" xml:space="preserve">
          <source>Text is preferably wrapped on whitespaces and right after the hyphens in hyphenated words; only then will long words be broken if necessary, unless &lt;a href=&quot;#textwrap.TextWrapper.break_long_words&quot;&gt;&lt;code&gt;TextWrapper.break_long_words&lt;/code&gt;&lt;/a&gt; is set to false.</source>
          <target state="translated">テキストは、空白文字で囲まれ、ハイフンで区切られた単語のハイフンの直後に配置されることが望ましい。その場合のみ、&lt;a href=&quot;#textwrap.TextWrapper.break_long_words&quot;&gt; &lt;code&gt;TextWrapper.break_long_words&lt;/code&gt; &lt;/a&gt;がfalseに設定されていない限り、必要に応じて長い単語が分割されます。</target>
        </trans-unit>
        <trans-unit id="12e22a819501b7839de966684daf36d764443f8c" translate="yes" xml:space="preserve">
          <source>Text logging level for the message (&lt;code&gt;'DEBUG'&lt;/code&gt;, &lt;code&gt;'INFO'&lt;/code&gt;, &lt;code&gt;'WARNING'&lt;/code&gt;, &lt;code&gt;'ERROR'&lt;/code&gt;, &lt;code&gt;'CRITICAL'&lt;/code&gt;).</source>
          <target state="translated">メッセージのテキストロギングレベル（ &lt;code&gt;'DEBUG'&lt;/code&gt; 、 &lt;code&gt;'INFO'&lt;/code&gt; 、 &lt;code&gt;'WARNING'&lt;/code&gt; 、 &lt;code&gt;'ERROR'&lt;/code&gt; 、 &lt;code&gt;'CRITICAL'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="987d6f0b28dc65ff1239d10e0d44ea7cc7fcc301" translate="yes" xml:space="preserve">
          <source>Text widget indexes</source>
          <target state="translated">テキストウィジェットのインデックス</target>
        </trans-unit>
        <trans-unit id="3fdfd69b27f0a02d3b68f1b45c9ee6e94da682e0" translate="yes" xml:space="preserve">
          <source>Text widget with a vertical scroll bar built in.</source>
          <target state="translated">垂直スクロールバーを内蔵したテキストウィジェット。</target>
        </trans-unit>
        <trans-unit id="63ca83a63aa65e4881414699c40dc49a0eea9ea4" translate="yes" xml:space="preserve">
          <source>Textbox objects</source>
          <target state="translated">テキストボックスオブジェクト</target>
        </trans-unit>
        <trans-unit id="46347caa9c96519fa9f4ef646b0b35f9da71370b" translate="yes" xml:space="preserve">
          <source>Textual data in Python is handled with &lt;a href=&quot;#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; objects, or &lt;em&gt;strings&lt;/em&gt;. Strings are immutable &lt;a href=&quot;#typesseq&quot;&gt;sequences&lt;/a&gt; of Unicode code points. String literals are written in a variety of ways:</source>
          <target state="translated">Pythonのテキストデータは、&lt;a href=&quot;#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;オブジェクトまたは&lt;em&gt;文字列で&lt;/em&gt;処理されます。文字&lt;a href=&quot;#typesseq&quot;&gt;列&lt;/a&gt;は、Unicodeコードポイントの不変のシーケンスです。文字列リテラルはさまざまな方法で記述されます。</target>
        </trans-unit>
        <trans-unit id="c32767e0541fe7038ff8d87e7b8aed17f49474f8" translate="yes" xml:space="preserve">
          <source>Thai</source>
          <target state="translated">Thai</target>
        </trans-unit>
        <trans-unit id="7e15e8ed56909024bd97b96d075895a121cf534e" translate="yes" xml:space="preserve">
          <source>Thai languages</source>
          <target state="translated">タイ語</target>
        </trans-unit>
        <trans-unit id="63beac302793fb4c2b8edf609f9123624506d326" translate="yes" xml:space="preserve">
          <source>Thanks to Matthew Dixon Cowles for the original inspiration and examples.</source>
          <target state="translated">オリジナルのインスピレーションと例を提供してくれたMatthew Dixon Cowlesに感謝します。</target>
        </trans-unit>
        <trans-unit id="801b224b2c27d3c4c3785e85a4f6f799925da25a" translate="yes" xml:space="preserve">
          <source>That code causes several &lt;a href=&quot;#module-tkinter.ttk&quot;&gt;&lt;code&gt;tkinter.ttk&lt;/code&gt;&lt;/a&gt; widgets (&lt;code&gt;Button&lt;/code&gt;, &lt;code&gt;Checkbutton&lt;/code&gt;, &lt;code&gt;Entry&lt;/code&gt;, &lt;code&gt;Frame&lt;/code&gt;, &lt;code&gt;Label&lt;/code&gt;, &lt;code&gt;LabelFrame&lt;/code&gt;, &lt;code&gt;Menubutton&lt;/code&gt;, &lt;code&gt;PanedWindow&lt;/code&gt;, &lt;code&gt;Radiobutton&lt;/code&gt;, &lt;code&gt;Scale&lt;/code&gt; and &lt;code&gt;Scrollbar&lt;/code&gt;) to automatically replace the Tk widgets.</source>
          <target state="translated">このコードにより、いくつかの&lt;a href=&quot;#module-tkinter.ttk&quot;&gt; &lt;code&gt;tkinter.ttk&lt;/code&gt; &lt;/a&gt;ウィジェット（ &lt;code&gt;Button&lt;/code&gt; 、 &lt;code&gt;Checkbutton&lt;/code&gt; 、 &lt;code&gt;Entry&lt;/code&gt; 、 &lt;code&gt;Frame&lt;/code&gt; 、 &lt;code&gt;Label&lt;/code&gt; 、 &lt;code&gt;LabelFrame&lt;/code&gt; 、 &lt;code&gt;Menubutton&lt;/code&gt; 、 &lt;code&gt;PanedWindow&lt;/code&gt; 、 &lt;code&gt;Radiobutton&lt;/code&gt; 、 &lt;code&gt;Scale&lt;/code&gt; および &lt;code&gt;Scrollbar&lt;/code&gt; ）がTkウィジェットを自動的に置き換えます。</target>
        </trans-unit>
        <trans-unit id="1b34a090e905f2f91f164b616a609eae4239508a" translate="yes" xml:space="preserve">
          <source>That default is subject to change at any time, including during maintenance releases.</source>
          <target state="translated">このデフォルトは、メンテナンスリリース中を含め、いつでも変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="305099f8690907083c8e1f88926191ba01b8d9be" translate="yes" xml:space="preserve">
          <source>That doctest succeeds if &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised, with the &lt;code&gt;list.remove(x):
x not in list&lt;/code&gt; detail as shown.</source>
          <target state="translated">そのdoctest は、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生し、 &lt;code&gt;list.remove(x): x not in list&lt;/code&gt; 詳細に表示されていない場合に成功します。</target>
        </trans-unit>
        <trans-unit id="7af14a7bea1fe17b77ce68743033a173fd5b0d31" translate="yes" xml:space="preserve">
          <source>That is, anything extra that the specialized class puts in to the &lt;code&gt;kwds&lt;/code&gt; dictionary should be removed and handled, and the remaining contents of &lt;code&gt;kw&lt;/code&gt; (and &lt;code&gt;args&lt;/code&gt;) passed to the &lt;code&gt;BaseHeader&lt;/code&gt;&lt;code&gt;init&lt;/code&gt; method.</source>
          <target state="translated">つまり、特殊化されたクラスが &lt;code&gt;kwds&lt;/code&gt; 辞書に追加したものはすべて削除して処理し、 &lt;code&gt;kw&lt;/code&gt; （および &lt;code&gt;args&lt;/code&gt; ）の残りのコンテンツを &lt;code&gt;BaseHeader&lt;/code&gt; &lt;code&gt;init&lt;/code&gt; メソッドに渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="0bc557e45ef5a3dbe18b8040fb35104eb35a7415" translate="yes" xml:space="preserve">
          <source>That last hand, &lt;code&gt;&quot;727ak&quot;&lt;/code&gt;, contained a pair, or two of the same valued cards. To match this with a regular expression, one could use backreferences as such:</source>
          <target state="translated">その最後のハンドである &lt;code&gt;&quot;727ak&quot;&lt;/code&gt; には、同じ価値のあるカードが2枚または2枚含まれていました。これを正規表現と照合するには、逆参照を次のように使用できます。</target>
        </trans-unit>
        <trans-unit id="ca1c777fbc1f6e256bcbd75cee9a6460910a6ef6" translate="yes" xml:space="preserve">
          <source>That means when the type of a value is &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt;, a type checker will reject almost all operations on it, and assigning it to a variable (or using it as a return value) of a more specialized type is a type error. For example:</source>
          <target state="translated">つまり、値の型が&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; の&lt;/a&gt;場合、型チェッカーはそのほとんどすべての操作を拒否し、より特殊な型の変数に割り当てる（または戻り値として使用する）と型エラーになります。例えば：</target>
        </trans-unit>
        <trans-unit id="9cc1064d298dd1efe1205f99e287bdb018327f8f" translate="yes" xml:space="preserve">
          <source>That short script executes and verifies any interactive Python examples contained in the file &lt;code&gt;example.txt&lt;/code&gt;. The file content is treated as if it were a single giant docstring; the file doesn&amp;rsquo;t need to contain a Python program! For example, perhaps &lt;code&gt;example.txt&lt;/code&gt; contains this:</source>
          <target state="translated">この短いスクリプトが実行され、ファイル &lt;code&gt;example.txt&lt;/code&gt; に含まれているインタラクティブなPythonの例が検証されます。ファイルの内容は、1つの巨大なdocstringであるかのように扱われます。ファイルにPythonプログラムを含める必要はありません。たとえば、おそらく &lt;code&gt;example.txt&lt;/code&gt; にはこれが含まれています。</target>
        </trans-unit>
        <trans-unit id="1ebaa0b37641dbc0c9c4c7f49bd40a80dc199fab" translate="yes" xml:space="preserve">
          <source>That way, separator components are always found at the same relative indices within the result list.</source>
          <target state="translated">このようにして、セパレータのコンポーネントは常に結果リスト内の同じ相対インデックスで見つかります。</target>
        </trans-unit>
        <trans-unit id="0d985bc25496ca07f21e5b6b8027aab8030bb3cc" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s all you need to know to start making productive use of &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt;! Jump in. The following sections provide full details. Note that there are many examples of doctests in the standard Python test suite and libraries. Especially useful examples can be found in the standard test file &lt;code&gt;Lib/test/test_doctest.py&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; の&lt;/a&gt;生産的な使用を開始するために知っておく必要があるのはこれだけです！次のセクションで詳細を説明します。標準のPythonテストスイートとライブラリにはdoctestの多くの例があることに注意してください。特に有用な例は、標準テストファイル &lt;code&gt;Lib/test/test_doctest.py&lt;/code&gt; にあります。</target>
        </trans-unit>
        <trans-unit id="24767c748b9c923eaeff84e0ecaa1b3edd0e2c9e" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;&lt;code&gt;**&lt;/code&gt;&amp;rdquo; pattern means &amp;ldquo;this directory and all subdirectories, recursively&amp;rdquo;. In other words, it enables recursive globbing:</source>
          <target state="translated">「 &lt;code&gt;**&lt;/code&gt; 」パターンは「このディレクトリとすべてのサブディレクトリを再帰的に」を意味します。つまり、再帰的なグロビングが可能になります。</target>
        </trans-unit>
        <trans-unit id="0fb252c960feb71015d07ccf7a5fa1d3bae709f5" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;R&amp;rdquo; and &amp;ldquo;O&amp;rdquo; flags are stored in the &lt;em&gt;Status&lt;/em&gt; header, and the &amp;ldquo;D&amp;rdquo;, &amp;ldquo;F&amp;rdquo;, and &amp;ldquo;A&amp;rdquo; flags are stored in the &lt;em&gt;X-Status&lt;/em&gt; header. The flags and headers typically appear in the order mentioned.</source>
          <target state="translated">「R」および「O」フラグは&lt;em&gt;Status&lt;/em&gt;ヘッダーに格納され、「D」、「F」、および「A」フラグは&lt;em&gt;X-Status&lt;/em&gt;ヘッダーに格納されます。フラグとヘッダーは通常、記載されている順序で表示されます。</target>
        </trans-unit>
        <trans-unit id="850628f9d76c3c78d286ee4197ab0bb760d1f09f" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;ctime&amp;rdquo; as reported by the operating system. On some systems (like Unix) is the time of the last metadata change, and, on others (like Windows), is the creation time (see platform documentation for details).</source>
          <target state="translated">オペレーティングシステムによって報告される「ctime」。一部のシステム（Unixなど）ではメタデータが最後に変更された時刻であり、他のシステム（Windowsなど）では作成時刻です（詳細はプラットフォームのドキュメントを参照）。</target>
        </trans-unit>
        <trans-unit id="5f051f0b1c246488e612587cabeb323919ac9e28" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;l&amp;rdquo; and &amp;ldquo;v&amp;rdquo; variants of the &lt;a href=&quot;#os.execl&quot;&gt;&lt;code&gt;exec*&lt;/code&gt;&lt;/a&gt; functions differ in how command-line arguments are passed. The &amp;ldquo;l&amp;rdquo; variants are perhaps the easiest to work with if the number of parameters is fixed when the code is written; the individual parameters simply become additional parameters to the &lt;code&gt;execl*()&lt;/code&gt; functions. The &amp;ldquo;v&amp;rdquo; variants are good when the number of parameters is variable, with the arguments being passed in a list or tuple as the &lt;em&gt;args&lt;/em&gt; parameter. In either case, the arguments to the child process should start with the name of the command being run, but this is not enforced.</source>
          <target state="translated">&lt;a href=&quot;#os.execl&quot;&gt; &lt;code&gt;exec*&lt;/code&gt; &lt;/a&gt;関数の「l」と「v」のバリアントは、コマンドライン引数の受け渡し方法が異なります。 「l」バリアントは、コードの記述時にパラメーターの数が固定されている場合、おそらく最も簡単に処理できます。個々のパラメーターは単に &lt;code&gt;execl*()&lt;/code&gt; 関数の追加パラメーターになります。 「v」バリアントは、引数の数が可変で、引数がリストまたはタプルで&lt;em&gt;args&lt;/em&gt;パラメーターとして渡される場合に適しています。どちらの場合でも、子プロセスへの引数は、実行されるコマンドの名前で始まる必要がありますが、これは強制されていません。</target>
        </trans-unit>
        <trans-unit id="dda6a33b048efb7394cfa7788d36d000c6865c2a" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;l&amp;rdquo; and &amp;ldquo;v&amp;rdquo; variants of the &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*&lt;/code&gt;&lt;/a&gt; functions differ in how command-line arguments are passed. The &amp;ldquo;l&amp;rdquo; variants are perhaps the easiest to work with if the number of parameters is fixed when the code is written; the individual parameters simply become additional parameters to the &lt;code&gt;spawnl*()&lt;/code&gt; functions. The &amp;ldquo;v&amp;rdquo; variants are good when the number of parameters is variable, with the arguments being passed in a list or tuple as the &lt;em&gt;args&lt;/em&gt; parameter. In either case, the arguments to the child process must start with the name of the command being run.</source>
          <target state="translated">&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*&lt;/code&gt; &lt;/a&gt;関数の「l」と「v」のバリアントは、コマンドライン引数が渡される方法が異なります。「l」バリアントは、コードの記述時にパラメーターの数が固定されている場合、おそらく最も簡単に処理できます。個々のパラメーターは、単に &lt;code&gt;spawnl*()&lt;/code&gt; 関数の追加パラメーターになります。「v」バリアントは、引数の数が可変で、引数がリストまたはタプルで&lt;em&gt;args&lt;/em&gt;パラメーターとして渡される場合に適しています。どちらの場合でも、子プロセスへの引数は、実行されるコマンドの名前で始まる必要があります。</target>
        </trans-unit>
        <trans-unit id="ebc5c5eff4ebaa2aabc62e546b5d710cc242a1f0" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;return&amp;rdquo; annotation for the callable. If the callable has no &amp;ldquo;return&amp;rdquo; annotation, this attribute is set to &lt;a href=&quot;#inspect.Signature.empty&quot;&gt;&lt;code&gt;Signature.empty&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">呼び出し可能オブジェクトの「戻り」アノテーション。呼び出し可能オブジェクトに「return」アノテーションがない場合、この属性は&lt;a href=&quot;#inspect.Signature.empty&quot;&gt; &lt;code&gt;Signature.empty&lt;/code&gt; に&lt;/a&gt;設定されます。</target>
        </trans-unit>
        <trans-unit id="fe5a66d9030159d4a1298e1aa9f3e8498628b01f" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;sendfile&amp;rdquo; syscall is not available for the given socket or file type.</source>
          <target state="translated">「sendfile」syscallは、指定されたソケットまたはファイルタイプでは使用できません。</target>
        </trans-unit>
        <trans-unit id="6b37f6a38c6f4ef0df7a7bd6db684f2957f82875" translate="yes" xml:space="preserve">
          <source>The &amp;lsquo;thread identifier&amp;rsquo; of this thread or &lt;code&gt;None&lt;/code&gt; if the thread has not been started. This is a nonzero integer. See the &lt;a href=&quot;#threading.get_ident&quot;&gt;&lt;code&gt;get_ident()&lt;/code&gt;&lt;/a&gt; function. Thread identifiers may be recycled when a thread exits and another thread is created. The identifier is available even after the thread has exited.</source>
          <target state="translated">このスレッドの「スレッド識別子」。スレッドが開始されていない場合は &lt;code&gt;None&lt;/code&gt; 。これはゼロ以外の整数です。&lt;a href=&quot;#threading.get_ident&quot;&gt; &lt;code&gt;get_ident()&lt;/code&gt; &lt;/a&gt;関数を参照してください。スレッドが存在し、別のスレッドが作成されると、スレッド識別子がリサイクルされる場合があります。識別子は、スレッドが終了した後でも使用できます。</target>
        </trans-unit>
        <trans-unit id="d09100573d37b9f6f1a6f374309892673e325a3e" translate="yes" xml:space="preserve">
          <source>The 6 optional arguments can only be specified when the window is a pad created with &lt;a href=&quot;#curses.newpad&quot;&gt;&lt;code&gt;newpad()&lt;/code&gt;&lt;/a&gt;. The additional parameters are needed to indicate what part of the pad and screen are involved. &lt;em&gt;pminrow&lt;/em&gt; and &lt;em&gt;pmincol&lt;/em&gt; specify the upper left-hand corner of the rectangle to be displayed in the pad. &lt;em&gt;sminrow&lt;/em&gt;, &lt;em&gt;smincol&lt;/em&gt;, &lt;em&gt;smaxrow&lt;/em&gt;, and &lt;em&gt;smaxcol&lt;/em&gt; specify the edges of the rectangle to be displayed on the screen. The lower right-hand corner of the rectangle to be displayed in the pad is calculated from the screen coordinates, since the rectangles must be the same size. Both rectangles must be entirely contained within their respective structures. Negative values of &lt;em&gt;pminrow&lt;/em&gt;, &lt;em&gt;pmincol&lt;/em&gt;, &lt;em&gt;sminrow&lt;/em&gt;, or &lt;em&gt;smincol&lt;/em&gt; are treated as if they were zero.</source>
          <target state="translated">6つのオプションの引数は、ウィンドウが&lt;a href=&quot;#curses.newpad&quot;&gt; &lt;code&gt;newpad()&lt;/code&gt; で&lt;/a&gt;作成されたパッドである場合にのみ指定できます。追加のパラメーターは、パッドと画面のどの部分が関係しているかを示すために必要です。&lt;em&gt;pminrow&lt;/em&gt;と&lt;em&gt;pmincol&lt;/em&gt;は、パッドに表示される長方形の左上隅を指定します。&lt;em&gt;sminrow&lt;/em&gt;、&lt;em&gt;smincol&lt;/em&gt;、&lt;em&gt;smaxrow&lt;/em&gt;、および&lt;em&gt;smaxcol&lt;/em&gt;は、画面に表示される長方形のエッジを指定します。四角形は同じサイズでなければならないため、パッドに表示される四角形の右下隅は画面座標から計算されます。両方の長方形は、それぞれの構造内に完全に含まれている必要があります。の負の値&lt;em&gt;pminrow&lt;/em&gt;、&lt;em&gt;pmincol&lt;/em&gt;、&lt;em&gt;sminrow&lt;/em&gt;、または&lt;em&gt;smincol&lt;/em&gt;は、&lt;em&gt;ゼロ&lt;/em&gt;であるかの&lt;em&gt;よう&lt;/em&gt;に扱われます。</target>
        </trans-unit>
        <trans-unit id="2c7c3977ea82a165dda3d13226526b2a3b9a05ce" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#abc.ABCMeta.__subclasshook__&quot;&gt;&lt;code&gt;__subclasshook__()&lt;/code&gt;&lt;/a&gt; class method defined here says that any class that has an &lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; method in its &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; (or in that of one of its base classes, accessed via the &lt;a href=&quot;stdtypes#class.__mro__&quot;&gt;&lt;code&gt;__mro__&lt;/code&gt;&lt;/a&gt; list) is considered a &lt;code&gt;MyIterable&lt;/code&gt; too.</source>
          <target state="translated">&lt;a href=&quot;#abc.ABCMeta.__subclasshook__&quot;&gt; &lt;code&gt;__subclasshook__()&lt;/code&gt; &lt;/a&gt;ここで定義されたクラスのメソッドは、持っている任意のクラスと言ってい&lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;その中にメソッド&lt;a href=&quot;stdtypes#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; は&lt;/a&gt;（または経由でアクセスその基底クラスの1つの点で&lt;a href=&quot;stdtypes#class.__mro__&quot;&gt; &lt;code&gt;__mro__&lt;/code&gt; の&lt;/a&gt;リスト）と考えられている &lt;code&gt;MyIterable&lt;/code&gt; を過ぎます。</target>
        </trans-unit>
        <trans-unit id="8893e61d48dfb45170ae7cec047a2cf3133bda0a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; object will hold all the information necessary to parse the command line into Python data types.</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; の&lt;/a&gt;オブジェクトは、Pythonのデータ型にコマンドラインを解析するために必要なすべての情報を保持します。</target>
        </trans-unit>
        <trans-unit id="7526d0f6695800a5de1896614b5b1f1489511344" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; method must know whether an optional argument, like &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--foo&lt;/code&gt;, or a positional argument, like a list of filenames, is expected. The first arguments passed to &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; must therefore be either a series of flags, or a simple argument name. For example, an optional argument could be created like:</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt;メソッドのようなオプションの引数、かどうかを知る必要があり &lt;code&gt;-f&lt;/code&gt; または &lt;code&gt;--foo&lt;/code&gt; 、または位置引数、ファイル名のリストのように、期待されています。したがって、&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; に&lt;/a&gt;渡される最初の引数は、一連のフラグまたは単純な引数名でなければなりません。たとえば、次のようにオプションの引数を作成できます。</target>
        </trans-unit>
        <trans-unit id="200c899b9946a2c72d68748bb9a2de68d91482ed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#argparse.ArgumentParser.add_argument_group&quot;&gt;&lt;code&gt;add_argument_group()&lt;/code&gt;&lt;/a&gt; method returns an argument group object which has an &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; method just like a regular &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt;. When an argument is added to the group, the parser treats it just like a normal argument, but displays the argument in a separate group for help messages. The &lt;a href=&quot;#argparse.ArgumentParser.add_argument_group&quot;&gt;&lt;code&gt;add_argument_group()&lt;/code&gt;&lt;/a&gt; method accepts &lt;em&gt;title&lt;/em&gt; and &lt;em&gt;description&lt;/em&gt; arguments which can be used to customize this display:</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser.add_argument_group&quot;&gt; &lt;code&gt;add_argument_group()&lt;/code&gt; &lt;/a&gt;メソッドは、引数有するグループオブジェクト戻り&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt;普通のような方法&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; を&lt;/a&gt;。引数がグループに追加されると、パーサーはそれを通常の引数と同様に扱いますが、ヘルプメッセージ用に別のグループに引数を表示します。&lt;a href=&quot;#argparse.ArgumentParser.add_argument_group&quot;&gt; &lt;code&gt;add_argument_group()&lt;/code&gt; &lt;/a&gt;メソッドは、受け入れ&lt;em&gt;タイトル&lt;/em&gt;及び&lt;em&gt;説明&lt;/em&gt;この表示をカスタマイズするために使用することができる引数：</target>
        </trans-unit>
        <trans-unit id="3fef92983dfc504a867a24713175cff415d4ec68" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#argparse.ArgumentParser.add_mutually_exclusive_group&quot;&gt;&lt;code&gt;add_mutually_exclusive_group()&lt;/code&gt;&lt;/a&gt; method also accepts a &lt;em&gt;required&lt;/em&gt; argument, to indicate that at least one of the mutually exclusive arguments is required:</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser.add_mutually_exclusive_group&quot;&gt; &lt;code&gt;add_mutually_exclusive_group()&lt;/code&gt; &lt;/a&gt;メソッドも受け入れる&lt;em&gt;必要&lt;/em&gt;相互に排他的な引数の少なくとも一方が必要であることを示すために、引数：</target>
        </trans-unit>
        <trans-unit id="2dbbdc4eaca6aa33616d69e89d9701442ad04b5d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt;&lt;code&gt;add_subparsers()&lt;/code&gt;&lt;/a&gt; method also supports &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; keyword arguments. When either is present, the subparser&amp;rsquo;s commands will appear in their own group in the help output. For example:</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt; &lt;code&gt;add_subparsers()&lt;/code&gt; &lt;/a&gt;メソッドにも対応 &lt;code&gt;title&lt;/code&gt; と &lt;code&gt;description&lt;/code&gt; キーワード引数を。どちらかが存在する場合、サブパーサーのコマンドはヘルプ出力の独自のグループに表示されます。例えば：</target>
        </trans-unit>
        <trans-unit id="e53c41a574c2192239e516354d84c6f7d331e309" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; method &lt;a href=&quot;#allow-abbrev&quot;&gt;by default&lt;/a&gt; allows long options to be abbreviated to a prefix, if the abbreviation is unambiguous (the prefix matches a unique option):</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;メソッド&lt;a href=&quot;#allow-abbrev&quot;&gt;デフォルトでは、&lt;/a&gt;略語は（接頭辞がユニークなオプションに一致する）あいまいであれば、長いオプションは、プレフィックスに省略することができます：</target>
        </trans-unit>
        <trans-unit id="1c0f44b29023b0d7f21a1850c8ff6d43047cea22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; method attempts to give errors whenever the user has clearly made a mistake, but some situations are inherently ambiguous. For example, the command-line argument &lt;code&gt;-1&lt;/code&gt; could either be an attempt to specify an option or an attempt to provide a positional argument. The &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; method is cautious here: positional arguments may only begin with &lt;code&gt;-&lt;/code&gt; if they look like negative numbers and there are no options in the parser that look like negative numbers:</source>
          <target state="translated">の &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;メソッドの試みは、ユーザーが明確にミスを犯していたときにエラーを与えるために、いくつかの状況は本質的に曖昧です。たとえば、コマンドライン引数 &lt;code&gt;-1&lt;/code&gt; は、オプションを指定しようとしたり、位置引数を提供しようとしたりする可能性があります。&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;メソッドは、ここに慎重である：位置引数はのみで始まること &lt;code&gt;-&lt;/code&gt; 彼らは負の数のように見えると何のオプションが負の数のようなパーサその表情に存在しない場合：</target>
        </trans-unit>
        <trans-unit id="b82bb7c2b5e826472abba2cfa940e03bea6a139f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; method supports several ways of specifying the value of an option (if it takes one). In the simplest case, the option and its value are passed as two separate arguments:</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;（それが1を取る場合）メソッドは、オプションの値を指定するいくつかの方法をサポートしています。最も単純なケースでは、オプションとその値は2つの別々の引数として渡されます。</target>
        </trans-unit>
        <trans-unit id="90c8a41a856e529848d6eade10c1d8d41a7a4839" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#argparse.FileType&quot;&gt;&lt;code&gt;FileType&lt;/code&gt;&lt;/a&gt; factory creates objects that can be passed to the type argument of &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;ArgumentParser.add_argument()&lt;/code&gt;&lt;/a&gt;. Arguments that have &lt;a href=&quot;#argparse.FileType&quot;&gt;&lt;code&gt;FileType&lt;/code&gt;&lt;/a&gt; objects as their type will open command-line arguments as files with the requested modes, buffer sizes, encodings and error handling (see the &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function for more details):</source>
          <target state="translated">&lt;a href=&quot;#argparse.FileType&quot;&gt; &lt;code&gt;FileType&lt;/code&gt; &lt;/a&gt;の工場は、の型引数に渡すことができるオブジェクトを作成&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;ArgumentParser.add_argument()&lt;/code&gt; &lt;/a&gt;。タイプとして&lt;a href=&quot;#argparse.FileType&quot;&gt; &lt;code&gt;FileType&lt;/code&gt; &lt;/a&gt;オブジェクトを持つ引数は、コマンドライン引数を、要求されたモード、バッファーサイズ、エンコーディング、およびエラー処理（詳細については&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;関数を参照）でファイルとして開きます。</target>
        </trans-unit>
        <trans-unit id="30f75f59a9a7268631e66d52cbd510df63fb3b35" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ast.NodeTransformer&quot;&gt;&lt;code&gt;NodeTransformer&lt;/code&gt;&lt;/a&gt; will walk the AST and use the return value of the visitor methods to replace or remove the old node. If the return value of the visitor method is &lt;code&gt;None&lt;/code&gt;, the node will be removed from its location, otherwise it is replaced with the return value. The return value may be the original node in which case no replacement takes place.</source>
          <target state="translated">&lt;a href=&quot;#ast.NodeTransformer&quot;&gt; &lt;code&gt;NodeTransformer&lt;/code&gt; は&lt;/a&gt; ASTを歩くと、古いノードを交換するか、または削除するにはビジター・メソッドの戻り値を使用します。ビジターメソッドの戻り値が &lt;code&gt;None&lt;/code&gt; の場合、ノードはその場所から削除されます。それ以外の場合は、戻り値に置き換えられます。戻り値は元のノードである場合があります。その場合、置換は行われません。</target>
        </trans-unit>
        <trans-unit id="44129255c25550851ce7e2aa0778b3b4d25d9e16" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#asyncio-event-loop&quot;&gt;Event Loop Methods&lt;/a&gt; section lists all methods that an alternative implementation of &lt;code&gt;AbstractEventLoop&lt;/code&gt; should have defined.</source>
          <target state="translated">「&lt;a href=&quot;#asyncio-event-loop&quot;&gt;イベントループメソッド」&lt;/a&gt;セクションには、 &lt;code&gt;AbstractEventLoop&lt;/code&gt; の代替実装が定義する必要があるすべてのメソッドがリストされています。</target>
        </trans-unit>
        <trans-unit id="566b6568a456d6b2074cb276dfb3442143d58f54" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#asyncio.create_task&quot;&gt;&lt;code&gt;asyncio.create_task()&lt;/code&gt;&lt;/a&gt; function to run coroutines concurrently as asyncio &lt;a href=&quot;#asyncio.Task&quot;&gt;&lt;code&gt;Tasks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.create_task&quot;&gt; &lt;code&gt;asyncio.create_task()&lt;/code&gt; &lt;/a&gt;関数は、asyncioとして同時にコルーチンを実行する&lt;a href=&quot;#asyncio.Task&quot;&gt; &lt;code&gt;Tasks&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0828773ce7ea3491738f68a93eb0b46a845438a3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#asyncio.loop.subprocess_exec&quot;&gt;&lt;code&gt;loop.subprocess_exec()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.loop.subprocess_shell&quot;&gt;&lt;code&gt;loop.subprocess_shell()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;#asyncio.loop.subprocess_exec&quot;&gt; &lt;code&gt;loop.subprocess_exec()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#asyncio.loop.subprocess_shell&quot;&gt; &lt;code&gt;loop.subprocess_shell()&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="14e1e89d72e3abb7ad7a42c6bb4657ef919d4a09" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#asyncio.run&quot;&gt;&lt;code&gt;asyncio.run()&lt;/code&gt;&lt;/a&gt; function to run the top-level entry point &amp;ldquo;main()&amp;rdquo; function (see the above example.)</source>
          <target state="translated">の &lt;a href=&quot;#asyncio.run&quot;&gt; &lt;code&gt;asyncio.run()&lt;/code&gt; &lt;/a&gt;関数は、トップレベルのエントリ・ポイントを実行する「メイン（）」関数は、（上記の例を参照します）。</target>
        </trans-unit>
        <trans-unit id="8c2d28f88261c63a30bcb012973da5c29ebc108f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#asyncore.dispatcher&quot;&gt;&lt;code&gt;dispatcher&lt;/code&gt;&lt;/a&gt; class is a thin wrapper around a low-level socket object. To make it more useful, it has a few methods for event-handling which are called from the asynchronous loop. Otherwise, it can be treated as a normal non-blocking socket object.</source>
          <target state="translated">の &lt;a href=&quot;#asyncore.dispatcher&quot;&gt; &lt;code&gt;dispatcher&lt;/code&gt; &lt;/a&gt;クラスは、低レベルソケットオブジェクトの周りに薄いラッパーです。それをより便利にするために、非同期ループから呼び出されるイベント処理のためのいくつかのメソッドがあります。それ以外の場合は、通常の非ブロッキングソケットオブジェクトとして扱うことができます。</target>
        </trans-unit>
        <trans-unit id="b116f4cff6f99d06c7507048ccef1a5dd888de1f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#bdb.Bdb&quot;&gt;&lt;code&gt;Bdb&lt;/code&gt;&lt;/a&gt; class acts as a generic Python debugger base class.</source>
          <target state="translated">の &lt;a href=&quot;#bdb.Bdb&quot;&gt; &lt;code&gt;Bdb&lt;/code&gt; &lt;/a&gt;クラスは、一般的なPythonのデバッガの基本クラスとして機能します。</target>
        </trans-unit>
        <trans-unit id="62525848a0c9c88cc01e3367b6ebc3c4abb4d531" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#bytes.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; method should be used only if you need to know the position of &lt;em&gt;sub&lt;/em&gt;. To check if &lt;em&gt;sub&lt;/em&gt; is a substring or not, use the &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator:</source>
          <target state="translated">&lt;a href=&quot;#bytes.find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt;メソッドを使用すると、の位置を知る必要がある場合にのみ使用されるべき&lt;em&gt;サブ&lt;/em&gt;。&lt;em&gt;sub&lt;/em&gt;が部分文字列かどうかを確認するには、&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;演算子をします。</target>
        </trans-unit>
        <trans-unit id="841a1b693b3ece85984308dadf9e2ac6e168a09d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#bz2.BZ2Compressor&quot;&gt;&lt;code&gt;BZ2Compressor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#bz2.BZ2Decompressor&quot;&gt;&lt;code&gt;BZ2Decompressor&lt;/code&gt;&lt;/a&gt; classes for incremental (de)compression.</source>
          <target state="translated">&lt;a href=&quot;#bz2.BZ2Compressor&quot;&gt; &lt;code&gt;BZ2Compressor&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#bz2.BZ2Decompressor&quot;&gt; &lt;code&gt;BZ2Decompressor&lt;/code&gt; &lt;/a&gt;増分（解凍）のため BZ2Decompressorクラス。</target>
        </trans-unit>
        <trans-unit id="2251eac4644699f0e79ff35b47a34df095f7a6ec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#bz2.compress&quot;&gt;&lt;code&gt;compress()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#bz2.decompress&quot;&gt;&lt;code&gt;decompress()&lt;/code&gt;&lt;/a&gt; functions for one-shot (de)compression.</source>
          <target state="translated">&lt;a href=&quot;#bz2.compress&quot;&gt; &lt;code&gt;compress()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#bz2.decompress&quot;&gt; &lt;code&gt;decompress()&lt;/code&gt; &lt;/a&gt;ワンショット（解凍）のため decompress（）関数。</target>
        </trans-unit>
        <trans-unit id="dde39ca4d885c419c3b0a279b055ec1bdc4d0f3f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#bz2.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function and &lt;a href=&quot;#bz2.BZ2File&quot;&gt;&lt;code&gt;BZ2File&lt;/code&gt;&lt;/a&gt; class for reading and writing compressed files.</source>
          <target state="translated">&lt;a href=&quot;#bz2.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;関数と&lt;a href=&quot;#bz2.BZ2File&quot;&gt; &lt;code&gt;BZ2File&lt;/code&gt; &lt;/a&gt;圧縮ファイルの読み書き用 BZ2Fileクラス。</target>
        </trans-unit>
        <trans-unit id="bc4869d7893639e257f10707e3378acdfc95d33f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#callback-handles&quot;&gt;Callback Handles&lt;/a&gt; section documents the &lt;a href=&quot;#asyncio.Handle&quot;&gt;&lt;code&gt;Handle&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.TimerHandle&quot;&gt;&lt;code&gt;TimerHandle&lt;/code&gt;&lt;/a&gt; instances which are returned from scheduling methods such as &lt;a href=&quot;#asyncio.loop.call_soon&quot;&gt;&lt;code&gt;loop.call_soon()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.loop.call_later&quot;&gt;&lt;code&gt;loop.call_later()&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;a href=&quot;#callback-handles&quot;&gt;コールバックは、ハンドル&lt;/a&gt;部ドキュメント&lt;a href=&quot;#asyncio.Handle&quot;&gt; &lt;code&gt;Handle&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#asyncio.TimerHandle&quot;&gt; &lt;code&gt;TimerHandle&lt;/code&gt; の&lt;/a&gt;ようなスケジューリング方法から返されるインスタンス&lt;a href=&quot;#asyncio.loop.call_soon&quot;&gt; &lt;code&gt;loop.call_soon()&lt;/code&gt; &lt;/a&gt;とを&lt;a href=&quot;#asyncio.loop.call_later&quot;&gt; &lt;code&gt;loop.call_later()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="19e3ac2baf30036958038b751ca097c70434efec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#choices&quot;&gt;choices&lt;/a&gt; keyword argument may be more convenient for type checkers that simply check against a range of values:</source>
          <target state="translated">の &lt;a href=&quot;#choices&quot;&gt;選択肢&lt;/a&gt;キーワード引数は、単純な値の範囲に対してチェック型チェッカーのためのより便利なことがあります。</target>
        </trans-unit>
        <trans-unit id="73eea60dabe306547088c9373001f60cb2cf86dc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#cmd.Cmd&quot;&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt; class provides a simple framework for writing line-oriented command interpreters. These are often useful for test harnesses, administrative tools, and prototypes that will later be wrapped in a more sophisticated interface.</source>
          <target state="translated">の &lt;a href=&quot;#cmd.Cmd&quot;&gt; &lt;code&gt;Cmd&lt;/code&gt; &lt;/a&gt;クラスは、行指向のコマンドインタープリタを書くためのシンプルなフレームワークを提供します。これらは、テストハーネス、管理ツール、および後でより洗練されたインターフェイスにラップされるプロトタイプに役立つことがよくあります。</target>
        </trans-unit>
        <trans-unit id="1178f6d26db9b3eb867ab07976420e2db629ec7d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#cmdoption-unittest-c&quot;&gt;&lt;code&gt;-c/--catch&lt;/code&gt;&lt;/a&gt; command-line option to unittest, along with the &lt;code&gt;catchbreak&lt;/code&gt; parameter to &lt;a href=&quot;#unittest.main&quot;&gt;&lt;code&gt;unittest.main()&lt;/code&gt;&lt;/a&gt;, provide more friendly handling of control-C during a test run. With catch break behavior enabled control-C will allow the currently running test to complete, and the test run will then end and report all the results so far. A second control-c will raise a &lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt;&lt;code&gt;KeyboardInterrupt&lt;/code&gt;&lt;/a&gt; in the usual way.</source>
          <target state="translated">&lt;code&gt;catchbreak&lt;/code&gt; の&lt;a href=&quot;#cmdoption-unittest-c&quot;&gt; &lt;code&gt;-c/--catch&lt;/code&gt; &lt;/a&gt; -catchコマンドラインオプションとunittest.main &lt;a href=&quot;#unittest.main&quot;&gt; &lt;code&gt;unittest.main()&lt;/code&gt; &lt;/a&gt; catchbreakパラメーターを使用すると、テスト実行中にcontrol-Cをより扱いやすく処理できます。キャッチブレーク動作が有効になっていると、control-Cは現在実行中のテストを完了させ、テスト実行を終了して、これまでのすべての結果を報告します。2番目のcontrol-cは、&lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt; &lt;code&gt;KeyboardInterrupt&lt;/code&gt; &lt;/a&gt;、通常の方法で KeyboardInterruptを発生させます。</target>
        </trans-unit>
        <trans-unit id="63490877ff3a85f9c2d44dd0355422e762f325ce" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#cmdoption-unittest-discover-s&quot;&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#cmdoption-unittest-discover-p&quot;&gt;&lt;code&gt;-p&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#cmdoption-unittest-discover-t&quot;&gt;&lt;code&gt;-t&lt;/code&gt;&lt;/a&gt; options can be passed in as positional arguments in that order. The following two command lines are equivalent:</source>
          <target state="translated">&lt;a href=&quot;#cmdoption-unittest-discover-s&quot;&gt; &lt;code&gt;-s&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#cmdoption-unittest-discover-p&quot;&gt; &lt;code&gt;-p&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#cmdoption-unittest-discover-t&quot;&gt; &lt;code&gt;-t&lt;/code&gt; &lt;/a&gt;オプションは、この順序で位置引数として渡すことができます。次の2つのコマンドラインは同等です。</target>
        </trans-unit>
        <trans-unit id="6c59426c7e0123b84cab685c4b9f14badbba1fce" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#code.InteractiveConsole&quot;&gt;&lt;code&gt;InteractiveConsole&lt;/code&gt;&lt;/a&gt; class is a subclass of &lt;a href=&quot;#code.InteractiveInterpreter&quot;&gt;&lt;code&gt;InteractiveInterpreter&lt;/code&gt;&lt;/a&gt;, and so offers all the methods of the interpreter objects as well as the following additions.</source>
          <target state="translated">&lt;a href=&quot;#code.InteractiveConsole&quot;&gt; &lt;code&gt;InteractiveConsole&lt;/code&gt; &lt;/a&gt;クラスはのサブクラスである&lt;a href=&quot;#code.InteractiveInterpreter&quot;&gt; &lt;code&gt;InteractiveInterpreter&lt;/code&gt; を&lt;/a&gt;、インタプリタオブジェクトだけでなく、以下の追加のすべてのメソッド申し出て。</target>
        </trans-unit>
        <trans-unit id="96c5b96dabb5d58406339e28f0d18463c785b843" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt;&lt;code&gt;IncrementalDecoder&lt;/code&gt;&lt;/a&gt; class is used for decoding an input in multiple steps. It defines the following methods which every incremental decoder must define in order to be compatible with the Python codec registry.</source>
          <target state="translated">&lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt; &lt;code&gt;IncrementalDecoder&lt;/code&gt; の&lt;/a&gt;クラスは複数のステップで入力をデコードするために使用されます。Pythonコーデックレジストリとの互換性を保つために、すべてのインクリメンタルデコーダーが定義する必要がある次のメソッドが定義されています。</target>
        </trans-unit>
        <trans-unit id="12b6dabe58008d386c68a529a1a3d84cc72a3fd8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt;&lt;code&gt;IncrementalDecoder&lt;/code&gt;&lt;/a&gt; may implement different error handling schemes by providing the &lt;em&gt;errors&lt;/em&gt; keyword argument. See &lt;a href=&quot;#error-handlers&quot;&gt;Error Handlers&lt;/a&gt; for possible values.</source>
          <target state="translated">&lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt; &lt;code&gt;IncrementalDecoder&lt;/code&gt; は、&lt;/a&gt;提供することで、さまざまなエラー処理スキームを実装することができ&lt;em&gt;、エラー&lt;/em&gt;キーワード引数を。可能な値については、&lt;a href=&quot;#error-handlers&quot;&gt;エラーハンドラー&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3e185664ec2161e86c9fbec456c7de05f6c65ac1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt;&lt;code&gt;IncrementalEncoder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt;&lt;code&gt;IncrementalDecoder&lt;/code&gt;&lt;/a&gt; classes provide the basic interface for incremental encoding and decoding. Encoding/decoding the input isn&amp;rsquo;t done with one call to the stateless encoder/decoder function, but with multiple calls to the &lt;a href=&quot;#codecs.IncrementalEncoder.encode&quot;&gt;&lt;code&gt;encode()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#codecs.IncrementalDecoder.decode&quot;&gt;&lt;code&gt;decode()&lt;/code&gt;&lt;/a&gt; method of the incremental encoder/decoder. The incremental encoder/decoder keeps track of the encoding/decoding process during method calls.</source>
          <target state="translated">&lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt; &lt;code&gt;IncrementalEncoder&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt; &lt;code&gt;IncrementalDecoder&lt;/code&gt; &lt;/a&gt;クラスは、インクリメンタル符号化及び復号化のための基本的なインタフェースを提供します。入力のエンコード/デコードは、ステートレスエンコーダー/デコーダー関数への1回の呼び出しではなく、インクリメンタルエンコーダー/デコーダーの&lt;a href=&quot;#codecs.IncrementalEncoder.encode&quot;&gt; &lt;code&gt;encode()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;#codecs.IncrementalDecoder.decode&quot;&gt; &lt;code&gt;decode()&lt;/code&gt; &lt;/a&gt;メソッドへの複数の呼び出しで行われます。インクリメンタルエンコーダー/デコーダーは、メソッド呼び出し中のエンコード/デコードプロセスを追跡します。</target>
        </trans-unit>
        <trans-unit id="bc96bb1e5bb997de11b564f8d27ab528a38179fa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt;&lt;code&gt;IncrementalEncoder&lt;/code&gt;&lt;/a&gt; class is used for encoding an input in multiple steps. It defines the following methods which every incremental encoder must define in order to be compatible with the Python codec registry.</source>
          <target state="translated">&lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt; &lt;code&gt;IncrementalEncoder&lt;/code&gt; の&lt;/a&gt;クラスは複数のステップで入力を符号化するために使用されます。Pythonコーデックレジストリとの互換性を保つために、すべてのインクリメンタルエンコーダーが定義する必要がある次のメソッドが定義されています。</target>
        </trans-unit>
        <trans-unit id="e2bd8b06f67f9be3a323becd255a18bceb81210a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt;&lt;code&gt;IncrementalEncoder&lt;/code&gt;&lt;/a&gt; may implement different error handling schemes by providing the &lt;em&gt;errors&lt;/em&gt; keyword argument. See &lt;a href=&quot;#error-handlers&quot;&gt;Error Handlers&lt;/a&gt; for possible values.</source>
          <target state="translated">&lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt; &lt;code&gt;IncrementalEncoder&lt;/code&gt; は、&lt;/a&gt;提供することで、さまざまなエラー処理スキームを実装することができ&lt;em&gt;、エラー&lt;/em&gt;キーワード引数を。可能な値については、&lt;a href=&quot;#error-handlers&quot;&gt;エラーハンドラー&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="dfcf2fee9aa1a95053dfac968fc8995ea968b54f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; class is a subclass of &lt;code&gt;Codec&lt;/code&gt; and defines the following methods which every stream reader must define in order to be compatible with the Python codec registry.</source>
          <target state="translated">&lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; の&lt;/a&gt;クラスはサブクラスで &lt;code&gt;Codec&lt;/code&gt; 、すべてのストリームリーダは、Python codecレジストリと互換性を持つようにするために定義する必要があり、以下のメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="a74db9f878ab20f93cdfdd2fabf45e07bd3fc4d5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; may implement different error handling schemes by providing the &lt;em&gt;errors&lt;/em&gt; keyword argument. See &lt;a href=&quot;#error-handlers&quot;&gt;Error Handlers&lt;/a&gt; for the standard error handlers the underlying stream codec may support.</source>
          <target state="translated">&lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; をは&lt;/a&gt;提供することで、さまざまなエラー処理スキームを実装することができ&lt;em&gt;、エラー&lt;/em&gt;キーワード引数を。基になるストリームコーデックがサポートする標準のエラーハンドラーについては、&lt;a href=&quot;#error-handlers&quot;&gt;エラーハンドラー&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="fa1d63e6a14c5c60c083aca1e383d623af746e00" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.StreamReaderWriter&quot;&gt;&lt;code&gt;StreamReaderWriter&lt;/code&gt;&lt;/a&gt; is a convenience class that allows wrapping streams which work in both read and write modes.</source>
          <target state="translated">&lt;a href=&quot;#codecs.StreamReaderWriter&quot;&gt; &lt;code&gt;StreamReaderWriter&lt;/code&gt; は&lt;/a&gt;読み出しと書き込みの両方のモードで作業ラッピングストリームを可能にする便利なクラスです。</target>
        </trans-unit>
        <trans-unit id="0a7733e3e5e214a64bb04476828836ff2628a303" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.StreamRecoder&quot;&gt;&lt;code&gt;StreamRecoder&lt;/code&gt;&lt;/a&gt; translates data from one encoding to another, which is sometimes useful when dealing with different encoding environments.</source>
          <target state="translated">&lt;a href=&quot;#codecs.StreamRecoder&quot;&gt; &lt;code&gt;StreamRecoder&lt;/code&gt; は&lt;/a&gt;異なるエンコーディング環境を扱うとき時々有用である、別の符号化データを変換します。</target>
        </trans-unit>
        <trans-unit id="c06bfff712d73bdd42d5d056eaffd3eeff3467ac" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; classes provide generic working interfaces which can be used to implement new encoding submodules very easily. See &lt;code&gt;encodings.utf_8&lt;/code&gt; for an example of how this is done.</source>
          <target state="translated">&lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; を&lt;/a&gt;クラスは、非常に簡単に新しいエンコーディングサブモジュールを実装するために使用できる、一般的なインターフェイスを提供します。これを行う方法の例については、 &lt;code&gt;encodings.utf_8&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="3fb9c4cff14e46f29004385b19f7361543d171a0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; class is a subclass of &lt;code&gt;Codec&lt;/code&gt; and defines the following methods which every stream writer must define in order to be compatible with the Python codec registry.</source>
          <target state="translated">&lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; の&lt;/a&gt;クラスはサブクラスで &lt;code&gt;Codec&lt;/code&gt; 、すべてのストリームライタは、Python codecレジストリと互換性を持つようにするために定義する必要があり、以下のメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="aef1b8ecf8fd76381a0ffc278a060efd6c603c35" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; may implement different error handling schemes by providing the &lt;em&gt;errors&lt;/em&gt; keyword argument. See &lt;a href=&quot;#error-handlers&quot;&gt;Error Handlers&lt;/a&gt; for the standard error handlers the underlying stream codec may support.</source>
          <target state="translated">&lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; を&lt;/a&gt;提供することで、さまざまなエラー処理スキームを実装することができ&lt;em&gt;、エラー&lt;/em&gt;キーワード引数を。基になるストリームコーデックがサポートする標準のエラーハンドラーについては、&lt;a href=&quot;#error-handlers&quot;&gt;エラーハンドラー&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9bee3555767bf16eb1a388914a85c6ca66f4d100" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#collections.ChainMap&quot;&gt;&lt;code&gt;ChainMap&lt;/code&gt;&lt;/a&gt; class only makes updates (writes and deletions) to the first mapping in the chain while lookups will search the full chain. However, if deep writes and deletions are desired, it is easy to make a subclass that updates keys found deeper in the chain:</source>
          <target state="translated">&lt;a href=&quot;#collections.ChainMap&quot;&gt; &lt;code&gt;ChainMap&lt;/code&gt; の&lt;/a&gt;検索が完全なチェーンを検索しますしながら、クラスが唯一のチェーンの最初のマッピングへの更新（書き込みと削除）を行います。ただし、深い書き込みと削除が必要な場合は、チェーン内のより深い場所にあるキーを更新するサブクラスを簡単に作成できます。</target>
        </trans-unit>
        <trans-unit id="f7e12096cb1dcc3b817df5f7b165f68e249dcd7a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#collections.Counter&quot;&gt;&lt;code&gt;Counter&lt;/code&gt;&lt;/a&gt; class itself is a dictionary subclass with no restrictions on its keys and values. The values are intended to be numbers representing counts, but you &lt;em&gt;could&lt;/em&gt; store anything in the value field.</source>
          <target state="translated">&lt;a href=&quot;#collections.Counter&quot;&gt; &lt;code&gt;Counter&lt;/code&gt; &lt;/a&gt;クラス自体は、そのキーと値の制限なしで辞書サブクラスです。値はカウントを表す数値を意図しています&lt;em&gt;が&lt;/em&gt;、値フィールドには何でも格納&lt;em&gt;でき&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="6086cbed3ff10b04a2566042c0149ffc2e90a216" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#collections.Counter.elements&quot;&gt;&lt;code&gt;elements()&lt;/code&gt;&lt;/a&gt; method requires integer counts. It ignores zero and negative counts.</source>
          <target state="translated">&lt;a href=&quot;#collections.Counter.elements&quot;&gt; &lt;code&gt;elements()&lt;/code&gt; &lt;/a&gt;メソッドは、整数カウントを必要とします。ゼロおよび負のカウントは無視されます。</target>
        </trans-unit>
        <trans-unit id="509800d2c98aa249e5689f757a5ee7ba2256ee10" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#collections.Counter.most_common&quot;&gt;&lt;code&gt;most_common()&lt;/code&gt;&lt;/a&gt; method requires only that the values be orderable.</source>
          <target state="translated">&lt;a href=&quot;#collections.Counter.most_common&quot;&gt; &lt;code&gt;most_common()&lt;/code&gt; &lt;/a&gt;メソッドは、値が発注可能であることだけを必要とします。</target>
        </trans-unit>
        <trans-unit id="930c05586beb6ba13547b88f3994228dfa5ece0d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; was designed to be good at reordering operations. Space efficiency, iteration speed, and the performance of update operations were secondary.</source>
          <target state="translated">&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; は、&lt;/a&gt;並べ替え操作で良いように設計されました。スペース効率、反復速度、および更新操作のパフォーマンスは二次的なものでした。</target>
        </trans-unit>
        <trans-unit id="14c700a71a41622dbac3704cd157df6e5a883a12" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#collections.OrderedDict.popitem&quot;&gt;&lt;code&gt;popitem()&lt;/code&gt;&lt;/a&gt; method for ordered dictionaries returns and removes a (key, value) pair. The pairs are returned in</source>
          <target state="translated">順序付けされた辞書の&lt;a href=&quot;#collections.OrderedDict.popitem&quot;&gt; &lt;code&gt;popitem()&lt;/code&gt; &lt;/a&gt;メソッドは、（キー、値）ペアを返し、削除します。ペアが返されます</target>
        </trans-unit>
        <trans-unit id="a69c67ce83ebf3a08e3f3bb6aedaab859ff19801" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#collections.abc.Set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; mixin provides a &lt;code&gt;_hash()&lt;/code&gt; method to compute a hash value for the set; however, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; is not defined because not all sets are hashable or immutable. To add set hashability using mixins, inherit from both &lt;a href=&quot;#collections.abc.Set&quot;&gt;&lt;code&gt;Set()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#collections.abc.Hashable&quot;&gt;&lt;code&gt;Hashable()&lt;/code&gt;&lt;/a&gt;, then define &lt;code&gt;__hash__ = Set._hash&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#collections.abc.Set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;ミックスインを提供 &lt;code&gt;_hash()&lt;/code&gt; セットのハッシュ値を計算する方法。ただし、すべてのセットがハッシュ可能または不変ではないため、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;は定義されていません。ミックスインを使用してセットのハッシュ可能性を追加するには、&lt;a href=&quot;#collections.abc.Set&quot;&gt; &lt;code&gt;Set()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#collections.abc.Hashable&quot;&gt; &lt;code&gt;Hashable()&lt;/code&gt; の&lt;/a&gt;両方から継承し、 &lt;code&gt;__hash__ = Set._hash&lt;/code&gt; 定義します。</target>
        </trans-unit>
        <trans-unit id="221671db373989976e5802c67c139377271af252" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#collections.deque.rotate&quot;&gt;&lt;code&gt;rotate()&lt;/code&gt;&lt;/a&gt; method provides a way to implement &lt;a href=&quot;#collections.deque&quot;&gt;&lt;code&gt;deque&lt;/code&gt;&lt;/a&gt; slicing and deletion. For example, a pure Python implementation of &lt;code&gt;del d[n]&lt;/code&gt; relies on the &lt;code&gt;rotate()&lt;/code&gt; method to position elements to be popped:</source>
          <target state="translated">&lt;a href=&quot;#collections.deque.rotate&quot;&gt; &lt;code&gt;rotate()&lt;/code&gt; &lt;/a&gt;メソッドを実装するための方法を提供&lt;a href=&quot;#collections.deque&quot;&gt; &lt;code&gt;deque&lt;/code&gt; &lt;/a&gt;スライシングおよび削除を。たとえば、 &lt;code&gt;del d[n]&lt;/code&gt; 純粋なPythonの実装では、 &lt;code&gt;rotate()&lt;/code&gt; メソッドを使用して、ポップする要素を配置しています。</target>
        </trans-unit>
        <trans-unit id="4e569183bc5f6990d984884660176ba9ef4b859c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#concurrent.futures.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; class encapsulates the asynchronous execution of a callable. &lt;a href=&quot;#concurrent.futures.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; instances are created by &lt;a href=&quot;#concurrent.futures.Executor.submit&quot;&gt;&lt;code&gt;Executor.submit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#concurrent.futures.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;クラスは、呼び出し可能なの非同期実行をカプセル化します。&lt;a href=&quot;#concurrent.futures.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;インスタンスは&lt;a href=&quot;#concurrent.futures.Executor.submit&quot;&gt; &lt;code&gt;Executor.submit()&lt;/code&gt; &lt;/a&gt;によって作成されます。</target>
        </trans-unit>
        <trans-unit id="1822bc14bc9a0b1a844ed1deebde9d250080ac69" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt;&lt;code&gt;ProcessPoolExecutor&lt;/code&gt;&lt;/a&gt; class is an &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; subclass that uses a pool of processes to execute calls asynchronously. &lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt;&lt;code&gt;ProcessPoolExecutor&lt;/code&gt;&lt;/a&gt; uses the &lt;a href=&quot;multiprocessing#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; module, which allows it to side-step the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-global-interpreter-lock&quot;&gt;Global Interpreter Lock&lt;/a&gt; but also means that only picklable objects can be executed and returned.</source>
          <target state="translated">&lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt; &lt;code&gt;ProcessPoolExecutor&lt;/code&gt; の&lt;/a&gt;クラスがある&lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;非同期呼び出しを実行するプロセスのプールを使用していますサブクラス。&lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt; &lt;code&gt;ProcessPoolExecutor&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;multiprocessing#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;モジュールを使用します。これにより、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-global-interpreter-lock&quot;&gt;グローバルインタープリターロックを&lt;/a&gt;回避できますが、実行可能なオブジェクトのみを実行して返すこともできます。</target>
        </trans-unit>
        <trans-unit id="203d331c7758087cc357182ac4e448ee2ceee40b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#copy.deepcopy&quot;&gt;&lt;code&gt;deepcopy()&lt;/code&gt;&lt;/a&gt; function avoids these problems by:</source>
          <target state="translated">&lt;a href=&quot;#copy.deepcopy&quot;&gt; &lt;code&gt;deepcopy()&lt;/code&gt; &lt;/a&gt;関数は、これらの問題を回避します：</target>
        </trans-unit>
        <trans-unit id="caa491dc6320beb3427a9719796a171735692831" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#csv.Dialect&quot;&gt;&lt;code&gt;Dialect&lt;/code&gt;&lt;/a&gt; class is a container class relied on primarily for its attributes, which are used to define the parameters for a specific &lt;a href=&quot;#csv.reader&quot;&gt;&lt;code&gt;reader&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#csv.writer&quot;&gt;&lt;code&gt;writer&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#csv.Dialect&quot;&gt; &lt;code&gt;Dialect&lt;/code&gt; &lt;/a&gt;クラスは、コンテナクラスは、主に特定するためのパラメータを定義するために使用され、その属性のために頼っている&lt;a href=&quot;#csv.reader&quot;&gt; &lt;code&gt;reader&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;#csv.writer&quot;&gt; &lt;code&gt;writer&lt;/code&gt; &lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="b15a7ae6b823bade54f2f0c1b40edf7363d08013" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#csv.Sniffer&quot;&gt;&lt;code&gt;Sniffer&lt;/code&gt;&lt;/a&gt; class is used to deduce the format of a CSV file.</source>
          <target state="translated">&lt;a href=&quot;#csv.Sniffer&quot;&gt; &lt;code&gt;Sniffer&lt;/code&gt; &lt;/a&gt;クラスは、CSVファイルの形式を推測するために使用されます。</target>
        </trans-unit>
        <trans-unit id="d23bf26ffbe4dd5b952da6577a2a178717e8ca08" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#csv.Sniffer&quot;&gt;&lt;code&gt;Sniffer&lt;/code&gt;&lt;/a&gt; class provides two methods:</source>
          <target state="translated">&lt;a href=&quot;#csv.Sniffer&quot;&gt; &lt;code&gt;Sniffer&lt;/code&gt; &lt;/a&gt;クラスには2つのメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="ea19f633e775d51af41f15adaed6eeb3e13872ce" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#csv.excel&quot;&gt;&lt;code&gt;excel&lt;/code&gt;&lt;/a&gt; class defines the usual properties of an Excel-generated CSV file. It is registered with the dialect name &lt;code&gt;'excel'&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#csv.excel&quot;&gt; &lt;code&gt;excel&lt;/code&gt; &lt;/a&gt;クラスは、Excelで生成されたCSVファイルの通常のプロパティを定義します。方言名 &lt;code&gt;'excel'&lt;/code&gt; 登録されています。</target>
        </trans-unit>
        <trans-unit id="553e6a4ea2302f3aa758db648fd949972f5c4bb3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#csv.excel_tab&quot;&gt;&lt;code&gt;excel_tab&lt;/code&gt;&lt;/a&gt; class defines the usual properties of an Excel-generated TAB-delimited file. It is registered with the dialect name &lt;code&gt;'excel-tab'&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#csv.excel_tab&quot;&gt; &lt;code&gt;excel_tab&lt;/code&gt; &lt;/a&gt;クラスは、Excelで生成されたタブ区切りファイルの通常のプロパティを定義します。方言名 &lt;code&gt;'excel-tab'&lt;/code&gt; 登録されています。</target>
        </trans-unit>
        <trans-unit id="023f18c8a27378a5268ca8b5eafbc5ee0e99be10" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#csv.reader&quot;&gt;&lt;code&gt;reader&lt;/code&gt;&lt;/a&gt; is hard-coded to recognise either &lt;code&gt;'\r'&lt;/code&gt; or &lt;code&gt;'\n'&lt;/code&gt; as end-of-line, and ignores &lt;em&gt;lineterminator&lt;/em&gt;. This behavior may change in the future.</source>
          <target state="translated">&lt;a href=&quot;#csv.reader&quot;&gt; &lt;code&gt;reader&lt;/code&gt; &lt;/a&gt;ハードコードされたいずれか認識することである &lt;code&gt;'\r'&lt;/code&gt; または &lt;code&gt;'\n'&lt;/code&gt; エンドオブラインとしての、そして無視&lt;em&gt;lineterminatorを&lt;/em&gt;。この動作は将来変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="b35b42348b19c6b1314a5e48f0b28d92824e17ab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#csv.unix_dialect&quot;&gt;&lt;code&gt;unix_dialect&lt;/code&gt;&lt;/a&gt; class defines the usual properties of a CSV file generated on UNIX systems, i.e. using &lt;code&gt;'\n'&lt;/code&gt; as line terminator and quoting all fields. It is registered with the dialect name &lt;code&gt;'unix'&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#csv.unix_dialect&quot;&gt; &lt;code&gt;unix_dialect&lt;/code&gt; &lt;/a&gt;クラスは、すなわち使用して、UNIXシステムで生成されたCSVファイルの通常のプロパティを定義する &lt;code&gt;'\n'&lt;/code&gt; 行終端として、すべてのフィールドを引用します。方言名 &lt;code&gt;'unix'&lt;/code&gt; で登録されています。</target>
        </trans-unit>
        <trans-unit id="898a4ae235ffd60b9f411cb15628737373ee7a1e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ctypes.CFUNCTYPE&quot;&gt;&lt;code&gt;CFUNCTYPE()&lt;/code&gt;&lt;/a&gt; factory function creates types for callback functions using the &lt;code&gt;cdecl&lt;/code&gt; calling convention. On Windows, the &lt;a href=&quot;#ctypes.WINFUNCTYPE&quot;&gt;&lt;code&gt;WINFUNCTYPE()&lt;/code&gt;&lt;/a&gt; factory function creates types for callback functions using the &lt;code&gt;stdcall&lt;/code&gt; calling convention.</source>
          <target state="translated">&lt;a href=&quot;#ctypes.CFUNCTYPE&quot;&gt; &lt;code&gt;CFUNCTYPE()&lt;/code&gt; &lt;/a&gt;ファクトリ関数は、使用してコールバック関数の型を作成 &lt;code&gt;cdecl&lt;/code&gt; 呼び出し規約を。Windowsでは、&lt;a href=&quot;#ctypes.WINFUNCTYPE&quot;&gt; &lt;code&gt;WINFUNCTYPE()&lt;/code&gt; &lt;/a&gt;ファクトリ関数は、 &lt;code&gt;stdcall&lt;/code&gt; 呼び出し規約を使用してコールバック関数のタイプを作成します。</target>
        </trans-unit>
        <trans-unit id="ea1faf8022d86fcafadc0d6214d8c226523b156e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt;&lt;code&gt;_fields_&lt;/code&gt;&lt;/a&gt; class variable must, however, be defined before the type is first used (an instance is created, &lt;a href=&quot;#ctypes.sizeof&quot;&gt;&lt;code&gt;sizeof()&lt;/code&gt;&lt;/a&gt; is called on it, and so on). Later assignments to the &lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt;&lt;code&gt;_fields_&lt;/code&gt;&lt;/a&gt; class variable will raise an AttributeError.</source>
          <target state="translated">&lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt; &lt;code&gt;_fields_&lt;/code&gt; &lt;/a&gt;クラス変数のマストは、しかし、型を最初に使用する前に定義することは、（インスタンスが作成され、&lt;a href=&quot;#ctypes.sizeof&quot;&gt; &lt;code&gt;sizeof()&lt;/code&gt; &lt;/a&gt;その上に呼ばれる、など）。後で&lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt; &lt;code&gt;_fields_&lt;/code&gt; &lt;/a&gt;クラス変数に割り当てると、AttributeErrorが発生します。</target>
        </trans-unit>
        <trans-unit id="39e788a6f6117703fe1acaddcb5b42f60830bc05" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ctypes.cast&quot;&gt;&lt;code&gt;cast()&lt;/code&gt;&lt;/a&gt; function can be used to cast a ctypes instance into a pointer to a different ctypes data type. &lt;a href=&quot;#ctypes.cast&quot;&gt;&lt;code&gt;cast()&lt;/code&gt;&lt;/a&gt; takes two parameters, a ctypes object that is or can be converted to a pointer of some kind, and a ctypes pointer type. It returns an instance of the second argument, which references the same memory block as the first argument:</source>
          <target state="translated">&lt;a href=&quot;#ctypes.cast&quot;&gt; &lt;code&gt;cast()&lt;/code&gt; &lt;/a&gt;関数は、別のctypesデータ型へのポインタにctypesのインスタンスをキャストするために使用することができます。&lt;a href=&quot;#ctypes.cast&quot;&gt; &lt;code&gt;cast()&lt;/code&gt; &lt;/a&gt;は2つのパラメーターを受け取ります。あるタイプのポインターに変換されている、または変換できるctypesオブジェクトと、ctypesポインター型です。最初の引数と同じメモリブロックを参照する2番目の引数のインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="f04e4712598dbb153bd55f26be6b5a134f66e409" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ctypes.create_string_buffer&quot;&gt;&lt;code&gt;create_string_buffer()&lt;/code&gt;&lt;/a&gt; function replaces the &lt;code&gt;c_buffer()&lt;/code&gt; function (which is still available as an alias), as well as the &lt;code&gt;c_string()&lt;/code&gt; function from earlier ctypes releases. To create a mutable memory block containing unicode characters of the C type &lt;code&gt;wchar_t&lt;/code&gt; use the &lt;a href=&quot;#ctypes.create_unicode_buffer&quot;&gt;&lt;code&gt;create_unicode_buffer()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;#ctypes.create_string_buffer&quot;&gt; &lt;code&gt;create_string_buffer()&lt;/code&gt; &lt;/a&gt;関数が置き換え &lt;code&gt;c_buffer()&lt;/code&gt; （別名として、まだ入手可能である）機能、ならびに &lt;code&gt;c_string()&lt;/code&gt; 以前のctypesリリースの機能を。Cタイプ &lt;code&gt;wchar_t&lt;/code&gt; の Unicode文字を含む可変メモリブロックを作成するには、&lt;a href=&quot;#ctypes.create_unicode_buffer&quot;&gt; &lt;code&gt;create_unicode_buffer()&lt;/code&gt; &lt;/a&gt;関数を使用します。</target>
        </trans-unit>
        <trans-unit id="fc1abd016bdf60e677ca1c13260f47722c20943b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ctypes.resize&quot;&gt;&lt;code&gt;resize()&lt;/code&gt;&lt;/a&gt; function can be used to resize the memory buffer of an existing ctypes object. The function takes the object as first argument, and the requested size in bytes as the second argument. The memory block cannot be made smaller than the natural memory block specified by the objects type, a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if this is tried:</source>
          <target state="translated">&lt;a href=&quot;#ctypes.resize&quot;&gt; &lt;code&gt;resize()&lt;/code&gt; &lt;/a&gt;関数は、既存のctypesオブジェクトのメモリバッファのサイズを変更するために使用することができます。この関数は、オブジェクトを最初の引数として受け取り、要求されたサイズ（バイト単位）を2番目の引数として受け取ります。メモリブロックをオブジェクトタイプで指定されたナチュラルメモリブロックより小さくすることはできません。これを試行すると、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="17c7ed721f6c997536e3eae62333ddd1ec2d70f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#curses.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; routine, if used, must be called before &lt;a href=&quot;#curses.initscr&quot;&gt;&lt;code&gt;initscr()&lt;/code&gt;&lt;/a&gt; is called. The effect is that, during those calls, &lt;code id=&quot;index-0&quot;&gt;LINES&lt;/code&gt; is set to &lt;code&gt;1&lt;/code&gt;; the capabilities &lt;code&gt;clear&lt;/code&gt;, &lt;code&gt;cup&lt;/code&gt;, &lt;code&gt;cud&lt;/code&gt;, &lt;code&gt;cud1&lt;/code&gt;, &lt;code&gt;cuu1&lt;/code&gt;, &lt;code&gt;cuu&lt;/code&gt;, &lt;code&gt;vpa&lt;/code&gt; are disabled; and the &lt;code&gt;home&lt;/code&gt; string is set to the value of &lt;code&gt;cr&lt;/code&gt;. The effect is that the cursor is confined to the current line, and so are screen updates. This may be used for enabling character-at-a-time line editing without touching the rest of the screen.</source>
          <target state="translated">&lt;a href=&quot;#curses.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt;、使用している場合、前に呼び出されなければならないルーチン&lt;a href=&quot;#curses.initscr&quot;&gt; &lt;code&gt;initscr()&lt;/code&gt; &lt;/a&gt;と呼ばれています。その結果、これらの呼び出しの間、 &lt;code id=&quot;index-0&quot;&gt;LINES&lt;/code&gt; は &lt;code&gt;1&lt;/code&gt; に設定されます。機能 &lt;code&gt;clear&lt;/code&gt; 、 &lt;code&gt;cup&lt;/code&gt; 、 &lt;code&gt;cud&lt;/code&gt; 、 &lt;code&gt;cud1&lt;/code&gt; 、 &lt;code&gt;cuu1&lt;/code&gt; 、 &lt;code&gt;cuu&lt;/code&gt; 、 &lt;code&gt;vpa&lt;/code&gt; は無効になっています。そして、 &lt;code&gt;home&lt;/code&gt; 文字列は &lt;code&gt;cr&lt;/code&gt; の値に設定されます。その結果、カーソルが現在の行に限定され、画面が更新されます。これは、画面の残りの部分に触れることなく、文字単位の行編集を可能にするために使用できます。</target>
        </trans-unit>
        <trans-unit id="316363716152925b75d3cb4ebaef9b0e32360b84" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; decorator examines the class to find &lt;code&gt;field&lt;/code&gt;s. A &lt;code&gt;field&lt;/code&gt; is defined as class variable that has a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-variable-annotation&quot;&gt;type annotation&lt;/a&gt;. With two exceptions described below, nothing in &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; examines the type specified in the variable annotation.</source>
          <target state="translated">&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;デコレータは見つけるために、クラスを調べ &lt;code&gt;field&lt;/code&gt; 秒。 &lt;code&gt;field&lt;/code&gt; 持つクラス変数として定義されている&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-variable-annotation&quot;&gt;タイプの注釈を&lt;/a&gt;。以下で説明する2つの例外を除いて、&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;では変数注釈で指定された型を検査しません。</target>
        </trans-unit>
        <trans-unit id="4699e9b5a61dff36896adb38ef9387de7f4bbf32" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; decorator will add various &amp;ldquo;dunder&amp;rdquo; methods to the class, described below. If any of the added methods already exist on the class, the behavior depends on the parameter, as documented below. The decorator returns the same class that is called on; no new class is created.</source>
          <target state="translated">&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;デコレータクラスに様々な「dunder」メソッドが追加され、以下に説明します。追加されたメソッドのいずれかがクラスにすでに存在する場合、動作は以下に説明するようにパラメーターに依存します。デコレータは、呼び出されたのと同じクラスを返します。新しいクラスは作成されません。</target>
        </trans-unit>
        <trans-unit id="63c38db09f7ff00463891fd5330badf211e2c04f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#datetime.timezone&quot;&gt;&lt;code&gt;timezone&lt;/code&gt;&lt;/a&gt; types share these common features:</source>
          <target state="translated">&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#datetime.timezone&quot;&gt; &lt;code&gt;timezone&lt;/code&gt; &lt;/a&gt;種類は、これらの共通の特徴を共有します：</target>
        </trans-unit>
        <trans-unit id="7285c2c2396c8d7548a1767431a66dc14e38b3e7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#datetime.timezone&quot;&gt;&lt;code&gt;timezone&lt;/code&gt;&lt;/a&gt; class is a subclass of &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt;, each instance of which represents a timezone defined by a fixed offset from UTC.</source>
          <target state="translated">&lt;a href=&quot;#datetime.timezone&quot;&gt; &lt;code&gt;timezone&lt;/code&gt; &lt;/a&gt;クラスはサブクラスで&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; が&lt;/a&gt;、固定されたUTCからのオフセットによって定義されたタイムゾーンを表すの各インスタンス。</target>
        </trans-unit>
        <trans-unit id="30ab4c018014c365ee7ffb771c34bba718d05f93" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#decimal.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; class defines several general purpose methods as well as a large number of methods for doing arithmetic directly in a given context. In addition, for each of the &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; methods described above (with the exception of the &lt;code&gt;adjusted()&lt;/code&gt; and &lt;code&gt;as_tuple()&lt;/code&gt; methods) there is a corresponding &lt;a href=&quot;#decimal.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; method. For example, for a &lt;a href=&quot;#decimal.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; instance &lt;code&gt;C&lt;/code&gt; and &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instance &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;C.exp(x)&lt;/code&gt; is equivalent to &lt;code&gt;x.exp(context=C)&lt;/code&gt;. Each &lt;a href=&quot;#decimal.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; method accepts a Python integer (an instance of &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;) anywhere that a Decimal instance is accepted.</source>
          <target state="translated">&lt;a href=&quot;#decimal.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;クラスは、いくつかの汎用の方法、ならびに所与のコンテキストで直接演算を行うための多数の方法を定義します。さらに、上記の各&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;メソッド &lt;code&gt;adjusted()&lt;/code&gt; &lt;code&gt;as_tuple()&lt;/code&gt; メソッドとas_tuple（）メソッドを除く）には、対応する&lt;a href=&quot;#decimal.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;メソッドがあります。たとえば、&lt;a href=&quot;#decimal.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;インスタンス &lt;code&gt;C&lt;/code&gt; および&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;インスタンス &lt;code&gt;x&lt;/code&gt; の場合、 &lt;code&gt;C.exp(x)&lt;/code&gt; は &lt;code&gt;x.exp(context=C)&lt;/code&gt; と同等です。各&lt;a href=&quot;#decimal.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;メソッドはPython整数（&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; の&lt;/a&gt;インスタンス）を受け入れます）Decimalインスタンスが受け入れられる場所。</target>
        </trans-unit>
        <trans-unit id="4c2451a4b748fe7038fb95ffc7f31dc59d1bfe5e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#decimal.getcontext&quot;&gt;&lt;code&gt;getcontext()&lt;/code&gt;&lt;/a&gt; function accesses a different &lt;a href=&quot;#decimal.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; object for each thread. Having separate thread contexts means that threads may make changes (such as &lt;code&gt;getcontext().prec=10&lt;/code&gt;) without interfering with other threads.</source>
          <target state="translated">&lt;a href=&quot;#decimal.getcontext&quot;&gt; &lt;code&gt;getcontext()&lt;/code&gt; &lt;/a&gt;関数は、異なるアクセス&lt;a href=&quot;#decimal.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;各スレッドのオブジェクト。個別のスレッドコンテキストがあることは、スレッドが他のスレッドに干渉することなく変更（ &lt;code&gt;getcontext().prec=10&lt;/code&gt; ）を実行できることを意味します。</target>
        </trans-unit>
        <trans-unit id="262401b2372aaa25cb2cdfc7cb06fb241a0f0bdc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#difflib.Differ&quot;&gt;&lt;code&gt;Differ&lt;/code&gt;&lt;/a&gt; class has this constructor:</source>
          <target state="translated">&lt;a href=&quot;#difflib.Differ&quot;&gt; &lt;code&gt;Differ&lt;/code&gt; &lt;/a&gt;クラスがこのコンストラクタを持っています：</target>
        </trans-unit>
        <trans-unit id="f84a219ce565ea3dd400d91f14baef3e6167fa14" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt;&lt;code&gt;SequenceMatcher&lt;/code&gt;&lt;/a&gt; class has this constructor:</source>
          <target state="translated">&lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt; &lt;code&gt;SequenceMatcher&lt;/code&gt; オブジェクトの&lt;/a&gt;クラスは、このコンストラクタを持っています：</target>
        </trans-unit>
        <trans-unit id="f1a296dacbe11dd809b20737940faffda6e869f0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#difflib.get_close_matches&quot;&gt;&lt;code&gt;get_close_matches()&lt;/code&gt;&lt;/a&gt; function in this module which shows how simple code building on &lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt;&lt;code&gt;SequenceMatcher&lt;/code&gt;&lt;/a&gt; can be used to do useful work.</source>
          <target state="translated">このモジュールの&lt;a href=&quot;#difflib.get_close_matches&quot;&gt; &lt;code&gt;get_close_matches()&lt;/code&gt; &lt;/a&gt;関数は、&lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt; &lt;code&gt;SequenceMatcher&lt;/code&gt; での&lt;/a&gt;単純なコード構築を使用して有用な作業を行う方法を示しています。</target>
        </trans-unit>
        <trans-unit id="7f4ec7076d0fb2f20af8c32cf7906ea9bc88fdf2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#dis.get_instructions&quot;&gt;&lt;code&gt;get_instructions()&lt;/code&gt;&lt;/a&gt; function and &lt;a href=&quot;#dis.Bytecode&quot;&gt;&lt;code&gt;Bytecode&lt;/code&gt;&lt;/a&gt; class provide details of bytecode instructions as &lt;a href=&quot;#dis.Instruction&quot;&gt;&lt;code&gt;Instruction&lt;/code&gt;&lt;/a&gt; instances:</source>
          <target state="translated">&lt;a href=&quot;#dis.get_instructions&quot;&gt; &lt;code&gt;get_instructions()&lt;/code&gt; &lt;/a&gt;関数と&lt;a href=&quot;#dis.Bytecode&quot;&gt; &lt;code&gt;Bytecode&lt;/code&gt; &lt;/a&gt;クラスは、としてバイトコード命令の詳細を提供する&lt;a href=&quot;#dis.Instruction&quot;&gt; &lt;code&gt;Instruction&lt;/code&gt; &lt;/a&gt;インスタンス：</target>
        </trans-unit>
        <trans-unit id="b8609345658f9e3f7fd9c556781a8ceab1948f77" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#doctest.DebugRunner&quot;&gt;&lt;code&gt;DebugRunner&lt;/code&gt;&lt;/a&gt; class is a subclass of &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt; that raises an exception for the first failing example, containing information about that example. This information can be used to perform post-mortem debugging on the example.</source>
          <target state="translated">&lt;a href=&quot;#doctest.DebugRunner&quot;&gt; &lt;code&gt;DebugRunner&lt;/code&gt; の&lt;/a&gt;クラスはサブクラスで&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; &lt;/a&gt;その例に関する情報を含む、第一の失敗例えば例外が発生します。この情報を使用して、例の事後デバッグを実行できます。</target>
        </trans-unit>
        <trans-unit id="a753b5aee0860388f6f4914fb3a05c949fe9effa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#doctest.DebugRunner&quot;&gt;&lt;code&gt;DebugRunner&lt;/code&gt;&lt;/a&gt; class, and the special exceptions it may raise, are of most interest to testing framework authors, and will only be sketched here. See the source code, and especially &lt;a href=&quot;#doctest.DebugRunner&quot;&gt;&lt;code&gt;DebugRunner&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s docstring (which is a doctest!) for more details:</source>
          <target state="translated">&lt;a href=&quot;#doctest.DebugRunner&quot;&gt; &lt;code&gt;DebugRunner&lt;/code&gt; の&lt;/a&gt;クラス、およびそれが上げることができる特別な例外は、フレームワークの作者のテストに最も関心がある、とここでしかスケッチされます。詳細については、ソースコード、特に&lt;a href=&quot;#doctest.DebugRunner&quot;&gt; &lt;code&gt;DebugRunner&lt;/code&gt; &lt;/a&gt;のdocstring（これはdoctest！）を参照してください。</target>
        </trans-unit>
        <trans-unit id="db4e4d2f74c5768a719d3127ef0d73fd7ed1c368" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; object that was being run when the example failed.</source>
          <target state="translated">&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;の例では、失敗した時に実行されたオブジェクト。</target>
        </trans-unit>
        <trans-unit id="e14145b7ea305b81edc3a0187c0f5ae4147252d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#doctest.ELLIPSIS&quot;&gt;&lt;code&gt;ELLIPSIS&lt;/code&gt;&lt;/a&gt; directive gives a nice approach for the last example:</source>
          <target state="translated">&lt;a href=&quot;#doctest.ELLIPSIS&quot;&gt; &lt;code&gt;ELLIPSIS&lt;/code&gt; &lt;/a&gt;ディレクティブは、最後の例のための素敵なアプローチを提供します：</target>
        </trans-unit>
        <trans-unit id="a3fd9ed4c6f4d1c3ee85bd113b3a6e65aced55a4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#doctest.Example&quot;&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/a&gt; that failed.</source>
          <target state="translated">&lt;a href=&quot;#doctest.Example&quot;&gt; &lt;code&gt;Example&lt;/code&gt; &lt;/a&gt;に失敗しました。</target>
        </trans-unit>
        <trans-unit id="12952789268d4531a057ffffdea84d074c22d65e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; class also provides a number of methods to support standard operations and built-in functions.</source>
          <target state="translated">&lt;a href=&quot;#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;クラスには、標準的な操作をサポートするために多数の方法を提供し、組み込み関数。</target>
        </trans-unit>
        <trans-unit id="e24f5e3fa9d9f920266109958df4565b0b3c077b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; class can be used to flatten a message into a text (as opposed to binary) serialized representation, but since Unicode cannot represent binary data directly, the message is of necessity transformed into something that contains only ASCII characters, using the standard email RFC Content Transfer Encoding techniques for encoding email messages for transport over channels that are not &amp;ldquo;8 bit clean&amp;rdquo;.</source>
          <target state="translated">&lt;a href=&quot;#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;直列化表現（バイナリではなく）クラスは、テキストにメッセージを平坦化するために使用することができるが、Unicodeが直接バイナリデータを表すことができないので、メッセージは標準の電子メールRFCを使用して、ASCII文字のみが含まれているものに変換必要です「8ビットクリーン」ではないチャネルを介して転送するために電子メールメッセージをエンコードするコンテンツ転送エンコーディング技術。</target>
        </trans-unit>
        <trans-unit id="57c1078eb78d57874e3db83f4f9d2a1a41f52b0d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; class also provides a number of methods to support standard operators and built-in functions.</source>
          <target state="translated">&lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;クラスは、標準の演算子および関数組み込みをサポートするために多数の方法を提供します。</target>
        </trans-unit>
        <trans-unit id="ff0626c380b6c21daadf51b2206b16b6e1b3b18b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; dictionary-like interface is indexed by the header names, which must be ASCII values. The values of the dictionary are strings with some extra methods. Headers are stored and returned in case-preserving form, but field names are matched case-insensitively. Unlike a real dict, there is an ordering to the keys, and there can be duplicate keys. Additional methods are provided for working with headers that have duplicate keys.</source>
          <target state="translated">&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; のの&lt;/a&gt;辞書のようなインターフェイスは、ASCII値でなければならないヘッダ名によってインデックスされます。辞書の値は、いくつかの追加メソッドを含む文字列です。ヘッダーは大文字と小文字を維持した形式で格納および返されますが、フィールド名は大文字と小文字を区別せずに一致します。実際の辞書とは異なり、キーには順序があり、キーが重複する場合があります。重複するキーを持つヘッダーを操作するための追加のメソッドが提供されています。</target>
        </trans-unit>
        <trans-unit id="7beb5e5a031dd79580c00039aecf0006eddf006e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.message.EmailMessage.walk&quot;&gt;&lt;code&gt;walk()&lt;/code&gt;&lt;/a&gt; method is an all-purpose generator which can be used to iterate over all the parts and subparts of a message object tree, in depth-first traversal order. You will typically use &lt;a href=&quot;#email.message.EmailMessage.walk&quot;&gt;&lt;code&gt;walk()&lt;/code&gt;&lt;/a&gt; as the iterator in a &lt;code&gt;for&lt;/code&gt; loop; each iteration returns the next subpart.</source>
          <target state="translated">&lt;a href=&quot;#email.message.EmailMessage.walk&quot;&gt; &lt;code&gt;walk()&lt;/code&gt; &lt;/a&gt;メソッドは、深さ優先トラバーサル順に、メッセージオブジェクトツリーのすべての部分と下位部分を反復処理するために使用することができる万能発電機です。通常、 &lt;code&gt;for&lt;/code&gt; ループの反復子として&lt;a href=&quot;#email.message.EmailMessage.walk&quot;&gt; &lt;code&gt;walk()&lt;/code&gt; &lt;/a&gt;を使用します。各反復は次のサブパートを返します。</target>
        </trans-unit>
        <trans-unit id="51f30eb0997a6bed3821ee80398f62d132641248" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; class is very similar to the &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; class, without the methods added by that class, and with the default behavior of certain other methods being slightly different. We also document here some methods that, while supported by the &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; class, are not recommended unless you are dealing with legacy code.</source>
          <target state="translated">&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;クラスは、と非常に類似している&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; のの&lt;/a&gt;そのクラスによって追加されたメソッドことなく、クラス、および特定の他の方法のデフォルトの動作はわずかに異なることです。また、&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;クラスでサポートされているものの、レガシーコードを扱っていない限り推奨されないいくつかのメソッドについても説明します。</target>
        </trans-unit>
        <trans-unit id="2137b67a1cad530c1434e4f34ea24dddaa0f111b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; pseudo-dictionary is indexed by the header names, which must be ASCII values. The values of the dictionary are strings that are supposed to contain only ASCII characters; there is some special handling for non-ASCII input, but it doesn&amp;rsquo;t always produce the correct results. Headers are stored and returned in case-preserving form, but field names are matched case-insensitively. There may also be a single envelope header, also known as the &lt;em&gt;Unix-From&lt;/em&gt; header or the &lt;code&gt;From_&lt;/code&gt; header. The &lt;em&gt;payload&lt;/em&gt; is either a string or bytes, in the case of simple message objects, or a list of &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects, for MIME container documents (e.g. &lt;em&gt;multipart/*&lt;/em&gt; and &lt;em&gt;message/rfc822&lt;/em&gt;).</source>
          <target state="translated">&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;擬似辞書はASCII値でなければならないヘッダ名によってインデックスされます。辞書の値は、ASCII文字のみを含むことが想定されている文字列です。非ASCII入力には特別な処理がいくつかありますが、常に正しい結果が得られるとは限りません。ヘッダーは大文字と小文字を維持した形式で格納および返されますが、フィールド名は大文字と小文字を区別せずに一致します。&lt;em&gt;Unix-From&lt;/em&gt;ヘッダーまたは &lt;code&gt;From_&lt;/code&gt; ヘッダーとも呼ばれる単一のエンベロープヘッダーが存在する場合もあります。&lt;em&gt;ペイロードは&lt;/em&gt;いずれかの文字列であるか、簡単なメッセージオブジェクトの場合には、バイト、またはリスト&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;（例えばMIMEコンテナ文書に、オブジェクトを&lt;em&gt;マルチパート/ *&lt;/em&gt;と&lt;em&gt;メッセージ/ RFC822&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="ca981282c5517da9128d2368f106a4e670e04bb4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.message.Message.walk&quot;&gt;&lt;code&gt;walk()&lt;/code&gt;&lt;/a&gt; method is an all-purpose generator which can be used to iterate over all the parts and subparts of a message object tree, in depth-first traversal order. You will typically use &lt;a href=&quot;#email.message.Message.walk&quot;&gt;&lt;code&gt;walk()&lt;/code&gt;&lt;/a&gt; as the iterator in a &lt;code&gt;for&lt;/code&gt; loop; each iteration returns the next subpart.</source>
          <target state="translated">&lt;a href=&quot;#email.message.Message.walk&quot;&gt; &lt;code&gt;walk()&lt;/code&gt; &lt;/a&gt;メソッドは、深さ優先トラバーサル順に、メッセージオブジェクトツリーのすべての部分と下位部分を反復処理するために使用することができる万能発電機です。通常、 &lt;code&gt;for&lt;/code&gt; ループの反復子として&lt;a href=&quot;#email.message.Message.walk&quot;&gt; &lt;code&gt;walk()&lt;/code&gt; &lt;/a&gt;を使用します。各反復は次のサブパートを返します。</target>
        </trans-unit>
        <trans-unit id="a4efcfb3c7cb51e40bed4d82c7465685ab9a3df4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt;&lt;code&gt;MIMEBase&lt;/code&gt;&lt;/a&gt; class always adds a &lt;em&gt;Content-Type&lt;/em&gt; header (based on &lt;em&gt;_maintype&lt;/em&gt;, &lt;em&gt;_subtype&lt;/em&gt;, and &lt;em&gt;_params&lt;/em&gt;), and a &lt;em&gt;MIME-Version&lt;/em&gt; header (always set to &lt;code&gt;1.0&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt; &lt;code&gt;MIMEBase&lt;/code&gt; の&lt;/a&gt;クラスは常に追加&lt;em&gt;のContent-Type&lt;/em&gt;（に基づいて、ヘッダ&lt;em&gt;_maintype&lt;/em&gt;、&lt;em&gt;_subtype&lt;/em&gt;、および&lt;em&gt;_params&lt;/em&gt;）、および&lt;em&gt;MIME-バージョンの&lt;/em&gt;ヘッダ（常にに設定さ &lt;code&gt;1.0&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3b5297e6544521f2b54ac92dce43d72fcb5f8e9e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt;&lt;code&gt;BytesFeedParser&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s API is simple; you create an instance, feed it a bunch of bytes until there&amp;rsquo;s no more to feed it, then close the parser to retrieve the root message object. The &lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt;&lt;code&gt;BytesFeedParser&lt;/code&gt;&lt;/a&gt; is extremely accurate when parsing standards-compliant messages, and it does a very good job of parsing non-compliant messages, providing information about how a message was deemed broken. It will populate a message object&amp;rsquo;s &lt;a href=&quot;email.message#email.message.EmailMessage.defects&quot;&gt;&lt;code&gt;defects&lt;/code&gt;&lt;/a&gt; attribute with a list of any problems it found in a message. See the &lt;a href=&quot;email.errors#module-email.errors&quot;&gt;&lt;code&gt;email.errors&lt;/code&gt;&lt;/a&gt; module for the list of defects that it can find.</source>
          <target state="translated">&lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt; &lt;code&gt;BytesFeedParser&lt;/code&gt; &lt;/a&gt;のAPIは簡単です。インスタンスを作成し、それをフィードする必要がなくなるまで大量のバイトをフィードし、パーサーを閉じてルートメッセージオブジェクトを取得します。&lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt; &lt;code&gt;BytesFeedParser&lt;/code&gt; は、&lt;/a&gt;標準に準拠したメッセージを解析するとき、非常に正確であり、そしてそれは、非準拠のメッセージを解析するメッセージが壊れとみなされた方法に関する情報を提供するのは非常に良い仕事をしていません。メッセージオブジェクトの&lt;a href=&quot;email.message#email.message.EmailMessage.defects&quot;&gt; &lt;code&gt;defects&lt;/code&gt; &lt;/a&gt;属性に、メッセージで見つかった問題のリストを入力します。検出できる障害のリストについては、&lt;a href=&quot;email.errors#module-email.errors&quot;&gt; &lt;code&gt;email.errors&lt;/code&gt; &lt;/a&gt;モジュールを参照してください。</target>
        </trans-unit>
        <trans-unit id="455ea518b92fec5912569d645995d649271f1068" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt;&lt;code&gt;BytesFeedParser&lt;/code&gt;&lt;/a&gt;, imported from the &lt;code&gt;email.feedparser&lt;/code&gt; module, provides an API that is conducive to incremental parsing of email messages, such as would be necessary when reading the text of an email message from a source that can block (such as a socket). The &lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt;&lt;code&gt;BytesFeedParser&lt;/code&gt;&lt;/a&gt; can of course be used to parse an email message fully contained in a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;, string, or file, but the &lt;a href=&quot;#email.parser.BytesParser&quot;&gt;&lt;code&gt;BytesParser&lt;/code&gt;&lt;/a&gt; API may be more convenient for such use cases. The semantics and results of the two parser APIs are identical.</source>
          <target state="translated">&lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt; &lt;code&gt;BytesFeedParser&lt;/code&gt; &lt;/a&gt;からインポート、 &lt;code&gt;email.feedparser&lt;/code&gt; のモジュールは、（例えばソケットのような）ブロックできるソースからの電子メールメッセージのテキストを読む際に必要となるなど、電子メールメッセージ、の漸進的構文解析を助長しているAPIを提供します。もちろん、&lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt; &lt;code&gt;BytesFeedParser&lt;/code&gt; &lt;/a&gt;を使用して、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt;、文字列、またはファイルに完全に含まれている電子メールメッセージを解析できますが、&lt;a href=&quot;#email.parser.BytesParser&quot;&gt; &lt;code&gt;BytesParser&lt;/code&gt; &lt;/a&gt; APIは、このようなユースケースの方が便利な場合があります。 2つのパーサーAPIのセマンティクスと結果は同じです。</target>
        </trans-unit>
        <trans-unit id="23578df0528e2bcfa2d13e7a22ac4991916102e1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.parser.BytesParser&quot;&gt;&lt;code&gt;BytesParser&lt;/code&gt;&lt;/a&gt; class, imported from the &lt;a href=&quot;#module-email.parser&quot;&gt;&lt;code&gt;email.parser&lt;/code&gt;&lt;/a&gt; module, provides an API that can be used to parse a message when the complete contents of the message are available in a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; or file. The &lt;a href=&quot;#module-email.parser&quot;&gt;&lt;code&gt;email.parser&lt;/code&gt;&lt;/a&gt; module also provides &lt;a href=&quot;#email.parser.Parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt; for parsing strings, and header-only parsers, &lt;a href=&quot;#email.parser.BytesHeaderParser&quot;&gt;&lt;code&gt;BytesHeaderParser&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#email.parser.HeaderParser&quot;&gt;&lt;code&gt;HeaderParser&lt;/code&gt;&lt;/a&gt;, which can be used if you&amp;rsquo;re only interested in the headers of the message. &lt;a href=&quot;#email.parser.BytesHeaderParser&quot;&gt;&lt;code&gt;BytesHeaderParser&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#email.parser.HeaderParser&quot;&gt;&lt;code&gt;HeaderParser&lt;/code&gt;&lt;/a&gt; can be much faster in these situations, since they do not attempt to parse the message body, instead setting the payload to the raw body.</source>
          <target state="translated">&lt;a href=&quot;#email.parser.BytesParser&quot;&gt; &lt;code&gt;BytesParser&lt;/code&gt; の&lt;/a&gt;からインポートクラス、&lt;a href=&quot;#module-email.parser&quot;&gt; &lt;code&gt;email.parser&lt;/code&gt; の&lt;/a&gt;モジュールは、メッセージの完全な内容はで利用可能なメッセージ解析するために使用することができるAPIを提供&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイト状オブジェクト&lt;/a&gt;またはファイルを。&lt;a href=&quot;#module-email.parser&quot;&gt; &lt;code&gt;email.parser&lt;/code&gt; の&lt;/a&gt;モジュールも提供して&lt;a href=&quot;#email.parser.Parser&quot;&gt; &lt;code&gt;Parser&lt;/code&gt; &lt;/a&gt;文字列、およびヘッダーのみのパーサ、解析するための&lt;a href=&quot;#email.parser.BytesHeaderParser&quot;&gt; &lt;code&gt;BytesHeaderParser&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#email.parser.HeaderParser&quot;&gt; &lt;code&gt;HeaderParser&lt;/code&gt; &lt;/a&gt;あなたがメッセージのヘッダーにだけ興味があるなら使用することができ、。&lt;a href=&quot;#email.parser.BytesHeaderParser&quot;&gt; &lt;code&gt;BytesHeaderParser&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#email.parser.HeaderParser&quot;&gt; &lt;code&gt;HeaderParser&lt;/code&gt; &lt;/a&gt;は、メッセージ本文を解析しようとせず、ペイロードを未加工の本文に設定するため、これらの状況でははるかに高速になります。</target>
        </trans-unit>
        <trans-unit id="85bf3f39230092aa892f16e0f7eecb87426fe897" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class is callable, providing the following functional API:</source>
          <target state="translated">&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;クラスは、以下の機能のAPIを提供する、呼び出し可能です。</target>
        </trans-unit>
        <trans-unit id="6c277b78ba2ec81d6d2de28b1c77027805e2aa66" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#event-loop-implementations&quot;&gt;Event Loop Implementations&lt;/a&gt; section documents the &lt;a href=&quot;#asyncio.SelectorEventLoop&quot;&gt;&lt;code&gt;SelectorEventLoop&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; classes;</source>
          <target state="translated">&lt;a href=&quot;#event-loop-implementations&quot;&gt;イベントループの実装の&lt;/a&gt;セクション文書&lt;a href=&quot;#asyncio.SelectorEventLoop&quot;&gt; &lt;code&gt;SelectorEventLoop&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#asyncio.ProactorEventLoop&quot;&gt; &lt;code&gt;ProactorEventLoop&lt;/code&gt; &lt;/a&gt;クラス。</target>
        </trans-unit>
        <trans-unit id="1cdbf0a871b5a60d9146255b077a077d5731d02d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#event-loop-methods&quot;&gt;Event Loop Methods&lt;/a&gt; section is the reference documentation of the event loop APIs;</source>
          <target state="translated">&lt;a href=&quot;#event-loop-methods&quot;&gt;イベントループ方法&lt;/a&gt;のセクションでは、イベントループのAPIのリファレンスドキュメントです。</target>
        </trans-unit>
        <trans-unit id="5ea2c779a8d4a043248492f818a19fe18aed4343" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#examples&quot;&gt;Examples&lt;/a&gt; section showcases how to work with some event loop APIs.</source>
          <target state="translated">&lt;a href=&quot;#examples&quot;&gt;例の&lt;/a&gt;セクションのショーケースには、どのようにいくつかのイベントループAPIと動作するように。</target>
        </trans-unit>
        <trans-unit id="0b489d830a7d9d9099ae9cf3e071f2eb2d0ffc41" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#examples&quot;&gt;Examples&lt;/a&gt; section showcases how to work with transports, protocols, and low-level event loop APIs.</source>
          <target state="translated">&lt;a href=&quot;#examples&quot;&gt;実施例の&lt;/a&gt;セクションのショーケースどのようにトランスポート、プロトコル、および低レベルのイベントループAPIを使用して作業します。</target>
        </trans-unit>
        <trans-unit id="46a625abe6df6aa03f16639dd4d7da65b44c473b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#filecmp.dircmp&quot;&gt;&lt;code&gt;dircmp&lt;/code&gt;&lt;/a&gt; class compares files by doing &lt;em&gt;shallow&lt;/em&gt; comparisons as described for &lt;a href=&quot;#filecmp.cmp&quot;&gt;&lt;code&gt;filecmp.cmp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#filecmp.dircmp&quot;&gt; &lt;code&gt;dircmp&lt;/code&gt; &lt;/a&gt;クラスが実行してファイルを比較&lt;em&gt;浅いの&lt;/em&gt;ために説明するように比較を&lt;a href=&quot;#filecmp.cmp&quot;&gt; &lt;code&gt;filecmp.cmp()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cbd2c2804abf18aa233595f2c9066be859802a7d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#filecmp.dircmp&quot;&gt;&lt;code&gt;dircmp&lt;/code&gt;&lt;/a&gt; class offers a number of interesting attributes that may be used to get various bits of information about the directory trees being compared.</source>
          <target state="translated">&lt;a href=&quot;#filecmp.dircmp&quot;&gt; &lt;code&gt;dircmp&lt;/code&gt; &lt;/a&gt;クラスが比較されているディレクトリツリーに関する情報の様々なビットを取得するために使用することができる興味深い属性の数を提供しています。</target>
        </trans-unit>
        <trans-unit id="72adb57220e6e99be6d29493dd6a1420ee7c643f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#filecmp.dircmp&quot;&gt;&lt;code&gt;dircmp&lt;/code&gt;&lt;/a&gt; class provides the following methods:</source>
          <target state="translated">&lt;a href=&quot;#filecmp.dircmp&quot;&gt; &lt;code&gt;dircmp&lt;/code&gt; &lt;/a&gt;クラスは以下のメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="19db21dafd9ed069b9a82326fff208a83767e71d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#fileinput.FileInput&quot;&gt;&lt;code&gt;FileInput&lt;/code&gt;&lt;/a&gt; instance can be used as a context manager in the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. In this example, &lt;em&gt;input&lt;/em&gt; is closed after the &lt;code&gt;with&lt;/code&gt; statement is exited, even if an exception occurs:</source>
          <target state="translated">&lt;a href=&quot;#fileinput.FileInput&quot;&gt; &lt;code&gt;FileInput&lt;/code&gt; クラスの&lt;/a&gt;インスタンスは、コンテキストマネージャとして使用することができる&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;声明。この例では、例外が発生した場合でも、 &lt;code&gt;with&lt;/code&gt; ステートメントの終了後に&lt;em&gt;入力&lt;/em&gt;が閉じられます。</target>
        </trans-unit>
        <trans-unit id="0c4e28be954ee79e9597284f6ac163856e52fada" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; class inherits from the abstract base class &lt;a href=&quot;numbers#numbers.Rational&quot;&gt;&lt;code&gt;numbers.Rational&lt;/code&gt;&lt;/a&gt;, and implements all of the methods and operations from that class. &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; instances are hashable, and should be treated as immutable. In addition, &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; has the following properties and methods:</source>
          <target state="translated">&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;クラス抽象基底クラスから継承&lt;a href=&quot;numbers#numbers.Rational&quot;&gt; &lt;code&gt;numbers.Rational&lt;/code&gt; &lt;/a&gt;、およびすべてのそのクラスのメソッドと操作の器具。&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;インスタンスはハッシュ可能であり、不変として処理する必要があります。さらに、&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;には次のプロパティとメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="6bcd4b660916451139fc57514e9529994a253ed2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ftplib.FTP&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; class supports the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, e.g.:</source>
          <target state="translated">&lt;a href=&quot;#ftplib.FTP&quot;&gt; &lt;code&gt;FTP&lt;/code&gt; の&lt;/a&gt;クラスはサポートし&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;声明、例えば：</target>
        </trans-unit>
        <trans-unit id="cfa181fb78bf9ba81555b448529484ffdd34a22c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#functools.partial&quot;&gt;&lt;code&gt;partial()&lt;/code&gt;&lt;/a&gt; is used for partial function application which &amp;ldquo;freezes&amp;rdquo; some portion of a function&amp;rsquo;s arguments and/or keywords resulting in a new object with a simplified signature. For example, &lt;a href=&quot;#functools.partial&quot;&gt;&lt;code&gt;partial()&lt;/code&gt;&lt;/a&gt; can be used to create a callable that behaves like the &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int()&lt;/code&gt;&lt;/a&gt; function where the &lt;em&gt;base&lt;/em&gt; argument defaults to two:</source>
          <target state="translated">&lt;a href=&quot;#functools.partial&quot;&gt; &lt;code&gt;partial()&lt;/code&gt; &lt;/a&gt;関数の引数および/または簡略化署名と新しいオブジェクトが得られるキーワードの一部を「凍結」部分関数のアプリケーションのために使用されます。たとえば、&lt;a href=&quot;#functools.partial&quot;&gt; &lt;code&gt;partial()&lt;/code&gt; &lt;/a&gt;を使用すると、&lt;em&gt;基本&lt;/em&gt;引数のデフォルトが2 である&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int()&lt;/code&gt; &lt;/a&gt;関数のように動作する呼び出し可能オブジェクトを作成できます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b92768c0557e915145268b557943da321bb07ba9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#gettext.GNUTranslations&quot;&gt;&lt;code&gt;GNUTranslations&lt;/code&gt;&lt;/a&gt; class</source>
          <target state="translated">&lt;a href=&quot;#gettext.GNUTranslations&quot;&gt; &lt;code&gt;GNUTranslations&lt;/code&gt; &lt;/a&gt;クラス</target>
        </trans-unit>
        <trans-unit id="0e65da98e6eb2e07ea2a424434d84f7b1e5135c3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#gettext.NullTranslations&quot;&gt;&lt;code&gt;NullTranslations&lt;/code&gt;&lt;/a&gt; class</source>
          <target state="translated">&lt;a href=&quot;#gettext.NullTranslations&quot;&gt; &lt;code&gt;NullTranslations&lt;/code&gt; &lt;/a&gt;クラス</target>
        </trans-unit>
        <trans-unit id="de0c6d582e790dcb21659a701d2610820617b77d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#html.parser.HTMLParser&quot;&gt;&lt;code&gt;HTMLParser&lt;/code&gt;&lt;/a&gt; class uses the SGML syntactic rules for processing instructions. An XHTML processing instruction using the trailing &lt;code&gt;'?'&lt;/code&gt; will cause the &lt;code&gt;'?'&lt;/code&gt; to be included in &lt;em&gt;data&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#html.parser.HTMLParser&quot;&gt; &lt;code&gt;HTMLParser&lt;/code&gt; の&lt;/a&gt;クラスは、命令を処理するためのSGML構文規則を使用しています。末尾の &lt;code&gt;'?'&lt;/code&gt; を使用したXHTML処理命令 原因となります &lt;code&gt;'?'&lt;/code&gt; &lt;em&gt;データ&lt;/em&gt;に含まれる。</target>
        </trans-unit>
        <trans-unit id="1eb39bcce74f6e84c6360ac4ce120085f00979c3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; class also defines the following method:</source>
          <target state="translated">&lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;/a&gt;クラスは、次のメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="ff5b055fb2cf07cb0cc7bbc35321af963ac5bcb5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; class stores HTTP cookies. It extracts cookies from HTTP requests, and returns them in HTTP responses. &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; instances automatically expire contained cookies when necessary. Subclasses are also responsible for storing and retrieving cookies from a file or database.</source>
          <target state="translated">&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;CookieJar&lt;/code&gt; の&lt;/a&gt;クラスは、HTTPクッキーを格納します。HTTPリクエストからCookieを抽出し、HTTPレスポンスで返します。&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;CookieJar&lt;/code&gt; &lt;/a&gt;インスタンスは、必要に応じて、含まれているCookieを自動的に期限切れにします。サブクラスは、ファイルまたはデータベースからのCookieの保存と取得も行います。</target>
        </trans-unit>
        <trans-unit id="d62327d1da1bdae98350ead4c676a194b62121b2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; will look for allowable &lt;em&gt;Set-Cookie&lt;/em&gt; and &lt;em&gt;Set-Cookie2&lt;/em&gt; headers in the &lt;em&gt;response&lt;/em&gt; argument, and store cookies as appropriate (subject to the &lt;a href=&quot;#http.cookiejar.CookiePolicy.set_ok&quot;&gt;&lt;code&gt;CookiePolicy.set_ok()&lt;/code&gt;&lt;/a&gt; method&amp;rsquo;s approval).</source>
          <target state="translated">&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;CookieJar&lt;/code&gt; は&lt;/a&gt;許容を探します&lt;em&gt;のSet-Cookie&lt;/em&gt;と&lt;em&gt;セットCookie2&lt;/em&gt;におけるヘッダ&lt;em&gt;の応答&lt;/em&gt;適切な（対象としての引数、および店舗クッキー&lt;a href=&quot;#http.cookiejar.CookiePolicy.set_ok&quot;&gt; &lt;code&gt;CookiePolicy.set_ok()&lt;/code&gt; &lt;/a&gt;メソッドの承認）。</target>
        </trans-unit>
        <trans-unit id="892509a53a5d6f89a661272b12ef7f4fbe726d49" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#http.server.CGIHTTPRequestHandler&quot;&gt;&lt;code&gt;CGIHTTPRequestHandler&lt;/code&gt;&lt;/a&gt; defines the following data member:</source>
          <target state="translated">&lt;a href=&quot;#http.server.CGIHTTPRequestHandler&quot;&gt; &lt;code&gt;CGIHTTPRequestHandler&lt;/code&gt; では&lt;/a&gt;以下のデータメンバを定義します：</target>
        </trans-unit>
        <trans-unit id="4f3ec92b59878117b7fe2c93d4c2a548bc59f10f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#http.server.CGIHTTPRequestHandler&quot;&gt;&lt;code&gt;CGIHTTPRequestHandler&lt;/code&gt;&lt;/a&gt; defines the following method:</source>
          <target state="translated">&lt;a href=&quot;#http.server.CGIHTTPRequestHandler&quot;&gt; &lt;code&gt;CGIHTTPRequestHandler&lt;/code&gt; では&lt;/a&gt;、以下のメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="3063dd9d9ba74b5988d1c7ce6e176579f1298f7a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#http.server.HTTPServer&quot;&gt;&lt;code&gt;HTTPServer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.server.ThreadingHTTPServer&quot;&gt;&lt;code&gt;ThreadingHTTPServer&lt;/code&gt;&lt;/a&gt; must be given a &lt;em&gt;RequestHandlerClass&lt;/em&gt; on instantiation, of which this module provides three different variants:</source>
          <target state="translated">&lt;a href=&quot;#http.server.HTTPServer&quot;&gt; &lt;code&gt;HTTPServer&lt;/code&gt; の&lt;/a&gt;と&lt;a href=&quot;#http.server.ThreadingHTTPServer&quot;&gt; &lt;code&gt;ThreadingHTTPServer&lt;/code&gt; を&lt;/a&gt;与えなければならない&lt;em&gt;RequestHandlerClassを&lt;/em&gt;このモジュールは、3つの異なる変異体を提供するそのうち、インスタンス化に：</target>
        </trans-unit>
        <trans-unit id="c3b07c0d36cb7b2328e4e39fd85c0c91ce6e34c2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#http.server.SimpleHTTPRequestHandler&quot;&gt;&lt;code&gt;SimpleHTTPRequestHandler&lt;/code&gt;&lt;/a&gt; class can be used in the following manner in order to create a very basic webserver serving files relative to the current directory:</source>
          <target state="translated">&lt;a href=&quot;#http.server.SimpleHTTPRequestHandler&quot;&gt; &lt;code&gt;SimpleHTTPRequestHandler&lt;/code&gt; の&lt;/a&gt;クラスは、現在のディレクトリからの相対ファイルを提供する、非常に基本的なWebサーバを作成するために、次のように使用することができます。</target>
        </trans-unit>
        <trans-unit id="37b85c9f85de1e416b802425612ceacd7d1c6971" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#http.server.SimpleHTTPRequestHandler&quot;&gt;&lt;code&gt;SimpleHTTPRequestHandler&lt;/code&gt;&lt;/a&gt; class defines the following methods:</source>
          <target state="translated">&lt;a href=&quot;#http.server.SimpleHTTPRequestHandler&quot;&gt; &lt;code&gt;SimpleHTTPRequestHandler&lt;/code&gt; の&lt;/a&gt;クラスには、次のメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="852b43c2316c324fc522d7ff1a68a1885ce96c04" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt; class supports the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. When used like this, the IMAP4 &lt;code&gt;LOGOUT&lt;/code&gt; command is issued automatically when the &lt;code&gt;with&lt;/code&gt; statement exits. E.g.:</source>
          <target state="translated">&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; の&lt;/a&gt;クラスはサポートし&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;声明。このように使用する &lt;code&gt;with&lt;/code&gt; 、withステートメントが終了すると、IMAP4 &lt;code&gt;LOGOUT&lt;/code&gt; コマンドが自動的に発行されます。例えば：</target>
        </trans-unit>
        <trans-unit id="b9b70bff057b7a70a8bd99ea96ead45a3220331b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#importlib.import_module&quot;&gt;&lt;code&gt;import_module()&lt;/code&gt;&lt;/a&gt; function acts as a simplifying wrapper around &lt;a href=&quot;#importlib.__import__&quot;&gt;&lt;code&gt;importlib.__import__()&lt;/code&gt;&lt;/a&gt;. This means all semantics of the function are derived from &lt;a href=&quot;#importlib.__import__&quot;&gt;&lt;code&gt;importlib.__import__()&lt;/code&gt;&lt;/a&gt;. The most important difference between these two functions is that &lt;a href=&quot;#importlib.import_module&quot;&gt;&lt;code&gt;import_module()&lt;/code&gt;&lt;/a&gt; returns the specified package or module (e.g. &lt;code&gt;pkg.mod&lt;/code&gt;), while &lt;a href=&quot;functions#__import__&quot;&gt;&lt;code&gt;__import__()&lt;/code&gt;&lt;/a&gt; returns the top-level package or module (e.g. &lt;code&gt;pkg&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;#importlib.import_module&quot;&gt; &lt;code&gt;import_module()&lt;/code&gt; &lt;/a&gt;関数は、周りの簡素化ラッパーとして機能&lt;a href=&quot;#importlib.__import__&quot;&gt; &lt;code&gt;importlib.__import__()&lt;/code&gt; &lt;/a&gt;。つまり、関数のすべてのセマンティクスは&lt;a href=&quot;#importlib.__import__&quot;&gt; &lt;code&gt;importlib.__import__()&lt;/code&gt; &lt;/a&gt;から派生しています。これら2つの関数の最も重要な違いは、&lt;a href=&quot;#importlib.import_module&quot;&gt; &lt;code&gt;import_module()&lt;/code&gt; &lt;/a&gt;が指定されたパッケージまたはモジュール（たとえば、 &lt;code&gt;pkg.mod&lt;/code&gt; ）を&lt;a href=&quot;functions#__import__&quot;&gt; &lt;code&gt;__import__()&lt;/code&gt; &lt;/a&gt;はトップレベルのパッケージまたはモジュール（たとえば、 &lt;code&gt;pkg&lt;/code&gt; ）を返すことです。</target>
        </trans-unit>
        <trans-unit id="1bae6a97d9fde07f950ebc819fa267abcbcd2efc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#inspect.BoundArguments.args&quot;&gt;&lt;code&gt;args&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#inspect.BoundArguments.kwargs&quot;&gt;&lt;code&gt;kwargs&lt;/code&gt;&lt;/a&gt; properties can be used to invoke functions:</source>
          <target state="translated">&lt;a href=&quot;#inspect.BoundArguments.args&quot;&gt; &lt;code&gt;args&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#inspect.BoundArguments.kwargs&quot;&gt; &lt;code&gt;kwargs&lt;/code&gt; から&lt;/a&gt;プロパティが機能を呼び出すために使用することができます。</target>
        </trans-unit>
        <trans-unit id="91f42df007f7e0205554d47c412bcec7bdab5e36" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#inspect.getmembers&quot;&gt;&lt;code&gt;getmembers()&lt;/code&gt;&lt;/a&gt; function retrieves the members of an object such as a class or module. The functions whose names begin with &amp;ldquo;is&amp;rdquo; are mainly provided as convenient choices for the second argument to &lt;a href=&quot;#inspect.getmembers&quot;&gt;&lt;code&gt;getmembers()&lt;/code&gt;&lt;/a&gt;. They also help you determine when you can expect to find the following special attributes:</source>
          <target state="translated">&lt;a href=&quot;#inspect.getmembers&quot;&gt; &lt;code&gt;getmembers()&lt;/code&gt; &lt;/a&gt;関数は、クラスやモジュールなどのオブジェクトのメンバを検索します。名前が「is」で始まる関数は、主に&lt;a href=&quot;#inspect.getmembers&quot;&gt; &lt;code&gt;getmembers()&lt;/code&gt; の&lt;/a&gt; 2番目の引数の便利な選択肢として提供されています。また、次の特別な属性が見つかる時期を判断するのにも役立ちます。</target>
        </trans-unit>
        <trans-unit id="de3d811682e32c7451600320608bf74aadd88a87" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; ABC deals with buffering on a raw byte stream (&lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt;). Its subclasses, &lt;a href=&quot;#io.BufferedWriter&quot;&gt;&lt;code&gt;BufferedWriter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#io.BufferedReader&quot;&gt;&lt;code&gt;BufferedReader&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#io.BufferedRWPair&quot;&gt;&lt;code&gt;BufferedRWPair&lt;/code&gt;&lt;/a&gt; buffer streams that are readable, writable, and both readable and writable. &lt;a href=&quot;#io.BufferedRandom&quot;&gt;&lt;code&gt;BufferedRandom&lt;/code&gt;&lt;/a&gt; provides a buffered interface to random access streams. Another &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; subclass, &lt;a href=&quot;#io.BytesIO&quot;&gt;&lt;code&gt;BytesIO&lt;/code&gt;&lt;/a&gt;, is a stream of in-memory bytes.</source>
          <target state="translated">&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt; ABCは、生のバイトストリーム（上のバッファリングを扱う&lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; &lt;/a&gt;）。そのサブクラスである&lt;a href=&quot;#io.BufferedWriter&quot;&gt; &lt;code&gt;BufferedWriter&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#io.BufferedReader&quot;&gt; &lt;code&gt;BufferedReader&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#io.BufferedRWPair&quot;&gt; &lt;code&gt;BufferedRWPair&lt;/code&gt; の&lt;/a&gt;バッファーストリームは、読み取り、書き込み、および読み取りと書き込みの両方が可能です。&lt;a href=&quot;#io.BufferedRandom&quot;&gt; &lt;code&gt;BufferedRandom&lt;/code&gt; &lt;/a&gt;は、ランダムアクセスストリームへのバッファーインターフェイスを提供します。別の&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt;サブクラスである&lt;a href=&quot;#io.BytesIO&quot;&gt; &lt;code&gt;BytesIO&lt;/code&gt; &lt;/a&gt;は、メモリ内バイトのストリームです。</target>
        </trans-unit>
        <trans-unit id="a9df85f7e47c1af60b04aa0945a7c5afd4020154" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt; ABC extends &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;. It deals with the reading and writing of bytes to a stream. &lt;a href=&quot;#io.FileIO&quot;&gt;&lt;code&gt;FileIO&lt;/code&gt;&lt;/a&gt; subclasses &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt; to provide an interface to files in the machine&amp;rsquo;s file system.</source>
          <target state="translated">&lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; &lt;/a&gt; ABCは、拡張&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt;。ストリームへのバイトの読み取りと書き込みを扱います。&lt;a href=&quot;#io.FileIO&quot;&gt; &lt;code&gt;FileIO&lt;/code&gt; はRawIOBaseを&lt;/a&gt;サブクラス&lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; &lt;/a&gt;して、マシンのファイルシステム内のファイルへのインターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="41837a13305b80f8a061fb12801afa565fb495f7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#io.TextIOBase&quot;&gt;&lt;code&gt;TextIOBase&lt;/code&gt;&lt;/a&gt; ABC, another subclass of &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;, deals with streams whose bytes represent text, and handles encoding and decoding to and from strings. &lt;a href=&quot;#io.TextIOWrapper&quot;&gt;&lt;code&gt;TextIOWrapper&lt;/code&gt;&lt;/a&gt;, which extends it, is a buffered text interface to a buffered raw stream (&lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt;). Finally, &lt;a href=&quot;#io.StringIO&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt; is an in-memory stream for text.</source>
          <target state="translated">&lt;a href=&quot;#io.TextIOBase&quot;&gt; &lt;code&gt;TextIOBase&lt;/code&gt; &lt;/a&gt; ABCの他のサブクラス&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt;、バイトテキストを表し、そしてハンドルコードと文字列にから復号ストリームを扱います。それを拡張する&lt;a href=&quot;#io.TextIOWrapper&quot;&gt; &lt;code&gt;TextIOWrapper&lt;/code&gt; &lt;/a&gt;は、バッファリングされたrawストリーム（&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt;）へのバッファリングされたテキストインターフェイスです。最後に、&lt;a href=&quot;#io.StringIO&quot;&gt; &lt;code&gt;StringIO&lt;/code&gt; &lt;/a&gt;はテキストのメモリ内ストリームです。</target>
        </trans-unit>
        <trans-unit id="831877a01cc5755207975d598f2d08a6f65a34fe" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ipaddress.IPv6Address&quot;&gt;&lt;code&gt;IPv6Address&lt;/code&gt;&lt;/a&gt; objects share a lot of common attributes. Some attributes that are only meaningful for IPv6 addresses are also implemented by &lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt; objects, in order to make it easier to write code that handles both IP versions correctly. Address objects are &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;, so they can be used as keys in dictionaries.</source>
          <target state="translated">&lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt; &lt;code&gt;IPv4Address&lt;/code&gt; を&lt;/a&gt;と&lt;a href=&quot;#ipaddress.IPv6Address&quot;&gt; &lt;code&gt;IPv6Address&lt;/code&gt; &lt;/a&gt;オブジェクトが共通の属性の多くを共有しています。 IPv6アドレスに対してのみ意味を持つ一部の属性は、&lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt; &lt;code&gt;IPv4Address&lt;/code&gt; &lt;/a&gt;オブジェクトによっても実装され、両方のIPバージョンを正しく処理するコードを簡単に記述できるようにします。アドレスオブジェクトは&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;ハッシュ可能&lt;/a&gt;であるため、辞書のキーとして使用できます。</target>
        </trans-unit>
        <trans-unit id="28f41a3b3613b689885978e0b22d94e53f3f5175" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt;&lt;code&gt;IPv4Network&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ipaddress.IPv6Network&quot;&gt;&lt;code&gt;IPv6Network&lt;/code&gt;&lt;/a&gt; objects provide a mechanism for defining and inspecting IP network definitions. A network definition consists of a &lt;em&gt;mask&lt;/em&gt; and a &lt;em&gt;network address&lt;/em&gt;, and as such defines a range of IP addresses that equal the network address when masked (binary AND) with the mask. For example, a network definition with the mask &lt;code&gt;255.255.255.0&lt;/code&gt; and the network address &lt;code&gt;192.168.1.0&lt;/code&gt; consists of IP addresses in the inclusive range &lt;code&gt;192.168.1.0&lt;/code&gt; to &lt;code&gt;192.168.1.255&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt; &lt;code&gt;IPv4Network&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#ipaddress.IPv6Network&quot;&gt; &lt;code&gt;IPv6Network&lt;/code&gt; &lt;/a&gt;オブジェクトが定義し、IPネットワークの定義を検査するためのメカニズムを提供します。ネットワーク定義は、&lt;em&gt;マスク&lt;/em&gt;と&lt;em&gt;ネットワークアドレス&lt;/em&gt;で構成され、&lt;em&gt;マスク&lt;/em&gt;でマスク（バイナリAND）されたときにネットワークアドレスと等しいIPアドレスの範囲を定義します。たとえば、マスクが &lt;code&gt;255.255.255.0&lt;/code&gt; でネットワークアドレスが &lt;code&gt;192.168.1.0&lt;/code&gt; のネットワーク定義は、 &lt;code&gt;192.168.1.0&lt;/code&gt; から &lt;code&gt;192.168.1.255&lt;/code&gt; までの範囲のIPアドレスで構成されます。</target>
        </trans-unit>
        <trans-unit id="63df5b1d6dacc56e59023287b9ca3fa75d8515b8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt; built-in function is recommended for testing the type of an object, because it takes subclasses into account.</source>
          <target state="translated">&lt;a href=&quot;#isinstance&quot;&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;/a&gt;、それは考慮にサブクラスがかかるので、内蔵機能は、オブジェクトの種類をテストするために推奨されます。</target>
        </trans-unit>
        <trans-unit id="0d1c65ba78a45f962714b9319f827c7af9cc0ecc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#list.sort&quot;&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/a&gt; method is guaranteed to be stable. A sort is stable if it guarantees not to change the relative order of elements that compare equal &amp;mdash; this is helpful for sorting in multiple passes (for example, sort by department, then by salary grade).</source>
          <target state="translated">&lt;a href=&quot;#list.sort&quot;&gt; &lt;code&gt;sort()&lt;/code&gt; &lt;/a&gt;メソッドは安定していることが保証されています。等しいと比較する要素の相対的な順序を変更しないことが保証されている場合、並べ替えは安定しています。これは、複数のパスで並べ替える場合に便利です（たとえば、部門で並べ替えてから、給与の等級で並べ替えます）。</target>
        </trans-unit>
        <trans-unit id="3ce38cd7780c003a8d51cc5d4c3b9f429ba014be" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#locale.nl_langinfo&quot;&gt;&lt;code&gt;nl_langinfo()&lt;/code&gt;&lt;/a&gt; function accepts one of the following keys. Most descriptions are taken from the corresponding description in the GNU C library.</source>
          <target state="translated">&lt;a href=&quot;#locale.nl_langinfo&quot;&gt; &lt;code&gt;nl_langinfo()&lt;/code&gt; &lt;/a&gt;関数は、次のいずれかのキーを受け付けます。ほとんどの説明は、GNU Cライブラリの対応する説明から取得されます。</target>
        </trans-unit>
        <trans-unit id="88aecf840dcaa99bd5989e62825b4f2fb44f5de1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.FileHandler&quot;&gt;&lt;code&gt;FileHandler&lt;/code&gt;&lt;/a&gt; class, located in the core &lt;a href=&quot;logging#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; package, sends logging output to a disk file. It inherits the output functionality from &lt;a href=&quot;#logging.StreamHandler&quot;&gt;&lt;code&gt;StreamHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#logging.FileHandler&quot;&gt; &lt;code&gt;FileHandler&lt;/code&gt; の&lt;/a&gt;中核に位置クラス、&lt;a href=&quot;logging#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;パッケージは、ディスクファイルへのログ出力を送信します。&lt;a href=&quot;#logging.StreamHandler&quot;&gt; &lt;code&gt;StreamHandler&lt;/code&gt; &lt;/a&gt;から出力機能を継承します。</target>
        </trans-unit>
        <trans-unit id="e6cec3c7b03eb3763340d71aa19faf7e93cb3434" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.NullHandler&quot;&gt;&lt;code&gt;NullHandler&lt;/code&gt;&lt;/a&gt; class, located in the core &lt;a href=&quot;logging#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; package, does not do any formatting or output. It is essentially a &amp;lsquo;no-op&amp;rsquo; handler for use by library developers.</source>
          <target state="translated">&lt;a href=&quot;#logging.NullHandler&quot;&gt; &lt;code&gt;NullHandler&lt;/code&gt; の&lt;/a&gt;中核に位置クラス、&lt;a href=&quot;logging#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;パッケージは、任意のフォーマットや出力を行いません。これは基本的に、ライブラリ開発者が使用する「no-op」ハンドラです。</target>
        </trans-unit>
        <trans-unit id="803ef5a656c1ac2cbfa6e72511bcb741cbd82a6f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.StreamHandler&quot;&gt;&lt;code&gt;StreamHandler&lt;/code&gt;&lt;/a&gt; class, located in the core &lt;a href=&quot;logging#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; package, sends logging output to streams such as &lt;em&gt;sys.stdout&lt;/em&gt;, &lt;em&gt;sys.stderr&lt;/em&gt; or any file-like object (or, more precisely, any object which supports &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;flush()&lt;/code&gt; methods).</source>
          <target state="translated">&lt;a href=&quot;#logging.StreamHandler&quot;&gt; &lt;code&gt;StreamHandler&lt;/code&gt; はの&lt;/a&gt;コアに位置するクラス、&lt;a href=&quot;logging#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;パッケージは、のようなストリームにログ出力を送信&lt;em&gt;sys.stdoutの&lt;/em&gt;、&lt;em&gt;sys.stderrを持ち&lt;/em&gt;、または任意のファイルのようなオブジェクト（または、より正確には、サポートしている任意のオブジェクト &lt;code&gt;write()&lt;/code&gt; および &lt;code&gt;flush()&lt;/code&gt; メソッド） 。</target>
        </trans-unit>
        <trans-unit id="c461bb4215cadaffdd24f570336111d1d39b40a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.captureWarnings&quot;&gt;&lt;code&gt;captureWarnings()&lt;/code&gt;&lt;/a&gt; function can be used to integrate &lt;a href=&quot;#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; with the &lt;a href=&quot;warnings#module-warnings&quot;&gt;&lt;code&gt;warnings&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;#logging.captureWarnings&quot;&gt; &lt;code&gt;captureWarnings()&lt;/code&gt; &lt;/a&gt;関数は、統合するために使用することができ&lt;a href=&quot;#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;して&lt;a href=&quot;warnings#module-warnings&quot;&gt; &lt;code&gt;warnings&lt;/code&gt; &lt;/a&gt;モジュール。</target>
        </trans-unit>
        <trans-unit id="9fa83eb6a4e125e4b7d38fb0d0a3eb8c044cbdf6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.config.fileConfig&quot;&gt;&lt;code&gt;fileConfig()&lt;/code&gt;&lt;/a&gt; API is older than the &lt;a href=&quot;#logging.config.dictConfig&quot;&gt;&lt;code&gt;dictConfig()&lt;/code&gt;&lt;/a&gt; API and does not provide functionality to cover certain aspects of logging. For example, you cannot configure &lt;a href=&quot;logging#logging.Filter&quot;&gt;&lt;code&gt;Filter&lt;/code&gt;&lt;/a&gt; objects, which provide for filtering of messages beyond simple integer levels, using &lt;a href=&quot;#logging.config.fileConfig&quot;&gt;&lt;code&gt;fileConfig()&lt;/code&gt;&lt;/a&gt;. If you need to have instances of &lt;a href=&quot;logging#logging.Filter&quot;&gt;&lt;code&gt;Filter&lt;/code&gt;&lt;/a&gt; in your logging configuration, you will need to use &lt;a href=&quot;#logging.config.dictConfig&quot;&gt;&lt;code&gt;dictConfig()&lt;/code&gt;&lt;/a&gt;. Note that future enhancements to configuration functionality will be added to &lt;a href=&quot;#logging.config.dictConfig&quot;&gt;&lt;code&gt;dictConfig()&lt;/code&gt;&lt;/a&gt;, so it&amp;rsquo;s worth considering transitioning to this newer API when it&amp;rsquo;s convenient to do so.</source>
          <target state="translated">&lt;a href=&quot;#logging.config.fileConfig&quot;&gt; &lt;code&gt;fileConfig()&lt;/code&gt; &lt;/a&gt; APIは、より古いです&lt;a href=&quot;#logging.config.dictConfig&quot;&gt; &lt;code&gt;dictConfig()&lt;/code&gt; &lt;/a&gt; APIとログの特定の側面をカバーする機能を提供していません。たとえば、&lt;a href=&quot;#logging.config.fileConfig&quot;&gt; &lt;code&gt;fileConfig()&lt;/code&gt; &lt;/a&gt;を使用して、単純な整数レベルを超えるメッセージのフィルタリングを提供する&lt;a href=&quot;logging#logging.Filter&quot;&gt; &lt;code&gt;Filter&lt;/code&gt; &lt;/a&gt;オブジェクトを設定することはできません。ロギング構成に&lt;a href=&quot;logging#logging.Filter&quot;&gt; &lt;code&gt;Filter&lt;/code&gt; の&lt;/a&gt;インスタンスを&lt;a href=&quot;#logging.config.dictConfig&quot;&gt; &lt;code&gt;dictConfig()&lt;/code&gt; &lt;/a&gt;必要がある場合は、dictConfig（）を使用する必要があります。&lt;a href=&quot;#logging.config.dictConfig&quot;&gt; &lt;code&gt;dictConfig()&lt;/code&gt; &lt;/a&gt;には設定機能の将来の拡張機能が追加されることに注意してください。そのため、都合の良いときにこの新しいAPIへの移行を検討する価値があります。</target>
        </trans-unit>
        <trans-unit id="2e39370cbcdd3340d5e408f053307fc1a4a9b92a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.BaseRotatingHandler&quot;&gt;&lt;code&gt;BaseRotatingHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, is the base class for the rotating file handlers, &lt;a href=&quot;#logging.handlers.RotatingFileHandler&quot;&gt;&lt;code&gt;RotatingFileHandler&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#logging.handlers.TimedRotatingFileHandler&quot;&gt;&lt;code&gt;TimedRotatingFileHandler&lt;/code&gt;&lt;/a&gt;. You should not need to instantiate this class, but it has attributes and methods you may need to override.</source>
          <target state="translated">&lt;a href=&quot;#logging.handlers.BaseRotatingHandler&quot;&gt; &lt;code&gt;BaseRotatingHandler&lt;/code&gt; の&lt;/a&gt;に位置クラス、&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; での&lt;/a&gt;モジュールは、回転ファイルハンドラの基本クラスである&lt;a href=&quot;#logging.handlers.RotatingFileHandler&quot;&gt; &lt;code&gt;RotatingFileHandler&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#logging.handlers.TimedRotatingFileHandler&quot;&gt; &lt;code&gt;TimedRotatingFileHandler&lt;/code&gt; &lt;/a&gt;。このクラスをインスタンス化する必要はありませんが、オーバーライドする必要がある属性とメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="e43817c72b4003b672fbf6b9e4a775e15419ecf4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.DatagramHandler&quot;&gt;&lt;code&gt;DatagramHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, inherits from &lt;a href=&quot;#logging.handlers.SocketHandler&quot;&gt;&lt;code&gt;SocketHandler&lt;/code&gt;&lt;/a&gt; to support sending logging messages over UDP sockets.</source>
          <target state="translated">&lt;a href=&quot;#logging.handlers.DatagramHandler&quot;&gt; &lt;code&gt;DatagramHandler&lt;/code&gt; の&lt;/a&gt;中にあるクラス、&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; での&lt;/a&gt;モジュールから継承&lt;a href=&quot;#logging.handlers.SocketHandler&quot;&gt; &lt;code&gt;SocketHandler&lt;/code&gt; の&lt;/a&gt; UDPソケット上でログメッセージの送信をサポートします。</target>
        </trans-unit>
        <trans-unit id="29fa63a6ab1859f8388b9272a607d7ed41e4577d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.HTTPHandler&quot;&gt;&lt;code&gt;HTTPHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, supports sending logging messages to a Web server, using either &lt;code&gt;GET&lt;/code&gt; or &lt;code&gt;POST&lt;/code&gt; semantics.</source>
          <target state="translated">&lt;a href=&quot;#logging.handlers.HTTPHandler&quot;&gt; &lt;code&gt;HTTPHandler&lt;/code&gt; の&lt;/a&gt;に位置クラス、&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; での&lt;/a&gt;モジュール、いずれかを使用して、Webサーバーにログメッセージの送信をサポート &lt;code&gt;GET&lt;/code&gt; や &lt;code&gt;POST&lt;/code&gt; のセマンティクス。</target>
        </trans-unit>
        <trans-unit id="4b3bf4fce2fdbe09c72de4fa938200db198c6786" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.MemoryHandler&quot;&gt;&lt;code&gt;MemoryHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, supports buffering of logging records in memory, periodically flushing them to a &lt;em&gt;target&lt;/em&gt; handler. Flushing occurs whenever the buffer is full, or when an event of a certain severity or greater is seen.</source>
          <target state="translated">&lt;a href=&quot;#logging.handlers.MemoryHandler&quot;&gt; &lt;code&gt;MemoryHandler&lt;/code&gt; のの&lt;/a&gt;中にあるクラス、&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; での&lt;/a&gt;モジュール、定期的にそれらをフラッシュメモリにログレコードのバッファリングをサポート&lt;em&gt;ターゲット&lt;/em&gt;ハンドラ。フラッシュは、バッファーがいっぱいになるか、特定の重大度以上のイベントが発生したときに発生します。</target>
        </trans-unit>
        <trans-unit id="6835f5279a08ad57f0b66909d044557366fc8f85" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.NTEventLogHandler&quot;&gt;&lt;code&gt;NTEventLogHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, supports sending logging messages to a local Windows NT, Windows 2000 or Windows XP event log. Before you can use it, you need Mark Hammond&amp;rsquo;s Win32 extensions for Python installed.</source>
          <target state="translated">&lt;a href=&quot;#logging.handlers.NTEventLogHandler&quot;&gt; &lt;code&gt;NTEventLogHandler&lt;/code&gt; のの&lt;/a&gt;中にあるクラス、&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; での&lt;/a&gt;モジュールは、支持体には、ローカルのWindows NT、Windows 2000またはWindows XPイベント・ログへのロギングメッセージを送信します。使用する前に、Python用のMark HammondのWin32拡張機能をインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="7aba5b2300254e8ea0e333db3962218861ba04d1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.QueueHandler&quot;&gt;&lt;code&gt;QueueHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, supports sending logging messages to a queue, such as those implemented in the &lt;a href=&quot;queue#module-queue&quot;&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;multiprocessing#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="translated">&lt;a href=&quot;#logging.handlers.QueueHandler&quot;&gt; &lt;code&gt;QueueHandler&lt;/code&gt; の&lt;/a&gt;中にあるクラス、&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; では、&lt;/a&gt;支持体は、そのような中で実装されたものとして、キューにロギングメッセージを送信すると、モジュール&lt;a href=&quot;queue#module-queue&quot;&gt; &lt;code&gt;queue&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;multiprocessing#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;モジュール。</target>
        </trans-unit>
        <trans-unit id="e133f786a9f0bbb4574a162a4bcd28dc139d0fca" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.QueueListener&quot;&gt;&lt;code&gt;QueueListener&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, supports receiving logging messages from a queue, such as those implemented in the &lt;a href=&quot;queue#module-queue&quot;&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;multiprocessing#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; modules. The messages are received from a queue in an internal thread and passed, on the same thread, to one or more handlers for processing. While &lt;a href=&quot;#logging.handlers.QueueListener&quot;&gt;&lt;code&gt;QueueListener&lt;/code&gt;&lt;/a&gt; is not itself a handler, it is documented here because it works hand-in-hand with &lt;a href=&quot;#logging.handlers.QueueHandler&quot;&gt;&lt;code&gt;QueueHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#logging.handlers.QueueListener&quot;&gt; &lt;code&gt;QueueListener&lt;/code&gt; の&lt;/a&gt;中にあるクラス、&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; での&lt;/a&gt;モジュール、そのように実装されているような、キューからログメッセージを受信をサポートし、&lt;a href=&quot;queue#module-queue&quot;&gt; &lt;code&gt;queue&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;multiprocessing#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;モジュール。メッセージは内部スレッドのキューから受信され、同じスレッドで1つ以上のハンドラーに渡されて処理されます。一方で&lt;a href=&quot;#logging.handlers.QueueListener&quot;&gt; &lt;code&gt;QueueListener&lt;/code&gt; が&lt;/a&gt;ハンドラそのものではない、それはと手に手を動作するため、ここでは文書化されて&lt;a href=&quot;#logging.handlers.QueueHandler&quot;&gt; &lt;code&gt;QueueHandler&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bb9b0b4eb47b826b69b42a40d290b13672f8bc15" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.RotatingFileHandler&quot;&gt;&lt;code&gt;RotatingFileHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, supports rotation of disk log files.</source>
          <target state="translated">&lt;a href=&quot;#logging.handlers.RotatingFileHandler&quot;&gt; &lt;code&gt;RotatingFileHandler&lt;/code&gt; の&lt;/a&gt;中にあるクラス、&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; での&lt;/a&gt;モジュールは、支持体は、ディスクのログファイルの回転します。</target>
        </trans-unit>
        <trans-unit id="31584d463a02ed74e40b37c8319648296b019156" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.SMTPHandler&quot;&gt;&lt;code&gt;SMTPHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, supports sending logging messages to an email address via SMTP.</source>
          <target state="translated">&lt;a href=&quot;#logging.handlers.SMTPHandler&quot;&gt; &lt;code&gt;SMTPHandler&lt;/code&gt; のの&lt;/a&gt;中にあるクラス、&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; での&lt;/a&gt;モジュール、SMTP経由で電子メールアドレスにログメッセージの送信をサポート。</target>
        </trans-unit>
        <trans-unit id="d1eb30567d146d30f819a686de9415335350aa29" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.SocketHandler&quot;&gt;&lt;code&gt;SocketHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, sends logging output to a network socket. The base class uses a TCP socket.</source>
          <target state="translated">&lt;a href=&quot;#logging.handlers.SocketHandler&quot;&gt; &lt;code&gt;SocketHandler&lt;/code&gt; のの&lt;/a&gt;中にあるクラス、&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; での&lt;/a&gt;モジュールは、ネットワークソケットへのログ出力を送信します。基本クラスはTCPソケットを使用します。</target>
        </trans-unit>
        <trans-unit id="1f1725eea43751716f84846378d8032df6d964f8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.SysLogHandler&quot;&gt;&lt;code&gt;SysLogHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, supports sending logging messages to a remote or local Unix syslog.</source>
          <target state="translated">&lt;a href=&quot;#logging.handlers.SysLogHandler&quot;&gt; &lt;code&gt;SysLogHandler&lt;/code&gt; &lt;/a&gt;に位置クラス、&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; では、&lt;/a&gt;支持体は、リモートまたはローカルのUnix syslogにログメッセージを送信し、モジュール。</target>
        </trans-unit>
        <trans-unit id="e439d324bb2811d1000db769f81cd0d651b345d8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.TimedRotatingFileHandler&quot;&gt;&lt;code&gt;TimedRotatingFileHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, supports rotation of disk log files at certain timed intervals.</source>
          <target state="translated">&lt;a href=&quot;#logging.handlers.TimedRotatingFileHandler&quot;&gt; &lt;code&gt;TimedRotatingFileHandler&lt;/code&gt; の&lt;/a&gt;中にあるクラス、&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; での&lt;/a&gt;モジュールは、支持体は一定の時間間隔でディスクログファイルの回転します。</target>
        </trans-unit>
        <trans-unit id="f549bfbf465afb4f59b0d34dabfb8c319bfdecdd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.WatchedFileHandler&quot;&gt;&lt;code&gt;WatchedFileHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, is a &lt;code&gt;FileHandler&lt;/code&gt; which watches the file it is logging to. If the file changes, it is closed and reopened using the file name.</source>
          <target state="translated">&lt;a href=&quot;#logging.handlers.WatchedFileHandler&quot;&gt; &lt;code&gt;WatchedFileHandler&lt;/code&gt; の&lt;/a&gt;中にあるクラス、&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; での&lt;/a&gt;モジュールは、ある &lt;code&gt;FileHandler&lt;/code&gt; それはにログインしているファイルを監視します。ファイルが変更されると、そのファイルは閉じられ、ファイル名を使用して再度開かれます。</target>
        </trans-unit>
        <trans-unit id="bf5388a8dc4e9c74cc256017fd462ce7da0e8fb2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#mailbox.MH&quot;&gt;&lt;code&gt;MH&lt;/code&gt;&lt;/a&gt; class manipulates MH mailboxes, but it does not attempt to emulate all of &lt;strong&gt;mh&lt;/strong&gt;&amp;rsquo;s behaviors. In particular, it does not modify and is not affected by the &lt;code&gt;context&lt;/code&gt; or &lt;code&gt;.mh_profile&lt;/code&gt; files that are used by &lt;strong&gt;mh&lt;/strong&gt; to store its state and configuration.</source>
          <target state="translated">&lt;a href=&quot;#mailbox.MH&quot;&gt; &lt;code&gt;MH&lt;/code&gt; &lt;/a&gt;クラスが操作するMHのメールボックスが、それはすべてのエミュレートしようとしません&lt;strong&gt;MH&lt;/strong&gt;の行動を。特に、変更は行われず、&lt;strong&gt;mh&lt;/strong&gt;がその状態と構成を格納するために使用する &lt;code&gt;context&lt;/code&gt; または &lt;code&gt;.mh_profile&lt;/code&gt; ファイルの影響を受けません。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9dd1a3f1fdf40b9925961770165ca8a82472141" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; class defines an interface and is not intended to be instantiated. Instead, format-specific subclasses should inherit from &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; and your code should instantiate a particular subclass.</source>
          <target state="translated">&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;クラスは、インターフェイスを定義し、インスタンス化されるものではありません。代わりに、フォーマット固有のサブクラスは&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;から継承し、コードは特定のサブクラスをインスタンス化する必要があります。</target>
        </trans-unit>
        <trans-unit id="8ac3915262dc8630a67a64ad2e0ad71194086ede" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; interface is dictionary-like, with small keys corresponding to messages. Keys are issued by the &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instance with which they will be used and are only meaningful to that &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instance. A key continues to identify a message even if the corresponding message is modified, such as by replacing it with another message.</source>
          <target state="translated">&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;インターフェースは、メッセージに対応した小型のキーを使用して、辞書のようです。キーはによって発行されている&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;、彼らが使用され、それにだけ意味があるされると、インスタンス&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;インスタンス。キーは、対応するメッセージが別のメッセージに置き換えられるなどして変更された場合でも、メッセージを識別し続けます。</target>
        </trans-unit>
        <trans-unit id="a019e770f701b87042c21c3465130dceb581a0a3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#math.erf&quot;&gt;&lt;code&gt;erf()&lt;/code&gt;&lt;/a&gt; function can be used to compute traditional statistical functions such as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Normal_distribution#Cumulative_distribution_function&quot;&gt;cumulative standard normal distribution&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#math.erf&quot;&gt; &lt;code&gt;erf()&lt;/code&gt; &lt;/a&gt;関数は、次のような伝統的な統計関数を計算するために使用することができ&lt;a href=&quot;https://en.wikipedia.org/wiki/Normal_distribution#Cumulative_distribution_function&quot;&gt;、累積標準正規分布&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a71fcebbba63874049750f91dc5d654f046999b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#mimetypes.MimeTypes&quot;&gt;&lt;code&gt;MimeTypes&lt;/code&gt;&lt;/a&gt; class may be useful for applications which may want more than one MIME-type database; it provides an interface similar to the one of the &lt;a href=&quot;#module-mimetypes&quot;&gt;&lt;code&gt;mimetypes&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;#mimetypes.MimeTypes&quot;&gt; &lt;code&gt;MimeTypes&lt;/code&gt; &lt;/a&gt;クラスは、複数のMIME型データベースをすることがアプリケーションに有用である可能性があります。&lt;a href=&quot;#module-mimetypes&quot;&gt; &lt;code&gt;mimetypes&lt;/code&gt; &lt;/a&gt;モジュールの1つと同様のインターフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="32d9533a1491fb57b208e5f32f43b48d18eb2a01" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-abc&quot;&gt;&lt;code&gt;abc&lt;/code&gt;&lt;/a&gt; module also provides the following decorator:</source>
          <target state="translated">&lt;a href=&quot;#module-abc&quot;&gt; &lt;code&gt;abc&lt;/code&gt; &lt;/a&gt;モジュールは、次のデコレータを提供します。</target>
        </trans-unit>
        <trans-unit id="f1c5b0fc44115f034b4d77d538b593c9107faba0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-abc&quot;&gt;&lt;code&gt;abc&lt;/code&gt;&lt;/a&gt; module also provides the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-abc&quot;&gt; &lt;code&gt;abc&lt;/code&gt; &lt;/a&gt;モジュールは、以下の機能を提供します。</target>
        </trans-unit>
        <trans-unit id="3b06c0895f11aac3409cc1eb1c4896e4e8162e1b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-abc&quot;&gt;&lt;code&gt;abc&lt;/code&gt;&lt;/a&gt; module also supports the following legacy decorators:</source>
          <target state="translated">&lt;a href=&quot;#module-abc&quot;&gt; &lt;code&gt;abc&lt;/code&gt; &lt;/a&gt;モジュールは、次のレガシーデコレータをサポートしています。</target>
        </trans-unit>
        <trans-unit id="bd250dea88ef11132e077bccd9219f3815e5b2b0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; module improves on the standard library &lt;a href=&quot;optparse#module-optparse&quot;&gt;&lt;code&gt;optparse&lt;/code&gt;&lt;/a&gt; module in a number of ways including:</source>
          <target state="translated">&lt;a href=&quot;#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;モジュールは標準ライブラリに改善&lt;a href=&quot;optparse#module-optparse&quot;&gt; &lt;code&gt;optparse&lt;/code&gt; &lt;/a&gt;を含め、いくつかの方法でモジュール：</target>
        </trans-unit>
        <trans-unit id="c9bf50b09089d63d5a993888ab95201b7c5cbcc7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; module makes it easy to write user-friendly command-line interfaces. The program defines what arguments it requires, and &lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; will figure out how to parse those out of &lt;a href=&quot;sys#sys.argv&quot;&gt;&lt;code&gt;sys.argv&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; module also automatically generates help and usage messages and issues errors when users give the program invalid arguments.</source>
          <target state="translated">&lt;a href=&quot;#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;モジュールは、簡単にユーザーフレンドリーなコマンドライン・インタフェースを書くことができます。プログラムは必要な引数を定義し、&lt;a href=&quot;#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;sys#sys.argv&quot;&gt; &lt;code&gt;sys.argv&lt;/code&gt; &lt;/a&gt;からそれらを解析する方法を理解します。&lt;a href=&quot;#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;モジュールも自動的にヘルプと使い方のメッセージと、ユーザーがプログラムに不正な引数を与える問題のエラーを生成します。</target>
        </trans-unit>
        <trans-unit id="e6be456db1d54d4f38e4ec57fdcedb85fa8f7bff" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-ast&quot;&gt;&lt;code&gt;ast&lt;/code&gt;&lt;/a&gt; module helps Python applications to process trees of the Python abstract syntax grammar. The abstract syntax itself might change with each Python release; this module helps to find out programmatically what the current grammar looks like.</source>
          <target state="translated">&lt;a href=&quot;#module-ast&quot;&gt; &lt;code&gt;ast&lt;/code&gt; &lt;/a&gt;モジュールはPythonの抽象構文文法の木を処理するためのPythonアプリケーションに役立ちます。抽象構文自体は、Pythonのリリースごとに変わる可能性があります。このモジュールは、現在の文法がどのように見えるかをプログラムで見つけるのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="e7d3a14950a2b21d8385b845f3a521bc85e901c3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-atexit&quot;&gt;&lt;code&gt;atexit&lt;/code&gt;&lt;/a&gt; module defines functions to register and unregister cleanup functions. Functions thus registered are automatically executed upon normal interpreter termination. &lt;a href=&quot;#module-atexit&quot;&gt;&lt;code&gt;atexit&lt;/code&gt;&lt;/a&gt; runs these functions in the &lt;em&gt;reverse&lt;/em&gt; order in which they were registered; if you register &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, and &lt;code&gt;C&lt;/code&gt;, at interpreter termination time they will be run in the order &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-atexit&quot;&gt; &lt;code&gt;atexit&lt;/code&gt; を&lt;/a&gt;登録するモジュールの定義機能及び登録解除のクリーンアップ機能。このように登録された関数は、通常のインタープリター終了時に自動的に実行されます。&lt;a href=&quot;#module-atexit&quot;&gt; &lt;code&gt;atexit&lt;/code&gt; &lt;/a&gt;はこれらの関数を、登録された順序とは&lt;em&gt;逆の&lt;/em&gt;順序で実行します。 &lt;code&gt;A&lt;/code&gt; 、 &lt;code&gt;B&lt;/code&gt; 、 &lt;code&gt;C&lt;/code&gt; を登録すると、インタープリター終了時に &lt;code&gt;C&lt;/code&gt; 、 &lt;code&gt;B&lt;/code&gt; 、 &lt;code&gt;A&lt;/code&gt; の順序で実行されます。</target>
        </trans-unit>
        <trans-unit id="09461f2a572ad5dc979c6c886dcbebdcbfc33f45" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-audioop&quot;&gt;&lt;code&gt;audioop&lt;/code&gt;&lt;/a&gt; module contains some useful operations on sound fragments. It operates on sound fragments consisting of signed integer samples 8, 16, 24 or 32 bits wide, stored in &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt;. All scalar items are integers, unless specified otherwise.</source>
          <target state="translated">&lt;a href=&quot;#module-audioop&quot;&gt; &lt;code&gt;audioop&lt;/code&gt; の&lt;/a&gt;モジュールは、音の断片にいくつかの便利な操作が含まれています。これは、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクトに&lt;/a&gt;格納された、8、16、24、または32ビット幅の符号付き整数サンプルで構成されるサウンドフラグメントで動作します。特に指定がない限り、すべてのスカラー項目は整数です。</target>
        </trans-unit>
        <trans-unit id="ae09b3a58592c0882f475dd1d36f713be9722d6f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-bdb&quot;&gt;&lt;code&gt;bdb&lt;/code&gt;&lt;/a&gt; module also defines two classes:</source>
          <target state="translated">&lt;a href=&quot;#module-bdb&quot;&gt; &lt;code&gt;bdb&lt;/code&gt; &lt;/a&gt;モジュールはまた、2つのクラスを定義しています。</target>
        </trans-unit>
        <trans-unit id="232248945d1a22c3cb9a5862e8d9ecc59ec9c738" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-bdb&quot;&gt;&lt;code&gt;bdb&lt;/code&gt;&lt;/a&gt; module handles basic debugger functions, like setting breakpoints or managing execution via the debugger.</source>
          <target state="translated">&lt;a href=&quot;#module-bdb&quot;&gt; &lt;code&gt;bdb&lt;/code&gt; &lt;/a&gt;モジュールは、デバッガを経由して実行をブレークポイントの設定や管理などの基本的なデバッガ機能を処理します。</target>
        </trans-unit>
        <trans-unit id="aa0e9cda8b76dcc67511667751aec4df606567e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-binascii&quot;&gt;&lt;code&gt;binascii&lt;/code&gt;&lt;/a&gt; module contains a number of methods to convert between binary and various ASCII-encoded binary representations. Normally, you will not use these functions directly but use wrapper modules like &lt;a href=&quot;uu#module-uu&quot;&gt;&lt;code&gt;uu&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;base64#module-base64&quot;&gt;&lt;code&gt;base64&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;binhex#module-binhex&quot;&gt;&lt;code&gt;binhex&lt;/code&gt;&lt;/a&gt; instead. The &lt;a href=&quot;#module-binascii&quot;&gt;&lt;code&gt;binascii&lt;/code&gt;&lt;/a&gt; module contains low-level functions written in C for greater speed that are used by the higher-level modules.</source>
          <target state="translated">&lt;a href=&quot;#module-binascii&quot;&gt; &lt;code&gt;binascii&lt;/code&gt; &lt;/a&gt;モジュールは、バイナリと各種ASCII符号化されたバイナリ表現との間で変換する多くの方法を含んでいます。通常、これらの関数を直接使用するのではなく、代わりに&lt;a href=&quot;uu#module-uu&quot;&gt; &lt;code&gt;uu&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;base64#module-base64&quot;&gt; &lt;code&gt;base64&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;binhex#module-binhex&quot;&gt; &lt;code&gt;binhex&lt;/code&gt; &lt;/a&gt;などのラッパーモジュールを使用します。&lt;a href=&quot;#module-binascii&quot;&gt; &lt;code&gt;binascii&lt;/code&gt; &lt;/a&gt;モジュールは、高レベルのモジュールによって使用される、高速なCで書かれた低レベルの機能を含んでいます。</target>
        </trans-unit>
        <trans-unit id="230ed6c84e26b9f25251e99e324667c60febba51" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-binascii&quot;&gt;&lt;code&gt;binascii&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-binascii&quot;&gt; &lt;code&gt;binascii&lt;/code&gt; &lt;/a&gt;モジュールは以下の関数を定義します：</target>
        </trans-unit>
        <trans-unit id="81c720d6186a47a903320723cae98c9bd445747c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-binhex&quot;&gt;&lt;code&gt;binhex&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-binhex&quot;&gt; &lt;code&gt;binhex&lt;/code&gt; &lt;/a&gt;モジュールは以下の関数を定義します：</target>
        </trans-unit>
        <trans-unit id="5c9e61b02ca1fa682864673e83749c144e0030fc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-bisect&quot;&gt;&lt;code&gt;bisect()&lt;/code&gt;&lt;/a&gt; function can be useful for numeric table lookups. This example uses &lt;a href=&quot;#module-bisect&quot;&gt;&lt;code&gt;bisect()&lt;/code&gt;&lt;/a&gt; to look up a letter grade for an exam score (say) based on a set of ordered numeric breakpoints: 90 and up is an &amp;lsquo;A&amp;rsquo;, 80 to 89 is a &amp;lsquo;B&amp;rsquo;, and so on:</source>
          <target state="translated">&lt;a href=&quot;#module-bisect&quot;&gt; &lt;code&gt;bisect()&lt;/code&gt; &lt;/a&gt;関数は、数値表検索に役立ちます。この例では、&lt;a href=&quot;#module-bisect&quot;&gt; &lt;code&gt;bisect()&lt;/code&gt; &lt;/a&gt;を使用して、順序付けられた一連の数値ブレークポイントに基づいて（たとえば）一連の数値ブレークポイントに基づいて試験成績の文字の等級を検索します。</target>
        </trans-unit>
        <trans-unit id="0db4d8367c8fa65b1ca519e0fa4866a4c08477de" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-bz2&quot;&gt;&lt;code&gt;bz2&lt;/code&gt;&lt;/a&gt; module contains:</source>
          <target state="translated">&lt;a href=&quot;#module-bz2&quot;&gt; &lt;code&gt;bz2&lt;/code&gt; &lt;/a&gt;モジュールが含まれています。</target>
        </trans-unit>
        <trans-unit id="6af3dd435e3f9abff01b6a27a709fda9f3c63f1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-calendar&quot;&gt;&lt;code&gt;calendar&lt;/code&gt;&lt;/a&gt; module exports the following data attributes:</source>
          <target state="translated">&lt;a href=&quot;#module-calendar&quot;&gt; &lt;code&gt;calendar&lt;/code&gt; &lt;/a&gt;モジュールは以下のデータ属性をエクスポートします。</target>
        </trans-unit>
        <trans-unit id="17c7999cdaacdbb7fed3d7c718c840b2316c6c40" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-cgitb&quot;&gt;&lt;code&gt;cgitb&lt;/code&gt;&lt;/a&gt; module provides a special exception handler for Python scripts. (Its name is a bit misleading. It was originally designed to display extensive traceback information in HTML for CGI scripts. It was later generalized to also display this information in plain text.) After this module is activated, if an uncaught exception occurs, a detailed, formatted report will be displayed. The report includes a traceback showing excerpts of the source code for each level, as well as the values of the arguments and local variables to currently running functions, to help you debug the problem. Optionally, you can save this information to a file instead of sending it to the browser.</source>
          <target state="translated">&lt;a href=&quot;#module-cgitb&quot;&gt; &lt;code&gt;cgitb&lt;/code&gt; の&lt;/a&gt;モジュールは、Pythonスクリプトのための特別な例外ハンドラを提供します。（その名前は少し誤解を招くものです。元々はCGIスクリプトのHTMLで広範なトレースバック情報を表示するように設計されていました。後でこの情報をプレーンテキストで表示するように一般化されました。）このモジュールがアクティブ化された後、キャッチされない例外が発生した場合、詳細なフォーマット済みレポートが表示されます。レポートには、各レベルのソースコードの抜粋、および現在実行中の関数の引数とローカル変数の値を示すトレースバックが含まれており、問題のデバッグに役立ちます。オプションで、この情報をブラウザに送信する代わりにファイルに保存できます。</target>
        </trans-unit>
        <trans-unit id="55b0f4245fc0c07710dea9e772bf2789d8189b32" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-cmd&quot;&gt;&lt;code&gt;cmd&lt;/code&gt;&lt;/a&gt; module is mainly useful for building custom shells that let a user work with a program interactively.</source>
          <target state="translated">&lt;a href=&quot;#module-cmd&quot;&gt; &lt;code&gt;cmd&lt;/code&gt; &lt;/a&gt;モジュールは、対話的プログラムとユーザーの作業をさせたカスタムシェルを構築するための、主に有用です。</target>
        </trans-unit>
        <trans-unit id="96af487ef6d7e00efa4b8e683db6f6f172964429" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-codecs&quot;&gt;&lt;code&gt;codecs&lt;/code&gt;&lt;/a&gt; module defines a set of base classes which define the interfaces for working with codec objects, and can also be used as the basis for custom codec implementations.</source>
          <target state="translated">&lt;a href=&quot;#module-codecs&quot;&gt; &lt;code&gt;codecs&lt;/code&gt; &lt;/a&gt;モジュール定義コーデックオブジェクトを操作するためのインターフェースを定義する基底クラスのセット、及び、カスタムコーデック実装するための基礎として使用することができます。</target>
        </trans-unit>
        <trans-unit id="825e3ed0518170c83aded2c55be81235e549b50a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-codeop&quot;&gt;&lt;code&gt;codeop&lt;/code&gt;&lt;/a&gt; module provides a way of doing each of these things, and a way of doing them both.</source>
          <target state="translated">&lt;a href=&quot;#module-codeop&quot;&gt; &lt;code&gt;codeop&lt;/code&gt; &lt;/a&gt;モジュールは、これらの事のそれぞれを行う方法、およびそれらの両方を行うための方法を提供します。</target>
        </trans-unit>
        <trans-unit id="052d15e90591e35dab5867b81d334d6aa14b8029" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-codeop&quot;&gt;&lt;code&gt;codeop&lt;/code&gt;&lt;/a&gt; module provides utilities upon which the Python read-eval-print loop can be emulated, as is done in the &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; module. As a result, you probably don&amp;rsquo;t want to use the module directly; if you want to include such a loop in your program you probably want to use the &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; module instead.</source>
          <target state="translated">&lt;a href=&quot;#module-codeop&quot;&gt; &lt;code&gt;codeop&lt;/code&gt; &lt;/a&gt;モジュールで行われるようにPythonのread-eval-printループをエミュレートすることができる時にユーティリティを提供&lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt;モジュール。その結果、おそらくモジュールを直接使用したくないでしょう。プログラムにそのようなループを含める場合は、代わりに&lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt;モジュールを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a65fb5b258755a4579d3195a6bac80725fe5d317" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-colorsys&quot;&gt;&lt;code&gt;colorsys&lt;/code&gt;&lt;/a&gt; module defines bidirectional conversions of color values between colors expressed in the RGB (Red Green Blue) color space used in computer monitors and three other coordinate systems: YIQ, HLS (Hue Lightness Saturation) and HSV (Hue Saturation Value). Coordinates in all of these color spaces are floating point values. In the YIQ space, the Y coordinate is between 0 and 1, but the I and Q coordinates can be positive or negative. In all other spaces, the coordinates are all between 0 and 1.</source>
          <target state="translated">&lt;a href=&quot;#module-colorsys&quot;&gt; &lt;code&gt;colorsys&lt;/code&gt; &lt;/a&gt; YIQ、HLS（色相明度彩度）およびHSV（色相彩度値）：モジュールは、コンピュータのモニタで使用されるRGB（赤、緑、青）色空間で表現色と他の三つの座標系間の色値の双方向の変換を定義します。これらすべての色空間の座標は浮動小数点値です。YIQ空間では、Y座標は0から1の間ですが、I座標とQ座標は正または負にすることができます。他のすべてのスペースでは、座標はすべて0から1の間です。</target>
        </trans-unit>
        <trans-unit id="c85480a61de9b939bd0de9d56021736c13db66f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-colorsys&quot;&gt;&lt;code&gt;colorsys&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-colorsys&quot;&gt; &lt;code&gt;colorsys&lt;/code&gt; &lt;/a&gt;モジュールは以下の関数を定義します：</target>
        </trans-unit>
        <trans-unit id="885d466e93eb82c4aae2ef859e52b25a2b0cbe05" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-concurrent.futures&quot;&gt;&lt;code&gt;concurrent.futures&lt;/code&gt;&lt;/a&gt; module provides a high-level interface for asynchronously executing callables.</source>
          <target state="translated">&lt;a href=&quot;#module-concurrent.futures&quot;&gt; &lt;code&gt;concurrent.futures&lt;/code&gt; &lt;/a&gt;モジュール非同期呼び出し可能オブジェクトを実行するための高レベルのインタフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="f5839cbd7564f7728fd1d678c29d8a3505447a24" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-copyreg&quot;&gt;&lt;code&gt;copyreg&lt;/code&gt;&lt;/a&gt; module offers a way to define functions used while pickling specific objects. The &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;copy#module-copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt; modules use those functions when pickling/copying those objects. The module provides configuration information about object constructors which are not classes. Such constructors may be factory functions or class instances.</source>
          <target state="translated">&lt;a href=&quot;#module-copyreg&quot;&gt; &lt;code&gt;copyreg&lt;/code&gt; &lt;/a&gt;モジュールは、特定のオブジェクトを酸洗しながら、使用される関数を定義するための方法を提供しています。&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;copy#module-copy&quot;&gt; &lt;code&gt;copy&lt;/code&gt; &lt;/a&gt;酸洗/それらのオブジェクトをコピーする際のモジュールは、これらの機能を使用します。このモジュールは、クラスではないオブジェクトコンストラクターに関する構成情報を提供します。このようなコンストラクターは、ファクトリー関数またはクラスインスタンスです。</target>
        </trans-unit>
        <trans-unit id="721ebf8a61fd647ae84d28799df425b0d4dfbde5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-crypt&quot;&gt;&lt;code&gt;crypt&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-crypt&quot;&gt; &lt;code&gt;crypt&lt;/code&gt; &lt;/a&gt;モジュールは以下の関数を定義しています。</target>
        </trans-unit>
        <trans-unit id="1c62a1b252997090398bfb1ebd100196cab3225e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-crypt&quot;&gt;&lt;code&gt;crypt&lt;/code&gt;&lt;/a&gt; module defines the list of hashing methods (not all methods are available on all platforms):</source>
          <target state="translated">&lt;a href=&quot;#module-crypt&quot;&gt; &lt;code&gt;crypt&lt;/code&gt; &lt;/a&gt;モジュールは、ハッシュ・メソッド（すべてのメソッドは、すべてのプラットフォームで使用できるわけではありません）のリストを定義します。</target>
        </trans-unit>
        <trans-unit id="c636424130025f1e89ce7931f9bbbabaa890facc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; module defines the following classes:</source>
          <target state="translated">&lt;a href=&quot;#module-csv&quot;&gt; &lt;code&gt;csv&lt;/code&gt; ファイルの&lt;/a&gt;モジュールは以下のクラスを定義します。</target>
        </trans-unit>
        <trans-unit id="27431b45d67a6159175c47900316994fcaec91cd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; module defines the following constants:</source>
          <target state="translated">&lt;a href=&quot;#module-csv&quot;&gt; &lt;code&gt;csv&lt;/code&gt; ファイルの&lt;/a&gt;モジュールは、以下の定数が定義されています。</target>
        </trans-unit>
        <trans-unit id="2a8046905055a0a0b6a1413246dbf6c34224b1ef" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; module defines the following exception:</source>
          <target state="translated">&lt;a href=&quot;#module-csv&quot;&gt; &lt;code&gt;csv&lt;/code&gt; ファイルの&lt;/a&gt;モジュールは以下の例外を定義しています。</target>
        </trans-unit>
        <trans-unit id="df713f7e9acfda4fb51e36976ba8818bb68c3d50" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-csv&quot;&gt; &lt;code&gt;csv&lt;/code&gt; &lt;/a&gt;モジュールは以下の関数を定義しています。</target>
        </trans-unit>
        <trans-unit id="ed7b40e10e0b99a98d872d4f9807b33889674efd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; module implements classes to read and write tabular data in CSV format. It allows programmers to say, &amp;ldquo;write this data in the format preferred by Excel,&amp;rdquo; or &amp;ldquo;read data from this file which was generated by Excel,&amp;rdquo; without knowing the precise details of the CSV format used by Excel. Programmers can also describe the CSV formats understood by other applications or define their own special-purpose CSV formats.</source>
          <target state="translated">&lt;a href=&quot;#module-csv&quot;&gt; &lt;code&gt;csv&lt;/code&gt; &lt;/a&gt; CSV形式の表形式のデータを読み書きするモジュールの実装クラス。プログラマーは、Excelで使用されているCSV形式の詳細を知らなくても、「このデータをExcelで優先される形式で書き込む」または「Excelで生成されたこのファイルからデータを読み取る」と言うことができます。プログラマーは、他のアプリケーションが理解できるCSV形式を記述したり、独自の専用CSV形式を定義したりすることもできます。</target>
        </trans-unit>
        <trans-unit id="dfd8e3c2e8154ec4a3cd8f80fa7b3c3c209a2772" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; module&amp;rsquo;s &lt;a href=&quot;#csv.reader&quot;&gt;&lt;code&gt;reader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#csv.writer&quot;&gt;&lt;code&gt;writer&lt;/code&gt;&lt;/a&gt; objects read and write sequences. Programmers can also read and write data in dictionary form using the &lt;a href=&quot;#csv.DictReader&quot;&gt;&lt;code&gt;DictReader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#csv.DictWriter&quot;&gt;&lt;code&gt;DictWriter&lt;/code&gt;&lt;/a&gt; classes.</source>
          <target state="translated">&lt;a href=&quot;#module-csv&quot;&gt; &lt;code&gt;csv&lt;/code&gt; &lt;/a&gt;モジュールの&lt;a href=&quot;#csv.reader&quot;&gt; &lt;code&gt;reader&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#csv.writer&quot;&gt; &lt;code&gt;writer&lt;/code&gt; &lt;/a&gt;オブジェクトは読み取りと書き込みのシーケンス。プログラマはまた、使用して辞書形式のデータを読み書きすることができ&lt;a href=&quot;#csv.DictReader&quot;&gt; &lt;code&gt;DictReader&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#csv.DictWriter&quot;&gt; &lt;code&gt;DictWriter&lt;/code&gt; &lt;/a&gt;クラスを。</target>
        </trans-unit>
        <trans-unit id="7625b256eb64d8fea01867d67ac0134999467f64" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-curses&quot;&gt;&lt;code&gt;curses&lt;/code&gt;&lt;/a&gt; module defines the following data members:</source>
          <target state="translated">&lt;a href=&quot;#module-curses&quot;&gt; &lt;code&gt;curses&lt;/code&gt; &lt;/a&gt;のモジュールは、以下のデータメンバを定義します。</target>
        </trans-unit>
        <trans-unit id="530db11d214428f7bb16efb76c2183ef8978387d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-curses&quot;&gt;&lt;code&gt;curses&lt;/code&gt;&lt;/a&gt; module provides an interface to the curses library, the de-facto standard for portable advanced terminal handling.</source>
          <target state="translated">&lt;a href=&quot;#module-curses&quot;&gt; &lt;code&gt;curses&lt;/code&gt; &lt;/a&gt;モジュールcursesライブラリ、携帯高度端末処理のためのデファクトスタンダードへのインタフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="b5e85f84c3cb5ea987216b39f8fde862c3b03857" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-curses.ascii&quot;&gt;&lt;code&gt;curses.ascii&lt;/code&gt;&lt;/a&gt; module supplies name constants for ASCII characters and functions to test membership in various ASCII character classes. The constants supplied are names for control characters as follows:</source>
          <target state="translated">&lt;a href=&quot;#module-curses.ascii&quot;&gt; &lt;code&gt;curses.ascii&lt;/code&gt; &lt;/a&gt;モジュールは、さまざまなASCII文字クラスのテストの会員にASCII文字や機能の名前の定数を提供します。提供される定数は、次のような制御文字の名前です。</target>
        </trans-unit>
        <trans-unit id="0ef5dd676e2a85889cd2acbb8c2771ade941730d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-curses.textpad&quot;&gt;&lt;code&gt;curses.textpad&lt;/code&gt;&lt;/a&gt; module provides a &lt;a href=&quot;#curses.textpad.Textbox&quot;&gt;&lt;code&gt;Textbox&lt;/code&gt;&lt;/a&gt; class that handles elementary text editing in a curses window, supporting a set of keybindings resembling those of Emacs (thus, also of Netscape Navigator, BBedit 6.x, FrameMaker, and many other programs). The module also provides a rectangle-drawing function useful for framing text boxes or for other purposes.</source>
          <target state="translated">&lt;a href=&quot;#module-curses.textpad&quot;&gt; &lt;code&gt;curses.textpad&lt;/code&gt; の&lt;/a&gt;モジュールが提供する&lt;a href=&quot;#curses.textpad.Textbox&quot;&gt; &lt;code&gt;Textbox&lt;/code&gt; &lt;/a&gt;ハンドル基本テキストは、cursesウィンドウ内の編集のEmacsのものに似たキーバインドのセットをサポートするクラスを（従って、また、ネットスケープナビゲータ、BBEditの6.xでは、FrameMakerの、および他の多くのプログラムの）。このモジュールは、テキストボックスのフレーミングやその他の目的に役立つ長方形の描画機能も提供します。</target>
        </trans-unit>
        <trans-unit id="68fa7b8d8cd84f32489bcf52cf35218335bd2861" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; module exports the following constants:</source>
          <target state="translated">&lt;a href=&quot;#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;モジュールは以下の定数をエクスポートします。</target>
        </trans-unit>
        <trans-unit id="d3d2735ee014446e28a8622acf775517ae092333" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; module has a basic &lt;a href=&quot;#datetime.timezone&quot;&gt;&lt;code&gt;timezone&lt;/code&gt;&lt;/a&gt; class (for handling arbitrary fixed offsets from UTC) and its &lt;a href=&quot;#datetime.timezone.utc&quot;&gt;&lt;code&gt;timezone.utc&lt;/code&gt;&lt;/a&gt; attribute (a UTC timezone instance).</source>
          <target state="translated">&lt;a href=&quot;#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;モジュールは、基本的な持ち&lt;a href=&quot;#datetime.timezone&quot;&gt; &lt;code&gt;timezone&lt;/code&gt; &lt;/a&gt;（UTCから任意の固定オフセットを処理するための）クラスとその&lt;a href=&quot;#datetime.timezone.utc&quot;&gt; &lt;code&gt;timezone.utc&lt;/code&gt; &lt;/a&gt;属性（UTCタイムゾーンのインスタンスを）。</target>
        </trans-unit>
        <trans-unit id="4b2f35fb3014c39c4303763cc20160296da87ef0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; module supplies classes for manipulating dates and times.</source>
          <target state="translated">&lt;a href=&quot;#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;日付と時刻を操作するためのモジュールを供給するクラス。</target>
        </trans-unit>
        <trans-unit id="224fb159bc8424f10fd5ee5ca9b0cae4008a74b3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-dbm.dumb&quot;&gt;&lt;code&gt;dbm.dumb&lt;/code&gt;&lt;/a&gt; module is intended as a last resort fallback for the &lt;a href=&quot;#module-dbm&quot;&gt;&lt;code&gt;dbm&lt;/code&gt;&lt;/a&gt; module when a more robust module is not available. The &lt;a href=&quot;#module-dbm.dumb&quot;&gt;&lt;code&gt;dbm.dumb&lt;/code&gt;&lt;/a&gt; module is not written for speed and is not nearly as heavily used as the other database modules.</source>
          <target state="translated">&lt;a href=&quot;#module-dbm.dumb&quot;&gt; &lt;code&gt;dbm.dumb&lt;/code&gt; の&lt;/a&gt;モジュールはのための最後のフォールバックとして意図され&lt;a href=&quot;#module-dbm&quot;&gt; &lt;code&gt;dbm&lt;/code&gt; &lt;/a&gt;より堅牢なモジュールが利用できない場合、モジュール。&lt;a href=&quot;#module-dbm.dumb&quot;&gt; &lt;code&gt;dbm.dumb&lt;/code&gt; の&lt;/a&gt;モジュールは、速度のために書かれていないとほぼ同じ高濃度他のデータベースモジュールとして使用されていません。</target>
        </trans-unit>
        <trans-unit id="d4aee0663c41d37a708ff1a6a8740267197fa621" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-dbm.dumb&quot;&gt;&lt;code&gt;dbm.dumb&lt;/code&gt;&lt;/a&gt; module provides a persistent dictionary-like interface which is written entirely in Python. Unlike other modules such as &lt;a href=&quot;#module-dbm.gnu&quot;&gt;&lt;code&gt;dbm.gnu&lt;/code&gt;&lt;/a&gt; no external library is required. As with other persistent mappings, the keys and values are always stored as bytes.</source>
          <target state="translated">&lt;a href=&quot;#module-dbm.dumb&quot;&gt; &lt;code&gt;dbm.dumb&lt;/code&gt; の&lt;/a&gt;モジュールは、Pythonで書かれている永続的な辞書のようなインターフェイスを提供します。&lt;a href=&quot;#module-dbm.gnu&quot;&gt; &lt;code&gt;dbm.gnu&lt;/code&gt; &lt;/a&gt;などの他のモジュールとは異なり、外部ライブラリは必要ありません。他の永続的なマッピングと同様に、キーと値は常にバイトとして格納されます。</target>
        </trans-unit>
        <trans-unit id="a81bac34c141774d30f753105eeea411b8b8b5e1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-dbm.gnu&quot;&gt;&lt;code&gt;dbm.gnu&lt;/code&gt;&lt;/a&gt; module provides an interface to the GNU DBM library. &lt;code&gt;dbm.gnu.gdbm&lt;/code&gt; objects behave like mappings (dictionaries), except that keys and values are always converted to bytes before storing. Printing a &lt;code&gt;gdbm&lt;/code&gt; object doesn&amp;rsquo;t print the keys and values, and the &lt;code&gt;items()&lt;/code&gt; and &lt;code&gt;values()&lt;/code&gt; methods are not supported.</source>
          <target state="translated">&lt;a href=&quot;#module-dbm.gnu&quot;&gt; &lt;code&gt;dbm.gnu&lt;/code&gt; の&lt;/a&gt;モジュールは、GNU DBMライブラリへのインターフェースを提供します。 &lt;code&gt;dbm.gnu.gdbm&lt;/code&gt; オブジェクトはマッピング（辞書）のように動作しますが、キーと値は常に格納前にバイトに変換される点が異なります。印刷 &lt;code&gt;gdbm&lt;/code&gt; オブジェクトはキーと値、及び印刷されない &lt;code&gt;items()&lt;/code&gt; と &lt;code&gt;values()&lt;/code&gt; メソッドがサポートされていないが。</target>
        </trans-unit>
        <trans-unit id="47e5dd53aa4406655c5446f6ca3c8f631ee6ed71" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-dbm.ndbm&quot;&gt;&lt;code&gt;dbm.ndbm&lt;/code&gt;&lt;/a&gt; module provides an interface to the Unix &amp;ldquo;(n)dbm&amp;rdquo; library. Dbm objects behave like mappings (dictionaries), except that keys and values are always stored as bytes. Printing a &lt;code&gt;dbm&lt;/code&gt; object doesn&amp;rsquo;t print the keys and values, and the &lt;code&gt;items()&lt;/code&gt; and &lt;code&gt;values()&lt;/code&gt; methods are not supported.</source>
          <target state="translated">&lt;a href=&quot;#module-dbm.ndbm&quot;&gt; &lt;code&gt;dbm.ndbm&lt;/code&gt; の&lt;/a&gt;モジュールは、Unix「（n）のDBM」ライブラリへのインターフェースを提供します。dbmオブジェクトは、キーと値が常にバイトとして格納されることを除いて、マッピング（辞書）のように動作します。印刷 &lt;code&gt;dbm&lt;/code&gt; オブジェクトはキーと値、及び印刷されない &lt;code&gt;items()&lt;/code&gt; と &lt;code&gt;values()&lt;/code&gt; メソッドがサポートされていないが。</target>
        </trans-unit>
        <trans-unit id="1d3eb110940a6d0c2a6b4dec54bf67cbb5278cf6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-decimal&quot;&gt;&lt;code&gt;decimal&lt;/code&gt;&lt;/a&gt; module makes it possible to restore the identities by expanding the precision sufficiently to avoid loss of significance:</source>
          <target state="translated">&lt;a href=&quot;#module-decimal&quot;&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;/a&gt;モジュールは、意義の回避損失に十分な精度を拡大することでアイデンティティを復元することが可能となります。</target>
        </trans-unit>
        <trans-unit id="f1c49495d316a958e59f16606cc20968ceafbde8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-decimal&quot;&gt;&lt;code&gt;decimal&lt;/code&gt;&lt;/a&gt; module provides support for fast correctly-rounded decimal floating point arithmetic. It offers several advantages over the &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; datatype:</source>
          <target state="translated">&lt;a href=&quot;#module-decimal&quot;&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;/a&gt;モジュールは、高速正しく丸め10進浮動小数点演算のためのサポートを提供します。&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;データ型に比べていくつかの利点があります。</target>
        </trans-unit>
        <trans-unit id="0b04c5fc66e11c44d867e1a7fff66f53200ae38a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-dis&quot;&gt;&lt;code&gt;dis&lt;/code&gt;&lt;/a&gt; module also defines the following analysis functions that convert the input directly to the desired output. They can be useful if only a single operation is being performed, so the intermediate analysis object isn&amp;rsquo;t useful:</source>
          <target state="translated">&lt;a href=&quot;#module-dis&quot;&gt; &lt;code&gt;dis&lt;/code&gt; &lt;/a&gt;モジュールはまた、所望の出力に直接入力を変換し、次の解析機能を規定します。これらは単一の操作のみが実行されている場合に役立つため、中間分析オブジェクトは役に立ちません。</target>
        </trans-unit>
        <trans-unit id="ccd02e4c91d4eee4a192e274ca77914c68054b5f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-dis&quot;&gt;&lt;code&gt;dis&lt;/code&gt;&lt;/a&gt; module supports the analysis of CPython &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytecode&quot;&gt;bytecode&lt;/a&gt; by disassembling it. The CPython bytecode which this module takes as an input is defined in the file &lt;code&gt;Include/opcode.h&lt;/code&gt; and used by the compiler and the interpreter.</source>
          <target state="translated">&lt;a href=&quot;#module-dis&quot;&gt; &lt;code&gt;dis&lt;/code&gt; &lt;/a&gt;モジュールは、CPythonののの分析をサポート&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytecode&quot;&gt;バイトコード&lt;/a&gt;を逆アセンブルすることによってを。このモジュールが入力として受け取るCPythonバイトコードは、ファイル &lt;code&gt;Include/opcode.h&lt;/code&gt; で定義され、コンパイラーとインタープリターによって使用されます。</target>
        </trans-unit>
        <trans-unit id="83431c34eb88b196a63f7d81ddc1e74988c77b08" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-distutils&quot;&gt;&lt;code&gt;distutils&lt;/code&gt;&lt;/a&gt; package provides support for building and installing additional modules into a Python installation. The new modules may be either 100%-pure Python, or may be extension modules written in C, or may be collections of Python packages which include modules coded in both Python and C.</source>
          <target state="translated">&lt;a href=&quot;#module-distutils&quot;&gt; &lt;code&gt;distutils&lt;/code&gt; &lt;/a&gt;パッケージは、Pythonのインストールに追加のモジュールをビルドしてインストールするためのサポートを提供します。新しいモジュールは、100％純粋なPython、Cで記述された拡張モジュール、またはPythonとCの両方でコーディングされたモジュールを含むPythonパッケージのコレクションのいずれかです。</target>
        </trans-unit>
        <trans-unit id="f19705a8fbfef4641836bb169973d67accdf5232" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; module searches for pieces of text that look like interactive Python sessions, and then executes those sessions to verify that they work exactly as shown. There are several common ways to use doctest:</source>
          <target state="translated">&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; の&lt;/a&gt;後、Pythonの対話セッションのような外観、そしてが示すように、彼らが正確に動作することを確認するために、これらのセッションを実行するテキストの断片のためのモジュールを検索します。 doctestを使用する一般的な方法はいくつかあります。</target>
        </trans-unit>
        <trans-unit id="518c528d98749aa7b88d3f6f6943b6e0c9e88226" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package is a library for managing email messages. It is specifically &lt;em&gt;not&lt;/em&gt; designed to do any sending of email messages to SMTP (&lt;a href=&quot;https://tools.ietf.org/html/rfc2821.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2821&lt;/strong&gt;&lt;/a&gt;), NNTP, or other servers; those are functions of modules such as &lt;a href=&quot;smtplib#module-smtplib&quot;&gt;&lt;code&gt;smtplib&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;nntplib#module-nntplib&quot;&gt;&lt;code&gt;nntplib&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package attempts to be as RFC-compliant as possible, supporting &lt;a href=&quot;https://tools.ietf.org/html/rfc5233.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 5233&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc6532.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 6532&lt;/strong&gt;&lt;/a&gt;, as well as such MIME-related RFCs as &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2046.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2046&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2183.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2183&lt;/strong&gt;&lt;/a&gt;, and &lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;パッケージには、電子メールメッセージを管理するためのライブラリです。これは特に、され&lt;em&gt;ていない&lt;/em&gt;任意のSMTP（に電子メールメッセージの送信を行うように設計された&lt;a href=&quot;https://tools.ietf.org/html/rfc2821.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2821&lt;/strong&gt;&lt;/a&gt;）、NNTP、または他のサーバー。これらは、&lt;a href=&quot;smtplib#module-smtplib&quot;&gt; &lt;code&gt;smtplib&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;nntplib#module-nntplib&quot;&gt; &lt;code&gt;nntplib&lt;/code&gt; &lt;/a&gt;などのモジュールの関数です。&lt;a href=&quot;#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;サポート、できるだけRFC準拠のようにパッケージの試み&lt;a href=&quot;https://tools.ietf.org/html/rfc5233.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 5233&lt;/strong&gt;&lt;/a&gt;及び&lt;a href=&quot;https://tools.ietf.org/html/rfc6532.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 6532&lt;/strong&gt;&lt;/a&gt;として、ならびにそのようなMIME関連RFCを&lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;、&lt;a href=&quot;https://tools.ietf.org/html/rfc2046.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2046&lt;/strong&gt;&lt;/a&gt;、&lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;、&lt;a href=&quot;https://tools.ietf.org/html/rfc2183.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2183&lt;/strong&gt;&lt;/a&gt;、および&lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b6d0eb3b7300956a2ceeb28372a83de449576a00" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-email.charset&quot;&gt;&lt;code&gt;email.charset&lt;/code&gt;&lt;/a&gt; module also provides the following functions for adding new entries to the global character set, alias, and codec registries:</source>
          <target state="translated">&lt;a href=&quot;#module-email.charset&quot;&gt; &lt;code&gt;email.charset&lt;/code&gt; の&lt;/a&gt;モジュールはまた、グローバルな文字セット、エイリアス、およびコーデックのレジストリに新しいエントリを追加するための以下の機能を提供します。</target>
        </trans-unit>
        <trans-unit id="276df02b8f91028e04b917f396e67af6014f067f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-email.generator&quot;&gt;&lt;code&gt;email.generator&lt;/code&gt;&lt;/a&gt; module also provides a derived class, &lt;a href=&quot;#email.generator.DecodedGenerator&quot;&gt;&lt;code&gt;DecodedGenerator&lt;/code&gt;&lt;/a&gt;, which is like the &lt;a href=&quot;#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; base class, except that non-&lt;em&gt;text&lt;/em&gt; parts are not serialized, but are instead represented in the output stream by a string derived from a template filled in with information about the part.</source>
          <target state="translated">&lt;a href=&quot;#module-email.generator&quot;&gt; &lt;code&gt;email.generator&lt;/code&gt; の&lt;/a&gt;モジュールはまた、派生クラス、提供&lt;a href=&quot;#email.generator.DecodedGenerator&quot;&gt; &lt;code&gt;DecodedGenerator&lt;/code&gt; &lt;/a&gt;ようなもので、&lt;a href=&quot;#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;その非除いて、基本クラスの&lt;em&gt;テキスト&lt;/em&gt;部分がシリアル化されるのではなく、情報とに充填された鋳型に由来する文字列で出力ストリームに示されますパーツについて。</target>
        </trans-unit>
        <trans-unit id="c5baa91c85a09658397938aaa55e254801323f0d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-email.header&quot;&gt;&lt;code&gt;email.header&lt;/code&gt;&lt;/a&gt; module also provides the following convenient functions.</source>
          <target state="translated">&lt;a href=&quot;#module-email.header&quot;&gt; &lt;code&gt;email.header&lt;/code&gt; の&lt;/a&gt;モジュールには、以下の便利な機能を提供します。</target>
        </trans-unit>
        <trans-unit id="864ae3019787fbbacc4869aa22ed280c894269df" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-ensurepip&quot;&gt;&lt;code&gt;ensurepip&lt;/code&gt;&lt;/a&gt; package provides support for bootstrapping the &lt;code&gt;pip&lt;/code&gt; installer into an existing Python installation or virtual environment. This bootstrapping approach reflects the fact that &lt;code&gt;pip&lt;/code&gt; is an independent project with its own release cycle, and the latest available stable version is bundled with maintenance and feature releases of the CPython reference interpreter.</source>
          <target state="translated">&lt;a href=&quot;#module-ensurepip&quot;&gt; &lt;code&gt;ensurepip&lt;/code&gt; の&lt;/a&gt;パッケージには、ブートストラップのサポートを提供してい &lt;code&gt;pip&lt;/code&gt; 既存のPythonのインストールや仮想環境にインストーラを。このブートストラップアプローチは、 &lt;code&gt;pip&lt;/code&gt; が独自のリリースサイクルを持つ独立したプロジェクトであり、最新の安定したバージョンがCPythonリファレンスインタープリターのメンテナンスおよび機能リリースにバンドルされているという事実を反映しています。</target>
        </trans-unit>
        <trans-unit id="2e914c64de75e03d81ec5c06af9f225333493592" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-filecmp&quot;&gt;&lt;code&gt;filecmp&lt;/code&gt;&lt;/a&gt; module defines functions to compare files and directories, with various optional time/correctness trade-offs. For comparing files, see also the &lt;a href=&quot;difflib#module-difflib&quot;&gt;&lt;code&gt;difflib&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;#module-filecmp&quot;&gt; &lt;code&gt;filecmp&lt;/code&gt; &lt;/a&gt;モジュール定義関数は、さまざまなオプションの時間/正確性のトレードオフで、ファイルやディレクトリを比較します。ファイルの比較については、&lt;a href=&quot;difflib#module-difflib&quot;&gt; &lt;code&gt;difflib&lt;/code&gt; &lt;/a&gt;モジュールも参照してください。</target>
        </trans-unit>
        <trans-unit id="afe0c20edeebc5dc92c7666ce3faa36625476e96" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-filecmp&quot;&gt;&lt;code&gt;filecmp&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-filecmp&quot;&gt; &lt;code&gt;filecmp&lt;/code&gt; &lt;/a&gt;モジュールは以下の関数を定義します：</target>
        </trans-unit>
        <trans-unit id="8baea7d5d3185343f11f955e55d58ecf627ccc7a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-fractions&quot;&gt;&lt;code&gt;fractions&lt;/code&gt;&lt;/a&gt; module provides support for rational number arithmetic.</source>
          <target state="translated">&lt;a href=&quot;#module-fractions&quot;&gt; &lt;code&gt;fractions&lt;/code&gt; &lt;/a&gt;モジュールは、有理数演算のためのサポートを提供します。</target>
        </trans-unit>
        <trans-unit id="3f749de40e7867147e0f2845567293403dfc026c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-functools&quot;&gt;&lt;code&gt;functools&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-functools&quot;&gt; &lt;code&gt;functools&lt;/code&gt; の&lt;/a&gt;モジュールは以下の関数を定義します：</target>
        </trans-unit>
        <trans-unit id="7f1fe2c5ba179e60e1f1cb7dcb0baa108c0d4357" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-functools&quot;&gt;&lt;code&gt;functools&lt;/code&gt;&lt;/a&gt; module is for higher-order functions: functions that act on or return other functions. In general, any callable object can be treated as a function for the purposes of this module.</source>
          <target state="translated">&lt;a href=&quot;#module-functools&quot;&gt; &lt;code&gt;functools&lt;/code&gt; の&lt;/a&gt;モジュールは、高階関数のためである：他の関数を返す関数に作用することをか。一般に、呼び出し可能なオブジェクトはすべて、このモジュールの目的のための関数として扱うことができます。</target>
        </trans-unit>
        <trans-unit id="97d1a2dde8c7152f96bb497e1ed989a639688463" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-gc&quot;&gt;&lt;code&gt;gc&lt;/code&gt;&lt;/a&gt; module provides the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-gc&quot;&gt; &lt;code&gt;gc&lt;/code&gt; &lt;/a&gt;モジュールは、以下の機能を提供します。</target>
        </trans-unit>
        <trans-unit id="c62bc40a4ff1e5558a365f12d75aa08d21852606" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-getopt&quot;&gt;&lt;code&gt;getopt&lt;/code&gt;&lt;/a&gt; module is a parser for command line options whose API is designed to be familiar to users of the C &lt;code&gt;getopt()&lt;/code&gt; function. Users who are unfamiliar with the C &lt;code&gt;getopt()&lt;/code&gt; function or who would like to write less code and get better help and error messages should consider using the &lt;a href=&quot;argparse#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; module instead.</source>
          <target state="translated">&lt;a href=&quot;#module-getopt&quot;&gt; &lt;code&gt;getopt&lt;/code&gt; &lt;/a&gt;モジュールは、APIのCのユーザによく知られてように設計されているコマンドラインオプションのパーサで &lt;code&gt;getopt()&lt;/code&gt; 関数。Cの &lt;code&gt;getopt()&lt;/code&gt; 関数に慣れていないユーザーや、少ないコードでより良いヘルプとエラーメッセージを取得したいユーザーは、代わりに&lt;a href=&quot;argparse#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;モジュールの使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="9c38cf20156455ac80ef263339cb001fb1613a20" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-getpass&quot;&gt;&lt;code&gt;getpass&lt;/code&gt;&lt;/a&gt; module provides two functions:</source>
          <target state="translated">&lt;a href=&quot;#module-getpass&quot;&gt; &lt;code&gt;getpass&lt;/code&gt; &lt;/a&gt;モジュールは、2つの機能を提供します。</target>
        </trans-unit>
        <trans-unit id="f3f02bcefd4d73672c7971b1989f2f09e0845192" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-gettext&quot;&gt;&lt;code&gt;gettext&lt;/code&gt;&lt;/a&gt; module defines the following API, which is very similar to the GNU &lt;strong&gt;gettext&lt;/strong&gt; API. If you use this API you will affect the translation of your entire application globally. Often this is what you want if your application is monolingual, with the choice of language dependent on the locale of your user. If you are localizing a Python module, or if your application needs to switch languages on the fly, you probably want to use the class-based API instead.</source>
          <target state="translated">&lt;a href=&quot;#module-gettext&quot;&gt; &lt;code&gt;gettext&lt;/code&gt; の&lt;/a&gt;モジュールは、GNUに非常に類似して、以下のAPI定義&lt;strong&gt;のgettext&lt;/strong&gt; APIを。このAPIを使用すると、アプリケーション全体の翻訳にグローバルに影響します。アプリケーションが単一言語であり、ユーザーのロケールに応じて言語を選択できる場合は、これが必要になることがよくあります。Pythonモジュールをローカライズする場合、またはアプリケーションで言語をその場で切り替える必要がある場合は、代わりにクラスベースのAPIを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="304703f37d6e6bee804d49ec8effba5df7d13725" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-gettext&quot;&gt;&lt;code&gt;gettext&lt;/code&gt;&lt;/a&gt; module provides internationalization (I18N) and localization (L10N) services for your Python modules and applications. It supports both the GNU &lt;strong&gt;gettext&lt;/strong&gt; message catalog API and a higher level, class-based API that may be more appropriate for Python files. The interface described below allows you to write your module and application messages in one natural language, and provide a catalog of translated messages for running under different natural languages.</source>
          <target state="translated">&lt;a href=&quot;#module-gettext&quot;&gt; &lt;code&gt;gettext&lt;/code&gt; の&lt;/a&gt;モジュールは、あなたのPythonモジュールとアプリケーションのための国際化（I18N）とローカライゼーション（L10N）サービスを提供しています。これは、GNU &lt;strong&gt;gettext&lt;/strong&gt;メッセージカタログAPIと、Pythonファイルに適している可能性がある、より高レベルのクラスベースのAPIの両方をサポートしています。以下で説明するインターフェースを使用すると、モジュールとアプリケーションメッセージを1つの自然言語で記述し、翻訳されたメッセージのカタログを提供して、さまざまな自然言語で実行できます。</target>
        </trans-unit>
        <trans-unit id="465e3272bad4a252804f16ac717e1e46b75c91a0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-gettext&quot;&gt;&lt;code&gt;gettext&lt;/code&gt;&lt;/a&gt; module provides one additional class derived from &lt;a href=&quot;#gettext.NullTranslations&quot;&gt;&lt;code&gt;NullTranslations&lt;/code&gt;&lt;/a&gt;: &lt;a href=&quot;#gettext.GNUTranslations&quot;&gt;&lt;code&gt;GNUTranslations&lt;/code&gt;&lt;/a&gt;. This class overrides &lt;code&gt;_parse()&lt;/code&gt; to enable reading GNU &lt;strong&gt;gettext&lt;/strong&gt; format &lt;code&gt;.mo&lt;/code&gt; files in both big-endian and little-endian format.</source>
          <target state="translated">&lt;a href=&quot;#module-gettext&quot;&gt; &lt;code&gt;gettext&lt;/code&gt; の&lt;/a&gt;モジュールが由来つの追加クラスを提供&lt;a href=&quot;#gettext.NullTranslations&quot;&gt; &lt;code&gt;NullTranslations&lt;/code&gt; &lt;/a&gt;：&lt;a href=&quot;#gettext.GNUTranslations&quot;&gt; &lt;code&gt;GNUTranslations&lt;/code&gt; を&lt;/a&gt;。このクラスは &lt;code&gt;_parse()&lt;/code&gt; をオーバーライドして、ビッグエンディアン形式とリトルエンディアン形式の両方でGNU &lt;strong&gt;gettext&lt;/strong&gt;形式の &lt;code&gt;.mo&lt;/code&gt; ファイルを読み取ることができるようにします。</target>
        </trans-unit>
        <trans-unit id="66eca1cb3bba0fc5c53d2a48fa4bd9ad5c7386f4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-glob&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt; module finds all the pathnames matching a specified pattern according to the rules used by the Unix shell, although results are returned in arbitrary order. No tilde expansion is done, but &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, and character ranges expressed with &lt;code&gt;[]&lt;/code&gt; will be correctly matched. This is done by using the &lt;a href=&quot;os#os.scandir&quot;&gt;&lt;code&gt;os.scandir()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fnmatch#fnmatch.fnmatch&quot;&gt;&lt;code&gt;fnmatch.fnmatch()&lt;/code&gt;&lt;/a&gt; functions in concert, and not by actually invoking a subshell. Note that unlike &lt;a href=&quot;fnmatch#fnmatch.fnmatch&quot;&gt;&lt;code&gt;fnmatch.fnmatch()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#module-glob&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt; treats filenames beginning with a dot (&lt;code&gt;.&lt;/code&gt;) as special cases. (For tilde and shell variable expansion, use &lt;a href=&quot;os.path#os.path.expanduser&quot;&gt;&lt;code&gt;os.path.expanduser()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;os.path#os.path.expandvars&quot;&gt;&lt;code&gt;os.path.expandvars()&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">&lt;a href=&quot;#module-glob&quot;&gt; &lt;code&gt;glob&lt;/code&gt; &lt;/a&gt;結果は任意の順序で返されているが、モジュールは、Unixのシェルで使用される規則に従って指定されたパターンにマッチするすべてのパス名を見つけます。チルダ展開は行われませんが、 &lt;code&gt;*&lt;/code&gt; 、 &lt;code&gt;?&lt;/code&gt; 、および &lt;code&gt;[]&lt;/code&gt; で表される文字範囲は正しく一致します。これは使用して行われ&lt;a href=&quot;os#os.scandir&quot;&gt; &lt;code&gt;os.scandir()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;fnmatch#fnmatch.fnmatch&quot;&gt; &lt;code&gt;fnmatch.fnmatch()&lt;/code&gt; &lt;/a&gt;コンサートではなく、実際にサブシェルを呼び出すことによって機能します。&lt;a href=&quot;fnmatch#fnmatch.fnmatch&quot;&gt; &lt;code&gt;fnmatch.fnmatch()&lt;/code&gt; &lt;/a&gt;とは異なり、&lt;a href=&quot;#module-glob&quot;&gt; &lt;code&gt;glob&lt;/code&gt; &lt;/a&gt;はドット（ &lt;code&gt;.&lt;/code&gt; ）で始まるファイル名を特殊なケースとして扱うことに注意してください。（チルドとシェル変数の展開については、&lt;a href=&quot;os.path#os.path.expanduser&quot;&gt; &lt;code&gt;os.path.expanduser()&lt;/code&gt; &lt;/a&gt;を使用し、&lt;a href=&quot;os.path#os.path.expandvars&quot;&gt; &lt;code&gt;os.path.expandvars()&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="ee135b0e52ba012d398c3ba5f0f48800bfbf94c3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-gzip&quot;&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/a&gt; module provides a simple command line interface to compress or decompress files.</source>
          <target state="translated">&lt;a href=&quot;#module-gzip&quot;&gt; &lt;code&gt;gzip&lt;/code&gt; &lt;/a&gt;モジュールは、圧縮や解凍ファイルへの簡単なコマンドライン・インタフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="15bd57aeec8fc138aafe0bb49a573984c38a169f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-gzip&quot;&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/a&gt; module provides the &lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; class, as well as the &lt;a href=&quot;#gzip.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#gzip.compress&quot;&gt;&lt;code&gt;compress()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#gzip.decompress&quot;&gt;&lt;code&gt;decompress()&lt;/code&gt;&lt;/a&gt; convenience functions. The &lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; class reads and writes &lt;strong&gt;gzip&lt;/strong&gt;-format files, automatically compressing or decompressing the data so that it looks like an ordinary &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-gzip&quot;&gt; &lt;code&gt;gzip&lt;/code&gt; &lt;/a&gt;モジュールは、提供&lt;a href=&quot;#gzip.GzipFile&quot;&gt; &lt;code&gt;GzipFile&lt;/code&gt; &lt;/a&gt;クラス、ならびに&lt;a href=&quot;#gzip.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#gzip.compress&quot;&gt; &lt;code&gt;compress()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#gzip.decompress&quot;&gt; &lt;code&gt;decompress()&lt;/code&gt; &lt;/a&gt;便利な機能を。&lt;a href=&quot;#gzip.GzipFile&quot;&gt; &lt;code&gt;GzipFile&lt;/code&gt; &lt;/a&gt;クラスの読み取りおよび書き込みは&lt;strong&gt;gzip圧縮&lt;/strong&gt;、それが普通のように見えるように、自動的にデータを圧縮または解凍、-formatファイルを&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c6f6b35db45c5afe68357f79f8ad46f1bea281f8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt; module defines classes for automatic handling of HTTP cookies. It is useful for accessing web sites that require small pieces of data &amp;ndash; &lt;em&gt;cookies&lt;/em&gt; &amp;ndash; to be set on the client machine by an HTTP response from a web server, and then returned to the server in later HTTP requests.</source>
          <target state="translated">&lt;a href=&quot;#module-http.cookiejar&quot;&gt; &lt;code&gt;http.cookiejar&lt;/code&gt; &lt;/a&gt; HTTPクッキーの自動処理のためのモジュールを定義するクラス。小さなデータ（&lt;em&gt;Cookie）&lt;/em&gt;を必要とするWebサイトへのアクセスに役立ちます。Cookieは、WebサーバーからのHTTP応答によってクライアントマシンに設定され、その後のHTTP要求でサーバーに返されます。</target>
        </trans-unit>
        <trans-unit id="3f3fea001927a18b85a4c09ec271e65d4287d954" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-http.cookies&quot;&gt;&lt;code&gt;http.cookies&lt;/code&gt;&lt;/a&gt; module defines classes for abstracting the concept of cookies, an HTTP state management mechanism. It supports both simple string-only cookies, and provides an abstraction for having any serializable data-type as cookie value.</source>
          <target state="translated">&lt;a href=&quot;#module-http.cookies&quot;&gt; &lt;code&gt;http.cookies&lt;/code&gt; &lt;/a&gt;クッキーの概念を抽象化するためのモジュール定義クラス、HTTP状態管理メカニズム。単純な文字列のみのCookieの両方をサポートし、シリアル化可能なデータ型をCookieの値として持つための抽象化を提供します。</target>
        </trans-unit>
        <trans-unit id="5e195dbec46f0f01af467f05e89883e34aaea795" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-imghdr&quot;&gt;&lt;code&gt;imghdr&lt;/code&gt;&lt;/a&gt; module defines the following function:</source>
          <target state="translated">&lt;a href=&quot;#module-imghdr&quot;&gt; &lt;code&gt;imghdr&lt;/code&gt; &lt;/a&gt;モジュールは次の関数を定義します：</target>
        </trans-unit>
        <trans-unit id="5051c64ebd99c3b18d020b3ccbef47324152e360" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-imghdr&quot;&gt;&lt;code&gt;imghdr&lt;/code&gt;&lt;/a&gt; module determines the type of image contained in a file or byte stream.</source>
          <target state="translated">&lt;a href=&quot;#module-imghdr&quot;&gt; &lt;code&gt;imghdr&lt;/code&gt; の&lt;/a&gt;モジュールはファイルやバイトストリームに含まれる画像の種類を判定する。</target>
        </trans-unit>
        <trans-unit id="b37e066e590ee782ac8088a20c1d0d219f14201c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-importlib.abc&quot;&gt;&lt;code&gt;importlib.abc&lt;/code&gt;&lt;/a&gt; module contains all of the core abstract base classes used by &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt;. Some subclasses of the core abstract base classes are also provided to help in implementing the core ABCs.</source>
          <target state="translated">&lt;a href=&quot;#module-importlib.abc&quot;&gt; &lt;code&gt;importlib.abc&lt;/code&gt; &lt;/a&gt;モジュールはで使用されるコア抽象基底クラスのすべてが含ま&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;。コアABCの実装を支援するために、コア抽象基本クラスのいくつかのサブクラスも提供されています。</target>
        </trans-unit>
        <trans-unit id="c66bbf31fa9b8e4bdc53ceff09f10bbba2ee186a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-inspect&quot;&gt;&lt;code&gt;inspect&lt;/code&gt;&lt;/a&gt; module also provides a basic introspection capability from the command line.</source>
          <target state="translated">&lt;a href=&quot;#module-inspect&quot;&gt; &lt;code&gt;inspect&lt;/code&gt; &lt;/a&gt;モジュールは、コマンドラインからの基本的なイントロスペクション機能を提供します。</target>
        </trans-unit>
        <trans-unit id="c4b5818a166440b1e94eba83e154dc5cd38c9e16" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-inspect&quot;&gt;&lt;code&gt;inspect&lt;/code&gt;&lt;/a&gt; module provides several useful functions to help get information about live objects such as modules, classes, methods, functions, tracebacks, frame objects, and code objects. For example, it can help you examine the contents of a class, retrieve the source code of a method, extract and format the argument list for a function, or get all the information you need to display a detailed traceback.</source>
          <target state="translated">&lt;a href=&quot;#module-inspect&quot;&gt; &lt;code&gt;inspect&lt;/code&gt; &lt;/a&gt;モジュールは、モジュール、クラス、メソッド、関数、トレースバック、フレームオブジェクト・コードオブジェクトなどのオブジェクトに関するヘルプGET情報にいくつかの有用な機能を提供します。たとえば、クラスの内容を調べたり、メソッドのソースコードを取得したり、関数の引数リストを抽出してフォーマットしたり、詳細なトレースバックを表示するために必要なすべての情報を取得したりできます。</target>
        </trans-unit>
        <trans-unit id="22eaf9c954b96777da730d55699780a014bef920" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-io&quot;&gt;&lt;code&gt;io&lt;/code&gt;&lt;/a&gt; module provides Python&amp;rsquo;s main facilities for dealing with various types of I/O. There are three main types of I/O: &lt;em&gt;text I/O&lt;/em&gt;, &lt;em&gt;binary I/O&lt;/em&gt; and &lt;em&gt;raw I/O&lt;/em&gt;. These are generic categories, and various backing stores can be used for each of them. A concrete object belonging to any of these categories is called a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. Other common terms are &lt;em&gt;stream&lt;/em&gt; and &lt;em&gt;file-like object&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-io&quot;&gt; &lt;code&gt;io&lt;/code&gt; &lt;/a&gt;モジュールは、I / Oの様々なタイプに対応するためのPythonの主な機能を提供します。&lt;em&gt;I / Oには&lt;/em&gt;、&lt;em&gt;テキストI / O&lt;/em&gt;、&lt;em&gt;バイナリI / O&lt;/em&gt;、および&lt;em&gt;ローI / Oの&lt;/em&gt; 3つの主要なタイプがあります。これらは一般的なカテゴリであり、さまざまなバッキングストアをそれぞれに使用できます。これらのカテゴリのいずれかに属する具体的なオブジェクトは、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイルオブジェクト&lt;/a&gt;と呼ばれます。その他の一般的な用語は、&lt;em&gt;ストリーム&lt;/em&gt;および&lt;em&gt;ファイルのようなオブジェクト&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="337e940454ffef6546d00cf1ac696aa914c429f9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-ipaddress&quot;&gt;&lt;code&gt;ipaddress&lt;/code&gt;&lt;/a&gt; module provides factory functions to conveniently create IP addresses, networks and interfaces:</source>
          <target state="translated">&lt;a href=&quot;#module-ipaddress&quot;&gt; &lt;code&gt;ipaddress&lt;/code&gt; &lt;/a&gt;モジュールは、便利なIPアドレス、ネットワークとのインターフェイスを作成するために、工場出荷時の機能を提供します。</target>
        </trans-unit>
        <trans-unit id="d18242ee067513d021ffb35aad13c8c4957412e1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-json&quot;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt; module always produces &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; objects, not &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; objects. Therefore, &lt;code&gt;fp.write()&lt;/code&gt; must support &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; input.</source>
          <target state="translated">&lt;a href=&quot;#module-json&quot;&gt; &lt;code&gt;json&lt;/code&gt; &lt;/a&gt;モジュールは常に生成&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; の&lt;/a&gt;ない、オブジェクトを&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;のオブジェクトを。したがって、 &lt;code&gt;fp.write()&lt;/code&gt; は&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;入力をサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="e1cd3675e58eb6cf4678aabcd494c8d6a3069bc0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-json.tool&quot;&gt;&lt;code&gt;json.tool&lt;/code&gt;&lt;/a&gt; module provides a simple command line interface to validate and pretty-print JSON objects.</source>
          <target state="translated">&lt;a href=&quot;#module-json.tool&quot;&gt; &lt;code&gt;json.tool&lt;/code&gt; の&lt;/a&gt;モジュールは、検証とJSONオブジェクトのプリティプリントへの簡単なコマンドライン・インタフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="4ee0472c78500aff4f45be9b42a534d389f95f4f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-linecache&quot;&gt;&lt;code&gt;linecache&lt;/code&gt;&lt;/a&gt; module allows one to get any line from a Python source file, while attempting to optimize internally, using a cache, the common case where many lines are read from a single file. This is used by the &lt;a href=&quot;traceback#module-traceback&quot;&gt;&lt;code&gt;traceback&lt;/code&gt;&lt;/a&gt; module to retrieve source lines for inclusion in the formatted traceback.</source>
          <target state="translated">&lt;a href=&quot;#module-linecache&quot;&gt; &lt;code&gt;linecache&lt;/code&gt; &lt;/a&gt;モジュール内部で最適化しようとしたときに、キャッシュ、多くの行が単一のファイルから読み込まれる一般的なケースを使用して、1は、Pythonのソースファイルから任意の行を取得することができます。これは、フォーマットされたトレースバックに含めるソース行を取得するために、&lt;a href=&quot;traceback#module-traceback&quot;&gt; &lt;code&gt;traceback&lt;/code&gt; &lt;/a&gt;モジュールによって使用されます。</target>
        </trans-unit>
        <trans-unit id="4388c78f3684702514a1a530e894dc30b457a76b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-linecache&quot;&gt;&lt;code&gt;linecache&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-linecache&quot;&gt; &lt;code&gt;linecache&lt;/code&gt; &lt;/a&gt;モジュールは以下の関数を定義します：</target>
        </trans-unit>
        <trans-unit id="7cc0ca9ca7858a7e663453102d705f686951b40b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-locale&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; module defines the following exception and functions:</source>
          <target state="translated">&lt;a href=&quot;#module-locale&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt;モジュールは以下の例外と関数を定義しています。</target>
        </trans-unit>
        <trans-unit id="9d17797caba78de9da6840e87cdb7c017d4979aa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-locale&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; module is implemented on top of the &lt;code&gt;_locale&lt;/code&gt; module, which in turn uses an ANSI C locale implementation if available.</source>
          <target state="translated">&lt;a href=&quot;#module-locale&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt;モジュールの上に実装されている &lt;code&gt;_locale&lt;/code&gt; 利用可能な場合今度はANSI Cロケール実装を使用するモジュール。</target>
        </trans-unit>
        <trans-unit id="985eb6bd03d0ee6cad1fe0d5905ed42ca1a9c6d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-locale&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; module opens access to the POSIX locale database and functionality. The POSIX locale mechanism allows programmers to deal with certain cultural issues in an application, without requiring the programmer to know all the specifics of each country where the software is executed.</source>
          <target state="translated">&lt;a href=&quot;#module-locale&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt;モジュールはPOSIXロケールデータベースと機能へのアクセスを提供します。POSIXロケールメカニズムを使用すると、プログラマーは、ソフトウェアが実行される各国の詳細をすべて知る必要なく、アプリケーションの特定の文化的な問題に対処できます。</target>
        </trans-unit>
        <trans-unit id="d329ac973f755c3eeaf2eb63a56cf4ee876322a5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; module is not intended to be secure against erroneous or maliciously constructed data. Never unmarshal data received from an untrusted or unauthenticated source.</source>
          <target state="translated">&lt;a href=&quot;#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt;モジュールが誤ったか、悪意を持って構築されたデータに対して安全であることを意図したものではありません。信頼できない、または認証されていないソースから受信したデータを非整列化しないでください。</target>
        </trans-unit>
        <trans-unit id="2fa1709239f31c9ef299cc4aa55815731315529f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-mimetypes&quot;&gt;&lt;code&gt;mimetypes&lt;/code&gt;&lt;/a&gt; module converts between a filename or URL and the MIME type associated with the filename extension. Conversions are provided from filename to MIME type and from MIME type to filename extension; encodings are not supported for the latter conversion.</source>
          <target state="translated">&lt;a href=&quot;#module-mimetypes&quot;&gt; &lt;code&gt;mimetypes&lt;/code&gt; &lt;/a&gt;ファイル名またはURLとファイル名拡張子に関連付けられているMIMEタイプ間の変換をモジュール。ファイル名からMIMEタイプへの変換、およびMIMEタイプからファイル名拡張子への変換が提供されます。後者の変換では、エンコーディングはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="7cec5e16f074ccd4b88c3f2c5b5ad1747c08fecf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-msilib&quot;&gt;&lt;code&gt;msilib&lt;/code&gt;&lt;/a&gt; supports the creation of Microsoft Installer (&lt;code&gt;.msi&lt;/code&gt;) files. Because these files often contain an embedded &amp;ldquo;cabinet&amp;rdquo; file (&lt;code&gt;.cab&lt;/code&gt;), it also exposes an API to create CAB files. Support for reading &lt;code&gt;.cab&lt;/code&gt; files is currently not implemented; read support for the &lt;code&gt;.msi&lt;/code&gt; database is possible.</source>
          <target state="translated">&lt;a href=&quot;#module-msilib&quot;&gt; &lt;code&gt;msilib&lt;/code&gt; モジュールは、&lt;/a&gt; Microsoftインストーラ（の作成をサポート &lt;code&gt;.msi&lt;/code&gt; ）ファイルを。これらのファイルには埋め込まれた「キャビネット」ファイル（ &lt;code&gt;.cab&lt;/code&gt; ）が含まれていることが多いため、CABファイルを作成するためのAPIも公開されています。 &lt;code&gt;.cab&lt;/code&gt; ファイルの読み取りのサポートは現在実装されていません。 &lt;code&gt;.msi&lt;/code&gt; データベースの読み取りサポートが可能です。</target>
        </trans-unit>
        <trans-unit id="1d180c1f5f80ac6b7619e22dea9da3b1d42d7b68" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; module also introduces APIs which do not have analogs in the &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module. A prime example of this is the &lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt;&lt;code&gt;Pool&lt;/code&gt;&lt;/a&gt; object which offers a convenient means of parallelizing the execution of a function across multiple input values, distributing the input data across processes (data parallelism). The following example demonstrates the common practice of defining such functions in a module so that child processes can successfully import that module. This basic example of data parallelism using &lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt;&lt;code&gt;Pool&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;モジュールはまた、中にアナログを持っていないAPIを紹介する&lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt;モジュールを。これの主な例は、複数の入力値にわたって関数の実行を並列化し、プロセス間で入力データを分散させる便利な手段を提供する&lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt; &lt;code&gt;Pool&lt;/code&gt; &lt;/a&gt;オブジェクトです（データ並列処理）。次の例は、子プロセスがそのモジュールを正常にインポートできるように、モジュールでそのような関数を定義する一般的な方法を示しています。使用したデータ並列のこの基本的な例&lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt; &lt;code&gt;Pool&lt;/code&gt; &lt;/a&gt;、</target>
        </trans-unit>
        <trans-unit id="3ce6c0ff4a425000d2ca5b18082944e870330bd9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; package mostly replicates the API of the &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;パッケージは、ほとんどのAPI複製&lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt;モジュールを。</target>
        </trans-unit>
        <trans-unit id="2e04e4b80cc93688459ebf1f22c4af2810aed5ee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-multiprocessing.dummy&quot;&gt;&lt;code&gt;multiprocessing.dummy&lt;/code&gt;&lt;/a&gt; module</source>
          <target state="translated">&lt;a href=&quot;#module-multiprocessing.dummy&quot;&gt; &lt;code&gt;multiprocessing.dummy&lt;/code&gt; &lt;/a&gt;モジュール</target>
        </trans-unit>
        <trans-unit id="2e6ccfe6b1949eb189200e600c146480d6b41838" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-multiprocessing.sharedctypes&quot;&gt;&lt;code&gt;multiprocessing.sharedctypes&lt;/code&gt;&lt;/a&gt; module</source>
          <target state="translated">&lt;a href=&quot;#module-multiprocessing.sharedctypes&quot;&gt; &lt;code&gt;multiprocessing.sharedctypes&lt;/code&gt; の&lt;/a&gt;モジュール</target>
        </trans-unit>
        <trans-unit id="54123a4d5ab46582e743e998c4d9d717ab3833e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-multiprocessing.sharedctypes&quot;&gt;&lt;code&gt;multiprocessing.sharedctypes&lt;/code&gt;&lt;/a&gt; module provides functions for allocating &lt;a href=&quot;ctypes#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; objects from shared memory which can be inherited by child processes.</source>
          <target state="translated">&lt;a href=&quot;#module-multiprocessing.sharedctypes&quot;&gt; &lt;code&gt;multiprocessing.sharedctypes&lt;/code&gt; の&lt;/a&gt;モジュールを割り当てる機能を提供する&lt;a href=&quot;ctypes#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;子プロセスに継承することができる共有メモリからオブジェクト。</target>
        </trans-unit>
        <trans-unit id="5e77d3fa14560b48c3bb530fbc3f0bf4bfc64b6d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-nis&quot;&gt;&lt;code&gt;nis&lt;/code&gt;&lt;/a&gt; module defines the following exception:</source>
          <target state="translated">&lt;a href=&quot;#module-nis&quot;&gt; &lt;code&gt;nis&lt;/code&gt; &lt;/a&gt;モジュールは以下の例外を定義しています。</target>
        </trans-unit>
        <trans-unit id="1e3761c45ab69e027f8b7edb51fe146513e4f73b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-nis&quot;&gt;&lt;code&gt;nis&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-nis&quot;&gt; &lt;code&gt;nis&lt;/code&gt; &lt;/a&gt;モジュールは以下の関数を定義します：</target>
        </trans-unit>
        <trans-unit id="71fc5dc1aea79e21eb08ca6f6a8fbaf5908823ef" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-nis&quot;&gt;&lt;code&gt;nis&lt;/code&gt;&lt;/a&gt; module gives a thin wrapper around the NIS library, useful for central administration of several hosts.</source>
          <target state="translated">&lt;a href=&quot;#module-nis&quot;&gt; &lt;code&gt;nis&lt;/code&gt; &lt;/a&gt;モジュールは、複数のホストを集中管理する上で便利なNISライブラリを薄くラップします。</target>
        </trans-unit>
        <trans-unit id="55de6a4c667171a477291b0e3c4227176341dcf7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-numbers&quot;&gt;&lt;code&gt;numbers&lt;/code&gt;&lt;/a&gt; module (&lt;a href=&quot;https://www.python.org/dev/peps/pep-3141&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt;) defines a hierarchy of numeric &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base classes&lt;/a&gt; which progressively define more operations. None of the types defined in this module can be instantiated.</source>
          <target state="translated">&lt;a href=&quot;#module-numbers&quot;&gt; &lt;code&gt;numbers&lt;/code&gt; &lt;/a&gt;モジュール（&lt;a href=&quot;https://www.python.org/dev/peps/pep-3141&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt;）数値の階層を定義する&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基底クラス&lt;/a&gt;次第に操作を定義します。このモジュールで定義されているタイプはインスタンス化できません。</target>
        </trans-unit>
        <trans-unit id="70373d538baff7f0323f18426896989846c3f044" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-operator&quot;&gt;&lt;code&gt;operator&lt;/code&gt;&lt;/a&gt; module also defines tools for generalized attribute and item lookups. These are useful for making fast field extractors as arguments for &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;itertools#itertools.groupby&quot;&gt;&lt;code&gt;itertools.groupby()&lt;/code&gt;&lt;/a&gt;, or other functions that expect a function argument.</source>
          <target state="translated">&lt;a href=&quot;#module-operator&quot;&gt; &lt;code&gt;operator&lt;/code&gt; &lt;/a&gt;モジュールはまた、一般属性やアイテムのルックアップのためのツールを定義します。これらは、&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;functions#sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;itertools#itertools.groupby&quot;&gt; &lt;code&gt;itertools.groupby()&lt;/code&gt; &lt;/a&gt;、または関数の引数を必要とするその他の関数の引数として高速フィールドエクストラクターを作成するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="a53ed99c7adf19e939eacd855f49e5b5bb689f11" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-operator&quot;&gt;&lt;code&gt;operator&lt;/code&gt;&lt;/a&gt; module exports a set of efficient functions corresponding to the intrinsic operators of Python. For example, &lt;code&gt;operator.add(x, y)&lt;/code&gt; is equivalent to the expression &lt;code&gt;x+y&lt;/code&gt;. Many function names are those used for special methods, without the double underscores. For backward compatibility, many of these have a variant with the double underscores kept. The variants without the double underscores are preferred for clarity.</source>
          <target state="translated">&lt;a href=&quot;#module-operator&quot;&gt; &lt;code&gt;operator&lt;/code&gt; &lt;/a&gt;モジュールは、Pythonの固有のオペレータに対応する効率的な機能のセットをエクスポートします。たとえば、 &lt;code&gt;operator.add(x, y)&lt;/code&gt; は、式 &lt;code&gt;x+y&lt;/code&gt; と同等です。多くの関数名は、二重下線なしで特別なメソッドに使用されるものです。下位互換性のために、これらの多くには2つの下線が保持されたバリアントがあります。明確にするために、二重下線なしのバリアントが推奨されます。</target>
        </trans-unit>
        <trans-unit id="61ce337cbedc3f2529912d2201eb2b625280d4e4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt; module defines functions for a few distinct purposes. The most important purposes are to create ST objects and to convert ST objects to other representations such as parse trees and compiled code objects, but there are also functions which serve to query the type of parse tree represented by an ST object.</source>
          <target state="translated">&lt;a href=&quot;#module-parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt;モジュールは、いくつかの異なる目的のための関数を定義しています。最も重要な目的は、STオブジェクトを作成し、STオブジェクトを解析ツリーやコンパイル済みコードオブジェクトなどの他の表現に変換することですが、STオブジェクトによって表される解析ツリーのタイプをクエリする機能もあります。</target>
        </trans-unit>
        <trans-unit id="25ef15b9c592ea1ea9713013e94dbb5918e5266e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt; module provides an interface to Python&amp;rsquo;s internal parser and byte-code compiler. The primary purpose for this interface is to allow Python code to edit the parse tree of a Python expression and create executable code from this. This is better than trying to parse and modify an arbitrary Python code fragment as a string because parsing is performed in a manner identical to the code forming the application. It is also faster.</source>
          <target state="translated">&lt;a href=&quot;#module-parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt;モジュールはPythonの内部パーサとバイトコードコンパイラへのインターフェイスを提供します。このインターフェースの主な目的は、PythonコードがPython式の解析ツリーを編集し、これから実行可能コードを作成できるようにすることです。これは、アプリケーションを形成するコードと同じ方法で解析が実行されるため、任意のPythonコードフラグメントを文字列として解析および変更するよりも優れています。また、より高速です。</target>
        </trans-unit>
        <trans-unit id="124d6c592431fa7358eb2e18c55240e683dffb5b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module defines three exceptions:</source>
          <target state="translated">&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;モジュールは、3つの例外を定義しています。</target>
        </trans-unit>
        <trans-unit id="9f814de04271749df0afff6d13e98c3c7d28fbff" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module differs from &lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; in several significant ways:</source>
          <target state="translated">&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;からのモジュールが異なる&lt;a href=&quot;marshal#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt;いくつかの重要な方法で：</target>
        </trans-unit>
        <trans-unit id="9d4c57e70369b25520cce55fa2bce230fdd44e46" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module exports three classes, &lt;a href=&quot;#pickle.Pickler&quot;&gt;&lt;code&gt;Pickler&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pickle.Unpickler&quot;&gt;&lt;code&gt;Unpickler&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pickle.PickleBuffer&quot;&gt;&lt;code&gt;PickleBuffer&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;モジュールの輸出三つのクラス、&lt;a href=&quot;#pickle.Pickler&quot;&gt; &lt;code&gt;Pickler&lt;/code&gt; さん&lt;/a&gt;、&lt;a href=&quot;#pickle.Unpickler&quot;&gt; &lt;code&gt;Unpickler&lt;/code&gt; を提供しています&lt;/a&gt;と&lt;a href=&quot;#pickle.PickleBuffer&quot;&gt; &lt;code&gt;PickleBuffer&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="43904a297de386b3b1196f81f8862c9836da9d0e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module implements binary protocols for serializing and de-serializing a Python object structure. &lt;em&gt;&amp;ldquo;Pickling&amp;rdquo;&lt;/em&gt; is the process whereby a Python object hierarchy is converted into a byte stream, and &lt;em&gt;&amp;ldquo;unpickling&amp;rdquo;&lt;/em&gt; is the inverse operation, whereby a byte stream (from a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-binary-file&quot;&gt;binary file&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;) is converted back into an object hierarchy. Pickling (and unpickling) is alternatively known as &amp;ldquo;serialization&amp;rdquo;, &amp;ldquo;marshalling,&amp;rdquo; &lt;a href=&quot;#id7&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; or &amp;ldquo;flattening&amp;rdquo;; however, to avoid confusion, the terms used here are &amp;ldquo;pickling&amp;rdquo; and &amp;ldquo;unpickling&amp;rdquo;.</source>
          <target state="translated">&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;モジュールが実装シリアライズとPythonオブジェクト構造をデシリアライズするためのバイナリプロトコル。&lt;em&gt;「ピクル」&lt;/em&gt;は、Pythonオブジェクト階層がバイトストリームに変換されるプロセスであり、&lt;em&gt;「アンピクル」&lt;/em&gt;は逆の操作です。これにより、（&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-binary-file&quot;&gt;バイナリファイル&lt;/a&gt;または&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクトからの&lt;/a&gt;）バイトストリームがオブジェクト階層に変換されます。酸洗（およびunpickle化）あるいは「直列化」として知られ、「マーシャリング、」&lt;a href=&quot;#id7&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;または「平坦化」。ただし、混乱を避けるため、ここで使用する用語は「ピクル化」と「アンピクル化」です。</target>
        </trans-unit>
        <trans-unit id="02d5b31a8a38315feca7469759e047393292369e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module keeps track of the objects it has already serialized, so that later references to the same object won&amp;rsquo;t be serialized again. &lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t do this.</source>
          <target state="translated">&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;モジュールは、同じオブジェクトが再度直列化されることはありませんのでこと、それはすでに連載しているオブジェクトを追跡します。&lt;a href=&quot;marshal#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt;はこれをしません。</target>
        </trans-unit>
        <trans-unit id="f39d6e73fb52a3aadce8298900f7e06e2e556325" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module provides the following constants:</source>
          <target state="translated">&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;モジュールは以下の定数を提供します。</target>
        </trans-unit>
        <trans-unit id="053f27ecbe7215e45dbf076ba18174c65da7243d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module provides the following functions to make the pickling process more convenient:</source>
          <target state="translated">&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;モジュールは、酸洗プロセスをより便利にするために、以下の機能を提供します。</target>
        </trans-unit>
        <trans-unit id="64eb838d62f1db80b3cbc0372ce64caf83a19886" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pipes&quot;&gt;&lt;code&gt;pipes&lt;/code&gt;&lt;/a&gt; module defines a class to abstract the concept of a &lt;em&gt;pipeline&lt;/em&gt; &amp;mdash; a sequence of converters from one file to another.</source>
          <target state="translated">&lt;a href=&quot;#module-pipes&quot;&gt; &lt;code&gt;pipes&lt;/code&gt; &lt;/a&gt;の抽象概念を定義するクラスをモジュール&lt;em&gt;パイプライン&lt;/em&gt;別のファイルから変換器の配列- 。</target>
        </trans-unit>
        <trans-unit id="a1b768d96de059405677d76a8af3854827acb627" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pipes&quot;&gt;&lt;code&gt;pipes&lt;/code&gt;&lt;/a&gt; module defines the following class:</source>
          <target state="translated">&lt;a href=&quot;#module-pipes&quot;&gt; &lt;code&gt;pipes&lt;/code&gt; &lt;/a&gt;モジュールは、以下のクラスを定義しています。</target>
        </trans-unit>
        <trans-unit id="331e2eb4f9fab99bc8e2b88d891c21f4e7af485c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-poplib&quot;&gt;&lt;code&gt;poplib&lt;/code&gt;&lt;/a&gt; module provides two classes:</source>
          <target state="translated">&lt;a href=&quot;#module-poplib&quot;&gt; &lt;code&gt;poplib&lt;/code&gt; との&lt;/a&gt;モジュールは、2つのクラスが用意されています。</target>
        </trans-unit>
        <trans-unit id="277cd96cc96661f93e3472a013fb860bbba2fc2e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pprint&quot;&gt;&lt;code&gt;pprint&lt;/code&gt;&lt;/a&gt; module also provides several shortcut functions:</source>
          <target state="translated">&lt;a href=&quot;#module-pprint&quot;&gt; &lt;code&gt;pprint&lt;/code&gt; &lt;/a&gt;モジュールはまた、いくつかのショートカット機能を提供します。</target>
        </trans-unit>
        <trans-unit id="d897764f84c5e66fbafbf3d0843fc53af9d0cf09" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pprint&quot;&gt;&lt;code&gt;pprint&lt;/code&gt;&lt;/a&gt; module defines one class:</source>
          <target state="translated">&lt;a href=&quot;#module-pprint&quot;&gt; &lt;code&gt;pprint&lt;/code&gt; &lt;/a&gt;モジュールは、1つのクラスを定義しています。</target>
        </trans-unit>
        <trans-unit id="b8e21659673c9450a31264128faaad6dc4a8112f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pprint&quot;&gt;&lt;code&gt;pprint&lt;/code&gt;&lt;/a&gt; module provides a capability to &amp;ldquo;pretty-print&amp;rdquo; arbitrary Python data structures in a form which can be used as input to the interpreter. If the formatted structures include objects which are not fundamental Python types, the representation may not be loadable. This may be the case if objects such as files, sockets or classes are included, as well as many other objects which are not representable as Python literals.</source>
          <target state="translated">&lt;a href=&quot;#module-pprint&quot;&gt; &lt;code&gt;pprint&lt;/code&gt; &lt;/a&gt;モジュールはインタプリタへの入力として使用することができる形でPythonのデータ構造任意の「プリティ・プリント」する能力を提供します。フォーマットされた構造に基本的なPythonタイプではないオブジェクトが含まれている場合、表現はロードできない可能性があります。これは、ファイル、ソケット、クラスなどのオブジェクト、およびPythonリテラルとして表現できない他の多くのオブジェクトが含まれている場合に当てはまることがあります。</target>
        </trans-unit>
        <trans-unit id="02e2c18e85aeab815f7b3884e7ac136f87ea1c89" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pstats&quot;&gt;&lt;code&gt;pstats&lt;/code&gt;&lt;/a&gt; module&amp;rsquo;s &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class has a variety of methods for manipulating and printing the data saved into a profile results file:</source>
          <target state="translated">&lt;a href=&quot;#module-pstats&quot;&gt; &lt;code&gt;pstats&lt;/code&gt; の&lt;/a&gt;モジュールの&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;クラスは、プロファイル結果のファイルに保存されたデータを操作し、印刷するための様々な方法があります。</target>
        </trans-unit>
        <trans-unit id="a09452594af9cc2998d0e20d8f6c2e8b7f7a1f37" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pty&quot;&gt;&lt;code&gt;pty&lt;/code&gt;&lt;/a&gt; module defines operations for handling the pseudo-terminal concept: starting another process and being able to write to and read from its controlling terminal programmatically.</source>
          <target state="translated">&lt;a href=&quot;#module-pty&quot;&gt; &lt;code&gt;pty&lt;/code&gt; &lt;/a&gt;擬似端末の概念を処理するためのモジュール定義操作：別のプロセスを開始し、への書き込み及びその制御端末、プログラムから読み取ることができること。</target>
        </trans-unit>
        <trans-unit id="16051c54e966e34e449d24aeb93463ad01647347" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pty&quot;&gt;&lt;code&gt;pty&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-pty&quot;&gt; &lt;code&gt;pty&lt;/code&gt; &lt;/a&gt;モジュールは以下の関数を定義します：</target>
        </trans-unit>
        <trans-unit id="9026c767b36d7a0109e5a56ec8ab97278ea8b8dd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-py_compile&quot;&gt;&lt;code&gt;py_compile&lt;/code&gt;&lt;/a&gt; module provides a function to generate a byte-code file from a source file, and another function used when the module source file is invoked as a script.</source>
          <target state="translated">&lt;a href=&quot;#module-py_compile&quot;&gt; &lt;code&gt;py_compile&lt;/code&gt; の&lt;/a&gt;モジュールは、ソースファイルからバイトコードファイルを生成する機能を提供し、モジュールソースファイルはスクリプトとして呼び出されたときに他の機能が使用しました。</target>
        </trans-unit>
        <trans-unit id="9d72069fd861edd1c3341b07a968d03ad4695e43" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pyclbr&quot;&gt;&lt;code&gt;pyclbr&lt;/code&gt;&lt;/a&gt; module provides limited information about the functions, classes, and methods defined in a Python-coded module. The information is sufficient to implement a module browser. The information is extracted from the Python source code rather than by importing the module, so this module is safe to use with untrusted code. This restriction makes it impossible to use this module with modules not implemented in Python, including all standard and optional extension modules.</source>
          <target state="translated">&lt;a href=&quot;#module-pyclbr&quot;&gt; &lt;code&gt;pyclbr&lt;/code&gt; の&lt;/a&gt;モジュールは、Pythonコード化されたモジュールで定義された関数、クラス、メソッドに関する限られた情報を提供します。この情報は、モジュールブラウザを実装するのに十分です。情報はモジュールをインポートするのではなく、Pythonソースコードから抽出されるため、このモジュールは信頼できないコードで安全に使用できます。この制限により、すべての標準およびオプションの拡張モジュールを含む、Pythonで実装されていないモジュールでこのモジュールを使用することができなくなります。</target>
        </trans-unit>
        <trans-unit id="ceef20222c51dc13351c20ead7bd6f0c6894fdf4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pydoc&quot;&gt;&lt;code&gt;pydoc&lt;/code&gt;&lt;/a&gt; module automatically generates documentation from Python modules. The documentation can be presented as pages of text on the console, served to a Web browser, or saved to HTML files.</source>
          <target state="translated">&lt;a href=&quot;#module-pydoc&quot;&gt; &lt;code&gt;pydoc&lt;/code&gt; の&lt;/a&gt;モジュールは、Pythonモジュールから自動的にドキュメントを生成します。ドキュメントは、コンソールにテキストのページとして表示したり、Webブラウザーに提供したり、HTMLファイルに保存したりできます。</target>
        </trans-unit>
        <trans-unit id="543ced21f6b4d6a8c71f947acf0e8d0247183255" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-queue&quot;&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/a&gt; module defines the following classes and exceptions:</source>
          <target state="translated">&lt;a href=&quot;#module-queue&quot;&gt; &lt;code&gt;queue&lt;/code&gt; &lt;/a&gt;モジュールは以下のクラスと例外を定義しています。</target>
        </trans-unit>
        <trans-unit id="9aa5ceed315221356796eb8e3f4afc125b41ac99" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-queue&quot;&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/a&gt; module implements multi-producer, multi-consumer queues. It is especially useful in threaded programming when information must be exchanged safely between multiple threads. The &lt;a href=&quot;#queue.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; class in this module implements all the required locking semantics.</source>
          <target state="translated">&lt;a href=&quot;#module-queue&quot;&gt; &lt;code&gt;queue&lt;/code&gt; &lt;/a&gt;モジュールを実装したマルチプロデューサー、マルチ・コンシューマ・キュー。これは、複数のスレッド間で情報を安全に交換する必要があるスレッドプログラミングで特に役立ちます。このモジュールの&lt;a href=&quot;#queue.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;クラスは、必要なすべてのロックセマンティクスを実装します。</target>
        </trans-unit>
        <trans-unit id="ce2e2f809e5adf24db412ccc37a23cf7c3690617" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-random&quot;&gt;&lt;code&gt;random&lt;/code&gt;&lt;/a&gt; module also provides the &lt;a href=&quot;#random.SystemRandom&quot;&gt;&lt;code&gt;SystemRandom&lt;/code&gt;&lt;/a&gt; class which uses the system function &lt;a href=&quot;os#os.urandom&quot;&gt;&lt;code&gt;os.urandom()&lt;/code&gt;&lt;/a&gt; to generate random numbers from sources provided by the operating system.</source>
          <target state="translated">&lt;a href=&quot;#module-random&quot;&gt; &lt;code&gt;random&lt;/code&gt; &lt;/a&gt;モジュールはまた、提供&lt;a href=&quot;#random.SystemRandom&quot;&gt; &lt;code&gt;SystemRandom&lt;/code&gt; の&lt;/a&gt;システム機能使用するクラス&lt;a href=&quot;os#os.urandom&quot;&gt; &lt;code&gt;os.urandom()&lt;/code&gt; &lt;/a&gt;オペレーティングシステムによって提供されるソースから乱数を生成します。</target>
        </trans-unit>
        <trans-unit id="660c9edcebc298478ef94c0e97923d795a1d7ea0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt; module defines a number of functions to facilitate completion and reading/writing of history files from the Python interpreter. This module can be used directly, or via the &lt;a href=&quot;rlcompleter#module-rlcompleter&quot;&gt;&lt;code&gt;rlcompleter&lt;/code&gt;&lt;/a&gt; module, which supports completion of Python identifiers at the interactive prompt. Settings made using this module affect the behaviour of both the interpreter&amp;rsquo;s interactive prompt and the prompts offered by the built-in &lt;a href=&quot;functions#input&quot;&gt;&lt;code&gt;input()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; の&lt;/a&gt;モジュールはPythonインタプリタから履歴ファイルの書き込み/完了し、読み取りを容易にするために、多くの機能を定義します。このモジュールは直接使用することも、対話型プロンプトでPython識別子の補完をサポートする&lt;a href=&quot;rlcompleter#module-rlcompleter&quot;&gt; &lt;code&gt;rlcompleter&lt;/code&gt; &lt;/a&gt;モジュールを介して使用することもできます。このモジュールを使用して行われた設定は、インタープリターの対話型プロンプトと、組み込みの&lt;a href=&quot;functions#input&quot;&gt; &lt;code&gt;input()&lt;/code&gt; &lt;/a&gt;関数によって提供されるプロンプトの両方の動作に影響します。</target>
        </trans-unit>
        <trans-unit id="8cb8c7fc3ba5633401913c3281336b234b751d20" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-reprlib&quot;&gt;&lt;code&gt;reprlib&lt;/code&gt;&lt;/a&gt; module provides a means for producing object representations with limits on the size of the resulting strings. This is used in the Python debugger and may be useful in other contexts as well.</source>
          <target state="translated">&lt;a href=&quot;#module-reprlib&quot;&gt; &lt;code&gt;reprlib&lt;/code&gt; の&lt;/a&gt;モジュールは、得られた文字列の大きさを制限したオブジェクト表現を生成するための手段を提供します。これはPythonデバッガで使用され、他のコンテキストでも役立つ場合があります。</target>
        </trans-unit>
        <trans-unit id="a98425ecc51ce0e54b42b84ccf96d36884a9eada" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-rlcompleter&quot;&gt;&lt;code&gt;rlcompleter&lt;/code&gt;&lt;/a&gt; module defines a completion function suitable for the &lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt; module by completing valid Python identifiers and keywords.</source>
          <target state="translated">&lt;a href=&quot;#module-rlcompleter&quot;&gt; &lt;code&gt;rlcompleter&lt;/code&gt; の&lt;/a&gt;モジュールは、適した補完関数定義&lt;a href=&quot;readline#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; の&lt;/a&gt;有効なPython識別子とキーワードを完了することによって、モジュールを。</target>
        </trans-unit>
        <trans-unit id="c0b25d4342ebdd8a2a2b1ce722bd086c190928bb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-rlcompleter&quot;&gt;&lt;code&gt;rlcompleter&lt;/code&gt;&lt;/a&gt; module is designed for use with Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/tutorial/interpreter.html#tut-interactive&quot;&gt;interactive mode&lt;/a&gt;. Unless Python is run with the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt; option, the module is automatically imported and configured (see &lt;a href=&quot;site#rlcompleter-config&quot;&gt;Readline configuration&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;#module-rlcompleter&quot;&gt; &lt;code&gt;rlcompleter&lt;/code&gt; の&lt;/a&gt;モジュールはPythonので使用するために設計されて&lt;a href=&quot;https://docs.python.org/3.8/tutorial/interpreter.html#tut-interactive&quot;&gt;対話モード&lt;/a&gt;。&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt; &lt;code&gt;-S&lt;/code&gt; &lt;/a&gt;オプションを指定してPythonを実行しない限り、モジュールは自動的にインポートおよび構成されます（&lt;a href=&quot;site#rlcompleter-config&quot;&gt;Readline構成を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="b28772e324417b3932525709d74daf62bf935dd5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-runpy&quot;&gt;&lt;code&gt;runpy&lt;/code&gt;&lt;/a&gt; module is used to locate and run Python modules without importing them first. Its main use is to implement the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-m&quot;&gt;&lt;code&gt;-m&lt;/code&gt;&lt;/a&gt; command line switch that allows scripts to be located using the Python module namespace rather than the filesystem.</source>
          <target state="translated">&lt;a href=&quot;#module-runpy&quot;&gt; &lt;code&gt;runpy&lt;/code&gt; &lt;/a&gt;モジュールを検索し、最初にそれらをインポートせずにPythonモジュールを実行するために使用されます。その主な用途は、ファイルシステムではなくPythonモジュールの名前空間を使用してスクリプトを&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-m&quot;&gt; &lt;code&gt;-m&lt;/code&gt; &lt;/a&gt;できるようにする-mコマンドラインスイッチを実装することです。</target>
        </trans-unit>
        <trans-unit id="dc3ddf57200cdb8fbdd57ac19a46f766137d4790" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-runpy&quot;&gt;&lt;code&gt;runpy&lt;/code&gt;&lt;/a&gt; module provides two functions:</source>
          <target state="translated">&lt;a href=&quot;#module-runpy&quot;&gt; &lt;code&gt;runpy&lt;/code&gt; &lt;/a&gt;モジュールは、2つの機能を提供します。</target>
        </trans-unit>
        <trans-unit id="01a602199174a318278c5a270b7c9a02dc1addcd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-sched&quot;&gt;&lt;code&gt;sched&lt;/code&gt;&lt;/a&gt; module defines a class which implements a general purpose event scheduler:</source>
          <target state="translated">&lt;a href=&quot;#module-sched&quot;&gt; &lt;code&gt;sched&lt;/code&gt; の&lt;/a&gt;モジュールは、汎用イベントスケジューラを実装するクラスを定義しています。</target>
        </trans-unit>
        <trans-unit id="4f152c98375827775a1715a1a99a228ef3083649" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-secrets&quot;&gt;&lt;code&gt;secrets&lt;/code&gt;&lt;/a&gt; module is used for generating cryptographically strong random numbers suitable for managing data such as passwords, account authentication, security tokens, and related secrets.</source>
          <target state="translated">&lt;a href=&quot;#module-secrets&quot;&gt; &lt;code&gt;secrets&lt;/code&gt; &lt;/a&gt;モジュールは、パスワード、アカウント認証、セキュリティトークン、および関連の秘密などのデータを管理するのに適した暗号的に強い乱数を生成するために使用されています。</target>
        </trans-unit>
        <trans-unit id="cbab347c0a408d23a665e1801ca57f80ec76e7c0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-secrets&quot;&gt;&lt;code&gt;secrets&lt;/code&gt;&lt;/a&gt; module provides access to the most secure source of randomness that your operating system provides.</source>
          <target state="translated">&lt;a href=&quot;#module-secrets&quot;&gt; &lt;code&gt;secrets&lt;/code&gt; &lt;/a&gt;モジュールは、オペレーティングシステムが提供する乱数の最も安全なソースへのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="e4b477222814e65dff6d74820dc3f7363c0a5219" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-secrets&quot;&gt;&lt;code&gt;secrets&lt;/code&gt;&lt;/a&gt; module provides functions for generating secure tokens, suitable for applications such as password resets, hard-to-guess URLs, and similar.</source>
          <target state="translated">&lt;a href=&quot;#module-secrets&quot;&gt; &lt;code&gt;secrets&lt;/code&gt; &lt;/a&gt;モジュールは、パスワードのリセット、ハードに推測のURL、および類似などのアプリケーションに適した安全なトークンを生成するための機能を提供します。</target>
        </trans-unit>
        <trans-unit id="135efbd99b4712cb39b1be6b03521151c5bacb0f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-shelve&quot;&gt;&lt;code&gt;shelve&lt;/code&gt;&lt;/a&gt; module does not support &lt;em&gt;concurrent&lt;/em&gt; read/write access to shelved objects. (Multiple simultaneous read accesses are safe.) When a program has a shelf open for writing, no other program should have it open for reading or writing. Unix file locking can be used to solve this, but this differs across Unix versions and requires knowledge about the database implementation used.</source>
          <target state="translated">&lt;a href=&quot;#module-shelve&quot;&gt; &lt;code&gt;shelve&lt;/code&gt; &lt;/a&gt;モジュールは、保留されたオブジェクトへの&lt;em&gt;同時&lt;/em&gt;読み取り/書き込みアクセスをサポート&lt;em&gt;して&lt;/em&gt;いません。 （複数の同時読み取りアクセスは安全です。）プログラムが書き込み用に開いているシェルフを持っている場合、他のプログラムはそれを読み取りまたは書き込み用に開いてはなりません。 Unixファイルロックを使用してこれを解決できますが、これはUnixのバージョンによって異なり、使用するデータベースの実装に関する知識が必要です。</target>
        </trans-unit>
        <trans-unit id="9faec9689592e9547e90e0ccaf66b0c7f30d0e20" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; class provides compatibility with the parsing performed by common Unix shells like &lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;dash&lt;/code&gt;, and &lt;code&gt;sh&lt;/code&gt;. To take advantage of this compatibility, specify the &lt;code&gt;punctuation_chars&lt;/code&gt; argument in the constructor. This defaults to &lt;code&gt;False&lt;/code&gt;, which preserves pre-3.6 behaviour. However, if it is set to &lt;code&gt;True&lt;/code&gt;, then parsing of the characters &lt;code&gt;();&amp;lt;&amp;gt;|&amp;amp;&lt;/code&gt; is changed: any run of these characters is returned as a single token. While this is short of a full parser for shells (which would be out of scope for the standard library, given the multiplicity of shells out there), it does allow you to perform processing of command lines more easily than you could otherwise. To illustrate, you can see the difference in the following snippet:</source>
          <target state="translated">&lt;a href=&quot;#module-shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;クラスは、のような一般的なUnixシェルによって実行される構文解析との互換性を提供して &lt;code&gt;bash&lt;/code&gt; の、 &lt;code&gt;dash&lt;/code&gt; 、および &lt;code&gt;sh&lt;/code&gt; 。この互換性を利用するには、コンストラクターで &lt;code&gt;punctuation_chars&lt;/code&gt; 引数を指定します。デフォルトは &lt;code&gt;False&lt;/code&gt; で、3.6より前の動作が維持されます。ただし、 &lt;code&gt;True&lt;/code&gt; に設定されている場合、文字の解析 &lt;code&gt;();&amp;lt;&amp;gt;|&amp;amp;&lt;/code&gt; 変更：これらの文字の実行はすべて単一のトークンとして返されます。これは、シェルの完全なパーサー（標準のライブラリの範囲外であり、シェルの数が多いことを考えると）には不十分ですが、他の方法よりも簡単にコマンドラインの処理を実行できます。説明のために、次のスニペットの違いを確認できます。</target>
        </trans-unit>
        <trans-unit id="919bf48690255147cc9d4800d709ba206de17a98" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; module defines the following class:</source>
          <target state="translated">&lt;a href=&quot;#module-shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;モジュールは以下のクラスを定義しています。</target>
        </trans-unit>
        <trans-unit id="16369c83843c49a48cc7a498ae5c91f3a35b18c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;モジュールは以下の関数を定義しています。</target>
        </trans-unit>
        <trans-unit id="8d0e584e13229932fd788a08968e71a778ff56f2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-shutil&quot;&gt;&lt;code&gt;shutil&lt;/code&gt;&lt;/a&gt; module offers a number of high-level operations on files and collections of files. In particular, functions are provided which support file copying and removal. For operations on individual files, see also the &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;#module-shutil&quot;&gt; &lt;code&gt;shutil&lt;/code&gt; &lt;/a&gt;モジュールの提供ファイルとファイルのコレクションのハイレベルな操作の数。特に、ファイルのコピーと削除をサポートする機能が提供されます。個々のファイルの操作については、&lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;モジュールも参照してください。</target>
        </trans-unit>
        <trans-unit id="7a5254ed16f29b4b1810c72e9cdb9efbecf62619" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-signal&quot;&gt;&lt;code&gt;signal&lt;/code&gt;&lt;/a&gt; module defines one exception:</source>
          <target state="translated">&lt;a href=&quot;#module-signal&quot;&gt; &lt;code&gt;signal&lt;/code&gt; &lt;/a&gt;モジュールは、1つの例外を定義しています。</target>
        </trans-unit>
        <trans-unit id="55203edded87483a5c2e560ccf2b55021cb05d90" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-signal&quot;&gt;&lt;code&gt;signal&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-signal&quot;&gt; &lt;code&gt;signal&lt;/code&gt; &lt;/a&gt;モジュールは以下の関数を定義しています。</target>
        </trans-unit>
        <trans-unit id="ee452f2e6f0e5cc42b0bda95278ce8eac8e50a55" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-site&quot;&gt;&lt;code&gt;site&lt;/code&gt;&lt;/a&gt; module also provides a way to get the user directories from the command line:</source>
          <target state="translated">&lt;a href=&quot;#module-site&quot;&gt; &lt;code&gt;site&lt;/code&gt; &lt;/a&gt;モジュールは、コマンドラインからユーザディレクトリを取得する方法を提供します。</target>
        </trans-unit>
        <trans-unit id="afdc95d7cc063c7620c57497d1c06e523c7c721b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-smtplib&quot;&gt;&lt;code&gt;smtplib&lt;/code&gt;&lt;/a&gt; module defines an SMTP client session object that can be used to send mail to any Internet machine with an SMTP or ESMTP listener daemon. For details of SMTP and ESMTP operation, consult &lt;a href=&quot;https://tools.ietf.org/html/rfc821.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 821&lt;/strong&gt;&lt;/a&gt; (Simple Mail Transfer Protocol) and &lt;a href=&quot;https://tools.ietf.org/html/rfc1869.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1869&lt;/strong&gt;&lt;/a&gt; (SMTP Service Extensions).</source>
          <target state="translated">&lt;a href=&quot;#module-smtplib&quot;&gt; &lt;code&gt;smtplib&lt;/code&gt; &lt;/a&gt;モジュールは、SMTPまたはESMTPのリスナーデーモンを備えた任意のインターネット上のマシンにメールを送信するために使用することができるSMTPクライアント・セッション・オブジェクトを定義します。SMTPおよびESMTPの動作の詳細については、&lt;a href=&quot;https://tools.ietf.org/html/rfc821.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 821&lt;/strong&gt;&lt;/a&gt;（Simple Mail Transfer Protocol）および&lt;a href=&quot;https://tools.ietf.org/html/rfc1869.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1869&lt;/strong&gt;&lt;/a&gt;（SMTP Service Extensions）を参照してください。</target>
        </trans-unit>
        <trans-unit id="5010df5f5785564c1be45eab8f18484d365f10fa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-sndhdr&quot;&gt;&lt;code&gt;sndhdr&lt;/code&gt;&lt;/a&gt; provides utility functions which attempt to determine the type of sound data which is in a file. When these functions are able to determine what type of sound data is stored in a file, they return a &lt;a href=&quot;collections#collections.namedtuple&quot;&gt;&lt;code&gt;namedtuple()&lt;/code&gt;&lt;/a&gt;, containing five attributes: (&lt;code&gt;filetype&lt;/code&gt;, &lt;code&gt;framerate&lt;/code&gt;, &lt;code&gt;nchannels&lt;/code&gt;, &lt;code&gt;nframes&lt;/code&gt;, &lt;code&gt;sampwidth&lt;/code&gt;). The value for &lt;em&gt;type&lt;/em&gt; indicates the data type and will be one of the strings &lt;code&gt;'aifc'&lt;/code&gt;, &lt;code&gt;'aiff'&lt;/code&gt;, &lt;code&gt;'au'&lt;/code&gt;, &lt;code&gt;'hcom'&lt;/code&gt;, &lt;code&gt;'sndr'&lt;/code&gt;, &lt;code&gt;'sndt'&lt;/code&gt;, &lt;code&gt;'voc'&lt;/code&gt;, &lt;code&gt;'wav'&lt;/code&gt;, &lt;code&gt;'8svx'&lt;/code&gt;, &lt;code&gt;'sb'&lt;/code&gt;, &lt;code&gt;'ub'&lt;/code&gt;, or &lt;code&gt;'ul'&lt;/code&gt;. The &lt;em&gt;sampling_rate&lt;/em&gt; will be either the actual value or &lt;code&gt;0&lt;/code&gt; if unknown or difficult to decode. Similarly, &lt;em&gt;channels&lt;/em&gt; will be either the number of channels or &lt;code&gt;0&lt;/code&gt; if it cannot be determined or if the value is difficult to decode. The value for &lt;em&gt;frames&lt;/em&gt; will be either the number of frames or &lt;code&gt;-1&lt;/code&gt;. The last item in the tuple, &lt;em&gt;bits_per_sample&lt;/em&gt;, will either be the sample size in bits or &lt;code&gt;'A'&lt;/code&gt; for A-LAW or &lt;code&gt;'U'&lt;/code&gt; for u-LAW.</source>
          <target state="translated">&lt;a href=&quot;#module-sndhdr&quot;&gt; &lt;code&gt;sndhdr&lt;/code&gt; は、&lt;/a&gt;ファイル内にある音声データのタイプを決定しようとするユーティリティ関数を提供します。これらの機能は、音声データの種類がファイルに格納されているかを判断することができたとき、彼らは返す&lt;a href=&quot;collections#collections.namedtuple&quot;&gt; &lt;code&gt;namedtuple()&lt;/code&gt; &lt;/a&gt;（：5 つの属性含む、 &lt;code&gt;filetype&lt;/code&gt; 、 &lt;code&gt;framerate&lt;/code&gt; 、 &lt;code&gt;nchannels&lt;/code&gt; 、 &lt;code&gt;nframes&lt;/code&gt; 、 &lt;code&gt;sampwidth&lt;/code&gt; を）。&lt;em&gt;type&lt;/em&gt;の値はデータタイプを示し、文字列 &lt;code&gt;'aifc'&lt;/code&gt; 、 &lt;code&gt;'aiff'&lt;/code&gt; 、 &lt;code&gt;'au'&lt;/code&gt; 、 &lt;code&gt;'hcom'&lt;/code&gt; 、 &lt;code&gt;'sndr'&lt;/code&gt; 、 &lt;code&gt;'sndt'&lt;/code&gt; 、 &lt;code&gt;'voc'&lt;/code&gt; voc' のいずれかになります。 &lt;code&gt;'wav'&lt;/code&gt; 、 &lt;code&gt;'8svx'&lt;/code&gt; 、 &lt;code&gt;'sb'&lt;/code&gt; 、 &lt;code&gt;'ub'&lt;/code&gt; 、または &lt;code&gt;'ul'&lt;/code&gt; 。&lt;em&gt;SAMPLING_RATEは、&lt;/em&gt;実際の値かのどちらかになります &lt;code&gt;0&lt;/code&gt; 不明またはデコードに難しい場合。同様に、&lt;em&gt;チャネル&lt;/em&gt;は、&lt;em&gt;チャネル&lt;/em&gt;数、または決定できない場合、または値のデコードが困難な場合は &lt;code&gt;0&lt;/code&gt; になります。&lt;em&gt;フレーム&lt;/em&gt;の値は、&lt;em&gt;フレーム&lt;/em&gt;数または &lt;code&gt;-1&lt;/code&gt; のいずれかになります。タプルの最後の項目、&lt;em&gt;bits_per_sampleは&lt;/em&gt;、いずれかのビットまたはサンプルサイズになり &lt;code&gt;'A'&lt;/code&gt; A-lawまたはのための &lt;code&gt;'U'&lt;/code&gt; 、U-LAWため。</target>
        </trans-unit>
        <trans-unit id="f2bbd54678e57dc4c92878b357c79bf8e092f46d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; module also offers various network-related services:</source>
          <target state="translated">&lt;a href=&quot;#module-socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;モジュールは、様々なネットワーク関連のサービスを提供しています：</target>
        </trans-unit>
        <trans-unit id="8ba72662e12ca1e862a21df7b945467f8e047ff6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-socketserver&quot;&gt;&lt;code&gt;socketserver&lt;/code&gt;&lt;/a&gt; module simplifies the task of writing network servers.</source>
          <target state="translated">&lt;a href=&quot;#module-socketserver&quot;&gt; &lt;code&gt;socketserver&lt;/code&gt; の&lt;/a&gt;モジュールは、ネットワーク・サーバを作成する作業を簡素化します。</target>
        </trans-unit>
        <trans-unit id="23972564f34650ae2a05c05e7de5ad20291b61f7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module has two default adapters for Python&amp;rsquo;s built-in &lt;a href=&quot;datetime#datetime.date&quot;&gt;&lt;code&gt;datetime.date&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime.datetime&lt;/code&gt;&lt;/a&gt; types. Now let&amp;rsquo;s suppose we want to store &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime.datetime&lt;/code&gt;&lt;/a&gt; objects not in ISO representation, but as a Unix timestamp.</source>
          <target state="translated">&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; のの&lt;/a&gt;モジュールはPythonのための2つのデフォルトのアダプタを内蔵してい&lt;a href=&quot;datetime#datetime.date&quot;&gt; &lt;code&gt;datetime.date&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;datetime#datetime.datetime&quot;&gt; &lt;code&gt;datetime.datetime&lt;/code&gt; の&lt;/a&gt;種類。次に、&lt;a href=&quot;datetime#datetime.datetime&quot;&gt; &lt;code&gt;datetime.datetime&lt;/code&gt; &lt;/a&gt;オブジェクトをISO表現ではなく、Unixタイムスタンプとして保存するとします。</target>
        </trans-unit>
        <trans-unit id="00fac285f3151c95ef30230b0c141c3afd186802" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module internally uses a statement cache to avoid SQL parsing overhead. If you want to explicitly set the number of statements that are cached for the connection, you can set the &lt;em&gt;cached_statements&lt;/em&gt; parameter. The currently implemented default is to cache 100 statements.</source>
          <target state="translated">&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; の&lt;/a&gt;モジュールは、内部的に回避するSQLの構文解析オーバーヘッドに文キャッシュを使用しています。接続用にキャッシュされるステートメントの数を明示的に設定する場合は、&lt;em&gt;cached_statements&lt;/em&gt;パラメータを設定できます。現在実装されているデフォルトでは、100個のステートメントをキャッシュします。</target>
        </trans-unit>
        <trans-unit id="4d2ce586ec3a270007b05b96357f828bc872595b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-stat&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt; module defines constants and functions for interpreting the results of &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;os#os.fstat&quot;&gt;&lt;code&gt;os.fstat()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;os#os.lstat&quot;&gt;&lt;code&gt;os.lstat()&lt;/code&gt;&lt;/a&gt; (if they exist). For complete details about the &lt;code&gt;stat()&lt;/code&gt;, &lt;code&gt;fstat()&lt;/code&gt; and &lt;code&gt;lstat()&lt;/code&gt; calls, consult the documentation for your system.</source>
          <target state="translated">&lt;a href=&quot;#module-stat&quot;&gt; &lt;code&gt;stat&lt;/code&gt; &lt;/a&gt;の結果を解釈するためのモジュール定義定数と機能&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;os#os.fstat&quot;&gt; &lt;code&gt;os.fstat()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;os#os.lstat&quot;&gt; &lt;code&gt;os.lstat()&lt;/code&gt; &lt;/a&gt;（存在する場合）。 &lt;code&gt;stat()&lt;/code&gt; 、 &lt;code&gt;fstat()&lt;/code&gt; 、および &lt;code&gt;lstat()&lt;/code&gt; 呼び出しの詳細については、システムのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="687e8631f9c61961d2c9931b2fd726158c32d7c3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-stat&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt; module defines the following functions to test for specific file types:</source>
          <target state="translated">&lt;a href=&quot;#module-stat&quot;&gt; &lt;code&gt;stat&lt;/code&gt; &lt;/a&gt;モジュールは、特定のファイルの種類をテストする以下の関数を定義しています。</target>
        </trans-unit>
        <trans-unit id="480a84318ee703dc5a9b0be69b50b6ad6fc66170" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-string&quot;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt; module provides a &lt;a href=&quot;#string.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; class that implements these rules. The methods of &lt;a href=&quot;#string.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; are:</source>
          <target state="translated">&lt;a href=&quot;#module-string&quot;&gt; &lt;code&gt;string&lt;/code&gt; &lt;/a&gt;モジュールが提供&lt;a href=&quot;#string.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt;これらの規則を実装するクラスを。&lt;a href=&quot;#string.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt;のメソッドは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="c46cb6742876c99877d7145c9406a69e6add43d2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; module also defines the following type:</source>
          <target state="translated">&lt;a href=&quot;#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;モジュールは、次のタイプが定義されています。</target>
        </trans-unit>
        <trans-unit id="d3ce39cace6e0b8f0545dfae131c2f6375ca35c1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; module allows you to spawn new processes, connect to their input/output/error pipes, and obtain their return codes. This module intends to replace several older modules and functions:</source>
          <target state="translated">&lt;a href=&quot;#module-subprocess&quot;&gt; &lt;code&gt;subprocess&lt;/code&gt; &lt;/a&gt;モジュールを使用すると、新しいプロセスを生成する彼らの入力/出力/エラーパイプに接続し、そのリターンコードを取得することができます。このモジュールは、いくつかの古いモジュールと機能を置き換えることを意図しています：</target>
        </trans-unit>
        <trans-unit id="28f5c7e6366c580d5585fae232c046c902162567" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; module exposes the following constants.</source>
          <target state="translated">&lt;a href=&quot;#module-subprocess&quot;&gt; &lt;code&gt;subprocess&lt;/code&gt; &lt;/a&gt;モジュールは、以下の定数を公開しています。</target>
        </trans-unit>
        <trans-unit id="56d9cc0d0b5899e8707e8417bfe835a52f57f24d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-sysconfig&quot;&gt;&lt;code&gt;sysconfig&lt;/code&gt;&lt;/a&gt; module provides access to Python&amp;rsquo;s configuration information like the list of installation paths and the configuration variables relevant for the current platform.</source>
          <target state="translated">&lt;a href=&quot;#module-sysconfig&quot;&gt; &lt;code&gt;sysconfig&lt;/code&gt; の&lt;/a&gt;モジュールがインストールパスと現在のプラットフォームに関連する設定変数のリストのようなPythonの設定情報へのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="6429efa2bca86eb7f85b79e9818a9493d6e675dc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tarfile&quot;&gt;&lt;code&gt;tarfile&lt;/code&gt;&lt;/a&gt; module defines the following exceptions:</source>
          <target state="translated">&lt;a href=&quot;#module-tarfile&quot;&gt; &lt;code&gt;tarfile&lt;/code&gt; &lt;/a&gt;モジュールは以下の例外を定義します。</target>
        </trans-unit>
        <trans-unit id="60e2b8de9d60bf56e732bcf798aa0e16e9a4fe20" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tarfile&quot;&gt;&lt;code&gt;tarfile&lt;/code&gt;&lt;/a&gt; module makes it possible to read and write tar archives, including those using gzip, bz2 and lzma compression. Use the &lt;a href=&quot;zipfile#module-zipfile&quot;&gt;&lt;code&gt;zipfile&lt;/code&gt;&lt;/a&gt; module to read or write &lt;code&gt;.zip&lt;/code&gt; files, or the higher-level functions in &lt;a href=&quot;shutil#archiving-operations&quot;&gt;shutil&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-tarfile&quot;&gt; &lt;code&gt;tarfile&lt;/code&gt; &lt;/a&gt;モジュールは、GZIP、BZ2とLZMA圧縮を使用したものを含むtarアーカイブを、読み書きすることが可能となります。&lt;a href=&quot;zipfile#module-zipfile&quot;&gt; &lt;code&gt;zipfile&lt;/code&gt; &lt;/a&gt;モジュールを使用して、 &lt;code&gt;.zip&lt;/code&gt; ファイル、または&lt;a href=&quot;shutil#archiving-operations&quot;&gt;shutilの&lt;/a&gt;高レベル関数を読み書きします。</target>
        </trans-unit>
        <trans-unit id="78fd81d6196e9460d83369490a0e3a8bada8d1a6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tarfile&quot;&gt;&lt;code&gt;tarfile&lt;/code&gt;&lt;/a&gt; module provides a simple command-line interface to interact with tar archives.</source>
          <target state="translated">&lt;a href=&quot;#module-tarfile&quot;&gt; &lt;code&gt;tarfile&lt;/code&gt; &lt;/a&gt;モジュールは、tarアーカイブと対話するための簡単なコマンドラインインターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="b8918dc3dbfcb58a46c0efa12e0d908925c6d58c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-telnetlib&quot;&gt;&lt;code&gt;telnetlib&lt;/code&gt;&lt;/a&gt; module provides a &lt;a href=&quot;#telnetlib.Telnet&quot;&gt;&lt;code&gt;Telnet&lt;/code&gt;&lt;/a&gt; class that implements the Telnet protocol. See &lt;a href=&quot;https://tools.ietf.org/html/rfc854.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 854&lt;/strong&gt;&lt;/a&gt; for details about the protocol. In addition, it provides symbolic constants for the protocol characters (see below), and for the telnet options. The symbolic names of the telnet options follow the definitions in &lt;code&gt;arpa/telnet.h&lt;/code&gt;, with the leading &lt;code&gt;TELOPT_&lt;/code&gt; removed. For symbolic names of options which are traditionally not included in &lt;code&gt;arpa/telnet.h&lt;/code&gt;, see the module source itself.</source>
          <target state="translated">&lt;a href=&quot;#module-telnetlib&quot;&gt; &lt;code&gt;telnetlib&lt;/code&gt; の&lt;/a&gt;モジュールは、提供&lt;a href=&quot;#telnetlib.Telnet&quot;&gt; &lt;code&gt;Telnet&lt;/code&gt; &lt;/a&gt;クラス実装するTelnetプロトコルを。参照してください。&lt;a href=&quot;https://tools.ietf.org/html/rfc854.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 854&lt;/strong&gt;&lt;/a&gt;プロトコルの詳細については。さらに、プロトコル文字（以下を参照）とtelnetオプションの記号定数を提供します。 telnetオプションの記号名は、先頭の &lt;code&gt;TELOPT_&lt;/code&gt; が削除された &lt;code&gt;arpa/telnet.h&lt;/code&gt; の定義に従います。従来、 &lt;code&gt;arpa/telnet.h&lt;/code&gt; に含まれていないオプションの記号名については、モジュールのソース自体を参照してください。</target>
        </trans-unit>
        <trans-unit id="a5e7efa00ab2f0fae31f9c832f0e22eaba4bbf97" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; package can be run as a script to drive Python&amp;rsquo;s regression test suite, thanks to the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-m&quot;&gt;&lt;code&gt;-m&lt;/code&gt;&lt;/a&gt; option: &lt;strong&gt;python -m test&lt;/strong&gt;. Under the hood, it uses &lt;code&gt;test.regrtest&lt;/code&gt;; the call &lt;strong&gt;python -m test.regrtest&lt;/strong&gt; used in previous Python versions still works. Running the script by itself automatically starts running all regression tests in the &lt;a href=&quot;#module-test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; package. It does this by finding all modules in the package whose name starts with &lt;code&gt;test_&lt;/code&gt;, importing them, and executing the function &lt;code&gt;test_main()&lt;/code&gt; if present or loading the tests via unittest.TestLoader.loadTestsFromModule if &lt;code&gt;test_main&lt;/code&gt; does not exist. The names of tests to execute may also be passed to the script. Specifying a single regression test (&lt;strong&gt;python -m test test_spam&lt;/strong&gt;) will minimize output and only print whether the test passed or failed.</source>
          <target state="translated">&lt;a href=&quot;#module-test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt;パッケージは、のおかげでPythonの回帰テストスイートを駆動するためのスクリプトとして実行することができます&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-m&quot;&gt; &lt;code&gt;-m&lt;/code&gt; &lt;/a&gt;：オプション&lt;strong&gt;のpython -mテストを&lt;/strong&gt;。 &lt;code&gt;test.regrtest&lt;/code&gt; では、test.regrtestを使用しています。以前のバージョンのPythonで使用されていた&lt;strong&gt;python -m test.regrtest&lt;/strong&gt;の呼び出しは引き続き機能します。スクリプトを単独で実行すると、&lt;a href=&quot;#module-test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt;パッケージ内のすべての回帰テストの実行が自動的に開始されます。これは、名前が &lt;code&gt;test_&lt;/code&gt; で始まるパッケージ内のすべてのモジュールを検索し、それらをインポートし、存在する場合は関数 &lt;code&gt;test_main()&lt;/code&gt; を実行するか、 &lt;code&gt;test_main&lt;/code&gt; の場合はunittest.TestLoader.loadTestsFromModuleを介してテストをロードします。存在しません。実行するテストの名前もスクリプトに渡すことができます。単一の回帰テスト（&lt;strong&gt;python -m test test_spam&lt;/strong&gt;）を指定すると、出力が最小化され、テストが成功したか失敗したかだけが出力されます。</target>
        </trans-unit>
        <trans-unit id="8c5d4304c9ba049d42957cc58ededa17769ed778" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; package contains all regression tests for Python as well as the modules &lt;a href=&quot;#module-test.support&quot;&gt;&lt;code&gt;test.support&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;test.regrtest&lt;/code&gt;. &lt;a href=&quot;#module-test.support&quot;&gt;&lt;code&gt;test.support&lt;/code&gt;&lt;/a&gt; is used to enhance your tests while &lt;code&gt;test.regrtest&lt;/code&gt; drives the testing suite.</source>
          <target state="translated">&lt;a href=&quot;#module-test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt;パッケージには、Pythonのためのすべての回帰テストだけでなく、モジュールが含まれ&lt;a href=&quot;#module-test.support&quot;&gt; &lt;code&gt;test.support&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;test.regrtest&lt;/code&gt; をします。 &lt;code&gt;test.regrtest&lt;/code&gt; がテストスイートを実行する間、&lt;a href=&quot;#module-test.support&quot;&gt; &lt;code&gt;test.support&lt;/code&gt; &lt;/a&gt;を使用してテストを強化します。</target>
        </trans-unit>
        <trans-unit id="9117d73cefcf380ffbe79a1cfa00d1882f1ed60a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; package is meant for internal use by Python only. It is documented for the benefit of the core developers of Python. Any use of this package outside of Python&amp;rsquo;s standard library is discouraged as code mentioned here can change or be removed without notice between releases of Python.</source>
          <target state="translated">&lt;a href=&quot;#module-test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt;パッケージは、唯一のPythonによる内部使用のためのものです。Pythonのコア開発者のために文書化されています。ここに記載されているコードは、Pythonのリリース間で予告なく変更または削除される可能性があるため、Pythonの標準ライブラリの外部でこのパッケージを使用することはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="0244d10625882318f2449d3c4d63b55e83bf132e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-test.support&quot;&gt;&lt;code&gt;test.support&lt;/code&gt;&lt;/a&gt; module defines the following classes:</source>
          <target state="translated">&lt;a href=&quot;#module-test.support&quot;&gt; &lt;code&gt;test.support&lt;/code&gt; の&lt;/a&gt;モジュールは以下のクラスを定義します。</target>
        </trans-unit>
        <trans-unit id="cd92d858e88b1051a2b11b06c524823853936238" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-test.support&quot;&gt;&lt;code&gt;test.support&lt;/code&gt;&lt;/a&gt; module defines the following constants:</source>
          <target state="translated">&lt;a href=&quot;#module-test.support&quot;&gt; &lt;code&gt;test.support&lt;/code&gt; の&lt;/a&gt;モジュールは、以下の定数が定義されています。</target>
        </trans-unit>
        <trans-unit id="19a622513d587ca5bec49ac4dcc1a72fc02b52ab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-test.support&quot;&gt;&lt;code&gt;test.support&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-test.support&quot;&gt; &lt;code&gt;test.support&lt;/code&gt; の&lt;/a&gt;モジュールは以下の関数を定義します：</target>
        </trans-unit>
        <trans-unit id="a6e75d382748152f3eb0456dcb32bf8ada4db960" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-test.support&quot;&gt;&lt;code&gt;test.support&lt;/code&gt;&lt;/a&gt; module provides support for Python&amp;rsquo;s regression test suite.</source>
          <target state="translated">&lt;a href=&quot;#module-test.support&quot;&gt; &lt;code&gt;test.support&lt;/code&gt; の&lt;/a&gt;モジュールはPythonの回帰テストスイートのサポートを提供します。</target>
        </trans-unit>
        <trans-unit id="aaea65c10dc101120e4cd4f0a1b3cf522268725f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-test.support.script_helper&quot;&gt;&lt;code&gt;test.support.script_helper&lt;/code&gt;&lt;/a&gt; module provides support for Python&amp;rsquo;s script execution tests.</source>
          <target state="translated">&lt;a href=&quot;#module-test.support.script_helper&quot;&gt; &lt;code&gt;test.support.script_helper&lt;/code&gt; の&lt;/a&gt;モジュールはPythonのスクリプト実行テストのためのサポートを提供します。</target>
        </trans-unit>
        <trans-unit id="f2b9de08e53424b2e1f33e222c50a8ca31672d7e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-textwrap&quot;&gt;&lt;code&gt;textwrap&lt;/code&gt;&lt;/a&gt; module provides some convenience functions, as well as &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt;, the class that does all the work. If you&amp;rsquo;re just wrapping or filling one or two text strings, the convenience functions should be good enough; otherwise, you should use an instance of &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt; for efficiency.</source>
          <target state="translated">&lt;a href=&quot;#module-textwrap&quot;&gt; &lt;code&gt;textwrap&lt;/code&gt; の&lt;/a&gt;モジュールは、いくつかの便利な関数だけでなく、提供&lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt;、すべての作業を行い、クラスを。1つまたは2つのテキスト文字列をラップまたは埋めるだけの場合は、便利な関数で十分です。それ以外の場合は、効率を&lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt;ためにTextWrapperのインスタンスを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="69521f021f4fce9480016bdd177094adebc1e7d3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; package (&amp;ldquo;Tk interface&amp;rdquo;) is the standard Python interface to the Tk GUI toolkit. Both Tk and &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; are available on most Unix platforms, as well as on Windows systems. (Tk itself is not part of Python; it is maintained at ActiveState.)</source>
          <target state="translated">&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt;パッケージ（「Tkのインタフェース」）はTkのGUIツールキットに対する標準のPythonインタフェースです。Tkと&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt;はどちらも、ほとんどのUnixプラットフォームとWindowsシステムで使用できます。（Tk自体はPythonの一部ではありません。ActiveStateで維持されます。）</target>
        </trans-unit>
        <trans-unit id="0d0d11947e38a35eedb8da5696601eb21877c07b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tkinter.scrolledtext&quot;&gt;&lt;code&gt;tkinter.scrolledtext&lt;/code&gt;&lt;/a&gt; module provides a class of the same name which implements a basic text widget which has a vertical scroll bar configured to do the &amp;ldquo;right thing.&amp;rdquo; Using the &lt;code&gt;ScrolledText&lt;/code&gt; class is a lot easier than setting up a text widget and scroll bar directly. The constructor is the same as that of the &lt;code&gt;tkinter.Text&lt;/code&gt; class.</source>
          <target state="translated">&lt;a href=&quot;#module-tkinter.scrolledtext&quot;&gt; &lt;code&gt;tkinter.scrolledtext&lt;/code&gt; の&lt;/a&gt;モジュールが行うように構成された垂直スクロールバーがある基本的なテキストウィジェット実装し、同じ名前のクラスを提供「正しいことをします。」 &lt;code&gt;ScrolledText&lt;/code&gt; クラスを使用すると、テキストウィジェットとスクロールバーを直接設定するよりもはるかに簡単です。コンストラクタは、 &lt;code&gt;tkinter.Text&lt;/code&gt; クラスのコンストラクタと同じです。</target>
        </trans-unit>
        <trans-unit id="087dc6d87474f5743996f1e0d70ffbb201f64cca" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt; (Tk Interface Extension) module provides an additional rich set of widgets. Although the standard Tk library has many useful widgets, they are far from complete. The &lt;a href=&quot;#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt; library provides most of the commonly needed widgets that are missing from standard Tk: &lt;a href=&quot;#tkinter.tix.HList&quot;&gt;&lt;code&gt;HList&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tkinter.tix.ComboBox&quot;&gt;&lt;code&gt;ComboBox&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tkinter.tix.Control&quot;&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/a&gt; (a.k.a. SpinBox) and an assortment of scrollable widgets. &lt;a href=&quot;#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt; also includes many more widgets that are generally useful in a wide range of applications: &lt;a href=&quot;#tkinter.tix.NoteBook&quot;&gt;&lt;code&gt;NoteBook&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tkinter.tix.FileEntry&quot;&gt;&lt;code&gt;FileEntry&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tkinter.tix.PanedWindow&quot;&gt;&lt;code&gt;PanedWindow&lt;/code&gt;&lt;/a&gt;, etc; there are more than 40 of them.</source>
          <target state="translated">&lt;a href=&quot;#module-tkinter.tix&quot;&gt; &lt;code&gt;tkinter.tix&lt;/code&gt; &lt;/a&gt;（Tkのインタフェース拡張）モジュールは、ウィジェットの追加の豊富なセットを提供します。標準のTkライブラリには多くの便利なウィジェットがありますが、完全ではありません。&lt;a href=&quot;#module-tkinter.tix&quot;&gt; &lt;code&gt;tkinter.tix&lt;/code&gt; の&lt;/a&gt;：ライブラリは標準Tkに欠けている一般的に必要なウィジェットのほとんどの提供&lt;a href=&quot;#tkinter.tix.HList&quot;&gt; &lt;code&gt;HList&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#tkinter.tix.ComboBox&quot;&gt; &lt;code&gt;ComboBox&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#tkinter.tix.Control&quot;&gt; &lt;code&gt;Control&lt;/code&gt; &lt;/a&gt;（スピンボックス別名）とスクロール可能なウィジェットの品揃えを。&lt;a href=&quot;#module-tkinter.tix&quot;&gt; &lt;code&gt;tkinter.tix&lt;/code&gt; &lt;/a&gt;には、幅広いアプリケーション（&lt;a href=&quot;#tkinter.tix.NoteBook&quot;&gt; &lt;code&gt;NoteBook&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#tkinter.tix.FileEntry&quot;&gt; &lt;code&gt;FileEntry&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#tkinter.tix.PanedWindow&quot;&gt; &lt;code&gt;PanedWindow&lt;/code&gt; &lt;/a&gt;など）で一般的に役立つ多くのウィジェットも含まれています。それらの40以上があります。</target>
        </trans-unit>
        <trans-unit id="e594d147bd9eee8773327872d17cd09f5e75e165" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt; module adds:</source>
          <target state="translated">&lt;a href=&quot;#module-tkinter.tix&quot;&gt; &lt;code&gt;tkinter.tix&lt;/code&gt; の&lt;/a&gt;モジュールが追加されます。</target>
        </trans-unit>
        <trans-unit id="43cf6af180abfd7efccd55d54b05a62d2aaf6372" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tkinter.ttk&quot;&gt;&lt;code&gt;tkinter.ttk&lt;/code&gt;&lt;/a&gt; module provides access to the Tk themed widget set, introduced in Tk 8.5. If Python has not been compiled against Tk 8.5, this module can still be accessed if &lt;em&gt;Tile&lt;/em&gt; has been installed. The former method using Tk 8.5 provides additional benefits including anti-aliased font rendering under X11 and window transparency (requiring a composition window manager on X11).</source>
          <target state="translated">&lt;a href=&quot;#module-tkinter.ttk&quot;&gt; &lt;code&gt;tkinter.ttk&lt;/code&gt; の&lt;/a&gt;モジュールは、Tkを8.5に導入Tkのテーマウィジェットセットへのアクセスを提供します。PythonがTk 8.5に対してコンパイルされていない場合でも、&lt;em&gt;Tile&lt;/em&gt;がインストールされていれば、このモジュールにアクセスできます。Tk 8.5を使用する前者の方法には、X11でのアンチエイリアスフォントレンダリングやウィンドウの透明度（X11でコンポジションウィンドウマネージャーが必要）などの追加の利点があります。</target>
        </trans-unit>
        <trans-unit id="010d5d784a9d3ed823f679c97185fddd96fad511" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tokenize&quot;&gt;&lt;code&gt;tokenize&lt;/code&gt;&lt;/a&gt; module can be executed as a script from the command line. It is as simple as:</source>
          <target state="translated">&lt;a href=&quot;#module-tokenize&quot;&gt; &lt;code&gt;tokenize&lt;/code&gt; &lt;/a&gt;モジュールは、コマンドラインからスクリプトとして実行することができます。それは次のように簡単です：</target>
        </trans-unit>
        <trans-unit id="e1bc5e1c9efb3cd19a492a1a8e05de0147910024" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tokenize&quot;&gt;&lt;code&gt;tokenize&lt;/code&gt;&lt;/a&gt; module provides a lexical scanner for Python source code, implemented in Python. The scanner in this module returns comments as tokens as well, making it useful for implementing &amp;ldquo;pretty-printers,&amp;rdquo; including colorizers for on-screen displays.</source>
          <target state="translated">&lt;a href=&quot;#module-tokenize&quot;&gt; &lt;code&gt;tokenize&lt;/code&gt; &lt;/a&gt;モジュールは、Pythonで実装されたPythonソースコードの字句スキャナを提供します。このモジュールのスキャナーはコメントもトークンとして返すので、画面表示用の色付けツールを含む「きれいなプリンター」を実装するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="5f511da6744b577f0c50909f08baf3d8662be4dd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-trace&quot;&gt;&lt;code&gt;trace&lt;/code&gt;&lt;/a&gt; module allows you to trace program execution, generate annotated statement coverage listings, print caller/callee relationships and list functions executed during a program run. It can be used in another program or from the command line.</source>
          <target state="translated">&lt;a href=&quot;#module-trace&quot;&gt; &lt;code&gt;trace&lt;/code&gt; &lt;/a&gt;モジュールを使用すると、プログラムの実行をトレースすることができ、注釈付きステートメントカバレッジリストを生成し、プログラムの実行中に実行される印刷、呼び出し元/呼び出し先の関係とリスト機能。別のプログラムまたはコマンドラインから使用できます。</target>
        </trans-unit>
        <trans-unit id="4d5dc02a91ffc0ddc0a0cd2fae8acbe61a69b08c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-trace&quot;&gt;&lt;code&gt;trace&lt;/code&gt;&lt;/a&gt; module can be invoked from the command line. It can be as simple as</source>
          <target state="translated">&lt;a href=&quot;#module-trace&quot;&gt; &lt;code&gt;trace&lt;/code&gt; &lt;/a&gt;モジュールは、コマンドラインから呼び出すことができます。それはと同じくらい簡単にすることができます</target>
        </trans-unit>
        <trans-unit id="db5ac03755b4e60a53a29f18e14817336774543a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module must be tracing memory allocations to get the limit, otherwise an exception is raised.</source>
          <target state="translated">&lt;a href=&quot;#module-tracemalloc&quot;&gt; &lt;code&gt;tracemalloc&lt;/code&gt; の&lt;/a&gt;モジュールは、そうでない場合は例外が発生し、上限を取得するためにメモリの割り当てを追跡する必要があります。</target>
        </trans-unit>
        <trans-unit id="fde229bd690b9e68c2b1e464dbe341752078b66c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module must be tracing memory allocations to take a snapshot, see the &lt;a href=&quot;#tracemalloc.start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;#module-tracemalloc&quot;&gt; &lt;code&gt;tracemalloc&lt;/code&gt; &lt;/a&gt;モジュールが参照、スナップショットを取るためにメモリの割り当てを追跡する必要があります&lt;a href=&quot;#tracemalloc.start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;関数。</target>
        </trans-unit>
        <trans-unit id="59b15a41895ec7eac05a90753c6997b7add40ffd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tty&quot;&gt;&lt;code&gt;tty&lt;/code&gt;&lt;/a&gt; module defines functions for putting the tty into cbreak and raw modes.</source>
          <target state="translated">&lt;a href=&quot;#module-tty&quot;&gt; &lt;code&gt;tty&lt;/code&gt; &lt;/a&gt;モジュールはCBREAKと生モードに端末を置くための関数を定義します。</target>
        </trans-unit>
        <trans-unit id="07eaa4568ecb34fbafd3088112219dd6ba46369c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tty&quot;&gt;&lt;code&gt;tty&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-tty&quot;&gt; &lt;code&gt;tty&lt;/code&gt; &lt;/a&gt;モジュールは以下の関数を定義します：</target>
        </trans-unit>
        <trans-unit id="2b67f134175f6566de6a32665323b518f06e0cd1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-turtle&quot;&gt;&lt;code&gt;turtle&lt;/code&gt;&lt;/a&gt; module is an extended reimplementation of the same-named module from the Python standard distribution up to version Python 2.5.</source>
          <target state="translated">&lt;a href=&quot;#module-turtle&quot;&gt; &lt;code&gt;turtle&lt;/code&gt; &lt;/a&gt;モジュールは、バージョンのPython 2.5までのPythonの標準分布から、同じ名前のモジュールの拡張された再実装です。</target>
        </trans-unit>
        <trans-unit id="6a3f21e1d1c58048ad940fbc6563e7b4bf6523a6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-turtledemo&quot;&gt;&lt;code&gt;turtledemo&lt;/code&gt;&lt;/a&gt; package directory contains:</source>
          <target state="translated">&lt;a href=&quot;#module-turtledemo&quot;&gt; &lt;code&gt;turtledemo&lt;/code&gt; の&lt;/a&gt;パッケージディレクトリが含まれています。</target>
        </trans-unit>
        <trans-unit id="fc0bfc0c5dda5c5c718c2d5d6afe3366e858d76a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-turtledemo&quot;&gt;&lt;code&gt;turtledemo&lt;/code&gt;&lt;/a&gt; package includes a set of demo scripts. These scripts can be run and viewed using the supplied demo viewer as follows:</source>
          <target state="translated">&lt;a href=&quot;#module-turtledemo&quot;&gt; &lt;code&gt;turtledemo&lt;/code&gt; の&lt;/a&gt;パッケージには、デモスクリプトのセットが含まれています。これらのスクリプトは、次のように、付属のデモビューアを使用して実行および表示できます。</target>
        </trans-unit>
        <trans-unit id="c274f74c69f3f523773db89028d39ebfb3c2a4e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; module provides a rich set of tools for constructing and running tests. This section demonstrates that a small subset of the tools suffice to meet the needs of most users.</source>
          <target state="translated">&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;モジュールは、テストを構築し、実行するための豊富なツールセットを提供します。このセクションでは、ほとんどのユーザーのニーズを満たすにはツールの小さなサブセットで十分であることを示しています。</target>
        </trans-unit>
        <trans-unit id="550ed8a2e0d5ef66b50281dc4ed0a2cf8c5e67a2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; unit testing framework was originally inspired by JUnit and has a similar flavor as major unit testing frameworks in other languages. It supports test automation, sharing of setup and shutdown code for tests, aggregation of tests into collections, and independence of the tests from the reporting framework.</source>
          <target state="translated">&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;ユニットテストフレームワークは、元々のJUnitに触発さと他の言語の主要なユニットテストフレームワークと同様の風味を有しました。テストの自動化、テストのセットアップコードとシャットダウンコードの共有、テストのコレクションへの集約、およびレポートフレームワークからのテストの独立性をサポートします。</target>
        </trans-unit>
        <trans-unit id="1434ea41d7d542121a8217544637f1bfba7ae044" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-urllib.error&quot;&gt;&lt;code&gt;urllib.error&lt;/code&gt;&lt;/a&gt; module defines the exception classes for exceptions raised by &lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt;. The base exception class is &lt;a href=&quot;#urllib.error.URLError&quot;&gt;&lt;code&gt;URLError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-urllib.error&quot;&gt; &lt;code&gt;urllib.error&lt;/code&gt; の&lt;/a&gt;モジュールは、によって発生した例外のための例外クラスを定義&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; を&lt;/a&gt;。基本例外クラスは&lt;a href=&quot;#urllib.error.URLError&quot;&gt; &lt;code&gt;URLError&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="2ee64e18ba6d9ec07ba811ca447c01b9534d6ae7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-urllib.parse&quot;&gt;&lt;code&gt;urllib.parse&lt;/code&gt;&lt;/a&gt; module defines functions that fall into two broad categories: URL parsing and URL quoting. These are covered in detail in the following sections.</source>
          <target state="translated">&lt;a href=&quot;#module-urllib.parse&quot;&gt; &lt;code&gt;urllib.parse&lt;/code&gt; &lt;/a&gt; 2つの広いカテゴリーに分類され、モジュール定義機能：URLの解析とURLを引用。これらについては、次のセクションで詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="91f4d970ce1b3aeb81168e2ce9b4e4b29a3feba8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt; module defines functions and classes which help in opening URLs (mostly HTTP) in a complex world &amp;mdash; basic and digest authentication, redirections, cookies and more.</source>
          <target state="translated">&lt;a href=&quot;#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; &lt;/a&gt;以上の認証、リダイレクト、クッキーを消化し、基本と-モジュールは、複雑な世界における開口のURL（主にHTTP）のヘルプ関数やクラスを定義します。</target>
        </trans-unit>
        <trans-unit id="4427049224ca80d28bb6cd1f4ba8aa3eac642a9a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; &lt;/a&gt;モジュールは以下の関数を定義します：</target>
        </trans-unit>
        <trans-unit id="158d83543b097cd1a684ccd480ac339d1df24307" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-urllib.response&quot;&gt;&lt;code&gt;urllib.response&lt;/code&gt;&lt;/a&gt; module defines functions and classes which define a minimal file like interface, including &lt;code&gt;read()&lt;/code&gt; and &lt;code&gt;readline()&lt;/code&gt;. The typical response object is an addinfourl instance, which defines an &lt;code&gt;info()&lt;/code&gt; method and that returns headers and a &lt;code&gt;geturl()&lt;/code&gt; method that returns the url. Functions defined by this module are used internally by the &lt;a href=&quot;#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;#module-urllib.response&quot;&gt; &lt;code&gt;urllib.response&lt;/code&gt; の&lt;/a&gt;モジュールを含むインターフェースのような最小限のファイルを定義する関数やクラス定義 &lt;code&gt;read()&lt;/code&gt; と &lt;code&gt;readline()&lt;/code&gt; 。典型的な応答オブジェクトは、 &lt;code&gt;info()&lt;/code&gt; メソッドを定義し、ヘッダーを返すaddinfourlインスタンスと、URLを返す &lt;code&gt;geturl()&lt;/code&gt; メソッドです。このモジュールによって定義された関数は、&lt;a href=&quot;#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; &lt;/a&gt;モジュールによって内部的に使用されます。</target>
        </trans-unit>
        <trans-unit id="d60cd16cabda39f1e5a654be3225e45721ab2b76" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-uu&quot;&gt;&lt;code&gt;uu&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-uu&quot;&gt; &lt;code&gt;uu&lt;/code&gt; &lt;/a&gt;モジュールは以下の関数を定義します：</target>
        </trans-unit>
        <trans-unit id="4c618ead0516bb686d9dd02e4c383114c17e6fe6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-uuid&quot;&gt;&lt;code&gt;uuid&lt;/code&gt;&lt;/a&gt; module defines the following constants for the possible values of the &lt;code&gt;variant&lt;/code&gt; attribute:</source>
          <target state="translated">&lt;a href=&quot;#module-uuid&quot;&gt; &lt;code&gt;uuid&lt;/code&gt; &lt;/a&gt;モジュールは、可能な値については、以下の定数を定義 &lt;code&gt;variant&lt;/code&gt; 属性を：</target>
        </trans-unit>
        <trans-unit id="dfa0704de3ca100bba5d25f4eff9d322a057cc7f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-uuid&quot;&gt;&lt;code&gt;uuid&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-uuid&quot;&gt; &lt;code&gt;uuid&lt;/code&gt; &lt;/a&gt;モジュールは以下の関数を定義します：</target>
        </trans-unit>
        <trans-unit id="e7c7759cdf4ea6781379bac932cc154b598d9c03" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-uuid&quot;&gt;&lt;code&gt;uuid&lt;/code&gt;&lt;/a&gt; module defines the following namespace identifiers for use with &lt;a href=&quot;#uuid.uuid3&quot;&gt;&lt;code&gt;uuid3()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#uuid.uuid5&quot;&gt;&lt;code&gt;uuid5()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-uuid&quot;&gt; &lt;code&gt;uuid&lt;/code&gt; &lt;/a&gt;モジュールで使用するために、次のネームスペース識別子を定義&lt;a href=&quot;#uuid.uuid3&quot;&gt; &lt;code&gt;uuid3()&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;#uuid.uuid5&quot;&gt; &lt;code&gt;uuid5()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6841f915e5c6db3b149cd5e09f2d363c06b1cb5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-venv&quot;&gt;&lt;code&gt;venv&lt;/code&gt;&lt;/a&gt; module provides support for creating lightweight &amp;ldquo;virtual environments&amp;rdquo; with their own site directories, optionally isolated from system site directories. Each virtual environment has its own Python binary (which matches the version of the binary that was used to create this environment) and can have its own independent set of installed Python packages in its site directories.</source>
          <target state="translated">&lt;a href=&quot;#module-venv&quot;&gt; &lt;code&gt;venv&lt;/code&gt; の&lt;/a&gt;モジュールは、必要に応じて、システムのサイトのディレクトリから分離され、自分のサイトのディレクトリ、と軽量な「仮想環境」を作成するためのサポートを提供します。各仮想環境には独自のPythonバイナリがあり（これは、この環境の作成に使用されたバイナリのバージョンと一致します）、サイトディレクトリに独自の独立したインストール済みPythonパッケージセットを持つことができます。</target>
        </trans-unit>
        <trans-unit id="fe6bcf346326e5482e10284d7d56ca5e5249e4f0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-wave&quot;&gt;&lt;code&gt;wave&lt;/code&gt;&lt;/a&gt; module defines the following function and exception:</source>
          <target state="translated">&lt;a href=&quot;#module-wave&quot;&gt; &lt;code&gt;wave&lt;/code&gt; &lt;/a&gt;モジュールは、次の関数と例外を定義します。</target>
        </trans-unit>
        <trans-unit id="db1287ed4466a744ea41400d0c9b31503ca62f25" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-wave&quot;&gt;&lt;code&gt;wave&lt;/code&gt;&lt;/a&gt; module provides a convenient interface to the WAV sound format. It does not support compression/decompression, but it does support mono/stereo.</source>
          <target state="translated">&lt;a href=&quot;#module-wave&quot;&gt; &lt;code&gt;wave&lt;/code&gt; &lt;/a&gt;モジュールは、WAVサウンドフォーマットへの便利なインターフェースを提供します。圧縮/解凍はサポートしていませんが、モノラル/ステレオはサポートしています。</target>
        </trans-unit>
        <trans-unit id="ce0a6c0a72b64cc9c303875352bd99f1f28d877c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-weakref&quot;&gt;&lt;code&gt;weakref&lt;/code&gt;&lt;/a&gt; module allows the Python programmer to create &lt;em&gt;weak references&lt;/em&gt; to objects.</source>
          <target state="translated">&lt;a href=&quot;#module-weakref&quot;&gt; &lt;code&gt;weakref&lt;/code&gt; &lt;/a&gt;モジュールは、Pythonプログラマが作成することができます&lt;em&gt;弱い参照&lt;/em&gt;オブジェクトにします。</target>
        </trans-unit>
        <trans-unit id="602ebdec6ca13a1397450d4fe2b22e2e1ced8817" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-webbrowser&quot;&gt;&lt;code&gt;webbrowser&lt;/code&gt;&lt;/a&gt; module provides a high-level interface to allow displaying Web-based documents to users. Under most circumstances, simply calling the &lt;a href=&quot;#webbrowser.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function from this module will do the right thing.</source>
          <target state="translated">&lt;a href=&quot;#module-webbrowser&quot;&gt; &lt;code&gt;webbrowser&lt;/code&gt; &lt;/a&gt;モジュールは、ユーザーにウェブベースの文書を表示できるように高レベルのインタフェースを提供します。ほとんどの状況では、このモジュールから&lt;a href=&quot;#webbrowser.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;関数を呼び出すだけで正しく動作します。</target>
        </trans-unit>
        <trans-unit id="b1f5c82843a509b2a143237cf2ba7e8a05441e4b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-winsound&quot;&gt;&lt;code&gt;winsound&lt;/code&gt;&lt;/a&gt; module provides access to the basic sound-playing machinery provided by Windows platforms. It includes functions and several constants.</source>
          <target state="translated">&lt;a href=&quot;#module-winsound&quot;&gt; &lt;code&gt;winsound&lt;/code&gt; の&lt;/a&gt;モジュールは、Windowsプラットフォームで提供される基本的な音声再生機構へのアクセスを提供します。関数といくつかの定数が含まれています。</target>
        </trans-unit>
        <trans-unit id="392fb45242b14c4b7cd1b0ded98856e64199fc71" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xdrlib&quot;&gt;&lt;code&gt;xdrlib&lt;/code&gt;&lt;/a&gt; module defines two classes, one for packing variables into XDR representation, and another for unpacking from XDR representation. There are also two exception classes.</source>
          <target state="translated">&lt;a href=&quot;#module-xdrlib&quot;&gt; &lt;code&gt;xdrlib&lt;/code&gt; の&lt;/a&gt;モジュールはXDR表現からアンパックするための2つのクラス、XDR表現に変数を梱包するための1つ、別の定義します。2つの例外クラスもあります。</target>
        </trans-unit>
        <trans-unit id="0765a0ff3c40c9034d664c7e44836a0a5dd558f3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xdrlib&quot;&gt;&lt;code&gt;xdrlib&lt;/code&gt;&lt;/a&gt; module supports the External Data Representation Standard as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc1014.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1014&lt;/strong&gt;&lt;/a&gt;, written by Sun Microsystems, Inc. June 1987. It supports most of the data types described in the RFC.</source>
          <target state="translated">&lt;a href=&quot;#module-xdrlib&quot;&gt; &lt;code&gt;xdrlib&lt;/code&gt; の&lt;/a&gt;中で説明したように、モジュールは、外部データ表現の標準をサポートしている&lt;a href=&quot;https://tools.ietf.org/html/rfc1014.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1014&lt;/strong&gt;&lt;/a&gt;、Sun Microsystemsによって書かれた、株式会社1987年6月これは、RFCに記載されたデータの種類のほとんどをサポートしています。</target>
        </trans-unit>
        <trans-unit id="7e23e8421593d34c75aa5877916b6c00871448fc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.dom&quot;&gt;&lt;code&gt;xml.dom&lt;/code&gt;&lt;/a&gt; contains the following functions:</source>
          <target state="translated">&lt;a href=&quot;#module-xml.dom&quot;&gt; &lt;code&gt;xml.dom&lt;/code&gt; には、&lt;/a&gt;以下の機能が含まれています。</target>
        </trans-unit>
        <trans-unit id="afe2596a2a0bf334c7c6480123b905a534e201ea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt; module is essentially a DOM 1.0-compatible DOM with some DOM 2 features (primarily namespace features).</source>
          <target state="translated">&lt;a href=&quot;#module-xml.dom.minidom&quot;&gt; &lt;code&gt;xml.dom.minidom&lt;/code&gt; では用&lt;/a&gt;モジュールは、本質的にいくつかのDOM 2の機能（主に名前空間機能）を有するDOM 1.0互換DOMあります。</target>
        </trans-unit>
        <trans-unit id="ec4bf1281109a15a8ce9a354baa7f424d805c298" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt; module is not secure against maliciously constructed data. If you need to parse untrusted or unauthenticated data see &lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML vulnerabilities&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-xml.dom.minidom&quot;&gt; &lt;code&gt;xml.dom.minidom&lt;/code&gt; ではの&lt;/a&gt;モジュールは、悪意を持って構築されたデータに対して安全ではありません。信頼できないデータや認証されていないデータを解析する必要がある場合は、&lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XMLの脆弱性を&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="8ff2e624fa14eb71f82d8114b3704cd9e49c79c8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.dom.pulldom&quot;&gt;&lt;code&gt;xml.dom.pulldom&lt;/code&gt;&lt;/a&gt; module is not secure against maliciously constructed data. If you need to parse untrusted or unauthenticated data see &lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML vulnerabilities&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-xml.dom.pulldom&quot;&gt; &lt;code&gt;xml.dom.pulldom&lt;/code&gt; の&lt;/a&gt;モジュールは、悪意を持って構築されたデータに対して安全ではありません。信頼できないデータや認証されていないデータを解析する必要がある場合は、&lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XMLの脆弱性を&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="7da8d9e204b18cde09a1c5927abca16c2dc06f90" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.dom.pulldom&quot;&gt;&lt;code&gt;xml.dom.pulldom&lt;/code&gt;&lt;/a&gt; module provides a &amp;ldquo;pull parser&amp;rdquo; which can also be asked to produce DOM-accessible fragments of the document where necessary. The basic concept involves pulling &amp;ldquo;events&amp;rdquo; from a stream of incoming XML and processing them. In contrast to SAX which also employs an event-driven processing model together with callbacks, the user of a pull parser is responsible for explicitly pulling events from the stream, looping over those events until either processing is finished or an error condition occurs.</source>
          <target state="translated">&lt;a href=&quot;#module-xml.dom.pulldom&quot;&gt; &lt;code&gt;xml.dom.pulldom&lt;/code&gt; の&lt;/a&gt;モジュールはまた、必要に応じてドキュメントのDOMにアクセス可能なフラグメントを生成するように要求することができ、「プル・パーサー」を提供します。基本的な概念には、着信XMLのストリームから「イベント」を引き出して処理することが含まれます。イベント駆動型処理モデルとコールバックを併用するSAXとは対照的に、プルパーサーのユーザーは、ストリームからイベントを明示的にプルし、処理が完了するかエラー状態が発生するまでそれらのイベントをループします。</target>
        </trans-unit>
        <trans-unit id="753f54582b46244e21a8831572953d24a4288d90" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.etree.ElementTree&quot;&gt;&lt;code&gt;xml.etree.ElementTree&lt;/code&gt;&lt;/a&gt; module implements a simple and efficient API for parsing and creating XML data.</source>
          <target state="translated">&lt;a href=&quot;#module-xml.etree.ElementTree&quot;&gt; &lt;code&gt;xml.etree.ElementTree&lt;/code&gt; の&lt;/a&gt;モジュールが実装XMLデータを解析し、作成するための簡単で効率的なAPI。</target>
        </trans-unit>
        <trans-unit id="220ca5b36fbe3faa62dc3cebfd386cfa746bf773" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.etree.ElementTree&quot;&gt;&lt;code&gt;xml.etree.ElementTree&lt;/code&gt;&lt;/a&gt; module is not secure against maliciously constructed data. If you need to parse untrusted or unauthenticated data see &lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML vulnerabilities&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-xml.etree.ElementTree&quot;&gt; &lt;code&gt;xml.etree.ElementTree&lt;/code&gt; の&lt;/a&gt;モジュールは、悪意を持って構築されたデータに対して安全ではありません。信頼できないデータや認証されていないデータを解析する必要がある場合は、&lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XMLの脆弱性を&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="a3cff07b737ccb6a53a248041c03aea6c1778b60" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.parsers.expat&quot;&gt;&lt;code&gt;xml.parsers.expat&lt;/code&gt;&lt;/a&gt; module contains two functions:</source>
          <target state="translated">&lt;a href=&quot;#module-xml.parsers.expat&quot;&gt; &lt;code&gt;xml.parsers.expat&lt;/code&gt; &lt;/a&gt;モジュールは、2つの機能が含まれています。</target>
        </trans-unit>
        <trans-unit id="487cc8b216b2d808ca3378ccef6ef8a4592695bb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.parsers.expat&quot;&gt;&lt;code&gt;xml.parsers.expat&lt;/code&gt;&lt;/a&gt; module is a Python interface to the Expat non-validating XML parser. The module provides a single extension type, &lt;code&gt;xmlparser&lt;/code&gt;, that represents the current state of an XML parser. After an &lt;code&gt;xmlparser&lt;/code&gt; object has been created, various attributes of the object can be set to handler functions. When an XML document is then fed to the parser, the handler functions are called for the character data and markup in the XML document.</source>
          <target state="translated">&lt;a href=&quot;#module-xml.parsers.expat&quot;&gt; &lt;code&gt;xml.parsers.expat&lt;/code&gt; の&lt;/a&gt;モジュールは、Expatのの非検証XMLパーサへのPythonインタフェースです。このモジュールは、XMLパーサーの現在の状態を表す単一の拡張タイプ &lt;code&gt;xmlparser&lt;/code&gt; を提供します。 &lt;code&gt;xmlparser&lt;/code&gt; オブジェクトが作成された後、オブジェクトのさまざまな属性をハンドラー関数に設定できます。次にXMLドキュメントがパーサーに供給されると、XMLドキュメント内の文字データとマークアップに対してハンドラー関数が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2cbce4c26fd4ba418c1eaed5f2fdba794b888e4f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.parsers.expat.errors&quot;&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt; module also provides error message constants and a dictionary &lt;a href=&quot;#xml.parsers.expat.errors.codes&quot;&gt;&lt;code&gt;codes&lt;/code&gt;&lt;/a&gt; mapping these messages back to the error codes, see below.</source>
          <target state="translated">&lt;a href=&quot;#module-xml.parsers.expat.errors&quot;&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/a&gt;、エラーメッセージ定数と辞書提供するモジュール&lt;a href=&quot;#xml.parsers.expat.errors.codes&quot;&gt; &lt;code&gt;codes&lt;/code&gt; &lt;/a&gt;バックエラーコードにこれらのメッセージをマッピングし、以下を参照されたいです。</target>
        </trans-unit>
        <trans-unit id="33e272786d76f67af9436fe85e804086e74d1b40" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.sax&quot;&gt;&lt;code&gt;xml.sax&lt;/code&gt;&lt;/a&gt; module is not secure against maliciously constructed data. If you need to parse untrusted or unauthenticated data see &lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML vulnerabilities&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-xml.sax&quot;&gt; &lt;code&gt;xml.sax&lt;/code&gt; の&lt;/a&gt;モジュールは、悪意を持って構築されたデータに対して安全ではありません。信頼できないデータや認証されていないデータを解析する必要がある場合は、&lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XMLの脆弱性を&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="e221cca934884e0f8a8c65a15fb87eb0cc204e0c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.sax&quot;&gt;&lt;code&gt;xml.sax&lt;/code&gt;&lt;/a&gt; package provides a number of modules which implement the Simple API for XML (SAX) interface for Python. The package itself provides the SAX exceptions and the convenience functions which will be most used by users of the SAX API.</source>
          <target state="translated">&lt;a href=&quot;#module-xml.sax&quot;&gt; &lt;code&gt;xml.sax&lt;/code&gt; の&lt;/a&gt;パッケージは、Python用のXML（SAX）インタフェースのための簡単なAPIを実装するモジュールの数を提供します。パッケージ自体は、SAX例外とSAX APIのユーザーが最も使用する便利な関数を提供します。</target>
        </trans-unit>
        <trans-unit id="ad2d781d2ea000faaa92755486cec8e6660fceeb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xmlrpc.client&quot;&gt;&lt;code&gt;xmlrpc.client&lt;/code&gt;&lt;/a&gt; module is not secure against maliciously constructed data. If you need to parse untrusted or unauthenticated data see &lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML vulnerabilities&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-xmlrpc.client&quot;&gt; &lt;code&gt;xmlrpc.client&lt;/code&gt; の&lt;/a&gt;モジュールは、悪意を持って構築されたデータに対して安全ではありません。信頼できないデータや認証されていないデータを解析する必要がある場合は、&lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XMLの脆弱性を&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="b8fce2f24b87c1546f646642802c15515a04d748" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xmlrpc.server&quot;&gt;&lt;code&gt;xmlrpc.server&lt;/code&gt;&lt;/a&gt; module is not secure against maliciously constructed data. If you need to parse untrusted or unauthenticated data see &lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML vulnerabilities&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-xmlrpc.server&quot;&gt; &lt;code&gt;xmlrpc.server&lt;/code&gt; の&lt;/a&gt;モジュールは、悪意を持って構築されたデータに対して安全ではありません。信頼できないデータや認証されていないデータを解析する必要がある場合は、&lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XMLの脆弱性を&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="cfcd4ee4d8d026e3b265966b4ea47954ccc18a9e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xmlrpc.server&quot;&gt;&lt;code&gt;xmlrpc.server&lt;/code&gt;&lt;/a&gt; module provides a basic server framework for XML-RPC servers written in Python. Servers can either be free standing, using &lt;a href=&quot;#xmlrpc.server.SimpleXMLRPCServer&quot;&gt;&lt;code&gt;SimpleXMLRPCServer&lt;/code&gt;&lt;/a&gt;, or embedded in a CGI environment, using &lt;a href=&quot;#xmlrpc.server.CGIXMLRPCRequestHandler&quot;&gt;&lt;code&gt;CGIXMLRPCRequestHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-xmlrpc.server&quot;&gt; &lt;code&gt;xmlrpc.server&lt;/code&gt; の&lt;/a&gt;モジュールはPythonで書かれたXML-RPCサーバのための基本的なサーバフレームワークを提供します。サーバーは、&lt;a href=&quot;#xmlrpc.server.SimpleXMLRPCServer&quot;&gt; &lt;code&gt;SimpleXMLRPCServer&lt;/code&gt; &lt;/a&gt;を使用して自立することも、&lt;a href=&quot;#xmlrpc.server.CGIXMLRPCRequestHandler&quot;&gt; &lt;code&gt;CGIXMLRPCRequestHandler&lt;/code&gt; &lt;/a&gt;を使用してCGI環境に埋め込むこともできます。</target>
        </trans-unit>
        <trans-unit id="97fe9e07c5e698e1d9d613108136f0084f9421ee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-zipfile&quot;&gt;&lt;code&gt;zipfile&lt;/code&gt;&lt;/a&gt; module provides a simple command-line interface to interact with ZIP archives.</source>
          <target state="translated">&lt;a href=&quot;#module-zipfile&quot;&gt; &lt;code&gt;zipfile&lt;/code&gt; &lt;/a&gt;モジュールは、ZIPアーカイブと対話するための簡単なコマンドラインインターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="75b75c1f39769dc1c5764f94ee93c4d6b84f3fed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#multiprocessing.Pipe&quot;&gt;&lt;code&gt;Pipe()&lt;/code&gt;&lt;/a&gt; function returns a pair of connection objects connected by a pipe which by default is duplex (two-way). For example:</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.Pipe&quot;&gt; &lt;code&gt;Pipe()&lt;/code&gt; &lt;/a&gt;関数は、接続のペアは、デフォルトで二重（双方向）であるパイプによって接続オブジェクトを返します。例えば：</target>
        </trans-unit>
        <trans-unit id="8cf5feb4818516622d330a29f73f50132adfc639" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; class</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;クラス</target>
        </trans-unit>
        <trans-unit id="4b293343c1c587e9b5ac647079a9431b786ace07" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#multiprocessing.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; class is a near clone of &lt;a href=&quot;queue#queue.Queue&quot;&gt;&lt;code&gt;queue.Queue&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;クラスはの近くクローンである&lt;a href=&quot;queue#queue.Queue&quot;&gt; &lt;code&gt;queue.Queue&lt;/code&gt; &lt;/a&gt;。例えば：</target>
        </trans-unit>
        <trans-unit id="a0cedb7fa5260d9907b2328d34b19ed312430247" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#multiprocessing.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.SimpleQueue&quot;&gt;&lt;code&gt;SimpleQueue&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#multiprocessing.JoinableQueue&quot;&gt;&lt;code&gt;JoinableQueue&lt;/code&gt;&lt;/a&gt; types are multi-producer, multi-consumer</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#multiprocessing.SimpleQueue&quot;&gt; &lt;code&gt;SimpleQueue&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#multiprocessing.JoinableQueue&quot;&gt; &lt;code&gt;JoinableQueue&lt;/code&gt; &lt;/a&gt;タイプは、マルチプロデューサー、マルチ消費者であります</target>
        </trans-unit>
        <trans-unit id="038df3c220f2741b8456e0029e0ca1e05d8417f2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#multiprocessing.connection.Connection.recv&quot;&gt;&lt;code&gt;Connection.recv()&lt;/code&gt;&lt;/a&gt; method automatically unpickles the data it receives, which can be a security risk unless you can trust the process which sent the message.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.connection.Connection.recv&quot;&gt; &lt;code&gt;Connection.recv()&lt;/code&gt; &lt;/a&gt;メソッドが自動的にメッセージを送ったプロセスを信頼することができない限り、セキュリティ上のリスクがあることができ、それが受信したデータを、unpickles。</target>
        </trans-unit>
        <trans-unit id="29d6684e7eeea81aa92bf41bfe61a7c9303a408d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt;&lt;code&gt;Pool&lt;/code&gt;&lt;/a&gt; class represents a pool of worker processes. It has methods which allows tasks to be offloaded to the worker processes in a few different ways.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt; &lt;code&gt;Pool&lt;/code&gt; &lt;/a&gt;クラスは、ワーカープロセスのプールを表します。これには、いくつかの方法でタスクをワーカープロセスにオフロードできるメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="a507cb2ece4cc4bff46e7f21b384b92f4c11139f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt;&lt;code&gt;SharedMemory&lt;/code&gt;&lt;/a&gt; instance where the values are stored.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt; &lt;code&gt;SharedMemory&lt;/code&gt; &lt;/a&gt;の値が格納されているインスタンス。</target>
        </trans-unit>
        <trans-unit id="eb8247966315c33ed7d42e4bdd9f010ba4c75fdd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#netrc.netrc&quot;&gt;&lt;code&gt;netrc&lt;/code&gt;&lt;/a&gt; class parses and encapsulates the netrc file format used by the Unix &lt;strong&gt;ftp&lt;/strong&gt; program and other FTP clients.</source>
          <target state="translated">&lt;a href=&quot;#netrc.netrc&quot;&gt; &lt;code&gt;netrc&lt;/code&gt; のの&lt;/a&gt;クラスの構文解析とは、Unixで使用されるnetrcのファイル形式にカプセル化&lt;strong&gt;のftp&lt;/strong&gt;プログラムや他のFTPクライアントを。</target>
        </trans-unit>
        <trans-unit id="8d9f703f8f300e46186097fad3623f0d59c01381" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#os.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; attribute will be &lt;code&gt;bytes&lt;/code&gt; if the &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;path&lt;/em&gt; argument is of type &lt;code&gt;bytes&lt;/code&gt; and &lt;code&gt;str&lt;/code&gt; otherwise. Use &lt;a href=&quot;#os.fsdecode&quot;&gt;&lt;code&gt;fsdecode()&lt;/code&gt;&lt;/a&gt; to decode byte filenames.</source>
          <target state="translated">&lt;a href=&quot;#os.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;属性は次のようになります &lt;code&gt;bytes&lt;/code&gt; 場合&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;&lt;em&gt;パスの&lt;/em&gt;引数は型である &lt;code&gt;bytes&lt;/code&gt; と &lt;code&gt;str&lt;/code&gt; そう。バイトファイル名をデコードするには、&lt;a href=&quot;#os.fsdecode&quot;&gt; &lt;code&gt;fsdecode()&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="f828ec7e960d4be893a45463a9230b6baafb0f22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt; function returns directory entries along with file attribute information, giving better performance for many common use cases.</source>
          <target state="translated">&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;関数は、多くの一般的なユースケースのためのより良いパフォーマンスを与えて、ファイルの属性情報とともにディレクトリエントリを返します。</target>
        </trans-unit>
        <trans-unit id="c5c2323bdc5e7fee3b0c455c908e3670af275b78" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt; iterator supports the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol and has the following method:</source>
          <target state="translated">&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;イテレータをサポート&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;コンテキストマネージャの&lt;/a&gt;プロトコルを、以下の方法があります。</target>
        </trans-unit>
        <trans-unit id="43bededb39b0a5e3947c94653bc8a5e138915265" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;stat()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;stat()&lt;/code&gt; &lt;/a&gt;関数。</target>
        </trans-unit>
        <trans-unit id="bd878a547586902bf1c4b2db9bcb9b047247a72d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#parser.expr&quot;&gt;&lt;code&gt;expr()&lt;/code&gt;&lt;/a&gt; function parses the parameter &lt;em&gt;source&lt;/em&gt; as if it were an input to &lt;code&gt;compile(source, 'file.py', 'eval')&lt;/code&gt;. If the parse succeeds, an ST object is created to hold the internal parse tree representation, otherwise an appropriate exception is raised.</source>
          <target state="translated">&lt;a href=&quot;#parser.expr&quot;&gt; &lt;code&gt;expr()&lt;/code&gt; &lt;/a&gt;関数は、パラメータ構文解析&lt;em&gt;ソースを&lt;/em&gt;それが入力されたかのように &lt;code&gt;compile(source, 'file.py', 'eval')&lt;/code&gt; 。解析が成功すると、STオブジェクトが作成され、内部解析ツリー表現が保持されます。それ以外の場合は、適切な例外が発生します。</target>
        </trans-unit>
        <trans-unit id="6d012d594304d7266b44a2752d73569066704c93" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#parser.suite&quot;&gt;&lt;code&gt;suite()&lt;/code&gt;&lt;/a&gt; function parses the parameter &lt;em&gt;source&lt;/em&gt; as if it were an input to &lt;code&gt;compile(source, 'file.py', 'exec')&lt;/code&gt;. If the parse succeeds, an ST object is created to hold the internal parse tree representation, otherwise an appropriate exception is raised.</source>
          <target state="translated">&lt;a href=&quot;#parser.suite&quot;&gt; &lt;code&gt;suite()&lt;/code&gt; &lt;/a&gt;関数は、パラメータ構文解析&lt;em&gt;ソースを&lt;/em&gt;それが入力であるかのように &lt;code&gt;compile(source, 'file.py', 'exec')&lt;/code&gt; 。解析が成功すると、STオブジェクトが作成され、内部解析ツリー表現が保持されます。それ以外の場合は、適切な例外が発生します。</target>
        </trans-unit>
        <trans-unit id="9544d49104e9b2f429af86f2c8c929928e7a546f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#profile.Profile&quot;&gt;&lt;code&gt;Profile&lt;/code&gt;&lt;/a&gt; class can also be used as a context manager (supported only in &lt;a href=&quot;#module-cProfile&quot;&gt;&lt;code&gt;cProfile&lt;/code&gt;&lt;/a&gt; module. see &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt;):</source>
          <target state="translated">&lt;a href=&quot;#profile.Profile&quot;&gt; &lt;code&gt;Profile&lt;/code&gt; &lt;/a&gt;クラスは、コンテキストマネージャとして使用することができます（でのみサポート&lt;a href=&quot;#module-cProfile&quot;&gt; &lt;code&gt;cProfile&lt;/code&gt; の&lt;/a&gt;モジュール参照してください。&lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;コンテキストマネージャタイプ&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="faf57ccc0cc476807993436cf501f3326fcbfcc1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#protocols&quot;&gt;Protocols&lt;/a&gt; section documents asyncio &lt;a href=&quot;#asyncio.BaseProtocol&quot;&gt;&lt;code&gt;BaseProtocol&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.Protocol&quot;&gt;&lt;code&gt;Protocol&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.BufferedProtocol&quot;&gt;&lt;code&gt;BufferedProtocol&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.DatagramProtocol&quot;&gt;&lt;code&gt;DatagramProtocol&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#asyncio.SubprocessProtocol&quot;&gt;&lt;code&gt;SubprocessProtocol&lt;/code&gt;&lt;/a&gt; classes.</source>
          <target state="translated">&lt;a href=&quot;#protocols&quot;&gt;プロトコル&lt;/a&gt; asyncioセクション文書&lt;a href=&quot;#asyncio.BaseProtocol&quot;&gt; &lt;code&gt;BaseProtocol&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#asyncio.Protocol&quot;&gt; &lt;code&gt;Protocol&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#asyncio.BufferedProtocol&quot;&gt; &lt;code&gt;BufferedProtocol&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#asyncio.DatagramProtocol&quot;&gt; &lt;code&gt;DatagramProtocol&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#asyncio.SubprocessProtocol&quot;&gt; &lt;code&gt;SubprocessProtocol&lt;/code&gt; の&lt;/a&gt;クラス。</target>
        </trans-unit>
        <trans-unit id="226339913a9761d8d008b8dbb0aa15827c049517" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;pstats.Stats&lt;/code&gt;&lt;/a&gt; class reads profile results from a file and formats them in various ways.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;pstats.Stats&lt;/code&gt; の&lt;/a&gt;クラスは、ファイルからプロファイル結果を読み取り、さまざまな方法でそれらをフォーマットします。</target>
        </trans-unit>
        <trans-unit id="f68199c1afb4ab885475da66322b237f646c0f3b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#pstats.Stats.strip_dirs&quot;&gt;&lt;code&gt;strip_dirs()&lt;/code&gt;&lt;/a&gt; method removed the extraneous path from all the module names. The &lt;a href=&quot;#pstats.Stats.sort_stats&quot;&gt;&lt;code&gt;sort_stats()&lt;/code&gt;&lt;/a&gt; method sorted all the entries according to the standard module/line/name string that is printed. The &lt;a href=&quot;#pstats.Stats.print_stats&quot;&gt;&lt;code&gt;print_stats()&lt;/code&gt;&lt;/a&gt; method printed out all the statistics. You might try the following sort calls:</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats.strip_dirs&quot;&gt; &lt;code&gt;strip_dirs()&lt;/code&gt; &lt;/a&gt;メソッドは、すべてのモジュール名から無関係な経路を除去します。&lt;a href=&quot;#pstats.Stats.sort_stats&quot;&gt; &lt;code&gt;sort_stats()&lt;/code&gt; &lt;/a&gt;メソッドは、印刷される標準モジュール/ライン/名前の文字列に応じてすべてのエントリをソート。&lt;a href=&quot;#pstats.Stats.print_stats&quot;&gt; &lt;code&gt;print_stats()&lt;/code&gt; &lt;/a&gt;メソッドは、すべての統計情報をプリントアウトします。次のソート呼び出しを試してみてください。</target>
        </trans-unit>
        <trans-unit id="5544d4649257a25ae9f7706cb59f82c5565624e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#range&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; type represents an immutable sequence of numbers and is commonly used for looping a specific number of times in &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; loops.</source>
          <target state="translated">&lt;a href=&quot;#range&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;タイプは数値の不変配列を表し、一般的に時間の特定の数をループするために使用される&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt;ループ。</target>
        </trans-unit>
        <trans-unit id="02d79383c695b081c5ccacc2d185b0227b09d755" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#re-objects&quot;&gt;regular expression object&lt;/a&gt; whose &lt;a href=&quot;#re.Pattern.match&quot;&gt;&lt;code&gt;match()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#re.Pattern.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; method produced this match instance.</source>
          <target state="translated">&lt;a href=&quot;#re-objects&quot;&gt;正規表現オブジェクト&lt;/a&gt;その&lt;a href=&quot;#re.Pattern.match&quot;&gt; &lt;code&gt;match()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#re.Pattern.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; &lt;/a&gt;メソッドこの一致インスタンスを生成しました。</target>
        </trans-unit>
        <trans-unit id="fd9268eb754a15ad397f9c9fc09eaf71e25be7ed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#sched.scheduler&quot;&gt;&lt;code&gt;scheduler&lt;/code&gt;&lt;/a&gt; class defines a generic interface to scheduling events. It needs two functions to actually deal with the &amp;ldquo;outside world&amp;rdquo; &amp;mdash; &lt;em&gt;timefunc&lt;/em&gt; should be callable without arguments, and return a number (the &amp;ldquo;time&amp;rdquo;, in any units whatsoever). The &lt;em&gt;delayfunc&lt;/em&gt; function should be callable with one argument, compatible with the output of &lt;em&gt;timefunc&lt;/em&gt;, and should delay that many time units. &lt;em&gt;delayfunc&lt;/em&gt; will also be called with the argument &lt;code&gt;0&lt;/code&gt; after each event is run to allow other threads an opportunity to run in multi-threaded applications.</source>
          <target state="translated">&lt;a href=&quot;#sched.scheduler&quot;&gt; &lt;code&gt;scheduler&lt;/code&gt; &lt;/a&gt;クラスはイベントをスケジュールするための一般的なインタフェースを定義します。「外の世界」を実際に処理するには2つの関数が必要です&lt;em&gt;。timefunc&lt;/em&gt;は引数なしで呼び出し可能であり、数値（「時間」、あらゆる単位で）を返す必要があります。&lt;em&gt;delayfunc&lt;/em&gt;機能は、の出力に対応して一つの引数、で呼び出し可能でなければなりません&lt;em&gt;timefunc&lt;/em&gt;、その時間だけ遅延しなければなりません。&lt;em&gt;delayfunc&lt;/em&gt;は、他のスレッドがマルチスレッドアプリケーションで実行する機会を与えるために、各イベントの実行後に引数 &lt;code&gt;0&lt;/code&gt; で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="36be084ce98cf1d1198d3409e1035b3326919bd6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#server-objects&quot;&gt;Server Objects&lt;/a&gt; section documents types returned from event loop methods like &lt;a href=&quot;#asyncio.loop.create_server&quot;&gt;&lt;code&gt;loop.create_server()&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;a href=&quot;#server-objects&quot;&gt;サーバーは、オブジェクト&lt;/a&gt;のようなイベントループメソッドから返された部分文書の種類&lt;a href=&quot;#asyncio.loop.create_server&quot;&gt; &lt;code&gt;loop.create_server()&lt;/code&gt; &lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="94096215001803cb14ba00b186d7e0b29c7a5262" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#shlex.shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; class makes it easy to write lexical analyzers for simple syntaxes resembling that of the Unix shell. This will often be useful for writing minilanguages, (for example, in run control files for Python applications) or for parsing quoted strings.</source>
          <target state="translated">&lt;a href=&quot;#shlex.shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;クラスは、それが簡単にUnixのシェルに似たシンプルな構文のための字句解析器を書くことができます。これは、ミニ言語の記述（Pythonアプリケーションの実行制御ファイルなど）や、引用符で囲まれた文字列の解析に役立つことがよくあります。</target>
        </trans-unit>
        <trans-unit id="261858698a1b8371fdde292b2461fac39e64543f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#signal.signal&quot;&gt;&lt;code&gt;signal.signal()&lt;/code&gt;&lt;/a&gt; function allows defining custom handlers to be executed when a signal is received. A small number of default handlers are installed: &lt;code&gt;SIGPIPE&lt;/code&gt; is ignored (so write errors on pipes and sockets can be reported as ordinary Python exceptions) and &lt;code&gt;SIGINT&lt;/code&gt; is translated into a &lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt;&lt;code&gt;KeyboardInterrupt&lt;/code&gt;&lt;/a&gt; exception if the parent process has not changed it.</source>
          <target state="translated">&lt;a href=&quot;#signal.signal&quot;&gt; &lt;code&gt;signal.signal()&lt;/code&gt; &lt;/a&gt;関数は、信号が受信されるときに実行されるカスタムハンドラを定義することができます。少数のデフォルトハンドラーがインストールされています： &lt;code&gt;SIGPIPE&lt;/code&gt; は無視され（パイプとソケットの書き込みエラーは通常のPython例外として報告される可能性があります）、親プロセスが変更していない場合、 &lt;code&gt;SIGINT&lt;/code&gt; は&lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt; &lt;code&gt;KeyboardInterrupt&lt;/code&gt; &lt;/a&gt;例外に変換されます。</target>
        </trans-unit>
        <trans-unit id="b5a79026512537c574eb6c65db11730a5f08239f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#smtpd.SMTPChannel&quot;&gt;&lt;code&gt;SMTPChannel&lt;/code&gt;&lt;/a&gt; has the following instance variables:</source>
          <target state="translated">&lt;a href=&quot;#smtpd.SMTPChannel&quot;&gt; &lt;code&gt;SMTPChannel&lt;/code&gt; は、&lt;/a&gt;以下のインスタンス変数があります。</target>
        </trans-unit>
        <trans-unit id="0af2badecdbd4dbfe8d3ed8f8f0c1e55816e49bb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#smtpd.SMTPChannel&quot;&gt;&lt;code&gt;SMTPChannel&lt;/code&gt;&lt;/a&gt; operates by invoking methods named &lt;code&gt;smtp_&amp;lt;command&amp;gt;&lt;/code&gt; upon reception of a command line from the client. Built into the base &lt;a href=&quot;#smtpd.SMTPChannel&quot;&gt;&lt;code&gt;SMTPChannel&lt;/code&gt;&lt;/a&gt; class are methods for handling the following commands (and responding to them appropriately):</source>
          <target state="translated">&lt;a href=&quot;#smtpd.SMTPChannel&quot;&gt; &lt;code&gt;SMTPChannel&lt;/code&gt; は、&lt;/a&gt;名前のメソッドを呼び出すことによって動作 &lt;code&gt;smtp_&amp;lt;command&amp;gt;&lt;/code&gt; クライアントからのコマンドラインの受信時を。基本の&lt;a href=&quot;#smtpd.SMTPChannel&quot;&gt; &lt;code&gt;SMTPChannel&lt;/code&gt; &lt;/a&gt;クラスには、次のコマンドを処理する（および適切に応答する）メソッドが組み込まれています。</target>
        </trans-unit>
        <trans-unit id="c248d381a6387f2e58305c651544e1788fd34391" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#smtplib.SMTP&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; class supports the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. When used like this, the SMTP &lt;code&gt;QUIT&lt;/code&gt; command is issued automatically when the &lt;code&gt;with&lt;/code&gt; statement exits. E.g.:</source>
          <target state="translated">&lt;a href=&quot;#smtplib.SMTP&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; の&lt;/a&gt;クラスはサポートし&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;声明。このように使用すると、SMTP &lt;code&gt;QUIT&lt;/code&gt; コマンドは、 &lt;code&gt;with&lt;/code&gt; ステートメントが終了したときに自動的に発行されます。例えば：</target>
        </trans-unit>
        <trans-unit id="7ba7227180d23083c63b7cd70e4416628bfdae8f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#socket.socket.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt; operation is also subject to the timeout setting, and in general it is recommended to call &lt;a href=&quot;#socket.socket.settimeout&quot;&gt;&lt;code&gt;settimeout()&lt;/code&gt;&lt;/a&gt; before calling &lt;a href=&quot;#socket.socket.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt; or pass a timeout parameter to &lt;a href=&quot;#socket.create_connection&quot;&gt;&lt;code&gt;create_connection()&lt;/code&gt;&lt;/a&gt;. However, the system network stack may also return a connection timeout error of its own regardless of any Python socket timeout setting.</source>
          <target state="translated">&lt;a href=&quot;#socket.socket.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt;動作もタイムアウト設定が適用され、そして一般的には、呼に推奨される&lt;a href=&quot;#socket.socket.settimeout&quot;&gt; &lt;code&gt;settimeout()&lt;/code&gt; &lt;/a&gt;を呼び出す前に&lt;a href=&quot;#socket.socket.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt;以上にタイムアウトパラメータを渡す&lt;a href=&quot;#socket.create_connection&quot;&gt; &lt;code&gt;create_connection()&lt;/code&gt; &lt;/a&gt;。ただし、システムネットワークスタックは、Pythonソケットのタイムアウト設定に関係なく、独自の接続タイムアウトエラーを返す場合もあります。</target>
        </trans-unit>
        <trans-unit id="1f34a3a52948310ee7b973bbd6b7593ee24a7e87" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#socket.socket.ioctl&quot;&gt;&lt;code&gt;ioctl()&lt;/code&gt;&lt;/a&gt; method is a limited interface to the WSAIoctl system interface. Please refer to the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms741621%28VS.85%29.aspx&quot;&gt;Win32 documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;a href=&quot;#socket.socket.ioctl&quot;&gt; &lt;code&gt;ioctl()&lt;/code&gt; &lt;/a&gt;メソッドは、WSAIoctlシステムインターフェースに限定インタフェースです。詳細については、&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms741621%28VS.85%29.aspx&quot;&gt;Win32のドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="0c9a0bec90b943d5adc4cadb9125116e6af7f717" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#socketserver.ForkingMixIn&quot;&gt;&lt;code&gt;ForkingMixIn&lt;/code&gt;&lt;/a&gt; class is used in the same way, except that the server will spawn a new process for each request. Available only on POSIX platforms that support &lt;a href=&quot;os#os.fork&quot;&gt;&lt;code&gt;fork()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#socketserver.ForkingMixIn&quot;&gt; &lt;code&gt;ForkingMixIn&lt;/code&gt; の&lt;/a&gt;クラスは、サーバは要求ごとに新しいプロセスを生成することを除いて、同じ方法で使用されています。&lt;a href=&quot;os#os.fork&quot;&gt; &lt;code&gt;fork()&lt;/code&gt; &lt;/a&gt;をサポートするPOSIXプラットフォームでのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="b22e3b3c0b3d428c1075294cae2728e7d78d57b6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt;&lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt;&lt;/a&gt; protocol configures the context for cert validation and hostname verification. &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;verify_mode&lt;/code&gt;&lt;/a&gt; is set to &lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt;&lt;code&gt;CERT_REQUIRED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLContext.check_hostname&quot;&gt;&lt;code&gt;check_hostname&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;. All other protocols create SSL contexts with insecure defaults.</source>
          <target state="translated">&lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt; &lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt; の&lt;/a&gt;プロトコルは、証明書の検証とホスト名の検証のためのコンテキストを設定します。&lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;verify_mode&lt;/code&gt; が&lt;/a&gt;に設定されている&lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt; &lt;code&gt;CERT_REQUIRED&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#ssl.SSLContext.check_hostname&quot;&gt; &lt;code&gt;check_hostname&lt;/code&gt; が&lt;/a&gt;に設定されている &lt;code&gt;True&lt;/code&gt; 。他のすべてのプロトコルは、安全でないデフォルトでSSLコンテキストを作成します。</target>
        </trans-unit>
        <trans-unit id="5470adc94cef770e82c8dc9da60579e42d5c3ef8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; object this SSL socket is tied to. If the SSL socket was created using the deprecated &lt;a href=&quot;#ssl.wrap_socket&quot;&gt;&lt;code&gt;wrap_socket()&lt;/code&gt;&lt;/a&gt; function (rather than &lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt;&lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt;&lt;/a&gt;), this is a custom context object created for this SSL socket.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt;オブジェクトは、このSSLソケットがに関連付けられています。SSLソケットが非推奨使用して作成された場合&lt;a href=&quot;#ssl.wrap_socket&quot;&gt; &lt;code&gt;wrap_socket()&lt;/code&gt; &lt;/a&gt;（というよりも機能&lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt; &lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt; &lt;/a&gt;）、これは、このSSLソケット用に作成したカスタムコンテキストオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="a6167917237eb99295fe6afdef07d22ea214c720" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ssl.SSLSession&quot;&gt;&lt;code&gt;SSLSession&lt;/code&gt;&lt;/a&gt; for this SSL connection. The session is available for client and server side sockets after the TLS handshake has been performed. For client sockets the session can be set before &lt;a href=&quot;#ssl.SSLSocket.do_handshake&quot;&gt;&lt;code&gt;do_handshake()&lt;/code&gt;&lt;/a&gt; has been called to reuse a session.</source>
          <target state="translated">このSSL接続の&lt;a href=&quot;#ssl.SSLSession&quot;&gt; &lt;code&gt;SSLSession&lt;/code&gt; &lt;/a&gt;。セッションは、TLSハンドシェイクが実行された後、クライアントおよびサーバー側のソケットで使用できます。クライアントソケットの場合、セッションを再利用するために&lt;a href=&quot;#ssl.SSLSocket.do_handshake&quot;&gt; &lt;code&gt;do_handshake()&lt;/code&gt; &lt;/a&gt;が呼び出される前にセッションを設定できます。</target>
        </trans-unit>
        <trans-unit id="5bcd0b01f83837796f08fb415d94353728ad5dc5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ssl.SSLSocket.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLSocket.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; methods are the low-level methods that read and write unencrypted, application-level data and decrypt/encrypt it to encrypted, wire-level data. These methods require an active SSL connection, i.e. the handshake was completed and &lt;a href=&quot;#ssl.SSLSocket.unwrap&quot;&gt;&lt;code&gt;SSLSocket.unwrap()&lt;/code&gt;&lt;/a&gt; was not called.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLSocket.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#ssl.SSLSocket.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; &lt;/a&gt;メソッドは、暗号化/復号化は暗号化、ワイヤーレベルのデータに、読み出しおよび書き込み低レベルの方法が暗号化されていないアプリケーションレベルのデータとされています。これらのメソッドにはアクティブなSSL接続が必要です。つまり、ハンドシェイクが完了し、&lt;a href=&quot;#ssl.SSLSocket.unwrap&quot;&gt; &lt;code&gt;SSLSocket.unwrap()&lt;/code&gt; &lt;/a&gt;が呼び出されませんでした。</target>
        </trans-unit>
        <trans-unit id="1f53d2eee18de9c0c4875c339dfa8b9bce47a924" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#str.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; method should be used only if you need to know the position of &lt;em&gt;sub&lt;/em&gt;. To check if &lt;em&gt;sub&lt;/em&gt; is a substring or not, use the &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator:</source>
          <target state="translated">&lt;a href=&quot;#str.find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt;メソッドを使用すると、の位置を知る必要がある場合にのみ使用されるべき&lt;em&gt;サブ&lt;/em&gt;。&lt;em&gt;sub&lt;/em&gt;が部分文字列かどうかを確認するには、&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;演算子を使用します。</target>
        </trans-unit>
        <trans-unit id="73c06bca828d67bdfb43cc865a64d21c1502ae10" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#string.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; class has the following public methods:</source>
          <target state="translated">&lt;a href=&quot;#string.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;クラスには、次のパブリックメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="b720e60f05b2d504c18bd6025532017adbb42ca5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#subprocess.STARTUPINFO&quot;&gt;&lt;code&gt;STARTUPINFO&lt;/code&gt;&lt;/a&gt; class and following constants are only available on Windows.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.STARTUPINFO&quot;&gt; &lt;code&gt;STARTUPINFO&lt;/code&gt; の&lt;/a&gt;クラスと次の定数は、Windows上でのみ使用可能です。</target>
        </trans-unit>
        <trans-unit id="d55c54994cff722fca955da59c89d7d333ea0e56" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#subprocess.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; function was added in Python 3.5; if you need to retain compatibility with older versions, see the &lt;a href=&quot;#call-function-trio&quot;&gt;Older high-level API&lt;/a&gt; section.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;関数は、Pythonの3.5で追加されました。古いバージョンとの互換性を維持する必要がある場合は、&lt;a href=&quot;#call-function-trio&quot;&gt;古い高レベルAPI&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="30fbbed09a97b3cd59b7f8953724c13a4c63dd4c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#sys.unraisablehook&quot;&gt;&lt;code&gt;sys.unraisablehook()&lt;/code&gt;&lt;/a&gt; function handles unraisable exceptions and the &lt;a href=&quot;threading#threading.excepthook&quot;&gt;&lt;code&gt;threading.excepthook()&lt;/code&gt;&lt;/a&gt; function handles exception raised by &lt;a href=&quot;threading#threading.Thread.run&quot;&gt;&lt;code&gt;threading.Thread.run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#sys.unraisablehook&quot;&gt; &lt;code&gt;sys.unraisablehook()&lt;/code&gt; &lt;/a&gt;関数ハンドルunraisable例外と&lt;a href=&quot;threading#threading.excepthook&quot;&gt; &lt;code&gt;threading.excepthook()&lt;/code&gt; &lt;/a&gt;が提起した関数ハンドル例外&lt;a href=&quot;threading#threading.Thread.run&quot;&gt; &lt;code&gt;threading.Thread.run()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d3a0057fe0fb71f61b6c145a72bca3f56f585507" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt; object provides an interface to a tar archive. A tar archive is a sequence of blocks. An archive member (a stored file) is made up of a header block followed by data blocks. It is possible to store a file in a tar archive several times. Each archive member is represented by a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object, see &lt;a href=&quot;#tarinfo-objects&quot;&gt;TarInfo Objects&lt;/a&gt; for details.</source>
          <target state="translated">&lt;a href=&quot;#tarfile.TarFile&quot;&gt; &lt;code&gt;TarFile&lt;/code&gt; &lt;/a&gt;オブジェクトは、tarアーカイブへのインターフェースを提供します。tarアーカイブは、一連のブロックです。アーカイブメンバー（保存されたファイル）は、ヘッダーブロックとそれに続くデータブロックで構成されます。ファイルをtarアーカイブに複数回保存することが可能です。各アーカイブメンバーは、&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;オブジェクトで表されます。詳細については、&lt;a href=&quot;#tarinfo-objects&quot;&gt;TarInfoオブジェクト&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="97a64804b61284aa185a7e81cd4b409ab490a7f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tarfile.TarFile.extract&quot;&gt;&lt;code&gt;extract()&lt;/code&gt;&lt;/a&gt; method does not take care of several extraction issues. In most cases you should consider using the &lt;a href=&quot;#tarfile.TarFile.extractall&quot;&gt;&lt;code&gt;extractall()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#tarfile.TarFile.extract&quot;&gt; &lt;code&gt;extract()&lt;/code&gt; &lt;/a&gt;メソッドには、いくつかの抽出の問題の世話をしません。ほとんどの場合、&lt;a href=&quot;#tarfile.TarFile.extractall&quot;&gt; &lt;code&gt;extractall()&lt;/code&gt; &lt;/a&gt;メソッドの使用を検討する必要があります。</target>
        </trans-unit>
        <trans-unit id="9cfe3269d37c7bc235b57f8a026ae88957a0f7f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt; constructor accepts a number of optional keyword arguments. Each keyword argument corresponds to an instance attribute, so for example</source>
          <target state="translated">&lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt;コンストラクタはオプションのキーワード引数を受け付けます。各キーワード引数はインスタンス属性に対応しているため、たとえば</target>
        </trans-unit>
        <trans-unit id="7703bb87af59c734834b856195ac87e519ac6ee2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt; instance attributes (and keyword arguments to the constructor) are as follows:</source>
          <target state="translated">&lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt;インスタンス属性（とコンストラクタのキーワード引数）は以下のとおりです。</target>
        </trans-unit>
        <trans-unit id="33361bdf206a24520f829bae7a81a1dc0d37aa21" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#threading.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; method wakes up one of the threads waiting for the condition variable, if any are waiting. The &lt;a href=&quot;#threading.Condition.notify_all&quot;&gt;&lt;code&gt;notify_all()&lt;/code&gt;&lt;/a&gt; method wakes up all threads waiting for the condition variable.</source>
          <target state="translated">&lt;a href=&quot;#threading.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;いずれかが待っている場合、メソッドは、条件変数を待っているスレッドのいずれかをウェイクアップ。&lt;a href=&quot;#threading.Condition.notify_all&quot;&gt; &lt;code&gt;notify_all()&lt;/code&gt; &lt;/a&gt;メソッドは、条件変数を待っている全てのスレッドをウェイクアップします。</target>
        </trans-unit>
        <trans-unit id="70fa13c482f98185f2eb2a33d30687c5053e2d32" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#threading.Thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; class represents an activity that is run in a separate thread of control. There are two ways to specify the activity: by passing a callable object to the constructor, or by overriding the &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method in a subclass. No other methods (except for the constructor) should be overridden in a subclass. In other words, &lt;em&gt;only&lt;/em&gt; override the &lt;code&gt;__init__()&lt;/code&gt; and &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; methods of this class.</source>
          <target state="translated">&lt;a href=&quot;#threading.Thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt;クラスは、コントロールの別のスレッドで実行されるアクティビティを表します。アクティビティを指定するには、2つの方法があります。1つは呼び出し可能なオブジェクトをコンストラクターに渡す方法、もう1つはサブクラスの&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッドをオーバーライドする方法です。他のメソッド（コンストラクターを除く）をサブクラスでオーバーライドしないでください。つまり、このクラスの &lt;code&gt;__init__()&lt;/code&gt; および&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;メソッド&lt;em&gt;のみを&lt;/em&gt;オーバーライドします。</target>
        </trans-unit>
        <trans-unit id="1c3b2617bcf43cb43eb39a08c7265bedcf6123a5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tkinter.Tcl&quot;&gt;&lt;code&gt;Tcl()&lt;/code&gt;&lt;/a&gt; function is a factory function which creates an object much like that created by the &lt;a href=&quot;#tkinter.Tk&quot;&gt;&lt;code&gt;Tk&lt;/code&gt;&lt;/a&gt; class, except that it does not initialize the Tk subsystem. This is most often useful when driving the Tcl interpreter in an environment where one doesn&amp;rsquo;t want to create extraneous toplevel windows, or where one cannot (such as Unix/Linux systems without an X server). An object created by the &lt;a href=&quot;#tkinter.Tcl&quot;&gt;&lt;code&gt;Tcl()&lt;/code&gt;&lt;/a&gt; object can have a Toplevel window created (and the Tk subsystem initialized) by calling its &lt;code&gt;loadtk()&lt;/code&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#tkinter.Tcl&quot;&gt; &lt;code&gt;Tcl()&lt;/code&gt; &lt;/a&gt;関数は、ずっとによって作成されたもののようなオブジェクトを作成するファクトリ関数である&lt;a href=&quot;#tkinter.Tk&quot;&gt; &lt;code&gt;Tk&lt;/code&gt; の&lt;/a&gt;それはTkのサブシステムを初期化しないことを除いて、クラス。これは、無関係なトップレベルウィンドウを作成したくない環境、または作成できない環境（XサーバーのないUnix / Linuxシステムなど）でTclインタープリターを駆動する場合に最も役立ちます。&lt;a href=&quot;#tkinter.Tcl&quot;&gt; &lt;code&gt;Tcl()&lt;/code&gt; &lt;/a&gt;オブジェクトによって作成されたオブジェクトは、その &lt;code&gt;loadtk()&lt;/code&gt; メソッドを呼び出すことによって、トップレベルウィンドウを作成（およびTkサブシステムを初期化）できます。</target>
        </trans-unit>
        <trans-unit id="a2c177dddb81e041c2f1178faa5fcee9f2675fe1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tkinter.Tk&quot;&gt;&lt;code&gt;Tk&lt;/code&gt;&lt;/a&gt; class is instantiated without arguments. This creates a toplevel widget of Tk which usually is the main window of an application. Each instance has its own associated Tcl interpreter.</source>
          <target state="translated">&lt;a href=&quot;#tkinter.Tk&quot;&gt; &lt;code&gt;Tk&lt;/code&gt; の&lt;/a&gt;クラスは引数なしでインスタンス化されます。これにより、通常アプリケーションのメインウィンドウであるTkのトップレベルウィジェットが作成されます。各インスタンスには、独自のTclインタープリターが関連付けられています。</target>
        </trans-unit>
        <trans-unit id="869c3855e73e73353ff5dfa55f6cc880f2540f3a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tkinter.Tk&quot;&gt;&lt;code&gt;Tk&lt;/code&gt;&lt;/a&gt; class is meant to be instantiated only once in an application. Application programmers need not instantiate one explicitly, the system creates one whenever any of the other classes are instantiated.</source>
          <target state="translated">&lt;a href=&quot;#tkinter.Tk&quot;&gt; &lt;code&gt;Tk&lt;/code&gt; の&lt;/a&gt;クラスは、アプリケーション内で一度だけインスタンス化されることを意味しています。アプリケーションプログラマは、明示的にインスタンス化する必要はありません。システムは、他のクラスのいずれかがインスタンス化されるたびに作成します。</target>
        </trans-unit>
        <trans-unit id="c3baf0bee1f8feca4f4af014435d6ef95a8f5af8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tkinter.tix.DirSelectBox&quot;&gt;&lt;code&gt;DirSelectBox&lt;/code&gt;&lt;/a&gt; is similar to the standard Motif(TM) directory-selection box. It is generally used for the user to choose a directory. DirSelectBox stores the directories mostly recently selected into a ComboBox widget so that they can be quickly selected again.</source>
          <target state="translated">&lt;a href=&quot;#tkinter.tix.DirSelectBox&quot;&gt; &lt;code&gt;DirSelectBox&lt;/code&gt; は&lt;/a&gt;標準Motif（TM）ディレクトリ選択ボックスに似ています。通常、ユーザーがディレクトリを選択するために使用されます。DirSelectBoxは、最近選択されたディレクトリをComboBoxウィジェットに格納して、すばやくすばやく選択できるようにします。</target>
        </trans-unit>
        <trans-unit id="427de85d6d015476411261c28cb3757d1cc9681b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tkinter.ttk.Treeview.focus&quot;&gt;&lt;code&gt;Treeview.focus()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#tkinter.ttk.Treeview.selection&quot;&gt;&lt;code&gt;Treeview.selection()&lt;/code&gt;&lt;/a&gt; methods can be used to determine the affected item or items.</source>
          <target state="translated">&lt;a href=&quot;#tkinter.ttk.Treeview.focus&quot;&gt; &lt;code&gt;Treeview.focus()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#tkinter.ttk.Treeview.selection&quot;&gt; &lt;code&gt;Treeview.selection()&lt;/code&gt; &lt;/a&gt;メソッドは、影響を受けた項目を決定するために用いることができます。</target>
        </trans-unit>
        <trans-unit id="dd9a1fc943e550366e74685fe1223f3b26967c03" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tokenize.detect_encoding&quot;&gt;&lt;code&gt;detect_encoding()&lt;/code&gt;&lt;/a&gt; function is used to detect the encoding that should be used to decode a Python source file. It requires one argument, readline, in the same way as the &lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize()&lt;/code&gt;&lt;/a&gt; generator.</source>
          <target state="translated">&lt;a href=&quot;#tokenize.detect_encoding&quot;&gt; &lt;code&gt;detect_encoding()&lt;/code&gt; &lt;/a&gt;関数は、Pythonのソースファイルを復号するために使用されるべき符号化を検出するために使用されます。&lt;a href=&quot;#tokenize.tokenize&quot;&gt; &lt;code&gt;tokenize()&lt;/code&gt; &lt;/a&gt;ジェネレーターと同じ方法で、1つの引数readlineが必要です。</target>
        </trans-unit>
        <trans-unit id="64839bca3d7e3ea9f319d47b623da23adf764dc6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize()&lt;/code&gt;&lt;/a&gt; generator requires one argument, &lt;em&gt;readline&lt;/em&gt;, which must be a callable object which provides the same interface as the &lt;a href=&quot;io#io.IOBase.readline&quot;&gt;&lt;code&gt;io.IOBase.readline()&lt;/code&gt;&lt;/a&gt; method of file objects. Each call to the function should return one line of input as bytes.</source>
          <target state="translated">&lt;a href=&quot;#tokenize.tokenize&quot;&gt; &lt;code&gt;tokenize()&lt;/code&gt; &lt;/a&gt;ジェネレータは一つの引数、必要&lt;em&gt;readlineの&lt;/em&gt;と同じインタフェースを提供する呼び出し可能オブジェクトでなければならない、&lt;a href=&quot;io#io.IOBase.readline&quot;&gt; &lt;code&gt;io.IOBase.readline()&lt;/code&gt; &lt;/a&gt;ファイルオブジェクトの方法。関数を呼び出すたびに、1行の入力がバイトとして返されます。</target>
        </trans-unit>
        <trans-unit id="19a1fb9e075526300ca51090f919c11430914bb8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tracemalloc.Snapshot.traces&quot;&gt;&lt;code&gt;Snapshot.traces&lt;/code&gt;&lt;/a&gt; attribute is a sequence of &lt;a href=&quot;#tracemalloc.Trace&quot;&gt;&lt;code&gt;Trace&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;#tracemalloc.Snapshot.traces&quot;&gt; &lt;code&gt;Snapshot.traces&lt;/code&gt; の&lt;/a&gt;属性は、一連のある&lt;a href=&quot;#tracemalloc.Trace&quot;&gt; &lt;code&gt;Trace&lt;/code&gt; &lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="332c59a71d42e936b120ee2869f6034aae7ee7c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tracemalloc.Trace.traceback&quot;&gt;&lt;code&gt;Trace.traceback&lt;/code&gt;&lt;/a&gt; attribute is an instance of &lt;a href=&quot;#tracemalloc.Traceback&quot;&gt;&lt;code&gt;Traceback&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#tracemalloc.Trace.traceback&quot;&gt; &lt;code&gt;Trace.traceback&lt;/code&gt; の&lt;/a&gt;属性は、のインスタンスである&lt;a href=&quot;#tracemalloc.Traceback&quot;&gt; &lt;code&gt;Traceback&lt;/code&gt; &lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="9a6bad6d294ac9422d316c91034858a33f66eaed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tracemalloc.Traceback&quot;&gt;&lt;code&gt;Traceback&lt;/code&gt;&lt;/a&gt; class is a sequence of &lt;a href=&quot;#tracemalloc.Frame&quot;&gt;&lt;code&gt;Frame&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;#tracemalloc.Traceback&quot;&gt; &lt;code&gt;Traceback&lt;/code&gt; &lt;/a&gt;クラスは、一連のある&lt;a href=&quot;#tracemalloc.Frame&quot;&gt; &lt;code&gt;Frame&lt;/code&gt; &lt;/a&gt;のインスタンス。</target>
        </trans-unit>
        <trans-unit id="f3406051299b4b3da8e9e48c0ce7606278d24f47" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tracemalloc.take_snapshot&quot;&gt;&lt;code&gt;take_snapshot()&lt;/code&gt;&lt;/a&gt; function creates a snapshot instance.</source>
          <target state="translated">&lt;a href=&quot;#tracemalloc.take_snapshot&quot;&gt; &lt;code&gt;take_snapshot()&lt;/code&gt; &lt;/a&gt;関数は、スナップショット・インスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="84c2a6d4ca49213209ef75d3df2f3a2fd2b30c47" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#transports&quot;&gt;Transports&lt;/a&gt; section documents asyncio &lt;a href=&quot;#asyncio.BaseTransport&quot;&gt;&lt;code&gt;BaseTransport&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.ReadTransport&quot;&gt;&lt;code&gt;ReadTransport&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.WriteTransport&quot;&gt;&lt;code&gt;WriteTransport&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.Transport&quot;&gt;&lt;code&gt;Transport&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.DatagramTransport&quot;&gt;&lt;code&gt;DatagramTransport&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#asyncio.SubprocessTransport&quot;&gt;&lt;code&gt;SubprocessTransport&lt;/code&gt;&lt;/a&gt; classes.</source>
          <target state="translated">&lt;a href=&quot;#transports&quot;&gt;トランスポート&lt;/a&gt; asyncioセクション文書&lt;a href=&quot;#asyncio.BaseTransport&quot;&gt; &lt;code&gt;BaseTransport&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#asyncio.ReadTransport&quot;&gt; &lt;code&gt;ReadTransport&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#asyncio.WriteTransport&quot;&gt; &lt;code&gt;WriteTransport&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#asyncio.Transport&quot;&gt; &lt;code&gt;Transport&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#asyncio.DatagramTransport&quot;&gt; &lt;code&gt;DatagramTransport&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#asyncio.SubprocessTransport&quot;&gt; &lt;code&gt;SubprocessTransport&lt;/code&gt; の&lt;/a&gt;クラス。</target>
        </trans-unit>
        <trans-unit id="45e6a04779a2aac298a7345925b878b31f2605be" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#turtle.Shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; class is used internally by the &lt;a href=&quot;#turtle.register_shape&quot;&gt;&lt;code&gt;register_shape()&lt;/code&gt;&lt;/a&gt; method in different ways. The application programmer has to deal with the Shape class &lt;em&gt;only&lt;/em&gt; when using compound shapes like shown above!</source>
          <target state="translated">&lt;a href=&quot;#turtle.Shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;クラスはによって内部的に使用され&lt;a href=&quot;#turtle.register_shape&quot;&gt; &lt;code&gt;register_shape()&lt;/code&gt; &lt;/a&gt;異なる方法で方法。アプリケーションプログラマは、上記のような複合シェイプを使用する場合に&lt;em&gt;のみ&lt;/em&gt;、Shapeクラスを処理する必要があります。</target>
        </trans-unit>
        <trans-unit id="405810328337c79336080d4bbff10bf81c77b04f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#turtle.TurtleScreen&quot;&gt;&lt;code&gt;TurtleScreen&lt;/code&gt;&lt;/a&gt; class defines graphics windows as a playground for the drawing turtles. Its constructor needs a &lt;code&gt;tkinter.Canvas&lt;/code&gt; or a &lt;a href=&quot;#turtle.ScrolledCanvas&quot;&gt;&lt;code&gt;ScrolledCanvas&lt;/code&gt;&lt;/a&gt; as argument. It should be used when &lt;a href=&quot;#module-turtle&quot;&gt;&lt;code&gt;turtle&lt;/code&gt;&lt;/a&gt; is used as part of some application.</source>
          <target state="translated">&lt;a href=&quot;#turtle.TurtleScreen&quot;&gt; &lt;code&gt;TurtleScreen&lt;/code&gt; の&lt;/a&gt;クラスは、描画カメのための遊び場としてのグラフィックス・ウィンドウを定義します。そのコンストラクタには、引数として &lt;code&gt;tkinter.Canvas&lt;/code&gt; または&lt;a href=&quot;#turtle.ScrolledCanvas&quot;&gt; &lt;code&gt;ScrolledCanvas&lt;/code&gt; &lt;/a&gt;が必要です。一部のアプリケーションの一部として&lt;a href=&quot;#module-turtle&quot;&gt; &lt;code&gt;turtle&lt;/code&gt; &lt;/a&gt;使用する場合に使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="5f7817a294561249109e0213cb886fb9a394f719" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#typing.Generic&quot;&gt;&lt;code&gt;Generic&lt;/code&gt;&lt;/a&gt; base class defines &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__class_getitem__&quot;&gt;&lt;code&gt;__class_getitem__()&lt;/code&gt;&lt;/a&gt; so that &lt;code&gt;LoggedVar[t]&lt;/code&gt; is valid as a type:</source>
          <target state="translated">&lt;a href=&quot;#typing.Generic&quot;&gt; &lt;code&gt;Generic&lt;/code&gt; &lt;/a&gt;基底クラス定義&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__class_getitem__&quot;&gt; &lt;code&gt;__class_getitem__()&lt;/code&gt; &lt;/a&gt;よう &lt;code&gt;LoggedVar[t]&lt;/code&gt; タイプとして有効です。</target>
        </trans-unit>
        <trans-unit id="bdbc7c7538faa9b8b179a5ae34651133e53b396a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; class provides several assert methods to check for and report failures. The following table lists the most commonly used methods (see the tables below for more assert methods):</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;クラスでは、障害のために、レポートをチェックするために、いくつかのassertメソッドを提供します。次の表に、最も一般的に使用されるメソッドを示します（assertメソッドの詳細については、以下の表を参照してください）。</target>
        </trans-unit>
        <trans-unit id="357849b93faca6354c3d4ac37300068296f06948" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt; method dispatches the equality check for objects of the same type to different type-specific methods. These methods are already implemented for most of the built-in types, but it&amp;rsquo;s also possible to register new methods using &lt;a href=&quot;#unittest.TestCase.addTypeEqualityFunc&quot;&gt;&lt;code&gt;addTypeEqualityFunc()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; &lt;/a&gt;メソッドは、異なるタイプの固有の方法と同じタイプのオブジェクトの等価性チェックを送出します。これらのメソッドは、ほとんどの組み込み型に対してすでに実装されていますが、&lt;a href=&quot;#unittest.TestCase.addTypeEqualityFunc&quot;&gt; &lt;code&gt;addTypeEqualityFunc()&lt;/code&gt; &lt;/a&gt;を使用して新しいメソッドを登録することもできます。</target>
        </trans-unit>
        <trans-unit id="22637af39afc56e8ff037ad10c9f11d9befcbb2f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt;&lt;code&gt;tearDown()&lt;/code&gt;&lt;/a&gt; methods allow you to define instructions that will be executed before and after each test method. They are covered in more detail in the section &lt;a href=&quot;#organizing-tests&quot;&gt;Organizing test code&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt; &lt;code&gt;tearDown()&lt;/code&gt; &lt;/a&gt;メソッドを使用すると、各テストメソッドの前と後に実行される指示を定義することができます。これらについては、「&lt;a href=&quot;#organizing-tests&quot;&gt;テストコードの整理」&lt;/a&gt;のセクションで詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="dc1c6cadd0b004eb6997ad3ea10089824eac359a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#unittest.TestLoader&quot;&gt;&lt;code&gt;TestLoader&lt;/code&gt;&lt;/a&gt; class is used to create test suites from classes and modules. Normally, there is no need to create an instance of this class; the &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; module provides an instance that can be shared as &lt;a href=&quot;#unittest.defaultTestLoader&quot;&gt;&lt;code&gt;unittest.defaultTestLoader&lt;/code&gt;&lt;/a&gt;. Using a subclass or instance, however, allows customization of some configurable properties.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestLoader&quot;&gt; &lt;code&gt;TestLoader&lt;/code&gt; の&lt;/a&gt;クラスは、クラスやモジュールからテストスイートを作成するために使用されます。通常、このクラスのインスタンスを作成する必要はありません。&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;モジュールは、unittest.defaultTestLoaderとして共有できるインスタンスを提供し&lt;a href=&quot;#unittest.defaultTestLoader&quot;&gt; &lt;code&gt;unittest.defaultTestLoader&lt;/code&gt; &lt;/a&gt;。ただし、サブクラスまたはインスタンスを使用すると、一部の構成可能なプロパティをカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="8501dc081aeb30c81ae92c0d0e04e0c41cb84669" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#unittest.mock.DEFAULT&quot;&gt;&lt;code&gt;DEFAULT&lt;/code&gt;&lt;/a&gt; object is a pre-created sentinel (actually &lt;code&gt;sentinel.DEFAULT&lt;/code&gt;). It can be used by &lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt;&lt;code&gt;side_effect&lt;/code&gt;&lt;/a&gt; functions to indicate that the normal return value should be used.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.DEFAULT&quot;&gt; &lt;code&gt;DEFAULT&lt;/code&gt; の&lt;/a&gt;オブジェクトは、事前に作成したセンチネル（実際には &lt;code&gt;sentinel.DEFAULT&lt;/code&gt; ）。通常の戻り値を使用する必要があることを示すために、&lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt; &lt;code&gt;side_effect&lt;/code&gt; &lt;/a&gt;関数で使用できます。</target>
        </trans-unit>
        <trans-unit id="bdcfd4dbf05f3ea1376b30902339d7b1d03f8370" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; classes have support for mocking magic methods. See &lt;a href=&quot;#magic-methods&quot;&gt;magic methods&lt;/a&gt; for the full details.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;クラスは、マジックメソッドのモックをサポートしています。詳細については、&lt;a href=&quot;#magic-methods&quot;&gt;魔法のメソッド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5e26f823852082cdcb5967e9b535492e0c1c671b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; decorator / context manager makes it easy to mock classes or objects in a module under test. The object you specify will be replaced with a mock (or other object) during the test and restored when the test ends:</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;デコレータ/コンテキストマネージャは、テスト下のモジュールでモッククラスまたはオブジェクトに容易になります。指定したオブジェクトは、テスト中にモック（または他のオブジェクト）に置き換えられ、テストが終了すると復元されます。</target>
        </trans-unit>
        <trans-unit id="80a80259bfce823ad699c29717dead32645dea68" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; decorators makes it easy to temporarily replace classes in a particular module with a &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; object. By default &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; will create a &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; for you. You can specify an alternative class of &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; using the &lt;em&gt;new_callable&lt;/em&gt; argument to &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;デコレータは、それが簡単に一時的に特定のモジュール内のクラスを交換することができます&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;オブジェクト。デフォルトでは、&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;を作成します。&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; の&lt;/a&gt;&lt;em&gt; new_callable&lt;/em&gt;引数を使用して、&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;代替クラスを指定できます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="24ec41b5639b3ee7a1f0da7eb3430610465199f7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#urllib.request.FancyURLopener&quot;&gt;&lt;code&gt;FancyURLopener&lt;/code&gt;&lt;/a&gt; class offers one additional method that should be overloaded to provide the appropriate behavior:</source>
          <target state="translated">&lt;a href=&quot;#urllib.request.FancyURLopener&quot;&gt; &lt;code&gt;FancyURLopener&lt;/code&gt; &lt;/a&gt;適切な動作を提供するために、オーバーロードされなければならないクラスの申し出つの追加方法：</target>
        </trans-unit>
        <trans-unit id="19fc1b684f8e8cb021e12bf33c0c383c6acc7662" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt; class opens URLs via &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;s chained together. It manages the chaining of handlers, and recovery from errors.</source>
          <target state="translated">&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;クラスは、経由URLを開く&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;の連鎖一緒に。ハンドラーのチェーンとエラーからの回復を管理します。</target>
        </trans-unit>
        <trans-unit id="add80da97c67b3a9dd408516d121f455497e4bfb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt;&lt;code&gt;ProxyHandler&lt;/code&gt;&lt;/a&gt; will have a method &lt;code&gt;&amp;lt;protocol&amp;gt;_open()&lt;/code&gt; for every &lt;em&gt;protocol&lt;/em&gt; which has a proxy in the &lt;em&gt;proxies&lt;/em&gt; dictionary given in the constructor. The method will modify requests to go through the proxy, by calling &lt;code&gt;request.set_proxy()&lt;/code&gt;, and call the next handler in the chain to actually execute the protocol.</source>
          <target state="translated">&lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt; &lt;code&gt;ProxyHandler&lt;/code&gt; &lt;/a&gt;方法があります &lt;code&gt;&amp;lt;protocol&amp;gt;_open()&lt;/code&gt; すべてのための&lt;em&gt;プロトコル&lt;/em&gt;にプロキシ有する&lt;em&gt;プロキシを&lt;/em&gt;コンストラクタで指定された辞書を。このメソッドは、 &lt;code&gt;request.set_proxy()&lt;/code&gt; を呼び出してプロキシを通過するように要求を変更し、チェーン内の次のハンドラーを呼び出して実際にプロトコルを実行します。</target>
        </trans-unit>
        <trans-unit id="cdd99a9142cb9c6c14e02abc9d69ca1feaaea19d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#urllib.request.urlretrieve&quot;&gt;&lt;code&gt;urlretrieve()&lt;/code&gt;&lt;/a&gt; functions can cause arbitrarily long delays while waiting for a network connection to be set up. This means that it is difficult to build an interactive Web client using these functions without using threads.</source>
          <target state="translated">&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#urllib.request.urlretrieve&quot;&gt; &lt;code&gt;urlretrieve()&lt;/code&gt; &lt;/a&gt;に設定するネットワーク接続を待機している間の機能は、任意の長さの遅延を引き起こす可能性があります。つまり、スレッドを使用せずにこれらの関数を使用してインタラクティブなWebクライアントを構築することは困難です。</target>
        </trans-unit>
        <trans-unit id="ff68c745bc211e58099a0292f41586aed45a05a3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#venv.EnvBuilder&quot;&gt;&lt;code&gt;EnvBuilder&lt;/code&gt;&lt;/a&gt; class accepts the following keyword arguments on instantiation:</source>
          <target state="translated">&lt;a href=&quot;#venv.EnvBuilder&quot;&gt; &lt;code&gt;EnvBuilder&lt;/code&gt; の&lt;/a&gt;クラスはインスタンス化に次のキーワード引数を指定できます。</target>
        </trans-unit>
        <trans-unit id="59d615e0d009ca2a9c92a3001e2f4beae3b2a481" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#warnings.catch_warnings&quot;&gt;&lt;code&gt;catch_warnings&lt;/code&gt;&lt;/a&gt; manager works by replacing and then later restoring the module&amp;rsquo;s &lt;a href=&quot;#warnings.showwarning&quot;&gt;&lt;code&gt;showwarning()&lt;/code&gt;&lt;/a&gt; function and internal list of filter specifications. This means the context manager is modifying global state and therefore is not thread-safe.</source>
          <target state="translated">&lt;a href=&quot;#warnings.catch_warnings&quot;&gt; &lt;code&gt;catch_warnings&lt;/code&gt; の&lt;/a&gt;マネージャは交換し、後でモジュールの復元することによって動作&lt;a href=&quot;#warnings.showwarning&quot;&gt; &lt;code&gt;showwarning()&lt;/code&gt; &lt;/a&gt;関数およびフィルタ仕様の内部リストを。これは、コンテキストマネージャがグローバル状態を変更しているため、スレッドセーフではないことを意味します。</target>
        </trans-unit>
        <trans-unit id="5a863a8afee1888f928b0e90399ac841fb612398" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#wave.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function may be used in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. When the &lt;code&gt;with&lt;/code&gt; block completes, the &lt;a href=&quot;#wave.Wave_read.close&quot;&gt;&lt;code&gt;Wave_read.close()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#wave.Wave_write.close&quot;&gt;&lt;code&gt;Wave_write.close()&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">&lt;a href=&quot;#wave.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;関数がで使用することができる&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;声明。場合 &lt;code&gt;with&lt;/code&gt; ブロック完了、&lt;a href=&quot;#wave.Wave_read.close&quot;&gt; &lt;code&gt;Wave_read.close()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#wave.Wave_write.close&quot;&gt; &lt;code&gt;Wave_write.close()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="e4ee02f8ac6deb5da7b63ba5cd9b059abe2fc64c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#winreg.DeleteKeyEx&quot;&gt;&lt;code&gt;DeleteKeyEx()&lt;/code&gt;&lt;/a&gt; function is implemented with the RegDeleteKeyEx Windows API function, which is specific to 64-bit versions of Windows. See the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms724847%28VS.85%29.aspx&quot;&gt;RegDeleteKeyEx documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#winreg.DeleteKeyEx&quot;&gt; &lt;code&gt;DeleteKeyEx()&lt;/code&gt; &lt;/a&gt;関数は、Windowsの64ビットバージョンに固有のRegDeleteKeyEx Windows API関数を用いて実現されます。&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms724847%28VS.85%29.aspx&quot;&gt;RegDeleteKeyExのドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="399aa159694ce19221f03cc60c1a299edffa9d06" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#xdrlib.Unpacker&quot;&gt;&lt;code&gt;Unpacker&lt;/code&gt;&lt;/a&gt; class offers the following methods:</source>
          <target state="translated">&lt;a href=&quot;#xdrlib.Unpacker&quot;&gt; &lt;code&gt;Unpacker&lt;/code&gt; &lt;/a&gt;クラスには、次のメソッドを提供しています：</target>
        </trans-unit>
        <trans-unit id="76cf68ae7957b35e83f23ece2b3309062cdda7f7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#xml.dom.minidom.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt; function can take either a filename or an open file object.</source>
          <target state="translated">&lt;a href=&quot;#xml.dom.minidom.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; &lt;/a&gt;関数は、ファイル名または開かれたファイルオブジェクトのいずれかを取ることができます。</target>
        </trans-unit>
        <trans-unit id="42363806b6749b6e566d7bb04cf5b64ac5fd77fa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#xml.etree.ElementTree.SubElement&quot;&gt;&lt;code&gt;SubElement()&lt;/code&gt;&lt;/a&gt; function also provides a convenient way to create new sub-elements for a given element:</source>
          <target state="translated">&lt;a href=&quot;#xml.etree.ElementTree.SubElement&quot;&gt; &lt;code&gt;SubElement()&lt;/code&gt; &lt;/a&gt;関数は、指定された要素の新しいサブ要素を作成するための便利な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="f5c03be79e189e48f1592d5b76ef8723131ebf44" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#xml.sax.SAXException&quot;&gt;&lt;code&gt;SAXException&lt;/code&gt;&lt;/a&gt; exception class supports the following methods:</source>
          <target state="translated">&lt;a href=&quot;#xml.sax.SAXException&quot;&gt; &lt;code&gt;SAXException&lt;/code&gt; のの&lt;/a&gt;例外クラスは以下のメソッドをサポートしています。</target>
        </trans-unit>
        <trans-unit id="b7f09a811b6f16f6e6b41e1749d0111bd5475969" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#xml.sax.xmlreader.XMLReader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; interface supports the following methods:</source>
          <target state="translated">&lt;a href=&quot;#xml.sax.xmlreader.XMLReader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; &lt;/a&gt;インタフェースには、次のメソッドをサポートしています。</target>
        </trans-unit>
        <trans-unit id="71db7881f16ee841e40c7459de9cb399a3551b6d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#xmlrpc.client.MultiCall&quot;&gt;&lt;code&gt;MultiCall&lt;/code&gt;&lt;/a&gt; object provides a way to encapsulate multiple calls to a remote server into a single request &lt;a href=&quot;#id6&quot; id=&quot;id5&quot;&gt;1&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#xmlrpc.client.MultiCall&quot;&gt; &lt;code&gt;MultiCall&lt;/code&gt; &lt;/a&gt;オブジェクトは、単一の要求にリモートサーバに複数の呼び出しをカプセル化する方法を提供&lt;a href=&quot;#id6&quot; id=&quot;id5&quot;&gt;1&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="622abcb4c5e3f0d1c6a6c9a81ff5668467677198" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#xmlrpc.server.CGIXMLRPCRequestHandler&quot;&gt;&lt;code&gt;CGIXMLRPCRequestHandler&lt;/code&gt;&lt;/a&gt; class can be used to handle XML-RPC requests sent to Python CGI scripts.</source>
          <target state="translated">&lt;a href=&quot;#xmlrpc.server.CGIXMLRPCRequestHandler&quot;&gt; &lt;code&gt;CGIXMLRPCRequestHandler&lt;/code&gt; の&lt;/a&gt;クラスは、PythonのCGIスクリプトに送信されたハンドルXML-RPCリクエストに使用することができます。</target>
        </trans-unit>
        <trans-unit id="95f80fe9bc84ab8e564acf727e1d0660cdf38213" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#xmlrpc.server.DocCGIXMLRPCRequestHandler&quot;&gt;&lt;code&gt;DocCGIXMLRPCRequestHandler&lt;/code&gt;&lt;/a&gt; class is derived from &lt;a href=&quot;#xmlrpc.server.CGIXMLRPCRequestHandler&quot;&gt;&lt;code&gt;CGIXMLRPCRequestHandler&lt;/code&gt;&lt;/a&gt; and provides a means of creating self-documenting, XML-RPC CGI scripts. HTTP POST requests are handled as XML-RPC method calls. HTTP GET requests are handled by generating pydoc-style HTML documentation. This allows a server to provide its own web-based documentation.</source>
          <target state="translated">&lt;a href=&quot;#xmlrpc.server.DocCGIXMLRPCRequestHandler&quot;&gt; &lt;code&gt;DocCGIXMLRPCRequestHandler&lt;/code&gt; の&lt;/a&gt;クラスから派生し&lt;a href=&quot;#xmlrpc.server.CGIXMLRPCRequestHandler&quot;&gt; &lt;code&gt;CGIXMLRPCRequestHandler&lt;/code&gt; &lt;/a&gt;と自己文書、XML-RPCのCGIスクリプトを作成する手段を提供します。HTTP POST要求は、XML-RPCメソッド呼び出しとして処理されます。HTTP GETリクエストは、pydocスタイルのHTMLドキュメントを生成することによって処理されます。これにより、サーバーは独自のWebベースのドキュメントを提供できます。</target>
        </trans-unit>
        <trans-unit id="12c0042da7248e1a56ffe3ff0e18f1d7d371d991" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#xmlrpc.server.DocXMLRPCServer&quot;&gt;&lt;code&gt;DocXMLRPCServer&lt;/code&gt;&lt;/a&gt; class is derived from &lt;a href=&quot;#xmlrpc.server.SimpleXMLRPCServer&quot;&gt;&lt;code&gt;SimpleXMLRPCServer&lt;/code&gt;&lt;/a&gt; and provides a means of creating self-documenting, stand alone XML-RPC servers. HTTP POST requests are handled as XML-RPC method calls. HTTP GET requests are handled by generating pydoc-style HTML documentation. This allows a server to provide its own web-based documentation.</source>
          <target state="translated">&lt;a href=&quot;#xmlrpc.server.DocXMLRPCServer&quot;&gt; &lt;code&gt;DocXMLRPCServer&lt;/code&gt; の&lt;/a&gt;クラスから派生している&lt;a href=&quot;#xmlrpc.server.SimpleXMLRPCServer&quot;&gt; &lt;code&gt;SimpleXMLRPCServer&lt;/code&gt; &lt;/a&gt;と自己文書を作成するための手段を提供し、単独のXML-RPCサーバをスタンド。HTTP POST要求は、XML-RPCメソッド呼び出しとして処理されます。HTTP GETリクエストは、pydocスタイルのHTMLドキュメントを生成することによって処理されます。これにより、サーバーは独自のWebベースのドキュメントを提供できます。</target>
        </trans-unit>
        <trans-unit id="17468b965845f5f1ed57aaffe567cc32c6433ece" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#xmlrpc.server.SimpleXMLRPCServer&quot;&gt;&lt;code&gt;SimpleXMLRPCServer&lt;/code&gt;&lt;/a&gt; class is based on &lt;a href=&quot;socketserver#socketserver.TCPServer&quot;&gt;&lt;code&gt;socketserver.TCPServer&lt;/code&gt;&lt;/a&gt; and provides a means of creating simple, stand alone XML-RPC servers.</source>
          <target state="translated">&lt;a href=&quot;#xmlrpc.server.SimpleXMLRPCServer&quot;&gt; &lt;code&gt;SimpleXMLRPCServer&lt;/code&gt; の&lt;/a&gt;クラスは、に基づいており&lt;a href=&quot;socketserver#socketserver.TCPServer&quot;&gt; &lt;code&gt;socketserver.TCPServer&lt;/code&gt; &lt;/a&gt;とシンプルを作成する手段を提供し、単独のXML-RPCサーバをスタンド。</target>
        </trans-unit>
        <trans-unit id="5346c90ac636426e0f2dec193ef68d35f72083a2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#zipfile.PyZipFile&quot;&gt;&lt;code&gt;PyZipFile&lt;/code&gt;&lt;/a&gt; constructor takes the same parameters as the &lt;a href=&quot;#zipfile.ZipFile&quot;&gt;&lt;code&gt;ZipFile&lt;/code&gt;&lt;/a&gt; constructor, and one additional parameter, &lt;em&gt;optimize&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;#zipfile.PyZipFile&quot;&gt; &lt;code&gt;PyZipFile&lt;/code&gt; の&lt;/a&gt;コンストラクタは、同じパラメータを取る&lt;a href=&quot;#zipfile.ZipFile&quot;&gt; &lt;code&gt;ZipFile&lt;/code&gt; &lt;/a&gt;コンストラクタ、および1つの追加のパラメータ、&lt;em&gt;最適化を&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="48674c8ee4e2fea87426b46d821d737e70e4528d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#zipfile.PyZipFile.writepy&quot;&gt;&lt;code&gt;writepy()&lt;/code&gt;&lt;/a&gt; method makes archives with file names like this:</source>
          <target state="translated">&lt;a href=&quot;#zipfile.PyZipFile.writepy&quot;&gt; &lt;code&gt;writepy()&lt;/code&gt; &lt;/a&gt;メソッドは、このようなファイル名でアーカイブを作ります：</target>
        </trans-unit>
        <trans-unit id="ed921ba78ac31d3ba4a15509e53132e71f4cceb4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#zipfile.ZipFile.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#zipfile.ZipFile.extract&quot;&gt;&lt;code&gt;extract()&lt;/code&gt;&lt;/a&gt; methods can take a filename or a &lt;a href=&quot;#zipfile.ZipInfo&quot;&gt;&lt;code&gt;ZipInfo&lt;/code&gt;&lt;/a&gt; object. You will appreciate this when trying to read a ZIP file that contains members with duplicate names.</source>
          <target state="translated">&lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#zipfile.ZipFile.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;及び&lt;a href=&quot;#zipfile.ZipFile.extract&quot;&gt; &lt;code&gt;extract()&lt;/code&gt; &lt;/a&gt;メソッドは、ファイル名またはかかることが&lt;a href=&quot;#zipfile.ZipInfo&quot;&gt; &lt;code&gt;ZipInfo&lt;/code&gt; &lt;/a&gt;オブジェクト。重複した名前のメンバーが含まれているZIPファイルを読み取ろうとすると、これに感謝します。</target>
        </trans-unit>
        <trans-unit id="385ef4a7dae3b567bb461e659f8acf4bb71f699a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#zipimport.zipimporter.archive&quot;&gt;&lt;code&gt;archive&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#zipimport.zipimporter.prefix&quot;&gt;&lt;code&gt;prefix&lt;/code&gt;&lt;/a&gt; attributes, when combined with a slash, equal the original &lt;em&gt;archivepath&lt;/em&gt; argument given to the &lt;a href=&quot;#zipimport.zipimporter&quot;&gt;&lt;code&gt;zipimporter&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;a href=&quot;#zipimport.zipimporter.archive&quot;&gt; &lt;code&gt;archive&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#zipimport.zipimporter.prefix&quot;&gt; &lt;code&gt;prefix&lt;/code&gt; &lt;/a&gt;スラッシュと組み合わせ属性は、元等しく&lt;em&gt;archivepathの&lt;/em&gt;に与えられた引数&lt;a href=&quot;#zipimport.zipimporter&quot;&gt; &lt;code&gt;zipimporter&lt;/code&gt; &lt;/a&gt;コンストラクタを。</target>
        </trans-unit>
        <trans-unit id="5ab66251f09f4901c71bf052d319006ae2f26849" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;array#module-array&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; module supports efficient storage of basic data types like 32-bit integers and IEEE754 double-precision floating values.</source>
          <target state="translated">&lt;a href=&quot;array#module-array&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt;モジュールは、32ビット整数とIEEE754倍精度浮動値のような基本的なデータ型の効率的な記憶をサポートします。</target>
        </trans-unit>
        <trans-unit id="7fab3709a4de46037f0d17afafd44aa66a4e53d2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio#module-asyncio&quot;&gt;&lt;code&gt;asyncio&lt;/code&gt;&lt;/a&gt; module is designed to be portable, but some platforms have subtle differences and limitations due to the platforms&amp;rsquo; underlying architecture and capabilities.</source>
          <target state="translated">&lt;a href=&quot;asyncio#module-asyncio&quot;&gt; &lt;code&gt;asyncio&lt;/code&gt; &lt;/a&gt;モジュールを移植できるように設計されていますが、いくつかのプラットフォームが原因プラットフォームの基盤となるアーキテクチャと機能に微妙な違いや制限があります。</target>
        </trans-unit>
        <trans-unit id="f0ca72df64b9d0808c1acdb7553cc5f4e1ad030c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio#module-asyncio&quot;&gt;&lt;code&gt;asyncio&lt;/code&gt;&lt;/a&gt; module supports &lt;a href=&quot;#ssl-nonblocking&quot;&gt;non-blocking SSL sockets&lt;/a&gt; and provides a higher level API. It polls for events using the &lt;a href=&quot;selectors#module-selectors&quot;&gt;&lt;code&gt;selectors&lt;/code&gt;&lt;/a&gt; module and handles &lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt;&lt;code&gt;SSLWantWriteError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt;&lt;code&gt;SSLWantReadError&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;exceptions#BlockingIOError&quot;&gt;&lt;code&gt;BlockingIOError&lt;/code&gt;&lt;/a&gt; exceptions. It runs the SSL handshake asynchronously as well.</source>
          <target state="translated">&lt;a href=&quot;asyncio#module-asyncio&quot;&gt; &lt;code&gt;asyncio&lt;/code&gt; &lt;/a&gt;モジュールをサポート&lt;a href=&quot;#ssl-nonblocking&quot;&gt;、非ブロッキングSSLソケットを&lt;/a&gt;、より高いレベルのAPIを提供します。&lt;a href=&quot;selectors#module-selectors&quot;&gt; &lt;code&gt;selectors&lt;/code&gt; &lt;/a&gt;モジュールを使用してイベントをポーリングし、&lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt; &lt;code&gt;SSLWantWriteError&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt; &lt;code&gt;SSLWantReadError&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;exceptions#BlockingIOError&quot;&gt; &lt;code&gt;BlockingIOError&lt;/code&gt; &lt;/a&gt;例外を処理します。SSLハンドシェイクも非同期で実行されます。</target>
        </trans-unit>
        <trans-unit id="388449a7ece27291eb76f144920ee0e139befa4a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-dev#asyncio-debug-mode&quot;&gt;debug mode of asyncio&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-dev#asyncio-debug-mode&quot;&gt;asyncio&lt;/a&gt;のデバッグモード。</target>
        </trans-unit>
        <trans-unit id="269ec5e7278f4c68c07dc0423317c0a42c97b603" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-dev#asyncio-multithreading&quot;&gt;Concurrency and multithreading in asyncio&lt;/a&gt; section.</source>
          <target state="translated">&lt;a href=&quot;asyncio-dev#asyncio-multithreading&quot;&gt;asyncio&lt;/a&gt;セクションでの並行処理とマルチスレッド。</target>
        </trans-unit>
        <trans-unit id="f6f1264da62220cbd3de89ae3749a348b0db15c3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-eventloop#asyncio-example-watch-fd&quot;&gt;watch a file descriptor for read events&lt;/a&gt; example uses the low-level &lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_reader&quot;&gt;&lt;code&gt;loop.add_reader()&lt;/code&gt;&lt;/a&gt; method to register an FD.</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio-example-watch-fd&quot;&gt;時計は、読み出しイベントのためのファイル記述子&lt;/a&gt;の例では、低レベルの使用&lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_reader&quot;&gt; &lt;code&gt;loop.add_reader()&lt;/code&gt; &lt;/a&gt; FDを登録する方法。</target>
        </trans-unit>
        <trans-unit id="04932ed7777f762e8938b825eb1d0532fcd37d8f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-eventloop#asyncio-example-watch-fd&quot;&gt;watch a file descriptor for read events&lt;/a&gt; example uses the low-level &lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_reader&quot;&gt;&lt;code&gt;loop.add_reader()&lt;/code&gt;&lt;/a&gt; method to watch a file descriptor.</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio-example-watch-fd&quot;&gt;読み取りイベントのファイル記述子&lt;/a&gt;の監視の例では、低レベルの&lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_reader&quot;&gt; &lt;code&gt;loop.add_reader()&lt;/code&gt; &lt;/a&gt;メソッドを使用してファイル記述子を監視しています。</target>
        </trans-unit>
        <trans-unit id="e03d070a4817aa0536e984c1c7295309a52d285f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_reader&quot;&gt;&lt;code&gt;loop.add_reader()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_writer&quot;&gt;&lt;code&gt;loop.add_writer()&lt;/code&gt;&lt;/a&gt; methods are not supported.</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_reader&quot;&gt; &lt;code&gt;loop.add_reader()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_writer&quot;&gt; &lt;code&gt;loop.add_writer()&lt;/code&gt; &lt;/a&gt;メソッドがサポートされていません。</target>
        </trans-unit>
        <trans-unit id="85a7b8ebbd28d502ad8092d4c90022d59420b313" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-eventloop#asyncio.loop.run_in_executor&quot;&gt;&lt;code&gt;loop.run_in_executor()&lt;/code&gt;&lt;/a&gt; method can be used with a &lt;a href=&quot;concurrent.futures#concurrent.futures.ThreadPoolExecutor&quot;&gt;&lt;code&gt;concurrent.futures.ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt; to execute blocking code in a different OS thread without blocking the OS thread that the event loop runs in.</source>
          <target state="translated">&lt;a href=&quot;asyncio-eventloop#asyncio.loop.run_in_executor&quot;&gt; &lt;code&gt;loop.run_in_executor()&lt;/code&gt; &lt;/a&gt;メソッドを用いて使用することができる&lt;a href=&quot;concurrent.futures#concurrent.futures.ThreadPoolExecutor&quot;&gt; &lt;code&gt;concurrent.futures.ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt;イベントループで実行されることをOSのスレッドをブロックすることなく、異なるOSのスレッドでブロッキングコードを実行します。</target>
        </trans-unit>
        <trans-unit id="e39552b2c33bb4965caf4401d681e139ecd60b45" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-policy#asyncio.AbstractEventLoopPolicy.set_child_watcher&quot;&gt;&lt;code&gt;policy.set_child_watcher()&lt;/code&gt;&lt;/a&gt; function is also not supported, as &lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; has a different mechanism to watch child processes.</source>
          <target state="translated">&lt;a href=&quot;asyncio-policy#asyncio.AbstractEventLoopPolicy.set_child_watcher&quot;&gt; &lt;code&gt;policy.set_child_watcher()&lt;/code&gt; &lt;/a&gt;としての機能もサポートされていない&lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt; &lt;code&gt;ProactorEventLoop&lt;/code&gt; が&lt;/a&gt;子プロセスを監視する別のメカニズムを持っています。</target>
        </trans-unit>
        <trans-unit id="0117effbf73dedbb4c08f9e6aa6bb84a360194f4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-protocol#asyncio-example-create-connection&quot;&gt;register an open socket to wait for data using a protocol&lt;/a&gt; example uses a low-level protocol and the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;asyncio-protocol#asyncio-example-create-connection&quot;&gt;プロトコルを使用してデータを待機するオープンソケット登録&lt;/a&gt;の例では、低レベルプロトコルと使用&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt;メソッドを。</target>
        </trans-unit>
        <trans-unit id="bdf0529b63d84eaad00de25e6995746687f10495" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-protocol#asyncio-example-tcp-echo-client-protocol&quot;&gt;TCP echo client protocol&lt;/a&gt; example uses the low-level &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;asyncio-protocol#asyncio-example-tcp-echo-client-protocol&quot;&gt;TCPエコークライアントプロトコル&lt;/a&gt;の例は、低レベルの使用&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt;メソッドを。</target>
        </trans-unit>
        <trans-unit id="69fda5584336079e986631f089241b677491bf9c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-protocol#asyncio-example-tcp-echo-server-protocol&quot;&gt;TCP echo server protocol&lt;/a&gt; example uses the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_server&quot;&gt;&lt;code&gt;loop.create_server()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;asyncio-protocol#asyncio-example-tcp-echo-server-protocol&quot;&gt;TCPエコーサーバプロトコル&lt;/a&gt;の例は、使用&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_server&quot;&gt; &lt;code&gt;loop.create_server()&lt;/code&gt; &lt;/a&gt;メソッドを。</target>
        </trans-unit>
        <trans-unit id="4855612a9a026751a928540ca2ac83567ab76bca" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-stream#asyncio-example-create-connection-streams&quot;&gt;register an open socket to wait for data using streams&lt;/a&gt; example uses high-level streams created by the &lt;a href=&quot;asyncio-stream#asyncio.open_connection&quot;&gt;&lt;code&gt;open_connection()&lt;/code&gt;&lt;/a&gt; function in a coroutine.</source>
          <target state="translated">&lt;a href=&quot;asyncio-stream#asyncio-example-create-connection-streams&quot;&gt;データストリームを使用するために待機するオープンソケットを登録する&lt;/a&gt;例により作成されたストリームハイレベル使用&lt;a href=&quot;asyncio-stream#asyncio.open_connection&quot;&gt; &lt;code&gt;open_connection()&lt;/code&gt; &lt;/a&gt;コルーチンに機能。</target>
        </trans-unit>
        <trans-unit id="5fa7c63c53753a42c8dec77606ff72631f73707e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-stream#asyncio-tcp-echo-client-streams&quot;&gt;TCP echo client using streams&lt;/a&gt; example uses the high-level &lt;a href=&quot;asyncio-stream#asyncio.open_connection&quot;&gt;&lt;code&gt;asyncio.open_connection()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;asyncio-stream#asyncio-tcp-echo-client-streams&quot;&gt;ストリームを使用してTCPエコークライアント&lt;/a&gt;の例では、高レベルの使用&lt;a href=&quot;asyncio-stream#asyncio.open_connection&quot;&gt; &lt;code&gt;asyncio.open_connection()&lt;/code&gt; &lt;/a&gt;関数。</target>
        </trans-unit>
        <trans-unit id="c4874f91fc60a76f94308f7d5d35b0d0415366fd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-stream#asyncio-tcp-echo-server-streams&quot;&gt;TCP echo server using streams&lt;/a&gt; example uses the high-level &lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt;&lt;code&gt;asyncio.start_server()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;asyncio-stream#asyncio-tcp-echo-server-streams&quot;&gt;ストリームを使用してTCPエコーサーバ&lt;/a&gt;の例は、高レベルの使用&lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt; &lt;code&gt;asyncio.start_server()&lt;/code&gt; &lt;/a&gt;関数。</target>
        </trans-unit>
        <trans-unit id="e70447010538ebf052cf5086fd5a5c51be44e9a6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-stream#asyncio.open_connection&quot;&gt;&lt;code&gt;open_connection()&lt;/code&gt;&lt;/a&gt; function is a high-level alternative API. It returns a pair of (&lt;a href=&quot;asyncio-stream#asyncio.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-stream#asyncio.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt;) that can be used directly in async/await code.</source>
          <target state="translated">&lt;a href=&quot;asyncio-stream#asyncio.open_connection&quot;&gt; &lt;code&gt;open_connection()&lt;/code&gt; &lt;/a&gt;関数は、高レベルの別のAPIです。非同期/ &lt;a href=&quot;asyncio-stream#asyncio.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;コードで直接使用できる（StreamReader、&lt;a href=&quot;asyncio-stream#asyncio.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;）のペアを返します。</target>
        </trans-unit>
        <trans-unit id="aba9db86440cb3768db85740b3f75e621d8282f7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt;&lt;code&gt;start_server()&lt;/code&gt;&lt;/a&gt; function is a higher-level alternative API that returns a pair of &lt;a href=&quot;asyncio-stream#asyncio.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-stream#asyncio.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; that can be used in an async/await code.</source>
          <target state="translated">&lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt; &lt;code&gt;start_server()&lt;/code&gt; &lt;/a&gt;関数は、より高いレベルの別のAPIであるリターンの一対&lt;a href=&quot;asyncio-stream#asyncio.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;asyncio-stream#asyncio.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; の&lt;/a&gt;非同期/のawaitコードに使用することができます。</target>
        </trans-unit>
        <trans-unit id="3b03b65ebfef3d0e0cf7e8d7c48142c7bd3ed8f2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-task#asyncio.sleep&quot;&gt;&lt;code&gt;asyncio.sleep()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;asyncio-task#asyncio.sleep&quot;&gt; &lt;code&gt;asyncio.sleep()&lt;/code&gt; &lt;/a&gt;関数。</target>
        </trans-unit>
        <trans-unit id="b052a492ced0457e8bdd97864405d6b419c03daa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;collections#module-collections&quot;&gt;&lt;code&gt;collections&lt;/code&gt;&lt;/a&gt; module has some concrete classes that derive from ABCs; these can, of course, be further derived. In addition, the &lt;a href=&quot;collections.abc#module-collections.abc&quot;&gt;&lt;code&gt;collections.abc&lt;/code&gt;&lt;/a&gt; submodule has some ABCs that can be used to test whether a class or instance provides a particular interface, for example, if it is hashable or if it is a mapping.</source>
          <target state="translated">&lt;a href=&quot;collections#module-collections&quot;&gt; &lt;code&gt;collections&lt;/code&gt; &lt;/a&gt;モジュールは、いろはから派生し、いくつかの具体的なクラスがあります。もちろん、これらはさらに派生させることができます。さらに、&lt;a href=&quot;collections.abc#module-collections.abc&quot;&gt; &lt;code&gt;collections.abc&lt;/code&gt; &lt;/a&gt;サブモジュールには、クラスまたはインスタンスが特定のインターフェースを提供するかどうかをテストするために使用できるABCがいくつかあります（例えば、ハッシュ可能か、マッピングか）。</target>
        </trans-unit>
        <trans-unit id="0c5e6186b5abd612a9a9b222bb05aec57b248739" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;copy#module-copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt; module uses this protocol for shallow and deep copying operations.</source>
          <target state="translated">&lt;a href=&quot;copy#module-copy&quot;&gt; &lt;code&gt;copy&lt;/code&gt; &lt;/a&gt;モジュールは浅いと深いコピー操作のためにこのプロトコルを使用しています。</target>
        </trans-unit>
        <trans-unit id="9bc670c86c2ecb0d326db3f2c349c930cae50785" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;dataclasses#module-dataclasses&quot;&gt;&lt;code&gt;dataclasses&lt;/code&gt;&lt;/a&gt; module provides a decorator and functions for automatically adding generated special methods to user-defined classes.</source>
          <target state="translated">&lt;a href=&quot;dataclasses#module-dataclasses&quot;&gt; &lt;code&gt;dataclasses&lt;/code&gt; &lt;/a&gt;モジュールが自動的にユーザ定義のクラスに生成された特別のメソッドを追加するためのデコレータと機能を提供します。</target>
        </trans-unit>
        <trans-unit id="f66ecab62e66fb68cc92b1e6b7ad01f3b29ba8a6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package provides a standard parser that understands most email document structures, including MIME documents. You can pass the parser a bytes, string or file object, and the parser will return to you the root &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; instance of the object structure. For simple, non-MIME messages the payload of this root object will likely be a string containing the text of the message. For MIME messages, the root object will return &lt;code&gt;True&lt;/code&gt; from its &lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; method, and the subparts can be accessed via the payload manipulation methods, such as &lt;a href=&quot;email.message#email.message.EmailMessage.get_body&quot;&gt;&lt;code&gt;get_body()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt;&lt;code&gt;iter_parts()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;email.message#email.message.EmailMessage.walk&quot;&gt;&lt;code&gt;walk()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;パッケージには、MIMEの文書を含め、ほとんどの電子メールの文書構造を、理解し、標準パーサを提供します。パーサーにバイト、文字列、またはファイルオブジェクトを渡すと、パーサーはオブジェクト構造のルートの&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;インスタンスを返します。単純な非MIMEメッセージの場合、このルートオブジェクトのペイロードは、メッセージのテキストを含む文字列になる可能性があります。 MIMEメッセージの場合、ルート・オブジェクトが返され &lt;code&gt;True&lt;/code&gt; のより&lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt;メソッド、およびサブパートのようなペイロード操作方法を介してアクセスすることができる&lt;a href=&quot;email.message#email.message.EmailMessage.get_body&quot;&gt; &lt;code&gt;get_body()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt; &lt;code&gt;iter_parts()&lt;/code&gt; &lt;/a&gt;、及び&lt;a href=&quot;email.message#email.message.EmailMessage.walk&quot;&gt; &lt;code&gt;walk()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6d65549da0a6ac50abbe17e6dbe3a7106056321e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package provides some convenient encoders in its &lt;code&gt;encoders&lt;/code&gt; module. These encoders are actually used by the &lt;a href=&quot;email.mime#email.mime.audio.MIMEAudio&quot;&gt;&lt;code&gt;MIMEAudio&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;email.mime#email.mime.image.MIMEImage&quot;&gt;&lt;code&gt;MIMEImage&lt;/code&gt;&lt;/a&gt; class constructors to provide default encodings. All encoder functions take exactly one argument, the message object to encode. They usually extract the payload, encode it, and reset the payload to this newly encoded value. They should also set the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header as appropriate.</source>
          <target state="translated">&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;パッケージには、その中にいくつかの便利なエンコーダを提供 &lt;code&gt;encoders&lt;/code&gt; モジュールを。これらのエンコーダーは、デフォルトのエンコーディングを提供するために、&lt;a href=&quot;email.mime#email.mime.audio.MIMEAudio&quot;&gt; &lt;code&gt;MIMEAudio&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;email.mime#email.mime.image.MIMEImage&quot;&gt; &lt;code&gt;MIMEImage&lt;/code&gt; &lt;/a&gt;クラスコンストラクターによって実際に使用されます。すべてのエンコーダー関数は、1つの引数（エンコードするメッセージオブジェクト）を取ります。彼らは通常、ペイロードを抽出してエンコードし、ペイロードをこの新しくエンコードされた値にリセットします。また、必要に応じて&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;ヘッダーを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="8de4e0a1545677ea0bebec40ff1e9c58b3f8edd3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package&amp;rsquo;s prime focus is the handling of email messages as described by the various email and MIME RFCs. However, the general format of email messages (a block of header fields each consisting of a name followed by a colon followed by a value, the whole block followed by a blank line and an arbitrary &amp;lsquo;body&amp;rsquo;), is a format that has found utility outside of the realm of email. Some of these uses conform fairly closely to the main email RFCs, some do not. Even when working with email, there are times when it is desirable to break strict compliance with the RFCs, such as generating emails that interoperate with email servers that do not themselves follow the standards, or that implement extensions you want to use in ways that violate the standards.</source>
          <target state="translated">&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;パッケージの主焦点は、さまざまな電子メールおよびMIME RFCで説明するように、電子メールメッセージの処理です。ただし、電子メールメッセージの一般的な形式（それぞれに名前、コロン、値が続くヘッダーフィールドのブロック、ブロック全体が空白行、任意の「本文」で構成されるヘッダーフィールドのブロック）は、次のような形式です。電子メールの領域外のユーティリティ。これらの使用の一部は、メインの電子メールRFCにかなり準拠していますが、準拠していないものもあります。電子メールを操作する場合でも、RFCへの厳密な準拠を破ることが望ましい場合があります。たとえば、標準に準拠していない電子メールサーバーと相互運用する電子メールを生成したり、違反する方法で使用したい拡張機能を実装したりします。標準。</target>
        </trans-unit>
        <trans-unit id="a50b634650fe68487172709d4f3225db627c42af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;functools#functools.cmp_to_key&quot;&gt;&lt;code&gt;functools.cmp_to_key()&lt;/code&gt;&lt;/a&gt; utility is available to convert a 2.x style &lt;em&gt;cmp&lt;/em&gt; function to a &lt;em&gt;key&lt;/em&gt; function.</source>
          <target state="translated">&lt;a href=&quot;functools#functools.cmp_to_key&quot;&gt; &lt;code&gt;functools.cmp_to_key()&lt;/code&gt; &lt;/a&gt;ユーティリティは、2.xのスタイルに変換するために利用可能である&lt;em&gt;CMP用&lt;/em&gt;に関数を&lt;em&gt;キー&lt;/em&gt;機能。</target>
        </trans-unit>
        <trans-unit id="cb3b71eeb6c10fe4e1063ddf86b43b1331b19dbf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http.cookiejar#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;http.cookiejar.CookieJar&lt;/code&gt;&lt;/a&gt; in which cookies are stored.</source>
          <target state="translated">&lt;a href=&quot;http.cookiejar#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;http.cookiejar.CookieJar&lt;/code&gt; &lt;/a&gt;クッキーが保存されています。</target>
        </trans-unit>
        <trans-unit id="c912b7d4aed5c4dd186c5942bf55dc89d7ded472" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://aiosmtpd.readthedocs.io/&quot;&gt;aiosmtpd&lt;/a&gt; package is a recommended replacement for this module. It is based on &lt;a href=&quot;asyncio#module-asyncio&quot;&gt;&lt;code&gt;asyncio&lt;/code&gt;&lt;/a&gt; and provides a more straightforward API. &lt;a href=&quot;#module-smtpd&quot;&gt;&lt;code&gt;smtpd&lt;/code&gt;&lt;/a&gt; should be considered deprecated.</source>
          <target state="translated">&lt;a href=&quot;http://aiosmtpd.readthedocs.io/&quot;&gt;aiosmtpdの&lt;/a&gt;パッケージには、このモジュールの推奨代替品です。これは&lt;a href=&quot;asyncio#module-asyncio&quot;&gt; &lt;code&gt;asyncio&lt;/code&gt; に&lt;/a&gt;基づいており、より簡単なAPIを提供します。&lt;a href=&quot;#module-smtpd&quot;&gt; &lt;code&gt;smtpd&lt;/code&gt; &lt;/a&gt;は非推奨と見なされるべきです。</target>
        </trans-unit>
        <trans-unit id="c1784bfb338b8f4b79d0d75b7910d3ad4a01c0e2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://code.activestate.com/recipes/579000/&quot;&gt;linspace recipe&lt;/a&gt; shows how to implement a lazy version of range suitable for floating point applications.</source>
          <target state="translated">&lt;a href=&quot;http://code.activestate.com/recipes/579000/&quot;&gt;linspaceレシピ&lt;/a&gt;点アプリケーションを浮動するのに適した範囲の遅延バージョンを実装する方法を示します。</target>
        </trans-unit>
        <trans-unit id="d300d77cc8d0556a45c8f3612ef4a50b041b117f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://python-pillow.org/&quot;&gt;Pillow&lt;/a&gt; package adds support for formats such as BMP, JPEG, TIFF, and WebP, among others.</source>
          <target state="translated">&lt;a href=&quot;http://python-pillow.org/&quot;&gt;枕の&lt;/a&gt;パッケージには、とりわけ、BMP、JPEG、TIFF、およびWEBP、などの形式のサポートを追加します。</target>
        </trans-unit>
        <trans-unit id="e9169c27758b9a12167014506c5416a5dfaf6c16" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tix.htm&quot;&gt;tix commands&lt;/a&gt; provide access to miscellaneous elements of &lt;code&gt;Tix&lt;/code&gt;&amp;rsquo;s internal state and the &lt;code&gt;Tix&lt;/code&gt; application context. Most of the information manipulated by these methods pertains to the application as a whole, or to a screen or display, rather than to a particular window.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tix.htm&quot;&gt;TIXコマンドは、&lt;/a&gt;その他の要素へのアクセス提供 &lt;code&gt;Tix&lt;/code&gt; の内部状態と &lt;code&gt;Tix&lt;/code&gt; アプリケーション・コンテキストを。これらのメソッドで操作される情報のほとんどは、特定のウィンドウではなく、アプリケーション全体、または画面やディスプレイに関連しています。</target>
        </trans-unit>
        <trans-unit id="2b788c78050dfd71c2443cbcfe38005d465da797" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixButtonBox.htm&quot;&gt;ButtonBox&lt;/a&gt; widget creates a box of buttons, such as is commonly used for &lt;code&gt;Ok Cancel&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixButtonBox.htm&quot;&gt;ButtonBox&lt;/a&gt;一般的に使用されるようなボタンのボックスを作成するウィジェット、 &lt;code&gt;Ok Cancel&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="86e1a883a18debb1e0837213b5b12c5d312026c3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixCheckList.htm&quot;&gt;CheckList&lt;/a&gt; widget displays a list of items to be selected by the user. CheckList acts similarly to the Tk checkbutton or radiobutton widgets, except it is capable of handling many more items than checkbuttons or radiobuttons.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixCheckList.htm&quot;&gt;チェックリストは&lt;/a&gt;、ユーザによって選択されるようにディスプレイにアイテムのリストをウィジェット。CheckListは、Tkチェックボタンまたはラジオボタンウィジェットと同様に機能しますが、チェックボタンまたはラジオボタンよりも多くの項目を処理できる点が異なります。</target>
        </trans-unit>
        <trans-unit id="603558cb202ba89c4a3bb58d8825ab5b57237ec8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixComboBox.htm&quot;&gt;ComboBox&lt;/a&gt; widget is similar to the combo box control in MS Windows. The user can select a choice by either typing in the entry subwidget or selecting from the listbox subwidget.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixComboBox.htm&quot;&gt;ComboBoxの&lt;/a&gt; MS Windowsのコンボボックスコントロールに似ているウィジェット。ユーザーは、エントリサブウィジェットを入力するか、リストボックスサブウィジェットから選択することにより、選択肢を選択できます。</target>
        </trans-unit>
        <trans-unit id="c037cfe619555da329d2d697abb192a7f9ee3bdf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixControl.htm&quot;&gt;Control&lt;/a&gt; widget is also known as the &lt;code&gt;SpinBox&lt;/code&gt; widget. The user can adjust the value by pressing the two arrow buttons or by entering the value directly into the entry. The new value will be checked against the user-defined upper and lower limits.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixControl.htm&quot;&gt;コントロール&lt;/a&gt;としても知られているウィジェット &lt;code&gt;SpinBox&lt;/code&gt; ウィジェット。ユーザーは、2つの矢印ボタンを押すか、エントリに直接値を入力して、値を調整できます。新しい値は、ユーザー定義の上限と下限に対してチェックされます。</target>
        </trans-unit>
        <trans-unit id="04acb7539b464cd9018f7470202ff0b3a41f2a21" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixDirList.htm&quot;&gt;DirList&lt;/a&gt; widget displays a list view of a directory, its previous directories and its sub-directories. The user can choose one of the directories displayed in the list or change to another directory.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixDirList.htm&quot;&gt;dirlistには、&lt;/a&gt;ディスプレイに、ディレクトリ、その前のディレクトリとそのサブディレクトリのリストビューウィジェット。ユーザーは、リストに表示されたディレクトリの1つを選択するか、別のディレクトリに変更できます。</target>
        </trans-unit>
        <trans-unit id="f1047d1e24d522d85fa0ed385c293f709e614880" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixDirSelectDialog.htm&quot;&gt;DirSelectDialog&lt;/a&gt; widget presents the directories in the file system in a dialog window. The user can use this dialog window to navigate through the file system to select the desired directory.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixDirSelectDialog.htm&quot;&gt;DirSelectDialogは、&lt;/a&gt;ダイアログウィンドウにプレゼント、ファイルシステム内のディレクトリをウィジェット。ユーザーはこのダイアログウィンドウを使用して、ファイルシステム内を移動し、目的のディレクトリを選択できます。</target>
        </trans-unit>
        <trans-unit id="7fde708622bcb6f1bd06532cf4cc9669bf75d05a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixDirTree.htm&quot;&gt;DirTree&lt;/a&gt; widget displays a tree view of a directory, its previous directories and its sub-directories. The user can choose one of the directories displayed in the list or change to another directory.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixDirTree.htm&quot;&gt;DirTreeは、&lt;/a&gt;ディスプレイに、ディレクトリ、その前のディレクトリとそのサブディレクトリのツリービューウィジェット。ユーザーは、リストに表示されたディレクトリの1つを選択するか、別のディレクトリに変更できます。</target>
        </trans-unit>
        <trans-unit id="d16650b193bc914d7c1b5ec60af4aeeb1c992cfb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixExFileSelectBox.htm&quot;&gt;ExFileSelectBox&lt;/a&gt; widget is usually embedded in a tixExFileSelectDialog widget. It provides a convenient method for the user to select files. The style of the &lt;a href=&quot;#tkinter.tix.ExFileSelectBox&quot;&gt;&lt;code&gt;ExFileSelectBox&lt;/code&gt;&lt;/a&gt; widget is very similar to the standard file dialog on MS Windows 3.1.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixExFileSelectBox.htm&quot;&gt;ExFileSelectBox&lt;/a&gt;通常tixExFileSelectDialogウィジェットに埋め込まれているウィジェット。これは、ユーザーがファイルを選択するための便利な方法を提供します。&lt;a href=&quot;#tkinter.tix.ExFileSelectBox&quot;&gt; &lt;code&gt;ExFileSelectBox&lt;/code&gt; &lt;/a&gt;ウィジェットのスタイルは、MS Windows 3.1の標準ファイルダイアログによく似ています。</target>
        </trans-unit>
        <trans-unit id="c9fbbdbd0dc3081d4631e705316075550a075986" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixFileEntry.htm&quot;&gt;FileEntry&lt;/a&gt; widget can be used to input a filename. The user can type in the filename manually. Alternatively, the user can press the button widget that sits next to the entry, which will bring up a file selection dialog.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixFileEntry.htm&quot;&gt;ファイルエントリは、&lt;/a&gt;ファイル名を入力するために使用することができますウィジェット。ユーザーは手動でファイル名を入力できます。または、ユーザーはエントリの横にあるボタンウィジェットを押すこともできます。これにより、ファイル選択ダイアログが表示されます。</target>
        </trans-unit>
        <trans-unit id="527939224dcc8dc15ed6dff487c130a43399497c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixFileSelectBox.htm&quot;&gt;FileSelectBox&lt;/a&gt; is similar to the standard Motif(TM) file-selection box. It is generally used for the user to choose a file. FileSelectBox stores the files mostly recently selected into a &lt;a href=&quot;#tkinter.tix.ComboBox&quot;&gt;&lt;code&gt;ComboBox&lt;/code&gt;&lt;/a&gt; widget so that they can be quickly selected again.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixFileSelectBox.htm&quot;&gt;FileSelectBoxは、&lt;/a&gt;標準のMotif（TM）ファイル選択ボックスに似ています。通常、ユーザーがファイルを選択するために使用されます。FileSelectBoxは、最近選択されたファイルを&lt;a href=&quot;#tkinter.tix.ComboBox&quot;&gt; &lt;code&gt;ComboBox&lt;/code&gt; &lt;/a&gt;ウィジェットに格納して、すばやくすばやく選択できるようにします。</target>
        </trans-unit>
        <trans-unit id="ab61a7e3e90519857cf6d7040c91b4f49f6e791d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixForm.htm&quot;&gt;Form&lt;/a&gt; geometry manager based on attachment rules for all Tk widgets.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixForm.htm&quot;&gt;フォームの&lt;/a&gt;すべてのTkウィジェット用アタッチメントルールに基づいてジオメトリマネージャ。</target>
        </trans-unit>
        <trans-unit id="5a8956c2a460398355b14f63db03a07548e237ca" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixHList.htm&quot;&gt;HList&lt;/a&gt; widget can be used to display any data that have a hierarchical structure, for example, file system directory trees. The list entries are indented and connected by branch lines according to their places in the hierarchy.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixHList.htm&quot;&gt;HList&lt;/a&gt;ウィジェットは、ファイルシステムのディレクトリツリー、例えば、階層構造を有している任意のデータを表示するために使用することができます。リストのエントリはインデントされ、階層内の場所に従って分岐線で接続されています。</target>
        </trans-unit>
        <trans-unit id="e6354f123568048b67a926ccd0cd7d72d7496d5c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixInputOnly.htm&quot;&gt;InputOnly&lt;/a&gt; widgets are to accept inputs from the user, which can be done with the &lt;code&gt;bind&lt;/code&gt; command (Unix only).</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixInputOnly.htm&quot;&gt;InputOnlyの&lt;/a&gt;ウィジェットがで行うことができ、ユーザからの入力を受け付けるようにしている &lt;code&gt;bind&lt;/code&gt; コマンド（UNIXのみ）。</target>
        </trans-unit>
        <trans-unit id="b0f5237f8198c76d42e5611f1189b4003b6e8249" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixLabelEntry.htm&quot;&gt;LabelEntry&lt;/a&gt; widget packages an entry widget and a label into one mega widget. It can be used to simplify the creation of &amp;ldquo;entry-form&amp;rdquo; type of interface.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixLabelEntry.htm&quot;&gt;LabelEntry&lt;/a&gt;エントリウィジェットとラベルを一つのメガウィジェットにまとめウィジェット。「入力フォーム」タイプのインターフェースの作成を簡素化するために使用できます。</target>
        </trans-unit>
        <trans-unit id="d3aea0a8cf0ed5d2a381d7f8313262712a00d6c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixLabelFrame.htm&quot;&gt;LabelFrame&lt;/a&gt; widget packages a frame widget and a label into one mega widget. To create widgets inside a LabelFrame widget, one creates the new widgets relative to the &lt;code&gt;frame&lt;/code&gt; subwidget and manage them inside the &lt;code&gt;frame&lt;/code&gt; subwidget.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixLabelFrame.htm&quot;&gt;LabelFrame&lt;/a&gt;フレームウィジェットとラベルを一つのメガウィジェットにまとめウィジェット。LabelFrameウィジェット内のウィジェットを作成するためには、に対する新しいウィジェット作成 &lt;code&gt;frame&lt;/code&gt; サブウィジェットをし、内部でそれらを管理 &lt;code&gt;frame&lt;/code&gt; サブウィジェット。</target>
        </trans-unit>
        <trans-unit id="7353a09d354c96f14d0973fb0e21bb9d2fa8dd0e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixListNoteBook.htm&quot;&gt;ListNoteBook&lt;/a&gt; widget is very similar to the &lt;code&gt;TixNoteBook&lt;/code&gt; widget: it can be used to display many windows in a limited space using a notebook metaphor. The notebook is divided into a stack of pages (windows). At one time only one of these pages can be shown. The user can navigate through these pages by choosing the name of the desired page in the &lt;code&gt;hlist&lt;/code&gt; subwidget.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixListNoteBook.htm&quot;&gt;ListNoteBook&lt;/a&gt;に非常によく似ているウィジェット &lt;code&gt;TixNoteBook&lt;/code&gt; はウィジェット：ノートのメタファを使って限られた空間に多くのウィンドウを表示するために使用することができます。ノートブックはページのスタック（ウィンドウ）に分割されます。一度に表示できるのは、これらのページの1つだけです。ユーザーは、 &lt;code&gt;hlist&lt;/code&gt; サブウィジェットで目的のページの名前を選択することにより、これらのページをナビゲートできます。</target>
        </trans-unit>
        <trans-unit id="b879094947bc5e75feb18accde29b2dcd3c95b44" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixMeter.htm&quot;&gt;Meter&lt;/a&gt; widget can be used to show the progress of a background job which may take a long time to execute.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixMeter.htm&quot;&gt;メーターは、&lt;/a&gt;実行に時間がかかることがあり、バックグラウンドジョブの進行状況を表示するために使用することができウィジェット。</target>
        </trans-unit>
        <trans-unit id="3b1884f8df17b41f26d089c22fbb18040c6f90ca" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixNoteBook.htm&quot;&gt;NoteBook&lt;/a&gt; widget can be used to display many windows in a limited space using a notebook metaphor. The notebook is divided into a stack of pages. At one time only one of these pages can be shown. The user can navigate through these pages by choosing the visual &amp;ldquo;tabs&amp;rdquo; at the top of the NoteBook widget.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixNoteBook.htm&quot;&gt;ノートブック&lt;/a&gt;、ノートのメタファを使って限られたスペースに多くのウィンドウを表示するために使用することができるウィジェット。ノートブックは、ページのスタックに分かれています。一度に表示できるのは、これらのページの1つだけです。ユーザーは、NoteBookウィジェットの上部にある視覚的な「タブ」を選択することにより、これらのページをナビゲートできます。</target>
        </trans-unit>
        <trans-unit id="4fa47245f999c16063fff0ba1cb1595d3932a354" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixOptionMenu.htm&quot;&gt;OptionMenu&lt;/a&gt; creates a menu button of options.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixOptionMenu.htm&quot;&gt;オプションメニューは、&lt;/a&gt;オプションのメニューボタンを作成します。</target>
        </trans-unit>
        <trans-unit id="50e74e732a22202361fcac63091277793c2028f2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixPanedWindow.htm&quot;&gt;PanedWindow&lt;/a&gt; widget allows the user to interactively manipulate the sizes of several panes. The panes can be arranged either vertically or horizontally. The user changes the sizes of the panes by dragging the resize handle between two panes.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixPanedWindow.htm&quot;&gt;区画ウィンドウ&lt;/a&gt;ウィジェットユーザーが対話的にいくつかのペインのサイズを操作することができます。ペインは垂直または水平に配置できます。ユーザーは、2つのペイン間でサイズ変更ハンドルをドラッグして、ペインのサイズを変更します。</target>
        </trans-unit>
        <trans-unit id="d01273c8f94acbb62bbb2a0d580e288dbff01b64" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixPopupMenu.htm&quot;&gt;PopupMenu&lt;/a&gt; widget can be used as a replacement of the &lt;code&gt;tk_popup&lt;/code&gt; command. The advantage of the &lt;code&gt;Tix&lt;/code&gt;&lt;a href=&quot;#tkinter.tix.PopupMenu&quot;&gt;&lt;code&gt;PopupMenu&lt;/code&gt;&lt;/a&gt; widget is it requires less application code to manipulate.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixPopupMenu.htm&quot;&gt;PopupMenuは、&lt;/a&gt;の代替として使用することができウィジェット &lt;code&gt;tk_popup&lt;/code&gt; のコマンド。 &lt;code&gt;Tix&lt;/code&gt; &lt;a href=&quot;#tkinter.tix.PopupMenu&quot;&gt; &lt;code&gt;PopupMenu&lt;/code&gt; &lt;/a&gt;ウィジェットの利点は、操作に必要なアプリケーションコードが少ないことです。</target>
        </trans-unit>
        <trans-unit id="86685b685f4f3022f75f6a8e5f8a260f97634653" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixSelect.htm&quot;&gt;Select&lt;/a&gt; widget is a container of button subwidgets. It can be used to provide radio-box or check-box style of selection options for the user.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixSelect.htm&quot;&gt;選択&lt;/a&gt;ウィジェットは、ボタンのサブウィジェットのコンテナです。これは、ラジオボックスまたはチェックボックススタイルの選択オプションをユーザーに提供するために使用できます。</target>
        </trans-unit>
        <trans-unit id="2f87617dead56f7c9ce2e3d900227d8e1e1d8545" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixStdButtonBox.htm&quot;&gt;StdButtonBox&lt;/a&gt; widget is a group of standard buttons for Motif-like dialog boxes.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixStdButtonBox.htm&quot;&gt;StdButtonBox&lt;/a&gt;モチーフのようなダイアログボックスのための標準的なボタンのグループであるウィジェット。</target>
        </trans-unit>
        <trans-unit id="36ae666d2c2ace8d201e3ab5211750075b3424e8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixTList.htm&quot;&gt;TList&lt;/a&gt; widget can be used to display data in a tabular format. The list entries of a &lt;a href=&quot;#tkinter.tix.TList&quot;&gt;&lt;code&gt;TList&lt;/code&gt;&lt;/a&gt; widget are similar to the entries in the Tk listbox widget. The main differences are (1) the &lt;a href=&quot;#tkinter.tix.TList&quot;&gt;&lt;code&gt;TList&lt;/code&gt;&lt;/a&gt; widget can display the list entries in a two dimensional format and (2) you can use graphical images as well as multiple colors and fonts for the list entries.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixTList.htm&quot;&gt;TListのは&lt;/a&gt;表形式で表示データに使用することができるウィジェット。リストエントリ&lt;a href=&quot;#tkinter.tix.TList&quot;&gt; &lt;code&gt;TList&lt;/code&gt; &lt;/a&gt; Tkのリストボックスウィジェットのエントリに似ているウィジェット。主な違いは、（1）&lt;a href=&quot;#tkinter.tix.TList&quot;&gt; &lt;code&gt;TList&lt;/code&gt; &lt;/a&gt;ウィジェットはリストエントリを2次元形式で表示できること、（2）グラフィックイメージ、およびリストエントリに複数の色とフォントを使用できることです。</target>
        </trans-unit>
        <trans-unit id="9f138f0ac33a15cc112a69fa280a186d5e9d3505" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixTree.htm&quot;&gt;Tree&lt;/a&gt; widget can be used to display hierarchical data in a tree form. The user can adjust the view of the tree by opening or closing parts of the tree.</source>
          <target state="translated">&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixTree.htm&quot;&gt;ツリーは、&lt;/a&gt;ツリー形式で階層データを表示するために使用することができるウィジェット。ユーザーは、ツリーの一部を開いたり閉じたりして、ツリーの表示を調整できます。</target>
        </trans-unit>
        <trans-unit id="b00b68144b0a7ccb966491d97590d5d1941b85a7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://code.activestate.com/recipes/577434/&quot;&gt;Nested Contexts recipe&lt;/a&gt; has options to control whether writes and other mutations apply only to the first mapping or to any mapping in the chain.</source>
          <target state="translated">&lt;a href=&quot;https://code.activestate.com/recipes/577434/&quot;&gt;ネストされたコンテキストのレシピは、&lt;/a&gt;書き込みや他の変異は、最初のマッピングやチェーン内のマッピングに適用されるかどうかを制御するオプションを持っています。</target>
        </trans-unit>
        <trans-unit id="366df768713cd6eb282ce460c0c95bf88b3b540c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-docstring&quot;&gt;docstring&lt;/a&gt; of the module. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">モジュールの&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-docstring&quot;&gt;ドキュメント文字列&lt;/a&gt;。デフォルトは &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0e3f1b0ff9c725f0fb7678b7b3cb4937a376eb68" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; which loaded the module. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;ローダー&lt;/a&gt;モジュールをロードしました。デフォルトは &lt;code&gt;None&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="87396fa33c5c1368bb55278c1b85eb1735ea8b77" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;em&gt;flags&lt;/em&gt; exposes the status of command line flags. The attributes are read only.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名前のタプル&lt;/a&gt;&lt;em&gt;フラグは&lt;/em&gt;コマンドラインフラグの状態を公開しています。属性は読み取り専用です。</target>
        </trans-unit>
        <trans-unit id="0ac1b83ed391c6537aaeee5ffb70049e9f1bee75" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-qualified-name&quot;&gt;qualified name&lt;/a&gt; of the class, function, method, descriptor, or generator instance.</source>
          <target state="translated">クラス、関数、メソッド、記述子、またはジェネレーターインスタンスの&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-qualified-name&quot;&gt;修飾名&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5a87f32ea5285eb1c52cf2503f70cc6587feb22e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; method, if defined, is used during creation of the Enum members; it is then replaced by Enum&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; which is used after class creation for lookup of existing members.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;メソッドが定義されている場合、列挙メンバーの作成時に使用されます。次に、クラスの作成後に既存のメンバーを検索するために使用されるEnumの&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;置き換えられます。</target>
        </trans-unit>
        <trans-unit id="f3c33e932c88b9c61c62b48968186a1c88162159" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement is syntactic sugar for this function.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;文は、この関数のシンタックスシュガーです。</target>
        </trans-unit>
        <trans-unit id="7e4b4ff99f1cb38fb0a5352172600bb59ef56737" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-m&quot;&gt;&lt;code&gt;-m&lt;/code&gt;&lt;/a&gt; option offering equivalent functionality from the command line.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-m&quot;&gt; &lt;code&gt;-m&lt;/code&gt; &lt;/a&gt;コマンドラインから同等の機能を提供するオプション。</target>
        </trans-unit>
        <trans-unit id="a7814f0bcc445d6ea051b404b0588a400412f9d0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONTRACEMALLOC&quot; id=&quot;index-2&quot;&gt;&lt;code&gt;PYTHONTRACEMALLOC&lt;/code&gt;&lt;/a&gt; environment variable (&lt;code&gt;PYTHONTRACEMALLOC=NFRAME&lt;/code&gt;) and the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;tracemalloc=NFRAME&lt;/code&gt; command line option can be used to start tracing at startup.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONTRACEMALLOC&quot; id=&quot;index-2&quot;&gt; &lt;code&gt;PYTHONTRACEMALLOC&lt;/code&gt; の&lt;/a&gt;環境変数（ &lt;code&gt;PYTHONTRACEMALLOC=NFRAME&lt;/code&gt; ）と&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;tracemalloc=NFRAME&lt;/code&gt; コマンドラインオプションは、起動時にトレースを開始するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="28a390a30a62ca1f5d0f41f5bdeaf8e424f3a223" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://en.wikipedia.org/wiki/Billion_laughs&quot;&gt;Billion Laughs&lt;/a&gt; attack &amp;ndash; also known as exponential entity expansion &amp;ndash; uses multiple levels of nested entities. Each entity refers to another entity several times, and the final entity definition contains a small string. The exponential expansion results in several gigabytes of text and consumes lots of memory and CPU time.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Billion_laughs&quot;&gt;億笑の&lt;/a&gt;も指数関数的エンティティ展開として知られている- -攻撃は、ネストされたエンティティの複数のレベルを使用しています。各エンティティは別のエンティティを数回参照し、最終的なエンティティ定義には小さな文字列が含まれています。指数関数的に拡張すると、数ギガバイトのテキストが生成され、大量のメモリとCPU時間を消費します。</target>
        </trans-unit>
        <trans-unit id="e7d2e0bc9e7c3fe6abdfea0d8f090df8932358cd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/enthought/codetools/blob/4.0.0/codetools/contexts/multi_context.py&quot;&gt;MultiContext class&lt;/a&gt; in the Enthought &lt;a href=&quot;https://github.com/enthought/codetools&quot;&gt;CodeTools package&lt;/a&gt; has options to support writing to any mapping in the chain.</source>
          <target state="translated">Enthought &lt;a href=&quot;https://github.com/enthought/codetools&quot;&gt;CodeToolsパッケージ&lt;/a&gt;の&lt;a href=&quot;https://github.com/enthought/codetools/blob/4.0.0/codetools/contexts/multi_context.py&quot;&gt;MultiContextクラス&lt;/a&gt;には、チェーン内の任意のマッピングへの書き込みをサポートするオプションがあります。</target>
        </trans-unit>
        <trans-unit id="c370b58e8da7033646d2a0e82dff131888172df1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Tools/demo/&quot;&gt;Tools/demo/&lt;/a&gt; directory in the Python source distribution contains some example programs using the curses bindings provided by this module.</source>
          <target state="translated">Pythonソースディストリビューションの&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Tools/demo/&quot;&gt;Tools / demo /&lt;/a&gt;ディレクトリには、このモジュールによって提供されるcursesバインディングを使用するいくつかのサンプルプログラムが含まれています。</target>
        </trans-unit>
        <trans-unit id="c68c52a2e707faa21d8b537706f88593db3e7b67" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://help.gnome.org/users/gnumeric/stable/gnumeric.html#gnumeric-function-SSMEDIAN&quot;&gt;SSMEDIAN&lt;/a&gt; function in the Gnome Gnumeric spreadsheet, including &lt;a href=&quot;https://mail.gnome.org/archives/gnumeric-list/2011-April/msg00018.html&quot;&gt;this discussion&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://mail.gnome.org/archives/gnumeric-list/2011-April/msg00018.html&quot;&gt;この説明&lt;/a&gt;を含むGnome Gnumericスプレッドシートの&lt;a href=&quot;https://help.gnome.org/users/gnumeric/stable/gnumeric.html#gnumeric-function-SSMEDIAN&quot;&gt;SSMEDIAN&lt;/a&gt;関数。</target>
        </trans-unit>
        <trans-unit id="3719a92f6bc634688a542f7f28587c9a13eaf643" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://requests.readthedocs.io/en/master/&quot;&gt;Requests package&lt;/a&gt; is recommended for a higher-level HTTP client interface.</source>
          <target state="translated">&lt;a href=&quot;https://requests.readthedocs.io/en/master/&quot;&gt;依頼パッケージは、&lt;/a&gt;より高いレベルのHTTPクライアントインターフェイスのために推奨されます。</target>
        </trans-unit>
        <trans-unit id="b063ff9485718a2e89faf0ab510e54940c874604" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://tools.ietf.org/html/rfc3548.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 3548&lt;/strong&gt;&lt;/a&gt; encodings are suitable for encoding binary data so that it can safely sent by email, used as parts of URLs, or included as part of an HTTP POST request. The encoding algorithm is not the same as the &lt;strong&gt;uuencode&lt;/strong&gt; program.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc3548.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 3548&lt;/strong&gt;&lt;/a&gt;エンコーディングは、それが安全にURLの一部として使用される、電子メールで送信、またはHTTP POSTリクエストの一部として含めることができるように、バイナリデータを符号化するのに適しています。エンコードアルゴリズムは、&lt;strong&gt;uuencode&lt;/strong&gt;プログラムと同じではありません。</target>
        </trans-unit>
        <trans-unit id="9420f9f109d018ebd955fab4fd92512492f54acd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;importlib#importlib.import_module&quot;&gt;&lt;code&gt;importlib.import_module()&lt;/code&gt;&lt;/a&gt; function</source>
          <target state="translated">&lt;a href=&quot;importlib#importlib.import_module&quot;&gt; &lt;code&gt;importlib.import_module()&lt;/code&gt; &lt;/a&gt;関数</target>
        </trans-unit>
        <trans-unit id="96cf8e8e3869ca40ea2511ede446ce1808bbd3b4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;io#io.BufferedIOBase.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; method of &lt;em&gt;stdout&lt;/em&gt; should write each chunk in full, like &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;stdout&lt;/em&gt;の&lt;a href=&quot;io#io.BufferedIOBase.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; &lt;/a&gt;メソッドは、&lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; の&lt;/a&gt;ように、各チャンクを完全に書き込む必要があります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c23ffc96778cd83371ca325ec9a280da044137ff" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method can be used to obtain the file descriptor associated with a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; when required. Note that using the file descriptor directly will bypass the file object methods, ignoring aspects such as internal buffering of data.</source>
          <target state="translated">&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;メソッドは、関連付けられたファイルディスクリプタ得るために使用することができる&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;ファイル・オブジェクトを&lt;/a&gt;必要とします。ファイル記述子を直接使用すると、ファイルオブジェクトメソッドがバイパスされ、データの内部バッファリングなどの側面が無視されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="399bd4ce685d281a7befd1de6af3e29f9430d945" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;json#module-json&quot;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt; module: a standard library module allowing JSON serialization and deserialization.</source>
          <target state="translated">&lt;a href=&quot;json#module-json&quot;&gt; &lt;code&gt;json&lt;/code&gt; &lt;/a&gt;モジュール：JSONのシリアライズとデシリアライズを許可する標準ライブラリモジュール。</target>
        </trans-unit>
        <trans-unit id="b423614dd427b120857806b9ad473895269343ba" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; serialization format is not guaranteed to be portable across Python versions. Because its primary job in life is to support &lt;code&gt;.pyc&lt;/code&gt; files, the Python implementers reserve the right to change the serialization format in non-backwards compatible ways should the need arise. The &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; serialization format is guaranteed to be backwards compatible across Python releases provided a compatible pickle protocol is chosen and pickling and unpickling code deals with Python 2 to Python 3 type differences if your data is crossing that unique breaking change language boundary.</source>
          <target state="translated">&lt;a href=&quot;marshal#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt;シリアライズフォーマットはPythonのバージョン間で移植できるように保証するものではありません。その主な仕事は &lt;code&gt;.pyc&lt;/code&gt; ファイルをサポートすることであるため、Pythonの実装者は、必要に応じて、下位互換性のない方法でシリアル化形式を変更する権利を留保します。&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;シリアライズフォーマットはPythonのリリース間の下位互換性が保証されては、あなたのデータは、そのユニークな破壊変更言語の境界を越えている場合は互換性のピクルスプロトコルはPython 3タイプの違いにはPython 2とコードのお得な情報を選択し、酸洗およびunpickle化されて提供しました。</target>
        </trans-unit>
        <trans-unit id="9a48d7f9092d5b73d9f57bc216ea762816cf68b1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module provides an alternate implementation of &lt;code&gt;environ&lt;/code&gt; which updates the environment on modification. Note also that updating &lt;a href=&quot;os#os.environ&quot;&gt;&lt;code&gt;os.environ&lt;/code&gt;&lt;/a&gt; will render this dictionary obsolete. Use of the &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module version of this is recommended over direct access to the &lt;a href=&quot;#module-posix&quot;&gt;&lt;code&gt;posix&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;モジュールの代替的な実装を提供 &lt;code&gt;environ&lt;/code&gt; 修飾に環境を更新します。&lt;a href=&quot;os#os.environ&quot;&gt; &lt;code&gt;os.environ&lt;/code&gt; &lt;/a&gt;を更新すると、このディクショナリが廃止されることにも注意してください。これの&lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;モジュールバージョンの使用は、&lt;a href=&quot;#module-posix&quot;&gt; &lt;code&gt;posix&lt;/code&gt; &lt;/a&gt;モジュールへの直接アクセスよりも推奨されます。</target>
        </trans-unit>
        <trans-unit id="f7b74ac0b4916b2a2815d16beac508a288819a90" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;os#os.O_TMPFILE&quot;&gt;&lt;code&gt;os.O_TMPFILE&lt;/code&gt;&lt;/a&gt; flag is used if it is available and works (Linux-specific, requires Linux kernel 3.11 or later).</source>
          <target state="translated">&lt;a href=&quot;os#os.O_TMPFILE&quot;&gt; &lt;code&gt;os.O_TMPFILE&lt;/code&gt; の&lt;/a&gt;それが利用可能と作品の場合はフラグを使用する（Linux特有の、Linuxは3.11以降のカーネルが必要です）。</target>
        </trans-unit>
        <trans-unit id="be53a0f028cc8f2f7cb574eaeda9d516422827b2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt; attribute will be &lt;code&gt;bytes&lt;/code&gt; if the &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;path&lt;/em&gt; argument is of type &lt;code&gt;bytes&lt;/code&gt; and &lt;code&gt;str&lt;/code&gt; otherwise. Use &lt;a href=&quot;#os.fsdecode&quot;&gt;&lt;code&gt;fsdecode()&lt;/code&gt;&lt;/a&gt; to decode byte filenames.</source>
          <target state="translated">&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;path&lt;/code&gt; &lt;/a&gt;属性は、あろう &lt;code&gt;bytes&lt;/code&gt; 場合&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;&lt;em&gt;パス&lt;/em&gt;引数は、型のある &lt;code&gt;bytes&lt;/code&gt; と &lt;code&gt;str&lt;/code&gt; さもなければ。バイトファイル名をデコードするには、&lt;a href=&quot;#os.fsdecode&quot;&gt; &lt;code&gt;fsdecode()&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="471dcc1abba4e4319f505be9780becb5d37241e8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;pathlib#module-pathlib&quot;&gt;&lt;code&gt;pathlib&lt;/code&gt;&lt;/a&gt; module offers high-level path objects.</source>
          <target state="translated">&lt;a href=&quot;pathlib#module-pathlib&quot;&gt; &lt;code&gt;pathlib&lt;/code&gt; の&lt;/a&gt;モジュールが提供するハイレベルのパスオブジェクトを。</target>
        </trans-unit>
        <trans-unit id="9241756174385f49d4dfffd6e60c0bbef34ded67" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;platform#module-platform&quot;&gt;&lt;code&gt;platform&lt;/code&gt;&lt;/a&gt; module provides detailed checks for the system&amp;rsquo;s identity.</source>
          <target state="translated">&lt;a href=&quot;platform#module-platform&quot;&gt; &lt;code&gt;platform&lt;/code&gt; &lt;/a&gt;モジュールは、システムのアイデンティティのための詳細なチェックを提供します。</target>
        </trans-unit>
        <trans-unit id="e3164e9402a163cd69e25ca9534f9c207636ddfc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;secrets#module-secrets&quot;&gt;&lt;code&gt;secrets&lt;/code&gt;&lt;/a&gt; module provides higher level functions. For an easy-to-use interface to the random number generator provided by your platform, please see &lt;a href=&quot;random#random.SystemRandom&quot;&gt;&lt;code&gt;random.SystemRandom&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;secrets#module-secrets&quot;&gt; &lt;code&gt;secrets&lt;/code&gt; &lt;/a&gt;モジュールは、より高いレベルの機能を提供します。プラットフォームが提供する乱数ジェネレーターへの使いやすいインターフェースについては、&lt;a href=&quot;random#random.SystemRandom&quot;&gt; &lt;code&gt;random.SystemRandom&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="79808356e012c04c25cfc73650f064d2eaca11f7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;selectors#module-selectors&quot;&gt;&lt;code&gt;selectors&lt;/code&gt;&lt;/a&gt; module allows high-level and efficient I/O multiplexing, built upon the &lt;a href=&quot;#module-select&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; module primitives. Users are encouraged to use the &lt;a href=&quot;selectors#module-selectors&quot;&gt;&lt;code&gt;selectors&lt;/code&gt;&lt;/a&gt; module instead, unless they want precise control over the OS-level primitives used.</source>
          <target state="translated">&lt;a href=&quot;selectors#module-selectors&quot;&gt; &lt;code&gt;selectors&lt;/code&gt; &lt;/a&gt;モジュールは、上に構築され、高レベルで効率的なI / O多重化、可能にする&lt;a href=&quot;#module-select&quot;&gt; &lt;code&gt;select&lt;/code&gt; &lt;/a&gt;モジュールプリミティブ。使用するOSレベルのプリミティブを正確に制御する必要がない限り、代わりに&lt;a href=&quot;selectors#module-selectors&quot;&gt; &lt;code&gt;selectors&lt;/code&gt; &lt;/a&gt;モジュールを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="49a28f80ab152e5e2358049c0893fe3c0b3a0dc6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;signal#module-signal&quot;&gt;&lt;code&gt;signal&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;signal#module-signal&quot;&gt; &lt;code&gt;signal&lt;/code&gt; &lt;/a&gt;モジュール。</target>
        </trans-unit>
        <trans-unit id="38effe416777378b22cda470a25dc6a7e848d01c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;site#module-site&quot;&gt;&lt;code&gt;site&lt;/code&gt;&lt;/a&gt; module (which is imported automatically during startup, except if the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt; command-line option is given) adds several constants to the built-in namespace. They are useful for the interactive interpreter shell and should not be used in programs.</source>
          <target state="translated">&lt;a href=&quot;site#module-site&quot;&gt; &lt;code&gt;site&lt;/code&gt; &lt;/a&gt;（場合を除いて、起動時に自動的にインポートされたモジュール&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt; &lt;code&gt;-S&lt;/code&gt; &lt;/a&gt;コマンドラインオプションが指定されている）は、組み込みの名前空間にいくつかの定数を追加します。これらは対話型インタープリターシェルに役立ち、プログラムでは使用しないでください。</target>
        </trans-unit>
        <trans-unit id="3ade11583d8fdf4059483f38abf928bd1432aba8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stdtypes#class.__mro__&quot;&gt;&lt;code&gt;__mro__&lt;/code&gt;&lt;/a&gt; attribute of the &lt;em&gt;object-or-type&lt;/em&gt; lists the method resolution search order used by both &lt;a href=&quot;#getattr&quot;&gt;&lt;code&gt;getattr()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt;. The attribute is dynamic and can change whenever the inheritance hierarchy is updated.</source>
          <target state="translated">&lt;em&gt;オブジェクトまたはタイプ&lt;/em&gt;の&lt;a href=&quot;stdtypes#class.__mro__&quot;&gt; &lt;code&gt;__mro__&lt;/code&gt; &lt;/a&gt;属性は、getattr &lt;a href=&quot;#getattr&quot;&gt; &lt;code&gt;getattr()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#super&quot;&gt; &lt;code&gt;super()&lt;/code&gt; の&lt;/a&gt;両方で使用されるメソッド解決の検索順序をリストします。属性は動的であり、継承階層が更新されるたびに変更できます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2d3d084e9d41e4f4c212d80200f0d53e8de5452d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; method and the &lt;a href=&quot;#string.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; class share the same syntax for format strings (although in the case of &lt;a href=&quot;#string.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt;, subclasses can define their own format string syntax). The syntax is related to that of &lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#f-strings&quot;&gt;formatted string literals&lt;/a&gt;, but there are differences.</source>
          <target state="translated">&lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;#string.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;（の場合がクラスは、書式文字列に対して同じ構文を共有する&lt;a href=&quot;#string.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;、サブクラスは独自のフォーマット文字列の構文を定義することができます）。構文は、&lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#f-strings&quot;&gt;フォーマットされた文字列リテラル&lt;/a&gt;の構文に関連していますが、違いがあります。</target>
        </trans-unit>
        <trans-unit id="16b93b46d811fc398b39ecaca2fce94e92de2773" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;subprocess#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; module provides more powerful facilities for spawning new processes and retrieving their results; using that module is preferable to using this function. See the &lt;a href=&quot;subprocess#subprocess-replacements&quot;&gt;Replacing Older Functions with the subprocess Module&lt;/a&gt; section in the &lt;a href=&quot;subprocess#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; documentation for some helpful recipes.</source>
          <target state="translated">&lt;a href=&quot;subprocess#module-subprocess&quot;&gt; &lt;code&gt;subprocess&lt;/code&gt; &lt;/a&gt;モジュールは、新しいプロセスを生成し、その結果を取得するためのより強力な機能を提供します。この関数を使用するよりも、そのモジュールを使用する方が適切です。いくつかの役立つレシピについては、&lt;a href=&quot;subprocess#module-subprocess&quot;&gt; &lt;code&gt;subprocess&lt;/code&gt; &lt;/a&gt;ドキュメントの「&lt;a href=&quot;subprocess#subprocess-replacements&quot;&gt;古い関数をサブプロセスモジュールで置き換える&lt;/a&gt;」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="02fda4db0686e8cf23f242cc65ce3efd8b28cefc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;text#textservices&quot;&gt;Text Processing Services&lt;/a&gt; section of the standard library covers a number of other modules that provide various text related utilities (including regular expression support in the &lt;a href=&quot;re#module-re&quot;&gt;&lt;code&gt;re&lt;/code&gt;&lt;/a&gt; module).</source>
          <target state="translated">標準ライブラリの&lt;a href=&quot;text#textservices&quot;&gt;テキスト処理サービス&lt;/a&gt;セクションは、さまざまなテキスト関連ユーティリティ（&lt;a href=&quot;re#module-re&quot;&gt; &lt;code&gt;re&lt;/code&gt; &lt;/a&gt;モジュールでの正規表現のサポートを含む）を提供する他の多くのモジュールをカバーしています。</target>
        </trans-unit>
        <trans-unit id="bb5820ab12ab63458bab2d4624fdd0e942a0e50e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;tokenize#tokenize.open&quot;&gt;&lt;code&gt;tokenize.open()&lt;/code&gt;&lt;/a&gt; function is used to open files. This function uses &lt;a href=&quot;tokenize#tokenize.detect_encoding&quot;&gt;&lt;code&gt;tokenize.detect_encoding()&lt;/code&gt;&lt;/a&gt; to get the encoding of the file; in the absence of an encoding token, the file encoding defaults to UTF-8.</source>
          <target state="translated">&lt;a href=&quot;tokenize#tokenize.open&quot;&gt; &lt;code&gt;tokenize.open()&lt;/code&gt; &lt;/a&gt;関数は、ファイルを開くために使用されます。この関数は、&lt;a href=&quot;tokenize#tokenize.detect_encoding&quot;&gt; &lt;code&gt;tokenize.detect_encoding()&lt;/code&gt; &lt;/a&gt;を使用してファイルのエンコーディングを取得します。エンコーディングトークンがない場合、ファイルエンコーディングはデフォルトでUTF-8になります。</target>
        </trans-unit>
        <trans-unit id="e3d58c07fec169dbcdb3df24325c1d256766749d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; cases generated by &lt;a href=&quot;#doctest.DocTestSuite&quot;&gt;&lt;code&gt;DocTestSuite()&lt;/code&gt;&lt;/a&gt; support the &lt;a href=&quot;#doctest.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt; method defined by &lt;a href=&quot;unittest#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;によって生成された場合&lt;a href=&quot;#doctest.DocTestSuite&quot;&gt; &lt;code&gt;DocTestSuite()&lt;/code&gt; が&lt;/a&gt;サポート&lt;a href=&quot;#doctest.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;によって定義されたメソッド&lt;a href=&quot;unittest#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c3e525132d5ae456f3d840eb956b446a76191a36" translate="yes" xml:space="preserve">
          <source>The &lt;code id=&quot;index-16&quot;&gt;TZ&lt;/code&gt; environment variable should contain no whitespace.</source>
          <target state="translated">&lt;code id=&quot;index-16&quot;&gt;TZ&lt;/code&gt; の環境変数には空白を含んではなりません。</target>
        </trans-unit>
        <trans-unit id="4df849fd3a6c6323909eb01638af5828a8b08ba7" translate="yes" xml:space="preserve">
          <source>The &lt;code id=&quot;index-4&quot;&gt;no_proxy&lt;/code&gt; environment variable can be used to specify hosts which shouldn&amp;rsquo;t be reached via proxy; if set, it should be a comma-separated list of hostname suffixes, optionally with &lt;code&gt;:port&lt;/code&gt; appended, for example &lt;code&gt;cern.ch,ncsa.uiuc.edu,some.host:8080&lt;/code&gt;.</source>
          <target state="translated">&lt;code id=&quot;index-4&quot;&gt;no_proxy&lt;/code&gt; の環境変数は、プロキシを介して到達すべきではないホストを指定するために使用することができます。設定する場合は、ホスト名サフィックスのコンマ区切りのリストで、必要に応じて &lt;code&gt;:port&lt;/code&gt; を追加する必要があります（例 &lt;code&gt;cern.ch,ncsa.uiuc.edu,some.host:8080&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="124717b2376ede57740fad89729551e596c6a01f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;%(prog)s&lt;/code&gt; format specifier is available to fill in the program name in your usage messages.</source>
          <target state="translated">&lt;code&gt;%(prog)s&lt;/code&gt; 書式指定子は、使用状況メッセージにプログラム名を記入することが可能です。</target>
        </trans-unit>
        <trans-unit id="a1e6968cbd74079cf51599969bef7c4705220d9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;%&lt;/code&gt; and &lt;code&gt;//&lt;/code&gt; operators implement the &lt;code&gt;remainder&lt;/code&gt; and &lt;code&gt;divide-integer&lt;/code&gt; operations (respectively) as described in the specification.</source>
          <target state="translated">&lt;code&gt;%&lt;/code&gt; と &lt;code&gt;//&lt;/code&gt; 演算子は、実施 &lt;code&gt;remainder&lt;/code&gt; と &lt;code&gt;divide-integer&lt;/code&gt; 明細書に記載されるように操作（それぞれ）。</target>
        </trans-unit>
        <trans-unit id="26fc765bc88715c46b879eccb94104c2e8a58922" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'#'&lt;/code&gt; option causes the &amp;ldquo;alternate form&amp;rdquo; to be used for the conversion. The alternate form is defined differently for different types. This option is only valid for integer, float, complex and Decimal types. For integers, when binary, octal, or hexadecimal output is used, this option adds the prefix respective &lt;code&gt;'0b'&lt;/code&gt;, &lt;code&gt;'0o'&lt;/code&gt;, or &lt;code&gt;'0x'&lt;/code&gt; to the output value. For floats, complex and Decimal the alternate form causes the result of the conversion to always contain a decimal-point character, even if no digits follow it. Normally, a decimal-point character appears in the result of these conversions only if a digit follows it. In addition, for &lt;code&gt;'g'&lt;/code&gt; and &lt;code&gt;'G'&lt;/code&gt; conversions, trailing zeros are not removed from the result.</source>
          <target state="translated">&lt;code&gt;'#'&lt;/code&gt; オプションは、変換に使用する「別の形式」を発生します。代替フォームは、タイプごとに定義が異なります。このオプションは、整数型、浮動小数点型、複素数型、および小数型でのみ有効です。整数の場合、2進数、8進数、または16進数の出力が使用されるとき、このオプションは、それぞれ &lt;code&gt;'0b'&lt;/code&gt; 、 &lt;code&gt;'0o'&lt;/code&gt; 、または &lt;code&gt;'0x'&lt;/code&gt; のプレフィックスを出力値に追加します。 float、complex、およびDecimalの場合、代替形式では、後続の数字がなくても、変換結果に常に小数点文字が含まれます。通常、これらの変換の結果に小数点が続く場合にのみ、小数点文字が表示されます。また、 &lt;code&gt;'g'&lt;/code&gt; と &lt;code&gt;'G'&lt;/code&gt; 変換、後続ゼロは結果から削除されません。</target>
        </trans-unit>
        <trans-unit id="d086e8403ba4ce40550b0cbe1abec1085dab4b24" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'%'&lt;/code&gt; character, which marks the start of the specifier.</source>
          <target state="translated">&lt;code&gt;'%'&lt;/code&gt; 文字、指定のマークを開始。</target>
        </trans-unit>
        <trans-unit id="29578cc20ffa9483eee996d330ad586d947c7483" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'*'&lt;/code&gt;, &lt;code&gt;'+'&lt;/code&gt;, and &lt;code&gt;'?'&lt;/code&gt; qualifiers are all &lt;em&gt;greedy&lt;/em&gt;; they match as much text as possible. Sometimes this behaviour isn&amp;rsquo;t desired; if the RE &lt;code&gt;&amp;lt;.*&amp;gt;&lt;/code&gt; is matched against &lt;code&gt;'&amp;lt;a&amp;gt; b &amp;lt;c&amp;gt;'&lt;/code&gt;, it will match the entire string, and not just &lt;code&gt;'&amp;lt;a&amp;gt;'&lt;/code&gt;. Adding &lt;code&gt;?&lt;/code&gt; after the qualifier makes it perform the match in &lt;em&gt;non-greedy&lt;/em&gt; or &lt;em&gt;minimal&lt;/em&gt; fashion; as &lt;em&gt;few&lt;/em&gt; characters as possible will be matched. Using the RE &lt;code&gt;&amp;lt;.*?&amp;gt;&lt;/code&gt; will match only &lt;code&gt;'&amp;lt;a&amp;gt;'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'*'&lt;/code&gt; 、 &lt;code&gt;'+'&lt;/code&gt; 、および &lt;code&gt;'?'&lt;/code&gt; 修飾子はすべて&lt;em&gt;貪欲&lt;/em&gt;です。それらは可能な限り多くのテキストと一致します。この動作が望ましくない場合があります。 RE &lt;code&gt;&amp;lt;.*&amp;gt;&lt;/code&gt; が &lt;code&gt;'&amp;lt;a&amp;gt; b &amp;lt;c&amp;gt;'&lt;/code&gt; と一致する場合、それは &lt;code&gt;'&amp;lt;a&amp;gt;'&lt;/code&gt; だけでなく、文字列全体と一致します。追加し &lt;code&gt;?&lt;/code&gt; 修飾子が&lt;em&gt;貪欲&lt;/em&gt;で&lt;em&gt;ない、&lt;/em&gt;または&lt;em&gt;最小限の&lt;/em&gt;方法でマッチを実行した後。&lt;em&gt;いくつかの&lt;/em&gt;可能な限りの文字がマッチします。 RE &lt;code&gt;&amp;lt;.*?&amp;gt;&lt;/code&gt; すると、 &lt;code&gt;'&amp;lt;a&amp;gt;'&lt;/code&gt; のみが一致します。</target>
        </trans-unit>
        <trans-unit id="a9ecb205841d6a4b96487d164ca5b87434878f2b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;','&lt;/code&gt; option signals the use of a comma for a thousands separator. For a locale aware separator, use the &lt;code&gt;'n'&lt;/code&gt; integer presentation type instead.</source>
          <target state="translated">&lt;code&gt;','&lt;/code&gt; オプションは、桁区切りカンマを使用することを知らせます。ロケール対応のセパレーターの場合は、代わりに &lt;code&gt;'n'&lt;/code&gt; 整数表示タイプを使用してください。</target>
        </trans-unit>
        <trans-unit id="4bede3f058d1080c59bb7223d2576a9639b17ed5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'?'&lt;/code&gt; conversion code corresponds to the &lt;code&gt;_Bool&lt;/code&gt; type defined by C99. If this type is not available, it is simulated using a &lt;code&gt;char&lt;/code&gt;. In standard mode, it is always represented by one byte.</source>
          <target state="translated">&lt;code&gt;'?'&lt;/code&gt; 変換コードは、C99で定義されている &lt;code&gt;_Bool&lt;/code&gt; 型に対応しています。このタイプが利用できない場合は、 &lt;code&gt;char&lt;/code&gt; を使用してシミュレートされます。標準モードでは、常に1バイトで表されます。</target>
        </trans-unit>
        <trans-unit id="2cbabc01b5030a839af16dd31d6d1582669f469f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'P'&lt;/code&gt; format character is only available for the native byte ordering (selected as the default or with the &lt;code&gt;'@'&lt;/code&gt; byte order character). The byte order character &lt;code&gt;'='&lt;/code&gt; chooses to use little- or big-endian ordering based on the host system. The struct module does not interpret this as native ordering, so the &lt;code&gt;'P'&lt;/code&gt; format is not available.</source>
          <target state="translated">&lt;code&gt;'P'&lt;/code&gt; フォーマット文字（デフォルトとしてまたはで選択したネイティブのバイト順序でのみ使用可能です &lt;code&gt;'@'&lt;/code&gt; バイトオーダ文字）。バイトオーダー文字 &lt;code&gt;'='&lt;/code&gt; は、ホストシステムに基づいてリトルエンディアンまたはビッグエンディアンの順序を使用することを選択します。 structモジュールはこれをネイティブの順序付けとして解釈しないため、 &lt;code&gt;'P'&lt;/code&gt; 形式は使用できません。</target>
        </trans-unit>
        <trans-unit id="684c972da1ab1e572962745d55ed7035986dfd64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'_'&lt;/code&gt; option signals the use of an underscore for a thousands separator for floating point presentation types and for integer presentation type &lt;code&gt;'d'&lt;/code&gt;. For integer presentation types &lt;code&gt;'b'&lt;/code&gt;, &lt;code&gt;'o'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt;, and &lt;code&gt;'X'&lt;/code&gt;, underscores will be inserted every 4 digits. For other presentation types, specifying this option is an error.</source>
          <target state="translated">&lt;code&gt;'_'&lt;/code&gt; オプションは、数千の区切り浮動小数点プレゼンテーションタイプおよび整数プレゼンテーションタイプの下線を使用する信号 &lt;code&gt;'d'&lt;/code&gt; 。整数表示タイプ &lt;code&gt;'b'&lt;/code&gt; 、 &lt;code&gt;'o'&lt;/code&gt; 、 &lt;code&gt;'x'&lt;/code&gt; 、および &lt;code&gt;'X'&lt;/code&gt; の場合、下線が4桁ごとに挿入されます。他の表示タイプの場合、このオプションを指定するとエラーになります。</target>
        </trans-unit>
        <trans-unit id="2dab823989a3bfcb1eb81a87c5a993cedef1847d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'d'&lt;/code&gt; and &lt;code&gt;'i'&lt;/code&gt; arguments used when creating &lt;code&gt;num&lt;/code&gt; and &lt;code&gt;arr&lt;/code&gt; are typecodes of the kind used by the &lt;a href=&quot;array#module-array&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; module: &lt;code&gt;'d'&lt;/code&gt; indicates a double precision float and &lt;code&gt;'i'&lt;/code&gt; indicates a signed integer. These shared objects will be process and thread-safe.</source>
          <target state="translated">&lt;code&gt;'d'&lt;/code&gt; と &lt;code&gt;'i'&lt;/code&gt; の引数は作成時に使用 &lt;code&gt;num&lt;/code&gt; し、 &lt;code&gt;arr&lt;/code&gt; で使用される種類の型コードである&lt;a href=&quot;array#module-array&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt;モジュール： &lt;code&gt;'d'&lt;/code&gt; 倍精度浮動小数点数を示し、 &lt;code&gt;'i'&lt;/code&gt; 符号付き整数を表します。これらの共有オブジェクトはプロセスであり、スレッドセーフです。</target>
        </trans-unit>
        <trans-unit id="f27e8e197e546ffdcfe9c93e4f87bfb1b8dd4be4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'n'&lt;/code&gt; and &lt;code&gt;'N'&lt;/code&gt; conversion codes are only available for the native size (selected as the default or with the &lt;code&gt;'@'&lt;/code&gt; byte order character). For the standard size, you can use whichever of the other integer formats fits your application.</source>
          <target state="translated">&lt;code&gt;'n'&lt;/code&gt; と &lt;code&gt;'N'&lt;/code&gt; 変換コード（デフォルトとして、またはで選択ネイティブサイズのためにのみ利用可能である &lt;code&gt;'@'&lt;/code&gt; バイト順序文字）。標準サイズの場合、アプリケーションに適した他の整数形式を使用できます。</target>
        </trans-unit>
        <trans-unit id="0f505078713789f13c3c23c17c695637662859e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'namereplace'&lt;/code&gt; error handler was added.</source>
          <target state="translated">&lt;code&gt;'namereplace'&lt;/code&gt; エラーハンドラを追加しました。</target>
        </trans-unit>
        <trans-unit id="b3a9b42db88708058f73659938e683f11a352cea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'p'&lt;/code&gt; format character encodes a &amp;ldquo;Pascal string&amp;rdquo;, meaning a short variable-length string stored in a &lt;em&gt;fixed number of bytes&lt;/em&gt;, given by the count. The first byte stored is the length of the string, or 255, whichever is smaller. The bytes of the string follow. If the string passed in to &lt;a href=&quot;#struct.pack&quot;&gt;&lt;code&gt;pack()&lt;/code&gt;&lt;/a&gt; is too long (longer than the count minus 1), only the leading &lt;code&gt;count-1&lt;/code&gt; bytes of the string are stored. If the string is shorter than &lt;code&gt;count-1&lt;/code&gt;, it is padded with null bytes so that exactly count bytes in all are used. Note that for &lt;a href=&quot;#struct.unpack&quot;&gt;&lt;code&gt;unpack()&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;'p'&lt;/code&gt; format character consumes &lt;code&gt;count&lt;/code&gt; bytes, but that the string returned can never contain more than 255 bytes.</source>
          <target state="translated">&lt;code&gt;'p'&lt;/code&gt; フォーマット文字が記憶されているに短い可変長の文字列を意味する、「パスカル文字列を」コード&lt;em&gt;バイトの固定数の&lt;/em&gt;カウントによって与えられるが、。格納される最初のバイトは、文字列の長さまたは255のどちらか小さい方です。文字列のバイトが続きます。&lt;a href=&quot;#struct.pack&quot;&gt; &lt;code&gt;pack()&lt;/code&gt; に&lt;/a&gt;渡された文字列が長すぎる（ &lt;code&gt;count-1&lt;/code&gt; よりも長い）場合、文字列の先頭のcount-1バイトのみが保存されます。文字列が &lt;code&gt;count-1&lt;/code&gt; より短い場合は、nullバイトが埋め込まれ、正確にcountバイトが使用されます。&lt;a href=&quot;#struct.unpack&quot;&gt; &lt;code&gt;unpack()&lt;/code&gt; の&lt;/a&gt;場合、 &lt;code&gt;'p'&lt;/code&gt; フォーマット文字は &lt;code&gt;count&lt;/code&gt; を消費することに注意してください バイトですが、返される文字列は255バイトを超えることはできません。</target>
        </trans-unit>
        <trans-unit id="57a200ea9356e51b01fb419cb534f48ddc87b1df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'spawn'&lt;/code&gt; and &lt;code&gt;'forkserver'&lt;/code&gt; start methods cannot currently be used with &amp;ldquo;frozen&amp;rdquo; executables (i.e., binaries produced by packages like &lt;strong&gt;PyInstaller&lt;/strong&gt; and &lt;strong&gt;cx_Freeze&lt;/strong&gt;) on Unix. The &lt;code&gt;'fork'&lt;/code&gt; start method does work.</source>
          <target state="translated">&lt;code&gt;'spawn'&lt;/code&gt; と &lt;code&gt;'forkserver'&lt;/code&gt; 起動方法は、現在、「凍結」実行ファイル（のようなパッケージによって生成すなわち、バイナリで使用することはできません&lt;strong&gt;pyInstallerの&lt;/strong&gt;と&lt;strong&gt;cx_Freeze&lt;/strong&gt; Unix上で）。 &lt;code&gt;'fork'&lt;/code&gt; startメソッドは、作業を行います。</target>
        </trans-unit>
        <trans-unit id="adef4fc3618584c3f50f2758661fb96fa19c2234" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'u'&lt;/code&gt; type code corresponds to Python&amp;rsquo;s obsolete unicode character (&lt;a href=&quot;https://docs.python.org/3.8/c-api/unicode.html#c.Py_UNICODE&quot;&gt;&lt;code&gt;Py_UNICODE&lt;/code&gt;&lt;/a&gt; which is &lt;code&gt;wchar_t&lt;/code&gt;). Depending on the platform, it can be 16 bits or 32 bits.</source>
          <target state="translated">&lt;code&gt;'u'&lt;/code&gt; （Pythonの廃止されたUnicode文字のタイプコードが対応&lt;a href=&quot;https://docs.python.org/3.8/c-api/unicode.html#c.Py_UNICODE&quot;&gt; &lt;code&gt;Py_UNICODE&lt;/code&gt; &lt;/a&gt;ある &lt;code&gt;wchar_t&lt;/code&gt; ）。プラットフォームに応じて、16ビットまたは32ビットにすることができます。</target>
        </trans-unit>
        <trans-unit id="1c947a2e5b4b365958137ab1c93d552f460d46b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'x'&lt;/code&gt; mode was added.</source>
          <target state="translated">&lt;code&gt;'x'&lt;/code&gt; モードが追加されました。</target>
        </trans-unit>
        <trans-unit id="7bbeb9294fba3141e309a6b58e12d5136a037789" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.pyc&lt;/code&gt; file includes a hash of the source file content, which Python will compare against the source at runtime to determine if the &lt;code&gt;.pyc&lt;/code&gt; file needs to be regenerated.</source>
          <target state="translated">&lt;code&gt;.pyc&lt;/code&gt; ファイルのファイルは、Pythonがかどうかを判断するために、実行時にソースと比較するソースファイルの内容のハッシュ含ん &lt;code&gt;.pyc&lt;/code&gt; ファイルを再生成する必要があります。</target>
        </trans-unit>
        <trans-unit id="41102abee06a7be2913a11ad4a23f9f58926e024" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.pyc&lt;/code&gt; file includes the timestamp and size of the source file, which Python will compare against the metadata of the source file at runtime to determine if the &lt;code&gt;.pyc&lt;/code&gt; file needs to be regenerated.</source>
          <target state="translated">&lt;code&gt;.pyc&lt;/code&gt; ファイルファイルは、Pythonがかどうかを決定するために実行時に、ソースファイルのメタデータと比較するソース・ファイルのタイムスタンプとサイズ含む &lt;code&gt;.pyc&lt;/code&gt; ファイルのファイルを再生成する必要があります。</target>
        </trans-unit>
        <trans-unit id="a573c16cb80e8fe9674796ab260ceb7cbc3fe3e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:?&lt;/code&gt; pattern matches the colon after the last name, so that it does not occur in the result list. With a &lt;code&gt;maxsplit&lt;/code&gt; of &lt;code&gt;4&lt;/code&gt;, we could separate the house number from the street name:</source>
          <target state="translated">&lt;code&gt;:?&lt;/code&gt; パターンは姓の後ろのコロンと一致するため、結果リストには表示されません。で &lt;code&gt;maxsplit&lt;/code&gt; 個の &lt;code&gt;4&lt;/code&gt; 、私たちは、通りの名前から家の番号を区切ることができます：</target>
        </trans-unit>
        <trans-unit id="cc57d505c38b0eb494f685993037d2665517e08a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@classmethod&lt;/code&gt; form is a function &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; &amp;ndash; see &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#function&quot;&gt;Function definitions&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;@classmethod&lt;/code&gt; のフォームは、関数である&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;デコレータ&lt;/a&gt; -参照&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#function&quot;&gt;関数の定義を&lt;/a&gt;詳細については。</target>
        </trans-unit>
        <trans-unit id="8cdc6e71c4a11c2ee7cd108a9fa0910a7827a59b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@overload&lt;/code&gt; decorator allows describing functions and methods that support multiple different combinations of argument types. A series of &lt;code&gt;@overload&lt;/code&gt;-decorated definitions must be followed by exactly one non-&lt;code&gt;@overload&lt;/code&gt;-decorated definition (for the same function/method). The &lt;code&gt;@overload&lt;/code&gt;-decorated definitions are for the benefit of the type checker only, since they will be overwritten by the non-&lt;code&gt;@overload&lt;/code&gt;-decorated definition, while the latter is used at runtime but should be ignored by a type checker. At runtime, calling a &lt;code&gt;@overload&lt;/code&gt;-decorated function directly will raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;. An example of overload that gives a more precise type than can be expressed using a union or a type variable:</source>
          <target state="translated">&lt;code&gt;@overload&lt;/code&gt; のデコレータは、引数の型の複数の異なる組み合わせをサポートする機能および方法を説明することができます。一連の &lt;code&gt;@overload&lt;/code&gt; 装飾の定義の後には、（同じ関数/メソッドに対して） &lt;code&gt;@overload&lt;/code&gt; 装飾以外の定義を1つだけ続ける必要があります。 &lt;code&gt;@overload&lt;/code&gt; は、それらが非によって上書きされるので、定義は唯一のタイプチェッカーの利益のためである-decorated &lt;code&gt;@overload&lt;/code&gt; 後者は、実行時に使用されるが、型チェッカーによって無視されるべきであるが、定義を-decorated。実行時には、呼び出し &lt;code&gt;@overload&lt;/code&gt; -decorated機能は、直接引き上げる&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; を&lt;/a&gt;。共用体または型変数を使用して表現できるよりも正確な型を与えるオーバーロードの例：</target>
        </trans-unit>
        <trans-unit id="86d1c0468eec97ef063c81a25b38effe8beb236a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@property&lt;/code&gt; decorator turns the &lt;code&gt;voltage()&lt;/code&gt; method into a &amp;ldquo;getter&amp;rdquo; for a read-only attribute with the same name, and it sets the docstring for &lt;em&gt;voltage&lt;/em&gt; to &amp;ldquo;Get the current voltage.&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;@property&lt;/code&gt; のデコレータは変わる &lt;code&gt;voltage()&lt;/code&gt; と同じ名前の読み取り専用属性のための「ゲッター」にする方法を、それがためにドキュメンテーション文字列を設定し&lt;em&gt;た電圧&lt;/em&gt;に「現在の電圧を取得します。」</target>
        </trans-unit>
        <trans-unit id="e9a0de22a543be5823e8fc00bdf1bc19e1836998" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@staticmethod&lt;/code&gt; form is a function &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; &amp;ndash; see &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#function&quot;&gt;Function definitions&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;@staticmethod&lt;/code&gt; のフォームは、関数である&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;デコレータ&lt;/a&gt; -参照&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#function&quot;&gt;関数の定義を&lt;/a&gt;詳細については。</target>
        </trans-unit>
        <trans-unit id="1134bfad7e728a8c50f8c0e2b0e36568e03a0665" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AUTH&lt;/code&gt; command is not supported by the server.</source>
          <target state="translated">&lt;code&gt;AUTH&lt;/code&gt; のコマンドは、サーバーでサポートされていません。</target>
        </trans-unit>
        <trans-unit id="72a7880652409c5976ca3dfe4bf7cf1e1ffc4d1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Any&lt;/code&gt; type</source>
          <target state="translated">&lt;code&gt;Any&lt;/code&gt; タイプ</target>
        </trans-unit>
        <trans-unit id="08ef83d6c825495ed685c5e095ac1ea8add9f9a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attributes&lt;/code&gt; Interface</source>
          <target state="translated">&lt;code&gt;Attributes&lt;/code&gt; インタフェース</target>
        </trans-unit>
        <trans-unit id="5d5712e868fcd76470aa0d1b67f60f6da25288af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AttributesNS&lt;/code&gt; Interface</source>
          <target state="translated">&lt;code&gt;AttributesNS&lt;/code&gt; インタフェース</target>
        </trans-unit>
        <trans-unit id="1866cebe2c58853ca647a2457b47007a6b73cab7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CAN_BCM_CAN_FD_FRAME&lt;/code&gt; flag is only available on Linux &amp;gt;= 4.8.</source>
          <target state="translated">&lt;code&gt;CAN_BCM_CAN_FD_FRAME&lt;/code&gt; のフラグは&amp;gt; = 4.8、Linux上でのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="4328f0909355ebc7b140a3c105fbd8ceaf492a6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMImplementation&lt;/code&gt; interface provides a way for applications to determine the availability of particular features in the DOM they are using. DOM Level 2 added the ability to create new &lt;code&gt;Document&lt;/code&gt; and &lt;code&gt;DocumentType&lt;/code&gt; objects using the &lt;code&gt;DOMImplementation&lt;/code&gt; as well.</source>
          <target state="translated">&lt;code&gt;DOMImplementation&lt;/code&gt; インタフェースは、彼らが使用しているDOM内の特定の機能が利用可能かどうかを決定するためのアプリケーションのための方法を提供します。DOMレベル2は、新規作成する機能を追加 &lt;code&gt;Document&lt;/code&gt; と &lt;code&gt;DocumentType&lt;/code&gt; 使用してオブジェクト &lt;code&gt;DOMImplementation&lt;/code&gt; 同様。</target>
        </trans-unit>
        <trans-unit id="ceb6ddc3543e53a154f8edc359027b84c0cc9c41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DistributionFinder.Context&lt;/code&gt; object provides &lt;code&gt;.path&lt;/code&gt; and &lt;code&gt;.name&lt;/code&gt; properties indicating the path to search and names to match and may supply other relevant context.</source>
          <target state="translated">&lt;code&gt;DistributionFinder.Context&lt;/code&gt; のオブジェクトが提供 &lt;code&gt;.path&lt;/code&gt; と &lt;code&gt;.name&lt;/code&gt; の経路を示す特性検索と一致する名前および他の関連するコンテキストを供給することができるために。</target>
        </trans-unit>
        <trans-unit id="595f270592a8413c36ba336bfcceb50a835ab5b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EnumMeta&lt;/code&gt; metaclass is responsible for providing the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__dir__&quot;&gt;&lt;code&gt;__dir__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; and other methods that allow one to do things with an &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class that fail on a typical class, such as &lt;code&gt;list(Color)&lt;/code&gt; or &lt;code&gt;some_enum_var in Color&lt;/code&gt;. &lt;code&gt;EnumMeta&lt;/code&gt; is responsible for ensuring that various other methods on the final &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class are correct (such as &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pickle#object.__getnewargs__&quot;&gt;&lt;code&gt;__getnewargs__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__str__&quot;&gt;&lt;code&gt;__str__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;EnumMeta&lt;/code&gt; のメタクラスを提供する責任がある&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__dir__&quot;&gt; &lt;code&gt;__dir__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;、もう1つはで物事を行うことができ、他の方法を&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;など、一般的なクラスに失敗したクラス &lt;code&gt;list(Color)&lt;/code&gt; または &lt;code&gt;some_enum_var in Color&lt;/code&gt; 。 &lt;code&gt;EnumMeta&lt;/code&gt; は最終的に、様々な他の方法ことを保証する責任がある&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;（例えば、クラスが正しい&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;pickle#object.__getnewargs__&quot;&gt; &lt;code&gt;__getnewargs__()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__str__&quot;&gt; &lt;code&gt;__str__()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5d69ba1589530352dd1f5dd4e45bac251bfe088b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FieldStorage&lt;/code&gt; instance can be indexed like a Python dictionary. It allows membership testing with the &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator, and also supports the standard dictionary method &lt;a href=&quot;stdtypes#dict.keys&quot;&gt;&lt;code&gt;keys()&lt;/code&gt;&lt;/a&gt; and the built-in function &lt;a href=&quot;functions#len&quot;&gt;&lt;code&gt;len()&lt;/code&gt;&lt;/a&gt;. Form fields containing empty strings are ignored and do not appear in the dictionary; to keep such values, provide a true value for the optional &lt;em&gt;keep_blank_values&lt;/em&gt; keyword parameter when creating the &lt;code&gt;FieldStorage&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;FieldStorage&lt;/code&gt; のインスタンスはPythonの辞書のようにインデックスを作成することができます。これにより、&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;演算子を使用したメンバーシップテストが可能になり、標準のディクショナリメソッド&lt;a href=&quot;stdtypes#dict.keys&quot;&gt; &lt;code&gt;keys()&lt;/code&gt; &lt;/a&gt;と組み込み関数&lt;a href=&quot;functions#len&quot;&gt; &lt;code&gt;len()&lt;/code&gt; &lt;/a&gt;もサポートされます。空の文字列を含むフォームフィールドは無視され、辞書に表示されません。このような値を保持するには、 &lt;code&gt;FieldStorage&lt;/code&gt; インスタンスを作成するときに、オプションの&lt;em&gt;keep_blank_values&lt;/em&gt;キーワードパラメータにtrue値を指定します。</target>
        </trans-unit>
        <trans-unit id="bc007293220ad574c1fcd983a7ec8c5d4fbd6307" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Lib/turtledemo&lt;/code&gt; directory contains a &lt;code&gt;turtle.cfg&lt;/code&gt; file. You can study it as an example and see its effects when running the demos (preferably not from within the demo-viewer).</source>
          <target state="translated">&lt;code&gt;Lib/turtledemo&lt;/code&gt; のディレクトリが含まれている &lt;code&gt;turtle.cfg&lt;/code&gt; のファイルを。これを例として検討し、デモを実行するときの効果を確認できます（デモビューア内からはできません）。</target>
        </trans-unit>
        <trans-unit id="ae122c966f98b743129b8e2eb8ae111c4c5f37fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MessageBox&lt;/code&gt; foreign function can now be called in these ways:</source>
          <target state="translated">&lt;code&gt;MessageBox&lt;/code&gt; 外部関数は、これらの方法で呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="e14135cf6dd26c3e1d281555a749c86475cd4969" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;None&lt;/code&gt; constant. Passing is allowed only if &lt;em&gt;allow_none&lt;/em&gt; is true.</source>
          <target state="translated">&lt;code&gt;None&lt;/code&gt; 定数。通過は、&lt;em&gt;allow_none&lt;/em&gt;がtrueの場合にのみ許可されます。</target>
        </trans-unit>
        <trans-unit id="0dc13f9481c47256735a6380f63398af874a2bd4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Package&lt;/code&gt; type is defined as &lt;code&gt;Union[str, ModuleType]&lt;/code&gt;. This means that where the function describes accepting a &lt;code&gt;Package&lt;/code&gt;, you can pass in either a string or a module. Module objects must have a resolvable &lt;code&gt;__spec__.submodule_search_locations&lt;/code&gt; that is not &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Package&lt;/code&gt; 種類は以下のように定義された &lt;code&gt;Union[str, ModuleType]&lt;/code&gt; 。つまり、関数が &lt;code&gt;Package&lt;/code&gt; の受け入れを説明している場合、文字列またはモジュールのいずれかを渡すことができます。モジュールオブジェクトには解決可能持っている必要があります &lt;code&gt;__spec__.submodule_search_locations&lt;/code&gt; ません &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4f32e3fb82b3c83abc395d93958c1777b6e5e38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SMTP&lt;/code&gt; class provides &lt;code&gt;authobjects&lt;/code&gt; for the &lt;code&gt;CRAM-MD5&lt;/code&gt;, &lt;code&gt;PLAIN&lt;/code&gt;, and &lt;code&gt;LOGIN&lt;/code&gt; mechanisms; they are named &lt;code&gt;SMTP.auth_cram_md5&lt;/code&gt;, &lt;code&gt;SMTP.auth_plain&lt;/code&gt;, and &lt;code&gt;SMTP.auth_login&lt;/code&gt; respectively. They all require that the &lt;code&gt;user&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; properties of the &lt;code&gt;SMTP&lt;/code&gt; instance are set to appropriate values.</source>
          <target state="translated">&lt;code&gt;SMTP&lt;/code&gt; のクラスが提供 &lt;code&gt;authobjects&lt;/code&gt; ため &lt;code&gt;CRAM-MD5&lt;/code&gt; 、 &lt;code&gt;PLAIN&lt;/code&gt; と &lt;code&gt;LOGIN&lt;/code&gt; のメカニズムを、それらは、それぞれ &lt;code&gt;SMTP.auth_cram_md5&lt;/code&gt; 、 &lt;code&gt;SMTP.auth_plain&lt;/code&gt; 、および &lt;code&gt;SMTP.auth_login&lt;/code&gt; という名前です。これらはすべて、 &lt;code&gt;SMTP&lt;/code&gt; インスタンスの &lt;code&gt;user&lt;/code&gt; プロパティと &lt;code&gt;password&lt;/code&gt; プロパティを適切な値に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="7a1cf223256389df786f4a089e7a5f771da06658" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Stats&lt;/code&gt; Class</source>
          <target state="translated">&lt;code&gt;Stats&lt;/code&gt; クラス</target>
        </trans-unit>
        <trans-unit id="7b6323f0d9a01c8bacf864cdae4d5a57325ea708" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TYPEDESC&lt;/code&gt; structure describes a COM data type, the &lt;code&gt;vt&lt;/code&gt; field specifies which one of the union fields is valid. Since the &lt;code&gt;u&lt;/code&gt; field is defined as anonymous field, it is now possible to access the members directly off the TYPEDESC instance. &lt;code&gt;td.lptdesc&lt;/code&gt; and &lt;code&gt;td.u.lptdesc&lt;/code&gt; are equivalent, but the former is faster since it does not need to create a temporary union instance:</source>
          <target state="translated">&lt;code&gt;TYPEDESC&lt;/code&gt; の構造は、COMデータ型を記述し &lt;code&gt;vt&lt;/code&gt; 組合分野の一つが有効であるフィールドを指定します。以来 &lt;code&gt;u&lt;/code&gt; フィールドは匿名フィールドとして定義され、TYPEDESCインスタンスから直接メンバーにアクセスできるようになりました。 &lt;code&gt;td.lptdesc&lt;/code&gt; と &lt;code&gt;td.u.lptdesc&lt;/code&gt; は同等ですが、前者は一時的な共用体インスタンスを作成する必要がないため、より高速です。</target>
        </trans-unit>
        <trans-unit id="f9ea1769001491fd452c7e549a3da58d9eb40808" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Text&lt;/code&gt; interface represents text in the XML document. If the parser and DOM implementation support the DOM&amp;rsquo;s XML extension, portions of the text enclosed in CDATA marked sections are stored in &lt;code&gt;CDATASection&lt;/code&gt; objects. These two interfaces are identical, but provide different values for the &lt;code&gt;nodeType&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;Text&lt;/code&gt; インタフェースは、XML文書内のテキストを表します。パーサーとDOM実装がDOMのXML拡張をサポートしている場合、CDATAマーク付きセクションで囲まれたテキストの部分は &lt;code&gt;CDATASection&lt;/code&gt; オブジェクトに格納されます。これら2つのインターフェースは同一ですが、 &lt;code&gt;nodeType&lt;/code&gt; 属性に異なる値を提供します。</target>
        </trans-unit>
        <trans-unit id="f68d9bca14cc73a34996c6d88e3f294d7d02e0fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Widget&lt;/code&gt; class is not meant to be instantiated, it is meant only for subclassing to make &amp;ldquo;real&amp;rdquo; widgets (in C++, this is called an &amp;lsquo;abstract class&amp;rsquo;).</source>
          <target state="translated">&lt;code&gt;Widget&lt;/code&gt; クラスはインスタンス化されることを意味しない、それが唯一の「本当の」ウィジェットを（C ++で、これは「抽象クラス」と呼ばれる）にするためにサブクラス化のためのものです。</target>
        </trans-unit>
        <trans-unit id="d2a297f57cd1bc861efed1e813b4b8a2f8061b73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__call__&lt;/code&gt; method may perform arbitrary actions, but will typically set attributes on the &lt;code&gt;namespace&lt;/code&gt; based on &lt;code&gt;dest&lt;/code&gt; and &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;__call__&lt;/code&gt; の方法は、任意のアクションを実行できるが、典型的に属性を設定します &lt;code&gt;namespace&lt;/code&gt; に基づく &lt;code&gt;dest&lt;/code&gt; と &lt;code&gt;values&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc938070d6c39bccc58652b25fa0b1e1af788ab6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__main__&lt;/code&gt; module must be importable by worker subprocesses. This means that &lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt;&lt;code&gt;ProcessPoolExecutor&lt;/code&gt;&lt;/a&gt; will not work in the interactive interpreter.</source>
          <target state="translated">&lt;code&gt;__main__&lt;/code&gt; のモジュールは、労働者のサブプロセスによってインポート可能でなければなりません。つまり、&lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt; &lt;code&gt;ProcessPoolExecutor&lt;/code&gt; &lt;/a&gt;は対話型インタープリターでは機能しません。</target>
        </trans-unit>
        <trans-unit id="af193d5902a95c55c4324893e16623ef88c8dc8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__members__&lt;/code&gt; attribute can be used for detailed programmatic access to the enumeration members. For example, finding all the aliases:</source>
          <target state="translated">&lt;code&gt;__members__&lt;/code&gt; の属性は、列挙型のメンバーへの詳細なプログラムからアクセスするために使用することができます。たとえば、すべてのエイリアスを検索します。</target>
        </trans-unit>
        <trans-unit id="a87425a1104799def71154528dfd19ddddcfb54d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__name__&lt;/code&gt; attribute of generators is now set from the function name, instead of the code name, and it can now be modified.</source>
          <target state="translated">ジェネレーターの &lt;code&gt;__name__&lt;/code&gt; 属性は、コード名ではなく関数名から設定されるようになり、変更できるようになりました。</target>
        </trans-unit>
        <trans-unit id="6f0dcd079a594f43bb2a22125cfba03fcfd4cb33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__suppress_context__&lt;/code&gt; value from the original exception.</source>
          <target state="translated">元の例外の &lt;code&gt;__suppress_context__&lt;/code&gt; 値。</target>
        </trans-unit>
        <trans-unit id="9122ae2607633af14a0a527e56d351f46a1f76a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;args&lt;/code&gt; entry, when &lt;a href=&quot;functions#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;uated in the context of the &lt;code&gt;logging&lt;/code&gt; package&amp;rsquo;s namespace, is the list of arguments to the constructor for the handler class. Refer to the constructors for the relevant handlers, or to the examples below, to see how typical entries are constructed. If not provided, it defaults to &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; エントリ、&lt;a href=&quot;functions#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;のコンテキストでuated &lt;code&gt;logging&lt;/code&gt; パッケージの名前空間は、ハンドラクラスのコンストラクタの引数のリストです。一般的なエントリがどのように構築されるかを確認するには、関連するハンドラのコンストラクタ、または以下の例を参照してください。指定しない場合、デフォルトで &lt;code&gt;()&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="b936e943ecfcd201f6a825fee01f91c8aca05480" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;asyncio&lt;/code&gt; subprocess API does not support decoding the streams as text. &lt;a href=&quot;stdtypes#bytes.decode&quot;&gt;&lt;code&gt;bytes.decode()&lt;/code&gt;&lt;/a&gt; can be used to convert the bytes returned from the stream to text.</source>
          <target state="translated">&lt;code&gt;asyncio&lt;/code&gt; サブプロセスAPIは、テキストとしてストリームをデコードをサポートしていません。&lt;a href=&quot;stdtypes#bytes.decode&quot;&gt; &lt;code&gt;bytes.decode()&lt;/code&gt; &lt;/a&gt;を使用して、ストリームから返されたバイトをテキストに変換できます。</target>
        </trans-unit>
        <trans-unit id="ec504929a2fb2ce3901b05f7e84e725f7539dce7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;call&lt;/code&gt; objects in &lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt;&lt;code&gt;Mock.call_args&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt;&lt;code&gt;Mock.call_args_list&lt;/code&gt;&lt;/a&gt; are two-tuples of (positional args, keyword args) whereas the &lt;code&gt;call&lt;/code&gt; objects in &lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt;&lt;code&gt;Mock.mock_calls&lt;/code&gt;&lt;/a&gt;, along with ones you construct yourself, are three-tuples of (name, positional args, keyword args).</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt; &lt;code&gt;Mock.call_args&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt; &lt;code&gt;Mock.call_args_list&lt;/code&gt; &lt;/a&gt;の &lt;code&gt;call&lt;/code&gt; オブジェクトは（positional args、keyword args）の2つのタプルですが、&lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt; &lt;code&gt;Mock.mock_calls&lt;/code&gt; &lt;/a&gt;の &lt;code&gt;call&lt;/code&gt; オブジェクトは、自分で作成したものと一緒に、（name、position args、キーワード引数）。</target>
        </trans-unit>
        <trans-unit id="f0095fb07694807b7d7160a1ed193f2c7fb50cbf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;class&lt;/code&gt; entry indicates the handler&amp;rsquo;s class (as determined by &lt;a href=&quot;functions#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;logging&lt;/code&gt; package&amp;rsquo;s namespace). The &lt;code&gt;level&lt;/code&gt; is interpreted as for loggers, and &lt;code&gt;NOTSET&lt;/code&gt; is taken to mean &amp;lsquo;log everything&amp;rsquo;.</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; エントリは（によって決定されるハンドラのクラスを表す&lt;a href=&quot;functions#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;で &lt;code&gt;logging&lt;/code&gt; パッケージの名前空間）。 &lt;code&gt;level&lt;/code&gt; ロガーのように解釈され、 &lt;code&gt;NOTSET&lt;/code&gt; は、「ログのすべて」を意味するものと解釈されます。</target>
        </trans-unit>
        <trans-unit id="3b8f7bfa816dd3504e8292223adda9c4361b672f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;class&lt;/code&gt; entry is optional. It indicates the name of the formatter&amp;rsquo;s class (as a dotted module and class name.) This option is useful for instantiating a &lt;a href=&quot;logging#logging.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; subclass. Subclasses of &lt;a href=&quot;logging#logging.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; can present exception tracebacks in an expanded or condensed format.</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; エントリーはオプションです。フォーマッターのクラスの名前を示します（ドット付きモジュールおよびクラス名として）。このオプションは、&lt;a href=&quot;logging#logging.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;サブクラスをインスタンス化するのに役立ちます。&lt;a href=&quot;logging#logging.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; の&lt;/a&gt;サブクラスは、例外トレースバックを拡張または縮小形式で提示できます。</target>
        </trans-unit>
        <trans-unit id="61ec22605f4896ed5a3fbb6991cb3daa62a8dc30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;close()&lt;/code&gt; method is not implemented, &lt;a href=&quot;#contextlib.AsyncExitStack.aclose&quot;&gt;&lt;code&gt;aclose()&lt;/code&gt;&lt;/a&gt; must be used instead.</source>
          <target state="translated">&lt;code&gt;close()&lt;/code&gt; メソッドは、実装されていない&lt;a href=&quot;#contextlib.AsyncExitStack.aclose&quot;&gt; &lt;code&gt;aclose()&lt;/code&gt; &lt;/a&gt;代わりに使用されなければなりません。</target>
        </trans-unit>
        <trans-unit id="baf71b295297eb68de3b61fbcfcaf38f3dced956" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;close&lt;/code&gt; method returns &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if the subprocess exited successfully, or the subprocess&amp;rsquo;s return code if there was an error. On POSIX systems, if the return code is positive it represents the return value of the process left-shifted by one byte. If the return code is negative, the process was terminated by the signal given by the negated value of the return code. (For example, the return value might be &lt;code&gt;- signal.SIGKILL&lt;/code&gt; if the subprocess was killed.) On Windows systems, the return value contains the signed integer return code from the child process.</source>
          <target state="translated">&lt;code&gt;close&lt;/code&gt; メソッドは返しません&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;エラーが発生した場合、サブプロセスが正常に終了した、またはサブプロセスのリターンコード場合。 POSIXシステムでは、戻りコードが正の場合、1バイト左シフトされたプロセスの戻り値を表します。戻りコードが負の場合、プロセスは、戻りコードの否定された値によって与えられたシグナルによって終了しました。 （たとえば、サブプロセスが &lt;code&gt;- signal.SIGKILL&lt;/code&gt; 場合、戻り値は-signal.SIGKILLになる可能性があります。）Windowsシステムでは、戻り値には、子プロセスからの符号付き整数戻りコードが含まれます。</target>
        </trans-unit>
        <trans-unit id="f3738771cfde745973ee9e9e6e59d483c5c69d30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;code&lt;/code&gt; module provides facilities to implement read-eval-print loops in Python. Two classes and convenience functions are included which can be used to build applications which provide an interactive interpreter prompt.</source>
          <target state="translated">&lt;code&gt;code&lt;/code&gt; モジュールはPythonで読ん-EVAL-印刷ループを実装するための機能を提供します。インタラクティブなインタープリタープロンプトを提供するアプリケーションを構築するために使用できる2つのクラスと便利な関数が含まれています。</target>
        </trans-unit>
        <trans-unit id="c6f8a5f6cdeeb43455302373902fc6f690cfea1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;colon&lt;/code&gt; attribute may also be set on a per-instance basis.</source>
          <target state="translated">&lt;code&gt;colon&lt;/code&gt; 属性は、インスタンスごとに設定することができます。</target>
        </trans-unit>
        <trans-unit id="7fa8bb90452b238e4231410cf712c3c51172e7e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;concurrent&lt;/code&gt; package</source>
          <target state="translated">&lt;code&gt;concurrent&lt;/code&gt; パッケージ</target>
        </trans-unit>
        <trans-unit id="47958b98a21f02493afe011d1fe7fd47b89e4221" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;const&lt;/code&gt; argument of &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; is used to hold constant values that are not read from the command line but are required for the various &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; actions. The two most common uses of it are:</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt;の &lt;code&gt;const&lt;/code&gt; 引数は、コマンドラインから読み取られないが、さまざまな&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;アクションに必要な定数値を保持するために使用されます。最も一般的な2つの使用法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1c1a6767fe12e172b4870adf50fb52b7ad98ffb0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create&lt;/code&gt; method of the &lt;a href=&quot;#venv.EnvBuilder&quot;&gt;&lt;code&gt;EnvBuilder&lt;/code&gt;&lt;/a&gt; class illustrates the hooks available for subclass customization:</source>
          <target state="translated">&lt;a href=&quot;#venv.EnvBuilder&quot;&gt; &lt;code&gt;EnvBuilder&lt;/code&gt; &lt;/a&gt;クラスの &lt;code&gt;create&lt;/code&gt; メソッドは、サブクラスのカスタマイズに使用できるフックを示しています。</target>
        </trans-unit>
        <trans-unit id="2d03fa71ebb6e231d59aa9390e871246c5344d6d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ctypes.util&lt;/code&gt; module provides a function which can help to determine the library to load.</source>
          <target state="translated">&lt;code&gt;ctypes.util&lt;/code&gt; モジュールがロードするライブラリを決定するために助けることができる機能を提供します。</target>
        </trans-unit>
        <trans-unit id="7496909f52e59e234f12e33f691492d0ff1051aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ctypes.wintypes&lt;/code&gt; module provides quite some other Windows specific data types, for example &lt;code&gt;HWND&lt;/code&gt;, &lt;code&gt;WPARAM&lt;/code&gt;, or &lt;code&gt;DWORD&lt;/code&gt;. Some useful structures like &lt;code&gt;MSG&lt;/code&gt; or &lt;code&gt;RECT&lt;/code&gt; are also defined.</source>
          <target state="translated">&lt;code&gt;ctypes.wintypes&lt;/code&gt; モジュール例えば、かなりの他のWindowsの特定のデータ型を提供 &lt;code&gt;HWND&lt;/code&gt; 、 &lt;code&gt;WPARAM&lt;/code&gt; 、または &lt;code&gt;DWORD&lt;/code&gt; 。 &lt;code&gt;MSG&lt;/code&gt; や &lt;code&gt;RECT&lt;/code&gt; のようないくつかの有用な構造も定義されています。</target>
        </trans-unit>
        <trans-unit id="4762e5a3dafdaba2c58c248e6d2ff0abbc78c9e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;decoded&lt;/code&gt; value of the header is determined by formatting the &lt;code&gt;datetime&lt;/code&gt; according to the &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; rules; that is, it is set to:</source>
          <target state="translated">ヘッダーの &lt;code&gt;decoded&lt;/code&gt; 値は、&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;ルールに従って &lt;code&gt;datetime&lt;/code&gt; フォーマットすることによって決定されます。つまり、次のように設定されています。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0bf7c8f5ef57293f4a035c7235afdf736241c388" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;decoded&lt;/code&gt; value of the header will have all encoded words decoded to unicode. &lt;a href=&quot;codecs#module-encodings.idna&quot;&gt;&lt;code&gt;idna&lt;/code&gt;&lt;/a&gt; encoded domain names are also decoded to unicode. The &lt;code&gt;decoded&lt;/code&gt; value is set by &lt;a href=&quot;stdtypes#str.join&quot;&gt;&lt;code&gt;join&lt;/code&gt;&lt;/a&gt;ing the &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; value of the elements of the &lt;code&gt;groups&lt;/code&gt; attribute with &lt;code&gt;',
'&lt;/code&gt;.</source>
          <target state="translated">ヘッダーの &lt;code&gt;decoded&lt;/code&gt; 値には、すべてのエンコードされた単語がUnicodeにデコードされます。&lt;a href=&quot;codecs#module-encodings.idna&quot;&gt; &lt;code&gt;idna&lt;/code&gt; で&lt;/a&gt;エンコードされたドメイン名もUnicodeにデコードされます。 &lt;code&gt;decoded&lt;/code&gt; ことにより、値が設定されている&lt;a href=&quot;stdtypes#str.join&quot;&gt; &lt;code&gt;join&lt;/code&gt; &lt;/a&gt;する&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;の要素の値 &lt;code&gt;groups&lt;/code&gt; 持つ属性を &lt;code&gt;', '&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1fa89fca3d85626b155af4cfba20357d4cc96830" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;defusedxml&lt;/code&gt; and &lt;code&gt;defusedexpat&lt;/code&gt; Packages</source>
          <target state="translated">&lt;code&gt;defusedxml&lt;/code&gt; と &lt;code&gt;defusedexpat&lt;/code&gt; パッケージ</target>
        </trans-unit>
        <trans-unit id="dfc2ee4946a057f25375d575b48219960fa9f49b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dircmp&lt;/code&gt; class</source>
          <target state="translated">&lt;code&gt;dircmp&lt;/code&gt; クラス</target>
        </trans-unit>
        <trans-unit id="8ffc245c6775a61d7871af9ec0f8704fe5eef1cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;discover&lt;/code&gt; sub-command has the following options:</source>
          <target state="translated">&lt;code&gt;discover&lt;/code&gt; サブコマンドは次のオプションがあります。</target>
        </trans-unit>
        <trans-unit id="648875dd3e0111333c4afffc1af11bfc7a4a6c31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;display_name&lt;/code&gt; of the group. If it is &lt;code&gt;None&lt;/code&gt; and there is exactly one &lt;code&gt;Address&lt;/code&gt; in &lt;code&gt;addresses&lt;/code&gt;, then the &lt;code&gt;Group&lt;/code&gt; represents a single address that is not in a group.</source>
          <target state="translated">グループの &lt;code&gt;display_name&lt;/code&gt; 。それがされていない場合は &lt;code&gt;None&lt;/code&gt; と正確に一つあります &lt;code&gt;Address&lt;/code&gt; での &lt;code&gt;addresses&lt;/code&gt; 、その後、 &lt;code&gt;Group&lt;/code&gt; グループに属していない単一のアドレスを表します。</target>
        </trans-unit>
        <trans-unit id="b7b171073f1958b4ddf2620702c25cb5e7487c86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;do_GET()&lt;/code&gt; and &lt;code&gt;do_HEAD()&lt;/code&gt; functions are modified to run CGI scripts and serve the output, instead of serving files, if the request leads to somewhere below the &lt;code&gt;cgi_directories&lt;/code&gt; path.</source>
          <target state="translated">&lt;code&gt;do_GET()&lt;/code&gt; と &lt;code&gt;do_HEAD()&lt;/code&gt; 関数は、要求のリードであれば、以下のどこかに、代わりにファイルの提供のため、出力をCGIスクリプトを実行して奉仕するように変更されている &lt;code&gt;cgi_directories&lt;/code&gt; のパス。</target>
        </trans-unit>
        <trans-unit id="c3677fc05242ea4075af857b2c902b5aceeacc42" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;domain&lt;/code&gt; portion of the address.</source>
          <target state="translated">アドレスの &lt;code&gt;domain&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="705f2d3bcf70b0357b08a41f5d6b8adc484dd65b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;entry_points()&lt;/code&gt; function returns a dictionary of all entry points, keyed by group. Entry points are represented by &lt;code&gt;EntryPoint&lt;/code&gt; instances; each &lt;code&gt;EntryPoint&lt;/code&gt; has a &lt;code&gt;.name&lt;/code&gt;, &lt;code&gt;.group&lt;/code&gt;, and &lt;code&gt;.value&lt;/code&gt; attributes and a &lt;code&gt;.load()&lt;/code&gt; method to resolve the value.</source>
          <target state="translated">&lt;code&gt;entry_points()&lt;/code&gt; 関数は、グループをキーすべてのエントリポイントの辞書を返します。エントリポイントは、 &lt;code&gt;EntryPoint&lt;/code&gt; インスタンスによって表されます。各 &lt;code&gt;EntryPoint&lt;/code&gt; 有し &lt;code&gt;.name&lt;/code&gt; の、 &lt;code&gt;.group&lt;/code&gt; 、及び &lt;code&gt;.value&lt;/code&gt; 属性と &lt;code&gt;.load()&lt;/code&gt; 値を解決する方法。</target>
        </trans-unit>
        <trans-unit id="470247d84f91b5ace4b798cb71b48d89f4faa7c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;errors&lt;/code&gt; module has the following attributes:</source>
          <target state="translated">&lt;code&gt;errors&lt;/code&gt; モジュールは、次の属性があります。</target>
        </trans-unit>
        <trans-unit id="9b83f601ca71c62648a67d0ae21f05a3c4105c9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finalize&lt;/code&gt; method can return any of the types supported by SQLite: bytes, str, int, float and &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;finalize&lt;/code&gt; バイト、STR、INT、フロートと：この方法は、SQLiteのでサポートされているタイプのいずれかを返すことができます &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27b6f5afd09e8d42f8ef61e3e33d7e1326356e9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find*()&lt;/code&gt; routines might look a bit funny at first sight. They are primarily meant to do echo cancellation. A reasonably fast way to do this is to pick the most energetic piece of the output sample, locate that in the input sample and subtract the whole output sample from the input sample:</source>
          <target state="translated">&lt;code&gt;find*()&lt;/code&gt; ルーチンは、一見面白い少し見えるかもしれません。これらは主にエコーキャンセレーションを行うことを目的としています。これを行うためのかなり速い方法は、出力サンプルの最もエネルギッシュな部分を選び、それを入力サンプルで見つけて、入力サンプルから出力サンプル全体を引くことです。</target>
        </trans-unit>
        <trans-unit id="cabfb6998c66a156b607518aa9258a73d1121858" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format&lt;/code&gt; entry is the overall format string, and the &lt;code&gt;datefmt&lt;/code&gt; entry is the &lt;code&gt;strftime()&lt;/code&gt;-compatible date/time format string. If empty, the package substitutes something which is almost equivalent to specifying the date format string &lt;code&gt;'%Y-%m-%d %H:%M:%S'&lt;/code&gt;. This format also specifies milliseconds, which are appended to the result of using the above format string, with a comma separator. An example time in this format is &lt;code&gt;2003-01-23 00:29:50,411&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; エントリは、全体の書式文字列であり、そして &lt;code&gt;datefmt&lt;/code&gt; エントリがある &lt;code&gt;strftime()&lt;/code&gt; 互換の日付/時刻のフォーマット文字列。空の場合、パッケージは、日付形式文字列 &lt;code&gt;'%Y-%m-%d %H:%M:%S'&lt;/code&gt; を指定することとほぼ同等のものを置き換えます。このフォーマットはミリ秒も指定します。ミリ秒は、上記のフォーマット文字列を使用した結果にコンマ区切りで追加されます。この形式の時間の例は &lt;code&gt;2003-01-23 00:29:50,411&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="17356f2f06eb5423af82d8f66e100cef27b9c151" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;formatter&lt;/code&gt; entry indicates the key name of the formatter for this handler. If blank, a default formatter (&lt;code&gt;logging._defaultFormatter&lt;/code&gt;) is used. If a name is specified, it must appear in the &lt;code&gt;[formatters]&lt;/code&gt; section and have a corresponding section in the configuration file.</source>
          <target state="translated">&lt;code&gt;formatter&lt;/code&gt; エントリはこのハンドラのフォーマッタのキー名を示します。空白の場合、デフォルトのフォーマッター（ &lt;code&gt;logging._defaultFormatter&lt;/code&gt; ）が使用されます。名前を指定する場合は、 &lt;code&gt;[formatters]&lt;/code&gt; セクションに表示し、対応するセクションを構成ファイルに含める必要があります。</target>
        </trans-unit>
        <trans-unit id="e965f45c045d1ea3947a47df71b810d8c5eccba9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;formatweekday()&lt;/code&gt; and &lt;code&gt;formatmonthname()&lt;/code&gt; methods of these two classes temporarily change the current locale to the given &lt;em&gt;locale&lt;/em&gt;. Because the current locale is a process-wide setting, they are not thread-safe.</source>
          <target state="translated">&lt;code&gt;formatweekday()&lt;/code&gt; と &lt;code&gt;formatmonthname()&lt;/code&gt; この2つのクラスの方法は、一時的に与えられた、現在のロケールを変更&lt;em&gt;ロケール&lt;/em&gt;。現在のロケールはプロセス全体の設定であるため、スレッドセーフではありません。</target>
        </trans-unit>
        <trans-unit id="f09d559d6b736bafa34f34c899e2feab29c13e26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fromfile_prefix_chars=&lt;/code&gt; argument defaults to &lt;code&gt;None&lt;/code&gt;, meaning that arguments will never be treated as file references.</source>
          <target state="translated">&lt;code&gt;fromfile_prefix_chars=&lt;/code&gt; に引数のデフォルト &lt;code&gt;None&lt;/code&gt; 引数はファイル参照として扱われないことを意味し、。</target>
        </trans-unit>
        <trans-unit id="66ce82075ae6e82092c56a7bcf7aa3f519092869" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;group&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; are arbitrary values defined by the package author and usually a client will wish to resolve all entry points for a particular group. Read &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/setuptools.html#dynamic-discovery-of-services-and-plugins&quot;&gt;the setuptools docs&lt;/a&gt; for more information on entrypoints, their definition, and usage.</source>
          <target state="translated">&lt;code&gt;group&lt;/code&gt; と &lt;code&gt;name&lt;/code&gt; パッケージ作成者によって定義された任意の値であり、通常はクライアントが特定のグループのすべてのエントリポイントを解決することを望むだろう。読む&lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/setuptools.html#dynamic-discovery-of-services-and-plugins&quot;&gt;setuptoolsのドキュメントを&lt;/a&gt;より多くのエントリポイントについて、その定義、および使用のため。</target>
        </trans-unit>
        <trans-unit id="734b8ef87e08eaf3f6a91d381e68a3ec5afe96cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handle_request()&lt;/code&gt; method is called once all relevant input has been marshalled, after setting the channel terminator to &lt;code&gt;None&lt;/code&gt; to ensure that any extraneous data sent by the web client are ignored.</source>
          <target state="translated">&lt;code&gt;handle_request()&lt;/code&gt; 関連するすべての入力はにチャネルターミネータを設定した後、整列化された後にメソッドが呼び出された &lt;code&gt;None&lt;/code&gt; のWebクライアントから送信された余分なデータが無視されることを保証します。</target>
        </trans-unit>
        <trans-unit id="cc968396993a8b75be630e29fb2af6f69b3b6185" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handlers&lt;/code&gt; entry is a comma-separated list of handler names, which must appear in the &lt;code&gt;[handlers]&lt;/code&gt; section. These names must appear in the &lt;code&gt;[handlers]&lt;/code&gt; section and have corresponding sections in the configuration file.</source>
          <target state="translated">&lt;code&gt;handlers&lt;/code&gt; エントリは、に表示される必要があり、ハンドラ名のカンマ区切りリストである &lt;code&gt;[handlers]&lt;/code&gt; セクション。これらの名前は &lt;code&gt;[handlers]&lt;/code&gt; セクションに表示され、対応するセクションが構成ファイルに含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="d0bdbe8053135d93602cf27febee65acb6f80d92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;help&lt;/code&gt; strings can include various format specifiers to avoid repetition of things like the program name or the argument &lt;a href=&quot;#default&quot;&gt;default&lt;/a&gt;. The available specifiers include the program name, &lt;code&gt;%(prog)s&lt;/code&gt; and most keyword arguments to &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt;, e.g. &lt;code&gt;%(default)s&lt;/code&gt;, &lt;code&gt;%(type)s&lt;/code&gt;, etc.:</source>
          <target state="translated">&lt;code&gt;help&lt;/code&gt; 文字列は、プログラム名や引数のようなものの繰り返しを避けるために、様々なフォーマット指定子を含めることができ&lt;a href=&quot;#default&quot;&gt;、デフォルトを&lt;/a&gt;。使用可能な指定子には、プログラム名、 &lt;code&gt;%(prog)s&lt;/code&gt; 、および&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt;へのほとんどのキーワード引数が含まれます（例： &lt;code&gt;%(default)s&lt;/code&gt; 、 &lt;code&gt;%(type)s&lt;/code&gt; など）。</target>
        </trans-unit>
        <trans-unit id="8376e018657c4b93a09c801a30a071868534e6e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;help&lt;/code&gt; value is a string containing a brief description of the argument. When a user requests help (usually by using &lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt; at the command line), these &lt;code&gt;help&lt;/code&gt; descriptions will be displayed with each argument:</source>
          <target state="translated">&lt;code&gt;help&lt;/code&gt; 値は、引数の簡単な説明を含む文字列です。ユーザーがヘルプを要求すると（通常、コマンドラインで &lt;code&gt;-h&lt;/code&gt; または &lt;code&gt;--help&lt;/code&gt; を使用して）、これらの &lt;code&gt;help&lt;/code&gt; 説明が各引数とともに表示されます。</target>
        </trans-unit>
        <trans-unit id="e141e9805f4250470f88de20907a8951788930fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;in&lt;/code&gt; and &lt;code&gt;not in&lt;/code&gt; operations have the same priorities as the comparison operations. The &lt;code&gt;+&lt;/code&gt; (concatenation) and &lt;code&gt;*&lt;/code&gt; (repetition) operations have the same priority as the corresponding numeric operations. &lt;a href=&quot;#id14&quot; id=&quot;id4&quot;&gt;3&lt;/a&gt;</source>
          <target state="translated">して &lt;code&gt;not in&lt;/code&gt; の操作は比較演算と同じ優先順位を持っています。 &lt;code&gt;+&lt;/code&gt; （連結）および &lt;code&gt;*&lt;/code&gt; （繰り返し）の操作は、対応する数値演算と同じ優先度を有します。&lt;a href=&quot;#id14&quot; id=&quot;id4&quot;&gt;３&lt;/a&gt; &lt;code&gt;in&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5250a5eeb7f9d4c6ad580919cbbcca70c30999a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;level&lt;/code&gt; and &lt;code&gt;handlers&lt;/code&gt; entries are interpreted as for the root logger, except that if a non-root logger&amp;rsquo;s level is specified as &lt;code&gt;NOTSET&lt;/code&gt;, the system consults loggers higher up the hierarchy to determine the effective level of the logger. The &lt;code&gt;propagate&lt;/code&gt; entry is set to 1 to indicate that messages must propagate to handlers higher up the logger hierarchy from this logger, or 0 to indicate that messages are &lt;strong&gt;not&lt;/strong&gt; propagated to handlers up the hierarchy. The &lt;code&gt;qualname&lt;/code&gt; entry is the hierarchical channel name of the logger, that is to say the name used by the application to get the logger.</source>
          <target state="translated">&lt;code&gt;level&lt;/code&gt; と &lt;code&gt;handlers&lt;/code&gt; エントリは、非ルートロガーのレベルは以下のように指定されている場合以外は、ルート・ロガーのように解釈される &lt;code&gt;NOTSET&lt;/code&gt; ロガーの有効レベルを決定するために、階層アップ高いシステム調べロガー。 &lt;code&gt;propagate&lt;/code&gt; エントリは、メッセージが、メッセージがされていることを示すためにロガーこのロガーから階層、または0まで上位のハンドラに伝播しなければならないことを示すために1に設定されて&lt;strong&gt;いない&lt;/strong&gt;階層までのハンドラに伝播します。 &lt;code&gt;qualname&lt;/code&gt; のエントリはロガーを取得するためにアプリケーションが使用する名前を言うことですロガーの階層的なチャンネル名です。</target>
        </trans-unit>
        <trans-unit id="a1cc2815c38730b635f4df6ea065b320e9beb19c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;level&lt;/code&gt; entry can be one of &lt;code&gt;DEBUG, INFO, WARNING, ERROR, CRITICAL&lt;/code&gt; or &lt;code&gt;NOTSET&lt;/code&gt;. For the root logger only, &lt;code&gt;NOTSET&lt;/code&gt; means that all messages will be logged. Level values are &lt;a href=&quot;functions#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;uated in the context of the &lt;code&gt;logging&lt;/code&gt; package&amp;rsquo;s namespace.</source>
          <target state="translated">&lt;code&gt;level&lt;/code&gt; エントリは、のいずれかになります &lt;code&gt;DEBUG, INFO, WARNING, ERROR, CRITICAL&lt;/code&gt; または &lt;code&gt;NOTSET&lt;/code&gt; 。ルートロガーの場合のみ、 &lt;code&gt;NOTSET&lt;/code&gt; はすべてのメッセージがログに記録されることを意味します。レベル値は、 &lt;code&gt;logging&lt;/code&gt; パッケージの名前空間のコンテキストで&lt;a href=&quot;functions#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; さ&lt;/a&gt;れます。</target>
        </trans-unit>
        <trans-unit id="20549cb4258c041928c1d53bc24856087374a8f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;logical_and()&lt;/code&gt;, &lt;code&gt;logical_invert()&lt;/code&gt;, &lt;code&gt;logical_or()&lt;/code&gt;, and &lt;code&gt;logical_xor()&lt;/code&gt; methods expect their arguments to be &lt;em&gt;logical operands&lt;/em&gt;. A &lt;em&gt;logical operand&lt;/em&gt; is a &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instance whose exponent and sign are both zero, and whose digits are all either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;logical_and()&lt;/code&gt; 、 &lt;code&gt;logical_invert()&lt;/code&gt; 、 &lt;code&gt;logical_or()&lt;/code&gt; 、および &lt;code&gt;logical_xor()&lt;/code&gt; メソッドは、その引数があることを期待&lt;em&gt;する論理オペランド&lt;/em&gt;。&lt;em&gt;論理オペランドが&lt;/em&gt;ある&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;その指数と符号の両方がゼロであり、その数字のすべてのいずれかであるインスタンス &lt;code&gt;0&lt;/code&gt; または &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2894cd9ca319bdc7c0ff6fb46276e37f22647d34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; and &lt;code&gt;flags&lt;/code&gt; arguments may have been modified or inferred from the original call.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; と &lt;code&gt;flags&lt;/code&gt; 引数が変更されたり、元の呼び出しから推測されている可能性があります。</target>
        </trans-unit>
        <trans-unit id="17efeea07dfaa7e18f0e4f49edec6a634a2254b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;path&lt;/code&gt; attributes can be set using keyword-only arguments to the constructor. When set they represent the name of the module that was attempted to be imported and the path to any file which triggered the exception, respectively.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; と &lt;code&gt;path&lt;/code&gt; 属性は、コンストラクタにキーワードのみの引数を使用して設定することができます。設定されると、インポートしようとしたモジュールの名前と、例外をトリガーしたファイルへのパスをそれぞれ表します。</target>
        </trans-unit>
        <trans-unit id="44ec035ffa5b84f633e8a9db377a08d7cf3735fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; is potentially a period-separated hierarchical value, like &lt;code&gt;foo.bar.baz&lt;/code&gt; (though it could also be just plain &lt;code&gt;foo&lt;/code&gt;, for example). Loggers that are further down in the hierarchical list are children of loggers higher up in the list. For example, given a logger with a name of &lt;code&gt;foo&lt;/code&gt;, loggers with names of &lt;code&gt;foo.bar&lt;/code&gt;, &lt;code&gt;foo.bar.baz&lt;/code&gt;, and &lt;code&gt;foo.bam&lt;/code&gt; are all descendants of &lt;code&gt;foo&lt;/code&gt;. The logger name hierarchy is analogous to the Python package hierarchy, and identical to it if you organise your loggers on a per-module basis using the recommended construction &lt;code&gt;logging.getLogger(__name__)&lt;/code&gt;. That&amp;rsquo;s because in a module, &lt;code&gt;__name__&lt;/code&gt; is the module&amp;rsquo;s name in the Python package namespace.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 同様に、潜在期間で区切られた階層値で &lt;code&gt;foo.bar.baz&lt;/code&gt; （それはまた、単純であり得るけれども &lt;code&gt;foo&lt;/code&gt; 例えば、）。階層リストのさらに下にあるロガーは、リストの上位にあるロガーの子です。たとえば、名前が &lt;code&gt;foo&lt;/code&gt; のロガーを指定すると、名前が &lt;code&gt;foo.bar&lt;/code&gt; 、 &lt;code&gt;foo.bar.baz&lt;/code&gt; 、および &lt;code&gt;foo.bam&lt;/code&gt; のロガーはすべて &lt;code&gt;foo&lt;/code&gt; の子孫です。ロガー名の階層はPythonパッケージ階層に類似しており、推奨される構築 &lt;code&gt;logging.getLogger(__name__)&lt;/code&gt; を使用してモジュールごとにロガーを整理する場合と同じです。それは、モジュール内で &lt;code&gt;__name__&lt;/code&gt; は、Pythonパッケージ名前空間でのモジュールの名前です。</target>
        </trans-unit>
        <trans-unit id="c463374771af257aa19a3e7470848bbe19caa8c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;p1.stdout.close()&lt;/code&gt; call after starting the p2 is important in order for p1 to receive a SIGPIPE if p2 exits before p1.</source>
          <target state="translated">p2がp1より前に存在する場合にp1がSIGPIPEを受信するには、p2の開始後の &lt;code&gt;p1.stdout.close()&lt;/code&gt; 呼び出しが重要です。</target>
        </trans-unit>
        <trans-unit id="6c5afe3f20d08659f0801d09a465c4f246d3ab30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pickle&lt;/code&gt; module &lt;strong&gt;is not secure&lt;/strong&gt;. Only unpickle data you trust.</source>
          <target state="translated">&lt;code&gt;pickle&lt;/code&gt; モジュールは&lt;strong&gt;安全ではありません&lt;/strong&gt;。信頼できるデータのみを取り出します。</target>
        </trans-unit>
        <trans-unit id="4f25fd4a79428a7a734c8203ffa74cdc9ffac57a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;poll()&lt;/code&gt; system call, supported on most Unix systems, provides better scalability for network servers that service many, many clients at the same time. &lt;code&gt;poll()&lt;/code&gt; scales better because the system call only requires listing the file descriptors of interest, while &lt;code&gt;select()&lt;/code&gt; builds a bitmap, turns on bits for the fds of interest, and then afterward the whole bitmap has to be linearly scanned again. &lt;code&gt;select()&lt;/code&gt; is O(highest file descriptor), while &lt;code&gt;poll()&lt;/code&gt; is O(number of file descriptors).</source>
          <target state="translated">&lt;code&gt;poll()&lt;/code&gt; ほとんどのUnixシステムでサポートされているシステム・コールは、ネットワーク・サーバのための優れた拡張性を提供すると同時に、サービスの多くは、多くのクライアントが。システムコールが必要なファイル記述子をリストするだけでよいので、 &lt;code&gt;poll()&lt;/code&gt; はより適切にスケーリングし &lt;code&gt;select()&lt;/code&gt; はビットマップを構築し、関心のあるfdsのビットをオンにします。その後、ビットマップ全体を再度線形スキャンする必要があります。 &lt;code&gt;select()&lt;/code&gt; はO（最高のファイル記述子）、 &lt;code&gt;poll()&lt;/code&gt; はO（ファイル記述子の数）です。</target>
        </trans-unit>
        <trans-unit id="3adfcd2af06573abb2087db55784b60bbc3f041d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;popitem()&lt;/code&gt; method of &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; has a different signature. It accepts an optional argument to specify which item is popped.</source>
          <target state="translated">&lt;code&gt;popitem()&lt;/code&gt; のメソッド&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; は&lt;/a&gt;異なる署名を有します。オプションの引数を受け入れて、ポップするアイテムを指定します。</target>
        </trans-unit>
        <trans-unit id="f26b175564211cc5d95f4799adf4280e32941448" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prefix_chars=&lt;/code&gt; argument defaults to &lt;code&gt;'-'&lt;/code&gt;. Supplying a set of characters that does not include &lt;code&gt;-&lt;/code&gt; will cause &lt;code&gt;-f/--foo&lt;/code&gt; options to be disallowed.</source>
          <target state="translated">&lt;code&gt;prefix_chars=&lt;/code&gt; に引数のデフォルトは &lt;code&gt;'-'&lt;/code&gt; 。 &lt;code&gt;-&lt;/code&gt; を含まない文字セットを指定すると、 &lt;code&gt;-f/--foo&lt;/code&gt; オプションが許可されなくなります。</target>
        </trans-unit>
        <trans-unit id="6cbc1096c67f757db14d69db3e5c36cba803f269" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pyexpat&lt;/code&gt; module is not secure against maliciously constructed data. If you need to parse untrusted or unauthenticated data see &lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML vulnerabilities&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;pyexpat&lt;/code&gt; モジュールは、悪意を持って構築されたデータに対して安全ではありません。信頼できないデータや認証されていないデータを解析する必要がある場合は、&lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XMLの脆弱性を&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="56906a2e6d9db176d17fb2b6647596ea13b54940" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;quantize()&lt;/code&gt; method rounds a number to a fixed exponent. This method is useful for monetary applications that often round results to a fixed number of places:</source>
          <target state="translated">&lt;code&gt;quantize()&lt;/code&gt; メソッドは、固定された指数に番号を丸め。このメソッドは、結果を固定数に丸めることが多い金融アプリケーションに役立ちます。</target>
        </trans-unit>
        <trans-unit id="48b01acd0241a2442ff5b4aae7c3e1806b139057" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read()&lt;/code&gt; (when called with a positive argument), &lt;code&gt;readinto()&lt;/code&gt; and &lt;code&gt;write()&lt;/code&gt; methods on this class will only make one system call.</source>
          <target state="translated">このクラスの &lt;code&gt;read()&lt;/code&gt; （正の引数で呼び出された場合）、 &lt;code&gt;readinto()&lt;/code&gt; 、および &lt;code&gt;write()&lt;/code&gt; メソッドは、システムコールを1つだけ実行します。</target>
        </trans-unit>
        <trans-unit id="56f3c5d9f151c39458862c4187286a2e030ef45f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;register()&lt;/code&gt; attribute returns the undecorated function which enables decorator stacking, pickling, as well as creating unit tests for each variant independently:</source>
          <target state="translated">&lt;code&gt;register()&lt;/code&gt; 属性は、デコレータスタッキングを可能にする非装飾機能を返し酸洗、ならびに独立して各変異体のためのユニットテストを作成します。</target>
        </trans-unit>
        <trans-unit id="3dc67ec796044fe79c20baf27688a12b0b165186" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;repr&lt;/code&gt; function is used for interactive echo of expression values. It returns an altered version of the input string in which control codes, some BMP codepoints, and all non-BMP codepoints are replaced with escape codes. As demonstrated above, it allows one to identify the characters in a string, regardless of how they are displayed.</source>
          <target state="translated">&lt;code&gt;repr&lt;/code&gt; の関数は、式の値のインタラクティブなエコーのために使用されています。制御コード、一部のBMPコードポイント、およびすべての非BMPコードポイントがエスケープコードに置き換えられた、入力文字列の変更されたバージョンを返します。上記のように、表示方法に関係なく、文字列内の文字を識別することができます。</target>
        </trans-unit>
        <trans-unit id="6694efe52e7d12ce180dcca2b71b57be3eda6fae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reverse()&lt;/code&gt; method modifies the sequence in place for economy of space when reversing a large sequence. To remind users that it operates by side effect, it does not return the reversed sequence.</source>
          <target state="translated">&lt;code&gt;reverse()&lt;/code&gt; 大規模なシーケンスを逆転するときの方法は、スペースの節約のために順序を変更します。副作用で動作することをユーザーに思い出させるために、逆のシーケンスは返しません。</target>
        </trans-unit>
        <trans-unit id="70d611f664da4872758f6cac2500dc6d64789f50" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rfile&lt;/code&gt; attributes of both classes support the &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt; readable interface, and &lt;code&gt;DatagramRequestHandler.wfile&lt;/code&gt; supports the &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt; writable interface.</source>
          <target state="translated">両方のクラスの &lt;code&gt;rfile&lt;/code&gt; 属性は&lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; &lt;/a&gt;読み取り可能なインターフェースをサポートし、 &lt;code&gt;DatagramRequestHandler.wfile&lt;/code&gt; は&lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; &lt;/a&gt;書き込み可能なインターフェースをサポートします。</target>
        </trans-unit>
        <trans-unit id="2e5a1e0c9ba618171130cb7735890718c55a68eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;run*&lt;/code&gt; functions and &lt;a href=&quot;#pdb.set_trace&quot;&gt;&lt;code&gt;set_trace()&lt;/code&gt;&lt;/a&gt; are aliases for instantiating the &lt;a href=&quot;#pdb.Pdb&quot;&gt;&lt;code&gt;Pdb&lt;/code&gt;&lt;/a&gt; class and calling the method of the same name. If you want to access further features, you have to do this yourself:</source>
          <target state="translated">&lt;code&gt;run*&lt;/code&gt; 機能と&lt;a href=&quot;#pdb.set_trace&quot;&gt; &lt;code&gt;set_trace()&lt;/code&gt; &lt;/a&gt;インスタンス化のための別名である&lt;a href=&quot;#pdb.Pdb&quot;&gt; &lt;code&gt;Pdb&lt;/code&gt; &lt;/a&gt;クラスを、同じ名前のメソッドを呼び出します。さらに機能にアクセスしたい場合は、自分でこれを行う必要があります。</target>
        </trans-unit>
        <trans-unit id="b0c7daa1f0bf95ee399648b399e3569e912a4226" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sentinel&lt;/code&gt; object provides a convenient way of providing unique objects for your tests.</source>
          <target state="translated">&lt;code&gt;sentinel&lt;/code&gt; オブジェクトは、あなたのテストのためのユニークなオブジェクトを提供する便利な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="4f2b8b9e54da55b5343a0feb08a9e06383efbd02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shake_128()&lt;/code&gt; and &lt;code&gt;shake_256()&lt;/code&gt; algorithms provide variable length digests with length_in_bits//2 up to 128 or 256 bits of security. As such, their digest methods require a length. Maximum length is not limited by the SHAKE algorithm.</source>
          <target state="translated">&lt;code&gt;shake_128()&lt;/code&gt; と &lt;code&gt;shake_256()&lt;/code&gt; アルゴリズムは、セキュリティの128または256ビットlength_in_bits // 2アップで可変長ダイジェストを提供します。そのため、それらのダイジェストメソッドには長さが必要です。最大長は、SHAKEアルゴリズムによって制限されません。</target>
        </trans-unit>
        <trans-unit id="2679ce48058db1acf0cd9c304d5a336da90caf62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;side_effect&lt;/code&gt; can also be any iterable object. Repeated calls to the mock will return values from the iterable (until the iterable is exhausted and a &lt;a href=&quot;exceptions#StopIteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt; is raised):</source>
          <target state="translated">&lt;code&gt;side_effect&lt;/code&gt; はまた、任意の反復可能なオブジェクトにすることができます。モックを繰り返し呼び出すと、&lt;a href=&quot;exceptions#StopIteration&quot;&gt; &lt;code&gt;StopIteration&lt;/code&gt; &lt;/a&gt;から値が返されます（イテラブルが使い果たされてStopIterationが発生するまで）。</target>
        </trans-unit>
        <trans-unit id="bbc828704026e73a7132d7861c1f6ea3b2c9c718" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sort&lt;/code&gt; command is a variant of &lt;code&gt;search&lt;/code&gt; with sorting semantics for the results. Returned data contains a space separated list of matching message numbers.</source>
          <target state="translated">&lt;code&gt;sort&lt;/code&gt; コマンドはの変形で &lt;code&gt;search&lt;/code&gt; 結果を得るためのセマンティクスを分類しています。返されるデータには、スペースで区切られた一致するメッセージ番号のリストが含まれます。</target>
        </trans-unit>
        <trans-unit id="5e876713b1b58ed7e57cd0a3c49de12c593470a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str&lt;/code&gt; value of a &lt;code&gt;Group&lt;/code&gt; is formatted according to &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;, but with no Content Transfer Encoding of any non-ASCII characters. If &lt;code&gt;display_name&lt;/code&gt; is none and there is a single &lt;code&gt;Address&lt;/code&gt; in the &lt;code&gt;addresses&lt;/code&gt; list, the &lt;code&gt;str&lt;/code&gt; value will be the same as the &lt;code&gt;str&lt;/code&gt; of that single &lt;code&gt;Address&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Group&lt;/code&gt; の &lt;code&gt;str&lt;/code&gt; 値は&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;に従ってフォーマットされてい&lt;strong&gt;ます&lt;/strong&gt;が、非ASCII文字のコンテンツ転送エンコーディングはありません。場合 &lt;code&gt;display_name&lt;/code&gt; 何もありませんし、単一がある &lt;code&gt;Address&lt;/code&gt; での &lt;code&gt;addresses&lt;/code&gt; リストは、 &lt;code&gt;str&lt;/code&gt; 値が同じになります &lt;code&gt;str&lt;/code&gt; のその単一の &lt;code&gt;Address&lt;/code&gt; 。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b50753b2718f1b5d3b1b08f7d48365835500f23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str&lt;/code&gt; value of the object is the address quoted according to &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; rules, but with no Content Transfer Encoding of any non-ASCII characters.</source>
          <target state="translated">オブジェクトの &lt;code&gt;str&lt;/code&gt; 値は、&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;ルールに従って引用されたアドレスですが、非ASCII文字のコンテンツ転送エンコーディングはありません。</target>
        </trans-unit>
        <trans-unit id="5863a575332c9bfbc7b8eeb262ad8abeefba260f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;strptime()&lt;/code&gt; method can parse years in the full [1, 9999] range, but years &amp;lt; 1000 must be zero-filled to 4-digit width.</source>
          <target state="translated">&lt;code&gt;strptime()&lt;/code&gt; メソッドは[ 1、9999 ]の範囲全体で年を解析できますが、1000未満の年は4桁の幅にゼロで埋める必要があります。</target>
        </trans-unit>
        <trans-unit id="f40fa8d24afda44ef7ba1b9017535f589e255937" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subject&lt;/code&gt; and &lt;code&gt;issuer&lt;/code&gt; fields are tuples containing the sequence of relative distinguished names (RDNs) given in the certificate&amp;rsquo;s data structure for the respective fields, and each RDN is a sequence of name-value pairs. Here is a real-world example:</source>
          <target state="translated">&lt;code&gt;subject&lt;/code&gt; と &lt;code&gt;issuer&lt;/code&gt; フィールドは、各フィールドの証明書のデータ構造に与えられた相対識別名（のRDN）の配列を含むタプルであり、各RDNは、名前と値のペアの配列です。これが実際の例です：</target>
        </trans-unit>
        <trans-unit id="48bc15cd70ec89240e8c5077ca67cca8ab36280e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;thread&lt;/code&gt; command is a variant of &lt;code&gt;search&lt;/code&gt; with threading semantics for the results. Returned data contains a space separated list of thread members.</source>
          <target state="translated">&lt;code&gt;thread&lt;/code&gt; コマンドはの変形で &lt;code&gt;search&lt;/code&gt; 結果のためのセマンティクスをスレッドと。返されるデータには、スペースで区切られたスレッドメンバーのリストが含まれます。</target>
        </trans-unit>
        <trans-unit id="95c4f2f11ca60f7337a0bd2dddfc357c898cff74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ttk.Combobox&lt;/code&gt; widget combines a text field with a pop-down list of values. This widget is a subclass of &lt;code&gt;Entry&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ttk.Combobox&lt;/code&gt; 値のポップダウンリストでテキストフィールドを組み合わせたウィジェット。このウィジェットは &lt;code&gt;Entry&lt;/code&gt; のサブクラスです。</target>
        </trans-unit>
        <trans-unit id="352dd537bd626bd414d868a36dd17e8367456400" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ttk.Progressbar&lt;/code&gt; widget shows the status of a long-running operation. It can operate in two modes: 1) the determinate mode which shows the amount completed relative to the total amount of work to be done and 2) the indeterminate mode which provides an animated display to let the user know that work is progressing.</source>
          <target state="translated">&lt;code&gt;ttk.Progressbar&lt;/code&gt; はショーに長時間実行操作のステータスをウィジェット。2つのモードで動作できます。1）実行する作業の総量に対して完了した量を示す確定モードと、2）作業が進行中であることをユーザーに知らせるアニメーション表示を提供する不確定モード。</target>
        </trans-unit>
        <trans-unit id="251bfa8f490dc70c8808050862bc83c86fb9d1f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ttk.Separator&lt;/code&gt; widget displays a horizontal or vertical separator bar.</source>
          <target state="translated">&lt;code&gt;ttk.Separator&lt;/code&gt; は、ディスプレイを水平または垂直セパレータバーウィジェット。</target>
        </trans-unit>
        <trans-unit id="f758b0179e7d65969a79f1e77fd20a0943975f0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ttk.Sizegrip&lt;/code&gt; widget (also known as a grow box) allows the user to resize the containing toplevel window by pressing and dragging the grip.</source>
          <target state="translated">&lt;code&gt;ttk.Sizegrip&lt;/code&gt; の（また、グローボックスとしても知られる）ウィジェットは、ユーザがグリップを押してドラッグすることを含むトップレベルウィンドウのサイズを変更することを可能にします。</target>
        </trans-unit>
        <trans-unit id="9f7c9dc42acbbb7afe7822de5598582a08914264" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ttk.Spinbox&lt;/code&gt; widget is a &lt;code&gt;ttk.Entry&lt;/code&gt; enhanced with increment and decrement arrows. It can be used for numbers or lists of string values. This widget is a subclass of &lt;code&gt;Entry&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ttk.Spinbox&lt;/code&gt; あるウィジェット &lt;code&gt;ttk.Entry&lt;/code&gt; インクリメントとデクリメント矢印で強化。数値または文字列値のリストに使用できます。このウィジェットは &lt;code&gt;Entry&lt;/code&gt; のサブクラスです。</target>
        </trans-unit>
        <trans-unit id="e6fc76a70719682fd79d2ebe3a3918e54edb387f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ttk.Treeview&lt;/code&gt; widget displays a hierarchical collection of items. Each item has a textual label, an optional image, and an optional list of data values. The data values are displayed in successive columns after the tree label.</source>
          <target state="translated">&lt;code&gt;ttk.Treeview&lt;/code&gt; は、ディスプレイに項目の階層コレクションをウィジェット。各アイテムには、テキストラベル、オプションの画像、およびデータ値のオプションのリストがあります。データ値は、ツリーラベルの後の連続する列に表示されます。</target>
        </trans-unit>
        <trans-unit id="f0e2919d156958c0ab2b6cf34ca6fec36edfad34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;username&lt;/code&gt; portion of the address, with all quoting removed.</source>
          <target state="translated">アドレスの &lt;code&gt;username&lt;/code&gt; 部分。引用符はすべて削除されています。</target>
        </trans-unit>
        <trans-unit id="7462f687d399e631ee022aa8a0c1be3259a71d02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;username@domain&lt;/code&gt; portion of the address, correctly quoted for use as a bare address (the second form shown above). This attribute is not mutable.</source>
          <target state="translated">アドレスの &lt;code&gt;username@domain&lt;/code&gt; 部分。ベアアドレスとして使用するために正しく引用されています（上記の2番目の形式）。この属性は変更できません。</target>
        </trans-unit>
        <trans-unit id="1e04165a0b7839d9196d963a9d99b152be548425" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;verify&lt;/code&gt; argument, if specified, should be a callable which should verify whether bytes received across the socket are valid and should be processed. This could be done by encrypting and/or signing what is sent across the socket, such that the &lt;code&gt;verify&lt;/code&gt; callable can perform signature verification and/or decryption. The &lt;code&gt;verify&lt;/code&gt; callable is called with a single argument - the bytes received across the socket - and should return the bytes to be processed, or &lt;code&gt;None&lt;/code&gt; to indicate that the bytes should be discarded. The returned bytes could be the same as the passed in bytes (e.g. when only verification is done), or they could be completely different (perhaps if decryption were performed).</source>
          <target state="translated">&lt;code&gt;verify&lt;/code&gt; 引数は、指定された場合は、ソケット間で受信したバイトが有効であり、処理されるべきであるかどうかを確認する必要のある呼び出し可能でなければなりません。これは、ソケットを介して送信されるものを暗号化および/または署名 &lt;code&gt;verify&lt;/code&gt; ことで実行でき、verify callableが署名の検証および/または復号化を実行できるようになります。 &lt;code&gt;verify&lt;/code&gt; 呼び出し可能な単一の引数で呼び出された-ソケット間で受信バイト-と返す必要があり、処理すべきバイト、または &lt;code&gt;None&lt;/code&gt; バイトを破棄しなければならないことを示していないし。返されたバイトは、渡されたバイトと同じである場合（たとえば、検証のみが行われる場合）、または完全に異なる場合があります（おそらく復号化が実行された場合）。</target>
        </trans-unit>
        <trans-unit id="2bfd67854453b9508617bc5ecb87d6bf83b9e2f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;version()&lt;/code&gt; function is the quickest way to get a distribution&amp;rsquo;s version number, as a string:</source>
          <target state="translated">&lt;code&gt;version()&lt;/code&gt; 関数は、文字列として、ディストリビューションのバージョン番号を取得する最も簡単な方法です：</target>
        </trans-unit>
        <trans-unit id="9457eb2c5daeb61cce915fa460df6791a47eebc2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;while&lt;/code&gt; loop checking for the application&amp;rsquo;s condition is necessary because &lt;a href=&quot;#threading.Condition.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; can return after an arbitrary long time, and the condition which prompted the &lt;a href=&quot;#threading.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; call may no longer hold true. This is inherent to multi-threaded programming. The &lt;a href=&quot;#threading.Condition.wait_for&quot;&gt;&lt;code&gt;wait_for()&lt;/code&gt;&lt;/a&gt; method can be used to automate the condition checking, and eases the computation of timeouts:</source>
          <target state="translated">&lt;a href=&quot;#threading.Condition.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;が任意の長い時間の後に戻る可能性があり、&lt;a href=&quot;#threading.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;呼び出しを促した条件がtrueに保持されなくなる可能性があるため、アプリケーションの条件の &lt;code&gt;while&lt;/code&gt; ループチェックが必要です。これはマルチスレッドプログラミングに固有のものです。&lt;a href=&quot;#threading.Condition.wait_for&quot;&gt; &lt;code&gt;wait_for()&lt;/code&gt; &lt;/a&gt;メソッドは、状態チェックを自動化するために使用され、タイムアウトの計算を容易にすることができます。</target>
        </trans-unit>
        <trans-unit id="68b060fff3c4e153991c4ede204ad1db0712fced" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;with&lt;/code&gt; block logs on &lt;em&gt;logger&lt;/em&gt; with minimum &lt;em&gt;level&lt;/em&gt;</source>
          <target state="translated">上のブロックログ&lt;em&gt;ロガー&lt;/em&gt;最小と&lt;em&gt;レベル&lt;/em&gt; &lt;code&gt;with&lt;/code&gt; &lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9356ea9fa5513a007b3e1c50146086929d32ee69" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Content-Length&lt;/em&gt; is treated as a lower bound: if there&amp;rsquo;s more data to read, urlretrieve reads more data, but if less data is available, it raises the exception.</source>
          <target state="translated">&lt;em&gt;コンテンツの長さは、&lt;/em&gt;下限として扱われます：読むために、より多くのデータがあるかどう、urlretrieveは、より多くのデータを読み込み、あまりデータが利用可能であるならば、それは例外が発生します。</target>
        </trans-unit>
        <trans-unit id="a0fdb4923aa98d7d944fbee512e9d4d1baf28cd0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Emin&lt;/em&gt; and &lt;em&gt;Emax&lt;/em&gt; fields are integers specifying the outer limits allowable for exponents. &lt;em&gt;Emin&lt;/em&gt; must be in the range [&lt;a href=&quot;#decimal.MIN_EMIN&quot;&gt;&lt;code&gt;MIN_EMIN&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;0&lt;/code&gt;], &lt;em&gt;Emax&lt;/em&gt; in the range [&lt;code&gt;0&lt;/code&gt;, &lt;a href=&quot;#decimal.MAX_EMAX&quot;&gt;&lt;code&gt;MAX_EMAX&lt;/code&gt;&lt;/a&gt;].</source>
          <target state="translated">&lt;em&gt;エミン&lt;/em&gt;と&lt;em&gt;Emaxの&lt;/em&gt;フィールドには、指数範囲の外側の限界を指定する整数です。&lt;em&gt;Emin&lt;/em&gt;は[ &lt;a href=&quot;#decimal.MIN_EMIN&quot;&gt; &lt;code&gt;MIN_EMIN&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;0&lt;/code&gt; ]の範囲内でなければならず、&lt;em&gt;Emax&lt;/em&gt;は[ &lt;code&gt;0&lt;/code&gt; 、&lt;a href=&quot;#decimal.MAX_EMAX&quot;&gt; &lt;code&gt;MAX_EMAX&lt;/code&gt; &lt;/a&gt; ] の範囲内でなければなりません。</target>
        </trans-unit>
        <trans-unit id="099de42faf0f0b2a0cf8ddac8528d10fd5f74ec0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;allow_fragments&lt;/em&gt; argument has the same meaning and default as for &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt;&lt;code&gt;urlparse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;allow_fragmentsの&lt;/em&gt;引数はと同じ意味とデフォルトを持っている&lt;a href=&quot;#urllib.parse.urlparse&quot;&gt; &lt;code&gt;urlparse()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e831ae773ee2dd264b6b78cde7feab2044ba27e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;arg&lt;/em&gt; parameter depends on the previous event.</source>
          <target state="translated">&lt;em&gt;引数の&lt;/em&gt;パラメータは、以前のイベントに依存します。</target>
        </trans-unit>
        <trans-unit id="e8e08e0c1e7cb5d08ab5c2d641f0e97d0a518bb3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;args&lt;/em&gt; argument as it was passed to &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; &amp;ndash; a sequence of program arguments or else a single string.</source>
          <target state="translated">&lt;em&gt;引数の&lt;/em&gt;それが渡されたとして、引数&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt; -プログラム引数の配列、または他の単一の文字列。</target>
        </trans-unit>
        <trans-unit id="1d3a577fd674bcea3227fd720956de76ed22bd4d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;args&lt;/em&gt; argument has the following attributes:</source>
          <target state="translated">&lt;em&gt;引数の&lt;/em&gt;引数には、次の属性があります。</target>
        </trans-unit>
        <trans-unit id="fd13acf025140fb6639151e4ed9a4f868af627a2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;args&lt;/em&gt; parameter is set to the list of positional arguments to &lt;a href=&quot;#string.Formatter.vformat&quot;&gt;&lt;code&gt;vformat()&lt;/code&gt;&lt;/a&gt;, and the &lt;em&gt;kwargs&lt;/em&gt; parameter is set to the dictionary of keyword arguments.</source>
          <target state="translated">&lt;em&gt;引数&lt;/em&gt;の位置引数のリストに設定されたパラメータ&lt;a href=&quot;#string.Formatter.vformat&quot;&gt; &lt;code&gt;vformat()&lt;/code&gt; &lt;/a&gt;、および&lt;em&gt;kwargsから&lt;/em&gt;キーワード引数の辞書に設定されたパラメータ。</target>
        </trans-unit>
        <trans-unit id="cbfbb46472247d0b887aaa75774bf8ab442ab41a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;argv&lt;/em&gt; argument can be a list of options passed to the program, with the first element being the program name. If not specified or &lt;code&gt;None&lt;/code&gt;, the values of &lt;a href=&quot;sys#sys.argv&quot;&gt;&lt;code&gt;sys.argv&lt;/code&gt;&lt;/a&gt; are used.</source>
          <target state="translated">&lt;em&gt;argv&lt;/em&gt;引数は、最初の要素は、プログラム名であることで、プログラムに渡されるオプションのリストを指定できます。指定しないか &lt;code&gt;None&lt;/code&gt; の場合、&lt;a href=&quot;sys#sys.argv&quot;&gt; &lt;code&gt;sys.argv&lt;/code&gt; &lt;/a&gt;の値が使用されます。</target>
        </trans-unit>
        <trans-unit id="b0cc005a8dd1192de2426a343f6644b9f34b41bf" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;blacklist&lt;/em&gt; argument can be a set of names that must not be treated as part of the public API even though their names indicate otherwise.</source>
          <target state="translated">&lt;em&gt;ブラックリスト&lt;/em&gt;の引数は、その名前が示すそれ以外にも関わらず、公開APIの一部として扱われてはならない名前のセットすることができます。</target>
        </trans-unit>
        <trans-unit id="d472fb09d267545549f54dfcd1448efdf7d1a71a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;buffering&lt;/em&gt; argument is ignored. Its use is deprecated since Python 3.0.</source>
          <target state="translated">&lt;em&gt;バッファリングの&lt;/em&gt;引数は無視されます。その使用はPython 3.0以降廃止されました。</target>
        </trans-unit>
        <trans-unit id="9b5ef68ccd955c5bc87fad98f76a98a1362f7808" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;byteorder&lt;/em&gt; argument determines the byte order used to represent the integer. If &lt;em&gt;byteorder&lt;/em&gt; is &lt;code&gt;&quot;big&quot;&lt;/code&gt;, the most significant byte is at the beginning of the byte array. If &lt;em&gt;byteorder&lt;/em&gt; is &lt;code&gt;&quot;little&quot;&lt;/code&gt;, the most significant byte is at the end of the byte array. To request the native byte order of the host system, use &lt;a href=&quot;sys#sys.byteorder&quot;&gt;&lt;code&gt;sys.byteorder&lt;/code&gt;&lt;/a&gt; as the byte order value.</source>
          <target state="translated">&lt;em&gt;BYTEORDER&lt;/em&gt;引数は整数を表すために使用されるバイト順序を決定します。場合は&lt;em&gt;バイトオーダーが&lt;/em&gt;ある &lt;code&gt;&quot;big&quot;&lt;/code&gt; 、最上位バイトは、バイト配列の先頭にあります。場合は&lt;em&gt;バイトオーダーが&lt;/em&gt;あり &lt;code&gt;&quot;little&quot;&lt;/code&gt; 、最上位バイトがバイト配列の末尾にあります。ホストシステムのネイティブバイトオーダーを要求するには、バイトオーダー値として&lt;a href=&quot;sys#sys.byteorder&quot;&gt; &lt;code&gt;sys.byteorder&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="dfe4c096e9d46ef87c6014cc8115884999f9571d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;cadata&lt;/em&gt; object, if present, is either an ASCII string of one or more PEM-encoded certificates or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; of DER-encoded certificates. Like with &lt;em&gt;capath&lt;/em&gt; extra lines around PEM-encoded certificates are ignored but at least one certificate must be present.</source>
          <target state="translated">&lt;em&gt;cadataの&lt;/em&gt;オブジェクトが存在する場合、いずれか一つ以上のPEMエンコードされた証明書またはASCII文字列であり、&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;バイトのようなオブジェクト&lt;/a&gt; DER符号化された証明書。&lt;em&gt;capath&lt;/em&gt;と同様に、PEMエンコードされた証明書の周りの余分な行は無視されますが、少なくとも1つの証明書が存在する必要があります。</target>
        </trans-unit>
        <trans-unit id="fa644494d39e4ababa095081c9e901ded5d4e0f6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;cadefault&lt;/em&gt; parameter is ignored.</source>
          <target state="translated">&lt;em&gt;cadefaultの&lt;/em&gt;パラメータは無視されます。</target>
        </trans-unit>
        <trans-unit id="17c8b195b094fb49ee9de35d0bdf391b2aeafc14" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;cafile&lt;/em&gt; string, if present, is the path to a file of concatenated CA certificates in PEM format. See the discussion of &lt;a href=&quot;#ssl-certificates&quot;&gt;Certificates&lt;/a&gt; for more information about how to arrange the certificates in this file.</source>
          <target state="translated">&lt;em&gt;cafileの&lt;/em&gt;文字列は、存在する場合、PEM形式で連結されたCA証明書のファイルへのパスです。このファイルに証明書を配置する方法の詳細については、&lt;a href=&quot;#ssl-certificates&quot;&gt;証明書&lt;/a&gt;の説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="15c7daa6e069448b8e979e9ffc5f343170589a8c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;callback&lt;/em&gt; callable must be thread-safe.</source>
          <target state="translated">&lt;em&gt;コールバック&lt;/em&gt;呼び出し可能ではスレッドセーフでなければなりません。</target>
        </trans-unit>
        <trans-unit id="0f39a130157f612057b2a04830330e09fc1bb8b9" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;callback&lt;/em&gt; is called with the Future object as its only argument.</source>
          <target state="translated">&lt;em&gt;コールバックは、&lt;/em&gt;その唯一の引数として未来のオブジェクトと呼ばれています。</target>
        </trans-unit>
        <trans-unit id="7b7825c54e612df4242ae324acc59aa178b0a8be" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;capath&lt;/em&gt; string, if present, is the path to a directory containing several CA certificates in PEM format, following an &lt;a href=&quot;https://www.openssl.org/docs/manmaster/man3/SSL_CTX_load_verify_locations.html&quot;&gt;OpenSSL specific layout&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;capathの&lt;/em&gt;文字列は、存在する場合、次のPEM形式でいくつかのCA証明書、含んでいるディレクトリへのパス&lt;a href=&quot;https://www.openssl.org/docs/manmaster/man3/SSL_CTX_load_verify_locations.html&quot;&gt;のOpenSSL特定のレイアウト&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fb0d6c3c720e62f41c129079fa155f95ad67efe5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;capitals&lt;/em&gt; field is either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; (the default). If set to &lt;code&gt;1&lt;/code&gt;, exponents are printed with a capital &lt;code&gt;E&lt;/code&gt;; otherwise, a lowercase &lt;code&gt;e&lt;/code&gt; is used: &lt;code&gt;Decimal('6.02e+23')&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;大文字の&lt;/em&gt;フィールドのいずれかである &lt;code&gt;0&lt;/code&gt; または &lt;code&gt;1&lt;/code&gt; （デフォルト）。 &lt;code&gt;1&lt;/code&gt; に設定すると、指数は大文字の &lt;code&gt;E&lt;/code&gt; で出力されます。それ以外の場合は、小文字の &lt;code&gt;e&lt;/code&gt; が使用されます： &lt;code&gt;Decimal('6.02e+23')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a4471e81f460554b6a4cbdc7f3ddf8327b0a009" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;capturestderr&lt;/em&gt; argument is replaced with the &lt;em&gt;stderr&lt;/em&gt; argument.</source>
          <target state="translated">&lt;em&gt;capturestderrの&lt;/em&gt;引数は置き換えられ&lt;em&gt;標準エラー&lt;/em&gt;引数。</target>
        </trans-unit>
        <trans-unit id="82b367b59ab20936a4abae0ec9731b9670a88c72" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;cb_type&lt;/em&gt; parameter allow selection of the desired channel binding type. Valid channel binding types are listed in the &lt;a href=&quot;#ssl.CHANNEL_BINDING_TYPES&quot;&gt;&lt;code&gt;CHANNEL_BINDING_TYPES&lt;/code&gt;&lt;/a&gt; list. Currently only the &amp;lsquo;tls-unique&amp;rsquo; channel binding, defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc5929.html&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;RFC 5929&lt;/strong&gt;&lt;/a&gt;, is supported. &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised if an unsupported channel binding type is requested.</source>
          <target state="translated">&lt;em&gt;cb_typeの&lt;/em&gt;パラメータは、所望のチャネル結合型の選択を可能にします。有効なチャネルバインディングタイプは、&lt;a href=&quot;#ssl.CHANNEL_BINDING_TYPES&quot;&gt; &lt;code&gt;CHANNEL_BINDING_TYPES&lt;/code&gt; &lt;/a&gt;リストにリストされています。現在、&lt;a href=&quot;https://tools.ietf.org/html/rfc5929.html&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;RFC 5929&lt;/strong&gt;&lt;/a&gt;で定義され&lt;strong&gt;て&lt;/strong&gt;いる「tls-unique」チャネルバインディングのみがサポートされてい&lt;strong&gt;ます&lt;/strong&gt;。サポートされていないチャネルバインディングタイプが要求された場合、&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="f2ddc504d7b79bdd1162c0d5bd7b50a0a1521922" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;chars&lt;/em&gt; argument indicates the number of decoded code points or bytes to return. The &lt;a href=&quot;#codecs.StreamReader.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; method will never return more data than requested, but it might return less, if there is not enough available.</source>
          <target state="translated">&lt;em&gt;文字の&lt;/em&gt;引数は、デコードされたコードポイントの数を示し、または戻りバイト。&lt;a href=&quot;#codecs.StreamReader.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;メソッドは、要求されたよりも多くのデータを返すことはありませんが、使用可能な十分ながない場合には、以下返すことがあります。</target>
        </trans-unit>
        <trans-unit id="88197343169a15c41919f107e9bccf7f75352518" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;check&lt;/em&gt; argument specifies the type of integrity check to include in the compressed data. This check is used when decompressing, to ensure that the data has not been corrupted. Possible values are:</source>
          <target state="translated">&lt;em&gt;チェック&lt;/em&gt;引数は、圧縮されたデータに含まれるように整合性チェックの種類を指定します。このチェックは解凍時に使用され、データが破損していないことを確認します。可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="b3687dc03dd8946b6e5590e6e04cde893b863caa" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;check_hostname&lt;/em&gt; parameter is also deprecated; the &lt;a href=&quot;ssl#ssl.SSLContext.check_hostname&quot;&gt;&lt;code&gt;ssl.SSLContext.check_hostname&lt;/code&gt;&lt;/a&gt; attribute of &lt;em&gt;context&lt;/em&gt; should be used instead.</source>
          <target state="translated">&lt;em&gt;check_hostnameの&lt;/em&gt;パラメータは、廃止されました。代わりに、&lt;em&gt;コンテキスト&lt;/em&gt;の&lt;a href=&quot;ssl#ssl.SSLContext.check_hostname&quot;&gt; &lt;code&gt;ssl.SSLContext.check_hostname&lt;/code&gt; &lt;/a&gt;属性を使用する必要があり&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cb93343e76b87a0f171f91290f48a421c682e6a1" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;chunksize&lt;/em&gt; argument is the same as the one used by the &lt;a href=&quot;#multiprocessing.pool.Pool.map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; method. For very long iterables using a large value for &lt;em&gt;chunksize&lt;/em&gt; can make the job complete &lt;strong&gt;much&lt;/strong&gt; faster than using the default value of &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;チャンクサイズの&lt;/em&gt;引数は、で使用されるものと同じである&lt;a href=&quot;#multiprocessing.pool.Pool.map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;メソッド。非常に長い&lt;em&gt;イテラブルの&lt;/em&gt;場合、&lt;em&gt;chunksizeに&lt;/em&gt;大きな値を使用すると、デフォルト値の &lt;code&gt;1&lt;/code&gt; を使用するよりも&lt;strong&gt;はるかに&lt;/strong&gt;速くジョブを完了できます。</target>
        </trans-unit>
        <trans-unit id="fcdd385b6dc12a6a9473a0c033d73137d50d5433" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;clamp&lt;/em&gt; field is either &lt;code&gt;0&lt;/code&gt; (the default) or &lt;code&gt;1&lt;/code&gt;. If set to &lt;code&gt;1&lt;/code&gt;, the exponent &lt;code&gt;e&lt;/code&gt; of a &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instance representable in this context is strictly limited to the range &lt;code&gt;Emin - prec + 1 &amp;lt;= e &amp;lt;= Emax - prec + 1&lt;/code&gt;. If &lt;em&gt;clamp&lt;/em&gt; is &lt;code&gt;0&lt;/code&gt; then a weaker condition holds: the adjusted exponent of the &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instance is at most &lt;code&gt;Emax&lt;/code&gt;. When &lt;em&gt;clamp&lt;/em&gt; is &lt;code&gt;1&lt;/code&gt;, a large normal number will, where possible, have its exponent reduced and a corresponding number of zeros added to its coefficient, in order to fit the exponent constraints; this preserves the value of the number but loses information about significant trailing zeros. For example:</source>
          <target state="translated">&lt;em&gt;クランプ&lt;/em&gt;フィールドのいずれかであり、 &lt;code&gt;0&lt;/code&gt; （デフォルト）または &lt;code&gt;1&lt;/code&gt; 。 &lt;code&gt;1&lt;/code&gt; に設定すると、このコンテキストで表現可能な&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;インスタンスの指数 &lt;code&gt;e&lt;/code&gt; は、厳密に &lt;code&gt;Emin - prec + 1 &amp;lt;= e &amp;lt;= Emax - prec + 1&lt;/code&gt; の範囲に制限されます。場合&lt;em&gt;クランプが&lt;/em&gt;ある &lt;code&gt;0&lt;/code&gt; 次に弱い条件が成立するの調整指数&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;インスタンスは以下である &lt;code&gt;Emax&lt;/code&gt; 。&lt;em&gt;クランプ&lt;/em&gt;が &lt;code&gt;1&lt;/code&gt; の場合&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;、大きい正規数は、可能であれば、指数を減らし、対応する数のゼロを係数に追加して、指数制約に適合させます。これにより数値の値は保持されますが、後続の重要なゼロに関する情報は失われます。例えば：</target>
        </trans-unit>
        <trans-unit id="e7d326f4fcf7f161639b74c69e8c84eea6966131" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;client_connected_cb&lt;/em&gt; callback is called whenever a new client connection is established. It receives a &lt;code&gt;(reader, writer)&lt;/code&gt; pair as two arguments, instances of the &lt;a href=&quot;#asyncio.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; classes.</source>
          <target state="translated">&lt;em&gt;client_connected_cbの&lt;/em&gt;新しいクライアント接続が確立されるたびにコールバックが呼び出されます。これは、受信 &lt;code&gt;(reader, writer)&lt;/code&gt; 二つの引数のインスタンスとして一対&lt;a href=&quot;#asyncio.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#asyncio.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;クラス。</target>
        </trans-unit>
        <trans-unit id="f4a778098245593126ac70d38e2feddb7c5b0931" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;comment_factory&lt;/em&gt; and &lt;em&gt;pi_factory&lt;/em&gt; functions, when given, should behave like the &lt;a href=&quot;#xml.etree.ElementTree.Comment&quot;&gt;&lt;code&gt;Comment()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#xml.etree.ElementTree.ProcessingInstruction&quot;&gt;&lt;code&gt;ProcessingInstruction()&lt;/code&gt;&lt;/a&gt; functions to create comments and processing instructions. When not given, the default factories will be used. When &lt;em&gt;insert_comments&lt;/em&gt; and/or &lt;em&gt;insert_pis&lt;/em&gt; is true, comments/pis will be inserted into the tree if they appear within the root element (but not outside of it).</source>
          <target state="translated">&lt;em&gt;comment_factory&lt;/em&gt;と&lt;em&gt;pi_factory&lt;/em&gt;機能が与えられたとき、同じように振る舞うべき&lt;a href=&quot;#xml.etree.ElementTree.Comment&quot;&gt; &lt;code&gt;Comment()&lt;/code&gt; &lt;/a&gt;及び&lt;a href=&quot;#xml.etree.ElementTree.ProcessingInstruction&quot;&gt; &lt;code&gt;ProcessingInstruction()&lt;/code&gt; &lt;/a&gt;関数は、コメントおよび処理命令を作成します。指定しない場合、デフォルトのファクトリが使用されます。とき&lt;em&gt;insert_comments&lt;/em&gt;および/または&lt;em&gt;insert_pisが&lt;/em&gt;真である、彼らはルート要素（ただし、外部のそれの）内に表示された場合、コメント/ PISがツリーに挿入されます。</target>
        </trans-unit>
        <trans-unit id="ae46dd7b8b3f0c9dff74383b81f0b0b055f15c1b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;completekey&lt;/em&gt;, &lt;em&gt;stdin&lt;/em&gt; and &lt;em&gt;stdout&lt;/em&gt; arguments are passed to the underlying &lt;a href=&quot;cmd#cmd.Cmd&quot;&gt;&lt;code&gt;cmd.Cmd&lt;/code&gt;&lt;/a&gt; class; see the description there.</source>
          <target state="translated">&lt;em&gt;completekeyは&lt;/em&gt;、&lt;em&gt;標準入力&lt;/em&gt;と&lt;em&gt;標準出力&lt;/em&gt;引数が根底に渡され&lt;a href=&quot;cmd#cmd.Cmd&quot;&gt; &lt;code&gt;cmd.Cmd&lt;/code&gt; の&lt;/a&gt;クラス。そこの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="5a1f18b255019414a78bdbbdc091b232a1484516" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;compresslevel&lt;/em&gt; argument is an integer from 0 to 9, as for the &lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;em&gt;COMPRESSLEVELの&lt;/em&gt;引数がに関しては、0から9までの整数である&lt;a href=&quot;#gzip.GzipFile&quot;&gt; &lt;code&gt;GzipFile&lt;/code&gt; &lt;/a&gt;コンストラクタ。</target>
        </trans-unit>
        <trans-unit id="a61f0cb9aa11a7de1821e1143b80646c4fdd247d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;compresslevel&lt;/em&gt; argument is an integer from 1 to 9, as for the &lt;a href=&quot;#bz2.BZ2File&quot;&gt;&lt;code&gt;BZ2File&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;em&gt;COMPRESSLEVELの&lt;/em&gt;引数がに関しては、1から9までの整数である&lt;a href=&quot;#bz2.BZ2File&quot;&gt; &lt;code&gt;BZ2File&lt;/code&gt; の&lt;/a&gt;コンストラクタ。</target>
        </trans-unit>
        <trans-unit id="851d04e3fb4b234e2a60f5e3589b15db66360cf7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;compresslevel&lt;/em&gt; argument is an integer from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;9&lt;/code&gt; controlling the level of compression; &lt;code&gt;1&lt;/code&gt; is fastest and produces the least compression, and &lt;code&gt;9&lt;/code&gt; is slowest and produces the most compression. &lt;code&gt;0&lt;/code&gt; is no compression. The default is &lt;code&gt;9&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;COMPRESSLEVELの&lt;/em&gt;引数は整数で &lt;code&gt;0&lt;/code&gt; へ &lt;code&gt;9&lt;/code&gt; 圧縮のレベルを制御します。 &lt;code&gt;1&lt;/code&gt; が最も速く、最も圧縮率が低く、 &lt;code&gt;9&lt;/code&gt; が最も遅く、最も圧縮率が高くなります。 &lt;code&gt;0&lt;/code&gt; は圧縮なしです。デフォルトは &lt;code&gt;9&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c73bf8969ac57945539c860056209cac0643be6c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;compresslevel&lt;/em&gt; parameter controls the compression level to use when writing files to the archive. When using &lt;a href=&quot;#zipfile.ZIP_STORED&quot;&gt;&lt;code&gt;ZIP_STORED&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#zipfile.ZIP_LZMA&quot;&gt;&lt;code&gt;ZIP_LZMA&lt;/code&gt;&lt;/a&gt; it has no effect. When using &lt;a href=&quot;#zipfile.ZIP_DEFLATED&quot;&gt;&lt;code&gt;ZIP_DEFLATED&lt;/code&gt;&lt;/a&gt; integers &lt;code&gt;0&lt;/code&gt; through &lt;code&gt;9&lt;/code&gt; are accepted (see &lt;a href=&quot;zlib#zlib.compressobj&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt; for more information). When using &lt;a href=&quot;#zipfile.ZIP_BZIP2&quot;&gt;&lt;code&gt;ZIP_BZIP2&lt;/code&gt;&lt;/a&gt; integers &lt;code&gt;1&lt;/code&gt; through &lt;code&gt;9&lt;/code&gt; are accepted (see &lt;a href=&quot;bz2#bz2.BZ2File&quot;&gt;&lt;code&gt;bz2&lt;/code&gt;&lt;/a&gt; for more information).</source>
          <target state="translated">&lt;em&gt;COMPRESSLEVEL&lt;/em&gt;アーカイブにファイルを書き込むときのパラメータは、使用する圧縮レベルを制御します。&lt;a href=&quot;#zipfile.ZIP_STORED&quot;&gt; &lt;code&gt;ZIP_STORED&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#zipfile.ZIP_LZMA&quot;&gt; &lt;code&gt;ZIP_LZMA&lt;/code&gt; &lt;/a&gt;を使用する場合、効果はありません。使用する場合&lt;a href=&quot;#zipfile.ZIP_DEFLATED&quot;&gt; &lt;code&gt;ZIP_DEFLATED&lt;/code&gt; &lt;/a&gt;整数 &lt;code&gt;0&lt;/code&gt; を介し &lt;code&gt;9&lt;/code&gt; が受け入れられると（参照&lt;a href=&quot;zlib#zlib.compressobj&quot;&gt; &lt;code&gt;zlib&lt;/code&gt; &lt;/a&gt;詳細について）。使用する場合&lt;a href=&quot;#zipfile.ZIP_BZIP2&quot;&gt; &lt;code&gt;ZIP_BZIP2&lt;/code&gt; &lt;/a&gt;整数 &lt;code&gt;1&lt;/code&gt; を介し &lt;code&gt;9&lt;/code&gt; が受け入れられると（参照&lt;a href=&quot;bz2#bz2.BZ2File&quot;&gt; &lt;code&gt;bz2&lt;/code&gt; &lt;/a&gt;詳細について）。</target>
        </trans-unit>
        <trans-unit id="ddb13b39623dcafcf4f44aec9717c0167926fdf6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;context&lt;/em&gt; precision does not affect how many digits are stored. That is determined exclusively by the number of digits in &lt;em&gt;value&lt;/em&gt;. For example, &lt;code&gt;Decimal('3.00000')&lt;/code&gt; records all five zeros even if the context precision is only three.</source>
          <target state="translated">&lt;em&gt;コンテキスト&lt;/em&gt;精度が保存されているどのように多くの桁数には影響しません。これは、&lt;em&gt;value&lt;/em&gt;の桁数によってのみ決定され&lt;em&gt;ます&lt;/em&gt;。たとえば、 &lt;code&gt;Decimal('3.00000')&lt;/code&gt; は、コンテキストの精度が3つしかない場合でも、5つのゼロをすべて記録します。</target>
        </trans-unit>
        <trans-unit id="d5e6fbc8c11370385eb242760b9740f5836b90d3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;conversion&lt;/em&gt; field causes a type coercion before formatting. Normally, the job of formatting a value is done by the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__format__&quot;&gt;&lt;code&gt;__format__()&lt;/code&gt;&lt;/a&gt; method of the value itself. However, in some cases it is desirable to force a type to be formatted as a string, overriding its own definition of formatting. By converting the value to a string before calling &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__format__&quot;&gt;&lt;code&gt;__format__()&lt;/code&gt;&lt;/a&gt;, the normal formatting logic is bypassed.</source>
          <target state="translated">&lt;em&gt;変換&lt;/em&gt;フィールドは、フォーマットする前に型の強制が発生します。通常、値をフォーマットする作業は、値自体の&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__format__&quot;&gt; &lt;code&gt;__format__()&lt;/code&gt; &lt;/a&gt;メソッドによって行われます。ただし、場合によっては、タイプを強制的に文字列としてフォーマットし、独自のフォーマット定義をオーバーライドすることが望ましい場合があります。&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__format__&quot;&gt; &lt;code&gt;__format__()&lt;/code&gt; &lt;/a&gt;呼び出す前に値を文字列に変換することにより、通常のフォーマットロジックがバイパスされます。</target>
        </trans-unit>
        <trans-unit id="b2cdc701e2c81ec997648e61d22b6adb27be68cf" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;d&lt;/em&gt;&amp;rsquo;th day (0 &amp;lt;= &lt;em&gt;d&lt;/em&gt; &amp;lt;= 6) of week &lt;em&gt;n&lt;/em&gt; of month &lt;em&gt;m&lt;/em&gt; of the year (1 &amp;lt;= &lt;em&gt;n&lt;/em&gt; &amp;lt;= 5, 1 &amp;lt;= &lt;em&gt;m&lt;/em&gt; &amp;lt;= 12, where week 5 means &amp;ldquo;the last &lt;em&gt;d&lt;/em&gt; day in month &lt;em&gt;m&lt;/em&gt;&amp;rdquo; which may occur in either the fourth or the fifth week). Week 1 is the first week in which the &lt;em&gt;d&lt;/em&gt;&amp;rsquo;th day occurs. Day zero is a Sunday.</source>
          <target state="translated">年の月&lt;em&gt;m&lt;/em&gt;の&lt;em&gt;n&lt;/em&gt;週目の&lt;em&gt;d&lt;/em&gt;番目の日（0 &amp;lt;= &lt;em&gt;d&lt;/em&gt; &amp;lt;= 6）（1 &amp;lt;= &lt;em&gt;n&lt;/em&gt; &amp;lt;= 5、1 &amp;lt;= &lt;em&gt;m&lt;/em&gt; &amp;lt;= 12）。ここで、5週目は「最後の&lt;em&gt;d&lt;/em&gt;日月&lt;em&gt;m&lt;/em&gt;」は、第4週または第5週のいずれかで発生します）。第1週は、&lt;em&gt;d&lt;/em&gt;日が発生する最初の週です。ゼロ日は日曜日です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9036429e9d7f5146bc247599a86f71fa7486b2b8" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;data&lt;/em&gt; argument can be whatever the &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt; function supports (i.e. string or bytes). The &lt;em&gt;path&lt;/em&gt; argument should be the &amp;ldquo;path&amp;rdquo; to where the source code originated from, which can be an abstract concept (e.g. location in a zip file).</source>
          <target state="translated">&lt;em&gt;データ&lt;/em&gt;引数は何でもすることができ&lt;a href=&quot;functions#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt;関数がサポート（つまり、文字列またはバイト）。&lt;em&gt;パス&lt;/em&gt;引数は、ソースコードは、抽象的な概念（zipファイル内などの場所）とすることができるから、元の場所への「パス」でなければなりません。</target>
        </trans-unit>
        <trans-unit id="8e21c5c2ac1fec214edb5720c17f5f7ed3424d7e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;data&lt;/em&gt; can be any &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt; and should consist of values that can be converted to type &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;data&lt;/em&gt; does not contain at least two elements, raises &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; because it takes at least one point to estimate a central value and at least two points to estimate dispersion.</source>
          <target state="translated">&lt;em&gt;データは、&lt;/em&gt;任意であり得る&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;反復可能&lt;/a&gt;および型に変換することができる値で構成する必要があり&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;データに&lt;/em&gt; 2つ以上の要素が含まれていない場合、中央値を推定するために少なくとも1つのポイントと分散を推定するために少なくとも2つのポイントが必要なため、&lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; を&lt;/a&gt;送出します。</target>
        </trans-unit>
        <trans-unit id="0b832475cfa8a9dd77d9b1b927964df35f6bb322" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;data&lt;/em&gt; can be any iterable containing sample data. For meaningful results, the number of data points in &lt;em&gt;data&lt;/em&gt; should be larger than &lt;em&gt;n&lt;/em&gt;. Raises &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; if there are not at least two data points.</source>
          <target state="translated">&lt;em&gt;データは、&lt;/em&gt;サンプルデータを含む任意のiterableことができます。意味のある結果を得るには、データ内のデータポイントの数は&lt;em&gt;n&lt;/em&gt;より大きく&lt;em&gt;する&lt;/em&gt;必要があります。発生させ&lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; は、&lt;/a&gt;少なくとも2つのデータポイントが存在しない場合。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d46475fe7beb032a1dde9b71f62e7b60ff7cca66" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;data&lt;/em&gt; parameter will be the entire contents of the declaration inside the &lt;code&gt;&amp;lt;![...]&amp;gt;&lt;/code&gt; markup. It is sometimes useful to be overridden by a derived class. The base class implementation does nothing.</source>
          <target state="translated">&lt;em&gt;データ&lt;/em&gt;パラメータは内部宣言の内容全体になります &lt;code&gt;&amp;lt;![...]&amp;gt;&lt;/code&gt; マークアップ。派生クラスによってオーバーライドされると便利な場合があります。基本クラスの実装は何もしません。</target>
        </trans-unit>
        <trans-unit id="bd72e401bf63a75fade8457ee5eccda856af08af" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;debug_override&lt;/em&gt; parameter is deprecated and can be used to override the system&amp;rsquo;s value for &lt;code&gt;__debug__&lt;/code&gt;. A &lt;code&gt;True&lt;/code&gt; value is the equivalent of setting &lt;em&gt;optimization&lt;/em&gt; to the empty string. A &lt;code&gt;False&lt;/code&gt; value is the same as setting &lt;em&gt;optimization&lt;/em&gt; to &lt;code&gt;1&lt;/code&gt;. If both &lt;em&gt;debug_override&lt;/em&gt; an &lt;em&gt;optimization&lt;/em&gt; are not &lt;code&gt;None&lt;/code&gt; then &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">&lt;em&gt;debug_overrideの&lt;/em&gt;パラメータは廃止され、システムの価値上書きするために使用することができます &lt;code&gt;__debug__&lt;/code&gt; を。 &lt;code&gt;True&lt;/code&gt; 値は設定と同等である&lt;em&gt;最適化を&lt;/em&gt;空の文字列に。 &lt;code&gt;False&lt;/code&gt; の値は設定した場合と同じである&lt;em&gt;最適化を&lt;/em&gt;する &lt;code&gt;1&lt;/code&gt; 。両方の場合&lt;em&gt;debug_override &lt;/em&gt;&lt;em&gt;最適化は&lt;/em&gt;されないん &lt;code&gt;None&lt;/code&gt; 、その後&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;発生します。</target>
        </trans-unit>
        <trans-unit id="99e0c356da751dd166a63e978dc2a39c5eedc1fa" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;decl&lt;/em&gt; parameter will be the entire contents of the declaration inside the &lt;code&gt;&amp;lt;!...&amp;gt;&lt;/code&gt; markup (e.g. &lt;code&gt;'DOCTYPE html'&lt;/code&gt;).</source>
          <target state="translated">&lt;em&gt;供述&lt;/em&gt;パラメータは内部宣言の内容全体になります &lt;code&gt;&amp;lt;!...&amp;gt;&lt;/code&gt; のマークアップ（例えば &lt;code&gt;'DOCTYPE html'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6ef3824e032cf9a741f848cb50c2d7646000b316" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;defaultTest&lt;/em&gt; argument is either the name of a single test or an iterable of test names to run if no test names are specified via &lt;em&gt;argv&lt;/em&gt;. If not specified or &lt;code&gt;None&lt;/code&gt; and no test names are provided via &lt;em&gt;argv&lt;/em&gt;, all tests found in &lt;em&gt;module&lt;/em&gt; are run.</source>
          <target state="translated">&lt;em&gt;defaultTest&lt;/em&gt;引数は、単一のテストの名前または全くテスト名を介して指定されていない場合に実行するテスト名の反復可能である&lt;em&gt;ARGV&lt;/em&gt;。指定されていない場合、または &lt;code&gt;None&lt;/code&gt; で、&lt;em&gt;argv&lt;/em&gt;を介してテスト名が指定されていない場合、&lt;em&gt;モジュールで&lt;/em&gt;見つかったすべてのテストが実行され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2d19d5ca4548580938d6b4d9329d9a62bbfc3144" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;defects&lt;/em&gt; attribute contains a list of all the problems found when parsing this message. See &lt;a href=&quot;email.errors#module-email.errors&quot;&gt;&lt;code&gt;email.errors&lt;/code&gt;&lt;/a&gt; for a detailed description of the possible parsing defects.</source>
          <target state="translated">&lt;em&gt;欠陥の&lt;/em&gt;属性は、このメッセージを解析する際に検出されたすべての問題のリストが含まれています。考えられる解析障害の詳細な説明については、&lt;a href=&quot;email.errors#module-email.errors&quot;&gt; &lt;code&gt;email.errors&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e3f2596b66bd7ed716cf9dba1109e5f24389e006" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;dict_type&lt;/em&gt; is the type used for dictionaries that are read from the plist file.</source>
          <target state="translated">&lt;em&gt;dict_typeが&lt;/em&gt; PLISTファイルから読み込まれた辞書のために使用されるタイプです。</target>
        </trans-unit>
        <trans-unit id="4e0020d0746abd869d54f08c307ddd6914e84e24" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;dir&lt;/em&gt;, &lt;em&gt;prefix&lt;/em&gt; and &lt;em&gt;suffix&lt;/em&gt; parameters have the same meaning and defaults as with &lt;a href=&quot;#tempfile.mkstemp&quot;&gt;&lt;code&gt;mkstemp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;DIR&lt;/em&gt;、&lt;em&gt;接頭辞&lt;/em&gt;と&lt;em&gt;接尾辞&lt;/em&gt;のパラメータが持つのと同じ意味とデフォルト値を持って&lt;a href=&quot;#tempfile.mkstemp&quot;&gt; &lt;code&gt;mkstemp()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="678377d21d95b5da2eccbd2ed6a5bf79dc5f7822" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;domain&lt;/em&gt; argument allows overriding the NIS domain used for the lookup. If unspecified, lookup is in the default NIS domain.</source>
          <target state="translated">&lt;em&gt;ドメインの&lt;/em&gt;引数は、参照するNISドメインをオーバーライドできます。指定しない場合、検索はデフォルトのNISドメインで行われます。</target>
        </trans-unit>
        <trans-unit id="541a21c0d12fc17803562f97e87bab04e8920e68" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;doraise&lt;/em&gt; and &lt;em&gt;quiet&lt;/em&gt; arguments determine how errors are handled while compiling file. If &lt;em&gt;quiet&lt;/em&gt; is 0 or 1, and &lt;em&gt;doraise&lt;/em&gt; is false, the default behaviour is enabled: an error string is written to &lt;code&gt;sys.stderr&lt;/code&gt;, and the function returns &lt;code&gt;None&lt;/code&gt; instead of a path. If &lt;em&gt;doraise&lt;/em&gt; is true, a &lt;a href=&quot;#py_compile.PyCompileError&quot;&gt;&lt;code&gt;PyCompileError&lt;/code&gt;&lt;/a&gt; is raised instead. However if &lt;em&gt;quiet&lt;/em&gt; is 2, no message is written, and &lt;em&gt;doraise&lt;/em&gt; has no effect.</source>
          <target state="translated">&lt;em&gt;doraise&lt;/em&gt;と&lt;em&gt;静かな&lt;/em&gt;引数は、ファイルをコンパイル中にエラーの処理方法を決定します。場合は&lt;em&gt;静かに&lt;/em&gt; 0または1であり、そして&lt;em&gt;doraiseは、&lt;/em&gt;エラー文字列が書き込まれている：falseで、デフォルトの動作が有効にされていない &lt;code&gt;sys.stderr&lt;/code&gt; を持ち、かつ機能を返します &lt;code&gt;None&lt;/code&gt; の代わりにパスの。場合&lt;em&gt;doraiseが&lt;/em&gt;真である、&lt;a href=&quot;#py_compile.PyCompileError&quot;&gt; &lt;code&gt;PyCompileError&lt;/code&gt; が&lt;/a&gt;代わりに発生します。ただし、&lt;em&gt;quiet&lt;/em&gt;が2の場合、メッセージは書き込まれず、&lt;em&gt;doraise&lt;/em&gt;は効果がありません。</target>
        </trans-unit>
        <trans-unit id="3f45beba9ae9b99fd6eddff1254b265a6b06ccf7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;dt&lt;/em&gt; argument is ignored. The return value is a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; instance equal to the difference between the local time and UTC.</source>
          <target state="translated">&lt;em&gt;DTの&lt;/em&gt;引数は無視されます。戻り値は、現地時間とUTCの差に等しい&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;インスタンスです。</target>
        </trans-unit>
        <trans-unit id="7ed9f309122fc25ff8178610e7f4da0a59231fe1" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;encode&lt;/em&gt; and &lt;em&gt;decode&lt;/em&gt; arguments must adhere to the &lt;code&gt;Codec&lt;/code&gt; interface. &lt;em&gt;Reader&lt;/em&gt; and &lt;em&gt;Writer&lt;/em&gt; must be factory functions or classes providing objects of the &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; interface respectively.</source>
          <target state="translated">&lt;em&gt;エンコード&lt;/em&gt;と&lt;em&gt;デコード&lt;/em&gt;の引数はに準拠している必要があり &lt;code&gt;Codec&lt;/code&gt; インターフェース。&lt;em&gt;Reader&lt;/em&gt;および&lt;em&gt;Writer&lt;/em&gt;は、それぞれ&lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;インターフェイスのオブジェクトを提供するファクトリ関数またはクラスである必要があります。</target>
        </trans-unit>
        <trans-unit id="29e7c348a1628ee9dd37b6150c94cd6ec0cfbf2a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;encode_chunked&lt;/em&gt; argument is only relevant if Transfer-Encoding is specified in &lt;em&gt;headers&lt;/em&gt;. If &lt;em&gt;encode_chunked&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, the HTTPConnection object assumes that all encoding is handled by the calling code. If it is &lt;code&gt;True&lt;/code&gt;, the body will be chunk-encoded.</source>
          <target state="translated">&lt;em&gt;encode_chunked&lt;/em&gt;引数は、転送エンコーディングが指定された場合にのみ適用され&lt;em&gt;、ヘッダー&lt;/em&gt;。場合&lt;em&gt;encode_chunkedが&lt;/em&gt;ある &lt;code&gt;False&lt;/code&gt; を、するHTTPConnectionオブジェクトは、すべてのエンコーディングが呼び出し元のコードで処理されていることを前提としています。もしそうであれば &lt;code&gt;True&lt;/code&gt; 、ボディはチャンクエンコードされます。</target>
        </trans-unit>
        <trans-unit id="c325607a7de886abde53f31697d71ac0d9b3a43d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; arguments define the character encoding to be used for reading or writing the archive and how conversion errors are going to be handled. The default settings will work for most users. See section &lt;a href=&quot;#tar-unicode&quot;&gt;Unicode issues&lt;/a&gt; for in-depth information.</source>
          <target state="translated">&lt;em&gt;エンコーディング&lt;/em&gt;と&lt;em&gt;エラー&lt;/em&gt;引数は、読み取りまたは書き込みのアーカイブを、どのように変換エラーを処理しようとしているため、使用する文字エンコーディングを定義します。デフォルト設定は、ほとんどのユーザーで機能します。詳細については、セクション&lt;a href=&quot;#tar-unicode&quot;&gt;Unicodeの問題&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c14540e9d5e02ef282d24989bc0560f5d43b74be" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;encoding&lt;/em&gt; argument behaves like the corresponding argument of &lt;a href=&quot;#xml.dom.minidom.Node.toxml&quot;&gt;&lt;code&gt;toxml()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;コード&lt;/em&gt;の対応する引数のような引数の挙動&lt;a href=&quot;#xml.dom.minidom.Node.toxml&quot;&gt; &lt;code&gt;toxml()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ff5ea8da7e93711f96576b90a0535523be394058" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;epilogue&lt;/em&gt; attribute acts the same way as the &lt;em&gt;preamble&lt;/em&gt; attribute, except that it contains text that appears between the last boundary and the end of the message.</source>
          <target state="translated">&lt;em&gt;エピローグの&lt;/em&gt;属性は、同じよう働き&lt;em&gt;プリアンブル&lt;/em&gt;、それは最後の境界とメッセージの端部との間に表示されたテキストが含まれていることを除いて、属性を。</target>
        </trans-unit>
        <trans-unit id="922c64a430cac350255517325dcc4e95110a3128" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;epilogue&lt;/em&gt; attribute acts the same way as the &lt;em&gt;preamble&lt;/em&gt; attribute, except that it contains text that appears between the last boundary and the end of the message. As with the &lt;a href=&quot;#email.message.EmailMessage.preamble&quot;&gt;&lt;code&gt;preamble&lt;/code&gt;&lt;/a&gt;, if there is no epilog text this attribute will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;エピローグの&lt;/em&gt;属性は、同じよう働き&lt;em&gt;プリアンブル&lt;/em&gt;、それは最後の境界とメッセージの端部との間に表示されたテキストが含まれていることを除いて、属性を。&lt;a href=&quot;#email.message.EmailMessage.preamble&quot;&gt; &lt;code&gt;preamble&lt;/code&gt; &lt;/a&gt;と同様に、エピローグテキストがない場合、この属性は &lt;code&gt;None&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="07e6075314e49857e472236bdfa91c705e2f0813" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;epoch&lt;/em&gt; is the point where the time starts, and is platform dependent. For Unix, the epoch is January 1, 1970, 00:00:00 (UTC). To find out what the epoch is on a given platform, look at &lt;code&gt;time.gmtime(0)&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;エポックは&lt;/em&gt;時間が始まる時点で、プラットフォームに依存しています。Unixの場合、エポックは1970年1月1日00:00:00（UTC）です。特定のプラットフォームでのエポックを確認するには、 &lt;code&gt;time.gmtime(0)&lt;/code&gt; を調べます。</target>
        </trans-unit>
        <trans-unit id="3738dcf310d32e085451a3c93f9bf3c820ec7a6b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;errors&lt;/em&gt; argument defines how characters are treated that cannot be converted. Possible values are listed in section &lt;a href=&quot;codecs#error-handlers&quot;&gt;Error Handlers&lt;/a&gt;. The default scheme is &lt;code&gt;'surrogateescape'&lt;/code&gt; which Python also uses for its file system calls, see &lt;a href=&quot;os#os-filenames&quot;&gt;File Names, Command Line Arguments, and Environment Variables&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;エラー&lt;/em&gt;変換できない文字がどのように扱われるか、引数の定義。可能な値は、セクション&lt;a href=&quot;codecs#error-handlers&quot;&gt;エラーハンドラに&lt;/a&gt;リストされています。デフォルトのスキームは &lt;code&gt;'surrogateescape'&lt;/code&gt; で、Pythonもそのファイルシステムコールに使用します。&lt;a href=&quot;os#os-filenames&quot;&gt;ファイル名、コマンドライン引数、環境変数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="accd6ed2c4add06dcc82825a5c29164b4aa44ad7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;errors&lt;/em&gt; argument defines the error handling to apply. It defaults to &lt;code&gt;'strict'&lt;/code&gt; handling.</source>
          <target state="translated">&lt;em&gt;エラーの&lt;/em&gt;引数は、適用するエラー処理を定義します。デフォルトでは &lt;code&gt;'strict'&lt;/code&gt; 処理です。</target>
        </trans-unit>
        <trans-unit id="417c35e3c3489ecae455dfd7cc1fdfb4272d8a54" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;errors&lt;/em&gt; argument will be assigned to an attribute of the same name. Assigning to this attribute makes it possible to switch between different error handling strategies during the lifetime of the &lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt;&lt;code&gt;IncrementalDecoder&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;em&gt;エラーの&lt;/em&gt;引数は、同じ名前の属性に割り当てられます。この属性に割り当てると、&lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt; &lt;code&gt;IncrementalDecoder&lt;/code&gt; &lt;/a&gt;オブジェクトの有効期間中に、さまざまなエラー処理戦略を切り替えることができます。</target>
        </trans-unit>
        <trans-unit id="0193b2731a3bc5048c2a96e0d3333506018910d7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;errors&lt;/em&gt; argument will be assigned to an attribute of the same name. Assigning to this attribute makes it possible to switch between different error handling strategies during the lifetime of the &lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt;&lt;code&gt;IncrementalEncoder&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;em&gt;エラーの&lt;/em&gt;引数は、同じ名前の属性に割り当てられます。この属性に割り当てると、&lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt; &lt;code&gt;IncrementalEncoder&lt;/code&gt; &lt;/a&gt;オブジェクトの存続期間中にさまざまなエラー処理戦略を切り替えることができます。</target>
        </trans-unit>
        <trans-unit id="07408f3978c0e16f152e5b37f0839ea36889cf01" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;errors&lt;/em&gt; argument will be assigned to an attribute of the same name. Assigning to this attribute makes it possible to switch between different error handling strategies during the lifetime of the &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;em&gt;エラーの&lt;/em&gt;引数は、同じ名前の属性に割り当てられます。この属性に割り当てると、&lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;オブジェクトの存続期間中にさまざまなエラー処理戦略を切り替えることができます。</target>
        </trans-unit>
        <trans-unit id="56664efc67b073b3b091d3fb8068398e69c0cbdf" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;errors&lt;/em&gt; argument will be assigned to an attribute of the same name. Assigning to this attribute makes it possible to switch between different error handling strategies during the lifetime of the &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;em&gt;エラーの&lt;/em&gt;引数は、同じ名前の属性に割り当てられます。この属性に割り当てると、&lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;オブジェクトの存続期間中にさまざまなエラー処理戦略を切り替えることができます。</target>
        </trans-unit>
        <trans-unit id="bdb2e9827a01e7259645dad2c2d3343a896529f4" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;exec_body&lt;/em&gt; argument is a callback that is used to populate the freshly created class namespace. It should accept the class namespace as its sole argument and update the namespace directly with the class contents. If no callback is provided, it has the same effect as passing in &lt;code&gt;lambda ns: ns&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;exec_body&lt;/em&gt;引数には、新規に作成したクラスの名前空間を埋めるために使用されるコールバックです。クラスの名前空間を唯一の引数として受け入れ、クラスの内容で名前空間を直接更新する必要があります。コールバックが提供されない場合、 &lt;code&gt;lambda ns: ns&lt;/code&gt; を渡すのと同じ効果があります。</target>
        </trans-unit>
        <trans-unit id="55c7ca7eb02e1ac631fb9b49acf3b5fa4fbcaaa0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;executable&lt;/em&gt; argument specifies a replacement program to execute. It is very seldom needed. When &lt;code&gt;shell=False&lt;/code&gt;, &lt;em&gt;executable&lt;/em&gt; replaces the program to execute specified by &lt;em&gt;args&lt;/em&gt;. However, the original &lt;em&gt;args&lt;/em&gt; is still passed to the program. Most programs treat the program specified by &lt;em&gt;args&lt;/em&gt; as the command name, which can then be different from the program actually executed. On POSIX, the &lt;em&gt;args&lt;/em&gt; name becomes the display name for the executable in utilities such as &lt;strong&gt;ps&lt;/strong&gt;. If &lt;code&gt;shell=True&lt;/code&gt;, on POSIX the &lt;em&gt;executable&lt;/em&gt; argument specifies a replacement shell for the default &lt;code&gt;/bin/sh&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;実行可能な&lt;/em&gt;引数は、実行するための交換プログラムを指定します。これはほとんど必要ありません。ときに &lt;code&gt;shell=False&lt;/code&gt; 、&lt;em&gt;実行可能な&lt;/em&gt;置き換えによって指定された実行するプログラム&lt;em&gt;引数&lt;/em&gt;。ただし、元の&lt;em&gt;引数&lt;/em&gt;は引き続きプログラムに渡されます。ほとんどのプログラムは、&lt;em&gt;argsで&lt;/em&gt;指定されたプログラムをコマンド名として扱います。そのため、実際に実行されるプログラムとは異なる場合があります。POSIXでは、&lt;em&gt;args&lt;/em&gt;名は&lt;strong&gt;ps&lt;/strong&gt;などのユーティリティの実行可能ファイルの表示名になります。場合は &lt;code&gt;shell=True&lt;/code&gt; 、POSIX上で&lt;em&gt;実行可能な&lt;/em&gt;引数は、デフォルトの交換シェルを指定します &lt;code&gt;/bin/sh&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a2283b4e58ae37a66ef528c3791a1b7ee66c3708" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;executor&lt;/em&gt; argument should be an &lt;a href=&quot;concurrent.futures#concurrent.futures.Executor&quot;&gt;&lt;code&gt;concurrent.futures.Executor&lt;/code&gt;&lt;/a&gt; instance. The default executor is used if &lt;em&gt;executor&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;エグゼキュータの&lt;/em&gt;引数は、あるべき&lt;a href=&quot;concurrent.futures#concurrent.futures.Executor&quot;&gt; &lt;code&gt;concurrent.futures.Executor&lt;/code&gt; の&lt;/a&gt;インスタンス。&lt;em&gt;executor&lt;/em&gt;が &lt;code&gt;None&lt;/code&gt; の場合、デフォルトのexecutorが使用されます。</target>
        </trans-unit>
        <trans-unit id="bc0182bbf1f5e1c0e30b3cb44d4050e6085c5147" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;expression&lt;/em&gt; argument is parsed and evaluated as a Python expression (technically speaking, a condition list) using the &lt;em&gt;globals&lt;/em&gt; and &lt;em&gt;locals&lt;/em&gt; dictionaries as global and local namespace. If the &lt;em&gt;globals&lt;/em&gt; dictionary is present and does not contain a value for the key &lt;code&gt;__builtins__&lt;/code&gt;, a reference to the dictionary of the built-in module &lt;a href=&quot;builtins#module-builtins&quot;&gt;&lt;code&gt;builtins&lt;/code&gt;&lt;/a&gt; is inserted under that key before &lt;em&gt;expression&lt;/em&gt; is parsed. This means that &lt;em&gt;expression&lt;/em&gt; normally has full access to the standard &lt;a href=&quot;builtins#module-builtins&quot;&gt;&lt;code&gt;builtins&lt;/code&gt;&lt;/a&gt; module and restricted environments are propagated. If the &lt;em&gt;locals&lt;/em&gt; dictionary is omitted it defaults to the &lt;em&gt;globals&lt;/em&gt; dictionary. If both dictionaries are omitted, the expression is executed with the &lt;em&gt;globals&lt;/em&gt; and &lt;em&gt;locals&lt;/em&gt; in the environment where &lt;a href=&quot;#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; is called. Note, &lt;em&gt;eval()&lt;/em&gt; does not have access to the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-nested-scope&quot;&gt;nested scopes&lt;/a&gt; (non-locals) in the enclosing environment.</source>
          <target state="translated">&lt;em&gt;表現の&lt;/em&gt;引数が解析され、使用する（技術的には、条件のリストを話す）Pythonの式として評価された&lt;em&gt;グローバル&lt;/em&gt;と&lt;em&gt;地元の人々の&lt;/em&gt;グローバルとローカル名前空間として辞書を。もし&lt;em&gt;グローバル&lt;/em&gt;存在し、キーの値が含まれていない辞書 &lt;code&gt;__builtins__&lt;/code&gt; を、内蔵モジュールの辞書を参照する&lt;a href=&quot;builtins#module-builtins&quot;&gt; &lt;code&gt;builtins&lt;/code&gt; &lt;/a&gt;前にそのキーの下に挿入されている&lt;em&gt;式が&lt;/em&gt;解析されます。つまり、通常、&lt;em&gt;式&lt;/em&gt;は標準の&lt;a href=&quot;builtins#module-builtins&quot;&gt; &lt;code&gt;builtins&lt;/code&gt; &lt;/a&gt;モジュールに完全にアクセスでき、制限された環境が伝播されます。&lt;em&gt;ローカル&lt;/em&gt;辞書が省略された場合、デフォルトで&lt;em&gt;グローバル&lt;/em&gt;辞書。両方の辞書を省略した場合、式は&lt;a href=&quot;#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;が呼び出された環境の&lt;em&gt;グローバル&lt;/em&gt;と&lt;em&gt;ローカル&lt;/em&gt;で実行されます。&lt;em&gt;eval（）&lt;/em&gt;は、囲んでいる環境で&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-nested-scope&quot;&gt;ネストされたスコープ&lt;/a&gt;（非ローカル）にアクセスできないことに注意してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1c27bdb65636017d6b3ff59ca63cf0593fdd5b0b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;extra&lt;/em&gt; argument can be a set of names that wouldn&amp;rsquo;t otherwise be automatically detected as &amp;ldquo;public&amp;rdquo;, like objects without a proper &lt;code&gt;__module__&lt;/code&gt; attribute. If provided, it will be added to the automatically detected ones.</source>
          <target state="translated">&lt;em&gt;余分な&lt;/em&gt;引数は、適切なしのオブジェクトのようなそうでない場合は、自動的に「パブリック」として検出されない名前のセット、することができ &lt;code&gt;__module__&lt;/code&gt; の属性。指定した場合、自動検出されたものに追加されます。</target>
        </trans-unit>
        <trans-unit id="a08cf90e834703ae213fd12223835ee5ad8adf15" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;failfast&lt;/em&gt;, &lt;em&gt;catchbreak&lt;/em&gt; and &lt;em&gt;buffer&lt;/em&gt; parameters have the same effect as the same-name &lt;a href=&quot;#command-line-options&quot;&gt;command-line options&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;フェイルファスト&lt;/em&gt;、&lt;em&gt;catchbreak&lt;/em&gt;および&lt;em&gt;バッファ&lt;/em&gt;パラメータは、同じ名前と同じ効果持っている&lt;a href=&quot;#command-line-options&quot;&gt;コマンドラインオプションを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="874e26c7407b8380f904f71fc4795a0f8587333f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;family&lt;/em&gt;, &lt;em&gt;type&lt;/em&gt; and &lt;em&gt;proto&lt;/em&gt; arguments can be optionally specified in order to narrow the list of addresses returned. Passing zero as a value for each of these arguments selects the full range of results. The &lt;em&gt;flags&lt;/em&gt; argument can be one or several of the &lt;code&gt;AI_*&lt;/code&gt; constants, and will influence how results are computed and returned. For example, &lt;code&gt;AI_NUMERICHOST&lt;/code&gt; will disable domain name resolution and will raise an error if &lt;em&gt;host&lt;/em&gt; is a domain name.</source>
          <target state="translated">&lt;em&gt;家族&lt;/em&gt;、&lt;em&gt;タイプ&lt;/em&gt;と&lt;em&gt;プロト&lt;/em&gt;引数は、必要に応じて返されたアドレスのリストを狭くするために指定することができます。これらの各引数の値としてゼロを渡すと、結果の全範囲が選択されます。&lt;em&gt;フラグの&lt;/em&gt;引数は、一つまたはいくつかのことができ &lt;code&gt;AI_*&lt;/code&gt; 定数、および結果が計算され、返される方法に影響を与えるだろう。たとえば、 &lt;code&gt;AI_NUMERICHOST&lt;/code&gt; はドメイン名の解決を無効にし、&lt;em&gt;ホスト&lt;/em&gt;がドメイン名の場合はエラーを発生させます。</target>
        </trans-unit>
        <trans-unit id="f85bfe90a7abfa4522d7aec6379ca2959433acc1" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;field_name&lt;/em&gt; itself begins with an &lt;em&gt;arg_name&lt;/em&gt; that is either a number or a keyword. If it&amp;rsquo;s a number, it refers to a positional argument, and if it&amp;rsquo;s a keyword, it refers to a named keyword argument. If the numerical arg_names in a format string are 0, 1, 2, &amp;hellip; in sequence, they can all be omitted (not just some) and the numbers 0, 1, 2, &amp;hellip; will be automatically inserted in that order. Because &lt;em&gt;arg_name&lt;/em&gt; is not quote-delimited, it is not possible to specify arbitrary dictionary keys (e.g., the strings &lt;code&gt;'10'&lt;/code&gt; or &lt;code&gt;':-]'&lt;/code&gt;) within a format string. The &lt;em&gt;arg_name&lt;/em&gt; can be followed by any number of index or attribute expressions. An expression of the form &lt;code&gt;'.name'&lt;/code&gt; selects the named attribute using &lt;a href=&quot;functions#getattr&quot;&gt;&lt;code&gt;getattr()&lt;/code&gt;&lt;/a&gt;, while an expression of the form &lt;code&gt;'[index]'&lt;/code&gt; does an index lookup using &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;FIELD_NAME&lt;/em&gt;自体はで始まる&lt;em&gt;arg_name&lt;/em&gt;番号またはキーワードのいずれかです。数値の場合は位置引数を参照し、キーワードの場合は名前付きキーワード引数を参照します。書式文字列内の数値のarg_nameが0、1、2、&amp;hellip;である場合、それらはすべて（一部だけではなく）省略でき、数字0、1、2、&amp;hellip;がこの順序で自動的に挿入されます。&lt;em&gt;arg_name&lt;/em&gt;は引用符で区切られていないため、フォーマット文字列内で任意のディクショナリキー（たとえば、文字列 &lt;code&gt;'10'&lt;/code&gt; または &lt;code&gt;':-]'&lt;/code&gt; ）を指定することはできません。&lt;em&gt;arg_nameは&lt;/em&gt;、インデックスまたは属性の式のいずれかの数字が続くことができます。 &lt;code&gt;'.name'&lt;/code&gt; 形式の式&lt;a href=&quot;functions#getattr&quot;&gt; &lt;code&gt;getattr()&lt;/code&gt; &lt;/a&gt;を使用して名前付き属性を選択し、 &lt;code&gt;'[index]'&lt;/code&gt; 形式の式は&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;を使用してインデックス検索を実行します。</target>
        </trans-unit>
        <trans-unit id="c6d4fb8370566360de6f478e25e82c7c55877045" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;field_names&lt;/em&gt; are a sequence of strings such as &lt;code&gt;['x', 'y']&lt;/code&gt;. Alternatively, &lt;em&gt;field_names&lt;/em&gt; can be a single string with each fieldname separated by whitespace and/or commas, for example &lt;code&gt;'x y'&lt;/code&gt; or &lt;code&gt;'x, y'&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;FIELD_NAMESは、&lt;/em&gt;のような文字列の配列である &lt;code&gt;['x', 'y']&lt;/code&gt; 。または、&lt;em&gt;field_names&lt;/em&gt;は、空白やカンマで区切られた各フィールド名を持つ単一の文字列にすることもできます（例： &lt;code&gt;'x y'&lt;/code&gt; または &lt;code&gt;'x, y'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac35b9bd55fdc804fb4c9bb3bd701f67c7d5c57d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;fieldnames&lt;/em&gt; parameter is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-sequence&quot;&gt;sequence&lt;/a&gt;. If &lt;em&gt;fieldnames&lt;/em&gt; is omitted, the values in the first row of file &lt;em&gt;f&lt;/em&gt; will be used as the fieldnames. Regardless of how the fieldnames are determined, the dictionary preserves their original ordering.</source>
          <target state="translated">&lt;em&gt;フィールド名の&lt;/em&gt;パラメータがある&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-sequence&quot;&gt;シーケンス&lt;/a&gt;。場合&lt;em&gt;フィールド名が&lt;/em&gt;省略され、ファイルの最初の行の値&lt;em&gt;fは&lt;/em&gt;フィールド名として使用されます。フィールド名の決定方法に関係なく、辞書は元の順序を維持します。</target>
        </trans-unit>
        <trans-unit id="86a8ce72332326de2cfebbc785262328b5fe47c2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;file&lt;/em&gt; argument is an I/O stream to which the output is written; by default output is written to &lt;a href=&quot;sys#sys.stderr&quot;&gt;&lt;code&gt;sys.stderr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;ファイル&lt;/em&gt;引数には、出力が書き込まれるI / Oストリームです。デフォルトでは、出力は&lt;a href=&quot;sys#sys.stderr&quot;&gt; &lt;code&gt;sys.stderr&lt;/code&gt; に&lt;/a&gt;書き込まれます。</target>
        </trans-unit>
        <trans-unit id="6040de02499cbcc78ffe2e6448ad957eea44c1ad" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;file&lt;/em&gt; argument must be an object with a &lt;code&gt;write(string)&lt;/code&gt; method; if it is not present or &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; will be used. Since printed arguments are converted to text strings, &lt;a href=&quot;#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; cannot be used with binary mode file objects. For these, use &lt;code&gt;file.write(...)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;em&gt;ファイル&lt;/em&gt;引数が持つオブジェクトでなければなりません &lt;code&gt;write(string)&lt;/code&gt; メソッド。存在しないか &lt;code&gt;None&lt;/code&gt; の場合、&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; &lt;/a&gt;が使用されます。出力された引数はテキスト文字列に変換されるため、&lt;a href=&quot;#print&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt;はバイナリモードのファイルオブジェクトでは使用できません。これらについては、代わりに &lt;code&gt;file.write(...)&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="aa19d5965537594f6e3e44281d687c4aee5dfebd" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;file&lt;/em&gt; argument must have a write() method that accepts a single bytes argument. It can thus be an on-disk file opened for binary writing, an &lt;a href=&quot;io#io.BytesIO&quot;&gt;&lt;code&gt;io.BytesIO&lt;/code&gt;&lt;/a&gt; instance, or any other custom object that meets this interface.</source>
          <target state="translated">&lt;em&gt;ファイル&lt;/em&gt;引数には、単一バイトの引数を受理するwrite（）メソッドを持っている必要があります。したがって、バイナリ書き込み用に開かれたディスク上のファイル、&lt;a href=&quot;io#io.BytesIO&quot;&gt; &lt;code&gt;io.BytesIO&lt;/code&gt; &lt;/a&gt;インスタンス、またはこのインターフェイスに適合するその他のカスタムオブジェクトを使用できます。</target>
        </trans-unit>
        <trans-unit id="201c087ccb99a58c31b45c2b8d49929eddafdd3d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;file&lt;/em&gt; must be kept open until the fault handler is disabled: see &lt;a href=&quot;#faulthandler-fd&quot;&gt;issue with file descriptors&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;ファイルには、&lt;/em&gt;障害ハンドラが無効になるまで開いたままにする必要があります：参照&lt;a href=&quot;#faulthandler-fd&quot;&gt;ファイル記述子の問題を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a3d824b624f53e9446bead5d0c937eff0e8b3123" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;file&lt;/em&gt; must be kept open until the signal is unregistered by &lt;a href=&quot;#faulthandler.unregister&quot;&gt;&lt;code&gt;unregister()&lt;/code&gt;&lt;/a&gt;: see &lt;a href=&quot;#faulthandler-fd&quot;&gt;issue with file descriptors&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;ファイルには、&lt;/em&gt;信号が登録解除されるまで開いたままにしなければならない&lt;a href=&quot;#faulthandler.unregister&quot;&gt; &lt;code&gt;unregister()&lt;/code&gt; &lt;/a&gt;：参照&lt;a href=&quot;#faulthandler-fd&quot;&gt;ファイル記述子の問題を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c60c6ff1b28a53b914ece79a1a14de1b66fed36f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;file&lt;/em&gt; must be kept open until the traceback is dumped or &lt;a href=&quot;#faulthandler.cancel_dump_traceback_later&quot;&gt;&lt;code&gt;cancel_dump_traceback_later()&lt;/code&gt;&lt;/a&gt; is called: see &lt;a href=&quot;#faulthandler-fd&quot;&gt;issue with file descriptors&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;ファイルには、&lt;/em&gt;トレースバックがダンプされるかまでは開いたままにしなければならない&lt;a href=&quot;#faulthandler.cancel_dump_traceback_later&quot;&gt; &lt;code&gt;cancel_dump_traceback_later()&lt;/code&gt; &lt;/a&gt;を参照してくださいと呼ばれている&lt;a href=&quot;#faulthandler-fd&quot;&gt;ファイルディスクリプタの問題を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9a5d02926f630f9388faa40b312c84ee98f366aa" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;file_actions&lt;/em&gt; argument may be a sequence of tuples describing actions to take on specific file descriptors in the child process between the C library implementation&amp;rsquo;s &lt;code&gt;fork()&lt;/code&gt; and &lt;code&gt;exec()&lt;/code&gt; steps. The first item in each tuple must be one of the three type indicator listed below describing the remaining tuple elements:</source>
          <target state="translated">&lt;em&gt;file_actionsの&lt;/em&gt;引数は、Cライブラリの実装の間に子プロセスで特定のファイル記述子に対して実行するアクションを記述するタプルの配列であってもよい &lt;code&gt;fork()&lt;/code&gt; と &lt;code&gt;exec()&lt;/code&gt; のステップ。各タプルの最初の項目は、残りのタプル要素を説明する、以下にリストされている3つのタイプインジケーターの1つである必要があります。</target>
        </trans-unit>
        <trans-unit id="574ad47a01d4d5dcdc30c910d4f1c794203d0425" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;filename&lt;/em&gt; argument can be an actual filename (a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object), or an existing file object to read from or write to.</source>
          <target state="translated">&lt;em&gt;ファイル名の&lt;/em&gt;引数は、実際のファイル名（であることができる&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;オブジェクト）、またはからまたは読み書きするための既存のファイル・オブジェクト。</target>
        </trans-unit>
        <trans-unit id="f033d031375597aa29c16f1a2c2f915020115b6f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;filename&lt;/em&gt; argument can be either an actual file name (given as a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt; object), in which case the named file is opened, or it can be an existing file object to read from or write to.</source>
          <target state="translated">&lt;em&gt;ファイル名の&lt;/em&gt;引数は、実際のファイル（のように与えられた名前のいずれかであり得る&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;パス状&lt;/a&gt;オブジェクト）、指定されたファイルが開かれるか、からまたは読み書きするための既存のファイル・オブジェクトとすることができる場合。</target>
        </trans-unit>
        <trans-unit id="0545d354ccd3ed5753d4a3cb4b6a2b0b028f6ed5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;filename&lt;/em&gt; argument should give the file from which the code was read; pass some recognizable value if it wasn&amp;rsquo;t read from a file (&lt;code&gt;'&amp;lt;string&amp;gt;'&lt;/code&gt; is commonly used).</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt;引数には、コードの読み取り元の&lt;em&gt;ファイルを&lt;/em&gt;指定する必要があります。ファイルから読み取られなかった場合、認識可能な値を渡します（ &lt;code&gt;'&amp;lt;string&amp;gt;'&lt;/code&gt; が一般的に使用されます）。</target>
        </trans-unit>
        <trans-unit id="79131f6c9ec73987bfeb48e4342c755777c193ff" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;filters&lt;/em&gt; argument (if provided) should be a filter chain specifier. See &lt;a href=&quot;#filter-chain-specs&quot;&gt;Specifying custom filter chains&lt;/a&gt; for details.</source>
          <target state="translated">&lt;em&gt;フィルタの&lt;/em&gt;引数（提供されている場合）は、フィルタチェイン指定する必要があります。詳細については、&lt;a href=&quot;#filter-chain-specs&quot;&gt;カスタムフィルターチェーンの指定&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="408e886918eee46fcb78729db9d3758b4414e533" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;filters&lt;/em&gt; argument specifies the filter chain that was used to create the stream being decompressed. This argument is required if &lt;em&gt;format&lt;/em&gt; is &lt;code&gt;FORMAT_RAW&lt;/code&gt;, but should not be used for other formats. See &lt;a href=&quot;#filter-chain-specs&quot;&gt;Specifying custom filter chains&lt;/a&gt; for more information about filter chains.</source>
          <target state="translated">&lt;em&gt;フィルタの&lt;/em&gt;引数は、解凍されたストリームを作成するために使用されたフィルタチェインを指定します。この引数は、&lt;em&gt;format&lt;/em&gt;が &lt;code&gt;FORMAT_RAW&lt;/code&gt; の場合は必須&lt;em&gt;です&lt;/em&gt;が、他の形式では使用しないでください。&lt;a href=&quot;#filter-chain-specs&quot;&gt;フィルターチェーンの&lt;/a&gt;詳細については、カスタムフィルターチェーンの指定を参照してください。</target>
        </trans-unit>
        <trans-unit id="1f878d73c0efd98476dfc7a9b6cd6ad2c5b1de9d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;firstline&lt;/em&gt; flag indicates that it would be sufficient to only return the first line, if there are decoding errors on later lines.</source>
          <target state="translated">&lt;em&gt;ファーストライン&lt;/em&gt;フラグは、後でラインに復号エラーがある場合にのみ、最初の行を返すのに十分であろうことを示しています。</target>
        </trans-unit>
        <trans-unit id="ac4ac00687930f48d3d074bf948c94183e0fde15" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;flags&lt;/em&gt; entry shows that the rational approximation to &lt;code&gt;Pi&lt;/code&gt; was rounded (digits beyond the context precision were thrown away) and that the result is inexact (some of the discarded digits were non-zero).</source>
          <target state="translated">&lt;em&gt;フラグ&lt;/em&gt;エントリに有理近似することを示している &lt;code&gt;Pi&lt;/code&gt; が丸められた（コンテキスト精度を越え桁は捨てた）、その結果が不正確であること（廃棄ディジットのいくつかは、非ゼロでした）。</target>
        </trans-unit>
        <trans-unit id="6d6f6e39e403984a4847eaa33b4050de83b8f060" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;fmt&lt;/em&gt; argument specifies the format of the plist file and can be one of the following values:</source>
          <target state="translated">&lt;em&gt;FMTの&lt;/em&gt;引数には、plistファイルの形式を指定し、次の値のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="082a80c3e67542d38e417ef51374d4c86db647c6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;fmt&lt;/em&gt; is the format of the file and the following values are valid:</source>
          <target state="translated">&lt;em&gt;FMTは&lt;/em&gt;ファイルの形式で、以下の値が有効です。</target>
        </trans-unit>
        <trans-unit id="734f781d1046d3f0c2a738be36757146bb995a3f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;format&lt;/em&gt; argument specifies the container format that should be used. The default is &lt;code&gt;FORMAT_AUTO&lt;/code&gt;, which can decompress both &lt;code&gt;.xz&lt;/code&gt; and &lt;code&gt;.lzma&lt;/code&gt; files. Other possible values are &lt;code&gt;FORMAT_XZ&lt;/code&gt;, &lt;code&gt;FORMAT_ALONE&lt;/code&gt;, and &lt;code&gt;FORMAT_RAW&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;フォーマット&lt;/em&gt;引数を使用する必要がありますコンテナフォーマットを指定します。デフォルトは &lt;code&gt;FORMAT_AUTO&lt;/code&gt; 両方解凍することができ、 &lt;code&gt;.xz&lt;/code&gt; と &lt;code&gt;.lzma&lt;/code&gt; ファイルを。その他の可能な値は、 &lt;code&gt;FORMAT_XZ&lt;/code&gt; 、 &lt;code&gt;FORMAT_ALONE&lt;/code&gt; 、および &lt;code&gt;FORMAT_RAW&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8d0e2b25e206ba418847ddd00bd26fd5a6a4f7db" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;format&lt;/em&gt; argument specifies what container format should be used. Possible values are:</source>
          <target state="translated">&lt;em&gt;フォーマット&lt;/em&gt;を使用すべきか、コンテナフォーマット引数を指定します。可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="04f2de35ac0704ac281d73b5042b2f29f702dc28" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;format&lt;/em&gt; parameter uses the same directives as those used by &lt;a href=&quot;#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt;; it defaults to &lt;code&gt;&quot;%a %b %d %H:%M:%S %Y&quot;&lt;/code&gt; which matches the formatting returned by &lt;a href=&quot;#time.ctime&quot;&gt;&lt;code&gt;ctime()&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;string&lt;/em&gt; cannot be parsed according to &lt;em&gt;format&lt;/em&gt;, or if it has excess data after parsing, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. The default values used to fill in any missing data when more accurate values cannot be inferred are &lt;code&gt;(1900, 1, 1, 0, 0, 0, 0, 1, -1)&lt;/code&gt;. Both &lt;em&gt;string&lt;/em&gt; and &lt;em&gt;format&lt;/em&gt; must be strings.</source>
          <target state="translated">&lt;em&gt;フォーマット&lt;/em&gt;パラメータは、によって使用されるものと同じディレクティブを使用して&lt;a href=&quot;#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt;。デフォルトは &lt;code&gt;&quot;%a %b %d %H:%M:%S %Y&quot;&lt;/code&gt; で、&lt;a href=&quot;#time.ctime&quot;&gt; &lt;code&gt;ctime()&lt;/code&gt; &lt;/a&gt;によって返されるフォーマットと一致します。&lt;em&gt;string&lt;/em&gt;を&lt;em&gt;format&lt;/em&gt;に従って解析できない場合、または解析後に過剰なデータがある&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;、ValueErrorが発生します。より正確な値を推測できない場合に欠落データを埋めるために使用されるデフォルト値は &lt;code&gt;(1900, 1, 1, 0, 0, 0, 0, 1, -1)&lt;/code&gt; です。どちらの&lt;em&gt;文字列&lt;/em&gt;と&lt;em&gt;書式は&lt;/em&gt;文字列でなければなりません。</target>
        </trans-unit>
        <trans-unit id="4acae6593e4e526e2dd1506dcee311e81a8b65fb" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;format_spec&lt;/em&gt; field contains a specification of how the value should be presented, including such details as field width, alignment, padding, decimal precision and so on. Each value type can define its own &amp;ldquo;formatting mini-language&amp;rdquo; or interpretation of the &lt;em&gt;format_spec&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;format_spec&lt;/em&gt;フィールドは、値がそのようにフィールド幅、位置合わせ、パディング、小数精度、などの詳細を含む、提示されるべきかの指定を含んでいます。各値タイプは、独自の「フォーマット用ミニ言語」または&lt;em&gt;format_specの&lt;/em&gt;解釈を定義できます。</target>
        </trans-unit>
        <trans-unit id="4d65dc8f14d94c0d358e1bb13b0be3cd77bc040c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;from_addr&lt;/em&gt; and &lt;em&gt;to_addrs&lt;/em&gt; parameters are used to construct the message envelope used by the transport agents. &lt;code&gt;sendmail&lt;/code&gt; does not modify the message headers in any way.</source>
          <target state="translated">&lt;em&gt;from_addr&lt;/em&gt;と&lt;em&gt;to_addrs&lt;/em&gt;パラメータは、トランスポートエージェントによって使用されるメッセージエンベロープを構築するために使用されます。 &lt;code&gt;sendmail&lt;/code&gt; は、メッセージヘッダーを変更しません。</target>
        </trans-unit>
        <trans-unit id="8f0efc2987cba5877b55bc8427e0a05d7b5359a2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;fullname&lt;/em&gt; argument is a fully resolved name of the module the loader is to handle. The &lt;em&gt;path&lt;/em&gt; argument is the path to the file for the module.</source>
          <target state="translated">&lt;em&gt;フルネーム&lt;/em&gt;引数はローダがハンドルにあるモジュールの完全に解決された名前です。&lt;em&gt;パス&lt;/em&gt;引数には、モジュールのファイルへのパスです。</target>
        </trans-unit>
        <trans-unit id="e3b5b1e7f6306fdfed32d8aa3e48723c730e25bb" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;fullname&lt;/em&gt; argument specifies the name of the module the loader is to support. The &lt;em&gt;path&lt;/em&gt; argument is the path to the extension module&amp;rsquo;s file.</source>
          <target state="translated">&lt;em&gt;フルネーム&lt;/em&gt;引数はローダがサポートするモジュールの名前を指定します。&lt;em&gt;パスの&lt;/em&gt;引数には、拡張モジュールのファイルへのパスです。</target>
        </trans-unit>
        <trans-unit id="945b0cd999a4b800654797e3d0ae5eddc4b8534c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;handler&lt;/em&gt; is called with two arguments: the signal number and the current stack frame (&lt;code&gt;None&lt;/code&gt; or a frame object; for a description of frame objects, see the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#frame-objects&quot;&gt;description in the type hierarchy&lt;/a&gt; or see the attribute descriptions in the &lt;a href=&quot;inspect#module-inspect&quot;&gt;&lt;code&gt;inspect&lt;/code&gt;&lt;/a&gt; module).</source>
          <target state="translated">&lt;em&gt;ハンドラは&lt;/em&gt;二つの引数を使って呼び出される：シグナル番号と現在のスタックフレーム（ &lt;code&gt;None&lt;/code&gt; またはフレームオブジェクトは、フレームのオブジェクトの説明については、参照&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#frame-objects&quot;&gt;タイプ階層に説明を&lt;/a&gt;、または、属性の説明を参照して&lt;a href=&quot;inspect#module-inspect&quot;&gt; &lt;code&gt;inspect&lt;/code&gt; &lt;/a&gt;モジュール）。</target>
        </trans-unit>
        <trans-unit id="5c0d1f32a3c5ced96c19803c4ef9d22ef4513b71" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;headers&lt;/em&gt; argument should be a mapping of extra HTTP headers to send with the request.</source>
          <target state="translated">&lt;em&gt;ヘッダー&lt;/em&gt;引数が要求して送信するために、余分なHTTPヘッダのマッピングする必要があります。</target>
        </trans-unit>
        <trans-unit id="5a6eea28dbdb86941e4e47c17df323a2b65db50f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;host&lt;/em&gt; parameter can be set to several types which determine where the server would be listening:</source>
          <target state="translated">&lt;em&gt;ホスト&lt;/em&gt;パラメータは、サーバが受信されるだろう場所を決定するいくつかのタイプに設定することができます。</target>
        </trans-unit>
        <trans-unit id="3567013f4ba803cbc03a19e951935ba9875d379e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;input&lt;/em&gt; argument is passed to &lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt;&lt;code&gt;Popen.communicate()&lt;/code&gt;&lt;/a&gt; and thus to the subprocess&amp;rsquo;s stdin. If used it must be a byte sequence, or a string if &lt;em&gt;encoding&lt;/em&gt; or &lt;em&gt;errors&lt;/em&gt; is specified or &lt;em&gt;text&lt;/em&gt; is true. When used, the internal &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; object is automatically created with &lt;code&gt;stdin=PIPE&lt;/code&gt;, and the &lt;em&gt;stdin&lt;/em&gt; argument may not be used as well.</source>
          <target state="translated">&lt;em&gt;入力&lt;/em&gt;引数が渡される&lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt; &lt;code&gt;Popen.communicate()&lt;/code&gt; &lt;/a&gt;したがって、サブプロセスの標準入力に。使用する場合は、バイトシーケンスにする必要があります。&lt;em&gt;エンコーディング&lt;/em&gt;や&lt;em&gt;エラー&lt;/em&gt;が指定されている場合や&lt;em&gt;テキスト&lt;/em&gt;がtrueの&lt;em&gt;場合&lt;/em&gt;は文字列に&lt;em&gt;する&lt;/em&gt;必要&lt;em&gt;が&lt;/em&gt;あります。使用すると、内部&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;オブジェクトは &lt;code&gt;stdin=PIPE&lt;/code&gt; で自動的に作成され、&lt;em&gt;stdin&lt;/em&gt;引数も使用されない場合があります。</target>
        </trans-unit>
        <trans-unit id="309add7406369c9e13cbbe07f0abac084c4aeac9" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;interpreter&lt;/em&gt; argument specifies the name of the Python interpreter with which the archive will be executed. It is written as a &amp;ldquo;shebang&amp;rdquo; line at the start of the archive. On POSIX, this will be interpreted by the OS, and on Windows it will be handled by the Python launcher. Omitting the &lt;em&gt;interpreter&lt;/em&gt; results in no shebang line being written. If an interpreter is specified, and the target is a filename, the executable bit of the target file will be set.</source>
          <target state="translated">&lt;em&gt;インタプリタ&lt;/em&gt;引数は、アーカイブが実行されるとPythonインタプリタの名前を指定します。これは、アーカイブの先頭に「シバン」行として書き込まれます。これはPOSIXではOSによって解釈され、WindowsではPythonランチャーによって処理されます。&lt;em&gt;インタープリター&lt;/em&gt;を省略する&lt;em&gt;と&lt;/em&gt;、シバン行が書き込まれなくなります。インタープリターが指定され、ターゲットがファイル名の場合、ターゲットファイルの実行可能ビットが設定されます。</target>
        </trans-unit>
        <trans-unit id="2bc413367ebb6cea357fcef201d058874ef7a2cd" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;keyencoding&lt;/em&gt; parameter is the encoding used to encode keys before they are used with the underlying dict.</source>
          <target state="translated">&lt;em&gt;keyencoding&lt;/em&gt;パラメータは、それらが基礎となる辞書で使用される前にエンコードキーに使用するエンコーディングです。</target>
        </trans-unit>
        <trans-unit id="3e344c69f7b03d28b5ecf255f27851cd1ec1b42a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;limit&lt;/em&gt; argument is passed to &lt;a href=&quot;#asyncio.Task.get_stack&quot;&gt;&lt;code&gt;get_stack()&lt;/code&gt;&lt;/a&gt; directly.</source>
          <target state="translated">&lt;em&gt;制限&lt;/em&gt;引数はに渡される&lt;a href=&quot;#asyncio.Task.get_stack&quot;&gt; &lt;code&gt;get_stack()&lt;/code&gt; &lt;/a&gt;直接。</target>
        </trans-unit>
        <trans-unit id="03da4d795bd5e7eacf03e419e5465b47a81aab14" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;limit&lt;/em&gt; argument sets the buffer limit for &lt;a href=&quot;asyncio-stream#asyncio.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; wrappers for &lt;code&gt;Process.stdout&lt;/code&gt; and &lt;code&gt;Process.stderr&lt;/code&gt; (if &lt;a href=&quot;subprocess#subprocess.PIPE&quot;&gt;&lt;code&gt;subprocess.PIPE&lt;/code&gt;&lt;/a&gt; is passed to &lt;em&gt;stdout&lt;/em&gt; and &lt;em&gt;stderr&lt;/em&gt; arguments).</source>
          <target state="translated">&lt;em&gt;制限&lt;/em&gt;引数は用バッファ制限設定&lt;a href=&quot;asyncio-stream#asyncio.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;ためのラッパー &lt;code&gt;Process.stdout&lt;/code&gt; と &lt;code&gt;Process.stderr&lt;/code&gt; を（場合&lt;a href=&quot;subprocess#subprocess.PIPE&quot;&gt; &lt;code&gt;subprocess.PIPE&lt;/code&gt; の&lt;/a&gt;に渡され&lt;em&gt;STDOUT&lt;/em&gt;と&lt;em&gt;stderrの&lt;/em&gt;引数）。</target>
        </trans-unit>
        <trans-unit id="129e7c784b9b3ee51082a82585d3133b4d781544" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;loader_details&lt;/em&gt; argument is a variable number of 2-item tuples each containing a loader and a sequence of file suffixes the loader recognizes. The loaders are expected to be callables which accept two arguments of the module&amp;rsquo;s name and the path to the file found.</source>
          <target state="translated">&lt;em&gt;loader_detailsの&lt;/em&gt;引数は、2項目の可変数は、ローダおよびファイルのシーケンスを含む各ローダが認識サフィックスタプルです。ローダーは、モジュールの名前と見つかったファイルへのパスの2つの引数を受け入れる呼び出し可能オブジェクトであることが想定されています。</target>
        </trans-unit>
        <trans-unit id="c4075eb186f5064895077ca769fb8de129e00f4c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;loop&lt;/em&gt; argument is optional and can always be determined automatically when this function is awaited from a coroutine.</source>
          <target state="translated">&lt;em&gt;ループ&lt;/em&gt;引数はオプションであり、この関数はコルーチンから待望されている場合、常に自動的に決定することができます。</target>
        </trans-unit>
        <trans-unit id="73a8039d019649d2ee4bb760661a133481fe2941" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;loop&lt;/em&gt; argument is optional and can always be determined automatically when this method is awaited from a coroutine.</source>
          <target state="translated">&lt;em&gt;ループ&lt;/em&gt;引数はオプションであり、この方法は、コルーチンから待望されている場合、常に自動的に決定することができます。</target>
        </trans-unit>
        <trans-unit id="c152814f2f36109416e46a812106fb4bb59ade66" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;main&lt;/em&gt; argument specifies the name of a callable which will be used as the main program for the archive. It can only be specified if the source is a directory, and the source does not already contain a &lt;code&gt;__main__.py&lt;/code&gt; file. The &lt;em&gt;main&lt;/em&gt; argument should take the form &amp;ldquo;pkg.module:callable&amp;rdquo; and the archive will be run by importing &amp;ldquo;pkg.module&amp;rdquo; and executing the given callable with no arguments. It is an error to omit &lt;em&gt;main&lt;/em&gt; if the source is a directory and does not contain a &lt;code&gt;__main__.py&lt;/code&gt; file, as otherwise the resulting archive would not be executable.</source>
          <target state="translated">&lt;em&gt;主な&lt;/em&gt;引数は、アーカイブのメインプログラムとして使用される呼び出し可能なの名前を指定します。ソースがディレクトリであり、ソースに &lt;code&gt;__main__.py&lt;/code&gt; ファイルがまだ含まれていない場合にのみ指定できます。&lt;em&gt;メイン&lt;/em&gt;「：呼び出し可能pkg.module」とアーカイブは、引数なしで指定した呼び出し可能「をpkg.module」をインポートして実行することにより実行される引数の形式を取る必要があります。ソースがディレクトリであり、 &lt;code&gt;__main__.py&lt;/code&gt; ファイルが含まれていない場合、&lt;em&gt;main&lt;/em&gt;を省略するとエラーになります。それ以外の場合、結果のアーカイブは実行できません。</target>
        </trans-unit>
        <trans-unit id="a792d7ef7a7c58a9f18c32feedd94d015e4b0544" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;map&lt;/em&gt; parameter is a dictionary whose items are the channels to watch. As channels are closed they are deleted from their map. If &lt;em&gt;map&lt;/em&gt; is omitted, a global map is used. Channels (instances of &lt;a href=&quot;#asyncore.dispatcher&quot;&gt;&lt;code&gt;asyncore.dispatcher&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asynchat#asynchat.async_chat&quot;&gt;&lt;code&gt;asynchat.async_chat&lt;/code&gt;&lt;/a&gt; and subclasses thereof) can freely be mixed in the map.</source>
          <target state="translated">&lt;em&gt;マップの&lt;/em&gt;パラメータは、その項目観戦するチャネルである辞書です。チャネルが閉じられると、それらはマップから削除されます。場合&lt;em&gt;マップが&lt;/em&gt;省略され、グローバルなマップが使用されています。チャネル（&lt;a href=&quot;#asyncore.dispatcher&quot;&gt; &lt;code&gt;asyncore.dispatcher&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;asynchat#asynchat.async_chat&quot;&gt; &lt;code&gt;asynchat.async_chat&lt;/code&gt; の&lt;/a&gt;インスタンス、およびそれらのサブクラス）は、マップ内で自由に混在させることができます。</target>
        </trans-unit>
        <trans-unit id="5de3df102b5a039ab9487bee97ffa75b5ffdf2c3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;maxlevels&lt;/em&gt; parameter is used to limit the depth of the recursion; it defaults to &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;maxlevels&lt;/em&gt;再帰の深さを制限するために使用されるパラメータ。デフォルトは &lt;code&gt;10&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fb182bf741586c60f69a2721098eca2297c8d83d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;memLevel&lt;/em&gt; argument controls the amount of memory used for the internal compression state. Valid values range from &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;9&lt;/code&gt;. Higher values use more memory, but are faster and produce smaller output.</source>
          <target state="translated">&lt;em&gt;memLevelの&lt;/em&gt;引数は、内部圧縮状態のために使用されるメモリの量を制御します。有効な値は、範囲 &lt;code&gt;1&lt;/code&gt; に &lt;code&gt;9&lt;/code&gt; 。値が大きいほど多くのメモリを使用しますが、処理が速く、出力が小さくなります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
