<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="gcc">
    <body>
      <group id="gcc">
        <trans-unit id="762ba94f28f2b06fc4746f2460fae5f4c6d31f88" translate="yes" xml:space="preserve">
          <source>6.18 Arrays of Length Zero</source>
          <target state="translated">6.18 長さ0の配列</target>
        </trans-unit>
        <trans-unit id="d6718b5a32a39136586420c18e091137f7c85f46" translate="yes" xml:space="preserve">
          <source>6.18. Arrays of Length Zero</source>
          <target state="translated">6.18.長さゼロの配列</target>
        </trans-unit>
        <trans-unit id="40c3162c45a4aab2d33ad528837d5f3c8bec4efb" translate="yes" xml:space="preserve">
          <source>6.19 Structures with No Members</source>
          <target state="translated">6.19 メンバーのいない構造物</target>
        </trans-unit>
        <trans-unit id="a0f01529f8bdb03075a172a27982152a0e2aec28" translate="yes" xml:space="preserve">
          <source>6.19. Structures with No Members</source>
          <target state="translated">6.19.メンバーのいない構造物</target>
        </trans-unit>
        <trans-unit id="f49fe54e4450294edb2e434461ba5e129a9d0c36" translate="yes" xml:space="preserve">
          <source>6.2 Locally Declared Labels</source>
          <target state="translated">6.2 現地で宣言されたラベル</target>
        </trans-unit>
        <trans-unit id="5c97c92557210ca304da4bbb29762a547ef44132" translate="yes" xml:space="preserve">
          <source>6.2. Locally Declared Labels</source>
          <target state="translated">6.2.現地で宣言されたラベル</target>
        </trans-unit>
        <trans-unit id="9aa0fded52f088afe9fb5f939da58245bea895c9" translate="yes" xml:space="preserve">
          <source>6.2.4 Storage durations of objects</source>
          <target state="translated">6.2.4 オブジェクトの保存期間</target>
        </trans-unit>
        <trans-unit id="acb55ce4831c5a534c6e0701985471d41b9681f8" translate="yes" xml:space="preserve">
          <source>6.20 Arrays of Variable Length</source>
          <target state="translated">6.20 可変長の配列</target>
        </trans-unit>
        <trans-unit id="689e896d9b453b115a45a598102e484b44a12d28" translate="yes" xml:space="preserve">
          <source>6.20. Arrays of Variable Length</source>
          <target state="translated">6.20.可変長の配列</target>
        </trans-unit>
        <trans-unit id="c982e13bdc7691361c213f687122c35a4e1632ed" translate="yes" xml:space="preserve">
          <source>6.21 Macros with a Variable Number of Arguments.</source>
          <target state="translated">6.21 引数の数が可変のマクロ。</target>
        </trans-unit>
        <trans-unit id="a959bbba70636e507e2e089f5ca27366608e64ea" translate="yes" xml:space="preserve">
          <source>6.21. Macros with a Variable Number of Arguments.</source>
          <target state="translated">6.21.引数の数が可変のマクロ。</target>
        </trans-unit>
        <trans-unit id="0444eb603f796d774052e829a08e90bec9e99b6f" translate="yes" xml:space="preserve">
          <source>6.22 Slightly Looser Rules for Escaped Newlines</source>
          <target state="translated">6.22 エスケープされた改行のルールを少し緩くする</target>
        </trans-unit>
        <trans-unit id="ef66883aa3c1a1a4a581d9d714c51c7e8ea8f989" translate="yes" xml:space="preserve">
          <source>6.22. Slightly Looser Rules for Escaped Newlines</source>
          <target state="translated">6.22.エスケープされた改行のルールを少し緩くする</target>
        </trans-unit>
        <trans-unit id="ac6b6bff47dffc868f155457a21e15a1de5a443b" translate="yes" xml:space="preserve">
          <source>6.23 Non-Lvalue Arrays May Have Subscripts</source>
          <target state="translated">6.23 非L値配列は添え字を持つことができます。</target>
        </trans-unit>
        <trans-unit id="9d63180164d853a824dc71e947f69e134713ea5a" translate="yes" xml:space="preserve">
          <source>6.23. Non-Lvalue Arrays May Have Subscripts</source>
          <target state="translated">6.23.非L値配列は添え字を持つことができます。</target>
        </trans-unit>
        <trans-unit id="9869a6fc8aab07bb4e39b6af31e3c5e6357a6027" translate="yes" xml:space="preserve">
          <source>6.24 Arithmetic on &lt;code&gt;void&lt;/code&gt;- and Function-Pointers</source>
          <target state="translated">上の6.24算術演算 &lt;code&gt;void&lt;/code&gt; と機能-ポインタ-</target>
        </trans-unit>
        <trans-unit id="1ec9908167cadb81e9b2abff8bb6563f588ae478" translate="yes" xml:space="preserve">
          <source>6.24 Arithmetic on void- and Function-Pointers</source>
          <target state="translated">6.24 void および関数ポインタの算術</target>
        </trans-unit>
        <trans-unit id="cfa35b4e7b79088f3d8199d20164223597b7ad9f" translate="yes" xml:space="preserve">
          <source>6.24. Arithmetic on void- and Function-Pointers</source>
          <target state="translated">6.24.void および関数ポインタでの算術</target>
        </trans-unit>
        <trans-unit id="ce16f5b43930c95d4820ff2332cbeed0abe46eca" translate="yes" xml:space="preserve">
          <source>6.25 Pointer Arguments in Variadic Functions</source>
          <target state="translated">6.25 可変関数のポインタ引数</target>
        </trans-unit>
        <trans-unit id="d3ceb67f7dd50b84961a4f64b9e2a37615fd0381" translate="yes" xml:space="preserve">
          <source>6.25. Pointer Arguments in Variadic Functions</source>
          <target state="translated">6.25.可変関数のポインタ引数</target>
        </trans-unit>
        <trans-unit id="82d68dd3cad512cc6ae0e8582d7e0f045f29d8e2" translate="yes" xml:space="preserve">
          <source>6.26 Pointers to Arrays with Qualifiers Work as Expected</source>
          <target state="translated">6.26 修飾子を持つ配列へのポインタは期待通りに動作します。</target>
        </trans-unit>
        <trans-unit id="df42c6fb84e426dbdf96b2a527d8e9a27ee5ba4d" translate="yes" xml:space="preserve">
          <source>6.26. Pointers to Arrays with Qualifiers Work as Expected</source>
          <target state="translated">6.26.修飾子を持つ配列へのポインタは期待通りに動作する</target>
        </trans-unit>
        <trans-unit id="718c0a179faf5c990172400c58601702eaaa6535" translate="yes" xml:space="preserve">
          <source>6.27 Non-Constant Initializers</source>
          <target state="translated">6.27 非定常初期化子</target>
        </trans-unit>
        <trans-unit id="4ec7ac6fd29446b472630d92a906ec46d9086988" translate="yes" xml:space="preserve">
          <source>6.27. Non-Constant Initializers</source>
          <target state="translated">6.27.非定数初期化子</target>
        </trans-unit>
        <trans-unit id="2ed0304a0eff890521f1ee6840fde4b28ae8c513" translate="yes" xml:space="preserve">
          <source>6.28 Compound Literals</source>
          <target state="translated">6.28 複合リテラル</target>
        </trans-unit>
        <trans-unit id="d952b8c2bb1ead1d697e3b252f60719dfedc2474" translate="yes" xml:space="preserve">
          <source>6.28. Compound Literals</source>
          <target state="translated">6.28.複合リテラル</target>
        </trans-unit>
        <trans-unit id="2f170d897fc4ba8c84905c0a8d39e4955484e425" translate="yes" xml:space="preserve">
          <source>6.29 Designated Initializers</source>
          <target state="translated">6.29 指定されたイニシャライザ</target>
        </trans-unit>
        <trans-unit id="a85988e5509b98fe630709828e79d449c3d7bc1f" translate="yes" xml:space="preserve">
          <source>6.29. Designated Initializers</source>
          <target state="translated">6.29.指定されたイニシャライザ</target>
        </trans-unit>
        <trans-unit id="63007b5a2fde7bddc06961c1eed95013f513bbbe" translate="yes" xml:space="preserve">
          <source>6.3 Labels as Values</source>
          <target state="translated">6.3 値としてのラベル</target>
        </trans-unit>
        <trans-unit id="af750973eb8686ec6c4301de734b5e7ed70c88ba" translate="yes" xml:space="preserve">
          <source>6.3. Labels as Values</source>
          <target state="translated">6.3.値としてのラベル</target>
        </trans-unit>
        <trans-unit id="2fc0d7a1fdac376dccf4f66a325dbd7ef204e705" translate="yes" xml:space="preserve">
          <source>6.30 Case Ranges</source>
          <target state="translated">6.30 ケースレンジ</target>
        </trans-unit>
        <trans-unit id="2e5b5a4555e6ef252ef4bd7eac23d0b13486bd5d" translate="yes" xml:space="preserve">
          <source>6.30. Case Ranges</source>
          <target state="translated">6.30.ケースレンジ</target>
        </trans-unit>
        <trans-unit id="33c1f99be74eb4edae3c9d431c274916b564747a" translate="yes" xml:space="preserve">
          <source>6.31 Cast to a Union Type</source>
          <target state="translated">6.31 ユニオンタイプへの鋳造</target>
        </trans-unit>
        <trans-unit id="3b1092a9a9ca7e958a4bc55b84dc3e7900c97837" translate="yes" xml:space="preserve">
          <source>6.31. Cast to a Union Type</source>
          <target state="translated">6.31.ユニオンタイプへのキャスト</target>
        </trans-unit>
        <trans-unit id="f9efe7d862bda9885610a3eb59dad6deb29affba" translate="yes" xml:space="preserve">
          <source>6.32 Mixed Declarations and Code</source>
          <target state="translated">6.32 混合宣言とコード</target>
        </trans-unit>
        <trans-unit id="ee08b6bd3994945794092196f9f5b08b734260a9" translate="yes" xml:space="preserve">
          <source>6.32. Mixed Declarations and Code</source>
          <target state="translated">6.32.混合宣言とコード</target>
        </trans-unit>
        <trans-unit id="fbd527f1575376af6bb574942a1f7e8a58467748" translate="yes" xml:space="preserve">
          <source>6.33 Declaring Attributes of Functions</source>
          <target state="translated">6.33 関数の属性の宣言</target>
        </trans-unit>
        <trans-unit id="98e2351d7c8262b6f1a30b39479bd9defe43566c" translate="yes" xml:space="preserve">
          <source>6.33. Declaring Attributes of Functions</source>
          <target state="translated">6.33.関数の属性の宣言</target>
        </trans-unit>
        <trans-unit id="3959072744e45f9fbedd7a3fc16c5a676195c6fb" translate="yes" xml:space="preserve">
          <source>6.33.1 Common Function Attributes</source>
          <target state="translated">6.33.1 共通関数属性</target>
        </trans-unit>
        <trans-unit id="c2abaeacfc7adf8b55fa1c327c654a18c8c4e59b" translate="yes" xml:space="preserve">
          <source>6.33.1. Common Function Attributes</source>
          <target state="translated">6.33.1.共通関数属性</target>
        </trans-unit>
        <trans-unit id="33956bb36f4d0d094e84b406d5fbce3668c967fb" translate="yes" xml:space="preserve">
          <source>6.33.10 Epiphany Function Attributes</source>
          <target state="translated">6.33.10 エピファニー関数の属性</target>
        </trans-unit>
        <trans-unit id="797ed07a6c53d8570997e19cb7db1d4ce3ea7201" translate="yes" xml:space="preserve">
          <source>6.33.10. Epiphany Function Attributes</source>
          <target state="translated">6.33.10.エピファニー関数の属性</target>
        </trans-unit>
        <trans-unit id="4c1f071bd90ed926a58dccdab0200674a893d6d4" translate="yes" xml:space="preserve">
          <source>6.33.11 H8/300 Function Attributes</source>
          <target state="translated">6.33.11 H8/300 機能属性</target>
        </trans-unit>
        <trans-unit id="81d3c2f3ab24d7f895bae5afd79cf24239d72158" translate="yes" xml:space="preserve">
          <source>6.33.11. H8/300 Function Attributes</source>
          <target state="translated">6.33.11.H8/300 関数属性</target>
        </trans-unit>
        <trans-unit id="d73b5dbfe9d4d6c831d96315ad76769874f966e7" translate="yes" xml:space="preserve">
          <source>6.33.12 IA-64 Function Attributes</source>
          <target state="translated">6.33.12 IA-64 関数属性</target>
        </trans-unit>
        <trans-unit id="a158c916512827b6f1521bc308c0125d1bb283f1" translate="yes" xml:space="preserve">
          <source>6.33.12. IA-64 Function Attributes</source>
          <target state="translated">6.33.12.IA-64 関数属性</target>
        </trans-unit>
        <trans-unit id="419716ce5db13a7775d09b95a15da25124fcd1dd" translate="yes" xml:space="preserve">
          <source>6.33.13 M32C Function Attributes</source>
          <target state="translated">6.33.13 M32C 関数属性</target>
        </trans-unit>
        <trans-unit id="3b68817c2df7253c63e3398978c80f903b53900a" translate="yes" xml:space="preserve">
          <source>6.33.13. M32C Function Attributes</source>
          <target state="translated">6.33.13.M32C 関数属性</target>
        </trans-unit>
        <trans-unit id="9f984354966a4a37c62372716c6d03a89f28eccd" translate="yes" xml:space="preserve">
          <source>6.33.14 M32R/D Function Attributes</source>
          <target state="translated">6.33.14 M32R/D 機能属性</target>
        </trans-unit>
        <trans-unit id="4d8dde474d763e79756b05789d1b4cb65d727e2d" translate="yes" xml:space="preserve">
          <source>6.33.14. M32R/D Function Attributes</source>
          <target state="translated">6.33.14.M32R/D 関数属性</target>
        </trans-unit>
        <trans-unit id="f617eb87c70c2b32c3eb6c6d77c1be5bc9861723" translate="yes" xml:space="preserve">
          <source>6.33.15 m68k Function Attributes</source>
          <target state="translated">6.33.15 m68k 関数属性</target>
        </trans-unit>
        <trans-unit id="76a4b2ff5fdefd58a32df65a0732c4e73828e6f0" translate="yes" xml:space="preserve">
          <source>6.33.15. m68k Function Attributes</source>
          <target state="translated">m68k関数の属性</target>
        </trans-unit>
        <trans-unit id="1d4b37eaf82ee5597783529c94d4503363aecdfc" translate="yes" xml:space="preserve">
          <source>6.33.16 MCORE Function Attributes</source>
          <target state="translated">6.33.16 MCORE 関数属性</target>
        </trans-unit>
        <trans-unit id="f7632f685d3b302f691211af28fe474de31c1066" translate="yes" xml:space="preserve">
          <source>6.33.16. MCORE Function Attributes</source>
          <target state="translated">6.33.16.MCORE 関数の属性</target>
        </trans-unit>
        <trans-unit id="8e2b197c08b1825fcacec8e0864c84312ea38ebb" translate="yes" xml:space="preserve">
          <source>6.33.17 MeP Function Attributes</source>
          <target state="translated">6.33.17 MeP 関数属性</target>
        </trans-unit>
        <trans-unit id="f44f528df44d1daaece4e909adf6844e7be74f98" translate="yes" xml:space="preserve">
          <source>6.33.17. MeP Function Attributes</source>
          <target state="translated">6.33.17.MeP関数の属性</target>
        </trans-unit>
        <trans-unit id="3ba715a2eb85c43c6e1f986fd195457773fc3c63" translate="yes" xml:space="preserve">
          <source>6.33.18 MicroBlaze Function Attributes</source>
          <target state="translated">6.33.18 MicroBlaze機能の属性</target>
        </trans-unit>
        <trans-unit id="47351cf8583d2e91edf38b0d1797dfed01b8d8f1" translate="yes" xml:space="preserve">
          <source>6.33.18. MicroBlaze Function Attributes</source>
          <target state="translated">6.33.18.MicroBlaze機能の属性</target>
        </trans-unit>
        <trans-unit id="af1a4e917b654a975312fecc39c460a5a9f1ec2c" translate="yes" xml:space="preserve">
          <source>6.33.19 Microsoft Windows Function Attributes</source>
          <target state="translated">6.33.19 Microsoft Windows関数属性</target>
        </trans-unit>
        <trans-unit id="8b500649a9307f76c4bf189fff7647789b32bf0a" translate="yes" xml:space="preserve">
          <source>6.33.19. Microsoft Windows Function Attributes</source>
          <target state="translated">6.33.19.Microsoft Windows 関数属性</target>
        </trans-unit>
        <trans-unit id="900f97f77b6fbf3c898928ae25ab3c7b9afe84a1" translate="yes" xml:space="preserve">
          <source>6.33.2 AArch64 Function Attributes</source>
          <target state="translated">6.33.2 AArch64 関数の属性</target>
        </trans-unit>
        <trans-unit id="65dea60ce2def78b463c781e768458e396197231" translate="yes" xml:space="preserve">
          <source>6.33.2. AArch64 Function Attributes</source>
          <target state="translated">6.33.2.AArch64 関数の属性</target>
        </trans-unit>
        <trans-unit id="31b53b7b7639a1ca148c30eecbc6e03b267f8850" translate="yes" xml:space="preserve">
          <source>6.33.2.1 Inlining rules</source>
          <target state="translated">6.33.2.1 インライン化ルール</target>
        </trans-unit>
        <trans-unit id="3656913b6cfcf79fc75f9fc31ab37edb6e77689a" translate="yes" xml:space="preserve">
          <source>6.33.20 MIPS Function Attributes</source>
          <target state="translated">6.33.20 MIPS 関数属性</target>
        </trans-unit>
        <trans-unit id="a54b5a6fe60107e9b56c782c1507aa94027dbb3b" translate="yes" xml:space="preserve">
          <source>6.33.20. MIPS Function Attributes</source>
          <target state="translated">6.33.20.MIPS 関数属性</target>
        </trans-unit>
        <trans-unit id="13a0b607588e9af601a5fdd7c144cae74e10f718" translate="yes" xml:space="preserve">
          <source>6.33.21 MSP430 Function Attributes</source>
          <target state="translated">6.33.21 MSP430の機能属性</target>
        </trans-unit>
        <trans-unit id="d13127dad54471db7d445c982cc86ab1273ee0c4" translate="yes" xml:space="preserve">
          <source>6.33.21. MSP430 Function Attributes</source>
          <target state="translated">6.33.21.MSP430の機能属性</target>
        </trans-unit>
        <trans-unit id="7c7651b7f2baa92027a6c239076b7cb715070a84" translate="yes" xml:space="preserve">
          <source>6.33.22 NDS32 Function Attributes</source>
          <target state="translated">6.33.22 NDS32 関数属性</target>
        </trans-unit>
        <trans-unit id="f01df49530b8a8d28536297978dd505cdd354942" translate="yes" xml:space="preserve">
          <source>6.33.22. NDS32 Function Attributes</source>
          <target state="translated">6.33.22.NDS32 関数属性</target>
        </trans-unit>
        <trans-unit id="99c03ab5429d7d7b6d57b680e8fa51da17791f3f" translate="yes" xml:space="preserve">
          <source>6.33.23 Nios II Function Attributes</source>
          <target state="translated">6.33.23 Nios II 機能属性</target>
        </trans-unit>
        <trans-unit id="4a3fbba544676bdeb8cc3f1086c00506163578af" translate="yes" xml:space="preserve">
          <source>6.33.23. Nios II Function Attributes</source>
          <target state="translated">6.33.23.Nios II 機能属性</target>
        </trans-unit>
        <trans-unit id="5f071d941c8d890f11224801ff401e128b8f2ebb" translate="yes" xml:space="preserve">
          <source>6.33.24 Nvidia PTX Function Attributes</source>
          <target state="translated">6.33.24 Nvidia PTX 機能属性</target>
        </trans-unit>
        <trans-unit id="ec7edbbfa70981fad11ad51561b839079fa443eb" translate="yes" xml:space="preserve">
          <source>6.33.24. Nvidia PTX Function Attributes</source>
          <target state="translated">6.33.24.Nvidia PTX機能の属性</target>
        </trans-unit>
        <trans-unit id="18762d943e96b861f5cb71e380ad89578af31b7d" translate="yes" xml:space="preserve">
          <source>6.33.25 PowerPC Function Attributes</source>
          <target state="translated">6.33.25 PowerPC関数属性</target>
        </trans-unit>
        <trans-unit id="b01a11a5995ae86c0998c572de2b427114cc49ec" translate="yes" xml:space="preserve">
          <source>6.33.25. PowerPC Function Attributes</source>
          <target state="translated">6.33.25.PowerPC 関数の属性</target>
        </trans-unit>
        <trans-unit id="991c1544bd372ae36675020c892292f984ea620f" translate="yes" xml:space="preserve">
          <source>6.33.26 RISC-V Function Attributes</source>
          <target state="translated">6.33.26 RISC-V関数属性</target>
        </trans-unit>
        <trans-unit id="3d88b71fe71bac3d635c0295b509f25ac45f0d7c" translate="yes" xml:space="preserve">
          <source>6.33.26. RISC-V Function Attributes</source>
          <target state="translated">6.33.26.RISC-V 関数の属性</target>
        </trans-unit>
        <trans-unit id="f2b0724de8958568b8bdf67060687c72e1b6227c" translate="yes" xml:space="preserve">
          <source>6.33.27 RL78 Function Attributes</source>
          <target state="translated">6.33.27 RL78 関数属性</target>
        </trans-unit>
        <trans-unit id="831035e6cc40bef0749308e375b83957c225a254" translate="yes" xml:space="preserve">
          <source>6.33.27. RL78 Function Attributes</source>
          <target state="translated">6.33.27.RL78 関数属性</target>
        </trans-unit>
        <trans-unit id="451844b0d4307702502c385d75587e4e44ec2ab0" translate="yes" xml:space="preserve">
          <source>6.33.28 RX Function Attributes</source>
          <target state="translated">6.33.28 RX 関数属性</target>
        </trans-unit>
        <trans-unit id="ceebd86601d6181aa07fd4278c5ae8327700c334" translate="yes" xml:space="preserve">
          <source>6.33.28. RX Function Attributes</source>
          <target state="translated">6.33.28.RX 関数の属性</target>
        </trans-unit>
        <trans-unit id="5e31645954fded657ce3ef24a66a5c5f68fe4bb2" translate="yes" xml:space="preserve">
          <source>6.33.29 S/390 Function Attributes</source>
          <target state="translated">6.33.29 S/390 関数属性</target>
        </trans-unit>
        <trans-unit id="de6927fb6c2a8e91ffa56c63b7a8e6f4f59bdbee" translate="yes" xml:space="preserve">
          <source>6.33.29. S/390 Function Attributes</source>
          <target state="translated">6.33.29.S/390 機能属性</target>
        </trans-unit>
        <trans-unit id="e960b4cc59471b421379fcd8090812abf1922cde" translate="yes" xml:space="preserve">
          <source>6.33.3 AMD GCN Function Attributes</source>
          <target state="translated">6.33.3 AMD GCN機能の属性</target>
        </trans-unit>
        <trans-unit id="076001ba838b96536ca9cc4cb3d7b0e5724eb7ba" translate="yes" xml:space="preserve">
          <source>6.33.3. AMD GCN Function Attributes</source>
          <target state="translated">6.33.3.AMD GCN機能の属性</target>
        </trans-unit>
        <trans-unit id="d50b054150121fcce022d72f65dc794f286a767c" translate="yes" xml:space="preserve">
          <source>6.33.30 SH Function Attributes</source>
          <target state="translated">6.33.30 SH関数属性</target>
        </trans-unit>
        <trans-unit id="b7d8011ef870176bd798610f125bea18324b061c" translate="yes" xml:space="preserve">
          <source>6.33.30. SH Function Attributes</source>
          <target state="translated">6.33.30.SH関数属性</target>
        </trans-unit>
        <trans-unit id="eb83cce043f14c4be052980ff2e5cdedc1ab7c96" translate="yes" xml:space="preserve">
          <source>6.33.31 SPU Function Attributes</source>
          <target state="translated">6.33.31 SPU 関数属性</target>
        </trans-unit>
        <trans-unit id="4ddc06fae633a08bc5e933eb11f2922496793f28" translate="yes" xml:space="preserve">
          <source>6.33.31. SPU Function Attributes</source>
          <target state="translated">6.33.31.SPU 関数属性</target>
        </trans-unit>
        <trans-unit id="f6edd7f2810d18a4006e0d7eee2a8c91468a5270" translate="yes" xml:space="preserve">
          <source>6.33.32 Symbian OS Function Attributes</source>
          <target state="translated">6.33.32 Symbian OS の機能属性</target>
        </trans-unit>
        <trans-unit id="aa56649bd6b1bcff352a28c815192b9300885f29" translate="yes" xml:space="preserve">
          <source>6.33.32. Symbian OS Function Attributes</source>
          <target state="translated">6.33.32.Symbian OS の機能属性</target>
        </trans-unit>
        <trans-unit id="5f9e21c0f671cac1ecdc704d4bd9762fc57e3ae9" translate="yes" xml:space="preserve">
          <source>6.33.33 V850 Function Attributes</source>
          <target state="translated">6.33.33 V850 関数属性</target>
        </trans-unit>
        <trans-unit id="679f766d4f646a6e4a85f432f51cdc166cfab963" translate="yes" xml:space="preserve">
          <source>6.33.33. V850 Function Attributes</source>
          <target state="translated">6.33.33.V850 機能属性</target>
        </trans-unit>
        <trans-unit id="6dcb6820904921591f547d7897c60ee71138c9e1" translate="yes" xml:space="preserve">
          <source>6.33.34 Visium Function Attributes</source>
          <target state="translated">6.33.34 Visium 機能属性</target>
        </trans-unit>
        <trans-unit id="7caf2f69c6c01bd2a11086f11ff1cf9dd6b70fc8" translate="yes" xml:space="preserve">
          <source>6.33.34. Visium Function Attributes</source>
          <target state="translated">6.33.34.Visium機能の属性</target>
        </trans-unit>
        <trans-unit id="78a1203ee0bb26eadd8f4d0a473827c2e3a51bbe" translate="yes" xml:space="preserve">
          <source>6.33.35 x86 Function Attributes</source>
          <target state="translated">6.33.35 x86関数の属性</target>
        </trans-unit>
        <trans-unit id="a57beba8f86cc4f356b2ca4eee36d9cd82eedcea" translate="yes" xml:space="preserve">
          <source>6.33.35. x86 Function Attributes</source>
          <target state="translated">x86関数の属性</target>
        </trans-unit>
        <trans-unit id="2d252b732c53521e7f7ac7cc947e722bff0687cd" translate="yes" xml:space="preserve">
          <source>6.33.36 Xstormy16 Function Attributes</source>
          <target state="translated">6.33.36 Xstormy16 関数属性</target>
        </trans-unit>
        <trans-unit id="572e63e2c6c08c5b1bc35bd062334a873f99bc85" translate="yes" xml:space="preserve">
          <source>6.33.36. Xstormy16 Function Attributes</source>
          <target state="translated">6.33.36.Xstormy16 関数の属性</target>
        </trans-unit>
        <trans-unit id="92747e9d37e816286b28f85f6ff6f88e08382a96" translate="yes" xml:space="preserve">
          <source>6.33.4 ARC Function Attributes</source>
          <target state="translated">6.33.4 ARC関数属性</target>
        </trans-unit>
        <trans-unit id="044e658b5d34625b0154570e8c9d4749ff4751a6" translate="yes" xml:space="preserve">
          <source>6.33.4. ARC Function Attributes</source>
          <target state="translated">6.33.4.ARC 機能属性</target>
        </trans-unit>
        <trans-unit id="189a8772f2284989a83ccc177f4907354d3574e3" translate="yes" xml:space="preserve">
          <source>6.33.5 ARM Function Attributes</source>
          <target state="translated">6.33.5 ARM機能の属性</target>
        </trans-unit>
        <trans-unit id="316cd92526266570fe4632b9f3ae44ae892ae634" translate="yes" xml:space="preserve">
          <source>6.33.5. ARM Function Attributes</source>
          <target state="translated">6.33.5.ARM機能の属性</target>
        </trans-unit>
        <trans-unit id="820e7eb76a912771ff3061b104131748434fdd3d" translate="yes" xml:space="preserve">
          <source>6.33.6 AVR Function Attributes</source>
          <target state="translated">6.33.6 AVR機能属性</target>
        </trans-unit>
        <trans-unit id="c98e39816d517fac910ec5cde0a71435c96f41b7" translate="yes" xml:space="preserve">
          <source>6.33.6. AVR Function Attributes</source>
          <target state="translated">6.33.6.AVR機能属性</target>
        </trans-unit>
        <trans-unit id="80659c45097dd9cb1f1af7199e3e565e1635fbf9" translate="yes" xml:space="preserve">
          <source>6.33.7 Blackfin Function Attributes</source>
          <target state="translated">6.33.7 クロマグロ機能の属性</target>
        </trans-unit>
        <trans-unit id="67d2e9abfc1ae38008ce887ad5eb0c837182f00d" translate="yes" xml:space="preserve">
          <source>6.33.7. Blackfin Function Attributes</source>
          <target state="translated">6.33.7.くろまぐろ機能の属性</target>
        </trans-unit>
        <trans-unit id="7d4d0b90a27c07744cce3e05aae92fbbedd938d9" translate="yes" xml:space="preserve">
          <source>6.33.8 CR16 Function Attributes</source>
          <target state="translated">6.33.8 CR16 関数属性</target>
        </trans-unit>
        <trans-unit id="3ac2f91ce3b01406b89d6c089407903e5d1eef23" translate="yes" xml:space="preserve">
          <source>6.33.8. CR16 Function Attributes</source>
          <target state="translated">6.33.8.CR16 関数属性</target>
        </trans-unit>
        <trans-unit id="9819b913ab30a94812775d840938d03b889136c1" translate="yes" xml:space="preserve">
          <source>6.33.9 C-SKY Function Attributes</source>
          <target state="translated">6.33.9 C-SKY機能の属性</target>
        </trans-unit>
        <trans-unit id="963da469ad570fe74f123e6872a3e72e2731d0c2" translate="yes" xml:space="preserve">
          <source>6.33.9. C-SKY Function Attributes</source>
          <target state="translated">6.33.9.C-SKY関数の属性</target>
        </trans-unit>
        <trans-unit id="5aa2523ac102e42bacf05162916037bbf8737a3c" translate="yes" xml:space="preserve">
          <source>6.34 Specifying Attributes of Variables</source>
          <target state="translated">6.34 変数の属性の指定</target>
        </trans-unit>
        <trans-unit id="aa3bde1c48365064aebf791cb98bae1d78cbdc5b" translate="yes" xml:space="preserve">
          <source>6.34. Specifying Attributes of Variables</source>
          <target state="translated">6.34.変数の属性の指定</target>
        </trans-unit>
        <trans-unit id="47f3e2ac57fc8e743ea466e398104e21f384c7b2" translate="yes" xml:space="preserve">
          <source>6.34.1 Common Variable Attributes</source>
          <target state="translated">6.34.1 共通変数属性</target>
        </trans-unit>
        <trans-unit id="e99ab19e60db21f63e73d131860f84968f3bf3b3" translate="yes" xml:space="preserve">
          <source>6.34.1. Common Variable Attributes</source>
          <target state="translated">6.34.1.共通変数属性</target>
        </trans-unit>
        <trans-unit id="97789bfe888e3fb7ed408690479dc8b03fa56048" translate="yes" xml:space="preserve">
          <source>6.34.10 MSP430 Variable Attributes</source>
          <target state="translated">6.34.10 MSP430 変数属性</target>
        </trans-unit>
        <trans-unit id="ae86d3b84c090a5386835db2329328efe10e8c00" translate="yes" xml:space="preserve">
          <source>6.34.10. MSP430 Variable Attributes</source>
          <target state="translated">6.34.10.MSP430 変数属性</target>
        </trans-unit>
        <trans-unit id="caa5a28ff71c2bef0a8d3021334e403ffba5d472" translate="yes" xml:space="preserve">
          <source>6.34.11 Nvidia PTX Variable Attributes</source>
          <target state="translated">6.34.11 Nvidia PTX 変数属性</target>
        </trans-unit>
        <trans-unit id="f7301d4dcfa81570ddb9904037efb3e9df7f4d1c" translate="yes" xml:space="preserve">
          <source>6.34.11. Nvidia PTX Variable Attributes</source>
          <target state="translated">6.34.11.Nvidia PTX 変数属性</target>
        </trans-unit>
        <trans-unit id="8a2c821cea1955a1d13c686369ede91364016e25" translate="yes" xml:space="preserve">
          <source>6.34.12 PowerPC Variable Attributes</source>
          <target state="translated">6.34.12 PowerPC 変数属性</target>
        </trans-unit>
        <trans-unit id="8725decd52736f4311cdb0e275b5ce8e827ed97c" translate="yes" xml:space="preserve">
          <source>6.34.12. PowerPC Variable Attributes</source>
          <target state="translated">6.34.12.PowerPC 変数の属性</target>
        </trans-unit>
        <trans-unit id="5aa6c61af9a1c89baa5f07247205a72db591eecf" translate="yes" xml:space="preserve">
          <source>6.34.13 RL78 Variable Attributes</source>
          <target state="translated">6.34.13 RL78 変数属性</target>
        </trans-unit>
        <trans-unit id="8b5a19bea876f59e65f842aef4e721d0da6305c1" translate="yes" xml:space="preserve">
          <source>6.34.13. RL78 Variable Attributes</source>
          <target state="translated">6.34.13.RL78 変数属性</target>
        </trans-unit>
        <trans-unit id="207117e5e71a65a20283424c493ffa4c75c6c39d" translate="yes" xml:space="preserve">
          <source>6.34.14 SPU Variable Attributes</source>
          <target state="translated">6.34.14 SPU 変数属性</target>
        </trans-unit>
        <trans-unit id="5075258a230c7c72ccd8db8688924f19ef73ce7d" translate="yes" xml:space="preserve">
          <source>6.34.14. SPU Variable Attributes</source>
          <target state="translated">6.34.14.SPU 変数属性</target>
        </trans-unit>
        <trans-unit id="47088a2e7461a79ac326e110666b7225ff13107a" translate="yes" xml:space="preserve">
          <source>6.34.15 V850 Variable Attributes</source>
          <target state="translated">6.34.15 V850 変数属性</target>
        </trans-unit>
        <trans-unit id="d5ab9e6daeca8c038ea7e3c760e5692d621a36d1" translate="yes" xml:space="preserve">
          <source>6.34.15. V850 Variable Attributes</source>
          <target state="translated">6.34.15.V850 変数属性</target>
        </trans-unit>
        <trans-unit id="dd12eddd1f29b7cda82ee97b9a56cd7733352000" translate="yes" xml:space="preserve">
          <source>6.34.16 x86 Variable Attributes</source>
          <target state="translated">6.34.16 x86 変数属性</target>
        </trans-unit>
        <trans-unit id="f742b5e5a0f79552c1259fe8af69e34879668881" translate="yes" xml:space="preserve">
          <source>6.34.17 Xstormy16 Variable Attributes</source>
          <target state="translated">6.34.17 Xstormy16 変数属性</target>
        </trans-unit>
        <trans-unit id="51e62903eea0dcfc5cdd437a8dbeb21779bb4408" translate="yes" xml:space="preserve">
          <source>6.34.17. Xstormy16 Variable Attributes</source>
          <target state="translated">6.34.17.Xstormy16 変数属性</target>
        </trans-unit>
        <trans-unit id="8229362b4df9fb9562bb43856107b686b8a59461" translate="yes" xml:space="preserve">
          <source>6.34.2 ARC Variable Attributes</source>
          <target state="translated">6.34.2 ARC 変数属性</target>
        </trans-unit>
        <trans-unit id="8236f0330bf7c63de88dec2c6b10437a7e08fff9" translate="yes" xml:space="preserve">
          <source>6.34.2. ARC Variable Attributes</source>
          <target state="translated">6.34.2.ARC 変数属性</target>
        </trans-unit>
        <trans-unit id="e5114c91cdd8703135481889cf6935e85a80f313" translate="yes" xml:space="preserve">
          <source>6.34.3 AVR Variable Attributes</source>
          <target state="translated">6.34.3 AVR 変数属性</target>
        </trans-unit>
        <trans-unit id="35727ace16e3329cd2fb845f461504ed6a792d93" translate="yes" xml:space="preserve">
          <source>6.34.4 Blackfin Variable Attributes</source>
          <target state="translated">6.34.4 クロマグロの変数属性</target>
        </trans-unit>
        <trans-unit id="24351684397fffeefe3eb2627bff7eb7b7253c88" translate="yes" xml:space="preserve">
          <source>6.34.4. Blackfin Variable Attributes</source>
          <target state="translated">6.34.4.くろまぐろの変数の属性</target>
        </trans-unit>
        <trans-unit id="f677074e3b778bafa2fd09e87159cfcf96fac5f0" translate="yes" xml:space="preserve">
          <source>6.34.5 H8/300 Variable Attributes</source>
          <target state="translated">6.34.5 H8/300 変数属性</target>
        </trans-unit>
        <trans-unit id="d48c7f6dbc457f9176fca4138fd86ad4aad191ab" translate="yes" xml:space="preserve">
          <source>6.34.5. H8/300 Variable Attributes</source>
          <target state="translated">6.34.5.H8/300 変数属性</target>
        </trans-unit>
        <trans-unit id="84a3629fedb46c2507fae1d473f35a27a7b71884" translate="yes" xml:space="preserve">
          <source>6.34.6 IA-64 Variable Attributes</source>
          <target state="translated">6.34.6 IA-64 変数属性</target>
        </trans-unit>
        <trans-unit id="40184c8877fdfbb7eda16e2cb6b098db8c27d5af" translate="yes" xml:space="preserve">
          <source>6.34.6. IA-64 Variable Attributes</source>
          <target state="translated">6.34.6.IA-64 変数属性</target>
        </trans-unit>
        <trans-unit id="665dcb1f5ddd877cbe864eeb218fedbe200a6451" translate="yes" xml:space="preserve">
          <source>6.34.7 M32R/D Variable Attributes</source>
          <target state="translated">6.34.7 M32R/D 変数属性</target>
        </trans-unit>
        <trans-unit id="399a2133660397189e7659fd6b61e9332a8f4446" translate="yes" xml:space="preserve">
          <source>6.34.7. M32R/D Variable Attributes</source>
          <target state="translated">6.34.7.M32R/D 変数属性</target>
        </trans-unit>
        <trans-unit id="11c586b95755ffb92d301c135d0eb9579f9990c7" translate="yes" xml:space="preserve">
          <source>6.34.8 MeP Variable Attributes</source>
          <target state="translated">6.34.8 MeP 変数属性</target>
        </trans-unit>
        <trans-unit id="aed38ebff752371a6f44d9b790f19af47e9a1acc" translate="yes" xml:space="preserve">
          <source>6.34.8. MeP Variable Attributes</source>
          <target state="translated">6.34.8.MeP 変数の属性</target>
        </trans-unit>
        <trans-unit id="d7fc33177da35b7791fd304463def9139c51af7d" translate="yes" xml:space="preserve">
          <source>6.34.9 Microsoft Windows Variable Attributes</source>
          <target state="translated">6.34.9 Microsoft Windows 変数属性</target>
        </trans-unit>
        <trans-unit id="cf119abfaa81f673d249e5f0a38fd1d566954e54" translate="yes" xml:space="preserve">
          <source>6.34.9. Microsoft Windows Variable Attributes</source>
          <target state="translated">6.34.9.Microsoft Windows 変数属性</target>
        </trans-unit>
        <trans-unit id="46c6d857a99640f61dbaa0b9fb4a8e563c32d5c7" translate="yes" xml:space="preserve">
          <source>6.35 Specifying Attributes of Types</source>
          <target state="translated">6.35 型の属性の指定</target>
        </trans-unit>
        <trans-unit id="3402feb0b300db8379b24c2c577bc28a5b97ddf3" translate="yes" xml:space="preserve">
          <source>6.35. Specifying Attributes of Types</source>
          <target state="translated">6.35.型の属性の指定</target>
        </trans-unit>
        <trans-unit id="5218ebba19a80378978cbb9a2651ed1cf5433f12" translate="yes" xml:space="preserve">
          <source>6.35.1 Common Type Attributes</source>
          <target state="translated">6.35.1 共通型属性</target>
        </trans-unit>
        <trans-unit id="c4dfc513879ff509a694a73d7b1b0af603da77a6" translate="yes" xml:space="preserve">
          <source>6.35.1. Common Type Attributes</source>
          <target state="translated">6.35.1.共通型属性</target>
        </trans-unit>
        <trans-unit id="b96df4999d62a9a2be6db4df2c0d2a4a61a31074" translate="yes" xml:space="preserve">
          <source>6.35.2 ARC Type Attributes</source>
          <target state="translated">6.35.2 ARC タイプ属性</target>
        </trans-unit>
        <trans-unit id="67999a39e9947dada85eb6f8028eb519f6bc91c3" translate="yes" xml:space="preserve">
          <source>6.35.2. ARC Type Attributes</source>
          <target state="translated">6.35.2.ARC タイプ属性</target>
        </trans-unit>
        <trans-unit id="1f3cf6225361f95cd30af5bf1c561d839709654e" translate="yes" xml:space="preserve">
          <source>6.35.3 ARM Type Attributes</source>
          <target state="translated">6.35.3 ARMタイプの属性</target>
        </trans-unit>
        <trans-unit id="9a09228c89e9ea12ee480af1cd04b429b41e26df" translate="yes" xml:space="preserve">
          <source>6.35.3. ARM Type Attributes</source>
          <target state="translated">6.35.3.ARMタイプの属性</target>
        </trans-unit>
        <trans-unit id="d89e5846897cd83654ebd7030ddc053e8b62beed" translate="yes" xml:space="preserve">
          <source>6.35.4 MeP Type Attributes</source>
          <target state="translated">6.35.4 MeP タイプ属性</target>
        </trans-unit>
        <trans-unit id="e2468142135a3e73882677c6b64e3027b4dab83c" translate="yes" xml:space="preserve">
          <source>6.35.4. MeP Type Attributes</source>
          <target state="translated">6.35.4.MeP タイプの属性</target>
        </trans-unit>
        <trans-unit id="10e08811a0eaef5c77bd63398979172bc1e707a6" translate="yes" xml:space="preserve">
          <source>6.35.5 PowerPC Type Attributes</source>
          <target state="translated">6.35.5 PowerPC タイプ属性</target>
        </trans-unit>
        <trans-unit id="e1ba8f457dbbc02e8a5e5515efe87d14f9a1a345" translate="yes" xml:space="preserve">
          <source>6.35.6 SPU Type Attributes</source>
          <target state="translated">6.35.6 SPU タイプ属性</target>
        </trans-unit>
        <trans-unit id="5072447eaf908cb7a17ce82abf283be0288e366e" translate="yes" xml:space="preserve">
          <source>6.35.7 x86 Type Attributes</source>
          <target state="translated">6.35.7 x86型属性</target>
        </trans-unit>
        <trans-unit id="fc123df4e9e75e9670764c2ec77f8014e4d73280" translate="yes" xml:space="preserve">
          <source>6.36 Label Attributes</source>
          <target state="translated">6.36 ラベル属性</target>
        </trans-unit>
        <trans-unit id="db057660be504a487e5f6faea305595f38daaf88" translate="yes" xml:space="preserve">
          <source>6.36. Label Attributes</source>
          <target state="translated">6.36.ラベル属性</target>
        </trans-unit>
        <trans-unit id="c9aa11aae3ad029fefeaabd06e01be453868e684" translate="yes" xml:space="preserve">
          <source>6.37 Enumerator Attributes</source>
          <target state="translated">6.37 列挙子属性</target>
        </trans-unit>
        <trans-unit id="b9e3908ad59d26a40490968b1756c3a1c2912f5b" translate="yes" xml:space="preserve">
          <source>6.37. Enumerator Attributes</source>
          <target state="translated">6.37.列挙子属性</target>
        </trans-unit>
        <trans-unit id="3e22db843d169d53a0fab759c104c976a7fff672" translate="yes" xml:space="preserve">
          <source>6.38 Statement Attributes</source>
          <target state="translated">6.38 ステートメント属性</target>
        </trans-unit>
        <trans-unit id="78a42186d71fd77d0b8c4fd07de9aef4ed2bed8e" translate="yes" xml:space="preserve">
          <source>6.38. Statement Attributes</source>
          <target state="translated">6.38.ステートメントの属性</target>
        </trans-unit>
        <trans-unit id="858eec56de848e19175bcdf1034cf57abe66fb6a" translate="yes" xml:space="preserve">
          <source>6.39 Attribute Syntax</source>
          <target state="translated">6.39 属性構文</target>
        </trans-unit>
        <trans-unit id="092b36e80784a37ceaa82bebed430e1dcaddfcf4" translate="yes" xml:space="preserve">
          <source>6.39. Attribute Syntax</source>
          <target state="translated">6.39.属性の構文</target>
        </trans-unit>
        <trans-unit id="872c9757cdcf48a0113b5b7dcb3aeb443d02e69c" translate="yes" xml:space="preserve">
          <source>6.4 Nested Functions</source>
          <target state="translated">6.4 入れ子になった関数</target>
        </trans-unit>
        <trans-unit id="fd6bf93c9c20ef707805bb34b7764f00d9496761" translate="yes" xml:space="preserve">
          <source>6.4. Nested Functions</source>
          <target state="translated">6.4.入れ子になった関数</target>
        </trans-unit>
        <trans-unit id="29c5ee28625ee58c00b7eb1a618f94ef5554a4b5" translate="yes" xml:space="preserve">
          <source>6.4.1 Keywords</source>
          <target state="translated">6.4.1 キーワード</target>
        </trans-unit>
        <trans-unit id="dff52598ca1464fef278bedadf8836b43ca9b69d" translate="yes" xml:space="preserve">
          <source>6.40 Prototypes and Old-Style Function Definitions</source>
          <target state="translated">6.40 プロトタイプと旧式の関数定義</target>
        </trans-unit>
        <trans-unit id="226a394777053e7be3bdd3fd5a0061d9df2a1955" translate="yes" xml:space="preserve">
          <source>6.40. Prototypes and Old-Style Function Definitions</source>
          <target state="translated">6.40.プロトタイプと旧式の関数定義</target>
        </trans-unit>
        <trans-unit id="f64fd5980c6d35d04bcaf0dcb72e02aae370cae7" translate="yes" xml:space="preserve">
          <source>6.41 C++ Style Comments</source>
          <target state="translated">6.41 C++スタイルコメント</target>
        </trans-unit>
        <trans-unit id="8b69d116793d4b2c2c9757b7526c117e466a9c25" translate="yes" xml:space="preserve">
          <source>6.41. C++ Style Comments</source>
          <target state="translated">6.41.C++スタイルコメント</target>
        </trans-unit>
        <trans-unit id="1b6b092d67ee982de3e2803a279b1d5d17a5ec9d" translate="yes" xml:space="preserve">
          <source>6.42 Dollar Signs in Identifier Names</source>
          <target state="translated">6.42 識別名のドル記号</target>
        </trans-unit>
        <trans-unit id="6b039b31ba2d865e0c2b175277881f6e07f916e7" translate="yes" xml:space="preserve">
          <source>6.42. Dollar Signs in Identifier Names</source>
          <target state="translated">6.42.識別名のドル記号</target>
        </trans-unit>
        <trans-unit id="852bed2432420b6147b02bd291391833ef6898b3" translate="yes" xml:space="preserve">
          <source>6.43 The Character</source>
          <target state="translated">6.43 キャラクター</target>
        </trans-unit>
        <trans-unit id="c4f00e6b6a788b3578e09b729e9e093b367b2628" translate="yes" xml:space="preserve">
          <source>6.43 The Character &lt;tt&gt;ESC&lt;/tt&gt; in Constants</source>
          <target state="translated">6.43 定数の文字&lt;tt&gt;ESC&lt;/tt&gt;</target>
        </trans-unit>
        <trans-unit id="d70e3bbb9c501dcc979ea3277ed30e2d8eac8719" translate="yes" xml:space="preserve">
          <source>6.43. The Character ESC in Constants</source>
          <target state="translated">6.43.定数の ESC 文字</target>
        </trans-unit>
        <trans-unit id="8699d89e1fd5487f8b53cd149f83dcadb159ffe4" translate="yes" xml:space="preserve">
          <source>6.44 Determining the Alignment of Functions, Types or Variables</source>
          <target state="translated">6.44 関数、型または変数のアラインメントの決定</target>
        </trans-unit>
        <trans-unit id="0e5ee5333418c136603106d24737e184f714694f" translate="yes" xml:space="preserve">
          <source>6.44. Determining the Alignment of Functions, Types or Variables</source>
          <target state="translated">6.44.関数、型、または変数のアラインメントの決定</target>
        </trans-unit>
        <trans-unit id="a6b26edc21f5bcc8b85146ad30d977aae5c9c76e" translate="yes" xml:space="preserve">
          <source>6.45 An Inline Function is As Fast As a Macro</source>
          <target state="translated">6.45 インライン関数はマクロと同じくらい速い</target>
        </trans-unit>
        <trans-unit id="f704e4510201d9015cee26e226538fb77cb98929" translate="yes" xml:space="preserve">
          <source>6.45. An Inline Function is As Fast As a Macro</source>
          <target state="translated">6.45.インライン関数はマクロと同じくらい速い</target>
        </trans-unit>
        <trans-unit id="e9cd4cff0c27736bcd42223536fe7bf2e4f9bc61" translate="yes" xml:space="preserve">
          <source>6.46 When is a Volatile Object Accessed?</source>
          <target state="translated">6.46 揮発性オブジェクトはいつアクセスされますか?</target>
        </trans-unit>
        <trans-unit id="175f1cb480e4ba069af35f3a29567db8d732de65" translate="yes" xml:space="preserve">
          <source>6.46. When is a Volatile Object Accessed?</source>
          <target state="translated">6.46.揮発性オブジェクトはいつアクセスされるか?</target>
        </trans-unit>
        <trans-unit id="05ccd71b18b11286a10a12fabac10877c562a580" translate="yes" xml:space="preserve">
          <source>6.47 How to Use Inline Assembly Language in C Code</source>
          <target state="translated">6.47 Cコードでインラインアセンブリ言語を使用する方法</target>
        </trans-unit>
        <trans-unit id="202330b297d0982388883e43b2fd26ade053e2a3" translate="yes" xml:space="preserve">
          <source>6.47. How to Use Inline Assembly Language in C Code</source>
          <target state="translated">6.47.Cコードでインラインアセンブリ言語を使用する方法</target>
        </trans-unit>
        <trans-unit id="dca3147b566d87b998b0049ad788b4c2225375a3" translate="yes" xml:space="preserve">
          <source>6.47.1 Basic Asm &amp;mdash; Assembler Instructions Without Operands</source>
          <target state="translated">6.47.1基本的なAsm &amp;mdash;オペランドなしのアセンブラー命令</target>
        </trans-unit>
        <trans-unit id="4d66e3069ee49848005a4d9acec5a89954b7f12e" translate="yes" xml:space="preserve">
          <source>6.47.1. Basic Asm</source>
          <target state="translated">6.47.1.基本的なアスム</target>
        </trans-unit>
        <trans-unit id="4da544320bcaf46b5c0ad2a9941eea55808e3da7" translate="yes" xml:space="preserve">
          <source>6.47.2 Extended Asm - Assembler Instructions with C Expression Operands</source>
          <target state="translated">6.47.2 拡張 Asm-C 式オペランドを使用したアセンブラ命令</target>
        </trans-unit>
        <trans-unit id="1d01528155a644f6f1b40a60a1cba0c91f9385a5" translate="yes" xml:space="preserve">
          <source>6.47.2. Extended Asm - Assembler Instructions with C Expression Operands</source>
          <target state="translated">6.47.2.拡張 Asm-C 式演算子を使用したアセンブラ命令</target>
        </trans-unit>
        <trans-unit id="effdf5c204d6fb9f1f09bf879bb16fecd71c03fe" translate="yes" xml:space="preserve">
          <source>6.47.2.1 Volatile</source>
          <target state="translated">6.47.2.1 揮発性</target>
        </trans-unit>
        <trans-unit id="a6f49e981ebf1e1ecc77ad234857cffc4c075b95" translate="yes" xml:space="preserve">
          <source>6.47.2.2 Assembler Template</source>
          <target state="translated">6.47.2.2 テンプレートの組み立て</target>
        </trans-unit>
        <trans-unit id="16f9e8dbda48abd15ca487d537564d6ea0cdb173" translate="yes" xml:space="preserve">
          <source>6.47.2.3 Output Operands</source>
          <target state="translated">6.47.2.3 出力オペランド</target>
        </trans-unit>
        <trans-unit id="d16a1eeaed7e6135314184f7bb2cb0b26ab1c4c6" translate="yes" xml:space="preserve">
          <source>6.47.2.4 Flag Output Operands</source>
          <target state="translated">6.47.2.4 フラグ出力オペランド</target>
        </trans-unit>
        <trans-unit id="859a91689ae1a3de6c65dc9030634f62fc6c2c5c" translate="yes" xml:space="preserve">
          <source>6.47.2.5 Input Operands</source>
          <target state="translated">6.47.2.5 入力オペランド</target>
        </trans-unit>
        <trans-unit id="54bd94c21ec484a15c4d608c0f4452f7ab1babbc" translate="yes" xml:space="preserve">
          <source>6.47.2.6 Clobbers and Scratch Registers</source>
          <target state="translated">6.47.2.6 クローバーとスクラッチレジスター</target>
        </trans-unit>
        <trans-unit id="31b97381f38c8ad3355af772c6ea137ccb8381f0" translate="yes" xml:space="preserve">
          <source>6.47.2.7 Goto Labels</source>
          <target state="translated">6.47.2.7 後藤ラベル</target>
        </trans-unit>
        <trans-unit id="56f56e3cadb75407d6962099774755c7b9d59cdc" translate="yes" xml:space="preserve">
          <source>6.47.2.8 x86 Operand Modifiers</source>
          <target state="translated">6.47.2.8 x86 オペランド修飾子</target>
        </trans-unit>
        <trans-unit id="2ffd3c9327058976b51943937462ecf57f992eeb" translate="yes" xml:space="preserve">
          <source>6.47.2.9 x86 Floating-Point &lt;code&gt;asm&lt;/code&gt; Operands</source>
          <target state="translated">6.47.2.9 x86浮動小数点 &lt;code&gt;asm&lt;/code&gt; オペランド</target>
        </trans-unit>
        <trans-unit id="5f6023c8f3b1e7ef2de8fde67d5483afeafa983b" translate="yes" xml:space="preserve">
          <source>6.47.2.9 x86 Floating-Point asm Operands</source>
          <target state="translated">6.47.2.9 x86浮動小数点asm演算子</target>
        </trans-unit>
        <trans-unit id="b6789e576d35dca5cd4fcb419eddcaab90f8bdd3" translate="yes" xml:space="preserve">
          <source>6.47.3 Constraints for &lt;code&gt;asm&lt;/code&gt; Operands</source>
          <target state="translated">6.47.3 &lt;code&gt;asm&lt;/code&gt; オペランドの制約</target>
        </trans-unit>
        <trans-unit id="141b854122eb8a71fd531f345019f7c8a69bc432" translate="yes" xml:space="preserve">
          <source>6.47.3 Constraints for asm Operands</source>
          <target state="translated">6.47.3 asm オペランドの制約</target>
        </trans-unit>
        <trans-unit id="b7412440753d329fccdfbb80f3bbe9eb99a1c43f" translate="yes" xml:space="preserve">
          <source>6.47.3. Constraints for asm Operands</source>
          <target state="translated">6.47.3.asm オペランドの制約</target>
        </trans-unit>
        <trans-unit id="86c63e3b2419d04024180a5732f6bbad55fabcf8" translate="yes" xml:space="preserve">
          <source>6.47.3.1 Simple Constraints</source>
          <target state="translated">6.47.3.1 単純な制約</target>
        </trans-unit>
        <trans-unit id="56afdcdaefb9a74a260afc30a57597bebd68596d" translate="yes" xml:space="preserve">
          <source>6.47.3.1. Simple Constraints</source>
          <target state="translated">6.47.3.1.単純な制約</target>
        </trans-unit>
        <trans-unit id="638706af414e0363890e5c88412134e0d871021f" translate="yes" xml:space="preserve">
          <source>6.47.3.2 Multiple Alternative Constraints</source>
          <target state="translated">6.47.3.2 複数の代替制約</target>
        </trans-unit>
        <trans-unit id="47b262a6aaeea2b8548dfa637765ab1a106ddcd3" translate="yes" xml:space="preserve">
          <source>6.47.3.2. Multiple Alternative Constraints</source>
          <target state="translated">6.47.3.2.複数の代替制約</target>
        </trans-unit>
        <trans-unit id="e72301c9d60b12d4fed26dc9f67dc437ac9bf0a0" translate="yes" xml:space="preserve">
          <source>6.47.3.3 Constraint Modifier Characters</source>
          <target state="translated">6.47.3.3 制約修飾文字</target>
        </trans-unit>
        <trans-unit id="34bfb6a5b6f3d73614fd3bc831a3592ab13d36c6" translate="yes" xml:space="preserve">
          <source>6.47.3.3. Constraint Modifier Characters</source>
          <target state="translated">6.47.3.3.制約修飾文字</target>
        </trans-unit>
        <trans-unit id="c290c147ad27805bcc1d2275fe9ec3ab067174d5" translate="yes" xml:space="preserve">
          <source>6.47.3.4 Constraints for Particular Machines</source>
          <target state="translated">6.47.3.4 特定機械の制約</target>
        </trans-unit>
        <trans-unit id="fde64f483aed0eec28d86deb83e16a93c095a018" translate="yes" xml:space="preserve">
          <source>6.47.3.4. Constraints for Particular Machines</source>
          <target state="translated">6.47.3.4.特定の機械に対する制約</target>
        </trans-unit>
        <trans-unit id="63eaba5c221e7aca893f1f7a48a9333c8f6c67fb" translate="yes" xml:space="preserve">
          <source>6.47.4 Controlling Names Used in Assembler Code</source>
          <target state="translated">6.47.4 アセンブラコードで使用される名前の制御</target>
        </trans-unit>
        <trans-unit id="91468424e41ad03805dbe07ab554c805f9349479" translate="yes" xml:space="preserve">
          <source>6.47.4. Controlling Names Used in Assembler Code</source>
          <target state="translated">6.47.4.アセンブラコードで使用される名前の制御</target>
        </trans-unit>
        <trans-unit id="6f00b7caa627ca4641f17c5c09220ef9d07642ee" translate="yes" xml:space="preserve">
          <source>6.47.5 Variables in Specified Registers</source>
          <target state="translated">6.47.5 指定レジスタの変数</target>
        </trans-unit>
        <trans-unit id="47e367027c5501f1351a6a1da2267e5d3fe49236" translate="yes" xml:space="preserve">
          <source>6.47.5. Variables in Specified Registers</source>
          <target state="translated">6.47.5.指定レジスタの変数</target>
        </trans-unit>
        <trans-unit id="56efeed941144eae12a75823e703751b01daf1e1" translate="yes" xml:space="preserve">
          <source>6.47.5.1 Defining Global Register Variables</source>
          <target state="translated">6.47.5.1 グローバルレジスタ変数の定義</target>
        </trans-unit>
        <trans-unit id="32709dc38dddfe5b8f6aab6328025c6f37a9d317" translate="yes" xml:space="preserve">
          <source>6.47.5.1. Defining Global Register Variables</source>
          <target state="translated">6.47.5.1.グローバルレジスタ変数の定義</target>
        </trans-unit>
        <trans-unit id="550a4fafa2645d1e7b867d4a7402543d2fc4fc79" translate="yes" xml:space="preserve">
          <source>6.47.5.2 Specifying Registers for Local Variables</source>
          <target state="translated">6.47.5.2 ローカル変数のレジスタの指定</target>
        </trans-unit>
        <trans-unit id="edcc4024c864ce496bcbe4e280dd3f45e605f9c2" translate="yes" xml:space="preserve">
          <source>6.47.5.2. Specifying Registers for Local Variables</source>
          <target state="translated">6.47.5.2.ローカル変数のレジスタの指定</target>
        </trans-unit>
        <trans-unit id="0d30ee42309acc06a033b3a2d2f8b19fc5ca6558" translate="yes" xml:space="preserve">
          <source>6.47.6 Size of an &lt;code&gt;asm&lt;/code&gt;</source>
          <target state="translated">6.47.6 &lt;code&gt;asm&lt;/code&gt; のサイズ</target>
        </trans-unit>
        <trans-unit id="88caa26334571426622b96d4f61c423e663e152a" translate="yes" xml:space="preserve">
          <source>6.47.6 Size of an asm</source>
          <target state="translated">6.47.6 asmのサイズ</target>
        </trans-unit>
        <trans-unit id="9084acc6ca4fcf33b14439c51bdfaf100496d77f" translate="yes" xml:space="preserve">
          <source>6.47.6. Size of an asm</source>
          <target state="translated">6.47.6.アズムのサイズ</target>
        </trans-unit>
        <trans-unit id="09b13f624b82532ce40be4ecd3492662cfc702ce" translate="yes" xml:space="preserve">
          <source>6.48 Alternate Keywords</source>
          <target state="translated">6.48 代替キーワード</target>
        </trans-unit>
        <trans-unit id="71b2b380d4019d22eb6b9877b123488ec5e5d0df" translate="yes" xml:space="preserve">
          <source>6.48. Alternate Keywords</source>
          <target state="translated">6.48.代替キーワード</target>
        </trans-unit>
        <trans-unit id="345369dab5ee0e9f7b8d6c6a595654585b6bca1b" translate="yes" xml:space="preserve">
          <source>6.49 Incomplete &lt;code&gt;enum&lt;/code&gt; Types</source>
          <target state="translated">6.49不完全な &lt;code&gt;enum&lt;/code&gt; 型</target>
        </trans-unit>
        <trans-unit id="a002122ebe8c92c75c75ddfd20c258bd914ea567" translate="yes" xml:space="preserve">
          <source>6.49 Incomplete enum Types</source>
          <target state="translated">6.49 不完全な列挙型</target>
        </trans-unit>
        <trans-unit id="2e42808e482f20ed8d7ddbf98e340743e542ba45" translate="yes" xml:space="preserve">
          <source>6.49. Incomplete enum Types</source>
          <target state="translated">6.49.不完全な列挙型</target>
        </trans-unit>
        <trans-unit id="185561a12382964544efe117ffdd5270926600dc" translate="yes" xml:space="preserve">
          <source>6.5 Nonlocal Gotos</source>
          <target state="translated">6.5 非ローカルゴト</target>
        </trans-unit>
        <trans-unit id="c1c013e4964b407b8fa1c7d3d1548f6f3dbf8937" translate="yes" xml:space="preserve">
          <source>6.5. Nonlocal Gotos</source>
          <target state="translated">6.5.非局所的なゴトー</target>
        </trans-unit>
        <trans-unit id="801091b702ff657cddb73dd2b90dcd224dbd0234" translate="yes" xml:space="preserve">
          <source>6.50 Function Names as Strings</source>
          <target state="translated">6.50 文字列としての関数名</target>
        </trans-unit>
        <trans-unit id="e4113dc5b9a4acf0a70a90067c887004776dbf88" translate="yes" xml:space="preserve">
          <source>6.50. Function Names as Strings</source>
          <target state="translated">6.50.文字列としての関数名</target>
        </trans-unit>
        <trans-unit id="1d4e9dd7d6aa8c332a01daabed739895b4ded0bb" translate="yes" xml:space="preserve">
          <source>6.51 Getting the Return or Frame Address of a Function</source>
          <target state="translated">6.51 関数のリターンアドレスまたはフレームアドレスの取得</target>
        </trans-unit>
        <trans-unit id="f4dcc8a27cd6b38babb319669e64e053153f25d6" translate="yes" xml:space="preserve">
          <source>6.51. Getting the Return or Frame Address of a Function</source>
          <target state="translated">6.51.関数のリターンアドレスまたはフレームアドレスの取得</target>
        </trans-unit>
        <trans-unit id="214856ff86fa02efe3d4e47f5834de994d9b7e18" translate="yes" xml:space="preserve">
          <source>6.52 Using Vector Instructions through Built-in Functions</source>
          <target state="translated">6.52 内蔵関数によるベクトル命令の使用</target>
        </trans-unit>
        <trans-unit id="603264e59377f04d96df2c6dbd7362a8dfcbd808" translate="yes" xml:space="preserve">
          <source>6.52. Using Vector Instructions through Built-in Functions</source>
          <target state="translated">6.52.内蔵関数によるベクトル命令の使用</target>
        </trans-unit>
        <trans-unit id="214b4f8ffc755c47a14b045c61a3183b5f5d0720" translate="yes" xml:space="preserve">
          <source>6.53 Support for &lt;code&gt;offsetof&lt;/code&gt;</source>
          <target state="translated">6.53 &lt;code&gt;offsetof&lt;/code&gt; のサポート</target>
        </trans-unit>
        <trans-unit id="db7076d3eb07d3c5a4d7de4c8ca4b175087468cf" translate="yes" xml:space="preserve">
          <source>6.53 Support for offsetof</source>
          <target state="translated">6.53 オフセットへの対応</target>
        </trans-unit>
        <trans-unit id="7471639854b7d8fb14d37c9855cda58143dce970" translate="yes" xml:space="preserve">
          <source>6.53. Support for offsetof</source>
          <target state="translated">6.53.オフセットのサポート</target>
        </trans-unit>
        <trans-unit id="ff41ddb93e31c478416730d70ec10307f9351b54" translate="yes" xml:space="preserve">
          <source>6.54 Legacy &lt;code&gt;__sync&lt;/code&gt; Built-in Functions for Atomic Memory Access</source>
          <target state="translated">6.54 アトミックメモリアクセス用のレガシー &lt;code&gt;__sync&lt;/code&gt; 組み込み関数</target>
        </trans-unit>
        <trans-unit id="24e33939a488bf3218dbf722c627bbd7d132edcd" translate="yes" xml:space="preserve">
          <source>6.54 Legacy __sync Built-in Functions for Atomic Memory Access</source>
          <target state="translated">6.54 アトミックメモリアクセスのためのレガシー__sync組み込み関数</target>
        </trans-unit>
        <trans-unit id="f824076d540c0577874b2d0359839c35ce401eab" translate="yes" xml:space="preserve">
          <source>6.54. Legacy __sync Built-in Functions for Atomic Memory Access</source>
          <target state="translated">6.54.アトミックメモリアクセスのためのレガシー__sync組み込み関数</target>
        </trans-unit>
        <trans-unit id="9f8afa5f264d0e65913a5798714b25443075a463" translate="yes" xml:space="preserve">
          <source>6.55 Built-in Functions for Memory Model Aware Atomic Operations</source>
          <target state="translated">6.55 メモリモデル・アウェア・アトミック演算のための組込み関数</target>
        </trans-unit>
        <trans-unit id="e08c4c165ecb914d7a24174056835039f893bc11" translate="yes" xml:space="preserve">
          <source>6.55. Built-in Functions for Memory Model Aware Atomic Operations</source>
          <target state="translated">6.55.メモリモデルを意識した原子操作のための組込み関数</target>
        </trans-unit>
        <trans-unit id="4f45247d0a9e0192d5e4b5f8c11a2da2cf49159f" translate="yes" xml:space="preserve">
          <source>6.56 Built-in Functions to Perform Arithmetic with Overflow Checking</source>
          <target state="translated">6.56 オーバーフローチェック付き算術を行うための組込み関数</target>
        </trans-unit>
        <trans-unit id="662c738a29d29b755dee4bc348e5987750b46c5d" translate="yes" xml:space="preserve">
          <source>6.56. Built-in Functions to Perform Arithmetic with Overflow Checking</source>
          <target state="translated">6.56.オーバーフローチェック付き算術を行うための組込み関数</target>
        </trans-unit>
        <trans-unit id="526328450361d539aa87391cad671a416de3793a" translate="yes" xml:space="preserve">
          <source>6.57 x86-Specific Memory Model Extensions for Transactional Memory</source>
          <target state="translated">6.57 トランザクションメモリのためのx86特有のメモリモデル拡張</target>
        </trans-unit>
        <trans-unit id="9ebefe9541d20acc83cc30af7d65b673ddfbed51" translate="yes" xml:space="preserve">
          <source>6.57. x86-Specific Memory Model Extensions for Transactional Memory</source>
          <target state="translated">トランザクションメモリのためのx86固有のメモリモデル拡張</target>
        </trans-unit>
        <trans-unit id="39931802cf6e358f2ec7b3b1ddf9d22a17857d72" translate="yes" xml:space="preserve">
          <source>6.58 Object Size Checking Built-in Functions</source>
          <target state="translated">6.58 オブジェクトサイズチェック組み込み関数</target>
        </trans-unit>
        <trans-unit id="4d88b960f9fd3969b9f1b4c13aef2249e46abbd6" translate="yes" xml:space="preserve">
          <source>6.58. Object Size Checking Built-in Functions</source>
          <target state="translated">6.58.オブジェクトサイズ検査組み込み関数</target>
        </trans-unit>
        <trans-unit id="4e1cfbf53d05c8121d6a6df1d260c69e4d3b6d60" translate="yes" xml:space="preserve">
          <source>6.59 Other Built-in Functions Provided by GCC</source>
          <target state="translated">6.59 その他 GCC が提供する内蔵機能</target>
        </trans-unit>
        <trans-unit id="dc4a1fd5f748e815e6988701488dd31f02fd4b6d" translate="yes" xml:space="preserve">
          <source>6.59. Other Built-in Functions Provided by GCC</source>
          <target state="translated">6.59.GCCが提供するその他の組込み関数</target>
        </trans-unit>
        <trans-unit id="e668f7cf732d77b7eea2f01d64bca85598772956" translate="yes" xml:space="preserve">
          <source>6.6 Constructing Function Calls</source>
          <target state="translated">6.6 関数呼び出しの構築</target>
        </trans-unit>
        <trans-unit id="8c2ce64bfccc88de89d7b29f3582f8c153da3c1f" translate="yes" xml:space="preserve">
          <source>6.6. Constructing Function Calls</source>
          <target state="translated">6.6.関数呼び出しの構築</target>
        </trans-unit>
        <trans-unit id="12d8c6de8daf9da9c9588eb88909ae5e11432fb6" translate="yes" xml:space="preserve">
          <source>6.60 Built-in Functions Specific to Particular Target Machines</source>
          <target state="translated">6.60 特定対象機に特化した内蔵機能</target>
        </trans-unit>
        <trans-unit id="646e50dfb9b2fece86987f663922a4749c726723" translate="yes" xml:space="preserve">
          <source>6.60. Built-in Functions Specific to Particular Target Machines</source>
          <target state="translated">6.60.6.60.特定対象機に固有の内蔵機能</target>
        </trans-unit>
        <trans-unit id="420f8620ac63c02b70b3c9858727754d5623232d" translate="yes" xml:space="preserve">
          <source>6.60.1 AArch64 Built-in Functions</source>
          <target state="translated">6.60.1 AArch64 の組み込み機能</target>
        </trans-unit>
        <trans-unit id="15b3dfa7a406b40657499fa26381bb5c8cc7fa30" translate="yes" xml:space="preserve">
          <source>6.60.1. AArch64 Built-in Functions</source>
          <target state="translated">6.60.1.AArch64 の組み込み関数</target>
        </trans-unit>
        <trans-unit id="a43cb54c6661c6de2937ea68120d20814e380a5a" translate="yes" xml:space="preserve">
          <source>6.60.10 AVR Built-in Functions</source>
          <target state="translated">6.60.10 AVR内蔵機能</target>
        </trans-unit>
        <trans-unit id="7d401a47687ca1342997479734c64f374ed2580e" translate="yes" xml:space="preserve">
          <source>6.60.10. AVR Built-in Functions</source>
          <target state="translated">6.60.10.AVR 内蔵機能</target>
        </trans-unit>
        <trans-unit id="14fc74fd8e4987069161ef45572071f063b68daa" translate="yes" xml:space="preserve">
          <source>6.60.11 Blackfin Built-in Functions</source>
          <target state="translated">6.60.11 ブラックフィン内蔵機能</target>
        </trans-unit>
        <trans-unit id="249dd3da03ade25e85ed3f170f773c314e775f7e" translate="yes" xml:space="preserve">
          <source>6.60.11. Blackfin Built-in Functions</source>
          <target state="translated">6.60.11.くろまぐろ内蔵機能</target>
        </trans-unit>
        <trans-unit id="b1a8845c4da6bc2dff9b9f55234dd6d005ddf9c8" translate="yes" xml:space="preserve">
          <source>6.60.12 FR-V Built-in Functions</source>
          <target state="translated">6.60.12 FR-V 内蔵機能</target>
        </trans-unit>
        <trans-unit id="424b304ff5723e9268cdbe2a63e527380c37c427" translate="yes" xml:space="preserve">
          <source>6.60.12. FR-V Built-in Functions</source>
          <target state="translated">6.60.12.FR-V 内蔵機能</target>
        </trans-unit>
        <trans-unit id="02f9de86c8b6787f37719f848ce272c63ee62b6d" translate="yes" xml:space="preserve">
          <source>6.60.12.1 Argument Types</source>
          <target state="translated">6.60.12.1 引数タイプ</target>
        </trans-unit>
        <trans-unit id="66e775b5075e63b9ce0948170b6c65ea5f16d00b" translate="yes" xml:space="preserve">
          <source>6.60.12.1. Argument Types</source>
          <target state="translated">6.60.12.1.引数タイプ</target>
        </trans-unit>
        <trans-unit id="b8361074f41acc851707321969641bc969f71706" translate="yes" xml:space="preserve">
          <source>6.60.12.2 Directly-Mapped Integer Functions</source>
          <target state="translated">6.60.12.2 直接マップされた整数関数</target>
        </trans-unit>
        <trans-unit id="c384e8bf2c4e2c3956c90323ed6e0d05001cc76f" translate="yes" xml:space="preserve">
          <source>6.60.12.2. Directly-Mapped Integer Functions</source>
          <target state="translated">6.60.12.2.直接マップされた整数関数</target>
        </trans-unit>
        <trans-unit id="feaec6cafdffccf1202e668f4596207eeb9edeb8" translate="yes" xml:space="preserve">
          <source>6.60.12.3 Directly-Mapped Media Functions</source>
          <target state="translated">6.60.12.3 直接マッピングされたメディア機能</target>
        </trans-unit>
        <trans-unit id="a2fe7a4aedda25ea1b89d377484e06f7cb6cd2a4" translate="yes" xml:space="preserve">
          <source>6.60.12.3. Directly-Mapped Media Functions</source>
          <target state="translated">6.60.12.3.直接マップされたメディア機能</target>
        </trans-unit>
        <trans-unit id="27f8a01b7b27c75d52637c42eff35d844bbf6402" translate="yes" xml:space="preserve">
          <source>6.60.12.4 Raw Read/Write Functions</source>
          <target state="translated">6.60.12.4 生の読み書き機能</target>
        </trans-unit>
        <trans-unit id="14ab6d4d011e4055275bd67cc27cab875b63bce8" translate="yes" xml:space="preserve">
          <source>6.60.12.4. Raw Read/Write Functions</source>
          <target state="translated">6.60.12.4.生の読み書き機能</target>
        </trans-unit>
        <trans-unit id="419bbaaf508811d7de7acc137d73c198eb5af5fb" translate="yes" xml:space="preserve">
          <source>6.60.12.5 Other Built-in Functions</source>
          <target state="translated">6.60.12.5 その他の内蔵機能</target>
        </trans-unit>
        <trans-unit id="8a4d21dbb136076b5cdd293901ed75d9dbd245ac" translate="yes" xml:space="preserve">
          <source>6.60.12.5. Other Built-in Functions</source>
          <target state="translated">6.60.12.5.その他の組み込み機能</target>
        </trans-unit>
        <trans-unit id="289bd0df1dfa2503e4531129ffcaa1cd263e7dc1" translate="yes" xml:space="preserve">
          <source>6.60.13 MIPS DSP Built-in Functions</source>
          <target state="translated">6.60.13 MIPS DSP 内蔵機能</target>
        </trans-unit>
        <trans-unit id="54344c796e546ebe2fd7d250bcd468b733679467" translate="yes" xml:space="preserve">
          <source>6.60.13. MIPS DSP Built-in Functions</source>
          <target state="translated">6.60.13.MIPS DSP 内蔵機能</target>
        </trans-unit>
        <trans-unit id="59d467622b23b77f2c06268d64c5f8961422cfe3" translate="yes" xml:space="preserve">
          <source>6.60.14 MIPS Paired-Single Support</source>
          <target state="translated">6.60.14 MIPS ペアリングシングルサポート</target>
        </trans-unit>
        <trans-unit id="dc68d439ea3f36783a66e14442342b77c1b51ddf" translate="yes" xml:space="preserve">
          <source>6.60.14. MIPS Paired-Single Support</source>
          <target state="translated">6.60.14.MIPS ペアリングシングルサポート</target>
        </trans-unit>
        <trans-unit id="941c357f07ef7cf635e289e927c3e469f90acb25" translate="yes" xml:space="preserve">
          <source>6.60.15 MIPS Loongson Built-in Functions</source>
          <target state="translated">6.60.15 MIPS Loongson 内蔵機能</target>
        </trans-unit>
        <trans-unit id="cbcab85b8b29c841627c6efc6dd87144685bfcdb" translate="yes" xml:space="preserve">
          <source>6.60.15. MIPS Loongson Built-in Functions</source>
          <target state="translated">6.60.15.MIPS Loongson 内蔵機能</target>
        </trans-unit>
        <trans-unit id="f52e7f02237a9e6fc2b909bf70a909ebfcfbb661" translate="yes" xml:space="preserve">
          <source>6.60.15.1 Paired-Single Arithmetic</source>
          <target state="translated">6.60.15.1 ペアシングル算術</target>
        </trans-unit>
        <trans-unit id="ee1268d807512f5e9a882e50d3c52914c4e58c8b" translate="yes" xml:space="preserve">
          <source>6.60.15.1. Paired-Single Arithmetic</source>
          <target state="translated">6.60.15.1.ペアシングル算術</target>
        </trans-unit>
        <trans-unit id="f3376770a6496b3c2345aff0d5f9f9d4e4da68fe" translate="yes" xml:space="preserve">
          <source>6.60.15.2 Paired-Single Built-in Functions</source>
          <target state="translated">6.60.15.2 ペアシングル内蔵機能</target>
        </trans-unit>
        <trans-unit id="bfb6356fa21cc7b9aa2dee2d1e880cbb719f4082" translate="yes" xml:space="preserve">
          <source>6.60.15.2. Paired-Single Built-in Functions</source>
          <target state="translated">6.60.15.2.ペアリングされた単一の組み込み機能</target>
        </trans-unit>
        <trans-unit id="368b6f2af09ca04c90e2b5efdd369c819795080d" translate="yes" xml:space="preserve">
          <source>6.60.15.3 MIPS-3D Built-in Functions</source>
          <target state="translated">6.60.15.3 MIPS-3D 内蔵機能</target>
        </trans-unit>
        <trans-unit id="6bd7085ea2a602cd31543a6f86de96c264c10485" translate="yes" xml:space="preserve">
          <source>6.60.15.3. MIPS-3D Built-in Functions</source>
          <target state="translated">6.60.15.3.MIPS-3D 内蔵機能</target>
        </trans-unit>
        <trans-unit id="41e2e540bfc8a7de0295dee59b82985ef916ecb5" translate="yes" xml:space="preserve">
          <source>6.60.16 MIPS SIMD Architecture (MSA) Support</source>
          <target state="translated">6.60.16 MIPS SIMDアーキテクチャ(MSA)のサポート</target>
        </trans-unit>
        <trans-unit id="eaecba1ea5f33312e6715e73f839d2a9980ee993" translate="yes" xml:space="preserve">
          <source>6.60.16. MIPS SIMD Architecture (MSA) Support</source>
          <target state="translated">6.60.16.MIPS SIMD アーキテクチャ (MSA)サポート</target>
        </trans-unit>
        <trans-unit id="d7005c4ec6c19d51257988f510b5caa1cf33738c" translate="yes" xml:space="preserve">
          <source>6.60.16.1 MIPS SIMD Architecture Built-in Functions</source>
          <target state="translated">6.60.16.1 MIPS SIMDアーキテクチャ内蔵機能</target>
        </trans-unit>
        <trans-unit id="06f366e3349333fad754fd9c01947748e63f5857" translate="yes" xml:space="preserve">
          <source>6.60.16.1. MIPS SIMD Architecture Built-in Functions</source>
          <target state="translated">6.60.16.1.MIPS SIMD アーキテクチャー 組込み機能</target>
        </trans-unit>
        <trans-unit id="2d72d92d2664549b77771eb8e6ff672b4b6d65c2" translate="yes" xml:space="preserve">
          <source>6.60.17 Other MIPS Built-in Functions</source>
          <target state="translated">6.60.17 その他のMIPS内蔵機能</target>
        </trans-unit>
        <trans-unit id="f9be4de04739aec55e5b253c0c26c8f679d3bd4b" translate="yes" xml:space="preserve">
          <source>6.60.17. Other MIPS Built-in Functions</source>
          <target state="translated">6.60.17.その他のMIPS内蔵機能</target>
        </trans-unit>
        <trans-unit id="1e53aebd9eab90c9ef1c9c116d3c9dbc596cbef4" translate="yes" xml:space="preserve">
          <source>6.60.18 MSP430 Built-in Functions</source>
          <target state="translated">6.60.18 MSP430内蔵機能</target>
        </trans-unit>
        <trans-unit id="cf589eed9ed26a608f59a5e76d53e97a0a2136f6" translate="yes" xml:space="preserve">
          <source>6.60.18. MSP430 Built-in Functions</source>
          <target state="translated">6.60.18.MSP430内蔵機能</target>
        </trans-unit>
        <trans-unit id="f185f182ae0fe2d2d53988f87c644a7aa4e82007" translate="yes" xml:space="preserve">
          <source>6.60.19 NDS32 Built-in Functions</source>
          <target state="translated">6.60.19 NDS32 内蔵機能</target>
        </trans-unit>
        <trans-unit id="5dde54915af64ddcdb3a2307985acd0c0086f754" translate="yes" xml:space="preserve">
          <source>6.60.19. NDS32 Built-in Functions</source>
          <target state="translated">6.60.19.NDS32 内蔵機能</target>
        </trans-unit>
        <trans-unit id="26f4c2f65815639e1ede5b163dd505e18c0dbd3d" translate="yes" xml:space="preserve">
          <source>6.60.2 Alpha Built-in Functions</source>
          <target state="translated">6.60.2 アルファ内蔵機能</target>
        </trans-unit>
        <trans-unit id="d40720f64cb17e017e3cfb24f9e424a51a67d5bd" translate="yes" xml:space="preserve">
          <source>6.60.2. Alpha Built-in Functions</source>
          <target state="translated">6.60.2.アルファ組み込み機能</target>
        </trans-unit>
        <trans-unit id="e266ed549743a3feb13d55d93973fc64482f54b6" translate="yes" xml:space="preserve">
          <source>6.60.20 picoChip Built-in Functions</source>
          <target state="translated">6.60.20 picoChip内蔵機能</target>
        </trans-unit>
        <trans-unit id="90149dcf5f6fbc90e2fcb5aa3d2325589cf0b24e" translate="yes" xml:space="preserve">
          <source>6.60.20. picoChip Built-in Functions</source>
          <target state="translated">picoChipの内蔵機能</target>
        </trans-unit>
        <trans-unit id="1301c139257d75a0a60d4193468fc4eda71ff490" translate="yes" xml:space="preserve">
          <source>6.60.21 Basic PowerPC Built-in Functions</source>
          <target state="translated">6.60.21 基本的なPowerPC内蔵機能</target>
        </trans-unit>
        <trans-unit id="336649ca3da98825d01b6ad0807bbb123a2ed541" translate="yes" xml:space="preserve">
          <source>6.60.21. Basic PowerPC Built-in Functions</source>
          <target state="translated">6.60.21.基本的なPowerPC内蔵機能</target>
        </trans-unit>
        <trans-unit id="9472a4f69a0d3b0e13a972f6578ca73a8e43a1cc" translate="yes" xml:space="preserve">
          <source>6.60.21.1 Basic PowerPC Built-in Functions Available on all Configurations</source>
          <target state="translated">6.60.21.1 すべてのコンフィギュレーションで利用可能な基本的なPowerPC内蔵機能</target>
        </trans-unit>
        <trans-unit id="ff3a5592456652a592234349f99e3d520d95f9b2" translate="yes" xml:space="preserve">
          <source>6.60.21.1. Basic PowerPC Built-in Functions Available on all Configurations</source>
          <target state="translated">6.60.21.1.すべての構成で利用可能な基本的なPowerPC組み込み機能</target>
        </trans-unit>
        <trans-unit id="e38b2b882ad834b1d615d44cd9a69e36026a1112" translate="yes" xml:space="preserve">
          <source>6.60.21.2 Basic PowerPC Built-in Functions Available on ISA 2.05</source>
          <target state="translated">6.60.21.2 ISA 2.05で利用可能な基本的なPowerPC内蔵機能</target>
        </trans-unit>
        <trans-unit id="bddef17583f9e0babf85e3c7ae383ea5a1417070" translate="yes" xml:space="preserve">
          <source>6.60.21.2. Basic PowerPC Built-in Functions Available on ISA 2.05</source>
          <target state="translated">6.60.21.2.ISA 2.05で利用可能な基本的なPowerPC内蔵機能</target>
        </trans-unit>
        <trans-unit id="8648c355a6eefaa9ae0d71457488f5cb19117a1c" translate="yes" xml:space="preserve">
          <source>6.60.21.3 Basic PowerPC Built-in Functions Available on ISA 2.06</source>
          <target state="translated">6.60.21.3 ISA 2.06で利用可能な基本的なPowerPC内蔵機能</target>
        </trans-unit>
        <trans-unit id="328f6bfe41531bba908b1a467f64581f5c9ab3a2" translate="yes" xml:space="preserve">
          <source>6.60.21.3. Basic PowerPC Built-in Functions Available on ISA 2.06</source>
          <target state="translated">6.60.21.3.ISA 2.06で利用可能な基本的なPowerPC内蔵機能</target>
        </trans-unit>
        <trans-unit id="2e400fc69bdf29a645324c8752f8c2622f549831" translate="yes" xml:space="preserve">
          <source>6.60.21.4 Basic PowerPC Built-in Functions Available on ISA 2.07</source>
          <target state="translated">6.60.21.4 ISA 2.07で利用可能な基本的なPowerPC内蔵機能</target>
        </trans-unit>
        <trans-unit id="fb8b283b62c461dc758f25dfb996b0afadd1b1e9" translate="yes" xml:space="preserve">
          <source>6.60.21.4. Basic PowerPC Built-in Functions Available on ISA 2.07</source>
          <target state="translated">6.60.21.4.ISA 2.07で利用可能な基本的なPowerPC内蔵機能</target>
        </trans-unit>
        <trans-unit id="ed68b02fb12f1990f72abb60f05330fa05245b9c" translate="yes" xml:space="preserve">
          <source>6.60.21.5 Basic PowerPC Built-in Functions Available on ISA 3.0</source>
          <target state="translated">6.60.21.5 ISA 3.0で利用可能な基本的なPowerPC内蔵機能</target>
        </trans-unit>
        <trans-unit id="9775f089cab3a6c74c41648fea9265ec0bf82fe6" translate="yes" xml:space="preserve">
          <source>6.60.21.5. Basic PowerPC Built-in Functions Available on ISA 3.0</source>
          <target state="translated">6.60.21.5.ISA 3.0で利用可能な基本的なPowerPC内蔵機能</target>
        </trans-unit>
        <trans-unit id="e3fc89b61014fb23a7fad539c04ea078cc14b5c4" translate="yes" xml:space="preserve">
          <source>6.60.22 PowerPC AltiVec/VSX Built-in Functions</source>
          <target state="translated">6.60.22 PowerPC AltiVec/VSX 内蔵機能</target>
        </trans-unit>
        <trans-unit id="1170895b039eec104d660fb1d5114c0d67584292" translate="yes" xml:space="preserve">
          <source>6.60.22. PowerPC AltiVec/VSX Built-in Functions</source>
          <target state="translated">6.60.22.PowerPC AltiVec/VSX 内蔵機能</target>
        </trans-unit>
        <trans-unit id="4099c2081f447797160a050a1ad3c9792675c328" translate="yes" xml:space="preserve">
          <source>6.60.22.1 PowerPC AltiVec Built-in Functions on ISA 2.05</source>
          <target state="translated">6.60.22.1 ISA 2.05上のPowerPC AltiVec内蔵機能</target>
        </trans-unit>
        <trans-unit id="d7158117ef3552c9ee6b8d70f93783a98bd22432" translate="yes" xml:space="preserve">
          <source>6.60.22.1. PowerPC AltiVec Built-in Functions on ISA 2.05</source>
          <target state="translated">6.60.22.1.ISA 2.05上のPowerPC AltiVec組み込み機能</target>
        </trans-unit>
        <trans-unit id="5e845b437dab869d187e8860c39fc5103801464e" translate="yes" xml:space="preserve">
          <source>6.60.22.2 PowerPC AltiVec Built-in Functions Available on ISA 2.06</source>
          <target state="translated">6.60.22.2 ISA 2.06で利用可能なPowerPC AltiVec内蔵機能</target>
        </trans-unit>
        <trans-unit id="ccb37ccf21aacb0249db3d36cc53b40ad3209fa9" translate="yes" xml:space="preserve">
          <source>6.60.22.2. PowerPC AltiVec Built-in Functions Available on ISA 2.06</source>
          <target state="translated">6.60.22.2.ISA 2.06で利用可能なPowerPC AltiVec組み込み機能</target>
        </trans-unit>
        <trans-unit id="1f7f8ed8478400b77e5fc80cac1c1f55cfc87cc1" translate="yes" xml:space="preserve">
          <source>6.60.22.3 PowerPC AltiVec Built-in Functions Available on ISA 2.07</source>
          <target state="translated">6.60.22.3 ISA 2.07で利用可能なPowerPC AltiVec内蔵機能</target>
        </trans-unit>
        <trans-unit id="cdda5c062c1474776c8dd34526ec266058858a37" translate="yes" xml:space="preserve">
          <source>6.60.22.3. PowerPC AltiVec Built-in Functions Available on ISA 2.07</source>
          <target state="translated">6.60.22.3.ISA 2.07で利用可能なPowerPC AltiVec組み込み機能</target>
        </trans-unit>
        <trans-unit id="c3282d98a0b87088c67704172055da044dd4fe82" translate="yes" xml:space="preserve">
          <source>6.60.22.4 PowerPC AltiVec Built-in Functions Available on ISA 3.0</source>
          <target state="translated">6.60.22.4 ISA 3.0で利用可能なPowerPC AltiVec内蔵機能</target>
        </trans-unit>
        <trans-unit id="dc1fedb2bfefaa9c2d0c5b119f2ce20982ded1c6" translate="yes" xml:space="preserve">
          <source>6.60.22.4. PowerPC AltiVec Built-in Functions Available on ISA 3.0</source>
          <target state="translated">6.60.22.4.ISA 3.0で利用可能なPowerPC AltiVec組み込み機能</target>
        </trans-unit>
        <trans-unit id="0502f8d6f41a50d9b24f1f41987d7968ccee7e1d" translate="yes" xml:space="preserve">
          <source>6.60.23 PowerPC Hardware Transactional Memory Built-in Functions</source>
          <target state="translated">6.60.23 PowerPCハードウェア・トランザクション・メモリ内蔵機能</target>
        </trans-unit>
        <trans-unit id="80b39a830534b0f17ac910d2adc07bc2ab01aa14" translate="yes" xml:space="preserve">
          <source>6.60.23. PowerPC Hardware Transactional Memory Built-in Functions</source>
          <target state="translated">6.60.23.PowerPCハードウェアトランザクションメモリ内蔵機能</target>
        </trans-unit>
        <trans-unit id="79abb09405f856bad23575b8160c4ec613ea2cef" translate="yes" xml:space="preserve">
          <source>6.60.23.1 PowerPC HTM Low Level Built-in Functions</source>
          <target state="translated">6.60.23.1 PowerPC HTM低レベル内蔵機能</target>
        </trans-unit>
        <trans-unit id="1e9f0eb5997affabaaafaf802e1e8532d25021ca" translate="yes" xml:space="preserve">
          <source>6.60.23.2 PowerPC HTM High Level Inline Functions</source>
          <target state="translated">6.60.23.2 PowerPC HTM 高レベルインライン関数</target>
        </trans-unit>
        <trans-unit id="74dde9e95bcfc60b3108a9c10d2b6793c505803c" translate="yes" xml:space="preserve">
          <source>6.60.24 PowerPC Atomic Memory Operation Functions</source>
          <target state="translated">6.60.24 PowerPCアトミックメモリ操作機能</target>
        </trans-unit>
        <trans-unit id="af9df679c92d65535da0fac194f2fd5dc609f45a" translate="yes" xml:space="preserve">
          <source>6.60.24. PowerPC Atomic Memory Operation Functions</source>
          <target state="translated">6.60.24.PowerPC アトミックメモリの操作機能</target>
        </trans-unit>
        <trans-unit id="f9ba8100601d40a23cb052ef3931793cb9776de8" translate="yes" xml:space="preserve">
          <source>6.60.25 RX Built-in Functions</source>
          <target state="translated">6.60.25 RX 内蔵機能</target>
        </trans-unit>
        <trans-unit id="d6dec97a295600dd53c1f1c34a53e35125645d9c" translate="yes" xml:space="preserve">
          <source>6.60.25. RX Built-in Functions</source>
          <target state="translated">6.60.25.RX 内蔵機能</target>
        </trans-unit>
        <trans-unit id="61123a2b8e7ff71005a667b491e2dbb49539c5f6" translate="yes" xml:space="preserve">
          <source>6.60.26 S/390 System z Built-in Functions</source>
          <target state="translated">6.60.26 S/390 システム z 内蔵機能</target>
        </trans-unit>
        <trans-unit id="be7fdc887f6d2525a0c409731bf11e429f7cd8e9" translate="yes" xml:space="preserve">
          <source>6.60.26. S/390 System z Built-in Functions</source>
          <target state="translated">6.60.26.S/390 システム z 内蔵機能</target>
        </trans-unit>
        <trans-unit id="1bfb3be709344ae26efed327c71d12bfe284c3a5" translate="yes" xml:space="preserve">
          <source>6.60.27 SH Built-in Functions</source>
          <target state="translated">6.60.27 SH 内蔵機能</target>
        </trans-unit>
        <trans-unit id="392d808017948f7e707b9306bc8cd4667f1d45d3" translate="yes" xml:space="preserve">
          <source>6.60.27. SH Built-in Functions</source>
          <target state="translated">6.60.27.SH 内蔵機能</target>
        </trans-unit>
        <trans-unit id="805cdf781e537274b56959dbd3ffc94a8c41aa37" translate="yes" xml:space="preserve">
          <source>6.60.28 SPARC VIS Built-in Functions</source>
          <target state="translated">6.60.28 SPARC VIS 内蔵機能</target>
        </trans-unit>
        <trans-unit id="fdda17191071fb29c923ba188fbc6fd906f5a754" translate="yes" xml:space="preserve">
          <source>6.60.28. SPARC VIS Built-in Functions</source>
          <target state="translated">6.60.28.SPARC VIS 内蔵機能</target>
        </trans-unit>
        <trans-unit id="ee3130b68c65f7b0d08dde6f566c3a5f223388ec" translate="yes" xml:space="preserve">
          <source>6.60.29 SPU Built-in Functions</source>
          <target state="translated">6.60.29 SPU 内蔵機能</target>
        </trans-unit>
        <trans-unit id="2601335231302b75650bbb1ac52b1099a68463c4" translate="yes" xml:space="preserve">
          <source>6.60.29. SPU Built-in Functions</source>
          <target state="translated">6.60.29.SPU 内蔵機能</target>
        </trans-unit>
        <trans-unit id="d4f78653e0dd80aa41f3d20d36c881fc12e01261" translate="yes" xml:space="preserve">
          <source>6.60.3 Altera Nios II Built-in Functions</source>
          <target state="translated">6.60.3 Altera Nios II 内蔵機能</target>
        </trans-unit>
        <trans-unit id="da13c3d1a772d7649d0e7af00d8e898a52f9dc0c" translate="yes" xml:space="preserve">
          <source>6.60.3. Altera Nios II Built-in Functions</source>
          <target state="translated">6.60.3.Altera Nios II 内蔵機能</target>
        </trans-unit>
        <trans-unit id="d521a0a3d69248b099adfdaa2e9753333e5b4e2a" translate="yes" xml:space="preserve">
          <source>6.60.30 TI C6X Built-in Functions</source>
          <target state="translated">6.60.30 TI C6X 内蔵機能</target>
        </trans-unit>
        <trans-unit id="41eea7448e6b90944cd1e7e247a2b81b1b2dcb56" translate="yes" xml:space="preserve">
          <source>6.60.30. TI C6X Built-in Functions</source>
          <target state="translated">6.60.30.TI C6X 内蔵機能</target>
        </trans-unit>
        <trans-unit id="09da6a8a73c6be6f7aafb527ccaae2f3f1a3f86f" translate="yes" xml:space="preserve">
          <source>6.60.31 TILE-Gx Built-in Functions</source>
          <target state="translated">6.60.31 TILE-Gx 内蔵機能</target>
        </trans-unit>
        <trans-unit id="d6c1b2e3150afe0db5cb3cd079016082a5659472" translate="yes" xml:space="preserve">
          <source>6.60.31. TILE-Gx Built-in Functions</source>
          <target state="translated">6.60.31.TILE-Gx 内蔵機能</target>
        </trans-unit>
        <trans-unit id="16cb9954d866ee6136974ab2933d1ad5e591a29a" translate="yes" xml:space="preserve">
          <source>6.60.32 TILEPro Built-in Functions</source>
          <target state="translated">6.60.32 TILEPro内蔵機能</target>
        </trans-unit>
        <trans-unit id="799a7577d20a65b3d94f0db94683ae49d0a71b2b" translate="yes" xml:space="preserve">
          <source>6.60.32. TILEPro Built-in Functions</source>
          <target state="translated">6.60.32.TILEPro組み込み機能</target>
        </trans-unit>
        <trans-unit id="b7e320ca3911c274d4cad4a596d111792fb1d925" translate="yes" xml:space="preserve">
          <source>6.60.33 x86 Built-in Functions</source>
          <target state="translated">6.60.33 x86 内蔵機能</target>
        </trans-unit>
        <trans-unit id="8d43cbf41afff2cd660d38454725bc7af6c0d2f9" translate="yes" xml:space="preserve">
          <source>6.60.33. x86 Built-in Functions</source>
          <target state="translated">x86の組み込み機能</target>
        </trans-unit>
        <trans-unit id="e0fddb3422bd9927b04efa1d9e549354789a88bd" translate="yes" xml:space="preserve">
          <source>6.60.34 x86 Transactional Memory Intrinsics</source>
          <target state="translated">6.60.34 x86 トランザクションメモリの本質</target>
        </trans-unit>
        <trans-unit id="205c1ba8e0e449d4a5a139446ea754be68baedc1" translate="yes" xml:space="preserve">
          <source>6.60.34. x86 Transactional Memory Intrinsics</source>
          <target state="translated">x86 トランザクションメモリの本質</target>
        </trans-unit>
        <trans-unit id="b5cdbdb7348ffdc7d3aee3fec433147270141e0a" translate="yes" xml:space="preserve">
          <source>6.60.35 x86 Control-Flow Protection Intrinsics</source>
          <target state="translated">6.60.35 x86 制御フロー保護機能の本質</target>
        </trans-unit>
        <trans-unit id="4e1f24382c0bbf0c8d400c649bba7c05c00a8d2b" translate="yes" xml:space="preserve">
          <source>6.60.35. x86 Control-Flow Protection Intrinsics</source>
          <target state="translated">6.60.35.x86 制御フロー保護の本質</target>
        </trans-unit>
        <trans-unit id="35d13ca2ba9e9923c822b705e34d350f81281be7" translate="yes" xml:space="preserve">
          <source>6.60.4 ARC Built-in Functions</source>
          <target state="translated">6.60.4 ARC 内蔵機能</target>
        </trans-unit>
        <trans-unit id="60c9136375e4d87c9aeae313e3b25ae236f1abaf" translate="yes" xml:space="preserve">
          <source>6.60.4. ARC Built-in Functions</source>
          <target state="translated">6.60.4.ARC 内蔵機能</target>
        </trans-unit>
        <trans-unit id="e24c758e65419e4bd1d80f6caa3d144329159782" translate="yes" xml:space="preserve">
          <source>6.60.5 ARC SIMD Built-in Functions</source>
          <target state="translated">6.60.5 ARC SIMD 内蔵機能</target>
        </trans-unit>
        <trans-unit id="0fb448d8fa464c1010324979ee5049ed18c45922" translate="yes" xml:space="preserve">
          <source>6.60.5. ARC SIMD Built-in Functions</source>
          <target state="translated">6.60.5.ARC SIMD 内蔵機能</target>
        </trans-unit>
        <trans-unit id="70c33156526e02bdee0c1cb7eee7658bd59dde03" translate="yes" xml:space="preserve">
          <source>6.60.6 ARM iWMMXt Built-in Functions</source>
          <target state="translated">6.60.6 ARM iWMMXtの内蔵機能</target>
        </trans-unit>
        <trans-unit id="7aae3382ce3ca19f45579f2305865919a532aab6" translate="yes" xml:space="preserve">
          <source>6.60.6. ARM iWMMXt Built-in Functions</source>
          <target state="translated">6.60.6.ARM iWMMXtの内蔵機能</target>
        </trans-unit>
        <trans-unit id="01df4aa60083c98a464662e42ffb208d15c49ed2" translate="yes" xml:space="preserve">
          <source>6.60.7 ARM C Language Extensions (ACLE)</source>
          <target state="translated">6.60.7 ARM C言語拡張(ACLE</target>
        </trans-unit>
        <trans-unit id="b3db053df4137fcd808f678ddc9047d1fbe198e2" translate="yes" xml:space="preserve">
          <source>6.60.7. ARM C Language Extensions (ACLE)</source>
          <target state="translated">6.60.7.ARM C言語拡張(ACLE</target>
        </trans-unit>
        <trans-unit id="ad6145c8b5576878021b6aaa93e3f75f005ae12f" translate="yes" xml:space="preserve">
          <source>6.60.8 ARM Floating Point Status and Control Intrinsics</source>
          <target state="translated">6.60.8 ARM浮動小数点のステータスと制御の本質</target>
        </trans-unit>
        <trans-unit id="e1f834d5d88d58b6d9a8f6b747da5a542c9f894f" translate="yes" xml:space="preserve">
          <source>6.60.8. ARM Floating Point Status and Control Intrinsics</source>
          <target state="translated">6.60.8.ARM 浮動小数点のステータスと制御の本質</target>
        </trans-unit>
        <trans-unit id="dcbbfdf8663e7107af55ddef86e4e271418e313d" translate="yes" xml:space="preserve">
          <source>6.60.9 ARM ARMv8-M Security Extensions</source>
          <target state="translated">6.60.9 ARM ARMv8-Mのセキュリティ拡張機能</target>
        </trans-unit>
        <trans-unit id="c54b7c7eda7b53ebb9799aa7c04448fdb0fec94b" translate="yes" xml:space="preserve">
          <source>6.60.9. ARM ARMv8-M Security Extensions</source>
          <target state="translated">6.60.9.ARM ARMv8-M セキュリティ拡張</target>
        </trans-unit>
        <trans-unit id="42bb6a34bd5acffcf19611139abd3b9a9242dc16" translate="yes" xml:space="preserve">
          <source>6.61 Format Checks Specific to Particular Target Machines</source>
          <target state="translated">6.61 特定のターゲットマシンに固有のフォーマットチェック</target>
        </trans-unit>
        <trans-unit id="efa03e604836a1ded2e370728106891f59baa987" translate="yes" xml:space="preserve">
          <source>6.61. Format Checks Specific to Particular Target Machines</source>
          <target state="translated">6.61.特定のターゲットマシンに固有のフォーマットチェック</target>
        </trans-unit>
        <trans-unit id="4ea13888b42f6062ee9644f5d95087fb2d0548a8" translate="yes" xml:space="preserve">
          <source>6.61.1 Solaris Format Checks</source>
          <target state="translated">6.61.1 Solaris フォーマットのチェック</target>
        </trans-unit>
        <trans-unit id="432a7467324ae8382cab98c47e8636a3a6fd98c8" translate="yes" xml:space="preserve">
          <source>6.61.1. Solaris Format Checks</source>
          <target state="translated">6.61.1.Solaris フォーマットのチェック</target>
        </trans-unit>
        <trans-unit id="62f76a8bb2b81a01fd2e8e4be6205a37f78866d2" translate="yes" xml:space="preserve">
          <source>6.61.2 Darwin Format Checks</source>
          <target state="translated">6.61.2 ダーウィンフォーマットのチェック</target>
        </trans-unit>
        <trans-unit id="eb52011e1053a0626f4461ca19f8a87c469a881d" translate="yes" xml:space="preserve">
          <source>6.61.2. Darwin Format Checks</source>
          <target state="translated">6.61.2.ダーウィンフォーマットのチェック</target>
        </trans-unit>
        <trans-unit id="de1a81ca92ecfb00a76a385f2c29cfea5fb36b2c" translate="yes" xml:space="preserve">
          <source>6.62 Pragmas Accepted by GCC</source>
          <target state="translated">6.62 GCCが受け入れたプラグマ</target>
        </trans-unit>
        <trans-unit id="4431bb889f869536363e151b5d19dddd57bf02ca" translate="yes" xml:space="preserve">
          <source>6.62. Pragmas Accepted by GCC</source>
          <target state="translated">6.62.GCCが受け入れたプラグマ</target>
        </trans-unit>
        <trans-unit id="bda5bf347f61daaea19109191b98f0a15650b8b1" translate="yes" xml:space="preserve">
          <source>6.62.1 AArch64 Pragmas</source>
          <target state="translated">6.62.1 AArch64 のプラグマ</target>
        </trans-unit>
        <trans-unit id="d30e4f881bd7d79b2cb531a589b61e8b41323c14" translate="yes" xml:space="preserve">
          <source>6.62.1. AArch64 Pragmas</source>
          <target state="translated">6.62.1.AArch64 のプラグマ</target>
        </trans-unit>
        <trans-unit id="0fae9fb9da232f45ae5b2f4cf65fb19b73adc7a6" translate="yes" xml:space="preserve">
          <source>6.62.10 Structure-Layout Pragmas</source>
          <target state="translated">6.62.10 構造-配置計画</target>
        </trans-unit>
        <trans-unit id="ae6183dd0a2e92314086348421497878213aa8ab" translate="yes" xml:space="preserve">
          <source>6.62.10. Structure-Layout Pragmas</source>
          <target state="translated">6.62.10.構造-レイアウトのプラグマ</target>
        </trans-unit>
        <trans-unit id="438b4eb8fa731de46f25a07fcb3f8171573534c1" translate="yes" xml:space="preserve">
          <source>6.62.11 Weak Pragmas</source>
          <target state="translated">6.62.11 弱いプラグマ</target>
        </trans-unit>
        <trans-unit id="456e62774787d30f104850d6c117223b4ca65e63" translate="yes" xml:space="preserve">
          <source>6.62.11. Weak Pragmas</source>
          <target state="translated">6.62.11.弱いプラグマ</target>
        </trans-unit>
        <trans-unit id="c71fddfed172c3c47a5617262f7389e419da6a30" translate="yes" xml:space="preserve">
          <source>6.62.12 Diagnostic Pragmas</source>
          <target state="translated">6.62.12 診断プラグマ</target>
        </trans-unit>
        <trans-unit id="5c1d7bcfe48977be052c923fdd855e401c28a970" translate="yes" xml:space="preserve">
          <source>6.62.12. Diagnostic Pragmas</source>
          <target state="translated">6.62.12.診断プラグマ</target>
        </trans-unit>
        <trans-unit id="d9651e3d5a6fddfe6cb23700387aeb74fa7e4c5e" translate="yes" xml:space="preserve">
          <source>6.62.13 Visibility Pragmas</source>
          <target state="translated">6.62.13 可視性プラグマ</target>
        </trans-unit>
        <trans-unit id="420d13aec1f3439f14212344922e0495baa3e830" translate="yes" xml:space="preserve">
          <source>6.62.13. Visibility Pragmas</source>
          <target state="translated">6.62.13.視認性のプラグマ</target>
        </trans-unit>
        <trans-unit id="165ecb776ec64d55e72b67f6cbdd91767b3e515d" translate="yes" xml:space="preserve">
          <source>6.62.14 Push/Pop Macro Pragmas</source>
          <target state="translated">6.62.14 プッシュ/ポップマクロのプラグマ</target>
        </trans-unit>
        <trans-unit id="5132533717fe6899bc26cc07e1a7025a5d3ebfe2" translate="yes" xml:space="preserve">
          <source>6.62.14. Push/Pop Macro Pragmas</source>
          <target state="translated">6.62.14.プッシュ/ポップ・マクロ・プラグラム</target>
        </trans-unit>
        <trans-unit id="7f1c2aa3588560918a28550b0424349ad6e1b7a5" translate="yes" xml:space="preserve">
          <source>6.62.15 Function Specific Option Pragmas</source>
          <target state="translated">6.62.15 機能固有オプションのプラグマ</target>
        </trans-unit>
        <trans-unit id="f653a842356d2bc3c04b2bc43fb0be16aa6c7f3f" translate="yes" xml:space="preserve">
          <source>6.62.15. Function Specific Option Pragmas</source>
          <target state="translated">6.62.15.機能固有のオプション・プラグマ</target>
        </trans-unit>
        <trans-unit id="04c7970b28a7d1be09e12f4c6317411cc29b52c6" translate="yes" xml:space="preserve">
          <source>6.62.16 Loop-Specific Pragmas</source>
          <target state="translated">6.62.16 ループ固有のプラグマ</target>
        </trans-unit>
        <trans-unit id="c834625e2bfe91127b6cef30d1dce2c3c55bb706" translate="yes" xml:space="preserve">
          <source>6.62.16. Loop-Specific Pragmas</source>
          <target state="translated">6.62.16.ループ固有のプラグマ</target>
        </trans-unit>
        <trans-unit id="b6d45f7966cc38de9f2e6c8087c373eb00b024b0" translate="yes" xml:space="preserve">
          <source>6.62.2 ARM Pragmas</source>
          <target state="translated">6.62.2 ARMのプラグマ</target>
        </trans-unit>
        <trans-unit id="d55c2b97863db22308a953f6f10f7923cefc6394" translate="yes" xml:space="preserve">
          <source>6.62.2. ARM Pragmas</source>
          <target state="translated">6.62.2.ARMのプラグマ</target>
        </trans-unit>
        <trans-unit id="29c229a076641fa035ba7fe4bdf9eae6c93e408d" translate="yes" xml:space="preserve">
          <source>6.62.3 M32C Pragmas</source>
          <target state="translated">6.62.3 M32C プラグマ</target>
        </trans-unit>
        <trans-unit id="4f7f341cd26cf86a57920aeac9cf4af2995ddcf6" translate="yes" xml:space="preserve">
          <source>6.62.3. M32C Pragmas</source>
          <target state="translated">6.62.3.M32Cのプラグマ</target>
        </trans-unit>
        <trans-unit id="bb1f7cc3ea05c699e2867b54f31561cd612fc258" translate="yes" xml:space="preserve">
          <source>6.62.4 MeP Pragmas</source>
          <target state="translated">6.62.4 MePプラグマ</target>
        </trans-unit>
        <trans-unit id="7978f32488b620c43c59e10d75dc82958337e3fc" translate="yes" xml:space="preserve">
          <source>6.62.4. MeP Pragmas</source>
          <target state="translated">6.62.4.MePプラグラム</target>
        </trans-unit>
        <trans-unit id="ff197f0fa11a9cff509f115810e279a8f46ec8f4" translate="yes" xml:space="preserve">
          <source>6.62.5 RS/6000 and PowerPC Pragmas</source>
          <target state="translated">6.62.5 RS/6000とPowerPCのプラグマ</target>
        </trans-unit>
        <trans-unit id="4b4183ab397bc7b54fbbcbca3023e75ae2913120" translate="yes" xml:space="preserve">
          <source>6.62.5. RS/6000 and PowerPC Pragmas</source>
          <target state="translated">6.62.5.RS/6000とPowerPCのプラグマ</target>
        </trans-unit>
        <trans-unit id="e20fc523f7d32c58b397a602a3d99d1e3a2eaaad" translate="yes" xml:space="preserve">
          <source>6.62.6 S/390 Pragmas</source>
          <target state="translated">6.62.6 S/390 プラグマ</target>
        </trans-unit>
        <trans-unit id="b76e37ec7520a2fa2139a1f0d79cb1fb3aef884f" translate="yes" xml:space="preserve">
          <source>6.62.6. S/390 Pragmas</source>
          <target state="translated">6.62.6.S/390のプラグマ</target>
        </trans-unit>
        <trans-unit id="8c71d9cc1d24ddf8727f59deaa78ec5079fae321" translate="yes" xml:space="preserve">
          <source>6.62.7 Darwin Pragmas</source>
          <target state="translated">6.62.7 ダーウィンのプラグマ</target>
        </trans-unit>
        <trans-unit id="daa60daa4acebf46449f93b7700a03ec2d4f157f" translate="yes" xml:space="preserve">
          <source>6.62.7. Darwin Pragmas</source>
          <target state="translated">6.62.7.ダーウィンのプラグマ</target>
        </trans-unit>
        <trans-unit id="0bd3e7bb008bf87a20384f8a5991fbf750279c77" translate="yes" xml:space="preserve">
          <source>6.62.8 Solaris Pragmas</source>
          <target state="translated">6.62.8 Solaris のプラグマ</target>
        </trans-unit>
        <trans-unit id="45028c6b0bd3d3723b2860251c45a4f942743e10" translate="yes" xml:space="preserve">
          <source>6.62.8. Solaris Pragmas</source>
          <target state="translated">6.62.8.Solaris のプラグマ</target>
        </trans-unit>
        <trans-unit id="e3b27be2b9370becdf7d3fb21a3f46a71cd0eca2" translate="yes" xml:space="preserve">
          <source>6.62.9 Symbol-Renaming Pragmas</source>
          <target state="translated">6.62.9 シンボルリネーミング・プラグラム</target>
        </trans-unit>
        <trans-unit id="f5b6bc3b507503f6b21ae990c1bbfa8024f8bff5" translate="yes" xml:space="preserve">
          <source>6.62.9. Symbol-Renaming Pragmas</source>
          <target state="translated">6.62.9.シンボル名の変更</target>
        </trans-unit>
        <trans-unit id="54ed4db541411e0aceb7adbcb3a6183c817f0121" translate="yes" xml:space="preserve">
          <source>6.63 Unnamed Structure and Union Fields</source>
          <target state="translated">6.63 無名構造物とユニオンフィールド</target>
        </trans-unit>
        <trans-unit id="80d9e0996f730d9d7381653674fb5ce4c600c49b" translate="yes" xml:space="preserve">
          <source>6.63. Unnamed Structure and Union Fields</source>
          <target state="translated">6.63.名前のない構造物とユニオンフィールド</target>
        </trans-unit>
        <trans-unit id="3e5301b09f31b81e8ffa4ac2694e9a5374b883a7" translate="yes" xml:space="preserve">
          <source>6.64 Thread-Local Storage</source>
          <target state="translated">6.64 スレッドローカルストレージ</target>
        </trans-unit>
        <trans-unit id="7e21260c8f4e3175c931cf2d30b098d825b59b4a" translate="yes" xml:space="preserve">
          <source>6.64. Thread-Local Storage</source>
          <target state="translated">6.64.スレッドローカルストレージ</target>
        </trans-unit>
        <trans-unit id="c94f01c6243ac81b26a786a0ac2cd995d982092a" translate="yes" xml:space="preserve">
          <source>6.64.1 ISO/IEC 9899:1999 Edits for Thread-Local Storage</source>
          <target state="translated">6.64.1 ISO/IEC 9899:1999 スレッドローカルストレージの編集</target>
        </trans-unit>
        <trans-unit id="d59db7de5a42c2d1f678d417864441926bbb9b6b" translate="yes" xml:space="preserve">
          <source>6.64.1. ISO/IEC 9899:1999 Edits for Thread-Local Storage</source>
          <target state="translated">6.64.1.ISO/IEC 9899:1999 スレッドローカルストレージの編集</target>
        </trans-unit>
        <trans-unit id="84d216acad410deaa27ac5b476f6dbf1e882cd2e" translate="yes" xml:space="preserve">
          <source>6.64.2 ISO/IEC 14882:1998 Edits for Thread-Local Storage</source>
          <target state="translated">6.64.2 ISO/IEC 14882:1998 スレッドローカルストレージの編集</target>
        </trans-unit>
        <trans-unit id="cb2a3ccdb4e437c9ca91dd6ebd27b17f1418de28" translate="yes" xml:space="preserve">
          <source>6.64.2. ISO/IEC 14882:1998 Edits for Thread-Local Storage</source>
          <target state="translated">6.64.2.ISO/IEC 14882:1998 スレッドローカルストレージのための編集</target>
        </trans-unit>
        <trans-unit id="8c12098468b620e6e0dbc480e385ccf50d159a29" translate="yes" xml:space="preserve">
          <source>6.65 Binary Constants using the &amp;lsquo;</source>
          <target state="translated">6.65 'を使用したバイナリ定数</target>
        </trans-unit>
        <trans-unit id="b48ebe102770cb43fd60e347393c1cfdff91be93" translate="yes" xml:space="preserve">
          <source>6.65 Binary Constants using the &amp;lsquo;&lt;samp&gt;0b&lt;/samp&gt;&amp;rsquo; Prefix</source>
          <target state="translated">6.65 'を使用したバイナリ定数&lt;samp&gt;0b&lt;/samp&gt;'接頭辞</target>
        </trans-unit>
        <trans-unit id="be160e34b93b4ed85dcc3394d34f9a0295866e9e" translate="yes" xml:space="preserve">
          <source>6.65. Binary Constants using the ‘0b’ Prefix</source>
          <target state="translated">6.65.プレフィックス '0b' を使用したバイナリ定数</target>
        </trans-unit>
        <trans-unit id="0f87a1908badf9833b053a43b42d0bdc41c2daa4" translate="yes" xml:space="preserve">
          <source>6.7 Referring to a Type with &lt;code&gt;typeof&lt;/code&gt;</source>
          <target state="translated">6.7 &lt;code&gt;typeof&lt;/code&gt; による型の参照</target>
        </trans-unit>
        <trans-unit id="aefb06ec4c0e2dc69a50d47f41a1d50376237626" translate="yes" xml:space="preserve">
          <source>6.7 Referring to a Type with typeof</source>
          <target state="translated">6.7 typeofでの型の参照</target>
        </trans-unit>
        <trans-unit id="0c49fbad5978135cf1a426aec9372d8464a45633" translate="yes" xml:space="preserve">
          <source>6.7. Referring to a Type with typeof</source>
          <target state="translated">6.7.typeofを持つ型の参照</target>
        </trans-unit>
        <trans-unit id="4f813335557f53888cb2550fbd9949b0e13293c3" translate="yes" xml:space="preserve">
          <source>6.7.1 Storage-class specifiers</source>
          <target state="translated">6.7.1 ストレージクラス指定子</target>
        </trans-unit>
        <trans-unit id="e605723e7b7486f0e9995b0fdff3c3e6f78980a3" translate="yes" xml:space="preserve">
          <source>6.8 Conditionals with Omitted Operands</source>
          <target state="translated">6.8 省略された演算子を持つ条件式</target>
        </trans-unit>
        <trans-unit id="71cfb8c6529d641312b04cbb394cee8bff704c18" translate="yes" xml:space="preserve">
          <source>6.8. Conditionals with Omitted Operands</source>
          <target state="translated">6.8.省略されたオペランドを持つ条件式</target>
        </trans-unit>
        <trans-unit id="509808d84bf4391815ff1e0f48032c94a5dd552a" translate="yes" xml:space="preserve">
          <source>6.9 128-bit Integers</source>
          <target state="translated">6.9 128ビット整数</target>
        </trans-unit>
        <trans-unit id="7d7fb360b8cbf9867037d84c67d6d1de7d7c1ecd" translate="yes" xml:space="preserve">
          <source>6.9. 128-bit Integers</source>
          <target state="translated">6.9.128ビット整数</target>
        </trans-unit>
        <trans-unit id="5da6b1f7cb4c0dcdb8e768871631347d4b07f021" translate="yes" xml:space="preserve">
          <source>603e</source>
          <target state="translated">603e</target>
        </trans-unit>
        <trans-unit id="114ff28eca127e9602c8b936fb29c423fd1fa9c5" translate="yes" xml:space="preserve">
          <source>604e</source>
          <target state="translated">604e</target>
        </trans-unit>
        <trans-unit id="03827a73f7392a8a2d7f128028ae04c0cc1ea97e" translate="yes" xml:space="preserve">
          <source>64-bit global or out register for the SPARC-V8+ architecture.</source>
          <target state="translated">SPARC-V8+アーキテクチャ用の 64 ビットグローバルまたはアウトレジスタ。</target>
        </trans-unit>
        <trans-unit id="0ebec4c1a89498e8f46055720ebb54806bb505d7" translate="yes" xml:space="preserve">
          <source>68881 floating-point register, if available</source>
          <target state="translated">68881 浮動小数点レジスタ(利用可能な場合</target>
        </trans-unit>
        <trans-unit id="539abf25168d906f1e33d087f1ce65349de4307c" translate="yes" xml:space="preserve">
          <source>7 Extensions to the C++ Language</source>
          <target state="translated">7 C++言語への拡張</target>
        </trans-unit>
        <trans-unit id="3d0b72fe21bde25e12323d247ae6e948ee9534c0" translate="yes" xml:space="preserve">
          <source>7. Extensions to the C++ Language</source>
          <target state="translated">7.C++言語への拡張</target>
        </trans-unit>
        <trans-unit id="1d5f965398181e8d3bebc851a2e432315a330bf6" translate="yes" xml:space="preserve">
          <source>7.1 When is a Volatile C++ Object Accessed?</source>
          <target state="translated">7.1 Volatile C++オブジェクトはいつアクセスされますか?</target>
        </trans-unit>
        <trans-unit id="853f0c2f739d6e0aac1dfbfcaf889f42ed518455" translate="yes" xml:space="preserve">
          <source>7.1. When is a Volatile C++ Object Accessed?</source>
          <target state="translated">7.1.揮発性C++オブジェクトはいつアクセスされますか?</target>
        </trans-unit>
        <trans-unit id="bef3beb73f1515750648d016a4a7a8a0c3694d37" translate="yes" xml:space="preserve">
          <source>7.10 C++ Concepts</source>
          <target state="translated">7.10 C++の概念</target>
        </trans-unit>
        <trans-unit id="8fc78bc67bf4ddd1e6b8e4afb02ab4ba06cd4cb4" translate="yes" xml:space="preserve">
          <source>7.10. C++ Concepts</source>
          <target state="translated">7.10.C++の概念</target>
        </trans-unit>
        <trans-unit id="2b4d56917ec7187670a77e62832f6f218efd9151" translate="yes" xml:space="preserve">
          <source>7.11 Deprecated Features</source>
          <target state="translated">7.11 非推奨機能</target>
        </trans-unit>
        <trans-unit id="25d1571215b7401ab96811e1ddf3f5c9661fcc2a" translate="yes" xml:space="preserve">
          <source>7.11. Deprecated Features</source>
          <target state="translated">7.11.非推奨機能</target>
        </trans-unit>
        <trans-unit id="f9c7d6c2a605d462a0586afd0551257f900486c8" translate="yes" xml:space="preserve">
          <source>7.12 Backwards Compatibility</source>
          <target state="translated">7.12 下位互換性</target>
        </trans-unit>
        <trans-unit id="8158692d11d4c5ce16243a26b915c3d457771e07" translate="yes" xml:space="preserve">
          <source>7.12. Backwards Compatibility</source>
          <target state="translated">7.12.下位互換性</target>
        </trans-unit>
        <trans-unit id="5bed06be61cf3c39326d974fd2bfa12929c70689" translate="yes" xml:space="preserve">
          <source>7.2 Restricting Pointer Aliasing</source>
          <target state="translated">7.2 ポインタのエイリアシングの制限</target>
        </trans-unit>
        <trans-unit id="71ddac46d553059ddefd1e2ffd6a4bc575de7a36" translate="yes" xml:space="preserve">
          <source>7.2. Restricting Pointer Aliasing</source>
          <target state="translated">7.2.ポインタのエイリアシングの制限</target>
        </trans-unit>
        <trans-unit id="eeed2a61b0a4a9a55ea4a85298afea6fa4289f69" translate="yes" xml:space="preserve">
          <source>7.3 Vague Linkage</source>
          <target state="translated">7.3 曖昧なリンケージ</target>
        </trans-unit>
        <trans-unit id="72fcc2b6cc76f51b583527cd969a50e71f8a7e8b" translate="yes" xml:space="preserve">
          <source>7.3. Vague Linkage</source>
          <target state="translated">7.3.曖昧なリンケージ</target>
        </trans-unit>
        <trans-unit id="2cb4faf61d3ded4445028675e6091214c956c881" translate="yes" xml:space="preserve">
          <source>7.4 C++ Interface and Implementation Pragmas</source>
          <target state="translated">7.4 C++のインターフェイスと実装パターン</target>
        </trans-unit>
        <trans-unit id="f6035c74bef56b0b9d8bf821ba5ccd1acb1d6bd1" translate="yes" xml:space="preserve">
          <source>7.4. C++ Interface and Implementation Pragmas</source>
          <target state="translated">7.4.C++のインターフェイスと実装パターン</target>
        </trans-unit>
        <trans-unit id="eb1b9a447c991be6ed891f137dfb4db4aeb35a85" translate="yes" xml:space="preserve">
          <source>7.5 Where&amp;rsquo;s the Template?</source>
          <target state="translated">7.5テンプレートはどこにありますか？</target>
        </trans-unit>
        <trans-unit id="f8803c530c0a015f8b53a5b7e977e437479f68c0" translate="yes" xml:space="preserve">
          <source>7.5. Where’s the Template?</source>
          <target state="translated">7.5.テンプレートはどこ?</target>
        </trans-unit>
        <trans-unit id="fb46a075836a495709d10084e1fbe7a3e23d4444" translate="yes" xml:space="preserve">
          <source>7.6 Extracting the Function Pointer from a Bound Pointer to Member Function</source>
          <target state="translated">7.6 メンバ関数へのバウンドポインタからの関数ポインタの抽出</target>
        </trans-unit>
        <trans-unit id="c38b0b58018016fcc11ef4b7d077c974744465d5" translate="yes" xml:space="preserve">
          <source>7.6. Extracting the Function Pointer from a Bound Pointer to Member Function</source>
          <target state="translated">7.6.メンバ関数へのバウンドポインタからの関数ポインタの抽出</target>
        </trans-unit>
        <trans-unit id="7071f1c73345de1feee695e80997a7e9ee25300b" translate="yes" xml:space="preserve">
          <source>7.7 C++-Specific Variable, Function, and Type Attributes</source>
          <target state="translated">7.7 C++固有の変数、関数、および型属性</target>
        </trans-unit>
        <trans-unit id="fe7a6e19d12deeb2e511882326ca07add0160c0a" translate="yes" xml:space="preserve">
          <source>7.7. C++-Specific Variable, Function, and Type Attributes</source>
          <target state="translated">7.7.C++特有の変数、関数、および型属性</target>
        </trans-unit>
        <trans-unit id="cc8db05e1d866a9a98bbbe8443955267dd7d9bd4" translate="yes" xml:space="preserve">
          <source>7.8 Function Multiversioning</source>
          <target state="translated">7.8 関数のマルチバージョン</target>
        </trans-unit>
        <trans-unit id="ea04efa0867bbccd881a8a1d2278d4e89b3e0646" translate="yes" xml:space="preserve">
          <source>7.8. Function Multiversioning</source>
          <target state="translated">7.8.関数の多変量化</target>
        </trans-unit>
        <trans-unit id="fd2d8249d044e1371f7022bf34f888074e2ee0be" translate="yes" xml:space="preserve">
          <source>7.9 Type Traits</source>
          <target state="translated">7.9 タイプの特徴</target>
        </trans-unit>
        <trans-unit id="107abc23e4791a9cd4dcf1bcf2328b8f84ae94da" translate="yes" xml:space="preserve">
          <source>7.9. Type Traits</source>
          <target state="translated">7.9.タイプの特徴</target>
        </trans-unit>
        <trans-unit id="7630887e9fa14ca6b1658e00e78757a20b02e72b" translate="yes" xml:space="preserve">
          <source>7100LC</source>
          <target state="translated">7100LC</target>
        </trans-unit>
        <trans-unit id="3c2ec4b008d5ed9fc8ee9829608df1346ca2705e" translate="yes" xml:space="preserve">
          <source>74kc</source>
          <target state="translated">74kc</target>
        </trans-unit>
        <trans-unit id="10a7bed2c6adcd28f073f2fe57c094b6c8d3bc8f" translate="yes" xml:space="preserve">
          <source>74kf1_1</source>
          <target state="translated">74kf1_1</target>
        </trans-unit>
        <trans-unit id="27553aaaeb377b78caac300c45a00d7de721c0d2" translate="yes" xml:space="preserve">
          <source>74kf2_1</source>
          <target state="translated">74kf2_1</target>
        </trans-unit>
        <trans-unit id="ba7a38140cd8c3812e14ad4121067a23eea7f5bf" translate="yes" xml:space="preserve">
          <source>74kf3_2</source>
          <target state="translated">74kf3_2</target>
        </trans-unit>
        <trans-unit id="b747ee321c3631c44c6aab3e5c87e1db0a13fb20" translate="yes" xml:space="preserve">
          <source>8 GNU Objective-C Features</source>
          <target state="translated">8 GNU Objective-Cの機能</target>
        </trans-unit>
        <trans-unit id="238dd266a716ebd8470437fc03931af07bf27998" translate="yes" xml:space="preserve">
          <source>8-bit adjusted signed integer constant for compare pseudo-ops</source>
          <target state="translated">比較擬似演算のための8ビット調整済み符号付き整数定数</target>
        </trans-unit>
        <trans-unit id="04f2d334251b61a1b4ed8c930e09e1849678255e" translate="yes" xml:space="preserve">
          <source>8-bit signed integer constant for logical instructions</source>
          <target state="translated">論理命令用8ビット符号付き整数定数</target>
        </trans-unit>
        <trans-unit id="ce588bc9a73175126a04dc9370ac0c259db21e04" translate="yes" xml:space="preserve">
          <source>8. GNU Objective-C Features</source>
          <target state="translated">8.GNU Objective-Cの機能</target>
        </trans-unit>
        <trans-unit id="6ce4b43594597dc31758c3a8e95fa37ab3efeda9" translate="yes" xml:space="preserve">
          <source>8.1 GNU Objective-C Runtime API</source>
          <target state="translated">8.1 GNU Objective-CランタイムAPI</target>
        </trans-unit>
        <trans-unit id="0bacac2be7f21284cac5795d29fbb6da28909c30" translate="yes" xml:space="preserve">
          <source>8.1. GNU Objective-C Runtime API</source>
          <target state="translated">8.1.GNU Objective-CランタイムAPI</target>
        </trans-unit>
        <trans-unit id="06017b1062e44c3e1513b7df81466f282f8680c7" translate="yes" xml:space="preserve">
          <source>8.1.1 Modern GNU Objective-C Runtime API</source>
          <target state="translated">8.1.1 現代のGNU Objective-CランタイムAPI</target>
        </trans-unit>
        <trans-unit id="6256c45c08c113cb06bb5a6f39d95eae15983824" translate="yes" xml:space="preserve">
          <source>8.1.1. Modern GNU Objective-C Runtime API</source>
          <target state="translated">8.1.1.最新のGNU Objective-CランタイムAPI</target>
        </trans-unit>
        <trans-unit id="6f807bd728fba1f65e680d2cf9b57659912feaf1" translate="yes" xml:space="preserve">
          <source>8.1.2 Traditional GNU Objective-C Runtime API</source>
          <target state="translated">8.1.2 従来のGNU Objective-CランタイムAPI</target>
        </trans-unit>
        <trans-unit id="cb7916c8856f6aa20557cd44e13afa2639ce894c" translate="yes" xml:space="preserve">
          <source>8.1.2. Traditional GNU Objective-C Runtime API</source>
          <target state="translated">8.1.2.従来のGNU Objective-CランタイムAPI</target>
        </trans-unit>
        <trans-unit id="12cc3d95e870de249d974ac00eabcad28ce12bd2" translate="yes" xml:space="preserve">
          <source>8.10 Messaging with the GNU Objective-C Runtime</source>
          <target state="translated">8.10 GNU Objective-Cランタイムでのメッセージング</target>
        </trans-unit>
        <trans-unit id="81ed810eba038ce1047a0ccdc6c5d469589a5d41" translate="yes" xml:space="preserve">
          <source>8.10. Messaging with the GNU Objective-C Runtime</source>
          <target state="translated">8.10.GNU Objective-Cランタイムでのメッセージング</target>
        </trans-unit>
        <trans-unit id="1c7d706afed13502f561aebdfaba32624d949ed4" translate="yes" xml:space="preserve">
          <source>8.10.1 Dynamically Registering Methods</source>
          <target state="translated">8.10.1 メソッドの動的登録</target>
        </trans-unit>
        <trans-unit id="3be65cea7921ce987148313368bddde89a945dea" translate="yes" xml:space="preserve">
          <source>8.10.1. Dynamically Registering Methods</source>
          <target state="translated">8.10.1.メソッドを動的に登録する</target>
        </trans-unit>
        <trans-unit id="fec27cce313d8eb12d908932146cca5b44cb0b96" translate="yes" xml:space="preserve">
          <source>8.10.2 Forwarding Hook</source>
          <target state="translated">8.10.2 転送フック</target>
        </trans-unit>
        <trans-unit id="c503d0ed0e5cd0f8688e6bc9706ecda7076965e9" translate="yes" xml:space="preserve">
          <source>8.10.2. Forwarding Hook</source>
          <target state="translated">8.10.2.転送フック</target>
        </trans-unit>
        <trans-unit id="0d54a093d567e45971dfe60046ab944e71a6dc74" translate="yes" xml:space="preserve">
          <source>8.2 +load: Executing Code before main</source>
          <target state="translated">8.2 +load.メインの前にコードを実行する</target>
        </trans-unit>
        <trans-unit id="4c46829f2755d63494e7358356a171f9c0aa2c92" translate="yes" xml:space="preserve">
          <source>8.2 &lt;code&gt;+load&lt;/code&gt;: Executing Code before &lt;code&gt;main&lt;/code&gt;</source>
          <target state="translated">8.2 &lt;code&gt;+load&lt;/code&gt; ： &lt;code&gt;main&lt;/code&gt; 前にコードを実行する</target>
        </trans-unit>
        <trans-unit id="f6ee8357cf66d468fce21ce87f6e1455c61c9d71" translate="yes" xml:space="preserve">
          <source>8.2. +load: Executing Code before main</source>
          <target state="translated">8.2.+ロードします。メインの前にコードを実行する</target>
        </trans-unit>
        <trans-unit id="0e37b3bc6a72bc7a45aefe525b01b3bcbc69dc62" translate="yes" xml:space="preserve">
          <source>8.2.1 What You Can and Cannot Do in +load</source>
          <target state="translated">8.2.1 +loadでできること、できないこと</target>
        </trans-unit>
        <trans-unit id="7514eae887431bc2b23c9f91ceeb2b8927f90957" translate="yes" xml:space="preserve">
          <source>8.2.1 What You Can and Cannot Do in &lt;code&gt;+load&lt;/code&gt;</source>
          <target state="translated">8.2.1 &lt;code&gt;+load&lt;/code&gt; でできることとできないこと</target>
        </trans-unit>
        <trans-unit id="8bc74bfbf57cd10928d01b916e6fa71d6d37346e" translate="yes" xml:space="preserve">
          <source>8.2.1. What You Can and Cannot Do in +load</source>
          <target state="translated">8.2.1.ロードでできることとできないこと</target>
        </trans-unit>
        <trans-unit id="ac17a28fe0400efdbbf27dc0a3aa19d768882f50" translate="yes" xml:space="preserve">
          <source>8.3 Type Encoding</source>
          <target state="translated">8.3 タイプの符号化</target>
        </trans-unit>
        <trans-unit id="0b5a28a401e5caa1731675ca56a84d444c15fa81" translate="yes" xml:space="preserve">
          <source>8.3. Type Encoding</source>
          <target state="translated">8.3.型の符号化</target>
        </trans-unit>
        <trans-unit id="f6228ff4737811227a708bc22b6ff3a77b75cceb" translate="yes" xml:space="preserve">
          <source>8.3.1 Legacy Type Encoding</source>
          <target state="translated">8.3.1 レガシー型エンコーディング</target>
        </trans-unit>
        <trans-unit id="7bec6b4bee7afdb83a43730a9fe5c4d6d085e864" translate="yes" xml:space="preserve">
          <source>8.3.1. Legacy Type Encoding</source>
          <target state="translated">8.3.1.レガシー型符号化</target>
        </trans-unit>
        <trans-unit id="5527244afdb6dfb3dca3ad889987c2fef987074e" translate="yes" xml:space="preserve">
          <source>8.3.2 &lt;code&gt;@encode&lt;/code&gt;</source>
          <target state="translated">8.3.2 &lt;code&gt;@encode&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="978fa94702c6bb2aa016de617938fd819d570db4" translate="yes" xml:space="preserve">
          <source>8.3.2 @encode</source>
          <target state="translated">8.3.2 @encode</target>
        </trans-unit>
        <trans-unit id="4493f310bc1651626e01d4c07ee677385159442c" translate="yes" xml:space="preserve">
          <source>8.3.2. @encode</source>
          <target state="translated">8.3.2.エンコード</target>
        </trans-unit>
        <trans-unit id="e76f8c08ebb07739970dc34b59461ba675ae7b31" translate="yes" xml:space="preserve">
          <source>8.3.3 Method Signatures</source>
          <target state="translated">8.3.3 メソッドシグネチャ</target>
        </trans-unit>
        <trans-unit id="0cd2b9090f85dc474192078b9cdd2977a7b93ce8" translate="yes" xml:space="preserve">
          <source>8.3.3. Method Signatures</source>
          <target state="translated">8.3.3.メソッドのシグネチャ</target>
        </trans-unit>
        <trans-unit id="8dc0bdb621513ef296dfe1ccb8a8e69178e55c00" translate="yes" xml:space="preserve">
          <source>8.4 Garbage Collection</source>
          <target state="translated">8.4 ゴミの収集</target>
        </trans-unit>
        <trans-unit id="f07f1c7fc14cbe1fbcf43d8205938600aba5fb3a" translate="yes" xml:space="preserve">
          <source>8.4. Garbage Collection</source>
          <target state="translated">8.4.ゴミの収集</target>
        </trans-unit>
        <trans-unit id="7a1c9992cbe3a8eb5bac4598d41c0f55497fcfd0" translate="yes" xml:space="preserve">
          <source>8.5 Constant String Objects</source>
          <target state="translated">8.5 定数文字列オブジェクト</target>
        </trans-unit>
        <trans-unit id="4a2eeb0e04646c0d1d5dde7596bb4e3ab441cf85" translate="yes" xml:space="preserve">
          <source>8.5. Constant String Objects</source>
          <target state="translated">8.5.定数文字列オブジェクト</target>
        </trans-unit>
        <trans-unit id="1ad03b99d44944113a02e8b2d43422e1fb50690e" translate="yes" xml:space="preserve">
          <source>8.6 &lt;code&gt;compatibility_alias&lt;/code&gt;</source>
          <target state="translated">8.6 &lt;code&gt;compatibility_alias&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="16a6371cd4eb99b88acbb876c48214d1528996b9" translate="yes" xml:space="preserve">
          <source>8.6 compatibility_alias</source>
          <target state="translated">8.6 互換性</target>
        </trans-unit>
        <trans-unit id="68169a32cc1b2c0d8e0fdd12ac28ee8a4f88ccd1" translate="yes" xml:space="preserve">
          <source>8.6. compatibility_alias</source>
          <target state="translated">8.6.互換性</target>
        </trans-unit>
        <trans-unit id="477e0b2d2877013fc309d42abd04b7a7fac95b0e" translate="yes" xml:space="preserve">
          <source>8.7 Exceptions</source>
          <target state="translated">8.7 例外</target>
        </trans-unit>
        <trans-unit id="16af8614813519947458cd70b76429228a166bf8" translate="yes" xml:space="preserve">
          <source>8.7. Exceptions</source>
          <target state="translated">8.7.例外</target>
        </trans-unit>
        <trans-unit id="74543d3119c6680f587a9317c42b3e80f7812525" translate="yes" xml:space="preserve">
          <source>8.8 Synchronization</source>
          <target state="translated">8.8 同期化</target>
        </trans-unit>
        <trans-unit id="083f9b1455cca391952297e65a5f3c8e7fb0c091" translate="yes" xml:space="preserve">
          <source>8.8. Synchronization</source>
          <target state="translated">8.8.同期化</target>
        </trans-unit>
        <trans-unit id="7338c2122f2c6512086917a88263a1ffa319037d" translate="yes" xml:space="preserve">
          <source>8.9 Fast Enumeration</source>
          <target state="translated">8.9 高速列挙</target>
        </trans-unit>
        <trans-unit id="ec7154738dfa0ae117df4872a446a28e2a0711e7" translate="yes" xml:space="preserve">
          <source>8.9. Fast Enumeration</source>
          <target state="translated">8.9.高速な列挙</target>
        </trans-unit>
        <trans-unit id="c5c48c9ddc1c6eec5370a9f3cc1d2da53b4277bc" translate="yes" xml:space="preserve">
          <source>8.9.1 Using Fast Enumeration</source>
          <target state="translated">8.9.1 高速列挙の使用</target>
        </trans-unit>
        <trans-unit id="6ad2c7a48f39c65d867329ec2c7335528dcac484" translate="yes" xml:space="preserve">
          <source>8.9.1. Using Fast Enumeration</source>
          <target state="translated">8.9.1.高速列挙の使用</target>
        </trans-unit>
        <trans-unit id="d4e4b02de8979958bbc292a9013946837f1fa2de" translate="yes" xml:space="preserve">
          <source>8.9.2 C99-Like Fast Enumeration Syntax</source>
          <target state="translated">8.9.2 C99-Like 高速列挙構文</target>
        </trans-unit>
        <trans-unit id="c0c8d7e4c548cb334b0077b49fb8d7954fa1bc7a" translate="yes" xml:space="preserve">
          <source>8.9.2. C99-Like Fast Enumeration Syntax</source>
          <target state="translated">8.9.2.C99に似た高速列挙構文</target>
        </trans-unit>
        <trans-unit id="fc941982a158e238821dd94fbed3bb5cab331767" translate="yes" xml:space="preserve">
          <source>8.9.3 Fast Enumeration Details</source>
          <target state="translated">8.9.3 高速列挙の詳細</target>
        </trans-unit>
        <trans-unit id="1e69e987b4483c072c99556446bfbd580c89a6c7" translate="yes" xml:space="preserve">
          <source>8.9.3. Fast Enumeration Details</source>
          <target state="translated">8.9.3.高速列挙の詳細</target>
        </trans-unit>
        <trans-unit id="66afcdf52d12c5936c393d8a7d4415ca40641c8c" translate="yes" xml:space="preserve">
          <source>8.9.4 Fast Enumeration Protocol</source>
          <target state="translated">8.9.4 高速列挙プロトコル</target>
        </trans-unit>
        <trans-unit id="af86351ac19c6a92b0fadb75de17d30680748abf" translate="yes" xml:space="preserve">
          <source>8.9.4. Fast Enumeration Protocol</source>
          <target state="translated">8.9.4.高速列挙プロトコル</target>
        </trans-unit>
        <trans-unit id="2a24cd506294a07c6a0446f8badafaf3201f2507" translate="yes" xml:space="preserve">
          <source>9 Binary Compatibility</source>
          <target state="translated">9 バイナリ互換性</target>
        </trans-unit>
        <trans-unit id="aaf34f43b56348453c9670867bbe710bc4cff1f1" translate="yes" xml:space="preserve">
          <source>9-bit signed integer constant for load and store postincrements</source>
          <target state="translated">ロードおよびストアのポストインクリメント用の9ビット符号付き整数定数</target>
        </trans-unit>
        <trans-unit id="f5866ff425b2380665d4757e884a24f7c0c34afd" translate="yes" xml:space="preserve">
          <source>9. Binary Compatibility</source>
          <target state="translated">9.9.バイナリ互換性</target>
        </trans-unit>
        <trans-unit id="05a79f06cf3f67f726dae68d18a2290f6c9a50c9" translate="yes" xml:space="preserve">
          <source>:</source>
          <target state="translated">:</target>
        </trans-unit>
        <trans-unit id="0e96f6929feaa8c7f7735055f893a7b75a845c22" translate="yes" xml:space="preserve">
          <source>: even though it may help make the global offset table smaller, it trades 1 instruction for 4. With</source>
          <target state="translated">: even though it may help make the global offset table smaller, it trades 1 instruction for 4. With</target>
        </trans-unit>
        <trans-unit id="63347315fe8e655bf95e9a504d6fcbb0f9ecd9f0" translate="yes" xml:space="preserve">
          <source>: this header declares a public runtime API threading layer that is only provided by the GNU Objective-C runtime. It declares functions such as &lt;code&gt;objc_mutex_lock()&lt;/code&gt;, which provide a platform-independent set of threading functions.</source>
          <target state="translated">: this header declares a public runtime API threading layer that is only provided by the GNU Objective-C runtime. It declares functions such as &lt;code&gt;objc_mutex_lock()&lt;/code&gt;, which provide a platform-independent set of threading functions.</target>
        </trans-unit>
        <trans-unit id="30dd56b7640731d14fa9ecac2bbbbb504e1a5176" translate="yes" xml:space="preserve">
          <source>: this header declares most of the public runtime API functions allowing you to inspect and manipulate the Objective-C runtime data structures. These functions are fairly standardized across Objective-C runtimes and are almost identical to the Apple/NeXT Objective-C runtime ones. It does not declare functions in some specialized areas (constructing and forwarding message invocations, threading) which are in the other headers below. You have to include</source>
          <target state="translated">: this header declares most of the public runtime API functions allowing you to inspect and manipulate the Objective-C runtime data structures. These functions are fairly standardized across Objective-C runtimes and are almost identical to the Apple/NeXT Objective-C runtime ones. It does not declare functions in some specialized areas (constructing and forwarding message invocations, threading) which are in the other headers below. You have to include</target>
        </trans-unit>
        <trans-unit id="26a235338902d41d3db5491024b9576d18742880" translate="yes" xml:space="preserve">
          <source>: this header declares public functions used to construct, deconstruct and forward message invocations. Because messaging is done in quite a different way on different runtimes, functions in this header are specific to the GNU Objective-C runtime implementation.</source>
          <target state="translated">: this header declares public functions used to construct, deconstruct and forward message invocations. Because messaging is done in quite a different way on different runtimes, functions in this header are specific to the GNU Objective-C runtime implementation.</target>
        </trans-unit>
        <trans-unit id="5a3c29505625144ba68750995731439e9906fdd5" translate="yes" xml:space="preserve">
          <source>: this header declares some public functions related to Objective-C exceptions. For example functions in this header allow you to throw an Objective-C exception from plain C/C++ code.</source>
          <target state="translated">: this header declares some public functions related to Objective-C exceptions. For example functions in this header allow you to throw an Objective-C exception from plain C/C++ code.</target>
        </trans-unit>
        <trans-unit id="9e5ef08f873716700e594dd3a36d7d64d5272d49" translate="yes" xml:space="preserve">
          <source>: this header declares some public functions related to the Objective-C &lt;code&gt;@synchronized()&lt;/code&gt; syntax, allowing you to emulate an Objective-C &lt;code&gt;@synchronized()&lt;/code&gt; block in plain C/C++ code.</source>
          <target state="translated">: this header declares some public functions related to the Objective-C &lt;code&gt;@synchronized()&lt;/code&gt; syntax, allowing you to emulate an Objective-C &lt;code&gt;@synchronized()&lt;/code&gt; block in plain C/C++ code.</target>
        </trans-unit>
        <trans-unit id="7cc9c1a09bf135868f452e4dc5bbf2907bfed13f" translate="yes" xml:space="preserve">
          <source>: this is the basic Objective-C header file, defining the basic Objective-C types such as &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;Class&lt;/code&gt; and &lt;code&gt;BOOL&lt;/code&gt;. You have to include this header to do almost anything with Objective-C.</source>
          <target state="translated">: this is the basic Objective-C header file, defining the basic Objective-C types such as &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;Class&lt;/code&gt; and &lt;code&gt;BOOL&lt;/code&gt;. You have to include this header to do almost anything with Objective-C.</target>
        </trans-unit>
        <trans-unit id="e8c89b6d4332bd3369abe0522644501e5013a432" translate="yes" xml:space="preserve">
          <source>; higher levels are not, and must be explicitly requested.</source>
          <target state="translated">; higher levels are not, and must be explicitly requested.</target>
        </trans-unit>
        <trans-unit id="a66283a15e09823e79a5c6a663cf680f2ab5e710" translate="yes" xml:space="preserve">
          <source>; however, use of the backchain for debugging purposes usually requires that the whole binary is built with</source>
          <target state="translated">; however, use of the backchain for debugging purposes usually requires that the whole binary is built with</target>
        </trans-unit>
        <trans-unit id="2e840d8b6d6867941a2eee8b46c7d917829de2b1" translate="yes" xml:space="preserve">
          <source>; it causes the preprocessor to treat comments as tokens in their own right. For example, comments appearing at the start of what would be a directive line have the effect of turning that line into an ordinary source line, since the first token on the line is no longer a &amp;lsquo;</source>
          <target state="translated">; it causes the preprocessor to treat comments as tokens in their own right. For example, comments appearing at the start of what would be a directive line have the effect of turning that line into an ordinary source line, since the first token on the line is no longer a &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="fe9de4759d0dc5597c891d37b107703d1930a026" translate="yes" xml:space="preserve">
          <source>; it then defines &lt;code&gt;__STDC_HOSTED__&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt; and does not make assumptions about the meanings of function names from the standard library, with exceptions noted below. To build an OS kernel, you may well still need to make your own arrangements for linking and startup. See &lt;a href=&quot;c-dialect-options#C-Dialect-Options&quot;&gt;Options Controlling C Dialect&lt;/a&gt;.</source>
          <target state="translated">; it then defines &lt;code&gt;__STDC_HOSTED__&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt; and does not make assumptions about the meanings of function names from the standard library, with exceptions noted below. To build an OS kernel, you may well still need to make your own arrangements for linking and startup. See &lt;a href=&quot;c-dialect-options#C-Dialect-Options&quot;&gt;Options Controlling C Dialect&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0bd28d9793fcd7e9f0549371e16a97a1f053629f" translate="yes" xml:space="preserve">
          <source>; see &lt;a href=&quot;c_002b_002b-dialect-options#C_002b_002b-Dialect-Options&quot;&gt;Options Controlling C++ Dialect&lt;/a&gt;.</source>
          <target state="translated">; see &lt;a href=&quot;c_002b_002b-dialect-options#C_002b_002b-Dialect-Options&quot;&gt;Options Controlling C++ Dialect&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="50016dac566b707582c4b1fc771e52069b7a937b" translate="yes" xml:space="preserve">
          <source>; the corrections are also applied with</source>
          <target state="translated">; the corrections are also applied with</target>
        </trans-unit>
        <trans-unit id="3eb04dcb759dd8c0995915b2a5ccb10d6a327b33" translate="yes" xml:space="preserve">
          <source>; the same rule applies to macros defined this way.</source>
          <target state="translated">; the same rule applies to macros defined this way.</target>
        </trans-unit>
        <trans-unit id="00b878f7746de72103ac67a35f0e1d78575bcec7" translate="yes" xml:space="preserve">
          <source>; they do not have this problem.</source>
          <target state="translated">; they do not have this problem.</target>
        </trans-unit>
        <trans-unit id="39de10441f5a92f5c2ca38349b7c2fdec8841dcf" translate="yes" xml:space="preserve">
          <source>; this option implies</source>
          <target state="translated">; this option implies</target>
        </trans-unit>
        <trans-unit id="1989c55c1ff2b01f4215828caa4538ad66beba83" translate="yes" xml:space="preserve">
          <source>; to obtain all the diagnostics required by the standard, you should also specify</source>
          <target state="translated">; to obtain all the diagnostics required by the standard, you should also specify</target>
        </trans-unit>
        <trans-unit id="a73b42f7298a4e09fb1e0072c5f63bdced6b9b8c" translate="yes" xml:space="preserve">
          <source>; when linking, it links in a special thread helper library</source>
          <target state="translated">; when linking, it links in a special thread helper library</target>
        </trans-unit>
        <trans-unit id="06561510744788a1609ec5f60662cc5908d39e15" translate="yes" xml:space="preserve">
          <source>; you should not need to use it for anything else.</source>
          <target state="translated">; you should not need to use it for anything else.</target>
        </trans-unit>
        <trans-unit id="431058a2491fcbde34064009eece9653a8f5b829" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Example&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;Example&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="01d7c1c3eb993c58806b746668090c8a26bb75db" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Limitations and caveats&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;制限と警告&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="0424675c89789c8478a359447a9eeb880c777989" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[basic.start.init]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;[basic.start.init]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="e3b972f187fc77684d7b4caf8cb567979becf9f7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[basic.start.main]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;[basic.start.main]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="b883af22766032bc16303da205cb38fbd19479e1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[basic.start.term]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;[basic.start.term]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="b18fcd33e6f11059c9a572ef77f16711d1475704" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[basic.stc.static]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;[basic.stc.static]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="0fc91ea62596ffaa9b88e5f5653a875441113bac" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[basic.stc.thread]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;[basic.stc.thread]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="13e2f1e5179d31ce813b6d9c962af8d8f15a52b2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[basic.stc]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;[basic.stc]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="082e6d5681614613f1cf46008d31795e30341ce2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[class.mem]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;[class.mem]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="20a71e88049b10a9036fc51e894c28860a33cdaf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[dcl.stc]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;[dcl.stc]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="51818883b235ce777320b575e0bf8025965510ba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[intro.execution]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;[intro.execution]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="1a31fbd2e2b9c5c3bb615b7491f612d5a707c3ac" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;[lex.key]&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;[lex.key]&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="5cc4701ea1dbc7c0ae0a60db0f72537871372ebf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;![16,16i]&lt;/code&gt; (alignment depends on the machine)</source>
          <target state="translated">&lt;code&gt;![16,16i]&lt;/code&gt; (alignment depends on the machine)</target>
        </trans-unit>
        <trans-unit id="cffc58ac2d212878e6c4d3afeb9026603af158fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma interface&lt;/code&gt; and &lt;code&gt;#pragma implementation&lt;/code&gt; provide the user with a way of explicitly directing the compiler to emit entities with vague linkage (and debugging information) in a particular translation unit.</source>
          <target state="translated">&lt;code&gt;#pragma interface&lt;/code&gt; and &lt;code&gt;#pragma implementation&lt;/code&gt; provide the user with a way of explicitly directing the compiler to emit entities with vague linkage (and debugging information) in a particular translation unit.</target>
        </trans-unit>
        <trans-unit id="2569b071a9af441d9b6296aa268b56f40df7cca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma ms_struct off&lt;/code&gt; turns off the Microsoft layout.</source>
          <target state="translated">&lt;code&gt;#pragma ms_struct off&lt;/code&gt; turns off the Microsoft layout.</target>
        </trans-unit>
        <trans-unit id="5e363473f488b7983412e972ce0eac0f09b14174" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma ms_struct on&lt;/code&gt; turns on the Microsoft layout.</source>
          <target state="translated">&lt;code&gt;#pragma ms_struct on&lt;/code&gt; turns on the Microsoft layout.</target>
        </trans-unit>
        <trans-unit id="107cfa70f66f6e21716326b44d8c2543bd277a0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma ms_struct reset&lt;/code&gt; goes back to the default layout.</source>
          <target state="translated">&lt;code&gt;#pragma ms_struct reset&lt;/code&gt; goes back to the default layout.</target>
        </trans-unit>
        <trans-unit id="359f3157fca41c8df8f6c827d78d1920672257ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma pack()&lt;/code&gt; sets the alignment to the one that was in effect when compilation started (see also command-line option</source>
          <target state="translated">&lt;code&gt;#pragma pack()&lt;/code&gt; sets the alignment to the one that was in effect when compilation started (see also command-line option</target>
        </trans-unit>
        <trans-unit id="2da8592b5f1ca4f7c8ec146ce07922d1be68b588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma pack(&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; simply sets the new alignment.</source>
          <target state="translated">&lt;code&gt;#pragma pack(&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; simply sets the new alignment.</target>
        </trans-unit>
        <trans-unit id="09cd1961f6ec088315967f82b215657a1847a8f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma pack(pop)&lt;/code&gt; restores the alignment setting to the one saved at the top of the internal stack (and removes that stack entry). Note that &lt;code&gt;#pragma pack([&lt;var&gt;n&lt;/var&gt;])&lt;/code&gt; does not influence this internal stack; thus it is possible to have &lt;code&gt;#pragma pack(push)&lt;/code&gt; followed by multiple &lt;code&gt;#pragma pack(&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; instances and finalized by a single &lt;code&gt;#pragma pack(pop)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;#pragma pack(pop)&lt;/code&gt; restores the alignment setting to the one saved at the top of the internal stack (and removes that stack entry). Note that &lt;code&gt;#pragma pack([&lt;var&gt;n&lt;/var&gt;])&lt;/code&gt; does not influence this internal stack; thus it is possible to have &lt;code&gt;#pragma pack(push)&lt;/code&gt; followed by multiple &lt;code&gt;#pragma pack(&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; instances and finalized by a single &lt;code&gt;#pragma pack(pop)&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="c1f4e8456ee450b615ff464f6ff9615991f7f956" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma pack(push[,&lt;var&gt;n&lt;/var&gt;])&lt;/code&gt; pushes the current alignment setting on an internal stack and then optionally sets the new alignment.</source>
          <target state="translated">&lt;code&gt;#pragma pack(push[,&lt;var&gt;n&lt;/var&gt;])&lt;/code&gt; pushes the current alignment setting on an internal stack and then optionally sets the new alignment.</target>
        </trans-unit>
        <trans-unit id="8d404d78e391f3edc2a1e7fe1018546d3f145abe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma scalar_storage_order big-endian&lt;/code&gt; sets the storage order of the scalar fields to big-endian.</source>
          <target state="translated">&lt;code&gt;#pragma scalar_storage_order big-endian&lt;/code&gt; sets the storage order of the scalar fields to big-endian.</target>
        </trans-unit>
        <trans-unit id="791d1af4df580d4926f6784307622e913fe6169f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma scalar_storage_order default&lt;/code&gt; goes back to the endianness that was in effect when compilation started (see also command-line option</source>
          <target state="translated">&lt;code&gt;#pragma scalar_storage_order default&lt;/code&gt; goes back to the endianness that was in effect when compilation started (see also command-line option</target>
        </trans-unit>
        <trans-unit id="9e92ce5f2b8e8dd2da4f3a23c57c175f27849093" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#pragma scalar_storage_order little-endian&lt;/code&gt; sets the storage order of the scalar fields to little-endian.</source>
          <target state="translated">&lt;code&gt;#pragma scalar_storage_order little-endian&lt;/code&gt; sets the storage order of the scalar fields to little-endian.</target>
        </trans-unit>
        <trans-unit id="d7b3947b00665c0273f8ee03de6b46c48b82e923" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+load&lt;/code&gt; is to be used only as a last resort. Because it is executed very early, most of the Objective-C runtime machinery will not be ready when &lt;code&gt;+load&lt;/code&gt; is executed; hence &lt;code&gt;+load&lt;/code&gt; works best for executing C code that is independent on the Objective-C runtime.</source>
          <target state="translated">&lt;code&gt;+load&lt;/code&gt; is to be used only as a last resort. Because it is executed very early, most of the Objective-C runtime machinery will not be ready when &lt;code&gt;+load&lt;/code&gt; is executed; hence &lt;code&gt;+load&lt;/code&gt; works best for executing C code that is independent on the Objective-C runtime.</target>
        </trans-unit>
        <trans-unit id="2a3b66c50c6331da3456637374283bba0d9341b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-2147483648&lt;/code&gt; is positive.</source>
          <target state="translated">&lt;code&gt;-2147483648&lt;/code&gt; is positive.</target>
        </trans-unit>
        <trans-unit id="ff73f3bc9136cfe683f6e1000d6ea1e5f0b6d324" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0xFF&lt;/code&gt; or &lt;code&gt;0xFFFF&lt;/code&gt;, for andsi as a zero-extending move.</source>
          <target state="translated">&lt;code&gt;0xFF&lt;/code&gt; または &lt;code&gt;0xFFFF&lt;/code&gt; 、andsiはゼロ拡張移動として。</target>
        </trans-unit>
        <trans-unit id="69970b695b65687a239461624104cc1d44b36e13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;100&lt;/code&gt;, &lt;code&gt;102&lt;/code&gt;, &lt;code&gt;103&lt;/code&gt;, &lt;code&gt;104&lt;/code&gt;, &lt;code&gt;105&lt;/code&gt;, &lt;code&gt;106&lt;/code&gt;, &lt;code&gt;107&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;100&lt;/code&gt; 、 &lt;code&gt;102&lt;/code&gt; 、 &lt;code&gt;103&lt;/code&gt; 、 &lt;code&gt;104&lt;/code&gt; 、 &lt;code&gt;105&lt;/code&gt; 、 &lt;code&gt;106&lt;/code&gt; 、 &lt;code&gt;107&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f94cae98ac3d64f04d19f0b2e99e2c0a60564f25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&lt;/code&gt;, &lt;code&gt;25&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt;, &lt;code&gt;31&lt;/code&gt;, &lt;code&gt;35&lt;/code&gt;, &lt;code&gt;4&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;51&lt;/code&gt;, &lt;code&gt;6&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;2&lt;/code&gt; 、 &lt;code&gt;25&lt;/code&gt; 、 &lt;code&gt;3&lt;/code&gt; 、 &lt;code&gt;31&lt;/code&gt; 、 &lt;code&gt;35&lt;/code&gt; 、 &lt;code&gt;4&lt;/code&gt; 、 &lt;code&gt;5&lt;/code&gt; 、 &lt;code&gt;51&lt;/code&gt; 、 &lt;code&gt;6&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1bd49a42c06dc5b5614602b595d1eb861097847b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;var&gt;collection expression&lt;/var&gt;&lt;/code&gt; is evaluated exactly once and the result is used as the collection object to iterate over. This means it is safe to write code such as &lt;code&gt;for (object in [NSDictionary
keyEnumerator]) &amp;hellip;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;collection expression&lt;/var&gt;&lt;/code&gt; は1回だけ評価され、結果はコレクションオブジェクトとして使用され、繰り返し処理されます。これは、 &lt;code&gt;for (object in [NSDictionary keyEnumerator]) &amp;hellip;&lt;/code&gt; などのコードを記述しても安全であることを意味します。</target>
        </trans-unit>
        <trans-unit id="3eba358d191709438321ae5dbb3501eb47389e2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;var&gt;statements&lt;/var&gt;&lt;/code&gt; can contain &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; commands, which will abort the iteration or skip to the next loop iteration as expected.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;statements&lt;/var&gt;&lt;/code&gt; は、 &lt;code&gt;break&lt;/code&gt; コマンドと &lt;code&gt;continue&lt;/code&gt; コマンドを含めることができます。これらのコマンドは、反復を中止するか、次のループ反復にスキップします。</target>
        </trans-unit>
        <trans-unit id="61531b33eb2db1449ceab15f5f279c4b2f1791b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;var&gt;statements&lt;/var&gt;&lt;/code&gt; must not make any changes to the collection object; if they do, it is a hard error and the fast enumeration terminates by invoking &lt;code&gt;objc_enumerationMutation&lt;/code&gt;, a runtime function that normally aborts the program but which can be customized by Foundation libraries via &lt;code&gt;objc_set_mutation_handler&lt;/code&gt; to do something different, such as raising an exception.</source>
          <target state="translated">&lt;code&gt;&lt;var&gt;statements&lt;/var&gt;&lt;/code&gt; はコレクションオブジェクトに変更を加えてはなりません。もしそうなら、それはハードエラーであり、高速列挙は &lt;code&gt;objc_enumerationMutation&lt;/code&gt; を呼び出すことで終了します。objc_enumerationMutationは通常プログラムを &lt;code&gt;objc_set_mutation_handler&lt;/code&gt; しますが、例外を発生させるなど、何か別のことをするために objc_set_mutation_handlerを介してFoundationライブラリによってカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="9d58742173ee42448629f6db4422e3203e474e70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@encode&lt;/code&gt; does not support type qualifiers other than &lt;code&gt;const&lt;/code&gt;. For example, &lt;code&gt;@encode(const char*)&lt;/code&gt; is valid and is compiled into &lt;code&gt;&quot;r*&quot;&lt;/code&gt;, while &lt;code&gt;@encode(bycopy char *)&lt;/code&gt; is invalid and will cause a compilation error.</source>
          <target state="translated">&lt;code&gt;@encode&lt;/code&gt; does not support type qualifiers other than &lt;code&gt;const&lt;/code&gt;. For example, &lt;code&gt;@encode(const char*)&lt;/code&gt; is valid and is compiled into &lt;code&gt;&quot;r*&quot;&lt;/code&gt;, while &lt;code&gt;@encode(bycopy char *)&lt;/code&gt; is invalid and will cause a compilation error.</target>
        </trans-unit>
        <trans-unit id="06f7d071955d8af36c31b170590dbc2a8f025b17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt; through &lt;code&gt;L&lt;/code&gt; registers.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; から &lt;code&gt;L&lt;/code&gt; レジスタ。</target>
        </trans-unit>
        <trans-unit id="80d0c9344feef2e94b4f1747dfadf5bbe5585ef0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CPATH&lt;/code&gt; specifies a list of directories to be searched as if specified with</source>
          <target state="translated">&lt;code&gt;CPATH&lt;/code&gt; は、次のように指定した場合と同様に、検索するディレクトリのリストを指定します</target>
        </trans-unit>
        <trans-unit id="789e53d1b037b549885585694fb4b6c06a41dc94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GSWApplication&lt;/code&gt; (the real class) must be an existing class.</source>
          <target state="translated">&lt;code&gt;GSWApplication&lt;/code&gt; （実際のクラス）は既存のクラスでなければなりません。</target>
        </trans-unit>
        <trans-unit id="372485e67dabbb2f6f7563c915c0d05a5bb7796c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NXConstantString&lt;/code&gt; inherits from &lt;code&gt;Object&lt;/code&gt;; user class libraries may choose to inherit the customized constant string class from a different class than &lt;code&gt;Object&lt;/code&gt;. There is no requirement in the methods the constant string class has to implement, but the final ivar layout of the class must be the compatible with the given structure.</source>
          <target state="translated">&lt;code&gt;NXConstantString&lt;/code&gt; は &lt;code&gt;Object&lt;/code&gt; を継承しています。ユーザークラスライブラリは、 &lt;code&gt;Object&lt;/code&gt; とは異なるクラスからカスタマイズされた定数文字列クラスを継承することを選択できます。メソッドに定数文字列クラスが実装する必要がある要件はありませんが、クラスの最終的なivarレイアウトは、指定された構造と互換性がある必要があります。</target>
        </trans-unit>
        <trans-unit id="b73742c69a964b14887fe5c58b748cbc6ead8dbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; is a special modifier which prints the name of the full integer register without &lt;code&gt;%&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; は、 &lt;code&gt;%&lt;/code&gt; なしで完全な整数レジスタの名前を出力する特別な修飾子です。</target>
        </trans-unit>
        <trans-unit id="e9680743302272f4d21a0ca0fcf6f7d2fc4b4f89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WOApplication&lt;/code&gt; (the alias) must not be an existing class;</source>
          <target state="translated">&lt;code&gt;WOApplication&lt;/code&gt; （エイリアス）は既存のクラスであってはなりません。</target>
        </trans-unit>
        <trans-unit id="ee6195175737171e4b0021bc7dc79c772162ab99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__FUNCTION__&lt;/code&gt; is another name for &lt;code&gt;__func__&lt;/code&gt;, provided for backward compatibility with old versions of GCC.</source>
          <target state="translated">&lt;code&gt;__FUNCTION__&lt;/code&gt; is another name for &lt;code&gt;__func__&lt;/code&gt;, provided for backward compatibility with old versions of GCC.</target>
        </trans-unit>
        <trans-unit id="f2c1ea03a8f41c269c203f97859a30953067ac6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__attribute ((const))&lt;/code&gt; and &lt;code&gt;noreturn&lt;/code&gt; were mangled as type qualifiers, and &lt;code&gt;decltype&lt;/code&gt; of a plain declaration was folded away.</source>
          <target state="translated">&lt;code&gt;__attribute ((const))&lt;/code&gt; and &lt;code&gt;noreturn&lt;/code&gt; were mangled as type qualifiers, and &lt;code&gt;decltype&lt;/code&gt; of a plain declaration was folded away.</target>
        </trans-unit>
        <trans-unit id="31d52aa69bfef9deeeff9d7920e4c48f0f233481" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__builtin_mips_set_fcsr&lt;/code&gt; can be used to change any bit of the register except the condition codes, which GCC assumes are preserved.</source>
          <target state="translated">&lt;code&gt;__builtin_mips_set_fcsr&lt;/code&gt; can be used to change any bit of the register except the condition codes, which GCC assumes are preserved.</target>
        </trans-unit>
        <trans-unit id="dd0179ef987e379ce17d15225812657b396c054c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__const__&lt;/code&gt;, &lt;code&gt;__asm__&lt;/code&gt;, etc., for header files.</source>
          <target state="translated">&lt;code&gt;__const__&lt;/code&gt;, &lt;code&gt;__asm__&lt;/code&gt;, etc., for header files.</target>
        </trans-unit>
        <trans-unit id="7473df93d6fe52ceeeb6718adea22f662c95bc6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__float128&lt;/code&gt; is available on i386, x86_64, IA-64, and hppa HP-UX, as well as on PowerPC GNU/Linux targets that enable the vector scalar (VSX) instruction set. &lt;code&gt;__float128&lt;/code&gt; supports the 128-bit floating type. On i386, x86_64, PowerPC, and IA-64 other than HP-UX, &lt;code&gt;__float128&lt;/code&gt; is an alias for &lt;code&gt;_Float128&lt;/code&gt;. On hppa and IA-64 HP-UX, &lt;code&gt;__float128&lt;/code&gt; is an alias for &lt;code&gt;long
double&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;__float128&lt;/code&gt; is available on i386, x86_64, IA-64, and hppa HP-UX, as well as on PowerPC GNU/Linux targets that enable the vector scalar (VSX) instruction set. &lt;code&gt;__float128&lt;/code&gt; supports the 128-bit floating type. On i386, x86_64, PowerPC, and IA-64 other than HP-UX, &lt;code&gt;__float128&lt;/code&gt; is an alias for &lt;code&gt;_Float128&lt;/code&gt;. On hppa and IA-64 HP-UX, &lt;code&gt;__float128&lt;/code&gt; is an alias for &lt;code&gt;long
double&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="ffb2bf9a670bef293cfa77a116c8f843376e5401" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__float80&lt;/code&gt; is available on the i386, x86_64, and IA-64 targets, and supports the 80-bit (&lt;code&gt;XFmode&lt;/code&gt;) floating type. It is an alias for the type name &lt;code&gt;_Float64x&lt;/code&gt; on these targets.</source>
          <target state="translated">&lt;code&gt;__float80&lt;/code&gt; is available on the i386, x86_64, and IA-64 targets, and supports the 80-bit (&lt;code&gt;XFmode&lt;/code&gt;) floating type. It is an alias for the type name &lt;code&gt;_Float64x&lt;/code&gt; on these targets.</target>
        </trans-unit>
        <trans-unit id="7ec6ed15db3de1e0e785dbadf3953c59dadef3f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__ibm128&lt;/code&gt; is available on PowerPC targets, and provides access to the IBM extended double format which is the current format used for &lt;code&gt;long double&lt;/code&gt;. When &lt;code&gt;long double&lt;/code&gt; transitions to &lt;code&gt;__float128&lt;/code&gt; on PowerPC in the future, &lt;code&gt;__ibm128&lt;/code&gt; will remain for use in conversions between the two types.</source>
          <target state="translated">&lt;code&gt;__ibm128&lt;/code&gt; is available on PowerPC targets, and provides access to the IBM extended double format which is the current format used for &lt;code&gt;long double&lt;/code&gt;. When &lt;code&gt;long double&lt;/code&gt; transitions to &lt;code&gt;__float128&lt;/code&gt; on PowerPC in the future, &lt;code&gt;__ibm128&lt;/code&gt; will remain for use in conversions between the two types.</target>
        </trans-unit>
        <trans-unit id="9e3a9ed7baa3bf65df3ff05f513613983a9587ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;acc&lt;/code&gt; arguments are evaluated at compile time and specify the number of an accumulator register. For example, an &lt;code&gt;acc&lt;/code&gt; argument of 2 selects the ACC2 register.</source>
          <target state="translated">&lt;code&gt;acc&lt;/code&gt; 引数はコンパイル時に評価され、アキュムレータレジスタの数を指定します。たとえば、 &lt;code&gt;acc&lt;/code&gt; 引数2はACC2レジスタを選択します。</target>
        </trans-unit>
        <trans-unit id="15fdbd93cf947c8849cb1d5a35f4090a626ff637" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt; needs to be an Objective-C object (usually a collection object, for example an array, a dictionary or a set) which implements the &amp;ldquo;Fast Enumeration Protocol&amp;rdquo; (see below). If you are using a Foundation library such as GNUstep Base or Apple Cocoa Foundation, all collection objects in the library implement this protocol and can be used in this way.</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; は、「高速列挙プロトコル」を実装するObjective-Cオブジェクト（通常は、配列、辞書、セットなどのコレクションオブジェクト）である必要があります（以下を参照）。 GNUstep BaseやApple Cocoa FoundationなどのFoundationライブラリを使用している場合は、ライブラリ内のすべてのコレクションオブジェクトがこのプロトコルを実装しており、この方法で使用できます。</target>
        </trans-unit>
        <trans-unit id="426e3d34f5d2b8cc641dc2d655c2412b3ba31507" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asm goto&lt;/code&gt; allows assembly code to jump to one or more C labels. The &lt;var&gt;GotoLabels&lt;/var&gt; section in an &lt;code&gt;asm goto&lt;/code&gt; statement contains a comma-separated list of all C labels to which the assembler code may jump. GCC assumes that &lt;code&gt;asm&lt;/code&gt; execution falls through to the next statement (if this is not the case, consider using the &lt;code&gt;__builtin_unreachable&lt;/code&gt; intrinsic after the &lt;code&gt;asm&lt;/code&gt; statement). Optimization of &lt;code&gt;asm goto&lt;/code&gt; may be improved by using the &lt;code&gt;hot&lt;/code&gt; and &lt;code&gt;cold&lt;/code&gt; label attributes (see &lt;a href=&quot;label-attributes#Label-Attributes&quot;&gt;Label Attributes&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;asm goto&lt;/code&gt; により、アセンブリコードは1つ以上のCラベルにジャンプできます。 &lt;code&gt;asm goto&lt;/code&gt; ステートメントの &lt;var&gt;GotoLabels&lt;/var&gt; セクションには、アセンブラコードがジャンプするすべてのCラベルのコンマ区切りのリストが含まれています。 GCCは、 &lt;code&gt;asm&lt;/code&gt; の実行が次のステートメントまで進むと想定します（そうでない場合は、 &lt;code&gt;asm&lt;/code&gt; ステートメントの後に &lt;code&gt;__builtin_unreachable&lt;/code&gt; コンパイラ組み込み関数を使用することを検討してください）。最適化 &lt;code&gt;asm goto&lt;/code&gt; 使用することによって改善することができる &lt;code&gt;hot&lt;/code&gt; と &lt;code&gt;cold&lt;/code&gt; （参照ラベル属性&lt;a href=&quot;label-attributes#Label-Attributes&quot;&gt;ラベル属性&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c9823fe22f97e1ec190b250dc2a2fdf94a1ee857" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asm&lt;/code&gt; statements may not perform jumps into other &lt;code&gt;asm&lt;/code&gt; statements, only to the listed &lt;var&gt;GotoLabels&lt;/var&gt;. GCC&amp;rsquo;s optimizers do not know about other jumps; therefore they cannot take account of them when deciding how to optimize.</source>
          <target state="translated">&lt;code&gt;asm&lt;/code&gt; ステートメントは、他の &lt;code&gt;asm&lt;/code&gt; ステートメントへのジャンプを実行できません。リストされている &lt;var&gt;GotoLabels&lt;/var&gt; へのジャンプのみを実行できます。GCCのオプティマイザは他のジャンプについては知りません。したがって、最適化の方法を決定するときにそれらを考慮することはできません。</target>
        </trans-unit>
        <trans-unit id="62977bb50d3c5a19ea5904a3a299ffd7ea5dbd29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asm&lt;/code&gt; statements may not perform jumps into other &lt;code&gt;asm&lt;/code&gt; statements. GCC does not know about these jumps, and therefore cannot take account of them when deciding how to optimize. Jumps from &lt;code&gt;asm&lt;/code&gt; to C labels are only supported in extended &lt;code&gt;asm&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;asm&lt;/code&gt; ステートメントは、他の &lt;code&gt;asm&lt;/code&gt; ステートメントへのジャンプを実行できません。GCCはこれらのジャンプについて認識していないため、最適化の方法を決定するときにそれらを考慮することができません。 &lt;code&gt;asm&lt;/code&gt; からCラベルへのジャンプは、拡張 &lt;code&gt;asm&lt;/code&gt; でのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="c9448d646265094e46fad56b4a1ad54b2c75f890" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asm&lt;/code&gt; supports operand modifiers on operands (for example &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;asm&lt;/code&gt; は、オペランドのオペランド修飾子をサポートします（たとえば、 '</target>
        </trans-unit>
        <trans-unit id="47c475345b4b6683f86ef0bd1304fa403571227e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b&lt;/code&gt; followed by the starting position of the bit-field, the type of the bit-field and the size of the bit-field (the bit-fields encoding was changed from the NeXT&amp;rsquo;s compiler encoding, see below)</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; に続いて、ビットフィールドの開始位置、ビットフィールドのタイプ、およびビットフィールドのサイズ（ビットフィールドエンコーディングは、NeXTのコンパイラエンコーディングから変更されました。以下を参照してください）</target>
        </trans-unit>
        <trans-unit id="fd931d3282f78cf10b6e109fc3d87523a40b1c70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const int*&lt;/code&gt; is a pointer to a &lt;code&gt;const int&lt;/code&gt;, and so is encoded as &lt;code&gt;^ri&lt;/code&gt;. &lt;code&gt;int* const&lt;/code&gt;, instead, is a &lt;code&gt;const&lt;/code&gt; pointer to an &lt;code&gt;int&lt;/code&gt;, and so is encoded as &lt;code&gt;r^i&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;const int*&lt;/code&gt; へのポインタで &lt;code&gt;const int&lt;/code&gt; 、およびように符号化されている &lt;code&gt;^ri&lt;/code&gt; 。代わりに、 &lt;code&gt;int* const&lt;/code&gt; は &lt;code&gt;int&lt;/code&gt; への &lt;code&gt;const&lt;/code&gt; ポインターであるため、 &lt;code&gt;r^i&lt;/code&gt; としてエンコードされます。</target>
        </trans-unit>
        <trans-unit id="8cc303077f2d42536c4b3baafc5729fd35626b25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; arguments represent immediate operands in the underlying FR-V instructions. They must be compile-time constants.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; 引数は、基になるFR-V命令の即値オペランドを表します。それらはコンパイル時の定数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="deb6088d1e3cb9956bb32715c4b9b0433c0fb80e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decltype(nullptr)&lt;/code&gt; incorrectly had an alignment of 1, leading to unaligned accesses. Note that this did not affect the ABI of a function with a &lt;code&gt;nullptr_t&lt;/code&gt; parameter, as parameters have a minimum alignment.</source>
          <target state="translated">&lt;code&gt;decltype(nullptr)&lt;/code&gt; のアライメントが誤って1になり、アライメントされていないアクセスが発生しました。パラメータが最小の整列を持っているため、これは &lt;code&gt;nullptr_t&lt;/code&gt; パラメータを持つ関数のABIに影響を与えなかったことに注意してください。</target>
        </trans-unit>
        <trans-unit id="13371da4b8a0998cda9c846517eca9aac42602d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enum foo;&lt;/code&gt;, with details to follow.</source>
          <target state="translated">&lt;code&gt;enum foo;&lt;/code&gt; 、詳細が続きます。</target>
        </trans-unit>
        <trans-unit id="9e91e48e9653d7d4d932a05bfbd83b09588c7939" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enum&lt;/code&gt;s are always encoded as &amp;rsquo;i&amp;rsquo; (int) even if they are actually unsigned or long.</source>
          <target state="translated">&lt;code&gt;enum&lt;/code&gt; は、実際に符号なしまたは長い場合でも、常に「i」（int）としてエンコードされます。</target>
        </trans-unit>
        <trans-unit id="9a12395e61d19efb5c294812d6196468603d44b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; declarations are not affected by</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt; 宣言は影響を受けません</target>
        </trans-unit>
        <trans-unit id="4b6de559d80875c4a2043040ec9b3a928c196dad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;float&lt;/code&gt; for return type and parameter type</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 戻り値の型とパラメーターの型の浮動小数点数</target>
        </trans-unit>
        <trans-unit id="43f52ce2765906e82519d10c80ebb890c471c9d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcc&lt;/code&gt; is a driver program. It performs its job by invoking a sequence of other programs to do the work of compiling, assembling and linking. GCC interprets its command-line parameters and uses these to deduce which programs it should invoke, and which command-line options it ought to place on their command lines. This behavior is controlled by &lt;em&gt;spec strings&lt;/em&gt;. In most cases there is one spec string for each program that GCC can invoke, but a few programs have multiple spec strings to control their behavior. The spec strings built into GCC can be overridden by using the</source>
          <target state="translated">&lt;code&gt;gcc&lt;/code&gt; はドライバープログラムです。他の一連のプログラムを呼び出して、コンパイル、アセンブル、およびリンクの作業を行うことにより、その役割を果たします。GCCはコマンドラインパラメータを解釈し、これらを使用して、呼び出すプログラムと、コマンドラインに配置する必要があるコマンドラインオプションを推定します。この動作は、&lt;em&gt;スペック文字列&lt;/em&gt;によって制御され&lt;em&gt;ます&lt;/em&gt;。ほとんどの場合、GCCが呼び出すことができるプログラムごとに1つの仕様文字列がありますが、いくつかのプログラムは、その動作を制御する複数の仕様文字列を持っています。GCCに組み込まれた仕様文字列は、</target>
        </trans-unit>
        <trans-unit id="78e0e9f2c419ee9f240f0845bc755717d55d3a97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov-dump&lt;/code&gt; accepts the following options:</source>
          <target state="translated">&lt;code&gt;gcov-dump&lt;/code&gt; は次のオプションを受け入れます。</target>
        </trans-unit>
        <trans-unit id="57d6fe4b10a5a2126cbfcec6595777a79798d69e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov-dump&lt;/code&gt; is a tool you can use in conjunction with GCC to dump content of gcda and gcno profile files offline.</source>
          <target state="translated">&lt;code&gt;gcov-dump&lt;/code&gt; は、GCCと組み合わせて使用​​して、gcdaおよびgcnoプロファイルファイルのコンテンツをオフラインでダンプできるツールです。</target>
        </trans-unit>
        <trans-unit id="2878b99530b4f0ab8508c0886d2f8099475e075b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov-dump&lt;/code&gt;&amp;mdash;an offline gcda and gcno profile dump tool.</source>
          <target state="translated">&lt;code&gt;gcov-dump&lt;/code&gt; dump-オフラインのgcdaおよびgcnoプロファイルダンプツール。</target>
        </trans-unit>
        <trans-unit id="8557e16ee11b3bb8a6161e3b196a98d4d9ef3676" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov-tool&lt;/code&gt; accepts the following options:</source>
          <target state="translated">&lt;code&gt;gcov-tool&lt;/code&gt; は次のオプションを受け入れます。</target>
        </trans-unit>
        <trans-unit id="834e3a72a863342de668198a9b180e31689bb9fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov-tool&lt;/code&gt; is a tool you can use in conjunction with GCC to manipulate or process gcda profile files offline.</source>
          <target state="translated">&lt;code&gt;gcov-tool&lt;/code&gt; は、GCCと組み合わせて使用​​して、gcdaプロファイルファイルをオフラインで操作または処理できるツールです。</target>
        </trans-unit>
        <trans-unit id="8966e78c51b409536bc0ea171add9c067eaae6cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov-tool&lt;/code&gt; is an offline tool to process gcc&amp;rsquo;s gcda profile files.</source>
          <target state="translated">&lt;code&gt;gcov-tool&lt;/code&gt; は、gccのgcdaプロファイルファイルを処理するオフラインツールです。</target>
        </trans-unit>
        <trans-unit id="70183d08ebe3785a624a3a0d2f54f5da4fcf92c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov-tool&lt;/code&gt;&amp;mdash;an offline gcda profile processing program.</source>
          <target state="translated">&lt;code&gt;gcov-tool&lt;/code&gt; &amp;mdash;オフラインのgcdaプロファイル処理プログラム。</target>
        </trans-unit>
        <trans-unit id="432fd55f9f3348b69e564e9e68b9ac68338b2330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov&lt;/code&gt; accepts the following options:</source>
          <target state="translated">&lt;code&gt;gcov&lt;/code&gt; は次のオプションを受け入れます。</target>
        </trans-unit>
        <trans-unit id="ef7fa5c92c81ba37950cfb7081e034b38df44ee1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov&lt;/code&gt; creates a logfile called</source>
          <target state="translated">&lt;code&gt;gcov&lt;/code&gt; は、</target>
        </trans-unit>
        <trans-unit id="fa86b3b9c4851aca0143ed5eebf12b37ac982caa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov&lt;/code&gt; is a test coverage program. Use it in concert with GCC to analyze your programs to help create more efficient, faster running code and to discover untested parts of your program. You can use &lt;code&gt;gcov&lt;/code&gt; as a profiling tool to help discover where your optimization efforts will best affect your code. You can also use &lt;code&gt;gcov&lt;/code&gt; along with the other profiling tool, &lt;code&gt;gprof&lt;/code&gt;, to assess which parts of your code use the greatest amount of computing time.</source>
          <target state="translated">&lt;code&gt;gcov&lt;/code&gt; はテストカバレッジプログラムです。これをGCCと組み合わせて使用​​してプログラムを分析し、より効率的で高速に実行されるコードを作成し、プログラムのテストされていない部分を発見します。 &lt;code&gt;gcov&lt;/code&gt; をプロファイリングツールとして使用して、最適化の取り組みがコードに最も影響を与える場所を見つけることができます。 &lt;code&gt;gcov&lt;/code&gt; を他のプロファイリングツール &lt;code&gt;gprof&lt;/code&gt; と一緒に使用して、コードのどの部分が計算時間を最も多く使用しているかを評価することもできます。</target>
        </trans-unit>
        <trans-unit id="ec4c7d87db361b8b7217252e79155f330d87180c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov&lt;/code&gt; is a tool you can use in conjunction with GCC to test code coverage in your programs.</source>
          <target state="translated">&lt;code&gt;gcov&lt;/code&gt; は、プログラムのコードカバレッジをテストするためにGCCと組み合わせて使用​​できるツールです。</target>
        </trans-unit>
        <trans-unit id="74c1eaafeae6a0c3622569a9b97608b21c035122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov&lt;/code&gt; should be run with the current directory the same as that when you invoked the compiler. Otherwise it will not be able to locate the source files. &lt;code&gt;gcov&lt;/code&gt; produces files called</source>
          <target state="translated">&lt;code&gt;gcov&lt;/code&gt; は、コンパイラーを起動したときと同じ現在のディレクトリで実行する必要があります。そうしないと、ソースファイルを見つけることができません。 &lt;code&gt;gcov&lt;/code&gt; は、</target>
        </trans-unit>
        <trans-unit id="54f992c071dcdc4cf317b5dc2c2e8150dab3baed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov&lt;/code&gt; uses two files for profiling. The names of these files are derived from the original &lt;em&gt;object&lt;/em&gt; file by substituting the file suffix with either</source>
          <target state="translated">&lt;code&gt;gcov&lt;/code&gt; は、プロファイリングに2つのファイルを使用します。これらのファイルの名前は、ファイルサフィックスを次のいずれかで置き換えることにより、元の&lt;em&gt;オブジェクト&lt;/em&gt;ファイルから派生します。</target>
        </trans-unit>
        <trans-unit id="e0e281a8c455e080b9c9615f521b0af9f3afc81d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov&lt;/code&gt; works only on code compiled with GCC. It is not compatible with any other profiling or test coverage mechanism.</source>
          <target state="translated">&lt;code&gt;gcov&lt;/code&gt; は、GCCでコンパイルされたコードでのみ機能します。他のプロファイリングやテストカバレッジメカニズムとは互換性がありません。</target>
        </trans-unit>
        <trans-unit id="e18b2104276bf04773cc9483f7f381c6d995630f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcov&lt;/code&gt;&amp;mdash;a test coverage program.</source>
          <target state="translated">&lt;code&gt;gcov&lt;/code&gt; :テストカバレッジプログラム。</target>
        </trans-unit>
        <trans-unit id="0adbd472f7e4a6a8700ee625ca50b5065e7189f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i32, i64, u32, u64, f32, f64&lt;/code&gt;, defined as follows:</source>
          <target state="translated">&lt;code&gt;i32, i64, u32, u64, f32, f64&lt;/code&gt; 、次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="c651bda5c1e10d455f6b6c7f62a6f71255f9e521" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iacc&lt;/code&gt; arguments are similar to &lt;code&gt;acc&lt;/code&gt; arguments but specify the number of an IACC register. See see &lt;a href=&quot;other-built_002din-functions#Other-Built_002din-Functions&quot;&gt;Other Built-in Functions&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;iacc&lt;/code&gt; 引数は &lt;code&gt;acc&lt;/code&gt; 引数に似ていますが、IACCレジスタの数を指定します。詳細については、&lt;a href=&quot;other-built_002din-functions#Other-Built_002din-Functions&quot;&gt;その他の組み込み関数&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="bf79502e7b46209589262e2429120814cbb13c52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm0_15&lt;/code&gt;, an integer literal in range 0 to 15;</source>
          <target state="translated">&lt;code&gt;imm0_15&lt;/code&gt; 、範囲0〜15の整数リテラル。</target>
        </trans-unit>
        <trans-unit id="ccc2033cd80d019d5fd83cb192150729b7904cf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm0_1&lt;/code&gt;, an integer literal in range 0 to 1;</source>
          <target state="translated">&lt;code&gt;imm0_1&lt;/code&gt; 、範囲0〜1の整数リテラル。</target>
        </trans-unit>
        <trans-unit id="f624a59ec5d313a1c0a203fc5cdfd4a3666bdad5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm0_255&lt;/code&gt;, an integer literal in range 0 to 255;</source>
          <target state="translated">&lt;code&gt;imm0_255&lt;/code&gt; 、0〜255の範囲の整数リテラル。</target>
        </trans-unit>
        <trans-unit id="45c72131be83eef97ea9ee3eff2a0bdba7519f47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm0_31&lt;/code&gt;, an integer literal in range 0 to 31;</source>
          <target state="translated">&lt;code&gt;imm0_31&lt;/code&gt; 、0〜31の範囲の整数リテラル。</target>
        </trans-unit>
        <trans-unit id="cde4836239d0583916a4b3f7436c408e99e7f181" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm0_3&lt;/code&gt;, an integer literal in range 0 to 3;</source>
          <target state="translated">&lt;code&gt;imm0_3&lt;/code&gt; 、範囲0〜3の整数リテラル。</target>
        </trans-unit>
        <trans-unit id="51e823a1bbc6ba2a324f7474f9da47e3b2690272" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm0_63&lt;/code&gt;, an integer literal in range 0 to 63;</source>
          <target state="translated">&lt;code&gt;imm0_63&lt;/code&gt; 、0〜63の範囲の整数リテラル。</target>
        </trans-unit>
        <trans-unit id="62f6834f1b1628360d13102cd8355d1bff98dfb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm0_7&lt;/code&gt;, an integer literal in range 0 to 7;</source>
          <target state="translated">&lt;code&gt;imm0_7&lt;/code&gt; 、0〜7の範囲の整数リテラル。</target>
        </trans-unit>
        <trans-unit id="06869e0d4af1794473183f20d27a91d5c322515b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm1_4&lt;/code&gt;, an integer literal in range 1 to 4;</source>
          <target state="translated">&lt;code&gt;imm1_4&lt;/code&gt; 、1〜4の範囲の整数リテラル。</target>
        </trans-unit>
        <trans-unit id="26b8f3ccab339df690ac564365568e69734e0e95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm_n1024_1022&lt;/code&gt;, an integer literal in range -512 to 511 left shifted by 1 bit, i.e., -1024, -1022, &amp;hellip;, 1020, 1022;</source>
          <target state="translated">&lt;code&gt;imm_n1024_1022&lt;/code&gt; 、-512から511の範囲の整数リテラル、1ビット左シフト、つまり-1024、-1022、&amp;hellip;、1020、1022。</target>
        </trans-unit>
        <trans-unit id="53f347dd23c9ce86f4bf63425a73319aeca2e71a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm_n16_15&lt;/code&gt;, an integer literal in range -16 to 15;</source>
          <target state="translated">&lt;code&gt;imm_n16_15&lt;/code&gt; 、-16〜15の範囲の整数リテラル。</target>
        </trans-unit>
        <trans-unit id="c764a9f154679364bdd3af401c15760d950c39d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm_n2048_2044&lt;/code&gt;, an integer literal in range -512 to 511 left shifted by 2 bits, i.e., -2048, -2044, &amp;hellip;, 2040, 2044;</source>
          <target state="translated">&lt;code&gt;imm_n2048_2044&lt;/code&gt; 、-512から511の範囲の整数リテラル、2ビット左シフト、つまり-2048、-2044、&amp;hellip;、2040、2044;</target>
        </trans-unit>
        <trans-unit id="d8621ae125b08b357812594db312fcdb8bd2e201" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm_n4096_4088&lt;/code&gt;, an integer literal in range -512 to 511 left shifted by 3 bits, i.e., -4096, -4088, &amp;hellip;, 4080, 4088;</source>
          <target state="translated">&lt;code&gt;imm_n4096_4088&lt;/code&gt; 、-512から511の範囲の整数リテラル、つまり-4096、-4088、&amp;hellip;、4080、4088。</target>
        </trans-unit>
        <trans-unit id="43bcd7d1a4a29ac9e7f1c73f1912ac48e5ce1624" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imm_n512_511&lt;/code&gt;, an integer literal in range -512 to 511;</source>
          <target state="translated">&lt;code&gt;imm_n512_511&lt;/code&gt; 、-512〜511の範囲の整数リテラル。</target>
        </trans-unit>
        <trans-unit id="f04c7ff5dca47e97ec5511198b36d3aa9615e32d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int16x4_t&lt;/code&gt;, a vector of four signed 16-bit integers;</source>
          <target state="translated">&lt;code&gt;int16x4_t&lt;/code&gt; 、4つの符号付き16ビット整数のベクトル。</target>
        </trans-unit>
        <trans-unit id="d63e9df03ecc48a8a23928c599b1004cd533f6d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int32x2_t&lt;/code&gt;, a vector of two signed 32-bit integers.</source>
          <target state="translated">&lt;code&gt;int32x2_t&lt;/code&gt; 、2つの符号付き32ビット整数のベクトル。</target>
        </trans-unit>
        <trans-unit id="91184ef12147d2f6b1bdaa56fe5d9583a6f4e83a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int8x8_t&lt;/code&gt;, a vector of eight signed 8-bit integers;</source>
          <target state="translated">&lt;code&gt;int8x8_t&lt;/code&gt; 、8つの符号付き8ビット整数のベクトル。</target>
        </trans-unit>
        <trans-unit id="9a7265111af471ce530480c106de4c972fb277fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;int&lt;/code&gt; for return type and parameter type</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 戻り値の型とパラメーターの型のint</target>
        </trans-unit>
        <trans-unit id="3e0d50378937884eeb028aecd3fcc684e4a49b74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;j&lt;/code&gt; followed by the inner type. For example &lt;code&gt;_Complex double&lt;/code&gt; is encoded as &quot;jd&quot;.</source>
          <target state="translated">&lt;code&gt;j&lt;/code&gt; の後に内部型が続きます。たとえば、 &lt;code&gt;_Complex double&lt;/code&gt; は「jd」としてエンコードされます。</target>
        </trans-unit>
        <trans-unit id="2f711a37cb98098d461731b92b78a9d7c2b5ec6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;movn.ps&lt;/code&gt;/&lt;code&gt;movz.ps&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;movn.ps&lt;/code&gt;/&lt;code&gt;movz.ps&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb1626a9beed4fd0495f07220bec199cc6d6bd0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;naked&lt;/code&gt; functions do not have a return instruction whereas &lt;code&gt;OS_main&lt;/code&gt; and &lt;code&gt;OS_task&lt;/code&gt; functions have a &lt;code&gt;RET&lt;/code&gt; or &lt;code&gt;RETI&lt;/code&gt; return instruction.</source>
          <target state="translated">&lt;code&gt;naked&lt;/code&gt; 一方の機能が復帰命令を持っていない &lt;code&gt;OS_main&lt;/code&gt; と &lt;code&gt;OS_task&lt;/code&gt; 機能を持っている &lt;code&gt;RET&lt;/code&gt; または &lt;code&gt;RETI&lt;/code&gt; の復帰命令を。</target>
        </trans-unit>
        <trans-unit id="f91f91e06fe6fe3ed6698c6a7170097cb9c11482" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;naked&lt;/code&gt; functions do not set up a frame for local variables or a frame pointer whereas &lt;code&gt;OS_main&lt;/code&gt; and &lt;code&gt;OS_task&lt;/code&gt; do this as needed.</source>
          <target state="translated">&lt;code&gt;naked&lt;/code&gt; 関数はローカル変数のフレームやフレームポインターを設定しませんが、 &lt;code&gt;OS_main&lt;/code&gt; と &lt;code&gt;OS_task&lt;/code&gt; は必要に応じてこれを行います。</target>
        </trans-unit>
        <trans-unit id="e1ec8966dbb2d024c34ce202400922786b20bf42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;q31&lt;/code&gt; and &lt;code&gt;i32&lt;/code&gt; are actually the same as &lt;code&gt;int&lt;/code&gt;, but we use &lt;code&gt;q31&lt;/code&gt; to indicate a Q31 fractional value and &lt;code&gt;i32&lt;/code&gt; to indicate a 32-bit integer value. Similarly, &lt;code&gt;a64&lt;/code&gt; is the same as &lt;code&gt;long long&lt;/code&gt;, but we use &lt;code&gt;a64&lt;/code&gt; to indicate values that are placed in one of the four DSP accumulators (&lt;code&gt;$ac0&lt;/code&gt;, &lt;code&gt;$ac1&lt;/code&gt;, &lt;code&gt;$ac2&lt;/code&gt; or &lt;code&gt;$ac3&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;q31&lt;/code&gt; と &lt;code&gt;i32&lt;/code&gt; は実際には同じです &lt;code&gt;int&lt;/code&gt; 、我々は使用 &lt;code&gt;q31&lt;/code&gt; Q31小数値を示すため、および &lt;code&gt;i32&lt;/code&gt; の32ビット整数値を指示します。同様に、 &lt;code&gt;a64&lt;/code&gt; 同じである &lt;code&gt;long long&lt;/code&gt; 、我々は使用 &lt;code&gt;a64&lt;/code&gt; 4つのDSPアキュムレータのいずれかに配置されている値を示すために（ &lt;code&gt;$ac0&lt;/code&gt; 、 &lt;code&gt;$ac1&lt;/code&gt; 、 &lt;code&gt;$ac2&lt;/code&gt; または &lt;code&gt;$ac3&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ea0054c5fec474c155dbd98ae3adc8592ccc0ad9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strict-align&lt;/code&gt; indicates that the compiler should not assume that unaligned memory references are handled by the system. To allow the compiler to assume that aligned memory references are handled by the system, the inverse attribute &lt;code&gt;no-strict-align&lt;/code&gt; can be specified. The behavior is same as for the command-line option</source>
          <target state="translated">&lt;code&gt;strict-align&lt;/code&gt; は、アライメントされていないメモリ参照がシステムによって処理されることをコンパイラが想定してはならないことを示します。コンパイラーが整列されたメモリー参照がシステムによって処理されると想定できるようにするには、逆属性 &lt;code&gt;no-strict-align&lt;/code&gt; を指定できます。動作はコマンドラインオプションの場合と同じです。</target>
        </trans-unit>
        <trans-unit id="0ce41d50092061190708b7c5fd578471925d484e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tbegin&lt;/code&gt; has been executed as part of normal processing. The transaction body is supposed to be executed.</source>
          <target state="translated">&lt;code&gt;tbegin&lt;/code&gt; は通常の処理の一部として実行されました。トランザクション本体が実行されることになっています。</target>
        </trans-unit>
        <trans-unit id="90a2359fdefeabe506da21e5ceeb1ec6dfb149dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type_info&lt;/code&gt; objects</source>
          <target state="translated">&lt;code&gt;type_info&lt;/code&gt; オブジェクト</target>
        </trans-unit>
        <trans-unit id="972569711d57266ec65a8196096540c87f973793" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeof&lt;/code&gt; is often useful in conjunction with statement expressions (see &lt;a href=&quot;statement-exprs#Statement-Exprs&quot;&gt;Statement Exprs&lt;/a&gt;). Here is how the two together can be used to define a safe &amp;ldquo;maximum&amp;rdquo; macro which operates on any arithmetic type and evaluates each of its arguments exactly once:</source>
          <target state="translated">&lt;code&gt;typeof&lt;/code&gt; は多くの場合、ステートメント式と組み合わせて使用​​すると便利です（&lt;a href=&quot;statement-exprs#Statement-Exprs&quot;&gt;Statement Exprsを&lt;/a&gt;参照）。以下は、2つを一緒に使用して、任意の算術型で動作し、その引数のそれぞれを1回だけ評価する安全な「最大」マクロを定義する方法です。</target>
        </trans-unit>
        <trans-unit id="01dc66305ee017274a8f90b9afb7de83e8f46c89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeof&lt;/code&gt;: referring to the type of an expression.</source>
          <target state="translated">&lt;code&gt;typeof&lt;/code&gt; ：式のタイプを参照します。</target>
        </trans-unit>
        <trans-unit id="8c7b90f2794ef9994bb660999c0f322a942bf8f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uint16x4_t&lt;/code&gt;, a vector of four unsigned 16-bit integers;</source>
          <target state="translated">&lt;code&gt;uint16x4_t&lt;/code&gt; 、4つの符号なし16ビット整数のベクトル。</target>
        </trans-unit>
        <trans-unit id="b0558ac59824429cd7d9d4b1f36c21a2ee0fe3e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uint32x2_t&lt;/code&gt;, a vector of two unsigned 32-bit integers;</source>
          <target state="translated">&lt;code&gt;uint32x2_t&lt;/code&gt; 、2つの符号なし32ビット整数のベクトル。</target>
        </trans-unit>
        <trans-unit id="2d69c68962c47d62e79bf31389c4415c2f200ee4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uint8x8_t&lt;/code&gt;, a vector of eight unsigned 8-bit integers;</source>
          <target state="translated">&lt;code&gt;uint8x8_t&lt;/code&gt; 、8つの符号なし8ビット整数のベクトル。</target>
        </trans-unit>
        <trans-unit id="dbb644e8ba42f8f623407a24fa989ae31fed8572" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;union U&lt;/code&gt; is always passed in memory.</source>
          <target state="translated">&lt;code&gt;union U&lt;/code&gt; は常にメモリに渡されます。</target>
        </trans-unit>
        <trans-unit id="fadc8e6d5e8d31b3a291f79221d6f051c12b8821" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v16i8&lt;/code&gt;, a vector of sixteen signed 8-bit integers;</source>
          <target state="translated">&lt;code&gt;v16i8&lt;/code&gt; 、16個の符号付き8ビット整数のベクトル。</target>
        </trans-unit>
        <trans-unit id="131a161af4f7e0b4ea5ae1747e0ea7514b0c83b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v16u8&lt;/code&gt;, a vector of sixteen unsigned 8-bit integers;</source>
          <target state="translated">&lt;code&gt;v16u8&lt;/code&gt; 、16個の符号なし8ビット整数のベクトル。</target>
        </trans-unit>
        <trans-unit id="1b29406a43f217bd305e13cb54ba71e651d5bba2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v2f64&lt;/code&gt;, a vector of two 64-bit doubles.</source>
          <target state="translated">&lt;code&gt;v2f64&lt;/code&gt; 、2つの64ビットdoubleのベクトル。</target>
        </trans-unit>
        <trans-unit id="7512973093e5491713fd6ebd5358156e9bc4a1dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v2i64&lt;/code&gt;, a vector of two signed 64-bit integers;</source>
          <target state="translated">&lt;code&gt;v2i64&lt;/code&gt; 、2つの符号付き64ビット整数のベクトル。</target>
        </trans-unit>
        <trans-unit id="9db6b88b33ec3aa8ad125c2d46beb5f476bec0d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v2sf&lt;/code&gt; values are initialized in the same way as aggregates. For example:</source>
          <target state="translated">&lt;code&gt;v2sf&lt;/code&gt; 値は、集計と同じ方法で初期化されます。例えば：</target>
        </trans-unit>
        <trans-unit id="c3855d3df800b3ae2c45c123aa6cb8ce5e785ead" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v2u64&lt;/code&gt;, a vector of two unsigned 64-bit integers;</source>
          <target state="translated">&lt;code&gt;v2u64&lt;/code&gt; 、2つの符号なし64ビット整数のベクトル。</target>
        </trans-unit>
        <trans-unit id="6ad31881d9c216547f22d1f2a2db29238b4dc646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v4f32&lt;/code&gt;, a vector of four 32-bit floats;</source>
          <target state="translated">&lt;code&gt;v4f32&lt;/code&gt; 、4つの32ビットfloatのベクトル。</target>
        </trans-unit>
        <trans-unit id="31c7877922fb039b6c0292daf271e4981078508f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v4i32&lt;/code&gt;, a vector of four signed 32-bit integers;</source>
          <target state="translated">&lt;code&gt;v4i32&lt;/code&gt; 、4つの符号付き32ビット整数のベクトル。</target>
        </trans-unit>
        <trans-unit id="17a0ec2f60a3d3e13fba7b775b40060a5c47ab58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v4i8&lt;/code&gt;, &lt;code&gt;v4q7&lt;/code&gt;, &lt;code&gt;v2i16&lt;/code&gt; and &lt;code&gt;v2q15&lt;/code&gt; values are initialized in the same way as aggregates. For example:</source>
          <target state="translated">&lt;code&gt;v4i8&lt;/code&gt; 、 &lt;code&gt;v4q7&lt;/code&gt; 、 &lt;code&gt;v2i16&lt;/code&gt; 、および &lt;code&gt;v2q15&lt;/code&gt; の値は、集計と同じ方法で初期化されます。例えば：</target>
        </trans-unit>
        <trans-unit id="6b9f0632a60f7e2199e33eae5df860d977b737c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v4u32&lt;/code&gt;, a vector of four unsigned 32-bit integers;</source>
          <target state="translated">&lt;code&gt;v4u32&lt;/code&gt; 、4つの符号なし32ビット整数のベクトル。</target>
        </trans-unit>
        <trans-unit id="15eeca02c95cac6ccf4d38d5e71572806fbe59c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v8i16&lt;/code&gt;, a vector of eight signed 16-bit integers;</source>
          <target state="translated">&lt;code&gt;v8i16&lt;/code&gt; 、8つの符号付き16ビット整数のベクトル。</target>
        </trans-unit>
        <trans-unit id="18c14a5e3dac281031739c8daafc626ba35c9efb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v8u16&lt;/code&gt;, a vector of eight unsigned 16-bit integers;</source>
          <target state="translated">&lt;code&gt;v8u16&lt;/code&gt; 、8つの符号なし16ビット整数のベクトル。</target>
        </trans-unit>
        <trans-unit id="d6a4e5bb9ed4a03346a1e5335ca402c064f0fe3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;void *&lt;/code&gt; for return type and parameter type</source>
          <target state="translated">&lt;code&gt;void *&lt;/code&gt; 戻り値の型とパラメーターの型</target>
        </trans-unit>
        <trans-unit id="931138ba5a2507ee2e7e0fc42f85c661aad3ee17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;void&lt;/code&gt; for return type and no parameter for parameter types.</source>
          <target state="translated">&lt;code&gt;void&lt;/code&gt; 戻り型の場合はvoid、パラメーター型の場合はパラメーターなし。</target>
        </trans-unit>
        <trans-unit id="5a5d5c4a2842d52363078341ffbf5ff1c71da9e6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AArch64 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;AArch64オプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6a14ea9b56847cb67e896fe9ed92e829c46db4c8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AMD GCN Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;AMD GCNオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="867c24fe4dbfd5ccbf6133610e3056cd4490ebb2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ARC Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ARCオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a804dffc1734b11346a4329fb8b712484dc062a9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ARM Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ARMオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="42007853e2d2e5ee57f43b159004f83209e6c120" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;AVR Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;AVRオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9aab5cdb90e0e7068aace684de244f8deb97788a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Adapteva Epiphany Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Adaptevaエピファニーオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ae87c6342c250828b19327bd7929eed321e39d53" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Blackfin Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Blackfinオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="77196484bdd6bd4585004c0d69f5afd921d39aeb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;C-SKY Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;C-SKYオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be9ad0c2e9c89a60e3ec15f581550300b8820f0d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;C6X Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;C6Xオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd379f819a2900908cff60cb928d58f868b9db54" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CR16 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;CR16オプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cfc7c2eba72f3e5ff0469155a3c3406b2e006fe3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CRIS Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;CRISオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0bcedc624ee2d8bc0dc1dde9e3ffd94d702c3815" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;DEC Alpha Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;DEC Alphaオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3c720ccb25061b11c148efb66e96f845b91fa6ad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Darwin Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ダーウィンのオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="95f44dfbf82d62481da460c42b5fb7c35274dcea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Errors&lt;/em&gt; report problems that make it impossible to compile your program. GCC reports errors with the source file name and line number where the problem is apparent.</source>
          <target state="translated">&lt;em&gt;エラーは&lt;/em&gt;、プログラムのコンパイルを不可能にする問題を報告します。GCCは、ソースファイル名と問題が明らかな行番号でエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="089e6e509d8caabf29e30ec3bbbe964fc2afe250" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FR30 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;FR30オプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="091553d3f3e8974e90f05c57755746679c1fdd3a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FRV Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;FRVオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70b7d6e356f2d0708ee860d4fc3fd1c61ab2eed5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;FT32 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;FT32オプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="98ffc4ee3ad54f42a4735dcc174d96d9c6c59ac5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GNU/Linux Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;GNU / Linuxオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0822ea35a43e7bcfdcf9fd3e546d607438735455" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;H8/300 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;H8 / 300オプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fdf83e6772f30030bb2fc1476c4b6aba2fad8a80" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;HPPA Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;HPPAオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5c413dcc96c0d8d85ccbfd5c8edb509e5cdc1c4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IA-64 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;IA-64オプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="72b634d41b068d05c153c5acbd927a150eda46f1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;LM32 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;LM32オプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e939059a018e2d2ed5fcec7a81d238219702f1a6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;M32C Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;M32Cオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="41423d489b98fe3519ae5cbb7b050e878b6bd6b0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;M32R/D Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;M32R / Dオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d6bc2eaf8866182e321b20849ed96413e122e84" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;M680x0 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;M680x0オプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7869c6ee0bb9ef2d45291f35d9736bbbaaacc30a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MCore Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MCoreオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f92ee1798eb5d8b5d7a11c3903d764ec6e437af6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MIPS Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MIPSオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6811edeb78aee90d2929700d84423144700748a5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MMIX Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MMIXオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1c6c421dea99cc933fb54d01b9291e1f3cc15403" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MN10300 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MN10300オプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1ae829c80944d42f892c7e2fcafa7795e50814c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MSP430 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MSP430オプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="995202556b55cd172ec8bc628d585bb4f9d60357" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MeP Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MePオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e6d8110270e3200546987d8ee1384e2734ad7589" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MicroBlaze Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;MicroBlazeオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b56c00142a2adf77adfc3b717573e363224b9028" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Moxie Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Moxieオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="56ac1cd6a6c4ddc7383020e1168c9487d3c77648" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NDS32 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;NDS32オプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0489603a8178bb1a03c11b5a827e58b0d976d54d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Nios II Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Nios IIオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6a71b3dbe832df819e003067a1cc89679cd5065c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; Although the equivalent hardware instructions do not take an SIMD register as an operand, these builtins overwrite the relevant bits of the &lt;code&gt;__v8hi&lt;/code&gt; register provided as the first argument with the value loaded from the &lt;code&gt;[Ib, u8]&lt;/code&gt; location in the SDM.</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt;同等のハードウェア命令はSIMDレジスターをオペランドとして取りませんが、これらの組み込み関数は、最初の引数として提供された &lt;code&gt;__v8hi&lt;/code&gt; レジスターの関連ビットを、SDMの &lt;code&gt;[Ib, u8]&lt;/code&gt; ロケーションからロードされた値で上書きします。</target>
        </trans-unit>
        <trans-unit id="906695ffc11fbd6c29f6a7c5fffdd87c61dd0062" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; GCC 4.4 and later implement &lt;code&gt;__sync_fetch_and_nand&lt;/code&gt; as &lt;code&gt;*ptr = ~(tmp &amp;amp; value)&lt;/code&gt; instead of &lt;code&gt;*ptr = ~tmp &amp;amp; value&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt; GCC 4.4以降では、 &lt;code&gt;__sync_fetch_and_nand&lt;/code&gt; を &lt;code&gt;*ptr = ~(tmp &amp;amp; value)&lt;/code&gt; 〜tmp ＆valueではなく* ptr =〜（tmp＆value）として実装してい &lt;code&gt;*ptr = ~tmp &amp;amp; value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32481d3d57648f7ac3b59915a8b343ab8f94362a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; GCC 4.4 and later implement &lt;code&gt;__sync_nand_and_fetch&lt;/code&gt; as &lt;code&gt;*ptr = ~(*ptr &amp;amp; value)&lt;/code&gt; instead of &lt;code&gt;*ptr = ~*ptr &amp;amp; value&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt; GCC 4.4以降では、 &lt;code&gt;__sync_nand_and_fetch&lt;/code&gt; を &lt;code&gt;*ptr = ~(*ptr &amp;amp; value)&lt;/code&gt; なく* ptr =〜（* ptr＆value）として実装してい &lt;code&gt;*ptr = ~*ptr &amp;amp; value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa1f3ae46628635e862095cde321a13674e15cd0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; If GCOV_PREFIX_STRIP is set without GCOV_PREFIX is undefined, then a relative path is made out of the hardwired absolute paths.</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt; GCOV_PREFIX_STRIPが設定されていて、GCOV_PREFIXが定義されていない場合、相対パスは、固定された絶対パスから作成されます。</target>
        </trans-unit>
        <trans-unit id="ea491177a79dc64abd09c78a1e151400a239c1ba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; If a macro is actually used, but only used in skipped conditional blocks, then the preprocessor reports it as unused. To avoid the warning in such a case, you might improve the scope of the macro&amp;rsquo;s definition by, for example, moving it into the first skipped block. Alternatively, you could provide a dummy use with something like:</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt;マクロが実際に使用されているが、スキップされた条件付きブロックでのみ使用されている場合、プリプロセッサーはそれを未使用として報告します。このような場合の警告を回避するには、マクロを最初のスキップされたブロックに移動するなどして、マクロの定義のスコープを改善することができます。または、次のようなダミーの用途を提供できます。</target>
        </trans-unit>
        <trans-unit id="513ca629c61e9f50ec1060bb038d882eda72087c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; If the chosen key method is later defined as inline, the vtable is still emitted in every translation unit that defines it. Make sure that any inline virtuals are declared inline in the class body, even if they are not defined there.</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt;選択したキーメソッドが後でインラインとして定義されている場合でも、vtableはそれを定義するすべての変換単位で引き続き出力されます。インライン仮想は、クラス本体で定義されていなくても、クラス本体でインラインで宣言されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="5909e9b7c2f203286387e1708a17c1db3ad3cfd7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; Only the &lt;code&gt;&amp;lt;altivec.h&amp;gt;&lt;/code&gt; interface is supported. Internally, GCC uses built-in functions to achieve the functionality in the aforementioned header file, but they are not supported and are subject to change without notice.</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt; &lt;code&gt;&amp;lt;altivec.h&amp;gt;&lt;/code&gt; インターフェースのみがサポートされています。内部的には、GCCは組み込み関数を使用して前述のヘッダーファイルの機能を実現していますが、これらはサポートされておらず、予告なく変更される場合があります。</target>
        </trans-unit>
        <trans-unit id="2e7d99f36188d0a0ae9bd36f15a8de72013df3fb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; Only the interface described in the aforementioned specification is supported. Internally, GCC uses built-in functions to implement the required functionality, but these are not supported and are subject to change without notice.</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt;上記の仕様で説明されているインターフェースのみがサポートされています。内部的には、GCCは組み込み関数を使用して必要な機能を実装していますが、これらはサポートされておらず、予告なく変更される場合があります。</target>
        </trans-unit>
        <trans-unit id="60f5a5be3206ed7a5edc1d0306252ee653ebb15f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; Q7, Q15 and Q31 values must be initialized with their integer representation. As shown in this example, the integer representation of a Q7 value can be obtained by multiplying the fractional value by &lt;code&gt;0x1.0p7&lt;/code&gt;. The equivalent for Q15 values is to multiply by &lt;code&gt;0x1.0p15&lt;/code&gt;. The equivalent for Q31 values is to multiply by &lt;code&gt;0x1.0p31&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt; Q7、Q15、およびQ31の値は、整数表現で初期化する必要があります。この例に示すように、Q7値の整数表現は、小数値に &lt;code&gt;0x1.0p7&lt;/code&gt; を乗算することで取得できます。Q15値に相当するのは、 &lt;code&gt;0x1.0p15&lt;/code&gt; を掛けることです。Q31値に相当するのは、 &lt;code&gt;0x1.0p31&lt;/code&gt; を掛けることです。</target>
        </trans-unit>
        <trans-unit id="ecefd38e47b465f12582422275b6c1c7fc5ba3d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; The 4.1, 4.2 and 4.3 series of GCC ignore the &lt;code&gt;packed&lt;/code&gt; attribute on bit-fields of type &lt;code&gt;char&lt;/code&gt;. This has been fixed in GCC 4.4 but the change can lead to differences in the structure layout. See the documentation of</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt; GCCの4.1、4.2、および4.3シリーズは、 &lt;code&gt;char&lt;/code&gt; 型のビットフィールドの &lt;code&gt;packed&lt;/code&gt; 属性を無視します。これはGCC 4.4で修正されましたが、変更により構造レイアウトに違いが生じる可能性があります。のドキュメントを参照してください</target>
        </trans-unit>
        <trans-unit id="83a8626dc0b2f71c9d50349e2149ee36fab186fa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; The CPU&amp;rsquo;s endianness determines the order in which values are packed. On little-endian targets, the first value is the least significant and the last value is the most significant. The opposite order applies to big-endian targets. For example, the code above sets the lowest byte of &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt; on little-endian targets and &lt;code&gt;4&lt;/code&gt; on big-endian targets.</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt; CPUのエンディアンによって、値がパックされる順序が決まります。リトルエンディアンターゲットでは、最初の値が最も重要でなく、最後の値が最も重要です。ビッグエンディアンターゲットには、逆の順序が適用されます。たとえば、上記のコードは、リトルエンディアンターゲットでは &lt;code&gt;a&lt;/code&gt; の最下位バイトを &lt;code&gt;1&lt;/code&gt; に設定し、ビッグエンディアンターゲットでは &lt;code&gt;4&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="5b93697e5f9fd5103a0a7f14fc065355825c4168" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; The CPU&amp;rsquo;s endianness determines which value is stored in the upper half of a register and which value is stored in the lower half. On little-endian targets, the first value is the lower one and the second value is the upper one. The opposite order applies to big-endian targets. For example, the code above sets the lower half of &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;1.5&lt;/code&gt; on little-endian targets and &lt;code&gt;9.1&lt;/code&gt; on big-endian targets.</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt; CPUのエンディアンによって、レジスタの上半分に格納される値と下半分に格納される値が決まります。リトルエンディアンターゲットでは、最初の値は低い値で、2番目の値は上の値です。ビッグエンディアンターゲットには、逆の順序が適用されます。たとえば、上記のコードは、リトルエンディアンターゲットでは &lt;code&gt;a&lt;/code&gt; の下半分を &lt;code&gt;1.5&lt;/code&gt; に設定し、ビッグエンディアンターゲットでは &lt;code&gt;9.1&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="b6f29631325fd85cd0fed1160021c6ec9cde3b5c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; The generic GCC command-line option</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt;一般的なGCCコマンドラインオプション</target>
        </trans-unit>
        <trans-unit id="ed06dff3e4ef6bf04ce2ce52a8b9fd81cb4cb441" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; The value of the third parameter must be 0 or 4 modulo 8, otherwise the result is unpredictable. Please read the instruction description for details.</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt; 3番目のパラメーターの値は0または4モジュロ8でなければなりません。そうでない場合、結果は予測できません。詳細は取扱説明書をご覧ください。</target>
        </trans-unit>
        <trans-unit id="72153d9d5813664a3177200e0649d766dc189c8b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; These &lt;code&gt;#pragma&lt;/code&gt;s have been superceded as of GCC 2.7.2 by COMDAT support and the &amp;ldquo;key method&amp;rdquo; heuristic mentioned in &lt;a href=&quot;vague-linkage#Vague-Linkage&quot;&gt;Vague Linkage&lt;/a&gt;. Using them can actually cause your program to grow due to unnecessary out-of-line copies of inline functions.</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt;これらの &lt;code&gt;#pragma&lt;/code&gt; は、GCC 2.7.2以降、COMDATサポートおよび&lt;a href=&quot;vague-linkage#Vague-Linkage&quot;&gt;Vague Linkageで&lt;/a&gt;言及されている「キーメソッド」ヒューリスティックに取って代わられました。それらを使用すると、インライン関数の不要な行外コピーが原因で、プログラムが実際に大きくなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="a7b139d88803f100cdd95a55602837bc153be904" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; This builtin is only available for C. This builtin can be used to call Go closures from C.</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt;この組み込みはCでのみ使用できます。この組み込みは、CからGoクロージャーを呼び出すために使用できます。</target>
        </trans-unit>
        <trans-unit id="2d97839275dd23b736dcd3d659869aced8cae5cf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; This construct is only available for C.</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt;この構成はCでのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="eacbc4a00a6df067f8f96e363a35fd76d48bed27" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; This construct is only available for C. Furthermore, the unused expression (&lt;var&gt;exp1&lt;/var&gt; or &lt;var&gt;exp2&lt;/var&gt; depending on the value of &lt;var&gt;const_exp&lt;/var&gt;) may still generate syntax errors. This may change in future revisions.</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt;この構築物は、さらにC.に対してのみ利用可能である未使用の式（ &lt;var&gt;exp1&lt;/var&gt; 又は &lt;var&gt;exp2&lt;/var&gt; の値に応じ &lt;var&gt;const_exp&lt;/var&gt; 依然として構文エラーを生成することができます）。これは将来の改訂で変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="5e7e557ba1661093fe7151e1bdc289cf424df86b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; Using a built-in to generate an instruction not supported by a target may cause problems. At present the compiler is not guaranteed to detect such misuse, and as a result an internal compiler error may be generated.</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt;ビルトインを使用してターゲットでサポートされていない命令を生成すると、問題が発生する可能性があります。現在のところ、コンパイラはそのような誤用を検出することを保証されておらず、その結果、内部コンパイラエラーが生成される可能性があります。</target>
        </trans-unit>
        <trans-unit id="1a1eec5083716264a52a5668d0e808764085fd67" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; When compiling a program using computed gotos, a GCC extension, you may get better run-time performance if you disable the global common subexpression elimination pass by adding</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt; GCCの拡張機能である計算されたgotosを使用してプログラムをコンパイルする場合、グローバルな共通部分式除去パスを無効にすると、実行時のパフォーマンスが向上します。</target>
        </trans-unit>
        <trans-unit id="c3ceb34dafdbbccb7b3f4a9bc3198076a8bb038d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; pseudo instruction represents, in this particular context, an abstract measurement of function&amp;rsquo;s size. In no way does it represent a count of assembly instructions and as such its exact meaning might change from one release to an another.</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt;疑似命令は、この特定のコンテキストでは、関数のサイズの抽象的な測定値を表します。これは、アセンブリ命令の数を表すものでは決してなく、そのため、その正確な意味は、リリースごとに変わる可能性があります。</target>
        </trans-unit>
        <trans-unit id="64cd29898900abd284b24ce0046a12f2a889805e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; there may be no value to</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt;に値がない場合があります</target>
        </trans-unit>
        <trans-unit id="34f20bbbcdb20cd93bc0b28a39e05bcb36620def" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt; If the</source>
          <target state="translated">&lt;em&gt;注&lt;/em&gt;場合は</target>
        </trans-unit>
        <trans-unit id="cc501835fd0037936c2300c5863d1305c99d13dc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Nvidia PTX Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Nvidia PTXオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7857f3cff032f30c80ecfb8270b8c04e4e9d6efc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;OpenRISC Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;OpenRISCオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="022f17d65bf2f852a9bf52143c3cab7582dddc12" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PDP-11 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;PDP-11オプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bc36ba8a70957c05f0128aeed8b3ffa01e74a202" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;PowerPC Options&lt;/em&gt; See RS/6000 and PowerPC Options.</source>
          <target state="translated">&lt;em&gt;PowerPCオプション&lt;/em&gt; RS / 6000および&lt;em&gt;PowerPCオプションを&lt;/em&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7d12212e9493501d271a126a834619cd825cc637" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RISC-V Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RISC-Vオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="51deeb74b7040696523eac8e9b50aaa9f0c160b2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RL78 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RL78オプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e0525fb0f4921d4b454f0867178cc3f2e709dd05" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RS/6000 and PowerPC Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RS / 6000およびPowerPCオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="39cbc4dfd74b5b6e0fa9efd8a12d1162bb681080" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RX Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;RXオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="736a44f00f2782082aa29882ffc21518d1f4a4e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;S/390 and zSeries Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;S / 390およびzSeriesオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="41e4a234f5bb49cd0264fa22972792fc9da3bcbf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SH Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;SHオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="56bc7167620d3c71b9cb584d08f274377f44bf2a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SPARC Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;SPARCオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dc670533970668fe64148e47e0fafdaea94cb03b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SPU Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;SPUオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c56413d87d2da9557912d35dbc2cfbca82836384" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Score Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;スコアオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="62b914fb373470c0b2ac9d74fa9f6fe2b909d5de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Solaris 2 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Solaris 2オプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d42fb76fd4341ca34cfd6fb2f6c0a0d677895a40" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Spec files&lt;/em&gt; are plain-text files that are used to construct spec strings. They consist of a sequence of directives separated by blank lines. The type of directive is determined by the first non-whitespace character on the line, which can be one of the following:</source>
          <target state="translated">&lt;em&gt;スペックファイル&lt;/em&gt;は、スペック文字列の作成に使用されるプレーンテキストファイルです。これらは、空白行で区切られた一連のディレクティブで構成されています。ディレクティブのタイプは、行の最初の非空白文字によって決定されます。これは次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="db99a02bf9325a0446b3d3660f54ae1be166577f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Spec strings&lt;/em&gt; are a list of command-line options to be passed to their corresponding program. In addition, the spec strings can contain &amp;lsquo;</source>
          <target state="translated">&lt;em&gt;スペック文字列&lt;/em&gt;は、対応するプログラムに渡されるコマンドラインオプションのリストです。さらに、仕様文字列には「</target>
        </trans-unit>
        <trans-unit id="5a15016eaf2ae61e798c9e92b569358a39e86710" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;System V Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;System Vオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="feb127030e9fe13464eefbb656da5c5e59f1ec48" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TILE-Gx Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;TILE-Gxオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e6e6e9084306dd7d17aba875acb7fea1ed46ce39" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TILEPro Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;TILEProオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1e1e262e710aa664259e0fd18b86e9454a54d4a6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;V850 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;V850オプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fc271d88c785f840f6cf51c476df618f74b1cbef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;VAX Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;VAXオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e143e075ae3bdac97703feadb897d0df26906759" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;VMS Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;VMSオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d28ef093233a29030bf54382ba024a105f45890e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Visium Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Visiumのオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe1a73e1bcb98976a3dfe16f3ba0939cee97b5b0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;VxWorks Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;VxWorksオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7aee4d537121bb2f423daebb8bdece70ad36a69" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Warning:&lt;/em&gt; In the above example, be aware that a register (for example &lt;code&gt;r0&lt;/code&gt;) can be call-clobbered by subsequent code, including function calls and library calls for arithmetic operators on other variables (for example the initialization of &lt;code&gt;p2&lt;/code&gt;). In this case, use temporary variables for expressions between the register assignments:</source>
          <target state="translated">&lt;em&gt;警告：&lt;/em&gt;上記の例では、レジスター（例えば &lt;code&gt;r0&lt;/code&gt; ）が、他の変数の算術演算子の関数呼び出しやライブラリー呼び出し（例えば &lt;code&gt;p2&lt;/code&gt; の初期化）を含む後続のコードによって呼び出し破棄される可能性があることに注意してください。この場合、レジスタ割り当て間の式に一時変数を使用します。</target>
        </trans-unit>
        <trans-unit id="816a932da8e0bd79bd86e31e2bb7d68625f97793" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Warnings&lt;/em&gt; report other unusual conditions in your code that &lt;em&gt;may&lt;/em&gt; indicate a problem, although compilation can (and does) proceed. Warning messages also report the source file name and line number, but include the text &amp;lsquo;</source>
          <target state="translated">&lt;em&gt;警告&lt;/em&gt;は、コンパイルを続行することはできますが、続行する&lt;em&gt;こと&lt;/em&gt;は&lt;em&gt;でき&lt;/em&gt;ますが、問題を示す&lt;em&gt;可能性&lt;/em&gt;があるコード内のその他の異常な状態を報告します。警告メッセージもソースファイル名と行番号を報告しますが、テキスト '</target>
        </trans-unit>
        <trans-unit id="4b143c44f6aab624c938e93ad2f6b4f657e59153" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Xstormy16 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Xstormy16オプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="18ac74c0cb677176c306ff128a293af591f367d3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Xtensa Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Xtensaオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="95e5f6791684d95443cdbb8fd6680f023a74362e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;picoChip Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;picoChipオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a2dbd6047aac87327270d92252817d5d79e582ce" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x86 Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;x86オプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2372ad60b474adcacc8813df7ea55f14799cf6b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x86 Windows Options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;x86 Windowsオプション&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="636b6c51fd4e87f012cdd524f840607ddf80c3c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;zSeries Options&lt;/em&gt; See S/390 and zSeries Options.</source>
          <target state="translated">&lt;em&gt;zSeriesオプション&lt;/em&gt; S / 390および&lt;em&gt;zSeriesオプションを&lt;/em&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="05b073d8b145e3b7b4fe9382c836fb5ca8365004" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&amp;lsquo;&lt;samp&gt;-mcpu&lt;/samp&gt;&amp;rsquo; arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&amp;lsquo;&lt;samp&gt;-mcpu&lt;/samp&gt;&amp;rsquo; arguments&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ca73c3cb15b2a6924f0a26af33432a71a16d184" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Be careful:&lt;/strong&gt; Write spaces around the &lt;code&gt;...&lt;/code&gt;, for otherwise it may be parsed wrong when you use it with integer values. For example, write this:</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt; &lt;code&gt;...&lt;/code&gt; の周りにスペースを入れてください。そうしないと、整数値で使用すると、正しく解析されない可能性があります。たとえば、次のように記述します。</target>
        </trans-unit>
        <trans-unit id="5b296bb4d7e000ba38a77aa5d36e6fe239ea357d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Family&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Family&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ce6e314b705bb119112642204e6ae779116bafe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Do &lt;em&gt;not&lt;/em&gt; modify the contents of input-only operands (except for inputs tied to outputs). The compiler assumes that on exit from the &lt;code&gt;asm&lt;/code&gt; statement these operands contain the same values as they had before executing the statement. It is &lt;em&gt;not&lt;/em&gt; possible to use clobbers to inform the compiler that the values in these inputs are changing. One common work-around is to tie the changing input variable to an output variable that never gets used. Note, however, that if the code that follows the &lt;code&gt;asm&lt;/code&gt; statement makes no use of any of the output operands, the GCC optimizers may discard the &lt;code&gt;asm&lt;/code&gt; statement as unneeded (see &lt;a href=&quot;#Volatile&quot;&gt;Volatile&lt;/a&gt;).</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;入力のみのオペランドの内容は変更し&lt;em&gt;ないで&lt;/em&gt;ください（出力に関連付けられた入力を除く）。コンパイラーは、 &lt;code&gt;asm&lt;/code&gt; ステートメントの終了時に、これらのオペランドにはステートメントを実行する前と同じ値が含まれていると想定します。これらの入力の値が変化していることをコンパイラーに通知するためにクロバーを使用することは&lt;em&gt;できません&lt;/em&gt;。一般的な回避策の1つは、変化する入力変数を、決して使用されない出力変数に関連付けることです。ただし、 &lt;code&gt;asm&lt;/code&gt; ステートメントに続くコードが出力オペランドをまったく使用しない場合、GCCオプティマイザは &lt;code&gt;asm&lt;/code&gt; ステートメントを不要として破棄する可能性があることに注意してください（&lt;a href=&quot;#Volatile&quot;&gt;揮発性を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="a41c6abd653a33317410ef0db731418bdf245365" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; If you use this switch, then you must build all modules with the same value, including any libraries. This includes the system libraries and startup modules.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;このスイッチを使用する場合は、ライブラリを含め、すべてのモジュールを同じ値でビルドする必要があります。これには、システムライブラリとスタートアップモジュールが含まれます。</target>
        </trans-unit>
        <trans-unit id="9f8a7fec506fe7c2f6084ea58dbd6ac51571b5ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Since RAX register is used to avoid unnecessarily saving vector registers on stack when passing variable arguments, the impacts of this option are callees may waste some stack space, misbehave or jump to a random location. GCC 4.4 or newer don&amp;rsquo;t have those issues, regardless the RAX register value.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt; RAXレジスタは、変数引数を渡すときにスタックにベクターレジスタを不必要に保存しないようにするために使用されるため、このオプションの影響は、呼び出し先がスタックスペースを浪費したり、誤動作したり、ランダムな場所にジャンプしたりする可能性があることです。RCCレジスタの値に関係なく、GCC 4.4以降ではこれらの問題は発生しません。</target>
        </trans-unit>
        <trans-unit id="715534c76b05f27a336cac5eca1f15bb1ba0531b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; The</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;ザ・</target>
        </trans-unit>
        <trans-unit id="e163e3f64318185967d993e343b277921267102a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; The C standards do not specify semantics for &lt;code&gt;asm&lt;/code&gt;, making it a potential source of incompatibilities between compilers. These incompatibilities may not produce compiler warnings/errors.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt; C標準では &lt;code&gt;asm&lt;/code&gt; のセマンティクスを指定していないため、コンパイラ間の非互換性の原因となる可能性があります。これらの非互換性は、コンパイラの警告/エラーを生成しない場合があります。</target>
        </trans-unit>
        <trans-unit id="e86cc1401a696068f7f847fa2efe8d1c2b4f1d91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; When an application does not properly join all threads (or creates an detached thread), a profile file can be still corrupted.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;アプリケーションがすべてのスレッドに適切に参加しない（または切り離されたスレッドを作成する）場合でも、プロファイルファイルが破損している可能性があります。</target>
        </trans-unit>
        <trans-unit id="edb6152c62df55204f513a2bd268c824cd742794" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; When generating code for the x86-64 architecture with SSE extensions disabled,</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt; SSE拡張機能を無効にしてx86-64アーキテクチャーのコードを生成すると、</target>
        </trans-unit>
        <trans-unit id="6d3e02f67e0426840cf2eab0fa386a7a0d8f3f4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; code compiled with the</source>
          <target state="translated">&lt;strong&gt;警告：で&lt;/strong&gt;コンパイルされたコード</target>
        </trans-unit>
        <trans-unit id="81d77d1a721cb0e9d979c46fa00adb7925430d90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; if you override the default value for your target ABI, this changes the size of structures and arrays containing &lt;code&gt;long double&lt;/code&gt; variables, as well as modifying the function calling convention for functions taking &lt;code&gt;long double&lt;/code&gt;. Hence they are not binary-compatible with code compiled without that switch.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;ターゲットABIのデフォルト値をオーバーライドすると、 &lt;code&gt;long double&lt;/code&gt; 変数を含む構造体と配列のサイズが変更され、 &lt;code&gt;long double&lt;/code&gt; を取る関数の関数呼び出し規則が変更されます。したがって、それらはそのスイッチなしでコンパイルされたコードとバイナリ互換ではありません。</target>
        </trans-unit>
        <trans-unit id="6aef184d39f03952d172b7102530bc7a9cb2fa3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; if you use the</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;を使用する場合</target>
        </trans-unit>
        <trans-unit id="b85ec1ce84c8439a9545fb2c1d7bf94b735aa0a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; if you use this switch then you must build all modules with the same value, including any libraries. This includes the system libraries and startup modules.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;このスイッチを使用する場合は、ライブラリを含め、すべてのモジュールを同じ値でビルドする必要があります。これには、システムライブラリとスタートアップモジュールが含まれます。</target>
        </trans-unit>
        <trans-unit id="6580347fe9571154d0b4891b1664cd9202c2acd8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; if you use this switch, and &lt;var&gt;num&lt;/var&gt; is nonzero, then you must build all modules with the same value, including any libraries. This includes the system libraries and startup modules.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;このスイッチを使用し、 &lt;var&gt;num&lt;/var&gt; がゼロ以外の場合は、ライブラリを含むすべてのモジュールを同じ値でビルドする必要があります。これには、システムライブラリとスタートアップモジュールが含まれます。</target>
        </trans-unit>
        <trans-unit id="f2fa2d1c77dc6f956448ba7d671e1de6cedbcd38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; the</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="88c4d51d8f615f3993e3c0cef840662cb24bb857" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; the requisite libraries are not part of GCC. Normally the facilities of the machine&amp;rsquo;s usual C compiler are used, but this cannot be done directly in cross-compilation. You must make your own arrangements to provide suitable library functions for cross-compilation.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;必要なライブラリはGCCの一部ではありません。通常、マシンの通常のCコンパイラの機能が使用されますが、クロスコンパイルで直接行うことはできません。クロスコンパイルに適したライブラリ関数を提供するには、独自の配置を行う必要があります。</target>
        </trans-unit>
        <trans-unit id="776b38edee53ccd0d1e652426154a9a588a26326" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; this calling convention is incompatible with the one normally used on Unix, so you cannot use it if you need to call libraries compiled with the Unix compiler.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;この呼び出し規約は、Unixで通常使用されるものと互換性がないため、Unixコンパイラでコンパイルされたライブラリを呼び出す必要がある場合は使用できません。</target>
        </trans-unit>
        <trans-unit id="3c92b0834b3f6e0b0e166db87ccbdb672bb82648" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;auxname&lt;/var&gt;.gcda</source>
          <target state="translated">&lt;var&gt;auxname&lt;/var&gt;.gcda</target>
        </trans-unit>
        <trans-unit id="9e19d8b5ca485e7de26e8b332e442d8fc54664ea" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;auxname&lt;/var&gt;.gcno</source>
          <target state="translated">&lt;var&gt;auxname&lt;/var&gt;.gcno</target>
        </trans-unit>
        <trans-unit id="85165da2ca5194c5347e3eeeb486f7fe2449eb31" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;b&lt;/var&gt;fx</source>
          <target state="translated">&lt;var&gt;b&lt;/var&gt;fx</target>
        </trans-unit>
        <trans-unit id="e61d261ac414ee0ceb16d824496fad9b5acddd85" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;blocks&lt;/var&gt;: number of blocks that are in the function</source>
          <target state="translated">&lt;var&gt;blocks&lt;/var&gt; ：関数内にあるブロックの数</target>
        </trans-unit>
        <trans-unit id="8ae8f4fb9cf1118a0551f86c7142bd0ff6bc1464" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;blocks_executed&lt;/var&gt;: number of executed blocks of the function</source>
          <target state="translated">&lt;var&gt;blocks_executed&lt;/var&gt; ：関数の実行済みブロックの数</target>
        </trans-unit>
        <trans-unit id="b33636a0ba563901664b6c5f838dee23ec7b7447" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;byte-size&lt;/var&gt; works, but with variable-length arrays.</source>
          <target state="translated">&lt;var&gt;byte-size&lt;/var&gt; 機能しますが、可変長配列を使用します。</target>
        </trans-unit>
        <trans-unit id="3908fe32fbee17ab1091dcbbbcc9d95e8c868d21" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;count&lt;/var&gt;: number of executions of the branch</source>
          <target state="translated">&lt;var&gt;count&lt;/var&gt; ：ブランチの実行数</target>
        </trans-unit>
        <trans-unit id="a5a5b0ddbf193f53659eab4ecc8e6518b23dc55a" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;count&lt;/var&gt;: number of executions of the line</source>
          <target state="translated">&lt;var&gt;count&lt;/var&gt; ：行の実行数</target>
        </trans-unit>
        <trans-unit id="6dc66d5a71e8f3349f4206d52eb3738739a10355" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;current_working_directory&lt;/var&gt;: working directory where a compilation unit was compiled</source>
          <target state="translated">&lt;var&gt;current_working_directory&lt;/var&gt; ：コンパイルユニットがコンパイルされた作業ディレクトリ</target>
        </trans-unit>
        <trans-unit id="f2f093923378c09906b260d4e4fef642e8bd4c9b" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;data_file&lt;/var&gt;: name of the data file (GCDA)</source>
          <target state="translated">&lt;var&gt;data_file&lt;/var&gt; ：データファイルの名前（GCDA）</target>
        </trans-unit>
        <trans-unit id="82a3c99596c0803b3cd5b5dc5b7d4f7edcb29691" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;demangled_name&lt;/var&gt;: demangled name of the function</source>
          <target state="translated">&lt;var&gt;demangled_name&lt;/var&gt; ：関数の復号化された名前</target>
        </trans-unit>
        <trans-unit id="96756339f8a07464a095163d86ae17ba49c6f2b0" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;dir&lt;/var&gt;/&lt;var&gt;suffix&lt;/var&gt;/usr/include</source>
          <target state="translated">&lt;var&gt;dir&lt;/var&gt;/&lt;var&gt;suffix&lt;/var&gt;/usr/include</target>
        </trans-unit>
        <trans-unit id="457fd18521fb5ee2775888f964e4ddd50de83968" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;dir&lt;/var&gt;/usr/include</source>
          <target state="translated">&lt;var&gt;dir&lt;/var&gt;/usr/include</target>
        </trans-unit>
        <trans-unit id="a2f5c6f857a964db0e9209dc3bc8af9204a69687" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;dir&lt;/var&gt;/usr/lib</source>
          <target state="translated">&lt;var&gt;dir&lt;/var&gt;/usr/lib</target>
        </trans-unit>
        <trans-unit id="710f2aaaa57ae08947b2914f307083f5ba6ecc46" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;end_column&lt;/var&gt;: column in the source file where the function ends</source>
          <target state="translated">&lt;var&gt;end_column&lt;/var&gt; ：関数が終了するソースファイルの列</target>
        </trans-unit>
        <trans-unit id="77d6abb0099a7849ef1e3e17b19f0755409a5b5e" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;end_line&lt;/var&gt;: line in the source file where the function ends</source>
          <target state="translated">&lt;var&gt;end_line&lt;/var&gt; ：関数が終了するソースファイルの行</target>
        </trans-unit>
        <trans-unit id="bcfb310dcf9e58743c432d6bf3a973817fa1a1e5" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;execution_count&lt;/var&gt;: number of executions of the function</source>
          <target state="translated">&lt;var&gt;execution_count&lt;/var&gt; ：関数の実行回数</target>
        </trans-unit>
        <trans-unit id="07ced02e11442bdc9f19c2804e52ff736e36f64b" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;fallthrough&lt;/var&gt;: true when the branch is a fall through branch</source>
          <target state="translated">&lt;var&gt;fallthrough&lt;/var&gt; ：ブランチがフォールスルーブランチである場合はtrue</target>
        </trans-unit>
        <trans-unit id="cb068146736527c3f97548042cc209e45a84344b" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;fieldname&lt;/var&gt;:</source>
          <target state="translated">&lt;var&gt;fieldname&lt;/var&gt;:</target>
        </trans-unit>
        <trans-unit id="bc0ca9277beb7ce53874c5a6ea975087cabd0480" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;file&lt;/var&gt;.&lt;var&gt;passid&lt;/var&gt;.&lt;var&gt;pass&lt;/var&gt;.dot</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt;.&lt;var&gt;passid&lt;/var&gt;.&lt;var&gt;pass&lt;/var&gt;.dot</target>
        </trans-unit>
        <trans-unit id="e36ec986d0d68718176ac505f37684283543d3d9" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;file&lt;/var&gt;&lt;var&gt;target&lt;/var&gt;</source>
          <target state="translated">&lt;var&gt;file&lt;/var&gt;&lt;var&gt;target&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="8ec94309621d2424e899ea1b78e55daad7870d18" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;file_name&lt;/var&gt;: name of the source file</source>
          <target state="translated">&lt;var&gt;file_name&lt;/var&gt; ：ソースファイルの名前</target>
        </trans-unit>
        <trans-unit id="cd6f65bdf191a64aaefc5c263459a6f075adc163" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;foo&lt;/var&gt; automatically implies</source>
          <target state="translated">&lt;var&gt;foo&lt;/var&gt; は自動的に意味します</target>
        </trans-unit>
        <trans-unit id="70afe026807a5e12e476985ab37efbc5dc26d077" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;foo&lt;/var&gt; does not imply anything.</source>
          <target state="translated">&lt;var&gt;foo&lt;/var&gt; は何も意味しません。</target>
        </trans-unit>
        <trans-unit id="46fba837f5408f9512a6c400d555a520081bdffd" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;foo&lt;/var&gt;. However,</source>
          <target state="translated">&lt;var&gt;foo&lt;/var&gt; 。しかしながら、</target>
        </trans-unit>
        <trans-unit id="705042d186415d378755a17325dbc0219d4372f1" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;format_version&lt;/var&gt;: semantic version of the format</source>
          <target state="translated">&lt;var&gt;format_version&lt;/var&gt; ：形式のセマンティックバージョン</target>
        </trans-unit>
        <trans-unit id="58bfbaccb373a1af2e15a00fe6b5acf8e46f5efd" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;function_name&lt;/var&gt;: a name of a function this &lt;var&gt;line&lt;/var&gt; belongs to (for a line with an inlined statements can be not set)</source>
          <target state="translated">&lt;var&gt;function_name&lt;/var&gt; ：この &lt;var&gt;line&lt;/var&gt; 属する関数の名前（インライン化されたステートメントを持つ行は設定できません）</target>
        </trans-unit>
        <trans-unit id="7150cb8c780083943181393bffe3746be197596d" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;gcc_version&lt;/var&gt;: version of the GCC compiler</source>
          <target state="translated">&lt;var&gt;gcc_version&lt;/var&gt; ：GCCコンパイラのバージョン</target>
        </trans-unit>
        <trans-unit id="ae44b540bd27d10c4dc7e21db41478a671658ee6" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;kind&lt;/var&gt; is &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;kind&lt;/var&gt; は '</target>
        </trans-unit>
        <trans-unit id="8b8203cf510dcd89888a7c10446ebe87c2f89369" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;libexecdir&lt;/var&gt;/gcc/&lt;var&gt;target&lt;/var&gt;/&lt;var&gt;version&lt;/var&gt;/install-tools/</source>
          <target state="translated">&lt;var&gt;libexecdir&lt;/var&gt;/gcc/&lt;var&gt;target&lt;/var&gt;/&lt;var&gt;version&lt;/var&gt;/install-tools/</target>
        </trans-unit>
        <trans-unit id="7e28a7ea5e6f3cd24974425a7e272dd6dab22c97" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;line_number&lt;/var&gt;: line number</source>
          <target state="translated">&lt;var&gt;line_number&lt;/var&gt; ：行番号</target>
        </trans-unit>
        <trans-unit id="ea29079cba4e83858223a5ec28bdc6d50bd316b0" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;machine&lt;/var&gt;/&lt;var&gt;version&lt;/var&gt;/</source>
          <target state="translated">&lt;var&gt;machine&lt;/var&gt;/&lt;var&gt;version&lt;/var&gt;/</target>
        </trans-unit>
        <trans-unit id="fb87e55fd40c286be395999f14a4dc6d95b10b8e" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;mangledname&lt;/var&gt;.gcov</source>
          <target state="translated">&lt;var&gt;mangledname&lt;/var&gt;.gcov</target>
        </trans-unit>
        <trans-unit id="f0ce3ea44130cbe877829294966ed36eef7f62f7" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;mode&lt;/var&gt; can be set to one the following values:</source>
          <target state="translated">&lt;var&gt;mode&lt;/var&gt; は次のいずれかの値に設定できます。</target>
        </trans-unit>
        <trans-unit id="0b1b3ce355abf1bec528e4e29cb69b648d32b2c3" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;n&lt;/var&gt;f</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt;f</target>
        </trans-unit>
        <trans-unit id="2956846802a0f3763419f1cd6721396729e2240a" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;n&lt;/var&gt;f1_1</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt;f1_1</target>
        </trans-unit>
        <trans-unit id="d0f528c5f50a3a9ca8a7f4d4becb651762709fc6" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;n&lt;/var&gt;f2_1</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt;f2_1</target>
        </trans-unit>
        <trans-unit id="a64a9113e49c525ccc4593f4075479691d2d779c" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;n&lt;/var&gt;f3_2</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt;f3_2</target>
        </trans-unit>
        <trans-unit id="0f1c1c81fa999d2f5ca3d601e651ccc54a89eb03" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;n&lt;/var&gt;x</source>
          <target state="translated">&lt;var&gt;n&lt;/var&gt;x</target>
        </trans-unit>
        <trans-unit id="8e4ffce74a745b869371f4d5e4b25a511464db80" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;name&lt;/var&gt;: name of the function</source>
          <target state="translated">&lt;var&gt;name&lt;/var&gt; ：関数の名前</target>
        </trans-unit>
        <trans-unit id="97651fa5ce5e8856932bddb384b35a32ca248309" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;number&lt;/var&gt; can only be 1 or 2. If it is 1 then branches are preferred over conditional code, if it is 2, then the opposite applies.</source>
          <target state="translated">&lt;var&gt;number&lt;/var&gt; は1または2のみです。1の場合、条件付きコードよりもブランチが優先されます。2の場合、逆が適用されます。</target>
        </trans-unit>
        <trans-unit id="50273f37f0b45fd83f80ed0fdeed8ef68524af4d" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;option&lt;/var&gt;=&lt;var&gt;value&lt;/var&gt;</source>
          <target state="translated">&lt;var&gt;option&lt;/var&gt;=&lt;var&gt;value&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="d0ce734a96f9558ae28efb50ac75200764dc9df5" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;path&lt;/var&gt; is the name of a file containing AutoFDO profile information. If omitted, it defaults to</source>
          <target state="translated">&lt;var&gt;path&lt;/var&gt; は、AutoFDOプロファイル情報を含むファイルの名前です。省略した場合のデフォルトは</target>
        </trans-unit>
        <trans-unit id="4a043823197d8a0d9d4a3dae48ce610f7a8479fd" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;prefix&lt;/var&gt;/lib/gcc/</source>
          <target state="translated">&lt;var&gt;prefix&lt;/var&gt;/lib/gcc/</target>
        </trans-unit>
        <trans-unit id="575dfa2a337b4bc21315c8f8022717c452a4ae62" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;ptr&lt;/var&gt; is an optional pointer to the object that may be used to determine alignment. A value of 0 indicates typical alignment should be used. The compiler may also ignore this parameter.</source>
          <target state="translated">&lt;var&gt;ptr&lt;/var&gt; は、配置の決定に使用できるオブジェクトへのオプションのポインターです。値0は、通常の配置を使用する必要があることを示します。コンパイラーもこのパラメーターを無視する場合があります。</target>
        </trans-unit>
        <trans-unit id="8b3c5b36be47a0fa932bdb61b7a90e0c4902fd51" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;real&lt;/var&gt; + I * &lt;var&gt;imag&lt;/var&gt;</source>
          <target state="translated">&lt;var&gt;real&lt;/var&gt; + I * &lt;var&gt;imag&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="444cf69e0e22b51ba0c19cf554accc4728339634" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;reg&lt;/var&gt; must be the name of a register. The register names accepted are machine-specific and are defined in the &lt;code&gt;REGISTER_NAMES&lt;/code&gt; macro in the machine description macro file.</source>
          <target state="translated">&lt;var&gt;reg&lt;/var&gt; はレジスタの名前でなければなりません。受け入れられるレジスタ名はマシン固有であり、マシン記述マクロファイルの &lt;code&gt;REGISTER_NAMES&lt;/code&gt; マクロで定義されます。</target>
        </trans-unit>
        <trans-unit id="9fe1c0acef9a1d0caebcd87a22d3dc35ad3b0448" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;source-file&lt;/var&gt;##&lt;var&gt;md5&lt;/var&gt;.gcov</source>
          <target state="translated">&lt;var&gt;source-file&lt;/var&gt;##&lt;var&gt;md5&lt;/var&gt;.gcov</target>
        </trans-unit>
        <trans-unit id="b880a9e002b5a8cc6ab8e5b60ed026a3bd7b4c0f" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;source&lt;/var&gt;.&lt;var&gt;suffix&lt;/var&gt;</source>
          <target state="translated">&lt;var&gt;source&lt;/var&gt;.&lt;var&gt;suffix&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="c61509b5e229f01a21d510673ed3415523a72145" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;source&lt;/var&gt;.&lt;var&gt;suffix&lt;/var&gt;.gch</source>
          <target state="translated">&lt;var&gt;source&lt;/var&gt;.&lt;var&gt;suffix&lt;/var&gt;.gch</target>
        </trans-unit>
        <trans-unit id="70db49065f5eba9055c8c455ae0994a97a7b0ff7" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;source&lt;/var&gt;.o</source>
          <target state="translated">&lt;var&gt;source&lt;/var&gt;.o</target>
        </trans-unit>
        <trans-unit id="4b7c7cc9bc07a7bc8b59a106fc41bf34e5bc1bce" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;source&lt;/var&gt;.s</source>
          <target state="translated">&lt;var&gt;source&lt;/var&gt;.s</target>
        </trans-unit>
        <trans-unit id="a72234cee5f73a88a10f2c471d34f2876066e0e2" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;sourcefile&lt;/var&gt;.c</source>
          <target state="translated">&lt;var&gt;sourcefile&lt;/var&gt;.c</target>
        </trans-unit>
        <trans-unit id="fca90e9a21f6a50975b13af845d218e0a2f371d9" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;sourcefile&lt;/var&gt;.gcov</source>
          <target state="translated">&lt;var&gt;sourcefile&lt;/var&gt;.gcov</target>
        </trans-unit>
        <trans-unit id="d01d6365317d600e2664fe58c60f8e16adc09101" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;sourcename&lt;/var&gt;.decl</source>
          <target state="translated">&lt;var&gt;sourcename&lt;/var&gt;.decl</target>
        </trans-unit>
        <trans-unit id="273491f96586620c37b4be341e04ca0866ba515f" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;sourcename&lt;/var&gt;.gcda</source>
          <target state="translated">&lt;var&gt;sourcename&lt;/var&gt;.gcda</target>
        </trans-unit>
        <trans-unit id="b7a20df9ca0090865388e1ede1a8c313cfa2ec03" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;start_column&lt;/var&gt;: column in the source file where the function begins</source>
          <target state="translated">&lt;var&gt;start_column&lt;/var&gt; ：関数が始まるソースファイルの列</target>
        </trans-unit>
        <trans-unit id="3305d67073def22b0281ddc5b0ab6b21190df394" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;start_line&lt;/var&gt;: line in the source file where the function begins</source>
          <target state="translated">&lt;var&gt;start_line&lt;/var&gt; ：関数が始まるソースファイルの行</target>
        </trans-unit>
        <trans-unit id="cb4cfaac038ae456ad73674888cd5dee273bede8" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;startfile&lt;/var&gt; is the file name of the startfile (crt0) to use when linking. This option is only useful in conjunction with</source>
          <target state="translated">&lt;var&gt;startfile&lt;/var&gt; は、リンク時に使用するstartfile（crt0）のファイル名です。このオプションは、</target>
        </trans-unit>
        <trans-unit id="92e2c1df29e70248323ce9841f5738d40e347e46" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;state&lt;/var&gt; configure option.</source>
          <target state="translated">&lt;var&gt;state&lt;/var&gt; 設定オプション。</target>
        </trans-unit>
        <trans-unit id="956c0d57ed11241cf2af6705b81cf132c79d5cf4" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;string&lt;/var&gt; may be parenthesized, and is printed with location information. For example,</source>
          <target state="translated">&lt;var&gt;string&lt;/var&gt; は括弧で囲むことができ、位置情報とともに印刷されます。例えば、</target>
        </trans-unit>
        <trans-unit id="9eedc4fd2f60aed10814958a1668c96d1c3d2760" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;style&lt;/var&gt; is either &lt;code&gt;c11&lt;/code&gt; or &lt;code&gt;ts-18661-3&lt;/code&gt; as appropriate.</source>
          <target state="translated">&lt;var&gt;style&lt;/var&gt; は、必要に応じて &lt;code&gt;c11&lt;/code&gt; または &lt;code&gt;ts-18661-3&lt;/code&gt; のいずれかです。</target>
        </trans-unit>
        <trans-unit id="756b0ec3e68649366cd0150c58c2eabc74fb8d54" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;systemlib&lt;/var&gt; is the library name of the library that provides low-level system calls required by the C library, e.g. &lt;code&gt;read&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt;. This option is typically used to link with a library provided by a HAL BSP.</source>
          <target state="translated">&lt;var&gt;systemlib&lt;/var&gt; は、Cライブラリに必要な低レベルのシステムコールを提供するライブラリのライブラリ名です（例： &lt;code&gt;read&lt;/code&gt; および &lt;code&gt;write&lt;/code&gt; )。このオプションは通常、HAL BSPによって提供されるライブラリとリンクするために使用されます。</target>
        </trans-unit>
        <trans-unit id="f3b5c58dcaf93cade01b7328b68fe8d4178ba8da" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;throw&lt;/var&gt;: true when the branch is an exceptional branch</source>
          <target state="translated">&lt;var&gt;throw&lt;/var&gt; ：ブランチが例外的なブランチである場合はtrue</target>
        </trans-unit>
        <trans-unit id="745e86448be042dc8edebfc034c56ccccf38a979" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;type&lt;/var&gt; is an integer constant from 0 to 3. If the least significant bit is clear, objects are whole variables, if it is set, a closest surrounding subobject is considered the object a pointer points to. The second bit determines if maximum or minimum of remaining bytes is computed.</source>
          <target state="translated">&lt;var&gt;type&lt;/var&gt; は0〜3の整数定数です。最下位ビットがクリアされている場合、オブジェクトは変数全体です。設定されている場合、最も近い周囲のサブオブジェクトは、ポインターが指すオブジェクトと見なされます。2番目のビットは、残りのバイトの最大値または最小値を計算するかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="342fc24f28a056e632a0b35fb86b8d4dd73bc946" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;unexecuted_block&lt;/var&gt;: flag whether the line contains an unexecuted block (not all statements on the line are executed)</source>
          <target state="translated">&lt;var&gt;unexecuted_block&lt;/var&gt; ：行に未実行ブロックが含まれているかどうかを示すフラグ（行のすべてのステートメントが実行されるわけではない）</target>
        </trans-unit>
        <trans-unit id="6049c35e012365c54216cf4865563ff7b5c3b373" translate="yes" xml:space="preserve">
          <source>=&lt;var&gt;filename&lt;/var&gt;</source>
          <target state="translated">=&lt;var&gt;filename&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="46f10d3b2f96391f996a860a29e922307def05f4" translate="yes" xml:space="preserve">
          <source>=@cc&lt;var&gt;cond&lt;/var&gt;</source>
          <target state="translated">=@cc&lt;var&gt;cond&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="2481fc6ffc2fbe4f98d31256e625358325756148" translate="yes" xml:space="preserve">
          <source>=f</source>
          <target state="translated">=f</target>
        </trans-unit>
        <trans-unit id="900f8b38b05989605df65663e5e3869aab5eb789" translate="yes" xml:space="preserve">
          <source>? :</source>
          <target state="translated">? :</target>
        </trans-unit>
        <trans-unit id="6dcd4ce23d88e2ee9568ba546c007c63d9131c1b" translate="yes" xml:space="preserve">
          <source>A</source>
          <target state="translated">A</target>
        </trans-unit>
        <trans-unit id="7025e1843ee6104f357de4a85f21b2b545cac788" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;stable&amp;rdquo; memory operand; that is, one which does not include any automodification of the base register. This used to be useful when &amp;lsquo;</source>
          <target state="translated">「安定した」メモリオペランド。つまり、ベースレジスタの自動変更を含まないものです。これは以前 '</target>
        </trans-unit>
        <trans-unit id="b2a6e604c21235a8a2cf39c25b6821bfb403a2f9" translate="yes" xml:space="preserve">
          <source>A 10-bit signed constant (-512 &amp;hellip; 511)</source>
          <target state="translated">10ビットの符号付き定数（-512&amp;hellip;511）</target>
        </trans-unit>
        <trans-unit id="576737d0097b50a261308a427b2851f9873b4e96" translate="yes" xml:space="preserve">
          <source>A 16 bit value with exactly one bit set.</source>
          <target state="translated">16ビットの値で、正確には1ビットが設定されています。</target>
        </trans-unit>
        <trans-unit id="91a340944b7c5084f9cb17cdbbc4b3cfd1b6b8d2" translate="yes" xml:space="preserve">
          <source>A 16-bit fragment of a got, tls, or pc-relative reference.</source>
          <target state="translated">got、tls、または pc-相対参照の16ビットフラグメント。</target>
        </trans-unit>
        <trans-unit id="9d079cc97fa73a6ab6e8c28d5a00eebc59ab7c45" translate="yes" xml:space="preserve">
          <source>A 16-bit signed constant (-32768 &amp;hellip; 32767)</source>
          <target state="translated">16ビットの符号付き定数（-32768&amp;hellip;32767）</target>
        </trans-unit>
        <trans-unit id="600f9da68b2b8b3eca45f28f2690b3c739522b91" translate="yes" xml:space="preserve">
          <source>A 16-bit unsigned constant, multiple of 4 (0 &amp;hellip; 65532)</source>
          <target state="translated">4の倍数の16ビット符号なし定数（0&amp;hellip;65532）</target>
        </trans-unit>
        <trans-unit id="626d08e653ff5fead00da4b2ae1ffdf55de25ac2" translate="yes" xml:space="preserve">
          <source>A 2-element vector constant with identical elements.</source>
          <target state="translated">同一要素を持つ2要素のベクトル定数。</target>
        </trans-unit>
        <trans-unit id="199076609694aaa8dd531a498d6bd24d81a6cc20" translate="yes" xml:space="preserve">
          <source>A 20-bit signed constant (-524288 &amp;hellip; 524287)</source>
          <target state="translated">20ビットの符号付き定数（-524288&amp;hellip;524287）</target>
        </trans-unit>
        <trans-unit id="739e9c986b6796272b083980b6406cba9cf05af2" translate="yes" xml:space="preserve">
          <source>A 3-bit unsigned integer constant.</source>
          <target state="translated">3ビットの符号なし整数定数。</target>
        </trans-unit>
        <trans-unit id="8d9d9ff6786b090797685cfe7290aeace549fb2c" translate="yes" xml:space="preserve">
          <source>A 4-element vector constant with identical elements.</source>
          <target state="translated">同一要素を持つ4要素のベクトル定数。</target>
        </trans-unit>
        <trans-unit id="809cfd342c5778cebf932a5fb2090f41ac0b8050" translate="yes" xml:space="preserve">
          <source>A 5-bit unsigned immediate for CSR access instructions.</source>
          <target state="translated">CSRアクセス命令用の5ビット符号なしイミディエイト。</target>
        </trans-unit>
        <trans-unit id="7a0f592094ae133e28a83db08acb3ad80aaa8c6b" translate="yes" xml:space="preserve">
          <source>A 5-bit unsigned integer constant.</source>
          <target state="translated">5ビットの符号なし整数定数。</target>
        </trans-unit>
        <trans-unit id="2a19359a80d0f6de7d964e539759745df3e07113" translate="yes" xml:space="preserve">
          <source>A 6-bit unsigned integer constant.</source>
          <target state="translated">6ビットの符号なし整数定数。</target>
        </trans-unit>
        <trans-unit id="4a1d6a6dcc128bafb39f6e3e6579f2614ede9096" translate="yes" xml:space="preserve">
          <source>A 7-bit unsigned integer constant.</source>
          <target state="translated">7ビットの符号なし整数定数。</target>
        </trans-unit>
        <trans-unit id="4e392016af47c374eef4f8aaf14822a0c557c367" translate="yes" xml:space="preserve">
          <source>A 8-bit unsigned integer constant.</source>
          <target state="translated">8ビットの符号なし整数定数。</target>
        </trans-unit>
        <trans-unit id="083fa44b7c5e44320ff4ed2ae01244ea90801a78" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;lo_sum&lt;/code&gt; data-linkage-table memory operand</source>
          <target state="translated">&lt;code&gt;lo_sum&lt;/code&gt; データリンクテーブルメモリ・オペランド</target>
        </trans-unit>
        <trans-unit id="f9cd2e27d673f56cc94424aa5ac780102659b79a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;switch&lt;/code&gt; statement has an operand of type &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;switch&lt;/code&gt; ステートメントは、タイプのオペランドを持って &lt;code&gt;long&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0eff00ac09b6d2be5766ddb9515db21e223caed" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;typeof&lt;/code&gt; construct can be used anywhere a typedef name can be used. For example, you can use it in a declaration, in a cast, or inside of &lt;code&gt;sizeof&lt;/code&gt; or &lt;code&gt;typeof&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;typeof&lt;/code&gt; 演算の構築物は、どこでも使用することができtypedefの名前を使用することができます。たとえば、宣言、キャスト、または &lt;code&gt;sizeof&lt;/code&gt; や &lt;code&gt;typeof&lt;/code&gt; の内部で使用できます。</target>
        </trans-unit>
        <trans-unit id="0fcc11ba29659026ef90972ee49fd236e8ca7461" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;nested function&lt;/em&gt; is a function defined inside another function. Nested functions are supported as an extension in GNU C, but are not supported by GNU C++.</source>
          <target state="translated">&lt;em&gt;ネストされた関数は、&lt;/em&gt;別の関数の内部に定義された関数です。入れ子関数は、GNU Cの拡張機能としてサポートされていますが、GNU C ++ではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="c55a5d7e9e734b9cfd6d5b793b74655af96e5ff3" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;preprocessing token&lt;/em&gt; is a &lt;em&gt;preprocessing number&lt;/em&gt; if it begins with a digit and is followed by letters, underscores, digits, periods and &amp;lsquo;</source>
          <target state="translated">&lt;em&gt;前処理トークンが&lt;/em&gt;ある&lt;em&gt;前処理数&lt;/em&gt;が数字で始まり、文字が続く場合、下線、数字、期間および'</target>
        </trans-unit>
        <trans-unit id="226cffe8593eab9de1b46a1badbfea96e62ee6f4" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;thread&lt;/em&gt; is a flow of control within the abstract machine. It is implementation defined whether or not there may be more than one thread.</source>
          <target state="translated">&lt;em&gt;スレッドは、&lt;/em&gt;抽象マシン内の制御の流れです。複数のスレッドが存在するかどうかは、実装で定義されます。</target>
        </trans-unit>
        <trans-unit id="d63439749e9d375a44c13be44c44d3b25a8cbdd3" translate="yes" xml:space="preserve">
          <source>A C++ namespace declaration can also have the visibility attribute.</source>
          <target state="translated">C++名前空間宣言は visibility 属性を持つこともできます。</target>
        </trans-unit>
        <trans-unit id="f6e3cb01289f372ad5685f7b48da04f4e60a84ec" translate="yes" xml:space="preserve">
          <source>A GNU Manual</source>
          <target state="translated">GNUマニュアル</target>
        </trans-unit>
        <trans-unit id="cd8fd98a94ad304e430ad561d03982387ab58fa2" translate="yes" xml:space="preserve">
          <source>A basic &lt;code&gt;asm&lt;/code&gt; statement has the following syntax:</source>
          <target state="translated">基本的な &lt;code&gt;asm&lt;/code&gt; ステートメントの構文は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="6145aa4e1e7149a673e61fa6c454fd8a42cee7a8" translate="yes" xml:space="preserve">
          <source>A basic block profile count is considered hot if it contributes to the given permillage (i.e. 0...1000) of the entire profiled execution.</source>
          <target state="translated">基本的なブロックプロファイルのカウントは、プロファイル化された実行全体の所定のパーミラージュ(すなわち、0~1000)に貢献している場合、ホットとみなされます。</target>
        </trans-unit>
        <trans-unit id="2df3f34d53b76011b7a6bb1711d67e1df403856d" translate="yes" xml:space="preserve">
          <source>A binary type trait: &lt;code&gt;true&lt;/code&gt; whenever the type arguments are the same.</source>
          <target state="translated">バイナリ型の特性：型の引数が同じ場合は常に &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61a474d3c8a798ad9f41fbc155178fa260c3cbfd" translate="yes" xml:space="preserve">
          <source>A bit mask suitable for the BFINS instruction.</source>
          <target state="translated">BFINS命令に適したビットマスクです。</target>
        </trans-unit>
        <trans-unit id="1c197853a26bb6b9e64cfe3c20fc4b78dab065a2" translate="yes" xml:space="preserve">
          <source>A bit mask suitable for the MM instruction.</source>
          <target state="translated">MM命令に適したビットマスクです。</target>
        </trans-unit>
        <trans-unit id="fb82d601263ede6336b3a6d38f27a2db288988de" translate="yes" xml:space="preserve">
          <source>A bitfield mask suitable for bext or bins</source>
          <target state="translated">bext またはビンに適したビットフィールドマスク</target>
        </trans-unit>
        <trans-unit id="95088444b66d4c9478cf588a65f1dca5aa3b6e35" translate="yes" xml:space="preserve">
          <source>A c99-like declaration syntax is also allowed:</source>
          <target state="translated">c99のような宣言構文も許可されています。</target>
        </trans-unit>
        <trans-unit id="242045c1091165567c1e2bc6642eff026733baf4" translate="yes" xml:space="preserve">
          <source>A call clobbered P register.</source>
          <target state="translated">呼び出しでPのレジスターがやられた。</target>
        </trans-unit>
        <trans-unit id="6501e67efab2f7c858c0e0f7b446cd704c13a388" translate="yes" xml:space="preserve">
          <source>A call-used register in register file B (B0&amp;ndash;B9, B16&amp;ndash;B31).</source>
          <target state="translated">レジスター・ファイルB（B0&amp;ndash;B9、B16&amp;ndash;B31）の呼び出し使用レジスター。</target>
        </trans-unit>
        <trans-unit id="5a85a53751233b51746da27b56a87b1a58dd44bc" translate="yes" xml:space="preserve">
          <source>A cast from integer to pointer discards most-significant bits if the pointer representation is smaller than the integer type, extends according to the signedness of the integer type if the pointer representation is larger than the integer type, otherwise the bits are unchanged.</source>
          <target state="translated">整数からポインタへのキャストは、ポインタ表現が整数型よりも小さければ最も重要なビットを破棄し、ポインタ表現が整数型よりも大きければ整数型の符号化に従って拡張し、そうでなければビットは変更されません。</target>
        </trans-unit>
        <trans-unit id="9579e92267fbbcb00a411d24c34a20ac82cffc52" translate="yes" xml:space="preserve">
          <source>A cast from pointer to integer discards most-significant bits if the pointer representation is larger than the integer type, sign-extends&lt;a href=&quot;#FOOT2&quot; id=&quot;DOCF2&quot; name=&quot;DOCF2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; if the pointer representation is smaller than the integer type, otherwise the bits are unchanged.</source>
          <target state="translated">ポインタから整数へのキャストは、ポインタ表現が整数型より大きい場合は最上位ビットを破棄し、ポインタ表現が整数型より小さい場合は符号拡張&lt;a href=&quot;#FOOT2&quot; id=&quot;DOCF2&quot; name=&quot;DOCF2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;します。それ以外の場合はビットは変更されません。</target>
        </trans-unit>
        <trans-unit id="8d607e1d6022f86c3f2fb0150398c8747d6a9a20" translate="yes" xml:space="preserve">
          <source>A cast to a union type is a C extension not available in C++. It looks just like ordinary casts with the constraint that the type specified is a union type. You can specify the type either with the &lt;code&gt;union&lt;/code&gt; keyword or with a &lt;code&gt;typedef&lt;/code&gt; name that refers to a union. The result of a cast to a union is a temporary rvalue of the union type with a member whose type matches that of the operand initialized to the value of the operand. The effect of a cast to a union is similar to a compound literal except that it yields an rvalue like standard casts do. See &lt;a href=&quot;compound-literals#Compound-Literals&quot;&gt;Compound Literals&lt;/a&gt;.</source>
          <target state="translated">共用体型へのキャストは、C ++では使用できないC拡張です。これは、指定された型が共用体型であるという制約がある通常のキャストと同じように見えます。タイプは、 &lt;code&gt;union&lt;/code&gt; キーワードまたはユニオンを参照する &lt;code&gt;typedef&lt;/code&gt; 名のいずれかで指定できます。共用体へのキャストの結果は、型がオペランドの値に初期化されたオペランドの型と一致するメンバーを持つ共用体型の一時的な右辺値です。共用体へのキャストの効果は、標準のキャストが行うように右辺値を生成することを除いて、複合リテラルに似ています。&lt;a href=&quot;compound-literals#Compound-Literals&quot;&gt;複合リテラルを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="75e1479f2ae72adba50e5d40e09a4fb8d576ce4d" translate="yes" xml:space="preserve">
          <source>A combination of</source>
          <target state="translated">の組み合わせ</target>
        </trans-unit>
        <trans-unit id="de7ce58153dc3aa9a8a53f607567323d0809bd31" translate="yes" xml:space="preserve">
          <source>A comma-separated list of C expressions read by the instructions in the &lt;var&gt;AssemblerTemplate&lt;/var&gt;. An empty list is permitted. See &lt;a href=&quot;#InputOperands&quot;&gt;InputOperands&lt;/a&gt;.</source>
          <target state="translated">&lt;var&gt;AssemblerTemplate&lt;/var&gt; の指示によって読み取られるC式のコンマ区切りリスト。空のリストが許可されます。&lt;a href=&quot;#InputOperands&quot;&gt;InputOperandsを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5b5d944665cc53cab2f2ad1f645c434c5620d068" translate="yes" xml:space="preserve">
          <source>A comma-separated list of registers or other values changed by the &lt;var&gt;AssemblerTemplate&lt;/var&gt;, beyond those listed as outputs. An empty list is permitted. See &lt;a href=&quot;#Clobbers-and-Scratch-Registers&quot;&gt;Clobbers and Scratch Registers&lt;/a&gt;.</source>
          <target state="translated">出力としてリストされたものを超えて、 &lt;var&gt;AssemblerTemplate&lt;/var&gt; によって変更されたレジスターまたはその他の値のコンマ区切りリスト。空のリストが許可されます。&lt;a href=&quot;#Clobbers-and-Scratch-Registers&quot;&gt;Clobbers and Scratch Registersを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="65d21196a0c3e5a9f693ae19ae22931182555110" translate="yes" xml:space="preserve">
          <source>A comma-separated list of the C variables modified by the instructions in the &lt;var&gt;AssemblerTemplate&lt;/var&gt;. An empty list is permitted. See &lt;a href=&quot;#OutputOperands&quot;&gt;OutputOperands&lt;/a&gt;.</source>
          <target state="translated">&lt;var&gt;AssemblerTemplate&lt;/var&gt; の命令によって変更されたC変数のカンマ区切りリスト。空のリストが許可されます。&lt;a href=&quot;#OutputOperands&quot;&gt;OutputOperandsを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="57ff1562fe61f1f887425ce2cee86f1d3d93e844" translate="yes" xml:space="preserve">
          <source>A compiler conforms to an ABI if it generates code that follows all of the specifications enumerated by that ABI. A library conforms to an ABI if it is implemented according to that ABI. An application conforms to an ABI if it is built using tools that conform to that ABI and does not contain source code that specifically changes behavior specified by the ABI.</source>
          <target state="translated">コンパイラは、そのABIで列挙されたすべての仕様に従ったコードを生成する場合、ABIに準拠します。ライブラリは、そのABIに従って実装されていればABIに準拠します。アプリケーションは、そのABIに準拠したツールを使用して構築され、ABIで指定された動作を特に変更するソースコードを含まない場合、ABIに準拠します。</target>
        </trans-unit>
        <trans-unit id="41c80a94e954da6243e86405854638e4aa3a6477" translate="yes" xml:space="preserve">
          <source>A compound literal looks like a cast of a brace-enclosed aggregate initializer list. Its value is an object of the type specified in the cast, containing the elements specified in the initializer. Unlike the result of a cast, a compound literal is an lvalue. ISO C99 and later support compound literals. As an extension, GCC supports compound literals also in C90 mode and in C++, although as explained below, the C++ semantics are somewhat different.</source>
          <target state="translated">複合リテラルは、中括弧で囲まれた集約初期化リストのキャストのように見えます。その値は、初期化子で指定された要素を含む、キャストで指定された型のオブジェクトです。キャストの結果とは異なり、複合リテラルはlvalueです。ISO C99 以降では、複合リテラルがサポートされています。拡張機能として、GCC は C90 モードと C++で複合リテラルをサポートしていますが、後述するように C++のセマンティクスは多少異なります。</target>
        </trans-unit>
        <trans-unit id="f6dd9a1a8f56216b2f65e6b7a8c29b8ee8f55106" translate="yes" xml:space="preserve">
          <source>A compound statement enclosed in parentheses may appear as an expression in GNU C. This allows you to use loops, switches, and local variables within an expression.</source>
          <target state="translated">括弧で囲まれた複合文は、GNU Cの式として現れることがあります。これにより、式の中でループ、スイッチ、ローカル変数を使用することができます。</target>
        </trans-unit>
        <trans-unit id="8a72443d4592827fe4ca85bea82301121049b91e" translate="yes" xml:space="preserve">
          <source>A conforming implementation of ISO C is required to document its choice of behavior in each of the areas that are designated &amp;ldquo;implementation defined&amp;rdquo;. The following lists all such areas, along with the section numbers from the ISO/IEC 9899:1990, ISO/IEC 9899:1999 and ISO/IEC 9899:2011 standards. Some areas are only implementation-defined in one version of the standard.</source>
          <target state="translated">ISO Cの適合実装は、「実装定義」と指定されている各領域での動作の選択を文書化する必要があります。以下は、ISO / IEC 9899：1990、ISO / IEC 9899：1999、およびISO / IEC 9899：2011規格のセクション番号とともに、そのような領域すべてをリストしています。一部の領域は、標準の1つのバージョンでのみ実装定義されています。</target>
        </trans-unit>
        <trans-unit id="d4cb4e2bf524da1d62affddb40dfb630800239af" translate="yes" xml:space="preserve">
          <source>A conforming implementation of ISO C++ is required to document its choice of behavior in each of the areas that are designated &amp;ldquo;implementation defined&amp;rdquo;. The following lists all such areas, along with the section numbers from the ISO/IEC 14882:1998 and ISO/IEC 14882:2003 standards. Some areas are only implementation-defined in one version of the standard.</source>
          <target state="translated">ISO C ++の適合実装は、「実装定義」と指定されている各領域での動作の選択を文書化する必要があります。以下は、ISO / IEC 14882：1998およびISO / IEC 14882：2003規格のセクション番号とともに、そのような領域をすべてリストしています。一部の領域は、標準の1つのバージョンでのみ実装定義されています。</target>
        </trans-unit>
        <trans-unit id="7b29cb3b319ec95ede4a30707c842823bf94b7db" translate="yes" xml:space="preserve">
          <source>A consequence of this is that &lt;code&gt;sizeof&lt;/code&gt; is also allowed on &lt;code&gt;void&lt;/code&gt; and on function types, and returns 1.</source>
          <target state="translated">この結果、 &lt;code&gt;sizeof&lt;/code&gt; は &lt;code&gt;void&lt;/code&gt; と関数型でも許可され、1を返します。</target>
        </trans-unit>
        <trans-unit id="7cad9a0baf039ead351d859d05c0365e63661fb9" translate="yes" xml:space="preserve">
          <source>A constant between -255 and 0 inclusive.</source>
          <target state="translated">255から0までの間の定数です。</target>
        </trans-unit>
        <trans-unit id="4f8cd8bf499f2d6d54a71ffc2d3e21cf7ef45e36" translate="yes" xml:space="preserve">
          <source>A constant between -3 and 0 inclusive.</source>
          <target state="translated">3から0までの間の定数です。</target>
        </trans-unit>
        <trans-unit id="19428213d0a5f62ee0574191f3ae2f2ddd996015" translate="yes" xml:space="preserve">
          <source>A constant between -4 and -1 inclusive.</source>
          <target state="translated">4から-1までの間の定数。</target>
        </trans-unit>
        <trans-unit id="d2fbc8414f61903ae333dcf7ac7a844a0c7b23fe" translate="yes" xml:space="preserve">
          <source>A constant between 0 and 255 inclusive.</source>
          <target state="translated">0から255までの間の定数。</target>
        </trans-unit>
        <trans-unit id="12f6b4cb352959b8bca5dac3da05fd53e64fa274" translate="yes" xml:space="preserve">
          <source>A constant between 0 and 3 inclusive.</source>
          <target state="translated">0から3の間の定数。</target>
        </trans-unit>
        <trans-unit id="da945b1c391dff3ac6bc6d5fbd2be9149c62266c" translate="yes" xml:space="preserve">
          <source>A constant between 1 and 4 inclusive.</source>
          <target state="translated">1から4までの間の定数。</target>
        </trans-unit>
        <trans-unit id="c0aca6087bfc1e63cba0551e38002443555e0fac" translate="yes" xml:space="preserve">
          <source>A constant for a bitfield width (1 &amp;hellip; 16)</source>
          <target state="translated">ビットフィールド幅の定数（1&amp;hellip;16）</target>
        </trans-unit>
        <trans-unit id="6d56856d82b6a91412eed6d7df5c640079002d4d" translate="yes" xml:space="preserve">
          <source>A constant in the range -128 to 127, inclusive.</source>
          <target state="translated">128~127の範囲の定数。</target>
        </trans-unit>
        <trans-unit id="17b05b4c60ac27d1e72d8030837136d5fa0be31c" translate="yes" xml:space="preserve">
          <source>A constant in the range -256 to 255, inclusive.</source>
          <target state="translated">256~255の範囲の定数。</target>
        </trans-unit>
        <trans-unit id="695a694abf391bc605e989d6eb5dbacf14f628c2" translate="yes" xml:space="preserve">
          <source>A constant in the range -32768 to 32767, inclusive.</source>
          <target state="translated">32768~32767の範囲の定数。</target>
        </trans-unit>
        <trans-unit id="2e51455a9b3294a37777151389f3c055d9628f83" translate="yes" xml:space="preserve">
          <source>A constant in the range -65535 to -1 (inclusive).</source>
          <target state="translated">65535から-1(含む)の範囲の定数。</target>
        </trans-unit>
        <trans-unit id="a2eafd56ff7c3244c125e89f98b5047314116000" translate="yes" xml:space="preserve">
          <source>A constant in the range -8388608 to 8388607, inclusive.</source>
          <target state="translated">8388608~8388607の範囲の定数。</target>
        </trans-unit>
        <trans-unit id="097b361ff7733f96fe3db5433e37aba686b852b1" translate="yes" xml:space="preserve">
          <source>A constant in the range 0 to 15, inclusive.</source>
          <target state="translated">0~15の範囲の定数。</target>
        </trans-unit>
        <trans-unit id="a36455a425b9727ae75ec8f878c7951252ab00ab" translate="yes" xml:space="preserve">
          <source>A constant in the range 1 to 65535 (inclusive).</source>
          <target state="translated">1~65535(含む)の範囲の定数。</target>
        </trans-unit>
        <trans-unit id="2a58c4a3cc79eb84153470348476e3f269dac278" translate="yes" xml:space="preserve">
          <source>A constant in the range [-64, 63] for shift/rotate instructions.</source>
          <target state="translated">シフト/回転命令用の[-64,63]の範囲の定数です。</target>
        </trans-unit>
        <trans-unit id="10785db1e9d20c3cdec60f076d95570e2881e446" translate="yes" xml:space="preserve">
          <source>A constant in the range of 0 to -255.</source>
          <target state="translated">0~-255の範囲の定数です。</target>
        </trans-unit>
        <trans-unit id="5b0495335754f2b58bcc5c273f50a0ad47fb4980" translate="yes" xml:space="preserve">
          <source>A constant in the range of 0 to 255.</source>
          <target state="translated">0~255の範囲の定数。</target>
        </trans-unit>
        <trans-unit id="3df560572af8da9f608ecbfa457628a58591cc1d" translate="yes" xml:space="preserve">
          <source>A constant in the range supported by &lt;code&gt;movcc&lt;/code&gt; instructions (11-bit signed immediate)</source>
          <target state="translated">&lt;code&gt;movcc&lt;/code&gt; 命令でサポートされる範囲の定数（11ビット符号付き即値）</target>
        </trans-unit>
        <trans-unit id="e6b217cb7e92669add738eef6823abf207c1faff" translate="yes" xml:space="preserve">
          <source>A constant in the range supported by &lt;code&gt;movrcc&lt;/code&gt; instructions (10-bit signed immediate)</source>
          <target state="translated">&lt;code&gt;movrcc&lt;/code&gt; 命令でサポートされている範囲の定数（10ビット符号付き即値）</target>
        </trans-unit>
        <trans-unit id="f72ba093b9d9c51600024c95028a46b05718f280" translate="yes" xml:space="preserve">
          <source>A constant that cannot be loaded using &lt;code&gt;lui&lt;/code&gt;, &lt;code&gt;addiu&lt;/code&gt; or &lt;code&gt;ori&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lui&lt;/code&gt; 、 &lt;code&gt;addiu&lt;/code&gt; 、 &lt;code&gt;ori&lt;/code&gt; を使用してロードできない定数。</target>
        </trans-unit>
        <trans-unit id="7c2d44283a3acc9bdc683ea83a3f874e52a46752" translate="yes" xml:space="preserve">
          <source>A constant that has exactly one bit clear.</source>
          <target state="translated">きっちり1ビットクリアしている定数。</target>
        </trans-unit>
        <trans-unit id="cfb3a0520f6d9864d7a1976144208cbbd9174378" translate="yes" xml:space="preserve">
          <source>A constant that has exactly one bit set.</source>
          <target state="translated">正確に1ビットが設定されている定数。</target>
        </trans-unit>
        <trans-unit id="f067235028290b700b44d1ece783ed553e206e2b" translate="yes" xml:space="preserve">
          <source>A constant that is not between 2 and 15 inclusive.</source>
          <target state="translated">2と15の間に含まれていない定数。</target>
        </trans-unit>
        <trans-unit id="dc8b34473e04adc25852b0eed10f1d174b004494" translate="yes" xml:space="preserve">
          <source>A constant which is not in the range of imm15u but ok for bclr instruction.</source>
          <target state="translated">imm15uの範囲外の定数ですが、bclr命令では問題ありません。</target>
        </trans-unit>
        <trans-unit id="c6a1b8bc59cee8c8f6571d6cc94e881414d8fd98" translate="yes" xml:space="preserve">
          <source>A constant which is not in the range of imm15u but ok for bset instruction.</source>
          <target state="translated">imm15uの範囲内ではありませんが、bset命令ではOKな定数です。</target>
        </trans-unit>
        <trans-unit id="5a081f0e675d939eda6d41b659eb1a4796698f55" translate="yes" xml:space="preserve">
          <source>A constant which is not in the range of imm15u but ok for btgl instruction.</source>
          <target state="translated">imm15uの範囲外の定数ですが、BTGL命令では問題ありません。</target>
        </trans-unit>
        <trans-unit id="739639d0dba642847055adad6d408a8462cefd56" translate="yes" xml:space="preserve">
          <source>A constant whose compliment value is in the range of imm15u and ok for bitci instruction.</source>
          <target state="translated">ビットシー命令の補完値が imm15u と ok の範囲内にある定数です。</target>
        </trans-unit>
        <trans-unit id="772d4006b3b3b9f5dbb1eb8305ae0da40df09812" translate="yes" xml:space="preserve">
          <source>A decimal number representing clock cycles.</source>
          <target state="translated">クロックサイクルを表す10進数。</target>
        </trans-unit>
        <trans-unit id="871d38c63e186ae7cd0f311fcbbf75d49f235704" translate="yes" xml:space="preserve">
          <source>A deprecated synonym for</source>
          <target state="translated">非推奨の同義語</target>
        </trans-unit>
        <trans-unit id="35b2c49fceb685c2e6ddfd9b7ccde26327c395da" translate="yes" xml:space="preserve">
          <source>A diagnostic can contain zero or more locations. Each location has up to three positions within it: a &lt;code&gt;caret&lt;/code&gt; position and optional &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;finish&lt;/code&gt; positions. A location can also have an optional &lt;code&gt;label&lt;/code&gt; string. For example, this error:</source>
          <target state="translated">診断には0個以上の場所を含めることができます。各場所には、 &lt;code&gt;caret&lt;/code&gt; 位置とオプションの &lt;code&gt;start&lt;/code&gt; 位置と &lt;code&gt;finish&lt;/code&gt; 位置の3つの位置があります。場所には、オプションの &lt;code&gt;label&lt;/code&gt; 文字列を含めることもできます。たとえば、このエラー：</target>
        </trans-unit>
        <trans-unit id="1d3956dd1850c8ee01dd888bb0a0a3023c553d32" translate="yes" xml:space="preserve">
          <source>A diagnostic has a &lt;code&gt;kind&lt;/code&gt;. If this is &lt;code&gt;warning&lt;/code&gt;, then there is an &lt;code&gt;option&lt;/code&gt; key describing the command-line option controlling the warning.</source>
          <target state="translated">診断には &lt;code&gt;kind&lt;/code&gt; ます。これが &lt;code&gt;warning&lt;/code&gt; 場合、警告を制御するコマンドラインオプションを説明する &lt;code&gt;option&lt;/code&gt; キーがあります。</target>
        </trans-unit>
        <trans-unit id="64d7123704bf7fa0f1e73d01535513a0dc7c2748" translate="yes" xml:space="preserve">
          <source>A different sort of disaster results from the use of this flag for a register in which function values may be returned.</source>
          <target state="translated">関数値が返される可能性のあるレジスタにこのフラグを使用すると、別の種類の災害が発生します。</target>
        </trans-unit>
        <trans-unit id="c32446d7ea192a83db5ac54835cfe4c3d265fe83" translate="yes" xml:space="preserve">
          <source>A factor for tuning the upper bound that swing modulo scheduler uses for scheduling a loop.</source>
          <target state="translated">swing modulo スケジューラがループをスケジューリングする際に使用する上限値を調整するための因子。</target>
        </trans-unit>
        <trans-unit id="a7b34a84c6690fd83c05d2fa16fc0c287bb3da1b" translate="yes" xml:space="preserve">
          <source>A feature to report any failure to conform to ISO C might be useful in some instances, but would require considerable additional work and would be quite different from</source>
          <target state="translated">ISO C に適合していないことを報告する機能は、いくつかのインスタンスでは有用かもしれませんが、かなりの追加作業が必要になります。</target>
        </trans-unit>
        <trans-unit id="b2a29cc3baea0c08d4a825d0752f1c7c91b7a29c" translate="yes" xml:space="preserve">
          <source>A few standard library functions, such as &lt;code&gt;abort&lt;/code&gt; and &lt;code&gt;exit&lt;/code&gt;, cannot return. GCC knows this automatically. Some programs define their own functions that never return. You can declare them &lt;code&gt;noreturn&lt;/code&gt; to tell the compiler this fact. For example,</source>
          <target state="translated">&lt;code&gt;abort&lt;/code&gt; や &lt;code&gt;exit&lt;/code&gt; などのいくつかの標準ライブラリ関数は戻ることができません。GCCはこれを自動的に認識します。一部のプログラムは、決して戻らない独自の関数を定義しています。それらを &lt;code&gt;noreturn&lt;/code&gt; と宣言して、コンパイラにこの事実を伝えることができます。例えば、</target>
        </trans-unit>
        <trans-unit id="cb463f377ea974dd6c90f4d5e14fe7753fa59c05" translate="yes" xml:space="preserve">
          <source>A file name that does not end in a special recognized suffix is considered to name an object file or library. (Object files are distinguished from libraries by the linker according to the file contents.) If linking is done, these object files are used as input to the linker.</source>
          <target state="translated">特別に認識された接尾辞で終わらないファイル名は、オブジェクトファイルまたはライブラリの名前とみなされます。(オブジェクト・ファイルはファイルの内容によってリンカがライブラリと区別します)。リンクされた場合は、これらのオブジェクトファイルがリンカへの入力として使用されます。</target>
        </trans-unit>
        <trans-unit id="31a3ef8a1f914c346a656751b3762e1f23b6d753" translate="yes" xml:space="preserve">
          <source>A file&amp;rsquo;s &lt;em&gt;basename&lt;/em&gt; is the name stripped of all leading path information and of trailing suffixes, such as &amp;lsquo;</source>
          <target state="translated">ファイルの&lt;em&gt;ベース名&lt;/em&gt;は、先頭のパス情報と末尾のサフィックスをすべて取り除いた名前です。</target>
        </trans-unit>
        <trans-unit id="3cb6c35b9f770d58e9e6ae1be71711d84191b278" translate="yes" xml:space="preserve">
          <source>A floating point constant 0.0</source>
          <target state="translated">浮動小数点定数 0.0</target>
        </trans-unit>
        <trans-unit id="35a05594f7fa158ed7e1a662576eede9b7714efc" translate="yes" xml:space="preserve">
          <source>A floating-point condition code register.</source>
          <target state="translated">浮動小数点の条件コードレジスタです。</target>
        </trans-unit>
        <trans-unit id="6a5e282398dc91c4802485c8333b0a476c54fe7d" translate="yes" xml:space="preserve">
          <source>A floating-point register (if available).</source>
          <target state="translated">浮動小数点レジスタ(利用可能な場合)。</target>
        </trans-unit>
        <trans-unit id="f68f63f0de9f100e3091753e0a87b4bdcab324f8" translate="yes" xml:space="preserve">
          <source>A floating-point register (if availiable).</source>
          <target state="translated">浮動小数点レジスタ(利用可能な場合)。</target>
        </trans-unit>
        <trans-unit id="1d93f84bcb43d9808ea6d43552092e130f8e5d2b" translate="yes" xml:space="preserve">
          <source>A fourth version of the C standard, known as &lt;em&gt;C11&lt;/em&gt;, was published in 2011 as ISO/IEC 9899:2011. (While in development, drafts of this standard version were referred to as &lt;em&gt;C1X&lt;/em&gt;.) GCC has substantially complete support for this standard, enabled with</source>
          <target state="translated">&lt;em&gt;C11&lt;/em&gt;として知られているC規格の4番目のバージョンは、ISO / IEC 9899：2011として2011年に公開されました。（開発中、この標準バージョンのドラフトは&lt;em&gt;C1X&lt;/em&gt;と呼ばれてい&lt;em&gt;ました&lt;/em&gt;。）GCCはこの標準を実質的に完全にサポートしており、</target>
        </trans-unit>
        <trans-unit id="55257df904754ff4c13989bc1d064dbb261da350" translate="yes" xml:space="preserve">
          <source>A framework directory is a directory with frameworks in it. A framework is a directory with a</source>
          <target state="translated">フレームワークディレクトリとは、フレームワークが入っているディレクトリのことです。フレームワークのディレクトリは</target>
        </trans-unit>
        <trans-unit id="5ba28f66c2dca176d361d13d2cfcd58e64de11b1" translate="yes" xml:space="preserve">
          <source>A function declared external in one block and then used after the end of the block.</source>
          <target state="translated">1つのブロックで外部に宣言された関数で、ブロックの終了後に使用されます。</target>
        </trans-unit>
        <trans-unit id="31442efa0c2c801bce0a5591e6aced95492894fb" translate="yes" xml:space="preserve">
          <source>A function may be given the attribute &lt;code&gt;no_instrument_function&lt;/code&gt;, in which case this instrumentation is not done. This can be used, for example, for the profiling functions listed above, high-priority interrupt routines, and any functions from which the profiling functions cannot safely be called (perhaps signal handlers, if the profiling routines generate output or allocate memory). See &lt;a href=&quot;common-function-attributes#Common-Function-Attributes&quot;&gt;Common Function Attributes&lt;/a&gt;.</source>
          <target state="translated">関数には属性 &lt;code&gt;no_instrument_function&lt;/code&gt; を指定できます。この場合、この計測は行われません。これは、たとえば、上記のプロファイリング関数、優先度の高い割り込みルーチン、およびプロファイリング関数を安全に呼び出すことができない関数（おそらく、プロファイリングルーチンが出力を生成するか、メモリを割り当てる場合はシグナルハンドラー）に使用できます。&lt;a href=&quot;common-function-attributes#Common-Function-Attributes&quot;&gt;Common Function Attributesを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a3b5c7a586587400ee92ec622d45d7b4bfd1b3e3" translate="yes" xml:space="preserve">
          <source>A function parameter is declared without a type specifier in K&amp;amp;R-style functions:</source>
          <target state="translated">関数パラメーターは、K＆Rスタイルの関数で型指定子なしで宣言されます。</target>
        </trans-unit>
        <trans-unit id="4a55e26416d74770259268d8b952c442c03d140f" translate="yes" xml:space="preserve">
          <source>A function-like macro that appears without arguments.</source>
          <target state="translated">引数なしで現れる関数のようなマクロ。</target>
        </trans-unit>
        <trans-unit id="debf2118f99ae7d5fcef4420f2e62948ac9db34c" translate="yes" xml:space="preserve">
          <source>A further version of the C standard, known as &lt;em&gt;C2X&lt;/em&gt;, is under development; experimental and incomplete support for this is enabled with</source>
          <target state="translated">&lt;em&gt;C2X&lt;/em&gt;として知られるC標準のさらなるバージョンが開発中です。これに対する実験的で不完全なサポートは、</target>
        </trans-unit>
        <trans-unit id="3a8db3cc1b660b8c40d207078f962c2f15753e61" translate="yes" xml:space="preserve">
          <source>A general register (&lt;code&gt;r0&lt;/code&gt; to &lt;code&gt;r31&lt;/code&gt;).</source>
          <target state="translated">汎用レジスター（ &lt;code&gt;r0&lt;/code&gt; から &lt;code&gt;r31&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4c9d8cf8321530b1a940502b30ac5acf72522d1e" translate="yes" xml:space="preserve">
          <source>A general-purpose register. This is equivalent to &lt;code&gt;r&lt;/code&gt; unless generating MIPS16 code, in which case the MIPS16 register set is used.</source>
          <target state="translated">汎用レジスター。これは &lt;code&gt;r&lt;/code&gt; 、MIPS16コードを生成しない限りrです。その場合、MIPS16レジスタセットが使用されます。</target>
        </trans-unit>
        <trans-unit id="d2030f94473ff72afe09286a5000f598b54444ee" translate="yes" xml:space="preserve">
          <source>A generic CPU with 64-bit extensions.</source>
          <target state="translated">64ビット拡張した汎用CPU。</target>
        </trans-unit>
        <trans-unit id="1e6fe121c0bf0b0f224a8bd42e66a0a587219c64" translate="yes" xml:space="preserve">
          <source>A given program is written in one or the other of these two dialects. The program stands a chance to work on most any machine if it is compiled with the proper dialect. It is unlikely to work at all if compiled with the wrong dialect.</source>
          <target state="translated">与えられたプログラムは、これら2つの方言のうちの1つまたはもう1つで書かれています。適切な方言でコンパイルされていれば、そのプログラムはほとんどのマシンで動作する可能性があります。間違った方言でコンパイルされた場合は、全く動作しない可能性があります。</target>
        </trans-unit>
        <trans-unit id="6c5058629f496fbd3a9b20ab2118be652c13eb69" translate="yes" xml:space="preserve">
          <source>A good explanation of the benefits offered by ensuring ELF symbols have the correct visibility is given by &amp;ldquo;How To Write Shared Libraries&amp;rdquo; by Ulrich Drepper (which can be found at &lt;a href=&quot;https://www.akkadia.org/drepper/&quot;&gt;https://www.akkadia.org/drepper/&lt;/a&gt;)&amp;mdash;however a superior solution made possible by this option to marking things hidden when the default is public is to make the default hidden and mark things public. This is the norm with DLLs on Windows and with</source>
          <target state="translated">ELFシンボルが正しい可視性を持つようにすることで得られる利点の適切な説明は、Ulrich Drepperによる「共有ライブラリの書き方」（&lt;a href=&quot;https://www.akkadia.org/drepper/&quot;&gt;https://www.akkadia.org/drepper/に&lt;/a&gt;あります）で説明されています。）によるただし、このオプションによって可能になる優れたソリューションは、デフォルトがパブリックであるときに非表示のものをマークすることで、デフォルトを非表示にしてパブリックのものをマークすることです。これは、WindowsのDLLと</target>
        </trans-unit>
        <trans-unit id="4b92b6d35d4ef9edd4bc988a5b041656a4bfb9c4" translate="yes" xml:space="preserve">
          <source>A local label declaration looks like this:</source>
          <target state="translated">ローカルラベル宣言は次のようになります。</target>
        </trans-unit>
        <trans-unit id="4eae759733edfeb41cf185aaf992eb0590b9b2a1" translate="yes" xml:space="preserve">
          <source>A local variable or class data member declared both &lt;code&gt;static&lt;/code&gt; and &lt;code&gt;__thread&lt;/code&gt; gives the variable or member thread storage duration.</source>
          <target state="translated">&lt;code&gt;static&lt;/code&gt; と &lt;code&gt;__thread&lt;/code&gt; の両方を宣言したローカル変数またはクラスデータメンバーは、変数またはメンバーのスレッドストレージ期間を提供します。</target>
        </trans-unit>
        <trans-unit id="cbc079ebb13b05a28fc7e6b5c8e9b7e32b012d41" translate="yes" xml:space="preserve">
          <source>A loop expected to iterate at least the selected number of iterations is aligned.</source>
          <target state="translated">少なくとも選択した回数以上の反復処理を行うことが期待されるループを整列させます。</target>
        </trans-unit>
        <trans-unit id="e6e2fdd4a6e2c1dbe43d588ddf3a77eab778b7d1" translate="yes" xml:space="preserve">
          <source>A member of a union object is accessed using a member of a different type (C90 6.3.2.3).</source>
          <target state="translated">ユニオンオブジェクトのメンバは、異なる型のメンバを用いてアクセスする(C90 6.3.2.3)。</target>
        </trans-unit>
        <trans-unit id="d48a8ba2b56e035d8312e0298f36fac9054a9681" translate="yes" xml:space="preserve">
          <source>A memory address based on Y or Z pointer with displacement.</source>
          <target state="translated">変位を伴うYまたはZポインタに基づくメモリアドレス。</target>
        </trans-unit>
        <trans-unit id="3b84dcc8ac9137874012ebfd9eadab8bb949fee4" translate="yes" xml:space="preserve">
          <source>A memory address suitable for a load/store pair instruction in SI, DI, SF and DF modes</source>
          <target state="translated">SI,DI,SF,DFモードでのロード/ストアペア命令に適したメモリアドレス</target>
        </trans-unit>
        <trans-unit id="0bb3634ff6bc0ca41e70f28fef8acf81311e449f" translate="yes" xml:space="preserve">
          <source>A memory address that will work with the &lt;code&gt;lq&lt;/code&gt; and &lt;code&gt;stq&lt;/code&gt; instructions.</source>
          <target state="translated">&lt;code&gt;lq&lt;/code&gt; および &lt;code&gt;stq&lt;/code&gt; で動作するメモリアドレス命令で。</target>
        </trans-unit>
        <trans-unit id="e82efce1d813a82c9a30ae4a9287debad5d5c479" translate="yes" xml:space="preserve">
          <source>A memory address which uses a single base register with no offset</source>
          <target state="translated">オフセットのない単一のベースレジスタを使用するメモリアドレス。</target>
        </trans-unit>
        <trans-unit id="d889b3934276ee507afa50f38217acb1e8a60ca1" translate="yes" xml:space="preserve">
          <source>A memory operand for floating-point loads and stores</source>
          <target state="translated">浮動小数点のロードおよびストアのためのメモリオペランド</target>
        </trans-unit>
        <trans-unit id="76dff8679e9a8f7ce2eb5bb8fad71047c6747dbc" translate="yes" xml:space="preserve">
          <source>A memory operand is allowed, but only if the address is &lt;em&gt;offsettable&lt;/em&gt;. This means that adding a small integer (actually, the width in bytes of the operand, as determined by its machine mode) may be added to the address and the result is also a valid memory address.</source>
          <target state="translated">メモリオペランドは使用できますが、アドレスが&lt;em&gt;offsettableの&lt;/em&gt;場合のみです。これは、小さな整数（実際には、マシンモードによって決定されるオペランドのバイト単位の幅）をアドレスに追加でき、その結果も有効なメモリアドレスになることを意味します。</target>
        </trans-unit>
        <trans-unit id="388671fe2c36d60a932779a67c16d85d78ac2d17" translate="yes" xml:space="preserve">
          <source>A memory operand is allowed, with any kind of address that the machine supports in general. Note that the letter used for the general memory constraint can be re-defined by a back end using the &lt;code&gt;TARGET_MEM_CONSTRAINT&lt;/code&gt; macro.</source>
          <target state="translated">マシンが一般的にサポートするあらゆる種類のアドレスで、メモリオペランドが許可されます。一般的なメモリ制約に使用される文字は、 &lt;code&gt;TARGET_MEM_CONSTRAINT&lt;/code&gt; マクロを使用してバックエンドで再定義できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e12c184fcd9f0721bc91e2359dd6f356789155c7" translate="yes" xml:space="preserve">
          <source>A memory operand suitable for Nios II R2 load/store exclusive instructions.</source>
          <target state="translated">Nios II R2のロード/ストア専用命令に適したメモリオペランド。</target>
        </trans-unit>
        <trans-unit id="7146411d4e212e3eace6ea02064bc67368c7d22e" translate="yes" xml:space="preserve">
          <source>A memory operand suitable for load/store IO and cache instructions.</source>
          <target state="translated">ロード/ストアIOやキャッシュ命令に適したメモリオペランド。</target>
        </trans-unit>
        <trans-unit id="40ed4ba7f90bf88673d73789aca447219b51285c" translate="yes" xml:space="preserve">
          <source>A memory operand suitable for the ISA 3.0 vector d-form instructions.</source>
          <target state="translated">ISA 3.0のベクトルdフォーム命令に適したメモリオペランドです。</target>
        </trans-unit>
        <trans-unit id="84bfbe27f0967bbd8165fcff340f78cb41e95ca2" translate="yes" xml:space="preserve">
          <source>A memory operand that can be used as the destination operand of an integer store instruction</source>
          <target state="translated">整数ストア命令のデスティネーション・オペランドとして使用できるメモリ・オペランド。</target>
        </trans-unit>
        <trans-unit id="96695f63007ab0923706713901f4b85b969e2a0a" translate="yes" xml:space="preserve">
          <source>A memory operand that is not offsettable. In other words, anything that would fit the &amp;lsquo;</source>
          <target state="translated">オフセットできないメモリオペランド。言い換えれば、「</target>
        </trans-unit>
        <trans-unit id="1a801a13c9b53ba2ca78c13cc2cdf8d621afb8bd" translate="yes" xml:space="preserve">
          <source>A memory operand whose address is formed by a base register and offset that is suitable for use in instructions with the same addressing mode as &lt;code&gt;ll&lt;/code&gt; and &lt;code&gt;sc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ll&lt;/code&gt; および &lt;code&gt;sc&lt;/code&gt; と同じアドレッシングモードの命令での使用に適した、ベースレジスタとオフセットによってアドレスが形成されるメモリオペランド。</target>
        </trans-unit>
        <trans-unit id="0cf579681538dd24f4c522430fbc1d9db816f237" translate="yes" xml:space="preserve">
          <source>A memory operand with autodecrement addressing (either predecrement or postdecrement) is allowed. In inline &lt;code&gt;asm&lt;/code&gt; this constraint is only allowed if the operand is used exactly once in an instruction that can handle the side effects. Not using an operand with &amp;lsquo;</source>
          <target state="translated">自動減分アドレッシング（前減分または後減分）を備えたメモリオペランドが許可されます。インライン &lt;code&gt;asm&lt;/code&gt; では、この制約は、副作用を処理できる命令でオペランドが1回だけ使用される場合にのみ許可されます。'でオペランドを使用していません</target>
        </trans-unit>
        <trans-unit id="cdc334ade8276d0cf5a4c832b12ab9caa48613bc" translate="yes" xml:space="preserve">
          <source>A memory operand with autoincrement addressing (either preincrement or postincrement) is allowed. In inline &lt;code&gt;asm&lt;/code&gt; the same restrictions as for &amp;lsquo;</source>
          <target state="translated">自動インクリメントアドレッシング（プリインクリメントまたはポストインクリメント）を備えたメモリオペランドが許可されます。インライン &lt;code&gt;asm&lt;/code&gt; では 'と同じ制限</target>
        </trans-unit>
        <trans-unit id="a4c1412da74dea8e31160c68dd4c58d9ddd39d1e" translate="yes" xml:space="preserve">
          <source>A memory reference suitable for VFP load/store insns (reg+constant offset)</source>
          <target state="translated">VFPのロード/ストア・インスタンスに適したメモリ・リファレンス(reg+定数オフセット)</target>
        </trans-unit>
        <trans-unit id="3a8bf2f192d44bf25c5dafeee0b8eaa22bcc9154" translate="yes" xml:space="preserve">
          <source>A memory reference suitable for iWMMXt load/store instructions.</source>
          <target state="translated">iWMMXtのロード/ストア命令に適したメモリリファレンスです。</target>
        </trans-unit>
        <trans-unit id="4b919c81ffb39ef6f8f9eb3d7ccc854afd2048d5" translate="yes" xml:space="preserve">
          <source>A memory reference suitable for the ARMv4 ldrsb instruction.</source>
          <target state="translated">ARMv4のldrsb命令に適したメモリ参照。</target>
        </trans-unit>
        <trans-unit id="0281e56b013121500cc01f595e9459e28872a62b" translate="yes" xml:space="preserve">
          <source>A memory reference that is a stack pop.</source>
          <target state="translated">スタックポップであるメモリ参照。</target>
        </trans-unit>
        <trans-unit id="19169aa6dfaeac0eed19cdca087e18730184a143" translate="yes" xml:space="preserve">
          <source>A memory reference that is a stack push.</source>
          <target state="translated">スタックプッシュであるメモリ参照。</target>
        </trans-unit>
        <trans-unit id="9f8594bf5c6cb542733511c9002f352d41b3d7e8" translate="yes" xml:space="preserve">
          <source>A memory reference that is encoded within the opcode, but not auto-increment or auto-decrement.</source>
          <target state="translated">オプコード内でエンコードされているが、オートインクリメントやオートデクリメントではないメモリ参照。</target>
        </trans-unit>
        <trans-unit id="261f1d2ca930e0206ac633c0e47452ba885dfea6" translate="yes" xml:space="preserve">
          <source>A memory reference that is encoded within the opcode.</source>
          <target state="translated">オプトコード内でエンコードされたメモリ参照。</target>
        </trans-unit>
        <trans-unit id="9cafdb6d926c7b33945a0f45773363bd841f1c97" translate="yes" xml:space="preserve">
          <source>A memory reference that refers to a constant address of known value.</source>
          <target state="translated">既知の値の定数アドレスを参照するメモリ参照。</target>
        </trans-unit>
        <trans-unit id="4d28cbf28c6da1c555a93c693a0088131b65d6af" translate="yes" xml:space="preserve">
          <source>A memory reference using &lt;code&gt;AX&lt;/code&gt;, &lt;code&gt;BC&lt;/code&gt;, &lt;code&gt;DE&lt;/code&gt;, or &lt;code&gt;HL&lt;/code&gt; for the address, for calls.</source>
          <target state="translated">&lt;code&gt;AX&lt;/code&gt; 、 &lt;code&gt;BC&lt;/code&gt; 、 &lt;code&gt;DE&lt;/code&gt; 、または &lt;code&gt;HL&lt;/code&gt; を使用したメモリ参照呼び出しの場合、アドレスにを。</target>
        </trans-unit>
        <trans-unit id="ccd702a76b4ec6cf431d1b3b13c087fda1a005cc" translate="yes" xml:space="preserve">
          <source>A memory reference using &lt;code&gt;BC&lt;/code&gt; as a base register, with an optional offset.</source>
          <target state="translated">&lt;code&gt;BC&lt;/code&gt; を使用したメモリ参照オプションのオフセットをベースレジスタとして。</target>
        </trans-unit>
        <trans-unit id="1b8a2311d7274d21eb0ecc9fab5c05d859421673" translate="yes" xml:space="preserve">
          <source>A memory reference using &lt;code&gt;DE&lt;/code&gt; as a base register, with an optional offset.</source>
          <target state="translated">&lt;code&gt;DE&lt;/code&gt; をベースレジスタとして使用し、オプションでオフセットを指定したメモリ参照。</target>
        </trans-unit>
        <trans-unit id="70d9c96a11dbdafd4cd2e7e236553a508e4c91e1" translate="yes" xml:space="preserve">
          <source>A memory reference using &lt;code&gt;DE&lt;/code&gt; as a base register, without any offset.</source>
          <target state="translated">&lt;code&gt;DE&lt;/code&gt; をベースレジスタとして使用し、オフセットなしのメモリ参照。</target>
        </trans-unit>
        <trans-unit id="e072e18db9eb6bf209deec68cb4227fc0ad73751" translate="yes" xml:space="preserve">
          <source>A memory reference using &lt;code&gt;HL&lt;/code&gt; as a base register, with &lt;code&gt;B&lt;/code&gt; or &lt;code&gt;C&lt;/code&gt; as the index register.</source>
          <target state="translated">&lt;code&gt;HL&lt;/code&gt; をベースレジスタとして使用し、 &lt;code&gt;B&lt;/code&gt; または &lt;code&gt;C&lt;/code&gt; をインデックスレジスタとして使用するメモリ参照。</target>
        </trans-unit>
        <trans-unit id="df6dc5b742ae15cb0c4a64ea30738791b4c31ce2" translate="yes" xml:space="preserve">
          <source>A memory reference using &lt;code&gt;HL&lt;/code&gt; as a base register, with an optional one-byte offset.</source>
          <target state="translated">&lt;code&gt;HL&lt;/code&gt; をベースレジスタとして使用し、オプションの1バイトオフセットのメモリ参照。</target>
        </trans-unit>
        <trans-unit id="ddc26c1495756f4b844ddb7cea2453b5108af343" translate="yes" xml:space="preserve">
          <source>A memory reference using &lt;code&gt;HL&lt;/code&gt; as a base register, without any offset.</source>
          <target state="translated">オフセットなしの &lt;code&gt;HL&lt;/code&gt; をベースレジスタとして使用するメモリ参照。</target>
        </trans-unit>
        <trans-unit id="dd84b756a68010a9ef8c97c933ab58752c08401e" translate="yes" xml:space="preserve">
          <source>A memory reference using &lt;code&gt;SP&lt;/code&gt; as a base register, with an optional one-byte offset.</source>
          <target state="translated">&lt;code&gt;SP&lt;/code&gt; をベースレジスタとして使用するメモリ参照。オプションで1バイトのオフセットがあります。</target>
        </trans-unit>
        <trans-unit id="8838226960a63f5221b0e15609b574e60c61f473" translate="yes" xml:space="preserve">
          <source>A memory reference using any 16-bit register pair for the address, for calls.</source>
          <target state="translated">任意の16ビットのレジスタペアをアドレスに使用したメモリ参照。</target>
        </trans-unit>
        <trans-unit id="4b51e9b71c2545b5652560bf7f6a9647e0035d8a" translate="yes" xml:space="preserve">
          <source>A memory reference where the exact address is in a single register (&amp;lsquo;&amp;lsquo;</source>
          <target state="translated">正確なアドレスが単一のレジスタにあるメモリ参照（ ''</target>
        </trans-unit>
        <trans-unit id="0139bd65b0b5d2fe4673870edd7d6641449c58e8" translate="yes" xml:space="preserve">
          <source>A memory reference which requires an additional word (address or offset) after the opcode.</source>
          <target state="translated">オプコードの後に追加ワード(アドレスまたはオフセット)を必要とするメモリ参照。</target>
        </trans-unit>
        <trans-unit id="9a543e86cece309b6602d80f4120038bbc4ab307" translate="yes" xml:space="preserve">
          <source>A memory reference with an absolute address.</source>
          <target state="translated">絶対アドレスを持つメモリ参照。</target>
        </trans-unit>
        <trans-unit id="287d82bed5f1580615ce42d8bee2ee48ebecfb48" translate="yes" xml:space="preserve">
          <source>A memory transaction commits all changes to memory in an atomic way, as visible to other threads. If the transaction fails it is rolled back and all side effects discarded.</source>
          <target state="translated">メモリトランザクションは、他のスレッドから見えるように、すべての変更をアトミックな方法でメモリにコミットします。トランザクションが失敗した場合はロールバックされ、すべての副作用が破棄されます。</target>
        </trans-unit>
        <trans-unit id="d7f155128a2791cfe10b2a9e15921858bd575c02" translate="yes" xml:space="preserve">
          <source>A nested function always has no linkage. Declaring one with &lt;code&gt;extern&lt;/code&gt; or &lt;code&gt;static&lt;/code&gt; is erroneous. If you need to declare the nested function before its definition, use &lt;code&gt;auto&lt;/code&gt; (which is otherwise meaningless for function declarations).</source>
          <target state="translated">入れ子関数には、常にリンケージはありません。 &lt;code&gt;extern&lt;/code&gt; または &lt;code&gt;static&lt;/code&gt; で宣言するとエラーになります。ネストされた関数をその定義の前に宣言する必要がある場合は、 &lt;code&gt;auto&lt;/code&gt; を使用します（それ以外の場合は関数宣言では意味がありません）。</target>
        </trans-unit>
        <trans-unit id="d26414fbc961f98329967917d426b4cbc2efe330" translate="yes" xml:space="preserve">
          <source>A nested function can jump to a label inherited from a containing function, provided the label is explicitly declared in the containing function (see &lt;a href=&quot;local-labels#Local-Labels&quot;&gt;Local Labels&lt;/a&gt;). Such a jump returns instantly to the containing function, exiting the nested function that did the &lt;code&gt;goto&lt;/code&gt; and any intermediate functions as well. Here is an example:</source>
          <target state="translated">ネストされた関数は、ラベルが包含関数で明示的に宣言されていれば、包含関数から継承されたラベルにジャンプできます（&lt;a href=&quot;local-labels#Local-Labels&quot;&gt;ローカルラベルを&lt;/a&gt;参照）。このようなジャンプは即座に包含関数に戻り、 &lt;code&gt;goto&lt;/code&gt; を実行した入れ子関数と中間関数も終了します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="0712d7fc676044f053a72419ea0e38ad815c6a04" translate="yes" xml:space="preserve">
          <source>A new edition of the ISO C standard was published in 1999 as ISO/IEC 9899:1999, and is commonly known as &lt;em&gt;C99&lt;/em&gt;. (While in development, drafts of this standard version were referred to as &lt;em&gt;C9X&lt;/em&gt;.) GCC has substantially complete support for this standard version; see &lt;a href=&quot;http://gcc.gnu.org/c99status.html&quot;&gt;http://gcc.gnu.org/c99status.html&lt;/a&gt; for details. To select this standard, use</source>
          <target state="translated">ISO C規格の新版は、1999年にISO / IEC 9899：1999として発行され、一般に&lt;em&gt;C99&lt;/em&gt;として知られ&lt;em&gt;てい&lt;/em&gt;ます。（開発中、この標準バージョンのドラフトは&lt;em&gt;C9X&lt;/em&gt;と呼ばれてい&lt;em&gt;ました&lt;/em&gt;。）GCCはこの標準バージョンを実質的に完全にサポートしています。詳細については、&lt;a href=&quot;http://gcc.gnu.org/c99status.html&quot;&gt;http：//gcc.gnu.org/c99status.html&lt;/a&gt;を参照してください。この規格を選択するには、</target>
        </trans-unit>
        <trans-unit id="c1d3e8da2b16b837e350778965a42d38a1727ecd" translate="yes" xml:space="preserve">
          <source>A non-&lt;code&gt;static&lt;/code&gt; function declaration follows a &lt;code&gt;static&lt;/code&gt; one. This construct is not accepted by some traditional C compilers.</source>
          <target state="translated">非 &lt;code&gt;static&lt;/code&gt; 関数の宣言は、 &lt;code&gt;static&lt;/code&gt; 宣言の後に続きます。この構造は、一部の従来のCコンパイラでは受け入れられません。</target>
        </trans-unit>
        <trans-unit id="a1561d49e6959fd563ec43b519d5c367906c49ac" translate="yes" xml:space="preserve">
          <source>A number of bytes.</source>
          <target state="translated">バイト数です。</target>
        </trans-unit>
        <trans-unit id="c6e4f37a3cc64090cf8998b7f43d11b497869792" translate="yes" xml:space="preserve">
          <source>A operand which is read by the instruction can be tied to an earlyclobber operand if its only use as an input occurs before the early result is written. Adding alternatives of this form often allows GCC to produce better code when only some of the read operands can be affected by the earlyclobber. See, for example, the &amp;lsquo;</source>
          <target state="translated">命令によって読み取られるオペランドは、初期の結果が書き込まれる前に入力としてのみ使用される場合は、初期クローバーオペランドに関連付けることができます。この形式の代替を追加することで、GCCが早期のクローバーの影響を受けるのは一部の読み取りオペランドのみである場合に、より良いコードを生成できるようになります。たとえば、「</target>
        </trans-unit>
        <trans-unit id="33c89233be593b8efaeda5d8e73bec02c063a6ed" translate="yes" xml:space="preserve">
          <source>A parameter to control whether to use function internal id in profile database lookup. If the value is 0, the compiler uses an id that is based on function assembler name and filename, which makes old profile data more tolerant to source changes such as function reordering etc.</source>
          <target state="translated">プロファイル・データベースの検索で関数の内部IDを使用するかどうかを制御するためのパラメータです。値が0の場合、コンパイラは関数アセンブラ名とファイル名に基づいたIDを使用します。これにより、古いプロファイル・データは、関数の並び替えなどのソースの変更に対してより寛容になります。</target>
        </trans-unit>
        <trans-unit id="ac02409b28e4665594149c1f072d2a778a5e74f5" translate="yes" xml:space="preserve">
          <source>A pointer is compared against integer zero with &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, or &lt;code&gt;&amp;gt;=&lt;/code&gt;.</source>
          <target state="translated">ポインターは、 &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; 、または &lt;code&gt;&amp;gt;=&lt;/code&gt; を使用して整数ゼロと比較されます。</target>
        </trans-unit>
        <trans-unit id="5e654ce5ba59b63225116cee29f29b754f51ae4a" translate="yes" xml:space="preserve">
          <source>A possibly empty comma-separated list of expressions. For example, &lt;code&gt;format_arg&lt;/code&gt; attributes use this form with the list being a single integer constant expression, and &lt;code&gt;alias&lt;/code&gt; attributes use this form with the list being a single string constant.</source>
          <target state="translated">おそらく空の式のコンマ区切りリスト。たとえば、 &lt;code&gt;format_arg&lt;/code&gt; 属性はこの形式を使用し、リストは単一の整数定数式です。 &lt;code&gt;alias&lt;/code&gt; 属性はこの形式を使用し、リストは単一の文字列定数です。</target>
        </trans-unit>
        <trans-unit id="6f94ad7a128da59e35cfef4198c05f92370ba7a7" translate="yes" xml:space="preserve">
          <source>A precompiled header cannot be used once the first C token is seen. You can have preprocessor directives before a precompiled header; you cannot include a precompiled header from inside another header.</source>
          <target state="translated">プリコンパイルされたヘッダは、最初のCトークンが表示されると使用できません。プリコンパイルされたヘッダの前にプリプロセッサディレクティブを置くことができます。</target>
        </trans-unit>
        <trans-unit id="967ed292b7da3d9c381bae6f412c1eb711012203" translate="yes" xml:space="preserve">
          <source>A precompiled header file can be used only when these conditions apply:</source>
          <target state="translated">プリコンパイルされたヘッダファイルは、これらの条件が適用される場合にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="05035041744377e6b9210288a1d05f98595669e6" translate="yes" xml:space="preserve">
          <source>A precompiled header file is searched for when &lt;code&gt;#include&lt;/code&gt; is seen in the compilation. As it searches for the included file (see &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/cpp/Search-Path.html#Search-Path&quot;&gt;Search Path&lt;/a&gt; in The C Preprocessor) the compiler looks for a precompiled header in each directory just before it looks for the include file in that directory. The name searched for is the name specified in the &lt;code&gt;#include&lt;/code&gt; with &amp;lsquo;</source>
          <target state="translated">コンパイル時に &lt;code&gt;#include&lt;/code&gt; が見つかると、プリコンパイル済みヘッダーファイルが検索されます。インクルードファイルを&lt;a href=&quot;http://gcc.gnu.org/onlinedocs/cpp/Search-Path.html#Search-Path&quot;&gt;検索&lt;/a&gt;するとき（Cプリプロセッサの検索パスを参照）、コンパイラーは各ディレクトリでプリコンパイル済みヘッダーを探し、そのディレクトリでインクルードファイルを探します。検索される名前は、 &lt;code&gt;#include&lt;/code&gt; で指定された名前と '</target>
        </trans-unit>
        <trans-unit id="65201eadf5d675527c7f1ac85fd378b5ccbc08ee" translate="yes" xml:space="preserve">
          <source>A prefix for source file names to remove when generating the output coverage files. This option is useful when building in a separate directory, and the pathname to the source directory is not wanted when determining the output file names. Note that this prefix detection is applied before determining whether the source file is absolute.</source>
          <target state="translated">出力カバレッジファイルを生成する際に除去したいソースファイル名の接頭辞。このオプションは、別のディレクトリに構築する場合に便利で、出力ファイル名を決定する際にソースディレクトリへのパス名を必要としない場合に使用します。この接頭辞の検出は、ソースファイルがアブソリュートかどうかを判断する前に適用されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2f9dfd11eaa793c8913662662201289a00fcaafa" translate="yes" xml:space="preserve">
          <source>A program which performs file I/O and is destined to run on an MCM target should be linked with this option. It causes the libraries libc.a and libdebug.a to be linked. The program should be run on the target under the control of the GDB remote debugging stub.</source>
          <target state="translated">ファイル I/O を実行し、MCM ターゲット上で実行されることを前提としたプログラムは、このオプションでリンクされている必要があります。これにより、ライブラリ libc.a と libdebug.a がリンクされます。プログラムは、GDB リモートデバッグスタブの制御下でターゲット上で実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="06091d7b0985c9e8feba549f19d66a548c218908" translate="yes" xml:space="preserve">
          <source>A program which performs file I/O and is destined to run on the simulator should be linked with option. This causes libraries libc.a and libsim.a to be linked.</source>
          <target state="translated">ファイル I/O を実行し、シミュレータ上で実行されることを前提としたプログラムは、オプションでリンクされている必要があります。これにより、ライブラリ libc.a と libsim.a がリンクされます。</target>
        </trans-unit>
        <trans-unit id="03bc1b8f8194ecc4bd7cc22529202219ccc55928" translate="yes" xml:space="preserve">
          <source>A redeclaration of an entity must not add new ABI tags, since doing so would change the mangled name.</source>
          <target state="translated">エンティティの再宣言は、新しいABIタグを追加してはならない。</target>
        </trans-unit>
        <trans-unit id="72babc8ed783b6f80b238e203c04bb32ab9b7ee7" translate="yes" xml:space="preserve">
          <source>A register indirect memory operand</source>
          <target state="translated">レジスタ間接メモリオペランド</target>
        </trans-unit>
        <trans-unit id="822740a74e2ad86073347ee3e0a96d4ea21793b7" translate="yes" xml:space="preserve">
          <source>A register operand is allowed provided that it is in a general register.</source>
          <target state="translated">レジスタオペランドは、一般的なレジスタ内であれば許可されます。</target>
        </trans-unit>
        <trans-unit id="c6b4e516f4445d7fd0eb4545cb8bd87379ffb2be" translate="yes" xml:space="preserve">
          <source>A register suitable for use in an indirect jump. This will always be &lt;code&gt;$25&lt;/code&gt; for</source>
          <target state="translated">間接ジャンプでの使用に適したレジスタ。これは常に &lt;code&gt;$25&lt;/code&gt; です</target>
        </trans-unit>
        <trans-unit id="bf74def1fd328fca34b37ccd32d0585450fe7d70" translate="yes" xml:space="preserve">
          <source>A register that can hold a 64 bit value.</source>
          <target state="translated">64ビットの値を保持できるレジスタ。</target>
        </trans-unit>
        <trans-unit id="40b15fdd982b6acc2dbd0ac15c94e31ec3b3ecb8" translate="yes" xml:space="preserve">
          <source>A revised ISO C++ standard was published in 2011 as ISO/IEC 14882:2011, and is referred to as C++11; before its publication it was commonly referred to as C++0x. C++11 contains several changes to the C++ language, all of which have been implemented in GCC. For details see &lt;a href=&quot;https://gcc.gnu.org/projects/cxx-status.html#cxx11&quot;&gt;https://gcc.gnu.org/projects/cxx-status.html#cxx11&lt;/a&gt;. To select this standard in GCC, use the option</source>
          <target state="translated">改訂されたISO C ++標準は、2011年にISO / IEC 14882：2011として公開され、C ++ 11と呼ばれています。公開前は、一般にC ++ 0xと呼ばれていました。C ++ 11には、C ++言語に対するいくつかの変更が含まれており、それらはすべてGCCに実装されています。詳細については、&lt;a href=&quot;https://gcc.gnu.org/projects/cxx-status.html#cxx11&quot;&gt;https：//gcc.gnu.org/projects/cxx-status.html#cxx11を&lt;/a&gt;参照してください。GCCでこの標準を選択するには、オプションを使用します</target>
        </trans-unit>
        <trans-unit id="fa1cdaecb062b94545ea6452cf8e926ff17ef618" translate="yes" xml:space="preserve">
          <source>A scalar volatile object is read when it is accessed in a void context:</source>
          <target state="translated">voidコンテキストでアクセスされたときにスカラー揮発性オブジェクトが読み込まれます。</target>
        </trans-unit>
        <trans-unit id="1be35e4d0dcffaec4e53c70345395a20bb71df65" translate="yes" xml:space="preserve">
          <source>A scaled or unscaled indexed memory operand</source>
          <target state="translated">スケーリングされた、またはスケーリングされていないインデックス化されたメモリオペランド。</target>
        </trans-unit>
        <trans-unit id="7561d823e8220cc1324112197c014a5470da6511" translate="yes" xml:space="preserve">
          <source>A signed 10-bit constant for most arithmetic instructions.</source>
          <target state="translated">ほとんどの算術命令のための符号付き10ビット定数。</target>
        </trans-unit>
        <trans-unit id="d4172f55ed8446ca35d32bcd89906fb5748ddaf8" translate="yes" xml:space="preserve">
          <source>A signed 11-bit constant added to -1. Can only match when the</source>
          <target state="translated">符号付き 11 ビット定数に -1 を加えたもの。の場合にのみマッチします。</target>
        </trans-unit>
        <trans-unit id="4dbec6f25e372e0d0975d4d90b4ec971a46651e9" translate="yes" xml:space="preserve">
          <source>A signed 11-bit constant.</source>
          <target state="translated">符号付き11ビットの定数。</target>
        </trans-unit>
        <trans-unit id="c5fd23196153b5c02da9d3addd039cf5332baffd" translate="yes" xml:space="preserve">
          <source>A signed 12-bit integer constant.</source>
          <target state="translated">符号付き12ビット整数定数。</target>
        </trans-unit>
        <trans-unit id="5d45116f20daaebe383530883ac080de0bcc23a5" translate="yes" xml:space="preserve">
          <source>A signed 15-bit constant.</source>
          <target state="translated">符号付き15ビットの定数。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
