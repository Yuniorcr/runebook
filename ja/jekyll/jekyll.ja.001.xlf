<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="jekyll">
    <body>
      <group id="jekyll">
        <trans-unit id="6aac58256fec47321100121f910d04b0a5841d2c" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2008&amp;ndash;2018 Tom Preston-Werner and Jekyll contributors</source>
          <target state="translated">&amp;copy;2008&amp;ndash;2018 Tom Preston-WernerおよびJekyllの寄稿者</target>
        </trans-unit>
        <trans-unit id="b0d62ee966eac050c88ef4f142f5d93baaebbc36" translate="yes" xml:space="preserve">
          <source>&amp;hellip; then make sure that you access the site at:</source>
          <target state="translated">&amp;hellip;次に、次のサイトにアクセスしていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="2f622849809c9c6469da23aec4e2c1cb48d4bbd5" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Creating and Hosting a Personal Site on GitHub&amp;rdquo;</source>
          <target state="translated">「GitHubでの個人サイトの作成とホスティング」</target>
        </trans-unit>
        <trans-unit id="a3b0d88eb468d5685b71fd8970b9a61a174db173" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Jekyll is a well-architected throwback to a time before WordPress, when men were men, and HTML was static. I like the ideas it espouses, and have made a few improvements to it&amp;rsquo;s core. Here, I&amp;rsquo;ll point out some highlights of my fork in the hopes that they see usage beyond this site.&amp;rdquo;</source>
          <target state="translated">「ジキルは、男性が男性でHTMLが静的だったWordPressが登場する前の時代によく設計された後戻りです。私はそれが支持するアイデアが好きで、そのコアにいくつかの改良を加えました。ここでは、このサイト以外で使用が見られることを期待して、私のフォークのいくつかのハイライトを指摘します。」</target>
        </trans-unit>
        <trans-unit id="298d7d92c940dee77d15b40ea4c8e9f1772b8c34" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Jekyll is everything that I ever wanted in a blogging engine. Really. It isn&amp;rsquo;t perfect, but what&amp;rsquo;s excellent about it is that if there&amp;rsquo;s something wrong, I know exactly how it works and how to fix it. It runs on the your machine only, and is essentially an added&amp;rdquo;build&amp;rdquo; step between you and the browser. I coded this entire site in TextMate using standard HTML5 and CSS3, and then at the end I added just a few little variables to the markup. Presto-chango, my site is built and I am at peace with the world.&amp;rdquo;</source>
          <target state="translated">「Jekyllは、私がブログエンジンに求めていたすべてのものです。本当に。それは完璧ではありませんが、それが優れているのは、何か問題があった場合に、それがどのように機能し、どのように修正するかを正確に知っていることです。それはあなたのマシンでのみ動作し、本質的にあなたとブラウザの間に追加された「ビルド」ステップです。このサイト全体を標準のHTML5とCSS3を使用してTextMateでコーディングし、最後に、ほんの少しの変数をマークアップに追加しました。Presto-chango、私のサイトが構築され、私は世界と平和です。」</target>
        </trans-unit>
        <trans-unit id="2ef029190882bdf86d5a5e115746595ab36bc05f" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;About this Website&amp;rsquo;, by Carter Allen</source>
          <target state="translated">「このウェブサイトについて」、Carter Allen</target>
        </trans-unit>
        <trans-unit id="82b663f39c266e3f60ba462cb943f99084a26d9e" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;Build A Blog With Jekyll And GitHub Pages&amp;rsquo; on Smashing Magazine</source>
          <target state="translated">Smashing Magazineの「JekyllとGitHubページでブログを作成する」</target>
        </trans-unit>
        <trans-unit id="8593eada0b79d0969c684567a345f7ac74b6150e" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;My Jekyll Fork&amp;rsquo;, by Mike West</source>
          <target state="translated">「マイ・ジキル・フォーク」、マイク・ウェスト</target>
        </trans-unit>
        <trans-unit id="237b1cd98f6ca0c9a9f43a559ae57014b3912f20" translate="yes" xml:space="preserve">
          <source>(Including &lt;code&gt;{{ site.baseurl }}&lt;/code&gt; is optional &amp;mdash; it depends on whether you want to preface the page URL with the &lt;code&gt;baseurl&lt;/code&gt; value.)</source>
          <target state="translated">（ &lt;code&gt;{{ site.baseurl }}&lt;/code&gt; を含めることはオプションです&amp;mdash;ページURLの &lt;code&gt;baseurl&lt;/code&gt; 値を付けるかどうかによって異なります。）</target>
        </trans-unit>
        <trans-unit id="01ff54954fe430b7b55e8dea4ad78a4ac832cf3e" translate="yes" xml:space="preserve">
          <source>1. Enabling Travis and GitHub</source>
          <target state="translated">1.TravisとGitHubを有効にする</target>
        </trans-unit>
        <trans-unit id="04f59964f8cd807525552be22975ac01d9889869" translate="yes" xml:space="preserve">
          <source>1. Follow Your Project on CircleCI</source>
          <target state="translated">1.CircleCIでプロジェクトをフォローする</target>
        </trans-unit>
        <trans-unit id="0e6a002c8ee229cfaf41fdd7f2afb4f6edc49020" translate="yes" xml:space="preserve">
          <source>1. Getting started</source>
          <target state="translated">1.はじめに</target>
        </trans-unit>
        <trans-unit id="431a4dd4fb974a7a7fcf937d42a568c5f62a61fb" translate="yes" xml:space="preserve">
          <source>2. Dependencies</source>
          <target state="translated">2.依存関係</target>
        </trans-unit>
        <trans-unit id="d7bfc92f0d5cb130371ff4b8563723f693f226ad" translate="yes" xml:space="preserve">
          <source>2. How it works</source>
          <target state="translated">2.どのように動作するか</target>
        </trans-unit>
        <trans-unit id="2e76c1bd9726e589e9fab02677bee646bcc8f9f5" translate="yes" xml:space="preserve">
          <source>2. The Test Script</source>
          <target state="translated">2.テストスクリプト</target>
        </trans-unit>
        <trans-unit id="4608f3497651930954727e1945e17761fe00771c" translate="yes" xml:space="preserve">
          <source>3. Configuring Your Travis Builds</source>
          <target state="translated">3.3.トラビス ビルドの設定</target>
        </trans-unit>
        <trans-unit id="5d6c0dc7613ca3d420fc67d597f1b4373fa383a8" translate="yes" xml:space="preserve">
          <source>3. Testing</source>
          <target state="translated">3.テスト</target>
        </trans-unit>
        <trans-unit id="28f13c7b1750abd312f6dcc7c978773576718433" translate="yes" xml:space="preserve">
          <source>3. Using YAML for configuration</source>
          <target state="translated">3.設定にYAMLを使う</target>
        </trans-unit>
        <trans-unit id="727b823483dbc209a1fb909c780338efc7e99828" translate="yes" xml:space="preserve">
          <source>4. Setting up on-premises server</source>
          <target state="translated">4.オンプレミスサーバーの設定</target>
        </trans-unit>
        <trans-unit id="ec55bdabf15c49197509bb04fb7d372ec5387079" translate="yes" xml:space="preserve">
          <source>5. Questions?</source>
          <target state="translated">5.質問は?</target>
        </trans-unit>
        <trans-unit id="12f87e6c09c9ad77ecf3f9c56ed9b4eba53e10df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jch.penibelst.de/&quot;&gt;A layout that compresses HTML&lt;/a&gt;: GitHub Pages compatible, configurable way to compress HTML files on site build.</source>
          <target state="translated">&lt;a href=&quot;http://jch.penibelst.de/&quot;&gt;HTMLを圧縮するレイアウト&lt;/a&gt;：サイトビルドでHTMLファイルを圧縮するGitHub Pages互換の構成可能な方法。</target>
        </trans-unit>
        <trans-unit id="c7ba023ff645a74df5ededef8839d335afa0a154" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jekyll-pug.dougie.io&quot;&gt;Pug plugin by Doug Beney&lt;/a&gt;: Use the popular Pug (previously Jade) templating language in Jekyll. Complete with caching, includes support, and much more.</source>
          <target state="translated">&lt;a href=&quot;http://jekyll-pug.dougie.io&quot;&gt;Doug BeneyによるPugプラグイン&lt;/a&gt;：Jekyllで人気のあるPug（以前はJade）テンプレート言語を使用します。キャッシングを完備し、サポートを含みます。</target>
        </trans-unit>
        <trans-unit id="264c5a33c68c477faea463051a2b1ec3ec038736" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jekyll.github.io/jekyll-assets/&quot;&gt;Jekyll-assets&lt;/a&gt; by &lt;a href=&quot;https://github.com/ixti&quot;&gt;ixti&lt;/a&gt;: Rails-alike assets pipeline (write assets in CoffeeScript, Sass, LESS etc; specify dependencies for automatic bundling using simple declarative comments in assets; minify and compress; use JST templates; cache bust; and many-many more).</source>
          <target state="translated">&lt;a href=&quot;http://jekyll.github.io/jekyll-assets/&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ixti&quot;&gt;ixtiに&lt;/a&gt;よるJekyll-assets：Railsに似たアセットパイプライン（CoffeeScript、Sass、LESSなどでアセットを書き込む;アセット内の単純な宣言型コメントを使用して自動バンドルの依存関係を指定する;縮小および圧縮する; JSTテンプレートを使用する;バストをキャッシュする;その他多数）。</target>
        </trans-unit>
        <trans-unit id="f0a458dc8208bffdcaae88aa1f452f6f97b6712b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jekyll.tips&quot;&gt;Jekyll Tips&lt;/a&gt; is a set of resources created by &lt;a href=&quot;https://cloudcannon.com&quot;&gt;CloudCannon&lt;/a&gt; to help folks get up and running with Jekyll. They cover all skill levels, and even include some great video tutorials.</source>
          <target state="translated">&lt;a href=&quot;http://jekyll.tips&quot;&gt;Jekyll Tips&lt;/a&gt;は、人々が&lt;a href=&quot;https://cloudcannon.com&quot;&gt;Jekyll&lt;/a&gt;を使い始めるのに役立つCloudCannonによって作成されたリソースのセットです。彼らはすべてのスキルレベルをカバーし、いくつかの素晴らしいビデオチュートリアルも含まれています。</target>
        </trans-unit>
        <trans-unit id="4e712b4e1860bf86a3eb293a23d182cad0b8631b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jekyll.tips/jekyll-cheat-sheet/&quot;&gt;Jekyll Cheatsheet&lt;/a&gt; is a single-page resource for Jekyll filters, variables, and the like.</source>
          <target state="translated">&lt;a href=&quot;http://jekyll.tips/jekyll-cheat-sheet/&quot;&gt;Jekyll Cheatsheet&lt;/a&gt;は、Jekyllフィルター、変数などの単一ページのリソースです。</target>
        </trans-unit>
        <trans-unit id="3a5bde86c0ad7e415201b6653bad302dd21fb712" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.justkez.com/generating-a-tag-cloud-in-jekyll/&quot;&gt;Generating a Tag Cloud in Jekyll&lt;/a&gt; &amp;ndash; A guide to implementing a tag cloud and per-tag content pages using Jekyll.</source>
          <target state="translated">&lt;a href=&quot;http://www.justkez.com/generating-a-tag-cloud-in-jekyll/&quot;&gt;Jekyllでのタグクラウドの生成&lt;/a&gt; &amp;ndash; Jekyllを使用してタグクラウドとタグごとのコンテンツページを実装するためのガイド。</target>
        </trans-unit>
        <trans-unit id="7bb848fa46a216dad9f93c130caf9c23a1c3c364" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.northfieldx.co.uk/remote-include/&quot;&gt;remote-include&lt;/a&gt;: Includes files using remote URLs</source>
          <target state="translated">&lt;a href=&quot;http://www.northfieldx.co.uk/remote-include/&quot;&gt;remote-include&lt;/a&gt;：リモートURLを使用してファイルを含めます</target>
        </trans-unit>
        <trans-unit id="2a5043a4019a3a327c0004fc0b0dc6d742b65e83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://atom.io/packages/jekyll&quot;&gt;jekyll-atom&lt;/a&gt;: A collection of snippets and tools for Jekyll in Atom</source>
          <target state="translated">&lt;a href=&quot;https://atom.io/packages/jekyll&quot;&gt;jekyll-atom&lt;/a&gt;：AtomのJekyllのスニペットとツールのコレクション</target>
        </trans-unit>
        <trans-unit id="e3765eed48e794da9562522d30f95aab07c33437" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://atom.io/packages/markdown-writer&quot;&gt;markdown-writer&lt;/a&gt;: An Atom package for Jekyll. It can create new posts/drafts, manage tags/categories, insert link/images and add many useful key mappings.</source>
          <target state="translated">&lt;a href=&quot;https://atom.io/packages/markdown-writer&quot;&gt;markdown-writer&lt;/a&gt;：JekyllのAtomパッケージ。新しい投稿/下書きの作成、タグ/カテゴリの管理、リンク/画像の挿入、多くの便利なキーマッピングの追加ができます。</target>
        </trans-unit>
        <trans-unit id="307783b2371398aa07399b11d3fa54ae924c8bfc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://bitbucket.org/nyufac/jekyll-views-router&quot;&gt;Jekyll views router&lt;/a&gt;: Simple router between generator plugins and templates.</source>
          <target state="translated">&lt;a href=&quot;https://bitbucket.org/nyufac/jekyll-views-router&quot;&gt;Jekyllはルータを表示します&lt;/a&gt;：ジェネレータプラグインとテンプレート間の単純なルータ。</target>
        </trans-unit>
        <trans-unit id="4f93847abe25ddbcd15403001641ed0913fd0b11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://blog.algolia.com/instant-search-blog-documentation-jekyll-plugin/&quot;&gt;Algolia&lt;/a&gt;: Add a powerful instant search to your Jekyll site</source>
          <target state="translated">&lt;a href=&quot;https://blog.algolia.com/instant-search-blog-documentation-jekyll-plugin/&quot;&gt;Algolia&lt;/a&gt;：Jekyllサイトに強力なインスタント検索を追加します</target>
        </trans-unit>
        <trans-unit id="b93ac31ffc6d80178baa8daa4a0311fb78c78868" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://buddy.works&quot;&gt;Buddy&lt;/a&gt; is a &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;-based CI server that you can set up in 15-20 minutes to build, test, and deploy your Jekyll websites. It supports &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt;, &lt;a href=&quot;https://bitbucket.org/&quot;&gt;Bitbucket&lt;/a&gt;, and &lt;a href=&quot;https://gitlab.com&quot;&gt;GitLab&lt;/a&gt; repositories, and can be installed on-premises or used in cloud. The following guide will show you how to set up a free environment to build and test your Jekyll project.</source>
          <target state="translated">&lt;a href=&quot;https://buddy.works&quot;&gt;Buddy&lt;/a&gt;は&lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;ベースのCIサーバーで、15〜20分でセットアップして、Jekyll Webサイトを構築、テスト、および展開できます。&lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt;、&lt;a href=&quot;https://bitbucket.org/&quot;&gt;Bitbucket&lt;/a&gt;、および&lt;a href=&quot;https://gitlab.com&quot;&gt;GitLab&lt;/a&gt;リポジトリをサポートし、オンプレミスにインストールするか、クラウドで使用できます。次のガイドでは、Jekyllプロジェクトをビルドしてテストするための無料の環境をセットアップする方法を示します。</target>
        </trans-unit>
        <trans-unit id="59854b8675ed0d4c604af36352f43d69e5153855" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://community.algolia.com/jekyll-algolia/&quot;&gt;jekyll-algolia&lt;/a&gt;: Add fast and relevant search to your Jekyll site through the Algolia API.</source>
          <target state="translated">&lt;a href=&quot;https://community.algolia.com/jekyll-algolia/&quot;&gt;jekyll-algolia&lt;/a&gt;：Algolia APIを使用して、Jekyllサイトに関連性​​の高い高速検索を追加します。</target>
        </trans-unit>
        <trans-unit id="05daa0672189429feb3cf9ca5cca1d60d5e604aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gcc.gnu.org/install/&quot;&gt;GCC&lt;/a&gt; and &lt;a href=&quot;https://www.gnu.org/software/make/&quot;&gt;Make&lt;/a&gt; (in case your system doesn&amp;rsquo;t have them installed, which you can check by running &lt;code&gt;gcc -v&lt;/code&gt;,&lt;code&gt;g++ -v&lt;/code&gt; and &lt;code&gt;make -v&lt;/code&gt; in your system&amp;rsquo;s command line interface)</source>
          <target state="translated">&lt;a href=&quot;https://gcc.gnu.org/install/&quot;&gt;GCC&lt;/a&gt;と&lt;a href=&quot;https://www.gnu.org/software/make/&quot;&gt;Make&lt;/a&gt;（システムにインストールされていない場合は、システムのコマンドラインインターフェイスで &lt;code&gt;gcc -v&lt;/code&gt; 、 &lt;code&gt;g++ -v&lt;/code&gt; 、 &lt;code&gt;make -v&lt;/code&gt; を実行して確認できます）</target>
        </trans-unit>
        <trans-unit id="7fccdd65eae29cc3e8e19abceb602086009a415c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/1027674&quot;&gt;Non-JS Gist Tag by Brandon Tilley&lt;/a&gt; A Liquid tag that embeds Gists and shows code for non-JavaScript enabled browsers and readers.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/1027674&quot;&gt;Brandon Tilleyによる非JS Gistタグ&lt;/a&gt; Gistsを埋め込み、JavaScript非対応のブラウザーとリーダーのコードを表示するLiquidタグ。</target>
        </trans-unit>
        <trans-unit id="14e0b7087276d3e36f6d87e052e3d0eb83389c70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/1455726&quot;&gt;oEmbed Tag by Tammo van Lessen&lt;/a&gt;: Enables easy content embedding (e.g. from YouTube, Flickr, Slideshare) via oEmbed.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/1455726&quot;&gt;Tammo van LessenによるoEmbedタグ&lt;/a&gt;：oEmbedを介した簡単なコンテンツ埋め込み（YouTube、Flickr、Slideshareなど）を可能にします。</target>
        </trans-unit>
        <trans-unit id="ba10a8584ee4a58946e571f41b5bbdd914ba1a77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/1472645&quot;&gt;Transform Layouts&lt;/a&gt;: Allows HAML layouts (you need a HAML Converter plugin for this to work).</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/1472645&quot;&gt;レイアウトの変換&lt;/a&gt;：HAMLレイアウトを許可します（これを機能させるにはHAMLコンバータプラグインが必要です）。</target>
        </trans-unit>
        <trans-unit id="76e523850b96c372a9e37a6930c757b7baa796a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/1805814&quot;&gt;Generate YouTube Embed&lt;/a&gt; by &lt;a href=&quot;https://github.com/joelverhagen&quot;&gt;joelverhagen&lt;/a&gt;: Jekyll plugin which allows you to embed a YouTube video in your page with the YouTube ID. Optionally specify width and height dimensions. Like &amp;ldquo;oEmbed Tag&amp;rdquo; but just for YouTube.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/1805814&quot;&gt;YouTubeの埋め込みを生成する&lt;/a&gt;ことにより、&lt;a href=&quot;https://github.com/joelverhagen&quot;&gt;joelverhagen&lt;/a&gt;：あなたがYouTubeのIDを使ってページ内のYouTube動画を埋め込むことができますジキルプラグイン。オプションで、幅と高さの寸法を指定します。「oEmbedタグ」と同じですが、YouTube専用です。</target>
        </trans-unit>
        <trans-unit id="15101c8114fee53a1fc38adeabc8e29ca2a20814" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/1895282&quot;&gt;Jsonball&lt;/a&gt;: Reads json files and produces maps for use in Jekyll files.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/1895282&quot;&gt;Jsonball&lt;/a&gt;：jsonファイルを読み取り、Jekyllファイルで使用するマップを生成します。</target>
        </trans-unit>
        <trans-unit id="102a01fa242ebc9a5e0f058f8af1027390a4b12b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/2218470&quot;&gt;Debbugs&lt;/a&gt;: Allows posting links to Debian BTS easily.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/2218470&quot;&gt;Debbugs&lt;/a&gt;：Debian BTSへのリンクを簡単に投稿できます。</target>
        </trans-unit>
        <trans-unit id="7c7c00b2534786231001325055f0c3502ddd2214" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/2290195&quot;&gt;Logarithmic Tag Cloud&lt;/a&gt;: Flexible. Logarithmic distribution. Documentation inline.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/2290195&quot;&gt;対数タグクラウド&lt;/a&gt;：柔軟。対数分布。インラインのドキュメント。</target>
        </trans-unit>
        <trans-unit id="53bf02d88fb17602e421a519420f1a367d426cb9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/23maverick23/8532525&quot;&gt;jekyll-font-awesome&lt;/a&gt;: Quickly and easily add Font Awesome icons to your posts.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/23maverick23/8532525&quot;&gt;jekyll-font-awesome&lt;/a&gt;：投稿にFont Awesomeアイコンをすばやく簡単に追加します。</target>
        </trans-unit>
        <trans-unit id="557213d14ae1761bb7939c887ce7988acc281f3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/2403522&quot;&gt;Jekyll-devonly_tag&lt;/a&gt;: A block tag for including markup only during development.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/2403522&quot;&gt;Jekyll-devonly_tag&lt;/a&gt;：開発時にのみマークアップを含めるためのブロックタグ。</target>
        </trans-unit>
        <trans-unit id="0849a85dfe58aad217a61717a8dc4a6d409a3e25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/2758691&quot;&gt;File compressor&lt;/a&gt; by &lt;a href=&quot;https://github.com/mytharcher&quot;&gt;mytharcher&lt;/a&gt;: Compress HTML and JavaScript files on site build.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/2758691&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/mytharcher&quot;&gt;mytharcher&lt;/a&gt;によるファイルコンプレッサー：サイトビルドでHTMLおよびJavaScriptファイルを圧縮します。</target>
        </trans-unit>
        <trans-unit id="d3b5e58ccdc906c556becc815069759add2ea1f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/449463&quot;&gt;Upcase Converter by Blake Smith&lt;/a&gt;: An example Jekyll converter.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/449463&quot;&gt;Blake SmithによるUpcase Converter&lt;/a&gt;：Jekyllコンバーターの例。</target>
        </trans-unit>
        <trans-unit id="d1be675c957783607e1156abcbdf03c284eeb638" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/449491&quot;&gt;Version Reporter by Blake Smith&lt;/a&gt;: Creates a version.html file containing the Jekyll version.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/449491&quot;&gt;Blake Smithによるバージョンレポーター&lt;/a&gt;：Jekyllバージョンを含むversion.htmlファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="9793227c26ad931af0a18ce0e1f2fc5d779f2a83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/449509&quot;&gt;Render Time Tag by Blake Smith&lt;/a&gt;: Displays the time a Jekyll page was generated.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/449509&quot;&gt;ブレイク・スミスによる時間タグのレンダリング&lt;/a&gt;：Jekyllページが生成された時間を表示します。</target>
        </trans-unit>
        <trans-unit id="c2ea8f9f80a49de1ec4ba350122f44b252da1156" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/480380&quot;&gt;Ultraviolet Plugin by Steve Alex&lt;/a&gt;: Jekyll tag for the &lt;a href=&quot;https://github.com/grosser/ultraviolet&quot;&gt;Ultraviolet&lt;/a&gt; code highligher.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/480380&quot;&gt;Steve AlexによるUltravioletプラグイン&lt;/a&gt;：&lt;a href=&quot;https://github.com/grosser/ultraviolet&quot;&gt;Ultraviolet&lt;/a&gt;コードハイライガーの Jekyllタグ。</target>
        </trans-unit>
        <trans-unit id="3cc5a3020dcb6c9c8005a57115799c7a504ff001" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/481456&quot;&gt;HAML-Sass Converter by Adam Pearson&lt;/a&gt;: Simple HAML-Sass converter for Jekyll. &lt;a href=&quot;https://gist.github.com/528642&quot;&gt;Fork&lt;/a&gt; by Sam X.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/481456&quot;&gt;Adam PearsonによるHAML-Sassコンバーター&lt;/a&gt;：Jekyll用のシンプルなHAML-Sassコンバーター。サムXの&lt;a href=&quot;https://gist.github.com/528642&quot;&gt;フォーク&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb78eb90f8b12aac56435d221d2399e9ec118ee2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/490101&quot;&gt;Growl Notification Generator by Tate Johnson&lt;/a&gt;: Send Jekyll notifications to Growl.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/490101&quot;&gt;Tate JohnsonによるGrowl通知ジェネレーター&lt;/a&gt;：Jekyll通知をGrowlに送信します。</target>
        </trans-unit>
        <trans-unit id="13936af37649457ab5f05f9eb54bfb4f77102e5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/49630&quot;&gt;Draft/Publish Plugin by Michael Ivey&lt;/a&gt;: Save posts as drafts.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/49630&quot;&gt;Michael Iveyによるドラフト/公開プラグイン&lt;/a&gt;：投稿をドラフトとして保存します。</target>
        </trans-unit>
        <trans-unit id="632e99557f76fbbc0a1784494836e2a17712b972" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/517556&quot;&gt;HAML plugin by Sam Z&lt;/a&gt;: HAML converter for Jekyll.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/517556&quot;&gt;Sam ZによるHAMLプラグイン&lt;/a&gt;：Jekyll用のHAMLコンバーター。</target>
        </trans-unit>
        <trans-unit id="74ff2cda5fa15e7ee83082c95dfc6cf9c17337d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/525267&quot;&gt;Growl Notification Hook by Tate Johnson&lt;/a&gt;: Better alternative to the above, but requires his &amp;ldquo;hook&amp;rdquo; fork.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/525267&quot;&gt;Tate JohnsonによるGrowl通知フック&lt;/a&gt;：上記のより良い代替案ですが、彼の「フック」フォークが必要です。</target>
        </trans-unit>
        <trans-unit id="48c27c1c98b8b334f291159ca0da0b9f96df10a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/639920&quot;&gt;LESS Converter by Jason Graham&lt;/a&gt;: Convert LESS files to CSS.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/639920&quot;&gt;Jason GrahamによるLESSコンバーター&lt;/a&gt;：LESSファイルをCSSに変換します。</target>
        </trans-unit>
        <trans-unit id="063ef7275dc6adc1ce497c0394984f802b6d5242" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/642739&quot;&gt;LESS.js Generator by Andy Fowler&lt;/a&gt;: Renders LESS.js files during generation.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/642739&quot;&gt;Andy FowlerによるLESS.jsジェネレーター&lt;/a&gt;：生成中にLESS.jsファイルをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="ea7fe5a375575f92ee17f4008b8b08d155ff879d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/707909&quot;&gt;ArchiveGenerator by Ilkka Laukkanen&lt;/a&gt;: Uses &lt;a href=&quot;https://gist.github.com/707020&quot;&gt;this archive page&lt;/a&gt; to generate archives.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/707909&quot;&gt;Ilkka LaukkanenによるArchiveGenerator&lt;/a&gt;：&lt;a href=&quot;https://gist.github.com/707020&quot;&gt;このアーカイブページ&lt;/a&gt;を使用してアーカイブを生成します。</target>
        </trans-unit>
        <trans-unit id="c079d27598845673cf36b3e39a32a77a6623e08b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/710577&quot;&gt;Tag Cloud Plugin by Ilkka Laukkanen&lt;/a&gt;: Generate a tag cloud that links to tag pages.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/710577&quot;&gt;Ilkka Laukkanenによるタグクラウドプラグイン&lt;/a&gt;：タグページにリンクするタグクラウドを生成します。</target>
        </trans-unit>
        <trans-unit id="a2bbc0e3e72a09f39a592a213c0323ceb6bec391" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/730347&quot;&gt;GIT Tag by Alexandre Girard&lt;/a&gt;: Add Git activity inside a list.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/730347&quot;&gt;Alexandre GirardによるGITタグ&lt;/a&gt;：リスト内にGitアクティビティを追加します。</target>
        </trans-unit>
        <trans-unit id="bfb29dfffe891ba7159429bb7ad4d7ad521b6c48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/731597&quot;&gt;Summarize Filter by Mathieu Arnold&lt;/a&gt;: Remove markup after a &lt;code&gt;&amp;lt;div id=&quot;extended&quot;&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/731597&quot;&gt;Mathieu Arnoldによるフィルターの要約&lt;/a&gt;： &lt;code&gt;&amp;lt;div id=&quot;extended&quot;&amp;gt;&lt;/code&gt; タグの後のマークアップを削除します。</target>
        </trans-unit>
        <trans-unit id="6e5547e1e0e736146037ee6fb0a02faab4420744" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/760265&quot;&gt;LESS Converter by Josh Brown&lt;/a&gt;: Simple LESS converter.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/760265&quot;&gt;Josh BrownによるLESSコンバーター&lt;/a&gt;：シンプルなLESSコンバーター。</target>
        </trans-unit>
        <trans-unit id="60265a263530aee270089e87ce708c894a1c7bd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/834610&quot;&gt;MathJax Liquid Tags by Jessy Cowan-Sharp&lt;/a&gt;: Simple liquid tags for Jekyll that convert inline math and block equations to the appropriate MathJax script tags.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/834610&quot;&gt;Jessy Cowan-SharpによるMathJax Liquidタグ&lt;/a&gt;：インライン数学およびブロック方程式を適切なMathJaxスクリプトタグに変換するJekyllのシンプルな液体タグ。</target>
        </trans-unit>
        <trans-unit id="987425f97f8bd61ecfc91e0f31e37ee0b887d440" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/88cda643aa7e3b0ca1e5&quot;&gt;Tiered Archives by Eli Naeher&lt;/a&gt;: Create tiered template variable that allows you to group archives by year and month.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/88cda643aa7e3b0ca1e5&quot;&gt;Eli Naeherによる階層型アーカイブ&lt;/a&gt;：年と月でアーカイブをグループ化できる階層型テンプレート変数を作成します。</target>
        </trans-unit>
        <trans-unit id="088ba064086f259c934edd37f617c18d53035b71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/912466&quot;&gt;Status.net/OStatus Tag by phaer&lt;/a&gt;: Displays the notices in a given status.net/ostatus feed.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/912466&quot;&gt;フェーズごとのStatus.net/OStatusタグ&lt;/a&gt;：特定のstatus.net/ostatusフィードの通知を表示します。</target>
        </trans-unit>
        <trans-unit id="92b55a5ea2948fde32c4c6b878bdefeb45649837" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/959938&quot;&gt;CoffeeScript Converter by phaer&lt;/a&gt;: A &lt;a href=&quot;http://coffeescript.org&quot;&gt;CoffeeScript&lt;/a&gt; to Javascript converter.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/959938&quot;&gt;phaerによるCoffeeScriptコンバーター&lt;/a&gt;：&lt;a href=&quot;http://coffeescript.org&quot;&gt;CoffeeScript&lt;/a&gt;からJavascriptへのコンバーター。</target>
        </trans-unit>
        <trans-unit id="7ea646425a886c660c9e6c806ce957ab8a3eaaa6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/960150&quot;&gt;Sass SCSS Converter by Mark Wolfe&lt;/a&gt;: Sass converter which uses the new CSS compatible syntax, based Sam X&amp;rsquo;s fork above.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/960150&quot;&gt;Mark WolfeによるSass SCSSコンバーター&lt;/a&gt;：上記のSam Xのフォークに基づいた、新しいCSS互換構文を使用するSassコンバーター。</target>
        </trans-unit>
        <trans-unit id="9f2b15960785327df89772e56445d05ee250bb71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/988201&quot;&gt;Stylus Converter&lt;/a&gt;: Convert .styl to .css.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/988201&quot;&gt;スタイラスコンバーター&lt;/a&gt;：.stylを.cssに変換します。</target>
        </trans-unit>
        <trans-unit id="ba08c1038a4c8b41a05884d44026bb942ef74fa5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/Yexiaoxing/5891929&quot;&gt;Youku and Tudou Embed&lt;/a&gt;: Liquid plugin for embedding Youku and Tudou videos.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/Yexiaoxing/5891929&quot;&gt;YoukuとTudouの埋め込み&lt;/a&gt;：YoukuとTudouの動画を埋め込むための液体プラグイン。</target>
        </trans-unit>
        <trans-unit id="b3fd5c90bfaa1966a80523f448f74c4af9ddf052" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/abhiyerra/7377603&quot;&gt;Org-mode Converter&lt;/a&gt;: Org-mode converter for Jekyll.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/abhiyerra/7377603&quot;&gt;Org-mode Converter&lt;/a&gt;：JekyllのOrg-modeコンバーター。</target>
        </trans-unit>
        <trans-unit id="74e8be3369587bb06b0042c93f31f15336fe3a8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/snrbrnjna/422a4b7e017192c284b3&quot;&gt;Jekyll Http Basic Auth Plugin&lt;/a&gt;: Plugin to manage http basic auth for jekyll generated pages and directories.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/snrbrnjna/422a4b7e017192c284b3&quot;&gt;Jekyll Http Basic Auth Plugin&lt;/a&gt;：jekyllで生成されたページとディレクトリのhttp基本認証を管理するプラグイン。</target>
        </trans-unit>
        <trans-unit id="0a6d9f7a90347236c00387ce3599f8f451dbb455" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/tobru/9171700&quot;&gt;Lychee Gallery Tag&lt;/a&gt; by &lt;a href=&quot;https://github.com/tobru&quot;&gt;tobru&lt;/a&gt;: Include &lt;a href=&quot;https://lychee.electerious.com/&quot;&gt;Lychee&lt;/a&gt; albums into a post. For an introduction, see &lt;a href=&quot;https://tobrunet.ch/articles/jekyll-meets-lychee-a-liquid-tag-plugin/&quot;&gt;Jekyll meets Lychee - A Liquid Tag plugin&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/tobru/9171700&quot;&gt;ライチギャラリー&lt;/a&gt;&lt;a href=&quot;https://github.com/tobru&quot;&gt;tobru&lt;/a&gt;によるタグ：&lt;a href=&quot;https://lychee.electerious.com/&quot;&gt;ライチの&lt;/a&gt;アルバムを投稿に含めます。&lt;a href=&quot;https://tobrunet.ch/articles/jekyll-meets-lychee-a-liquid-tag-plugin/&quot;&gt;概要&lt;/a&gt;については、JekyllとLycheeの出会いをご覧ください-Liquid Tagプラグイン</target>
        </trans-unit>
        <trans-unit id="e8ab008b9e11c16e3e87891f92a1fce8e9334128" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/zachleat/5792681&quot;&gt;Read in X Minutes&lt;/a&gt; by &lt;a href=&quot;https://github.com/zachleat&quot;&gt;zachleat&lt;/a&gt;: Estimates the reading time of a string (for blog post content).</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/zachleat/5792681&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/zachleat&quot;&gt;zachleatによる&lt;/a&gt;X分で読み取り：（ブログ投稿コンテンツの）文字列の読み取り時間を推定します。</target>
        </trans-unit>
        <trans-unit id="c0f3d4b69cabd7045ce8a8741c2eb7c210aca756" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/23maverick23/jekyll-humanize&quot;&gt;jekyll-humanize&lt;/a&gt;: This is a port of the Django app humanize which adds a &amp;ldquo;human touch&amp;rdquo; to data. Each method represents a Fluid type filter that can be used in your Jekyll site templates. Given that Jekyll produces static sites, some of the original methods do not make logical sense to port (e.g. naturaltime).</source>
          <target state="translated">&lt;a href=&quot;https://github.com/23maverick23/jekyll-humanize&quot;&gt;jekyll-humanize&lt;/a&gt;：これはDjangoアプリのhumanizeの移植版で、データに「ヒューマンタッチ」を追加します。各メソッドは、Jekyllサイトテンプレートで使用できるFluidタイプフィルターを表します。Jekyllが静的サイトを生成することを考えると、元のメソッドの一部は移植するのに論理的な意味を持ちません（たとえば、自然時間）。</target>
        </trans-unit>
        <trans-unit id="16fc4b0d81b53aef1791b6e379ea21dc5893d90b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/23maverick23/sublime-jekyll&quot;&gt;sublime-jekyll&lt;/a&gt;: A Sublime Text package for Jekyll static sites. This package should help creating Jekyll sites and posts easier by providing access to key template tags and filters, as well as common completions and a current date/datetime command (for dating posts). You can install this package manually via GitHub, or via &lt;a href=&quot;https://packagecontrol.io/packages/Jekyll&quot;&gt;Package Control&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/23maverick23/sublime-jekyll&quot;&gt;sublime-jekyll&lt;/a&gt;：Jekyll静的サイト用のSublime Textパッケージ。このパッケージは、主要なテンプレートタグとフィルターへのアクセスを提供することで、Jekyllのサイトと投稿の作成を容易にし、一般的な補完と現在の日付/日付コマンド（日付付き投稿用）を提供します。このパッケージは、GitHubまたは&lt;a href=&quot;https://packagecontrol.io/packages/Jekyll&quot;&gt;Package Controlを&lt;/a&gt;使用して手動でインストールできます。</target>
        </trans-unit>
        <trans-unit id="22e1cf498442fc2aac3dcc8f1c1d11c023850fbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/AlessandroLorenzi/piwigo_gallery&quot;&gt;Piwigo Gallery&lt;/a&gt; by &lt;a href=&quot;http://blog.alorenzi.eu/&quot;&gt;Alessandro Lorenzi&lt;/a&gt;: Jekyll plugin to generate thumbnails from a Piwigo gallery and display them with a Liquid tag</source>
          <target state="translated">&lt;a href=&quot;https://github.com/AlessandroLorenzi/piwigo_gallery&quot;&gt;Piwigoギャラリー&lt;/a&gt;によって&lt;a href=&quot;http://blog.alorenzi.eu/&quot;&gt;アレッサンドロロレンツィ&lt;/a&gt;：ジキルはPiwigoギャラリーからサムネイルを生成し、液体のタグでそれらを表示するプラグイン</target>
        </trans-unit>
        <trans-unit id="910f1d116e99b8365d58789383a5f7d45194a17c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Ezmyrelda/twa&quot;&gt;twa&lt;/a&gt;: Twemoji Awesome plugin for Jekyll. Liquid tag allowing you to use twitter emoji in your jekyll pages.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Ezmyrelda/twa&quot;&gt;twa&lt;/a&gt;：Twemoji Jekyll用の素晴らしいプラグイン。リキッドタグを使用すると、ジェキルページでTwitterの絵文字を使用できます。</target>
        </trans-unit>
        <trans-unit id="548be5e0196eedcc49fe79588fae9fb6b31294b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/GSI/jekyll_date_chart&quot;&gt;Jekyll Date Chart&lt;/a&gt; by &lt;a href=&quot;https://github.com/GSI&quot;&gt;GSI&lt;/a&gt;: Block that renders date line charts based on textile-formatted tables.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/GSI/jekyll_date_chart&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/GSI&quot;&gt;GSIに&lt;/a&gt;よるJekyll日付チャート：テキスタイル形式のテーブルに基づいて日付線チャートをレンダリングするブロック。</target>
        </trans-unit>
        <trans-unit id="27ab7a552c9e57e8dd5e6136b986abbfcffed99b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/GSI/jekyll_image_encode&quot;&gt;Jekyll Image Encode&lt;/a&gt; by &lt;a href=&quot;https://github.com/GSI&quot;&gt;GSI&lt;/a&gt;: Tag that renders base64 codes of images fetched from the web.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/GSI/jekyll_image_encode&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/GSI&quot;&gt;GSIに&lt;/a&gt;よるJekyll画像エンコード：Webから取得した画像のbase64コードをレンダリングするタグ。</target>
        </trans-unit>
        <trans-unit id="d5090e011921d93dc0eb0752b3a9ee6f3ea93225" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/GSI/jekyll_quick_man&quot;&gt;Jekyll Quick Man&lt;/a&gt; by &lt;a href=&quot;https://github.com/GSI&quot;&gt;GSI&lt;/a&gt;: Tag that renders pretty links to man page sources on the internet.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/GSI/jekyll_quick_man&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/GSI&quot;&gt;GSIに&lt;/a&gt;よるJekyll Quick Man：インターネット上のmanページのソースへのかわいいリンクをレンダリングするタグ。</target>
        </trans-unit>
        <trans-unit id="9a07cd68f2374c44e17faca560bdf6136276d6a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/JCB-K/singlepage-jekyll&quot;&gt;Singlepage-jekyll&lt;/a&gt; by &lt;a href=&quot;https://github.com/JCB-K&quot;&gt;JCB-K&lt;/a&gt;: Turns Jekyll into a dynamic one-page website.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/JCB-K/singlepage-jekyll&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/JCB-K&quot;&gt;JCB-Kに&lt;/a&gt;よるSinglepage-jekyll：Jekyllをダイナミックな1ページのWebサイトに変えます。</target>
        </trans-unit>
        <trans-unit id="064a50023f0324eb8d48936335e428585fce3745" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/KrzysiekJ/jekyll-i18n_tags&quot;&gt;jekyll-i18n_tags&lt;/a&gt;: Translate your templates.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/KrzysiekJ/jekyll-i18n_tags&quot;&gt;jekyll-i18n_tags&lt;/a&gt;：テンプレートを翻訳します。</target>
        </trans-unit>
        <trans-unit id="3b7cae2be096e4c9e2f4190353a8ea46f97d950e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/KrzysiekJ/jekyll-paspagon&quot;&gt;jekyll-paspagon&lt;/a&gt;: Sell your posts in various formats for cryptocurrencies.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/KrzysiekJ/jekyll-paspagon&quot;&gt;jekyll-paspagon&lt;/a&gt;：暗号通貨のさまざまな形式で投稿を販売します。</target>
        </trans-unit>
        <trans-unit id="713da71dc20c92c07589d638d03dfdb14c419a0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/LawrenceWoodman/domain_name-liquid_filter&quot;&gt;Domain Name Filter by Lawrence Woodman&lt;/a&gt;: Filters the input text so that just the domain name is left.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/LawrenceWoodman/domain_name-liquid_filter&quot;&gt;Lawrence Woodmanによるドメイン名フィルター&lt;/a&gt;：ドメイン名だけが残るように入力テキストをフィルターします。</target>
        </trans-unit>
        <trans-unit id="a9ddf0935d92201d78e718b447228ffb5cbf6c1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/LawrenceWoodman/related_posts-jekyll_plugin&quot;&gt;Related Posts by Lawrence Woodman&lt;/a&gt;: Overrides &lt;code&gt;site.related_posts&lt;/code&gt; to use categories to assess relationship.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/LawrenceWoodman/related_posts-jekyll_plugin&quot;&gt;Lawrence Woodmanによる関連記事&lt;/a&gt;： &lt;code&gt;site.related_posts&lt;/code&gt; をオーバーライドして、カテゴリを使用して関係を評価します。</target>
        </trans-unit>
        <trans-unit id="ecba6bd8b16ee9ee46a1b2e04ecdfb0f1c35befb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/MattHall/truncatehtml&quot;&gt;Truncate HTML&lt;/a&gt; by &lt;a href=&quot;https://codebeef.com/&quot;&gt;Matt Hall&lt;/a&gt;: A Jekyll filter that truncates HTML while preserving markup structure.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/MattHall/truncatehtml&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://codebeef.com/&quot;&gt;Matt Hallに&lt;/a&gt;よるHTMLの切り捨て：マークアップ構造を維持しながらHTMLを切り捨てるJekyllフィルター。</target>
        </trans-unit>
        <trans-unit id="1cf550a1b514d5fafeb432688686d75145b56c57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/MediaComem/jekyll-brand-social-wall&quot;&gt;Jekyll Brand Social Wall&lt;/a&gt;: A jekyll plugin to generate a social wall with your favorite social networks</source>
          <target state="translated">&lt;a href=&quot;https://github.com/MediaComem/jekyll-brand-social-wall&quot;&gt;Jekyll Brand Social Wall&lt;/a&gt;：お気に入りのソーシャルネットワークでソーシャルウォールを生成するためのjekyllプラグイン</target>
        </trans-unit>
        <trans-unit id="2693df8fca8dd1c2145413c2e88da55f5cd31e58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/MertcanGokgoz/Jekyll-Spotify&quot;&gt;Jekyll-Spotify&lt;/a&gt;: Easily output Spotify Embed Player for jekyll</source>
          <target state="translated">&lt;a href=&quot;https://github.com/MertcanGokgoz/Jekyll-Spotify&quot;&gt;Jekyll-Spotify&lt;/a&gt;：jekyll用のSpotify Embed Playerを簡単に出力</target>
        </trans-unit>
        <trans-unit id="667b811d85a915740e072f4ae28fd6448c04d931" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/PascalW/jekyll_indextank&quot;&gt;Full-text search by Pascal Widdershoven&lt;/a&gt;: Adds full-text search to your Jekyll site with a plugin and a bit of JavaScript.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/PascalW/jekyll_indextank&quot;&gt;Pascal Widdershovenによる全文検索&lt;/a&gt;：Jekyllサイトにプラグインと少しのJavaScriptで全文検索を追加します。</target>
        </trans-unit>
        <trans-unit id="ee16691267dc4f4d498b2e7cc75f8a839e4843b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/PatrickC8t/Jekyll-Ordinal&quot;&gt;Jekyll-Ordinal&lt;/a&gt;: Jekyll liquid filter to output a date ordinal such as &amp;ldquo;st&amp;rdquo;, &amp;ldquo;nd&amp;rdquo;, &amp;ldquo;rd&amp;rdquo;, or &amp;ldquo;th&amp;rdquo;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/PatrickC8t/Jekyll-Ordinal&quot;&gt;Jekyll-Ordinal&lt;/a&gt;：「st」、「nd」、「rd」、「th」などの日付の序数を出力するJekyll液体フィルター。</target>
        </trans-unit>
        <trans-unit id="aa577bbf6865da5dce85de6ca82ebbb7eb507bd3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/SaswatPadhi/jekyll_smilify&quot;&gt;Smilify&lt;/a&gt; by &lt;a href=&quot;https://github.com/SaswatPadhi&quot;&gt;SaswatPadhi&lt;/a&gt;: Convert text emoticons in your content to themeable smiley pics.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/SaswatPadhi/jekyll_smilify&quot;&gt;SaswatPadhiに&lt;/a&gt;よる&lt;a href=&quot;https://github.com/SaswatPadhi&quot;&gt;Smilify&lt;/a&gt;：コンテンツ内のテキストの絵文字をテーマに応じた笑顔の写真に変換します。</target>
        </trans-unit>
        <trans-unit id="cda2223e8678329752a33002a9641a487a3f258b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/TheFox/jekyll-bigfootnotes&quot;&gt;Bigfootnotes Plugin&lt;/a&gt;: Enables big footnotes for Kramdown.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/TheFox/jekyll-bigfootnotes&quot;&gt;Bigfootnotesプラグイン&lt;/a&gt;：Kramdownの大きな脚注を有効にします。</target>
        </trans-unit>
        <trans-unit id="eeaf3ce92a8381fc1c53d2d6d12a5fd947f9885e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/aarongustafson/jekyll-webmention_io&quot;&gt;webmention_io.rb&lt;/a&gt; by &lt;a href=&quot;http://aaron-gustafson.com/&quot;&gt;Aaron Gustafson&lt;/a&gt;: A plugin to enable &lt;a href=&quot;https://indieweb.org/webmention&quot;&gt;webmention&lt;/a&gt; integration using &lt;a href=&quot;https://webmention.io/&quot;&gt;Webmention.io&lt;/a&gt;. Includes an optional JavaScript for updating webmentions automatically between publishes and, if available, in realtime using WebSockets.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/aarongustafson/jekyll-webmention_io&quot;&gt;webmention_io.rb&lt;/a&gt;によって&lt;a href=&quot;http://aaron-gustafson.com/&quot;&gt;アーロン・グスタフソン&lt;/a&gt;：有効にするプラグイン&lt;a href=&quot;https://indieweb.org/webmention&quot;&gt;webmentionの&lt;/a&gt;使用統合&lt;a href=&quot;https://webmention.io/&quot;&gt;Webmention.ioを&lt;/a&gt;。パブリッシュ間で、また可能な場合はWebSocketを使用してリアルタイムでWebmentionを自動的に更新するためのオプションのJavaScriptが含まれています。</target>
        </trans-unit>
        <trans-unit id="d207dcdfc086b28895234d7cae5ac866dc62b079" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/adaoraul/rack-jekyll/&quot;&gt;Rack-Jekyll&lt;/a&gt; is an easy way to deploy your site on any Rack server such as Amazon EC2, Slicehost, Heroku, and so forth. It also can run with &lt;a href=&quot;https://github.com/rtomayko/shotgun/&quot;&gt;shotgun&lt;/a&gt;, &lt;a href=&quot;https://github.com/rack/rack&quot;&gt;rackup&lt;/a&gt;, &lt;a href=&quot;https://github.com/mongrel/mongrel&quot;&gt;mongrel&lt;/a&gt;, &lt;a href=&quot;https://github.com/defunkt/unicorn/&quot;&gt;unicorn&lt;/a&gt;, and &lt;a href=&quot;https://github.com/adaoraul/rack-jekyll#readme&quot;&gt;others&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/adaoraul/rack-jekyll/&quot;&gt;Rack-Jekyll&lt;/a&gt;は、Amazon EC2、Slicehost、Herokuなどの任意のラックサーバーにサイトをデプロイする簡単な方法です。それはまたして実行することができます&lt;a href=&quot;https://github.com/rtomayko/shotgun/&quot;&gt;散弾銃&lt;/a&gt;、&lt;a href=&quot;https://github.com/rack/rack&quot;&gt;rackup&lt;/a&gt;、&lt;a href=&quot;https://github.com/mongrel/mongrel&quot;&gt;雑種&lt;/a&gt;、&lt;a href=&quot;https://github.com/defunkt/unicorn/&quot;&gt;ユニコーン&lt;/a&gt;、および&lt;a href=&quot;https://github.com/adaoraul/rack-jekyll#readme&quot;&gt;他&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="473e0ebdaf9bf6f30c03b70b923edbf38453dea6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/agelber/jekyll-rss&quot;&gt;RssGenerator by Assaf Gelber&lt;/a&gt;: Automatically creates an RSS 2.0 feed from your posts.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/agelber/jekyll-rss&quot;&gt;Assaf GelberによるRssGenerator&lt;/a&gt;：投稿からRSS 2.0フィードを自動的に作成します。</target>
        </trans-unit>
        <trans-unit id="6386280561da3d34fb6afa99d64348cb318d7475" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/alexivkin/Jekyll-Art-Gallery-Plugin&quot;&gt;Jekyll Art Gallery plugin&lt;/a&gt;: An advanced art/photo gallery generation plugin for creating galleries from a set of image folders. Supports image tagging, thumbnails, sorting, image rotation, post-processing (remove EXIF, add watermark), multiple collections and much more.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/alexivkin/Jekyll-Art-Gallery-Plugin&quot;&gt;Jekyll Art Galleryプラグイン&lt;/a&gt;：一連の画像フォルダからギャラリーを作成するための高度なアート/フォトギャラリー生成プラグイン。画像のタグ付け、サムネイル、並べ替え、画像の回転、後処理（EXIFの削除、透かしの追加）、複数のコレクションなどをサポートします。</target>
        </trans-unit>
        <trans-unit id="a56665fdd232d52725d4fceee8962d39eb588dc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/archome/jekyll-citation&quot;&gt;Jekyll-citation&lt;/a&gt;: Render BibTeX-formatted bibliographies/citations included in posts and pages (pure Ruby).</source>
          <target state="translated">&lt;a href=&quot;https://github.com/archome/jekyll-citation&quot;&gt;Jekyll-citation&lt;/a&gt;：投稿とページに含まれるBibTeX形式の参考文献/引用をレンダリングします（Rubyのみ）。</target>
        </trans-unit>
        <trans-unit id="51f077a4c23eeb2825c568c7f630a2228628127c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/asciidoctor/jekyll-asciidoc&quot;&gt;AsciiDoc Plugin&lt;/a&gt;: AsciiDoc convertor for Jekyll using &lt;a href=&quot;http://asciidoctor.org/&quot;&gt;Asciidoctor&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/asciidoctor/jekyll-asciidoc&quot;&gt;AsciiDocプラグイン&lt;/a&gt;：&lt;a href=&quot;http://asciidoctor.org/&quot;&gt;Asciidoctor&lt;/a&gt;を使用したJekyll用のAsciiDocコンバーター。</target>
        </trans-unit>
        <trans-unit id="88eca099845699019062d62df4447e9622f772ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ashmaroli/jekyll-data&quot;&gt;jekyll-data&lt;/a&gt;: Read data files within Jekyll Theme Gems.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ashmaroli/jekyll-data&quot;&gt;jekyll-data&lt;/a&gt;：Jekyll Theme Gems内のデータファイルを読み取ります。</target>
        </trans-unit>
        <trans-unit id="0f75660899bf8c9c4410a3cf8822d05b1540e212" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/aucor/jekyll-plugins&quot;&gt;Jekyll plugins by Aucor&lt;/a&gt;: Plugins for trimming unwanted newlines/whitespace and sorting pages by weight attribute.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/aucor/jekyll-plugins&quot;&gt;AucorによるJekyllプラグイン&lt;/a&gt;：不要な改行/空白を削除し、ページを重み属性でソートするためのプラグイン。</target>
        </trans-unit>
        <trans-unit id="905d5d0ab3132f001e75f3dad7e67eac926c690d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/awood/hawkins&quot;&gt;Hawkins&lt;/a&gt;: Adds a &lt;code&gt;liveserve&lt;/code&gt; sub-command to Jekyll that incorporates &lt;a href=&quot;http://livereload.com/&quot;&gt;LiveReload&lt;/a&gt; into your pages while you preview them. No more hitting the refresh button in your browser!</source>
          <target state="translated">&lt;a href=&quot;https://github.com/awood/hawkins&quot;&gt;Hawkins&lt;/a&gt;：プレビュー中に&lt;a href=&quot;http://livereload.com/&quot;&gt;LiveReload&lt;/a&gt;をページに組み込む &lt;code&gt;liveserve&lt;/code&gt; サブコマンドをJekyllに追加します。ブラウザーの更新ボタンを押す必要はもうありません！</target>
        </trans-unit>
        <trans-unit id="ecfb076acb0cd002f7c99b04fb5dffd60b410d16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ayastreb/jekyll-maps&quot;&gt;Jekyll Maps&lt;/a&gt; by &lt;a href=&quot;https://github.com/ayastreb&quot;&gt;Anatoliy Yastreb&lt;/a&gt;: A Jekyll plugin to easily embed maps with filterable locations.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ayastreb/jekyll-maps&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/ayastreb&quot;&gt;Anatoliy Yastrebに&lt;/a&gt;よるJekyll Maps：フィルター可能な場所を含む地図を簡単に埋め込むためのJekyllプラグイン。</target>
        </trans-unit>
        <trans-unit id="564da2be42797017bd873ae97b8ee26150e45953" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/bbakersmith/jekyll-pages-directory&quot;&gt;Pages Directory by Ben Baker-Smith&lt;/a&gt;: Defines a &lt;code&gt;_pages&lt;/code&gt; directory for page files which routes its output relative to the project root.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/bbakersmith/jekyll-pages-directory&quot;&gt;Ben Baker-SmithによるPagesディレクトリ&lt;/a&gt;：プロジェクトルートに関連して出力をルーティングするページファイルの &lt;code&gt;_pages&lt;/code&gt; ディレクトリを定義します。</target>
        </trans-unit>
        <trans-unit id="a62da02560ee311bad621b9ed437a84d05d85636" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/bdesham/inline_highlight&quot;&gt;inline_highlight&lt;/a&gt;: A tag for inline syntax highlighting.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/bdesham/inline_highlight&quot;&gt;inline_highlight&lt;/a&gt;：インライン構文強調表示用のタグ。</target>
        </trans-unit>
        <trans-unit id="24222a1d99e759d05e7de6812ded2fb64c983365" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/bdesham/pluralize&quot;&gt;pluralize&lt;/a&gt;: Easily combine a number and a word into a grammatically-correct amount like &amp;ldquo;1 minute&amp;rdquo; or &amp;ldquo;2 minute&lt;strong&gt;s&lt;/strong&gt;&amp;rdquo;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/bdesham/pluralize&quot;&gt;pluralize&lt;/a&gt;：数値と単語を「1分」や「2分&lt;strong&gt;s&lt;/strong&gt;」などの文法的に正しい量に簡単に組み合わせる。</target>
        </trans-unit>
        <trans-unit id="ac424632f7d05d47eabe063b61524e04a9e243f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/bdesham/reading_time&quot;&gt;reading_time&lt;/a&gt;: Count words and estimate reading time for a piece of text, ignoring HTML elements that are unlikely to contain running text.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/bdesham/reading_time&quot;&gt;reading_time&lt;/a&gt;：実行中のテキストが含まれている可能性が低いHTML要素を無視して、単語をカウントし、テキストの一部の読み取り時間を推定します。</target>
        </trans-unit>
        <trans-unit id="70a8aaffb981257767ef0db6340b882d05ff65c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/blackwinter/jekyll-localization&quot;&gt;Jekyll-localization&lt;/a&gt;: Jekyll plugin that adds localization features to the rendering engine.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/blackwinter/jekyll-localization&quot;&gt;Jekyll-localization&lt;/a&gt;：レンダリングエンジンにローカリゼーション機能を追加するJekyllプラグイン。</target>
        </trans-unit>
        <trans-unit id="049175cedff4dca856a1afecbfe7c6e07650089d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/blackwinter/jekyll-pagination&quot;&gt;Jekyll-pagination&lt;/a&gt;: Jekyll plugin to extend the pagination generator.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/blackwinter/jekyll-pagination&quot;&gt;Jekyll-pagination&lt;/a&gt;：ページネーションジェネレーターを拡張するためのJekyllプラグイン。</target>
        </trans-unit>
        <trans-unit id="953b8e6162ec62edac256ef28ed656062b090947" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/blackwinter/jekyll-rendering&quot;&gt;Jekyll-rendering&lt;/a&gt;: Jekyll plugin to provide alternative rendering engines.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/blackwinter/jekyll-rendering&quot;&gt;Jekyll-rendering&lt;/a&gt;：代替レンダリングエンジンを提供するJekyllプラグイン。</target>
        </trans-unit>
        <trans-unit id="7e5b3f2dc1509e9a68f729a58c7b586824021bec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/bwillis/jekyll-github-sample&quot;&gt;Jekyll GitHub Sample Tag&lt;/a&gt;: A liquid tag to include a sample of a github repo file in your Jekyll site.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/bwillis/jekyll-github-sample&quot;&gt;Jekyll GitHub Sample Tag&lt;/a&gt;：Jekyllサイトにgithub repoファイルのサンプルを含めるための液体タグ。</target>
        </trans-unit>
        <trans-unit id="5e80048c50166d706b7cbf5768b9739cd9a5568d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/callmeed/jekyll-image-set&quot;&gt;Image Set/Gallery Tag&lt;/a&gt; by &lt;a href=&quot;https://github.com/callmeed&quot;&gt;callmeed&lt;/a&gt;: Renders HTML for an image gallery from a folder in your Jekyll site. Just pass it a folder name and class/tag options.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/callmeed/jekyll-image-set&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/callmeed&quot;&gt;callmeed&lt;/a&gt;による画像セット/ギャラリータグ：Jekyllサイトのフォルダーから画像ギャラリーのHTMLをレンダリングします。フォルダ名とクラス/タグのオプションを渡すだけです。</target>
        </trans-unit>
        <trans-unit id="96951a16ac7a8056bf4b7f20abb36534e63df567" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/christianhellsten/jekyll-plugins&quot;&gt;Delicious Plugin by Christian Hellsten&lt;/a&gt;: Fetches and renders bookmarks from delicious.com.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/christianhellsten/jekyll-plugins&quot;&gt;Christian HellstenによるDelicious Plugin&lt;/a&gt;：delicious.comからブックマークを取得してレンダリングします。</target>
        </trans-unit>
        <trans-unit id="4b151176b96324c5ceb8414809f76c7666807e4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/codeinpink/jekyll-portfolio-generator&quot;&gt;Jekyll Portfolio Generator by Shannon Babincsak&lt;/a&gt;: Generates project pages and computes related projects out of project data files.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/codeinpink/jekyll-portfolio-generator&quot;&gt;Shannon BabincsakによるJekyllポートフォリオジェネレーター&lt;/a&gt;：プロジェクトページを生成し、プロジェクトデータファイルから関連プロジェクトを計算します。</target>
        </trans-unit>
        <trans-unit id="ab13fdc1eb5ff8adb78462b7eaf5066b718dbbd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/contentful/jekyll-contentful-data-import&quot;&gt;Official Contentful Jekyll Plugin&lt;/a&gt;: Adds a &lt;code&gt;contentful&lt;/code&gt; sub-command to Jekyll to import data from Contentful.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/contentful/jekyll-contentful-data-import&quot;&gt;公式Contentfulジキルプラグイン&lt;/a&gt;：追加 &lt;code&gt;contentful&lt;/code&gt; Contentfulからインポートデータにジキルサブコマンド。</target>
        </trans-unit>
        <trans-unit id="3ffbf2950265a18829f8ca94746413e02725b4e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/crispgm/jekyll-tags-list-plugin&quot;&gt;Jekyll Tags List Plugin&lt;/a&gt;: A Liquid tag plugin that creates tags list in specific order.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/crispgm/jekyll-tags-list-plugin&quot;&gt;Jekyllタグリストプラグイン&lt;/a&gt;：特定の順序でタグリストを作成するLiquidタグプラグイン。</target>
        </trans-unit>
        <trans-unit id="19b300464438e5115beb28236e7d95c68eab19e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/dafi/jekyll-toc-generator&quot;&gt;Table of Content Generator&lt;/a&gt;: Generate the HTML code containing a table of content (TOC), the TOC can be customized in many way, for example you can decide which pages can be without TOC.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/dafi/jekyll-toc-generator&quot;&gt;Table of Content Generator&lt;/a&gt;：目次（TOC）を含むHTMLコードを生成します。TOCはさまざまな方法でカスタマイズできます。たとえば、TOCがないページを決定できます。</target>
        </trans-unit>
        <trans-unit id="12bbdf9dcd675356d0f46df7c48eafa5d1becd9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/dannygarcia/grunt-jekyll&quot;&gt;grunt-jekyll&lt;/a&gt;: A straightforward &lt;a href=&quot;http://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt; plugin for Jekyll.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/dannygarcia/grunt-jekyll&quot;&gt;grunt-jekyll&lt;/a&gt;：Jekyllの単純な&lt;a href=&quot;http://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt;プラグイン。</target>
        </trans-unit>
        <trans-unit id="c46ba34d4aaa8e310638294cf7041b5efc2729ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/davidensinger/jekyll-suggested-tweet&quot;&gt;Jekyll Suggested Tweet&lt;/a&gt; by &lt;a href=&quot;https://github.com/davidensinger/&quot;&gt;David Ensinger&lt;/a&gt;: A Liquid tag for Jekyll that allows for the embedding of suggested tweets via Twitter&amp;rsquo;s Web Intents API.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/davidensinger/jekyll-suggested-tweet&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/davidensinger/&quot;&gt;David Ensingerに&lt;/a&gt;よるJekyllの提案されたツイート：TwitterのWeb Intents APIを介して提案されたツイートを埋め込むことができるJekyllのLiquidタグ。</target>
        </trans-unit>
        <trans-unit id="6f4c5924d3f769cd407a51eca56bd68688f72a25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/developmentseed/jekyll-ga&quot;&gt;jekyll-ga&lt;/a&gt;: A Jekyll plugin that downloads Google Analytics data and adds it to posts. Useful for making a site that lists &amp;ldquo;most popular&amp;rdquo; content. &lt;a href=&quot;https://developmentseed.org/blog/google-analytics-jekyll-plugin/&quot;&gt;Read the introduction&lt;/a&gt; post on the developmentSEED blog.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/developmentseed/jekyll-ga&quot;&gt;jekyll-ga&lt;/a&gt;：Googleアナリティクスのデータをダウンロードして投稿に追加するJekyllプラグイン。「最も人気のある」コンテンツをリストするサイトを作成するのに役立ちます。developmentSEEDブログの&lt;a href=&quot;https://developmentseed.org/blog/google-analytics-jekyll-plugin/&quot;&gt;紹介&lt;/a&gt;記事を読んでください。</target>
        </trans-unit>
        <trans-unit id="1cb9af3b54471b850d1614e1bcedcae7cd4a606d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/digitalsparky/jekyll-minifier&quot;&gt;jekyll-minifier&lt;/a&gt;: Minifies HTML, XML, CSS, and Javascript both inline and as separate files utilising yui-compressor and htmlcompressor.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/digitalsparky/jekyll-minifier&quot;&gt;jekyll-minifier&lt;/a&gt;：インラインおよびyui-compressorとhtmlcompressorを利用した個別のファイルの両方で、HTML、XML、CSS、およびJavaScriptを縮小します。</target>
        </trans-unit>
        <trans-unit id="a900e5f28a66c12ce5cc0a17483efd9c2710d4bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/dimitri-koenig/jekyll-plugins&quot;&gt;Fetch remote file content&lt;/a&gt; by &lt;a href=&quot;https://www.dimitrikoenig.net/&quot;&gt;Dimitri K&amp;ouml;nig&lt;/a&gt;: Using &lt;code&gt;remote_file_content&lt;/code&gt; tag you can fetch the content of a remote file and include it as if you would put the content right into your markdown file yourself. Very useful for including code from github repo&amp;rsquo;s to always have a current repo version.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/dimitri-koenig/jekyll-plugins&quot;&gt;リモートファイルの内容を取得する&lt;/a&gt;ことにより、&lt;a href=&quot;https://www.dimitrikoenig.net/&quot;&gt;ディミトリ・ケーニッヒ&lt;/a&gt;：使用 &lt;code&gt;remote_file_content&lt;/code&gt; のあなたの値下げファイルを自分の中にコンテンツの権利を置くかのようにタグを使用するには、それをリモートファイルの内容を取得して含めることができます。github repoのコードを含め、常に最新のrepoバージョンを保持するのに非常に役立ちます。</target>
        </trans-unit>
        <trans-unit id="f95ca3ad3fe246a402ad7b76ee33341d6496f4d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/dommmel/jekyll-youtube&quot;&gt;Jekyll-Youtube&lt;/a&gt; A Liquid tag that embeds Youtube videos. The default emded markup is responsive but you can also specify your own by using an include/partial.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/dommmel/jekyll-youtube&quot;&gt;Jekyll-Youtube&lt;/a&gt; Youtubeビデオを埋め込むLiquidタグ。デフォルトの埋め込みマークアップはレスポンシブですが、include / partialを使用して独自のマークアップを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="e22cb005d5cc74b23d3e6655e9e52fc005d34609" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/edward-shen/github-cards&quot;&gt;github-cards&lt;/a&gt;: Creates styleable Github cards for your Github projects.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/edward-shen/github-cards&quot;&gt;github-cards&lt;/a&gt;：Githubプロジェクト用のスタイル可能なGithubカードを作成します。</target>
        </trans-unit>
        <trans-unit id="1be9126ae21c162b76e0809131f10eb54e57162c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ericdfields/Jekyll-Dribbble-Set-Tag&quot;&gt;Jekyll Dribbble Set Tag&lt;/a&gt;: Builds Dribbble image galleries from any user.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ericdfields/Jekyll-Dribbble-Set-Tag&quot;&gt;ジキルドリブルセットタグ&lt;/a&gt;：任意のユーザーからドリブル画像ギャラリーを構築します。</target>
        </trans-unit>
        <trans-unit id="12423f14ee26132271c974ba6ebd46686c716868" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/eug/jekyll-video-embed&quot;&gt;Jekyll Video Embed&lt;/a&gt;: It provides several tags to easily embed videos (e.g. Youtube, Vimeo, UStream and Ted Talks)</source>
          <target state="translated">&lt;a href=&quot;https://github.com/eug/jekyll-video-embed&quot;&gt;Jekyll Video Embed&lt;/a&gt;：動画を簡単に埋め込むためのいくつかのタグを提供します（例：Youtube、Vimeo、UStream、Ted Talks）</target>
        </trans-unit>
        <trans-unit id="1906fc8921dbf427ebc7aeabcba95ba3a07ee9a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/fadhilnapis/jekyll-multi-paginate&quot;&gt;jekyll-multi-paginate&lt;/a&gt;: Simple Jekyll paginator for multiple page. Ease you to make pagination on multiple page especially like multiple language.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/fadhilnapis/jekyll-multi-paginate&quot;&gt;jekyll-multi-paginate&lt;/a&gt;：複数ページ用のシンプルなJekyll ページネーション。特に複数の言語のように、複数のページでページ分割を簡単に作成できます。</target>
        </trans-unit>
        <trans-unit id="429920ef713ae8f6f6f3a3ed7be555b03c9b28c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/fauno/jekyll-pandoc-multiple-formats&quot;&gt;Jekyll-pandoc-multiple-formats&lt;/a&gt; by &lt;a href=&quot;https://github.com/edsl&quot;&gt;edsl&lt;/a&gt;: Use pandoc to generate your site in multiple formats. Supports pandoc&amp;rsquo;s markdown extensions.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/fauno/jekyll-pandoc-multiple-formats&quot;&gt;ジキル-pandoc-マルチフォーマット&lt;/a&gt;によって&lt;a href=&quot;https://github.com/edsl&quot;&gt;EDSL&lt;/a&gt;：複数の形式でサイトを生成するために使用しpandoc。pandocのマークダウン拡張機能をサポートします。</target>
        </trans-unit>
        <trans-unit id="8b14ab03b32b055bc2e635b10b7a2a3d178ae903" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/field-theory/jekyll-category-pages&quot;&gt;jekyll-category-pages&lt;/a&gt;: Easy-to-use category index pages with and without pagination. Supports non-URL-safe category keywords and has extensive documentation and test coverage.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/field-theory/jekyll-category-pages&quot;&gt;jekyll-category-pages&lt;/a&gt;：ページ付けの有無にかかわらず、使いやすいカテゴリインデックスページ。URLセーフではないカテゴリキーワードをサポートし、広範なドキュメントとテスト範囲を備えています。</target>
        </trans-unit>
        <trans-unit id="3ac7632b1142b2f7d9ba3d420367c54cc6ecd942" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/flatterline/jekyll-plugins&quot;&gt;Company website and blog plugins&lt;/a&gt; by Flatterline, a Ruby on Rails development company: Portfolio/project page generator, team/individual page generator, an author bio liquid tag for use on posts, and a few other smaller plugins.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/flatterline/jekyll-plugins&quot;&gt;&lt;/a&gt;Ruby on Rails開発会社であるFlatterlineによる会社のWebサイトとブログのプラグイン：ポートフォリオ/プロジェクトページジェネレーター、チーム/個別のページジェネレーター、投稿で使用する著者のバイオリキッドタグ、およびその他のいくつかの小さなプラグイン。</target>
        </trans-unit>
        <trans-unit id="7488bfc34600d0dbc81b34fb85f8ba42be9415c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/forestryio/jekyll-menus&quot;&gt;jekyll-menus&lt;/a&gt;: Hugo style menus for your Jekyll site&amp;hellip; recursive menus included.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/forestryio/jekyll-menus&quot;&gt;jekyll-menus&lt;/a&gt;：JekyllサイトのHugoスタイルのメニュー&amp;hellip;再帰的なメニューが含まれています。</target>
        </trans-unit>
        <trans-unit id="5a523510b3696b7cc9709ebaa9347f3213f94181" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/git-no/jekyll-breadcrumbs&quot;&gt;Jekyll-breadcrumbs&lt;/a&gt;: Creates breadcrumbs for Jekyll 3.x, includes features like SEO optimization, optional breadcrumb item translation and more.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/git-no/jekyll-breadcrumbs&quot;&gt;Jekyll-breadcrumbs&lt;/a&gt;：Jekyll 3.xのブレッドクラムを作成します。SEO最適化、オプションのブレッドクラムアイテムの翻訳などの機能が含まれています。</target>
        </trans-unit>
        <trans-unit id="59ec496acaf5eb6be42e237a92e3fd19c5631c91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/hendrikschneider/jekyll-analytics&quot;&gt;Analytics for Jekyll&lt;/a&gt; by Hendrik Schneider: An effortless way to add various trackers like Google Analytics, Matomo (formerly Piwik), mPulse, etc. to your site.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/hendrikschneider/jekyll-analytics&quot;&gt;&lt;/a&gt;Hendrik SchneiderによるJekyllの分析：Google Analytics、Matomo（以前のPiwik）、mPulseなどのさまざまなトラッカーをサイトに簡単に追加できます。</target>
        </trans-unit>
        <trans-unit id="61321e162a9c2f1c4645e07ffcd3c5b0eaf99896" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ibrado/jekyll-paginate-content&quot;&gt;Jekyll::Paginate::Content&lt;/a&gt;: Content paginator in the style of jekyll-paginator-v2 that splits pages, posts, and collection entries into several pages. Specify a separator or use HTML &amp;lt;h1&amp;gt; etc. headers. Automatic splitting, single-page view, pager/trail, self-adjusting links, multipage TOC, SEO support.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ibrado/jekyll-paginate-content&quot;&gt;Jekyll :: Paginate :: Content&lt;/a&gt;：ページ、投稿、コレクションエントリを複数のページに分割するjekyll-paginator-v2スタイルのコンテンツページネーター。セパレータを指定するか、HTML &amp;lt;h1&amp;gt;などのヘッダーを使用します。自動分割、単一ページビュー、ページャー/トレイル、自動調整リンク、マルチページTOC、SEOサポート。</target>
        </trans-unit>
        <trans-unit id="6f7469f4de32a3533593f1764c96bd0b2670ce41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ibrado/jekyll-stickyposts&quot;&gt;Stickyposts&lt;/a&gt;: Moves or copies (pins) posts marked &lt;code&gt;sticky: true&lt;/code&gt; to the top of the list. Perfect for keeping important announcements on the home page, or giving collections a descriptive entry. Paginator friendly.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ibrado/jekyll-stickyposts&quot;&gt;Stickyposts&lt;/a&gt;： &lt;code&gt;sticky: true&lt;/code&gt; とマークされた投稿をリストの一番上に移動またはコピー（ピン）します。ホームページに重要なお知らせを保存したり、コレクションに説明的なエントリを提供したりするのに最適です。ページネーションに優しい。</target>
        </trans-unit>
        <trans-unit id="b0b59a7366954ce8b58b14d8fc92b543513b27e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ibrado/jekyll-tweetsert&quot;&gt;Tweetsert&lt;/a&gt;: Imports tweets (Twitter statuses) as new posts. Features multiple timeline support, hashtag import, filtering, automatic category and/or tags, optional retweets and replies.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ibrado/jekyll-tweetsert&quot;&gt;Tweetert&lt;/a&gt;：ツイート（Twitterステータス）を新しい投稿としてインポートします。複数のタイムラインのサポート、ハッシュタグのインポート、フィルタリング、自動カテゴリおよび/またはタグ、オプションのリツイートと返信を備えています。</target>
        </trans-unit>
        <trans-unit id="40158d5b240377ca7a772e2bd2e7f48c694a7c8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/indirect/jekyll-postfiles&quot;&gt;jekyll-postfiles&lt;/a&gt;: Add &lt;code&gt;_postfiles&lt;/code&gt; directory and &lt;code&gt;{{ postfile }}&lt;/code&gt; tag so the files a post refers to will always be right there inside your repo.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/indirect/jekyll-postfiles&quot;&gt;jekyll-postfiles&lt;/a&gt;： &lt;code&gt;_postfiles&lt;/code&gt; ディレクトリと &lt;code&gt;{{ postfile }}&lt;/code&gt; タグを追加して、投稿が参照するファイルが常にリポジトリ内にあるようにします。</target>
        </trans-unit>
        <trans-unit id="1020c525de23429fab46618f2e6a6a4b7e85e8c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/inukshuk/jekyll-scholar&quot;&gt;Jekyll-scholar&lt;/a&gt;: Jekyll extensions for the blogging scholar.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/inukshuk/jekyll-scholar&quot;&gt;Jekyll-scholar&lt;/a&gt;：ブログの学者のためのJekyll拡張機能。</target>
        </trans-unit>
        <trans-unit id="e4a35e9415ea010fa9f588f5b116cf08a8c685ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ivantsepp/jekyll-autolink_email&quot;&gt;Jekyll::AutolinkEmail by Ivan Tse&lt;/a&gt;: Autolink your emails.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ivantsepp/jekyll-autolink_email&quot;&gt;Jekyll :: AutolinkEmail by Ivan Tse&lt;/a&gt;：メールを自動リンクします。</target>
        </trans-unit>
        <trans-unit id="1a65994516cc019d2aa43eccf98b7a6669df8e30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ivantsepp/jekyll-git_metadata&quot;&gt;Jekyll::GitMetadata by Ivan Tse&lt;/a&gt;: Expose Git metadata for your templates.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ivantsepp/jekyll-git_metadata&quot;&gt;Jekyll :: GitMetadata by Ivan Tse&lt;/a&gt;：テンプレートのGitメタデータを公開します。</target>
        </trans-unit>
        <trans-unit id="77756e271b7a91541aeac6da71c9c82d4978fd8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/jasonbellamy/jekyll-mermaid&quot;&gt;jekyll-mermaid&lt;/a&gt;: Simplify the creation of mermaid diagrams and flowcharts in your posts and pages.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/jasonbellamy/jekyll-mermaid&quot;&gt;jekyll-mermaid&lt;/a&gt;：投稿とページでの人魚図とフローチャートの作成を簡素化します。</target>
        </trans-unit>
        <trans-unit id="e46f91e1ec0dd36c676afc1a3774d7e75451e44a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/jeffkole/jekyll-page-collections&quot;&gt;Page Collections by Jeff Kolesky&lt;/a&gt;: Generates collections of pages with functionality that resembles posts.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/jeffkole/jekyll-page-collections&quot;&gt;Jeff Koleskyによるページコレクション&lt;/a&gt;：投稿に似た機能を持つページのコレクションを生成します。</target>
        </trans-unit>
        <trans-unit id="c050fedef879843f4d4da543ff977c4a70bae9ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/jekyll/jekyll-gist&quot;&gt;Jekyll-gist&lt;/a&gt;: Use the &lt;code&gt;gist&lt;/code&gt; tag to easily embed a GitHub Gist onto your site. This works with public or secret gists.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/jekyll/jekyll-gist&quot;&gt;Jekyll-gist&lt;/a&gt;： &lt;code&gt;gist&lt;/code&gt; タグを使用して、GitHub Gistをサイトに簡単に埋め込みます。これは、公開または秘密の要旨で機能します。</target>
        </trans-unit>
        <trans-unit id="d9c43cec71897f6652981350a357b566b622f451" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/jekyll/jekyll-textile-converter&quot;&gt;Textile converter&lt;/a&gt;: Convert &lt;code&gt;.textile&lt;/code&gt; files into HTML. Also includes the &lt;code&gt;textilize&lt;/code&gt; Liquid filter.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/jekyll/jekyll-textile-converter&quot;&gt;繊維コンバーター&lt;/a&gt;： &lt;code&gt;.textile&lt;/code&gt; ファイルをHTMLに変換します。 &lt;code&gt;textilize&lt;/code&gt; 液体フィルターも含まれています。</target>
        </trans-unit>
        <trans-unit id="d504949893a0af17a480ecc65889be5ae26917a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;minima&lt;/a&gt; is the current default theme, and &lt;code&gt;bundle show minima&lt;/code&gt; will show you where minima theme's files are stored on your computer.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;minima&lt;/a&gt;は現在のデフォルトのテーマです。 &lt;code&gt;bundle show minima&lt;/code&gt; は、minimaテーマのファイルがコンピューターのどこに保存されているかを示します。</target>
        </trans-unit>
        <trans-unit id="558ed369b1bdd5f7dd379f2589309fa25c65a4ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/jekylltools/jekyll-ideal-image-slider&quot;&gt;Jekyll Ideal Image Slider&lt;/a&gt;: Liquid tag plugin to create image sliders using &lt;a href=&quot;https://github.com/gilbitron/Ideal-Image-Slider&quot;&gt;Ideal Image Slider&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/jekylltools/jekyll-ideal-image-slider&quot;&gt;ジキル理想像スライダー&lt;/a&gt;：リキッドタグプラグインは、使用した画像のスライダーを作成するには&lt;a href=&quot;https://github.com/gilbitron/Ideal-Image-Slider&quot;&gt;理想像スライダーを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="588648398fa4c4f98745cb9a92c17718f67d758d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/juusaw/amp-jekyll&quot;&gt;AMP-Jekyll by Juuso Mikkonen&lt;/a&gt;: Generate &lt;a href=&quot;https://www.ampproject.org&quot;&gt;Accelerated Mobile Pages&lt;/a&gt; of Jekyll posts.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/juusaw/amp-jekyll&quot;&gt;Juuso MikkonenによるAMP-Jekyll&lt;/a&gt;：Jekyll投稿の&lt;a href=&quot;https://www.ampproject.org&quot;&gt;高速モバイルページ&lt;/a&gt;を生成します。</target>
        </trans-unit>
        <trans-unit id="7b8d04c8215c31cdb12d6f85386faea603c00fe7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/k-funk/jekyll-if-file-exists&quot;&gt;Jekyll If File Exists&lt;/a&gt;: A Jekyll Plugin that checks if a file exists with an if/else block.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/k-funk/jekyll-if-file-exists&quot;&gt;Jekyll If File Exists&lt;/a&gt;：ファイルが存在するかどうかをif / elseブロックでチェックするJekyllプラグイン。</target>
        </trans-unit>
        <trans-unit id="af162a1818d47098e5fa6a4aab8e834d5163214a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/kacperduras/disqus-for-jekyll&quot;&gt;disqus-for-jekyll&lt;/a&gt;: A Jekyll plugin to view the comments powered by Disqus.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kacperduras/disqus-for-jekyll&quot;&gt;disqus-for-jekyll&lt;/a&gt;：Disqusを使用してコメントを表示するJekyllプラグイン。</target>
        </trans-unit>
        <trans-unit id="45196224b02f2cf1f7649252d9805f1b6366b78a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/kacperduras/jekyll-html&quot;&gt;jekyll-html&lt;/a&gt;: A Jekyll plugin to use HTML tags in Jekyll pages, posts and collections.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kacperduras/jekyll-html&quot;&gt;jekyll-html&lt;/a&gt;：Jekyllページ、投稿、コレクションでHTMLタグを使用するためのJekyllプラグイン。</target>
        </trans-unit>
        <trans-unit id="a19dfd938983bb330ddfb693a0980fce997ffa2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/kinnetica/jekyll-plugins&quot;&gt;Sitemap.xml Generator by Michael Levin&lt;/a&gt;: Generates a sitemap.xml file by traversing all of the available posts and pages.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kinnetica/jekyll-plugins&quot;&gt;Michael LevinによるSitemap.xmlジェネレーター&lt;/a&gt;：使用可能なすべての投稿とページをたどって、sitemap.xmlファイルを生成します。</target>
        </trans-unit>
        <trans-unit id="2d5e33323daffee58b094e848291f954ffcb991b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/kitsched/japr&quot;&gt;JAPR&lt;/a&gt;: Jekyll Asset Pipeline Reborn - Powerful asset pipeline for Jekyll that collects, converts and compresses JavaScript and CSS assets.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kitsched/japr&quot;&gt;JAPR&lt;/a&gt;：Jekyll Asset Pipeline Reborn-JavaScriptおよびCSSアセットを収集、変換、圧縮するJekyllの強力なアセットパイプライン。</target>
        </trans-unit>
        <trans-unit id="59d788374c502de8a9256abfe7c36a85e922da8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/kzykbys/JekyllPlugins&quot;&gt;Deprecated articles keeper&lt;/a&gt; by &lt;a href=&quot;http://blog.kazuya.co/&quot;&gt;Kazuya Kobayashi&lt;/a&gt;: A simple Jekyll filter which monitor how old an article is.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kzykbys/JekyllPlugins&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://blog.kazuya.co/&quot;&gt;小林和也氏&lt;/a&gt;による非推奨の記事キーパー：記事の古さを監視する単純なJekyllフィルター。</target>
        </trans-unit>
        <trans-unit id="799118c2cdac2ea4ad61554d0d082d2fc4cfd6bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/lavas-project/jekyll-pwa&quot;&gt;jekyll-pwa-plugin&lt;/a&gt;: A plugin provides PWA support for Jekyll. It generates a service worker in Jekyll build process and makes precache and runtime cache available in the runtime with Google Workbox.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/lavas-project/jekyll-pwa&quot;&gt;jekyll-pwa-plugin&lt;/a&gt;：プラグインはJekyllのPWAサポートを提供します。JekyllビルドプロセスでService Workerを生成し、Google Workboxを使用してランタイムでプリキャッシュとランタイムキャッシュを利用できるようにします。</target>
        </trans-unit>
        <trans-unit id="e1e0ccf2144f89174b6f4c4dcbcea1953043748e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/lawmurray/indii-jekyll-flickr&quot;&gt;Jekyll Flickr Plugin&lt;/a&gt; by &lt;a href=&quot;http://www.indii.org&quot;&gt;Lawrence Murray&lt;/a&gt;: Embeds Flickr photosets (albums) as a gallery of thumbnails, with lightbox links to larger images.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/lawmurray/indii-jekyll-flickr&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.indii.org&quot;&gt;Lawrence Murrayに&lt;/a&gt;よるJekyll Flickrプラグイン：Flickrフォトセット（アルバム）をサムネイルのギャラリーとして埋め込み、ライトボックスで大きな画像にリンクします。</target>
        </trans-unit>
        <trans-unit id="c2ac9220aed165a25afae656542c578fa501d07b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/lawmurray/indii-jekyll-flickr&quot;&gt;Jekyll Flickr Plugin&lt;/a&gt; by &lt;a href=&quot;http://www.indii.org&quot;&gt;Lawrence Murray&lt;/a&gt;: Generates posts for photos uploaded to a Flickr photostream.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/lawmurray/indii-jekyll-flickr&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.indii.org&quot;&gt;Lawrence Murrayに&lt;/a&gt;よるJekyll Flickrプラグイン：Flickrフォトストリームにアップロードされた写真の投稿を生成します。</target>
        </trans-unit>
        <trans-unit id="35b55c80daae8cd4b82a63a6a9a62e4ca98d2d04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/lkorth/jekyll-500px-embed&quot;&gt;Jekyll 500px Embed&lt;/a&gt; by Luke Korth. A Liquid tag plugin that embeds &lt;a href=&quot;https://500px.com/&quot;&gt;500px&lt;/a&gt; photos.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/lkorth/jekyll-500px-embed&quot;&gt;Jekyll 500px&lt;/a&gt; Luke Korthによる埋め込み。&lt;a href=&quot;https://500px.com/&quot;&gt;500px&lt;/a&gt;写真を埋め込むLiquidタグプラグイン。</target>
        </trans-unit>
        <trans-unit id="af4c54af22dd18c9719bb17d30a6011d30717431" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/lmullen/jekyll_figure&quot;&gt;jekyll_figure&lt;/a&gt;: Generate figures and captions with links to the figure in a variety of formats</source>
          <target state="translated">&lt;a href=&quot;https://github.com/lmullen/jekyll_figure&quot;&gt;jekyll_figure&lt;/a&gt;：さまざまな形式の図へのリンクを含む図とキャプションを生成します</target>
        </trans-unit>
        <trans-unit id="607c9d70b4850dadc1cb85d2f9627e65cb3553b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/markets/jekyll-timeago&quot;&gt;Jekyll-timeago&lt;/a&gt;: Converts a time value to the time ago in words.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/markets/jekyll-timeago&quot;&gt;Jekyll-timeago&lt;/a&gt;：時間値を単語での前の時間に変換します。</target>
        </trans-unit>
        <trans-unit id="3d918d3e2e37d602567718b396355e5a4928c6d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/matallo/jekyll-thumbnail-filter&quot;&gt;Jekyll Thumbnail Filter&lt;/a&gt;: Related posts thumbnail filter.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/matallo/jekyll-thumbnail-filter&quot;&gt;Jekyllサムネイルフィルター&lt;/a&gt;：関連する投稿のサムネイルフィルター。</target>
        </trans-unit>
        <trans-unit id="142cafc6ae470e5df71ae28dfcb9b0c167b64285" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mattg/jekyll-download-tag&quot;&gt;Jekyll Download Tag&lt;/a&gt;: A Liquid tag that acts like &lt;code&gt;include&lt;/code&gt;, but for external resources.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mattg/jekyll-download-tag&quot;&gt;Jekyllダウンロードタグ&lt;/a&gt;： &lt;code&gt;include&lt;/code&gt; のように機能するが外部リソース用のLiquidタグ。</target>
        </trans-unit>
        <trans-unit id="ceb1ef9a556eee46d2f988c4d6c0c2173a4f8b12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mattg/jekyll-uglify-filter&quot;&gt;Jekyll Uglify Filter&lt;/a&gt;: A Liquid filter that runs your JavaScript through UglifyJS.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mattg/jekyll-uglify-filter&quot;&gt;Jekyll Uglify Filter&lt;/a&gt;：UglifyJSを介してJavaScriptを実行する液体フィルター。</target>
        </trans-unit>
        <trans-unit id="9e444d2adf56bb6d97f8b1c383cd9ae1a62315a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/matze/jekyll-ditaa&quot;&gt;Ditaa Tag&lt;/a&gt; by &lt;a href=&quot;https://github.com/matze&quot;&gt;matze&lt;/a&gt;: Renders ASCII diagram art into PNG images and inserts a figure tag.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/matze/jekyll-ditaa&quot;&gt;Ditaaタグ&lt;/a&gt;によって&lt;a href=&quot;https://github.com/matze&quot;&gt;matzeは&lt;/a&gt;：PNG画像にASCIIダイアグラムアートをレンダリングし、フィギュアのタグを挿入します。</target>
        </trans-unit>
        <trans-unit id="fe7393d1c7fb4058319933150b12a5ac742bdc6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mehdisadeghi/jekyll-jalali&quot;&gt;Jekyll-jalali&lt;/a&gt; by &lt;a href=&quot;http://mehdix.ir&quot;&gt;Mehdi Sadeghi&lt;/a&gt;: A simple Gregorian to Jalali date converter filter.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mehdisadeghi/jekyll-jalali&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://mehdix.ir&quot;&gt;Mehdi Sadeghiに&lt;/a&gt;よるJekyll-jalali：シンプルなグレゴリオ暦からジャラリへの日付変換フィルター。</target>
        </trans-unit>
        <trans-unit id="2e942b3f50a3b2438e8ec12180d4cc39f2ed46cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/merlos/jekyll-auto-image&quot;&gt;Jekyll Auto Image by Merlos&lt;/a&gt;: Gets the first image of a post. Useful to list your posts with images or to add &lt;a href=&quot;https://dev.twitter.com/cards/overview&quot;&gt;twitter cards&lt;/a&gt; to your site.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/merlos/jekyll-auto-image&quot;&gt;MerlosによるJekyll Auto Image&lt;/a&gt;：投稿の最初の画像を取得します。画像付きの投稿をリストしたり、&lt;a href=&quot;https://dev.twitter.com/cards/overview&quot;&gt;Twitterカード&lt;/a&gt;をサイトに追加したりするのに便利です。</target>
        </trans-unit>
        <trans-unit id="fef743b0f7a23d2df465211a031af709ccaa0ae1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/midnightSuyama/jekyll-paginate-category&quot;&gt;Jekyll::Paginate::Category&lt;/a&gt;: Pagination Generator for Jekyll Category.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/midnightSuyama/jekyll-paginate-category&quot;&gt;Jekyll :: Paginate :: Category&lt;/a&gt;：Jekyllカテゴリのページ分割ジェネレーター。</target>
        </trans-unit>
        <trans-unit id="51418a2bfbaabc45836ca6ed95e42a29d41fc83a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mnuessler/jekyll-asciinema&quot;&gt;jekyll-asciinema&lt;/a&gt;: A tag for embedding asciicasts recorded with &lt;a href=&quot;https://asciinema.org&quot;&gt;asciinema&lt;/a&gt; in your Jekyll pages.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mnuessler/jekyll-asciinema&quot;&gt;jekyll-asciinema&lt;/a&gt;：asciinemaで記録された&lt;a href=&quot;https://asciinema.org&quot;&gt;asciicast&lt;/a&gt;をJekyllページに埋め込むためのタグ。</target>
        </trans-unit>
        <trans-unit id="d12d8cb3e3ad1f4830f93e9cabec82398aa81fd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mpchadwick/jekyll-migrate-permalink&quot;&gt;jekyll-migrate-permalink&lt;/a&gt;: Adds a &lt;code&gt;migrate-permalink&lt;/code&gt; sub-command to help deal with side effects of changing your permalink.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mpchadwick/jekyll-migrate-permalink&quot;&gt;jekyll-migrate-permalink&lt;/a&gt;： &lt;code&gt;migrate-permalink&lt;/code&gt; の変更による副作用への対処に役立つmigrate-permalinkサブコマンドを追加します。</target>
        </trans-unit>
        <trans-unit id="ed9e2acee22175d8a3e157b4df7668c138ee2325" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mpchadwick/jekyll-pre-commit&quot;&gt;jekyll-pre-commit&lt;/a&gt;: A framework for running checks against your posts using a git pre-commit hook before you publish them.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mpchadwick/jekyll-pre-commit&quot;&gt;jekyll-pre-commit&lt;/a&gt;：投稿する前にgit pre-commitフックを使用して投稿に対してチェックを実行するためのフレームワーク。</target>
        </trans-unit>
        <trans-unit id="9c281c983a801662de294711e3e300a3cb5c13cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mscharley/jekyll-compass&quot;&gt;Compass integration for Jekyll&lt;/a&gt;: Easily integrate Compass and Sass with your Jekyll website.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mscharley/jekyll-compass&quot;&gt;Jekyllのコンパス統合&lt;/a&gt;：CompassとSassをJekyll Webサイトに簡単に統合します。</target>
        </trans-unit>
        <trans-unit id="7e3fddb2374647f0707a14a3eb705888236dbe40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/muratayusuke/jekyll-numbered-headings&quot;&gt;jekyll-numbered-headings&lt;/a&gt;: Adds ordered number to headings.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/muratayusuke/jekyll-numbered-headings&quot;&gt;jekyll-numbered-headings&lt;/a&gt;：順序付けられた番号を見出しに追加します。</target>
        </trans-unit>
        <trans-unit id="5460313fbf2700d0d239fef075a6936269c19d6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mvdbos/kramdown-with-pygments&quot;&gt;Customized Kramdown Converter&lt;/a&gt;: Enable Pygments syntax highlighting for Kramdown-parsed fenced code blocks.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mvdbos/kramdown-with-pygments&quot;&gt;カスタマイズされたKramdownコンバーター&lt;/a&gt;：Kramdownで解析されたフェンス付きコードブロックのPygments構文の強調表示を有効にします。</target>
        </trans-unit>
        <trans-unit id="6a8e48bf6362a4221f01228b724f21e146f454a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/myles/jekyll-typogrify&quot;&gt;jekyll-typogrify&lt;/a&gt;: A Jekyll plugin that brings the functions of &lt;a href=&quot;http://avdgaag.github.io/typogruby/&quot;&gt;typogruby&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/myles/jekyll-typogrify&quot;&gt;ジキル-typogrify&lt;/a&gt;：の機能をもたらしAジキルプラグイン&lt;a href=&quot;http://avdgaag.github.io/typogruby/&quot;&gt;typogrubyを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0b28030a0195d622501f7d32e78fb0449dff20d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/nquinlan/jekyll-pageless-redirects&quot;&gt;Pageless Redirect Generator by Nick Quinlan&lt;/a&gt;: Generates redirects based on files in the Jekyll root, with support for htaccess style redirects.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/nquinlan/jekyll-pageless-redirects&quot;&gt;Nick Quinlanによるページレスリダイレクトジェネレーター&lt;/a&gt;：htaccessスタイルのリダイレクトをサポートして、Jekyllルートのファイルに基づいてリダイレクトを生成します。</target>
        </trans-unit>
        <trans-unit id="0b3a6a43af81ec1234c1ce8d9815f959c4727d26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/okeeblow/jekyll-beastiepress&quot;&gt;Jekyll-beastiepress&lt;/a&gt;: FreeBSD utility tags for Jekyll sites.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/okeeblow/jekyll-beastiepress&quot;&gt;Jekyll-beastiepress&lt;/a&gt;：Jekyllサイト用のFreeBSDユーティリティタグ。</target>
        </trans-unit>
        <trans-unit id="f42172f278bfdc164361a74ae04a606f2fbd282c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/olov/jekyll-references&quot;&gt;Markdown References by Olov Lassus&lt;/a&gt;: Keep all your markdown reference-style link definitions in one _references.md file.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/olov/jekyll-references&quot;&gt;Olov Lassusによるマークダウン参照&lt;/a&gt;：すべてのマークダウン参照スタイルのリンク定義を1つの_references.mdファイルに保存します。</target>
        </trans-unit>
        <trans-unit id="653f49d222d89c99c785984b01af9f28a35db78e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/pablooliveira/bibjekyll&quot;&gt;Bibjekyll&lt;/a&gt;: Render BibTeX-formatted bibliographies/citations included in posts and pages using bibtex2html.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/pablooliveira/bibjekyll&quot;&gt;Bibjekyll&lt;/a&gt;：投稿やページに含まれるBibTeX形式の参考文献/引用をbibtex2htmlを使用してレンダリングします。</target>
        </trans-unit>
        <trans-unit id="d3381f8f45dab1f308ee44ad3af2e3a72981493e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/parkr/vim-jekyll&quot;&gt;vim-jekyll&lt;/a&gt;: A vim plugin to generate new posts and run &lt;code&gt;jekyll build&lt;/code&gt; all without leaving vim.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/parkr/vim-jekyll&quot;&gt;vim-jekyll&lt;/a&gt;：新しい投稿を生成し、vimを終了せずに &lt;code&gt;jekyll build&lt;/code&gt; すべて実行するvimプラグイン。</target>
        </trans-unit>
        <trans-unit id="bfc33069f9d918fcae911e28072b844d1174d103" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/pathawks/jekyll-commonmark&quot;&gt;jekyll-commonmark&lt;/a&gt;: Markdown converter that uses &lt;a href=&quot;https://github.com/jgm/CommonMark&quot;&gt;libcmark&lt;/a&gt;, the reference parser for CommonMark.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/pathawks/jekyll-commonmark&quot;&gt;jekyll-commonmark&lt;/a&gt;：&lt;a href=&quot;https://github.com/jgm/CommonMark&quot;&gt;CommonMark&lt;/a&gt;の参照パーサーであるlibcmark を使用するMarkdownコンバーター。</target>
        </trans-unit>
        <trans-unit id="415c85ebb28af130063d89626579a14eabfa16b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/pathawks/liquid-md5&quot;&gt;liquid-md5&lt;/a&gt;: Returns an MD5 hash. Helpful for generating Gravatars in templates.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/pathawks/liquid-md5&quot;&gt;liquid-md5&lt;/a&gt;：MD5ハッシュを返します。テンプレートでグラバターを生成するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="fcf149435061311b8a0209620295f06c66e7d634" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/pattex/jekyll-tagging&quot;&gt;Jekyll-tagging&lt;/a&gt;: Jekyll plugin to automatically generate a tag cloud and tag pages.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/pattex/jekyll-tagging&quot;&gt;Jekyll-tagging&lt;/a&gt;：タグクラウドとタグページを自動的に生成するJekyllプラグイン。</target>
        </trans-unit>
        <trans-unit id="a4a5e18b2527a696cf55b658990d3fe1281196f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/paulrobertlloyd/jekyll-figure&quot;&gt;jekyll-figure&lt;/a&gt;: A liquid tag for Jekyll that generates &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; elements.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/paulrobertlloyd/jekyll-figure&quot;&gt;jekyll-figure&lt;/a&gt;： &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; 要素を生成するJekyllの液体タグ。</target>
        </trans-unit>
        <trans-unit id="50ff45cfcbb7805416ce82904cab72f50eaa7483" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/paulrobertlloyd/jekyll-roman&quot;&gt;jekyll-roman&lt;/a&gt;: A liquid filter for Jekyll that converts numbers into Roman numerals.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/paulrobertlloyd/jekyll-roman&quot;&gt;jekyll-roman&lt;/a&gt;：数字をローマ数字に変換するJekyllの液体フィルター。</target>
        </trans-unit>
        <trans-unit id="6f8ea18633a1f6d894aad47582d70bb5fb943195" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/recurser/jekyll-plugins&quot;&gt;Jekyll Plugins by Recursive Design&lt;/a&gt;: Plugins to generate Project pages from GitHub readmes, a Category page, and a Sitemap generator.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/recurser/jekyll-plugins&quot;&gt;再帰的な設計によるJekyllプラグイン&lt;/a&gt;：GitHub readme、カテゴリーページ、およびサイトマップジェネレーターからプロジェクトページを生成するプラグイン。</target>
        </trans-unit>
        <trans-unit id="103818a8c263007b17033be5f679caa1470085b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/redwallhp/JekyllGalleryTag&quot;&gt;JekyllGalleryTag&lt;/a&gt; by &lt;a href=&quot;https://github.com/redwallhp&quot;&gt;redwallhp&lt;/a&gt;: Generates thumbnails from a directory of images and displays them in a grid.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/redwallhp/JekyllGalleryTag&quot;&gt;JekyllGalleryTag&lt;/a&gt; by &lt;a href=&quot;https://github.com/redwallhp&quot;&gt;redwallhp&lt;/a&gt;：画像のディレクトリからサムネイルを生成し、グリッドに表示します。</target>
        </trans-unit>
        <trans-unit id="63a0d2b1096974d8f20b39f9f49cf585b360d0dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/rjoberon/bibsonomy-jekyll&quot;&gt;BibSonomy&lt;/a&gt;: Jekyll plugin to generate publication lists from &lt;a href=&quot;https://www.bibsonomy.org/&quot;&gt;BibSonomy&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/rjoberon/bibsonomy-jekyll&quot;&gt;BibSonomy&lt;/a&gt;：ジキルから出版リストを生成するプラグイン&lt;a href=&quot;https://www.bibsonomy.org/&quot;&gt;BibSonomy&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe5e8a7d569cd7e0008a2488a0f60aea3a12cc2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/rob-murray/jekyll-twitter-plugin&quot;&gt;Jekyll Twitter Plugin&lt;/a&gt;: A Liquid tag plugin that renders Tweets from Twitter API. Currently supports the &lt;a href=&quot;https://dev.twitter.com/rest/reference/get/statuses/oembed&quot;&gt;oEmbed&lt;/a&gt; API.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/rob-murray/jekyll-twitter-plugin&quot;&gt;Jekyll Twitter Plugin&lt;/a&gt;：Twitter APIからツイートをレンダリングするLiquidタグプラグイン。現在、&lt;a href=&quot;https://dev.twitter.com/rest/reference/get/statuses/oembed&quot;&gt;oEmbed&lt;/a&gt; APIをサポートしています。</target>
        </trans-unit>
        <trans-unit id="69884be6423cd9ae89cef39f113b44da6057e3eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/rob-murray/jekyll-version-plugin&quot;&gt;Jekyll Project Version Tag&lt;/a&gt;: A Liquid tag plugin that renders a version identifier for your Jekyll site sourced from the git repository containing your code.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/rob-murray/jekyll-version-plugin&quot;&gt;Jekyllプロジェクトバージョンタグ&lt;/a&gt;：コードを含むgitリポジトリから取得したJekyllサイトのバージョン識別子をレンダリングするLiquidタグプラグイン。</target>
        </trans-unit>
        <trans-unit id="2f7cdb144c4a9cb725c010c8e5b7b3a454730562" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/robb/jekyll-embedly-client&quot;&gt;Embed.ly client by Robert B&amp;ouml;hnke&lt;/a&gt;: Autogenerate embeds from URLs using oEmbed.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/robb/jekyll-embedly-client&quot;&gt;RobertB&amp;ouml;hnkeによるEmbed.lyクライアント&lt;/a&gt;：oEmbedを使用してURLから埋め込みを自動生成します。</target>
        </trans-unit>
        <trans-unit id="f1f6beb4be8cf2d119e465018ec354bb1bd48a7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/robcrocombe/jekyll-post&quot;&gt;Jekyll-Post&lt;/a&gt;: A CLI tool to easily draft, edit, and publish Jekyll posts.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/robcrocombe/jekyll-post&quot;&gt;Jekyll-Post&lt;/a&gt;：Jekyll投稿を簡単にドラフト、編集、公開するためのCLIツール。</target>
        </trans-unit>
        <trans-unit id="5e1c3b388b05cc77531a8c5ad3953106c1742f6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/robwierzbowski/generator-jekyllrb&quot;&gt;generator-jekyllrb&lt;/a&gt;: A generator that wraps Jekyll in &lt;a href=&quot;http://yeoman.io/&quot;&gt;Yeoman&lt;/a&gt;, a tool collection and workflow for building modern web apps.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/robwierzbowski/generator-jekyllrb&quot;&gt;generator-jekyllrb&lt;/a&gt;：Jekyllを&lt;a href=&quot;http://yeoman.io/&quot;&gt;Yeoman&lt;/a&gt;でラップするジェネレーター。最新のWebアプリを構築するためのツールコレクションとワークフローです。</target>
        </trans-unit>
        <trans-unit id="f18167bb50397a84980d8a3330910117f77b6c80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/robwierzbowski/jekyll-image-tag&quot;&gt;Jekyll Image Tag&lt;/a&gt;: Better images for Jekyll. Save image presets, generate resized images, and add classes, alt text, and other attributes.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/robwierzbowski/jekyll-image-tag&quot;&gt;Jekyll画像タグ&lt;/a&gt;：Jekyllの画像が改善されました。画像のプリセットを保存し、サイズ変更された画像を生成し、クラス、代替テキスト、およびその他の属性を追加します。</target>
        </trans-unit>
        <trans-unit id="dc515976da83ff320a367ddb96d858589e7d46c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/robwierzbowski/jekyll-picture-tag&quot;&gt;Jekyll Picture Tag&lt;/a&gt;: Easy responsive images for Jekyll. Based on the proposed &lt;a href=&quot;https://html.spec.whatwg.org/multipage/embedded-content.html#the-picture-element&quot;&gt;&lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt;&lt;/a&gt; element, polyfilled with Scott Jehl&amp;rsquo;s &lt;a href=&quot;https://github.com/scottjehl/picturefill&quot;&gt;Picturefill&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/robwierzbowski/jekyll-picture-tag&quot;&gt;Jekyll画像タグ&lt;/a&gt;：Jekyllの簡単に反応する画像。提案された&lt;a href=&quot;https://html.spec.whatwg.org/multipage/embedded-content.html#the-picture-element&quot;&gt; &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; &lt;/a&gt;要素に基づいて、Scott Jehlの&lt;a href=&quot;https://github.com/scottjehl/picturefill&quot;&gt;Picturefillでポリフィルされ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9ece318cbe6df05cc92b5db9f16e6e656cd245de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/rsim/blog.rayapps.com/blob/master/_plugins/pygments_cache_patch.rb&quot;&gt;Pygments Cache Path by Raimonds Simanovskis&lt;/a&gt;: Plugin to cache syntax-highlighted code from Pygments.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/rsim/blog.rayapps.com/blob/master/_plugins/pygments_cache_patch.rb&quot;&gt;Raimonds SimanovskisによるPygmentsキャッシュパス&lt;/a&gt;：Pygmentsから構文で強調表示されたコードをキャッシュするプラグイン。</target>
        </trans-unit>
        <trans-unit id="6697033bab910b0b478a4332c73fc9035da00ae9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/rustygeldmacher/jekyll-contentblocks&quot;&gt;Jekyll-contentblocks&lt;/a&gt;: Lets you use Rails-like content_for tags in your templates, for passing content from your posts up to your layouts.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/rustygeldmacher/jekyll-contentblocks&quot;&gt;Jekyll-contentblocks&lt;/a&gt;：投稿のコンテンツをレイアウトに渡すために、Railsのようなcontent_forタグをテンプレートで使用できます。</target>
        </trans-unit>
        <trans-unit id="340f9f627e3bfed94c049bdfb110e742e37e9231" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/samrayner/jekyll-asset-path-plugin&quot;&gt;Asset Path Tag&lt;/a&gt; by &lt;a href=&quot;http://www.samrayner.com/&quot;&gt;Sam Rayner&lt;/a&gt;: Allows organisation of assets into subdirectories by outputting a path for a given file relative to the current post or page.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/samrayner/jekyll-asset-path-plugin&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.samrayner.com/&quot;&gt;サムレイナー&lt;/a&gt;によるアセットパスタグ：現在の投稿またはページに関連する特定のファイルのパスを出力することにより、アセットをサブディレクトリに編成できます。</target>
        </trans-unit>
        <trans-unit id="71d144b9ea4e23a3a867053d7edcdf0b3ca730d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/scottwb/jekyll-tweet-tag&quot;&gt;Tweet Tag by Scott W. Bradley&lt;/a&gt;: Liquid tag for &lt;a href=&quot;https://dev.twitter.com/docs/embedded-tweets&quot;&gt;Embedded Tweets&lt;/a&gt; using Twitter&amp;rsquo;s shortcodes.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/scottwb/jekyll-tweet-tag&quot;&gt;Scott W. Bradleyによるツイートタグ&lt;/a&gt;：Twitterのショートコードを使用した&lt;a href=&quot;https://dev.twitter.com/docs/embedded-tweets&quot;&gt;埋め込みツイートの&lt;/a&gt;リキッドタグ。</target>
        </trans-unit>
        <trans-unit id="21283a5e79ac75f308977a448ab602704da45d47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sectore/jekyll-swfobject&quot;&gt;Jekyll-swfobject&lt;/a&gt;: Liquid plugin for embedding Adobe Flash files (.swf) using &lt;a href=&quot;https://github.com/swfobject/swfobject&quot;&gt;SWFObject&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sectore/jekyll-swfobject&quot;&gt;Jekyll-swfobject&lt;/a&gt;：&lt;a href=&quot;https://github.com/swfobject/swfobject&quot;&gt;SWFObject&lt;/a&gt;を使用してAdobe Flashファイル（.swf）を埋め込むための液体プラグイン。</target>
        </trans-unit>
        <trans-unit id="6f062bd5f8fb0d88fc0c737c2db478228c1c6b60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sheehamj13/jekyll-live-tiles&quot;&gt;Windows 8.1 Live Tile Generation by Matt Sheehan&lt;/a&gt;: Generates Internet Explorer 11 config.xml file and Tile Templates for pinning your site to Windows 8.1.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sheehamj13/jekyll-live-tiles&quot;&gt;Matt SheehanによるWindows 8.1ライブタイルの生成&lt;/a&gt;：サイトをWindows 8.1に固定するためのInternet Explorer 11 config.xmlファイルとタイルテンプレートを生成します。</target>
        </trans-unit>
        <trans-unit id="aa1e1dce3de63f1c918428971c45d474d40363b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sheehamj13/jekyll_ts&quot;&gt;Typescript Generator by Matt Sheehan&lt;/a&gt;: Generate Javascript on build from your Typescript.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sheehamj13/jekyll_ts&quot;&gt;Matt SheehanによるTypescript Generator&lt;/a&gt;：Typescriptからビルド時にJavascriptを生成します。</target>
        </trans-unit>
        <trans-unit id="65d8103cfe3d8761c5709661ffd738d705847bd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/shigeya/jekyll-category-archive-plugin&quot;&gt;Category archive generator by Shigeya Suzuki&lt;/a&gt;: Generator and template which renders category archive like MovableType style, based on Monthly archive generator.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/shigeya/jekyll-category-archive-plugin&quot;&gt;鈴木茂也によるカテゴリアーカイブジェネレーター&lt;/a&gt;：毎月のアーカイブジェネレーターに基づいて、MovableTypeスタイルのようなカテゴリアーカイブをレンダリングするジェネレーターとテンプレート。</target>
        </trans-unit>
        <trans-unit id="29d0d566e145c75648e0a13bb15c2e4b0ba7f7f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/shigeya/jekyll-monthly-archive-plugin&quot;&gt;Monthly archive generator by Shigeya Suzuki&lt;/a&gt;: Generator and template which renders monthly archive like MovableType style, based on the work by Ilkka Laukkanen and others above.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/shigeya/jekyll-monthly-archive-plugin&quot;&gt;鈴木茂也による月間アーカイブジェネレーター&lt;/a&gt;：上記のイルッカ・ラウカネン他の作品に基づいて、MovableTypeスタイルのような月間アーカイブをレンダリングするジェネレーターとテンプレート。</target>
        </trans-unit>
        <trans-unit id="98f1311023a9e90f0ae6ec430d7181f59afcb538" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/slim-template/jekyll-slim&quot;&gt;Slim plugin&lt;/a&gt;: Slim converter and includes for Jekyll with support for Liquid tags.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/slim-template/jekyll-slim&quot;&gt;スリムプラグイン&lt;/a&gt;：スリムコンバーター。LiquidタグをサポートするJekyll用に含まれています。</target>
        </trans-unit>
        <trans-unit id="6e7575d0d8eaae373d865bfbae9dbb34b38d22c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/snaptortoise/jekyll-pinboard-plugin&quot;&gt;jekyll-pinboard&lt;/a&gt;: Access your Pinboard bookmarks within your Jekyll theme.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/snaptortoise/jekyll-pinboard-plugin&quot;&gt;jekyll-pinboard&lt;/a&gt;：Jekyllテーマ内のピンボードブックマークにアクセスします。</target>
        </trans-unit>
        <trans-unit id="a7cc6aef4f5b1a0d1de011ad7e20ba2c2821bb84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sondr3/generator-jekyllized&quot;&gt;generator-jekyllized&lt;/a&gt;: A Yeoman generator for rapidly developing sites with Gulp. Live reload your site, automatically minify and optimize your assets and much more.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sondr3/generator-jekyllized&quot;&gt;generator-jekyllized&lt;/a&gt;：Gulpを使用してサイトを迅速に開発するためのヨーマンジェネレーター。サイトをライブでリロードし、アセットなどを自動的に縮小および最適化します。</target>
        </trans-unit>
        <trans-unit id="6ea96b46ee94745466b585fedc22df7699e0ce15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sparanoid/match_regex&quot;&gt;match_regex&lt;/a&gt;: A Liquid filter to perform regex match.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sparanoid/match_regex&quot;&gt;match_regex&lt;/a&gt;：正規表現一致を実行する液体フィルター。</target>
        </trans-unit>
        <trans-unit id="f1ecddd2a262791ac2719a6ef6f22204d62d3a0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sparanoid/replace_regex&quot;&gt;replace_regex&lt;/a&gt;: A Liquid filter to perform regex replace.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sparanoid/replace_regex&quot;&gt;replace_regex&lt;/a&gt;：正規表現の置換を実行する液体フィルター。</target>
        </trans-unit>
        <trans-unit id="45974b30ba87547068acbe71116e0adf197da4b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/static-publisher/static-publisher&quot;&gt;Static Publisher&lt;/a&gt; is another automated deployment option with a server listening for webhook posts, though it&amp;rsquo;s not tied to GitHub specifically. It has a one-click deploy to Heroku, it can watch multiple projects from one server, it has an easy to user admin interface and can publish to either S3 or to a git repository (e.g. gh-pages).</source>
          <target state="translated">&lt;a href=&quot;https://github.com/static-publisher/static-publisher&quot;&gt;静的パブリッシャー&lt;/a&gt;は、サーバーがWebhookの投稿をリッスンする別の自動デプロイメントオプションですが、特にGitHubに関連付けられていません。Herokuにワンクリックでデプロイでき、1つのサーバーから複数のプロジェクトを監視でき、ユーザーインターフェイスが簡単で、S3またはgitリポジトリ（gh-pagesなど）に公開できます。</target>
        </trans-unit>
        <trans-unit id="51e127c492441e669febf593c5d1bfc44b3f397b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/takuti/jekyll-lazy-tweet-embedding&quot;&gt;Lazy Tweet Embedding&lt;/a&gt;: Automatically convert tweet urls into twitter cards.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/takuti/jekyll-lazy-tweet-embedding&quot;&gt;怠惰なツイートの埋め込み&lt;/a&gt;：ツイートのURLを自動的にTwitterカードに変換します。</target>
        </trans-unit>
        <trans-unit id="240300fe830a6290f03c562910dc5ee398074680" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/tkareine/jekyll-minibundle&quot;&gt;Jekyll-minibundle&lt;/a&gt;: Asset bundling and cache busting using external minification tool of your choice. No gem dependencies.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tkareine/jekyll-minibundle&quot;&gt;Jekyll-minibundle&lt;/a&gt;：選択した外部縮小ツールを使用したアセットのバンドルとキャッシュの無効化。宝石の依存関係はありません。</target>
        </trans-unit>
        <trans-unit id="5bbf69dcf7798ad80030cd487377669ee701bad3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/tmthrgd/ditaa-ditaa&quot;&gt;ditaa-ditaa&lt;/a&gt; by Tom Thorogood: a drastic revision of jekyll-ditaa that renders diagrams drawn using ASCII art into PNG images.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tmthrgd/ditaa-ditaa&quot;&gt;&lt;/a&gt;Tom Taorogoodによるditaa-ditaa：ASCIIアートを使用して描画された図をPNG画像にレンダリングするjekyll-ditaaの大幅な改訂。</target>
        </trans-unit>
        <trans-unit id="d03a3d2892739989cc9c526ec3960b20f6c65dab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/tmthrgd/jekyll-plugins&quot;&gt;mathml.rb&lt;/a&gt; by Tom Thorogood: A plugin to convert TeX mathematics into MathML for display.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tmthrgd/jekyll-plugins&quot;&gt;&lt;/a&gt;Tom Thorogoodによるmathml.rb：TeX数学を表示用にMathMLに変換するプラグイン。</target>
        </trans-unit>
        <trans-unit id="f8654415dc7eb338e37130ca3c5e247a454ce54a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/tnhu/jekyll-include-absolute-plugin&quot;&gt;jekyll-include-absolute-plugin&lt;/a&gt; by &lt;a href=&quot;https://github.com/tnhu&quot;&gt;Tan Nhu&lt;/a&gt;: A Jekyll plugin to include a file from its path relative to Jekyll&amp;rsquo;s source folder.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tnhu/jekyll-include-absolute-plugin&quot;&gt;jekyll-include-absolute-plugin&lt;/a&gt; by &lt;a href=&quot;https://github.com/tnhu&quot;&gt;Tan Nhu&lt;/a&gt;：Jekyllのソースフォルダーからの相対パスからファイルを含めるJekyllプラグイン。</target>
        </trans-unit>
        <trans-unit id="abcc9a9df4bedfd91eafcd7f492b232a28291226" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/toshimaru/jekyll-tagging-related_posts&quot;&gt;jekyll-tagging-related_posts&lt;/a&gt;: Jekyll related_posts function based on tags (works on Jekyll3).</source>
          <target state="translated">&lt;a href=&quot;https://github.com/toshimaru/jekyll-tagging-related_posts&quot;&gt;jekyll-tagging-related_posts&lt;/a&gt;：タグに基づくJekyll related_posts関数（Jekyll3で動作）。</target>
        </trans-unit>
        <trans-unit id="fdce13f7b3c3d7cd3189a3b86dab44bf4be346e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/toshimaru/jekyll-toc&quot;&gt;jekyll-toc&lt;/a&gt;: A liquid filter plugin for Jekyll which generates a table of contents.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/toshimaru/jekyll-toc&quot;&gt;jekyll-toc&lt;/a&gt;：目次を生成するJekyllの液体フィルタープラグイン。</target>
        </trans-unit>
        <trans-unit id="021fdc297256415e2a35f90baa9c47b12ebcc3d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/tsmango/jekyll_alias_generator&quot;&gt;AliasGenerator by Thomas Mango&lt;/a&gt;: Generates redirect pages for posts when an alias is specified in the YAML Front Matter.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tsmango/jekyll_alias_generator&quot;&gt;Thomas MangoによるAliasGenerator&lt;/a&gt;：YAMLフロントマターでエイリアスが指定されている場合、投稿のリダイレクトページを生成します。</target>
        </trans-unit>
        <trans-unit id="4a7f9e83dd279fe9b6ebea66650d4eda731c8247" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/tsmango/jekyll_flickr_set_tag&quot;&gt;FlickrSetTag by Thomas Mango&lt;/a&gt;: Generates image galleries from Flickr sets.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tsmango/jekyll_flickr_set_tag&quot;&gt;Thomas MangoによるFlickrSetTag&lt;/a&gt;：Flickrセットから画像ギャラリーを生成します。</target>
        </trans-unit>
        <trans-unit id="03f19784d89aec76059e8f1145971783ca623ee4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vwochnik/jekyll-autoprefixer&quot;&gt;Jekyll Autoprefixer&lt;/a&gt;: Autoprefixer integration for Jekyll</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vwochnik/jekyll-autoprefixer&quot;&gt;Jekyll Autoprefixer&lt;/a&gt;：JekyllのAutoprefixer統合</target>
        </trans-unit>
        <trans-unit id="be8810a6eefeee6c5ad5f20b75c845e701d7bd7e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vwochnik/jekyll-deploy&quot;&gt;Jekyll Deploy&lt;/a&gt;: Adds a &lt;code&gt;deploy&lt;/code&gt; sub-command to Jekyll.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vwochnik/jekyll-deploy&quot;&gt;Jekyll Deploy&lt;/a&gt;：Jekyllに &lt;code&gt;deploy&lt;/code&gt; サブコマンドを追加します。</target>
        </trans-unit>
        <trans-unit id="f5f5e2887b17cb8c615cd930d6c27516ad2dbeb9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vwochnik/jekyll-email-protect&quot;&gt;Jekyll Email Protect&lt;/a&gt;: Email protection liquid filter for Jekyll</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vwochnik/jekyll-email-protect&quot;&gt;Jekyll Email Protect&lt;/a&gt;：Jekyllのメール保護液体フィルター</target>
        </trans-unit>
        <trans-unit id="5e9dc3d1d6d9575be9ad200446520903e6e3cc01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vwochnik/jekyll-language-plugin&quot;&gt;Jekyll Language Plugin&lt;/a&gt;: Jekyll 3.0-compatible multi-language plugin for posts, pages and includes.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vwochnik/jekyll-language-plugin&quot;&gt;Jekyll言語プラグイン&lt;/a&gt;：投稿、ページ、インクルード用のJekyll 3.0互換の多言語プラグイン。</target>
        </trans-unit>
        <trans-unit id="c597248ffc927f406eddb7051d6a4ac7a8e64607" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/wdenton/jekyll-co2&quot;&gt;Jekyll CO₂&lt;/a&gt;: Generates HTML showing the monthly change in atmospheric CO₂ at the Mauna Loa observatory in Hawaii.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/wdenton/jekyll-co2&quot;&gt;JekyllCO₂&lt;/a&gt;：ハワイのマウナロア天文台での大気CO₂の月ごとの変化を示すHTMLを生成します。</target>
        </trans-unit>
        <trans-unit id="1e74bc2b32914a6546c79e35cba2fded848cd9eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webchef/jekyll-umlauts&quot;&gt;Jekyll-Umlauts by Arne Gockeln&lt;/a&gt;: This generator replaces all german umlauts (&amp;auml;&amp;ouml;&amp;uuml;&amp;szlig;) case sensitive with html.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webchef/jekyll-umlauts&quot;&gt;Arne GockelnによるJekyll-Umlauts&lt;/a&gt;：このジェネレータは、すべてのドイツ語ウムラウト（&amp;auml;&amp;ouml;&amp;uuml;&amp;szlig;）の大文字と小文字を区別するものをhtmlに置き換えます。</target>
        </trans-unit>
        <trans-unit id="5a8bf1811a952018a9dcb7d97a6c0bc68a0c1d19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/wildlyinaccurate/jekyll-responsive-image&quot;&gt;Jekyll Responsive Image&lt;/a&gt;: Responsive images for Jekyll. Automatically resizes images, supports all responsive methods (&lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt;, &lt;code&gt;srcset&lt;/code&gt;, Imager.js, etc), super-flexible configuration.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/wildlyinaccurate/jekyll-responsive-image&quot;&gt;Jekyll Responsive Image&lt;/a&gt;：Jekyllのレスポンシブ画像。画像のサイズを自動的に変更し、すべての応答メソッド（ &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; 、 &lt;code&gt;srcset&lt;/code&gt; 、Imager.jsなど）、非常に柔軟な構成をサポートします。</target>
        </trans-unit>
        <trans-unit id="f117672285861d8df96ee38a9057cf64aa6b0aea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/xdissent/jekyll-rst&quot;&gt;ReStructuredText Converter&lt;/a&gt;: Converts ReST documents to HTML with Pygments syntax highlighting.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/xdissent/jekyll-rst&quot;&gt;ReStructuredTextコンバーター&lt;/a&gt;：ReST文書をPygments構文強調表示でHTMLに変換します。</target>
        </trans-unit>
        <trans-unit id="0b5ffc5b89b92b2648d41c91dbe6b12ac0a07d24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/yihangho/emoji-for-jekyll&quot;&gt;Emoji for Jekyll&lt;/a&gt;: Seamlessly enable emoji for all posts and pages.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/yihangho/emoji-for-jekyll&quot;&gt;Jekyllの&lt;/a&gt;絵文字：すべての投稿とページで絵文字をシームレスに有効にします。</target>
        </trans-unit>
        <trans-unit id="70679694313cb0ce339f1e1f786db4d19a44b453" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://nhoizey.github.io/jekyll-cloudinary/&quot;&gt;Jekyll Cloudinary&lt;/a&gt; by &lt;a href=&quot;https://nicolas-hoizey.com/&quot;&gt;Nicolas Hoizey&lt;/a&gt;: a Jekyll plugin adding a Liquid tag to ease the use of Cloudinary for responsive images in your Markdown/Kramdown posts.</source>
          <target state="translated">&lt;a href=&quot;https://nhoizey.github.io/jekyll-cloudinary/&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://nicolas-hoizey.com/&quot;&gt;Nicolas &lt;/a&gt;HoizeyによるJekyll Cloudinary：Markin / Kramdown投稿のレスポンシブな画像でCloudinaryを簡単に使用できるようにLiquidタグを追加するJekyllプラグイン。</target>
        </trans-unit>
        <trans-unit id="4f43d8961b970503b279adf5f82c7968ab64ccfa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt; are public web pages for users, organizations, and repositories, that are freely hosted on GitHub&amp;rsquo;s &lt;code&gt;github.io&lt;/code&gt; domain or on a custom domain name of your choice. GitHub Pages are powered by Jekyll behind the scenes, so they&amp;rsquo;re a great way to host your Jekyll-powered website for free.</source>
          <target state="translated">&lt;a href=&quot;https://pages.github.com&quot;&gt;GitHubページ&lt;/a&gt;は、GitHubの &lt;code&gt;github.io&lt;/code&gt; ドメインまたは任意のカスタムドメイン名で自由にホストされる、ユーザー、組織、およびリポジトリ用のパブリックWebページです。GitHubページはバックグラウンドでJekyllを利用しているため、Jekyllを利用したWebサイトを無料でホストするのに最適な方法です。</target>
        </trans-unit>
        <trans-unit id="697b71fe44cbfbc872cc532379b684fbc91bad89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; is powered by Jekyll. However, all Pages sites are generated using the &lt;code&gt;--safe&lt;/code&gt; option to disable custom plugins for security reasons. Unfortunately, this means your plugins won&amp;rsquo;t work if you&amp;rsquo;re deploying to GitHub Pages.</source>
          <target state="translated">&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;はJekyllを利用しています。ただし、すべてのページサイトは、セキュリティ上の理由からカスタムプラグインを無効にする &lt;code&gt;--safe&lt;/code&gt; オプションを使用して生成されます。残念ながら、これはGitHub Pagesにデプロイしている場合、プラグインが機能しないことを意味します。</target>
        </trans-unit>
        <trans-unit id="dc9f236f66a255efd329f3ab00054f43a043fc87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rubygems.org/gems/jekyll-money&quot;&gt;Jekyll Money&lt;/a&gt;: A Jekyll plugin for dealing with money. Because we all have to at some point.</source>
          <target state="translated">&lt;a href=&quot;https://rubygems.org/gems/jekyll-money&quot;&gt;Jekyll Money&lt;/a&gt;：お金を扱うためのJekyllプラグイン。私たちは皆、いつかしなければならないからです。</target>
        </trans-unit>
        <trans-unit id="89e0dcc4bddff5fbe893937a28bbd114b3f37d25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt; (which you can check by running &lt;code&gt;gem -v&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt;（ &lt;code&gt;gem -v&lt;/code&gt; を実行して確認できます）</target>
        </trans-unit>
        <trans-unit id="8a59d7d8406418456045f794df89aec5a3ef84a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rubyinstaller.org/&quot;&gt;RubyInstaller&lt;/a&gt; is a self-contained Windows-based installer that includes the Ruby language, an execution environment, important documentation, and more.</source>
          <target state="translated">&lt;a href=&quot;https://rubyinstaller.org/&quot;&gt;RubyInstaller&lt;/a&gt;は、Ruby言語、実行環境、重要なドキュメントなどを含む、自己完結型のWindowsベースのインストーラーです。</target>
        </trans-unit>
        <trans-unit id="c669bbc4368895d9aefef7eb038fe87e56b5ccdd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://snipcart.com/blog/static-site-e-commerce-part-2-integrating-snipcart-with-jekyll&quot;&gt;Snipcart&lt;/a&gt;: Add a shopping cart to a Jekyll site</source>
          <target state="translated">&lt;a href=&quot;https://snipcart.com/blog/static-site-e-commerce-part-2-integrating-snipcart-with-jekyll&quot;&gt;Snipcart&lt;/a&gt;：Jekyllサイトにショッピングカートを追加する</target>
        </trans-unit>
        <trans-unit id="5fe7f0962ae6ebf7756ff29c2ba2f261dbbcd5cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://staticman.net&quot;&gt;Staticman&lt;/a&gt;: Add user-generated content to a Jekyll site (free and open source)</source>
          <target state="translated">&lt;a href=&quot;https://staticman.net&quot;&gt;Staticman&lt;/a&gt;：ユーザーが作成したコンテンツをJekyllサイトに追加します（フリーでオープンソース）</target>
        </trans-unit>
        <trans-unit id="683dc140c350985e19c039a347ade5ea2e49239d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://wordpress.org/plugins/wp2jekyll/&quot;&gt;WordPress2Jekyll&lt;/a&gt;: A WordPress plugin that allows you to use WordPress as your editor and (automatically) export content in to Jekyll. WordPress2Jekyll attempts to marry these two systems together in order to make a site that can be easily managed from all devices.</source>
          <target state="translated">&lt;a href=&quot;https://wordpress.org/plugins/wp2jekyll/&quot;&gt;WordPress2Jekyll&lt;/a&gt;：WordPressをエディターとして使用し、（自動的に）コンテンツをJekyllにエクスポートできるWordPressプラグイン。WordPress2Jekyllは、すべてのデバイスから簡単に管理できるサイトを作成するために、これら2つのシステムを結合しようとします。</target>
        </trans-unit>
        <trans-unit id="b5a04da202a37bcd930c02dde15236821f13c2b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.aerobatic.com&quot;&gt;Aerobatic&lt;/a&gt; has custom domains, global CDN distribution, basic auth, CORS proxying, and a growing list of plugins all included.</source>
          <target state="translated">&lt;a href=&quot;https://www.aerobatic.com&quot;&gt;Aerobaticに&lt;/a&gt;は、カスタムドメイン、グローバルCDN配布、基本認証、CORSプロキシ、およびプラグインの増加するリストがすべて含まれています。</target>
        </trans-unit>
        <trans-unit id="77a9701da30a8e5101eefef30ff97326ce329750" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.contentful.com/ecosystem/jekyll/&quot;&gt;Contentful&lt;/a&gt;: use Jekyll together with the API-driven Contentful CMS.</source>
          <target state="translated">&lt;a href=&quot;https://www.contentful.com/ecosystem/jekyll/&quot;&gt;Contentful&lt;/a&gt;：JekyllをAPI駆動のContentful CMSとともに使用します。</target>
        </trans-unit>
        <trans-unit id="ddbe53748efad99faa6c72c2b27081ae87860579" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby&lt;/a&gt; version 2.2.5 or above, including all development headers (ruby installation can be checked by running &lt;code&gt;ruby -v&lt;/code&gt;, development headers can be checked on Ubuntu by running &lt;code&gt;apt list --installed  ruby-dev&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby&lt;/a&gt;バージョン2.2.5以降（すべての開発ヘッダーを含む）（Rubyのインストールは &lt;code&gt;ruby -v&lt;/code&gt; を実行して確認できます。開発ヘッダーはUbuntuで &lt;code&gt;apt list --installed ruby-dev&lt;/code&gt; して確認できます）</target>
        </trans-unit>
        <trans-unit id="0d9a68fcf39b39fba0557ef2f3d0951d8aef19f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;folder&amp;gt;&lt;/code&gt; &amp;mdash; The name of the local output folder (defaults to &lt;code&gt;_site&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&amp;lt;folder&amp;gt;&lt;/code&gt; &amp;mdash;ローカル出力フォルダーの名前（デフォルトは &lt;code&gt;_site&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="6556336d58722d64f35a7d4e93d22c3e7390214c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;folder&amp;gt;&lt;/code&gt; is the path to your site. E.g., &lt;code&gt;~/public_html/you.org/blog-html/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;folder&amp;gt;&lt;/code&gt; はサイトへのパスです。例： &lt;code&gt;~/public_html/you.org/blog-html/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8ba0115313d93be4cccfe155483cee8f0d7c5dcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;site&amp;gt;&lt;/code&gt; &amp;mdash; Your hosting server</source>
          <target state="translated">&lt;code&gt;&amp;lt;site&amp;gt;&lt;/code&gt; &amp;mdash;ホスティングサーバー</target>
        </trans-unit>
        <trans-unit id="a1f8b98fe85103454b68ef3fc74a4c6cfe6bd6ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; &amp;mdash; The username for your hosting account</source>
          <target state="translated">&lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; &amp;mdash;ホスティングアカウントのユーザー名</target>
        </trans-unit>
        <trans-unit id="8f92f9b5a22f787c54bfaeed8322de14386b9d92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--auto&lt;/code&gt; (now &lt;code&gt;--watch&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;--auto&lt;/code&gt; （現在 &lt;code&gt;--watch&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="42417e95c2d88443649e546b6e6f970c832afc11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--maruku&lt;/code&gt;, &lt;code&gt;--rdiscount&lt;/code&gt;, and &lt;code&gt;--redcarpet&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--maruku&lt;/code&gt; 、-- &lt;code&gt;--rdiscount&lt;/code&gt; 、および &lt;code&gt;--redcarpet&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="895fdf5ad22f9982b87fd44b47d1dab7a6b187ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-auto&lt;/code&gt; (now &lt;code&gt;--no-watch&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;--no-auto&lt;/code&gt; （現在 &lt;code&gt;--no-watch&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="52f6116b45fe2f40a4c8160e22641cba168acc7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--rsh=ssh -p2222&lt;/code&gt; &amp;mdash; The port for SSH access. It is required if your host uses a different port than the default (e.g, HostGator)</source>
          <target state="translated">&lt;code&gt;--rsh=ssh -p2222&lt;/code&gt; &amp;mdash; SSHアクセス用のポート。ホストがデフォルト（HostGatorなど）とは異なるポートを使用する場合に必要です。</target>
        </trans-unit>
        <trans-unit id="a463d36de2debf46e034a83140e7f65baec165a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_data/people.yml&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;_data/people.yml&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="94cd5337be17886e32cbf55ed25ddfa7e3ec51f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_plugins&lt;/code&gt;, &lt;code&gt;_config.yml&lt;/code&gt; and &lt;code&gt;Gemfile&lt;/code&gt; can be used simultaneously</source>
          <target state="translated">&lt;code&gt;_plugins&lt;/code&gt; 、 &lt;code&gt;_config.yml&lt;/code&gt; および &lt;code&gt;Gemfile&lt;/code&gt; は同時に使用できます</target>
        </trans-unit>
        <trans-unit id="8a872db4bb5d71e82571da522176a452561fe303" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ascii&lt;/code&gt;: spaces, non-alphanumeric, and non-ASCII characters</source>
          <target state="translated">&lt;code&gt;ascii&lt;/code&gt; ：スペース、非英数字、非ASCII文字</target>
        </trans-unit>
        <trans-unit id="ca401db0aa95d64d298f7247d85e016414ee2a52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bundler&lt;/code&gt; is a gem that manages other Ruby gems. It makes sure your gems and gem versions are compatible, and that you have all necessary dependencies each gem requires.</source>
          <target state="translated">&lt;code&gt;bundler&lt;/code&gt; は、他のRuby gemを管理するgemです。これにより、gemとgemのバージョンに互換性があり、各gemに必要なすべての依存関係があることを確認できます。</target>
        </trans-unit>
        <trans-unit id="9c55005ce71276d94385264fab1ec77995d47608" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;choco install ruby2.devkit&lt;/code&gt; - &lt;em&gt;needed for compilation of json gem&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;choco install ruby2.devkit&lt;/code&gt; - &lt;em&gt;JSONの宝石のコンパイルに必要&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a3d29c191d12881a7d90b18c0b4c73ee6ed489ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collection[0]&lt;/code&gt; becomes &lt;code&gt;collection.label&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;collection[0]&lt;/code&gt; は &lt;code&gt;collection.label&lt;/code&gt; になります</target>
        </trans-unit>
        <trans-unit id="a61c194f2ff27ff34c635951213384b2c1318ff2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collection[1]&lt;/code&gt; becomes &lt;code&gt;collection&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;collection[1]&lt;/code&gt; は &lt;code&gt;collection&lt;/code&gt; なります</target>
        </trans-unit>
        <trans-unit id="878a13ae3ab0f9d4fdc414da2e9a433d47a33ec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date&lt;/code&gt; is the same as &lt;code&gt;:categories/:year/:month/:day/:title.html&lt;/code&gt;, the default. See &lt;a href=&quot;#builtinpermalinkstyles&quot;&gt;Built-in Permalink Styles&lt;/a&gt; below for more options.</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; は、デフォルトの &lt;code&gt;:categories/:year/:month/:day/:title.html&lt;/code&gt; です。参照&lt;a href=&quot;#builtinpermalinkstyles&quot;&gt;内蔵固定リンクスタイルを&lt;/a&gt;より多くのオプションについて以下に。</target>
        </trans-unit>
        <trans-unit id="3664e4236cc6a2a04be1dcd0ef7c43baf0d48a9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt;: spaces and non-alphanumeric characters</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; ：スペースと非英数字</target>
        </trans-unit>
        <trans-unit id="ffa62ab778c47822c753b478d3761ac666b3ea43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gem install jekyll bundler&lt;/code&gt; installs the &lt;a href=&quot;https://rubygems.org/gems/jekyll/&quot;&gt;jekyll&lt;/a&gt; and &lt;a href=&quot;https://rubygems.org/gems/bundler&quot;&gt;bundler&lt;/a&gt; gems through &lt;a href=&quot;https://rubygems.org/&quot;&gt;RubyGems&lt;/a&gt;. You need only to install the gems one time &amp;mdash; not every time you create a new Jekyll project. Here are some additional details:</source>
          <target state="translated">&lt;code&gt;gem install jekyll bundler&lt;/code&gt; は、&lt;a href=&quot;https://rubygems.org/&quot;&gt;RubyGemsを&lt;/a&gt;介して&lt;a href=&quot;https://rubygems.org/gems/jekyll/&quot;&gt;jekyll&lt;/a&gt;および&lt;a href=&quot;https://rubygems.org/gems/bundler&quot;&gt;bundler&lt;/a&gt; gemをインストールします。新しいJekyllプロジェクトを作成するたびにではなく、gemを1回インストールするだけで済みます。追加の詳細は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7906f3ac0efad500d709d814a299b61fde9eaf48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index.html&lt;/code&gt; or &lt;code&gt;index.md&lt;/code&gt; and other HTML, Markdown, Textile files</source>
          <target state="translated">&lt;code&gt;index.html&lt;/code&gt; または &lt;code&gt;index.md&lt;/code&gt; およびその他のHTML、Markdown、Textileファイル</target>
        </trans-unit>
        <trans-unit id="2f51b22fdf361af1302a6d255eff845451f320be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; installs a new Jekyll site at the path specified (relative to current directory). In this case, Jekyll will be installed in a directory called &lt;code&gt;myblog&lt;/code&gt;. Here are some additional details:</source>
          <target state="translated">&lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; は、指定されたパス（現在のディレクトリからの相対パス）に新しいJekyllサイトをインストールします。この場合、Jekyllは &lt;code&gt;myblog&lt;/code&gt; というディレクトリにインストールされます。追加の詳細は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="cce87f165b259801b5106ed5106a023af07cadcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jekyll new&lt;/code&gt; automatically initiates &lt;code&gt;bundle install&lt;/code&gt; to install the dependencies required. (If you don&amp;rsquo;t want Bundler to install the gems, use &lt;code&gt;jekyll new myblog --skip-bundle&lt;/code&gt;.)</source>
          <target state="translated">&lt;code&gt;jekyll new&lt;/code&gt; は自動的に &lt;code&gt;bundle install&lt;/code&gt; を開始し、必要な依存関係をインストールします。（Bundlerにgemをインストールさせたくない場合は、 &lt;code&gt;jekyll new myblog --skip-bundle&lt;/code&gt; を使用してください。）</target>
        </trans-unit>
        <trans-unit id="9a1e667f131c39c72078b349ff865e5e3a46f555" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;latin&lt;/code&gt;: like &lt;code&gt;default&lt;/code&gt;, except Latin characters are first transliterated (e.g. &lt;code&gt;&amp;agrave;&amp;egrave;&amp;iuml;&amp;ograve;&amp;uuml;&lt;/code&gt; to &lt;code&gt;aeiou&lt;/code&gt;)3.7.0</source>
          <target state="translated">&lt;code&gt;latin&lt;/code&gt; ：ように &lt;code&gt;default&lt;/code&gt; 、ラテン文字以外の最初の（例えば音訳されている &lt;code&gt;&amp;agrave;&amp;egrave;&amp;iuml;&amp;ograve;&amp;uuml;&lt;/code&gt; に &lt;code&gt;aeiou&lt;/code&gt; ）3.7.0</target>
        </trans-unit>
        <trans-unit id="18e2da18cc87634b69a4ffb1b3ca83365b0cbe8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lax&lt;/code&gt; &amp;mdash; Ignore all errors.</source>
          <target state="translated">&lt;code&gt;lax&lt;/code&gt; &amp;mdash;すべてのエラーを無視します。</target>
        </trans-unit>
        <trans-unit id="57acbf4e59c9acd18f2ef3730062f8ef71208fdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_fenced_code_blocks&lt;/code&gt; &amp;mdash; By default, Jekyll sets the &lt;code&gt;fenced_code_blocks&lt;/code&gt; extension (for delimiting code blocks with triple tildes or triple backticks) to &lt;code&gt;true&lt;/code&gt;, probably because GitHub&amp;rsquo;s eager adoption of them is starting to make them inescapable. Redcarpet&amp;rsquo;s normal &lt;code&gt;fenced_code_blocks&lt;/code&gt; extension is inert when used with Jekyll; instead, you can use this inverted version of the extension for disabling fenced code.</source>
          <target state="translated">&lt;code&gt;no_fenced_code_blocks&lt;/code&gt; &amp;mdash;デフォルトでは、Jekyllは（3 つの &lt;code&gt;fenced_code_blocks&lt;/code&gt; または3つのバックティックでコードブロックを区切るために）fenced_code_blocks拡張を &lt;code&gt;true&lt;/code&gt; に設定します。これは、GitHubの積極的な採用により、それらが不可避になったためと考えられます。Redcarpetの通常の &lt;code&gt;fenced_code_blocks&lt;/code&gt; 拡張は、Jekyllと共に使用すると無効になります。代わりに、この逆バージョンの拡張機能を使用して、フェンスされたコードを無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="668033d8b36380e9aede42b2f2a418609aab618c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;none&lt;/code&gt;: no characters</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; ：文字なし</target>
        </trans-unit>
        <trans-unit id="5d912b2b736df20b799ef88c466b0cc9ec5831ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;permalink: pretty&lt;/code&gt; Same as &lt;code&gt;permalink: /:collection/:path/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;permalink: pretty&lt;/code&gt; &lt;code&gt;permalink: /:collection/:path/&lt;/code&gt; 同じです。</target>
        </trans-unit>
        <trans-unit id="95138d14b60f54a4303d5ddd21c95f350bc09898" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pretty&lt;/code&gt;: spaces and non-alphanumeric characters except for &lt;code&gt;._~!$&amp;amp;'()+,;=@&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pretty&lt;/code&gt; ：スペースと &lt;code&gt;._~!$&amp;amp;'()+,;=@&lt;/code&gt; を除く英数字以外の文字</target>
        </trans-unit>
        <trans-unit id="0964e724b6e75c3e1ae374465dd0abd37f5ce7e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;raw&lt;/code&gt;: spaces</source>
          <target state="translated">&lt;code&gt;raw&lt;/code&gt; ：スペース</target>
        </trans-unit>
        <trans-unit id="faa590e1c4e27dafae5d2eb1397ce8fdbc87faae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;smart&lt;/code&gt; &amp;mdash; This pseudo-extension turns on SmartyPants, which converts straight quotes to curly quotes and runs of hyphens to em (&lt;code&gt;---&lt;/code&gt;) and en (&lt;code&gt;--&lt;/code&gt;) dashes.</source>
          <target state="translated">&lt;code&gt;smart&lt;/code&gt; &amp;mdash;この疑似拡張機能はSmartyPantsをオンにします。SmartyPantsは、直線引用符を中括弧に変換し、ハイフンの連続をem（ &lt;code&gt;---&lt;/code&gt; ）およびen（ &lt;code&gt;--&lt;/code&gt; ）ダッシュに変換します。</target>
        </trans-unit>
        <trans-unit id="13cceb404086c52cf90c4c346620eb459cbf0eed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strict&lt;/code&gt; &amp;mdash; Output an error message and stop the build.</source>
          <target state="translated">&lt;code&gt;strict&lt;/code&gt; &amp;mdash;エラーメッセージを出力し、ビルドを停止します。</target>
        </trans-unit>
        <trans-unit id="e586eefc19c270b61a1a1f32e0fac239c7beba0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;warn&lt;/code&gt; &amp;mdash; Output a warning on the console for each error.</source>
          <target state="translated">&lt;code&gt;warn&lt;/code&gt; &amp;mdash;エラーごとにコンソールに警告を出力します。</target>
        </trans-unit>
        <trans-unit id="16a51d649a6324ce1e120325783a286a55cdbe1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{ site.members | where_exp:&quot;item&quot;,
&quot;item.graduation_year == 2014&quot; }}&lt;/code&gt;&lt;code&gt;{{ site.members | where_exp:&quot;item&quot;,
&quot;item.graduation_year &amp;lt; 2014&quot; }}&lt;/code&gt;&lt;code&gt;{{ site.members | where_exp:&quot;item&quot;,
&quot;item.projects contains 'foo'&quot; }}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{{ site.members | where_exp:&quot;item&quot;, &quot;item.graduation_year == 2014&quot; }}&lt;/code&gt; &lt;code&gt;{{ site.members | where_exp:&quot;item&quot;, &quot;item.graduation_year &amp;lt; 2014&quot; }}&lt;/code&gt; &lt;code&gt;{{ site.members | where_exp:&quot;item&quot;, &quot;item.projects contains 'foo'&quot; }}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d1460ea4613a47e3440a08c8297cee728e9c2239" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{ some_scss | scssify }}&lt;/code&gt;&lt;code&gt;{{ some_sass | sassify }}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{{ some_scss | scssify }}&lt;/code&gt; &lt;code&gt;{{ some_sass | sassify }}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26884c30ad4fadb9edd70d3bc53e6f814ed0362f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Did we miss something? Please click &amp;ldquo;Improve this page&amp;rdquo; above and add a section. Thanks!&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;私たちは何かを逃しましたか？上の[このページを改善する]をクリックしてセクションを追加してください。ありがとう！&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9975f1a15d9f2c70715b48b85141be147c514346" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; You must have &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/about&quot;&gt;Bash on Ubuntu on Windows&lt;/a&gt; enabled.</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/about&quot;&gt;Windows上のUbuntuでBashを&lt;/a&gt;有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="e34569fcc2028133daf24d4e8fa05dd46a10583e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Absolute URL&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;絶対URL&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aedb7d91fe407d461d32d7e6139ddbe756ccc676" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;And that&amp;rsquo;s it!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;以上です！&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c89969b6e523f64d077befbddb224282c5ef8046" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array Filters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;配列フィルター&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d209e15889b53ca8b3d2c46f5f3b238bd49089ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array to Sentence&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;文の配列&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="722c20e5a8ae16a2db840b3c7aeed71625854536" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Base URL&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ベースURL&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d80bc47bc7f4aa0f000f774ba46ac617371e5bf2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CGI Escape&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;CGIエスケープ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5736d9e43ff84bc86ab9b13beb128683c21c4d89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Configuration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Configuration&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e594482dd9e7d5a481a78c02dcbf26e227d0968" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Converting Sass/SCSS&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Sass / SCSSの変換&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d99ea1df1ed50e82493a61e01be9025298489b7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Data To JSON&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;JSONへのデータ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3d0e2f154164d971ef8cbd325c3a2316b8aada76" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Date to Long String&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;長い文字列への日付&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4c2adf7edb223c1cdedbca9a5baf799f2d6637e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Date to RFC-822 Format&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;RFC-822形式の日付&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2b084b828df4fd611bbbca4021ae4f0117c74ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Date to String&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;文字列への日付&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a532e678f67998a12cf87fb1ced3c541ee62c7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Date to XML Schema&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;XMLスキーマへの日付&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91fcc221b614f10d84fff91092b7b9691dd89738" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default&lt;/strong&gt; Same as &lt;code&gt;permalink: /:collection/:path&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;デフォルト&lt;/strong&gt; &lt;code&gt;permalink: /:collection/:path&lt;/code&gt; 同じ：/：collection /：path。</target>
        </trans-unit>
        <trans-unit id="8a48981571525bfab38a653f8703cb636b612215" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Defaults&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Defaults&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="69078a181802b73053cc93dd7cef5563068bd7ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Detach&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Detach&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="614de8fa9393008a3bf0ff45b6658158b939779a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Drafts&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Drafts&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5a44798a0fcccd01296acc40dcf81dee569a586e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Encoding&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Encoding&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ba1c2eb8bbb78e7fff6e78a77e0a66e0f598355" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Environment&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Environment&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aa07a12dbe3a7b10f89d3fada2154cdedcf225c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Exclude&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Exclude&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5559246fc103cb6b764ea83c046a8d266ec6d414" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Force polling&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;強制ポーリング&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cebefee8eed4a9e4ca31964ee976d1101f49179e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Future&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Future&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cc92c8407709cdb7b177a448da61ff54e3d45f62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Group By Expression&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;式でグループ化&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef139d5922f0d88c2d0a3c40d70e1a2bf71b804c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Group By&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;グループ化&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74f7742ebf71c899c926d3ec11da914df0baef0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Include&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Include&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3755c07c0714d230f100c860d8974598a38edcd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Incremental build&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;インクリメンタルビルド&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="064e616ced1a8e418b59d7cdadae780dd0f88cec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Inspect&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Inspect&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b4dff007b231c704a0dbc71220f290205e48c12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Keep files&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ファイルを保持する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="52f295fe3f6bffdb7dd4686bae55a96ac3acc7b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LSI&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;LSI&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="47b21ba21b7f179f649737fc60b38af3f52e8d48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Limit Posts&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;投稿を制限する&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e337009f81432415e645dbf69202f877b1d3ca8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Liquid profiler&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;液体プロファイラー&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="156da4348f3486fabeb7a49dce87345a671a8cda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Local Server Hostname&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ローカルサーバーのホスト名&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d693a45edfb752d2e33c34d0b868e7f271479696" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Local Server Port&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ローカルサーバーポート&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f2fe8e3a3d4a34cbb50e090bfb3a98f98ea7747b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Markdownify&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Markdownify&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a680366dbeb061cc82e3cd29e72c8184c0cbf26f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Normalize Whitespace&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;空白を正規化&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5100b66803f248a6827fd26edc56d1ffad425025" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: From v3.3.0 onward, Jekyll does not process &lt;code&gt;node_modules&lt;/code&gt; and certain subdirectories within &lt;code&gt;vendor&lt;/code&gt;, by default. But, by having an &lt;code&gt;exclude:&lt;/code&gt; array defined explicitly in the config file overrides this default setting, which results in some users to encounter an error in building the site, with the following error message:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注：v3.3.0以降、Jekyllはデフォルトで &lt;code&gt;node_modules&lt;/code&gt; と &lt;code&gt;vendor&lt;/code&gt; 内の特定のサブディレクトリを処理しません。ただし、設定ファイルで &lt;code&gt;exclude:&lt;/code&gt; 配列を明示的に定義すると、このデフォルト設定が上書きされるため、一部のユーザーは次のエラーメッセージを表示して、サイトの構築中にエラーに遭遇します。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="13952987d5830acac2081f1ab7c958cd034804f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Bash on Ubuntu on Windows is still under development, so you may run into issues.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Windows上のUbuntuのBashはまだ開発中のため、問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="cdb1bdb412484cb8bd2b38ab632f9e325cb91fa9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; In the current &lt;a href=&quot;https://github.com/sparklemotion/nokogiri/issues/1456#issuecomment-206481794&quot;&gt;pre release&lt;/a&gt; it works out of the box with Windows x64 but this version is not referenced in the github-pages.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;現在の&lt;a href=&quot;https://github.com/sparklemotion/nokogiri/issues/1456#issuecomment-206481794&quot;&gt;プレリリース&lt;/a&gt;では、Windows x64でそのまま使用できますが、このバージョンはgithub-pagesで参照されていません。</target>
        </trans-unit>
        <trans-unit id="6652d0ee3cae13c972421de7256ee4d0d7f926f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; We use an unsecure connection because SSL throws exceptions in the version of Ruby</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; RubyのバージョンではSSLが例外をスローするため、安全でない接続を使用しています</target>
        </trans-unit>
        <trans-unit id="a287bdec4c2058b2d50a3ca2b5b15e84443bb7a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You will need a Gemfile as well, &lt;a href=&quot;https://docs.travis-ci.com/user/languages/ruby/#Dependency-Management&quot;&gt;Travis will automatically install&lt;/a&gt; the dependencies based on the referenced gems:</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; Gemfileも必要です。Travis は、参照されたgemに基づいて依存関係を&lt;a href=&quot;https://docs.travis-ci.com/user/languages/ruby/#Dependency-Management&quot;&gt;自動的にインストール&lt;/a&gt;します。</target>
        </trans-unit>
        <trans-unit id="8a7e600c957907f375ba7fd102689cfd9d71a1a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Number of Words&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;言葉の数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="035ab5d71bc83516e2e465da92566d020c198ffa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Regeneration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Regeneration&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac7c7de6914aba4486420040aff6be6136d5b6dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Relative URL&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;相対URL&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ce9c2ed1b8845910ba766f8f5eab571e9ea723ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Safe&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Safe&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="67d363da900f8796849636058631430e9bdf3dcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sample&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Sample&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0de4fe9d2e453ac4761152b59362f417cea83429" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Silence Output&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;無音出力&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0acf4c7a427e1d64e1f33cf983ad8c15ad67d07b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Site Destination&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;サイトの宛先&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb078475fb1fd279b49b5996db2843d21dc0be8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Site Source&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;サイトソース&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e36da88f7e94ce58a88674470a0b9d78a576f26c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Skips the initial site build.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;最初のサイト構築をスキップします。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="161beb749b4af6addc4889633171fbc9f1d67daf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Slugify&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Slugify&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab4943230fbf458b9ea67ce32e84fa77d6674a55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Smartify&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Smartify&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2151277b265a91a0fe94cfaded74d24e5b02b5de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sort&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Sort&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b493332da3abc61fd4a02de0b4bb8c4207557c47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Strict Front Matter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;厳格なフロントマター&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c5a61a00ab6a8fc602faf2affb50fc0da791fefc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time Zone&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;タイムゾーン&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="55d1a6b4629b838969a104ef641639ecb42be0a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To Integer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;整数へ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c07c0028a45c08072c0c22bf439baa95574934a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Travis error:&lt;/strong&gt;&lt;em&gt;&amp;ldquo;You are trying to install in deployment mode after changing your Gemfile. Run bundle install elsewhere and add the updated Gemfile.lock to version control.&amp;rdquo;&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;Travisエラー：&lt;/strong&gt;&lt;em&gt;「Gemfileを変更した後、デプロイメントモードでインストールしようとしています。bundle installを別の場所で実行し、更新されたGemfile.lockをバージョン管理に追加します。」&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0b0e3f98e1d3e15b1f8a99248bc873c058c00f9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;URI Escape&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;URIエスケープ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="58edc047d38f803bae9a8f03d9a38eaecca7d166" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unpublished&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Unpublished&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c6cb05feb418b9b80e2ddacb80a7a6fd0e90aa7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Verbose output&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;詳細な出力&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40164f69f3e942b6a9c27a543ff453fa27e9118a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Where Expression&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;場所式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="98382fec837521b94a4201c5ec0d8da1a495b445" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Where&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Where&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46cd6a873e443de73499d98b2cd0dc81b04d9cd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Workaround:&lt;/strong&gt; Either run &lt;code&gt;bundle install&lt;/code&gt; locally and commit your changes to &lt;code&gt;Gemfile.lock&lt;/code&gt;, or remove the &lt;code&gt;Gemfile.lock&lt;/code&gt; file from your repository and add an entry in the &lt;code&gt;.gitignore&lt;/code&gt; file to avoid it from being checked in again.</source>
          <target state="translated">&lt;strong&gt;回避策：&lt;/strong&gt;どちらの実行は &lt;code&gt;bundle install&lt;/code&gt; ローカルとに変更をコミット &lt;code&gt;Gemfile.lock&lt;/code&gt; 、または削除 &lt;code&gt;Gemfile.lock&lt;/code&gt; のリポジトリからファイルをし、中にエントリを追加し &lt;code&gt;.gitignore&lt;/code&gt; をもう一度チェックされてから、それを避けるために、ファイル。</target>
        </trans-unit>
        <trans-unit id="202c12f91f88e178d343c7a3410dcdce3ec05bee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;X.509 (SSL) Certificate&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;X.509（SSL）証明書&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e1da205f63342dca221949324323a5e2927f72b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;X.509 (SSL) Private Key&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;X.509（SSL）秘密鍵&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3224f3a72b00adde9c6cb47bc6f2e5095fee0ad0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XML Escape&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;XMLエスケープ&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74822779539e97bce3e01a5102bba1ae633c9ea0" translate="yes" xml:space="preserve">
          <source>A Finder or Explorer window opens showing the theme&amp;rsquo;s files and directories. The Minima theme gem contains these files:</source>
          <target state="translated">FinderまたはExplorerウィンドウが開き、テーマのファイルとディレクトリが表示されます。Minimaテーマgemには、次のファイルが含まれています。</target>
        </trans-unit>
        <trans-unit id="ae91e1b3531f49ae2208ba8d5058ad81a0df6e9d" translate="yes" xml:space="preserve">
          <source>A Hard-Coded Collection</source>
          <target state="translated">ハードコード化されたコレクション</target>
        </trans-unit>
        <trans-unit id="4ba2b8413d479dbe929f9c1da8de3573b97db179" translate="yes" xml:space="preserve">
          <source>A basic Jekyll site usually looks something like this:</source>
          <target state="translated">基本的なジキルサイトは大抵こんな感じです。</target>
        </trans-unit>
        <trans-unit id="7742a739b14119298eb82a8d620c772ec181a7ba" translate="yes" xml:space="preserve">
          <source>A boolean flag that informs Jekyll whether this plugin may be safely executed in an environment where arbitrary code execution is not allowed. This is used by GitHub Pages to determine which core plugins may be used, and which are unsafe to run. If your plugin does not allow for arbitrary code execution, set this to &lt;code&gt;true&lt;/code&gt;. GitHub Pages still won&amp;rsquo;t load your plugin, but if you submit it for inclusion in core, it&amp;rsquo;s best for this to be correct!</source>
          <target state="translated">任意のコードの実行が許可されていない環境でこのプラグインを安全に実行できるかどうかをJekyllに通知するブールフラグ。これはGitHub Pagesが使用して、使用できるコアプラグインと、実行が安全でないプラグインを判別します。プラグインが任意のコードの実行を許可しない場合は、これを &lt;code&gt;true&lt;/code&gt; に設定します。GitHubページはまだプラグインをロードしませんが、コアに含めるためにそれを送信する場合、これが正しいことが最善です！</target>
        </trans-unit>
        <trans-unit id="0cf11f67e9a9ec62b370e8ba92f94b0e278f4ca4" translate="yes" xml:space="preserve">
          <source>A date here overrides the date from the name of the post. This can be used to ensure correct sorting of posts. A date is specified in the format &lt;code&gt;YYYY-MM-DD HH:MM:SS +/-TTTT&lt;/code&gt;; hours, minutes, seconds, and timezone offset are optional.</source>
          <target state="translated">ここの日付は、投稿の名前の日付を上書きします。これは、投稿を正しくソートするために使用できます。日付は &lt;code&gt;YYYY-MM-DD HH:MM:SS +/-TTTT&lt;/code&gt; の形式で指定されます。時間、分、秒、およびタイムゾーンのオフセットはオプションです。</target>
        </trans-unit>
        <trans-unit id="e746a419fa8184ed8b5dbaf74831def56f33836d" translate="yes" xml:space="preserve">
          <source>A gem included here will be activated even if its not explicitly listed under the &lt;code&gt;plugins:&lt;/code&gt; key in your site&amp;rsquo;s config file.</source>
          <target state="translated">ここに含まれている宝石は、サイトの設定ファイルの &lt;code&gt;plugins:&lt;/code&gt; キーに明示的にリストされていなくてもアクティブになります。</target>
        </trans-unit>
        <trans-unit id="0b7b6cbe1498a0ac676b8c55f3adc99cfaa60efc" translate="yes" xml:space="preserve">
          <source>A generator is a subclass of &lt;code&gt;Jekyll::Generator&lt;/code&gt; that defines a &lt;code&gt;generate&lt;/code&gt; method, which receives an instance of &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/site.rb&quot;&gt;&lt;code&gt;Jekyll::Site&lt;/code&gt;&lt;/a&gt;. The return value of &lt;code&gt;generate&lt;/code&gt; is ignored.</source>
          <target state="translated">ジェネレーターは &lt;code&gt;Jekyll::Generator&lt;/code&gt; サブクラスで、&lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/site.rb&quot;&gt; &lt;code&gt;Jekyll::Site&lt;/code&gt; &lt;/a&gt;インスタンスを受け取る &lt;code&gt;generate&lt;/code&gt; メソッドを定義します。 &lt;code&gt;generate&lt;/code&gt; の戻り値は無視されます。</target>
        </trans-unit>
        <trans-unit id="f59eb8c28cc9735685599f07f810c140a637cfb5" translate="yes" xml:space="preserve">
          <source>A list containing the data loaded from the YAML files located in the &lt;code&gt;_data&lt;/code&gt; directory.</source>
          <target state="translated">&lt;code&gt;_data&lt;/code&gt; ディレクトリにあるYAMLファイルから読み込まれたデータを含むリスト。</target>
        </trans-unit>
        <trans-unit id="9519d5a6bd7f63f37a2c1e1998a4a86c6925de29" translate="yes" xml:space="preserve">
          <source>A list of all &lt;a href=&quot;../static-files/index&quot;&gt;static files&lt;/a&gt; (i.e. files not processed by Jekyll's converters or the Liquid renderer). Each file has three properties: &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;modified_time&lt;/code&gt; and &lt;code&gt;extname&lt;/code&gt;.</source>
          <target state="translated">すべての&lt;a href=&quot;../static-files/index&quot;&gt;静的ファイル&lt;/a&gt;（JekyllのコンバーターやLiquidレンダラーで処理されないファイル）のリスト。各ファイルには、 &lt;code&gt;path&lt;/code&gt; 、 &lt;code&gt;modified_time&lt;/code&gt; および &lt;code&gt;extname&lt;/code&gt; の 3つのプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="5336856637a483a8212cbf2ef10f6f0f13bd455e" translate="yes" xml:space="preserve">
          <source>A list of all Pages.</source>
          <target state="translated">すべてのPagesのリスト。</target>
        </trans-unit>
        <trans-unit id="ebd31c600838ace9a8440f7264a2ea48c1395265" translate="yes" xml:space="preserve">
          <source>A list of all the collections.</source>
          <target state="translated">すべてのコレクションのリスト。</target>
        </trans-unit>
        <trans-unit id="3e04294346c519800585cfd36fea6f199fcdbde2" translate="yes" xml:space="preserve">
          <source>A list of all the documents in every collection.</source>
          <target state="translated">すべてのコレクションに含まれるすべての文書のリスト。</target>
        </trans-unit>
        <trans-unit id="27b1206373577600642e6620e908afd8604f3ad6" translate="yes" xml:space="preserve">
          <source>A permalink style of &lt;code&gt;/:categories/:year/:month/:day/:title.:output_ext&lt;/code&gt; for posts becomes &lt;code&gt;/:title.html&lt;/code&gt; for pages and collections.</source>
          <target state="translated">投稿の &lt;code&gt;/:categories/:year/:month/:day/:title.:output_ext&lt;/code&gt; のパーマリンクスタイルは、ページとコレクションの &lt;code&gt;/:title.html&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="924a8402a0534cd1579386e7c9bbe1ff2daca0b5" translate="yes" xml:space="preserve">
          <source>A permalink style of &lt;code&gt;date&lt;/code&gt;, which contains a trailing file extension, will update page permalinks to also contain a trailing file extension: &lt;code&gt;/:title.html&lt;/code&gt;. But no time or category information will be included.</source>
          <target state="translated">末尾のファイル拡張子を含む &lt;code&gt;date&lt;/code&gt; のパーマリンクスタイルは、末尾のファイル拡張子 &lt;code&gt;/:title.html&lt;/code&gt; も含むようにページのパーマリンクを更新します。ただし、時間やカテゴリの情報は含まれません。</target>
        </trans-unit>
        <trans-unit id="579d296d4ecbcaa9d204eb62654652cc43172fce" translate="yes" xml:space="preserve">
          <source>A permalink style of &lt;code&gt;pretty&lt;/code&gt; (or &lt;code&gt;/:categories/:year/:month/:day/:title/&lt;/code&gt;), which omits the file extension and contains a trailing slash, will update page and collection permalinks to also omit the file extension and contain a trailing slash: &lt;code&gt;/:title/&lt;/code&gt;.</source>
          <target state="translated">ファイルの拡張子を省略して末尾にスラッシュを含む、 &lt;code&gt;pretty&lt;/code&gt; （または &lt;code&gt;/:categories/:year/:month/:day/:title/&lt;/code&gt; ）のパーマリンクスタイルは、ページとコレクションのパーマリンクを更新して、ファイル拡張子も省略し、末尾のスラッシュ： &lt;code&gt;/:title/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e30b08edbd0fd1bfc32274cac27a0065c655be3" translate="yes" xml:space="preserve">
          <source>A quick way to install Jekyll using Chocolatey is to follow the &lt;a href=&quot;https://davidburela.wordpress.com/2015/11/28/easily-install-jekyll-on-windows-with-3-command-prompt-entries-and-chocolatey/&quot;&gt;installation instructions by David Burela&lt;/a&gt;:</source>
          <target state="translated">Chocolateyを使用してJekyllをインストールする簡単な方法は&lt;a href=&quot;https://davidburela.wordpress.com/2015/11/28/easily-install-jekyll-on-windows-with-3-command-prompt-entries-and-chocolatey/&quot;&gt;、David Burelaのインストール手順&lt;/a&gt;に従うことです。</target>
        </trans-unit>
        <trans-unit id="89375efee27914e45b0bf3c296802660f7c8a517" translate="yes" xml:space="preserve">
          <source>A reverse chronological list of all Posts.</source>
          <target state="translated">全投稿の逆時系列リスト。</target>
        </trans-unit>
        <trans-unit id="442fcde1d206c0cb9bb937ee778fc4781dc6c840" translate="yes" xml:space="preserve">
          <source>A seeming feature regression in 2.x, the &lt;code&gt;--future&lt;/code&gt; flag was automatically &lt;em&gt;enabled&lt;/em&gt;. The future flag allows post authors to give the post a date in the future and to have it excluded from the build until the system time is equal or after the post time. In Jekyll 3, this has been corrected. &lt;strong&gt;Now, &lt;code&gt;--future&lt;/code&gt; is disabled by default.&lt;/strong&gt; This means you will need to include &lt;code&gt;--future&lt;/code&gt; if you want your future-dated posts to generate when running &lt;code&gt;jekyll build&lt;/code&gt; or &lt;code&gt;jekyll serve&lt;/code&gt;.</source>
          <target state="translated">2.xでは機能の回帰と思われる &lt;code&gt;--future&lt;/code&gt; フラグが自動的に&lt;em&gt;有効になりました&lt;/em&gt;。将来のフラグを使用すると、投稿作成者は投稿に未来の日付を付け、システムの時刻が等しくなるまで、または投稿の時刻以降になるまでビルドから除外することができます。Jekyll 3では、これは修正されています。&lt;strong&gt;現在、 &lt;code&gt;--future&lt;/code&gt; はデフォルトで無効になっています。&lt;/strong&gt;この手段は、あなたは含める必要があります &lt;code&gt;--future&lt;/code&gt; をあなたが実行しているとき、あなたの将来時代遅れの記事を生成する場合は &lt;code&gt;jekyll build&lt;/code&gt; または &lt;code&gt;jekyll serve&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="328adde85e30d2d7abcacb7a755b6f397f085ca0" translate="yes" xml:space="preserve">
          <source>A static file is a file that does not contain any YAML front matter. These include images, PDFs, and other un-rendered content.</source>
          <target state="translated">静的ファイルはYAMLフロントマターを含まないファイルです。これらには画像、PDF、その他のレンダリングされていないコンテンツが含まれます。</target>
        </trans-unit>
        <trans-unit id="d838502181f624e84d0389a01cd7543055c1b733" translate="yes" xml:space="preserve">
          <source>A subset of `site.pages` listing those which end in `.html`.</source>
          <target state="translated">site.pages` のサブセットで、`.html` で終わるものをリストアップする。</target>
        </trans-unit>
        <trans-unit id="c5c34f9420142f890d6602c596221e5b1dbf8eb5" translate="yes" xml:space="preserve">
          <source>A subset of `site.static_files` listing those which end in `.html`.</source>
          <target state="translated">site.static_files` のサブセットで、`.html` で終わるものをリストアップします。</target>
        </trans-unit>
        <trans-unit id="b3abb0809c90da0ebb883564d592eef5d720ff6b" translate="yes" xml:space="preserve">
          <source>A typical post</source>
          <target state="translated">典型的なポスト</target>
        </trans-unit>
        <trans-unit id="2af461e0d4659ced54f6fe2ee344a8b6e8ae37d6" translate="yes" xml:space="preserve">
          <source>A way to &lt;a href=&quot;https://github.com/rfelix/jekyll_ext&quot;&gt;extend Jekyll&lt;/a&gt; without forking and modifying the Jekyll gem codebase and some &lt;a href=&quot;https://wiki.github.com/rfelix/jekyll_ext/extensions&quot;&gt;portable Jekyll extensions&lt;/a&gt; that can be reused and shared.</source>
          <target state="translated">方法&lt;a href=&quot;https://github.com/rfelix/jekyll_ext&quot;&gt;ジキルを拡張&lt;/a&gt;ジキル宝石のコードベースといくつかのフォークと変更することなく、&lt;a href=&quot;https://wiki.github.com/rfelix/jekyll_ext/extensions&quot;&gt;ポータブルジキル拡張&lt;/a&gt;再利用および共有することができます。</target>
        </trans-unit>
        <trans-unit id="afb337a1111f37a796eb4f9a4f0fa946ddf7bd59" translate="yes" xml:space="preserve">
          <source>About Bundler</source>
          <target state="translated">バンドラについて</target>
        </trans-unit>
        <trans-unit id="b1d3baffa98fd693985cedf21f955cdc100b5e99" translate="yes" xml:space="preserve">
          <source>Absolute Permalinks</source>
          <target state="translated">絶対パーマリンク</target>
        </trans-unit>
        <trans-unit id="b502958a0e77475e31de65e691c85d2f392a1bab" translate="yes" xml:space="preserve">
          <source>Absolute permalinks will be required in v3.0 and on</source>
          <target state="translated">v3.0 以降では、絶対的なパーマリンクが必要になります。</target>
        </trans-unit>
        <trans-unit id="3e8502a55a293e1a1c2ef614f210b025219f78ed" translate="yes" xml:space="preserve">
          <source>Accessing Collection Attributes</source>
          <target state="translated">コレクション属性へのアクセス</target>
        </trans-unit>
        <trans-unit id="f5c53501feaa60f254c524f680a6c20f472e4fc0" translate="yes" xml:space="preserve">
          <source>Add and configure the Jekyll action and save the pipeline</source>
          <target state="translated">Jekyllアクションの追加と設定、パイプラインの保存</target>
        </trans-unit>
        <trans-unit id="b41fad6b9ac949f078eb80e6c34f01b11cfad580" translate="yes" xml:space="preserve">
          <source>Add front matter to static files</source>
          <target state="translated">静的ファイルにフロントマターを追加</target>
        </trans-unit>
        <trans-unit id="84f4c3ccafa877eb4e866e9595b7abae957c481b" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;deploy&lt;/code&gt; script to the site source folder:</source>
          <target state="translated">&lt;code&gt;deploy&lt;/code&gt; スクリプトをサイトのソースフォルダーに追加します。</target>
        </trans-unit>
        <trans-unit id="fe57193720bbd616ce3fef405cadf8ed27d4c68e" translate="yes" xml:space="preserve">
          <source>Add the following to the Gemfile for your site if you have issues with auto-regeneration on Windows alone:</source>
          <target state="translated">Windowsだけでは自動再生に問題がある場合は、以下をサイトのGemfileに追加してください。</target>
        </trans-unit>
        <trans-unit id="c71502a6538ceff0366e657e0b8f7db824dbdaa2" translate="yes" xml:space="preserve">
          <source>Add the following to your site&amp;rsquo;s &lt;code&gt;_config.yml&lt;/code&gt; file, replacing &lt;code&gt;my_collection&lt;/code&gt; with the name of your collection:</source>
          <target state="translated">以下をサイトの &lt;code&gt;_config.yml&lt;/code&gt; ファイルに追加します &lt;code&gt;my_collection&lt;/code&gt; をコレクションの名前に置き換えます。</target>
        </trans-unit>
        <trans-unit id="c64383509764941cc1f52bc544e663fd7567b391" translate="yes" xml:space="preserve">
          <source>Add the following to your site&amp;rsquo;s &lt;code&gt;_config.yml&lt;/code&gt; to activate the theme:</source>
          <target state="translated">以下をサイトの &lt;code&gt;_config.yml&lt;/code&gt; に追加して、テーマをアクティブ化します。</target>
        </trans-unit>
        <trans-unit id="fa3882a590b3b139b4e5d7923ae5109c7d1c0796" translate="yes" xml:space="preserve">
          <source>Add the relevant plugins to a Bundler group in your &lt;code&gt;Gemfile&lt;/code&gt;. An example:</source>
          <target state="translated">&lt;code&gt;Gemfile&lt;/code&gt; の Bundlerグループに関連するプラグインを追加します。例：</target>
        </trans-unit>
        <trans-unit id="2219ea42ee84172bcb084024fa5163336870c56f" translate="yes" xml:space="preserve">
          <source>Add the theme to your site&amp;rsquo;s &lt;code&gt;Gemfile&lt;/code&gt;:</source>
          <target state="translated">テーマをサイトの &lt;code&gt;Gemfile&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="971dbef34b653028cbba9681864b5da12b45f6ab" translate="yes" xml:space="preserve">
          <source>Add your template files in the corresponding folders. Then complete the &lt;code&gt;.gemspec&lt;/code&gt; and the README files according to your needs.</source>
          <target state="translated">テンプレートファイルを対応するフォルダーに追加します。次に、必要に応じて &lt;code&gt;.gemspec&lt;/code&gt; ファイルとREADMEファイルを完成させます。</target>
        </trans-unit>
        <trans-unit id="bf6de003b75f0f6cd4a706292c15739756265d35" translate="yes" xml:space="preserve">
          <source>Adding Ajax pagination to Jekyll</source>
          <target state="translated">JekyllにAjaxのページネーションを追加する</target>
        </trans-unit>
        <trans-unit id="1ca7175ca03271b95fa95b8d0d9ff845a1d415ca" translate="yes" xml:space="preserve">
          <source>Adding a screenshot</source>
          <target state="translated">スクリーンショットの追加</target>
        </trans-unit>
        <trans-unit id="20475ab8e91f1fdad1d1b80947bd43193e04fd6f" translate="yes" xml:space="preserve">
          <source>Additionally, you might need to change the code page of the console window to UTF-8 in case you get a &amp;ldquo;Liquid Exception: Incompatible character encoding&amp;rdquo; error during the site generation process. It can be done with the following command:</source>
          <target state="translated">さらに、サイト生成プロセス中に「Liquid Exception：Incompatible character encoding」エラーが発生した場合に備えて、コンソールウィンドウのコードページをUTF-8に変更する必要がある場合があります。次のコマンドで実行できます。</target>
        </trans-unit>
        <trans-unit id="f30abf38c3188fb908b2a337fb4ea52076ac2dcb" translate="yes" xml:space="preserve">
          <source>Advanced users (with more complex needs) may find it helpful to choose one of a number of Ruby version managers (&lt;a href=&quot;https://rvm.io&quot;&gt;RVM&lt;/a&gt;, &lt;a href=&quot;http://rbenv.org&quot;&gt;rbenv&lt;/a&gt;, &lt;a href=&quot;https://github.com/postmodern/chruby&quot;&gt;chruby&lt;/a&gt;, &lt;a href=&quot;https://github.com/rvm/rvm/blob/master/docs/alt.md&quot;&gt;etc&lt;/a&gt;.) in which to install Jekyll.</source>
          <target state="translated">（より複雑なニーズを持つ）上級ユーザーは、Rubyのバージョン管理職の数のいずれかを選択することが役に立つかもしれません（&lt;a href=&quot;https://rvm.io&quot;&gt;RVM&lt;/a&gt;、&lt;a href=&quot;http://rbenv.org&quot;&gt;rbenv&lt;/a&gt;、&lt;a href=&quot;https://github.com/postmodern/chruby&quot;&gt;chruby&lt;/a&gt;、&lt;a href=&quot;https://github.com/rvm/rvm/blob/master/docs/alt.md&quot;&gt;など&lt;/a&gt;。）ジキルをインストールするには。</target>
        </trans-unit>
        <trans-unit id="755a34b0c02ff2727f5d67028e27305f28f6589d" translate="yes" xml:space="preserve">
          <source>Aerobatic</source>
          <target state="translated">Aerobatic</target>
        </trans-unit>
        <trans-unit id="ef9c6fcd7c1a1b44af15508a26aeb469cfef4109" translate="yes" xml:space="preserve">
          <source>After rendering a document, but before writing it to disk</source>
          <target state="translated">ドキュメントをレンダリングした後、ディスクに書き込む前に</target>
        </trans-unit>
        <trans-unit id="d7ab1d8103e1a17bdf88e57895dd6384c470b65b" translate="yes" xml:space="preserve">
          <source>After rendering a page, but before writing it to disk</source>
          <target state="translated">ページをレンダリングした後、ディスクに書き込む前に</target>
        </trans-unit>
        <trans-unit id="d202b478a969714abee61c053415350b96b2fb74" translate="yes" xml:space="preserve">
          <source>After rendering a post, but before writing it to disk</source>
          <target state="translated">投稿をレンダリングした後、ディスクに書き込む前に</target>
        </trans-unit>
        <trans-unit id="7564dd5a2471f959904fcf75761de6bdf462cad8" translate="yes" xml:space="preserve">
          <source>After rendering the whole site, but before writing any files</source>
          <target state="translated">サイト全体をレンダリングした後、ファイルを書き込む前に</target>
        </trans-unit>
        <trans-unit id="897128a19b28253e9f056f2918ba7df73587ea3c" translate="yes" xml:space="preserve">
          <source>After site data has been read and loaded from disk</source>
          <target state="translated">サイトデータが読み込まれ、ディスクからロードされた後</target>
        </trans-unit>
        <trans-unit id="5929fa7e64e12070c89e5090b96b58433910d318" translate="yes" xml:space="preserve">
          <source>After this process you should have github-pages installed on your system and you can host your blog again with &lt;code&gt;jekyll s&lt;/code&gt;. There will be a warning on startup that you should include &lt;code&gt;gem 'wdm', '&amp;gt;= 0.1.0' if Gem.win_platform?&lt;/code&gt; to your &lt;code&gt;Gemfile&lt;/code&gt; but I could not get &lt;code&gt;jekyll s&lt;/code&gt; working if I include that line so for the moment I ignore that warning.</source>
          <target state="translated">このプロセスが完了すると、システムにgithub-pagesがインストールされ、 &lt;code&gt;jekyll s&lt;/code&gt; を使用してブログを再びホストできるようになります。起動時に、 &lt;code&gt;gem 'wdm', '&amp;gt;= 0.1.0' if Gem.win_platform?&lt;/code&gt; を含める必要があるという警告が表示されますか？あなたの &lt;code&gt;Gemfile&lt;/code&gt; に追加しましたが、その行を含めても &lt;code&gt;jekyll s&lt;/code&gt; を機能させることができなかったため、当面はその警告を無視します。</target>
        </trans-unit>
        <trans-unit id="886ec584a83b15dd9817c8ecac7a7879cbce7d88" translate="yes" xml:space="preserve">
          <source>After writing a document to disk</source>
          <target state="translated">文書をディスクに書き込んだ後</target>
        </trans-unit>
        <trans-unit id="9835994edd8b3ae8db68422bd469db11b3e862f7" translate="yes" xml:space="preserve">
          <source>After writing a page to disk</source>
          <target state="translated">ページをディスクに書き込んだ後</target>
        </trans-unit>
        <trans-unit id="481b8884a9a7cdb6b4030c8e4b4448f58a7569c7" translate="yes" xml:space="preserve">
          <source>After writing a post to disk</source>
          <target state="translated">投稿をディスクに書き込んだ後</target>
        </trans-unit>
        <trans-unit id="51a62527299e55b98f5539021d4f4f68372d8ff3" translate="yes" xml:space="preserve">
          <source>After writing the whole site to disk</source>
          <target state="translated">サイト全体をディスクに書き込んだ後</target>
        </trans-unit>
        <trans-unit id="bf557db58a2f96efac891ef714414ae3f6fb23d6" translate="yes" xml:space="preserve">
          <source>All blog post files must begin with &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;. After that, it&amp;rsquo;s simply a matter of deciding which format you prefer. Jekyll supports &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; out of the box, and has &lt;a href=&quot;../plugins/index#converters-1&quot;&gt;myriad extensions for other formats as well&lt;/a&gt;, including the popular &lt;a href=&quot;http://redcloth.org/textile&quot;&gt;Textile&lt;/a&gt; format. These formats each have their own way of marking up different types of content within a post, so you should familiarize yourself with these formats and decide which one best suits your needs.</source>
          <target state="translated">すべてのブログ投稿ファイルは&lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matterで&lt;/a&gt;始まる必要があります。その後は、どちらの形式を使用するかを決めるだけです。Jekyll はそのままの状態で&lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdownを&lt;/a&gt;サポートし、人気のある&lt;a href=&quot;http://redcloth.org/textile&quot;&gt;Textile&lt;/a&gt;フォーマットを含む&lt;a href=&quot;../plugins/index#converters-1&quot;&gt;他のフォーマットにも無数の拡張機能を&lt;/a&gt;備えています。これらの形式にはそれぞれ、投稿内の異なるタイプのコンテンツをマークアップする独自の方法があるため、これらの形式に慣れ、ニーズに最適な形式を決定する必要があります。</target>
        </trans-unit>
        <trans-unit id="91faee100cd6a74cbad7180478b88aecbbc01bf7" translate="yes" xml:space="preserve">
          <source>All files in &lt;code&gt;/assets&lt;/code&gt; will be output into the compiled site in the &lt;code&gt;/assets&lt;/code&gt; folder just as you&amp;rsquo;d expect from using Jekyll on your sites.</source>
          <target state="translated">&lt;code&gt;/assets&lt;/code&gt; 内のすべてのファイルは、サイトでJekyllを使用する場合と同じように、 &lt;code&gt;/assets&lt;/code&gt; フォルダー内のコンパイル済みサイトに出力されます。</target>
        </trans-unit>
        <trans-unit id="78c77574c64a445078cc9eae10e36be61a650830" translate="yes" xml:space="preserve">
          <source>All my posts are gone! Where&amp;rsquo;d they go!</source>
          <target state="translated">私の投稿はすべてなくなりました！彼らはどこに行きましたか！</target>
        </trans-unit>
        <trans-unit id="60c6ee391ba07144418d2ebfff49970a9a837a3e" translate="yes" xml:space="preserve">
          <source>All of Jekyll&amp;rsquo;s gem dependencies are automatically installed by the above command, so you won&amp;rsquo;t have to worry about them at all.</source>
          <target state="translated">Jekyllのgem依存関係はすべて、上記のコマンドによって自動的にインストールされるため、それらについて心配する必要はまったくありません。</target>
        </trans-unit>
        <trans-unit id="4d88b236d0eba41daea8f660d50fcc878fc811cf" translate="yes" xml:space="preserve">
          <source>All other extensions retain their usual names from Redcarpet, and no renderer options aside from &lt;code&gt;smart&lt;/code&gt; can be specified in Jekyll. &lt;a href=&quot;https://github.com/vmg/redcarpet/blob/v3.2.2/README.markdown#and-its-like-really-simple-to-use&quot;&gt;A list of available extensions can be found in the Redcarpet README file.&lt;/a&gt; Make sure you&amp;rsquo;re looking at the README for the right version of Redcarpet: Jekyll currently uses v3.2.x. The most commonly used extensions are:</source>
          <target state="translated">他のすべての拡張機能はRedcarpetの通常の名前を保持し、 &lt;code&gt;smart&lt;/code&gt; 以外のレンダラーオプションをJekyllで指定することはできません。&lt;a href=&quot;https://github.com/vmg/redcarpet/blob/v3.2.2/README.markdown#and-its-like-really-simple-to-use&quot;&gt;利用可能な拡張機能のリストは、Redcarpet READMEファイルにあります。&lt;/a&gt;Redcarpetの正しいバージョンのREADMEを確認していることを確認してください。Jekyllは現在v3.2.xを使用しています。最も一般的に使用される拡張機能は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="f8d185bc3694a3e448a4e2a25b1114302ca151d8" translate="yes" xml:space="preserve">
          <source>All page and post URLs contain leading slashes</source>
          <target state="translated">すべてのページと投稿のURLには、先頭にスラッシュが含まれています。</target>
        </trans-unit>
        <trans-unit id="1122aae9bbe2eaf4aaecce93c58bbde5bb445e3a" translate="yes" xml:space="preserve">
          <source>All the other capabilities of the &lt;code&gt;include&lt;/code&gt; tag are available to the &lt;code&gt;include_relative&lt;/code&gt; tag, such as variables.</source>
          <target state="translated">変数など、 &lt;code&gt;include&lt;/code&gt; タグのその他の機能はすべて &lt;code&gt;include_relative&lt;/code&gt; タグで使用できます。</target>
        </trans-unit>
        <trans-unit id="d378be50cae5457b8baf789117cd39999b4d5d9b" translate="yes" xml:space="preserve">
          <source>All the variables set via the command line and your &lt;code&gt;_config.yml&lt;/code&gt; are available through the &lt;code&gt;site&lt;/code&gt; variable. For example, if you have &lt;code&gt;foo: bar&lt;/code&gt; in your configuration file, then it will be accessible in Liquid as &lt;code&gt;site.foo&lt;/code&gt;. Jekyll does not parse changes to &lt;code&gt;_config.yml&lt;/code&gt; in &lt;code&gt;watch&lt;/code&gt; mode, you must restart Jekyll to see changes to variables.</source>
          <target state="translated">コマンドラインと &lt;code&gt;_config.yml&lt;/code&gt; を介して設定されたすべての変数は、 &lt;code&gt;site&lt;/code&gt; 変数を通じて利用できます。たとえば、設定ファイルに &lt;code&gt;foo: bar&lt;/code&gt; がある場合、Liquidで &lt;code&gt;site.foo&lt;/code&gt; としてアクセスできます。 Jekyllは、 &lt;code&gt;watch&lt;/code&gt; モードでは &lt;code&gt;_config.yml&lt;/code&gt; への変更を解析しません。変数への変更を確認するには、Jekyllを再起動する必要があります。</target>
        </trans-unit>
        <trans-unit id="adc02f50158fdc098388d59e6304c45fe52302d1" translate="yes" xml:space="preserve">
          <source>Already Have Jekyll?</source>
          <target state="translated">すでにジキルを持っていますか?</target>
        </trans-unit>
        <trans-unit id="d503c92410c50ea02e4603e5fc3386c2d064fce5" translate="yes" xml:space="preserve">
          <source>Also, as with any output generated by Liquid tags, you can pass the &lt;code&gt;| strip_html&lt;/code&gt; filter to remove any html tags in the output. This is particularly helpful if you wish to output a post excerpt as a &lt;code&gt;meta=&quot;description&quot;&lt;/code&gt; tag within the post &lt;code&gt;head&lt;/code&gt;, or anywhere else having html tags along with the content is not desirable.</source>
          <target state="translated">また、Liquidタグによって生成される出力と同様に、 &lt;code&gt;| strip_html&lt;/code&gt; を渡すことができます。出力からhtmlタグを削除するstrip_htmlフィルター。これは、投稿の抜粋を &lt;code&gt;meta=&quot;description&quot;&lt;/code&gt; タグとして投稿 &lt;code&gt;head&lt;/code&gt; 内に出力する場合や、コンテンツと一緒にhtmlタグを持つことが望ましくない場合に特に役立ちます。</target>
        </trans-unit>
        <trans-unit id="bd18d660c73deaf1549475894258845fe45fa309" translate="yes" xml:space="preserve">
          <source>Alternative Markdown Processors</source>
          <target state="translated">代替マークダウンプロセッサ</target>
        </trans-unit>
        <trans-unit id="689b471121f0d1336ad6764642335bc4b2f923a4" translate="yes" xml:space="preserve">
          <source>Alternatively, Homebrew can be installed and used to set up Ruby. This can be done as follows:</source>
          <target state="translated">あるいは、HomebrewをインストールしてRubyの設定に使用することもできます。これは以下のように行うことができます。</target>
        </trans-unit>
        <trans-unit id="752463599279feea158406a482726ac34466d6b8" translate="yes" xml:space="preserve">
          <source>Alternatively, if you don&amp;rsquo;t have Bundler installed run:</source>
          <target state="translated">または、Bundlerがインストールされていない場合は、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="2349f9e6e5c030547864212af7664d8a404a0e93" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use &lt;a href=&quot;http://pygments.org&quot;&gt;Pygments&lt;/a&gt; to highlight your code snippets. To use Pygments, you must have Python installed on your system, have the &lt;code&gt;pygments.rb&lt;/code&gt; gem installed and set &lt;code&gt;highlighter&lt;/code&gt; to &lt;code&gt;pygments&lt;/code&gt; in your site&amp;rsquo;s configuration file. Pygments supports &lt;a href=&quot;http://pygments.org/languages/&quot;&gt;over 100 languages&lt;/a&gt;</source>
          <target state="translated">または、&lt;a href=&quot;http://pygments.org&quot;&gt;Pygments&lt;/a&gt;を使用してコードスニペットを強調表示することもできます。Pygmentsを使用するには、Pythonがシステムにインストールされている必要があり、持っている &lt;code&gt;pygments.rb&lt;/code&gt; の宝石がインストールされ、セット &lt;code&gt;highlighter&lt;/code&gt; に &lt;code&gt;pygments&lt;/code&gt; サイトの設定ファイルインチ Pygmentsは&lt;a href=&quot;http://pygments.org/languages/&quot;&gt;100以上の言語を&lt;/a&gt;サポートしています</target>
        </trans-unit>
        <trans-unit id="c019888ab79e7eb314cd584121efed9f7f4388b3" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use an &lt;code&gt;rsync-exclude.txt&lt;/code&gt; file to control which files will be transferred to your server.</source>
          <target state="translated">または、 &lt;code&gt;rsync-exclude.txt&lt;/code&gt; ファイルを使用して、サーバーに転送するファイルを制御することもできます。</target>
        </trans-unit>
        <trans-unit id="24b24e2b6624536c7675b2a5de9f5a7e6006cd06" translate="yes" xml:space="preserve">
          <source>Although you can specify a custom permalink pattern using &lt;a href=&quot;#template-variables&quot;&gt;template variables&lt;/a&gt;, Jekyll also provides the following built-in styles for convenience.</source>
          <target state="translated">&lt;a href=&quot;#template-variables&quot;&gt;テンプレート変数&lt;/a&gt;を使用してカスタムのパーマリンクパターンを指定できますが、Jekyllには便利なように次の組み込みスタイルも用意されています。</target>
        </trans-unit>
        <trans-unit id="873e548a7f2a7b5faa2c9064a9c70744143d029a" translate="yes" xml:space="preserve">
          <source>Although you can&amp;rsquo;t directly add front matter values to static files, you can set front matter values through the &lt;a href=&quot;../configuration/index#front-matter-defaults&quot;&gt;defaults property&lt;/a&gt; in your configuration file. When Jekyll builds the site, it will use the front matter values you set.</source>
          <target state="translated">前置値を静的ファイルに直接追加することはできませんが、構成ファイルの&lt;a href=&quot;../configuration/index#front-matter-defaults&quot;&gt;defaultsプロパティを使用&lt;/a&gt;して前置値を設定できます。Jekyllがサイトを構築するとき、設定した前付けの値を使用します。</target>
        </trans-unit>
        <trans-unit id="7b11a4234011e35a6c31048c3a964862b6e69ee8" translate="yes" xml:space="preserve">
          <source>Amazon S3</source>
          <target state="translated">アマゾンS3</target>
        </trans-unit>
        <trans-unit id="adc114ec75b006aec502a0d460ab994f226b641a" translate="yes" xml:space="preserve">
          <source>An array of &lt;a href=&quot;#documents&quot;&gt;documents&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#documents&quot;&gt;ドキュメント&lt;/a&gt;の配列。</target>
        </trans-unit>
        <trans-unit id="8c5020196a0b2c3a2d8437789a7104af9bcf47d6" translate="yes" xml:space="preserve">
          <source>An array of static files in the collection.</source>
          <target state="translated">コレクション内の静的ファイルの配列。</target>
        </trans-unit>
        <trans-unit id="0b6191f14890b08f7c4d31a4de9339da589bfd13" translate="yes" xml:space="preserve">
          <source>An exception to the above rule are GitHub Pages sites, where the &lt;code&gt;--future&lt;/code&gt; flag remains &lt;em&gt;enabled&lt;/em&gt; by default to maintain historical consistency for those sites.</source>
          <target state="translated">上記のルールの例外は、GitHub Pagesサイトです。これらのサイトの履歴の一貫性を維持するために、 &lt;code&gt;--future&lt;/code&gt; フラグはデフォルトで&lt;em&gt;有効の&lt;/em&gt;ままです。</target>
        </trans-unit>
        <trans-unit id="5afc052f094bd3b6df4ee59c2c452389beeb7d08" translate="yes" xml:space="preserve">
          <source>An identifier unique to a document in a Collection or a Post (useful in RSS feeds). e.g. &lt;code&gt;/2008/12/14/my-post&lt;/code&gt;&lt;code&gt;/my-collection/my-document&lt;/code&gt;</source>
          <target state="translated">コレクションまたは投稿のドキュメントに固有の識別子（RSSフィードで役立ちます）。例 &lt;code&gt;/2008/12/14/my-post&lt;/code&gt; &lt;code&gt;/my-collection/my-document&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a9ee610414828f966b8a4ee07139a48b12331b8" translate="yes" xml:space="preserve">
          <source>An overview of what each of these does:</source>
          <target state="translated">それぞれが何をしているのか、その概要をご紹介します。</target>
        </trans-unit>
        <trans-unit id="633bee2f4a585a755a76df01b80499e81eae6285" translate="yes" xml:space="preserve">
          <source>And the output will look like this:</source>
          <target state="translated">そして、出力はこんな感じになります。</target>
        </trans-unit>
        <trans-unit id="cd03df56232eca270d46a9e42bc65110d684def4" translate="yes" xml:space="preserve">
          <source>And we would get something like this on the page:</source>
          <target state="translated">そして、このページにはこんなものが掲載されています。</target>
        </trans-unit>
        <trans-unit id="208dc303a4eb1714ec4555438219b17cd54a3f68" translate="yes" xml:space="preserve">
          <source>Another way to deploy your Jekyll site is to use &lt;a href=&quot;https://github.com/ruby/rake&quot;&gt;Rake&lt;/a&gt;, &lt;a href=&quot;https://github.com/JEG2/highline&quot;&gt;HighLine&lt;/a&gt;, and &lt;a href=&quot;https://github.com/net-ssh/net-ssh&quot;&gt;Net::SSH&lt;/a&gt;. A more complex example of deploying Jekyll with Rake that deals with multiple branches can be found in &lt;a href=&quot;https://github.com/gitready/gitready/blob/cdfbc4ec5321ff8d18c3ce936e9c749dbbc4f190/Rakefile&quot;&gt;Git Ready&lt;/a&gt;.</source>
          <target state="translated">Jekyllサイトをデプロイするもう1つの方法は、&lt;a href=&quot;https://github.com/ruby/rake&quot;&gt;Rake&lt;/a&gt;、&lt;a href=&quot;https://github.com/JEG2/highline&quot;&gt;HighLine&lt;/a&gt;、および&lt;a href=&quot;https://github.com/net-ssh/net-ssh&quot;&gt;Net :: SSH&lt;/a&gt;を使用することです。複数のブランチを処理するJekyllとRakeのデプロイのより複雑な例は、&lt;a href=&quot;https://github.com/gitready/gitready/blob/cdfbc4ec5321ff8d18c3ce936e9c749dbbc4f190/Rakefile&quot;&gt;Git Readyにあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="7b448f7cf6a754d670a2f73d7378055efc98974b" translate="yes" xml:space="preserve">
          <source>Any HTML file on your site can use layouts and/or includes, even the homepage. Common content, like headers and footers, make excellent candidates for extraction into a layout.</source>
          <target state="translated">あなたのサイト上のどのようなHTMLファイルでも、レイアウトやインクルード、さらにはホームページを使用することができます。ヘッダーやフッターのような一般的なコンテンツは、レイアウトへの抽出に最適な候補となります。</target>
        </trans-unit>
        <trans-unit id="d3985cf75e0b3f33f761c21748c88182e9d2a364" translate="yes" xml:space="preserve">
          <source>Any custom front matter that you specify will be available under &lt;code&gt;page&lt;/code&gt;. For example, if you specify &lt;code&gt;custom_css: true&lt;/code&gt; in a page&amp;rsquo;s front matter, that value will be available as &lt;code&gt;page.custom_css&lt;/code&gt;.</source>
          <target state="translated">指定したカスタム前付けは、 &lt;code&gt;page&lt;/code&gt; 下にあります。たとえば、ページの前 &lt;code&gt;custom_css: true&lt;/code&gt; を指定した場合、その値は &lt;code&gt;page.custom_css&lt;/code&gt; として使用できます。</target>
        </trans-unit>
        <trans-unit id="cd37b30357aea397984ea94335ee78e9a4a0bfa5" translate="yes" xml:space="preserve">
          <source>Any file in &lt;code&gt;/assets&lt;/code&gt; will be copied over to the user&amp;rsquo;s site upon build unless they have a file with the same relative path. You can ship any kind of asset here: SCSS, an image, a webfont, etc. These files behave like pages and static files in Jekyll:</source>
          <target state="translated">内のすべてのファイル &lt;code&gt;/assets&lt;/code&gt; 、彼らが同じ相対パスでファイルを持っていない限り、ビルド時にユーザのサイトにコピーされます。SCSS、画像、ウェブフォントなど、あらゆる種類のアセットをここで出荷できます。これらのファイルは、Jekyllのページや静的ファイルのように動作します。</target>
        </trans-unit>
        <trans-unit id="321beaa0994440152f2be07e3aab0b1473e3b3c6" translate="yes" xml:space="preserve">
          <source>Any variables in the front matter that are not predefined are mixed into the data that is sent to the Liquid templating engine during the conversion. For instance, if you set a title, you can use that in your layout to set the page title:</source>
          <target state="translated">フロントマターの中で事前に定義されていない変数は、変換中にリキッドのテンプテーションエンジンに送信されるデータに混合されます。例えば、タイトルを設定しておけば、レイアウトの中でそれを使ってページタイトルを設定することができます。</target>
        </trans-unit>
        <trans-unit id="0b5958b0f53cb499388dd9ee04a106a30b02c5d1" translate="yes" xml:space="preserve">
          <source>Apache</source>
          <target state="translated">Apache</target>
        </trans-unit>
        <trans-unit id="9e97017465836c5bab60a857a99f27a89c7973cf" translate="yes" xml:space="preserve">
          <source>As a result, the following command line flags are now deprecated:</source>
          <target state="translated">その結果、以下のコマンドラインフラグは非推奨となりました。</target>
        </trans-unit>
        <trans-unit id="755708c2793ecf0511b2cd1e15646ec6ef0db2fa" translate="yes" xml:space="preserve">
          <source>As explained on the &lt;a href=&quot;../structure/index&quot;&gt;directory structure&lt;/a&gt; page, the &lt;code&gt;_data&lt;/code&gt; folder is where you can store additional data for Jekyll to use when generating your site. These files must be YAML, JSON, or CSV files (using either the &lt;code&gt;.yml&lt;/code&gt;, &lt;code&gt;.yaml&lt;/code&gt;, &lt;code&gt;.json&lt;/code&gt; or &lt;code&gt;.csv&lt;/code&gt; extension), and they will be accessible via &lt;code&gt;site.data&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../structure/index&quot;&gt;ディレクトリ構造の&lt;/a&gt;ページで説明したように、 &lt;code&gt;_data&lt;/code&gt; フォルダーには、Jekyllがサイトを生成するときに使用する追加のデータを保存できます。これらのファイルはYAML、JSON、またはCSVファイル（いずれかを使用しなければなりません &lt;code&gt;.yml&lt;/code&gt; 、 &lt;code&gt;.yaml&lt;/code&gt; 、 &lt;code&gt;.json&lt;/code&gt; または &lt;code&gt;.csv&lt;/code&gt; 拡張子）、そして彼らがされ、アクセス可能になります &lt;code&gt;site.data&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b180a13d087573e69d428fe5ff542d569b07fc6" translate="yes" xml:space="preserve">
          <source>As explained on the &lt;a href=&quot;../structure/index&quot;&gt;directory structure&lt;/a&gt; page, the &lt;code&gt;_posts&lt;/code&gt; folder is where your blog posts will live. These files are generally &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; or HTML, but can be other formats with the proper converter installed. All posts must have &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;, and they will be converted from their source format into an HTML page that is part of your static site.</source>
          <target state="translated">&lt;a href=&quot;../structure/index&quot;&gt;ディレクトリ構造の&lt;/a&gt;ページで説明したように、 &lt;code&gt;_posts&lt;/code&gt; フォルダーはブログ投稿が保存される場所です。これらのファイルは通常&lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;またはHTML ですが、適切なコンバーターがインストールされている他の形式にすることもできます。すべての投稿には&lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;が必要です。投稿はソース形式から静的サイトの一部であるHTMLページに変換されます。</target>
        </trans-unit>
        <trans-unit id="76168d40c343432b229802228c1aaf4d943daf93" translate="yes" xml:space="preserve">
          <source>As mentioned earlier, you can set multiple scope/values pairs for &lt;code&gt;defaults&lt;/code&gt;.</source>
          <target state="translated">前述のように、 &lt;code&gt;defaults&lt;/code&gt; 複数のスコープ/値のペアを設定できます。</target>
        </trans-unit>
        <trans-unit id="ee7a589d4391ce8e2e3ae91d50815186ce8a2444" translate="yes" xml:space="preserve">
          <source>As of version 2.5.0, Jekyll can be extended with plugins which provide subcommands for the &lt;code&gt;jekyll&lt;/code&gt; executable. This is possible by including the relevant plugins in a &lt;code&gt;Gemfile&lt;/code&gt; group called &lt;code&gt;:jekyll_plugins&lt;/code&gt;:</source>
          <target state="translated">バージョン2.5.0のように、ジキルのためのサブコマンドを提供するプラグインで拡張することができる &lt;code&gt;jekyll&lt;/code&gt; 実行。これは、 &lt;code&gt;:jekyll_plugins&lt;/code&gt; という &lt;code&gt;Gemfile&lt;/code&gt; グループに関連するプラグインを含めることで可能になります。</target>
        </trans-unit>
        <trans-unit id="ce7eb874b965ae11567e47490249afec01be8a6e" translate="yes" xml:space="preserve">
          <source>As with posts, if you use a permalink style that omits the &lt;code&gt;.html&lt;/code&gt; file extension, each page is rendered as an &lt;code&gt;index.html&lt;/code&gt; file inserted inside a folder with the page&amp;rsquo;s name (for example, &lt;code&gt;mypage/index.html&lt;/code&gt;).</source>
          <target state="translated">投稿と同様に、 &lt;code&gt;.html&lt;/code&gt; ファイル拡張子を省略したパーマリンクスタイルを使用すると、各ページは、ページの名前が付いたフォルダー内に挿入された &lt;code&gt;index.html&lt;/code&gt; ファイルとしてレンダリングされます（たとえば、 &lt;code&gt;mypage/index.html&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="20e338624cee29d0effead85b0dd0e70de783b4c" translate="yes" xml:space="preserve">
          <source>Assets</source>
          <target state="translated">Assets</target>
        </trans-unit>
        <trans-unit id="b5e18f3241efb41114c45ed9134f7980db2d7439" translate="yes" xml:space="preserve">
          <source>At a minimum, liquid tags must implement:</source>
          <target state="translated">最低限、液体タグは実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="a086d942884a301b827479029ba19c2746237425" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="translated">Attribute</target>
        </trans-unit>
        <trans-unit id="355c2077b560e925ae933915dfa3935dfa97c70f" translate="yes" xml:space="preserve">
          <source>Attributes from the YAML front matter can be accessed as data anywhere in the site. Using the above example for configuring a collection as &lt;code&gt;site.albums&lt;/code&gt;, you might have front matter in an individual file structured as follows (which must use a supported markup format, and cannot be saved with a &lt;code&gt;.yaml&lt;/code&gt; extension):</source>
          <target state="translated">YAMLの前付けの属性は、サイト内のどこからでもデータとしてアクセスできます。上記の例を使用してコレクションを &lt;code&gt;site.albums&lt;/code&gt; として構成すると、次のように構造化された個々のファイルに前付けがある場合があります（サポートされるマークアップ形式を使用する必要があり、 &lt;code&gt;.yaml&lt;/code&gt; 拡張子を付けて保存することはできません）。</target>
        </trans-unit>
        <trans-unit id="135ea87ad0fc3ef501930be4d71ff3e17f9d4a5a" translate="yes" xml:space="preserve">
          <source>Auto Regeneration</source>
          <target state="translated">自動再生</target>
        </trans-unit>
        <trans-unit id="7f9f1e8126398f44765ef174b5636ce8d8fa5fa2" translate="yes" xml:space="preserve">
          <source>Automated methods</source>
          <target state="translated">自動化された方法</target>
        </trans-unit>
        <trans-unit id="639ff1200ae9aa990621d03c805e12cf4210c494" translate="yes" xml:space="preserve">
          <source>Automating the deployment of a Jekyll site is simple. See their &lt;a href=&quot;https://www.aerobatic.com/docs/static-site-generators/#jekyll&quot;&gt;Jekyll docs&lt;/a&gt; for more details. Your built &lt;code&gt;_site&lt;/code&gt; folder is deployed to their highly-available, globally distributed hosting service.</source>
          <target state="translated">Jekyllサイトのデプロイメントの自動化は簡単です。詳細については、&lt;a href=&quot;https://www.aerobatic.com/docs/static-site-generators/#jekyll&quot;&gt;Jekyllのドキュメント&lt;/a&gt;を参照してください。ビルドされた &lt;code&gt;_site&lt;/code&gt; フォルダーは、高可用性のグローバルに分散されたホスティングサービスにデプロイされます。</target>
        </trans-unit>
        <trans-unit id="c275699a9fcc5b1df221a4afe6ee0192241a51b8" translate="yes" xml:space="preserve">
          <source>Available Plugins</source>
          <target state="translated">利用可能なプラグイン</target>
        </trans-unit>
        <trans-unit id="732a155661e05a886687f639416e60b205801144" translate="yes" xml:space="preserve">
          <source>Base-URL Problems</source>
          <target state="translated">ベースURLの問題</target>
        </trans-unit>
        <trans-unit id="6ac5268828bd558bfbe679df5b1fc282b7264126" translate="yes" xml:space="preserve">
          <source>Baseurl</source>
          <target state="translated">Baseurl</target>
        </trans-unit>
        <trans-unit id="b20cbc384159fd820ed034fd3615298ec09f5902" translate="yes" xml:space="preserve">
          <source>Basic Usage</source>
          <target state="translated">基本的な使い方</target>
        </trans-unit>
        <trans-unit id="e41e3981f0c3e84bf0771a32e884d519f60e7d63" translate="yes" xml:space="preserve">
          <source>Be aware of character sets</source>
          <target state="translated">キャラクターセットを意識する</target>
        </trans-unit>
        <trans-unit id="a091ac0e36d137ef58780801d9d9ab384cf11625" translate="yes" xml:space="preserve">
          <source>Be aware of these messages if you wish to avoid certain death.</source>
          <target state="translated">特定の死を避けたい場合は、これらのメッセージに注意してください。</target>
        </trans-unit>
        <trans-unit id="2defb54705edcfb612c59a1d2263b92dd0a57703" translate="yes" xml:space="preserve">
          <source>Be sure to exclude &lt;code&gt;vendor&lt;/code&gt; from your &lt;code&gt;_config.yml&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; から &lt;code&gt;vendor&lt;/code&gt; を必ず除外してください</target>
        </trans-unit>
        <trans-unit id="613a0eb5cad777c168f393ad021f7109032eab40" translate="yes" xml:space="preserve">
          <source>Be sure to move posts into custom collections directory</source>
          <target state="translated">カスタムコレクションのディレクトリに投稿を移動してください。</target>
        </trans-unit>
        <trans-unit id="77d9037660c9adfeeab8fb0fd1207a67dcca339c" translate="yes" xml:space="preserve">
          <source>Be sure to name your directories correctly</source>
          <target state="translated">ディレクトリの名前を正しく付けてください。</target>
        </trans-unit>
        <trans-unit id="8f773e88487ad00bf7964e99fba2175c4d9f1a3c" translate="yes" xml:space="preserve">
          <source>Be sure to run &lt;code&gt;bundle update&lt;/code&gt; often.</source>
          <target state="translated">&lt;code&gt;bundle update&lt;/code&gt; 頻繁に実行してください。</target>
        </trans-unit>
        <trans-unit id="8cdb8c79d04d4c7da9fea4412e983f2a65ca07b9" translate="yes" xml:space="preserve">
          <source>Because Jekyll grabs the first paragraph you will not need to wrap the excerpt in &lt;code&gt;p&lt;/code&gt; tags, which is already done for you. These tags can be removed with the following if you&amp;rsquo;d prefer:</source>
          <target state="translated">Jekyllが最初の段落を取得するため、抜粋を &lt;code&gt;p&lt;/code&gt; タグでラップする必要はありません。これは既に行われています。これらのタグは、必要に応じて次の方法で削除できます。</target>
        </trans-unit>
        <trans-unit id="9d8d043ff085958741587b19763f0626a357071d" translate="yes" xml:space="preserve">
          <source>Before we dive in, go ahead and fetch the latest version of Jekyll:</source>
          <target state="translated">飛び込む前に ジキルの最新版を手に入れよう</target>
        </trans-unit>
        <trans-unit id="949e577706a9784386c559b8faada6b06afe303f" translate="yes" xml:space="preserve">
          <source>Before you start developing with Jekyll, you may want to check that you&amp;rsquo;re up to date with the latest version. To find your version of Jekyll, run one of these commands:</source>
          <target state="translated">Jekyllでの開発を始める前に、最新バージョンで最新であることを確認することをお勧めします。Jekyllのバージョンを確認するには、次のいずれかのコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="951e78e0b8dcc652a5ba804efa17db981e42b27c" translate="yes" xml:space="preserve">
          <source>Below is a converter that will take all posts ending in &lt;code&gt;.upcase&lt;/code&gt; and process them using the &lt;code&gt;UpcaseConverter&lt;/code&gt;:</source>
          <target state="translated">以下は、 &lt;code&gt;.upcase&lt;/code&gt; で終わるすべての投稿を取得し、 &lt;code&gt;UpcaseConverter&lt;/code&gt; を使用して処理するコンバータです。</target>
        </trans-unit>
        <trans-unit id="686594d5bdad0eca7d18c68dad80be5b7aa7a10a" translate="yes" xml:space="preserve">
          <source>Between these triple-dashed lines, you can set predefined variables (see below for a reference) or even create custom ones of your own. These variables will then be available to you to access using Liquid tags both further down in the file and also in any layouts or includes that the page or post in question relies on.</source>
          <target state="translated">これらの三重破線の間には、定義済みの変数を設定することができます(参考までに下記を参照)、独自のカスタム変数を作成することもできます。これらの変数は、Liquidタグを使用して、ファイル内のさらに下の方や、問題のページや投稿が依存しているレイアウトやインクルードの中でアクセスできるようになります。</target>
        </trans-unit>
        <trans-unit id="6eb86dfbd19335d4cb7ada8e4ed2e9ceb880f893" translate="yes" xml:space="preserve">
          <source>Beware the page one edge-case</source>
          <target state="translated">1ページ目のエッジケースに注意</target>
        </trans-unit>
        <trans-unit id="7dc2c48c5bd55af2199541c0acc52f3bd4b86561" translate="yes" xml:space="preserve">
          <source>Blog migrations</source>
          <target state="translated">ブログの移行</target>
        </trans-unit>
        <trans-unit id="a3f1b2d6402f6ef5b2c10b133db84c2f130c0147" translate="yes" xml:space="preserve">
          <source>Blogging with Git, Emacs and Jekyll</source>
          <target state="translated">Git、Emacs、Jekyll でブログを書く</target>
        </trans-unit>
        <trans-unit id="c313514a43c03233a10eee492ec7747bdc4a258b" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;../github-pages/index&quot;&gt;GitHub Pages&lt;/a&gt; and the Jekyll&amp;rsquo;s built-in WEBrick server handle these requests properly without any additional work.</source>
          <target state="translated">&lt;a href=&quot;../github-pages/index&quot;&gt;GitHub Pages&lt;/a&gt;とJekyllの組み込みWEBrickサーバーの両方が、追加の作業なしでこれらのリクエストを適切に処理します。</target>
        </trans-unit>
        <trans-unit id="fd88b40593be9f2a2e5bc98ed267c6d38aa245ef" translate="yes" xml:space="preserve">
          <source>Both methods work fine (and can be used in conjunction with each other), with the only real difference being the resulting URLs. By default, pages retain the same folder structure in &lt;code&gt;_site&lt;/code&gt; as they do in the source directory.</source>
          <target state="translated">どちらの方法も適切に機能し（相互に組み合わせて使用​​できます）、実際の違いは結果のURLのみです。デフォルトでは、ページは &lt;code&gt;_site&lt;/code&gt; でもソースディレクトリと同じフォルダー構造を保持します。</target>
        </trans-unit>
        <trans-unit id="1e264b9b1da1bc2248ad6e403d7cb832f59d925a" translate="yes" xml:space="preserve">
          <source>Buddy</source>
          <target state="translated">Buddy</target>
        </trans-unit>
        <trans-unit id="f83e6566847cd2858f5d961f4fd6dfba3d1b2116" translate="yes" xml:space="preserve">
          <source>Build Command Options</source>
          <target state="translated">ビルドコマンドオプション</target>
        </trans-unit>
        <trans-unit id="d9205936192af57ca7397f5a5194bd0524f3f7d6" translate="yes" xml:space="preserve">
          <source>Build your site:</source>
          <target state="translated">あなたのサイトを構築します。</target>
        </trans-unit>
        <trans-unit id="152728652bdbb67cd9f36011996afc633c2f19cb" translate="yes" xml:space="preserve">
          <source>Building a Jekyll site with the default theme is just the first step. The real magic happens when you start creating blog posts, using the front matter to control templates and layouts, and taking advantage of all the awesome configuration options Jekyll makes available.</source>
          <target state="translated">デフォルトのテーマでJekyllサイトを構築することは、最初の一歩に過ぎません。ブログ記事の作成を始め、フロントマターを使ってテンプレートやレイアウトをコントロールし、Jekyllが提供するすべての素晴らしい設定オプションを活用したときに、本当の魔法が起こります。</target>
        </trans-unit>
        <trans-unit id="fca5671d610769d99c294d73b43ea026de90fdca" translate="yes" xml:space="preserve">
          <source>Building, testing, and deploying your Jekyll-generated website can quickly be done with &lt;a href=&quot;https://circleci.com/&quot;&gt;CircleCI&lt;/a&gt;, a continuous integration &amp;amp; delivery tool. CircleCI supports &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt; and &lt;a href=&quot;https://bitbucket.org/&quot;&gt;Bitbucket&lt;/a&gt;, and you can get started for free using an open-source or private repository.</source>
          <target state="translated">Jekyllによって生成されたWebサイトの構築、テスト、および展開は、継続的な統合および配信ツールである&lt;a href=&quot;https://circleci.com/&quot;&gt;CircleCIを&lt;/a&gt;使用してすばやく実行できます。CircleCIは&lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;と&lt;a href=&quot;https://bitbucket.org/&quot;&gt;Bitbucketを&lt;/a&gt;サポートしており、オープンソースまたはプライベートリポジトリを使用して無料で始めることができます。</target>
        </trans-unit>
        <trans-unit id="f4f43ed2bb6792eeb5eab2136f57f66c1c8e7bee" translate="yes" xml:space="preserve">
          <source>Built-in permalink styles</source>
          <target state="translated">組み込みのパーマリンクスタイル</target>
        </trans-unit>
        <trans-unit id="2599019d616c6318b93ec4d83b00b75c7f01f933" translate="yes" xml:space="preserve">
          <source>Built-in permalink styles are not recognized in YAML Front Matter. As a result, &lt;code&gt;permalink: pretty&lt;/code&gt; will not work.</source>
          <target state="translated">組み込みのパーマリンクスタイルは、YAMLフロントマターでは認識されません。その結果、 &lt;code&gt;permalink: pretty&lt;/code&gt; は機能しません。</target>
        </trans-unit>
        <trans-unit id="621d1a3cf7230abca2de96aca4a75f0ffc755860" translate="yes" xml:space="preserve">
          <source>By default you should supply the &lt;code&gt;sudo: false&lt;/code&gt; command to Travis. This command explicitly tells Travis to run your build on Travis&amp;rsquo;s &lt;a href=&quot;https://docs.travis-ci.com/user/workers/container-based-infrastructure/#Routing-your-build-to-container-based-infrastructure&quot;&gt;container-based infrastructure&lt;/a&gt;. Running on the container-based infrastructure can often times speed up your build. If you have any trouble with your build, or if your build does need &lt;code&gt;sudo&lt;/code&gt; access, modify the line to &lt;code&gt;sudo: required&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、Travisに &lt;code&gt;sudo: false&lt;/code&gt; コマンドを指定する必要があります。このコマンドは、Travisの&lt;a href=&quot;https://docs.travis-ci.com/user/workers/container-based-infrastructure/#Routing-your-build-to-container-based-infrastructure&quot;&gt;コンテナベースのインフラストラクチャで&lt;/a&gt;ビルドを実行するようにTravisに明示的に指示します。多くの場合、コンテナベースのインフラストラクチャで実行すると、ビルドが高速化されます。ビルドに問題がある場合、またはビルドに &lt;code&gt;sudo&lt;/code&gt; アクセスが必要な場合は、行を &lt;code&gt;sudo: required&lt;/code&gt; 変更します。</target>
        </trans-unit>
        <trans-unit id="5eef4129ac2b6a9c1f6733e98f49513d7b7c6050" translate="yes" xml:space="preserve">
          <source>By default, collections follow a similar structure in the &lt;code&gt;_site&lt;/code&gt; folder as pages, except that the path is prefaced by the collection name. For example: &lt;code&gt;collectionname/mypage.html&lt;/code&gt;. For permalink settings that omit the file extension, the path would be &lt;code&gt;collection_name/mypage/index.html&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、コレクションは &lt;code&gt;_site&lt;/code&gt; フォルダー内のページと同様の構造に従いますが、パスの前にはコレクション名が付きます。例： &lt;code&gt;collectionname/mypage.html&lt;/code&gt; 。ファイル拡張子を省略したパーマリンク設定の場合、パスは &lt;code&gt;collection_name/mypage/index.html&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="693277f3a88e879e2528605092b48a3926bc1744" translate="yes" xml:space="preserve">
          <source>By default, the Jekyll site installed by &lt;code&gt;jekyll new&lt;/code&gt; uses a gem-based theme called &lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;Minima&lt;/a&gt;. With &lt;a href=&quot;../themes/index&quot;&gt;gem-based themes&lt;/a&gt;, some of the directories and files are stored in the theme-gem, hidden from your immediate view.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;jekyll new&lt;/code&gt; によってインストールされるJekyllサイトは、&lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;Minima&lt;/a&gt;と呼ばれる宝石ベースのテーマを使用します。&lt;a href=&quot;../themes/index&quot;&gt;宝石ベースのテーマ&lt;/a&gt;、ディレクトリとファイルのいくつかは、あなたの即時の視界から隠され、テーマ-GEMに格納されています。</target>
        </trans-unit>
        <trans-unit id="b6cc0937790c3a5d08cce726bcbc5fd2b643173b" translate="yes" xml:space="preserve">
          <source>By specifying the option in the build command, you avoid having to change values in your configuration files when moving from one environment to another.</source>
          <target state="translated">ビルドコマンドでオプションを指定することで、ある環境から別の環境に移動する際に設定ファイルの値を変更する必要がなくなります。</target>
        </trans-unit>
        <trans-unit id="b4956292a441b1089ee05484419bad578ef33ce5" translate="yes" xml:space="preserve">
          <source>CGI escape a string for use in a URL. Replaces any special characters with appropriate &lt;code&gt;%XX&lt;/code&gt; replacements. CGI escape normally replaces a space with a plus &lt;code&gt;+&lt;/code&gt; sign.</source>
          <target state="translated">CGIは、URLで使用する文字列をエスケープします。特殊文字を適切な &lt;code&gt;%XX&lt;/code&gt; 置換で置き換えます。CGIエスケープは通常、スペースをプラス &lt;code&gt;+&lt;/code&gt; 記号に置き換えます。</target>
        </trans-unit>
        <trans-unit id="fa3a83b1b97e24520de99b3a2a31c2abc6475041" translate="yes" xml:space="preserve">
          <source>Call for help</source>
          <target state="translated">助けを求める</target>
        </trans-unit>
        <trans-unit id="80bb4391f3498b89bc8324ebe3e4405065309a66" translate="yes" xml:space="preserve">
          <source>Called</source>
          <target state="translated">Called</target>
        </trans-unit>
        <trans-unit id="5a3a642a880f028a70f0e805af57609d46024c5d" translate="yes" xml:space="preserve">
          <source>Cause a build to fail if there is a YAML syntax error in a page's front matter.</source>
          <target state="translated">ページのフロントマターにYAML構文エラーがある場合にビルドが失敗するようにします。</target>
        </trans-unit>
        <trans-unit id="28e3e76919ab20eb9e63cb91fae66f81774b7ab3" translate="yes" xml:space="preserve">
          <source>Certificate-based authorization is another way to simplify the publishing process. It makes sense to restrict rsync access only to the directory which it is supposed to sync. This can be done using rrsync.</source>
          <target state="translated">証明書ベースの認証は、パブリッシングプロセスを簡素化するもう一つの方法です。rrsync のアクセスを、同期することになっているディレクトリのみに制限するのは理にかなっています。これはrsyncを使って行うことができます。</target>
        </trans-unit>
        <trans-unit id="aab1f6e25ea4ec08548ac36b489b950e49e73f1f" translate="yes" xml:space="preserve">
          <source>Chances are, at some point, you&amp;rsquo;ll want to include images, downloads, or other digital assets along with your text content. While the syntax for linking to these resources differs between Markdown and Textile, the problem of working out where to store these files in your site is something everyone will face.</source>
          <target state="translated">おそらく、ある時点で、テキストコンテンツと共に画像、ダウンロード、またはその他のデジタルアセットを含める必要があります。これらのリソースにリンクするための構文はMarkdownとTextileで異なりますが、これらのファイルをサイトのどこに保存するかという問題は、誰もが直面する問題です。</target>
        </trans-unit>
        <trans-unit id="3df70154397a0d17736ca43940de88f92eb475da" translate="yes" xml:space="preserve">
          <source>Change the directory where Jekyll will read files</source>
          <target state="translated">Jekyllがファイルを読み込むディレクトリを変更する</target>
        </trans-unit>
        <trans-unit id="5f2dd44c3664cadb42dde8bf133254ba77c223e3" translate="yes" xml:space="preserve">
          <source>Change the directory where Jekyll will write files</source>
          <target state="translated">ジキルがファイルを書き込むディレクトリを変更する</target>
        </trans-unit>
        <trans-unit id="1344d41909e8d9420edb30c8e4d504db9096055e" translate="yes" xml:space="preserve">
          <source>Changes to &lt;code&gt;_config.yml&lt;/code&gt; are not included during automatic regeneration.</source>
          <target state="translated">自動再生成中の &lt;code&gt;_config.yml&lt;/code&gt; への変更は含まれません。</target>
        </trans-unit>
        <trans-unit id="d61902876c0f7e3b6e12cda6f00c23c8789ab247" translate="yes" xml:space="preserve">
          <source>Check if Jekyll installed properly by running:</source>
          <target state="translated">Jekyllが正しくインストールされているかどうかを実行して確認します。</target>
        </trans-unit>
        <trans-unit id="b0d59a0b568491a42608d74dd52b58f31070d8fd" translate="yes" xml:space="preserve">
          <source>Check if Jekyll installed properly: &lt;code&gt;jekyll -v&lt;/code&gt;</source>
          <target state="translated">Jekyllが正しくインストールされているかどうかを確認します： &lt;code&gt;jekyll -v&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="553556474e1bfe3b5ff9566258474b25adb0d0fc" translate="yes" xml:space="preserve">
          <source>Check out the &lt;a href=&quot;../troubleshooting/index&quot;&gt;troubleshooting&lt;/a&gt; page or &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;report an issue&lt;/a&gt; so the Jekyll community can improve the experience for everyone.</source>
          <target state="translated">&lt;a href=&quot;../troubleshooting/index&quot;&gt;トラブルシューティング&lt;/a&gt;ページを確認するか&lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;、問題を報告し&lt;/a&gt;て、Jekyllコミュニティがすべてのユーザーのエクスペリエンスを向上できるようにしてください。</target>
        </trans-unit>
        <trans-unit id="a3f94a307f7438c7f318a50c87c20ca4010679c6" translate="yes" xml:space="preserve">
          <source>Choose your Git provider and select or push your Jekyll Project</source>
          <target state="translated">Git プロバイダを選択し、Jekyll プロジェクトを選択またはプッシュします。</target>
        </trans-unit>
        <trans-unit id="743a2d5609a7296d3d734c6e0b1f6d37a8c23170" translate="yes" xml:space="preserve">
          <source>CircleCI</source>
          <target state="translated">CircleCI</target>
        </trans-unit>
        <trans-unit id="f09bdc4be91901905da38a5f144186bc201d0da3" translate="yes" xml:space="preserve">
          <source>CircleCI detects when &lt;code&gt;Gemfile&lt;/code&gt; is present is will automatically run &lt;code&gt;bundle install&lt;/code&gt; for you in the &lt;code&gt;dependencies&lt;/code&gt; phase.</source>
          <target state="translated">CircleCIは、 &lt;code&gt;Gemfile&lt;/code&gt; が存在することを検出し、 &lt;code&gt;dependencies&lt;/code&gt; フェーズで &lt;code&gt;bundle install&lt;/code&gt; を自動的に実行します。</target>
        </trans-unit>
        <trans-unit id="684ee3f844d427c7784d1fcfed2dc90525843395" translate="yes" xml:space="preserve">
          <source>Code snippet highlighting</source>
          <target state="translated">コードスニペットのハイライト</target>
        </trans-unit>
        <trans-unit id="16ece1fc31982c92e746ba091ae5b244a9958371" translate="yes" xml:space="preserve">
          <source>Coffeescript</source>
          <target state="translated">Coffeescript</target>
        </trans-unit>
        <trans-unit id="4bbb632f02fd69807705c0179999c17d35c93b0f" translate="yes" xml:space="preserve">
          <source>Collections</source>
          <target state="translated">Collections</target>
        </trans-unit>
        <trans-unit id="86e6ce0b0753688beb0c5f46b73432e1a79a9a62" translate="yes" xml:space="preserve">
          <source>Collections have their own way of setting permalinks. Additionally, collections have unique template variables available (such as &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;output_ext&lt;/code&gt;). See the &lt;a href=&quot;../collections/index#permalinks&quot;&gt;Configuring permalinks for collections&lt;/a&gt; in Collections for more information.</source>
          <target state="translated">コレクションには、パーマリンクを設定する独自の方法があります。さらに、コレクションには、固有のテンプレート変数（ &lt;code&gt;path&lt;/code&gt; や &lt;code&gt;output_ext&lt;/code&gt; など）があります。詳細については&lt;a href=&quot;../collections/index#permalinks&quot;&gt;、コレクション&lt;/a&gt;内のコレクションのパーマリンクの構成を参照してください。</target>
        </trans-unit>
        <trans-unit id="12315e87ef6cce6063977163d3028d04e86bf126" translate="yes" xml:space="preserve">
          <source>Command line parameters are:</source>
          <target state="translated">コマンドラインのパラメータは</target>
        </trans-unit>
        <trans-unit id="55f762509dfccf0ee911ab36a06b33dcc5e43eb4" translate="yes" xml:space="preserve">
          <source>Command-line flags</source>
          <target state="translated">コマンドラインフラグ</target>
        </trans-unit>
        <trans-unit id="45e5f3f72e961cb70134ba35f7a27a9620e515f7" translate="yes" xml:space="preserve">
          <source>Commands</source>
          <target state="translated">Commands</target>
        </trans-unit>
        <trans-unit id="fddcc55198459fd62d7ef3bb8b51b5708e3ec07e" translate="yes" xml:space="preserve">
          <source>Commands should implement this single class method:</source>
          <target state="translated">コマンドは、この単一クラスのメソッドを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="28d11d5188e8b61364d0c749fe2bc9461093c07c" translate="yes" xml:space="preserve">
          <source>Complete Example circle.yml File</source>
          <target state="translated">完全な例 circle.yml ファイル</target>
        </trans-unit>
        <trans-unit id="f74e69bf01cb6bfbf1c04f4baee800f53181a8c9" translate="yes" xml:space="preserve">
          <source>Completely disable excerpts by setting your &lt;code&gt;excerpt_separator&lt;/code&gt; to &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;excerpt_separator&lt;/code&gt; を &lt;code&gt;&quot;&quot;&lt;/code&gt; に設定して、抜粋を完全に無効にします。</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="fea267da4cb15e9467e6a19b1d5cffdd628a294e" translate="yes" xml:space="preserve">
          <source>Configuration Settings</source>
          <target state="translated">構成設定</target>
        </trans-unit>
        <trans-unit id="23780f67b9c5d802e162f80cd175fc9ca05fb6c0" translate="yes" xml:space="preserve">
          <source>Configuration file settings</source>
          <target state="translated">設定ファイルの設定</target>
        </trans-unit>
        <trans-unit id="8dd84a276390b10b52fb74b481821218422a715a" translate="yes" xml:space="preserve">
          <source>Configuration problems</source>
          <target state="translated">設定の問題</target>
        </trans-unit>
        <trans-unit id="7b5b966a605c35048715b3dba3e0eae84850facb" translate="yes" xml:space="preserve">
          <source>Configure Ruby development kit</source>
          <target state="translated">Ruby開発キットの設定</target>
        </trans-unit>
        <trans-unit id="48650e6e1647471ab2735d98c8eb638c9f5e06fc" translate="yes" xml:space="preserve">
          <source>Configuring permalinks for collections</source>
          <target state="translated">コレクションのパーマリンクを設定する</target>
        </trans-unit>
        <trans-unit id="e6443af99d2f470f50affd5057bf48db2d09dae4" translate="yes" xml:space="preserve">
          <source>Container</source>
          <target state="translated">Container</target>
        </trans-unit>
        <trans-unit id="1c404b6fdb495efae349dfb0ca83f26fda7d9e77" translate="yes" xml:space="preserve">
          <source>Contains the url of your site as it is configured in the &lt;code&gt;_config.yml&lt;/code&gt;. For example, if you have &lt;code&gt;url: http://mysite.com&lt;/code&gt; in your configuration file, then it will be accessible in Liquid as &lt;code&gt;site.url&lt;/code&gt;. For the development environment there is &lt;a href=&quot;https://jekyllrb.com/news/#3-siteurl-is-set-by-the-development-server&quot;&gt;an exception&lt;/a&gt;, if you are running &lt;code&gt;jekyll serve&lt;/code&gt; in a development environment &lt;code&gt;site.url&lt;/code&gt; will be set to the value of &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, and SSL-related options. This defaults to &lt;code&gt;url: http://localhost:4000&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; で設定されているサイトのURLが含まれます。たとえば、設定ファイルに &lt;code&gt;url: http://mysite.com&lt;/code&gt; &lt;code&gt;site.url&lt;/code&gt; がある場合、Liquidでsite.urlとしてアクセスできます。開発環境の場合&lt;a href=&quot;https://jekyllrb.com/news/#3-siteurl-is-set-by-the-development-server&quot;&gt;、例外&lt;/a&gt;があります。開発環境で &lt;code&gt;jekyll serve&lt;/code&gt; を実行している場合、 &lt;code&gt;site.url&lt;/code&gt; は &lt;code&gt;host&lt;/code&gt; 、 &lt;code&gt;port&lt;/code&gt; 、およびSSL関連オプションの値に設定されます。デフォルトは &lt;code&gt;url: http://localhost:4000&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8517a1315218390f45dc7c05447fa1bf72087fe1" translate="yes" xml:space="preserve">
          <source>Content Formats</source>
          <target state="translated">コンテンツフォーマット</target>
        </trans-unit>
        <trans-unit id="5c7a4d21b47ea6ded9d33169ed7a79b049c3b420" translate="yes" xml:space="preserve">
          <source>Content from the &lt;code&gt;master&lt;/code&gt; branch of your repository will be used to build and publish the GitHub Pages site, so make sure your Jekyll site is stored there.</source>
          <target state="translated">リポジトリの &lt;code&gt;master&lt;/code&gt; ブランチのコンテンツは、GitHubページサイトの構築と公開に使用されるため、Jekyllサイトがそこに保存されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="ec75ef085a6b7fdce9179edd6e9d7d5828c7133c" translate="yes" xml:space="preserve">
          <source>Content processors can modify certain characters to make them look nicer. For example, the &lt;code&gt;smart&lt;/code&gt; extension in Redcarpet converts standard, ASCII quotation characters to curly, Unicode ones. In order for the browser to display those characters properly, define the charset meta value by including &lt;code&gt;&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;&lt;/code&gt; in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; of your layout.</source>
          <target state="translated">コンテンツプロセッサは、特定の文字を変更して見栄えをよくすることができます。たとえば、Redcarpet の &lt;code&gt;smart&lt;/code&gt; 拡張機能は、標準のASCII引用文字を中括弧のUnicode文字に変換します。適切にこれらの文字を表示するブラウザためには、含めることで文字セットメタ値を定義する &lt;code&gt;&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;&lt;/code&gt; 内 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; レイアウトの。</target>
        </trans-unit>
        <trans-unit id="7a302c3f9cf2b3cec42c41ee9b6ddfb04d9516a9" translate="yes" xml:space="preserve">
          <source>Continuous Integration</source>
          <target state="translated">継続的インテグレーション</target>
        </trans-unit>
        <trans-unit id="614b64fee68cd582e5c028f9421509c02ad3e2b8" translate="yes" xml:space="preserve">
          <source>Continuous Integration (CI) enables you to publish your Jekyll generated website with confidence by automating the quality assurance and deployment processes. You can quickly get started using CI with one of the providers below:</source>
          <target state="translated">継続的インテグレーション (CI)は、品質保証とデプロイのプロセスを自動化することで、Jekyll で生成されたウェブサイトを自信を持って公開することを可能にします。以下のプロバイダーのいずれかを使用して、CIの使用をすぐに開始することができます。</target>
        </trans-unit>
        <trans-unit id="c778158b4925610dff9ad043f2865a6b87400df6" translate="yes" xml:space="preserve">
          <source>Convert &quot;quotes&quot; into &amp;ldquo;smart quotes.&amp;rdquo;</source>
          <target state="translated">「見積もり」を「スマート見積もり」に変換します。</target>
        </trans-unit>
        <trans-unit id="a18515cb3f9eab29523cc0de5173a4cd82b1a3f7" translate="yes" xml:space="preserve">
          <source>Convert Hash or Array to JSON.</source>
          <target state="translated">ハッシュや配列をJSONに変換します。</target>
        </trans-unit>
        <trans-unit id="50fb2eb4e787142ae51bdd8108a700b19ab279da" translate="yes" xml:space="preserve">
          <source>Convert a Date into XML Schema (ISO 8601) format.</source>
          <target state="translated">日付をXMLスキーマ(ISO 8601)形式に変換します。</target>
        </trans-unit>
        <trans-unit id="9c2812967f1b6dfa92d8adf4e07e393b76f6ccaf" translate="yes" xml:space="preserve">
          <source>Convert a Date into the RFC-822 format used for RSS feeds.</source>
          <target state="translated">日付をRSSフィードで使用されるRFC-822形式に変換します。</target>
        </trans-unit>
        <trans-unit id="b8a9ed24f57f5c52d85beefb2e7ec2c2fb03fb59" translate="yes" xml:space="preserve">
          <source>Convert a Markdown-formatted string into HTML.</source>
          <target state="translated">Markdownでフォーマットされた文字列をHTMLに変換します。</target>
        </trans-unit>
        <trans-unit id="e7d7e38dfe580aa0164d83fbba038b3d87fafd51" translate="yes" xml:space="preserve">
          <source>Convert a Sass- or SCSS-formatted string into CSS.</source>
          <target state="translated">SassやSCSSでフォーマットされた文字列をCSSに変換します。</target>
        </trans-unit>
        <trans-unit id="50f6dee8c33e9a8d09b4884234bdca744aedd2d7" translate="yes" xml:space="preserve">
          <source>Convert a date to short format.</source>
          <target state="translated">日付を短い形式に変換します。</target>
        </trans-unit>
        <trans-unit id="d02ea101781b1f60d83c14f5d5a2687834021e09" translate="yes" xml:space="preserve">
          <source>Convert a string into a lowercase URL &quot;slug&quot;. See below for options.</source>
          <target state="translated">文字列を小文字のURL「slug」に変換します。オプションは以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="feedee175bcca21c8b35cd592a24214dffff2399" translate="yes" xml:space="preserve">
          <source>Convert a string or boolean to integer.</source>
          <target state="translated">文字列またはブール値を整数に変換します。</target>
        </trans-unit>
        <trans-unit id="7386dddf3f6d37387987567d02cd16ca94fd13c7" translate="yes" xml:space="preserve">
          <source>Convert an array into a sentence. Useful for listing tags. Optional argument for connector.</source>
          <target state="translated">配列を文章に変換します。タグをリストアップするのに便利です。コネクタのオプション引数。</target>
        </trans-unit>
        <trans-unit id="3dc3b3e61a3d6376f092b9e7bca51ff02706a1be" translate="yes" xml:space="preserve">
          <source>Convert an object into its String representation for debugging.</source>
          <target state="translated">デバッグ用にオブジェクトを文字列表現に変換します。</target>
        </trans-unit>
        <trans-unit id="6a89fde6d6a92b19247264815bcda3f0b2c24bd4" translate="yes" xml:space="preserve">
          <source>Converters</source>
          <target state="translated">Converters</target>
        </trans-unit>
        <trans-unit id="a74fac8ce61b574f4d36c9866eea1c269cbfeecd" translate="yes" xml:space="preserve">
          <source>Converters should implement at a minimum 3 methods:</source>
          <target state="translated">コンバータは、最低でも3つのメソッドを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="0768eb3a3c6bfd65b442cfe91da8b3aeae06b933" translate="yes" xml:space="preserve">
          <source>Converting gem-based themes to regular themes</source>
          <target state="translated">ジェムベースのテーマを通常のテーマに変換する</target>
        </trans-unit>
        <trans-unit id="3eed4ec1980027b6107cc4818b5d38ec0c0b7903" translate="yes" xml:space="preserve">
          <source>Copy &amp;amp; paste the two lines into the file:</source>
          <target state="translated">2行をコピーしてファイルに貼り付けます。</target>
        </trans-unit>
        <trans-unit id="0757a803bb920bf5723747a5aecea0d6a09caec6" translate="yes" xml:space="preserve">
          <source>Could not find a JavaScript runtime. (ExecJS::RuntimeUnavailable)</source>
          <target state="translated">JavaScript ランタイムが見つかりませんでした。(ExecJS::RuntimeUnavailable)</target>
        </trans-unit>
        <trans-unit id="72eae6e24b0500f8e90f93b465bc5a66328b7709" translate="yes" xml:space="preserve">
          <source>Count the number of words in some text.</source>
          <target state="translated">いくつかのテキストの単語数をカウントします。</target>
        </trans-unit>
        <trans-unit id="3088d0b82a3077381e3aa668c098883ac5fbed6c" translate="yes" xml:space="preserve">
          <source>Create a corresponding folder (e.g. &lt;code&gt;&amp;lt;source&amp;gt;/_my_collection&lt;/code&gt;) and add documents. YAML front matter is processed if the front matter exists, and everything after the front matter is pushed into the document&amp;rsquo;s &lt;code&gt;content&lt;/code&gt; attribute. If no YAML front matter is provided, Jekyll will not generate the file in your collection.</source>
          <target state="translated">対応するフォルダー（例： &lt;code&gt;&amp;lt;source&amp;gt;/_my_collection&lt;/code&gt; ）を作成し、ドキュメントを追加します。YAMLの前付けは、前付けが存在する場合に処理され、前付けの後のすべてがドキュメントの &lt;code&gt;content&lt;/code&gt; 属性にプッシュされます。YAMLの前付けがない場合、Jekyllはコレクションにファイルを生成しません。</target>
        </trans-unit>
        <trans-unit id="08d8349b04553540811d13e71ca8db505813ec56" translate="yes" xml:space="preserve">
          <source>Create a file called &lt;code&gt;Gemfile&lt;/code&gt; without any extension in your root directory of your blog</source>
          <target state="translated">ブログのルートディレクトリに拡張子なしの &lt;code&gt;Gemfile&lt;/code&gt; というファイルを作成します</target>
        </trans-unit>
        <trans-unit id="57f1d957bcf015b70d27119d4375bf72379d4af3" translate="yes" xml:space="preserve">
          <source>Create a new pipeline and set the trigger mode to &amp;lsquo;On every push&amp;rsquo;</source>
          <target state="translated">新しいパイプラインを作成し、トリガーモードを[On every push]に設定します</target>
        </trans-unit>
        <trans-unit id="0a7137a175f9abf7715e02185e1abb3b1a97b148" translate="yes" xml:space="preserve">
          <source>Creating Post Files</source>
          <target state="translated">ポストファイルの作成</target>
        </trans-unit>
        <trans-unit id="f16ef7a94c56c61fddd0a3cb8b18d00a1a4c16e1" translate="yes" xml:space="preserve">
          <source>Creating a gem-based theme</source>
          <target state="translated">ジェムベースのテーマを作成する</target>
        </trans-unit>
        <trans-unit id="479bbad0b904bece0f9d9a89fec5b3eb6cfb680c" translate="yes" xml:space="preserve">
          <source>Creating pages</source>
          <target state="translated">ページの作成</target>
        </trans-unit>
        <trans-unit id="874e1b73bd118a974761952ba007375c242cddec" translate="yes" xml:space="preserve">
          <source>Custom Config File</source>
          <target state="translated">カスタムコンフィグファイル</target>
        </trans-unit>
        <trans-unit id="8945503681a5077cbd94b16823eb30aaaae009ab" translate="yes" xml:space="preserve">
          <source>Custom Markdown Processors</source>
          <target state="translated">カスタムマークダウンプロセッサ</target>
        </trans-unit>
        <trans-unit id="5119d72fecfc71706e08e717c4c9b2529f240e53" translate="yes" xml:space="preserve">
          <source>Custom Variables</source>
          <target state="translated">カスタム変数</target>
        </trans-unit>
        <trans-unit id="bf3fbe65d584a21b69fff25f6490b10953f30bcf" translate="yes" xml:space="preserve">
          <source>Custom WEBrick Headers</source>
          <target state="translated">カスタムWEBrickヘッダー</target>
        </trans-unit>
        <trans-unit id="2dc243801718be9d8bf44d72849ade84f72e4aca" translate="yes" xml:space="preserve">
          <source>Custom domains do not affect repository names</source>
          <target state="translated">カスタムドメインはリポジトリ名に影響しない</target>
        </trans-unit>
        <trans-unit id="d7f0ac9e007291a6ccc21d036f4711505ad9d0b1" translate="yes" xml:space="preserve">
          <source>Customization</source>
          <target state="translated">Customization</target>
        </trans-unit>
        <trans-unit id="b922291aa68d5ce0abb7037b3282f3856db7513f" translate="yes" xml:space="preserve">
          <source>Data Files</source>
          <target state="translated">データファイル</target>
        </trans-unit>
        <trans-unit id="157b415e5a282b130f9372325266edc343248ffa" translate="yes" xml:space="preserve">
          <source>Data files can also be placed in sub-folders of the &lt;code&gt;_data&lt;/code&gt; folder. Each folder level will be added to a variable&amp;rsquo;s namespace. The example below shows how GitHub organizations could be defined separately in a file under the &lt;code&gt;orgs&lt;/code&gt; folder:</source>
          <target state="translated">データファイルは、 &lt;code&gt;_data&lt;/code&gt; フォルダーのサブフォルダーに配置することもできます。各フォルダーレベルは、変数の名前空間に追加されます。次の例は、GitHub組織を &lt;code&gt;orgs&lt;/code&gt; フォルダーの下のファイルで個別に定義する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="d9a70625687bdeeb9816853e20994746301f73e1" translate="yes" xml:space="preserve">
          <source>Day from the post's filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; YAML front matter</source>
          <target state="translated">投稿のファイル名からの日。ドキュメントの &lt;code&gt;date&lt;/code&gt; YAMLの前付けで上書きできます</target>
        </trans-unit>
        <trans-unit id="6fa25b9b9ed1e705666752da8a12385defe8771d" translate="yes" xml:space="preserve">
          <source>Day of the year from the post's filename, with leading zeros.</source>
          <target state="translated">投稿のファイル名からの年の日付を、先頭のゼロで指定します。</target>
        </trans-unit>
        <trans-unit id="e01e28bbadbdce263dd91b769ae971f11ac8713a" translate="yes" xml:space="preserve">
          <source>Day without leading zeros from the post's filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; YAML front matter</source>
          <target state="translated">投稿のファイル名から先行ゼロなしの日。ドキュメントの &lt;code&gt;date&lt;/code&gt; YAMLの前付けで上書きできます</target>
        </trans-unit>
        <trans-unit id="d7c410ed08cd649b4845058755d627f755f950e7" translate="yes" xml:space="preserve">
          <source>Default Configuration</source>
          <target state="translated">デフォルト設定</target>
        </trans-unit>
        <trans-unit id="b26262022730a28972ad22f1b5bca5d39c6adcd3" translate="yes" xml:space="preserve">
          <source>Default URL is set to &lt;code&gt;http://localhost:4000&lt;/code&gt; in development environment. 3.3.0</source>
          <target state="translated">開発環境では、デフォルトのURLは &lt;code&gt;http://localhost:4000&lt;/code&gt; に設定されています。3.3.0</target>
        </trans-unit>
        <trans-unit id="a6bb417c54473861d72ed4f134137eb6856b7deb" translate="yes" xml:space="preserve">
          <source>Default attributes can also be set for a collection:</source>
          <target state="translated">デフォルトの属性は、コレクションに対して設定することもできます。</target>
        </trans-unit>
        <trans-unit id="428819bf9e83cebda50efafb08cd2534c1583949" translate="yes" xml:space="preserve">
          <source>Defaults</source>
          <target state="translated">Defaults</target>
        </trans-unit>
        <trans-unit id="c948c2fff8f6f4731019ba817a9f4869f332087d" translate="yes" xml:space="preserve">
          <source>Deploying Jekyll to GitHub Pages</source>
          <target state="translated">GitHub ページへの Jekyll の展開</target>
        </trans-unit>
        <trans-unit id="04d83acb457358e724c07ce68acca9c119bcc093" translate="yes" xml:space="preserve">
          <source>Deploying is now as easy as telling nginx or Apache to look at &lt;code&gt;/var/www/myrepo&lt;/code&gt; and running the following:</source>
          <target state="translated">デプロイは、nginxまたはApacheに &lt;code&gt;/var/www/myrepo&lt;/code&gt; を調べて以下を実行するように指示するのと同じくらい簡単です。</target>
        </trans-unit>
        <trans-unit id="327a55f82dc6818877a68e37b722bb7f2360b633" translate="yes" xml:space="preserve">
          <source>Deployment</source>
          <target state="translated">Deployment</target>
        </trans-unit>
        <trans-unit id="415b97bc5570d88528f183c5d71435811b552d1f" translate="yes" xml:space="preserve">
          <source>Deployment methods</source>
          <target state="translated">展開方法</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="94f85a83d477896893e7b9c2797c7f129f3bf27a" translate="yes" xml:space="preserve">
          <source>Destination folders are cleaned on site builds</source>
          <target state="translated">サイト構築時に送信先フォルダがクリーンアップされる</target>
        </trans-unit>
        <trans-unit id="7e85659be9e8bb68fe5f1d7de8c656803d0d3d04" translate="yes" xml:space="preserve">
          <source>Detach the server from the terminal</source>
          <target state="translated">ターミナルからサーバーを切り離す</target>
        </trans-unit>
        <trans-unit id="07461fdd8bbd77721cfe447edf9e4bd20cbd0023" translate="yes" xml:space="preserve">
          <source>Directory structure</source>
          <target state="translated">ディレクトリ構造</target>
        </trans-unit>
        <trans-unit id="f7b88a8798b23fb2bab0e1ffdbca5105797c82f9" translate="yes" xml:space="preserve">
          <source>Directory structure of Jekyll sites using gem-based themes</source>
          <target state="translated">ジェムベースのテーマを使ったジキルサイトのディレクトリ構造</target>
        </trans-unit>
        <trans-unit id="cd3ea503c418b2ca6ceff375ecdd9f91b897ee93" translate="yes" xml:space="preserve">
          <source>Disable &lt;a href=&quot;../plugins/index&quot;&gt;custom plugins, and ignore symbolic links&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../plugins/index&quot;&gt;カスタムプラグインを&lt;/a&gt;無効にし、シンボリックリンクを無視します。</target>
        </trans-unit>
        <trans-unit id="8584335b2605c5f0dd9600f794b20a8fd6cee943" translate="yes" xml:space="preserve">
          <source>Displaying an index of posts</source>
          <target state="translated">投稿のインデックスを表示しています。</target>
        </trans-unit>
        <trans-unit id="756497d4714dba5e8b9c039fe985ae8fcc72d0be" translate="yes" xml:space="preserve">
          <source>Displaying post categories or tags</source>
          <target state="translated">投稿カテゴリやタグを表示する</target>
        </trans-unit>
        <trans-unit id="5413434314311e3fdc2eaf828119461e05425c97" translate="yes" xml:space="preserve">
          <source>Diving in</source>
          <target state="translated">ダイビング</target>
        </trans-unit>
        <trans-unit id="bed9c981d3ead9ceed6f502f98169d2cdc0faf07" translate="yes" xml:space="preserve">
          <source>Do not use an important location for &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt;; instead, use it as a staging area and copy files from there to your web server.</source>
          <target state="translated">&lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; には重要な場所を使用しないでください。代わりに、ステージング領域として使用し、そこからWebサーバーにファイルをコピーします。</target>
        </trans-unit>
        <trans-unit id="48b6082650bf93a6e14586d182ed851b4a661d6c" translate="yes" xml:space="preserve">
          <source>Do not use tabs in configuration files</source>
          <target state="translated">設定ファイルでタブを使用しない</target>
        </trans-unit>
        <trans-unit id="dcc1b361c2ed8fc6f3607ae3fa6c42b632a40822" translate="yes" xml:space="preserve">
          <source>Documenting your theme</source>
          <target state="translated">テーマを文書化する</target>
        </trans-unit>
        <trans-unit id="687c82861c956e47456186f6522cfc8dbadb8ef6" translate="yes" xml:space="preserve">
          <source>Documents</source>
          <target state="translated">Documents</target>
        </trans-unit>
        <trans-unit id="b0ac647f40074046e8dfae336ecd5c02a8d9e37a" translate="yes" xml:space="preserve">
          <source>Does the given extension match this converter&amp;rsquo;s list of acceptable extensions? Takes one argument: the file&amp;rsquo;s extension (including the dot). Must return &lt;code&gt;true&lt;/code&gt; if it matches, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">指定された拡張子は、このコンバーターの受け入れ可能な拡張子のリストと一致していますか？1つの引数を取ります：ファイルの拡張子（ドットを含む）。一致する場合は &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="cfc35b21a67a45d6b088d4eee6a0456640742632" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t forget the column &lt;code&gt;:&lt;/code&gt; after server name!</source>
          <target state="translated">列を忘れないでください &lt;code&gt;:&lt;/code&gt; サーバー名の後！</target>
        </trans-unit>
        <trans-unit id="b17019bf71aa3d339659938be7883606df523a8d" translate="yes" xml:space="preserve">
          <source>Don't forget to add YAML for processing</source>
          <target state="translated">処理のためのYAMLの追加を忘れずに</target>
        </trans-unit>
        <trans-unit id="df8f6861a03014706909fec51dc390e2ce699f08" translate="yes" xml:space="preserve">
          <source>Don't set a permalink</source>
          <target state="translated">パーマリンクを設定しない</target>
        </trans-unit>
        <trans-unit id="55823efb45056acba11210535a57d8bf0bf96db0" translate="yes" xml:space="preserve">
          <source>Done!</source>
          <target state="translated">Done!</target>
        </trans-unit>
        <trans-unit id="050415cbe4f97088931bcbdf60b1827878db8417" translate="yes" xml:space="preserve">
          <source>Download and Install a package manager version from &lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;RubyInstaller Downloads&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;RubyInstaller Downloads&lt;/a&gt;からパッケージマネージャーバージョンをダウンロードしてインストールします。</target>
        </trans-unit>
        <trans-unit id="16d7db6be51fe8c45f9583d8bff369c3efd26d68" translate="yes" xml:space="preserve">
          <source>Download rrsync</source>
          <target state="translated">rrsync のダウンロード</target>
        </trans-unit>
        <trans-unit id="474461ddfad9338cde865e2e0cfae7e574360c27" translate="yes" xml:space="preserve">
          <source>Draft Posts</source>
          <target state="translated">ドラフト投稿</target>
        </trans-unit>
        <trans-unit id="7b9e3ccb38ba5f1124c15ddde7167bfee444c275" translate="yes" xml:space="preserve">
          <source>Drafts are posts without a date. They&amp;rsquo;re posts you&amp;rsquo;re still working on and don&amp;rsquo;t want to publish yet. To get up and running with drafts, create a &lt;code&gt;_drafts&lt;/code&gt; folder in your site&amp;rsquo;s root (as described in the &lt;a href=&quot;../structure/index&quot;&gt;site structure&lt;/a&gt; section) and create your first draft:</source>
          <target state="translated">下書きは日付のない投稿です。それらはあなたがまだ作業中で、まだ公開したくない投稿です。ドラフトを立ち上げて実行するには、サイトのルートに &lt;code&gt;_drafts&lt;/code&gt; フォルダーを作成し（&lt;a href=&quot;../structure/index&quot;&gt;サイト構造の&lt;/a&gt;セクションで説明）、最初のドラフトを作成します。</target>
        </trans-unit>
        <trans-unit id="cd6cc0fc1b4576c41c5a7ddba40361ddc78929c8" translate="yes" xml:space="preserve">
          <source>Drafts are unpublished posts. The format of these files is without a date: &lt;code&gt;title.MARKUP&lt;/code&gt;. Learn how to &lt;a href=&quot;../drafts/index&quot;&gt; work with drafts&lt;/a&gt;.</source>
          <target state="translated">下書きは非公開の投稿です。これらのファイルの形式には日付がありません： &lt;code&gt;title.MARKUP&lt;/code&gt; 。&lt;a href=&quot;../drafts/index&quot;&gt;下書きの操作&lt;/a&gt;方法を学びます。</target>
        </trans-unit>
        <trans-unit id="5733ddac9f24b6f62fd4b557aac525e5894e505e" translate="yes" xml:space="preserve">
          <source>Drafts don&amp;rsquo;t have dates</source>
          <target state="translated">下書きには日付がありません</target>
        </trans-unit>
        <trans-unit id="afc7da3b36c80bdfe26ae7331e50dce89adf7446" translate="yes" xml:space="preserve">
          <source>Dropped dependencies</source>
          <target state="translated">ドロップされた依存関係</target>
        </trans-unit>
        <trans-unit id="6d6cdea651b8ee1f7d42af83c3acd10ef727c52d" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Command&lt;/code&gt; must be a subclass of the &lt;code&gt;Jekyll::Command&lt;/code&gt; class and must contain one class method: &lt;code&gt;init_with_program&lt;/code&gt;. An example:</source>
          <target state="translated">各 &lt;code&gt;Command&lt;/code&gt; は、 &lt;code&gt;Jekyll::Command&lt;/code&gt; クラスのサブクラスである必要があり、クラスメソッド &lt;code&gt;init_with_program&lt;/code&gt; を 1つ含む必要があります。例：</target>
        </trans-unit>
        <trans-unit id="8675639ca84ece63cd0eb34c7058169669e77a4b" translate="yes" xml:space="preserve">
          <source>Each collection is accessible as a field on the &lt;code&gt;site&lt;/code&gt; variable. For example, if you want to access the &lt;code&gt;albums&lt;/code&gt; collection found in &lt;code&gt;_albums&lt;/code&gt;, you&amp;rsquo;d use &lt;code&gt;site.albums&lt;/code&gt;.</source>
          <target state="translated">各コレクションには、 &lt;code&gt;site&lt;/code&gt; 変数のフィールドとしてアクセスできます。たとえば、 &lt;code&gt;_albums&lt;/code&gt; にある &lt;code&gt;albums&lt;/code&gt; コレクションにアクセスする場合は、site.albumsを使用し &lt;code&gt;site.albums&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="819989506c2379111b6830fba079a06e1e038168" translate="yes" xml:space="preserve">
          <source>Each collection is itself an array of documents (e.g., &lt;code&gt;site.albums&lt;/code&gt; is an array of documents, much like &lt;code&gt;site.pages&lt;/code&gt; and &lt;code&gt;site.posts&lt;/code&gt;). See the table below for how to access attributes of those documents.</source>
          <target state="translated">各コレクションはそれ自体がドキュメントの配列です（たとえば、 &lt;code&gt;site.albums&lt;/code&gt; は、 &lt;code&gt;site.pages&lt;/code&gt; や &lt;code&gt;site.posts&lt;/code&gt; によく似たドキュメントの配列です）。これらのドキュメントの属性にアクセスする方法については、以下の表を参照してください。</target>
        </trans-unit>
        <trans-unit id="22b721140984a8237f11e2749b8693e8562cf543" translate="yes" xml:space="preserve">
          <source>Each post automatically takes the first block of text, from the beginning of the content to the first occurrence of &lt;code&gt;excerpt_separator&lt;/code&gt;, and sets it as the &lt;code&gt;post.excerpt&lt;/code&gt;. Take the above example of an index of posts. Perhaps you want to include a little hint about the post&amp;rsquo;s content by adding the first paragraph of each of your posts:</source>
          <target state="translated">各投稿は、コンテンツの先頭から &lt;code&gt;excerpt_separator&lt;/code&gt; の最初の出現までのテキストの最初のブロックを自動的に取得し、それを &lt;code&gt;post.excerpt&lt;/code&gt; として設定します。上記の投稿のインデックスの例を見てみましょう。おそらく、各投稿の最初の段落を追加することで、投稿のコンテンツについての小さなヒントを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="05e4117a4592a1a478617b21cb48c61f72ad835b" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;config.yml&lt;/code&gt; file and include the path to Ruby &lt;code&gt;- C:/tools/ruby22&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.yml&lt;/code&gt; ファイルを編集し、Rubyへのパスを含めます &lt;code&gt;- C:/tools/ruby22&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ed63036d8730b34c2af3aa53fe984d9883388a1c" translate="yes" xml:space="preserve">
          <source>Editors</source>
          <target state="translated">Editors</target>
        </trans-unit>
        <trans-unit id="9377c79ae213708bb8ade0484700680439ab7d2b" translate="yes" xml:space="preserve">
          <source>Either of these approaches are useful because &lt;code&gt;/usr/local&lt;/code&gt; is considered a &amp;ldquo;safe&amp;rdquo; location on systems which have SIP enabled, they avoid potential conflicts with the version of Ruby included by Apple, and it keeps Jekyll and its dependencies in a sandboxed environment. This also has the added benefit of not requiring &lt;code&gt;sudo&lt;/code&gt; when you want to add or remove a gem.</source>
          <target state="translated">&lt;code&gt;/usr/local&lt;/code&gt; は、SIPが有効になっているシステムで「安全な」場所と見なされ、Appleに含まれるRubyのバージョンとの潜在的な競合を回避し、サンドボックス環境でJekyllとその依存関係を維持するため、これらの方法のいずれかが役立ちます。これには、gemを追加または削除するときに &lt;code&gt;sudo&lt;/code&gt; を必要としないという利点もあります。</target>
        </trans-unit>
        <trans-unit id="db1035b9a376b8ed38de339986a8ce401798ad29" translate="yes" xml:space="preserve">
          <source>Enable auto-regeneration of the site when files are modified.</source>
          <target state="translated">ファイルが変更されたときのサイトの自動再生を有効にします。</target>
        </trans-unit>
        <trans-unit id="ba88fdd9f81d0ffddae13dde5e0969d2b16057b1" translate="yes" xml:space="preserve">
          <source>Enable pagination</source>
          <target state="translated">ページ分割を有効にする</target>
        </trans-unit>
        <trans-unit id="d0ce34564da7c725988a56ad483ba57a721ddff0" translate="yes" xml:space="preserve">
          <source>Enable the experimental incremental build feature. Incremental build only re-builds posts and pages that have changed, resulting in significant performance improvements for large sites, but may also break site generation in certain cases.</source>
          <target state="translated">実験的なインクリメンタルビルド機能を有効にします。インクリメンタルビルドは変更された投稿やページのみを再ビルドするため、大規模サイトではパフォーマンスが大幅に向上しますが、場合によってはサイト生成が中断される可能性もあります。</target>
        </trans-unit>
        <trans-unit id="0f3c52722870e758f16bfe54e0e7469ec6d69461" translate="yes" xml:space="preserve">
          <source>Enabling Travis builds for your GitHub repository is pretty simple:</source>
          <target state="translated">GitHub リポジトリで Travis ビルドを有効にするのはとても簡単です。</target>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="6878d1f81fca630d764e13dee43133748433dc86" translate="yes" xml:space="preserve">
          <source>Ensure that your &lt;code&gt;_config.yml&lt;/code&gt; is up-to-date and includes the following:</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; が最新であり、以下が含まれていることを確認してください：</target>
        </trans-unit>
        <trans-unit id="40e639f0888b4c974f5842808a94e8076f761e49" translate="yes" xml:space="preserve">
          <source>Escape some text for use in XML.</source>
          <target state="translated">XMLで使用するためのテキストをエスケープします。</target>
        </trans-unit>
        <trans-unit id="00aedd57a5068acf5dfb99ea717348e1ba7286e5" translate="yes" xml:space="preserve">
          <source>Even if your configuration file specifies the &lt;code&gt;date&lt;/code&gt; style, the URL for this page would be &lt;code&gt;http://somedomain.com/mypageurl/&lt;/code&gt;.</source>
          <target state="translated">構成ファイルで &lt;code&gt;date&lt;/code&gt; スタイルが指定されている場合でも、このページのURLは &lt;code&gt;http://somedomain.com/mypageurl/&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="b5ba8b7b01c5c24c78b2945c838e15f9e22c063e" translate="yes" xml:space="preserve">
          <source>Every album in the collection could be listed on a single page with a template:</source>
          <target state="translated">コレクションのすべてのアルバムは、テンプレートを使って1ページにまとめてリストアップすることができました。</target>
        </trans-unit>
        <trans-unit id="cd2b1c9610eaf689d0fcbd86665058bcca94c3a6" translate="yes" xml:space="preserve">
          <source>Every other directory and file except for those listed above&amp;mdash;such as &lt;code&gt;css&lt;/code&gt; and &lt;code&gt;images&lt;/code&gt; folders, &lt;code&gt;favicon.ico&lt;/code&gt; files, and so forth&amp;mdash;will be copied verbatim to the generated site. There are plenty of &lt;a href=&quot;https://jekyllrb.com/docs/sites/&quot;&gt;sites already using Jekyll&lt;/a&gt; if you&amp;rsquo;re curious to see how they&amp;rsquo;re laid out.</source>
          <target state="translated">上記以外のすべてのディレクトリとファイル（ &lt;code&gt;css&lt;/code&gt; および &lt;code&gt;images&lt;/code&gt; フォルダー、 &lt;code&gt;favicon.ico&lt;/code&gt; ファイルなど）は、生成されたサイトにそのままコピーされます。それらがどのように配置されているか&lt;a href=&quot;https://jekyllrb.com/docs/sites/&quot;&gt;を知りたいので&lt;/a&gt;あれば、すでにJekyllを使用しているサイトはたくさんあります。</target>
        </trans-unit>
        <trans-unit id="d4e7d2443643824d719c666e41137aaa7d583628" translate="yes" xml:space="preserve">
          <source>Everything in between the first and second &lt;code&gt;---&lt;/code&gt; are part of the YAML Front Matter, and everything after the second &lt;code&gt;---&lt;/code&gt; will be rendered with Markdown and show up as &amp;ldquo;Content&amp;rdquo;.</source>
          <target state="translated">第一及び第二の間ですべてのもの &lt;code&gt;---&lt;/code&gt; YAML序の一部、および第二後のすべてですが &lt;code&gt;---&lt;/code&gt; Markdownを使ってレンダリングし、「コンテンツ」として表示されます。</target>
        </trans-unit>
        <trans-unit id="2b432a96c8af9ef67da451bf96f2d5e35555ea78" translate="yes" xml:space="preserve">
          <source>Example: Accessing a specific author</source>
          <target state="translated">例。特定の著者へのアクセス</target>
        </trans-unit>
        <trans-unit id="4c002c817296530846dab0af3719d3a043bf3265" translate="yes" xml:space="preserve">
          <source>Example: List of members</source>
          <target state="translated">例.メンバー一覧</target>
        </trans-unit>
        <trans-unit id="85f1f39fa110b6173d47c57697006f5a6d2f2828" translate="yes" xml:space="preserve">
          <source>Example: Organizations</source>
          <target state="translated">例.組織</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="4ae8e76dfb065e82c9528a739a8eaa4c8ad1fed8" translate="yes" xml:space="preserve">
          <source>Excerpts</source>
          <target state="translated">Excerpts</target>
        </trans-unit>
        <trans-unit id="822ea7230de3fb0fe2c82f46559a72f394c5ab01" translate="yes" xml:space="preserve">
          <source>Exclude directories and/or files from the conversion. These exclusions are relative to the site's source directory and cannot be outside the source directory.</source>
          <target state="translated">変換からディレクトリおよび/またはファイルを除外します。これらの除外はサイトのソースディレクトリに対する相対的なものであり、ソースディレクトリの外側にはできません。</target>
        </trans-unit>
        <trans-unit id="51501a4330fa15c49bf05cb5d5f8443001e0ad7c" translate="yes" xml:space="preserve">
          <source>Execute &lt;code&gt;ruby dk.rb init&lt;/code&gt; to create a file called &lt;code&gt;config.yml&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ruby dk.rb init&lt;/code&gt; を実行して、 &lt;code&gt;config.yml&lt;/code&gt; というファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="316aa627e36a4946bdab8204114ee4aecf2ffce1" translate="yes" xml:space="preserve">
          <source>Execute the following command to set the path: &lt;code&gt;ruby dk.rb install&lt;/code&gt;</source>
          <target state="translated">次のコマンドを実行してパスを設定します &lt;code&gt;ruby dk.rb install&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="336f4c1fb6585da6f20ec1f566328d3acfd42d82" translate="yes" xml:space="preserve">
          <source>Extension of the output file. (Included by default and usually unnecessary.)</source>
          <target state="translated">出力ファイルの拡張子。(デフォルトで含まれ、通常は不要です)。</target>
        </trans-unit>
        <trans-unit id="542cfa45452922b50c6b6fccb415cb9ddac9c534" translate="yes" xml:space="preserve">
          <source>Extensionless permalinks with no trailing slashes</source>
          <target state="translated">後にスラッシュがない拡張性のないパーマリンク</target>
        </trans-unit>
        <trans-unit id="3b7782ff05e29c6b796bf19f5329ada566fad9b6" translate="yes" xml:space="preserve">
          <source>Extras</source>
          <target state="translated">Extras</target>
        </trans-unit>
        <trans-unit id="dba791027204ca131f65ea111ad79130d039e34e" translate="yes" xml:space="preserve">
          <source>File / Directory</source>
          <target state="translated">ファイル/ディレクトリ</target>
        </trans-unit>
        <trans-unit id="cb254617fc5bf41dc843754c218836d586a55050" translate="yes" xml:space="preserve">
          <source>Files in collections that do not have front matter are treated as &lt;a href=&quot;../static-files/index&quot;&gt;static files&lt;/a&gt; and simply copied to their output location without processing.</source>
          <target state="translated">前付けがないコレクション内のファイルは&lt;a href=&quot;../static-files/index&quot;&gt;静的ファイル&lt;/a&gt;として扱われ、処理せずに出力場所にコピーされます。</target>
        </trans-unit>
        <trans-unit id="73dc4887b333f41c2c5e55833fcf4f3fe680889b" translate="yes" xml:space="preserve">
          <source>Filter and Output</source>
          <target state="translated">フィルターと出力</target>
        </trans-unit>
        <trans-unit id="96e578211aa295317cf257310712fa28ccd8f6c6" translate="yes" xml:space="preserve">
          <source>Filters</source>
          <target state="translated">Filters</target>
        </trans-unit>
        <trans-unit id="41f7b6c75e1c0c2464b2db4968a6b2716b345c4a" translate="yes" xml:space="preserve">
          <source>Finally, if you set defaults in the site configuration by adding a &lt;code&gt;defaults&lt;/code&gt; section to your &lt;code&gt;_config.yml&lt;/code&gt; file, you can override those settings in a post or page file. All you need to do is specify the settings in the post or page front matter. For example:</source>
          <target state="translated">最後に、 &lt;code&gt;_config.yml&lt;/code&gt; ファイルに &lt;code&gt;defaults&lt;/code&gt; セクションを追加してサイト構成でデフォルトを設定すると、投稿またはページファイルでそれらの設定を上書きできます。必要なのは、投稿またはページの前付けの設定を指定することだけです。例えば：</target>
        </trans-unit>
        <trans-unit id="f10b3ccd7172552307080e73694f58eb9f5f6114" translate="yes" xml:space="preserve">
          <source>Finally, push your packaged theme up to the RubyGems service, by running the following command, again replacing &lt;code&gt;jekyll-theme-awesome&lt;/code&gt; with the name of your theme:</source>
          <target state="translated">最後に、次のコマンドを実行して、パッケージ化されたテーマをRubyGemsサービスにプッシュします。ここでも、 &lt;code&gt;jekyll-theme-awesome&lt;/code&gt; をテーマの名前に置き換えます。</target>
        </trans-unit>
        <trans-unit id="e8a7ce1d9230a0f65d5141cdd7f344b30f0e66d5" translate="yes" xml:space="preserve">
          <source>Finally, run the following command on any users laptop that needs to be able to deploy using this hook:</source>
          <target state="translated">最後に、このフックを使ってデプロイする必要があるユーザーのラップトップ上で以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="a48bab9c17c23216e45daa00e47e2bed16649923" translate="yes" xml:space="preserve">
          <source>Find the repository for which you&amp;rsquo;re interested in enabling builds.</source>
          <target state="translated">ビルドを有効にしたいリポジトリを見つけます。</target>
        </trans-unit>
        <trans-unit id="8a5a13834bdf8d32003f4893922855bfdc8d2476" translate="yes" xml:space="preserve">
          <source>Find your project in the list and click &amp;lsquo;Build project&amp;rsquo; on the right.</source>
          <target state="translated">リストからプロジェクトを見つけ、右側の[プロジェクトのビルド]をクリックします。</target>
        </trans-unit>
        <trans-unit id="3e99e1aeaaf25358860f63dba1f0fd65f8164d88" translate="yes" xml:space="preserve">
          <source>First let&amp;rsquo;s make sure all our packages / repositories are up to date. Open a new Command Prompt instance, and type the following:</source>
          <target state="translated">最初に、すべてのパッケージ/リポジトリが最新であることを確認しましょう。新しいコマンドプロンプトインスタンスを開き、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="e45c3ef0952938c50fd4e22c10d43a0965111c1d" translate="yes" xml:space="preserve">
          <source>First, in the &lt;code&gt;_layouts&lt;/code&gt; directory create a new file called &lt;code&gt;category.html&lt;/code&gt; - in that file put (at least) the following:</source>
          <target state="translated">まず、 &lt;code&gt;_layouts&lt;/code&gt; ディレクトリに &lt;code&gt;category.html&lt;/code&gt; という名前の新しいファイルを作成します -そのファイルに（少なくとも）以下を入れます：</target>
        </trans-unit>
        <trans-unit id="ae1c4122db1a9a4c5907b31bca1c6d1a1a2df958" translate="yes" xml:space="preserve">
          <source>First, you need to have it in a git repository:</source>
          <target state="translated">まず、gitリポジトリに入れておく必要があります。</target>
        </trans-unit>
        <trans-unit id="a774409a00c21de377cf8ed5c6a56b8547973042" translate="yes" xml:space="preserve">
          <source>Flag</source>
          <target state="translated">Flag</target>
        </trans-unit>
        <trans-unit id="5d728758adcdd5154d3be55552c1c061ef1489b2" translate="yes" xml:space="preserve">
          <source>Flags</source>
          <target state="translated">Flags</target>
        </trans-unit>
        <trans-unit id="d85bd8c3e04f69ba110dc4b17595792ef35771fc" translate="yes" xml:space="preserve">
          <source>Flattening pages from subfolders into the root directory</source>
          <target state="translated">サブフォルダからルートディレクトリへのページの平坦化</target>
        </trans-unit>
        <trans-unit id="e789a203c6e89634623d96e1a0bffde20a7288d8" translate="yes" xml:space="preserve">
          <source>Flattening pages in _site on build</source>
          <target state="translated">ビルド時に_siteのページをフラットにする</target>
        </trans-unit>
        <trans-unit id="f23041fc3120865d058abeda4efe6770fec0273f" translate="yes" xml:space="preserve">
          <source>Flick the repository switch on so that it turns blue.</source>
          <target state="translated">リポジトリのスイッチを青くなるようにフリックします。</target>
        </trans-unit>
        <trans-unit id="d46936f44668184fd0ffde6799f5343f8167a17e" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;site.collections.myCollection&lt;/code&gt; in Jekyll 2, you now do:</source>
          <target state="translated">&lt;code&gt;site.collections.myCollection&lt;/code&gt; ジキル2で、あなたは今の操作を行います。</target>
        </trans-unit>
        <trans-unit id="4ecd5207a5359fcf0e4d56913060c6215d02075f" translate="yes" xml:space="preserve">
          <source>For Jekyll 3, include the &lt;code&gt;jekyll-paginate&lt;/code&gt; plugin in your Gemfile and in your &lt;code&gt;_config.yml&lt;/code&gt; under &lt;code&gt;plugins&lt;/code&gt;. For Jekyll 2, this is standard.</source>
          <target state="translated">Jekyll 3の場合、 &lt;code&gt;jekyll-paginate&lt;/code&gt; プラグインをGemfileと &lt;code&gt;plugins&lt;/code&gt; の下の &lt;code&gt;_config.yml&lt;/code&gt; に含めます。Jekyll 2の場合、これが標準です。</target>
        </trans-unit>
        <trans-unit id="e70c9bd381a82106c83b24e79bd82d5a82d9bcb5" translate="yes" xml:space="preserve">
          <source>For a collection with the following source file structure,</source>
          <target state="translated">以下のソースファイル構造を持つコレクションの場合。</target>
        </trans-unit>
        <trans-unit id="4385b1693f5d5e0c5dbaf041ca0feec73df38ca5" translate="yes" xml:space="preserve">
          <source>For a more conventional way of installing Jekyll you can follow this &lt;a href=&quot;https://labs.sverrirs.com/jekyll/&quot;&gt;complete guide to install Jekyll 3 on Windows by Sverrir Sigmundarson&lt;/a&gt;.</source>
          <target state="translated">Jekyllをインストールするより一般的な方法については、この&lt;a href=&quot;https://labs.sverrirs.com/jekyll/&quot;&gt;完全なガイド&lt;/a&gt;に従って、Sverrir SigmundarsonによってWindowsにJekyll 3をインストールできます。</target>
        </trans-unit>
        <trans-unit id="e388ef2d882d116dcb8874d5760b821beef658f3" translate="yes" xml:space="preserve">
          <source>For better clarity, Jekyll now accepts the commands &lt;code&gt;build&lt;/code&gt; and &lt;code&gt;serve&lt;/code&gt;. Whereas before you might simply run the command &lt;code&gt;jekyll&lt;/code&gt; to generate a site and &lt;code&gt;jekyll --server&lt;/code&gt; to view it locally, in v2.0 (and later) you should use the subcommands &lt;code&gt;jekyll build&lt;/code&gt; and &lt;code&gt;jekyll serve&lt;/code&gt; to build and preview your site.</source>
          <target state="translated">より明確にするために、Jekyllはコマンド &lt;code&gt;build&lt;/code&gt; および &lt;code&gt;serve&lt;/code&gt; を受け入れるようになりました。以前は、コマンド &lt;code&gt;jekyll&lt;/code&gt; を実行してサイトを生成し、 &lt;code&gt;jekyll --server&lt;/code&gt; を実行してローカルで表示するのに対し、v2.0以降では、サブコマンド &lt;code&gt;jekyll build&lt;/code&gt; および &lt;code&gt;jekyll serve&lt;/code&gt; を使用してサイトを構築およびプレビューする必要があります。</target>
        </trans-unit>
        <trans-unit id="458d73a0a943777d717cad375d7db2973b80e62c" translate="yes" xml:space="preserve">
          <source>For example to avoid testing external sites, use this command:</source>
          <target state="translated">例えば、外部サイトをテストしないようにするには、このコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="d917d346617aec470dcc02e92529bf370a27947c" translate="yes" xml:space="preserve">
          <source>For example, if your selected theme has a &lt;code&gt;page&lt;/code&gt; layout, you can override the theme&amp;rsquo;s layout by creating your own &lt;code&gt;page&lt;/code&gt; layout in the &lt;code&gt;_layouts&lt;/code&gt; directory (that is, &lt;code&gt;_layouts/page.html&lt;/code&gt;).</source>
          <target state="translated">たとえば、選択したテーマに &lt;code&gt;page&lt;/code&gt; レイアウトがある場合は、 &lt;code&gt;_layouts&lt;/code&gt; ディレクトリ（つまり、 &lt;code&gt;_layouts/page.html&lt;/code&gt; ）に独自の &lt;code&gt;page&lt;/code&gt; レイアウトを作成することで、テーマのレイアウトを上書きできます。</target>
        </trans-unit>
        <trans-unit id="020896a245c351818b3ea33257d8fd95d9d5cc09" translate="yes" xml:space="preserve">
          <source>For example, if your theme has a &lt;code&gt;/_layouts/page.html&lt;/code&gt; file, and a page has &lt;code&gt;layout: page&lt;/code&gt; in its YAML front matter, Jekyll will first look to the site&amp;rsquo;s &lt;code&gt;_layouts&lt;/code&gt; folder for the &lt;code&gt;page&lt;/code&gt; layout, and if none exists, will use your theme&amp;rsquo;s &lt;code&gt;page&lt;/code&gt; layout.</source>
          <target state="translated">たとえば、テーマに &lt;code&gt;/_layouts/page.html&lt;/code&gt; ファイルがあり、ページに &lt;code&gt;layout: page&lt;/code&gt; がある場合、YAMLの前付けに、Jekyllはまずサイトの &lt;code&gt;_layouts&lt;/code&gt; フォルダーで &lt;code&gt;page&lt;/code&gt; レイアウトを探し、存在しない場合は次を使用しますテーマの &lt;code&gt;page&lt;/code&gt; レイアウト。</target>
        </trans-unit>
        <trans-unit id="467708cf9e576fe40b2d3dd485761b5982e74c15" translate="yes" xml:space="preserve">
          <source>For example, search for &lt;a href=&quot;https://rubygems.org/search?utf8=%E2%9C%93&amp;amp;query=jekyll-theme&quot;&gt;jekyll theme on RubyGems&lt;/a&gt; to find other gem-based themes. (Note that not all themes are using &lt;code&gt;jekyll-theme&lt;/code&gt; as a convention in the theme name.)</source>
          <target state="translated">たとえば、&lt;a href=&quot;https://rubygems.org/search?utf8=%E2%9C%93&amp;amp;query=jekyll-theme&quot;&gt;RubyGems&lt;/a&gt;でjekyllテーマを検索して、他の宝石ベースのテーマを見つけます。（すべてのテーマがテーマ名の規則として &lt;code&gt;jekyll-theme&lt;/code&gt; を使用しているわけではないことに注意してください。）</target>
        </trans-unit>
        <trans-unit id="c665743ec5e2cbd3c9d7d1ca321611350def85d2" translate="yes" xml:space="preserve">
          <source>For example, suppose you have a special image syntax with complex formatting, and you don&amp;rsquo;t want your authors to remember the complex formatting. As a result, you decide to simplify the formatting by using an include with parameters. Here&amp;rsquo;s an example of the special image syntax you might want to populate with an include:</source>
          <target state="translated">たとえば、複雑なフォーマットを使用する特別な画像構文があり、作成者に複雑なフォーマットを記憶させたくないとします。その結果、パラメーター付きのincludeを使用して、フォーマットを単純化することにしました。以下に、インクルードを追加したい特別な画像構文の例を示します。</target>
        </trans-unit>
        <trans-unit id="2e940834dd63449f2090f29f28e8d317d1f3ed23" translate="yes" xml:space="preserve">
          <source>For example, suppose you set this conditional statement in your code:</source>
          <target state="translated">例えば、コードの中で次のような条件文を設定したとします。</target>
        </trans-unit>
        <trans-unit id="f4fd4942135b4348479b4872a1d05069ad27e2a4" translate="yes" xml:space="preserve">
          <source>For example, suppose you&amp;rsquo;re creating a link in &lt;code&gt;page_a.md&lt;/code&gt; (stored in &lt;code&gt;pages/folder1/folder2&lt;/code&gt;) to &lt;code&gt;page_b.md&lt;/code&gt; (stored in &lt;code&gt;pages/folder1&lt;/code&gt;). Your path in the link would not be &lt;code&gt;../page_b.html&lt;/code&gt;. Instead, it would be &lt;code&gt;/pages/folder1/page_b.md&lt;/code&gt;.</source>
          <target state="translated">たとえば、 &lt;code&gt;page_a.md&lt;/code&gt; （ &lt;code&gt;pages/folder1/folder2&lt;/code&gt; に格納）から &lt;code&gt;page_b.md&lt;/code&gt; （ &lt;code&gt;pages/folder1&lt;/code&gt; に格納）へのリンクを作成するとします。リンクのパスは &lt;code&gt;../page_b.html&lt;/code&gt; ではありません。代わりに、 &lt;code&gt;/pages/folder1/page_b.md&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="49ec88cd4b1a730e559e4f1ab94dad7de60362a1" translate="yes" xml:space="preserve">
          <source>For information on how to build robust navigation for your site (especially if you have a documentation website or another type of Jekyll site with a lot of pages to organize), see &lt;a href=&quot;https://jekyllrb.com/tutorials/navigation&quot;&gt;Navigation&lt;/a&gt;.</source>
          <target state="translated">サイトの堅牢なナビゲーションを構築する方法については（特に、ドキュメントWebサイトや、整理するページが多い別のタイプのJekyllサイトがある場合）、&lt;a href=&quot;https://jekyllrb.com/tutorials/navigation&quot;&gt;ナビゲーションを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3c3b4a2a072204de5bcdbb1ed78f98d00834bca0" translate="yes" xml:space="preserve">
          <source>For instance, a generator can inject values computed at build time for template variables. In the following example the template &lt;code&gt;reading.html&lt;/code&gt; has two variables &lt;code&gt;ongoing&lt;/code&gt; and &lt;code&gt;done&lt;/code&gt; that we fill in the generator:</source>
          <target state="translated">たとえば、ジェネレータはテンプレート変数のビルド時に計算された値を挿入できます。次の例では、テンプレート &lt;code&gt;reading.html&lt;/code&gt; は、二つの変数がある &lt;code&gt;ongoing&lt;/code&gt; と &lt;code&gt;done&lt;/code&gt; 、我々は発電機で埋めることを：</target>
        </trans-unit>
        <trans-unit id="ebf2c8e5183f540d904cae2ce3b9656cedca694f" translate="yes" xml:space="preserve">
          <source>For more about the possible configuration options, see the &lt;a href=&quot;../configuration/index&quot;&gt;configuration&lt;/a&gt; page.</source>
          <target state="translated">可能な構成オプションの詳細については、&lt;a href=&quot;../configuration/index&quot;&gt;構成&lt;/a&gt;ページを参照してください。</target>
        </trans-unit>
        <trans-unit id="568a3189544ff180fa3dc76ebb18e26512e5cf61" translate="yes" xml:space="preserve">
          <source>For more advanced information on using includes, see &lt;a href=&quot;../includes/index&quot;&gt;Includes&lt;/a&gt;.</source>
          <target state="translated">含まれる使用上のより高度な情報については、参照&lt;a href=&quot;../includes/index&quot;&gt;が含まれ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9c00e313cdc37ac918d93214be70331ae00ba3d2" translate="yes" xml:space="preserve">
          <source>For more information about getting started, check out &lt;a href=&quot;http://gastonsanchez.com/visually-enforced/opinion/2014/02/16/Mathjax-with-jekyll/&quot;&gt;this excellent blog post&lt;/a&gt;.</source>
          <target state="translated">開始の詳細については、&lt;a href=&quot;http://gastonsanchez.com/visually-enforced/opinion/2014/02/16/Mathjax-with-jekyll/&quot;&gt;この優れたブログ投稿を&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="dffed6b35db83c02dc53f10174bbe35e333c8986" translate="yes" xml:space="preserve">
          <source>For more information about what you can do with GitHub Pages, as well as for troubleshooting guides, you should check out &lt;a href=&quot;https://help.github.com/categories/github-pages-basics/&quot;&gt;GitHub&amp;rsquo;s Pages Help section&lt;/a&gt;. If all else fails, you should contact &lt;a href=&quot;https://github.com/contact&quot;&gt;GitHub Support&lt;/a&gt;.</source>
          <target state="translated">GitHubページでできることの詳細、およびトラブルシューティングガイドについては、&lt;a href=&quot;https://help.github.com/categories/github-pages-basics/&quot;&gt;GitHubのページのヘルプセクションを&lt;/a&gt;ご覧ください。他のすべてが失敗した場合は、&lt;a href=&quot;https://github.com/contact&quot;&gt;GitHubサポートに&lt;/a&gt;連絡する必要があります。</target>
        </trans-unit>
        <trans-unit id="aebb9a0f68c4782284e2264f60ea71980e3d4d29" translate="yes" xml:space="preserve">
          <source>For the first time, the default syntax highlighter has changed for the &lt;code&gt;highlight&lt;/code&gt; tag and for backtick code blocks. Instead of &lt;a href=&quot;https://github.com/tmm1/pygments.rb&quot;&gt;Pygments.rb&lt;/a&gt;, it&amp;rsquo;s now &lt;a href=&quot;http://rouge.jneen.net/&quot;&gt;Rouge&lt;/a&gt;. If you were using the &lt;code&gt;highlight&lt;/code&gt; tag with certain options, such as &lt;code&gt;hl_lines&lt;/code&gt;, they may not be available when using Rouge. To go back to using Pygments, set &lt;code&gt;highlighter: pygments&lt;/code&gt; in your &lt;code&gt;_config.yml&lt;/code&gt; file and run &lt;code&gt;gem install pygments.rb&lt;/code&gt; or add &lt;code&gt;gem 'pygments.rb'&lt;/code&gt; to your project&amp;rsquo;s &lt;code&gt;Gemfile&lt;/code&gt;.</source>
          <target state="translated">初めて、 &lt;code&gt;highlight&lt;/code&gt; タグとバックティックコードブロックのデフォルトの構文ハイライターが変更されました。&lt;a href=&quot;https://github.com/tmm1/pygments.rb&quot;&gt;Pygments.rbの&lt;/a&gt;代わりに、今は&lt;a href=&quot;http://rouge.jneen.net/&quot;&gt;Rouge&lt;/a&gt;です。あなたが使用していた場合は &lt;code&gt;highlight&lt;/code&gt; のような特定のオプション、とタグを &lt;code&gt;hl_lines&lt;/code&gt; ルージュを使用した場合、彼らが使用できない場合があります。Pygmentsの使用に戻るには、 &lt;code&gt;_config.yml&lt;/code&gt; ファイルで &lt;code&gt;highlighter: pygments&lt;/code&gt; を設定し、 &lt;code&gt;gem install pygments.rb&lt;/code&gt; を実行するか、プロジェクトの &lt;code&gt;Gemfile&lt;/code&gt; に &lt;code&gt;gem 'pygments.rb'&lt;/code&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="d98357998a5736328502923f0dc0eefdf500e8f9" translate="yes" xml:space="preserve">
          <source>For versions upto &lt;code&gt;v3.4.3&lt;/code&gt;, the &lt;code&gt;exclude:&lt;/code&gt; setting must look like following:</source>
          <target state="translated">&lt;code&gt;v3.4.3&lt;/code&gt; までのバージョンでは、 &lt;code&gt;exclude:&lt;/code&gt; 設定は次のようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="a430e74c409cfdad9f8053610e31abcb1f4ce54f" translate="yes" xml:space="preserve">
          <source>Force inclusion of directories and/or files in the conversion. &lt;code&gt;.htaccess&lt;/code&gt; is a good example since dotfiles are excluded by default.</source>
          <target state="translated">変換にディレクトリやファイルを強制的に含めます。ドット &lt;code&gt;.htaccess&lt;/code&gt; はデフォルトで除外されているため、.htaccessが良い例です。</target>
        </trans-unit>
        <trans-unit id="276ec0440eedadade0e767c8ac22b7df0e0fb2f0" translate="yes" xml:space="preserve">
          <source>Force watch to use polling.</source>
          <target state="translated">強制的にポーリングを使用するために時計を使用します。</target>
        </trans-unit>
        <trans-unit id="db69ea96ab5ecf2c23cbcdcd97379233f1461193" translate="yes" xml:space="preserve">
          <source>FormKeep</source>
          <target state="translated">FormKeep</target>
        </trans-unit>
        <trans-unit id="804c108f440f97466802bc1591d6224ae2311e5b" translate="yes" xml:space="preserve">
          <source>Format a date to long format.</source>
          <target state="translated">日付を長い形式にフォーマットします。</target>
        </trans-unit>
        <trans-unit id="b0047b2307211efc616ec382149c3c2ccb142d90" translate="yes" xml:space="preserve">
          <source>Formester</source>
          <target state="translated">Formester</target>
        </trans-unit>
        <trans-unit id="bf5b8e6347b61889f933093d2c7152e076d585b2" translate="yes" xml:space="preserve">
          <source>Formingo</source>
          <target state="translated">Formingo</target>
        </trans-unit>
        <trans-unit id="0830746bc319f1f19ecea0bc94c1fd9b498c6136" translate="yes" xml:space="preserve">
          <source>Formspree (open source)</source>
          <target state="translated">フォームスリー</target>
        </trans-unit>
        <trans-unit id="a19318c068637dc426d1435cf0d0ef33a6bc5d47" translate="yes" xml:space="preserve">
          <source>From &lt;code&gt;v3.5&lt;/code&gt; onward, &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;Gemfile.lock&lt;/code&gt; are also excluded by default. So, in most cases there is no need to define another &lt;code&gt;exclude:&lt;/code&gt; array in the config file. So an existing definition can either be modified as above, or removed completely, or simply commented out to enable easy edits in future.</source>
          <target state="translated">&lt;code&gt;v3.5&lt;/code&gt; 以降、 &lt;code&gt;Gemfile&lt;/code&gt; と &lt;code&gt;Gemfile.lock&lt;/code&gt; はまた、デフォルトで除外されています。そのため、ほとんどの場合、構成ファイルで別の &lt;code&gt;exclude:&lt;/code&gt; 配列を定義する必要はありません。そのため、既存の定義を上記のように変更するか、完全に削除するか、コメントアウトして、後で簡単に編集できるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="ae9ceea44514972c704d64ac434df7abc3bda6c7" translate="yes" xml:space="preserve">
          <source>From the GitHub or Bitbucket tab on the left, choose a user or organization.</source>
          <target state="translated">左側のGitHubやBitbucketタブから、ユーザーや組織を選択します。</target>
        </trans-unit>
        <trans-unit id="19c523893e2bd88e4a7ac874ee2e07d3e3401996" translate="yes" xml:space="preserve">
          <source>Front Matter</source>
          <target state="translated">フロントマター</target>
        </trans-unit>
        <trans-unit id="fe601000d1934a854a60fca8d0cc33ca18d5d81a" translate="yes" xml:space="preserve">
          <source>Front Matter defaults</source>
          <target state="translated">フロントマターのデフォルト</target>
        </trans-unit>
        <trans-unit id="51c3dde9660d6cbb07190cefd51f56cc0ce6c526" translate="yes" xml:space="preserve">
          <source>Future Posts on GitHub Pages</source>
          <target state="translated">GitHubページへの今後の投稿</target>
        </trans-unit>
        <trans-unit id="40d7b46212b2ab893d9587ebff38115301a638c1" translate="yes" xml:space="preserve">
          <source>Future posts</source>
          <target state="translated">今後の投稿</target>
        </trans-unit>
        <trans-unit id="918bcf288e603e68c119aca1cac51aae9732d438" translate="yes" xml:space="preserve">
          <source>GNU/Linux, Unix, or macOS</source>
          <target state="translated">GNU/Linux、Unix、またはmacOS</target>
        </trans-unit>
        <trans-unit id="ae79844dff816caaafe6ba7c88f54fc43aef628a" translate="yes" xml:space="preserve">
          <source>GUI apps can modify the &lt;code&gt;$PATH&lt;/code&gt; as follows:</source>
          <target state="translated">GUIアプリは &lt;code&gt;$PATH&lt;/code&gt; を次のように変更できます。</target>
        </trans-unit>
        <trans-unit id="cb48d06fcaddb6f310478dca6ed659a7b7a5e884" translate="yes" xml:space="preserve">
          <source>Gather your collections3.7.0</source>
          <target state="translated">コレクションを集める3.7.0</target>
        </trans-unit>
        <trans-unit id="ba77b18ed6db40820a6e35edf257f239368af603" translate="yes" xml:space="preserve">
          <source>Gem-based themes make it easy for theme developers to make updates available to anyone who has the theme gem. When there&amp;rsquo;s an update, theme developers push the update to RubyGems.</source>
          <target state="translated">Gemベースのテーマを使用すると、テーマの開発者は、テーマのGemを持っている人が誰でも更新を利用できるようになります。更新がある場合、テーマ開発者は更新をRubyGemsにプッシュします。</target>
        </trans-unit>
        <trans-unit id="e311c24103da57e6affccfd589d2d5c9cd0965c9" translate="yes" xml:space="preserve">
          <source>Gems included in the &lt;code&gt;:jekyll-plugins&lt;/code&gt; group are activated regardless of the &lt;code&gt;--safe&lt;/code&gt; mode setting. Be aware of what gems are included under this group!</source>
          <target state="translated">&lt;code&gt;:jekyll-plugins&lt;/code&gt; グループに含まれる宝石は、 &lt;code&gt;--safe&lt;/code&gt; mode設定に関係なくアクティブになります。このグループに含まれている宝石に注意してください！</target>
        </trans-unit>
        <trans-unit id="aedb09bb110586431e8db01fe06a38658fabd92e" translate="yes" xml:space="preserve">
          <source>Generate a Liquid rendering profile to help you identify performance bottlenecks.</source>
          <target state="translated">パフォーマンスのボトルネックを特定するのに役立つリキッドレンダリングプロファイルを生成します。</target>
        </trans-unit>
        <trans-unit id="0b1e0bd34bb388ae7f402d63987e9dc2d1a7095f" translate="yes" xml:space="preserve">
          <source>Generates content as a side-effect.</source>
          <target state="translated">副作用としてコンテンツを生成します。</target>
        </trans-unit>
        <trans-unit id="a3e705cc61a19f33d7c9c030f107a70569966485" translate="yes" xml:space="preserve">
          <source>Generators</source>
          <target state="translated">Generators</target>
        </trans-unit>
        <trans-unit id="5f4d84cfe96fb18f5daa733a7aebc64574619567" translate="yes" xml:space="preserve">
          <source>Generators are only required to implement one method:</source>
          <target state="translated">ジェネレータは1つのメソッドのみ実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="9254a5380fd0a402863d61054b4a46973f389a2e" translate="yes" xml:space="preserve">
          <source>Generators run after Jekyll has made an inventory of the existing content, and before the site is generated. Pages with YAML Front Matters are stored as instances of &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/page.rb&quot;&gt;&lt;code&gt;Jekyll::Page&lt;/code&gt;&lt;/a&gt; and are available via &lt;code&gt;site.pages&lt;/code&gt;. Static files become instances of &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/static_file.rb&quot;&gt;&lt;code&gt;Jekyll::StaticFile&lt;/code&gt;&lt;/a&gt; and are available via &lt;code&gt;site.static_files&lt;/code&gt;. See &lt;a href=&quot;../variables/index&quot;&gt;the Variables documentation page&lt;/a&gt; and &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/site.rb&quot;&gt;&lt;code&gt;Jekyll::Site&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">ジェネレーターは、Jekyllが既存のコンテンツのインベントリを作成した後、サイトが生成される前に実行されます。YAML Front Mattersを含む&lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/page.rb&quot;&gt; &lt;code&gt;Jekyll::Page&lt;/code&gt; &lt;/a&gt;はJekyll :: Pageのインスタンスとして保存され、 &lt;code&gt;site.pages&lt;/code&gt; から利用できます。静的ファイルは、のインスタンスになる&lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/static_file.rb&quot;&gt; &lt;code&gt;Jekyll::StaticFile&lt;/code&gt; &lt;/a&gt;とを経由してご利用いただけます &lt;code&gt;site.static_files&lt;/code&gt; 。詳細について&lt;a href=&quot;../variables/index&quot;&gt;は、変数のドキュメントページ&lt;/a&gt;と&lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/site.rb&quot;&gt; &lt;code&gt;Jekyll::Site&lt;/code&gt; &lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="d0910b6b5cbd00abec4d6696bf678c03c28ef9dd" translate="yes" xml:space="preserve">
          <source>Getting Jekyll installed and ready-to-go should only take a few minutes. If it ever becomes a pain, please &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;file an issue&lt;/a&gt; (or submit a pull request) describing the issue you encountered and how we might make the process easier.</source>
          <target state="translated">Jekyllをインストールしてすぐに使用できるようになるまでには、数分しかかかりません。それは今までの痛みになった場合、してください&lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;問題をファイル&lt;/a&gt;（または、プルリクエストを送信）あなたが遭遇した問題を説明し、我々は、プロセスを容易にするかもしれない方法。</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">はじめに</target>
        </trans-unit>
        <trans-unit id="7ce495ff56808a96f0836329550514077a883f75" translate="yes" xml:space="preserve">
          <source>Git post-receive hook</source>
          <target state="translated">Git ポストレシーブフック</target>
        </trans-unit>
        <trans-unit id="510b9e89e8d4923873a42628e3ef914aa7972a29" translate="yes" xml:space="preserve">
          <source>Git post-update hook</source>
          <target state="translated">Git post-update フック</target>
        </trans-unit>
        <trans-unit id="3b50aad9dd12f191663725265afb261bb6f3a7fa" translate="yes" xml:space="preserve">
          <source>GitHub Pages</source>
          <target state="translated">GitHub のページ</target>
        </trans-unit>
        <trans-unit id="e8f9d4f0de446dbec106e8aea66779e22a927f8b" translate="yes" xml:space="preserve">
          <source>GitHub Pages &lt;a href=&quot;https://help.github.com/articles/troubleshooting-github-pages-build-failures#source-setting&quot;&gt;overrides&lt;/a&gt; the &lt;a href=&quot;../configuration/index#global-configuration&quot;&gt;&amp;ldquo;Site Source&amp;rdquo;&lt;/a&gt; configuration value, so if you locate your files anywhere other than the root directory, your site may not build correctly.</source>
          <target state="translated">GitHubページは&lt;a href=&quot;../configuration/index#global-configuration&quot;&gt;「サイトソース」の&lt;/a&gt;設定値を&lt;a href=&quot;https://help.github.com/articles/troubleshooting-github-pages-build-failures#source-setting&quot;&gt;上書き&lt;/a&gt;するため、ルートディレクトリ以外の場所にファイルを配置すると、サイトが正しく構築されない可能性があります。</target>
        </trans-unit>
        <trans-unit id="8dacc5464f8b2d2bed3eff5cbf3a194b0cf27c4d" translate="yes" xml:space="preserve">
          <source>GitHub Pages Documentation, Help, and Support</source>
          <target state="translated">GitHub ページ ドキュメント、ヘルプ、サポート</target>
        </trans-unit>
        <trans-unit id="468a579a5c3c13e321704773694dd48709f82722" translate="yes" xml:space="preserve">
          <source>GitHub Pages are initially configured to live under the &lt;code&gt;username.github.io&lt;/code&gt; subdomain, which is why repositories must be named this way &lt;strong&gt;even if a custom domain is being used&lt;/strong&gt;.</source>
          <target state="translated">GitHubページは、最初は &lt;code&gt;username.github.io&lt;/code&gt; サブドメインの下で動作するように構成されています。そのため&lt;strong&gt;、カスタムドメインが使用されている場合でも、&lt;/strong&gt;リポジトリにこの方法&lt;strong&gt;で&lt;/strong&gt;名前を付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="b9482e6772ed38f0e07d48251101b37ac4d3e564" translate="yes" xml:space="preserve">
          <source>GitHub Pages are powered by Jekyll behind the scenes, so if you&amp;rsquo;re looking for a zero-hassle, zero-cost solution, GitHub Pages are a great way to &lt;a href=&quot;../github-pages/index&quot;&gt;host your Jekyll-powered website for free&lt;/a&gt;.</source>
          <target state="translated">GitHub Pagesは舞台裏でJekyllを利用しているため、手間がかからず、コストもかからないソリューションを探している場合、GitHub Pagesは&lt;a href=&quot;../github-pages/index&quot;&gt;Jekyllを利用したWebサイトを無料でホスト&lt;/a&gt;する優れた方法です。</target>
        </trans-unit>
        <trans-unit id="98b49c3a0a79daea9a9ac9224c6cade9bea31346" translate="yes" xml:space="preserve">
          <source>GitHub Pages work by looking at certain branches of repositories on GitHub. There are two basic types available: &lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;user/organization and project pages&lt;/a&gt;. The way to deploy these two types of sites are nearly identical, except for a few minor details.</source>
          <target state="translated">GitHubページは、GitHub上のリポジトリの特定のブランチを調べることで機能します。利用可能な基本的なタイプは2つあります。&lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;ユーザー/組織とプロジェクトページ&lt;/a&gt;です。これら2つのタイプのサイトを展開する方法は、いくつかの細かい点を除いてほぼ同じです。</target>
        </trans-unit>
        <trans-unit id="23d0b319e364d2bd5ece7b9f4e4b5526a736744a" translate="yes" xml:space="preserve">
          <source>Given a post named: &lt;code&gt;/2009-04-29-slap-chop.md&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/2009-04-29-slap-chop.md&lt;/code&gt; という名前の投稿があるとします。</target>
        </trans-unit>
        <trans-unit id="10e41e603882ff3e6f001e759b2e5ae1f12eaf4a" translate="yes" xml:space="preserve">
          <source>Glob patterns in Front Matter defaults</source>
          <target state="translated">フロントマターのGlobパターンがデフォルト</target>
        </trans-unit>
        <trans-unit id="602d92b2e14ac385c7289a85d36ef682a9e44c22" translate="yes" xml:space="preserve">
          <source>Global Configuration</source>
          <target state="translated">グローバル設定</target>
        </trans-unit>
        <trans-unit id="2ff4e53e2b802e1ec127c83da80fa5fc4b5333fa" translate="yes" xml:space="preserve">
          <source>Global Variables</source>
          <target state="translated">グローバル変数</target>
        </trans-unit>
        <trans-unit id="2d35e11f4c78b7b3b3ca87764462e37d39f55eca" translate="yes" xml:space="preserve">
          <source>Globbing and Performance</source>
          <target state="translated">グラビングとパフォーマンス</target>
        </trans-unit>
        <trans-unit id="4531c718af3ab7d3ca98c4637f49630a6cb064e8" translate="yes" xml:space="preserve">
          <source>Go to your profile on travis-ci.org: https://travis-ci.org/profile/username</source>
          <target state="translated">travis-ci.org のプロフィールにアクセス:https://travis-ci.org/profile/username</target>
        </trans-unit>
        <trans-unit id="7178adec52e5c5f4838341c5b3d24d7925f54213" translate="yes" xml:space="preserve">
          <source>Group an array's items by a given property.</source>
          <target state="translated">指定したプロパティで配列の項目をグループ化します。</target>
        </trans-unit>
        <trans-unit id="f2a45e739a29c8415f8d916d28f65eb54a2d112d" translate="yes" xml:space="preserve">
          <source>Group an array's items using a Liquid expression.</source>
          <target state="translated">Liquid式を使用して配列の項目をグループ化します。</target>
        </trans-unit>
        <trans-unit id="66d79524f4d0506a9a1af19b96aee758f2b790d6" translate="yes" xml:space="preserve">
          <source>HTML Proofer</source>
          <target state="translated">HTMLプルーファ</target>
        </trans-unit>
        <trans-unit id="6c4d623e42153c15b2453aef249170c8234877cc" translate="yes" xml:space="preserve">
          <source>Helpful Hints</source>
          <target state="translated">役立つヒント</target>
        </trans-unit>
        <trans-unit id="9aac2ff9f6900ddaeac45839db4be8f1ca90c72f" translate="yes" xml:space="preserve">
          <source>Here are a few examples to clarify how permalink styles get applied with posts.</source>
          <target state="translated">ここでは、パーマリンクスタイルがどのように投稿に適用されるかを明確にするために、いくつかの例を示します。</target>
        </trans-unit>
        <trans-unit id="831526769d35b12d09459b16086b073d0d812e97" translate="yes" xml:space="preserve">
          <source>Here is a basic example of using Data Files to avoid copy-pasting large chunks of code in your Jekyll templates:</source>
          <target state="translated">ここでは、Jekyll テンプレートに大きなコードの塊をコピーペーストしないようにするために、データファイルを使用する基本的な例を示します。</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">ここでは一例を紹介します。</target>
        </trans-unit>
        <trans-unit id="83640d7e910a9e55e31b51dd8861c25fe6e8116f" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that passes all the parameters to this include (the include file is named &lt;code&gt;image.html&lt;/code&gt;):</source>
          <target state="translated">このインクルードにすべてのパラメーターを渡す例を次に示します（インクルードファイルの名前は &lt;code&gt;image.html&lt;/code&gt; です）。</target>
        </trans-unit>
        <trans-unit id="abf948b4bceb5e369d172f337195e37748f36726" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example. In the &lt;code&gt;_data&lt;/code&gt; folder, suppose you have a YAML file called &lt;code&gt;profiles.yml&lt;/code&gt;. Its content looks like this:</source>
          <target state="translated">ここに例があります。で &lt;code&gt;_data&lt;/code&gt; フォルダ、あなたが呼ばれるYAMLファイルがあるとし &lt;code&gt;profiles.yml&lt;/code&gt; を。その内容は次のようになります。</target>
        </trans-unit>
        <trans-unit id="79a379c34c53ce83d07e71356345ea69136a74d1" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example:</source>
          <target state="translated">次に例を示します。</target>
        </trans-unit>
        <trans-unit id="c26aeecbcca5072b431a5382ae6ba27176ef977c" translate="yes" xml:space="preserve">
          <source>Here, we are scoping the &lt;code&gt;values&lt;/code&gt; to any file that exists in the path &lt;code&gt;scope&lt;/code&gt;. Since the path is set as an empty string, it will apply to &lt;strong&gt;all files&lt;/strong&gt; in your project. You probably don&amp;rsquo;t want to set a layout on every file in your project - like css files, for example - so you can also specify a &lt;code&gt;type&lt;/code&gt; value under the &lt;code&gt;scope&lt;/code&gt; key.</source>
          <target state="translated">ここでは、 &lt;code&gt;values&lt;/code&gt; をパス &lt;code&gt;scope&lt;/code&gt; 存在するすべてのファイルにスコープしています。パスは空の文字列として設定されるため、プロジェクト内の&lt;strong&gt;すべてのファイル&lt;/strong&gt;に適用されます。プロジェクト内のすべてのファイル（CSSファイルなど）にレイアウトを設定したくない場合は、 &lt;code&gt;scope&lt;/code&gt; キーの下に &lt;code&gt;type&lt;/code&gt; 値を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="f67ca0046b6f7d123003b1d0cfb9b27a13c9adf6" translate="yes" xml:space="preserve">
          <source>Hey, that&amp;rsquo;s pretty neat, but what about showing just some of your posts that are related to each other? For that you can use any of the &lt;a href=&quot;../frontmatter/index&quot;&gt;variables definable in Front Matter&lt;/a&gt;. In the &amp;ldquo;typical post&amp;rdquo; section you can see how to define categories. Simply add the categories to your Front Matter as a &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;yaml list&lt;/a&gt;.</source>
          <target state="translated">ちょっと、それはかなりきれいですが、互いに関連しているあなたの投稿の一部だけを表示するのはどうですか？そのためには&lt;a href=&quot;../frontmatter/index&quot;&gt;、Front Matterで定義可能な&lt;/a&gt;任意の変数を使用できます。「典型的な投稿」セクションでは、カテゴリを定義する方法を見ることができます。カテゴリを&lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;yamlリスト&lt;/a&gt;としてフロントマターに追加するだけです。</target>
        </trans-unit>
        <trans-unit id="45836a888498c251d1391be7619c510e1b094a79" translate="yes" xml:space="preserve">
          <source>Highlighting code snippets</source>
          <target state="translated">コードスニペットのハイライト</target>
        </trans-unit>
        <trans-unit id="ac066591edb7d47406e88eed7ba536040a82daf4" translate="yes" xml:space="preserve">
          <source>Homepage</source>
          <target state="translated">Homepage</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="3c3d2c6f4afae2bd1dd22fa5ecd616951d8fd75a" translate="yes" xml:space="preserve">
          <source>Hooks are registered to a container and an event name. To register one, you call Jekyll::Hooks.register, and pass the container, event name, and code to call whenever the hook is triggered. For example, if you want to execute some custom functionality every time Jekyll renders a post, you could register a hook like this:</source>
          <target state="translated">フックはコンテナとイベント名に登録されます。登録するには、Jekyll::Hooks.register を呼び出し、フックがトリガーされたときに呼び出すコンテナ、イベント名、コードを渡します。例えば、Jekyllが投稿をレンダリングするたびにカスタム機能を実行したい場合、次のようなフックを登録することができます。</target>
        </trans-unit>
        <trans-unit id="c4ca57faecef53b5cde020963e025ccad78ed174" translate="yes" xml:space="preserve">
          <source>Hour of the day, 24-hour clock, zero-padded from the post's &lt;code&gt;date&lt;/code&gt; front matter. (00..23)</source>
          <target state="translated">1日の時間、24時間制、投稿の &lt;code&gt;date&lt;/code&gt; 前付けからゼロが埋め込まれます。（00..23）</target>
        </trans-unit>
        <trans-unit id="ee6a4883cb5b0b2ebbd4b69d7e1663e3a14e6653" translate="yes" xml:space="preserve">
          <source>How I&amp;rsquo;m using Jekyll in 2016</source>
          <target state="translated">2016年のJekyllの使用方法</target>
        </trans-unit>
        <trans-unit id="7bf549bc2141e74e473c727a38f9ea61933e2f5c" translate="yes" xml:space="preserve">
          <source>If it is not already installed by your host, you can do it yourself:</source>
          <target state="translated">ホストがインストールしていない場合は、自分でインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="6bfd9b131d8fbc9ebadd0174814fa75131d24f89" translate="yes" xml:space="preserve">
          <source>If set, this specifies the layout file to use. Use the layout file name without the file extension. Layout files must be placed in the &lt;code&gt;_layouts&lt;/code&gt; directory.</source>
          <target state="translated">設定されている場合、これは使用するレイアウトファイルを指定します。ファイル拡張子なしのレイアウトファイル名を使用します。レイアウトファイルは、 &lt;code&gt;_layouts&lt;/code&gt; ディレクトリに配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="9238236f6534e05493e0318455680c7da2a905f1" translate="yes" xml:space="preserve">
          <source>If the file does not have YAML front matter, it will simply be copied over into the resulting site.</source>
          <target state="translated">ファイルがYAMLフロントマターを持っていない場合、結果のサイトに単純にコピーされます。</target>
        </trans-unit>
        <trans-unit id="52f8569e79b956dbe48e729796e8f13c33d30812" translate="yes" xml:space="preserve">
          <source>If the file has &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML front matter&lt;/a&gt; at the top, it will be rendered.</source>
          <target state="translated">ファイルの上部に&lt;a href=&quot;../frontmatter/index&quot;&gt;YAMLの前付け&lt;/a&gt;がある場合は、レンダリングされます。</target>
        </trans-unit>
        <trans-unit id="6f2f94ff051b156124d9bbb1c67ff42cbd835af7" translate="yes" xml:space="preserve">
          <source>If the page being processed is a Post, this contains a list of up to ten related Posts. By default, these are the ten most recent posts. For high quality but slow to compute results, run the &lt;code&gt;jekyll&lt;/code&gt; command with the &lt;code&gt;--lsi&lt;/code&gt; (&lt;a href=&quot;https://en.wikipedia.org/wiki/Latent_semantic_analysis#Latent_semantic_indexing&quot;&gt;latent semantic indexing&lt;/a&gt;) option. Also note GitHub Pages does not support the &lt;code&gt;lsi&lt;/code&gt; option when generating sites.</source>
          <target state="translated">処理中のページが投稿の場合、これには最大10個の関連する投稿のリストが含まれます。デフォルトでは、これらは最新の10件の投稿です。高品質しかし、計算結果に遅いために、実行 &lt;code&gt;jekyll&lt;/code&gt; とコマンドを &lt;code&gt;--lsi&lt;/code&gt; （&lt;a href=&quot;https://en.wikipedia.org/wiki/Latent_semantic_analysis#Latent_semantic_indexing&quot;&gt;潜在的意味索引&lt;/a&gt;）オプション。また、GitHub Pagesはサイトの生成時に &lt;code&gt;lsi&lt;/code&gt; オプションをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="d641f21c96839fd713c161d3c90256c3c5ff7da7" translate="yes" xml:space="preserve">
          <source>If you already have a full &lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby&lt;/a&gt; development environment with all headers and &lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt; installed (see Jekyll&amp;rsquo;s &lt;a href=&quot;../installation/index#requirements&quot;&gt;requirements&lt;/a&gt;), you can create a new Jekyll site by doing the following:</source>
          <target state="translated">すべてのヘッダーと&lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGemsが&lt;/a&gt;インストールされた完全な&lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby&lt;/a&gt;開発環境がすでにある場合（Jekyllの&lt;a href=&quot;../installation/index#requirements&quot;&gt;要件を&lt;/a&gt;参照）、次の手順で新しいJekyllサイトを作成できます。</target>
        </trans-unit>
        <trans-unit id="1c3e668ae49129238e3243fbe784aef06c65fe75" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;https://mustache.github.io&quot;&gt;Mustache&lt;/a&gt; or another JavaScript templating language that conflicts with the &lt;a href=&quot;../templates/index&quot;&gt;Liquid template syntax&lt;/a&gt;, you will need to place &lt;code&gt;{% raw %}&lt;/code&gt; and &lt;code&gt;{% endraw %}&lt;/code&gt; tags around your code.</source>
          <target state="translated">&lt;a href=&quot;../templates/index&quot;&gt;Liquidテンプレートの構文&lt;/a&gt;と競合する&lt;a href=&quot;https://mustache.github.io&quot;&gt;Mustache&lt;/a&gt;または別のJavaScriptテンプレート言語を使用している場合は、コードの前後に &lt;code&gt;{% raw %}&lt;/code&gt; および &lt;code&gt;{% endraw %}&lt;/code&gt; タグを配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="0ed1e0d2a9dbfbe50531ee5b5a5b6ba715d0f7eb" translate="yes" xml:space="preserve">
          <source>If you are using Sass &lt;code&gt;@import&lt;/code&gt; statements, you&amp;rsquo;ll need to ensure that your &lt;code&gt;sass_dir&lt;/code&gt; is set to the base directory that contains your Sass files. You can do that thusly:</source>
          <target state="translated">Sass &lt;code&gt;@import&lt;/code&gt; ステートメントを使用している場合は、 &lt;code&gt;sass_dir&lt;/code&gt; がSassファイルを含むベースディレクトリに設定されていることを確認する必要があります。あなたはこうしてそれを行うことができます：</target>
        </trans-unit>
        <trans-unit id="28a432b4772235d9fdcee272275536f400244d55" translate="yes" xml:space="preserve">
          <source>If you are using Windows 10 Anniversary Update, the easiest way to run Jekyll is by &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/install_guide&quot;&gt;installing&lt;/a&gt; the new Bash on Ubuntu on Windows.</source>
          <target state="translated">Windows 10 Anniversary Updateを使用している場合、Jekyllを実行する最も簡単な方法は、Windows上のUbuntuに新しいBashを&lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/install_guide&quot;&gt;インストールする&lt;/a&gt;ことです。</target>
        </trans-unit>
        <trans-unit id="2a4c58b5be6464946cbf57593a4dc9dc48e866b2" translate="yes" xml:space="preserve">
          <source>If you are using a language that contains curly braces, you will likely need to place &lt;code&gt;{% raw %}&lt;/code&gt; and &lt;code&gt;{% endraw %}&lt;/code&gt; tags around your code.</source>
          <target state="translated">中括弧を含む言語を使用している場合は、コードの前後に &lt;code&gt;{% raw %}&lt;/code&gt; および &lt;code&gt;{% endraw %}&lt;/code&gt; タグを配置する必要がある可能性があります。</target>
        </trans-unit>
        <trans-unit id="213db0da911c55c4f2731ecd97c211b394f06562" translate="yes" xml:space="preserve">
          <source>If you are using base-url option like:</source>
          <target state="translated">のようなbase-urlオプションを使用している場合。</target>
        </trans-unit>
        <trans-unit id="d35638d8ed6e8b486e57c45fbf52ce1a8ba65712" translate="yes" xml:space="preserve">
          <source>If you come across a bug, please &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;create an issue&lt;/a&gt; on GitHub describing the problem and any work-arounds you find so we can document it here for others.</source>
          <target state="translated">あなたがバグに遭遇した場合は、してください&lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;、問題作成&lt;/a&gt;、我々は他の人のためにここでそれを文書化することができるようにあなたが見つける問題を説明GitHubの上や任意の回避策を。</target>
        </trans-unit>
        <trans-unit id="8703fee3ae2012b8a53fc6cc2adddae7042dfc8d" translate="yes" xml:space="preserve">
          <source>If you come across anything along the way that we haven&amp;rsquo;t covered, or if you know of a tip you think others would find handy, please &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;file an issue&lt;/a&gt; and we&amp;rsquo;ll see about including it in this guide.</source>
          <target state="translated">私たちがカバーしていない方法で何かに遭遇した場合、または他の人が便利だと思うヒントを知っている場合は&lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;、問題&lt;/a&gt;を提出してください。このガイドにそれを含めることについて確認します。</target>
        </trans-unit>
        <trans-unit id="1b5ec381e23f973cc13dece96999c3131002c2bf" translate="yes" xml:space="preserve">
          <source>If you do preview your theme locally, be sure to add &lt;code&gt;/_site&lt;/code&gt; to your theme&amp;rsquo;s &lt;code&gt;.gitignore&lt;/code&gt; file to prevent the compiled site from also being included when you distribute your theme.</source>
          <target state="translated">テーマをローカルでプレビューする場合は、テーマの &lt;code&gt;.gitignore&lt;/code&gt; ファイルに &lt;code&gt;/_site&lt;/code&gt; を追加して、テーマを配布するときにコンパイル済みサイトも含まれないようにしてください。</target>
        </trans-unit>
        <trans-unit id="f284c06984fce66f7dd57a7b4b5f2ec076b195fe" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t like the automatically-generated post excerpt, it can be explicitly overridden by adding an &lt;code&gt;excerpt&lt;/code&gt; value to your post&amp;rsquo;s YAML Front Matter. Alternatively, you can choose to define a custom &lt;code&gt;excerpt_separator&lt;/code&gt; in the post&amp;rsquo;s YAML front matter:</source>
          <target state="translated">自動生成された投稿の抜粋が気に入らない場合は、 &lt;code&gt;excerpt&lt;/code&gt; 値を投稿のYAMLフロントマターに追加することで明示的にオーバーライドできます。または、投稿のYAML前 &lt;code&gt;excerpt_separator&lt;/code&gt; にカスタムexcerpt_separatorを定義することを選択できます。</target>
        </trans-unit>
        <trans-unit id="d8dcbea52725084b044622cd5f2ef094e993b82b" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t specify any permalink setting, Jekyll uses the above pattern as the default.</source>
          <target state="translated">パーマリンク設定を指定しない場合、Jekyllは上記のパターンをデフォルトとして使用します。</target>
        </trans-unit>
        <trans-unit id="dcb9485c8b5e90e3f365ed37424df30d5e0be640" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want file extensions (&lt;code&gt;.html&lt;/code&gt;) to appear in your page URLs (file extensions are the default), you can choose a &lt;a href=&quot;../permalinks/index#builtinpermalinkstyles&quot;&gt;permalink style&lt;/a&gt; that has a trailing slash instead of a file extension.</source>
          <target state="translated">ファイル拡張子（ &lt;code&gt;.html&lt;/code&gt; ）をページのURLに表示したくない場合（ファイル拡張子はデフォルトです）、ファイル拡張子の代わりにスラッシュが付いた&lt;a href=&quot;../permalinks/index#builtinpermalinkstyles&quot;&gt;パーマリンクスタイル&lt;/a&gt;を選択できます。</target>
        </trans-unit>
        <trans-unit id="53dcae4af8a7270750576a8ee8bba86266df85af" translate="yes" xml:space="preserve">
          <source>If you don't want to repeat your frequently used front matter variables over and over, just define &lt;a href=&quot;../configuration/index#front-matter-defaults&quot;&gt;defaults&lt;/a&gt; for them and only override them where necessary (or not at all). This works both for predefined and custom variables.</source>
          <target state="translated">頻繁に使用する前置変数を繰り返し使用したくない場合は、それらの&lt;a href=&quot;../configuration/index#front-matter-defaults&quot;&gt;デフォルト&lt;/a&gt;を定義し、必要な場合のみ（またはまったく）オーバーライドしないでください。これは、事前定義変数とカスタム変数の両方で機能します。</target>
        </trans-unit>
        <trans-unit id="695dbec8f8c7d62ab7d2637fbd3d02db37fa7dca" translate="yes" xml:space="preserve">
          <source>If you elect to use one of the above methods to install Ruby, it might be necessary to modify your &lt;code&gt;$PATH&lt;/code&gt; variable using the following command:</source>
          <target state="translated">上記の方法のいずれかを使用してRubyをインストールする場合は、次のコマンドを使用して &lt;code&gt;$PATH&lt;/code&gt; 変数を変更する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="78ac4df433e508538f8c91dafb01e421b709b72f" translate="yes" xml:space="preserve">
          <source>If you encounter any unexpected errors during the above, please refer to the &lt;a href=&quot;../troubleshooting/index#configuration-problems&quot;&gt;troubleshooting&lt;/a&gt; page or the already-mentioned &lt;a href=&quot;../installation/index#requirements&quot;&gt;requirements&lt;/a&gt; page, as you might be missing development headers or other prerequisites.</source>
          <target state="translated">上記の間に予期しないエラーが発生した場合は、&lt;a href=&quot;../troubleshooting/index#configuration-problems&quot;&gt;トラブルシューティング&lt;/a&gt;ページまたは前述の&lt;a href=&quot;../installation/index#requirements&quot;&gt;要件&lt;/a&gt;ページを参照してください。開発ヘッダーやその他の前提条件が不足している可能性があります。</target>
        </trans-unit>
        <trans-unit id="419149f36b3a43f81bd8852b1793187c1d0de326" translate="yes" xml:space="preserve">
          <source>If you encounter errors during gem installation, you may need to install the header files for compiling extension modules for Ruby 2.x This can be done on Ubuntu or Debian by running:</source>
          <target state="translated">gemのインストール中にエラーが発生した場合は、Ruby 2.x用の拡張モジュールをコンパイルするためのヘッダファイルをインストールする必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="bc681b212f4599ce7e31a75ab7408667783b5d07" translate="yes" xml:space="preserve">
          <source>If you ever run into problems installing or using Jekyll, here are a few tips that might be of help. If the problem you&amp;rsquo;re experiencing isn&amp;rsquo;t covered below, &lt;strong&gt;please &lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;check out our other help resources&lt;/a&gt;&lt;/strong&gt; as well.</source>
          <target state="translated">Jekyllのインストールまたは使用で問題が発生した場合は、以下のヒントを参考にしてください。発生している問題が以下に記載されていない場合は&lt;strong&gt;&lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;、他のヘルプリソース&lt;/a&gt;&lt;/strong&gt;も&lt;strong&gt;確認して&lt;/strong&gt;&lt;strong&gt;ください&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="bcaae47dde1bccae46283be925cd88f5bb4ac8bc" translate="yes" xml:space="preserve">
          <source>If you have a Jekyll plugin that you would like to see added to this list, you should &lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;read the contributing page&lt;/a&gt; to find out how to make that happen.</source>
          <target state="translated">このリストに追加したいJekyllプラグインがある場合は&lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;、投稿ページ&lt;/a&gt;を読んで、それを実現する方法を見つけてください。</target>
        </trans-unit>
        <trans-unit id="ae769a5e5cf97ef3147fb61d183e310b175222ef" translate="yes" xml:space="preserve">
          <source>If you have a lot of pages, you can organize those pages into subfolders. The same subfolders that are used to group your pages in our project&amp;rsquo;s source will exist in the &lt;code&gt;_site&lt;/code&gt; folder when your site builds.</source>
          <target state="translated">多数のページがある場合は、それらのページをサブフォルダーに整理できます。プロジェクトのソースでページをグループ化するために使用されるのと同じサブフォルダーが、サイトの構築時に &lt;code&gt;_site&lt;/code&gt; フォルダーに存在します。</target>
        </trans-unit>
        <trans-unit id="5bad37a14e75aa6498e803b19d46fb965756f922" translate="yes" xml:space="preserve">
          <source>If you have a new markup language you&amp;rsquo;d like to use with your site, you can include it by implementing your own converter. Both the Markdown and &lt;a href=&quot;https://github.com/jekyll/jekyll-textile-converter&quot;&gt;Textile&lt;/a&gt; markup languages are implemented using this method.</source>
          <target state="translated">サイトで使用したい新しいマークアップ言語がある場合は、独自のコンバーターを実装してそれを含めることができます。マークダウン言語と&lt;a href=&quot;https://github.com/jekyll/jekyll-textile-converter&quot;&gt;テキスタイル&lt;/a&gt;マークアップ言語の両方が、このメソッドを使用して実装されています。</target>
        </trans-unit>
        <trans-unit id="11e684240f96bf103554d83d8af061e74dfe3c4d" translate="yes" xml:space="preserve">
          <source>If you have direct access to the deployment web server, the process is essentially the same, except you might have other methods available to you (such as &lt;code&gt;scp&lt;/code&gt;, or even direct filesystem access) for transferring the files. Just remember to make sure the contents of the generated &lt;code&gt;_site&lt;/code&gt; folder get placed in the appropriate web root directory for your web server.</source>
          <target state="translated">デプロイメントWebサーバーに直接アクセスできる場合、プロセスは基本的に同じですが、ファイルを転送するために他の方法（ &lt;code&gt;scp&lt;/code&gt; やファイルシステムへの直接アクセスなど）を使用できる場合があります。生成された &lt;code&gt;_site&lt;/code&gt; フォルダーの内容がWebサーバーの適切なWebルートディレクトリに配置されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="5eb091944ffc4551a59bb8692f2615682ca2403a" translate="yes" xml:space="preserve">
          <source>If you have pages organized into subfolders in your source folder and want to flatten them in the root folder on build, you must add the &lt;a href=&quot;../permalinks/index&quot;&gt;permalink&lt;/a&gt; property directly in your page&amp;rsquo;s front matter like this:</source>
          <target state="translated">ソースフォルダー内のサブフォルダーに整理されたページがあり、ビルド時にルートフォルダーでそれらをフラット化したい場合は、次のようにページの前付けに直接&lt;a href=&quot;../permalinks/index&quot;&gt;パーマリンク&lt;/a&gt;プロパティを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="0577f8860296868fa98d8d8f4df1bfbc54574ecc" translate="yes" xml:space="preserve">
          <source>If you have small page snippets that you want to include in multiple places on your site, save the snippets as &lt;em&gt;include files&lt;/em&gt; and insert them where required, by using the &lt;code&gt;include&lt;/code&gt; tag:</source>
          <target state="translated">サイトの複数の場所に含める小さなページスニペットがある場合は、スニペットを&lt;em&gt;インクルードファイル&lt;/em&gt;として保存し、 &lt;code&gt;include&lt;/code&gt; タグを使用して必要な場所に挿入し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e4dcbf97134ec15dac093fc5587622568f5e7a06" translate="yes" xml:space="preserve">
          <source>If you have the theme gem, you can (if you desire) run &lt;code&gt;bundle update&lt;/code&gt; to update all gems in your project. Or you can run &lt;code&gt;bundle update &amp;lt;THEME&amp;gt;&lt;/code&gt;, replacing &lt;code&gt;&amp;lt;THEME&amp;gt;&lt;/code&gt; with the theme name, such as &lt;code&gt;minima&lt;/code&gt;, to just update the theme gem. Any new files or updates the theme developer has made (such as to stylesheets or includes) will be pulled into your project automatically.</source>
          <target state="translated">テーマgemがある場合は、（必要に応じて） &lt;code&gt;bundle update&lt;/code&gt; を実行して、プロジェクト内のすべてのgemを更新できます。または、 &lt;code&gt;bundle update &amp;lt;THEME&amp;gt;&lt;/code&gt; 実行して、 &lt;code&gt;&amp;lt;THEME&amp;gt;&lt;/code&gt; をテーマ名（ &lt;code&gt;minima&lt;/code&gt; など）に置き換えて、テーマgemを更新することもできます。テーマ開発者が作成した新しいファイルや更新（スタイルシートやインクルードなど）は、プロジェクトに自動的に取り込まれます。</target>
        </trans-unit>
        <trans-unit id="2af9aac0e83cca3a7b6edb3afed5cb21b5ce923a" translate="yes" xml:space="preserve">
          <source>If you installed the above - specifically on Fedora 23 - but the extensions would still not compile, you are probably running a Fedora image that misses the &lt;code&gt;redhat-rpm-config&lt;/code&gt; package. To solve this, simply run:</source>
          <target state="translated">上記、特にFedora 23をインストールしたが、拡張機能がコンパイルされない場合は、おそらく &lt;code&gt;redhat-rpm-config&lt;/code&gt; パッケージがないFedoraイメージを実行しています。これを解決するには、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="7d5ca65d123a97afb7c4de424400cec844b7cc8b" translate="yes" xml:space="preserve">
          <source>If you need your processed blog post URLs to be something other than the site-wide style (default &lt;code&gt;/year/month/day/title.html&lt;/code&gt;), then you can set this variable and it will be used as the final URL.</source>
          <target state="translated">処理したブログ投稿のURLをサイト全体のスタイル（デフォルトは &lt;code&gt;/year/month/day/title.html&lt;/code&gt; ）以外にする必要がある場合は、この変数を設定して、最終的なURLとして使用できます。</target>
        </trans-unit>
        <trans-unit id="1a6d4a67cd0be1ed8225a589b96384dc4dc87421" translate="yes" xml:space="preserve">
          <source>If you organize your posts in subdirectories, you need to include subdirectory path to the post:</source>
          <target state="translated">サブディレクトリで投稿を整理する場合は、サブディレクトリのパスを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="59644a3bec6611d4bbfb69658dbc3ec13b376b50" translate="yes" xml:space="preserve">
          <source>If you organized your categories as &lt;code&gt;/_posts/code/2008-12-24-closures.md&lt;/code&gt;, you will need to restructure your directories to put the categories &lt;em&gt;above&lt;/em&gt; the &lt;code&gt;_posts&lt;/code&gt; directories, as follows: &lt;code&gt;/code/_posts/2008-12-24-closures.md&lt;/code&gt;.</source>
          <target state="translated">カテゴリを &lt;code&gt;/_posts/code/2008-12-24-closures.md&lt;/code&gt; として編成した場合は、ディレクトリを再構成して、次のように &lt;code&gt;_posts&lt;/code&gt; ディレクトリの&lt;em&gt;上&lt;/em&gt;にカテゴリを配置する必要があります &lt;code&gt;/code/_posts/2008-12-24-closures.md&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15e7da8c7232d666a600ffd29e96790343ccd0c8" translate="yes" xml:space="preserve">
          <source>If you prefer configuration as code over GUI, you can generate a &lt;code&gt;buddy.yml&lt;/code&gt; that will create a pipeline with the Jekyll action once you push it to the target branch:</source>
          <target state="translated">GUIよりもコードとして構成を好む場合は、ターゲットブランチにプッシュすると、Jekyllアクションでパイプラインを作成する &lt;code&gt;buddy.yml&lt;/code&gt; を生成できます。</target>
        </trans-unit>
        <trans-unit id="d87bce7a50eafecc7cde1bce304d6aef1a746a27" translate="yes" xml:space="preserve">
          <source>If you run into an issue that a static file can&amp;rsquo;t be found in your production environment during build since v3.2.0 you should set your &lt;a href=&quot;../configuration/index#specifying-a-jekyll-environment-at-build-time&quot;&gt;environment to &lt;code&gt;production&lt;/code&gt;&lt;/a&gt;. The issue is caused by trying to copy a non-existing symlink.</source>
          <target state="translated">v3.2.0以降のビルド中に静的ファイルが本番環境で見つからないという問題が発生した場合は、&lt;a href=&quot;../configuration/index#specifying-a-jekyll-environment-at-build-time&quot;&gt;環境を &lt;code&gt;production&lt;/code&gt; &lt;/a&gt;環境に設定する必要があります。この問題は、存在しないシンボリックリンクをコピーしようとしたことが原因で発生します。</target>
        </trans-unit>
        <trans-unit id="8a24692597a6a916d6932c56c3b3699b4da36b10" translate="yes" xml:space="preserve">
          <source>If you run into issues installing Jekyll's dependencies which make use of native extensions and are using macOS, you will need to install Xcode and the Command-Line Tools it ships with. Download them in &lt;code&gt;Preferences &amp;rarr; Downloads &amp;rarr; Components&lt;/code&gt;.</source>
          <target state="translated">ネイティブ拡張を利用してmacOSを使用しているJekyllの依存関係のインストールで問題が発生した場合は、Xcodeとそれに付属するコマンドラインツールをインストールする必要があります。それらを[ &lt;code&gt;Preferences &amp;rarr; Downloads &amp;rarr; Components&lt;/code&gt; ダウンロードします。</target>
        </trans-unit>
        <trans-unit id="203d28453b3da20875b1b4f55216eb8f66ab1182" translate="yes" xml:space="preserve">
          <source>If you specify a directory to store all your collections in the same place with &lt;code&gt;collections_dir: my_collections&lt;/code&gt;, then you will need to move your &lt;code&gt;_posts&lt;/code&gt; directory to &lt;code&gt;my_collections/_posts&lt;/code&gt;. Note that, the name of your collections directory cannot start with an underscore (`_`).</source>
          <target state="translated">&lt;code&gt;collections_dir: my_collections&lt;/code&gt; を使用してすべてのコレクションを同じ場所に格納するディレクトリを指定する場合、 &lt;code&gt;_posts&lt;/code&gt; ディレクトリを &lt;code&gt;my_collections/_posts&lt;/code&gt; に移動する必要があります。コレクションディレクトリの名前はアンダースコア（ `_`）で始めることはできません。</target>
        </trans-unit>
        <trans-unit id="152a6851ec832106f1870e82fa9510155e162df2" translate="yes" xml:space="preserve">
          <source>If you specify front matter in a layout, access that via &lt;code&gt;layout&lt;/code&gt;. For example, if you specify &lt;code&gt;class: full_page&lt;/code&gt; in a layout&amp;rsquo;s front matter, that value will be available as &lt;code&gt;layout.class&lt;/code&gt; in the layout and its parents.</source>
          <target state="translated">レイアウトで前付を指定する場合は、layoutを介してそれにアクセスし &lt;code&gt;layout&lt;/code&gt; 。たとえば、レイアウトの前 &lt;code&gt;class: full_page&lt;/code&gt; でclass：full_pageを指定した場合、その値はレイアウトとその親で &lt;code&gt;layout.class&lt;/code&gt; として使用できます。</target>
        </trans-unit>
        <trans-unit id="fc758ea2a58bbed0770047b054fc5a31a9910319" translate="yes" xml:space="preserve">
          <source>If you still have issues, you can download and install new Command Line Tools (such as &lt;code&gt;gcc&lt;/code&gt;) using the following command:</source>
          <target state="translated">それでも問題が解決しない場合は、次のコマンドを使用して、新しいコマンドラインツール（ &lt;code&gt;gcc&lt;/code&gt; など）をダウンロードしてインストールできます。</target>
        </trans-unit>
        <trans-unit id="3f40408167848ab5e0ef03799fbc3e4838fc4b88" translate="yes" xml:space="preserve">
          <source>If you store your Jekyll site in &lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt; (you are using version control, right?), it&amp;rsquo;s pretty easy to automate the deployment process by setting up a post-update hook in your Git repository, &lt;a href=&quot;http://web.archive.org/web/20091223025644/http://www.taknado.com/en/2009/03/26/deploying-a-jekyll-generated-site/&quot;&gt;like this&lt;/a&gt;.</source>
          <target state="translated">あなたがあなたのジキルサイトを保存する場合&lt;a href=&quot;https://git-scm.com/&quot;&gt;にGit&lt;/a&gt;（あなたは右、バージョンコントロールを使用していますか？）、それは、あなたのGitのリポジトリに更新後のフックを設定することにより、展開プロセスを自動化するために非常に簡単です&lt;a href=&quot;http://web.archive.org/web/20091223025644/http://www.taknado.com/en/2009/03/26/deploying-a-jekyll-generated-site/&quot;&gt;。このように&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9c5c7747d5156ac128a683ae71080c529b562e3a" translate="yes" xml:space="preserve">
          <source>If you use UTF-8 encoding, make sure that no &lt;code&gt;BOM&lt;/code&gt; header characters exist in your files or very, very bad things will happen to Jekyll. This is especially relevant if you&amp;rsquo;re running &lt;a href=&quot;../windows/index&quot;&gt;Jekyll on Windows&lt;/a&gt;.</source>
          <target state="translated">UTF-8エンコーディングを使用する場合は、 &lt;code&gt;BOM&lt;/code&gt; ヘッダー文字がファイルに存在しないことを確認してください。そうしないと、Jekyllに非常に悪い事態が発生します。これは&lt;a href=&quot;../windows/index&quot;&gt;、WindowsでJekyllを&lt;/a&gt;実行している場合に特に関係があります。</target>
        </trans-unit>
        <trans-unit id="513a6a109d9f46f3d1d111d65d91f74ea48f6618" translate="yes" xml:space="preserve">
          <source>If you use UTF-8 encoding, make sure that no &lt;code&gt;BOM&lt;/code&gt; header characters exist in your files or very, very bad things will happen to Jekyll. This is especially relevant when you&amp;rsquo;re running Jekyll on Windows.</source>
          <target state="translated">UTF-8エンコーディングを使用する場合は、 &lt;code&gt;BOM&lt;/code&gt; ヘッダー文字がファイルに存在しないことを確認してください。そうしないと、Jekyllに非常に悪い事態が発生します。これは、WindowsでJekyllを実行している場合に特に関係があります。</target>
        </trans-unit>
        <trans-unit id="ac6a31955e7bb198829c3348c36e9744d447c4d5" translate="yes" xml:space="preserve">
          <source>If you use a permalink style that omits the &lt;code&gt;.html&lt;/code&gt; file extension, each post is rendered as an &lt;code&gt;index.html&lt;/code&gt; file inside a folder with the post&amp;rsquo;s name (for example, &lt;code&gt;categoryname/2016/12/01/mypostname/index.html&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;.html&lt;/code&gt; ファイル拡張子を省略したパーマリンクスタイルを使用する場合、各投稿は、投稿の名前が付いたフォルダー内の &lt;code&gt;index.html&lt;/code&gt; ファイルとしてレンダリングされます（たとえば、 &lt;code&gt;categoryname/2016/12/01/mypostname/index.html&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c60bfc7d9e4f2630fffc6a2784feb3b63c67af79" translate="yes" xml:space="preserve">
          <source>If you use the &lt;code&gt;--config&lt;/code&gt; flag, Jekyll will ignore your &lt;code&gt;_config.yml&lt;/code&gt; file. Want to merge a custom configuration with the normal configuration? No problem. Jekyll will accept more than one custom config file via the command line. Config files cascade from right to left, such that if I run &lt;code&gt;jekyll serve --config _config.yml,_config-dev.yml&lt;/code&gt;, the values in the config files on the right (&lt;code&gt;_config-dev.yml&lt;/code&gt;) overwrite those on the left (&lt;code&gt;_config.yml&lt;/code&gt;) when both contain the same key.</source>
          <target state="translated">&lt;code&gt;--config&lt;/code&gt; フラグを使用すると、Jekyllは &lt;code&gt;_config.yml&lt;/code&gt; ファイルを無視します。カスタム構成を通常の構成とマージしたいですか？問題ない。 Jekyllはコマンドラインから複数のカスタム設定ファイルを受け入れます。構成ファイルは右から左にカスケードします。 &lt;code&gt;jekyll serve --config _config.yml,_config-dev.yml&lt;/code&gt; を実行すると、右側の構成ファイル（ &lt;code&gt;_config-dev.yml&lt;/code&gt; ）の値が左側の値（ &lt;code&gt;_config.yml&lt;/code&gt; ）両方に同じキーが含まれている場合。</target>
        </trans-unit>
        <trans-unit id="093409bc16fd6da356b69f3cf640249f766ed8ff" translate="yes" xml:space="preserve">
          <source>If you use the method described above, please remember that the URLs for all posts and pages contain a leading slash. Therefore, concatenating the site baseurl and the post/page url where &lt;code&gt;site.baseurl = /&lt;/code&gt; and &lt;code&gt;post.url = /2013/06/05/my-fun-post/&lt;/code&gt; will result in two leading slashes, which will break links. It is thus suggested that prefixing with &lt;code&gt;site.baseurl&lt;/code&gt; only be used when the &lt;code&gt;baseurl&lt;/code&gt; is something other than the default of &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">上記の方法を使用する場合は、すべての投稿とページのURLに先頭にスラッシュが含まれていることに注意してください。したがって、 &lt;code&gt;site.baseurl = /&lt;/code&gt; および &lt;code&gt;post.url = /2013/06/05/my-fun-post/&lt;/code&gt; あるサイトbaseurlとpost / page urlを連結すると、2つの先行スラッシュが発生し、リンクが壊れます。したがって、 &lt;code&gt;baseurl&lt;/code&gt; がデフォルトの &lt;code&gt;/&lt;/code&gt; 以外の場合にのみ、 &lt;code&gt;site.baseurl&lt;/code&gt; の接頭辞を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="27f3b5a86ae85eb00dfec776f201d29c0a6d0425" translate="yes" xml:space="preserve">
          <source>If you want to build for your production environment:</source>
          <target state="translated">本番環境に合わせてビルドするなら</target>
        </trans-unit>
        <trans-unit id="54d25f7a99e4ca948852dc14d5de687e3b1584af" translate="yes" xml:space="preserve">
          <source>If you want to flatten your pages (pull them out of subfolders) in the &lt;code&gt;_site&lt;/code&gt; directory when your site builds (similar to posts), add the &lt;code&gt;permalink&lt;/code&gt; property to the front matter of each page, with no path specified:</source>
          <target state="translated">サイトの構築時に（投稿と同様に） &lt;code&gt;_site&lt;/code&gt; ディレクトリでページをフラット化（サブフォルダーからプル）する場合は、パスを指定せずに、各ページの前付けに &lt;code&gt;permalink&lt;/code&gt; プロパティを追加します。</target>
        </trans-unit>
        <trans-unit id="f4fd5fc834be5433029f508f385d4d410e8fef47" translate="yes" xml:space="preserve">
          <source>If you want to host your site in Amazon S3, you can do so by using the &lt;a href=&quot;https://github.com/laurilehmijoki/s3_website&quot;&gt;s3_website&lt;/a&gt; application. It will push your site to Amazon S3 where it can be served like any web server, dynamically scaling to almost unlimited traffic. This approach has the benefit of being about the cheapest hosting option available for low-volume blogs as you only pay for what you use.</source>
          <target state="translated">Amazon S3でサイトをホストする場合は、&lt;a href=&quot;https://github.com/laurilehmijoki/s3_website&quot;&gt;s3_website&lt;/a&gt;アプリケーションを使用してホストできます。それはあなたのサイトをAmazon S3にプッシュし、そこであらゆるウェブサーバーのようにサービスを提供でき、ほとんど無制限のトラフィックに動的にスケーリングします。このアプローチには、使用した分だけを支払うため、少量のブログで利用できる最も安価なホスティングオプションであるという利点があります。</target>
        </trans-unit>
        <trans-unit id="0f193a2d48bc477f05170ef8b36607112f513e30" translate="yes" xml:space="preserve">
          <source>If you want to include a link to a post on your site, the &lt;code&gt;post_url&lt;/code&gt; tag will generate the correct permalink URL for the post you specify.</source>
          <target state="translated">サイトの投稿へのリンクを含める場合、 &lt;code&gt;post_url&lt;/code&gt; タグは指定した投稿の正しいパーマリンクURLを生成します。</target>
        </trans-unit>
        <trans-unit id="3de0868d95be5eca5b95fed7d8f738ea01895123" translate="yes" xml:space="preserve">
          <source>If you want to include this variable in your parameter that you pass to an include, you need to store the entire parameter as a variable before passing it to the include. You can use &lt;code&gt;capture&lt;/code&gt; tags to create the variable:</source>
          <target state="translated">インクルードに渡すパラメーターにこの変数を含める場合、インクルードに渡す前にパラメーター全体を変数として保存する必要があります。あなたは使用することができ &lt;code&gt;capture&lt;/code&gt; 変数を作成するタグ：</target>
        </trans-unit>
        <trans-unit id="a658dae7dbd88f8c356e9279323636361d819861" translate="yes" xml:space="preserve">
          <source>If you want to maintain Jekyll inside your existing Rails app, &lt;a href=&quot;https://github.com/zkarpinski/Jekyll-Admin&quot;&gt;Jekyll-Admin&lt;/a&gt; contains drop in code to make this possible. See Jekyll-Admin&amp;rsquo;s &lt;a href=&quot;https://github.com/zkarpinski/Jekyll-Admin/blob/master/README&quot;&gt;README&lt;/a&gt; for more details.</source>
          <target state="translated">既存のRailsアプリ内で&lt;a href=&quot;https://github.com/zkarpinski/Jekyll-Admin&quot;&gt;Jekyll&lt;/a&gt;を維持したい場合は、Jekyll-Adminにこれを可能にするためのドロップインコードが含まれています。詳細については、Jekyll-Adminの&lt;a href=&quot;https://github.com/zkarpinski/Jekyll-Admin/blob/master/README&quot;&gt;README&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ec215e282a9ad8aecb2e4fc28cabe6ff27440918" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;a href=&quot;../variables/index&quot;&gt;Liquid tags and variables&lt;/a&gt; but don&amp;rsquo;t need anything in your front matter, just leave it empty! The set of triple-dashed lines with nothing in between will still get Jekyll to process your file. (This is useful for things like CSS and RSS feeds!)</source>
          <target state="translated">&lt;a href=&quot;../variables/index&quot;&gt;Liquidタグと変数&lt;/a&gt;を使用したいが、前付けに何も必要ない場合は、空のままにしてください！間に何もない三点鎖線のセットでも、Jekyllはファイルを処理します。（これはCSSやRSSフィードのようなものに役立ちます！）</target>
        </trans-unit>
        <trans-unit id="d1fe99f58a90cab317379dfefe13b26122c4bcda" translate="yes" xml:space="preserve">
          <source>If you wish a specific page to be shown when accessing &lt;code&gt;/my_collection/&lt;/code&gt;, simply add &lt;code&gt;permalink: /my_collection/index.html&lt;/code&gt; to a page. To list items from the collection, on that page or any other, you can use:</source>
          <target state="translated">&lt;code&gt;/my_collection/&lt;/code&gt; にアクセスするときに特定のページを表示したい場合は、ページに &lt;code&gt;permalink: /my_collection/index.html&lt;/code&gt; を追加します。コレクションのアイテムを一覧表示するには、そのページまたはその他で、以下を使用できます。</target>
        </trans-unit>
        <trans-unit id="6e19cb6a37691f8463f62bacf36c8b8270dac01f" translate="yes" xml:space="preserve">
          <source>If you wish to specify a custom pattern for the URLs where your Collection pages will reside, you may do so with the &lt;a href=&quot;../permalinks/index&quot;&gt;&lt;code&gt;permalink&lt;/code&gt; property&lt;/a&gt;:</source>
          <target state="translated">コレクションページを配置するURLのカスタムパターンを指定する場合は、&lt;a href=&quot;../permalinks/index&quot;&gt; &lt;code&gt;permalink&lt;/code&gt; プロパティを&lt;/a&gt;使用して指定できます。</target>
        </trans-unit>
        <trans-unit id="92960387c493deb76d50d5b4ca39fda778849568" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like Jekyll to create a public-facing, rendered version of each document in your collection, set the &lt;code&gt;output&lt;/code&gt; key to &lt;code&gt;true&lt;/code&gt; in your collection metadata in your &lt;code&gt;_config.yml&lt;/code&gt;:</source>
          <target state="translated">Jekyllでコレクション内の各ドキュメントの公開バージョンを作成する場合は、 &lt;code&gt;_config.yml&lt;/code&gt; のコレクションメタデータで &lt;code&gt;output&lt;/code&gt; キーを &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="c98ec53237b3b221ccdc7703ba591ac8f244e25b" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to deploy your site to an OpenShift gear, there&amp;rsquo;s &lt;a href=&quot;https://github.com/openshift-quickstart/jekyll-openshift&quot;&gt;a cartridge for that&lt;/a&gt;.</source>
          <target state="translated">OpenShiftギアにサイトを展開したい場合は&lt;a href=&quot;https://github.com/openshift-quickstart/jekyll-openshift&quot;&gt;、そのためのカートリッジがあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="998a11f086dc4bb30ed94b741a45b756ab41c2bb" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to include custom liquid tags in your site, you can do so by hooking into the tagging system. Built-in examples added by Jekyll include the &lt;code&gt;highlight&lt;/code&gt; and &lt;code&gt;include&lt;/code&gt; tags. Below is an example of a custom liquid tag that will output the time the page was rendered:</source>
          <target state="translated">サイトにカスタムのリキッドタグを含めたい場合は、タグ付けシステムにフックすることで実行できます。Jekyllによって追加された組み込みの例には、 &lt;code&gt;highlight&lt;/code&gt; と &lt;code&gt;include&lt;/code&gt; タグが含まれています。以下は、ページがレンダリングされた時間を出力するカスタム液体タグの例です。</target>
        </trans-unit>
        <trans-unit id="017dd07e8fc43764c8236ec7941cbc62c51810e3" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to install a development version of Jekyll, the process is a bit more involved. This gives you the advantage of having the latest and greatest, but may be unstable.</source>
          <target state="translated">Jekyllの開発バージョンをインストールする場合は、プロセスが少し複雑になります。これにより、最新かつ最高の利点が得られますが、不安定になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="aebf85f03c89a29b9d5ef73ebb61bde1f568e228" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re a Jekyll theme developer (rather than just a consumer of themes), you can package up your theme in RubyGems and allow users to install it through Bundler.</source>
          <target state="translated">Jekyllテーマ開発者（テーマの単なるコンシューマーではない）の場合、RubyGemsにテーマをパッケージ化して、ユーザーがBundlerを介してインストールできるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="05442461ae0760b9acad9cfe9447bcf050ac0078" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested in browsing these docs on-the-go, install the &lt;code&gt;jekyll-docs&lt;/code&gt; gem and run &lt;code&gt;jekyll docs&lt;/code&gt; in your terminal.</source>
          <target state="translated">これらのドキュメントを外出先で閲覧することに興味がある場合は、 &lt;code&gt;jekyll-docs&lt;/code&gt; gemをインストールし、端末で &lt;code&gt;jekyll docs&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="cc2998d4b75650b0973db36fe0764de9a0198df0" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested in creating a custom markdown processor, you&amp;rsquo;re in luck! Create a new class in the &lt;code&gt;Jekyll::Converters::Markdown&lt;/code&gt; namespace:</source>
          <target state="translated">カスタムマークダウンプロセッサの作成に興味がある場合は、運がいいです。 &lt;code&gt;Jekyll::Converters::Markdown&lt;/code&gt; 名前空間に新しいクラスを作成します。</target>
        </trans-unit>
        <trans-unit id="fed2ec52185b236d6b0616d0f7b48112da62f321" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re publishing your Jekyll site on &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;, note that GitHub Pages supports only some gem-based themes. See &lt;a href=&quot;https://pages.github.com/themes/&quot;&gt;Supported Themes&lt;/a&gt; in GitHub&amp;rsquo;s documentation to see which themes are supported.</source>
          <target state="translated">Jekyllサイトを&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;で公開する場合、GitHub Pagesは一部のgemベースのテーマしかサポートしていないことに注意してください。GitHubのドキュメントで&lt;a href=&quot;https://pages.github.com/themes/&quot;&gt;サポートさ&lt;/a&gt;れているテーマを参照して、サポートされているテーマを確認してください。</target>
        </trans-unit>
        <trans-unit id="48f80dce2fb4e338ea62c4227bb0b96d4641ecf1" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re switching to Jekyll from another blogging system, Jekyll&amp;rsquo;s importers can help you with the move. To learn more about importing your site to Jekyll, visit our &lt;a href=&quot;https://import.jekyllrb.com/docs/home/&quot;&gt;&lt;code&gt;jekyll-import&lt;/code&gt; docs site&lt;/a&gt;.</source>
          <target state="translated">別のブログシステムからJekyllに切り替える場合は、Jekyllのインポーターが移動を支援します。Jekyllへのサイトのインポートの詳細については、&lt;a href=&quot;https://import.jekyllrb.com/docs/home/&quot;&gt; &lt;code&gt;jekyll-import&lt;/code&gt; docsサイトに&lt;/a&gt;アクセスしてください。</target>
        </trans-unit>
        <trans-unit id="e9b8cf204b37c543bd6f902a9912dc1bc10fb847" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re the kind of person who is using Jekyll, then chances are you&amp;rsquo;ll want to enable syntax highlighting using &lt;a href=&quot;http://pygments.org/&quot;&gt;Pygments&lt;/a&gt; or &lt;a href=&quot;https://github.com/jayferd/rouge&quot;&gt;Rouge&lt;/a&gt;. You should really &lt;a href=&quot;../templates/index#code-snippet-highlighting&quot;&gt;check out how to do that&lt;/a&gt; before you go any farther.</source>
          <target state="translated">Jekyllを使用しているような人であれば、&lt;a href=&quot;http://pygments.org/&quot;&gt;Pygments&lt;/a&gt;または&lt;a href=&quot;https://github.com/jayferd/rouge&quot;&gt;Rouge&lt;/a&gt;を使用して構文の強調表示を有効にしたいと思うかもしれません。先に進む前に&lt;a href=&quot;../templates/index#code-snippet-highlighting&quot;&gt;、その方法を&lt;/a&gt;実際に確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="2c45a730de0f4a66c90fb58a381c30517e30ab21" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re unfamiliar with creating Ruby gems, don&amp;rsquo;t worry. Jekyll will help you scaffold a new theme with the &lt;code&gt;new-theme&lt;/code&gt; command. Run &lt;code&gt;jekyll new-theme&lt;/code&gt; with the theme name as an argument.</source>
          <target state="translated">Ruby gemの作成に慣れていない場合でも、心配しないでください。Jekyllは、 &lt;code&gt;new-theme&lt;/code&gt; コマンドで新しいテーマを足場するのに役立ちます。テーマ名を引数として &lt;code&gt;jekyll new-theme&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="e2f1fd80e1acac73721bceb69b6432074f20f49a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re unsure of the path, add &lt;code&gt;{{ page.path }}&lt;/code&gt; to the page and it will display the path.</source>
          <target state="translated">パスがわからない場合は、 &lt;code&gt;{{ page.path }}&lt;/code&gt; をページに追加すると、パスが表示されます。</target>
        </trans-unit>
        <trans-unit id="6d0e68810885667c178f7be4a18662c57e20c8df" translate="yes" xml:space="preserve">
          <source>If your Jekyll site has a lot of pages, such as with documentation websites, see the detailed examples in &lt;a href=&quot;https://jekyllrb.com/tutorials/navigation/&quot;&gt;how to build robust navigation for your site&lt;/a&gt;.</source>
          <target state="translated">JekyllサイトにドキュメンテーションWebサイトなどの多くのページがある場合は、サイトの&lt;a href=&quot;https://jekyllrb.com/tutorials/navigation/&quot;&gt;堅牢なナビゲーションを構築する方法&lt;/a&gt;の詳細な例をご覧ください。</target>
        </trans-unit>
        <trans-unit id="6f07552e08d7e7eb8c68907cfa9ca67e5186c921" translate="yes" xml:space="preserve">
          <source>In 2.x, your iterations over &lt;code&gt;site.collections&lt;/code&gt; yielded an array with the collection label and the collection object as the first and second items, respectively. In 3.x, this complication has been removed and iterations now yield simply the collection object. A simple conversion must be made in your templates:</source>
          <target state="translated">2.xでは、 &lt;code&gt;site.collections&lt;/code&gt; の反復により、コレクションラベルとコレクションオブジェクトをそれぞれ1番目と2番目のアイテムとして持つ配列が生成されました。3.xでは、この複雑化が取り除かれ、反復により、単にコレクションオブジェクトが生成されるようになりました。テンプレートで簡単な変換を行う必要があります。</target>
        </trans-unit>
        <trans-unit id="45281f936e80f86f5e93c43c758e8a1f19af601f" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;_data/members.yml&lt;/code&gt;:</source>
          <target state="translated">で &lt;code&gt;_data/members.yml&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="cde842ba78bff9c9b8124ebd1559825b3bc94132" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;_data/orgs/doeorg.yml&lt;/code&gt;:</source>
          <target state="translated">で &lt;code&gt;_data/orgs/doeorg.yml&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="cd43046023d9729d0551bd15c18ada04dde39f32" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;_data/orgs/jekyll.yml&lt;/code&gt;:</source>
          <target state="translated">で &lt;code&gt;_data/orgs/jekyll.yml&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8048d2cbef7239f500f42954c2da2f843c49740b" translate="yes" xml:space="preserve">
          <source>In Jekyll 2, any URL constructed from the &lt;code&gt;permalink:&lt;/code&gt; field had a trailing slash (&lt;code&gt;/&lt;/code&gt;) added to it automatically. Jekyll 3 no longer adds a trailing slash automatically to &lt;code&gt;permalink:&lt;/code&gt; URLs. This can potentially result in old links to pages returning a 404 error. For example, suppose a page previously contained the YAML &lt;code&gt;permalink: /:year-:month-:day-:title&lt;/code&gt; that resulted in the URL &lt;code&gt;example.com/2016-02-01-test/&lt;/code&gt; (notice the trailing slash), Jekyll internally generates a folder named &lt;code&gt;2016-02-01-test&lt;/code&gt;. In Jekyll 3, the same &lt;code&gt;permalink:&lt;/code&gt; generate the file &lt;code&gt;2016-02-01-test.html&lt;/code&gt; and the URL for the same page will be &lt;code&gt;example.com/2016-02-01-test&lt;/code&gt;, and consequently any links to the old URL will result in a 404 error. In order to maintain the same URLs and avoid this problem, a trailing slash should be added to the &lt;code&gt;permalink:&lt;/code&gt; field, for example &lt;code&gt;permalink: /:year-:month-:day-:title/&lt;/code&gt;.</source>
          <target state="translated">Jekyll 2では、 &lt;code&gt;permalink:&lt;/code&gt; フィールドから作成されたすべてのURLに、末尾にスラッシュ（ &lt;code&gt;/&lt;/code&gt; ）が自動的に追加されていました。 Jekyll 3は、 &lt;code&gt;permalink:&lt;/code&gt; URLに末尾のスラッシュを自動的に追加しなくなりました。これにより、ページへの古いリンクが404エラーを返す可能性があります。たとえば、ページが以前YAMLが含まれていると仮定 &lt;code&gt;permalink: /:year-:month-:day-:title&lt;/code&gt; のURLが生じ &lt;code&gt;example.com/2016-02-01-test/&lt;/code&gt; 内部（予告最後のスラッシュ）、ジキル &lt;code&gt;2016-02-01-test&lt;/code&gt; という名前のフォルダーを生成します。 Jekyll 3では、同じ &lt;code&gt;permalink:&lt;/code&gt; ファイル &lt;code&gt;2016-02-01-test.html&lt;/code&gt; を生成すると、同じページのURLは &lt;code&gt;example.com/2016-02-01-test&lt;/code&gt; 、およびその結果、古いURLへのリンクがあると、404エラーが発生します。同じURLを維持してこの問題を回避するには、 &lt;code&gt;permalink:&lt;/code&gt; フィールドに末尾のスラッシュを追加する必要があります（例 &lt;code&gt;permalink: /:year-:month-:day-:title/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3873159b8f4d7abf52a0f7525978c8fb359bcf37" translate="yes" xml:space="preserve">
          <source>In Jekyll 3 and above, relative permalinks have been deprecated. If you created your site using Jekyll 2 and below, you may receive the following error when trying to &lt;strong&gt;serve&lt;/strong&gt; or &lt;strong&gt;build&lt;/strong&gt;:</source>
          <target state="translated">Jekyll 3以降では、相対パーマリンクは非推奨になりました。Jekyll 2以下を使用してサイトを作成した場合、&lt;strong&gt;配信&lt;/strong&gt;または&lt;strong&gt;ビルド&lt;/strong&gt;しようとすると、次のエラーが表示されることがあります。</target>
        </trans-unit>
        <trans-unit id="9da76fc9ddd240122475ed3606ddf4d269bd399e" translate="yes" xml:space="preserve">
          <source>In Jekyll v1.0, we introduced absolute permalinks for pages in subdirectories. Starting with v2.0, absolute permalinks are opt-out, meaning Jekyll will default to using absolute permalinks instead of relative permalinks. Relative permalink backwards-compatibility was removed in v3.0.</source>
          <target state="translated">Jekyll v1.0では、サブディレクトリ内のページに絶対パーマリンクを導入しました。v2.0 以降、絶対パーマリンクはオプトアウトとなり、Jekyll はデフォルトで相対パーマリンクではなく絶対パーマリンクを使用するようになりました。相対パーマリンクの下位互換性は v3.0 で削除されました。</target>
        </trans-unit>
        <trans-unit id="137a2c8a22c797957aaba3d668b93f39e0a4e360" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;../posts/index&quot;&gt;writing posts&lt;/a&gt;, you might also want to add static pages (content that isn&amp;rsquo;t date-based) to your Jekyll site. By taking advantage of the way Jekyll copies files and directories, this is easy to do.</source>
          <target state="translated">&lt;a href=&quot;../posts/index&quot;&gt;投稿&lt;/a&gt;を作成するだけでなく、静的なページ（日付ベースではないコンテンツ）をJekyllサイトに追加することもできます。Jekyllがファイルとディレクトリをコピーする方法を利用することで、これは簡単に実行できます。</target>
        </trans-unit>
        <trans-unit id="b5977b91adc8950e114e57ba6fd1cc290bbd8445" translate="yes" xml:space="preserve">
          <source>In addition to any YAML Front Matter provided in the document&amp;rsquo;s corresponding file, each document has the following attributes:</source>
          <target state="translated">ドキュメントの対応するファイルで提供されるYAMLフロントマターに加えて、各ドキュメントには次の属性があります。</target>
        </trans-unit>
        <trans-unit id="ddd733ae4dd13a946b75f3e6f10913d5e7486d8c" translate="yes" xml:space="preserve">
          <source>In addition to any collections you create yourself, the &lt;code&gt;posts&lt;/code&gt; collection is hard-coded into Jekyll. It exists whether you have a &lt;code&gt;_posts&lt;/code&gt; directory or not. This is something to note when iterating through &lt;code&gt;site.collections&lt;/code&gt; as you may need to filter it out.</source>
          <target state="translated">自分で作成したコレクションに加えて、 &lt;code&gt;posts&lt;/code&gt; コレクションはJekyllにハードコード化されています。 &lt;code&gt;_posts&lt;/code&gt; ディレクトリがあるかどうかに関係なく存在します。これは、 &lt;code&gt;site.collections&lt;/code&gt; 必要がある場合があるため、site.collectionsを反復処理するときに注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="de4614543299930d373fbc0c3668decb1e5afec5" translate="yes" xml:space="preserve">
          <source>In addition to renderable and convertible content, we also have &lt;strong&gt;static files&lt;/strong&gt;.</source>
          <target state="translated">レンダリングおよび変換可能なコンテンツに加えて、&lt;strong&gt;静的ファイル&lt;/strong&gt;もあり&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="262a4460ff960783349ae1c3141344919035643d" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;a href=&quot;../variables/index&quot;&gt;built-in variables&lt;/a&gt; available from Jekyll, you can specify your own custom data that can be accessed via the &lt;a href=&quot;https://wiki.github.com/shopify/liquid/liquid-for-designers&quot;&gt;Liquid templating system&lt;/a&gt;.</source>
          <target state="translated">Jekyllから利用できる&lt;a href=&quot;../variables/index&quot;&gt;組み込み変数に&lt;/a&gt;加えて、&lt;a href=&quot;https://wiki.github.com/shopify/liquid/liquid-for-designers&quot;&gt;Liquidテンプレートシステムを&lt;/a&gt;介してアクセスできる独自のカスタムデータを指定できます。</target>
        </trans-unit>
        <trans-unit id="5fa3779ef0ef87de347d1b02e40eb5d39f49bc9b" translate="yes" xml:space="preserve">
          <source>In addition to the options below, the &lt;code&gt;serve&lt;/code&gt; sub-command can accept any of the options for the &lt;code&gt;build&lt;/code&gt; sub-command, which are then applied to the site build which occurs right before your site is served.</source>
          <target state="translated">以下のオプションに加えて、 &lt;code&gt;serve&lt;/code&gt; サブコマンドは、 &lt;code&gt;build&lt;/code&gt; サブコマンドの任意のオプションを受け入れることができます。これらのオプションは、サイトが提供される直前に発生するサイトビルドに適用されます。</target>
        </trans-unit>
        <trans-unit id="ad77db62fe2f7780d8731931072d4d92705aa9c7" translate="yes" xml:space="preserve">
          <source>In general, plugins you make will fall broadly into one of five categories:</source>
          <target state="translated">一般的に、あなたが作るプラグインは、大きく分けて5つのカテゴリのいずれかに分類されます。</target>
        </trans-unit>
        <trans-unit id="92cb54b26fce6f64d865299e23f532b7347aa7e1" translate="yes" xml:space="preserve">
          <source>In layout files, the rendered content of the Post or Page being wrapped. Not defined in Post or Page files.</source>
          <target state="translated">レイアウトファイルでは、ラップされているポストやページのレンダリングされた内容。PostやPageファイルでは定義されていません。</target>
        </trans-unit>
        <trans-unit id="8a11123a4885bc93a6c358a7052dbadb25f2ae33" translate="yes" xml:space="preserve">
          <source>In order for the highlighting to show up, you&amp;rsquo;ll need to include a highlighting stylesheet. For an example stylesheet you can look at &lt;a href=&quot;https://github.com/mojombo/tpw/tree/master/css/syntax.css&quot;&gt;syntax.css&lt;/a&gt;. These are the same styles as used by GitHub and you are free to use them for your own site. If you use &lt;code&gt;linenos&lt;/code&gt;, you might want to include an additional CSS class definition for the &lt;code&gt;.lineno&lt;/code&gt; class in &lt;code&gt;syntax.css&lt;/code&gt; to distinguish the line numbers from the highlighted code.</source>
          <target state="translated">強調表示を表示するには、強調表示スタイルシートを含める必要があります。スタイルシートの例については、&lt;a href=&quot;https://github.com/mojombo/tpw/tree/master/css/syntax.css&quot;&gt;syntax.cssをご覧ください&lt;/a&gt;。これらはGitHubで使用されるものと同じスタイルであり、自分のサイトで自由に使用できます。あなたが使用している場合は &lt;code&gt;linenos&lt;/code&gt; を、あなたがのために追加のCSSクラス定義に含めるかもしれません &lt;code&gt;.lineno&lt;/code&gt; の中でクラスを &lt;code&gt;syntax.css&lt;/code&gt; 強調したコードから行番号を区別します。</target>
        </trans-unit>
        <trans-unit id="92921e0c63f70f1ce180d6a3e7cb4c97a0eb950e" translate="yes" xml:space="preserve">
          <source>In order to install a pre-release, make sure you have all the requirements installed properly and run:</source>
          <target state="translated">プレリリースをインストールするためには、すべての要件が正しくインストールされていることを確認して実行してください。</target>
        </trans-unit>
        <trans-unit id="f0a99e23efade4197b1e52469682f0f893a21ad9" translate="yes" xml:space="preserve">
          <source>In our example, &lt;code&gt;UpcaseConverter#matches&lt;/code&gt; checks if our filename extension is &lt;code&gt;.upcase&lt;/code&gt;, and will render using the converter if it is. It will call &lt;code&gt;UpcaseConverter#convert&lt;/code&gt; to process the content. In our simple converter we&amp;rsquo;re simply uppercasing the entire content string. Finally, when it saves the page, it will do so with a &lt;code&gt;.html&lt;/code&gt; extension.</source>
          <target state="translated">この例では、 &lt;code&gt;UpcaseConverter#matches&lt;/code&gt; はファイル名拡張子が &lt;code&gt;.upcase&lt;/code&gt; かどうかを確認し、そうである場合はコンバーターを使用してレンダリングします。コンテンツを処理 &lt;code&gt;UpcaseConverter#convert&lt;/code&gt; ためにUpcaseConverter＃convertを呼び出します。単純なコンバーターでは、コンテンツ文字列全体を単に大文字にしています。最後に、ページを保存するときに、 &lt;code&gt;.html&lt;/code&gt; 拡張子を付けて保存します。</target>
        </trans-unit>
        <trans-unit id="589e3464f6983f476e200524c86fa956e44336f7" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;_includes&lt;/code&gt; folder, assume you have a file called &lt;code&gt;spotlight.html&lt;/code&gt; with this code:</source>
          <target state="translated">で &lt;code&gt;_includes&lt;/code&gt; のフォルダ、あなたはというファイルがあると仮定し &lt;code&gt;spotlight.html&lt;/code&gt; このコードでは：</target>
        </trans-unit>
        <trans-unit id="82b5ec249103fb1fdb876d5bf56bb5b373e62ac9" translate="yes" xml:space="preserve">
          <source>In the build (or serve) arguments, you can specify a Jekyll environment and value. The build will then apply this value in any conditional statements in your content.</source>
          <target state="translated">ビルド (またはサーブ)引数では、Jekyll 環境と値を指定できます。ビルドはこの値をコンテンツ内の条件文に適用します。</target>
        </trans-unit>
        <trans-unit id="ca17f2fe3994021e071c92453baa97e708f63fbf" translate="yes" xml:space="preserve">
          <source>In the case of Minima, you see only the following files in your Jekyll site directory:</source>
          <target state="translated">Minimaの場合、Jekyllサイトのディレクトリには以下のファイルしか表示されません。</target>
        </trans-unit>
        <trans-unit id="73aa65e9152847600349b0332ad25629dcd365c5" translate="yes" xml:space="preserve">
          <source>In the example above, we can place the following tag anywhere in one of our pages:</source>
          <target state="translated">上記の例では、以下のタグをページのどこかに配置することができます。</target>
        </trans-unit>
        <trans-unit id="fbcc71f1f3f382fa9da32fabfcae01c9258fd9ed" translate="yes" xml:space="preserve">
          <source>In the future the installation process of the github-pages should be as simple as the setup of the blog. But as long as the new version of the Nokogiri (&lt;a href=&quot;https://github.com/sparklemotion/nokogiri/releases&quot;&gt;v1.6.8&lt;/a&gt;) is not stable and referenced, it is work to get it up and running on Windows.</source>
          <target state="translated">将来的には、github-pagesのインストールプロセスはブログの設定と同じくらい簡単になるはずです。しかし、新しいバージョンの&lt;a href=&quot;https://github.com/sparklemotion/nokogiri/releases&quot;&gt;Nokogiri&lt;/a&gt;（v1.6.8）が安定しておらず、参照されていない限り、それをWindowsで稼働させることはできます。</target>
        </trans-unit>
        <trans-unit id="f5f641e52e69872bdaff7c469dcb92b54266d954" translate="yes" xml:space="preserve">
          <source>In this case, the listing pages will be accessible at &lt;code&gt;{baseurl}/category/blog.html&lt;/code&gt;</source>
          <target state="translated">この場合、リストページには &lt;code&gt;{baseurl}/category/blog.html&lt;/code&gt; からアクセスできます。</target>
        </trans-unit>
        <trans-unit id="a8c7970f2ab1be04e8c7c366c84315f5db51e4c7" translate="yes" xml:space="preserve">
          <source>In this example, our generator will create a series of files under the &lt;code&gt;categories&lt;/code&gt; directory for each category, listing the posts in each category using the &lt;code&gt;category_index.html&lt;/code&gt; layout.</source>
          <target state="translated">この例では、ジェネレーターが各カテゴリの &lt;code&gt;categories&lt;/code&gt; ディレクトリの下に一連のファイルを作成し、 &lt;code&gt;category_index.html&lt;/code&gt; レイアウトを使用して各カテゴリの投稿を一覧表示します。</target>
        </trans-unit>
        <trans-unit id="2cf773ac04f813b0e294961a92d744e2c3408b9b" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;layout&lt;/code&gt; is set to &lt;code&gt;default&lt;/code&gt; inside the &lt;a href=&quot;../collections/index&quot;&gt;collection&lt;/a&gt; with the name &lt;code&gt;my_collection&lt;/code&gt;.</source>
          <target state="translated">この例では、 &lt;code&gt;layout&lt;/code&gt; は &lt;code&gt;my_collection&lt;/code&gt; という名前の&lt;a href=&quot;../collections/index&quot;&gt;コレクション&lt;/a&gt;内で &lt;code&gt;default&lt;/code&gt; 設定されています。</target>
        </trans-unit>
        <trans-unit id="eb94263d3a4b7b2763922a8c12799d8a35026a62" translate="yes" xml:space="preserve">
          <source>In this example, the include would insert the file &lt;code&gt;footer_company_a.html&lt;/code&gt; from the &lt;code&gt;_includes/footer_company_a.html&lt;/code&gt; directory.</source>
          <target state="translated">この例では、 &lt;code&gt;footer_company_a.html&lt;/code&gt; により、 &lt;code&gt;_includes/footer_company_a.html&lt;/code&gt; ディレクトリからフッター_会社_a.htmlファイルが挿入されます。</target>
        </trans-unit>
        <trans-unit id="9b31a618d0810733e64d193638c5aab33882dde7" translate="yes" xml:space="preserve">
          <source>In this instance, &lt;code&gt;site.data.profiles&lt;/code&gt; gets inserted in place of &lt;code&gt;include.participants&lt;/code&gt; in the include file, and the Liquid logic processes. The result will be &lt;code&gt;Jane Doe&lt;/code&gt;.</source>
          <target state="translated">この場合、インクルードファイルの &lt;code&gt;include.participants&lt;/code&gt; の代わりに &lt;code&gt;site.data.profiles&lt;/code&gt; が挿入され、Liquidロジックプロセスが実行されます。結果は &lt;code&gt;Jane Doe&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="5a7ef22adc478c9a3b0bb4fef7119f7a4c2ee61f" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;_config.yml&lt;/code&gt; file, add a new array with the key &lt;code&gt;plugins&lt;/code&gt; (or &lt;code&gt;gems&lt;/code&gt; for Jekyll &amp;lt; &lt;code&gt;3.5.0&lt;/code&gt;) and the values of the gem names of the plugins you&amp;rsquo;d like to use. An example:</source>
          <target state="translated">あなたに &lt;code&gt;_config.yml&lt;/code&gt; ファイル、キーを使用して新しい配列の追加 &lt;code&gt;plugins&lt;/code&gt; （または &lt;code&gt;gems&lt;/code&gt; ジキルのための&amp;lt; &lt;code&gt;3.5.0&lt;/code&gt; ）と、使用したいプラグインの宝石の名前の値を。例：</target>
        </trans-unit>
        <trans-unit id="bf9dc7a2954e8514613c982dd81fe474933609f8" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;_config.yml&lt;/code&gt; file, add the following values to the &lt;code&gt;defaults&lt;/code&gt; property:</source>
          <target state="translated">あなたに &lt;code&gt;_config.yml&lt;/code&gt; ファイルに次の値を追加し &lt;code&gt;defaults&lt;/code&gt; プロパティ：</target>
        </trans-unit>
        <trans-unit id="bdf1d4e7b2a9d82aac6f15504c1b8e025275caf8" translate="yes" xml:space="preserve">
          <source>In your site source root, make a &lt;code&gt;_plugins&lt;/code&gt; directory. Place your plugins here. Any file ending in &lt;code&gt;*.rb&lt;/code&gt; inside this directory will be loaded before Jekyll generates your site.</source>
          <target state="translated">サイトのソースルートに、 &lt;code&gt;_plugins&lt;/code&gt; ディレクトリを作成します。ここにプラグインを配置します。このディレクトリ内の &lt;code&gt;*.rb&lt;/code&gt; で終わるファイルは、Jekyllがサイトを生成する前に読み込まれます。</target>
        </trans-unit>
        <trans-unit id="db54974f7f0ad531e35648ba85b9388029b4d7ef" translate="yes" xml:space="preserve">
          <source>Includes</source>
          <target state="translated">Includes</target>
        </trans-unit>
        <trans-unit id="525d443047f688fa21fd3dd9c8ff2eedab7dad54" translate="yes" xml:space="preserve">
          <source>Including an image asset in a post:</source>
          <target state="translated">投稿に画像アセットを含める</target>
        </trans-unit>
        <trans-unit id="1f7a1fcdd2514ccdb830db698078bc93bc2c326b" translate="yes" xml:space="preserve">
          <source>Including files relative to another file</source>
          <target state="translated">別のファイルへの相対的なファイルのインクルード</target>
        </trans-unit>
        <trans-unit id="9a05788a2e9ad3ef56f62e0f130e8cd0346e51c4" translate="yes" xml:space="preserve">
          <source>Including images and resources</source>
          <target state="translated">画像やリソースを含む</target>
        </trans-unit>
        <trans-unit id="b91689a4ea776c083cae7da24e7822db50feb47d" translate="yes" xml:space="preserve">
          <source>Incremental Regeneration</source>
          <target state="translated">インクリメンタル再生</target>
        </trans-unit>
        <trans-unit id="f81c2e0ac93fe966e8a36a74b91ba62aa5863009" translate="yes" xml:space="preserve">
          <source>Incremental regeneration can be enabled via the &lt;code&gt;--incremental&lt;/code&gt; flag (&lt;code&gt;-I&lt;/code&gt; for short) from the command-line or by setting &lt;code&gt;incremental: true&lt;/code&gt; in your configuration file.</source>
          <target state="translated">増分再生成は、コマンドラインから &lt;code&gt;--incremental&lt;/code&gt; フラグ（略して &lt;code&gt;-I&lt;/code&gt; ）を使用するか、構成ファイルで &lt;code&gt;incremental: true&lt;/code&gt; を設定することで有効にできます。</target>
        </trans-unit>
        <trans-unit id="6006efa32ed1ccb24da40c6fab9a1c8038d7a743" translate="yes" xml:space="preserve">
          <source>Incremental regeneration helps shorten build times by only generating documents and pages that were updated since the previous build. It does this by keeping track of both file modification times and inter-document dependencies in the &lt;code&gt;.jekyll-metadata&lt;/code&gt; file.</source>
          <target state="translated">増分再生成により、前回のビルド以降に更新されたドキュメントとページのみが生成されるため、ビルド時間が短縮されます。これは、 &lt;code&gt;.jekyll-metadata&lt;/code&gt; ファイル内のファイル変更時間とドキュメント間の依存関係の両方を追跡することによって行われます。</target>
        </trans-unit>
        <trans-unit id="1bd191c875e05fc6998e389343b41b60f6eec5c0" translate="yes" xml:space="preserve">
          <source>Incremental regeneration is still an experimental feature</source>
          <target state="translated">インクリメンタル再生はまだ実験的な機能である</target>
        </trans-unit>
        <trans-unit id="2754588b37fe5f3d6e0bcb568f9e52a57bd3ad5a" translate="yes" xml:space="preserve">
          <source>Install Jekyll and Bundler via a command prompt window: &lt;code&gt;gem install jekyll bundler&lt;/code&gt;</source>
          <target state="translated">コマンドプロンプトウィンドウからJekyllとBundlerをインストールします &lt;code&gt;gem install jekyll bundler&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a7599704444a72a5825e2212231a365f0e3752da" translate="yes" xml:space="preserve">
          <source>Install Ruby and Ruby development kit</source>
          <target state="translated">RubyとRuby開発キットのインストール</target>
        </trans-unit>
        <trans-unit id="2b487a9122ff8e426803cc72375725e97f9e6a44" translate="yes" xml:space="preserve">
          <source>Install Ruby via Chocolatey: &lt;code&gt;choco install ruby -y&lt;/code&gt;</source>
          <target state="translated">Chocolatey経由でRubyをインストールします &lt;code&gt;choco install ruby -y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2cdce4c177bc9e007f528a3235e08a88a41c6662" translate="yes" xml:space="preserve">
          <source>Install a package manager for Windows called &lt;a href=&quot;https://chocolatey.org/install&quot;&gt;Chocolatey&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://chocolatey.org/install&quot;&gt;Chocolatey&lt;/a&gt;というWindows用のパッケージマネージャーをインストールする</target>
        </trans-unit>
        <trans-unit id="22c8d123bf73db1aacc59d30555b734cd07b4e2a" translate="yes" xml:space="preserve">
          <source>Install github-pages</source>
          <target state="translated">github-pagesのインストール</target>
        </trans-unit>
        <trans-unit id="abb88c8dd2461e34977887fddc50a42e89837700" translate="yes" xml:space="preserve">
          <source>Install the &lt;code&gt;jekyll-coffeescript&lt;/code&gt; gem</source>
          <target state="translated">&lt;code&gt;jekyll-coffeescript&lt;/code&gt; gem をインストールする</target>
        </trans-unit>
        <trans-unit id="d885f2ed59243070a4543bf4c623700512e83b3a" translate="yes" xml:space="preserve">
          <source>Install the theme:</source>
          <target state="translated">テーマをインストールします。</target>
        </trans-unit>
        <trans-unit id="cdc7600640f4488a302a9ef8db6eee3b7770c1b0" translate="yes" xml:space="preserve">
          <source>Install with RubyGems</source>
          <target state="translated">RubyGemsでインストール</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="1061e24b97b7e7926c0e75ef8fe1d7b8635a2b45" translate="yes" xml:space="preserve">
          <source>Installation Problems</source>
          <target state="translated">インストールの問題</target>
        </trans-unit>
        <trans-unit id="88b0adc28bc5d4d887cf429678890733427ab340" translate="yes" xml:space="preserve">
          <source>Installation via Bash on Windows 10</source>
          <target state="translated">Windows 10でBash経由でのインストール</target>
        </trans-unit>
        <trans-unit id="bc6998ee1c084273d3edf04ac27342ad34f6ef8b" translate="yes" xml:space="preserve">
          <source>Installation via Chocolatey</source>
          <target state="translated">ショコラトリー経由でのインスタ映え</target>
        </trans-unit>
        <trans-unit id="80bed0dbfe9f2de055f7876c597ff5e0c712f2fb" translate="yes" xml:space="preserve">
          <source>Installation via RubyInstaller</source>
          <target state="translated">RubyInstallerによるインストール</target>
        </trans-unit>
        <trans-unit id="b11767c5d2200d2d16fad18e12fb1be2d82b4099" translate="yes" xml:space="preserve">
          <source>Installing &lt;em&gt;github-pages&lt;/em&gt; via Chocolatey</source>
          <target state="translated">Chocolateyを介した&lt;em&gt;github-pagesの&lt;/em&gt;インストール</target>
        </trans-unit>
        <trans-unit id="c8b250df74e66657f762c2190066ce6c1ec127af" translate="yes" xml:space="preserve">
          <source>Installing Jekyll</source>
          <target state="translated">ジキルのインストール</target>
        </trans-unit>
        <trans-unit id="16ceab49469f52919f2e03463175e71ec859efb7" translate="yes" xml:space="preserve">
          <source>Installing Jekyll should be straight-forward if all requirements are met. Before you start, make sure your system has the following:</source>
          <target state="translated">Jekyll のインストールは、すべての要件が満たされていれば簡単にできるはずです。始める前に、お使いのシステムに以下のものがあることを確認してください。</target>
        </trans-unit>
        <trans-unit id="03c137f5733905fa449ce5034c5f2765d4312bde" translate="yes" xml:space="preserve">
          <source>Installing Xcode Command-Line Tools</source>
          <target state="translated">Xcodeコマンドラインツールのインストール</target>
        </trans-unit>
        <trans-unit id="60859f03534086c3888d74149a033deec834b0c6" translate="yes" xml:space="preserve">
          <source>Installing a gem-based theme</source>
          <target state="translated">gemベースのテーマをインストールする</target>
        </trans-unit>
        <trans-unit id="7c207b93b2af1157f5c75bb99e15b47da86e9f24" translate="yes" xml:space="preserve">
          <source>Installing a plugin</source>
          <target state="translated">プラグインのインストール</target>
        </trans-unit>
        <trans-unit id="0301ff786666998ae5d98dbed80c43208cf8c71d" translate="yes" xml:space="preserve">
          <source>Installing the &lt;code&gt;github-pages&lt;/code&gt; gem on Windows</source>
          <target state="translated">Windowsへの &lt;code&gt;github-pages&lt;/code&gt; gemのインストール</target>
        </trans-unit>
        <trans-unit id="7d65c34ad93e14c54fac65d045196e17931d2197" translate="yes" xml:space="preserve">
          <source>Instead of passing string variables to the include, you can pass a reference to a YAML data file stored in the &lt;code&gt;_data&lt;/code&gt; folder.</source>
          <target state="translated">文字列変数をインクルードに渡す代わりに、 &lt;code&gt;_data&lt;/code&gt; フォルダーに保存されているYAMLデータファイルへの参照を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="dbf704fb9a12a09c9c216c64b83c654387d7129d" translate="yes" xml:space="preserve">
          <source>Instead of placing posts inside of folders, you can specify one or more categories that the post belongs to. When the site is generated the post will act as though it had been set with these categories normally. Categories (plural key) can be specified as a &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;YAML list&lt;/a&gt; or a space-separated string.</source>
          <target state="translated">フォルダ内に投稿を配置する代わりに、投稿が属する1つ以上のカテゴリを指定できます。サイトが生成されると、投稿は通常これらのカテゴリで設定されているかのように動作します。カテゴリ（複数のキー）は、&lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;YAMLリスト&lt;/a&gt;またはスペース区切りの文字列として指定できます。</target>
        </trans-unit>
        <trans-unit id="5fbf5118bef5dc635d77ae841cc2e5808c17240f" translate="yes" xml:space="preserve">
          <source>Instead of repeating this configuration each time you create a new post or page, Jekyll provides a way to set these defaults in the site configuration. To do this, you can specify site-wide defaults using the &lt;code&gt;defaults&lt;/code&gt; key in the &lt;code&gt;_config.yml&lt;/code&gt; file in your project&amp;rsquo;s root directory.</source>
          <target state="translated">新しい投稿やページを作成するたびにこの設定を繰り返す代わりに、Jekyllはサイト設定でこれらのデフォルトを設定する方法を提供します。これを行うには、プロジェクトのルートディレクトリにある &lt;code&gt;_config.yml&lt;/code&gt; ファイルの &lt;code&gt;defaults&lt;/code&gt; キーを使用して、サイト全体のデフォルトを指定できます。</target>
        </trans-unit>
        <trans-unit id="a7881cac6e64abca5eafd172df6eb31fe0b84c88" translate="yes" xml:space="preserve">
          <source>Integrations</source>
          <target state="translated">Integrations</target>
        </trans-unit>
        <trans-unit id="2f66ca1047f5a0b56e9843da678570cdb99652f4" translate="yes" xml:space="preserve">
          <source>Introducing: &lt;code&gt;layout&lt;/code&gt;. In Jekyll 2 and below, any metadata in the layout was merged onto the &lt;code&gt;page&lt;/code&gt; variable in Liquid. This caused a lot of confusion in the way the data was merged and some unexpected behaviour. In Jekyll 3, all layout data is accessible via &lt;code&gt;layout&lt;/code&gt; in Liquid. For example, if your layout has &lt;code&gt;class: my-layout&lt;/code&gt; in its YAML front matter, then the layout can access that via &lt;code&gt;{{ layout.class }}&lt;/code&gt;.</source>
          <target state="translated">紹介： &lt;code&gt;layout&lt;/code&gt; 。Jekyll 2以前では、レイアウトのメタデータはすべてLiquidの &lt;code&gt;page&lt;/code&gt; 変数にマージされていました。これにより、データの結合方法に大きな混乱が生じ、予期しない動作が発生しました。Jekyll 3では、すべてのレイアウトデータにLiquidの &lt;code&gt;layout&lt;/code&gt; からアクセスできます。たとえば、レイアウトの &lt;code&gt;class: my-layout&lt;/code&gt; がYAMLの前部にmy-layoutである場合、レイアウトは &lt;code&gt;{{ layout.class }}&lt;/code&gt; を介してそれにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="9020d8fc0d60807df15ba6caea583e3777c08e00" translate="yes" xml:space="preserve">
          <source>It is also possible to use glob patterns (currently limited to patterns that contain &lt;code&gt;*&lt;/code&gt;) when matching defaults. For example, it is possible to set specific layout for each &lt;code&gt;special-page.html&lt;/code&gt; in any subfolder of &lt;code&gt;section&lt;/code&gt; folder.3.7.0</source>
          <target state="translated">デフォルトを照合するときに、グロブパターン（現在は &lt;code&gt;*&lt;/code&gt; を含むパターンに制限されています）を使用することもできます。たとえば、 &lt;code&gt;section&lt;/code&gt; folder.3.7.0の任意のサブフォルダー内の各 &lt;code&gt;special-page.html&lt;/code&gt; に特定のレイアウトを設定することが可能です。</target>
        </trans-unit>
        <trans-unit id="bbb0445c18b13db0d9e8a3fe9643f439bc5cc215" translate="yes" xml:space="preserve">
          <source>It won&amp;rsquo;t work to just access:</source>
          <target state="translated">アクセスするだけでは機能しません：</target>
        </trans-unit>
        <trans-unit id="dcc1048dbd502084f74e4517e9ae0cef3067fa5f" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s all well and good to have posts in a folder, but a blog is no use unless you have a list of posts somewhere. Creating an index of posts on another page (or in a &lt;a href=&quot;../templates/index&quot;&gt;template&lt;/a&gt;) is easy, thanks to the &lt;a href=&quot;https://docs.shopify.com/themes/liquid/basics&quot;&gt;Liquid template language&lt;/a&gt; and its tags. Here&amp;rsquo;s a basic example of how to create a list of links to your blog posts:</source>
          <target state="translated">投稿をフォルダに入れておくことは大丈夫ですが、どこかに投稿のリストがない限り、ブログは役に立ちません。&lt;a href=&quot;https://docs.shopify.com/themes/liquid/basics&quot;&gt;Liquidテンプレート言語&lt;/a&gt;とそのタグのおかげで、別のページ（または&lt;a href=&quot;../templates/index&quot;&gt;テンプレート&lt;/a&gt;）に投稿のインデックスを作成するのは簡単です。ブログ投稿へのリンクのリストを作成する方法の基本的な例を次に示します。</target>
        </trans-unit>
        <trans-unit id="a513c9de137d83a7609a8bb13bdbeb5834ec76bd" translate="yes" xml:space="preserve">
          <source>Jekyll</source>
          <target state="translated">Jekyll</target>
        </trans-unit>
        <trans-unit id="808c67fa4e431d5699a6613bd573f08cc162cac0" translate="yes" xml:space="preserve">
          <source>Jekyll &amp;amp; Mac OS X 10.11</source>
          <target state="translated">JekyllおよびMac OS X 10.11</target>
        </trans-unit>
        <trans-unit id="205b18c33b3c10f3254a98f57a2a0c9d4d658afa" translate="yes" xml:space="preserve">
          <source>Jekyll 1.0 introduced several new config file options. Before you upgrade, you should check to see if any of these are present in your pre-1.0 config file, and if so, make sure that you&amp;rsquo;re using them properly:</source>
          <target state="translated">Jekyll 1.0はいくつかの新しい設定ファイルオプションを導入しました。アップグレードする前に、これらが1.0より前の設定ファイルに存在するかどうかを確認し、存在する場合は、それらを適切に使用していることを確認してください。</target>
        </trans-unit>
        <trans-unit id="9324efe9664b58f2dd291b099f41ed59223057e4" translate="yes" xml:space="preserve">
          <source>Jekyll Plugins Wanted</source>
          <target state="translated">ジキルプラグイン募集</target>
        </trans-unit>
        <trans-unit id="7d8fadf2d825e12ec8771d9cdf8e6df407e1fedf" translate="yes" xml:space="preserve">
          <source>Jekyll allows you to concoct your sites in any way you can dream up, and it&amp;rsquo;s thanks to the powerful and flexible configuration options that this is possible. These options can either be specified in a &lt;code&gt;_config.yml&lt;/code&gt; file placed in your site&amp;rsquo;s root directory, or can be specified as flags for the &lt;code&gt;jekyll&lt;/code&gt; executable in the terminal.</source>
          <target state="translated">Jekyllを使用すると、思い通りの方法でサイトを作成できます。これが可能なのは、強力で柔軟な構成オプションのおかげです。これらのオプションは、サイトのルートディレクトリにある &lt;code&gt;_config.yml&lt;/code&gt; ファイルで指定するか、ターミナルで &lt;code&gt;jekyll&lt;/code&gt; 実行可能ファイルのフラグとして指定できます。</target>
        </trans-unit>
        <trans-unit id="4097b74ac38435b11aa3b17fad4cd1447bc26ea5" translate="yes" xml:space="preserve">
          <source>Jekyll allows you to customize your Sass conversion in certain ways.</source>
          <target state="translated">Jekyllでは、特定の方法でSass変換をカスタマイズすることができます。</target>
        </trans-unit>
        <trans-unit id="5a06ba36e9af56403d57bad46108a8d760e07012" translate="yes" xml:space="preserve">
          <source>Jekyll also comes with a built-in development server that will allow you to preview what the generated site will look like in your browser locally.</source>
          <target state="translated">また、Jekyllには開発サーバーが内蔵されており、生成されたサイトがローカルのブラウザでどのように見えるかをプレビューすることができます。</target>
        </trans-unit>
        <trans-unit id="5a89ce5f5b58a0ca4e12ac806869bef329c65e94" translate="yes" xml:space="preserve">
          <source>Jekyll also has built-in support for syntax highlighting of code snippets using either Pygments or Rouge, and including a code snippet in any post is easy. Just use the dedicated Liquid tag as follows:</source>
          <target state="translated">Jekyllは、PygmentsまたはRougeを使用したコードスニペットのシンタックスハイライトにも対応しており、どの投稿にも簡単にコードスニペットを含めることができます。以下のように専用の Liquid タグを使用するだけです。</target>
        </trans-unit>
        <trans-unit id="c75f08d618f8d6918cce6239d9eabbc6fbb20362" translate="yes" xml:space="preserve">
          <source>Jekyll can handle many different iterations of the idea you might associate with a &amp;ldquo;post,&amp;rdquo; however a standard blog style post, including a Title, Layout, Publishing Date, and Categories might look like this:</source>
          <target state="translated">Jekyllは、「投稿」に関連付けることができるアイデアのさまざまなイテレーションを処理できますが、タイトル、レイアウト、公開日、カテゴリなど、標準のブログスタイルの投稿は次のようになります。</target>
        </trans-unit>
        <trans-unit id="84f7b0bcb2763398d2709655311c727de99f72c4" translate="yes" xml:space="preserve">
          <source>Jekyll does not generate a &amp;lsquo;page1&amp;rsquo; folder, so the above code will not work when a &lt;code&gt;/page1&lt;/code&gt; link is produced. See below for a way to handle this if it&amp;rsquo;s a problem for you.</source>
          <target state="translated">Jekyllは「page1」フォルダを生成しないため、 &lt;code&gt;/page1&lt;/code&gt; リンクが生成された場合、上記のコードは機能しません。これが問題である場合に対処する方法については、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="623989c9f30f91c5701a5467a4c6c7f7a8c5f576" translate="yes" xml:space="preserve">
          <source>Jekyll expects all &lt;em&gt;include files&lt;/em&gt; to be placed in an &lt;code&gt;_includes&lt;/code&gt; directory at the root of your source directory. In the above example, this will embed the contents of &lt;code&gt;_includes/footer.html&lt;/code&gt; into the calling file.</source>
          <target state="translated">Jekyllは、すべての&lt;em&gt;インクルードファイル&lt;/em&gt;がソースディレクトリのルートにある &lt;code&gt;_includes&lt;/code&gt; ディレクトリに配置されることを想定してい&lt;em&gt;ます&lt;/em&gt;。上記の例では、これにより &lt;code&gt;_includes/footer.html&lt;/code&gt; の内容が呼び出しファイルに埋め込まれます。</target>
        </trans-unit>
        <trans-unit id="f823e2478049f311b334a187f8c8c8ce996d032e" translate="yes" xml:space="preserve">
          <source>Jekyll gives this particular group of gems in your &lt;code&gt;Gemfile&lt;/code&gt; a different treatment. Any gem included in this group is loaded before Jekyll starts processing the rest of your source directory.</source>
          <target state="translated">Jekyllは、 &lt;code&gt;Gemfile&lt;/code&gt; 内のこの特定の宝石グループに別の扱いをします。このグループに含まれるgemは、Jekyllがソースディレクトリの残りの処理を開始する前に読み込まれます。</target>
        </trans-unit>
        <trans-unit id="9779f5873de87b96de9d0b2e2560ee55da48ea40" translate="yes" xml:space="preserve">
          <source>Jekyll handles two special Redcarpet extensions:</source>
          <target state="translated">ジェキルはレッドカーペットの特殊なエクステンションを2つ扱います。</target>
        </trans-unit>
        <trans-unit id="2b368cd086c4cf9c3da1721dc215c046acd3cc22" translate="yes" xml:space="preserve">
          <source>Jekyll has a plugin system with hooks that allow you to create custom generated content specific to your site. You can run custom code for your site without having to modify the Jekyll source itself.</source>
          <target state="translated">Jekyllには、あなたのサイトに特化したカスタム生成コンテンツを作成できるフックを備えたプラグインシステムがあります。Jekyllのソース自体を修正することなく、サイト用のカスタムコードを実行することができます。</target>
        </trans-unit>
        <trans-unit id="e59cffaea8e7dd210f0672d747ee169ae5e28a92" translate="yes" xml:space="preserve">
          <source>Jekyll has an extensive theme system that allows you to leverage community-maintained templates and styles to customize your site&amp;rsquo;s presentation. Jekyll themes package up layouts, includes, and stylesheets in a way that can be overridden by your site&amp;rsquo;s content.</source>
          <target state="translated">Jekyllには、コミュニティが管理するテンプレートとスタイルを利用してサイトのプレゼンテーションをカスタマイズできる広範なテーマシステムがあります。Jekyllテーマは、レイアウト、インクルード、スタイルシートを、サイトのコンテンツで上書きできるようにパッケージ化します。</target>
        </trans-unit>
        <trans-unit id="796a53df1f3443b9e298618111b14017b66fb383" translate="yes" xml:space="preserve">
          <source>Jekyll has built in support for syntax highlighting of over 60 languages thanks to &lt;a href=&quot;http://rouge.jneen.net&quot;&gt;Rouge&lt;/a&gt;. Rouge is the default highlighter in Jekyll 3 and above. To use it in Jekyll 2, set &lt;code&gt;highlighter&lt;/code&gt; to &lt;code&gt;rouge&lt;/code&gt; and ensure the &lt;code&gt;rouge&lt;/code&gt; gem is installed properly.</source>
          <target state="translated">Jekyllには、&lt;a href=&quot;http://rouge.jneen.net&quot;&gt;Rougeの&lt;/a&gt;おかげで、60を超える言語の構文強調表示のサポートが組み込まれています。 Rougeは、Jekyll 3以降のデフォルトの蛍光ペンです。 Jekyll 2で使用するには、 &lt;code&gt;highlighter&lt;/code&gt; を &lt;code&gt;rouge&lt;/code&gt; に設定し、 &lt;code&gt;rouge&lt;/code&gt; gemが正しくインストールされていることを確認します。</target>
        </trans-unit>
        <trans-unit id="f07f9ec0a1524d864b1fec9586093e957570d58c" translate="yes" xml:space="preserve">
          <source>Jekyll is a simple, blog-aware, static site generator. It takes a template directory containing raw text files in various formats, runs it through a converter (like &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;) and our &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; renderer, and spits out a complete, ready-to-publish static website suitable for serving with your favorite web server. Jekyll also happens to be the engine behind &lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt;, which means you can use Jekyll to host your project&amp;rsquo;s page, blog, or website from GitHub&amp;rsquo;s servers &lt;strong&gt;for free&lt;/strong&gt;.</source>
          <target state="translated">Jekyllはシンプルなブログ対応の静的サイトジェネレーターです。これは、さまざまな形式の未加工テキストファイルを含むテンプレートディレクトリを&lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;取得&lt;/a&gt;し、コンバーター（Markdownなど）と&lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt;レンダラーを介して実行し、お気に入りのWebサーバーでの提供に適した完全ですぐに公開できる静的Webサイトを出力します。また、Jekyllは&lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pagesの&lt;/a&gt;背後にあるエンジンでもあります。つまり、Jekyllを使用して、GitHubサーバーからプロジェクトのページ、ブログ、またはWebサイト&lt;strong&gt;を無料で&lt;/strong&gt;ホストできます。</target>
        </trans-unit>
        <trans-unit id="e779c5f9969a3932787d2f57008cd6dbcd7b4559" translate="yes" xml:space="preserve">
          <source>Jekyll is, at its core, a text transformation engine. The concept behind the system is this: you give it text written in your favorite markup language, be that Markdown, Textile, or just plain HTML, and it churns that through a layout or a series of layout files. Throughout that process you can tweak how you want the site URLs to look, what data gets displayed in the layout, and more. This is all done through editing text files; the static web site is the final product.</source>
          <target state="translated">Jekyllは、その中核をなすテキスト変換エンジンです。システムの背後にあるコンセプトは次のとおりです:Markdown、Textile、または単なるプレーンHTMLなど、好きなマークアップ言語で書かれたテキストを与えると、それをレイアウトまたは一連のレイアウトファイルに変換します。そのプロセスを通して、サイトのURLがどのように見えるようにしたいか、どのようなデータがレイアウトに表示されるか、および多くを微調整することができます。これらはすべてテキストファイルの編集によって行われ、静的なウェブサイトが最終製品となります。</target>
        </trans-unit>
        <trans-unit id="fbc354ba340e745916a498948c20a2e8b128cc74" translate="yes" xml:space="preserve">
          <source>Jekyll lets you access the &lt;code&gt;site&lt;/code&gt; object through the &lt;code&gt;context.registers&lt;/code&gt; feature of Liquid at &lt;code&gt;context.registers[:site]&lt;/code&gt;. For example, you can access the global configuration file &lt;code&gt;_config.yml&lt;/code&gt; using &lt;code&gt;context.registers[:site].config&lt;/code&gt;.</source>
          <target state="translated">Jekyllでは、 &lt;code&gt;context.registers[:site]&lt;/code&gt; でLiquid の &lt;code&gt;context.registers&lt;/code&gt; 機能を介して &lt;code&gt;site&lt;/code&gt; オブジェクトにアクセスできます。たとえば、 &lt;code&gt;context.registers[:site].config&lt;/code&gt; を使用してグローバル構成ファイル &lt;code&gt;_config.yml&lt;/code&gt; にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="91ded4d9bcfd892aece0c6969de6ac9f3b2af1b8" translate="yes" xml:space="preserve">
          <source>Jekyll now lets you write draft posts, and allows you to easily preview how they will look prior to publishing. To start a draft, simply create a folder called &lt;code&gt;_drafts&lt;/code&gt; in your site&amp;rsquo;s source directory (e.g., alongside &lt;code&gt;_posts&lt;/code&gt;), and add a new markdown file to it. To preview your new post, simply run the &lt;code&gt;jekyll serve&lt;/code&gt; command with the &lt;code&gt;--drafts&lt;/code&gt; flag.</source>
          <target state="translated">Jekyllで投稿の下書きを作成できるようになり、公開前に投稿の外観を簡単にプレビューできるようになりました。下書きを開始するには、サイトのソースディレクトリに &lt;code&gt;_drafts&lt;/code&gt; というフォルダーを（たとえば、 &lt;code&gt;_posts&lt;/code&gt; と一緒に）作成し、そこに新しいマークダウンファイルを追加します。新しい投稿をプレビューするには、 &lt;code&gt;--drafts&lt;/code&gt; フラグを指定してjekyll &lt;code&gt;jekyll serve&lt;/code&gt; コマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="0ee102bf04dc72cf649ca51cdf3be64db665ed5b" translate="yes" xml:space="preserve">
          <source>Jekyll now uses a rubygem to internally configure Timezone based on established &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;IANA Timezone Database&lt;/a&gt;. While &amp;lsquo;new&amp;rsquo; blogs created with Jekyll v3.4 and greater, will have the following added to their &amp;lsquo;Gemfile&amp;rsquo; by default, existing sites &lt;em&gt;will&lt;/em&gt; have to update their &amp;lsquo;Gemfile&amp;rsquo; (and installed) to enable development on Windows:</source>
          <target state="translated">Jekyllはrubygemを使用して、確立された&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;IANAタイムゾーンデータベースに&lt;/a&gt;基づいてタイムゾーンを内部的に設定するようになりました。Jekyll v3.4以降で作成された「新しい」ブログでは、デフォルトで次のものが「Gemfile」に追加されますが、既存のサイトで&lt;em&gt;は&lt;/em&gt; Windowsでの開発を可能にするために「Gemfile」を更新（およびインストール）する必要があります。</target>
        </trans-unit>
        <trans-unit id="9db167acaa9239338db11bc4db579948bb8bcd54" translate="yes" xml:space="preserve">
          <source>Jekyll on Windows</source>
          <target state="translated">Windowsのジキル</target>
        </trans-unit>
        <trans-unit id="5ea510d5fc4795cd9f40638b7de1ca1bcbf30ce4" translate="yes" xml:space="preserve">
          <source>Jekyll processes all Liquid filters and tags in asset files</source>
          <target state="translated">Jekyll はアセットファイル内のすべての Liquid フィルターとタグを処理します。</target>
        </trans-unit>
        <trans-unit id="802e65a087d4160c667727cfbcb1a534752ec8b7" translate="yes" xml:space="preserve">
          <source>Jekyll processes all Liquid filters in code blocks</source>
          <target state="translated">ジキルはすべての液体フィルターをコードブロックで処理します。</target>
        </trans-unit>
        <trans-unit id="edba0ddab22968e6856800e9e202c01271877d09" translate="yes" xml:space="preserve">
          <source>Jekyll provides built-in support for Sass and can work with CoffeeScript via a Ruby gem. In order to use them, you must first create a file with the proper extension name (one of &lt;code&gt;.sass&lt;/code&gt;, &lt;code&gt;.scss&lt;/code&gt;, or &lt;code&gt;.coffee&lt;/code&gt;) and &lt;strong&gt;&lt;em&gt;start the file with two lines of triple dashes&lt;/em&gt;&lt;/strong&gt;, like this:</source>
          <target state="translated">JekyllはSassの組み込みサポートを提供し、Ruby gemを介してCoffeeScriptと連携できます。それらを使用するには、まず適切な拡張子名（ &lt;code&gt;.sass&lt;/code&gt; 、 &lt;code&gt;.scss&lt;/code&gt; 、または &lt;code&gt;.coffee&lt;/code&gt; のいずれか）を使用してファイルを作成し、次のように&lt;strong&gt;&lt;em&gt;2行の三重ダッシュ&lt;/em&gt;&lt;/strong&gt;で&lt;strong&gt;&lt;em&gt;ファイルを開始する必要があります&lt;/em&gt;&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="430b6448029a060479d76de3740d1c9e2f3d5809" translate="yes" xml:space="preserve">
          <source>Jekyll provides hooks for &lt;code&gt;:site&lt;/code&gt;, &lt;code&gt;:pages&lt;/code&gt;, &lt;code&gt;:posts&lt;/code&gt;, and &lt;code&gt;:documents&lt;/code&gt;. In all cases, Jekyll calls your hooks with the container object as the first callback parameter. However, all &lt;code&gt;:pre_render&lt;/code&gt; hooks and the&lt;code&gt;:site, :post_render&lt;/code&gt; hook will also provide a payload hash as a second parameter. In the case of &lt;code&gt;:pre_render&lt;/code&gt;, the payload gives you full control over the variables that are available while rendering. In the case of &lt;code&gt;:site, :post_render&lt;/code&gt;, the payload contains final values after rendering all the site (useful for sitemaps, feeds, etc).</source>
          <target state="translated">Jekyllは、 &lt;code&gt;:site&lt;/code&gt; 、 &lt;code&gt;:pages&lt;/code&gt; 、 &lt;code&gt;:posts&lt;/code&gt; 、 &lt;code&gt;:documents&lt;/code&gt; のフックを提供します。すべての場合において、Jekyllは最初のコールバックパラメータとしてコンテナオブジェクトを使用してフックを呼び出します。ただし、すべての &lt;code&gt;:pre_render&lt;/code&gt; フックと &lt;code&gt;:site, :post_render&lt;/code&gt; フックは、2番目のパラメーターとしてペイロードハッシュも提供します。 &lt;code&gt;:pre_render&lt;/code&gt; の場合、ペイロードによって、レンダリング中に使用できる変数を完全に制御できます。以下の場合 &lt;code&gt;:site, :post_render&lt;/code&gt; 、ペイロードは、すべてのサイト（サイトマップ、飼料に役立つ、など）をレンダリングした後、最終的な値が含まれています。</target>
        </trans-unit>
        <trans-unit id="2b4be10fd436b4843092922a4363eca9671b242f" translate="yes" xml:space="preserve">
          <source>Jekyll runs with the following configuration options by default. Alternative settings for these options can be explicitly specified in the configuration file or on the command-line.</source>
          <target state="translated">Jekyll はデフォルトでは以下の設定オプションで動作します。これらのオプションの代替設定は、設定ファイルまたはコマンドラインで明示的に指定することができます。</target>
        </trans-unit>
        <trans-unit id="5a88d78d1f9899a437aa358de44fe1d1d38bcfd3" translate="yes" xml:space="preserve">
          <source>Jekyll supports loading data from &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;, &lt;a href=&quot;http://www.json.org/&quot;&gt;JSON&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt; files located in the &lt;code&gt;_data&lt;/code&gt; directory. Note that CSV files &lt;em&gt;must&lt;/em&gt; contain a header row.</source>
          <target state="translated">Jekyllは、 &lt;code&gt;_data&lt;/code&gt; ディレクトリにある&lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;、&lt;a href=&quot;http://www.json.org/&quot;&gt;JSON&lt;/a&gt;、&lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt;ファイルからのデータの読み込みをサポートしています。CSVファイルにはヘッダー行が含まれている&lt;em&gt;必要&lt;/em&gt;があることに注意してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cb6c67edc0dab202898b18be5c476739c32221f1" translate="yes" xml:space="preserve">
          <source>Jekyll supports permalinks that contain neither a trailing slash nor a file extension, but this requires additional support from the web server to properly serve. When using these types of permalinks, output files written to disk will still have the proper file extension (typically &lt;code&gt;.html&lt;/code&gt;), so the web server must be able to map requests without file extensions to these files.</source>
          <target state="translated">Jekyllは、末尾のスラッシュもファイル拡張子も含まないパーマリンクをサポートしますが、適切に機能するには、Webサーバーからの追加サポートが必要です。これらのタイプのパーマリンクを使用する場合、ディスクに書き込まれる出力ファイルは適切なファイル拡張子（通常は &lt;code&gt;.html&lt;/code&gt; ）を持つため、Webサーバーはこれらのファイルにファイル拡張子なしでリクエストをマップできる必要があります。</target>
        </trans-unit>
        <trans-unit id="b0613f7e22216b0d97a46cb92e154dce22ac1ff0" translate="yes" xml:space="preserve">
          <source>Jekyll themes set default layouts, includes, and stylesheets. However, you can override any of the theme defaults with your own site content.</source>
          <target state="translated">Jekyll テーマはデフォルトのレイアウト、インクルード、スタイルシートを設定します。しかし、あなた自身のサイトのコンテンツでテーマのデフォルトを上書きすることができます。</target>
        </trans-unit>
        <trans-unit id="b14d294b4a5a02070c4e47c5f1097b5b051410ba" translate="yes" xml:space="preserve">
          <source>Jekyll traverses your site looking for files to process. Any files with &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML front matter&lt;/a&gt; are subject to processing. For each of these files, Jekyll makes a variety of data available via the &lt;a href=&quot;https://github.com/Shopify/liquid/wiki&quot;&gt;Liquid templating system&lt;/a&gt;. The following is a reference of the available data.</source>
          <target state="translated">ジキルは、処理するファイルを探してサイトを横断します。&lt;a href=&quot;../frontmatter/index&quot;&gt;YAMLの前付けがある&lt;/a&gt;ファイルは処理の対象となります。これらの各ファイルについて、Jekyllは&lt;a href=&quot;https://github.com/Shopify/liquid/wiki&quot;&gt;Liquidテンプレートシステムを&lt;/a&gt;介してさまざまなデータを利用できるようにします。以下は利用可能なデータのリファレンスです。</target>
        </trans-unit>
        <trans-unit id="7b80e53a19b7c75cad65aedd5f21d9647b0b06f4" translate="yes" xml:space="preserve">
          <source>Jekyll treats these files the same as a regular page, in that the output file will be placed in the same directory that it came from. For instance, if you have a file named &lt;code&gt;css/styles.scss&lt;/code&gt; in your site&amp;rsquo;s source folder, Jekyll will process it and put it in your site&amp;rsquo;s destination folder under &lt;code&gt;css/styles.css&lt;/code&gt;.</source>
          <target state="translated">Jekyllはこれらのファイルを通常のページと同じように扱い、出力ファイルは元のページと同じディレクトリに配置されます。たとえば、サイトのソースフォルダーに &lt;code&gt;css/styles.scss&lt;/code&gt; という名前のファイルがある場合、Jekyllはそれを処理し、 &lt;code&gt;css/styles.css&lt;/code&gt; の下のサイトの宛先フォルダーに配置します。</target>
        </trans-unit>
        <trans-unit id="8bc77ad887f5021280263c947d7e9ba538afd6ac" translate="yes" xml:space="preserve">
          <source>Jekyll uses the &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; templating language to process templates. All of the standard Liquid &lt;a href=&quot;https://shopify.github.io/liquid/tags/control-flow/&quot;&gt;tags&lt;/a&gt; and &lt;a href=&quot;https://shopify.github.io/liquid/filters/abs/&quot;&gt;filters&lt;/a&gt; are supported. To make common tasks easier, Jekyll even adds a few handy filters and tags of its own, all of which you can find on this page. Jekyll even lets you come up with your own tags via plugins.</source>
          <target state="translated">Jekyllは&lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt;テンプレート言語を使用してテンプレートを処理します。標準のLiquid &lt;a href=&quot;https://shopify.github.io/liquid/tags/control-flow/&quot;&gt;タグ&lt;/a&gt;と&lt;a href=&quot;https://shopify.github.io/liquid/filters/abs/&quot;&gt;フィルター&lt;/a&gt;はすべてサポートされています。一般的なタスクをより簡単にするために、Jekyllは独自のいくつかの便利なフィルターとタグを追加します。これらはすべてこのページにあります。Jekyllでは、プラグイン経由で独自のタグを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="98c1feeb240ca9f85a5898de8492c75acc86d3be" translate="yes" xml:space="preserve">
          <source>Jekyll uses the &lt;code&gt;listen&lt;/code&gt; gem to watch for changes when the &lt;code&gt;--watch&lt;/code&gt; switch is specified during a build or serve. While &lt;code&gt;listen&lt;/code&gt; has built-in support for UNIX systems, it may require an extra gem for compatibility with Windows.</source>
          <target state="translated">Jekyllは、ビルドまたは提供中に &lt;code&gt;--watch&lt;/code&gt; スイッチが指定されている場合、 &lt;code&gt;listen&lt;/code&gt; gemを使用して変更を監視します。一方で &lt;code&gt;listen&lt;/code&gt; 組み込まれているUNIXシステムのサポートは、Windowsとの互換性のための余分な宝石が必要な場合があります。</target>
        </trans-unit>
        <trans-unit id="9dc8584b9d061d2a48af50a6e913d9bc51afb984" translate="yes" xml:space="preserve">
          <source>Jekyll will apply all of the configuration settings you specify in the &lt;code&gt;defaults&lt;/code&gt; section of your &lt;code&gt;_config.yml&lt;/code&gt; file. However, you can choose to override settings from other scope/values pair by specifying a more specific path for the scope.</source>
          <target state="translated">Jekyllは、 &lt;code&gt;_config.yml&lt;/code&gt; ファイルの &lt;code&gt;defaults&lt;/code&gt; セクションで指定したすべての構成設定を適用します。ただし、スコープのより具体的なパスを指定することにより、他のスコープと値のペアからの設定を上書きすることを選択できます。</target>
        </trans-unit>
        <trans-unit id="ec5df39ca8b217af9fdeedd6a19aae0269168d48" translate="yes" xml:space="preserve">
          <source>Jekyll will automatically require all whitelisted &lt;code&gt;runtime_dependencies&lt;/code&gt; of your theme-gem even if they&amp;rsquo;re not explicitly included under the &lt;code&gt;plugins&lt;/code&gt; array in the site&amp;rsquo;s config file. (Note: whitelisting is only required when building or serving with the &lt;code&gt;--safe&lt;/code&gt; option.)</source>
          <target state="translated">Jekyllは、サイトの設定ファイルの &lt;code&gt;plugins&lt;/code&gt; 配列の下に明示的に含まれていない場合でも、theme-gemのすべてのホワイトリストの &lt;code&gt;runtime_dependencies&lt;/code&gt; を自動的に要求します。（注：ホワイトリストは、 &lt;code&gt;--safe&lt;/code&gt; オプションでビルドまたは提供する場合にのみ必要です。）</target>
        </trans-unit>
        <trans-unit id="cf1948f6a6c35c37faab5e8a2daf5dafc8a832c4" translate="yes" xml:space="preserve">
          <source>Jekyll will look first to your site&amp;rsquo;s content before looking to the theme&amp;rsquo;s defaults for any requested file in the following folders:</source>
          <target state="translated">Jekyllは最初にサイトのコンテンツを調べてから、次のフォルダーにある要求されたファイルのテーマのデフォルトを調べます。</target>
        </trans-unit>
        <trans-unit id="15cdb1085a422b73cafd0b3daa9e2568ffd30a22" translate="yes" xml:space="preserve">
          <source>Jekyll will look for the referenced file (in this case, &lt;code&gt;footer.html&lt;/code&gt;) in the &lt;code&gt;_includes&lt;/code&gt; directory at the root of your source directory and insert its contents.</source>
          <target state="translated">Jekyllは、ソースディレクトリのルートにある &lt;code&gt;_includes&lt;/code&gt; ディレクトリで参照ファイル（この場合は &lt;code&gt;footer.html&lt;/code&gt; ）を探し、その内容を挿入します。</target>
        </trans-unit>
        <trans-unit id="cbb8af1f0a6b9e0a078358fca37d17f598256363" translate="yes" xml:space="preserve">
          <source>Jekyll will only convert files that have a YAML header at the top, even for converters you add using a plugin.</source>
          <target state="translated">Jekyllは、プラグインを使って追加したコンバータであっても、先頭にYAMLヘッダを持つファイルのみを変換します。</target>
        </trans-unit>
        <trans-unit id="2c27dc79dfcd97a956c12f99f1262ad706cbd59b" translate="yes" xml:space="preserve">
          <source>Jekyll&amp;rsquo;s growing use is producing a wide variety of tutorials, frameworks, extensions, examples, and other resources that can be very helpful. Below is a collection of links to some of the most popular Jekyll resources.</source>
          <target state="translated">Jekyllの利用が拡大していることで、非常に役立つさまざまなチュートリアル、フレームワーク、拡張機能、例、その他のリソースが作成されています。以下は、最も人気のあるJekyllリソースへのリンク集です。</target>
        </trans-unit>
        <trans-unit id="87040c2c2ca8dd7dd1f199bb3b01450f1fd6e925" translate="yes" xml:space="preserve">
          <source>Jekyll-Admin for Rails</source>
          <target state="translated">Jekyll-Admin for Rails</target>
        </trans-unit>
        <trans-unit id="6bdf1cf399ad963e0a54c8aa9b93779421ed5621" translate="yes" xml:space="preserve">
          <source>Just about any traditional web hosting provider will let you upload files to their servers over FTP. To upload a Jekyll site to a web host using FTP, simply run the &lt;code&gt;jekyll build&lt;/code&gt; command and copy the contents of the generated &lt;code&gt;_site&lt;/code&gt; folder to the root folder of your hosting account. This is most likely to be the &lt;code&gt;httpdocs&lt;/code&gt; or &lt;code&gt;public_html&lt;/code&gt; folder on most hosting providers.</source>
          <target state="translated">ほぼすべての従来のWebホスティングプロバイダーでは、FTP経由でサーバーにファイルをアップロードできます。FTPを使用してJekyllサイトをWebホストにアップロードするには、 &lt;code&gt;jekyll build&lt;/code&gt; コマンドを実行し、生成された &lt;code&gt;_site&lt;/code&gt; フォルダーの内容をホスティングアカウントのルートフォルダーにコピーします。これは、ほとんどのホスティングプロバイダーの &lt;code&gt;httpdocs&lt;/code&gt; または &lt;code&gt;public_html&lt;/code&gt; フォルダーである可能性が高いです。</target>
        </trans-unit>
        <trans-unit id="2ed5147f04a311fb5f5d747f6b09941b7fc9a782" translate="yes" xml:space="preserve">
          <source>Just about every web server configuration you come across will look for an HTML file called &lt;code&gt;index.html&lt;/code&gt; (by convention) in the site&amp;rsquo;s root folder and display that as the homepage. Unless the web server you&amp;rsquo;re using is configured to look for some different filename as the default, this file will turn into the homepage of your Jekyll-generated site.</source>
          <target state="translated">遭遇するほとんどすべてのWebサーバー構成は、サイトのルートフォルダーで &lt;code&gt;index.html&lt;/code&gt; （慣例により）と呼ばれるHTMLファイルを探し、それをホームページとして表示します。使用しているWebサーバーがデフォルトとして別のファイル名を探すように設定されていない限り、このファイルはJekyllが生成したサイトのホームページになります。</target>
        </trans-unit>
        <trans-unit id="42cb84d3edc32b5b2f4400649263390331b44d18" translate="yes" xml:space="preserve">
          <source>Just add the following line:</source>
          <target state="translated">次の行を追加するだけです。</target>
        </trans-unit>
        <trans-unit id="0402a4371d48c94d8742dfa8a73a7366e817e0d9" translate="yes" xml:space="preserve">
          <source>Just after site reset</source>
          <target state="translated">サイトリセット直後</target>
        </trans-unit>
        <trans-unit id="433a432fd1262d35a30183d9f6075570af8bc954" translate="yes" xml:space="preserve">
          <source>Just after the site initializes, but before setup &amp;amp; render. Good for modifying the configuration of the site.</source>
          <target state="translated">サイトの初期化直後、ただしセットアップとレンダリングの前。サイトの構成を変更するのに適しています。</target>
        </trans-unit>
        <trans-unit id="ebb6b1e30faadd702ac129f2183d1aa471da18d8" translate="yes" xml:space="preserve">
          <source>Just before rendering a document</source>
          <target state="translated">ドキュメントをレンダリングする直前</target>
        </trans-unit>
        <trans-unit id="1a8117dd57c47c84d1c161dd2ea8fdef67df5f30" translate="yes" xml:space="preserve">
          <source>Just before rendering a page</source>
          <target state="translated">ページをレンダリングする直前</target>
        </trans-unit>
        <trans-unit id="832cf101757761bef14d4d8fdba336cebe396b37" translate="yes" xml:space="preserve">
          <source>Just before rendering a post</source>
          <target state="translated">投稿をレンダリングする直前に</target>
        </trans-unit>
        <trans-unit id="46e54c34b1deecaf4f770c41a5ff5f0dec8680f3" translate="yes" xml:space="preserve">
          <source>Just before rendering the whole site</source>
          <target state="translated">サイト全体をレンダリングする直前</target>
        </trans-unit>
        <trans-unit id="01af7c46420acf792e3b43039584478ec7774e5b" translate="yes" xml:space="preserve">
          <source>Kickster</source>
          <target state="translated">Kickster</target>
        </trans-unit>
        <trans-unit id="2918c8c92bc729b976aacffa8804fee11f217d81" translate="yes" xml:space="preserve">
          <source>Kickster provides a basic Jekyll project setup packed with web best practises and useful optimization tools increasing your overall project quality. Kickster ships with automated and worry-free deployment scripts for GitHub Pages.</source>
          <target state="translated">Kickster は、ウェブのベストプラクティスや便利な最適化ツールを満載した基本的な Jekyll プロジェクトのセットアップを提供し、プロジェクト全体の品質を向上させます。Kickster には、GitHub ページ用の自動化された安心のデプロイスクリプトが同梱されています。</target>
        </trans-unit>
        <trans-unit id="67169c9661e2d73dbf62f40570b382c8e40debd7" translate="yes" xml:space="preserve">
          <source>Kramdown comes with optional support for LaTeX to PNG rendering via &lt;a href=&quot;https://www.mathjax.org&quot;&gt;MathJax&lt;/a&gt; within math blocks. See the Kramdown documentation on &lt;a href=&quot;http://kramdown.gettalong.org/syntax.html#math-blocks&quot;&gt;math blocks&lt;/a&gt; and &lt;a href=&quot;http://kramdown.gettalong.org/converter/html.html#math-support&quot;&gt;math support&lt;/a&gt; for more details. MathJax requires you to include JavaScript or CSS to render the LaTeX, e.g.</source>
          <target state="translated">Kramdownは、mathブロック内の&lt;a href=&quot;https://www.mathjax.org&quot;&gt;MathJax&lt;/a&gt;を介したLaTeXからPNGへのレンダリングをオプションでサポートしています。詳細については、&lt;a href=&quot;http://kramdown.gettalong.org/syntax.html#math-blocks&quot;&gt;数学ブロック&lt;/a&gt;と&lt;a href=&quot;http://kramdown.gettalong.org/converter/html.html#math-support&quot;&gt;数学サポート&lt;/a&gt;に関するKramdownのドキュメントを参照してください。MathJaxでは、LaTeXをレンダリングするためにJavaScriptまたはCSSを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="93824e5ca2f8079177705f22fa746e46881b0c07" translate="yes" xml:space="preserve">
          <source>Label of the containing collection.</source>
          <target state="translated">コレクションを含むコレクションのラベル。</target>
        </trans-unit>
        <trans-unit id="77918f5f64d8b83f4bc213c3624d8dabb59f643a" translate="yes" xml:space="preserve">
          <source>Layout metadata</source>
          <target state="translated">レイアウトメタデータ</target>
        </trans-unit>
        <trans-unit id="93d4f5bc1ef1791e5c42ae89bfcf3a70ede43c95" translate="yes" xml:space="preserve">
          <source>Layout specific information + the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML front matter&lt;/a&gt;. Custom variables set via the YAML Front Matter in layouts will be available here.</source>
          <target state="translated">レイアウト固有の情報+ &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML前付け&lt;/a&gt;。レイアウトでYAMLフロントマターを介して設定されたカスタム変数は、ここで使用できます。</target>
        </trans-unit>
        <trans-unit id="f97f89c886ff0080aba4f2ac74175d1a7897953a" translate="yes" xml:space="preserve">
          <source>Layouts and includes</source>
          <target state="translated">レイアウトとその内容</target>
        </trans-unit>
        <trans-unit id="3d59965152acf6883cee252b37209236be3cceb2" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say that you want to add a default layout to all pages and posts in your site. You would add this to your &lt;code&gt;_config.yml&lt;/code&gt; file:</source>
          <target state="translated">サイトのすべてのページと投稿にデフォルトのレイアウトを追加するとします。これを &lt;code&gt;_config.yml&lt;/code&gt; ファイルに追加します：</target>
        </trans-unit>
        <trans-unit id="70555ee6c1f592b66362f61436939844b36c5e63" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say, for a second example, you want to override Minima&amp;rsquo;s footer. In your Jekyll site, create an &lt;code&gt;_includes&lt;/code&gt; folder and add a file in it called &lt;code&gt;footer.html&lt;/code&gt;. Jekyll will now use your site&amp;rsquo;s &lt;code&gt;footer.html&lt;/code&gt; file instead of the &lt;code&gt;footer.html&lt;/code&gt; file from the Minima theme gem.</source>
          <target state="translated">2番目の例として、Minimaのフッターをオーバーライドするとします。あなたのジキルサイトでは、作成 &lt;code&gt;_includes&lt;/code&gt; フォルダを、それが呼ばれるにファイルを追加 &lt;code&gt;footer.html&lt;/code&gt; を。ジキルは今、あなたのサイトの使用する &lt;code&gt;footer.html&lt;/code&gt; ファイルの代わりに、 &lt;code&gt;footer.html&lt;/code&gt; 極小テーマ宝石からファイルを。</target>
        </trans-unit>
        <trans-unit id="c58bd40e95aef48eee67a645bb4f78e1797cdf10" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT license.</source>
          <target state="translated">MITのライセンスでライセンスされています。</target>
        </trans-unit>
        <trans-unit id="670ce9fa318e5a320760111541faff1035dbfbff" translate="yes" xml:space="preserve">
          <source>Limit the number of posts to parse and publish.</source>
          <target state="translated">解析して公開する投稿数を制限します。</target>
        </trans-unit>
        <trans-unit id="d08aaa54e89dc5b36c7da4c9d528008df5d04f3b" translate="yes" xml:space="preserve">
          <source>Line numbers</source>
          <target state="translated">行番号</target>
        </trans-unit>
        <trans-unit id="a8482def1ff83728e1fb9a6d899311c4dbb6cd11" translate="yes" xml:space="preserve">
          <source>Linking to a PDF for readers to download:</source>
          <target state="translated">読者がダウンロードできるPDFにリンクしています。</target>
        </trans-unit>
        <trans-unit id="d20b0cfa02620cff8357fb318e9cd62b00fd373f" translate="yes" xml:space="preserve">
          <source>Linking to pages</source>
          <target state="translated">ページへのリンク</target>
        </trans-unit>
        <trans-unit id="afd2dc5f7c324f512f99a7734c0386d9016751a1" translate="yes" xml:space="preserve">
          <source>Linking to pages, collections and posts (the new and improved way)</source>
          <target state="translated">ページやコレクション、投稿へのリンク(新しくなって改善された方法</target>
        </trans-unit>
        <trans-unit id="8da831e8f499f7d7a56c6d3446756c24c1fc9859" translate="yes" xml:space="preserve">
          <source>Linking to posts</source>
          <target state="translated">投稿へのリンク</target>
        </trans-unit>
        <trans-unit id="3def7d920e411866077e94461efbacc52f7aeb8e" translate="yes" xml:space="preserve">
          <source>Linking to posts (the old way)</source>
          <target state="translated">投稿へのリンク(旧来の方法</target>
        </trans-unit>
        <trans-unit id="6379e034bab2e3be9e7c39a0b85a6898660412a9" translate="yes" xml:space="preserve">
          <source>Linking without regard to permalink styles</source>
          <target state="translated">パーマリンクスタイルを無視したリンク</target>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="4ad3e2141b2afe3691f32c2af3fc5cc3653cd453" translate="yes" xml:space="preserve">
          <source>Liquid</source>
          <target state="translated">Liquid</target>
        </trans-unit>
        <trans-unit id="7f26ed43583414deba0ddd1befb4adadedbfeb84" translate="yes" xml:space="preserve">
          <source>Liquid Attributes</source>
          <target state="translated">液体属性</target>
        </trans-unit>
        <trans-unit id="5ad177e08ab39d6276f0d8860a328284e1ffcfa3" translate="yes" xml:space="preserve">
          <source>Liquid Attributes Available</source>
          <target state="translated">利用可能な液体属性</target>
        </trans-unit>
        <trans-unit id="e0745becb677ab37dbf8043a9a47294186d7f108" translate="yes" xml:space="preserve">
          <source>Liquid Options</source>
          <target state="translated">リキッドオプション</target>
        </trans-unit>
        <trans-unit id="ad13a6aea2f060b03c1bbfcd3acb3de84c4ad8ef" translate="yes" xml:space="preserve">
          <source>Liquid filters</source>
          <target state="translated">液体フィルター</target>
        </trans-unit>
        <trans-unit id="e0802e62c8890a9ef2c3f7f7bbff3ab1245c9e20" translate="yes" xml:space="preserve">
          <source>Liquid&amp;rsquo;s response to errors can be configured by setting &lt;code&gt;error_mode&lt;/code&gt;. The options are</source>
          <target state="translated">エラーに対するLiquidの応答は、 &lt;code&gt;error_mode&lt;/code&gt; を設定することで設定できます。オプションは</target>
        </trans-unit>
        <trans-unit id="eeb4bd88aaf858f919bb23f92e4f32533740b378" translate="yes" xml:space="preserve">
          <source>Listen at the given hostname.</source>
          <target state="translated">指定されたホスト名をリッスンします。</target>
        </trans-unit>
        <trans-unit id="b067bb7eddee644f3059b4dfb835e57469c1fc50" translate="yes" xml:space="preserve">
          <source>Listen on the given port.</source>
          <target state="translated">指定されたポートをリッスンします。</target>
        </trans-unit>
        <trans-unit id="4406a849f645af35a2c07cd3e59f1514029789e7" translate="yes" xml:space="preserve">
          <source>Log in at &lt;a href=&quot;https://buddy.works&quot;&gt;https://buddy.works&lt;/a&gt; with your GitHub/Bitbucket account or email</source>
          <target state="translated">GitHub / Bitbucketアカウントまたはメールで&lt;a href=&quot;https://buddy.works&quot;&gt;https://buddy.worksに&lt;/a&gt;ログインします。</target>
        </trans-unit>
        <trans-unit id="0c25dfe9b505b96331b509d1f1094d7a8bbbc7da" translate="yes" xml:space="preserve">
          <source>Logic to do the content conversion. Takes one argument: the raw content of the file (without YAML Front Matter). Must return a String.</source>
          <target state="translated">コンテンツの変換を行うロジック。1つの引数を取ります:ファイルの生のコンテンツ(YAMLフロントマターなし)。Stringを返さなければなりません。</target>
        </trans-unit>
        <trans-unit id="0d1f3dd0db67be21ebd2eb0848251f87de05b382" translate="yes" xml:space="preserve">
          <source>Make it executable (&lt;code&gt;chmod +x&lt;/code&gt;)</source>
          <target state="translated">実行可能にする（ &lt;code&gt;chmod +x&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="642c11c1d6e1b6df7dad686b9cc288e67e12904c" translate="yes" xml:space="preserve">
          <source>Markdown Options</source>
          <target state="translated">マークダウンオプション</target>
        </trans-unit>
        <trans-unit id="b09e94d8992bb71ef39f1a828432c25aaf743e21" translate="yes" xml:space="preserve">
          <source>Markup Problems</source>
          <target state="translated">マークアップの問題</target>
        </trans-unit>
        <trans-unit id="28d6fb2c35c1d1c6a33c9e84a06a5d0a46922b5c" translate="yes" xml:space="preserve">
          <source>Math Support</source>
          <target state="translated">数学サポート</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="cebaf24652aa816860b5113dfe9dc8588aa3ae90" translate="yes" xml:space="preserve">
          <source>Minute of the hour from the post's &lt;code&gt;date&lt;/code&gt; front matter. (00..59)</source>
          <target state="translated">投稿の &lt;code&gt;date&lt;/code&gt; 前件からの分。（00..59）</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="ef9455fcbf8b2c60f67ca82fa6632a99edee00cb" translate="yes" xml:space="preserve">
          <source>Month from the post's filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; YAML front matter</source>
          <target state="translated">投稿のファイル名からの月。ドキュメントの &lt;code&gt;date&lt;/code&gt; YAMLの前付けで上書きできます</target>
        </trans-unit>
        <trans-unit id="8de2bd51313c9e801e45ac73bea8a590465b26c8" translate="yes" xml:space="preserve">
          <source>Month without leading zeros from the post's filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; YAML front matter</source>
          <target state="translated">投稿のファイル名から先行ゼロなしの月。ドキュメントの &lt;code&gt;date&lt;/code&gt; YAMLの前付けで上書きできます</target>
        </trans-unit>
        <trans-unit id="d0bf0bf1fc26755d6dd3d0cd4f591fb0c8223d56" translate="yes" xml:space="preserve">
          <source>My categories have stopped working!</source>
          <target state="translated">カテゴリが動かなくなった!?</target>
        </trans-unit>
        <trans-unit id="409210cf5eca11f949b896395f0df153fb608809" translate="yes" xml:space="preserve">
          <source>Named HTML files</source>
          <target state="translated">名前付きHTMLファイル</target>
        </trans-unit>
        <trans-unit id="af6c6c60032b6347c216bd80b55f736adf9ba8ed" translate="yes" xml:space="preserve">
          <source>Named folders containing index HTML files</source>
          <target state="translated">インデックスHTMLファイルを含む名前付きフォルダ</target>
        </trans-unit>
        <trans-unit id="1bd711a21d476e6fe66700859fd27013606d0d82" translate="yes" xml:space="preserve">
          <source>Netlify</source>
          <target state="translated">Netlify</target>
        </trans-unit>
        <trans-unit id="e77e169ad6256bcd88fdf89a438584da538db3ad" translate="yes" xml:space="preserve">
          <source>Netlify provides Global CDN, Continuous Deployment, one click HTTPS and &lt;a href=&quot;https://www.netlify.com/features/&quot;&gt;much more&lt;/a&gt;, providing developers the most robust toolset available for modern web projects, without added complexity. Netlify supports custom plugins for Jekyll and has a free plan for open source projects.</source>
          <target state="translated">NetlifyグローバルCDN、継続的デプロイを提供し、1はHTTPSをクリックして、&lt;a href=&quot;https://www.netlify.com/features/&quot;&gt;はるかに&lt;/a&gt;追加の複雑させずに、最新のWebプロジェクトのための最も強力なツールセットが利用できる開発者に提供し、。NetlifyはJekyllのカスタムプラグインをサポートし、オープンソースプロジェクトの無料プランがあります。</target>
        </trans-unit>
        <trans-unit id="1f0a6fb6f3c8ce017ef991f62d064dc029d34205" translate="yes" xml:space="preserve">
          <source>Never built a website with GitHub Pages before? &lt;a href=&quot;http://jmcglone.com/guides/github-pages/&quot;&gt;See this marvelous guide by Jonathan McGlone&lt;/a&gt; to get you up and running. This guide will teach you what you need to know about Git, GitHub, and Jekyll to create your very own website on GitHub Pages.</source>
          <target state="translated">これまでにGitHubページを使用してWebサイトを構築したことはありませんか？&lt;a href=&quot;http://jmcglone.com/guides/github-pages/&quot;&gt;Jonathan McGloneによるこの素晴らしいガイドを参照&lt;/a&gt;して、実行してください。このガイドでは、GitHubページで独自のWebサイトを作成するためにGit、GitHub、およびJekyllについて知っておくべきことを説明します。</target>
        </trans-unit>
        <trans-unit id="bc4548b725bed832ca525597a79aaa19443571c5" translate="yes" xml:space="preserve">
          <source>New Config File Options</source>
          <target state="translated">新しいコンフィグファイルオプション</target>
        </trans-unit>
        <trans-unit id="c1d497448ff591968a3b7a1dcf651a30c7319f8d" translate="yes" xml:space="preserve">
          <source>Next let&amp;rsquo;s update our Ruby gems:</source>
          <target state="translated">次に、Ruby gemを更新します。</target>
        </trans-unit>
        <trans-unit id="11fc14203dd0f4441645a9c34d5dd022905f56e4" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="translated">次のステップ</target>
        </trans-unit>
        <trans-unit id="f312fe6f79e90daa529f37ccafdfa02243a77286" translate="yes" xml:space="preserve">
          <source>Next, add the following lines to hooks/post-receive and be sure Jekyll is installed on the server:</source>
          <target state="translated">次に、 hooks/post-receive に以下の行を追加し、Jekyll がサーバーにインストールされていることを確認します。</target>
        </trans-unit>
        <trans-unit id="5ff888289816dd3074a50bcf27e501021fdb8da3" translate="yes" xml:space="preserve">
          <source>Next, in the root directory of your Jekyll install, create a new directory called &lt;code&gt;category&lt;/code&gt; and then create a file for each category you want to list. For example, if you have a category &lt;code&gt;blog&lt;/code&gt; then create a file in the new directory called &lt;code&gt;blog.html&lt;/code&gt; with at least</source>
          <target state="translated">次に、Jekyllインストールのルートディレクトリに、 &lt;code&gt;category&lt;/code&gt; という新しいディレクトリを作成し、リストする各カテゴリのファイルを作成します。たとえば、カテゴリ &lt;code&gt;blog&lt;/code&gt; がある場合は、新しいディレクトリに &lt;code&gt;blog.html&lt;/code&gt; というファイルを作成し、少なくとも</target>
        </trans-unit>
        <trans-unit id="708f2d3f4930982fbd401cfff5d9860647b92d77" translate="yes" xml:space="preserve">
          <source>Next, package your theme, by running the following command, replacing &lt;code&gt;jekyll-theme-awesome&lt;/code&gt; with the name of your theme:</source>
          <target state="translated">次に、次のコマンドを実行してテーマをパッケージ化し、 &lt;code&gt;jekyll-theme-awesome&lt;/code&gt; をテーマの名前に置き換えます。</target>
        </trans-unit>
        <trans-unit id="f2560cbce63028d4ce27fdd2ae2588b9ae69ca1e" translate="yes" xml:space="preserve">
          <source>Nginx</source>
          <target state="translated">Nginx</target>
        </trans-unit>
        <trans-unit id="3b2398012127ac20dafee0de7defdb7dbfdffaec" translate="yes" xml:space="preserve">
          <source>Nokogiri gem installation</source>
          <target state="translated">ノコギリの宝石設置</target>
        </trans-unit>
        <trans-unit id="8f1ffabf169574519e202a4e9b88f25390f0b416" translate="yes" xml:space="preserve">
          <source>None specified, or &lt;code&gt;permalink: date&lt;/code&gt;</source>
          <target state="translated">指定なし、または &lt;code&gt;permalink: date&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c35cfb9d2d2387ed94bc43758ede05d15c18fe4" translate="yes" xml:space="preserve">
          <source>Not everything is a post or a page. Maybe you want to document the various methods in your open source project, members of a team, or talks at a conference. Collections allow you to define a new type of document that behave like Pages or Posts do normally, but also have their own unique properties and namespace.</source>
          <target state="translated">すべてがポストやページになるわけではありません。オープンソースプロジェクトの様々なメソッド、チームのメンバー、カンファレンスでの講演などを文書化したいと思うかもしれません。コレクションを使うと、Pages や Posts と同じように振る舞いながら、独自のプロパティや名前空間を持つ新しいタイプのドキュメントを定義することができます。</target>
        </trans-unit>
        <trans-unit id="8f87a0cc1b107cfc3130ca883eee78891ca87928" translate="yes" xml:space="preserve">
          <source>Note &lt;a href=&quot;../datafiles/index&quot;&gt;Data Files&lt;/a&gt; are included and reloaded during automatic regeneration.</source>
          <target state="translated">注&lt;a href=&quot;../datafiles/index&quot;&gt;データファイル&lt;/a&gt;が含まれ、自動再生成中に再ロードされます。</target>
        </trans-unit>
        <trans-unit id="9cf697214d3ea8369efc9d5989737c5221f12ef5" translate="yes" xml:space="preserve">
          <source>Note if you want to view your site offline &lt;em&gt;without the Jekyll preview server&lt;/em&gt;, your browser will need the file extension to display the page, and all assets will need to be relative links that function without the server baseurl.</source>
          <target state="translated">&lt;em&gt;Jekyllプレビューサーバーなしで&lt;/em&gt;サイトをオフラインで表示する場合は、ブラウザにページを表示するためのファイル拡張子が必要であり、すべてのアセットはサーバーのbaseurlなしで機能する相対リンクである必要があります。</target>
        </trans-unit>
        <trans-unit id="6be0285681791712626e61c0e940a29611df075c" translate="yes" xml:space="preserve">
          <source>Note that GitHub Pages runs in &lt;code&gt;safe&lt;/code&gt; mode and only allows &lt;a href=&quot;https://help.github.com/articles/configuring-jekyll-plugins/#default-plugins&quot;&gt;a set of whitelisted plugins&lt;/a&gt;.</source>
          <target state="translated">GitHubページは &lt;code&gt;safe&lt;/code&gt; 実行&lt;a href=&quot;https://help.github.com/articles/configuring-jekyll-plugins/#default-plugins&quot;&gt;され、ホワイトリストに登録されたプラグインのセット&lt;/a&gt;のみを許可することに注意してください。</target>
        </trans-unit>
        <trans-unit id="9d90bbde8e029c7aaf55ae7cc6107674786ac2ea" translate="yes" xml:space="preserve">
          <source>Note that all template variables relating to time or categories are available to posts only.</source>
          <target state="translated">時間やカテゴリに関連するすべてのテンプレート変数は、投稿にのみ利用可能であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="0eb4bdc4e781e7d84143f4441f9136f655537cba" translate="yes" xml:space="preserve">
          <source>Note that in the above table, &lt;code&gt;file&lt;/code&gt; can be anything. It&amp;rsquo;s simply an arbitrarily set variable used in your own logic (such as in a for loop). It isn&amp;rsquo;t a global site or page variable.</source>
          <target state="translated">上記の表では、 &lt;code&gt;file&lt;/code&gt; は何でもかまいません。これは、独自のロジック（forループなど）で使用される任意に設定された変数です。グローバルサイトやページ変数ではありません。</target>
        </trans-unit>
        <trans-unit id="1efdb94e4f50bf0983fdc1d308e7ee4efc93198d" translate="yes" xml:space="preserve">
          <source>Note that making copies of theme files will prevent you from receiving any theme updates on those files. An alternative, to continue getting theme updates on all stylesheets, is to use higher specificity CSS selectors in your own additional, originally named CSS files.</source>
          <target state="translated">テーマファイルのコピーを作成すると、それらのファイルでテーマの更新を受け取ることができなくなることに注意してください。別の方法として、すべてのスタイルシートでテーマの更新を受け続けるためには、独自の追加CSSファイルで、より特異性の高いCSSセレクタを使用することができます。</target>
        </trans-unit>
        <trans-unit id="fb1100df32e7377e196c98a1d1e30c86170cf4a9" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;post&lt;/code&gt; variable only exists inside the &lt;code&gt;for&lt;/code&gt; loop above. If you wish to access the currently-rendering page/posts&amp;rsquo;s variables (the variables of the post/page that has the &lt;code&gt;for&lt;/code&gt; loop in it), use the &lt;code&gt;page&lt;/code&gt; variable instead.</source>
          <target state="translated">&lt;code&gt;post&lt;/code&gt; 変数は上記の &lt;code&gt;for&lt;/code&gt; ループ内にのみ存在することに注意してください。現在レンダリングしているページ/投稿の変数（ &lt;code&gt;for&lt;/code&gt; ループが含まれている投稿/ページの変数）にアクセスする場合は、代わりに &lt;code&gt;page&lt;/code&gt; 変数を使用します。</target>
        </trans-unit>
        <trans-unit id="8cf6c6835a876660d4c76838462f49a571751f8c" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;sass_dir&lt;/code&gt; becomes the load path for Sass imports, nothing more. This means that Jekyll does not know about these files directly, so any files here should not contain the YAML Front Matter as described above nor will they be transformed as described above. This folder should only contain imports.</source>
          <target state="translated">&lt;code&gt;sass_dir&lt;/code&gt; がSassインポートのロードパスになることに注意してください。つまり、Jekyllはこれらのファイルを直接認識しないため、ここでのファイルには、上記のYAMLフロントマターを含めたり、上記のように変換したりしないでください。このフォルダにはインポートのみが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="365263babcade15a29bd49c083aff113ac6dc6fa" translate="yes" xml:space="preserve">
          <source>Note that upgrading macOS does not automatically upgrade Xcode itself (that can be done separately via the App Store), and having an out-of-date Xcode.app can interfere with the command line tools downloaded above. If you run into this issue, upgrade Xcode and install the upgraded Command Line Tools.</source>
          <target state="translated">macOSをアップグレードしてもXcode自体は自動的にアップグレードされません(App Storeで別途行うことができます)。また、古いXcode.appを持っていると、上記でダウンロードしたコマンドラインツールに干渉する可能性があります。この問題に遭遇した場合は、Xcodeをアップグレードし、アップグレードされたコマンドラインツールをインストールしてください。</target>
        </trans-unit>
        <trans-unit id="e0cedf9e1146b83059f235f1658469f30f0dfa6f" translate="yes" xml:space="preserve">
          <source>Note that you can also specify a language for highlighting after the first delimiter:</source>
          <target state="translated">最初の区切り文字の後に強調表示する言語を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="538035dc55ccf0f41b931e516134c7709bbd5954" translate="yes" xml:space="preserve">
          <source>Note that you cannot use the &lt;code&gt;../&lt;/code&gt; syntax to specify an include location that refers to a higher-level directory.</source>
          <target state="translated">&lt;code&gt;../&lt;/code&gt; 構文を使用して、上位レベルのディレクトリを参照するインクルードの場所を指定することはできません。</target>
        </trans-unit>
        <trans-unit id="e23bfe7b417b5e844018628a3a9e7b0a66ac8d09" translate="yes" xml:space="preserve">
          <source>Note you cannot add filters to &lt;code&gt;link&lt;/code&gt; tags. For example, you cannot append a string using Liquid filters, such as &lt;code&gt;{% link mypage.html | append: &quot;#section1&quot; %} &lt;/code&gt;. To link to sections on a page, you will need to use regular HTML or Markdown linking techniques.</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; タグにフィルターを追加することはできません。たとえば、 &lt;code&gt;{% link mypage.html | append: &quot;#section1&quot; %} &lt;/code&gt; などのLiquidフィルターを使用して文字列を追加することはできません。追加： &quot;＃section1&quot;％}。ページのセクションにリンクするには、通常のHTMLまたはMarkdownリンク手法を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="ef2620ba5b8650000c4392a80911f4c3e3b5aae7" translate="yes" xml:space="preserve">
          <source>Notes are handy pieces of information</source>
          <target state="translated">メモは便利な情報</target>
        </trans-unit>
        <trans-unit id="019763ab6a53f0c0a37aac5bce59026db4857488" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;bundle update&lt;/code&gt; will no longer get updates for the theme gem.</source>
          <target state="translated">今、 &lt;code&gt;bundle update&lt;/code&gt; 、もはやテーマ宝石の更新を取得しません。</target>
        </trans-unit>
        <trans-unit id="f5db484a6b8a6ae2c46d9feb727ea7060997ae39" translate="yes" xml:space="preserve">
          <source>Now all that is left to do is install Jekyll.</source>
          <target state="translated">あとはジキルをインストールするだけ。</target>
        </trans-unit>
        <trans-unit id="d16d4716fcec7c0d58d5adb7bf41d53959f85499" translate="yes" xml:space="preserve">
          <source>Now it&amp;rsquo;s possible to publish your website simply by running the &lt;code&gt;deploy&lt;/code&gt; script. If your SSH certificate is &lt;a href=&quot;https://martin.kleppmann.com/2013/05/24/improving-security-of-ssh-private-keys.html&quot;&gt;passphrase-protected&lt;/a&gt;, you will be asked to enter it when the script executes.</source>
          <target state="translated">&lt;code&gt;deploy&lt;/code&gt; スクリプトを実行するだけで、ウェブサイトを公開できるようになりました。SSH証明書が&lt;a href=&quot;https://martin.kleppmann.com/2013/05/24/improving-security-of-ssh-private-keys.html&quot;&gt;パスフレーズで保護され&lt;/a&gt;ている場合、スクリプトの実行時に証明書を入力するよう求められます。</target>
        </trans-unit>
        <trans-unit id="a6cf1e4cb312d48ffd4a9ed682f1ece2bf915b2f" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;ve got everything up-to-date and installed, let&amp;rsquo;s get to work!</source>
          <target state="translated">すべてが最新でインストールされたので、作業を始めましょう！</target>
        </trans-unit>
        <trans-unit id="34ee5ef663d912be8e2724397d00a3a6157ccfc8" translate="yes" xml:space="preserve">
          <source>Now that your posts have a category or multiple categories, you can make a page or a template displaying just the posts in those categories you specify. Here&amp;rsquo;s a basic example of how to create a list of posts from a specific category.</source>
          <target state="translated">投稿に1つまたは複数のカテゴリが設定されたので、指定したカテゴリの投稿のみを表示するページまたはテンプレートを作成できます。特定のカテゴリから投稿のリストを作成する方法の基本的な例を次に示します。</target>
        </trans-unit>
        <trans-unit id="54eae58039538d3de78c88b9ca2dea358415c6b6" translate="yes" xml:space="preserve">
          <source>Now we can install Ruby. To do this we will use a repository from &lt;a href=&quot;https://www.brightbox.com/docs/ruby/ubuntu/&quot;&gt;BrightBox&lt;/a&gt;, which hosts optimized versions of Ruby for Ubuntu.</source>
          <target state="translated">これでRubyをインストールできます。これを行うには、&lt;a href=&quot;https://www.brightbox.com/docs/ruby/ubuntu/&quot;&gt;BrightBoxの&lt;/a&gt;リポジトリを使用します。このリポジトリには、Ubuntuに最適化されたRubyのバージョンがホストされています。</target>
        </trans-unit>
        <trans-unit id="f1db2122410ebc1a9c0f607f53505113fc23cafa" translate="yes" xml:space="preserve">
          <source>Now when you insert the &lt;code&gt;spotlight.html&lt;/code&gt; include file, you can submit the YAML file as a parameter:</source>
          <target state="translated">これで、 &lt;code&gt;spotlight.html&lt;/code&gt; インクルードファイルを挿入するときに、YAMLファイルをパラメーターとして送信できます。</target>
        </trans-unit>
        <trans-unit id="da26a269dc579ccddc35c61159479c24d604f361" translate="yes" xml:space="preserve">
          <source>Now you need to install all plugins from your Bundler group by running single command &lt;code&gt;bundle install&lt;/code&gt;.</source>
          <target state="translated">次に、単一のコマンド &lt;code&gt;bundle install&lt;/code&gt; を実行して、Bundlerグループからすべてのプラグインをインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="0aa3bc63f1e4c333878815ea88bcf06ae43e27ea" translate="yes" xml:space="preserve">
          <source>Now, this will only set the layout for files where the type is &lt;code&gt;posts&lt;/code&gt;. The different types that are available to you are &lt;code&gt;pages&lt;/code&gt;, &lt;code&gt;posts&lt;/code&gt;, &lt;code&gt;drafts&lt;/code&gt; or any collection in your site. While &lt;code&gt;type&lt;/code&gt; is optional, you must specify a value for &lt;code&gt;path&lt;/code&gt; when creating a &lt;code&gt;scope/values&lt;/code&gt; pair.</source>
          <target state="translated">これで、タイプが &lt;code&gt;posts&lt;/code&gt; であるファイルのレイアウトのみが設定されます。使用できるさまざまなタイプは、サイト内の &lt;code&gt;pages&lt;/code&gt; 、 &lt;code&gt;posts&lt;/code&gt; 、 &lt;code&gt;drafts&lt;/code&gt; または任意のコレクションです。一方で &lt;code&gt;type&lt;/code&gt; オプションであり、あなたがのために値を指定する必要があり &lt;code&gt;path&lt;/code&gt; の作成時に &lt;code&gt;scope/values&lt;/code&gt; ペアを。</target>
        </trans-unit>
        <trans-unit id="18829b882e10c5f58e54b3c8f9c9dc17ea3b6d03" translate="yes" xml:space="preserve">
          <source>Number of Posts per page.</source>
          <target state="translated">1ページあたりの投稿数</target>
        </trans-unit>
        <trans-unit id="96dde92cd814d365b60ea8afd3bf1ff8d531ae72" translate="yes" xml:space="preserve">
          <source>Of course, you have full control over how (and where) you display your posts, and how you structure your site. You should read more about &lt;a href=&quot;../templates/index&quot;&gt;how templates work&lt;/a&gt; with Jekyll if you want to know more.</source>
          <target state="translated">もちろん、投稿を表示する方法（および場所）、およびサイトを構成する方法を完全に制御できます。詳細を知りたい場合は、Jekyllで&lt;a href=&quot;../templates/index&quot;&gt;テンプレートがどのように機能するかについて&lt;/a&gt;詳しく読む必要があります。</target>
        </trans-unit>
        <trans-unit id="7906d9dd10da83c4dc9e9cc059ee3607b107572f" translate="yes" xml:space="preserve">
          <source>Often times, you will find that you are repeating a lot of configuration options. Setting the same layout in each file, adding the same category - or categories - to a post, etc. You can even add custom variables like author names, which might be the same for the majority of posts on your blog.</source>
          <target state="translated">しばしば、多くの設定オプションを繰り返していることに気づくでしょう。それぞれのファイルに同じレイアウトを設定したり、同じカテゴリ-またはカテゴリ-を記事に追加したり。著者名のようなカスタム変数を追加することもできますが、これはあなたのブログの大多数の記事では同じかもしれません。</target>
        </trans-unit>
        <trans-unit id="dd7a7fc492a1910ffb2d5a05efad918a16494e6e" translate="yes" xml:space="preserve">
          <source>Often, you&amp;rsquo;ll want the ability to run a Jekyll site in multiple places, such as previewing locally before pushing to GitHub Pages. Jekyll 1.0 makes that easier with the new &lt;code&gt;--baseurl&lt;/code&gt; flag. To take advantage of this feature, first add the production &lt;code&gt;baseurl&lt;/code&gt; to your site&amp;rsquo;s &lt;code&gt;_config.yml&lt;/code&gt; file. Then, throughout the site, simply prefix relative URLs with &lt;code&gt;{{ site.baseurl }}&lt;/code&gt;. When you&amp;rsquo;re ready to preview your site locally, pass along the &lt;code&gt;--baseurl&lt;/code&gt; flag with your local baseurl (most likely &lt;code&gt;/&lt;/code&gt;) to &lt;code&gt;jekyll serve&lt;/code&gt; and Jekyll will swap in whatever you&amp;rsquo;ve passed along, ensuring all your links work as you&amp;rsquo;d expect in both environments.</source>
          <target state="translated">多くの場合、GitHubページにプッシュする前にローカルでプレビューするなど、Jekyllサイトを複数の場所で実行する機能が必要になります。 Jekyll 1.0は、新しい &lt;code&gt;--baseurl&lt;/code&gt; フラグを使用してそれを簡単にします。この機能を利用するには、最初にサイトの &lt;code&gt;_config.yml&lt;/code&gt; ファイルに製品の &lt;code&gt;baseurl&lt;/code&gt; を追加します。次に、サイト全体で、相対URLの前に単に &lt;code&gt;{{ site.baseurl }}&lt;/code&gt; ます。ローカルでサイトをプレビューする準備ができたら、 &lt;code&gt;--baseurl&lt;/code&gt; フラグとローカルbaseurl（ほとんどの場合は &lt;code&gt;/&lt;/code&gt; ）を &lt;code&gt;jekyll serve&lt;/code&gt; てjekyllを配信します。Jekyllは、渡されたものをすべて入れ替えて、すべてのリンクが機能することを確認します。 d両方の環境で期待します。</target>
        </trans-unit>
        <trans-unit id="d30b145b4bde5fa638fe23ec4ef06976a5bbbe21" translate="yes" xml:space="preserve">
          <source>Ok, now for an explanation of each line:</source>
          <target state="translated">では、それぞれのセリフの説明をします。</target>
        </trans-unit>
        <trans-unit id="6e28fd75868e57365d52c976d9e5c95ac3f14096" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;https://www.nearlyfreespeech.net/&quot;&gt;NearlyFreeSpeech&lt;/a&gt; you need to run the following commands before installing Jekyll:</source>
          <target state="translated">上&lt;a href=&quot;https://www.nearlyfreespeech.net/&quot;&gt;NearlyFreeSpeech&lt;/a&gt;あなたはジキルをインストールする前に、次のコマンドを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="9c3597264393bddf95c610836b50fcadbbee4990" translate="yes" xml:space="preserve">
          <source>On Android (with Termux) you can install all requirements by running:</source>
          <target state="translated">Android(Termuxを使用)では、実行することですべての要件をインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="b9fb4f0f510e3218e417720a10ad1d07d4892cbf" translate="yes" xml:space="preserve">
          <source>On Debian or Ubuntu, you may need to add &lt;code&gt;/var/lib/gems/1.8/bin/&lt;/code&gt; to your path in order to have the &lt;code&gt;jekyll&lt;/code&gt; executable be available in your Terminal.</source>
          <target state="translated">DebianまたはUbuntuでは、ターミナルで &lt;code&gt;jekyll&lt;/code&gt; 実行可能ファイルを使用できるようにするために、パスに &lt;code&gt;/var/lib/gems/1.8/bin/&lt;/code&gt; を追加する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="1c531262063904dc6bee40ddd0b7cf0a9d8411f4" translate="yes" xml:space="preserve">
          <source>On Red Hat, CentOS, and Fedora systems you can do this by running:</source>
          <target state="translated">Red Hat、CentOS、Fedora システムでは、これを実行することで行うことができます。</target>
        </trans-unit>
        <trans-unit id="fa115f95060aeec4e3e2d8c7325ac6dc5e8eb616" translate="yes" xml:space="preserve">
          <source>On Ubuntu if you get stuck after &lt;code&gt;bundle exec jekyll serve&lt;/code&gt; and see error messages like &lt;code&gt;Could not locate Gemfile&lt;/code&gt; or &lt;code&gt;.bundle/ directory&lt;/code&gt;, it&amp;rsquo;s likely because all requirements have not been fully met. Recent stock Ubuntu distributions require the installation of both the &lt;code&gt;ruby&lt;/code&gt; and &lt;code&gt;ruby-all-dev&lt;/code&gt; packages:</source>
          <target state="translated">Ubuntuで、 &lt;code&gt;bundle exec jekyll serve&lt;/code&gt; 後でスタックし、 &lt;code&gt;Could not locate Gemfile&lt;/code&gt; または &lt;code&gt;.bundle/ directory&lt;/code&gt; ませんでしたなどのエラーメッセージが表示される場合は、すべての要件が完全に満たされていない可能性があります。最近の標準のUbuntuディストリビューションでは、 &lt;code&gt;ruby&lt;/code&gt; パッケージと &lt;code&gt;ruby-all-dev&lt;/code&gt; パッケージの両方をインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="b5a43e36150386712212d9f5b9c9c1a6f0c1c9d5" translate="yes" xml:space="preserve">
          <source>On Windows, you may need to install &lt;a href=&quot;https://wiki.github.com/oneclick/rubyinstaller/development-kit&quot;&gt;RubyInstaller DevKit&lt;/a&gt;.</source>
          <target state="translated">Windowsでは、&lt;a href=&quot;https://wiki.github.com/oneclick/rubyinstaller/development-kit&quot;&gt;RubyInstaller DevKitの&lt;/a&gt;インストールが必要になる場合があります。</target>
        </trans-unit>
        <trans-unit id="bc528da50fbf0444b3fec13f95a3705a7abf12e9" translate="yes" xml:space="preserve">
          <source>On macOS, you may need to update RubyGems (using &lt;code&gt;sudo&lt;/code&gt; only if necessary):</source>
          <target state="translated">macOSでは、RubyGemsを更新する必要がある場合があります（必要な場合のみ &lt;code&gt;sudo&lt;/code&gt; を使用）。</target>
        </trans-unit>
        <trans-unit id="3d800c5c38947e2742dca8b913a5dcc9a8c572f5" translate="yes" xml:space="preserve">
          <source>Once Homebrew is installed, the second step is easy:</source>
          <target state="translated">Homebrewをインストールしたら、次のステップは簡単です。</target>
        </trans-unit>
        <trans-unit id="1d48bb207556e12c4176a8e5b62edee99682ac0f" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve created your class and have it properly set up either as a plugin in the &lt;code&gt;_plugins&lt;/code&gt; folder or as a gem, specify it in your &lt;code&gt;_config.yml&lt;/code&gt;:</source>
          <target state="translated">クラスを作成し、 &lt;code&gt;_plugins&lt;/code&gt; フォルダー内のプラグインまたはgem として適切に設定したら、 &lt;code&gt;_config.yml&lt;/code&gt; で指定します。</target>
        </trans-unit>
        <trans-unit id="7764f5c760737cd6cf299480bea632afe6568e67" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve generated the &lt;code&gt;_site&lt;/code&gt; directory, you can easily rsync its content using a &lt;code&gt;tasks/deploy&lt;/code&gt; shell script similar to &lt;a href=&quot;https://github.com/vitalyrepin/vrepinblog/blob/master/transfer.sh&quot;&gt;this deploy script here&lt;/a&gt;. You&amp;rsquo;d obviously need to change the values to reflect your site&amp;rsquo;s details.</source>
          <target state="translated">&lt;code&gt;_site&lt;/code&gt; ディレクトリを生成したら、&lt;a href=&quot;https://github.com/vitalyrepin/vrepinblog/blob/master/transfer.sh&quot;&gt;このデプロイスクリプト&lt;/a&gt;と同様の &lt;code&gt;tasks/deploy&lt;/code&gt; シェルスクリプトを使用して、そのコンテンツを簡単にrsyncできます。明らかに、サイトの詳細を反映するように値を変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="f383d31d4e5cb6939c261af3b2784a812fa3a19e" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve generated the &lt;code&gt;_site&lt;/code&gt; directory, you can easily scp its content using a &lt;code&gt;tasks/deploy&lt;/code&gt; shell script similar to &lt;a href=&quot;https://github.com/henrik/henrik.nyh.se/blob/master/script/deploy&quot;&gt;this deploy script&lt;/a&gt;. You&amp;rsquo;d obviously need to change the values to reflect your site&amp;rsquo;s details. There is even &lt;a href=&quot;https://gist.github.com/henrik/214959&quot;&gt;a matching TextMate command&lt;/a&gt; that will help you run this script.</source>
          <target state="translated">&lt;code&gt;_site&lt;/code&gt; ディレクトリを生成したら、&lt;a href=&quot;https://github.com/henrik/henrik.nyh.se/blob/master/script/deploy&quot;&gt;このデプロイスクリプト&lt;/a&gt;と同様の &lt;code&gt;tasks/deploy&lt;/code&gt; シェルスクリプトを使用して、そのコンテンツを簡単にscp できます。明らかに、サイトの詳細を反映するように値を変更する必要があります。このスクリプトの実行に役立つ&lt;a href=&quot;https://gist.github.com/henrik/214959&quot;&gt;、一致するTextMateコマンド&lt;/a&gt;もあります。</target>
        </trans-unit>
        <trans-unit id="2fa1c2d47a36a61344e21d4725d8dd4dcfb7be93" translate="yes" xml:space="preserve">
          <source>One major benefit of using the &lt;code&gt;link&lt;/code&gt; or &lt;code&gt;post_url&lt;/code&gt; tag is link validation. If the link doesn&amp;rsquo;t exist, Jekyll won&amp;rsquo;t build your site. This is a good thing, as it will alert you to a broken link so you can fix it (rather than allowing you to build and deploy a site with broken links).</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; または &lt;code&gt;post_url&lt;/code&gt; タグを使用する主な利点の1つは、リンクの検証です。リンクが存在しない場合、Jekyllはサイトを構築しません。リンク切れを警告して修正できるので、これは良いことです（リンク切れのあるサイトを構築してデプロイするのではなく）。</target>
        </trans-unit>
        <trans-unit id="e8f3b981456dcf42d600fd7bd3fac055adb5786c" translate="yes" xml:space="preserve">
          <source>One of Jekyll&amp;rsquo;s best aspects is that it is &amp;ldquo;blog aware&amp;rdquo;. What does this mean, exactly? Well, simply put, it means that blogging is baked into Jekyll&amp;rsquo;s functionality. If you write articles and publish them online, you can publish and maintain a blog simply by managing a folder of text-files on your computer. Compared to the hassle of configuring and maintaining databases and web-based CMS systems, this will be a welcome change!</source>
          <target state="translated">ジキルの最も優れた点の1つは、「ブログ対応」であることです。これはどういう意味ですか？簡単に言えば、ブログがJekyllの機能に組み込まれているということです。記事を書いてそれらをオンラインで公開する場合、コンピューター上でテキストファイルのフォルダーを管理するだけで、ブログを公開および維持できます。データベースとWebベースのCMSシステムの構成と保守の手間と比較して、これは歓迎すべき変更です。</target>
        </trans-unit>
        <trans-unit id="6c36368b930f23a8cae7edd1498894a4e3f706e2" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;Gemfile&lt;/code&gt; and remove &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Gemfile&lt;/code&gt; を開き、 &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="f6880880ea71672000d6b0fc05e219906fdfa14f" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;_config.yml&lt;/code&gt; and remove &lt;code&gt;theme: minima&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; を開き、 &lt;code&gt;theme: minima&lt;/code&gt; を削除します：minima。</target>
        </trans-unit>
        <trans-unit id="b6f92283b488ad8b56842b85e322ec4b81a37568" translate="yes" xml:space="preserve">
          <source>Open a command prompt and execute the following commands:</source>
          <target state="translated">コマンドプロンプトを開き、以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="004ceb479a659b160d5534bfd7d1947dc40b5925" translate="yes" xml:space="preserve">
          <source>Open a command prompt, target your local blog repository root, and install github-pages: &lt;code&gt;bundle install&lt;/code&gt;</source>
          <target state="translated">コマンドプロンプトを開き、ローカルのブログリポジトリルートをターゲットにして、github-pagesをインストールします。bundle &lt;code&gt;bundle install&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7583cd72c5014d4ac4731c7aa0e930cf31931a3c" translate="yes" xml:space="preserve">
          <source>Open command prompt and install &lt;a href=&quot;http://bundler.io/&quot;&gt;Bundler&lt;/a&gt;: &lt;code&gt;gem install bundler&lt;/code&gt;</source>
          <target state="translated">オープンコマンドプロンプトとインストール&lt;a href=&quot;http://bundler.io/&quot;&gt;バンドラー&lt;/a&gt;： &lt;code&gt;gem install bundler&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8ab8db786d60c2545688e62a58c67b60caca1ae" translate="yes" xml:space="preserve">
          <source>Open command prompt in &lt;code&gt;C:\tools\DevKit2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;C:\tools\DevKit2&lt;/code&gt; コマンドプロンプトを開きます。</target>
        </trans-unit>
        <trans-unit id="73152d15b9a1ec78d263f7c6b2b461568506e6bf" translate="yes" xml:space="preserve">
          <source>Open the theme&amp;rsquo;s directory in Finder or Explorer:</source>
          <target state="translated">FinderまたはExplorerでテーマのディレクトリを開きます。</target>
        </trans-unit>
        <trans-unit id="70a99ba8a9ffb445b428e39680492a883a85000b" translate="yes" xml:space="preserve">
          <source>OpenShift</source>
          <target state="translated">OpenShift</target>
        </trans-unit>
        <trans-unit id="d32fab14202ae0097389d61ed54dc7ccca3287f0" translate="yes" xml:space="preserve">
          <source>Optional Extras</source>
          <target state="translated">オプション</target>
        </trans-unit>
        <trans-unit id="2730df1840876b27ba50ea3c9e4fcd46e32a5273" translate="yes" xml:space="preserve">
          <source>Optionally configure the build by clicking on the gear icon. Further configuration happens via your &lt;code&gt;.travis.yml&lt;/code&gt; file. More details below.</source>
          <target state="translated">オプションで、歯車アイコンをクリックしてビルドを構成します。 &lt;code&gt;.travis.yml&lt;/code&gt; ファイルを使用して、さらに構成を行います。詳細は以下をご覧ください。</target>
        </trans-unit>
        <trans-unit id="60e7611132055753c9b1041f69b1f74d642f7ec9" translate="yes" xml:space="preserve">
          <source>Optionally you can use &lt;a href=&quot;https://github.com/KeJunMao/fastjekyll#autoinstall-jekyll-for-windows&quot;&gt;Autoinstall Jekyll for Windows&lt;/a&gt;.</source>
          <target state="translated">必要に応じて、&lt;a href=&quot;https://github.com/KeJunMao/fastjekyll#autoinstall-jekyll-for-windows&quot;&gt;Autoinstall Jekyll for Windowsを&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="135a1bcda4b25a5f404e15dc6baa60da6e5b1c5b" translate="yes" xml:space="preserve">
          <source>Options and Flags</source>
          <target state="translated">オプションとフラグ</target>
        </trans-unit>
        <trans-unit id="c3041924699f7386336b1c03e46950d1ce22be2c" translate="yes" xml:space="preserve">
          <source>Options are given as a second argument to &lt;code&gt;.new&lt;/code&gt;, and are encoded in a symbol-keyed Ruby Hash. For more information about the configuration options, check out &lt;code&gt;html-proofer&lt;/code&gt;&amp;rsquo;s README file.</source>
          <target state="translated">オプションは &lt;code&gt;.new&lt;/code&gt; の 2番目の引数として指定され、シンボルキーのRubyハッシュでエンコードされます。設定オプションの詳細については、 &lt;code&gt;html-proofer&lt;/code&gt; のREADMEファイルをご覧ください。</target>
        </trans-unit>
        <trans-unit id="35a22db1ee88115b121ce6b7c4afd8072e9a235c" translate="yes" xml:space="preserve">
          <source>Options for creating a new site with Jekyll</source>
          <target state="translated">ジキルで新規サイトを作成するためのオプション</target>
        </trans-unit>
        <trans-unit id="560143653190c35a839a512a853005f840e8708e" translate="yes" xml:space="preserve">
          <source>Options for the &lt;code&gt;slugify&lt;/code&gt; filter</source>
          <target state="translated">&lt;code&gt;slugify&lt;/code&gt; フィルターのオプション</target>
        </trans-unit>
        <trans-unit id="fd32301500d284cdb5c29f7af6f284e0ab343b55" translate="yes" xml:space="preserve">
          <source>Or &lt;code&gt;_data/members.csv&lt;/code&gt;:</source>
          <target state="translated">または &lt;code&gt;_data/members.csv&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d172be3fe8bc618fcc6602af3e4c76c0aae31310" translate="yes" xml:space="preserve">
          <source>Or if you&amp;rsquo;ve started with the &lt;code&gt;jekyll new&lt;/code&gt; command, replace &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; with your theme-gem:</source>
          <target state="translated">あるいは、 &lt;code&gt;jekyll new&lt;/code&gt; コマンドで始めた場合は、 &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; をお使いのtheme-gem に置き換えます。</target>
        </trans-unit>
        <trans-unit id="6e6a6f2086bb5fe5dbfd17d8d5f502d48759834b" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">Other</target>
        </trans-unit>
        <trans-unit id="0c6615de6943228411f3ad7e04655686aac16eb4" translate="yes" xml:space="preserve">
          <source>Other Files/Folders</source>
          <target state="translated">その他のファイル/フォルダ</target>
        </trans-unit>
        <trans-unit id="16450a48eba70ad54ff1ad9ff818734f44629c84" translate="yes" xml:space="preserve">
          <source>Other commentary</source>
          <target state="translated">その他の解説</target>
        </trans-unit>
        <trans-unit id="fca1c1ad83bd5de1fb6c5a8fa7489884ec896f2e" translate="yes" xml:space="preserve">
          <source>Our friends at GitHub have provided the &lt;a href=&quot;https://github.com/github/pages-gem&quot;&gt;github-pages&lt;/a&gt; gem which is used to manage &lt;a href=&quot;https://pages.github.com/versions/&quot;&gt;Jekyll and its dependencies on GitHub Pages&lt;/a&gt;. Using it in your projects means that when you deploy your site to GitHub Pages, you will not be caught by unexpected differences between various versions of the gems.</source>
          <target state="translated">GitHubの友人は、&lt;a href=&quot;https://pages.github.com/versions/&quot;&gt;JekyllとそのGitHub Pagesへの依存関係&lt;/a&gt;を管理するために使用される&lt;a href=&quot;https://github.com/github/pages-gem&quot;&gt;github-pages&lt;/a&gt; gemを提供しています。プロジェクトでそれを使用することは、サイトをGitHub Pagesにデプロイするときに、gemのさまざまなバージョン間の予期しない違いに気づかないことを意味します。</target>
        </trans-unit>
        <trans-unit id="552f0311af4ab97f91dc8653580124d0fb276057" translate="yes" xml:space="preserve">
          <source>Outputs the content of the tag.</source>
          <target state="translated">タグの内容を出力します。</target>
        </trans-unit>
        <trans-unit id="37dc9012ef71231741cb1e581f85142964b548d7" translate="yes" xml:space="preserve">
          <source>Overall, you can create includes that act as templates for a variety of uses &amp;mdash; inserting audio or video clips, alerts, special formatting, and more. However, note that you should avoid using too many includes, as this will slow down the build time of your site. For example, don&amp;rsquo;t use includes every time you insert an image. (The above technique shows a use case for special images.)</source>
          <target state="translated">全体として、オーディオまたはビデオクリップの挿入、アラート、特別な書式設定など、さまざまな用途のテンプレートとして機能するインクルードを作成できます。ただし、サイトのビルド時間が遅くなるため、インクルードの使用は避けてください。たとえば、画像を挿入するたびにインクルードを使用しないでください。（上記の手法は、特別な画像の使用例を示しています。）</target>
        </trans-unit>
        <trans-unit id="a407aa60450670a092614d3725b0bf7a57789eec" translate="yes" xml:space="preserve">
          <source>Override default development settings</source>
          <target state="translated">デフォルトの開発設定を上書きする</target>
        </trans-unit>
        <trans-unit id="1fa8317388f8659e5d80c07bb57f00ba667fc7e7" translate="yes" xml:space="preserve">
          <source>Overriding theme defaults</source>
          <target state="translated">テーマのデフォルトを上書きする</target>
        </trans-unit>
        <trans-unit id="fb727ea90883481adad9143766fed7cf0c61d139" translate="yes" xml:space="preserve">
          <source>Page Variables</source>
          <target state="translated">ページ変数</target>
        </trans-unit>
        <trans-unit id="b2edf287ea254dc5eefc4ac30424fb7a0fabecf3" translate="yes" xml:space="preserve">
          <source>Page specific information + the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML front matter&lt;/a&gt;. Custom variables set via the YAML Front Matter will be available here. See below for details.</source>
          <target state="translated">ページ固有の情報+ &lt;a href=&quot;../frontmatter/index&quot;&gt;YAMLの前付け&lt;/a&gt;。YAMLフロントマターを介して設定されたカスタム変数は、ここで使用できます。詳細については、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="600584c2d5ccb97c0c0c424d9f32d6b102fcb040" translate="yes" xml:space="preserve">
          <source>Pages</source>
          <target state="translated">Pages</target>
        </trans-unit>
        <trans-unit id="1731a84a0ac0bb83b8947e3dc93bd2eedd07c402" translate="yes" xml:space="preserve">
          <source>Pages and posts can also access a specific data item. The example below shows how to access a specific item:</source>
          <target state="translated">ページや投稿は、特定のデータ項目にアクセスすることもできます。以下の例では、特定の項目にアクセスする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="100325b8d6de92dc6ff09cd2c078133755bf274f" translate="yes" xml:space="preserve">
          <source>Pagination</source>
          <target state="translated">Pagination</target>
        </trans-unit>
        <trans-unit id="099f26d22f2eab450a9f8e4641df844a9fd35b39" translate="yes" xml:space="preserve">
          <source>Pagination does not support tags or categories</source>
          <target state="translated">ページネーションはタグやカテゴリをサポートしていません。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
