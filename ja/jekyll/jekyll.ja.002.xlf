<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="jekyll">
    <body>
      <group id="jekyll">
        <trans-unit id="665ed12f6912f493c693116c0d4595a8fceedf76" translate="yes" xml:space="preserve">
          <source>Pagination does not work from within Markdown or Textile files from your Jekyll site. Pagination works when called from within the HTML file, named &lt;code&gt;index.html&lt;/code&gt;, which optionally may reside in and produce pagination from within a subdirectory, via the &lt;code&gt;paginate_path&lt;/code&gt; configuration value.</source>
          <target state="translated">JekyllサイトのMarkdownまたはTextileファイル内では、ページ付けは機能しません。ページネーションは、 &lt;code&gt;index.html&lt;/code&gt; という名前のHTMLファイル内から呼び出されたときに機能します。これは、 &lt;code&gt;paginate_path&lt;/code&gt; 構成値を介して、オプションでサブディレクトリ内に存在し、サブディレクトリ内からページネーションを生成できます。</target>
        </trans-unit>
        <trans-unit id="28eb844982985dc922c656b73584b243a8ef4a58" translate="yes" xml:space="preserve">
          <source>Pagination for categories, tags and collections</source>
          <target state="translated">カテゴリ、タグ、コレクションのページネーション</target>
        </trans-unit>
        <trans-unit id="bc21578e87f661e49f1a43a46e87bbd3f4931c48" translate="yes" xml:space="preserve">
          <source>Pagination only works within HTML files</source>
          <target state="translated">ページネーションはHTMLファイル内でのみ動作します</target>
        </trans-unit>
        <trans-unit id="a5e90cc1ce791d5b1a24484acb57915c8ea30726" translate="yes" xml:space="preserve">
          <source>Pagination pages through every post in the &lt;code&gt;posts&lt;/code&gt; variable unless a post has &lt;code&gt;hidden: true&lt;/code&gt; in its YAML Front Matter. It does not currently allow paging over groups of posts linked by a common tag or category. It cannot include any collection of documents because it is restricted to posts.</source>
          <target state="translated">YAMLフロントマターで投稿が &lt;code&gt;hidden: true&lt;/code&gt; ている場合を除き、 &lt;code&gt;posts&lt;/code&gt; 変数のすべての投稿をページ分割します。現在、共通のタグまたはカテゴリによってリンクされている投稿のグループをページングすることはできません。投稿に制限されているため、ドキュメントのコレクションを含めることはできません。</target>
        </trans-unit>
        <trans-unit id="24533236e88c1d36ff37cc521374f5302ab40560" translate="yes" xml:space="preserve">
          <source>Paginator</source>
          <target state="translated">Paginator</target>
        </trans-unit>
        <trans-unit id="84e974ec86fb92f41c07299c2cf6c5412ae6f050" translate="yes" xml:space="preserve">
          <source>Paginator variable availability</source>
          <target state="translated">パジネーターの可変可能性</target>
        </trans-unit>
        <trans-unit id="92b3f43aee0fed327790633811b3b180ccc11c8a" translate="yes" xml:space="preserve">
          <source>Passing parameter variables to includes</source>
          <target state="translated">パラメータ変数をインクルードに渡す</target>
        </trans-unit>
        <trans-unit id="b1948833b08ddb3d596c60fadb3e50a706082bf2" translate="yes" xml:space="preserve">
          <source>Passing parameters to includes</source>
          <target state="translated">パラメータをインクルードに渡す</target>
        </trans-unit>
        <trans-unit id="d09b5f991f332dcef768215c7f896fd32593e3ab" translate="yes" xml:space="preserve">
          <source>Passing parameters to includes is especially helpful when you want to hide away complex formatting from your Markdown content.</source>
          <target state="translated">パラメータをインクルードに渡すことは、Markdownコンテンツから複雑なフォーマットを隠したい場合に特に便利です。</target>
        </trans-unit>
        <trans-unit id="d4e60c27a532f36e8d9eb0fc03f0bd6d8dea3a72" translate="yes" xml:space="preserve">
          <source>Passing references to YAML files as parameter values</source>
          <target state="translated">YAMLファイルへの参照をパラメータ値として渡す</target>
        </trans-unit>
        <trans-unit id="2cc477e2aea081f0ff295affd369bd1d6c54ab84" translate="yes" xml:space="preserve">
          <source>Path to the document relative to the collection's directory.</source>
          <target state="translated">コレクションのディレクトリからの相対的なドキュメントへのパス。</target>
        </trans-unit>
        <trans-unit id="7127bd847805300c5c2ebdef3287652a44a839e2" translate="yes" xml:space="preserve">
          <source>Percent encodes any special characters in a URI. URI escape normally replaces a space with &lt;code&gt;%20&lt;/code&gt;. &lt;a href=&quot;https://en.wikipedia.org/wiki/Percent-encoding#Types_of_URI_characters&quot;&gt;Reserved characters&lt;/a&gt; will not be escaped.</source>
          <target state="translated">パーセントは、URIの特殊文字をエンコードします。URIエスケープは通常、スペースを &lt;code&gt;%20&lt;/code&gt; に置き換えます。&lt;a href=&quot;https://en.wikipedia.org/wiki/Percent-encoding#Types_of_URI_characters&quot;&gt;予約文字&lt;/a&gt;はエスケープされません。</target>
        </trans-unit>
        <trans-unit id="88973c8fae2719fe8ac2f36fc3841aa776c29088" translate="yes" xml:space="preserve">
          <source>Permalink Style</source>
          <target state="translated">パーマリンクスタイル</target>
        </trans-unit>
        <trans-unit id="4a6598c061feabe730c00f48fbba63aeeb8cad94" translate="yes" xml:space="preserve">
          <source>Permalink settings for pages and collections</source>
          <target state="translated">ページとコレクションのパーマリンク設定</target>
        </trans-unit>
        <trans-unit id="722b6f6fa174c5db2506367d3abe2fca3616ead6" translate="yes" xml:space="preserve">
          <source>Permalink style examples with posts</source>
          <target state="translated">投稿を使ったパーマースタイルの例</target>
        </trans-unit>
        <trans-unit id="dbd403fe181f92e05bc517db25b4ae6314e2582e" translate="yes" xml:space="preserve">
          <source>Permalinks</source>
          <target state="translated">Permalinks</target>
        </trans-unit>
        <trans-unit id="45205b32aac7d14c5f63a3d55000c4404bdd71fc" translate="yes" xml:space="preserve">
          <source>Permalinks and default paths</source>
          <target state="translated">パーマリンクとデフォルトパス</target>
        </trans-unit>
        <trans-unit id="f47de5ff111161d18fad9e57a6f9bb229ff5fc35" translate="yes" xml:space="preserve">
          <source>Permalinks no longer automatically add a trailing slash</source>
          <target state="translated">パーマリンクに自動的に末尾のスラッシュが追加されなくなりました。</target>
        </trans-unit>
        <trans-unit id="70a8fc9a8a667f813cf50a26ea70b8d3e322e9c0" translate="yes" xml:space="preserve">
          <source>Permalinks refer to the URLs (excluding the domain name or directory folder) for your pages, posts, or collections. Jekyll supports a flexible way to build permalinks, allowing you to leverage various template variables or choose built-in permalink styles (such as &lt;code&gt;date&lt;/code&gt;) that automatically use a template-variable pattern.</source>
          <target state="translated">パーマリンクは、ページ、投稿、またはコレクションのURL（ドメイン名またはディレクトリフォルダを除く）を指します。Jekyllは、パーマリンクを構築する柔軟な方法をサポートしているため、さまざまなテンプレート変数を利用したり、テンプレート変数パターンを自動的に使用する組み込みのパーマリンクスタイル（ &lt;code&gt;date&lt;/code&gt; など）を選択したりできます。</target>
        </trans-unit>
        <trans-unit id="60720f5c5a4a72182a2e32579d5ff97bb9804d3c" translate="yes" xml:space="preserve">
          <source>Pick a random value from an array. Optional: pick multiple values.</source>
          <target state="translated">配列からランダムな値をピックします。オプション:複数の値をピックします。</target>
        </trans-unit>
        <trans-unit id="6724700fe82140ed81667d9e1970f59962831ee1" translate="yes" xml:space="preserve">
          <source>Place all your partials in your &lt;code&gt;sass_dir&lt;/code&gt;, which defaults to &lt;code&gt;&amp;lt;source&amp;gt;/_sass&lt;/code&gt;. Place your main SCSS or Sass files in the place you want them to be in the output file, such as &lt;code&gt;&amp;lt;source&amp;gt;/css&lt;/code&gt;. For an example, take a look at &lt;a href=&quot;https://github.com/jekyll/jekyll-sass-converter/tree/master/docs&quot;&gt;this example site using Sass support in Jekyll&lt;/a&gt;.</source>
          <target state="translated">すべてのパーシャルを &lt;code&gt;sass_dir&lt;/code&gt; に配置します。デフォルトは &lt;code&gt;&amp;lt;source&amp;gt;/_sass&lt;/code&gt; です。メインのSCSSファイルまたはSassファイルを、 &lt;code&gt;&amp;lt;source&amp;gt;/css&lt;/code&gt; などの出力ファイルに置きたい場所に配置します。例として、&lt;a href=&quot;https://github.com/jekyll/jekyll-sass-converter/tree/master/docs&quot;&gt;JekyllのSassサポートを使用&lt;/a&gt;したこのサンプルサイトをご覧ください。</target>
        </trans-unit>
        <trans-unit id="b9d011d9a69638626708513d5be1a1045790a7ed" translate="yes" xml:space="preserve">
          <source>Place it in the &lt;code&gt;bin&lt;/code&gt; subdirectory of your home folder (&lt;code&gt;~/bin&lt;/code&gt;)</source>
          <target state="translated">ホームフォルダーの &lt;code&gt;bin&lt;/code&gt; サブディレクトリに配置します（ &lt;code&gt;~/bin&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="1fc60b48edacdcff0774ec0c923e2a01de2bba2a" translate="yes" xml:space="preserve">
          <source>Place named HTML or &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; files for each page in your site&amp;rsquo;s root folder.</source>
          <target state="translated">各ページの名前付きHTMLまたは&lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;ファイルをサイトのルートフォルダーに配置します。</target>
        </trans-unit>
        <trans-unit id="7c9271c31bc7a38b8983172ef056e0b18258c168" translate="yes" xml:space="preserve">
          <source>Place pages inside folders and subfolders named whatever you want.</source>
          <target state="translated">好きな名前のフォルダやサブフォルダの中にページを配置します。</target>
        </trans-unit>
        <trans-unit id="e6d5bbc4f1c87296e2a7ea566d1bfd5a5169afdf" translate="yes" xml:space="preserve">
          <source>Please note that both &lt;code&gt;remove_block_html_tags&lt;/code&gt; and &lt;code&gt;remove_span_html_tags&lt;/code&gt; are currently unsupported in Jekyll due to the fact that they are not included within the kramdown HTML converter.</source>
          <target state="translated">&lt;code&gt;remove_block_html_tags&lt;/code&gt; と &lt;code&gt;remove_span_html_tags&lt;/code&gt; はどちらもkramdown HTMLコンバーターに含まれていないため、現在Jekyllではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="650509eedfbfae3803f781c1708f1c1fc918b11b" translate="yes" xml:space="preserve">
          <source>Please note that globbing a path is known to have a negative effect on performance and is currently not optimized, especially on Windows. Globbing a path will increase your build times in proportion to the size of the associated collection directory.</source>
          <target state="translated">パスのグロブ化はパフォーマンスに悪影響を及ぼすことが知られており、特に Windows では現在のところ最適化されていないことに注意してください。パスをグロブ化すると、関連するコレクションディレクトリのサイズに比例してビルド時間が長くなります。</target>
        </trans-unit>
        <trans-unit id="3e7053ca3819821374d48c6e7c191b321fed7641" translate="yes" xml:space="preserve">
          <source>Please refer to GitHub official documentation on &lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;user, organization and project pages&lt;/a&gt; to see more detailed examples.</source>
          <target state="translated">より詳細な例については&lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;、ユーザー、組織、プロジェクトページの&lt;/a&gt; GitHub公式ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1837db6abc417517a9f8ed078c5f32ee6063cb9b" translate="yes" xml:space="preserve">
          <source>Please refer to our &lt;a href=&quot;https://jekyllrb.com/docs/upgrading/&quot;&gt;upgrading section&lt;/a&gt; for major updates detailed instructions.</source>
          <target state="translated">メジャーアップデートの詳細な手順については、&lt;a href=&quot;https://jekyllrb.com/docs/upgrading/&quot;&gt;アップグレードセクション&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5b05c8bfba1866fa9160e033fa61d16d7fb42a9d" translate="yes" xml:space="preserve">
          <source>Please report issues you encounter!</source>
          <target state="translated">遭遇した問題を報告してください</target>
        </trans-unit>
        <trans-unit id="c3708d29157821517e37a79459a3140546e30b5a" translate="yes" xml:space="preserve">
          <source>Please stop and rerun `jekyll serve` command.</source>
          <target state="translated">jjekyll serve`コマンドを停止して再実行してください。</target>
        </trans-unit>
        <trans-unit id="ab2e26dd8b8868a3969cb3321e0c983c0d9d67d4" translate="yes" xml:space="preserve">
          <source>Plugins</source>
          <target state="translated">Plugins</target>
        </trans-unit>
        <trans-unit id="cbca525c651606d32aa2cd9d29a443e374188b86" translate="yes" xml:space="preserve">
          <source>Plugins on GitHub Pages</source>
          <target state="translated">GitHubページのプラグイン</target>
        </trans-unit>
        <trans-unit id="375ed3fbdc9976dcc468b1c1ba32b1ffb19c53bd" translate="yes" xml:space="preserve">
          <source>Plugins/themes can also leverage Data Files to set configuration variables.</source>
          <target state="translated">プラグイン/テーマは、設定変数を設定するためにデータファイルを利用することもできます。</target>
        </trans-unit>
        <trans-unit id="a85f761779816bf8dd03436d22df275b06b2dd24" translate="yes" xml:space="preserve">
          <source>Post excerpts</source>
          <target state="translated">抜粋を投稿する</target>
        </trans-unit>
        <trans-unit id="a0ca0c3198947ded7419101f3e83d48a9cb41f2a" translate="yes" xml:space="preserve">
          <source>Posts</source>
          <target state="translated">Posts</target>
        </trans-unit>
        <trans-unit id="5957559cf2bc0a4b768a12ae4fb1f9e36e15312f" translate="yes" xml:space="preserve">
          <source>Posts available for that page.</source>
          <target state="translated">そのページで利用可能な投稿</target>
        </trans-unit>
        <trans-unit id="f903aefffca964e59bae5902fdb1e7726250998a" translate="yes" xml:space="preserve">
          <source>Pre-releases</source>
          <target state="translated">Pre-releases</target>
        </trans-unit>
        <trans-unit id="ab86fb82a986460447b29bbb55ca5b9bf867bad6" translate="yes" xml:space="preserve">
          <source>Precedence</source>
          <target state="translated">Precedence</target>
        </trans-unit>
        <trans-unit id="1c4906dcef85048abb9eb583ebf5283b131efdb6" translate="yes" xml:space="preserve">
          <source>Predefined Global Variables</source>
          <target state="translated">定義済みのグローバル変数</target>
        </trans-unit>
        <trans-unit id="3d2381d3ce17502f9b5cd6e96843c14d10cb7fcb" translate="yes" xml:space="preserve">
          <source>Predefined Variables for Posts</source>
          <target state="translated">投稿用の定義済み変数</target>
        </trans-unit>
        <trans-unit id="26ba43519e040aa1b9b90878aca34bb3b54255d2" translate="yes" xml:space="preserve">
          <source>Prepend the &lt;code&gt;baseurl&lt;/code&gt; value to the input. Useful if your site is hosted at a subpath rather than the root of the domain.</source>
          <target state="translated">前に付加 &lt;code&gt;baseurl&lt;/code&gt; 入力に値。サイトがドメインのルートではなくサブパスでホストされている場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="9dc057d4d4274fe0084085e47f8ab7b0849795a9" translate="yes" xml:space="preserve">
          <source>Prepend the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;baseurl&lt;/code&gt; value to the input.</source>
          <target state="translated">先頭に追加 &lt;code&gt;url&lt;/code&gt; と &lt;code&gt;baseurl&lt;/code&gt; 入力に値を。</target>
        </trans-unit>
        <trans-unit id="1d538a43faed87f85cebbc6100a1b9ccf9957db3" translate="yes" xml:space="preserve">
          <source>Previewing your theme</source>
          <target state="translated">テーマのプレビュー</target>
        </trans-unit>
        <trans-unit id="2154f26d808dc1c91b9a1a53f37bd4a9568f4cb5" translate="yes" xml:space="preserve">
          <source>Print verbose output.</source>
          <target state="translated">冗長な出力を印刷します。</target>
        </trans-unit>
        <trans-unit id="7b0546431f16f831257149f91717df7dca1edc54" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Access the site object using Liquid</source>
          <target state="translated">ProTip&amp;trade;：Liquidを使用してサイトオブジェクトにアクセスする</target>
        </trans-unit>
        <trans-unit id="3265c92a3b4fb0a61b66fdd29aad666715eaf588" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Don't repeat yourself</source>
          <target state="translated">ProTip&amp;trade;：繰り返してはいけません</target>
        </trans-unit>
        <trans-unit id="de67579ec50727aa178d3fe02d3566f4ac49a47e" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Enable Syntax Highlighting</source>
          <target state="translated">ProTip&amp;trade;：構文の強調表示を有効にする</target>
        </trans-unit>
        <trans-unit id="9446cafc3be6fdaecb79928bdb5b239f317a9eee" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Front Matter Variables Are Optional</source>
          <target state="translated">ProTip&amp;trade;：フロントマター変数はオプションです</target>
        </trans-unit>
        <trans-unit id="cb3a1d73b062d32f0f1b5eae3047cabc40ebf0c0" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Link to other posts</source>
          <target state="translated">ProTip&amp;trade;：他の投稿へのリンク</target>
        </trans-unit>
        <trans-unit id="da7d4be0b76a4aa0b81c7842c6357ff95bac3ac4" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Render Posts Marked As Unpublished</source>
          <target state="translated">ProTip&amp;trade;：非公開としてマークされた投稿のレンダリング</target>
        </trans-unit>
        <trans-unit id="15cee3e14e9d0d4d1e113328a457f8ab8391e83a" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Show line numbers</source>
          <target state="translated">ProTip&amp;trade;：行番号を表示</target>
        </trans-unit>
        <trans-unit id="fc6f2dc1893a7a027e119eba27c9d2c116153006" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Use Custom Front Matter</source>
          <target state="translated">ProTip&amp;trade;：カスタムフロントマターの使用</target>
        </trans-unit>
        <trans-unit id="10cef24c138180517ee4ad5cb91f235256dd02d5" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Use GitHub Pages for zero-hassle Jekyll hosting</source>
          <target state="translated">ProTip&amp;trade;：手間のかからないJekyllホスティングにGitHubページを使用</target>
        </trans-unit>
        <trans-unit id="afaaef5ab1edf9c741a9f2886bb79aed97e05d22" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Use layouts on your homepage</source>
          <target state="translated">ProTip&amp;trade;：ホームページのレイアウトを使用する</target>
        </trans-unit>
        <trans-unit id="d827c1b33f443ecc681c04af8ce64c5d2004abc0" translate="yes" xml:space="preserve">
          <source>ProTips&amp;trade; help you get more from Jekyll</source>
          <target state="translated">ProTips&amp;trade;はJekyllからより多くを得るのに役立ちます</target>
        </trans-unit>
        <trans-unit id="c032a343ae0db68178586838c17d01f7b8c422f7" translate="yes" xml:space="preserve">
          <source>Problems installing Jekyll?</source>
          <target state="translated">ジキルのインストールに問題がありますか?</target>
        </trans-unit>
        <trans-unit id="cc329a8ee3d1b68c463fded001694148653fd1e8" translate="yes" xml:space="preserve">
          <source>Problems running Jekyll</source>
          <target state="translated">Jekyllの実行中の問題</target>
        </trans-unit>
        <trans-unit id="d74e7b85b7e0f35a8f31e48f3f367816f7b91635" translate="yes" xml:space="preserve">
          <source>Process and render draft posts.</source>
          <target state="translated">下書きの投稿を処理し、レンダリングします。</target>
        </trans-unit>
        <trans-unit id="8d79aa660a969e338fe721754211cc16d44e41b2" translate="yes" xml:space="preserve">
          <source>Produce an index for related posts. Requires the &lt;a href=&quot;http://www.classifier-reborn.com/&quot;&gt;classifier-reborn&lt;/a&gt; plugin.</source>
          <target state="translated">関連する投稿のインデックスを作成します。&lt;a href=&quot;http://www.classifier-reborn.com/&quot;&gt;classifier-reborn&lt;/a&gt;プラグインが必要です。</target>
        </trans-unit>
        <trans-unit id="2fe389b04fca211aac6d4aedea7a19bb13c6c893" translate="yes" xml:space="preserve">
          <source>Production Problems</source>
          <target state="translated">生産上の問題</target>
        </trans-unit>
        <trans-unit id="f7a01690b389c7251b3fc63190bd4c14a215d52e" translate="yes" xml:space="preserve">
          <source>Project Page URL Structure</source>
          <target state="translated">プロジェクトページのURL構造</target>
        </trans-unit>
        <trans-unit id="dc5067ca2ef47522f33e05bdaf9f555d40d0b771" translate="yes" xml:space="preserve">
          <source>Project Pages</source>
          <target state="translated">プロジェクトページ</target>
        </trans-unit>
        <trans-unit id="3c154d4bdff400f5e6b72eaeb22deac7b3dc0862" translate="yes" xml:space="preserve">
          <source>Provided that the file has a &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt; section, it will be transformed by Jekyll. The same will happen for any &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.markdown&lt;/code&gt;, &lt;code&gt;.md&lt;/code&gt;, or &lt;code&gt;.textile&lt;/code&gt; file in your site&amp;rsquo;s root directory or directories not listed above.</source>
          <target state="translated">ファイルに&lt;a href=&quot;../frontmatter/index&quot;&gt;YAMLフロントマター&lt;/a&gt;セクションがある場合、Jekyllによって変換されます。同じことが、サイトのルートディレクトリまたは上記にリストされていないディレクトリにある &lt;code&gt;.html&lt;/code&gt; 、 &lt;code&gt;.markdown&lt;/code&gt; 、 &lt;code&gt;.md&lt;/code&gt; 、または &lt;code&gt;.textile&lt;/code&gt; ファイルでも発生します。</target>
        </trans-unit>
        <trans-unit id="72be0277c49f7726d31c1d905434c0eea552f97f" translate="yes" xml:space="preserve">
          <source>Publish posts or collection documents with a future date.</source>
          <target state="translated">将来の日付が記載された投稿やコレクション文書を公開する。</target>
        </trans-unit>
        <trans-unit id="93655b49b00a36f5094483f0c66df8a777df09bf" translate="yes" xml:space="preserve">
          <source>Publishing to GitHub Pages? &lt;a href=&quot;../github-pages/index&quot;&gt;Check out our documentation page for just that purpose&lt;/a&gt;.</source>
          <target state="translated">GitHubページに公開しますか？&lt;a href=&quot;../github-pages/index&quot;&gt;まさにその目的のために私たちのドキュメントページをチェックしてください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c80ee6e060aa94453a1957194269b1eac9d50756" translate="yes" xml:space="preserve">
          <source>Publishing your theme</source>
          <target state="translated">テーマの公開</target>
        </trans-unit>
        <trans-unit id="056fba88002903e5d56a79d693886d8358679885" translate="yes" xml:space="preserve">
          <source>Push, pop, shift, and unshift elements from an Array.</source>
          <target state="translated">配列の要素をプッシュ、ポップ、シフト、アンシフトします。</target>
        </trans-unit>
        <trans-unit id="1ec7041a18430566cd7bb1e7d19b5678584ab214" translate="yes" xml:space="preserve">
          <source>Questions?</source>
          <target state="translated">Questions?</target>
        </trans-unit>
        <trans-unit id="417820f1bade4496f4525989f3a39679097e4256" translate="yes" xml:space="preserve">
          <source>Quick-start guide</source>
          <target state="translated">クイックスタートガイド</target>
        </trans-unit>
        <trans-unit id="e832f5c7e96b274627824d8bff3aeeeaccfef01b" translate="yes" xml:space="preserve">
          <source>RVM is a popular Ruby Version Manager (like rbenv, chruby, etc). This directive tells Travis the Ruby version to use when running your test script.</source>
          <target state="translated">RVM は一般的な Ruby バージョンマネージャ (rbenv,chruby など)です。このディレクティブは、テストスクリプトを実行する際に使用する Ruby のバージョンを Travis に伝えます。</target>
        </trans-unit>
        <trans-unit id="3d020480fdb4c067a8ed1f783c83aa65284c204a" translate="yes" xml:space="preserve">
          <source>Rack-Jekyll</source>
          <target state="translated">Rack-Jekyll</target>
        </trans-unit>
        <trans-unit id="ccb3b7cf53d9645b5536605277c7731117c1a9e3" translate="yes" xml:space="preserve">
          <source>Rake</source>
          <target state="translated">Rake</target>
        </trans-unit>
        <trans-unit id="2d9be644c6f66a11135d7c8cbbb137cee962d2b7" translate="yes" xml:space="preserve">
          <source>Rather than passing individual flags via the command line, you can now pass an entire custom Jekyll config file. This helps to distinguish between environments, or lets you programmatically override user-specified defaults. Simply add the &lt;code&gt;--config&lt;/code&gt; flag to the &lt;code&gt;jekyll&lt;/code&gt; command, followed by the path to one or more config files (comma-delimited, no spaces).</source>
          <target state="translated">コマンドラインから個々のフラグを渡す代わりに、カスタムJekyll構成ファイル全体を渡すことができるようになりました。これにより、環境を区別したり、プログラムでユーザー指定のデフォルトをオーバーライドしたりできます。単に &lt;code&gt;--config&lt;/code&gt; フラグを &lt;code&gt;jekyll&lt;/code&gt; コマンドに追加し、その後に1つ以上の構成ファイルへのパス（コンマ区切り、スペースなし）を続けます。</target>
        </trans-unit>
        <trans-unit id="169488557f80f487b9a8d96107d18ddd44b3dd38" translate="yes" xml:space="preserve">
          <source>Rather than typing &lt;code&gt;permalink: /:categories/:year/:month/:day/:title/&lt;/code&gt;, you can just type &lt;code&gt;permalink: pretty&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;permalink: /:categories/:year/:month/:day/:title/&lt;/code&gt; と入力する代わりに、 &lt;code&gt;permalink: pretty&lt;/code&gt; 入力するだけです。</target>
        </trans-unit>
        <trans-unit id="439540dc1f179dff59fb01db013c30acaaa99734" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;http://andycroll.com/ruby/serving-a-jekyll-blog-using-heroku/&quot;&gt;this post&lt;/a&gt; on how to deploy to Heroku using Rack-Jekyll.</source>
          <target state="translated">読む&lt;a href=&quot;http://andycroll.com/ruby/serving-a-jekyll-blog-using-heroku/&quot;&gt;このポスト&lt;/a&gt;ラックジキルを使用してHerokuのにデプロイする方法についてを。</target>
        </trans-unit>
        <trans-unit id="6f2d22f1682d1726666dee549b405108d4fc37c5" translate="yes" xml:space="preserve">
          <source>Read this &lt;a href=&quot;https://www.netlify.com/blog/2015/10/28/a-step-by-step-guide-jekyll-3.0-on-netlify/&quot;&gt;Jekyll step-by-step guide&lt;/a&gt; to setup your Jekyll site on Netlify.</source>
          <target state="translated">この&lt;a href=&quot;https://www.netlify.com/blog/2015/10/28/a-step-by-step-guide-jekyll-3.0-on-netlify/&quot;&gt;Jekyllのステップバイステップガイド&lt;/a&gt;を読んで、NetlifyでJekyllサイトをセットアップしてください。</target>
        </trans-unit>
        <trans-unit id="5f631ff0302c32d82d8b231bc317b0beda2e0d40" translate="yes" xml:space="preserve">
          <source>Redcarpet</source>
          <target state="translated">Redcarpet</target>
        </trans-unit>
        <trans-unit id="8ea1404223d116c60a3e42d509dd79effe38a523" translate="yes" xml:space="preserve">
          <source>Redcarpet can be configured by providing an &lt;code&gt;extensions&lt;/code&gt; sub-setting, whose value should be an array of strings. Each string should be the name of one of the &lt;code&gt;Redcarpet::Markdown&lt;/code&gt; class&amp;rsquo;s extensions; if present in the array, it will set the corresponding extension to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Redcarpetは、値が文字列の配列である必要がある &lt;code&gt;extensions&lt;/code&gt; サブセットを提供することによって構成できます。各文字列は、 &lt;code&gt;Redcarpet::Markdown&lt;/code&gt; クラスの拡張の1つの名前である必要があります。配列に存在する場合、対応する拡張子を &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="44a0d505e17f14f7f69264e5a53841a1965456a3" translate="yes" xml:space="preserve">
          <source>Refer to your selected theme&amp;rsquo;s documentation and source repository for more information on what files you can override.</source>
          <target state="translated">オーバーライドできるファイルの詳細については、選択したテーマのドキュメントとソースリポジトリを参照してください。</target>
        </trans-unit>
        <trans-unit id="9e3f0522a636e26135d7d509614f66498b8abc2a" translate="yes" xml:space="preserve">
          <source>Register your site with &lt;a href=&quot;https://txtpen.com&quot;&gt;txtpen&lt;/a&gt;. Then append</source>
          <target state="translated">サイトを&lt;a href=&quot;https://txtpen.com&quot;&gt;txtpenに&lt;/a&gt;登録します。次に追加</target>
        </trans-unit>
        <trans-unit id="98d06420fb393fe8733fe61191716a188d2ba8e5" translate="yes" xml:space="preserve">
          <source>Relative Permalink support removed</source>
          <target state="translated">相対的なパーマリンクのサポートが削除されました</target>
        </trans-unit>
        <trans-unit id="a3f0dac9020b7b6694ab2e8c67f500ae69fdc14c" translate="yes" xml:space="preserve">
          <source>Remember your YAML Front Matter</source>
          <target state="translated">YAMLフロントマターを覚えておく</target>
        </trans-unit>
        <trans-unit id="15ee34a232891ee351147169143c5723051c59d3" translate="yes" xml:space="preserve">
          <source>Render posts that were marked as unpublished.</source>
          <target state="translated">未発表とマークされた投稿をレンダリングします。</target>
        </trans-unit>
        <trans-unit id="7e42b24dd20317b1267d14a20e3861bf6fba8de4" translate="yes" xml:space="preserve">
          <source>Render the paginated Posts</source>
          <target state="translated">ページ分割された投稿をレンダリングする</target>
        </trans-unit>
        <trans-unit id="2c506d6e4657df828ea482c052d68020f0442ebe" translate="yes" xml:space="preserve">
          <source>Reopen a command prompt and install Jekyll: &lt;code&gt;gem install jekyll&lt;/code&gt;</source>
          <target state="translated">コマンドプロンプトを再度 &lt;code&gt;gem install jekyll&lt;/code&gt; Jekyllをインストールします。geminstall jekyll</target>
        </trans-unit>
        <trans-unit id="57758714a115c28dae7e9b64388dc90b41a10abf" translate="yes" xml:space="preserve">
          <source>Replace any occurrence of whitespace with a single space.</source>
          <target state="translated">空白が発生した場合は、すべて単一のスペースに置き換えます。</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Requirements</target>
        </trans-unit>
        <trans-unit id="87df60de337fb58864343e396696d74611e0d403" translate="yes" xml:space="preserve">
          <source>Resources</source>
          <target state="translated">Resources</target>
        </trans-unit>
        <trans-unit id="923c13dfdb01db0d8d459f4097e5f218f81132eb" translate="yes" xml:space="preserve">
          <source>Resulting Permalink URL</source>
          <target state="translated">結果のパーマリンクURL</target>
        </trans-unit>
        <trans-unit id="42dd9b3596a741398732c30d4508cf29afde284f" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;JEKYLL_ENV=production bundle exec jekyll build&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JEKYLL_ENV=production bundle exec jekyll build&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="cdf9c1263cd6f0e3fa45f26660812dfd4d4cf1a0" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;bundle show&lt;/code&gt; followed by the name of the theme&amp;rsquo;s gem, e.g., &lt;code&gt;bundle show minima&lt;/code&gt; for Jekyll&amp;rsquo;s default theme.</source>
          <target state="translated">&lt;code&gt;bundle show&lt;/code&gt; を実行し、その後にテーマの宝石の名前を続けます。たとえば、Jekyllのデフォルトテーマの &lt;code&gt;bundle show minima&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="beff04c64d0f6b81d8fe8635f88e6d58d26d3b7e" translate="yes" xml:space="preserve">
          <source>Running Jekyll on Windows</source>
          <target state="translated">WindowsでJekyllを実行する</target>
        </trans-unit>
        <trans-unit id="fd6893c5df8321462d97d7ab4d7ffb44371f653f" translate="yes" xml:space="preserve">
          <source>SSL Private Key.</source>
          <target state="translated">SSLの秘密鍵です。</target>
        </trans-unit>
        <trans-unit id="69593d32c8bd589fe3bdfdfcc8f82e007508a15d" translate="yes" xml:space="preserve">
          <source>SSL Public certificate.</source>
          <target state="translated">SSL公開証明書。</target>
        </trans-unit>
        <trans-unit id="403818fcda992599fe7e358f0111951e6b7990f3" translate="yes" xml:space="preserve">
          <source>Sass/SCSS</source>
          <target state="translated">Sass/SCSS</target>
        </trans-unit>
        <trans-unit id="03e3e4e01b772344104f35b3b89ee3d97d138085" translate="yes" xml:space="preserve">
          <source>Save the commands you want to run and succeed in a file: &lt;code&gt;./script/cibuild&lt;/code&gt;</source>
          <target state="translated">実行して成功させるコマンドをファイルに保存します： &lt;code&gt;./script/cibuild&lt;/code&gt; / cibuild</target>
        </trans-unit>
        <trans-unit id="b3bf564e18f6ba1be5df476d386f16a478d2fdaf" translate="yes" xml:space="preserve">
          <source>Second of the minute from the post's &lt;code&gt;date&lt;/code&gt; front matter. (00..59)</source>
          <target state="translated">投稿の &lt;code&gt;date&lt;/code&gt; 前件からの分の秒。（00..59）</target>
        </trans-unit>
        <trans-unit id="fc6eef192c265c5fbe372bcc71e29649ae2d0162" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#extensionless-permalinks&quot;&gt;Extensionless permalinks with no trailing slashes&lt;/a&gt; for details.</source>
          <target state="translated">詳細について&lt;a href=&quot;#extensionless-permalinks&quot;&gt;は、末尾にスラッシュがない拡張子のないパーマリンクを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d0ed49f1b1bfb0227d18ee3709c5bada3c413cb2" translate="yes" xml:space="preserve">
          <source>See the Markdown section on the &lt;a href=&quot;../configuration/index#markdown-options&quot;&gt;configuration page&lt;/a&gt; for instructions on how to use and configure alternative Markdown processors, as well as how to create &lt;a href=&quot;../configuration/index#custom-markdown-processors&quot;&gt;custom processors&lt;/a&gt;.</source>
          <target state="translated">代替Markdownプロセッサを使用および構成する方法、および&lt;a href=&quot;../configuration/index#custom-markdown-processors&quot;&gt;カスタムプロセッサ&lt;/a&gt;を作成する方法については、&lt;a href=&quot;../configuration/index#markdown-options&quot;&gt;構成ページ&lt;/a&gt;のMarkdownセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="407b2742f09d00df370600915619012740c16c28" translate="yes" xml:space="preserve">
          <source>See the bottom of the page for a &lt;a href=&quot;#available-plugins&quot;&gt;list of available plugins&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#available-plugins&quot;&gt;使用可能なプラグインのリスト&lt;/a&gt;については、ページの下部をご覧ください</target>
        </trans-unit>
        <trans-unit id="5fb9e19dcae18c354f279dfca194fb7e744d9c04" translate="yes" xml:space="preserve">
          <source>Select all the objects in an array where the expression is true. Jekyll v3.2.0 &amp;amp; later.</source>
          <target state="translated">式が真である配列内のすべてのオブジェクトを選択します。Jekyll v3.2.0以降。</target>
        </trans-unit>
        <trans-unit id="e891926616342130195a7bfdb38be815b06f2efc" translate="yes" xml:space="preserve">
          <source>Select all the objects in an array where the key has the given value.</source>
          <target state="translated">キーが指定された値を持つ配列内のすべてのオブジェクトを選択します。</target>
        </trans-unit>
        <trans-unit id="3d815a597f6d668bf34e59ed4ebae5e997991203" translate="yes" xml:space="preserve">
          <source>Self-managed web server</source>
          <target state="translated">自社運営のWebサーバー</target>
        </trans-unit>
        <trans-unit id="a55557d1c98bb9f9498deb01f8e31c77291e6c39" translate="yes" xml:space="preserve">
          <source>Serve Command Options</source>
          <target state="translated">サーブコマンドオプション</target>
        </trans-unit>
        <trans-unit id="151827014ed21e518e47c1dd2a1e084435edc564" translate="yes" xml:space="preserve">
          <source>Serve the website from the given base URL</source>
          <target state="translated">指定されたベースURLからウェブサイトを配信する</target>
        </trans-unit>
        <trans-unit id="ddd9fcb8b5f6b9210f6b261a822acb9326466b09" translate="yes" xml:space="preserve">
          <source>Set defaults for &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt; variables.</source>
          <target state="translated">&lt;a href=&quot;../frontmatter/index&quot;&gt;YAMLフロントマター&lt;/a&gt;変数のデフォルトを設定します。</target>
        </trans-unit>
        <trans-unit id="5d6059aac8e4da20dbf9808420e1330fbe575e19" translate="yes" xml:space="preserve">
          <source>Set the encoding of files by name (only available for Ruby 1.9 or later). The default value is &lt;code&gt;utf-8&lt;/code&gt; starting in 2.0.0, and &lt;code&gt;nil&lt;/code&gt; before 2.0.0, which will yield the Ruby default of &lt;code&gt;ASCII-8BIT&lt;/code&gt;. Available encodings can be shown by the command &lt;code&gt;ruby -e 'puts Encoding::list.join(&quot;\n&quot;)'&lt;/code&gt;.</source>
          <target state="translated">ファイルのエンコーディングを名前で設定します（Ruby 1.9以降でのみ使用可能）。デフォルト値は、2.0.0から始まる &lt;code&gt;utf-8&lt;/code&gt; &lt;code&gt;nil&lt;/code&gt; より前のnilであり、Rubyのデフォルトである &lt;code&gt;ASCII-8BIT&lt;/code&gt; になります。使用可能なエンコーディングは、コマンド &lt;code&gt;ruby -e 'puts Encoding::list.join(&quot;\n&quot;)'&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="ad2e00718f76e97a0b0faf2b6b523e7f331b76b2" translate="yes" xml:space="preserve">
          <source>Set the time zone for site generation. This sets the &lt;code&gt;TZ&lt;/code&gt; environment variable, which Ruby uses to handle time and date creation and manipulation. Any entry from the &lt;a href=&quot;https://en.wikipedia.org/wiki/Tz_database&quot;&gt;IANA Time Zone Database&lt;/a&gt; is valid, e.g. &lt;code&gt;America/New_York&lt;/code&gt;. A list of all available values can be found &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt; here&lt;/a&gt;. When serving on a local machine, the default time zone is set by your operating system. But when served on a remote host/server, the default time zone depends on the server's setting or location.</source>
          <target state="translated">サイト生成のタイムゾーンを設定します。これにより、 &lt;code&gt;TZ&lt;/code&gt; 環境変数が設定されます。これは、Rubyが日時の作成と操作を処理するために使用します。&lt;a href=&quot;https://en.wikipedia.org/wiki/Tz_database&quot;&gt;IANAタイムゾーンデータベース&lt;/a&gt;からのエントリはすべて有効です（例： &lt;code&gt;America/New_York&lt;/code&gt; )。利用可能なすべての値のリストは、&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;ここにあります&lt;/a&gt;。ローカルマシンでサービスを提供する場合、デフォルトのタイムゾーンはオペレーティングシステムによって設定されます。ただし、リモートホスト/サーバーで提供される場合、デフォルトのタイムゾーンはサーバーの設定または場所によって異なります。</target>
        </trans-unit>
        <trans-unit id="397402a9c35e59ca7d02dc0b5c6391349ef8fd3e" translate="yes" xml:space="preserve">
          <source>Set to false if you don&amp;rsquo;t want a specific post to show up when the site is generated.</source>
          <target state="translated">サイトの生成時に特定の投稿を表示したくない場合は、falseに設定します。</target>
        </trans-unit>
        <trans-unit id="aabe9cc67d26e20183256e1ecf388980a51be9a2" translate="yes" xml:space="preserve">
          <source>Set your production URL in &lt;code&gt;_config.yml&lt;/code&gt; e.g. &lt;code&gt;url: https://example.com&lt;/code&gt;.</source>
          <target state="translated">プロダクションURLを &lt;code&gt;_config.yml&lt;/code&gt; に設定します（例： &lt;code&gt;url: https://example.com&lt;/code&gt; //example.com）。</target>
        </trans-unit>
        <trans-unit id="fb449f71834cd30ec14d00c9d50ba85c232186d3" translate="yes" xml:space="preserve">
          <source>Setting</source>
          <target state="translated">Setting</target>
        </trans-unit>
        <trans-unit id="2c7a32ce81e15370a8e65448d08bcb2735e4aae2" translate="yes" xml:space="preserve">
          <source>Setting a permalink in the front matter of your blog page will cause pagination to break. Just omit the permalink.</source>
          <target state="translated">ブログページのフロントマターにパーマリンクを設定すると、ページネーションが崩れてしまいます。パーマリンクを省略するだけです。</target>
        </trans-unit>
        <trans-unit id="992e693339c0d4ef08f55b83204c30110f4168dc" translate="yes" xml:space="preserve">
          <source>Setting permalink styles in your configuration file applies the setting globally in your project. You configure permalinks in your &lt;code&gt;_config.yml&lt;/code&gt; file like this:</source>
          <target state="translated">構成ファイルでパーマリンクスタイルを設定すると、その設定がプロジェクトにグローバルに適用されます。次のように、 &lt;code&gt;_config.yml&lt;/code&gt; ファイルでパーマリンクを設定します。</target>
        </trans-unit>
        <trans-unit id="18a051fab47eef17a471bd5c9de81afafe2c1156" translate="yes" xml:space="preserve">
          <source>Setting the permalink in your post, page, or collection&amp;rsquo;s front matter overrides any global settings. Here&amp;rsquo;s an example:</source>
          <target state="translated">投稿、ページ、またはコレクションの前付けにパーマリンクを設定すると、すべてのグローバル設定が上書きされます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="b428a34c4ccaf643d1aeff837a4dce1c96cf704b" translate="yes" xml:space="preserve">
          <source>Setting up Kickster is very easy, just install the gem and you are good to go. More documentation can here found &lt;a href=&quot;https://github.com/nielsenramon/kickster#kickster&quot;&gt;here&lt;/a&gt;. If you do not want to use the gem or start a new project you can just copy paste the deployment scripts for &lt;a href=&quot;https://github.com/nielsenramon/kickster/tree/master/snippets/travis&quot;&gt;Travis CI&lt;/a&gt; or &lt;a href=&quot;https://github.com/nielsenramon/kickster#automated-deployment-with-circle-ci&quot;&gt;Circle CI&lt;/a&gt;.</source>
          <target state="translated">Kicksterの設定は非常に簡単です。gemをインストールするだけで問題ありません。より多くのドキュメントはここで見つけることができます&lt;a href=&quot;https://github.com/nielsenramon/kickster#kickster&quot;&gt;ここで&lt;/a&gt;。gemを使用したくない場合、または新しいプロジェクトを開始したくない場合は、&lt;a href=&quot;https://github.com/nielsenramon/kickster/tree/master/snippets/travis&quot;&gt;Travis CI&lt;/a&gt;または&lt;a href=&quot;https://github.com/nielsenramon/kickster#automated-deployment-with-circle-ci&quot;&gt;Circle CIの&lt;/a&gt;デプロイメントスクリプトをコピーして貼り付けることができます。</target>
        </trans-unit>
        <trans-unit id="e94fb23c5bf40b730ab355584794c83b05cb43c8" translate="yes" xml:space="preserve">
          <source>Silence the normal output from Jekyll during a build</source>
          <target state="translated">ビルド中に Jekyll からの通常の出力を無音にします。</target>
        </trans-unit>
        <trans-unit id="28aeb1618225d767e4382b29ab4dde547b848b72" translate="yes" xml:space="preserve">
          <source>Similar to categories, one or multiple tags can be added to a post. Also like categories, tags can be specified as a &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;YAML list&lt;/a&gt; or a space-separated string.</source>
          <target state="translated">カテゴリと同様に、1つまたは複数のタグを投稿に追加できます。また、カテゴリと同様に、タグは&lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;YAMLリスト&lt;/a&gt;またはスペース区切りの文字列として指定できます。</target>
        </trans-unit>
        <trans-unit id="14d825cf30342e6bc78ecc4d3eef9e9271ed41f8" translate="yes" xml:space="preserve">
          <source>Simple Form</source>
          <target state="translated">シンプルなフォーム</target>
        </trans-unit>
        <trans-unit id="3e1cdd67641592c294ce605e4b3f32a11b2d0d6e" translate="yes" xml:space="preserve">
          <source>Simply adding &lt;code&gt;vendor/bundle&lt;/code&gt; to the &lt;code&gt;exclude:&lt;/code&gt; list will solve this problem but will lead to having other sub-directories under &lt;code&gt;/vendor/&lt;/code&gt; (and also &lt;code&gt;/node_modules/&lt;/code&gt;, if present) be processed to the destination folder &lt;code&gt;_site&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;exclude:&lt;/code&gt; リストに &lt;code&gt;vendor/bundle&lt;/code&gt; を追加するだけでこの問題は解決しますが、 &lt;code&gt;/vendor/&lt;/code&gt; （および存在する場合は &lt;code&gt;/node_modules/&lt;/code&gt; ）の下の他のサブディレクトリが宛先フォルダー &lt;code&gt;_site&lt;/code&gt; に処理されることになります。</target>
        </trans-unit>
        <trans-unit id="e94c1b03ed8322a8a017fbe30f42fca0a9fcc07b" translate="yes" xml:space="preserve">
          <source>Since Windows doesn&amp;rsquo;t have a native source of zoneinfo data, the Ruby Interpreter would not understand IANA Timezones and hence using them had the &lt;code&gt;TZ&lt;/code&gt; environment variable default to UTC/GMT 00:00. Though Windows users could alternatively define their blog&amp;rsquo;s timezone by setting the key to use POSIX format of defining timezones, it wasn&amp;rsquo;t as user-friendly when it came to having the clock altered to changing DST-rules.</source>
          <target state="translated">Windowsにはzoneinfoデータのネイティブソースがないため、RubyインタープリターはIANAタイムゾーンを理解しないため、それらを使用すると、 &lt;code&gt;TZ&lt;/code&gt; 環境変数のデフォルトはUTC / GMT 00:00になります。Windowsユーザーは、タイムゾーンを定義するPOSIX形式を使用するようにキーを設定することで、ブログのタイムゾーンを定義することもできますが、DSTルールの変更に合わせてクロックを変更することは、ユーザーフレンドリーではありませんでした。</target>
        </trans-unit>
        <trans-unit id="9d35bf67ea68dbdbbea589d77108d31fe53bc64f" translate="yes" xml:space="preserve">
          <source>Since v1.0.0, Jekyll has had automatically-generated post excerpts. Since v1.1.0, Jekyll also passes these excerpts through Liquid, which can cause strange errors where references don&amp;rsquo;t exist or a tag hasn&amp;rsquo;t been closed. If you run into these errors, try setting &lt;code&gt;excerpt_separator: &quot;&quot;&lt;/code&gt; in your &lt;code&gt;_config.yml&lt;/code&gt;, or set it to some nonsense string.</source>
          <target state="translated">v1.0.0以降、ジキルは自動的に生成された投稿の抜粋を持っています。v1.1.0以降、Jekyllはこれらの抜粋もLiquidを介して渡すため、参照が存在しない場合やタグが閉じられていない場合に奇妙なエラーが発生する可能性があります。あなたはこれらのエラーに遭遇した場合は、設定してみてください &lt;code&gt;excerpt_separator: &quot;&quot;&lt;/code&gt; あなたに &lt;code&gt;_config.yml&lt;/code&gt; 、またはいくつかのナンセンスの文字列を設定します。</target>
        </trans-unit>
        <trans-unit id="8dd9deeb3171ac9f02e0bf5dc4f51cefd4afffb4" translate="yes" xml:space="preserve">
          <source>Since v3.2 Jekyll requires Ruby version &amp;gt;= 2.1</source>
          <target state="translated">v3.2以降、JekyllにはRubyバージョン&amp;gt; = 2.1が必要です</target>
        </trans-unit>
        <trans-unit id="06f588e3316d35a20373813bbf802b855ffd9ff8" translate="yes" xml:space="preserve">
          <source>Site Variables</source>
          <target state="translated">サイト変数</target>
        </trans-unit>
        <trans-unit id="d59f859ae693e44288b2fd0d29b0027af35a8e59" translate="yes" xml:space="preserve">
          <source>Sites built using Jekyll can be deployed in a large number of ways due to the static nature of the generated output. A few of the most common deployment techniques are described below.</source>
          <target state="translated">Jekyllを使って構築されたサイトは、生成される出力の静的な性質のため、多くの方法で展開することができます。最も一般的なデプロイ方法のいくつかを以下に説明します。</target>
        </trans-unit>
        <trans-unit id="25ab26fb20316eb0822bfb7c45427c236f62eb29" translate="yes" xml:space="preserve">
          <source>Sitewide information + configuration settings from &lt;code&gt;_config.yml&lt;/code&gt;. See below for details.</source>
          <target state="translated">サイト全体の情報+構成設定 &lt;code&gt;_config.yml&lt;/code&gt; 。詳細については、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="5dee56420e4fd48148e2139c320ed1f3befc909b" translate="yes" xml:space="preserve">
          <source>Skips the initial site build which occurs before the server is started.</source>
          <target state="translated">サーバーが起動する前に発生する初期サイト構築をスキップします。</target>
        </trans-unit>
        <trans-unit id="79d09d3aa3ef2b829995125702ca303ae5d1fc89" translate="yes" xml:space="preserve">
          <source>Slugified title from the document&amp;rsquo;s filename (any character except numbers and letters is replaced as hyphen). May be overridden via the document&amp;rsquo;s &lt;code&gt;slug&lt;/code&gt; YAML front matter.</source>
          <target state="translated">ドキュメントのファイル名のスラッグ化されたタイトル（数字と文字以外の文字はハイフンに置き換えられます）。ドキュメントの &lt;code&gt;slug&lt;/code&gt; YAML前付けを介してオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="08eb389c8842b3829ba25ab6f0a7e93b06883e03" translate="yes" xml:space="preserve">
          <source>So what is Jekyll, exactly?</source>
          <target state="translated">では、ジキルとは一体何なのか?</target>
        </trans-unit>
        <trans-unit id="4172abb34224416683b49d016ababcfd7a9c09f7" translate="yes" xml:space="preserve">
          <source>Some options can be specified via command-line switches. Check out the &lt;code&gt;html-proofer&lt;/code&gt; README for more information about these switches, or run &lt;code&gt;htmlproofer --help&lt;/code&gt; locally.</source>
          <target state="translated">一部のオプションは、コマンドラインスイッチで指定できます。これらのスイッチの詳細については、 &lt;code&gt;html-proofer&lt;/code&gt; &lt;code&gt;htmlproofer --help&lt;/code&gt; READMEを確認するか、ローカルでhtmlproofer --helpを実行してください。</target>
        </trans-unit>
        <trans-unit id="c35f843892fcc99c411038c0eb0d44c906167b1a" translate="yes" xml:space="preserve">
          <source>Some pieces of this website are for future versions of Jekyll that are not yet released.</source>
          <target state="translated">このサイトの一部は、まだリリースされていないJekyllの将来のバージョンのためのものです。</target>
        </trans-unit>
        <trans-unit id="3a6cd910baa7cd095835fa8f94b70ab93e3fbd2d" translate="yes" xml:space="preserve">
          <source>Sometimes it&amp;rsquo;s nice to preview your Jekyll site before you push your &lt;code&gt;gh-pages&lt;/code&gt; branch to GitHub. However, the subdirectory-like URL structure GitHub uses for Project Pages complicates the proper resolution of URLs. In order to assure your site builds properly, use the handy &lt;a href=&quot;../templates/index#filters&quot;&gt;URL filters&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;gh-pages&lt;/code&gt; ブランチをGitHubにプッシュする前にJekyllサイトをプレビューするとよい場合があります。ただし、GitHubがプロジェクトページに使用するサブディレクトリのようなURL構造は、URLの適切な解決を複雑にします。サイトが適切に構築されるようにするには、便利な&lt;a href=&quot;../templates/index#filters&quot;&gt;URLフィルターを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="e1a35dfc74cd04625df2be72ead1705c96cb4340" translate="yes" xml:space="preserve">
          <source>Sort an array. Optional arguments for hashes: 1. property name 2. nils order (&lt;em&gt;first&lt;/em&gt; or &lt;em&gt;last&lt;/em&gt;).</source>
          <target state="translated">配列をソートします。ハッシュのオプションの引数：1.プロパティ名2. nils順序（&lt;em&gt;最初&lt;/em&gt;または&lt;em&gt;最後&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="721ef5802b7fd0123251918306122ba391be88b2" translate="yes" xml:space="preserve">
          <source>Source files must be in the root directory</source>
          <target state="translated">ソースファイルはルートディレクトリになければなりません。</target>
        </trans-unit>
        <trans-unit id="ebf232555e2d95e42ef7c0e153994a358d649b31" translate="yes" xml:space="preserve">
          <source>Specify config files instead of using &lt;code&gt;_config.yml&lt;/code&gt; automatically. Settings in later files override settings in earlier files.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; を自動的に使用する代わりに、設定ファイルを指定します。後のファイルの設定は、前のファイルの設定を上書きします。</target>
        </trans-unit>
        <trans-unit id="543a19444848c9302e9291afe8e96f0019592a64" translate="yes" xml:space="preserve">
          <source>Specifying a Jekyll environment at build time</source>
          <target state="translated">ビルド時のジキル環境の指定</target>
        </trans-unit>
        <trans-unit id="1d23e1629ece47d647a39c0d87fdcebaf66f9cee" translate="yes" xml:space="preserve">
          <source>Specifying an environment value allows you to make certain content available only within specific environments.</source>
          <target state="translated">環境値を指定すると、特定の環境内でのみ特定のコンテンツを利用できるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="f5e265cb8bebf47d8d0462cb2fe90e34d28e8d53" translate="yes" xml:space="preserve">
          <source>Specifying permalinks through the YAML Front Matter</source>
          <target state="translated">YAMLフロントマターでパーマリンクを指定する</target>
        </trans-unit>
        <trans-unit id="3d7885c513450d548fab07ffa79ca9b64b10eea0" translate="yes" xml:space="preserve">
          <source>Starting &lt;strong&gt;Jekyll 3.2&lt;/strong&gt;, a new Jekyll project bootstrapped with &lt;code&gt;jekyll new&lt;/code&gt; uses &lt;a href=&quot;../themes/index&quot;&gt;gem-based themes&lt;/a&gt; to define the look of the site. This results in a lighter default directory structure : &lt;code&gt;_layouts&lt;/code&gt;, &lt;code&gt;_includes&lt;/code&gt; and &lt;code&gt;_sass&lt;/code&gt; are stored in the theme-gem, by default.</source>
          <target state="translated">開始&lt;strong&gt;ジキル3.2を&lt;/strong&gt;、新しいジキルプロジェクトはとブートストラップ &lt;code&gt;jekyll new&lt;/code&gt; 用途の&lt;a href=&quot;../themes/index&quot;&gt;宝石ベースのテーマ&lt;/a&gt;サイトの外観を定義します。これにより、デフォルトのディレクトリ構造が軽量化されます。デフォルトでは、 &lt;code&gt;_layouts&lt;/code&gt; 、 &lt;code&gt;_includes&lt;/code&gt; 、および &lt;code&gt;_sass&lt;/code&gt; はテーマジェムに格納されます。</target>
        </trans-unit>
        <trans-unit id="8363d11750d7f59eccf988ecb4d15d10a1f9a95e" translate="yes" xml:space="preserve">
          <source>Starting from version 3.5.0, using &lt;code&gt;none&lt;/code&gt; in a post/document will produce a file without using a layout file regardless of frontmatter defaults. Using &lt;code&gt;none&lt;/code&gt; in a page, however, will cause Jekyll to attempt to use a layout named &quot;none&quot;.</source>
          <target state="translated">バージョン3.5.0以降、投稿/ドキュメントで &lt;code&gt;none&lt;/code&gt; を使用すると、frontmatterのデフォルトに関係なく、レイアウトファイルを使用せずにファイルが生成されます。ただし、ページで &lt;code&gt;none&lt;/code&gt; を使用すると、Jekyllは「none」という名前のレイアウトを使用しようとします。</target>
        </trans-unit>
        <trans-unit id="689ffd2b6c659713306bc1b82c35e8c3c2b3fd11" translate="yes" xml:space="preserve">
          <source>Starting with Jekyll v3.0, relative permalinks functionality will be removed and thus unavailable for use.</source>
          <target state="translated">Jekyll v3.0からは、相対パーマリンク機能が削除され、使用できなくなります。</target>
        </trans-unit>
        <trans-unit id="c2ad94ea6253b4b6a6065e3716da384186683b3c" translate="yes" xml:space="preserve">
          <source>Static Comments with Jekyll &amp;amp; Staticman</source>
          <target state="translated">Jekyll＆Staticmanによる静的コメント</target>
        </trans-unit>
        <trans-unit id="a1c031153c642e8130ab037b056c28c991496c45" translate="yes" xml:space="preserve">
          <source>Static Files</source>
          <target state="translated">静的ファイル</target>
        </trans-unit>
        <trans-unit id="2c55f6a69fe795f38091b036344a6ecd7d37d2f7" translate="yes" xml:space="preserve">
          <source>Static Publisher</source>
          <target state="translated">静的な発行者</target>
        </trans-unit>
        <trans-unit id="f41c29383080e690250ef667c06c5fd9bfa50de3" translate="yes" xml:space="preserve">
          <source>Step 1: Install rrsync to your home folder (server-side)</source>
          <target state="translated">ステップ1:rrsyncをホームフォルダ(サーバー側)にインストールします。</target>
        </trans-unit>
        <trans-unit id="acb1f7279f38bf9b0a45bc0f35a26a88d02097fb" translate="yes" xml:space="preserve">
          <source>Step 1: Tell Jekyll to read in your collection</source>
          <target state="translated">ステップ1:ジキルにコレクションで読むように伝える</target>
        </trans-unit>
        <trans-unit id="3ae76cb71c530e99823dbc2db566a6ad925baa9b" translate="yes" xml:space="preserve">
          <source>Step 2: Add your content</source>
          <target state="translated">ステップ2:コンテンツを追加する</target>
        </trans-unit>
        <trans-unit id="983bcdbf9f3d414aa3345d5eeabfd641e4c7ae61" translate="yes" xml:space="preserve">
          <source>Step 2: Set up certificate-based SSH access (server side)</source>
          <target state="translated">ステップ2:証明書ベースのSSHアクセス(サーバ側)を設定する</target>
        </trans-unit>
        <trans-unit id="64c59dc288ce9e8f1c6fe120ae7d9d3c9551f394" translate="yes" xml:space="preserve">
          <source>Step 3: Optionally render your collection&amp;rsquo;s documents into independent files</source>
          <target state="translated">ステップ3：オプションで、コレクションのドキュメントを独立したファイルにレンダリングする</target>
        </trans-unit>
        <trans-unit id="ee22489d18965248c7a1345a3434a08c9adadf6b" translate="yes" xml:space="preserve">
          <source>Step 3: Rsync (client-side)</source>
          <target state="translated">ステップ3:Rsync(クライアント側</target>
        </trans-unit>
        <trans-unit id="7d7f7542c2ddb5278d71a339c55fed6a950021e9" translate="yes" xml:space="preserve">
          <source>Step 4 (Optional): Exclude the transfer script from being copied to the output folder.</source>
          <target state="translated">ステップ4(オプション)。転送スクリプトが出力フォルダにコピーされるのを除外します。</target>
        </trans-unit>
        <trans-unit id="7532628acb10d3f74335ed474f1b263c9667e5e0" translate="yes" xml:space="preserve">
          <source>Stores &lt;a href=&quot;../configuration/index&quot;&gt;configuration&lt;/a&gt; data. Many of these options can be specified from the command line executable but it&amp;rsquo;s easier to specify them here so you don&amp;rsquo;t have to remember them.</source>
          <target state="translated">&lt;a href=&quot;../configuration/index&quot;&gt;構成&lt;/a&gt;データを保管します。これらのオプションの多くはコマンドラインの実行可能ファイルから指定できますが、ここで指定する方が簡単なので、覚えておく必要はありません。</target>
        </trans-unit>
        <trans-unit id="688931069f0df1b7dcf0babe5808ec7762322394" translate="yes" xml:space="preserve">
          <source>Stylesheets</source>
          <target state="translated">Stylesheets</target>
        </trans-unit>
        <trans-unit id="32e9c03f491a3d6219d0af41a20f44ab2a1708e6" translate="yes" xml:space="preserve">
          <source>Stylesheets for syntax highlighting</source>
          <target state="translated">構文強調のためのスタイルシート</target>
        </trans-unit>
        <trans-unit id="c17754d5a1317dde8d1389c0d21b829385b637ac" translate="yes" xml:space="preserve">
          <source>Suppose the parameter you want to pass to the include is a variable rather than a string. For example, you might be using &lt;code&gt;{{ site.product_name }}&lt;/code&gt; to refer to every instance of your product rather than the actual hard-coded name. (In this case, your &lt;code&gt;_config.yml&lt;/code&gt; file would have a key called &lt;code&gt;product_name&lt;/code&gt; with a value of your product&amp;rsquo;s name.)</source>
          <target state="translated">インクルードに渡すパラメーターが、文字列ではなく変数であるとします。たとえば、 &lt;code&gt;{{ site.product_name }}&lt;/code&gt; を使用して、実際にハードコードされた名前ではなく、製品のすべてのインスタンスを参照する場合があります。（この場合、 &lt;code&gt;_config.yml&lt;/code&gt; ファイルには、製品名の値を持つ &lt;code&gt;product_name&lt;/code&gt; というキーがあります。）</target>
        </trans-unit>
        <trans-unit id="de0da891a584c423631fe15e6996173bc2e4ef95" translate="yes" xml:space="preserve">
          <source>Suppose you want to get rid of the gem-based theme and convert it to a regular theme, where all files are present in your Jekyll site directory, with nothing stored in the theme gem.</source>
          <target state="translated">gemベースのテーマを削除して、通常のテーマに変換したいとします。</target>
        </trans-unit>
        <trans-unit id="2a9948bd0352018869fcd226a91788c362048f0e" translate="yes" xml:space="preserve">
          <source>Suppose you want to list all your image assets as contained in &lt;code&gt;assets/img&lt;/code&gt;. You could use this for loop to look in the &lt;code&gt;static_files&lt;/code&gt; object and get all static files that have this front matter property:</source>
          <target state="translated">すべての画像アセットを &lt;code&gt;assets/img&lt;/code&gt; に含まれているものとして一覧表示するとします。このforループを使用して &lt;code&gt;static_files&lt;/code&gt; オブジェクトを調べ、この前付けプロパティを持つすべての静的ファイルを取得できます。</target>
        </trans-unit>
        <trans-unit id="49a5924de30537d0fd99ef0abd41a365ec703124" translate="yes" xml:space="preserve">
          <source>Syntax highlighter changed</source>
          <target state="translated">シンタックスハイライターが変更されました。</target>
        </trans-unit>
        <trans-unit id="848eed0fbd5429f556b2982dec3ea87136e33e44" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="translated">Tags</target>
        </trans-unit>
        <trans-unit id="e7c9bcdeb3826f2a1efe477c86c883dae3af6389" translate="yes" xml:space="preserve">
          <source>Template Variables</source>
          <target state="translated">テンプレート変数</target>
        </trans-unit>
        <trans-unit id="9d777943ea77791c8c797167aaf1ffeca5f05350" translate="yes" xml:space="preserve">
          <source>Template variables for permalinks</source>
          <target state="translated">パーマリンク用のテンプレート変数</target>
        </trans-unit>
        <trans-unit id="f25b700ed9f092123a43acb205a6869342cf9dd6" translate="yes" xml:space="preserve">
          <source>Templates</source>
          <target state="translated">Templates</target>
        </trans-unit>
        <trans-unit id="75e9de090e114025ad1428fb576025165b6a0358" translate="yes" xml:space="preserve">
          <source>That is: defaults are overridden by options specified in &lt;code&gt;_config.yml&lt;/code&gt;, and flags specified at the command-line will override all other settings specified elsewhere.</source>
          <target state="translated">つまり、デフォルトは &lt;code&gt;_config.yml&lt;/code&gt; で指定されたオプションによって上書きされ、コマンドラインで指定されたフラグは他の場所で指定された他のすべての設定を上書きします。</target>
        </trans-unit>
        <trans-unit id="1c7ae6e9344b75aa2a92435038dc2d5c06c27826" translate="yes" xml:space="preserve">
          <source>The (unrendered) content of the document. If no YAML Front Matter is provided, Jekyll will not generate the file in your collection. If YAML Front Matter is used, then this is all the contents of the file after the terminating `---` of the front matter.</source>
          <target state="translated">ドキュメントの(レンダーされていない)内容。YAMLフロントマターが提供されていない場合、Jekyllはコレクション内のファイルを生成しません。YAMLフロントマターが使用されている場合、これはフロントマターの終端の `---` の後のファイルのすべての内容です。</target>
        </trans-unit>
        <trans-unit id="03a2268eb0b29718f228699fbbe75966ada707f6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_core_module.html#try_files&quot;&gt;try_files&lt;/a&gt; directive allows you to specify a list of files to search for to process a request. The following configuration will instruct nginx to search for a file with an &lt;code&gt;.html&lt;/code&gt; extension if an exact match for the requested URI is not found.</source>
          <target state="translated">&lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_core_module.html#try_files&quot;&gt;try_filesの&lt;/a&gt;ディレクティブを使用すると、要求を処理するために検索するファイルのリストを指定することができます。次の構成は、要求されたURIと完全に一致するものが見つからない場合、 &lt;code&gt;.html&lt;/code&gt; 拡張子を持つファイルを検索するようにnginxに指示します。</target>
        </trans-unit>
        <trans-unit id="86718a9d1272d70d30b11f6c4bbf03f59f232c82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:title&lt;/code&gt; template variable will take the &lt;code&gt;slug&lt;/code&gt;&lt;a href=&quot;../frontmatter/index&quot;&gt;front matter&lt;/a&gt; variable value if any is present in the document; if none is defined then &lt;code&gt;:title&lt;/code&gt; will be equivalent to &lt;code&gt;:name&lt;/code&gt;, aka the slug generated from the filename.</source>
          <target state="translated">&lt;code&gt;:title&lt;/code&gt; テンプレート変数がかかります &lt;code&gt;slug&lt;/code&gt; &lt;a href=&quot;../frontmatter/index&quot;&gt;前付の&lt;/a&gt;いずれかが文書に存在する場合、変数の値を、何も定義されていない場合、 &lt;code&gt;:title&lt;/code&gt; は &lt;code&gt;:name&lt;/code&gt; 、つまりファイル名から生成されたスラッグと同等になります。</target>
        </trans-unit>
        <trans-unit id="9ea004d919e32ec2a322ac05fe4515ce8ba65e43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;Gemfile.lock&lt;/code&gt; files are used by Bundler to keep track of the required gems and gem versions you need to build your Jekyll site.</source>
          <target state="translated">&lt;code&gt;Gemfile&lt;/code&gt; と &lt;code&gt;Gemfile.lock&lt;/code&gt; ファイルは、あなたのジキルサイトを構築する必要がある必要宝石と宝石のバージョンを追跡するためにバンドラーによって使用されています。</target>
        </trans-unit>
        <trans-unit id="c6c2579db93e220c78bc31b32ca43918a2dcc6b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;Gemfile.lock&lt;/code&gt; files inform Bundler about the gem requirements in your site. If your site doesn&amp;rsquo;t have these Gemfiles, you can omit &lt;code&gt;bundle exec&lt;/code&gt; and just run &lt;code&gt;jekyll serve&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Gemfile&lt;/code&gt; と &lt;code&gt;Gemfile.lock&lt;/code&gt; ファイルは、サイト内の宝石の要件についてバンドラーを知らせます。サイトにこれらのGemfileがない場合は、 &lt;code&gt;bundle exec&lt;/code&gt; を省略して &lt;code&gt;jekyll serve&lt;/code&gt; を実行するだけです。</target>
        </trans-unit>
        <trans-unit id="015871f3cca2e404aac8ff736d807ca780ce4540" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;_config.yml&lt;/code&gt; master configuration file contains global configurations and variable definitions that are read once at execution time. Changes made to &lt;code&gt;_config.yml&lt;/code&gt; during automatic regeneration are not loaded until the next execution.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; マスター設定ファイルには、グローバルコンフィギュレーションと実行時に一度読まれる変数の定義が含まれています。自動再生成中に &lt;code&gt;_config.yml&lt;/code&gt; に加えられた変更は、次の実行まで読み込まれません。</target>
        </trans-unit>
        <trans-unit id="c66c5f86a437b947ed0ce736975e36e6e9c63046" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;branches&lt;/code&gt; directive is completely optional. Travis will build from every push to any branch of your repo if leave it out.</source>
          <target state="translated">&lt;code&gt;branches&lt;/code&gt; ディレクティブは完全にオプションです。Travisは、すべてのプッシュからレポの任意のブランチに構築されます。</target>
        </trans-unit>
        <trans-unit id="b805bb53409f023024aea30697c9e7121d0d7b8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;defaults&lt;/code&gt; key holds an array of scope/values pairs that define what defaults should be set for a particular file path, and optionally, a file type in that path.</source>
          <target state="translated">&lt;code&gt;defaults&lt;/code&gt; キーは、そのパスに、必要に応じてファイルタイプをデフォルトは特定のファイルパスに設定すべきかを定義スコープ/値のペアの配列を保持し、。</target>
        </trans-unit>
        <trans-unit id="9872e1f45f37fadbe9c5e5c67d4324984eff4052" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;help&lt;/code&gt; command is always here to remind you of all available options and usage, and also works with the &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;serve&lt;/code&gt; and &lt;code&gt;new&lt;/code&gt; subcommands, e.g &lt;code&gt;jekyll help new&lt;/code&gt; or &lt;code&gt;jekyll help build&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;help&lt;/code&gt; コマンドは、すべての利用可能なオプションと使用方法を思い出させる、ともで動作するためにここに常にある &lt;code&gt;build&lt;/code&gt; 、 &lt;code&gt;serve&lt;/code&gt; と &lt;code&gt;new&lt;/code&gt; サブコマンド、例えば &lt;code&gt;jekyll help new&lt;/code&gt; または &lt;code&gt;jekyll help build&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4abdc0f63faca27dc0d13cf9f4ae0f88d56557db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;include&lt;/code&gt; tag allows you to include the content from another file stored in the &lt;code&gt;_includes&lt;/code&gt; folder:</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; タグはあなたがに保存されている他のファイルからコンテンツを含めることができます &lt;code&gt;_includes&lt;/code&gt; のフォルダを：</target>
        </trans-unit>
        <trans-unit id="be0f39689236690a99ed44aabb835d82bae4ec9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; command isn&amp;rsquo;t the only way to create a new Jekyll site with a gem-based theme. You can also find gem-based themes online and incorporate them into your Jekyll project.</source>
          <target state="translated">&lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; コマンドは、宝石ベースのテーマとした新しいジキルサイトを作成するための唯一の方法ではありません。宝石ベースのテーマをオンラインで見つけて、それをJekyllプロジェクトに組み込むこともできます。</target>
        </trans-unit>
        <trans-unit id="b647252c78f55c6ca901fe959de1c8cb94b0ceb7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;projects/foo_project.md&lt;/code&gt; would have the &lt;code&gt;layout&lt;/code&gt; set to &lt;code&gt;foobar&lt;/code&gt; instead of &lt;code&gt;project&lt;/code&gt; and the &lt;code&gt;author&lt;/code&gt; set to &lt;code&gt;John Smith&lt;/code&gt; instead of &lt;code&gt;Mr. Hyde&lt;/code&gt; when the site is built.</source>
          <target state="translated">&lt;code&gt;projects/foo_project.md&lt;/code&gt; 持っているでしょう &lt;code&gt;layout&lt;/code&gt; に設定 &lt;code&gt;foobar&lt;/code&gt; 代わりに &lt;code&gt;project&lt;/code&gt; や &lt;code&gt;author&lt;/code&gt; へのセット &lt;code&gt;John Smith&lt;/code&gt; の代わりに、 &lt;code&gt;Mr. Hyde&lt;/code&gt; のサイトが構築されています。</target>
        </trans-unit>
        <trans-unit id="57f93099e236e22bad0fc609681110fd7c36137b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sass_dir&lt;/code&gt; is only used by Sass</source>
          <target state="translated">&lt;code&gt;sass_dir&lt;/code&gt; は唯一のサスで使用されています</target>
        </trans-unit>
        <trans-unit id="a0b0548836c5da47246c8e1f3d0079d6eea8c431" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;script&lt;/code&gt; directive can be absolutely any valid shell command.</source>
          <target state="translated">&lt;code&gt;script&lt;/code&gt; ディレクティブは絶対に任意の有効なシェルコマンドすることができます。</target>
        </trans-unit>
        <trans-unit id="f9517da8df41947654f87606ca04f61c9fbfb66a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slugify&lt;/code&gt; filter accepts an option, each specifying what to filter. The default is &lt;code&gt;default&lt;/code&gt;. They are as follows (with what they filter):</source>
          <target state="translated">&lt;code&gt;slugify&lt;/code&gt; フィルタはオプションで、各指定フィルタに何を受け入れます。デフォルトは &lt;code&gt;default&lt;/code&gt; です。それらは次のとおりです（フィルターを適用した場合）。</target>
        </trans-unit>
        <trans-unit id="6f49562587f52eeca7faec6ae393a9187d870396" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{ include.content }}&lt;/code&gt; is a parameter that gets populated when you call the include and specify a value for that parameter, like this:</source>
          <target state="translated">&lt;code&gt;{{ include.content }}&lt;/code&gt; あなたには、このように、そのパラメータの値を指定して呼び出すときに読み込まれますパラメータです。</target>
        </trans-unit>
        <trans-unit id="453d11f1f372eeba4245b42949b067b786f0d50d" translate="yes" xml:space="preserve">
          <source>The Apache web server has extensive support for content negotiation and can handle extensionless URLs by setting the &lt;a href=&quot;https://httpd.apache.org/docs/current/content-negotiation.html#multiviews&quot;&gt;multiviews&lt;/a&gt; option in your &lt;code&gt;httpd.conf&lt;/code&gt; or &lt;code&gt;.htaccess&lt;/code&gt; file:</source>
          <target state="translated">Apache Webサーバーはコンテンツネゴシエーションを幅広くサポートしており、 &lt;code&gt;httpd.conf&lt;/code&gt; または &lt;code&gt;.htaccess&lt;/code&gt; ファイルで&lt;a href=&quot;https://httpd.apache.org/docs/current/content-negotiation.html#multiviews&quot;&gt;multiviews&lt;/a&gt;オプションを設定することにより、拡張子のないURLを処理できます。</target>
        </trans-unit>
        <trans-unit id="6f60db029a5dafe35fdca83898ba43c4e3290223" translate="yes" xml:space="preserve">
          <source>The Data Folder</source>
          <target state="translated">データフォルダ</target>
        </trans-unit>
        <trans-unit id="4f65a794b94efa066f90c880f3c46026c77e594e" translate="yes" xml:space="preserve">
          <source>The Date assigned to the Post. This can be overridden in a Post&amp;rsquo;s front matter by specifying a new date/time in the format &lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt; (assuming UTC), or &lt;code&gt;YYYY-MM-DD HH:MM:SS +/-TTTT&lt;/code&gt; (to specify a time zone using an offset from UTC. e.g. &lt;code&gt;2008-12-14 10:30:00 +0900&lt;/code&gt;).</source>
          <target state="translated">投稿に割り当てられた日付。これは、形式で新しい日付/時間を指定することで、ポストの前の問題でオーバーライドすることができます &lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt; （UTCを想定）、または &lt;code&gt;YYYY-MM-DD HH:MM:SS +/-TTTT&lt;/code&gt; （ UTCからのオフセットを使用してタイムゾーンを指定します。例： &lt;code&gt;2008-12-14 10:30:00 +0900&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a8bbe3d9099df1f1edc385ef16c79952cca8b1ee" translate="yes" xml:space="preserve">
          <source>The HTML Proofer Executable</source>
          <target state="translated">HTML プルーファ実行ファイル</target>
        </trans-unit>
        <trans-unit id="b5c2a258e001242549577b3975b1a4eff528efd8" translate="yes" xml:space="preserve">
          <source>The HTML Proofer Library</source>
          <target state="translated">HTMLプルーファライブラリ</target>
        </trans-unit>
        <trans-unit id="bc05cd9f65558d68bd3f3f4ae9643c32c6c421e8" translate="yes" xml:space="preserve">
          <source>The Jekyll Command</source>
          <target state="translated">ジキルコマンド</target>
        </trans-unit>
        <trans-unit id="5a12749cf3b9b4208ca23848a2980ed3511bb09d" translate="yes" xml:space="preserve">
          <source>The Jekyll gem makes a &lt;code&gt;jekyll&lt;/code&gt; executable available to you in your Terminal window. You can use this command in a number of ways:</source>
          <target state="translated">Jekyll gemは、ターミナルウィンドウで &lt;code&gt;jekyll&lt;/code&gt; 実行可能ファイルを使用できるようにします。このコマンドはさまざまな方法で使用できます。</target>
        </trans-unit>
        <trans-unit id="e4ae3b66f42418ec34e5b727643d2151d3a4e786" translate="yes" xml:space="preserve">
          <source>The Jekyll project repository itself is a perfect example of this branch structure&amp;mdash;the &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;master branch&lt;/a&gt; contains the actual software project for Jekyll, and the Jekyll website that you&amp;rsquo;re looking at right now is contained in the &lt;a href=&quot;https://github.com/jekyll/jekyll/tree/master/docs&quot;&gt;docs folder&lt;/a&gt; of the same repository.</source>
          <target state="translated">Jekyllプロジェクトリポジトリ自体は、このブランチ構造の完璧な例です。&lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;マスターブランチに&lt;/a&gt;は、Jekyllの実際のソフトウェアプロジェクトが含まれており、現在見ているJekyll Webサイトは、同じリポジトリの&lt;a href=&quot;https://github.com/jekyll/jekyll/tree/master/docs&quot;&gt;docsフォルダー&lt;/a&gt;に含まれています。</target>
        </trans-unit>
        <trans-unit id="9f7b363d7bb8629580831520270146fdabd9d747" translate="yes" xml:space="preserve">
          <source>The Posts Folder</source>
          <target state="translated">投稿フォルダ</target>
        </trans-unit>
        <trans-unit id="b4f586a6f482917778790b090fab3a1b33e8d3fe" translate="yes" xml:space="preserve">
          <source>The Sass converter will default the &lt;code&gt;sass_dir&lt;/code&gt; configuration option to &lt;code&gt;_sass&lt;/code&gt;.</source>
          <target state="translated">Sassコンバーターは、デフォルトで &lt;code&gt;sass_dir&lt;/code&gt; 構成オプションを &lt;code&gt;_sass&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="4a29073bd4807ee992ba4e2f23e3f1865e57d71a" translate="yes" xml:space="preserve">
          <source>The URL of the Post without the domain, but with a leading slash, e.g. &lt;code&gt;/2008/12/14/my-post.html&lt;/code&gt;</source>
          <target state="translated">ドメインなしで先頭にスラッシュが付いた投稿のURL（例： &lt;code&gt;/2008/12/14/my-post.html&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f17187466f6ecc4c73161aa2ab9f1af86b2a36cd" translate="yes" xml:space="preserve">
          <source>The URL of the rendered collection. The file is only written to the destination when the collection to which it belongs has &lt;code&gt;output: true&lt;/code&gt; in the site's configuration.</source>
          <target state="translated">レンダリングされたコレクションのURL。ファイルは、それが属しているコレクションがサイトの構成で &lt;code&gt;output: true&lt;/code&gt; を持っている場合にのみ宛先に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="c60bd519de2c1efae2e2361782ce6ba4bc064f9c" translate="yes" xml:space="preserve">
          <source>The `Time` the file was last modified, e.g. &lt;code&gt;2016-04-01 16:35:26 +0200&lt;/code&gt;</source>
          <target state="translated">ファイルが最後に変更された「時間」。例： &lt;code&gt;2016-04-01 16:35:26 +0200&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2397f25be69740f387eb075765b96597329f7893" translate="yes" xml:space="preserve">
          <source>The argument to the &lt;code&gt;highlight&lt;/code&gt; tag (&lt;code&gt;ruby&lt;/code&gt; in the example above) is the language identifier. To find the appropriate identifier to use for the language you want to highlight, look for the &amp;ldquo;short name&amp;rdquo; on the &lt;a href=&quot;https://github.com/jayferd/rouge/wiki/List-of-supported-languages-and-lexers&quot;&gt;Rouge wiki&lt;/a&gt; or the &lt;a href=&quot;http://pygments.org/docs/lexers/&quot;&gt;Pygments&amp;rsquo; Lexers page&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;highlight&lt;/code&gt; タグ（上の例では &lt;code&gt;ruby&lt;/code&gt; ）の引数は言語識別子です。強調表示する言語に使用する適切な識別子を見つけるには、&lt;a href=&quot;https://github.com/jayferd/rouge/wiki/List-of-supported-languages-and-lexers&quot;&gt;ルージュウィキ&lt;/a&gt;または&lt;a href=&quot;http://pygments.org/docs/lexers/&quot;&gt;Pygmentsのレクサーページで&lt;/a&gt;「短い名前」を探します。</target>
        </trans-unit>
        <trans-unit id="de3699015c539ff487998ff6eafb1f53089592c2" translate="yes" xml:space="preserve">
          <source>The author can then be specified as a page variable in a post&amp;rsquo;s frontmatter:</source>
          <target state="translated">投稿者は、投稿のフロントマターでページ変数として指定できます。</target>
        </trans-unit>
        <trans-unit id="6a94f37fadd7da4c6b1ad9595de211831c917d18" translate="yes" xml:space="preserve">
          <source>The best way to install Jekyll is via &lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt;. At the terminal prompt, simply run the following command to install Jekyll:</source>
          <target state="translated">Jekyllをインストールする最良の方法は、&lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGemsを使用すること&lt;/a&gt;です。端末プロンプトで、次のコマンドを実行してJekyllをインストールします。</target>
        </trans-unit>
        <trans-unit id="7e1bc14a58f9132372733aab2f3c315cdce4526c" translate="yes" xml:space="preserve">
          <source>The build script file needs to have the &lt;em&gt;executable&lt;/em&gt; attribute set or Travis will fail with a permission denied error. You can also run this locally and commit the permissions directly, thus rendering this step irrelevant.</source>
          <target state="translated">ビルドスクリプトファイルには&lt;em&gt;実行可能&lt;/em&gt;属性を設定する必要があります。そうしないと、Travisはアクセス許可拒否エラーで失敗します。これをローカルで実行し、権限を直接コミットすることもできるため、このステップは無関係になります。</target>
        </trans-unit>
        <trans-unit id="9a28e5b5ecc753f02df3722d44be4cc111642c27" translate="yes" xml:space="preserve">
          <source>The collections are also available under &lt;code&gt;site.collections&lt;/code&gt;, with the metadata you specified in your &lt;code&gt;_config.yml&lt;/code&gt; (if present) and the following information:</source>
          <target state="translated">コレクションは &lt;code&gt;site.collections&lt;/code&gt; でも利用でき、 &lt;code&gt;_config.yml&lt;/code&gt; （存在する場合）で指定したメタデータと次の情報が含まれます。</target>
        </trans-unit>
        <trans-unit id="4922c5c33c00d746b65dd822422c6021bc3632c8" translate="yes" xml:space="preserve">
          <source>The complete list of available hooks is below:</source>
          <target state="translated">利用可能なフックの一覧は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="e127986025eeef41ee36416b8aa30c4c328c3bb6" translate="yes" xml:space="preserve">
          <source>The config flag explicitly specifies your configuration file(s)</source>
          <target state="translated">config フラグは設定ファイルを明示的に指定します。</target>
        </trans-unit>
        <trans-unit id="cd1f5fe794b0d7a1e3592860f1795f4726f9ed63" translate="yes" xml:space="preserve">
          <source>The content of the Page, rendered or un-rendered depending upon what Liquid is being processed and what &lt;code&gt;page&lt;/code&gt; is.</source>
          <target state="translated">処理されているLiquidと &lt;code&gt;page&lt;/code&gt; が何であるかに応じて、レンダリングされた、またはレンダリングされなかったページのコンテンツ。</target>
        </trans-unit>
        <trans-unit id="0ad84f221f09a5cca8473177feb743d0286dfc3a" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; are automatically cleaned, by default, when the site is built. Files or folders that are not created by your site will be removed. Files and folders you wish to retain in &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; may be specified within the &lt;code&gt;&amp;lt;keep_files&amp;gt;&lt;/code&gt; configuration directive.</source>
          <target state="translated">&lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; のコンテンツは、サイトの構築時に、デフォルトで自動的に消去されます。サイトで作成されていないファイルまたはフォルダーは削除されます。 &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; に保持するファイルとフォルダーは、 &lt;code&gt;&amp;lt;keep_files&amp;gt;&lt;/code&gt; 構成ディレクティブで指定できます。</target>
        </trans-unit>
        <trans-unit id="ced790b62fc4d3512128b154b5dad8c8dd6b59d5" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; are automatically cleaned, by default, when the site is built. Files or folders that are not created by your site will be removed. Some files could be retained by specifying them within the &lt;code&gt;&amp;lt;keep_files&amp;gt;&lt;/code&gt; configuration directive.</source>
          <target state="translated">&lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; のコンテンツは、サイトの構築時に、デフォルトで自動的に消去されます。サイトで作成されていないファイルまたはフォルダーは削除されます。一部のファイルは、 &lt;code&gt;&amp;lt;keep_files&amp;gt;&lt;/code&gt; 構成ディレクティブ内で指定することにより保持できます。</target>
        </trans-unit>
        <trans-unit id="b8e9c8d15bd8417fab41ce40cea38519f11b5ec7" translate="yes" xml:space="preserve">
          <source>The current time (when you run the &lt;code&gt;jekyll&lt;/code&gt; command).</source>
          <target state="translated">現在の時刻（ &lt;code&gt;jekyll&lt;/code&gt; コマンドを実行したとき）。</target>
        </trans-unit>
        <trans-unit id="81333770209a28d4fb803c7b6d048bd62c30f009" translate="yes" xml:space="preserve">
          <source>The date of the document's collection.</source>
          <target state="translated">文書が収集された日付。</target>
        </trans-unit>
        <trans-unit id="461cca207b53f8ae0b009479df21150c362e5974" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;JEKYLL_ENV&lt;/code&gt; is &lt;code&gt;development&lt;/code&gt;. Therefore if you omit &lt;code&gt;JEKYLL_ENV&lt;/code&gt; from the build arguments, the default value will be &lt;code&gt;JEKYLL_ENV=development&lt;/code&gt;. Any content inside &lt;code&gt;{% if jekyll.environment == &quot;development&quot; %}&lt;/code&gt; tags will automatically appear in the build.</source>
          <target state="translated">&lt;code&gt;JEKYLL_ENV&lt;/code&gt; のデフォルト値は &lt;code&gt;development&lt;/code&gt; です。したがって、ビルド引数から &lt;code&gt;JEKYLL_ENV&lt;/code&gt; を省略すると、デフォルト値は &lt;code&gt;JEKYLL_ENV=development&lt;/code&gt; になります。 &lt;code&gt;{% if jekyll.environment == &quot;development&quot; %}&lt;/code&gt; タグ内のコンテンツは、ビルドに自動的に表示されます。</target>
        </trans-unit>
        <trans-unit id="6e759d725ab2be77e845b1fa546ac2b78b7b883c" translate="yes" xml:space="preserve">
          <source>The development kit did not set the environment path for Ruby so we need to do it.</source>
          <target state="translated">開発キットではRubyの環境パスが設定されていなかったので、それをやる必要があります。</target>
        </trans-unit>
        <trans-unit id="1e43b15fe09c46cb3865b18a7f6be65df324e7bd" translate="yes" xml:space="preserve">
          <source>The document's base filename, with every sequence of spaces and non-alphanumeric characters replaced by a hyphen.</source>
          <target state="translated">スペースや英数字以外のキ ャ ラ ク タ の連続をすべてハイフンで置き換えた文書の基本ファイル名。</target>
        </trans-unit>
        <trans-unit id="7a4d641be53fc4ded82073ab18060fbbaf5b40f1" translate="yes" xml:space="preserve">
          <source>The easiest way to manage dependencies for a Jekyll project (with or without CircleCI) is via a &lt;a href=&quot;http://bundler.io/gemfile.html&quot;&gt;Gemfile&lt;/a&gt;. You&amp;rsquo;d want to have Jekyll, any Jekyll plugins, &lt;a href=&quot;#html-proofer&quot;&gt;HTML Proofer&lt;/a&gt;, and any other gems that you are using in the &lt;code&gt;Gemfile&lt;/code&gt;. Don&amp;rsquo;t forget to version &lt;code&gt;Gemfile.lock&lt;/code&gt; as well. Here&amp;rsquo;s an example &lt;code&gt;Gemfile&lt;/code&gt;:</source>
          <target state="translated">Jekyllプロジェクト（CircleCIの有無にかかわらず）の依存関係を管理する最も簡単な方法は、&lt;a href=&quot;http://bundler.io/gemfile.html&quot;&gt;Gemfile&lt;/a&gt;を使用することです。あなたはジキル、任意のジキルのプラグイン、持ちたいと思い&lt;a href=&quot;#html-proofer&quot;&gt;HTMLプルーファー&lt;/a&gt;、そしてあなたが使用している他の宝石 &lt;code&gt;Gemfile&lt;/code&gt; を。 &lt;code&gt;Gemfile.lock&lt;/code&gt; のバージョンも忘れずに。これが &lt;code&gt;Gemfile&lt;/code&gt; の例です：</target>
        </trans-unit>
        <trans-unit id="73a3dd4503e0c749b6e314c596e455e7cdb6d627" translate="yes" xml:space="preserve">
          <source>The extension name for the file, e.g. &lt;code&gt;.jpg&lt;/code&gt; for &lt;code&gt;image.jpg&lt;/code&gt;</source>
          <target state="translated">ファイルの拡張子名、例えば &lt;code&gt;.jpg&lt;/code&gt; のため &lt;code&gt;image.jpg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="074f8f593ef85509bc81e5b846efb4fe5391555d" translate="yes" xml:space="preserve">
          <source>The extension to be given to the output file (including the dot). Usually this will be &lt;code&gt;&quot;.html&quot;&lt;/code&gt;.</source>
          <target state="translated">出力ファイルに付与される拡張子（ドットを含む）。通常、これは &lt;code&gt;&quot;.html&quot;&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="071a0f8feb31149cc4a872234934c640bd832437" translate="yes" xml:space="preserve">
          <source>The first build will start on its own. You can start telling CircleCI how to build your project by creating a &lt;a href=&quot;https://circleci.com/docs/configuration/&quot;&gt;circle.yml&lt;/a&gt; file in the root of your repository.</source>
          <target state="translated">最初のビルドは自動的に開始されます。リポジトリのルートに&lt;a href=&quot;https://circleci.com/docs/configuration/&quot;&gt;circle.yml&lt;/a&gt;ファイルを作成することで、CircleCIにプロジェクトの構築方法を伝えることができます。</target>
        </trans-unit>
        <trans-unit id="ff2aa84f0f847a851c69fbeaf082aacd65aeaef6" translate="yes" xml:space="preserve">
          <source>The folder must be named identically to the collection you defined in your &lt;code&gt;_config.yml&lt;/code&gt; file, with the addition of the preceding &lt;code&gt;_&lt;/code&gt; character.</source>
          <target state="translated">フォルダーには、 &lt;code&gt;_config.yml&lt;/code&gt; ファイルで定義したコレクションと同じ名前を付け、先頭に &lt;code&gt;_&lt;/code&gt; 文字を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="20918523f72d93ec13db1517cbfc8928a940fdd9" translate="yes" xml:space="preserve">
          <source>The following HTML snippet should handle page one, and render a list of each page with links to all but the current page.</source>
          <target state="translated">以下のHTMLスニペットは、1ページ目を処理し、現在のページ以外へのリンクを持つ各ページのリストをレンダリングする必要があります。</target>
        </trans-unit>
        <trans-unit id="4ac3a4ea2bb7dfab17f62ce20dcfbf21480b1e99" translate="yes" xml:space="preserve">
          <source>The following table lists the template variables available for permalinks. You can use these variables in the &lt;code&gt;permalink&lt;/code&gt; property in your config file.</source>
          <target state="translated">次の表に、パーマリンクで使用できるテンプレート変数を示します。これらの変数は、設定ファイルの &lt;code&gt;permalink&lt;/code&gt; プロパティで使用できます。</target>
        </trans-unit>
        <trans-unit id="e06fe39e9c6aaf398c3c9b66746e0b4503b012f7" translate="yes" xml:space="preserve">
          <source>The front matter is where Jekyll starts to get really cool. Any file that contains a &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; front matter block will be processed by Jekyll as a special file. The front matter must be the first thing in the file and must take the form of valid YAML set between triple-dashed lines. Here is a basic example:</source>
          <target state="translated">前置きは、ジキルが本当にクールになり始めるところです。&lt;a href=&quot;http://yaml.org/&quot;&gt;YAMLの&lt;/a&gt;前付けブロックを含むファイルは、Jekyllによって特別なファイルとして処理されます。前付けはファイル内の最初のものである必要があり、三重破線の間に設定された有効なYAMLの形式をとる必要があります。基本的な例を次に示します。</target>
        </trans-unit>
        <trans-unit id="380fc13db84b5364759de2687c000b05b1341582" translate="yes" xml:space="preserve">
          <source>The full path to the collections's source directory.</source>
          <target state="translated">コレクションのソースディレクトリへのフルパス。</target>
        </trans-unit>
        <trans-unit id="24556f0780c34a4c2474ed19003cf32c035058f9" translate="yes" xml:space="preserve">
          <source>The full path to the document's source file.</source>
          <target state="translated">ドキュメントのソースファイルへのフルパス。</target>
        </trans-unit>
        <trans-unit id="38e774c2af112b48879984a6533c3733a5089ba7" translate="yes" xml:space="preserve">
          <source>The github-pages gem</source>
          <target state="translated">github-pages gem</target>
        </trans-unit>
        <trans-unit id="7db87227ddc536101f77023bb4d1038bdb0393ca" translate="yes" xml:space="preserve">
          <source>The goal of gem-based themes is to allow you to get all the benefits of a robust, continually updated theme without having all the theme&amp;rsquo;s files getting in your way and over-complicating what might be your primary focus: creating content.</source>
          <target state="translated">宝石ベースのテーマの目標は、すべてのテーマのファイルが邪魔になり、主な焦点である可能性のあるものを過度に複雑にすることなく、堅牢で継続的に更新されるテーマのすべての利点を得ることができるようにすることです：コンテンツの作成。</target>
        </trans-unit>
        <trans-unit id="4b034ea59382f65d6ad92ab4829d189f89dc9a99" translate="yes" xml:space="preserve">
          <source>The jekyll_plugins group</source>
          <target state="translated">jekyll_plugins グループ</target>
        </trans-unit>
        <trans-unit id="ba4e1bc24ab615d4e3a3cd73fc2b8010a19b5f73" translate="yes" xml:space="preserve">
          <source>The latest version, version 2.0, seems to break the use of &lt;code&gt;{{&lt;/code&gt; in templates. Unlike previous versions, using &lt;code&gt;{{&lt;/code&gt; in 2.0 triggers the following error:</source>
          <target state="translated">最新バージョンのバージョン2.0は、テンプレートでの &lt;code&gt;{{&lt;/code&gt; の使用を中断するようです。以前のバージョンとは異なり、2.0で &lt;code&gt;{{&lt;/code&gt; を使用すると、次のエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="90196f7c2d9516518127e48bf65c6d41d8b18d87" translate="yes" xml:space="preserve">
          <source>The list of all Posts in category &lt;code&gt;CATEGORY&lt;/code&gt;.</source>
          <target state="translated">カテゴリ &lt;code&gt;CATEGORY&lt;/code&gt; のすべての投稿のリスト。</target>
        </trans-unit>
        <trans-unit id="8716ce1782221a8588f08b35fcce746c10a765e8" translate="yes" xml:space="preserve">
          <source>The list of all Posts with tag &lt;code&gt;TAG&lt;/code&gt;.</source>
          <target state="translated">タグ &lt;code&gt;TAG&lt;/code&gt; を持つすべての投稿のリスト。</target>
        </trans-unit>
        <trans-unit id="e4f5bdfcd4df4e1a7077ef5853c19979f9ff4920" translate="yes" xml:space="preserve">
          <source>The list of categories to which this post belongs. Categories are derived from the directory structure above the &lt;code&gt;_posts&lt;/code&gt; directory. For example, a post at &lt;code&gt;/work/code/_posts/2008-12-24-closures.md&lt;/code&gt; would have this field set to &lt;code&gt;['work', 'code']&lt;/code&gt;. These can also be specified in the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;.</source>
          <target state="translated">この投稿が属するカテゴリのリスト。カテゴリは、 &lt;code&gt;_posts&lt;/code&gt; ディレクトリの上のディレクトリ構造から派生します。たとえば、 &lt;code&gt;/work/code/_posts/2008-12-24-closures.md&lt;/code&gt; の投稿では、このフィールドが &lt;code&gt;['work', 'code']&lt;/code&gt; 設定されます。これらは&lt;a href=&quot;../frontmatter/index&quot;&gt;YAMLフロントマター&lt;/a&gt;でも指定できます。</target>
        </trans-unit>
        <trans-unit id="adc5aae74460c5b14cd23fd61101e4fb8e785167" translate="yes" xml:space="preserve">
          <source>The list of tags to which this post belongs. These can be specified in the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;.</source>
          <target state="translated">この投稿が属するタグのリスト。これらは&lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;で指定できます。</target>
        </trans-unit>
        <trans-unit id="68a0bf74880922f66f4f16c3a505afcb88896f79" translate="yes" xml:space="preserve">
          <source>The more recent &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2&quot;&gt;jekyll-paginate-v2&lt;/a&gt; plugin supports more features. See the &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2/tree/master/examples&quot;&gt;pagination examples&lt;/a&gt; in the repository. &lt;strong&gt;This plugin is not supported by GitHub Pages&lt;/strong&gt;.</source>
          <target state="translated">最近の&lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2&quot;&gt;jekyll-paginate-v2&lt;/a&gt;プラグインは、より多くの機能をサポートしています。リポジトリの&lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2/tree/master/examples&quot;&gt;ページネーションの例&lt;/a&gt;をご覧ください。&lt;strong&gt;このプラグインはGitHub Pagesではサポートされていません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="ed7f4dd6b02c011a4ed405a56ff2fd9197108944" translate="yes" xml:space="preserve">
          <source>The most basic test that can be run is simply seeing if &lt;code&gt;jekyll build&lt;/code&gt; actually works. This is a blocker, a dependency if you will, for other tests you might run on the generate site. So we&amp;rsquo;ll run Jekyll, via Bundler, in the &lt;code&gt;dependencies&lt;/code&gt; phase.</source>
          <target state="translated">実行できる最も基本的なテストは、 &lt;code&gt;jekyll build&lt;/code&gt; 実際に機能するかどうかを確認することです。これはブロッカーであり、依存する場合は、生成サイトで実行する可能性のある他のテストに使用できます。したがって、 &lt;code&gt;dependencies&lt;/code&gt; フェーズでは、Bundlerを介してJekyllを実行します。</target>
        </trans-unit>
        <trans-unit id="b571265a0d4e05dc04f235fc6b1b262f5c011343" translate="yes" xml:space="preserve">
          <source>The name of the document's collection.</source>
          <target state="translated">ドキュメントのコレクションの名前。</target>
        </trans-unit>
        <trans-unit id="9340a47214628fecb21babe390b9bd99998d17d5" translate="yes" xml:space="preserve">
          <source>The name of the file you want to embed can be specified as a variable instead of an actual file name. For example, suppose you defined a variable in your page&amp;rsquo;s front matter like this:</source>
          <target state="translated">埋め込むファイルの名前は、実際のファイル名の代わりに変数として指定できます。たとえば、次のようにページの前付けに変数を定義したとします。</target>
        </trans-unit>
        <trans-unit id="3e080fa25d64b3e0504153f78ce57cb3f2864d4c" translate="yes" xml:space="preserve">
          <source>The name of your collection, e.g. &lt;code&gt;my_collection&lt;/code&gt;.</source>
          <target state="translated">コレクションの名前（例： &lt;code&gt;my_collection&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="26fa8a47f18a5a1edb636fe3e1835c1b2c6b35a3" translate="yes" xml:space="preserve">
          <source>The next post relative to the position of the current post in &lt;code&gt;site.posts&lt;/code&gt;. Returns &lt;code&gt;nil&lt;/code&gt; for the last entry.</source>
          <target state="translated">&lt;code&gt;site.posts&lt;/code&gt; 内の現在の投稿の位置を基準にした次の投稿。最後のエントリの &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="21900e42947b8a2188d47b9d4010bbf898418dee" translate="yes" xml:space="preserve">
          <source>The next thing you need to do is to actually display your posts in a list using the &lt;code&gt;paginator&lt;/code&gt; variable that will now be available to you. You&amp;rsquo;ll probably want to do this in one of the main pages of your site. Here&amp;rsquo;s one example of a simple way of rendering paginated Posts in a HTML file:</source>
          <target state="translated">次に必要なことは、実際に使用できる &lt;code&gt;paginator&lt;/code&gt; 変数を使用して、実際に投稿をリストに表示することです。あなたはおそらくあなたのサイトのメインページの一つでこれをしたいと思うでしょう。HTMLファイルでページ分割された投稿をレンダリングする簡単な方法の一例を次に示します。</target>
        </trans-unit>
        <trans-unit id="5b68914dfdf4b44fa4d895c69f68bdc935729d17" translate="yes" xml:space="preserve">
          <source>The number of the current page.</source>
          <target state="translated">現在のページの番号です。</target>
        </trans-unit>
        <trans-unit id="22c82db2fbfe3347ab67d10c4e1c7501e79e9e2f" translate="yes" xml:space="preserve">
          <source>The number of the next page.</source>
          <target state="translated">次のページの番号です。</target>
        </trans-unit>
        <trans-unit id="7d3b47de2f7120d16ef9022078884417a394056f" translate="yes" xml:space="preserve">
          <source>The number of the previous page.</source>
          <target state="translated">前のページの番号です。</target>
        </trans-unit>
        <trans-unit id="48bae7a19b61d98eafde63abe0f6a06b1ca9a228" translate="yes" xml:space="preserve">
          <source>The number should be the maximum number of Posts you&amp;rsquo;d like to be displayed per-page in the generated site.</source>
          <target state="translated">この数は、生成されたサイトのページごとに表示する投稿の最大数にする必要があります。</target>
        </trans-unit>
        <trans-unit id="bf8d248421b4dbe9a5fa644b93ceb9d81fda4b21" translate="yes" xml:space="preserve">
          <source>The order of precedence for conflicting &lt;a href=&quot;../configuration/index&quot;&gt;configuration settings&lt;/a&gt; is as follows:</source>
          <target state="translated">競合&lt;a href=&quot;../configuration/index&quot;&gt;する構成設定の&lt;/a&gt;優先順位は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="148794a76f00af27ba232ef49e21626171a608dd" translate="yes" xml:space="preserve">
          <source>The organizations can then be accessed via &lt;code&gt;site.data.orgs&lt;/code&gt;, followed by the file name:</source>
          <target state="translated">その後、組織には &lt;code&gt;site.data.orgs&lt;/code&gt; を介してアクセスでき、その後にファイル名が続きます。</target>
        </trans-unit>
        <trans-unit id="94cab780571d6c057ea749acd5004de75efe7557" translate="yes" xml:space="preserve">
          <source>The pagination plugin exposes the &lt;code&gt;paginator&lt;/code&gt; liquid object with the following attributes:</source>
          <target state="translated">ページネーションプラグインは、次の属性を持つページ &lt;code&gt;paginator&lt;/code&gt; リキッドオブジェクトを公開します。</target>
        </trans-unit>
        <trans-unit id="49273f33d06c3a327a6f3e06d347c5a798c9173f" translate="yes" xml:space="preserve">
          <source>The path to the collection's source directory, relative to the site source.</source>
          <target state="translated">コレクションのソースディレクトリへのパス。</target>
        </trans-unit>
        <trans-unit id="607013a31b5527445f73d56a0042d5c9a723a22c" translate="yes" xml:space="preserve">
          <source>The path to the document's source file relative to the site source.</source>
          <target state="translated">サイトのソースからドキュメントのソースファイルへの相対パス。</target>
        </trans-unit>
        <trans-unit id="aa10254d0dd749ff07df4286637eb753f4c515dc" translate="yes" xml:space="preserve">
          <source>The path to the next page.</source>
          <target state="translated">次のページへのパスです。</target>
        </trans-unit>
        <trans-unit id="f3b8c43ed1eb41b60689a541cc4f5f7cfeb27d23" translate="yes" xml:space="preserve">
          <source>The path to the post or page in the built site differs for posts, pages, and collections:</source>
          <target state="translated">構築されたサイト内の投稿やページへのパスは、投稿、ページ、コレクションによって異なります。</target>
        </trans-unit>
        <trans-unit id="d6f100a5aa8766822d8b771278d1c64c2cdee2f6" translate="yes" xml:space="preserve">
          <source>The path to the post, page, or collection is defined as the path relative to the root directory (where your config file is) to the file, not the path from your existing page to the other page.</source>
          <target state="translated">ポスト、ページ、またはコレクションへのパスは、既存のページから他のページへのパスではなく、ファイルへのルートディレクトリ(あなたの設定ファイルがある場所)からの相対パスとして定義されます。</target>
        </trans-unit>
        <trans-unit id="eff647ee25865c384ca1ede1d398e0554ab734c7" translate="yes" xml:space="preserve">
          <source>The path to the previous page.</source>
          <target state="translated">前のページへのパス。</target>
        </trans-unit>
        <trans-unit id="0c9b12566e2f40964253807d83a52db322fbd69c" translate="yes" xml:space="preserve">
          <source>The path to the raw post or page. Example usage: Linking back to the page or post&amp;rsquo;s source on GitHub. This can be overridden in the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;.</source>
          <target state="translated">生の投稿またはページへのパス。使用例：GitHub上のページまたは投稿のソースへのリンク。これは、&lt;a href=&quot;../frontmatter/index&quot;&gt;YAMLフロントマター&lt;/a&gt;で上書きできます。</target>
        </trans-unit>
        <trans-unit id="6e805d5b1200a3ba381a0b2b49d638b2e14751e6" translate="yes" xml:space="preserve">
          <source>The permalink can also be set using a built-in permalink style:</source>
          <target state="translated">パーマリンクは、組み込みのパーマリンクスタイルを使って設定することもできます。</target>
        </trans-unit>
        <trans-unit id="72fd18a07464d558a9db6a54eb33979c9945728d" translate="yes" xml:space="preserve">
          <source>The permalink setting in your configuration file specifies the permalink style used for posts, pages, and collections. However, because pages and collections don&amp;rsquo;t have time or categories, these aspects of the permalink style are ignored with pages and collections.</source>
          <target state="translated">構成ファイルのパーマリンク設定は、投稿、ページ、およびコレクションに使用されるパーマリンクスタイルを指定します。ただし、ページとコレクションには時間やカテゴリがないため、ページとコレクションではパーマリンクスタイルのこれらの側面は無視されます。</target>
        </trans-unit>
        <trans-unit id="06e022e21b12759f491ac6ee44198521b1d39366" translate="yes" xml:space="preserve">
          <source>The previous post relative to the position of the current post in &lt;code&gt;site.posts&lt;/code&gt;. Returns &lt;code&gt;nil&lt;/code&gt; for the first entry.</source>
          <target state="translated">&lt;code&gt;site.posts&lt;/code&gt; 内の現在の投稿の位置を基準にした以前の投稿。最初のエントリに対して &lt;code&gt;nil&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0fced1493167b02bdd3aa15d8fc6e58bbaf0adf3" translate="yes" xml:space="preserve">
          <source>The proper solution is to incorporate the default setting for &lt;code&gt;exclude:&lt;/code&gt; rather than override it completely:</source>
          <target state="translated">適切な解決策は、完全に上書きするのではなく、 &lt;code&gt;exclude:&lt;/code&gt; のデフォルト設定を組み込むことです。</target>
        </trans-unit>
        <trans-unit id="1cbf18bffd374ba272b46771db8fc2d3c757a5be" translate="yes" xml:space="preserve">
          <source>The relative path to the file, e.g. &lt;code&gt;/assets/img/image.jpg&lt;/code&gt;</source>
          <target state="translated">ファイルへの相対パス（例： &lt;code&gt;/assets/img/image.jpg&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7dd8f1578fc3a7557a8ee6928df0d34efec33cdb" translate="yes" xml:space="preserve">
          <source>The rendered output of the document, based on the &lt;code&gt;content&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;content&lt;/code&gt; に基づいて、ドキュメントのレンダリングされた出力。</target>
        </trans-unit>
        <trans-unit id="c39819f8d905b292e9192e99d02f7e38ed0bb5ce" translate="yes" xml:space="preserve">
          <source>The result is the original HTML code shown earlier.</source>
          <target state="translated">その結果、先ほどの元のHTMLコードになります。</target>
        </trans-unit>
        <trans-unit id="2d2e86e4913f580972837fc6804e77e3337c307b" translate="yes" xml:space="preserve">
          <source>The self-hosted version of Buddy can be installed on any type of server supporting Docker, including &lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-linux&quot;&gt;Linux&lt;/a&gt;, &lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-mac-osx&quot;&gt;Mac&lt;/a&gt;, &lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-amazon-ec2&quot;&gt;AWS EC2&lt;/a&gt;, &lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-digitalocean&quot;&gt;DigitalOcean&lt;/a&gt;, and &lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-azure&quot;&gt;Microsoft Azure&lt;/a&gt;.</source>
          <target state="translated">Buddyの自己ホストバージョンは、&lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-linux&quot;&gt;Linux&lt;/a&gt;、&lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-mac-osx&quot;&gt;Mac&lt;/a&gt;、&lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-amazon-ec2&quot;&gt;AWS EC2&lt;/a&gt;、&lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-digitalocean&quot;&gt;DigitalOcean&lt;/a&gt;、&lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-azure&quot;&gt;Microsoft Azure&lt;/a&gt;など、Dockerをサポートするあらゆるタイプのサーバーにインストールできます。</target>
        </trans-unit>
        <trans-unit id="d9883957b0dd80adf4891d5ff8c9ac82caeae417" translate="yes" xml:space="preserve">
          <source>The simplest test script simply runs &lt;code&gt;jekyll build&lt;/code&gt; and ensures that Jekyll doesn&amp;rsquo;t fail to build the site. It doesn&amp;rsquo;t check the resulting site, but it does ensure things are built properly.</source>
          <target state="translated">最も単純なテストスクリプトは、 &lt;code&gt;jekyll build&lt;/code&gt; を実行するだけで、Jekyllがサイトのビルドに失敗しないことを確認します。結果のサイトはチェックしませんが、物事が適切に構築されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="1fbbb80622e1f4877a44ac9836e3626289972f67" translate="yes" xml:space="preserve">
          <source>The simplest way of adding a page is just to add an HTML file in the root directory with a suitable name for the page you want to create. For a site with a homepage, an about page, and a contact page, here&amp;rsquo;s what the root directory and associated URLs might look like:</source>
          <target state="translated">ページを追加する最も簡単な方法は、作成するページに適した名前のHTMLファイルをルートディレクトリに追加することです。ホームページ、概要ページ、連絡先ページがあるサイトの場合、ルートディレクトリと関連するURLは次のようになります。</target>
        </trans-unit>
        <trans-unit id="324e1b599b8f0120ed81a1f72f0909e598305f01" translate="yes" xml:space="preserve">
          <source>The specified categories for this post. If a post has multiple categories, Jekyll will create a hierarchy (e.g. &lt;code&gt;/category1/category2&lt;/code&gt;). Also Jekyll automatically parses out double slashes in the URLs, so if no categories are present, it will ignore this.</source>
          <target state="translated">この投稿に指定されたカテゴリ。投稿に複数のカテゴリがある場合、Jekyllは階層を作成します（例： &lt;code&gt;/category1/category2&lt;/code&gt; ）。また、Jekyllは自動的にURLの二重スラッシュを解析するため、カテゴリが存在しない場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="e0151fba4434afed464fcc55ea7cebab8ceedfc4" translate="yes" xml:space="preserve">
          <source>The string basename of the file e.g. &lt;code&gt;image&lt;/code&gt; for &lt;code&gt;image.jpg&lt;/code&gt;</source>
          <target state="translated">ファイルなどの文字列ベース名 &lt;code&gt;image&lt;/code&gt; について &lt;code&gt;image.jpg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="699f53647460fa97038c37525c58773da0663c10" translate="yes" xml:space="preserve">
          <source>The string name of the file e.g. &lt;code&gt;image.jpg&lt;/code&gt; for &lt;code&gt;image.jpg&lt;/code&gt;</source>
          <target state="translated">ファイルの文字列名。たとえば、 &lt;code&gt;image.jpg&lt;/code&gt; の場合は &lt;code&gt;image.jpg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc214d90dd9fb7f65459623b45712619a1c3d727" translate="yes" xml:space="preserve">
          <source>The string you pass to your include parameter can&amp;rsquo;t contain curly braces. For example, you can&amp;rsquo;t pass a parameter that contains this: &lt;code&gt;&quot;The latest version of {{ site.product_name }} is now available.&quot;&lt;/code&gt;</source>
          <target state="translated">includeパラメータに渡す文字列に中括弧を含めることはできません。たとえば、 &lt;code&gt;&quot;The latest version of {{ site.product_name }} is now available.&quot;&lt;/code&gt; というパラメータを渡すことはできません。</target>
        </trans-unit>
        <trans-unit id="5f77a55d669391afd75dd2dbca2f36448b4adac6" translate="yes" xml:space="preserve">
          <source>The subfolders into which you may have organized your posts inside the &lt;code&gt;_posts&lt;/code&gt; directory will not be part of the permalink.</source>
          <target state="translated">&lt;code&gt;_posts&lt;/code&gt; ディレクトリ内で投稿を整理したサブフォルダーは、パーマリンクの一部にはなりません。</target>
        </trans-unit>
        <trans-unit id="2fd5aac3a844b91426edaabba312de231951c1c8" translate="yes" xml:space="preserve">
          <source>The table below lists the available settings for Jekyll, and the various &lt;code&gt;options&lt;/code&gt; (specified in the configuration file) and &lt;code&gt;flags&lt;/code&gt; (specified on the command-line) that control them.</source>
          <target state="translated">次の表は、Jekyllの使用可能な設定と、それらを制御するさまざまな &lt;code&gt;options&lt;/code&gt; （構成ファイルで指定）および &lt;code&gt;flags&lt;/code&gt; （コマンドラインで指定）を示しています。</target>
        </trans-unit>
        <trans-unit id="3675e302c52313cb9b357ab0e961e492e32b1f98" translate="yes" xml:space="preserve">
          <source>The title of the Page.</source>
          <target state="translated">ページのタイトルです。</target>
        </trans-unit>
        <trans-unit id="c5a47aa2fa70ddabb2590374bd65c420d8f11fd8" translate="yes" xml:space="preserve">
          <source>The un-rendered excerpt of the Page.</source>
          <target state="translated">ページの未レンダリングの抜粋です。</target>
        </trans-unit>
        <trans-unit id="729a789c71cb14e8080187dff3b7cfaa59630c3e" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;content&lt;/code&gt; (which is &lt;code&gt;This is my sample note&lt;/code&gt;) will be inserted into the &lt;code&gt;{{ include.content }}&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;content&lt;/code&gt; の値（ &lt;code&gt;This is my sample note&lt;/code&gt; ）が &lt;code&gt;{{ include.content }}&lt;/code&gt; パラメータに挿入されます。</target>
        </trans-unit>
        <trans-unit id="97140f29686cd51710ca80b53eae9e471b7a772f" translate="yes" xml:space="preserve">
          <source>The various Markdown renderers supported by Jekyll sometimes have extra options available.</source>
          <target state="translated">Jekyllによってサポートされている様々なMarkdownレンダラには、利用可能な追加オプションがあることがあります。</target>
        </trans-unit>
        <trans-unit id="d6f89c7ee8f76c5f0f5511e960cccde79189ec2f" translate="yes" xml:space="preserve">
          <source>The various markup engines that Jekyll uses may have some issues. This page will document them to help others who may run into the same problems.</source>
          <target state="translated">Jekyll が使用する様々なマークアップエンジンには、いくつかの問題があるかもしれません。このページでは、同じ問題に遭遇する可能性のある他の人を助けるために、それらを文書化します。</target>
        </trans-unit>
        <trans-unit id="2f3834334e4679d89fa0b4fa3f690206df9903cd" translate="yes" xml:space="preserve">
          <source>Theme layouts and includes work just like they work in any Jekyll site. Place layouts in your theme&amp;rsquo;s &lt;code&gt;/_layouts&lt;/code&gt; folder, and place includes in your themes &lt;code&gt;/_includes&lt;/code&gt; folder.</source>
          <target state="translated">テーマのレイアウトとインクルードは、Jekyllのサイトで機能するのと同じように機能します。レイアウトをテーマの &lt;code&gt;/_layouts&lt;/code&gt; フォルダーに配置し、 &lt;code&gt;/_includes&lt;/code&gt; テーマの/ _includesフォルダーに配置します。</target>
        </trans-unit>
        <trans-unit id="9ed34bbdefb2c4a84dd37bde98313dff6c3c687b" translate="yes" xml:space="preserve">
          <source>Theme-gem dependencies3.5.0</source>
          <target state="translated">テーマ・ジェムの依存関係3.5.0</target>
        </trans-unit>
        <trans-unit id="94d5186ba3ec63d1ebcb1e902a2d13ac15f0c527" translate="yes" xml:space="preserve">
          <source>Themes</source>
          <target state="translated">Themes</target>
        </trans-unit>
        <trans-unit id="821a6060b9a347883efc03d96a667931412cf635" translate="yes" xml:space="preserve">
          <source>Themes are published via &lt;a href=&quot;https://rubygems.org&quot;&gt;RubyGems.org&lt;/a&gt;. You will need a RubyGems account, which you can &lt;a href=&quot;https://rubygems.org/sign_up&quot;&gt;create for free&lt;/a&gt;.</source>
          <target state="translated">テーマは&lt;a href=&quot;https://rubygems.org&quot;&gt;RubyGems.org&lt;/a&gt;経由で公開されます。&lt;a href=&quot;https://rubygems.org/sign_up&quot;&gt;無料で作成&lt;/a&gt;できるRubyGemsアカウントが必要です。</target>
        </trans-unit>
        <trans-unit id="32791d9c965069db5c67476fa80d508abb53e543" translate="yes" xml:space="preserve">
          <source>Themes are visual. Show users what your theme looks like by including a screenshot as &lt;code&gt;/screenshot.png&lt;/code&gt; within your theme&amp;rsquo;s repository where it can be retrieved programatically. You can also include this screenshot within your theme&amp;rsquo;s documentation.</source>
          <target state="translated">テーマは視覚的です。プログラムで取得できるテーマのリポジトリ内にスクリーンショットを &lt;code&gt;/screenshot.png&lt;/code&gt; として含めることにより、テーマの外観をユーザーに示します。このスクリーンショットをテーマのドキュメントに含めることもできます。</target>
        </trans-unit>
        <trans-unit id="20b2f8070c295ff70fe091d9d3d93662adcdd260" translate="yes" xml:space="preserve">
          <source>Then Jekyll will look in &lt;code&gt;my_collections/_books&lt;/code&gt; for the &lt;code&gt;books&lt;/code&gt; collection, and in &lt;code&gt;my_collections/_recipes&lt;/code&gt; for the &lt;code&gt;recipes&lt;/code&gt; collection.</source>
          <target state="translated">次に、Jekyllは &lt;code&gt;my_collections/_books&lt;/code&gt; で &lt;code&gt;books&lt;/code&gt; コレクションを、 &lt;code&gt;my_collections/_recipes&lt;/code&gt; で &lt;code&gt;recipes&lt;/code&gt; コレクションを探します。</target>
        </trans-unit>
        <trans-unit id="34856595291510a198d8a2c598244e72a27aefa9" translate="yes" xml:space="preserve">
          <source>Then install your plugins using &lt;code&gt;gem install jekyll-gist jekyll-coffeescript jekyll-assets another-jekyll-plugin&lt;/code&gt;</source>
          <target state="translated">次に、 &lt;code&gt;gem install jekyll-gist jekyll-coffeescript jekyll-assets another-jekyll-plugin&lt;/code&gt; を使用してプラグインをインストールします</target>
        </trans-unit>
        <trans-unit id="8faa11a55493c64b083f4ac4d2adcefdd749dedb" translate="yes" xml:space="preserve">
          <source>Then pass this captured variable into the parameter for the include. Omit the quotation marks around the parameter content because it&amp;rsquo;s no longer a string (it&amp;rsquo;s a variable):</source>
          <target state="translated">次に、このキャプチャされた変数をインクルードのパラメーターに渡します。パラメータの内容は文字列ではないため（変数なので）、引用符を省略します。</target>
        </trans-unit>
        <trans-unit id="83ab59dbbc4c358554d385d4c5f259e467943dc9" translate="yes" xml:space="preserve">
          <source>Then remove references to the theme gem in &lt;code&gt;Gemfile&lt;/code&gt; and configuration. For example, to remove &lt;code&gt;minima&lt;/code&gt;:</source>
          <target state="translated">次に、 &lt;code&gt;Gemfile&lt;/code&gt; と設定でテーマgemへの参照を削除します。たとえば、 &lt;code&gt;minima&lt;/code&gt; を削除するには：</target>
        </trans-unit>
        <trans-unit id="2e55adac0c3eae2f937308198cb0a0a4bc54e03e" translate="yes" xml:space="preserve">
          <source>Then the following two commands will be equivalent:</source>
          <target state="translated">そうすると、以下の2つのコマンドが等価になります。</target>
        </trans-unit>
        <trans-unit id="67ebdd5e11845dd2cbeb2c91125a984928a1dd78" translate="yes" xml:space="preserve">
          <source>There are a number of (optional) extra features that Jekyll supports that you may want to install, depending on how you plan to use Jekyll.</source>
          <target state="translated">Jekyll がサポートしている (オプションの)追加機能の中には、Jekyll をどのように使用するかに応じて、インストールしたいと思うものがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="04ed6a97634dca4b4a7120307ae4efda768d1a9a" translate="yes" xml:space="preserve">
          <source>There are a number of (optional) extra features that Jekyll supports that you may want to install, depending on how you plan to use Jekyll. These extras include LaTeX support, and the use of alternative content rendering engines. Check out &lt;a href=&quot;../extras/index&quot;&gt;the extras page&lt;/a&gt; for more information.</source>
          <target state="translated">Jekyllの使用を計画している方法に応じて、Jekyllがサポートする追加機能がいくつかインストールされている場合があります。これらの追加機能には、LaTeXサポート、および代替コンテンツレンダリングエンジンの使用が含まれます。詳細については、その他の&lt;a href=&quot;../extras/index&quot;&gt;ページ&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="2d83750a8377a08f11e6459875dcd2f2a9f46fc6" translate="yes" xml:space="preserve">
          <source>There are a number of predefined global variables that you can set in the front matter of a page or post.</source>
          <target state="translated">ページや投稿のフロントマターで設定できる定義済みのグローバル変数がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="1ef55e3a67be87ca194f56e2deb8311f04a467cb" translate="yes" xml:space="preserve">
          <source>There are a number of ways to include digital assets in Jekyll. One common solution is to create a folder in the root of the project directory called something like &lt;code&gt;assets&lt;/code&gt;, into which any images, files or other resources are placed. Then, from within any post, they can be linked to using the site&amp;rsquo;s root as the path for the asset to include. Again, this will depend on the way your site&amp;rsquo;s (sub)domain and path are configured, but here are some examples in Markdown of how you could do this using the &lt;code&gt;absolute_url&lt;/code&gt; filter in a post.</source>
          <target state="translated">ジキルにデジタル資産を含めるには、いくつかの方法があります。一般的な解決策の1つは、 &lt;code&gt;assets&lt;/code&gt; などのプロジェクトディレクトリのルートにフォルダーを作成することです。このフォルダーには、画像、ファイル、その他のリソースが配置されます。次に、任意の投稿内から、サイトのルートをアセットに含めるパスとして使用するようにリンクできます。繰り返しますが、これはサイトの（サブ）ドメインとパスの設定方法によって異なりますが、以下は、Markdownの例で、投稿で &lt;code&gt;absolute_url&lt;/code&gt; フィルターを使用してこれを行う方法を示しています。</target>
        </trans-unit>
        <trans-unit id="f96f14c1d552259b2148b69aba308f1370efc4e7" translate="yes" xml:space="preserve">
          <source>There are also a number of ways to easily automate the deployment of a Jekyll site. If you&amp;rsquo;ve got another method that isn&amp;rsquo;t listed below, we&amp;rsquo;d love it if you &lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;contributed&lt;/a&gt; so that everyone else can benefit too.</source>
          <target state="translated">Jekyllサイトのデプロイメントを簡単に自動化する方法もいくつかあります。以下に記載されていない別の方法をお持ちの場合は、他のすべての人にもメリットが得られるように&lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;貢献し&lt;/a&gt;ていただければ幸いです。</target>
        </trans-unit>
        <trans-unit id="146807e417714e9e2073254c117e92509edd27c2" translate="yes" xml:space="preserve">
          <source>There are two flags to be aware of when writing a plugin:</source>
          <target state="translated">プラグインを書く際に注意すべきフラグは2つあります。</target>
        </trans-unit>
        <trans-unit id="3dd124f51fc044867754a3dd18bd8fb0218cfd7f" translate="yes" xml:space="preserve">
          <source>There are two unsupported kramdown options</source>
          <target state="translated">サポートされていないクラムダウンオプションは2つあります。</target>
        </trans-unit>
        <trans-unit id="6aa5efdfcf697a85234731e948e4796ed1c28bf9" translate="yes" xml:space="preserve">
          <source>There is a second argument to &lt;code&gt;highlight&lt;/code&gt; called &lt;code&gt;linenos&lt;/code&gt; that is optional. Including the &lt;code&gt;linenos&lt;/code&gt; argument will force the highlighted code to include line numbers. For instance, the following code block would include line numbers next to each line:</source>
          <target state="translated">オプションの &lt;code&gt;linenos&lt;/code&gt; と呼ばれるものを &lt;code&gt;highlight&lt;/code&gt; する2番目の引数があります。 &lt;code&gt;linenos&lt;/code&gt; 引数を含めると、強調表示されたコードに強制的に行番号が含まれます。たとえば、次のコードブロックには、各行の横に行番号が含まれます。</target>
        </trans-unit>
        <trans-unit id="9379cacfdf8f450069f9019dcf0df2b24352760a" translate="yes" xml:space="preserve">
          <source>There is no need to include the file extension when using the &lt;code&gt;post_url&lt;/code&gt; tag.</source>
          <target state="translated">&lt;code&gt;post_url&lt;/code&gt; タグを使用する場合、ファイル拡張子を含める必要はありません。</target>
        </trans-unit>
        <trans-unit id="e77e75a2453e2de1dc28cb3b4fda516d45c8fbef" translate="yes" xml:space="preserve">
          <source>These are &lt;strong&gt;NON-DESTRUCTIVE&lt;/strong&gt;, i.e. they do not mutate the array, but rather make a copy and mutate that.</source>
          <target state="translated">これらは&lt;strong&gt;NON-DESTRUCTIVEです&lt;/strong&gt;。つまり、配列を変更するのではなく、コピーを作成して変更します。</target>
        </trans-unit>
        <trans-unit id="2ea790e2e9702ab3b6431f805333ccc711575895" translate="yes" xml:space="preserve">
          <source>These are available out-of-the-box to be used in the front matter for a post.</source>
          <target state="translated">これらは、ポストのフロントマターに使用するためのアウトオブボックスが用意されています。</target>
        </trans-unit>
        <trans-unit id="af98bdb42f53272e0eb36ca929385721e1f8e5f6" translate="yes" xml:space="preserve">
          <source>These are for the extra tidbits sometimes necessary to understand Jekyll.</source>
          <target state="translated">これはジキルを理解するために時々必要な豆知識のためのものです。</target>
        </trans-unit>
        <trans-unit id="f9d68c96571c28e82973cca568caf7d88748aaeb" translate="yes" xml:space="preserve">
          <source>These are just a few of the available &lt;a href=&quot;../configuration/index&quot;&gt;configuration options&lt;/a&gt;. Many configuration options can either be specified as flags on the command line, or alternatively (and more commonly) they can be specified in a &lt;code&gt;_config.yml&lt;/code&gt; file at the root of the source directory. Jekyll will automatically use the options from this file when run. For example, if you place the following lines in your &lt;code&gt;_config.yml&lt;/code&gt; file:</source>
          <target state="translated">これらは、使用可能な&lt;a href=&quot;../configuration/index&quot;&gt;構成オプションの&lt;/a&gt;ほんの一部です。多くの構成オプションは、コマンドラインでフラグとして指定するか、または（より一般的には）ソースディレクトリのルートにある &lt;code&gt;_config.yml&lt;/code&gt; ファイルで指定できます。 Jekyllは実行時にこのファイルのオプションを自動的に使用します。たとえば、 &lt;code&gt;_config.yml&lt;/code&gt; ファイルに次の行を配置するとします。</target>
        </trans-unit>
        <trans-unit id="66ef52c471b3cc42c25a66bece432ed476efb47c" translate="yes" xml:space="preserve">
          <source>These are only available in index files, however they can be located in a subdirectory, such as &lt;code&gt;/blog/index.html&lt;/code&gt;.</source>
          <target state="translated">これらはインデックスファイルでのみ使用できますが、 &lt;code&gt;/blog/index.html&lt;/code&gt; などのサブディレクトリに配置できます。</target>
        </trans-unit>
        <trans-unit id="c4dc3f11c1ac89c2cada54f9c5c293beb6d5ec58" translate="yes" xml:space="preserve">
          <source>These are passed to Sass, so any output style options Sass supports are valid here, too.</source>
          <target state="translated">これらはSassに渡されるので、Sassがサポートする出力スタイルのオプションもここで有効です。</target>
        </trans-unit>
        <trans-unit id="1c4993e67432c1ed975d24912e79d8ad34531a1c" translate="yes" xml:space="preserve">
          <source>These are sass partials that can be imported into your &lt;code&gt;main.scss&lt;/code&gt; which will then be processed into a single stylesheet &lt;code&gt;main.css&lt;/code&gt; that defines the styles to be used by your site.</source>
          <target state="translated">これらは、 &lt;code&gt;main.scss&lt;/code&gt; にインポートできるsassパーシャルであり、サイトで使用されるスタイルを定義する単一のスタイルシート &lt;code&gt;main.css&lt;/code&gt; に処理されます。</target>
        </trans-unit>
        <trans-unit id="c201f0804f61a6b376f77b155aa8bdad3c82fd6e" translate="yes" xml:space="preserve">
          <source>These are the partials that can be mixed and matched by your layouts and posts to facilitate reuse. The liquid tag &lt;code&gt;{% include file.ext %}&lt;/code&gt; can be used to include the partial in &lt;code&gt;_includes/file.ext&lt;/code&gt;.</source>
          <target state="translated">これらは、再利用を容易にするために、レイアウトと投稿で混合およびマッチングできるパーシャルです。液体タグ &lt;code&gt;{% include file.ext %}&lt;/code&gt; を使用して、パーシャルを &lt;code&gt;_includes/file.ext&lt;/code&gt; に含めることができます。</target>
        </trans-unit>
        <trans-unit id="e48a8b33d8674a1ca9fdf62738e07642244717a3" translate="yes" xml:space="preserve">
          <source>These are the templates that wrap posts. Layouts are chosen on a post-by-post basis in the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;, which is described in the next section. The liquid tag &lt;code&gt;{{ content }}&lt;/code&gt; is used to inject content into the web page.</source>
          <target state="translated">これらは、投稿をラップするテンプレートです。レイアウトは、次のセクションで説明する&lt;a href=&quot;../frontmatter/index&quot;&gt;YAMLフロントマター&lt;/a&gt;でポストごとに選択されます。液体タグ &lt;code&gt;{{ content }}&lt;/code&gt; は、コンテンツをWebページに挿入するために使用されます。</target>
        </trans-unit>
        <trans-unit id="61f960e26e297f0b81e67da8900036fc424775ed" translate="yes" xml:space="preserve">
          <source>These are tips and tricks that will help you be a Jekyll wizard!</source>
          <target state="translated">ジキルの魔法使いになるためのヒントをご紹介します!</target>
        </trans-unit>
        <trans-unit id="0a9da44a678759f875f784435732218782b2bf0c" translate="yes" xml:space="preserve">
          <source>These basics should be enough to get you started writing your first posts. When you&amp;rsquo;re ready to dig into what else is possible, you might be interested in doing things like &lt;a href=&quot;../permalinks/index&quot;&gt;customizing post permalinks&lt;/a&gt; or using &lt;a href=&quot;../variables/index&quot;&gt;custom variables&lt;/a&gt; in your posts and elsewhere on your site.</source>
          <target state="translated">これらの基本事項は、最初の投稿を書き始めるのに十分なはずです。他に何ができるかを掘り下げる準備ができたら、&lt;a href=&quot;../permalinks/index&quot;&gt;投稿のパーマリンクをカスタマイズ&lt;/a&gt;したり、投稿やサイトの他の場所で&lt;a href=&quot;../variables/index&quot;&gt;カスタム変数&lt;/a&gt;を使用したりすることに興味を持つかもしれません。</target>
        </trans-unit>
        <trans-unit id="1a01c04c0c98b629a302fb8419fe9e7cc584674d" translate="yes" xml:space="preserve">
          <source>They&amp;rsquo;re accessible in Liquid via &lt;code&gt;site.static_files&lt;/code&gt; and contain the following metadata:</source>
          <target state="translated">それらは、 &lt;code&gt;site.static_files&lt;/code&gt; を介してLiquidでアクセスでき、次のメタデータを含みます。</target>
        </trans-unit>
        <trans-unit id="3630ecb269522d0364ac7f6a9fd7c7752f37804a" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;https://wiki.gentoo.org/wiki/SSH#Passwordless_Authentication&quot;&gt;process&lt;/a&gt; is described in several places online. What is different from the typical approach is to put the restriction to certificate-based authorization in &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt;. Then, launch &lt;code&gt;rrsync&lt;/code&gt; and supply it with the folder it shall have read-write access to:</source>
          <target state="translated">この&lt;a href=&quot;https://wiki.gentoo.org/wiki/SSH#Passwordless_Authentication&quot;&gt;プロセス&lt;/a&gt;は、オンラインのいくつかの場所で説明されています。通常のアプローチと異なるのは、証明書ベースの認証に &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; 制限を加えることです。次に、 &lt;code&gt;rrsync&lt;/code&gt; を起動し、読み取り/書き込みアクセス権を持つフォルダーを指定します。</target>
        </trans-unit>
        <trans-unit id="fa80c5aee029bd0c3075789d5f91e87a1d22fcac" translate="yes" xml:space="preserve">
          <source>This allows theme creators to ship a default &lt;code&gt;/assets/styles.scss&lt;/code&gt; file which their layouts can depend on as &lt;code&gt;/assets/styles.css&lt;/code&gt;.</source>
          <target state="translated">これにより、テーマ作成者は、レイアウトが &lt;code&gt;/assets/styles.css&lt;/code&gt; として依存できるデフォルトの &lt;code&gt;/assets/styles.scss&lt;/code&gt; ファイルを出荷できます。</target>
        </trans-unit>
        <trans-unit id="53301bbfaf33d1de30873f16d21d2b996040f57e" translate="yes" xml:space="preserve">
          <source>This assumes that your Jekyll site has a folder path of &lt;code&gt;assets/img&lt;/code&gt; where you have images (static files) stored. When Jekyll builds the site, it will treat each image as if it had the front matter value of &lt;code&gt;image: true&lt;/code&gt;.</source>
          <target state="translated">これは、Jekyllサイトに、イメージ（静的ファイル）が保存されている &lt;code&gt;assets/img&lt;/code&gt; のフォルダーパスがあることを前提としています。Jekyllがサイトを構築するとき、各画像は、画像の前付け値が &lt;code&gt;image: true&lt;/code&gt; であるかのように扱われます。</target>
        </trans-unit>
        <trans-unit id="216be0657494df3f67f7a6d9b58c2dbbac55d4b1" translate="yes" xml:space="preserve">
          <source>This can be fixed by removing the following line from your &lt;code&gt;_config.yml&lt;/code&gt; file:</source>
          <target state="translated">これは、 &lt;code&gt;_config.yml&lt;/code&gt; ファイルから次の行を削除することで修正できます。</target>
        </trans-unit>
        <trans-unit id="1b23f6f3027ec80c3b0b1b876f9297458e1fd40d" translate="yes" xml:space="preserve">
          <source>This data can be accessed via &lt;code&gt;site.data.members&lt;/code&gt; (notice that the filename determines the variable name).</source>
          <target state="translated">このデータには、 &lt;code&gt;site.data.members&lt;/code&gt; からアクセスできます（ファイル名によって変数名が決まることに注意してください）。</target>
        </trans-unit>
        <trans-unit id="c3325fdfa0b2bdaa04885b31a95aff31f1dbf4cd" translate="yes" xml:space="preserve">
          <source>This entire guide is open-source. Go ahead and &lt;a href=&quot;https://github.com/jekyll/jekyll/edit/master/docs/_docs/continuous-integration/buddyworks.md&quot;&gt;edit it&lt;/a&gt; if you want to expand it or have a fix or &lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;ask for help&lt;/a&gt; if you run into trouble and need assistance. Buddy also has an &lt;a href=&quot;http://forum.buddy.works/&quot;&gt;online community&lt;/a&gt; for help.</source>
          <target state="translated">このガイド全体はオープンソースです。先に行くと&lt;a href=&quot;https://github.com/jekyll/jekyll/edit/master/docs/_docs/continuous-integration/buddyworks.md&quot;&gt;、それを編集し&lt;/a&gt;、あなたがそれを拡張したり修正を持っているか、したい場合は&lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;助けを求める&lt;/a&gt;あなたは悩みやニーズの支援に実行する場合。バディには、ヘルプのための&lt;a href=&quot;http://forum.buddy.works/&quot;&gt;オンラインコミュニティ&lt;/a&gt;もあります。</target>
        </trans-unit>
        <trans-unit id="cb21565992e9258b77fe0362e0c5a49529dde160" translate="yes" xml:space="preserve">
          <source>This entire guide is open-source. Go ahead and &lt;a href=&quot;https://github.com/jekyll/jekyll/edit/master/docs/_docs/continuous-integration/circleci.md&quot;&gt;edit it&lt;/a&gt; if you have a fix or &lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;ask for help&lt;/a&gt; if you run into trouble and need some help. CircleCI also has an &lt;a href=&quot;https://discuss.circleci.com&quot;&gt;online community&lt;/a&gt; for help.</source>
          <target state="translated">このガイド全体はオープンソースです。先に行くと&lt;a href=&quot;https://github.com/jekyll/jekyll/edit/master/docs/_docs/continuous-integration/circleci.md&quot;&gt;、それを編集し&lt;/a&gt;、あなたが修正を持っている場合や、&lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;助けを求める&lt;/a&gt;あなたがトラブルに実行し、いくつかの助けが必要な場合。CircleCIには、ヘルプのための&lt;a href=&quot;https://discuss.circleci.com&quot;&gt;オンラインコミュニティ&lt;/a&gt;もあります。</target>
        </trans-unit>
        <trans-unit id="8d77787605734904351cea537ef697e3e6e69285" translate="yes" xml:space="preserve">
          <source>This entire guide is open-source. Go ahead and &lt;a href=&quot;https://github.com/jekyll/jekyll/edit/master/docs/_docs/continuous-integration/travis-ci.md&quot;&gt;edit it&lt;/a&gt; if you have a fix or &lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;ask for help&lt;/a&gt; if you run into trouble and need some help.</source>
          <target state="translated">このガイド全体はオープンソースです。先に行くと&lt;a href=&quot;https://github.com/jekyll/jekyll/edit/master/docs/_docs/continuous-integration/travis-ci.md&quot;&gt;、それを編集し&lt;/a&gt;、あなたが修正を持っている場合や、&lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;助けを求める&lt;/a&gt;あなたがトラブルに実行し、いくつかの助けが必要な場合。</target>
        </trans-unit>
        <trans-unit id="b0244afb911a7f1264000eb67c35f2083c411511" translate="yes" xml:space="preserve">
          <source>This error can occur during the installation of &lt;code&gt;jekyll-coffeescript&lt;/code&gt; when you don&amp;rsquo;t have a proper JavaScript runtime. To solve this, either install &lt;code&gt;execjs&lt;/code&gt; and &lt;code&gt;therubyracer&lt;/code&gt; gems, or install &lt;code&gt;nodejs&lt;/code&gt;. Check out &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/2327&quot;&gt;issue #2327&lt;/a&gt; for more info.</source>
          <target state="translated">このエラーは、適切なJavaScriptランタイムがない場合に &lt;code&gt;jekyll-coffeescript&lt;/code&gt; のインストール中に発生する可能性があります。これを解決するには、 &lt;code&gt;execjs&lt;/code&gt; と &lt;code&gt;therubyracer&lt;/code&gt; gemsをインストールするか、nodejsをインストールし &lt;code&gt;nodejs&lt;/code&gt; 。詳細については、&lt;a href=&quot;https://github.com/jekyll/jekyll/issues/2327&quot;&gt;問題＃2327&lt;/a&gt;を確認してください。</target>
        </trans-unit>
        <trans-unit id="6f259ad2809a25e2c6f7dce9a26cae6c4aea9e77" translate="yes" xml:space="preserve">
          <source>This file is used to configure your Travis builds. Because Jekyll is built with Ruby and requires RubyGems to install, we use the Ruby language build environment. Below is a sample &lt;code&gt;.travis.yml&lt;/code&gt; file, followed by an explanation of each line.</source>
          <target state="translated">このファイルは、Travisビルドを構成するために使用されます。JekyllはRubyでビルドされており、RubyGemsをインストールする必要があるため、Ruby言語ビルド環境を使用します。以下は、サンプルの &lt;code&gt;.travis.yml&lt;/code&gt; ファイルで、その後に各行の説明が続きます。</target>
        </trans-unit>
        <trans-unit id="cdc9fae1fa96bc13264f05057d3358fa52e7495a" translate="yes" xml:space="preserve">
          <source>This flag determines what order the plugin is loaded in. Valid values are: &lt;code&gt;:lowest&lt;/code&gt;, &lt;code&gt;:low&lt;/code&gt;, &lt;code&gt;:normal&lt;/code&gt;, &lt;code&gt;:high&lt;/code&gt;, and &lt;code&gt;:highest&lt;/code&gt;. Highest priority matches are applied first, lowest priority are applied last.</source>
          <target state="translated">このフラグは、プラグインがロードされる順序を決定します。有効な値は、 &lt;code&gt;:low&lt;/code&gt; &lt;code&gt;:lowest&lt;/code&gt; 、：low、 &lt;code&gt;:normal&lt;/code&gt; 、 &lt;code&gt;:high&lt;/code&gt; 、および &lt;code&gt;:highest&lt;/code&gt; です。最も高い優先度の一致が最初に適用され、最も低い優先度が最後に適用されます。</target>
        </trans-unit>
        <trans-unit id="ae33398911b55db1271fa022aa124a696b59270c" translate="yes" xml:space="preserve">
          <source>This gem is also needed in the github-pages and to get it running on Windows x64 we have to install a few things.</source>
          <target state="translated">このgemはgithub-pagesにも必要で、Windows x64で動作させるためにはいくつかのものをインストールしなければなりません。</target>
        </trans-unit>
        <trans-unit id="038ffeb30c8743ad648bc204325c5f82962f83b3" translate="yes" xml:space="preserve">
          <source>This helps Jekyll keep track of which files have not been modified since the site was last built, and which files will need to be regenerated on the next build. This file will not be included in the generated site. It&amp;rsquo;s probably a good idea to add this to your &lt;code&gt;.gitignore&lt;/code&gt; file.</source>
          <target state="translated">これにより、Jekyllは、サイトが最後に構築されてから変更されていないファイルと、次回の構築時に再生成する必要があるファイルを追跡できます。このファイルは、生成されたサイトには含まれません。これを &lt;code&gt;.gitignore&lt;/code&gt; ファイルに追加することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="56f4d0c21943117e7ec6821601e18c3da7665ef5" translate="yes" xml:space="preserve">
          <source>This include contains 5 parameters:</source>
          <target state="translated">このインクルードには5つのパラメータが含まれています。</target>
        </trans-unit>
        <trans-unit id="bd77158f525bc9e4820b4d861c299e9505a03c63" translate="yes" xml:space="preserve">
          <source>This is a bit cumbersome at first, but is easier than a big &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="translated">これは最初は少し面倒ですが、大きな &lt;code&gt;for&lt;/code&gt; ループよりも簡単です。</target>
        </trans-unit>
        <trans-unit id="c9b1ef1972d4f0773444af1f3e1f52fc2e030c90" translate="yes" xml:space="preserve">
          <source>This is a more complex generator that generates new pages:</source>
          <target state="translated">これは、新しいページを生成する、より複雑なジェネレータです。</target>
        </trans-unit>
        <trans-unit id="f25e800aa9957f9798c94aa0b5dddaf75e8fdcda" translate="yes" xml:space="preserve">
          <source>This is where the generated site will be placed (by default) once Jekyll is done transforming it. It&amp;rsquo;s probably a good idea to add this to your &lt;code&gt;.gitignore&lt;/code&gt; file.</source>
          <target state="translated">これは、Jekyllによる変換が完了すると、生成されたサイトが（デフォルトで）配置される場所です。これを &lt;code&gt;.gitignore&lt;/code&gt; ファイルに追加することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="1b2092eeddba25d8574bb62a82e0a71de1900860" translate="yes" xml:space="preserve">
          <source>This line tells Travis to use a Ruby build container. It gives your script access to Bundler, RubyGems, and a Ruby runtime.</source>
          <target state="translated">この行は Travis に Ruby ビルドコンテナを使うように指示しています。これにより、あなたのスクリプトは Bundler,RubyGems,Ruby ランタイムにアクセスできるようになります。</target>
        </trans-unit>
        <trans-unit id="a4a2fa92a7c34862d2b26010b981c91cfe31512d" translate="yes" xml:space="preserve">
          <source>This method accepts one parameter, the &lt;code&gt;&lt;a href=&quot;https://github.com/jekyll/mercenary#readme&quot;&gt;Mercenary::Program&lt;/a&gt;&lt;/code&gt; instance, which is the Jekyll program itself. Upon the program, commands may be created using the above syntax. For more details, visit the Mercenary repository on GitHub.com.</source>
          <target state="translated">このメソッドは、1つのパラメーター、Jerkyllプログラム自体である &lt;code&gt;&lt;a href=&quot;https://github.com/jekyll/mercenary#readme&quot;&gt;Mercenary::Program&lt;/a&gt;&lt;/code&gt; インスタンスを受け入れます。プログラムでは、上記の構文を使用してコマンドを作成できます。詳細については、GitHub.comのMercenaryリポジトリにアクセスしてください。</target>
        </trans-unit>
        <trans-unit id="bb71222041e70954c971ff33c4c3d5fda56aad01" translate="yes" xml:space="preserve">
          <source>This powerful feature allows you to avoid repetition in your templates and to set site specific options without changing &lt;code&gt;_config.yml&lt;/code&gt;.</source>
          <target state="translated">この強力な機能により、 &lt;code&gt;_config.yml&lt;/code&gt; を変更せずに、テンプレートでの繰り返しを避け、サイト固有のオプションを設定できます。</target>
        </trans-unit>
        <trans-unit id="64e2a1b4f28b25a884d049f121dd258652dfd658" translate="yes" xml:space="preserve">
          <source>This returns the location of the gem-based theme files. For example, the Minima theme&amp;rsquo;s files might be located in &lt;code&gt;/usr/local/lib/ruby/gems/2.3.0/gems/minima-2.1.0&lt;/code&gt; on macOS.</source>
          <target state="translated">これは、gemベースのテーマファイルの場所を返します。たとえば、Minimaテーマのファイルは、macOSの &lt;code&gt;/usr/local/lib/ruby/gems/2.3.0/gems/minima-2.1.0&lt;/code&gt; にある場合があります。</target>
        </trans-unit>
        <trans-unit id="7a67de107246be6963abdc850b25005e0b42fd66" translate="yes" xml:space="preserve">
          <source>This section is part of an article written by &lt;a href=&quot;https://jwillmer.de/blog/tutorial/how-to-install-jekyll-and-pages-gem-on-windows-10-x46&quot;&gt;Jens Willmer&lt;/a&gt;. To follow the instructions you need to have &lt;a href=&quot;https://chocolatey.org/install&quot;&gt;Chocolatey&lt;/a&gt; installed on your system. If you already have a version of Ruby installed you need to uninstall it before you can continue.</source>
          <target state="translated">このセクションは、&lt;a href=&quot;https://jwillmer.de/blog/tutorial/how-to-install-jekyll-and-pages-gem-on-windows-10-x46&quot;&gt;Jens Willmer&lt;/a&gt;によって書かれた記事の一部です。指示に従うには、システムに&lt;a href=&quot;https://chocolatey.org/install&quot;&gt;Chocolateyを&lt;/a&gt;インストールする必要があります。Rubyのバージョンがすでにインストールされている場合は、続行する前にアンインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="7ead5acabba1ee72fdd0d4f297f16cf7715aaf58" translate="yes" xml:space="preserve">
          <source>This site aims to be a comprehensive guide to Jekyll. We&amp;rsquo;ll cover topics such as getting your site up and running, creating and managing your content, customizing the way your site works and looks, deploying to various environments, and give you some advice on participating in the future development of Jekyll itself.</source>
          <target state="translated">このサイトは、ジキルへの包括的なガイドになることを目的としています。サイトの稼働、コンテンツの作成と管理、サイトの動作と外観のカスタマイズ、さまざまな環境へのデプロイなどのトピックを取り上げ、Jekyll自体の将来の開発への参加に関するアドバイスを提供します。</target>
        </trans-unit>
        <trans-unit id="0e5683b6a844211348d94454fa5fd0a7ef8c5cef" translate="yes" xml:space="preserve">
          <source>This step is recommended if you use these instructions to deploy your site. If you put the &lt;code&gt;deploy&lt;/code&gt; script in the root folder of your project, Jekyll will copy it to the output folder. This behavior can be changed in &lt;code&gt;_config.yml&lt;/code&gt;.</source>
          <target state="translated">これらの手順を使用してサイトを展開する場合は、この手順が推奨されます。あなたが入れた場合は &lt;code&gt;deploy&lt;/code&gt; 、プロジェクトのルートフォルダにスクリプトを、ジキルは、出力フォルダにコピーします。この動作は &lt;code&gt;_config.yml&lt;/code&gt; で変更できます。</target>
        </trans-unit>
        <trans-unit id="f8f823f2b31a8c8230ed1be9ae884bd16fed8abb" translate="yes" xml:space="preserve">
          <source>This way you can preview your site locally from the site root on localhost, but when GitHub generates your pages from the &lt;code&gt;gh-pages&lt;/code&gt; branch all the URLs will resolve properly.</source>
          <target state="translated">この方法では、ローカルホストのサイトルートからローカルでサイトをプレビューできますが、GitHubが &lt;code&gt;gh-pages&lt;/code&gt; ブランチからページを生成すると、すべてのURLが正しく解決されます。</target>
        </trans-unit>
        <trans-unit id="51b525b93972bd810e1a544085d5bc21833d5499" translate="yes" xml:space="preserve">
          <source>This will either lead to parsing errors, or Jekyll will revert to the default settings. Use spaces instead.</source>
          <target state="translated">これでは解析エラーが発生するか、Jekyll がデフォルト設定に戻ってしまいます。代わりにスペースを使用してください。</target>
        </trans-unit>
        <trans-unit id="d0a86d650d438ca84094dca56d574a2b47bc60af" translate="yes" xml:space="preserve">
          <source>This will install the latest pre-release. If you want a particular pre-release, use the &lt;code&gt;-v&lt;/code&gt; switch to indicate the version you&amp;rsquo;d like to install:</source>
          <target state="translated">これにより、最新のプレリリースがインストールされます。特定のプレリリースが必要な場合は、 &lt;code&gt;-v&lt;/code&gt; スイッチを使用して、インストールするバージョンを指定します。</target>
        </trans-unit>
        <trans-unit id="440a7a6465d65bffe97f1212df23b68249f10d99" translate="yes" xml:space="preserve">
          <source>This will produce a file for each document in the collection. For example, if you have &lt;code&gt;_my_collection/some_subdir/some_doc.md&lt;/code&gt;, it will be rendered using Liquid and the Markdown converter of your choice and written out to &lt;code&gt;&amp;lt;dest&amp;gt;/my_collection/some_subdir/some_doc.html&lt;/code&gt;.</source>
          <target state="translated">これにより、コレクション内の各ドキュメントのファイルが生成されます。たとえば、 &lt;code&gt;_my_collection/some_subdir/some_doc.md&lt;/code&gt; がある場合、選択したLiquidとMarkdownコンバーターを使用してレンダリングされ、 &lt;code&gt;&amp;lt;dest&amp;gt;/my_collection/some_subdir/some_doc.html&lt;/code&gt; に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="0f1993494132bc33d83fa74caadeb88e0612e1b5" translate="yes" xml:space="preserve">
          <source>This will read in &lt;code&gt;blog/index.html&lt;/code&gt;, send it each pagination page in Liquid as &lt;code&gt;paginator&lt;/code&gt; and write the output to &lt;code&gt;blog/page:num/&lt;/code&gt;, where &lt;code&gt;:num&lt;/code&gt; is the pagination page number, starting with &lt;code&gt;2&lt;/code&gt;. If a site has 12 posts and specifies &lt;code&gt;paginate: 5&lt;/code&gt;, Jekyll will write &lt;code&gt;blog/index.html&lt;/code&gt; with the first 5 posts, &lt;code&gt;blog/page2/index.html&lt;/code&gt; with the next 5 posts and &lt;code&gt;blog/page3/index.html&lt;/code&gt; with the last 2 posts into the destination directory.</source>
          <target state="translated">これが読み込まれます &lt;code&gt;blog/index.html&lt;/code&gt; 、のような液体で、それを各ページネーションページを送信 &lt;code&gt;paginator&lt;/code&gt; とに出力を書き込む &lt;code&gt;blog/page:num/&lt;/code&gt; 、どこ &lt;code&gt;:num&lt;/code&gt; が始まる、改ページのページ番号である &lt;code&gt;2&lt;/code&gt; 。サイトに12の投稿があり、 &lt;code&gt;paginate: 5&lt;/code&gt; を指定している場合、Jekyllは最初の5つの投稿で &lt;code&gt;blog/page2/index.html&lt;/code&gt; &lt;code&gt;blog/index.html&lt;/code&gt; を書き込み、次の5つの投稿でblog / page2 / index.htmlを書き込み、最後の2 つの投稿で &lt;code&gt;blog/page3/index.html&lt;/code&gt; を書き込みます宛先ディレクトリに投稿します。</target>
        </trans-unit>
        <trans-unit id="612c181fd607485719c1ef224631b9be19aa1cc9" translate="yes" xml:space="preserve">
          <source>Throughout this guide there are a number of small-but-handy pieces of information that can make using Jekyll easier, more interesting, and less hazardous. Here&amp;rsquo;s what to look out for.</source>
          <target state="translated">このガイド全体を通して、Jekyllをより簡単に、より興味深く、危険性の少ない方法で使用できるようにする、小さくても便利な情報がいくつかあります。ここに注意すべき点があります。</target>
        </trans-unit>
        <trans-unit id="b431206e6826553cced9dee006e46ba2f2aed40d" translate="yes" xml:space="preserve">
          <source>Time-Zone Management</source>
          <target state="translated">タイムゾーン管理</target>
        </trans-unit>
        <trans-unit id="06b16ed0febe4ef7c84e9390785dd0f675e310de" translate="yes" xml:space="preserve">
          <source>Tips for working with GitHub Pages Integration</source>
          <target state="translated">GitHub ページの統合作業のヒント</target>
        </trans-unit>
        <trans-unit id="c432694a81177149b1d4da370814c7a53062af28" translate="yes" xml:space="preserve">
          <source>Title from the document&amp;rsquo;s filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;slug&lt;/code&gt; YAML front matter.</source>
          <target state="translated">ドキュメントのファイル名からのタイトル。ドキュメントの &lt;code&gt;slug&lt;/code&gt; YAML前付けを介してオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="81bdb9df3d2709a87043ff90bf6e3e808ed8622e" translate="yes" xml:space="preserve">
          <source>To create a new post, all you need to do is create a file in the &lt;code&gt;_posts&lt;/code&gt; directory. How you name files in this folder is important. Jekyll requires blog post files to be named according to the following format:</source>
          <target state="translated">新しい投稿を作成するには、 &lt;code&gt;_posts&lt;/code&gt; ディレクトリにファイルを作成するだけです。このフォルダ内のファイルに名前を付ける方法は重要です。Jekyllでは、ブログ投稿ファイルに次の形式に従って名前を付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="ef9b29e1874a779ac7ad8d7399f618434814f503" translate="yes" xml:space="preserve">
          <source>To do this, copy the files from the theme gem&amp;rsquo;s directory into your Jekyll site directory. (For example, copy them to &lt;code&gt;/myblog&lt;/code&gt; if you created your Jekyll site at &lt;code&gt;/myblog&lt;/code&gt;. See the previous section for details.)</source>
          <target state="translated">これを行うには、テーマgemのディレクトリからJekyllサイトディレクトリにファイルをコピーします。（例えば、それらをコピー &lt;code&gt;/myblog&lt;/code&gt; あなたがであなたのジキルサイトを作成した場合 &lt;code&gt;/myblog&lt;/code&gt; 。詳細については、前のセクションを参照してください。）</target>
        </trans-unit>
        <trans-unit id="83bb96ed5b2b2aff93e52b3e83bebc19227c9cea" translate="yes" xml:space="preserve">
          <source>To enable Coffeescript in Jekyll 3.0 and up you must</source>
          <target state="translated">Jekyll 3.0 以降で Coffeescript を有効にするには、次のようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="a53782411360ad9a948a3a450fb9ce0d1ff8df2f" translate="yes" xml:space="preserve">
          <source>To enable pagination for posts on your blog, add a line to the &lt;code&gt;_config.yml&lt;/code&gt; file that specifies how many items should be displayed per page:</source>
          <target state="translated">ブログの投稿のページネーションを有効にするには、 &lt;code&gt;_config.yml&lt;/code&gt; ファイルに1ページに表示するアイテム数を指定する行を追加します。</target>
        </trans-unit>
        <trans-unit id="047e95e3698efd45e38c9b7ce91d30d358677a2d" translate="yes" xml:space="preserve">
          <source>To have a remote server handle the deploy for you every time you push changes using Git, you can create a user account which has all the public keys that are authorized to deploy in its &lt;code&gt;authorized_keys&lt;/code&gt; file. With that in place, setting up the post-receive hook is done as follows:</source>
          <target state="translated">Gitを使用して変更をプッシュするたびにリモートサーバーがデプロイを処理するようにするには、 &lt;code&gt;authorized_keys&lt;/code&gt; ファイルでデプロイが許可されているすべての公開鍵を持つユーザーアカウントを作成できます。これを設定すると、ポスト受信フックの設定は次のようになります。</target>
        </trans-unit>
        <trans-unit id="4ee6034df559d0a7b7cb1a920b3bd98e6b67503e" translate="yes" xml:space="preserve">
          <source>To install RubyGems on Gentoo:</source>
          <target state="translated">GentooにRubyGemsをインストールする。</target>
        </trans-unit>
        <trans-unit id="144010babb6f88bc59b04eac03336cb9bcfa9a7b" translate="yes" xml:space="preserve">
          <source>To install a gem-based theme:</source>
          <target state="translated">gemベースのテーマをインストールするには</target>
        </trans-unit>
        <trans-unit id="8ddec83a099837ef2ffef9702c0f09c49574da72" translate="yes" xml:space="preserve">
          <source>To install the Jekyll site into the directory you&amp;rsquo;re currently in, run &lt;code&gt;jekyll new .&lt;/code&gt; If the existing directory isn&amp;rsquo;t empty, you can pass the &lt;code&gt;--force&lt;/code&gt; option with &lt;code&gt;jekyll new . --force&lt;/code&gt;.</source>
          <target state="translated">Jekyllサイトを現在のディレクトリにインストールするには、 &lt;code&gt;jekyll new .&lt;/code&gt; 実行します。既存のディレクトリが空でない場合は、渡すことができ &lt;code&gt;--force&lt;/code&gt; とオプション &lt;code&gt;jekyll new . --force&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94bf36b23d7d29653294ac58a57b2c27a240e503" translate="yes" xml:space="preserve">
          <source>To learn about other parameters you can include with &lt;code&gt;jekyll new&lt;/code&gt;, type &lt;code&gt;jekyll new --help&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;jekyll new&lt;/code&gt; に含めることができる他のパラメーターについて学習するには、「 &lt;code&gt;jekyll new --help&lt;/code&gt; 」と入力します。</target>
        </trans-unit>
        <trans-unit id="50ef509598509a60b544bb91aba55e636a523571" translate="yes" xml:space="preserve">
          <source>To link to a post, a page, collection item, or file, the &lt;code&gt;link&lt;/code&gt; tag will generate the correct permalink URL for the path you specify. For example, if you use the &lt;code&gt;link&lt;/code&gt; tag to link to &lt;code&gt;mypage.html&lt;/code&gt;, even if you change your permalink style to include the file extension or omit it, the URL formed by the &lt;code&gt;link&lt;/code&gt; tag will always be valid.</source>
          <target state="translated">投稿、ページ、コレクションアイテム、またはファイルに &lt;code&gt;link&lt;/code&gt; するために、リンクタグは指定したパスの正しいパーマリンクURLを生成します。たとえば、 &lt;code&gt;link&lt;/code&gt; タグを使用して &lt;code&gt;mypage.html&lt;/code&gt; にリンクする場合、パーマリンクスタイルを変更してファイル拡張子を含めるか省略しても、 &lt;code&gt;link&lt;/code&gt; タグによって形成されるURL は常に有効です。</target>
        </trans-unit>
        <trans-unit id="c54cc900bc68bc2b61da82b4ab2b49f0ad0b873a" translate="yes" xml:space="preserve">
          <source>To locate a theme&amp;rsquo;s files on your computer:</source>
          <target state="translated">コンピューターでテーマのファイルを見つけるには：</target>
        </trans-unit>
        <trans-unit id="fc226c346fa88c595dd431ec607f8a0e6ffeb0b1" translate="yes" xml:space="preserve">
          <source>To modify any stylesheet you must take the extra step of also copying the main sass file (&lt;code&gt;_sass/minima.scss&lt;/code&gt; in the Minima theme) into the &lt;code&gt;_sass&lt;/code&gt; directory in your site&amp;rsquo;s source.</source>
          <target state="translated">スタイルシートを変更するには、メインのsassファイル（Minimaテーマの &lt;code&gt;_sass/minima.scss&lt;/code&gt; ）をサイトのソースの &lt;code&gt;_sass&lt;/code&gt; ディレクトリにコピーするという追加の手順を実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="ce005eacb3214730c99e6f37f4b8b74ffd712932" translate="yes" xml:space="preserve">
          <source>To preview unpublished pages, simply run `jekyll serve` or `jekyll build` with the `--unpublished` switch. Jekyll also has a handy &lt;a href=&quot;../drafts/index&quot;&gt;drafts&lt;/a&gt; feature tailored specifically for blog posts.</source>
          <target state="translated">未公開のページをプレビューするには、 `--unpublished`スイッチを指定して` jekyll serve`または `jekyll build`を実行するだけです。Jekyllには、ブログ投稿用に特別に調整された便利な&lt;a href=&quot;../drafts/index&quot;&gt;ドラフト&lt;/a&gt;機能もあります。</target>
        </trans-unit>
        <trans-unit id="4bb59665c8baa71c57b533a28e3fde52f64a7f7d" translate="yes" xml:space="preserve">
          <source>To preview your site with drafts, simply run &lt;code&gt;jekyll serve&lt;/code&gt; or &lt;code&gt;jekyll build&lt;/code&gt; with the &lt;code&gt;--drafts&lt;/code&gt; switch. Each will be assigned the value modification time of the draft file for its date, and thus you will see currently edited drafts as the latest posts.</source>
          <target state="translated">下書きでサイトをプレビュー &lt;code&gt;jekyll build&lt;/code&gt; は、 &lt;code&gt;--drafts&lt;/code&gt; スイッチを指定してjekyll &lt;code&gt;jekyll serve&lt;/code&gt; またはjekyll buildを実行するだけです。それぞれにその日付のドラフトファイルの値変更時刻が割り当てられるため、現在編集されているドラフトが最新の投稿として表示されます。</target>
        </trans-unit>
        <trans-unit id="2527d6dd613a39729e540bb4f1a6a4933638060a" translate="yes" xml:space="preserve">
          <source>To preview your theme as you&amp;rsquo;re authoring it, it may be helpful to add dummy content in, for example, &lt;code&gt;/index.html&lt;/code&gt; and &lt;code&gt;/page.html&lt;/code&gt; files. This will allow you to use the &lt;code&gt;jekyll build&lt;/code&gt; and &lt;code&gt;jekyll serve&lt;/code&gt; commands to preview your theme, just as you&amp;rsquo;d preview a Jekyll site.</source>
          <target state="translated">オーサリング中にテーマをプレビューするには、たとえば &lt;code&gt;/index.html&lt;/code&gt; や &lt;code&gt;/page.html&lt;/code&gt; ファイルにダミーコンテンツを追加すると便利です。これにより、Jekyllサイトをプレビュー &lt;code&gt;jekyll build&lt;/code&gt; と &lt;code&gt;jekyll serve&lt;/code&gt; ように、jekyll buildコマンドとjekyll serveコマンドを使用してテーマをプレビューできます。</target>
        </trans-unit>
        <trans-unit id="3d7e803d275c82210ab0e5787cd20529c67fd9f4" translate="yes" xml:space="preserve">
          <source>To release a new version of your theme, update the version number in the gemspec file, ( &lt;code&gt;jekyll-theme-awesome.gemspec&lt;/code&gt; in this example ), and then repeat Steps 1 - 3 above. We recommend that you follow &lt;a href=&quot;http://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt; while bumping your theme-version.</source>
          <target state="translated">テーマの新しいバージョンをリリースするには、gemspecファイルのバージョン番号（この例では &lt;code&gt;jekyll-theme-awesome.gemspec&lt;/code&gt; ）を更新してから、上記の手順1〜3を繰り返します。テーマ&lt;a href=&quot;http://semver.org/&quot;&gt;バージョン&lt;/a&gt;をバンプする間は、セマンティックバージョニングに従うことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="78791e166dc8019939a124cb96cae9ec8181d13b" translate="yes" xml:space="preserve">
          <source>To remedy some of these shortfalls, putting &lt;code&gt;regenerate: true&lt;/code&gt; in the front-matter of a document will force Jekyll to regenerate it regardless of whether it has been modified. Note that this will generate the specified document only; references to other documents&amp;rsquo; contents will not work since they won&amp;rsquo;t be re-rendered.</source>
          <target state="translated">これらの不足の一部を解決するには、ドキュメントの前付けに &lt;code&gt;regenerate: true&lt;/code&gt; すると、変更されているかどうかに関係なく、Jekyllがドキュメントを強制的に再生成します。これは指定されたドキュメントのみを生成することに注意してください。他のドキュメントのコンテンツへの参照は、再レンダリングされないため機能しません。</target>
        </trans-unit>
        <trans-unit id="15ae0b67f09259f2d22e8353fd7ddcc782a0de42" translate="yes" xml:space="preserve">
          <source>To render a code block with syntax highlighting, surround your code as follows:</source>
          <target state="translated">コードブロックをシンタックスハイライトでレンダリングするには、次のようにコードを囲みます。</target>
        </trans-unit>
        <trans-unit id="0140d190cef30ac07da886a289bc7350ec5109ff" translate="yes" xml:space="preserve">
          <source>To replace layouts or includes in your theme, make a copy in your &lt;code&gt;_layouts&lt;/code&gt; or &lt;code&gt;_includes&lt;/code&gt; directory of the specific file you wish to modify, or create the file from scratch giving it the same name as the file you wish to override.</source>
          <target state="translated">レイアウトまたはテーマのインクルードを置き換えるには、変更する特定のファイルの &lt;code&gt;_layouts&lt;/code&gt; または &lt;code&gt;_includes&lt;/code&gt; ディレクトリにコピーを作成するか、オーバーライドするファイルと同じ名前を付けて、最初からファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="144371a46b19101623955b58d3ec9bb40e6f19b2" translate="yes" xml:space="preserve">
          <source>To safeguard situations where users don&amp;rsquo;t supply a value for the parameter, you can use &lt;a href=&quot;https://shopify.github.io/liquid/filters/default/&quot;&gt;Liquid&amp;rsquo;s default filter&lt;/a&gt;.</source>
          <target state="translated">ユーザーがパラメーターの値を指定しない状況を保護するために、&lt;a href=&quot;https://shopify.github.io/liquid/filters/default/&quot;&gt;Liquidのデフォルトフィルターを&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="ce9499e26000537fbb3c8105e87098127ffd35f8" translate="yes" xml:space="preserve">
          <source>To start a new project named &lt;code&gt;my_blog&lt;/code&gt;, just run:</source>
          <target state="translated">&lt;code&gt;my_blog&lt;/code&gt; という名前の新しいプロジェクトを開始するには、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="21eec12399439eadc43bb09c73f5082c324a704d" translate="yes" xml:space="preserve">
          <source>To start building your project on CircleCI, all you need to do is &amp;lsquo;follow&amp;rsquo; your project from CircleCI&amp;rsquo;s website:</source>
          <target state="translated">CircleCIでプロジェクトの構築を開始するには、CircleCIのWebサイトからプロジェクトを「フォロー」するだけです。</target>
        </trans-unit>
        <trans-unit id="1b35b31acc1f74b7d3433c31545028731bd3cc02" translate="yes" xml:space="preserve">
          <source>To start using collections, follow these 3 steps:</source>
          <target state="translated">コレクションの使用を開始するには、以下の3つのステップに従ってください。</target>
        </trans-unit>
        <trans-unit id="248551d931632d88c17c5dde9e698aa07dc367dc" translate="yes" xml:space="preserve">
          <source>To use one of the example plugins above as an illustration, here is how you&amp;rsquo;d specify these two flags:</source>
          <target state="translated">上記のプラグインの例の1つを例として使用するには、これらの2つのフラグを指定する方法を次に示します。</target>
        </trans-unit>
        <trans-unit id="403626465ce35b0d66ec789aad1d4c945ac7a29a" translate="yes" xml:space="preserve">
          <source>To use the currently-deployed version of the gem in your project, add the following to your &lt;code&gt;Gemfile&lt;/code&gt;:</source>
          <target state="translated">プロジェクトで現在デプロイされているgemのバージョンを使用するには、 &lt;code&gt;Gemfile&lt;/code&gt; に以下を追加します。</target>
        </trans-unit>
        <trans-unit id="fc58e433367afbd26cd82d563e2ad4c7fe336e1c" translate="yes" xml:space="preserve">
          <source>Total number of Posts.</source>
          <target state="translated">総投稿数。</target>
        </trans-unit>
        <trans-unit id="ec02cb28209dd849ec00c43e89250ce2ee45c01f" translate="yes" xml:space="preserve">
          <source>Total number of pages.</source>
          <target state="translated">総ページ数。</target>
        </trans-unit>
        <trans-unit id="89e581f1b56f0e9ddaa6c57b46dc7d03c4f48a4d" translate="yes" xml:space="preserve">
          <source>Travis CI</source>
          <target state="translated">トラビスCI</target>
        </trans-unit>
        <trans-unit id="1c86bc3039ac80dc022230c501ef0849103da6b6" translate="yes" xml:space="preserve">
          <source>Travis allows you to run any arbitrary shell script to test your site. One convention is to put all scripts for your project in the &lt;code&gt;script&lt;/code&gt; directory, and to call your test script &lt;code&gt;cibuild&lt;/code&gt;. This line is completely customizable. If your script won&amp;rsquo;t change much, you can write your test incantation here directly:</source>
          <target state="translated">Travisでは、任意のシェルスクリプトを実行してサイトをテストできます。1つの規則は、プロジェクトのすべてのスクリプトを &lt;code&gt;script&lt;/code&gt; ディレクトリに &lt;code&gt;cibuild&lt;/code&gt; 、テストスクリプトcibuildを呼び出すことです。この行は完全にカスタマイズ可能です。スクリプトがあまり変わらない場合は、ここにテストの呪文を直接書くことができます。</target>
        </trans-unit>
        <trans-unit id="f0c9192db14c3e5047a2dcb1e702c2bb7a77776e" translate="yes" xml:space="preserve">
          <source>Travis bundles all gems in the &lt;code&gt;vendor&lt;/code&gt; directory on its build servers, which Jekyll will mistakenly read and explode on.</source>
          <target state="translated">Travis は、ビルドサーバーの &lt;code&gt;vendor&lt;/code&gt; ディレクトリにあるすべてのgemをバンドルしています。これは、Jekyllが誤って読み取り、爆発します。</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="15a57e28ab2afedde562b2e7193be9a9ba688697" translate="yes" xml:space="preserve">
          <source>Try adding &lt;code&gt;future: true&lt;/code&gt; to your &lt;code&gt;_config.yml&lt;/code&gt; file. Are they showing up now? If they are, then you were ensnared by an issue with the way Ruby parses times. Each of your posts is being read in a different timezone than you might expect and, when compared to the computer&amp;rsquo;s current time, is &amp;ldquo;in the future.&amp;rdquo; The fix for this is to add &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_UTC_time_offsets&quot;&gt;a timezone offset&lt;/a&gt; to each post (and make sure you remove &lt;code&gt;future: true&lt;/code&gt; from your &lt;code&gt;_config.yml&lt;/code&gt; file). If you&amp;rsquo;re writing from California, for example, you would change this:</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; ファイルに &lt;code&gt;future: true&lt;/code&gt; を追加してみてください。彼らは今現れていますか？もしそうなら、あなたはRubyが時間を解析する方法の問題に悩まされていました。投稿はそれぞれ、予想とは異なるタイムゾーンで読み取られており、コンピューターの現在の時刻と比較すると「未来」です。これを修正するには、各投稿に&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_UTC_time_offsets&quot;&gt;タイムゾーンオフセット&lt;/a&gt;を追加します（ &lt;code&gt;_config.yml&lt;/code&gt; ファイルから &lt;code&gt;future: true&lt;/code&gt; を削除してください）。たとえば、カリフォルニアから書いている場合は、次のように変更します。</target>
        </trans-unit>
        <trans-unit id="baeece408effbbd5a4a9976616d35d9b7cecbf32" translate="yes" xml:space="preserve">
          <source>URL Template</source>
          <target state="translated">URLテンプレート</target>
        </trans-unit>
        <trans-unit id="5514a5e82e67e0b2e0c6eb04de22b5ee4892512a" translate="yes" xml:space="preserve">
          <source>UTF-8 Character Encoding Warning</source>
          <target state="translated">UTF-8文字エンコーディング警告</target>
        </trans-unit>
        <trans-unit id="1a703bb3540af03fd17a26811925888f989e5055" translate="yes" xml:space="preserve">
          <source>Under the current implementation, incremental regeneration will only generate a document or page if either it, or one of its dependencies, is modified. Currently, the only types of dependencies tracked are includes (using the &lt;code&gt;{% include %}&lt;/code&gt; tag) and layouts. This means that plain references to other documents (for example, the common case of iterating over &lt;code&gt;site.posts&lt;/code&gt; in a post listings page) will not be detected as a dependency.</source>
          <target state="translated">現在の実装では、インクリメンタル再生成は、ドキュメントまたはページ、またはその依存関係のいずれかが変更された場合にのみ生成されます。現在、追跡される依存関係のタイプは、インクルード（ &lt;code&gt;{% include %}&lt;/code&gt; タグを使用）とレイアウトのみです。つまり、他のドキュメントへの単純な参照（たとえば、投稿一覧ページの &lt;code&gt;site.posts&lt;/code&gt; を反復する一般的なケース）は、依存関係として検出されません。</target>
        </trans-unit>
        <trans-unit id="b792a850dc679dc088bd75a5fe8cd002ee68affe" translate="yes" xml:space="preserve">
          <source>Understanding gem-based themes</source>
          <target state="translated">ジェムベースのテーマを理解する</target>
        </trans-unit>
        <trans-unit id="97de3a1a64a0c29dcddc995d062054ccf92a4429" translate="yes" xml:space="preserve">
          <source>Unlike posts, drafts don&amp;rsquo;t have a date, since they haven&amp;rsquo;t been published yet. Rather than naming your draft something like &lt;code&gt;2013-07-01-my-draft-post.md&lt;/code&gt;, simply name the file what you&amp;rsquo;d like your post to eventually be titled, here &lt;code&gt;my-draft-post.md&lt;/code&gt;.</source>
          <target state="translated">投稿とは異なり、下書きはまだ公開されていないため、日付はありません。下書きに &lt;code&gt;2013-07-01-my-draft-post.md&lt;/code&gt; のような名前を付けるのではなく、投稿に最終的にタイトルを付けるファイルの名前をここで &lt;code&gt;my-draft-post.md&lt;/code&gt; に指定します。</target>
        </trans-unit>
        <trans-unit id="d72504ccafa49f87db4beb43d02a1e00f367b998" translate="yes" xml:space="preserve">
          <source>Unlike posts, pages by default mimic the source directory structure exactly. (The only exception is if your page has a &lt;code&gt;permalink&lt;/code&gt; declared its front matter &amp;mdash; in that case, the structure honors the permalink setting instead of the source folder structure.)</source>
          <target state="translated">投稿とは異なり、デフォルトでは、ページはソースディレクトリ構造を正確に模倣しています。（唯一の例外は、ページの &lt;code&gt;permalink&lt;/code&gt; 前付けが宣言されている場合です。その場合、構造は、ソースフォルダー構造ではなくパーマリンク設定に従います。）</target>
        </trans-unit>
        <trans-unit id="545ca46cd01cb816953840b4a0071ecc6ecd2f9e" translate="yes" xml:space="preserve">
          <source>Unlike user and organization Pages, Project Pages are kept in the same repository as the project they are for, except that the website content is stored in a specially named &lt;code&gt;gh-pages&lt;/code&gt; branch or in a &lt;code&gt;docs&lt;/code&gt; folder on the &lt;code&gt;master&lt;/code&gt; branch. The content will be rendered using Jekyll, and the output will become available under a subpath of your user pages subdomain, such as &lt;code&gt;username.github.io/project&lt;/code&gt; (unless a custom domain is specified).</source>
          <target state="translated">ユーザーページや組織ページとは異なり、プロジェクトページは、プロジェクトと同じリポジトリに保持されます。ただし、Webサイトのコンテンツは、特別な名前の &lt;code&gt;gh-pages&lt;/code&gt; ブランチまたは &lt;code&gt;master&lt;/code&gt; ブランチの &lt;code&gt;docs&lt;/code&gt; フォルダーに保存されます。コンテンツはJekyllを使用してレンダリングされ、出力は &lt;code&gt;username.github.io/project&lt;/code&gt; などのユーザーページサブドメインのサブパスの下で利用可能になります（カスタムドメインが指定されていない場合）。</target>
        </trans-unit>
        <trans-unit id="b6d4f2a533ee0731fb3a72d4f9b9302208764871" translate="yes" xml:space="preserve">
          <source>Updates in the infrastructure of Ruby may cause SSL errors when attempting to use &lt;code&gt;gem install&lt;/code&gt; with versions of the RubyGems package older than 2.6. (The RubyGems package installed via the Chocolatey tool is version 2.3) If you have installed an older version, you can update the RubyGems package using the directions &lt;a href=&quot;http://guides.rubygems.org/ssl-certificate-update/#installing-using-update-packages&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Rubyのインフラストラクチャを更新 &lt;code&gt;gem install&lt;/code&gt; と、2.6より古いバージョンのRubyGemsパッケージでgem installを使用しようとすると、SSLエラーが発生する場合があります。（Chocolateyツールを介してインストールされるRubyGemsパッケージはバージョン2.3です）古いバージョンをインストールしている場合は、&lt;a href=&quot;http://guides.rubygems.org/ssl-certificate-update/#installing-using-update-packages&quot;&gt;こちら&lt;/a&gt;の指示に従ってRubyGemsパッケージを更新できます。</target>
        </trans-unit>
        <trans-unit id="909248e2ddc409547b397be43855705e800e8d1b" translate="yes" xml:space="preserve">
          <source>Upgrading from 0.x to 2.x</source>
          <target state="translated">0.xから2.xへのアップグレード</target>
        </trans-unit>
        <trans-unit id="05143330adf4bd1d63ea88cbc86dda9682b30774" translate="yes" xml:space="preserve">
          <source>Upgrading from 2.x to 3.x</source>
          <target state="translated">2.xから3.xへのアップグレード</target>
        </trans-unit>
        <trans-unit id="1bf2835477a721c36eb5b31c86828bbf673c5748" translate="yes" xml:space="preserve">
          <source>Upgrading from an older version of Jekyll? A few things have changed in 1.0 and 2.0 that you&amp;rsquo;ll want to know about.</source>
          <target state="translated">Jekyllの古いバージョンからアップグレードしますか？1.0と2.0で変更されたいくつかの点について、知っておきたいことがあります。</target>
        </trans-unit>
        <trans-unit id="22b40ca09d6fac12069711da0205a54758807a9a" translate="yes" xml:space="preserve">
          <source>Upgrading from an older version of Jekyll? A few things have changed in Jekyll 3 that you&amp;rsquo;ll want to know about.</source>
          <target state="translated">Jekyllの古いバージョンからアップグレードしますか？Jekyll 3ではいくつかの変更点があり、これらについて知っておく必要があります。</target>
        </trans-unit>
        <trans-unit id="096fee79b9f0c89d2b4ab3a2c04b40c75ecd8c40" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://kickster.nielsenramon.com/&quot;&gt;Kickster&lt;/a&gt; for easy (automated) deploys to GitHub Pages when using unsupported plugins on GitHub Pages.</source>
          <target state="translated">GitHubページでサポートされていないプラグインを使用する&lt;a href=&quot;http://kickster.nielsenramon.com/&quot;&gt;場合&lt;/a&gt;、GickHubページへの簡単な（自動化された）デプロイにKicksterを使用します。</target>
        </trans-unit>
        <trans-unit id="e451a98cc33d26bec84c90504d5c78d00b893270" translate="yes" xml:space="preserve">
          <source>Use a saas service as a backend for forms (contact forms, hiring forms, etc.)</source>
          <target state="translated">フォーム(問い合わせフォーム、採用フォームなど)のバックエンドとしてsaasサービスを使用します。</target>
        </trans-unit>
        <trans-unit id="8682df8b53d76e1621156d90960098f918c9295c" translate="yes" xml:space="preserve">
          <source>Use a specific environment value in the build.</source>
          <target state="translated">ビルドで特定の環境値を使用します。</target>
        </trans-unit>
        <trans-unit id="5fd865684d3f48e47d1641f649f11c4e27ad3acc" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../templates/index#linking-to-posts&quot;&gt;&lt;code&gt;post_url&lt;/code&gt;&lt;/a&gt; tag to link to other posts without having to worry about the URLs breaking when the site permalink style changes.</source>
          <target state="translated">&lt;a href=&quot;../templates/index#linking-to-posts&quot;&gt; &lt;code&gt;post_url&lt;/code&gt; &lt;/a&gt;タグを使用すると、サイトのパーマリンクスタイルが変更されたときにURLが壊れることを心配することなく、他の投稿にリンクできます。</target>
        </trans-unit>
        <trans-unit id="773cfc18b556d4be58999872955618132b94fd19" translate="yes" xml:space="preserve">
          <source>Useful Guides</source>
          <target state="translated">便利なガイド</target>
        </trans-unit>
        <trans-unit id="7b066626401d6e28ca2ce799a19b089172de77f5" translate="yes" xml:space="preserve">
          <source>User and Organization Pages</source>
          <target state="translated">ユーザーと組織のページ</target>
        </trans-unit>
        <trans-unit id="638cea49d54ba3459c93a9d152a177eb38a9fc71" translate="yes" xml:space="preserve">
          <source>User and organization pages live in a special GitHub repository dedicated to only the GitHub Pages files. This repository must be named after the account name. For example, &lt;a href=&quot;https://github.com/mojombo/mojombo.github.io&quot;&gt;@mojombo&amp;rsquo;s user page repository&lt;/a&gt; has the name &lt;code&gt;mojombo.github.io&lt;/code&gt;.</source>
          <target state="translated">ユーザーページと組織ページは、GitHub Pagesファイル専用の特別なGitHubリポジトリにあります。このリポジトリには、アカウント名にちなんだ名前を付ける必要があります。たとえば、&lt;a href=&quot;https://github.com/mojombo/mojombo.github.io&quot;&gt;@ mojomboのユーザーページリポジトリ&lt;/a&gt;の名前は &lt;code&gt;mojombo.github.io&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8b8cc777f7ee9ffe1de0675875671539b6195593" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt; is one way that you can specify configuration in the pages and posts for your site. Setting things like a default layout, or customizing the title, or specifying a more precise date/time for the post can all be added to your page or post front matter.</source>
          <target state="translated">&lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matterの&lt;/a&gt;使用は、サイトのページと投稿で構成を指定できる1つの方法です。デフォルトのレイアウトのようなものを設定したり、タイトルをカスタマイズしたり、投稿のより正確な日付/時刻を指定したりすることはすべて、ページまたは投稿の前付けに追加できます。</target>
        </trans-unit>
        <trans-unit id="be1f3c61b36f55bbcc1ea434f645e510e4aee131" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;html-proofer&lt;/code&gt;? You&amp;rsquo;ll want this environment variable. Nokogiri, used to parse HTML files in your compiled site, comes bundled with libraries which it must compile each time it is installed. Luckily, you can dramatically decrease the install time of Nokogiri by setting the environment variable &lt;code&gt;NOKOGIRI_USE_SYSTEM_LIBRARIES&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;html-proofer&lt;/code&gt; を使用していますか？この環境変数が必要になります。コンパイル済みサイトでHTMLファイルを解析するために使用されるNokogiriには、インストールするたびにコンパイルする必要があるライブラリがバンドルされています。幸いにも、環境変数 &lt;code&gt;NOKOGIRI_USE_SYSTEM_LIBRARIES&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定することで、Nokogiriのインストール時間を大幅に短縮できます。</target>
        </trans-unit>
        <trans-unit id="a7b75b7c7ceed347297e7bf514ddd87db5aae092" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;null&lt;/code&gt; will produce a file without using a layout file. However this is overridden if the file is a post/document and has a layout defined in the &lt;a href=&quot;../configuration/index#front-matter-defaults&quot;&gt; frontmatter defaults&lt;/a&gt;.</source>
          <target state="translated">使用 &lt;code&gt;null&lt;/code&gt; レイアウトファイルを使用せずに、ファイルを生成します。ただし、ファイルが投稿/ドキュメントであり、&lt;a href=&quot;../configuration/index#front-matter-defaults&quot;&gt;frontmatter defaults&lt;/a&gt;でレイアウトが定義されている場合、これはオーバーライドされます。</target>
        </trans-unit>
        <trans-unit id="6e7a25893892346ac69627083d8abdaa2fd89d87" translate="yes" xml:space="preserve">
          <source>Using Collections</source>
          <target state="translated">コレクションの使用</target>
        </trans-unit>
        <trans-unit id="3a8b88abb372b1dde878f41986aeb701b49fbf7c" translate="yes" xml:space="preserve">
          <source>Using hooks, your plugin can exercise fine-grained control over various aspects of the build process. If your plugin defines any hooks, Jekyll will call them at pre-defined points.</source>
          <target state="translated">フックを使用することで、プラグインはビルドプロセスの様々な側面を細かく制御することができます。プラグインがフックを定義している場合、Jekyll は事前に定義されたポイントでそれらを呼び出します。</target>
        </trans-unit>
        <trans-unit id="af6042d577161be6cec4ae8b363cbde0f233f6c1" translate="yes" xml:space="preserve">
          <source>Using this setup, you might run the following command:</source>
          <target state="translated">この設定を使用して、以下のコマンドを実行することができます。</target>
        </trans-unit>
        <trans-unit id="e43c2d81fd4e70bb80021de375b1e2bdd30979b3" translate="yes" xml:space="preserve">
          <source>Using variables names for the include file</source>
          <target state="translated">インクルードファイルに変数名を使用する</target>
        </trans-unit>
        <trans-unit id="2647e87439eefa36ca129f4a554faa43e08a0935" translate="yes" xml:space="preserve">
          <source>Using your Rails layouts in Jekyll</source>
          <target state="translated">JekyllでRailsレイアウトを使う</target>
        </trans-unit>
        <trans-unit id="19de69cb601f53a4ea7af22a65c71ae63251365c" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">Variable</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="b808a2f9c64e85ebf5188927f11a353e1e040232" translate="yes" xml:space="preserve">
          <source>Visit the &amp;lsquo;Add Projects&amp;rsquo; page: &lt;a href=&quot;https://circleci.com/add-projects&quot;&gt;https://circleci.com/add-projects&lt;/a&gt;</source>
          <target state="translated">「プロジェクトの追加」ページに&lt;a href=&quot;https://circleci.com/add-projects&quot;&gt;アクセスして&lt;/a&gt;ください：https : //circleci.com/add-projects</target>
        </trans-unit>
        <trans-unit id="de23d55b8683a82f11ae68b81584f6dcf4d06574" translate="yes" xml:space="preserve">
          <source>Want to get a new Jekyll site up and running quickly? Simply run &lt;code&gt;jekyll new SITENAME&lt;/code&gt; to create a new folder with a bare bones Jekyll site.</source>
          <target state="translated">新しいJekyllサイトをすぐに稼働させたいですか？ &lt;code&gt;jekyll new SITENAME&lt;/code&gt; を実行して、必要最小限の Jekyllサイトを含む新しいフォルダーを作成します。</target>
        </trans-unit>
        <trans-unit id="11debc6767149aaf55dfe56efff8059dcc88970d" translate="yes" xml:space="preserve">
          <source>Warnings help you not blow things up</source>
          <target state="translated">警告は、物事を爆発させないために役立ちます。</target>
        </trans-unit>
        <trans-unit id="1490797e67b2964af055f97bda5cc0293b386670" translate="yes" xml:space="preserve">
          <source>Watching and Serving</source>
          <target state="translated">監視と奉仕</target>
        </trans-unit>
        <trans-unit id="cefa7e66da160b37c7184b5c6ec0e86e3eb69d9b" translate="yes" xml:space="preserve">
          <source>We dropped a number of dependencies the Core Team felt were optional. As such, in 3.0, they must be explicitly installed and included if you use any of the features. They are:</source>
          <target state="translated">コアチームがオプションであると感じた依存関係をいくつか削除しました。そのため、3.0 では、これらの機能を使用する場合は、明示的にインストールしてインクルードしなければなりません。それらは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="8d69d3de6d3a6f247a56f0181652ed1638539a8e" translate="yes" xml:space="preserve">
          <source>We provide by default &lt;code&gt;Content-Type&lt;/code&gt; and &lt;code&gt;Cache-Control&lt;/code&gt; response headers: one dynamic in order to specify the nature of the data being served, the other static in order to disable caching so that you don&amp;rsquo;t have to fight with Chrome&amp;rsquo;s aggressive caching when you are in development mode.</source>
          <target state="translated">デフォルトで &lt;code&gt;Content-Type&lt;/code&gt; と &lt;code&gt;Cache-Control&lt;/code&gt; 応答ヘッダーを提供します。1つは提供されるデータの性質を指定するための動的なもので、もう1つはキャッシュを無効にするために静的なものです。これにより、Chromeのアグレッシブキャッシュと戦う必要がなくなります。開発モードです。</target>
        </trans-unit>
        <trans-unit id="e10df18265ed8f7be61a257bdb224ce75b623cbd" translate="yes" xml:space="preserve">
          <source>We recommend setting up Jekyll with a gem-based theme but if you want to start with a blank slate, use &lt;code&gt;jekyll new myblog --blank&lt;/code&gt;</source>
          <target state="translated">宝石ベースのテーマでJekyllを設定することをお勧めしますが、白紙の状態から始めたい場合は、 &lt;code&gt;jekyll new myblog --blank&lt;/code&gt; を使用してください</target>
        </trans-unit>
        <trans-unit id="2eecab45e4680a2e5fe45a12fabd0145ca94a30f" translate="yes" xml:space="preserve">
          <source>Web Highlights and Commenting</source>
          <target state="translated">ウェブハイライトとコメント</target>
        </trans-unit>
        <trans-unit id="47075c402c12714ce67f56fada2c3e3334569ed7" translate="yes" xml:space="preserve">
          <source>Web hosting providers (FTP)</source>
          <target state="translated">ウェブホスティングプロバイダ(FTP</target>
        </trans-unit>
        <trans-unit id="980308e87afb05544ddaec2b4a788a2948d43ef8" translate="yes" xml:space="preserve">
          <source>Well-formatted site data should be placed here. The Jekyll engine will autoload all data files (using either the &lt;code&gt;.yml&lt;/code&gt;, &lt;code&gt;.yaml&lt;/code&gt;, &lt;code&gt;.json&lt;/code&gt; or &lt;code&gt;.csv&lt;/code&gt; formats and extensions) in this directory, and they will be accessible via `site.data`. If there's a file &lt;code&gt;members.yml&lt;/code&gt; under the directory, then you can access contents of the file through &lt;code&gt;site.data.members&lt;/code&gt;.</source>
          <target state="translated">適切にフォーマットされたサイトデータをここに配置する必要があります。Jekyllエンジンはこのディレクトリ内のすべてのデータファイルを（ &lt;code&gt;.yml&lt;/code&gt; 、 &lt;code&gt;.yaml&lt;/code&gt; 、 &lt;code&gt;.json&lt;/code&gt; または &lt;code&gt;.csv&lt;/code&gt; 形式と拡張子を使用して）自動ロードし、 `site.data`からアクセスできます。ディレクトリの下にファイル &lt;code&gt;members.yml&lt;/code&gt; がある場合は、 &lt;code&gt;site.data.members&lt;/code&gt; を介してファイルのコンテンツにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="80146c90bf534f404cbcca39a705ff308cd9603a" translate="yes" xml:space="preserve">
          <source>When clobbering the site destination, keep the selected files. Useful for files that are not generated by jekyll; e.g. files or assets that are generated by your build tool. The paths are relative to the &lt;code&gt;destination&lt;/code&gt;.</source>
          <target state="translated">サイトの宛先を破壊するとき、選択したファイルを保持します。jekyllによって生成されないファイルに役立ちます。たとえば、ビルドツールによって生成されたファイルまたはアセット。パスは、 &lt;code&gt;destination&lt;/code&gt; からの相対パスです。</target>
        </trans-unit>
        <trans-unit id="511ab2511b4a26fb49efb7fd75f66c53fbd12336" translate="yes" xml:space="preserve">
          <source>When in doubt, use the &lt;code&gt;help&lt;/code&gt; command to remind you of all available options and usage, it also works with the &lt;code&gt;new&lt;/code&gt;, &lt;code&gt;build&lt;/code&gt; and &lt;code&gt;serve&lt;/code&gt; subcommands, e.g. &lt;code&gt;jekyll help new&lt;/code&gt; or &lt;code&gt;jekyll help build&lt;/code&gt;.</source>
          <target state="translated">疑問がある場合は、 &lt;code&gt;help&lt;/code&gt; コマンドを使用して、使用可能なすべてのオプションと使用法を思い出させてください。これは、 &lt;code&gt;new&lt;/code&gt; 、 &lt;code&gt;build&lt;/code&gt; 、 &lt;code&gt;serve&lt;/code&gt; サブコマンドでも機能し &lt;code&gt;jekyll help new&lt;/code&gt; （例：jekyll help newまたは &lt;code&gt;jekyll help build&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="29d6bbd092c16b7b59ba615fb067b4407d968604" translate="yes" xml:space="preserve">
          <source>When iterating over &lt;code&gt;site.collections&lt;/code&gt;, ensure the above conversions are made.</source>
          <target state="translated">&lt;code&gt;site.collections&lt;/code&gt; を反復する場合は、上記の変換が行われていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="22508846b6a1cb2d937ae48a90925816dbb3e151" translate="yes" xml:space="preserve">
          <source>When testing Jekyll output, there is no better tool than &lt;a href=&quot;https://github.com/gjtorikian/html-proofer&quot;&gt;html-proofer&lt;/a&gt;. This tool checks your resulting site to ensure all links and images exist. Utilize it either with the convenient &lt;code&gt;htmlproofer&lt;/code&gt; command-line executable, or write a Ruby script which utilizes the gem.</source>
          <target state="translated">Jekyllの出力をテストする場合、&lt;a href=&quot;https://github.com/gjtorikian/html-proofer&quot;&gt;html-proofer&lt;/a&gt;よりも優れたツールはありません。このツールは、結果のサイトをチェックして、すべてのリンクと画像が存在することを確認します。便利な &lt;code&gt;htmlproofer&lt;/code&gt; コマンドライン実行可能ファイルを使用するか、gemを使用するRubyスクリプトを記述します。</target>
        </trans-unit>
        <trans-unit id="fb275a8b3cfd1d753bd1667feefec8892bb4514c" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;paginate&lt;/code&gt; configuration option is set, this variable becomes available for use. See &lt;a href=&quot;../pagination/index&quot;&gt;Pagination&lt;/a&gt; for details.</source>
          <target state="translated">とき &lt;code&gt;paginate&lt;/code&gt; 設定オプションが設定され、この変数が使用可能になります。詳細については、&lt;a href=&quot;../pagination/index&quot;&gt;ページ分割&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ac395ac35aa9cdc1eb5a47dcfe755d72e055949c" translate="yes" xml:space="preserve">
          <source>When you &lt;a href=&quot;../quickstart/index&quot;&gt;create a new Jekyll site&lt;/a&gt; (by running the &lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; command), Jekyll installs a site that uses a gem-based theme called &lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;Minima&lt;/a&gt;.</source>
          <target state="translated">（ &lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; コマンドを実行して）&lt;a href=&quot;../quickstart/index&quot;&gt;新しいJekyllサイト&lt;/a&gt;を作成すると、Jekyllは&lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;Minima&lt;/a&gt;と呼ばれるgemベースのテーマを使用するサイトをインストールします。</target>
        </trans-unit>
        <trans-unit id="9ccfe859da19cf52b245179240d09cd018bb7c6f" translate="yes" xml:space="preserve">
          <source>When you build your Jekyll site, the content inside the &lt;code&gt;if&lt;/code&gt; statement won&amp;rsquo;t be run unless you also specify a &lt;code&gt;production&lt;/code&gt; environment in the build command, like this:</source>
          <target state="translated">Jekyllサイトを構築すると、次のように、ビルドコマンドで &lt;code&gt;production&lt;/code&gt; 環境も指定しない限り、 &lt;code&gt;if&lt;/code&gt; ステートメント内のコンテンツは実行されません。</target>
        </trans-unit>
        <trans-unit id="c23148ce9285228600ad471f3d4e39ae13628b81" translate="yes" xml:space="preserve">
          <source>When you build your site, the output will list the path to each file that meets this front matter condition.</source>
          <target state="translated">サイトを構築すると、このフロントマターの条件を満たす各ファイルのパスが出力されます。</target>
        </trans-unit>
        <trans-unit id="2cde9bb2daf5153fc9fad0fee6b617f798c1ac30" translate="yes" xml:space="preserve">
          <source>When you put it all together, here&amp;rsquo;s an example of what that &lt;code&gt;circle.yml&lt;/code&gt; file could look like:</source>
          <target state="translated">すべてをまとめると、次の例は、 &lt;code&gt;circle.yml&lt;/code&gt; ファイルがどのようになるかを示しています。</target>
        </trans-unit>
        <trans-unit id="a1f521902a51cc660eaec48967b221be52eed00a" translate="yes" xml:space="preserve">
          <source>When you run &lt;code&gt;bundle exec jekyll serve&lt;/code&gt;, Bundler uses the gems and versions as specified in &lt;code&gt;Gemfile.lock&lt;/code&gt; to ensure your Jekyll site builds with no compatibility or dependency conflicts.</source>
          <target state="translated">&lt;code&gt;bundle exec jekyll serve&lt;/code&gt; を実行すると、Bundlerは &lt;code&gt;Gemfile.lock&lt;/code&gt; で指定されたgemとバージョンを使用して、互換性や依存関係の競合なしでJekyllサイトを構築できるようにします。</target>
        </trans-unit>
        <trans-unit id="441328feebf34856315bb030d27ac9484dd434bc" translate="yes" xml:space="preserve">
          <source>When you use permalinks that omit the &lt;code&gt;.html&lt;/code&gt; file extension (called &amp;ldquo;pretty URLs&amp;rdquo;) Jekyll builds the file as index.html placed inside a folder with the page&amp;rsquo;s name. For example:</source>
          <target state="translated">&lt;code&gt;.html&lt;/code&gt; ファイル拡張子を省略したパーマリンク（「プリティURL」と呼ばれます）を使用すると、Jekyllはファイルを、ページの名前が付いたフォルダー内に配置されたindex.htmlとして構築します。例えば：</target>
        </trans-unit>
        <trans-unit id="f479ef76acc86e429fb88fb9b4356d7e8e983548" translate="yes" xml:space="preserve">
          <source>Whenever a document is initialized</source>
          <target state="translated">文書が初期化されるたびに</target>
        </trans-unit>
        <trans-unit id="8081ac9790139a21f050562bbe6b235fb79b4596" translate="yes" xml:space="preserve">
          <source>Whenever a page is initialized</source>
          <target state="translated">ページが初期化されるたびに</target>
        </trans-unit>
        <trans-unit id="51c907dd080b0217c67de1be8f88eecf312bf8a4" translate="yes" xml:space="preserve">
          <source>Whenever a post is initialized</source>
          <target state="translated">投稿が初期化されるたびに</target>
        </trans-unit>
        <trans-unit id="8216ae1dacc9e51900d62b76062267f3c0b7edbd" translate="yes" xml:space="preserve">
          <source>Whenever you make a push to the selected branch, the Jekyll action runs &lt;code&gt;jekyll build&lt;/code&gt; in an isolated &lt;a href=&quot;https://hub.docker.com/r/jekyll/jekyll/&quot;&gt;Jekyll Docker image&lt;/a&gt;. The output is generated to the &lt;code&gt;/filesystem&lt;/code&gt; directory, and can be further deployed to FTP/SFTP and IaaS services. You can add your own commands, install additional packages, attach services, and run Selenium tests, as well as add other actions down the pipeline, eg. a Slack notification or an SSH script that will restart your server.</source>
          <target state="translated">選択したブランチにプッシュするたびに、Jekyllアクションは、分離された&lt;a href=&quot;https://hub.docker.com/r/jekyll/jekyll/&quot;&gt;Jekyll Dockerイメージ&lt;/a&gt;で &lt;code&gt;jekyll build&lt;/code&gt; を実行します。出力は &lt;code&gt;/filesystem&lt;/code&gt; ディレクトリに生成され、FTP / SFTPおよびIaaSサービスにさらに展開できます。独自のコマンドを追加したり、追加のパッケージをインストールしたり、サービスをアタッチしたり、Seleniumテストを実行したり、パイプラインに他のアクションを追加したりできます。サーバーを再起動するSlack通知またはSSHスクリプト。</target>
        </trans-unit>
        <trans-unit id="08df7cfb0e0229b0df3367bf88f0e7ead836d7f3" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code&gt;MONTH&lt;/code&gt; and &lt;code&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. For example, the following are examples of valid post filenames:</source>
          <target state="translated">ここで、 &lt;code&gt;YEAR&lt;/code&gt; 4桁の数字であり、 &lt;code&gt;MONTH&lt;/code&gt; と &lt;code&gt;DAY&lt;/code&gt; の両方の2桁の数字であり、 &lt;code&gt;MARKUP&lt;/code&gt; ファイルで使用されるフォーマットを表すファイル拡張子です。たとえば、以下は有効な投稿ファイル名の例です。</target>
        </trans-unit>
        <trans-unit id="668b3e4a4eeb346dd008cff0647843e835a6a66b" translate="yes" xml:space="preserve">
          <source>Where additional pages live</source>
          <target state="translated">追加ページがある場所</target>
        </trans-unit>
        <trans-unit id="e22ce535ba1a8a0bd12250f79dccc9d80cd5e88f" translate="yes" xml:space="preserve">
          <source>Where to configure permalinks</source>
          <target state="translated">パーマリンクを設定する場所</target>
        </trans-unit>
        <trans-unit id="ee79505e4e1d36592db9ca9457edb23caf0a92ba" translate="yes" xml:space="preserve">
          <source>Where you put HTML or &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; files for pages depends on how you want the pages to work. There are two main ways of creating pages:</source>
          <target state="translated">HTMLまたは&lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;ファイルをページに配置する場所は、ページの動作方法によって異なります。ページを作成するには、主に2つの方法があります。</target>
        </trans-unit>
        <trans-unit id="d6e1291771b9d018237e61708207f21da5065c7b" translate="yes" xml:space="preserve">
          <source>Whether the collection's documents will be output as individual files.</source>
          <target state="translated">コレクションのドキュメントを個別のファイルとして出力するかどうか。</target>
        </trans-unit>
        <trans-unit id="1d293d415ea6147ac5d7200c4f733da5bae41bd6" translate="yes" xml:space="preserve">
          <source>While Windows is not an officially-supported platform, it can be used to run Jekyll with the proper tweaks. This page aims to collect some of the general knowledge and lessons that have been unearthed by Windows users.</source>
          <target state="translated">Windowsは公式にサポートされているプラットフォームではありませんが、適切な調整を行えばJekyllを動作させることができます。このページでは、Windowsユーザーが発掘した一般的な知識や教訓の一部を収集することを目的としています。</target>
        </trans-unit>
        <trans-unit id="3eb7e129466b1ad3b274d794ab122caea7f6f433" translate="yes" xml:space="preserve">
          <source>While Windows is not officially supported, it is possible to get Jekyll running on Windows. Special instructions can be found on our &lt;a href=&quot;../windows/index#installation&quot;&gt;Windows-specific docs page&lt;/a&gt;.</source>
          <target state="translated">Windowsは公式にはサポートされていませんが、WindowsでJekyllを実行することは可能です。&lt;a href=&quot;../windows/index#installation&quot;&gt;Windows固有のドキュメントページに&lt;/a&gt;特別な手順があります。</target>
        </trans-unit>
        <trans-unit id="e399b54f2e7424a4e1d4d33fb7af1ecc630310dd" translate="yes" xml:space="preserve">
          <source>While Windows is not officially supported, it is possible to install the &lt;code&gt;github-pages&lt;/code&gt; gem on Windows. Special instructions can be found on our &lt;a href=&quot;../windows/index#installation&quot;&gt;Windows-specific docs page&lt;/a&gt;.</source>
          <target state="translated">Windowsは公式にはサポートされていませんが、 &lt;code&gt;github-pages&lt;/code&gt; gemをWindows にインストールすることは可能です。&lt;a href=&quot;../windows/index#installation&quot;&gt;Windows固有のドキュメントページに&lt;/a&gt;特別な手順があります。</target>
        </trans-unit>
        <trans-unit id="2e9e68bbbf896adad3c499f6d456ec3681451ddb" translate="yes" xml:space="preserve">
          <source>While incremental regeneration will work for the most common cases, it will not work correctly in every scenario. Please be extremely cautious when using the feature, and report any problems not listed below by &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;opening an issue on GitHub&lt;/a&gt;.</source>
          <target state="translated">増分再生は最も一般的なケースで機能しますが、すべてのシナリオで正しく機能するとは限りません。この機能を使用するときは十分に注意し、&lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;GitHubで問題を開いて、&lt;/a&gt;以下にリストされていない問題を報告してください。</target>
        </trans-unit>
        <trans-unit id="184160eec41156b6ae73a5805dbb67ab7097076b" translate="yes" xml:space="preserve">
          <source>While this example is done with categories, you can easily extend your lists to filter by tags or any other variable created with extensions.</source>
          <target state="translated">この例ではカテゴリを使っていますが、リストを拡張してタグや拡張機能で作成した他の変数でフィルタリングすることも簡単にできます。</target>
        </trans-unit>
        <trans-unit id="51a443a53049d68b8cd0ab3ab0e48b86621b3ded" translate="yes" xml:space="preserve">
          <source>With a URL such as &lt;code&gt;/mypageurl/&lt;/code&gt;, servers automatically load the index.html file inside the folder, so users can simply navigate to &lt;code&gt;http://somedomain.com/mypageurl/&lt;/code&gt; to get to &lt;code&gt;mypageurl/index.html&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;/mypageurl/&lt;/code&gt; などのURLを使用すると、サーバーはフォルダ内のindex.htmlファイルを自動的にロードするため、ユーザーは &lt;code&gt;http://somedomain.com/mypageurl/&lt;/code&gt; に移動して &lt;code&gt;mypageurl/index.html&lt;/code&gt; にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="f958238187c3b5c4cdd931995cbe45869daa06c7" translate="yes" xml:space="preserve">
          <source>With a clear understanding of the theme&amp;rsquo;s files, you can now override any theme file by creating a similarly named file in your Jekyll site directory.</source>
          <target state="translated">テーマのファイルを明確に理解したら、同様の名前のファイルをJekyllサイトディレクトリに作成して、テーマファイルをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="af04212c22613400a0848564776b8713ea75a72d" translate="yes" xml:space="preserve">
          <source>With both fenced code blocks and highlighter enabled, this will statically highlight the code; without any syntax highlighter, it will add a &lt;code&gt;class=&quot;LANGUAGE&quot;&lt;/code&gt; attribute to the &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; element, which can be used as a hint by various JavaScript code highlighting libraries.</source>
          <target state="translated">フェンスされたコードブロックと蛍光ペンの両方を有効にすると、コードが静的に強調表示されます。シンタックスハイライターがなければ、 &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; 要素に &lt;code&gt;class=&quot;LANGUAGE&quot;&lt;/code&gt; 属性が追加されます。これは、さまざまなJavaScriptコードハイライトライブラリによってヒントとして使用できます。</target>
        </trans-unit>
        <trans-unit id="fea314417153cec8d1cc3552baba3aba65b25e65" translate="yes" xml:space="preserve">
          <source>With gem-based themes, some of the site&amp;rsquo;s directories (such as the &lt;code&gt;assets&lt;/code&gt;, &lt;code&gt;_layouts&lt;/code&gt;, &lt;code&gt;_includes&lt;/code&gt;, and &lt;code&gt;_sass&lt;/code&gt; directories) are stored in the theme&amp;rsquo;s gem, hidden from your immediate view. Yet all of the necessary directories will be read and processed during Jekyll&amp;rsquo;s build process.</source>
          <target state="translated">gemベースのテーマでは、サイトの一部のディレクトリ（ &lt;code&gt;assets&lt;/code&gt; 、 &lt;code&gt;_layouts&lt;/code&gt; 、 &lt;code&gt;_includes&lt;/code&gt; 、 &lt;code&gt;_sass&lt;/code&gt; などのディレクトリ）はテーマのgemに保存され、すぐには見えません。しかし、必要なディレクトリはすべて、Jekyllのビルドプロセス中に読み取られて処理されます。</target>
        </trans-unit>
        <trans-unit id="4b02aff0258fac25b5a803e6b663a48c25a23509" translate="yes" xml:space="preserve">
          <source>With many websites &amp;mdash; especially blogs &amp;mdash; it&amp;rsquo;s very common to break the main listing of posts up into smaller lists and display them over multiple pages. Jekyll offers a pagination plugin, so you can automatically generate the appropriate files and folders you need for paginated listings.</source>
          <target state="translated">多くのWebサイト（特にブログ）では、投稿のメインリストを小さなリストに分割して、複数のページに表示するのが一般的です。Jekyllはページネーションプラグインを提供しているため、ページネーションされたリストに必要な適切なファイルとフォルダーを自動的に生成できます。</target>
        </trans-unit>
        <trans-unit id="1e0e2fc5b2730c68ab3b7c95809e879c30e5bd40" translate="yes" xml:space="preserve">
          <source>With the introduction of System Integrity Protection, several directories that were previously writable are now considered system locations and are no longer available. Given these changes, there are a couple of simple ways to get up and running. One option is to change the location where the gem will be installed (again, using &lt;code&gt;sudo&lt;/code&gt; only if necessary):</source>
          <target state="translated">System Integrity Protectionの導入により、以前は書き込み可能であったいくつかのディレクトリがシステムの場所と見なされ、使用できなくなりました。これらの変更を前提として、起動して実行するにはいくつかの簡単な方法があります。1つのオプションは、gemをインストールする場所を変更することです（ここでも、必要に応じて &lt;code&gt;sudo&lt;/code&gt; を使用します）。</target>
        </trans-unit>
        <trans-unit id="e7d44ff64fb14b5fea5337d7a84af3ea3239c1d1" translate="yes" xml:space="preserve">
          <source>With the new subcommands, the way sites are previewed locally changed a bit. Instead of specifying &lt;code&gt;server: true&lt;/code&gt; in the site&amp;rsquo;s configuration file, use &lt;code&gt;jekyll serve&lt;/code&gt;. The same holds true for &lt;code&gt;watch: true&lt;/code&gt;. Instead, use the &lt;code&gt;--watch&lt;/code&gt; flag with either &lt;code&gt;jekyll serve&lt;/code&gt; or &lt;code&gt;jekyll build&lt;/code&gt;.</source>
          <target state="translated">新しいサブコマンドにより、サイトのプレビュー方法がローカルで少し変更されました。サイトの構成ファイルで &lt;code&gt;server: true&lt;/code&gt; を指定する代わりに、 &lt;code&gt;jekyll serve&lt;/code&gt; を使用します。同じことが &lt;code&gt;watch: true&lt;/code&gt; ます：true。代わりに、 &lt;code&gt;--watch&lt;/code&gt; フラグを &lt;code&gt;jekyll serve&lt;/code&gt; または &lt;code&gt;jekyll build&lt;/code&gt; で使用します。</target>
        </trans-unit>
        <trans-unit id="1505fac4e810feca59171a030c395c070950cafe" translate="yes" xml:space="preserve">
          <source>With these defaults, all pages would use the &lt;code&gt;my-site&lt;/code&gt; layout. Any html files that exist in the &lt;code&gt;projects/&lt;/code&gt; folder will use the &lt;code&gt;project&lt;/code&gt; layout, if it exists. Those files will also have the &lt;code&gt;page.author&lt;/code&gt;&lt;a href=&quot;../variables/index&quot;&gt;liquid variable&lt;/a&gt; set to &lt;code&gt;Mr. Hyde&lt;/code&gt;.</source>
          <target state="translated">これらのデフォルトでは、すべてのページで &lt;code&gt;my-site&lt;/code&gt; レイアウトが使用されます。 &lt;code&gt;projects/&lt;/code&gt; フォルダーに存在するhtmlファイルは、存在する場合、 &lt;code&gt;project&lt;/code&gt; レイアウトを使用します。これらのファイルでは、 &lt;code&gt;page.author&lt;/code&gt; &lt;a href=&quot;../variables/index&quot;&gt;液体変数が&lt;/a&gt; &lt;code&gt;Mr. Hyde&lt;/code&gt; 設定されます。</target>
        </trans-unit>
        <trans-unit id="7599ce8a6c90d8500971f9fb8824823762fc0b69" translate="yes" xml:space="preserve">
          <source>With this, the end-user need not keep track of the plugins required to be included in their config file for their theme-gem to work as intended.</source>
          <target state="translated">これにより、エンドユーザーは意図した通りに動作するために、設定ファイルに含める必要のあるプラグインを追跡する必要がありません。</target>
        </trans-unit>
        <trans-unit id="7df8e3283db3ce2ecb9d37be5216604c9595ea29" translate="yes" xml:space="preserve">
          <source>With your site built, it&amp;rsquo;s useful to run tests to check for valid HTML, broken links, etc. There&amp;rsquo;s a few tools out there but &lt;a href=&quot;https://github.com/gjtorikian/html-proofer&quot;&gt;HTML Proofer&lt;/a&gt; is popular amongst Jekyll users. We&amp;rsquo;ll run it in the &lt;code&gt;test&lt;/code&gt; phase with a few preferred flags. Check out the &lt;code&gt;html-proofer&lt;/code&gt;&lt;a href=&quot;https://github.com/gjtorikian/html-proofer/blob/master/README.md#configuration&quot;&gt;README&lt;/a&gt; for all available flags, or run &lt;code&gt;htmlproofer --help&lt;/code&gt; locally.</source>
          <target state="translated">サイトを構築したら、有効なHTML、リンク切れなどをチェックするテストを実行すると便利です。いくつかのツールがあり&lt;a href=&quot;https://github.com/gjtorikian/html-proofer&quot;&gt;ます&lt;/a&gt;が、HTMLプルーファーはJekyllユーザーの間で人気があります。いくつかの優先フラグを使用して、 &lt;code&gt;test&lt;/code&gt; フェーズで実行します。使用可能なすべてのフラグについて &lt;code&gt;html-proofer&lt;/code&gt; &lt;code&gt;htmlproofer --help&lt;/code&gt; &lt;a href=&quot;https://github.com/gjtorikian/html-proofer/blob/master/README.md#configuration&quot;&gt;README&lt;/a&gt;を確認するか、ローカルでhtmlproofer --helpを実行してください。</target>
        </trans-unit>
        <trans-unit id="5cb0eada64f7af8c332f37831a994cf3cd5ad11b" translate="yes" xml:space="preserve">
          <source>Working with drafts</source>
          <target state="translated">下書きを使った作業</target>
        </trans-unit>
        <trans-unit id="0e1ba5a9ac8eaceeb32ada6c5f13d2aa2c790b00" translate="yes" xml:space="preserve">
          <source>Writing posts</source>
          <target state="translated">記事の書き方</target>
        </trans-unit>
        <trans-unit id="b7fcbf6928437bce09750515ec3bc51084124d74" translate="yes" xml:space="preserve">
          <source>Year from the post's filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; YAML front matter</source>
          <target state="translated">投稿のファイル名からの年。ドキュメントの &lt;code&gt;date&lt;/code&gt; YAMLの前付けで上書きできます</target>
        </trans-unit>
        <trans-unit id="2eed5ade5ea41f8c83cf68590a70d3900db8efec" translate="yes" xml:space="preserve">
          <source>Year without the century from the post's filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; YAML front matter</source>
          <target state="translated">投稿のファイル名からの世紀のない年。ドキュメントの &lt;code&gt;date&lt;/code&gt; YAMLの前付けで上書きできます</target>
        </trans-unit>
        <trans-unit id="0d678ed42c21abec78da0d2ac1715bfc602efbc4" translate="yes" xml:space="preserve">
          <source>You can add your own filters to the Liquid template system much like you can add tags above. Filters are simply modules that export their methods to liquid. All methods will have to take at least one parameter which represents the input of the filter. The return value will be the output of the filter.</source>
          <target state="translated">上のタグを追加するのと同じように、独自のフィルターをリキッドのテンプレートシステムに追加することができます。フィルターはメソッドをリキッドにエクスポートするモジュールです。すべてのメソッドはフィルターの入力を表す少なくとも1つのパラメータを取らなければなりません。戻り値はフィルターの出力になります。</target>
        </trans-unit>
        <trans-unit id="2e327096324eaa5d0c855a4af5564e01c5ad3ecb" translate="yes" xml:space="preserve">
          <source>You can also invoke &lt;code&gt;html-proofer&lt;/code&gt; in Ruby scripts (e.g. in a Rakefile):</source>
          <target state="translated">Rubyスクリプト（Rakefileなど）で &lt;code&gt;html-proofer&lt;/code&gt; prooferを呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="76ab2e76d58973c4bf70e44968efff02ff10735e" translate="yes" xml:space="preserve">
          <source>You can also pass parameters to an include. For example, suppose you have a file called &lt;code&gt;note.html&lt;/code&gt; in your &lt;code&gt;_includes&lt;/code&gt; folder that contains this formatting:</source>
          <target state="translated">パラメータをインクルードに渡すこともできます。たとえば、あなたはというファイルがあるとし &lt;code&gt;note.html&lt;/code&gt; あなたに &lt;code&gt;_includes&lt;/code&gt; そのフォルダをこの書式設定が含まれています。</target>
        </trans-unit>
        <trans-unit id="9d862deca986020ccad0768732e8f9a3ad68477c" translate="yes" xml:space="preserve">
          <source>You can also set the &lt;code&gt;excerpt_separator&lt;/code&gt; globally in your &lt;code&gt;_config.yml&lt;/code&gt; configuration file.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; 設定ファイルで &lt;code&gt;excerpt_separator&lt;/code&gt; をグローバルに設定することもできます。</target>
        </trans-unit>
        <trans-unit id="ad67740def3f388f5f91692051f57c615deaed28" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;https://rubygems.org/gems/jekyll&quot;&gt;RubyGems&lt;/a&gt; to find the current versioning of any gem. But you can also use the &lt;code&gt;gem&lt;/code&gt; command line tool:</source>
          <target state="translated">&lt;a href=&quot;https://rubygems.org/gems/jekyll&quot;&gt;RubyGems&lt;/a&gt;を使用して、gemの現在のバージョンを確認することもできます。ただし、 &lt;code&gt;gem&lt;/code&gt; コマンドラインツールを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="f7b256455c07e37d0d1c19189599eef7661657ea" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;link&lt;/code&gt; tag to create a link in Markdown as follows:</source>
          <target state="translated">次のように、 &lt;code&gt;link&lt;/code&gt; タグを使用してMarkdownでリンクを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="db3c48181598ce420e6bf6b9ffe8e868fb7a2b9d" translate="yes" xml:space="preserve">
          <source>You can also use this tag to create a link to a post in Markdown as follows:</source>
          <target state="translated">このタグを使って、以下のようにMarkdownで記事へのリンクを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="bdc2f9b7cb1b81a6c2752965856450fb353524a7" translate="yes" xml:space="preserve">
          <source>You can choose to include file fragments relative to the current file by using the &lt;code&gt;include_relative&lt;/code&gt; tag:</source>
          <target state="translated">&lt;code&gt;include_relative&lt;/code&gt; タグを使用して、現在のファイルに関連するファイルフラグメントを含めるように選択できます。</target>
        </trans-unit>
        <trans-unit id="2294ff3935b27e6c9194251f8be4f50d980af1aa" translate="yes" xml:space="preserve">
          <source>You can configure your site&amp;rsquo;s permalinks through the &lt;a href=&quot;../configuration/index&quot;&gt;Configuration&lt;/a&gt; file or in the &lt;a href=&quot;../frontmatter/index&quot;&gt;Front Matter&lt;/a&gt; for each post, page, or collection.</source>
          <target state="translated">サイトのパーマリンクは、&lt;a href=&quot;../configuration/index&quot;&gt;設定&lt;/a&gt;ファイルまたは各投稿、ページ、コレクションの&lt;a href=&quot;../frontmatter/index&quot;&gt;フロントマター&lt;/a&gt;で設定できます。</target>
        </trans-unit>
        <trans-unit id="93b376425d597f05f823c1af8ee870a06a9d0815" translate="yes" xml:space="preserve">
          <source>You can create a generator when you need Jekyll to create additional content based on your own rules.</source>
          <target state="translated">自分のルールに基づいて追加コンテンツを作成するジキルが必要な時にジェネレーターを作成することができます。</target>
        </trans-unit>
        <trans-unit id="1c5ac50a727e15018aadf5907701bb24e44e8242" translate="yes" xml:space="preserve">
          <source>You can create links in your topics to other posts, pages, or collection items in a way that is valid no matter what permalink configuration you choose. By using the &lt;code&gt;link&lt;/code&gt; tag, if you change your permalinks, your links won&amp;rsquo;t break. See &lt;a href=&quot;../templates/index#link&quot;&gt;Linking to pages&lt;/a&gt; in Templates for more details.</source>
          <target state="translated">選択したパーマリンク構成に関係なく有効な方法で、トピックに他の投稿、ページ、またはコレクションアイテムへのリンクを作成できます。 &lt;code&gt;link&lt;/code&gt; タグを使用すると、パーマリンクを変更しても、リンクが壊れることはありません。詳細については、テンプレートの&lt;a href=&quot;../templates/index#link&quot;&gt;ページへのリンクを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a5ed5aac85e2186e0572bd680800e88232214541" translate="yes" xml:space="preserve">
          <source>You can easily test your website build against one or more versions of Ruby. The following guide will show you how to set up a free build environment on &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis&lt;/a&gt;, with &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt; integration for pull requests.</source>
          <target state="translated">Rubyの1つ以上のバージョンに対してWebサイトのビルドを簡単にテストできます。次のガイドでは、プルリクエスト用の&lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;統合を使用して、&lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travisに&lt;/a&gt;無料のビルド環境をセットアップする方法を示します。</target>
        </trans-unit>
        <trans-unit id="87c167fb712f2b64edb622d4346bf6488b634c5a" translate="yes" xml:space="preserve">
          <source>You can find a few useful plugins at the following locations:</source>
          <target state="translated">以下の場所に便利なプラグインがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="2667e1e7155903fb77c85503837a4b8608e08eec" translate="yes" xml:space="preserve">
          <source>You can have multiple themes listed in your site&amp;rsquo;s &lt;code&gt;Gemfile&lt;/code&gt;, but only one theme can be selected in your site&amp;rsquo;s &lt;code&gt;_config.yml&lt;/code&gt;.</source>
          <target state="translated">サイトの &lt;code&gt;Gemfile&lt;/code&gt; に複数のテーマをリストできますが、サイトの_config.ymlで選択できるテーマは1つだけ &lt;code&gt;_config.yml&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f15f8933f086a315e0c6843ad1dbb164232a54c0" translate="yes" xml:space="preserve">
          <source>You can make code snippets include line-numbers by adding the word &lt;code&gt;linenos&lt;/code&gt; to the end of the opening highlight tag like this: &lt;code&gt;{% highlight ruby linenos %}&lt;/code&gt;.</source>
          <target state="translated">次のように、ハイライト開始タグの末尾に単語 &lt;code&gt;linenos&lt;/code&gt; を追加することで、コードスニペットに行番号を含めることができます： &lt;code&gt;{% highlight ruby linenos %}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bca124f4d9f1d6e9fe08986b24d34c20e66c1114" translate="yes" xml:space="preserve">
          <source>You can make sure time management is working properly by inspecting your &lt;code&gt;_posts&lt;/code&gt; folder. You should see a markdown file with the current date in the filename.</source>
          <target state="translated">&lt;code&gt;_posts&lt;/code&gt; フォルダーを調べることで、時間管理が適切に機能していることを確認できます。ファイル名に現在の日付が含まれているマークダウンファイルが表示されます。</target>
        </trans-unit>
        <trans-unit id="d64c7071a6264b6432d263be08589878967d2a48" translate="yes" xml:space="preserve">
          <source>You can now render the list of members in a template:</source>
          <target state="translated">テンプレート内のメンバーのリストをレンダリングできるようになりました。</target>
        </trans-unit>
        <trans-unit id="8794afe2be5d5773ccf8527a623ece5f8611313f" translate="yes" xml:space="preserve">
          <source>You can optionally specify a directory to store all your collections in the same place with &lt;code&gt;collections_dir: my_collections&lt;/code&gt;.</source>
          <target state="translated">オプションで、 &lt;code&gt;collections_dir: my_collections&lt;/code&gt; を使用して、すべてのコレクションを同じ場所に格納するディレクトリを指定できます。</target>
        </trans-unit>
        <trans-unit id="46d45ae00f226ea4c03a4d55784e2d9a2786d403" translate="yes" xml:space="preserve">
          <source>You can optionally specify metadata for your collection in the configuration:</source>
          <target state="translated">オプションで、設定でコレクションのメタデータを指定することができます。</target>
        </trans-unit>
        <trans-unit id="81cdc26f52a13375caf0264be4064896228f9f5c" translate="yes" xml:space="preserve">
          <source>You can provide custom headers for your site by adding them to &lt;code&gt;_config.yml&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; に追加することで、サイトのカスタムヘッダーを提供できます。</target>
        </trans-unit>
        <trans-unit id="0bb7f995c456cf6b1e1fa756e8ae730cb0a86d03" translate="yes" xml:space="preserve">
          <source>You can see that in the second to last example above. First, we set the default page layout to &lt;code&gt;my-site&lt;/code&gt;. Then, using a more specific path, we set the default layout for pages in the &lt;code&gt;projects/&lt;/code&gt; path to &lt;code&gt;project&lt;/code&gt;. This can be done with any value that you would set in the page or post front matter.</source>
          <target state="translated">上記の最後から2番目の例でそれを確認できます。まず、デフォルトのページレイアウトを &lt;code&gt;my-site&lt;/code&gt; に設定します。次に、より具体的なパスを使用して、 &lt;code&gt;projects/&lt;/code&gt; パス内のページのデフォルトのレイアウトを &lt;code&gt;project&lt;/code&gt; に設定します。これは、ページまたは投稿前付で設定する任意の値で実行できます。</target>
        </trans-unit>
        <trans-unit id="7dde98e897f931cb83f47f87b59212983c47adf1" translate="yes" xml:space="preserve">
          <source>You can still use GitHub Pages to publish your site, but you&amp;rsquo;ll need to convert the site locally and push the generated static files to your GitHub repository instead of the Jekyll source files.</source>
          <target state="translated">GitHubページを使用してサイトを公開することはできますが、サイトをローカルで変換し、生成された静的ファイルをJekyllソースファイルではなくGitHubリポジトリにプッシュする必要があります。</target>
        </trans-unit>
        <trans-unit id="83036c72eb4eff4eac45d17fe71c15df9f5978cb" translate="yes" xml:space="preserve">
          <source>You construct permalinks by creating a template URL where dynamic elements are represented by colon-prefixed keywords. The default template permalink is &lt;code&gt;/:categories/:year/:month/:day/:title.html&lt;/code&gt;. Each of the colon-prefixed keywords is a template variable.</source>
          <target state="translated">パーマリンクを作成するには、動的要素がコロンで始まるキーワードで表されるテンプレートURLを作成します。デフォルトのテンプレートパーマリンクは &lt;code&gt;/:categories/:year/:month/:day/:title.html&lt;/code&gt; です。コロンで始まるキーワードはそれぞれテンプレート変数です。</target>
        </trans-unit>
        <trans-unit id="82372e5941e515cd224c324759f4fab4de075b38" translate="yes" xml:space="preserve">
          <source>You could templatize this content in your include and make each value available as a parameter, like this:</source>
          <target state="translated">インクルードの中でこの内容をテンプレート化して、以下のように各値をパラメータとして利用できるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="4218ab9ddf22eb0aa79127d78253dfbfa88e5050" translate="yes" xml:space="preserve">
          <source>You could then reference that variable in your include:</source>
          <target state="translated">そして、その変数をインクルードで参照することができます。</target>
        </trans-unit>
        <trans-unit id="ec59f75ef4b6ca27532722a835f3c9fbbfdae7d3" translate="yes" xml:space="preserve">
          <source>You have 3 options for installing plugins:</source>
          <target state="translated">プラグインのインストールには3つのオプションがあります。</target>
        </trans-unit>
        <trans-unit id="f2c1892c073f03f142f840eb36f55d5f2a3afd30" translate="yes" xml:space="preserve">
          <source>You may also specify the destination of the pagination pages:</source>
          <target state="translated">また、ページネーションページの保存先を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="feae3676e579249c171fb75ff081a86988787055" translate="yes" xml:space="preserve">
          <source>You may also specify the output style with the &lt;code&gt;style&lt;/code&gt; option in your &lt;code&gt;_config.yml&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; ファイルの &lt;code&gt;style&lt;/code&gt; オプションで出力スタイルを指定することもできます：</target>
        </trans-unit>
        <trans-unit id="813825e416d152aad17c5da9d4b383eef6abbb21" translate="yes" xml:space="preserve">
          <source>You may first have to download and install the &lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;Ruby DevKit&lt;/a&gt; by following &lt;a href=&quot;https://github.com/oneclick/rubyinstaller/wiki/Development-Kit&quot;&gt;the instructions here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/oneclick/rubyinstaller/wiki/Development-Kit&quot;&gt;こちらの手順&lt;/a&gt;に従って、最初に&lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;Ruby DevKit&lt;/a&gt;をダウンロードしてインストールする必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="6c7c0688920d68e8b8ed1a532bfa43b2ba7eb0e6" translate="yes" xml:space="preserve">
          <source>You may use any of the aforementioned plugin options simultaneously in the same site if you so choose. Use of one does not restrict the use of the others.</source>
          <target state="translated">あなたがそう選択した場合は、同じサイト内で前述のプラグインオプションのいずれかを同時に使用することができます。いずれかを使用しても、他のプラグインの使用を制限するものではありません。</target>
        </trans-unit>
        <trans-unit id="af53917fd7fb9df339055948ef4354df372d18eb" translate="yes" xml:space="preserve">
          <source>You may wish to use filters to find your collection: &lt;code&gt;{{ site.collections | where: &quot;label&quot;, &quot;myCollection&quot; | first }}&lt;/code&gt;</source>
          <target state="translated">フィルターを使用してコレクションを見つけることができます： &lt;code&gt;{{ site.collections | where: &quot;label&quot;, &quot;myCollection&quot; | first }}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b14e1937660ee77bf91641a024c1f476923d38c9" translate="yes" xml:space="preserve">
          <source>You must also register the custom tag with the Liquid template engine as follows:</source>
          <target state="translated">また、以下のようにカスタムタグをLiquidのテンプレートエンジンに登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="bd4559d57d7b39444a0bd8264fa3bdbc36bb5bad" translate="yes" xml:space="preserve">
          <source>You must include the file&amp;rsquo;s original extension when using the &lt;code&gt;link&lt;/code&gt; tag. Here are some examples:</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; タグを使用する場合は、ファイルの元の拡張子を含める必要があります。ここではいくつかの例を示します。</target>
        </trans-unit>
        <trans-unit id="8c155ef26b19ec8c239e5862536d6228c5f5622c" translate="yes" xml:space="preserve">
          <source>You want to ensure the Travis builds for your site are being run only on the branch or branches which contain your site. One means of ensuring this isolation is including a branch whitelist in your Travis configuration file. By specifying the &lt;code&gt;gh-pages&lt;/code&gt; branch, you will ensure the associated test script (discussed above) is only executed on site branches. If you use a pull request flow for proposing changes, you may wish to enforce a convention for your builds such that all branches containing edits are prefixed, exemplified above with the &lt;code&gt;/pages-(.*)/&lt;/code&gt; regular expression.</source>
          <target state="translated">サイトのTravisビルドが、サイトを含む1つまたは複数のブランチでのみ実行されるようにする必要があります。この分離を確実にする1つの方法は、Travis構成ファイルにブランチホワイトリストを含めることです。 &lt;code&gt;gh-pages&lt;/code&gt; ブランチを指定すると、関連するテストスクリプト（上記で説明）がサイトブランチでのみ実行されるようになります。プルリクエストフローを使用して変更を提案する場合、編集を含むすべてのブランチに接頭辞を付けるようにビルドの規則を適用できます。上記の例では、 &lt;code&gt;/pages-(.*)/&lt;/code&gt; 。*）/正規表現を使用しています。</target>
        </trans-unit>
        <trans-unit id="c59eb0fb83ec6e55ae9231cb96d832a3172db660" translate="yes" xml:space="preserve">
          <source>You won&amp;rsquo;t need to place your included content within the &lt;code&gt;_includes&lt;/code&gt; directory. Instead, the inclusion is specifically relative to the file where the tag is being used. For example, if &lt;code&gt;_posts/2014-09-03-my-file.markdown&lt;/code&gt; uses the &lt;code&gt;include_relative&lt;/code&gt; tag, the included file must be within the &lt;code&gt;_posts&lt;/code&gt; directory or one of its subdirectories.</source>
          <target state="translated">インクルードしたコンテンツを &lt;code&gt;_includes&lt;/code&gt; ディレクトリに配置する必要はありません。代わりに、インクルードはタグが使用されているファイルに特に関連しています。たとえば、 &lt;code&gt;_posts/2014-09-03-my-file.markdown&lt;/code&gt; が &lt;code&gt;include_relative&lt;/code&gt; タグを使用する場合、インクルードされるファイルは &lt;code&gt;_posts&lt;/code&gt; ディレクトリまたはそのサブディレクトリの1つにある必要があります。</target>
        </trans-unit>
        <trans-unit id="a5acac90148d1abc3866043511b2be719baeaa33" translate="yes" xml:space="preserve">
          <source>You'll see this by a feature that hasn't been released</source>
          <target state="translated">公開されていない特集で見てみましょう</target>
        </trans-unit>
        <trans-unit id="4a57b6049a550324f79bde6a1f6ece0ab9d1f706" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;.travis.yml&lt;/code&gt; file should look like this:</source>
          <target state="translated">あなたの &lt;code&gt;.travis.yml&lt;/code&gt; ファイルには、次のようになります。</target>
        </trans-unit>
        <trans-unit id="9a73aca4e2a6509bb048f7d844f4c213ed2e3c3a" translate="yes" xml:space="preserve">
          <source>Your Command Prompt instance should now be a Bash instance. Now we must update our repo lists and packages.</source>
          <target state="translated">コマンドプロンプトのインスタンスは Bash インスタンスになっているはずです。ここで、レポリストとパッケージを更新しなければなりません。</target>
        </trans-unit>
        <trans-unit id="a1771f185112c996dbf555c49fae65ea38d9f743" translate="yes" xml:space="preserve">
          <source>Your Content</source>
          <target state="translated">あなたのコンテンツ</target>
        </trans-unit>
        <trans-unit id="b8835d7b143874d94a7c1a39630689b09748d56f" translate="yes" xml:space="preserve">
          <source>Your dynamic content, so to speak. The naming convention of these files is important, and must follow the format: &lt;code&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;. The &lt;a href=&quot;../permalinks/index&quot;&gt;permalinks&lt;/a&gt; can be customized for each post, but the date and markup language are determined solely by the file name.</source>
          <target state="translated">いわばあなたのダイナミックなコンテンツ。これらのファイルの命名規則は重要であり、 &lt;code&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt; の形式に従う必要があります。&lt;a href=&quot;../permalinks/index&quot;&gt;パーマリンクは、&lt;/a&gt;各ポストのためにカスタマイズすることができますが、日付やマークアップ言語は、ファイル名のみによって決定されます。</target>
        </trans-unit>
        <trans-unit id="c23dddd636cb6a74d2fb8bd56a3d1999bb003c55" translate="yes" xml:space="preserve">
          <source>Your environment values can be anything you want (not just &lt;code&gt;development&lt;/code&gt; or &lt;code&gt;production&lt;/code&gt;). Some elements you might want to hide in development environments include Disqus comment forms or Google Analytics. Conversely, you might want to expose an &amp;ldquo;Edit me in GitHub&amp;rdquo; button in a development environment but not include it in production environments.</source>
          <target state="translated">環境の値は、（ &lt;code&gt;development&lt;/code&gt; や &lt;code&gt;production&lt;/code&gt; だけでなく）任意の値にすることができます。開発環境で非表示にする必要がある要素には、DisqusコメントフォームやGoogleアナリティクスなどがあります。逆に、開発環境では「GitHubで編集」ボタンを公開したいが、本番環境には含めたくない場合があります。</target>
        </trans-unit>
        <trans-unit id="8a46ae9c75c32172e941f6a75dcd0dc98489689e" translate="yes" xml:space="preserve">
          <source>Your site is automatically generated by GitHub Pages when you push your source files. Note that GitHub Pages works equally well for regular HTML content, simply because Jekyll treats files without YAML front matter as static assets. So if you only need to push generated HTML, you&amp;rsquo;re good to go without any further setup.</source>
          <target state="translated">ソースファイルをプッシュすると、サイトはGitHub Pagesによって自動的に生成されます。JekyllがYAMLの前付けのないファイルを静的アセットとして扱うため、GitHubページは通常のHTMLコンテンツでも同様に機能することに注意してください。したがって、生成されたHTMLをプッシュするだけでよい場合は、それ以上の設定を行わずに済みます。</target>
        </trans-unit>
        <trans-unit id="40fe2e8a3ec78c5ad1c1d6c92ce61af6341b18cf" translate="yes" xml:space="preserve">
          <source>Your theme should include a &lt;code&gt;/README.md&lt;/code&gt; file, which explains how site authors can install and use your theme. What layouts are included? What includes? Do they need to add anything special to their site&amp;rsquo;s configuration file?</source>
          <target state="translated">テーマには &lt;code&gt;/README.md&lt;/code&gt; ファイルを含める必要があります。これは、サイト作成者がテーマをインストールして使用する方法を説明しています。どのレイアウトが含まれていますか？何が含まれていますか？サイトの構成ファイルに特別なものを追加する必要がありますか？</target>
        </trans-unit>
        <trans-unit id="f0286abd5b6c407b7155ef6a6aa920936a3fbbd7" translate="yes" xml:space="preserve">
          <source>Your theme&amp;rsquo;s styles can be included in the user&amp;rsquo;s stylesheet using the &lt;code&gt;@import&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;@import&lt;/code&gt; ディレクティブを使用して、テーマのスタイルをユーザーのスタイルシートに含めることができます。</target>
        </trans-unit>
        <trans-unit id="e29302c3d7ec4a5aa08cecaf36bdb5c80f08ca50" translate="yes" xml:space="preserve">
          <source>Your theme&amp;rsquo;s stylesheets should be placed in your theme&amp;rsquo;s &lt;code&gt;_sass&lt;/code&gt; folder, again, just as you would when authoring a Jekyll site.</source>
          <target state="translated">Jekyllサイトを作成するときと同じように、テーマのスタイルシートをテーマの &lt;code&gt;_sass&lt;/code&gt; フォルダーに配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="53a0acfad59379b3e050338bf9f23cfc172ee787" translate="yes" xml:space="preserve">
          <source>_</source>
          <target state="translated">_</target>
        </trans-unit>
        <trans-unit id="cddd9dea2f2c15cc2c0f262b863ae26ba45a0d26" translate="yes" xml:space="preserve">
          <source>a list of posts for the current page</source>
          <target state="translated">現在のページの投稿一覧</target>
        </trans-unit>
        <trans-unit id="cdd41bd4d17b885aa9a031d54883c85a6fb78673" translate="yes" xml:space="preserve">
          <source>and you&amp;rsquo;ll search for just the name &lt;code&gt;jekyll&lt;/code&gt;, and in brackets will be latest version. Another way to check if you have the latest version is to run the command &lt;code&gt;gem outdated&lt;/code&gt;. This will provide a list of all the gems on your system that need to be updated. If you aren&amp;rsquo;t running the latest version, run this command:</source>
          <target state="translated">そして、名前 &lt;code&gt;jekyll&lt;/code&gt; だけを検索します。括弧内は最新バージョンになります。最新バージョンかどうかを確認するもう1つの方法は、コマンド &lt;code&gt;gem outdated&lt;/code&gt; を実行することです。これにより、更新が必要なシステム上のすべての宝石のリストが提供されます。最新バージョンを実行していない場合は、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="84e17b567c13278b6db8b70738212be1721bfbba" translate="yes" xml:space="preserve">
          <source>classifier-reborn &amp;ndash; for &lt;code&gt;site.related_posts&lt;/code&gt;</source>
          <target state="translated">classifier-reborn &amp;ndash; for &lt;code&gt;site.related_posts&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0f387cd682af1b56b6928e2187e1cf30f3f0f267" translate="yes" xml:space="preserve">
          <source>current page number</source>
          <target state="translated">げんざいページばんごう</target>
        </trans-unit>
        <trans-unit id="de9751fbe1f37ff6400bc3c3c630e8b6f873289d" translate="yes" xml:space="preserve">
          <source>each of the following &lt;code&gt;permalink&lt;/code&gt; configurations will produce the document structure shown below it.</source>
          <target state="translated">以下の &lt;code&gt;permalink&lt;/code&gt; 構成のそれぞれは、その下に示されているドキュメント構造を生成します。</target>
        </trans-unit>
        <trans-unit id="d6a1d7e6a4b379d0423f23938ee2455c4de4e020" translate="yes" xml:space="preserve">
          <source>jekyll-coffeescript &amp;ndash; processing of CoffeeScript</source>
          <target state="translated">jekyll-coffeescript &amp;ndash; CoffeeScriptの処理</target>
        </trans-unit>
        <trans-unit id="44ecb5745225564cc0df8ba3faba076157148aeb" translate="yes" xml:space="preserve">
          <source>jekyll-gist &amp;ndash; the &lt;code&gt;gist&lt;/code&gt; Liquid tag</source>
          <target state="translated">ジキル-要旨- &lt;code&gt;gist&lt;/code&gt; 液体タグ</target>
        </trans-unit>
        <trans-unit id="61fed29c1622c2460e310b7ba074d09ad9690a05" translate="yes" xml:space="preserve">
          <source>jekyll-paginate &amp;ndash; Jekyll&amp;rsquo;s pagination solution from days past</source>
          <target state="translated">jekyll-paginate &amp;ndash;過去数日間のJekyllのページネーションソリューション</target>
        </trans-unit>
        <trans-unit id="b85dac7f646475d4018a5c35390352f94773c821" translate="yes" xml:space="preserve">
          <source>methods</source>
          <target state="translated">methods</target>
        </trans-unit>
        <trans-unit id="adbaac028faf4c6fe85d20f0f3e7036aa8f53b53" translate="yes" xml:space="preserve">
          <source>number of pagination pages</source>
          <target state="translated">ページネーションページ数</target>
        </trans-unit>
        <trans-unit id="7f3d7d913d96b3695a4d14cf80d175d3a70ca785" translate="yes" xml:space="preserve">
          <source>number of posts per page</source>
          <target state="translated">ページあたりの投稿数</target>
        </trans-unit>
        <trans-unit id="e141fbc4aa6d2eb2000921a62e42e53d2cb725bc" translate="yes" xml:space="preserve">
          <source>page number of the next pagination page, or &lt;code&gt;nil&lt;/code&gt; if no subsequent page exists</source>
          <target state="translated">次のページ付けページのページ番号、または後続のページが存在しない場合は &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="477003d8ad9f294f7a5e66b7b23cea2370f232ab" translate="yes" xml:space="preserve">
          <source>page number of the previous pagination page, or &lt;code&gt;nil&lt;/code&gt; if no previous page exists</source>
          <target state="translated">前のページ付けページのページ番号。前のページが存在しない場合は &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7249e2726e43700f75624d17be148a1fe33dc81b" translate="yes" xml:space="preserve">
          <source>path of next pagination page, or &lt;code&gt;nil&lt;/code&gt; if no subsequent page exists</source>
          <target state="translated">次のページ付けページのパス、または後続のページが存在しない場合は &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2136980dc1c16e890e8c954056c2aff1e760d287" translate="yes" xml:space="preserve">
          <source>path of previous pagination page, or &lt;code&gt;nil&lt;/code&gt; if no previous page exists</source>
          <target state="translated">前のページ付けページのパス、または前のページが存在しない場合は &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c12e5cd2633c7d844515ee6e6887c2ed83fae9da" translate="yes" xml:space="preserve">
          <source>pygments.rb &amp;ndash; the Pygments highlighter</source>
          <target state="translated">pygments.rb &amp;ndash; Pygmentsハイライター</target>
        </trans-unit>
        <trans-unit id="ff1eb48289c8642531cabb1aba205b5a32afd81b" translate="yes" xml:space="preserve">
          <source>redcarpet &amp;ndash; the Markdown processor</source>
          <target state="translated">redcarpet &amp;ndash; Markdownプロセッサ</target>
        </trans-unit>
        <trans-unit id="9cd1a8b7dd930db5d1b080584eeefe7022570049" translate="yes" xml:space="preserve">
          <source>rsync</source>
          <target state="translated">rsync</target>
        </trans-unit>
        <trans-unit id="61541b484ac2a6488909f3326523fa0e68783461" translate="yes" xml:space="preserve">
          <source>scp</source>
          <target state="translated">scp</target>
        </trans-unit>
        <trans-unit id="c1c3e9d5de5edff7206ca347150e24248ed6b6ed" translate="yes" xml:space="preserve">
          <source>see &lt;a href=&quot;#front-matter-defaults&quot;&gt;below&lt;/a&gt;</source>
          <target state="translated">下記&lt;a href=&quot;#front-matter-defaults&quot;&gt;参照&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a469c7049ec84c0c35e6494355dee74af57efef" translate="yes" xml:space="preserve">
          <source>site.collections has changed</source>
          <target state="translated">site.collectionsが変更されました</target>
        </trans-unit>
        <trans-unit id="66069ba2070cc57f0630952c3bfe6dfe306e75f8" translate="yes" xml:space="preserve">
          <source>to this (note the offset):</source>
          <target state="translated">をこれに合わせます(オフセットに注意)。</target>
        </trans-unit>
        <trans-unit id="4d41404b436c558715719accc8c3c679019735c5" translate="yes" xml:space="preserve">
          <source>to your template files in &lt;code&gt;/_layout&lt;/code&gt; folder.</source>
          <target state="translated">&lt;code&gt;/_layout&lt;/code&gt; フォルダー内のテンプレートファイルに。</target>
        </trans-unit>
        <trans-unit id="10af3b01d951df976ac4e288a775baccc746a796" translate="yes" xml:space="preserve">
          <source>toml &amp;ndash; an alternative to YAML for configuration files</source>
          <target state="translated">toml &amp;ndash;設定ファイルのYAMLの代替</target>
        </trans-unit>
        <trans-unit id="05e96e3cdd125d93c3e4b1427d0808418b629364" translate="yes" xml:space="preserve">
          <source>total number of posts in the site</source>
          <target state="translated">サイト内総書き込み数</target>
        </trans-unit>
        <trans-unit id="6d0c2cf630087d5de840fcb20e9b52c5d23adb70" translate="yes" xml:space="preserve">
          <source>which may allow you to install native gems using this command (again, using &lt;code&gt;sudo&lt;/code&gt; only if necessary):</source>
          <target state="translated">これにより、このコマンドを使用してネイティブgemをインストールできます（ここでも、必要な場合にのみ &lt;code&gt;sudo&lt;/code&gt; を使用します）。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
