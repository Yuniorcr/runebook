<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="ruby">
    <body>
      <group id="ruby">
        <trans-unit id="b4ba7d09c1c65a38881b55c0323ce067c1070a43" translate="yes" xml:space="preserve">
          <source>If you need to deserialize untrusted data, use &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; or another serialization format that is only able to load simple, 'primitive' types such as &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;, etc. Never allow user input to specify arbitrary types to deserialize into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1184163d3b0bd8e504cd3e9ae8ef54b46695ad" translate="yes" xml:space="preserve">
          <source>If you need to deserialize untrusted data, you should use &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; as it is only capable of returning 'primitive' types such as strings, arrays, hashes, numbers and nil. If you need to deserialize other classes, you should handle this manually. Never deserialize to a user specified class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd738cb83bc3f11bc253c3a4de20dba4bd75649d" translate="yes" xml:space="preserve">
          <source>If you need to execute untrusted code, you should use an operating system level sandboxing mechanism. On Linux, ptrace or LXC can be used to sandbox potentially malicious code. Other similar mechanisms exist on every major operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164bd81efc305b44e716caefc398f20f9af4466d" translate="yes" xml:space="preserve">
          <source>If you only need to use the block sometimes you can use &lt;a href=&quot;../proc#method-c-new&quot;&gt;&lt;code&gt;Proc.new&lt;/code&gt;&lt;/a&gt; to create a proc from the block that was passed to your method. See &lt;a href=&quot;../proc#method-c-new&quot;&gt;&lt;code&gt;Proc.new&lt;/code&gt;&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c52f90bee228ab70aebabfedf721d1d60992d7" translate="yes" xml:space="preserve">
          <source>If you prefer more detailed declaration, check class_option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395512964cdcc428ca18a56ba97e0aa5acea060d" translate="yes" xml:space="preserve">
          <source>If you provide a block that takes one argument, it will be passed the field and is expected to return the converted value or the field itself. If your block takes two arguments, it will also be passed a &lt;a href=&quot;csv#FieldInfo&quot;&gt;&lt;code&gt;CSV::FieldInfo&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt;, containing details about the field. Again, the block should return a converted field or the field itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763e07b06127131fb5098bb04ad86f93c82a1b75" translate="yes" xml:space="preserve">
          <source>If you run ruby with warnings enabled and have an indentation mis-match, you will receive a warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39a64a4a4b7d6c096caa92cfa7f018f0061c951" translate="yes" xml:space="preserve">
          <source>If you send three arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907aa267937b7a90af0963b50e5c5bc271a6d1ea" translate="yes" xml:space="preserve">
          <source>If you set &lt;code&gt;with_directory&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;, then the returned pathnames will contain the filename only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f77daa7039dc338fe079e7dc9694fa95eaf32107" translate="yes" xml:space="preserve">
          <source>If you specify a block, then for each element in &lt;em&gt;enum&lt;/em&gt; the block is passed an accumulator value (&lt;em&gt;memo&lt;/em&gt;) and the element. If you specify a symbol instead, then each element in the collection will be passed to the named method of &lt;em&gt;memo&lt;/em&gt;. In either case, the result becomes the new value for &lt;em&gt;memo&lt;/em&gt;. At the end of the iteration, the final value of &lt;em&gt;memo&lt;/em&gt; is the return value for the method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18be5a023945f8f63c4ce7429e08c766a6d8732" translate="yes" xml:space="preserve">
          <source>If you use IPv4 multicast you may need to set an address of the inbound interface which joins a multicast group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d4511b8752a93fcb8a389e9fb068fb7cd85b93" translate="yes" xml:space="preserve">
          <source>If you use IPv6 multicast then &lt;code&gt;multicast_interface&lt;/code&gt; is used as the inbound interface. &lt;code&gt;multicast_interface&lt;/code&gt; is a network interface index. If &lt;code&gt;multicast_interface&lt;/code&gt; is omitted then 0 (default interface) is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d1ee85fccb7b40209ad48a7d714d688f5ea5e9" translate="yes" xml:space="preserve">
          <source>If you use IPv6 multicast you may need to set both an address and the outbound interface index:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2969b61216fcb534a8b5c051277534ac82feb0e" translate="yes" xml:space="preserve">
          <source>If you use IPv6 multicast you may need to set both the local interface address and the inbound interface index:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14db8439ac4d4dd52dc8f7236860ffc9118e4d6" translate="yes" xml:space="preserve">
          <source>If you want Rspec::RR to be initialized with its own set of options, you have to do that explicitly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ab60251402f59f81ad6ba377cd41ea3857efba" translate="yes" xml:space="preserve">
          <source>If you want only strict string args (useful when cascading thor classes), call strict_args_position! This is disabled by default to allow dynamic invocations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5da050c8ffaca8997323cd165b7f1530765ae76" translate="yes" xml:space="preserve">
          <source>If you want to cd to an absolute directory, you must include an escaped / (%2F) in the path. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb4c4cd4ade584d953c5a0ab1cb45651c0d81d0" translate="yes" xml:space="preserve">
          <source>If you want to match the beginning and end of the entire string in Ruby, use the anchors &lt;code&gt;\A&lt;/code&gt; and &lt;code&gt;\z&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0ed7d2e663fbdaeef417b4184d952ab6846b59" translate="yes" xml:space="preserve">
          <source>If you want to raise an error for unknown options, call check_unknown_options! This is disabled by default to allow dynamic invocations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d6976d8df7bbe0648dd9c0ff09df3a0b542fe3" translate="yes" xml:space="preserve">
          <source>If you want to raise an error when the default value of an option does not match the type call check_default_type! This is disabled by default for compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b99e9ed3acd5d5b52234fd3f931fab70bde32fa" translate="yes" xml:space="preserve">
          <source>If you want to use both Forwardable and &lt;a href=&quot;singleforwardable&quot;&gt;&lt;code&gt;SingleForwardable&lt;/code&gt;&lt;/a&gt;, you can use methods def_instance_delegator and &lt;a href=&quot;singleforwardable#method-i-def_single_delegator&quot;&gt;&lt;code&gt;def_single_delegator&lt;/code&gt;&lt;/a&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5e7af11734d81227c2da819ce554a09e110e69" translate="yes" xml:space="preserve">
          <source>If you will be activating the latest version of a gem, there is no need to call &lt;a href=&quot;kernel#method-i-gem&quot;&gt;&lt;code&gt;Kernel#gem&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel#method-i-require&quot;&gt;&lt;code&gt;Kernel#require&lt;/code&gt;&lt;/a&gt; will do the right thing for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61364d2c46efb52c5a90c0666721ac0fdf2d9c5a" translate="yes" xml:space="preserve">
          <source>If you wish to have logs automatically roll over and archive, see the newsyslog.conf(5) and newsyslog(8) man pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9fe10559f75d888fed9181537af95d6897684f3" translate="yes" xml:space="preserve">
          <source>If you wish to invoke the superclass functionality from a method use &lt;code&gt;super&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524017aa1dedf5eff0e0df3d589160f2bccc9c50" translate="yes" xml:space="preserve">
          <source>If you wish to re-use a connection across multiple &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; requests without automatically closing it you can use &lt;a href=&quot;http#method-c-new&quot;&gt;&lt;code&gt;::new&lt;/code&gt;&lt;/a&gt; and then call &lt;a href=&quot;http#method-i-start&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http#method-i-finish&quot;&gt;&lt;code&gt;finish&lt;/code&gt;&lt;/a&gt; manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e996a5d995fbd41b76d3595fb3d542de128101" translate="yes" xml:space="preserve">
          <source>If you wish to rescue an exception for only part of your method, use &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;. For more details see the page on &lt;a href=&quot;exceptions_rdoc&quot;&gt;exception handling&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d877ff8549d938ae9f820ff8a7e17f9f14aceda" translate="yes" xml:space="preserve">
          <source>If you're going to subclass &lt;a href=&quot;thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt;, be sure to call super in your &lt;code&gt;initialize&lt;/code&gt; method, otherwise a &lt;a href=&quot;threaderror&quot;&gt;&lt;code&gt;ThreadError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8bfccbe62e96cbb9f45da7bf2616c8cf84f067" translate="yes" xml:space="preserve">
          <source>If you've used &lt;a href=&quot;persistent&quot;&gt;&lt;code&gt;Bundler::Persistent::Net::HTTP::Persistent&lt;/code&gt;&lt;/a&gt; across multiple threads you should call this in each thread when you're done making HTTP requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18b5541378d04f394be6fd0f381c39aaaa8f421" translate="yes" xml:space="preserve">
          <source>If your POP server provides UIDL functionality, you can grab only selected mails from the POP server. e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee215c0c2f50fa0730d0c732fe303e3afbeb706" translate="yes" xml:space="preserve">
          <source>If your class has special serialization needs (for example, if you want to serialize in some specific format), or if it contains objects that would otherwise not be serializable, you can implement your own serialization strategy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3d26f12808a5733beb326210165016fbbd1448" translate="yes" xml:space="preserve">
          <source>If your system does not have a default set of certificates you can obtain a set extracted from Mozilla CA certificate store by cURL maintainers here: &lt;a href=&quot;https://curl.haxx.se/docs/caextract.html&quot;&gt;curl.haxx.se/docs/caextract.html&lt;/a&gt; (You may wish to use the firefox-db2pem.sh script to extract the certificates from a local install to avoid man-in-the-middle attacks.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb6ce2d28d040571dab26e0ed6e68180997c9f97" translate="yes" xml:space="preserve">
          <source>Ifaddr</source>
          <target state="translated">Ifaddr</target>
        </trans-unit>
        <trans-unit id="adfd82a495d8e8fa12679239faeb526c3808c56c" translate="yes" xml:space="preserve">
          <source>Ifaddr#addr</source>
          <target state="translated">Ifaddr#addr</target>
        </trans-unit>
        <trans-unit id="4bb199cd6795285df0f4c102709bc6ccd83d0220" translate="yes" xml:space="preserve">
          <source>Ifaddr#broadaddr</source>
          <target state="translated">Ifaddr#broadaddr</target>
        </trans-unit>
        <trans-unit id="36f1e5c847d1eb572be0342d507f310491f56b09" translate="yes" xml:space="preserve">
          <source>Ifaddr#dstaddr</source>
          <target state="translated">Ifaddr#dstaddr</target>
        </trans-unit>
        <trans-unit id="b83b981552cc2066cd7535a730b938ca2baa6a9c" translate="yes" xml:space="preserve">
          <source>Ifaddr#flags</source>
          <target state="translated">Ifaddr#flags</target>
        </trans-unit>
        <trans-unit id="c1c3e0a5343cbf016c22b2907271377b87ddfa5c" translate="yes" xml:space="preserve">
          <source>Ifaddr#ifindex</source>
          <target state="translated">Ifaddr#ifindex</target>
        </trans-unit>
        <trans-unit id="934e7ff4fb6e2d97a5aafd875290784e95bf8db0" translate="yes" xml:space="preserve">
          <source>Ifaddr#inspect</source>
          <target state="translated">Ifaddr#inspect</target>
        </trans-unit>
        <trans-unit id="cf3b3ef9e6849bccc7de8d595159a8d7b9c82d77" translate="yes" xml:space="preserve">
          <source>Ifaddr#name</source>
          <target state="translated">Ifaddr#name</target>
        </trans-unit>
        <trans-unit id="ad65ea88240296ca8561618a3d3dfdafc6c9016f" translate="yes" xml:space="preserve">
          <source>Ifaddr#netmask</source>
          <target state="translated">Ifaddr#netmask</target>
        </trans-unit>
        <trans-unit id="bc07505e969976da81ec41f5a2da4070be6d3fb5" translate="yes" xml:space="preserve">
          <source>Ifaddr#vhid</source>
          <target state="translated">Ifaddr#vhid</target>
        </trans-unit>
        <trans-unit id="4ea2d7de441d7f98620c3104f0a16b71b66162f8" translate="yes" xml:space="preserve">
          <source>Ignores pressing ^C:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab100af0231c14e37ca3e44136a116e96b70c6bc" translate="yes" xml:space="preserve">
          <source>Illegal confirmation request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f4b61ddb3f8cd6eb49b0be7cd58c04f74adb30" translate="yes" xml:space="preserve">
          <source>Immediate values are not passed by reference but are passed by value: &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, Fixnums, Symbols, and some Floats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c937d64e83987be1d2375d04d522b7ac7a74e80a" translate="yes" xml:space="preserve">
          <source>Immediately writes all buffered data in &lt;em&gt;ios&lt;/em&gt; to disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301fadcbce2b298534cfb5eeaee1763077254a5c" translate="yes" xml:space="preserve">
          <source>Immediately writes all buffered data in &lt;em&gt;ios&lt;/em&gt; to disk. Note that &lt;code&gt;fsync&lt;/code&gt; differs from using &lt;code&gt;IO#sync=&lt;/code&gt;. The latter ensures that data is flushed from Ruby's buffers, but does not guarantee that the underlying operating system actually writes it to disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8781d615fd77be9578225c40ac67b9471394cced" translate="yes" xml:space="preserve">
          <source>Implementation</source>
          <target state="translated">Implementation</target>
        </trans-unit>
        <trans-unit id="7bf4e839c17e27db28b52eb6341d1e3bdeed89f2" translate="yes" xml:space="preserve">
          <source>Implementation of an X.509 certificate as specified in RFC 5280. Provides access to a certificate's attributes and allows certificates to be read from a string, but also supports the creation of new certificates from scratch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c876b1adf75b8da3135099939e700079e10aa87" translate="yes" xml:space="preserve">
          <source>Implements &lt;a href=&quot;../drb&quot;&gt;&lt;code&gt;DRb&lt;/code&gt;&lt;/a&gt; over a UNIX socket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1ce03cf274289f4fd1bf39b9e3c4ff50575a95" translate="yes" xml:space="preserve">
          <source>Implements session storage as a flat file of 'key=value' values. This storage type only works directly with &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; values; the user is responsible for converting other types to Strings when storing and from Strings when retrieving.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e562adf7038f117943d2dcbaf1296ae086198b" translate="yes" xml:space="preserve">
          <source>Implements session storage as a global in-memory hash. &lt;a href=&quot;../session&quot;&gt;&lt;code&gt;Session&lt;/code&gt;&lt;/a&gt; data will only persist for as long as the Ruby interpreter instance does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ee997506da0a9f7c998c413fc1723445996d11" translate="yes" xml:space="preserve">
          <source>Implements session storage place holder. No actual storage will be done.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a30a7f048aa8eb0a670f868b83b7e38688d260" translate="yes" xml:space="preserve">
          <source>Implicit &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; Assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11e5215e0054ed43eca1332fd3ed5dd27e04c36" translate="yes" xml:space="preserve">
          <source>Import a &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; Marshalled object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9a060ee84c290b95bfb8820f5bb5f10fecf4c1" translate="yes" xml:space="preserve">
          <source>Import class refinements from &lt;em&gt;module&lt;/em&gt; into the current class or module definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c9151b0a3a563187fa329f095c80ce2cb1c7b5" translate="yes" xml:space="preserve">
          <source>Important Note on Checking Passwords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54cfe90f7d2c7ffd4c15fc1cf52a501c10ef35c" translate="yes" xml:space="preserve">
          <source>Importer</source>
          <target state="translated">Importer</target>
        </trans-unit>
        <trans-unit id="8c2254f87e228c355cbd9fa6b1945ab66f2770ad" translate="yes" xml:space="preserve">
          <source>Importer#[]</source>
          <target state="translated">Importer#[]</target>
        </trans-unit>
        <trans-unit id="321097531e611cdf7fa63352ad84bafb3bd8b18d" translate="yes" xml:space="preserve">
          <source>Importer#bind</source>
          <target state="translated">Importer#bind</target>
        </trans-unit>
        <trans-unit id="b04da4d8f5bf3cd39617ae976761648476c1f2a4" translate="yes" xml:space="preserve">
          <source>Importer#bind_function</source>
          <target state="translated">Importer#bind_function</target>
        </trans-unit>
        <trans-unit id="25b4427ebdc8228efaed4ee41676eb78c79a1b49" translate="yes" xml:space="preserve">
          <source>Importer#create_value</source>
          <target state="translated">Importer#create_value</target>
        </trans-unit>
        <trans-unit id="40c554e8d35ada7f9bffeba8e5ead17a4af3f9f8" translate="yes" xml:space="preserve">
          <source>Importer#dlload</source>
          <target state="translated">Importer#dlload</target>
        </trans-unit>
        <trans-unit id="e13db8632cf2ba64c1117bd8df1eddf312f04775" translate="yes" xml:space="preserve">
          <source>Importer#extern</source>
          <target state="translated">Importer#extern</target>
        </trans-unit>
        <trans-unit id="5608e997cfe0c3ae98737561502e01554e0e3ad6" translate="yes" xml:space="preserve">
          <source>Importer#handler</source>
          <target state="translated">Importer#handler</target>
        </trans-unit>
        <trans-unit id="acd99022bcff9ce6398856110231ad824d937e74" translate="yes" xml:space="preserve">
          <source>Importer#import_function</source>
          <target state="translated">Importer#import_function</target>
        </trans-unit>
        <trans-unit id="73b0f9e4043b945df87effd82113bae49a361d2a" translate="yes" xml:space="preserve">
          <source>Importer#import_symbol</source>
          <target state="translated">Importer#import_symbol</target>
        </trans-unit>
        <trans-unit id="e99b813b46d64735f671bf6f6b60e176e255a6bf" translate="yes" xml:space="preserve">
          <source>Importer#import_value</source>
          <target state="translated">Importer#import_value</target>
        </trans-unit>
        <trans-unit id="80f42331ddc0b6da5111f5924678070b86fa21b6" translate="yes" xml:space="preserve">
          <source>Importer#parse_bind_options</source>
          <target state="translated">Importer#parse_bind_options</target>
        </trans-unit>
        <trans-unit id="26bc312e39ace20d0029570abe0ab99ba97fd650" translate="yes" xml:space="preserve">
          <source>Importer#sizeof</source>
          <target state="translated">Importer#sizeof</target>
        </trans-unit>
        <trans-unit id="6174fb2370b5a479093255d2170d7b8c401cbcda" translate="yes" xml:space="preserve">
          <source>Importer#struct</source>
          <target state="translated">Importer#struct</target>
        </trans-unit>
        <trans-unit id="fa10787abca6247bf118a94a827493ea0c33dd9c" translate="yes" xml:space="preserve">
          <source>Importer#type_alias</source>
          <target state="translated">Importer#type_alias</target>
        </trans-unit>
        <trans-unit id="3f2d27e886fcce554326b76fcfe2755285093bcf" translate="yes" xml:space="preserve">
          <source>Importer#typealias</source>
          <target state="translated">Importer#typealias</target>
        </trans-unit>
        <trans-unit id="1beb60b598853e294577ad85c4241fa61c7ff153" translate="yes" xml:space="preserve">
          <source>Importer#union</source>
          <target state="translated">Importer#union</target>
        </trans-unit>
        <trans-unit id="1436b2ee09ee075bab1590b331be7788e18ab89b" translate="yes" xml:space="preserve">
          <source>Importer#value</source>
          <target state="translated">Importer#value</target>
        </trans-unit>
        <trans-unit id="b879d00d282bdf8fb95736077687ce032127cffb" translate="yes" xml:space="preserve">
          <source>In 2017, Linux manpage random(7) writes that &amp;ldquo;no cryptographic primitive available today can hope to promise more than 256 bits of security&amp;rdquo;. So it might be questionable to pass size &amp;gt; 32 to this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c63d45b1c8f98ba980f0b97af3fd1262d023b4" translate="yes" xml:space="preserve">
          <source>In OCB mode, the length must be supplied both when encrypting and when decrypting, and must be before specifying an IV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb860e3babe4b79bcee97231489d33c90ad24157" translate="yes" xml:space="preserve">
          <source>In Ruby 1.8, you could also use &lt;code&gt;retry&lt;/code&gt; where you used &lt;code&gt;redo&lt;/code&gt;. This is no longer true, now you will receive a &lt;a href=&quot;../syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; when you use &lt;code&gt;retry&lt;/code&gt; outside of a &lt;code&gt;rescue&lt;/code&gt; block. See &lt;a href=&quot;exceptions_rdoc&quot;&gt;Exceptions&lt;/a&gt; for proper usage of &lt;code&gt;retry&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41b6e163dc494d503485d920940d8df5cd4cc3d" translate="yes" xml:space="preserve">
          <source>In Ruby local variable names and method names are nearly identical. If you have not assigned to one of these ambiguous names ruby will assume you wish to call a method. Once you have assigned to the name ruby will assume you wish to reference a local variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e7f409e5a0c63269124a8d6bcf4f2c38f958ff" translate="yes" xml:space="preserve">
          <source>In Ruby, assignment uses the &lt;code&gt;=&lt;/code&gt; (equals sign) character. This example assigns the number five to the local variable &lt;code&gt;v&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d614eea2fb095ab3c707562c1284af6e6aabc52" translate="yes" xml:space="preserve">
          <source>In Ruby, you can create rational objects with the Kernel#Rational, &lt;a href=&quot;rational#method-i-to_r&quot;&gt;&lt;code&gt;to_r&lt;/code&gt;&lt;/a&gt;, or rationalize methods or by suffixing &lt;code&gt;r&lt;/code&gt; to a literal. The return values will be irreducible fractions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8583d4adf2a6cc5d33e8521a0b7bb5440b020e" translate="yes" xml:space="preserve">
          <source>In a class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aff16e8e29ac2e3649962a0986efd599c858437" translate="yes" xml:space="preserve">
          <source>In a file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d843a65ea5f6064eca97dfbb0286ad9b06eb2f80" translate="yes" xml:space="preserve">
          <source>In addition to disabling interpolation, single-quoted strings also disable all escape sequences except for the single-quote (&lt;code&gt;\'&lt;/code&gt;) and backslash (&lt;code&gt;\\&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7d482b347de30a40854ac854fb165f7fae88f6" translate="yes" xml:space="preserve">
          <source>In addition to its specific fields and methods, a &lt;a href=&quot;cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; instance is a delegator to the array of its values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988ce2f8d4d42f8971dd835d6f58f01c4bf2c77e" translate="yes" xml:space="preserve">
          <source>In addition to the methods it mixes in through the &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; module, the &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; class has proprietary methods for accessing, searching and otherwise manipulating arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46220baf549128eaf1761bfb21013ce6c06dd1c7" translate="yes" xml:space="preserve">
          <source>In almost all situations, you must provide a third argument to &lt;a href=&quot;smtp#method-c-start&quot;&gt;&lt;code&gt;SMTP.start&lt;/code&gt;&lt;/a&gt;/SMTP#start. This is the domain name which you are on (the host to send mail from). It is called the &amp;ldquo;HELO domain&amp;rdquo;. The &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; server will judge whether it should send or reject the &lt;a href=&quot;smtp&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; session by inspecting the HELO domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ace9447e4dd78fe5e5cadd91a30c90b8f370826" translate="yes" xml:space="preserve">
          <source>In an AF_INET/AF_INET6 sockaddr array, the 4th element, numeric IP address, is used to construct socket address in the &lt;a href=&quot;addrinfo&quot;&gt;&lt;code&gt;Addrinfo&lt;/code&gt;&lt;/a&gt; instance. If the 3rd element, textual host name, is non-nil, it is also recorded but used only for &lt;a href=&quot;addrinfo#method-i-inspect&quot;&gt;&lt;code&gt;Addrinfo#inspect&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c800dbbc25f7771f14dc3d99626bf3de734068" translate="yes" xml:space="preserve">
          <source>In any case, all arguments (&lt;code&gt;*args&lt;/code&gt;) will be passed to &lt;a href=&quot;tempfile#method-c-new&quot;&gt;&lt;code&gt;Tempfile.new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9e79a75443527cd6f99a1223941b905170157b" translate="yes" xml:space="preserve">
          <source>In any case, all arguments (&lt;code&gt;basename&lt;/code&gt;, &lt;code&gt;tmpdir&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, and &lt;code&gt;**options&lt;/code&gt;) will be treated as &lt;a href=&quot;tempfile#method-c-new&quot;&gt;&lt;code&gt;Tempfile.new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab06b1691e550fc410b173bb7edd098cdaf163e" translate="yes" xml:space="preserve">
          <source>In concurrent programming, a monitor is an object or module intended to be used safely by more than one thread. The defining characteristic of a monitor is that its methods are executed with mutual exclusion. That is, at each point in time, at most one thread may be executing any of its methods. This mutual exclusion greatly simplifies reasoning about the implementation of monitors compared to reasoning about parallel code that updates a data structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8951c966e7874998a8f6411f1f623d361c8270" translate="yes" xml:space="preserve">
          <source>In each of the checked classes or modules, if the constant is not present but there is an autoload for it, &lt;code&gt;true&lt;/code&gt; is returned directly without autoloading:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be923ee6848ae9507b1d24f14a5ce52f9e93d3fb" translate="yes" xml:space="preserve">
          <source>In either case, the return value is properly padded with '=' and contains no line feeds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27720f77ce4a709a9cf5833830b60e06e306b677" translate="yes" xml:space="preserve">
          <source>In eval:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67fa14e81735c7c92cabbc4e1cf8836680cce886" translate="yes" xml:space="preserve">
          <source>In find-any mode (this behaves like libc's bsearch(3)), the block must always return a number, and there must be two indices i and j (0 &amp;lt;= i &amp;lt;= j &amp;lt;= ary.size) so that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e504007ef315f112de321d05a8cd7869850ca4" translate="yes" xml:space="preserve">
          <source>In find-any mode (this behaves like libc's bsearch(3)), the block must return a number, and there must be two values x and y (x &amp;lt;= y) so that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c10959241998044bee6cfbcecd476d4fbd776f8" translate="yes" xml:space="preserve">
          <source>In find-minimum mode (this is a good choice for typical use case), the block must return true or false, and there must be a value x so that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25410f1f2e61455eab6f8547e2e998d443a68098" translate="yes" xml:space="preserve">
          <source>In find-minimum mode (this is a good choice for typical use cases), the block must always return true or false, and there must be an index i (0 &amp;lt;= i &amp;lt;= ary.size) so that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2339f989f0a69b160e2c6b5d3389e9ba00ba57" translate="yes" xml:space="preserve">
          <source>In general, &lt;code&gt;clone&lt;/code&gt; and &lt;code&gt;dup&lt;/code&gt; may have different semantics in descendant classes. While &lt;code&gt;clone&lt;/code&gt; is used to duplicate an object, including its internal state, &lt;code&gt;dup&lt;/code&gt; typically uses the class of the descendant object to create the new instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02c7631c54dca3b3259e8d9044eab5e2e0fc202" translate="yes" xml:space="preserve">
          <source>In general, &lt;code&gt;to_sym&lt;/code&gt; returns the &lt;code&gt;Symbol&lt;/code&gt; corresponding to an object. As &lt;em&gt;sym&lt;/em&gt; is already a symbol, &lt;code&gt;self&lt;/code&gt; is returned in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba10615779c446a37206ac0e69780a8f639b6db" translate="yes" xml:space="preserve">
          <source>In in-place-edit mode, this variable holds the extension, otherwise nil.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ecdb244efa23d488d4372b0c5e74267ba7805b" translate="yes" xml:space="preserve">
          <source>In lambdas, &lt;code&gt;return&lt;/code&gt; means exit from this lambda;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a431ee7d1076466fbd913d4ba985a11c5b29a7" translate="yes" xml:space="preserve">
          <source>In lambdas, arguments are treated in the same way as in methods: strict, with &lt;code&gt;ArgumentError&lt;/code&gt; for mismatching argument number, and no additional argument processing;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4eb6460fac37dc306f88fcb135b62c4bb25c1d" translate="yes" xml:space="preserve">
          <source>In many cases, parenthesis are not necessary when sending a message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30ea8ababf13fad0ede56121fd478a5bf738bad" translate="yes" xml:space="preserve">
          <source>In methods like &lt;code&gt;Regexp#match&lt;/code&gt; and &lt;code&gt;String#match&lt;/code&gt; that take an (optional) offset, it matches where the search begins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37de0e9c6a9ab30ad9664d339faf13df374d0ba4" translate="yes" xml:space="preserve">
          <source>In methods like &lt;code&gt;String#gsub&lt;/code&gt; and &lt;code&gt;String#scan&lt;/code&gt;, it changes on each iteration. It initially matches the beginning of subject, and in each following iteration it matches where the last match finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df0bd35cf154869d89da660a648eb71284ca505" translate="yes" xml:space="preserve">
          <source>In older RubyGems versions, the environment variable GEM_SKIP could be used to skip activation of specified gems, for example to test out changes that haven't been installed yet. Now RubyGems defers to -I and the RUBYLIB environment variable to skip activation of a gem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0113b63472429593b8a15adc42246924dd3ee917" translate="yes" xml:space="preserve">
          <source>In order to create new threads, Ruby provides &lt;a href=&quot;thread#method-c-new&quot;&gt;&lt;code&gt;::new&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;thread#method-c-start&quot;&gt;&lt;code&gt;::start&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;thread#method-c-fork&quot;&gt;&lt;code&gt;::fork&lt;/code&gt;&lt;/a&gt;. A block must be provided with each of these methods, otherwise a &lt;a href=&quot;threaderror&quot;&gt;&lt;code&gt;ThreadError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ff04219b2863d61c2edb516267f301a92f17a2" translate="yes" xml:space="preserve">
          <source>In order to execute the command, one of the &lt;code&gt;exec(2)&lt;/code&gt; system calls are used, so the running command may inherit some of the environment of the original program (including open file descriptors).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51606b912cc4906ec35e6f90a349287af1b35830" translate="yes" xml:space="preserve">
          <source>In order to make this work, &lt;a href=&quot;sslcontext#attribute-i-verify_mode&quot;&gt;&lt;code&gt;verify_mode&lt;/code&gt;&lt;/a&gt; must be set to VERIFY_PEER and the server hostname must be given by &lt;a href=&quot;sslsocket#method-i-hostname-3D&quot;&gt;&lt;code&gt;OpenSSL::SSL::SSLSocket#hostname=&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6146e43abd97bbbcb617d6c210b4b43ca5cefc" translate="yes" xml:space="preserve">
          <source>In order to use a &lt;a href=&quot;../../../../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; for the proxy you may need to do some extra work beyond &lt;a href=&quot;../../../../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; parsing if the proxy requires a password:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705586c5852c02f646e8026dcd9f6f91d8ba42dd" translate="yes" xml:space="preserve">
          <source>In order to use this constructor, you must first require the &lt;a href=&quot;pathname&quot;&gt;&lt;code&gt;Pathname&lt;/code&gt;&lt;/a&gt; standard library extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9105888b516af0976d8e5c8eac5c5a1e95e3f9d2" translate="yes" xml:space="preserve">
          <source>In order to use this method you must first require the &lt;a href=&quot;pp&quot;&gt;&lt;code&gt;PP&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc600b7b82df6fa38b6fedc41452a9733dc7dd3" translate="yes" xml:space="preserve">
          <source>In order to use this method, you must require expect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e084e06dde919abf85fc49f01e9feb1afc168a2" translate="yes" xml:space="preserve">
          <source>In our case, we're simply returning a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, so next we have the &lt;code&gt;:string_literal&lt;/code&gt; expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3fd237d5c90a7e32a67f2add5671f77f69403b" translate="yes" xml:space="preserve">
          <source>In previous versions of Ruby you would need to require 'net/https' to use HTTPS. This is no longer true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068e5253b78fb12fa4fc4047aaedf5f0c9267189" translate="yes" xml:space="preserve">
          <source>In regular procs, &lt;code&gt;return&lt;/code&gt; means exit from embracing method (and will throw &lt;code&gt;LocalJumpError&lt;/code&gt; if invoked outside the method);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ccb941e39dc885660c6eec480d50b87e08c9ce1" translate="yes" xml:space="preserve">
          <source>In ruby you send a message to an object like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9757e3b7a0d009c3d8f52b2081caa3173cdad9e0" translate="yes" xml:space="preserve">
          <source>In scanf for Ruby, all of these specifiers scan for an optionally signed integer, rather than for an unsigned integer like their C counterparts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64954e5abdc96646bdcd911316ca889df0d9f85" translate="yes" xml:space="preserve">
          <source>In server mode, returns the list set by &lt;a href=&quot;sslcontext#attribute-i-client_ca&quot;&gt;&lt;code&gt;SSLContext#client_ca=&lt;/code&gt;&lt;/a&gt;. In client mode, returns the list of client CAs sent from the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af9fb62d17f6e2cef8b9298275a232fd3738452" translate="yes" xml:space="preserve">
          <source>In short, it's a 0-based index into bytes of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d62ab2ebb7ed54ab0d834a1b5993e15b1693ce1" translate="yes" xml:space="preserve">
          <source>In short, it's a 0-based index into the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a62a0112168df82ad567b659152ea29fa7869b3" translate="yes" xml:space="preserve">
          <source>In some cases you want to customize how a specified hook is going to be invoked. You can do that by overwriting the class method prepare_for_invocation. The class method must necessarily return a klass and an optional command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b5f1a927c06c9ea2b6e247133071a0110f41af" translate="yes" xml:space="preserve">
          <source>In some cases, you want to invoke a thor class if some option is true or false. This is automatically handled by invoke_from_option. Then the option name is used to invoke the generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3477f9e1acb1f2504d117e3b73ceeef1c554d6e" translate="yes" xml:space="preserve">
          <source>In subclasses, returns klass.new(self, *args, &amp;amp;block) unless overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf837eaf5cd5e1530cdb14e5929ea22e17f374b" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;Xs&lt;/code&gt; class below both &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; and &lt;code&gt;succ&lt;/code&gt; are implemented so &lt;code&gt;Xs&lt;/code&gt; can be used to construct ranges. Note that the &lt;a href=&quot;comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; module is included so the &lt;code&gt;==&lt;/code&gt; method is defined in terms of &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4037d3b2d16639feb9ae2f9ffd7e7ce5b7729a57" translate="yes" xml:space="preserve">
          <source>In the above example, [#&amp;lt;Encoding:ISO-8859-1&amp;gt;, #&amp;lt;Encoding:UTF-8&amp;gt;] means a converter from ISO-8859-1 to UTF-8. &amp;ldquo;crlf_newline&amp;rdquo; means newline converter from LF to CRLF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a20b1178c9ec9f85ca312d7640cbf5620da04f5" translate="yes" xml:space="preserve">
          <source>In the above example, the on condition is &lt;code&gt;n==2&lt;/code&gt;. The flip-flop is initially off (false) for 0 and 1, but becomes on (true) for 2 and remains on through 8. After 8 it turns off and remains off for 9 and 10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="becb06e80038ece8d463b335da7f415455ce611e" translate="yes" xml:space="preserve">
          <source>In the above example, the standard output in the child process is not specified. So it is inherited from the parent process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d736d9f423693191b405c11ad1661bb5e7f81740" translate="yes" xml:space="preserve">
          <source>In the block form these same values will be yielded to the block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269b1c3b415dbc07339208bc5640240ff1f9594b" translate="yes" xml:space="preserve">
          <source>In the block form, the current match string is passed in as a parameter, and variables such as &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, &lt;code&gt;$`&lt;/code&gt;, &lt;code&gt;$&amp;amp;&lt;/code&gt;, and &lt;code&gt;$'&lt;/code&gt; will be set appropriately. The value returned by the block will be substituted for the match on each call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf645df5b1b18b74c75fcddd940d860418c7b00" translate="yes" xml:space="preserve">
          <source>In the block form, this is the &lt;a href=&quot;logger#attribute-i-progname&quot;&gt;&lt;code&gt;progname&lt;/code&gt;&lt;/a&gt; to use in the log message. The default can be set with &lt;a href=&quot;logger#attribute-i-progname&quot;&gt;&lt;code&gt;progname=&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc7e3311a4f040f3f4fb79de705b028ac2c5121" translate="yes" xml:space="preserve">
          <source>In the block form, yields two arguments &lt;code&gt;master_io, slave_file&lt;/code&gt; and the value of the block is returned from &lt;code&gt;open&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f4decb1f3102551b4a4f4f588bbc8a013112b0" translate="yes" xml:space="preserve">
          <source>In the context of execution taking place within the main thread of a dRuby server (typically, as a result of a remote call on the server or one of its objects), the current server is that server. Otherwise, the current server is the primary server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf71d299ff0542024258ba172ef2e5f8293e7420" translate="yes" xml:space="preserve">
          <source>In the default mixed mode or row mode, iteration is the standard row major walking of rows. In column mode, iteration will &lt;code&gt;yield&lt;/code&gt; two element tuples containing the column name and an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of values for that column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ed7998e03a6ce75bb3502b06e0793ab7e9d844" translate="yes" xml:space="preserve">
          <source>In the default mixed mode, this method assigns rows for index access and columns for header access. You can force the index association by first calling &lt;a href=&quot;table#method-i-by_col&quot;&gt;&lt;code&gt;by_col&lt;/code&gt;&lt;/a&gt;!() or &lt;a href=&quot;table#method-i-by_row&quot;&gt;&lt;code&gt;by_row&lt;/code&gt;&lt;/a&gt;!().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="159801d94a90c2a69847d98f77e94686d4f0b03c" translate="yes" xml:space="preserve">
          <source>In the default mixed mode, this method returns rows for index access and columns for header access. You can force the index association by first calling &lt;a href=&quot;table#method-i-by_col&quot;&gt;&lt;code&gt;by_col&lt;/code&gt;&lt;/a&gt;!() or &lt;a href=&quot;table#method-i-by_row&quot;&gt;&lt;code&gt;by_row&lt;/code&gt;&lt;/a&gt;!().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ddf1d2754a61b775d1e93f0cc9810e40ba5914c" translate="yes" xml:space="preserve">
          <source>In the description of &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; methods, &lt;em&gt;permission bits&lt;/em&gt; are a platform-specific set of bits that indicate permissions of a file. On Unix-based systems, permissions are viewed as a set of three octets, for the owner, the group, and the rest of the world. For each of these entities, permissions may be set to read, write, or execute the file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7a79a79a0b859985e8c899e8f78fd18c135040" translate="yes" xml:space="preserve">
          <source>In the descriptions of Object's methods, the parameter &lt;em&gt;symbol&lt;/em&gt; refers to a symbol, which is either a quoted string or a &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; (such as &lt;code&gt;:name&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5c0ea730c2dd16b3194243cbc88558a18e9e7f" translate="yes" xml:space="preserve">
          <source>In the descriptions that follow, the parameter &lt;em&gt;sym&lt;/em&gt; refers to a symbol, which is either a quoted string or a &lt;code&gt;Symbol&lt;/code&gt; (such as &lt;code&gt;:name&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a521c545ef7f9ac3ef36b1f4231c65b227cfea" translate="yes" xml:space="preserve">
          <source>In the example below, the two processes close the ends of the pipe that they are not using. This is not just a cosmetic nicety. The read end of a pipe will not generate an end of file condition if there are any writers with the pipe still open. In the case of the parent process, the &lt;code&gt;rd.read&lt;/code&gt; will never return if it does not first issue a &lt;code&gt;wr.close&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed45b9963635b20ad975bb809346446b0b14fcb" translate="yes" xml:space="preserve">
          <source>In the first form, creates a hard link &lt;code&gt;link&lt;/code&gt; which points to &lt;code&gt;target&lt;/code&gt;. If &lt;code&gt;link&lt;/code&gt; already exists, raises Errno::EEXIST. But if the :force option is set, overwrites &lt;code&gt;link&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b03594ac769ce2b90c1c8575105dd04b91f57a8" translate="yes" xml:space="preserve">
          <source>In the first form, creates a symbolic link &lt;code&gt;link&lt;/code&gt; which points to &lt;code&gt;target&lt;/code&gt;. If &lt;code&gt;link&lt;/code&gt; already exists, raises Errno::EEXIST. But if the :force option is set, overwrites &lt;code&gt;link&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ce3c7f9fb9799e190408ac862355a4bdd5a7d0" translate="yes" xml:space="preserve">
          <source>In the first form, if no arguments are sent, the new array will be empty. When a &lt;code&gt;size&lt;/code&gt; and an optional &lt;code&gt;default&lt;/code&gt; are sent, an array is created with &lt;code&gt;size&lt;/code&gt; copies of &lt;code&gt;default&lt;/code&gt;. Take notice that all elements will reference the same object &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb07d4cd862333a14906d6bbd44299102103dd24" translate="yes" xml:space="preserve">
          <source>In the first form, iteration is defined by the given block, in which a &amp;ldquo;yielder&amp;rdquo; object, given as block parameter, can be used to yield a value by calling the &lt;code&gt;yield&lt;/code&gt; method (aliased as +&amp;lt;&amp;lt;+):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10efc91d10ba619f159e4bdc6b228c792495737a" translate="yes" xml:space="preserve">
          <source>In the first form, returns an array of the names of all constants accessible from the point of call. This list includes the names of all modules and classes defined in the global scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9867e8e645e71f4ce697d24e6740347a560ab7" translate="yes" xml:space="preserve">
          <source>In the first form, the string is taken as a command line that is subject to shell expansion before being executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412bc79cb6e64bf86e8d6136c13f1fe471dd7175" translate="yes" xml:space="preserve">
          <source>In the first part of the &lt;code&gt;timeout&lt;/code&gt; block, we can rely on &lt;a href=&quot;timeout/error&quot;&gt;&lt;code&gt;Timeout::Error&lt;/code&gt;&lt;/a&gt; being ignored. Then in the &lt;code&gt;Timeout::Error =&amp;gt; :on_blocking&lt;/code&gt; block, any operation that will block the calling thread is susceptible to a &lt;a href=&quot;timeout/error&quot;&gt;&lt;code&gt;Timeout::Error&lt;/code&gt;&lt;/a&gt; exception being raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="172c99cdb9bba51400f26f4f84a80b8a72027c67" translate="yes" xml:space="preserve">
          <source>In the following example a UTF-8 encoded string &amp;ldquo;Ru00E9sumu00E9&amp;rdquo; is transcoded for output to ISO-8859-1 encoding, then read back in and transcoded to UTF-8:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0cc3892462968575481d28df470601f51227ee5" translate="yes" xml:space="preserve">
          <source>In the following sections any place &amp;ldquo;variable&amp;rdquo; is used an assignment method, instance, class or global will also work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d31baee493517afba9b9b46a64f3e1d005eea8" translate="yes" xml:space="preserve">
          <source>In the former case, the following are the valid formats that will be recognized: &amp;ldquo;address&amp;rdquo;, &amp;ldquo;address/prefixlen&amp;rdquo; and &amp;ldquo;address/mask&amp;rdquo;, where IPv6 address may be enclosed in square brackets (`[' and `]'). If a prefixlen or a mask is specified, it returns a masked IP address. Although the address family is determined automatically from a specified string, you can specify one explicitly by the optional second argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9ca425aef9125c35477148129b25734b876625" translate="yes" xml:space="preserve">
          <source>In the last form, an array of the given size is created. Each element in this array is created by passing the element's index to the given block and storing the return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4900230152f444714ef958ca415a3dd6742710d4" translate="yes" xml:space="preserve">
          <source>In the latter case, the method description includes the &amp;ldquo;owner&amp;rdquo; of the original method (&lt;code&gt;Enumerable&lt;/code&gt; module, which is included into &lt;code&gt;Range&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50685aa73751a911a16a0f87d4b864b302453b4" translate="yes" xml:space="preserve">
          <source>In the method descriptions that follow, a &amp;ldquo;member&amp;rdquo; parameter refers to a struct member which is either a quoted string (&lt;code&gt;&quot;name&quot;&lt;/code&gt;) or a &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;:name&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4caac577d93b61c2fdc1d825ba719051d59b1dd" translate="yes" xml:space="preserve">
          <source>In the next example when a reference is made to an undefined constant, it attempts to load a file whose name is the lowercase version of the constant (thus class &lt;code&gt;Fred&lt;/code&gt; is assumed to be in file &lt;code&gt;fred.rb&lt;/code&gt;). If found, it returns the loaded class. It therefore implements an autoload feature similar to &lt;a href=&quot;kernel#method-i-autoload&quot;&gt;&lt;code&gt;Kernel#autoload&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;module#method-i-autoload&quot;&gt;&lt;code&gt;Module#autoload&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71b4e7e0d724441f5529fdf4c79ef80c7e91dd7" translate="yes" xml:space="preserve">
          <source>In the next example, &lt;code&gt;Process::detach&lt;/code&gt; is used to reap the child automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e81558b3ef496be7c5ca155d585a41d5a47f66" translate="yes" xml:space="preserve">
          <source>In the next example, we will guard from the &lt;a href=&quot;timeout/error&quot;&gt;&lt;code&gt;Timeout::Error&lt;/code&gt;&lt;/a&gt; exception. This will help prevent from leaking resources when &lt;a href=&quot;timeout/error&quot;&gt;&lt;code&gt;Timeout::Error&lt;/code&gt;&lt;/a&gt; exceptions occur during normal ensure clause. For this example we use the help of the standard library &lt;a href=&quot;timeout&quot;&gt;&lt;code&gt;Timeout&lt;/code&gt;&lt;/a&gt;, from lib/timeout.rb</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af95b1e1f3a1a79dd087f3bbf706b430b36823f4" translate="yes" xml:space="preserve">
          <source>In the non-block form this returns an array of size three, &lt;code&gt;[r, w, pid]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f9fcfb7f1b2de3616cb65198408e339e082a7c" translate="yes" xml:space="preserve">
          <source>In the non-block form, returns a two element array, &lt;code&gt;[master_io, slave_file]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733790fc4c8501685e0261b448dc546767e1c07e" translate="yes" xml:space="preserve">
          <source>In the recommended keyword argument style, either or both of &lt;code&gt;step&lt;/code&gt; and &lt;code&gt;limit&lt;/code&gt; (default infinity) can be omitted. In the fixed position argument style, zero as a step (i.e. &lt;code&gt;num.step(limit, 0)&lt;/code&gt;) is not allowed for historical compatibility reasons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb21f2279bec6320e80a00d7bc96e6ec6997e9a" translate="yes" xml:space="preserve">
          <source>In the second form (&lt;code&gt;exec(&quot;command1&quot;, &quot;arg1&quot;, ...)&lt;/code&gt;), the first is taken as a command name and the rest are passed as parameters to command with no shell expansion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7d485cb6836582fdbced8bda129fbaf1244038" translate="yes" xml:space="preserve">
          <source>In the second form, creates a link &lt;code&gt;dir/target&lt;/code&gt; pointing to &lt;code&gt;target&lt;/code&gt;. In the third form, creates several hard links in the directory &lt;code&gt;dir&lt;/code&gt;, pointing to each item in &lt;code&gt;targets&lt;/code&gt;. If &lt;code&gt;dir&lt;/code&gt; is not a directory, raises Errno::ENOTDIR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e4ccc4439ddc55bab85c5dca90512db02f6baf" translate="yes" xml:space="preserve">
          <source>In the second form, creates a link &lt;code&gt;dir/target&lt;/code&gt; pointing to &lt;code&gt;target&lt;/code&gt;. In the third form, creates several symbolic links in the directory &lt;code&gt;dir&lt;/code&gt;, pointing to each item in &lt;code&gt;targets&lt;/code&gt;. If &lt;code&gt;dir&lt;/code&gt; is not a directory, raises Errno::ENOTDIR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ef33eed3338e2dd8ae18543221f9f9d41dea9b" translate="yes" xml:space="preserve">
          <source>In the second, deprecated, form, a generated &lt;a href=&quot;enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt; iterates over the given object using the given method with the given arguments passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068cd6acbb4659c49c5bb9903ebc4def5a70b429" translate="yes" xml:space="preserve">
          <source>In the third form (&lt;code&gt;exec([&quot;command&quot;, &quot;argv0&quot;], &quot;arg1&quot;, ...)&lt;/code&gt;), starting a two-element array at the beginning of the command, the first element is the command to be executed, and the second argument is used as the &lt;code&gt;argv[0]&lt;/code&gt; value, which may show up in process listings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f37386fb865e9dfd6cfc35ed8fef5d358fada5e" translate="yes" xml:space="preserve">
          <source>In these three cases, if an index is negative, it is counted from the end of the string. For the &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;range&lt;/code&gt; cases the starting index is just before a character and an index matching the string's size. Additionally, an empty string is returned when the starting index for a character range is at the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd422be17f20e76e1cc874a23a6ec2fd9646dca" translate="yes" xml:space="preserve">
          <source>In this case &lt;a href=&quot;basicsocket#method-i-getsockopt&quot;&gt;&lt;code&gt;getsockopt&lt;/code&gt;&lt;/a&gt; could be called like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f1aec46dfa163f5c6679299326d4d4f95c8551" translate="yes" xml:space="preserve">
          <source>In this case &lt;a href=&quot;basicsocket#method-i-setsockopt&quot;&gt;&lt;code&gt;setsockopt&lt;/code&gt;&lt;/a&gt; could be called like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfb057be10b69ac4f6f24a7485693cc22406208" translate="yes" xml:space="preserve">
          <source>In this case, the same logic for autoloading applies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e4d22f734255907d76057bda63f12728bd2689" translate="yes" xml:space="preserve">
          <source>In this case, you might want to use &lt;a href=&quot;shellwords#method-c-escape&quot;&gt;&lt;code&gt;Shellwords.escape&lt;/code&gt;&lt;/a&gt;, or its alias &lt;a href=&quot;string#method-i-shellescape&quot;&gt;&lt;code&gt;String#shellescape&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc76646efd8dfd5aefe5d72a282d2bc0e95fa1d" translate="yes" xml:space="preserve">
          <source>In this class, BCE years are counted astronomically. Thus, the year before the year 1 is the year zero, and the year preceding the year zero is the year -1. The month and the day of month should be a negative or a positive number (as a relative month/day from the end of year/month when negative). They should not be zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0ac2b0d873fdb716a59ea57e0c3806a5f75490" translate="yes" xml:space="preserve">
          <source>In this document, the astronomical Julian day number is the same as the original Julian day number. And the chronological Julian day number is a variation of the Julian day number. Its days begin at midnight on local time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1960cf329f5943358f0519a2dc26c8a8a912e582" translate="yes" xml:space="preserve">
          <source>In this document, the astronomical modified Julian day number is the same as the original modified Julian day number. And the chronological modified Julian day number is a variation of the modified Julian day number. Its days begin at midnight on local time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46fb0c69f9d852f9580bf128c7fc533e480a82ec" translate="yes" xml:space="preserve">
          <source>In this document, when the term &amp;ldquo;Julian day number&amp;rdquo; simply appears, it just refers to &amp;ldquo;chronological Julian day number&amp;rdquo;, not the original.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9863900aa8278a4ac2738e6517bb68be826d5f67" translate="yes" xml:space="preserve">
          <source>In this document, when the term &amp;ldquo;modified Julian day number&amp;rdquo; simply appears, it just refers to &amp;ldquo;chronological modified Julian day number&amp;rdquo;, not the original.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62fea03b1e05a1264f41da19769302fcb143d6b3" translate="yes" xml:space="preserve">
          <source>In this example only &amp;ldquo;a is one&amp;rdquo; is printed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49aab3cbc1a8c0ab2b6c687054b258524982592" translate="yes" xml:space="preserve">
          <source>In this example we will change the buffering type in the &lt;code&gt;factor&lt;/code&gt; command, assuming that factor uses stdio for stdout buffering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3dc80f0a36c9805d08d74c57f033b4ef50eb72" translate="yes" xml:space="preserve">
          <source>In this example we will create three &lt;code&gt;tmpFile&lt;/code&gt;'s in three different folders under the &lt;code&gt;/tmp&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d51ac6d3a94b9d969489f8ac8b50a6b7d54c16" translate="yes" xml:space="preserve">
          <source>In this example we will read the operating system file &lt;code&gt;/etc/printcap&lt;/code&gt;, generated by &lt;code&gt;cupsd&lt;/code&gt;, and then output it to a new file relative to the &lt;code&gt;pwd&lt;/code&gt; of &lt;code&gt;sh&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619705dbcbc18b23716a6f8cfdc55b01901f06b0" translate="yes" xml:space="preserve">
          <source>In this example, we can guard from &lt;a href=&quot;thread#method-i-raise&quot;&gt;&lt;code&gt;Thread#raise&lt;/code&gt;&lt;/a&gt; exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd1dc3b0ae51caf102a17fd6fd8c46c3cff3164" translate="yes" xml:space="preserve">
          <source>In this first example, we don't reap the first child process, so it appears as a zombie in the process status display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7791ff4057db643db651a6ff4bc5b1dc452aff0" translate="yes" xml:space="preserve">
          <source>In this version, keys are &lt;a href=&quot;class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object or &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da7b7511acf0212a78f63389702b04488c7f46e" translate="yes" xml:space="preserve">
          <source>In this version, keys are symbol objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4995e6b902f2de3816d4f54a9be459c1e2167fe" translate="yes" xml:space="preserve">
          <source>In those classes, this is so-called &amp;ldquo;civil&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91439da6583d0a490e1c7742d3f2a864d6d325d4" translate="yes" xml:space="preserve">
          <source>In those classes, this is so-called &amp;ldquo;commercial&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b28554a0c3290455b1b61d0f38e384ba3a9712c" translate="yes" xml:space="preserve">
          <source>In those classes, this is so-called &amp;ldquo;ordinal&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4316798dc4510b97a40f0b9772ed38f50bc6eeb" translate="yes" xml:space="preserve">
          <source>In those classes, those are so-called &amp;ldquo;ajd&amp;rdquo; and &amp;ldquo;jd&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f793f61b43b605fda990a847efca32e2aaf408" translate="yes" xml:space="preserve">
          <source>In those classes, those are so-called &amp;ldquo;amjd&amp;rdquo; and &amp;ldquo;mjd&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6364fe85f73cb955ac6655f2e8c41506962f2b" translate="yes" xml:space="preserve">
          <source>In verbose mode, failed calls are logged to stdout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0c402219b0d1cbd6e15f382a58f9e3ba7347e6" translate="yes" xml:space="preserve">
          <source>In-memory session storage class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d60ca2af5e55ae17ee1953c39a56e5619c709b3" translate="yes" xml:space="preserve">
          <source>Include the current process ID with each message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5f87743501282fa63fbaffa15c1a3acc9cc8cd" translate="yes" xml:space="preserve">
          <source>Included modules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093be81efaf59404a56c9a5e332c22704d44ebdc" translate="yes" xml:space="preserve">
          <source>Includes URI::REGEXP::PATTERN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322f007d996fbdddf0e0293f24831431926e27c1" translate="yes" xml:space="preserve">
          <source>Includes the empty line that ends the header block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14304470fcf570d3e430ffe805a2a06e07571ec" translate="yes" xml:space="preserve">
          <source>Inclusive multicast source filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f607dc7f61c684f89947c18403be31147aad61d8" translate="yes" xml:space="preserve">
          <source>Increases left margin after newline with &lt;code&gt;indent&lt;/code&gt; for line breaks added in the block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a799dbc5ee731092a5c79ea865a117440c7aaf6c" translate="yes" xml:space="preserve">
          <source>Increasing (non-decreasing) subsequence can be chunked as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="292f2579794141e2658a1da2e3bdec6e37602404" translate="yes" xml:space="preserve">
          <source>Indent each line of the printed paragraph by indent value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68211470bad608f9949994bc70d97219e1342a83" translate="yes" xml:space="preserve">
          <source>Indent the first column by indent value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ec7fcf0ce1c005cbdd2ae9ab39e1773e6bf368" translate="yes" xml:space="preserve">
          <source>Indentation</source>
          <target state="translated">Indentation</target>
        </trans-unit>
        <trans-unit id="ed6f5e1d27adf9916aad0d47e706cd09cfc7fb56" translate="yes" xml:space="preserve">
          <source>Indentation for summary. Must be &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; (or have + &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; method).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193ec75a89d3883e93b312d747d28671f3856af6" translate="yes" xml:space="preserve">
          <source>Indentation, defaults to @summary_indent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1be19583a12b7e2b4a12a8a2ae3e1b04b95b637" translate="yes" xml:space="preserve">
          <source>Indeterminable</source>
          <target state="translated">Indeterminable</target>
        </trans-unit>
        <trans-unit id="94973e6ff5b6a2b187b9865f9f76cf5dc2fa8c2c" translate="yes" xml:space="preserve">
          <source>Index#&amp;lt;&amp;lt;</source>
          <target state="translated">Index#&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="e431094baa8f7523057857f451a8aa462a749dfe" translate="yes" xml:space="preserve">
          <source>Index#==</source>
          <target state="translated">Index#==</target>
        </trans-unit>
        <trans-unit id="c489b942cb213198781397cc62045350e62ea26e" translate="yes" xml:space="preserve">
          <source>Index#[]</source>
          <target state="translated">Index#[]</target>
        </trans-unit>
        <trans-unit id="22bc4960add0457c4b3d29894a1d6131454696c0" translate="yes" xml:space="preserve">
          <source>Index#add_source</source>
          <target state="translated">Index#add_source</target>
        </trans-unit>
        <trans-unit id="bb08f623cce4bc1c4195a297d69f666c4a1513bb" translate="yes" xml:space="preserve">
          <source>Index#all_specs</source>
          <target state="translated">Index#all_specs</target>
        </trans-unit>
        <trans-unit id="472aaea753fe51c8cfc3ed8b506a9eba5fd07784" translate="yes" xml:space="preserve">
          <source>Index#dependencies_eql?</source>
          <target state="translated">Index#dependencies_eql?</target>
        </trans-unit>
        <trans-unit id="83bc6a64069365b8725cfd53e1289ce13d18996a" translate="yes" xml:space="preserve">
          <source>Index#dependency_names</source>
          <target state="translated">Index#dependency_names</target>
        </trans-unit>
        <trans-unit id="a0912c47a6552d150f4110e3a104f585cde9cab6" translate="yes" xml:space="preserve">
          <source>Index#each</source>
          <target state="translated">Index#each</target>
        </trans-unit>
        <trans-unit id="c7d15d5c7125cde26dee94ad39052eea50f35734" translate="yes" xml:space="preserve">
          <source>Index#empty?</source>
          <target state="translated">Index#empty?</target>
        </trans-unit>
        <trans-unit id="3ca47cf1ba32f583df0a195f4ee95a150a61c33a" translate="yes" xml:space="preserve">
          <source>Index#initialize_copy</source>
          <target state="translated">Index#initialize_copy</target>
        </trans-unit>
        <trans-unit id="ae0a5c6136f292be7190a12c12ba8d9901ab689a" translate="yes" xml:space="preserve">
          <source>Index#inspect</source>
          <target state="translated">Index#inspect</target>
        </trans-unit>
        <trans-unit id="9faa19f72846719e95bc39b2c9a5138b0247048e" translate="yes" xml:space="preserve">
          <source>Index#local_search</source>
          <target state="translated">Index#local_search</target>
        </trans-unit>
        <trans-unit id="583dd28fb014955949aa5155ceeb7f9f8f2390b9" translate="yes" xml:space="preserve">
          <source>Index#search</source>
          <target state="translated">Index#search</target>
        </trans-unit>
        <trans-unit id="43675de33f68efe4243c02789b9d5795b11def14" translate="yes" xml:space="preserve">
          <source>Index#search_all</source>
          <target state="translated">Index#search_all</target>
        </trans-unit>
        <trans-unit id="a36573466f8237107489037f8f94b714ab8c898c" translate="yes" xml:space="preserve">
          <source>Index#search_by_dependency</source>
          <target state="translated">Index#search_by_dependency</target>
        </trans-unit>
        <trans-unit id="bc80a7004fb6581e67af7bd26a6fa6de9da642c3" translate="yes" xml:space="preserve">
          <source>Index#search_by_spec</source>
          <target state="translated">Index#search_by_spec</target>
        </trans-unit>
        <trans-unit id="c8467a0e5a519093274efebe116c4bc020cb08df" translate="yes" xml:space="preserve">
          <source>Index#size</source>
          <target state="translated">Index#size</target>
        </trans-unit>
        <trans-unit id="affc830e13b4261ddfdd7effd55ad1a5e41d7e8e" translate="yes" xml:space="preserve">
          <source>Index#sort_specs</source>
          <target state="translated">Index#sort_specs</target>
        </trans-unit>
        <trans-unit id="082be91ddd9bf95491e529a6f49503c91f6bda34" translate="yes" xml:space="preserve">
          <source>Index#sources</source>
          <target state="translated">Index#sources</target>
        </trans-unit>
        <trans-unit id="3765d73e1f79aaf0f31bde10eb3e95a1b75e2327" translate="yes" xml:space="preserve">
          <source>Index#spec_names</source>
          <target state="translated">Index#spec_names</target>
        </trans-unit>
        <trans-unit id="e05806bfacbb93d08c8c1713f7b7c277153c2d6f" translate="yes" xml:space="preserve">
          <source>Index#specs</source>
          <target state="translated">Index#specs</target>
        </trans-unit>
        <trans-unit id="e07107c1492de806c85653ca8f7a4f0b1e7af8da" translate="yes" xml:space="preserve">
          <source>Index#specs_by_name</source>
          <target state="translated">Index#specs_by_name</target>
        </trans-unit>
        <trans-unit id="a28568fd3e1af89a6a902d9e02ab5c1e407768e2" translate="yes" xml:space="preserve">
          <source>Index#unmet_dependency_names</source>
          <target state="translated">Index#unmet_dependency_names</target>
        </trans-unit>
        <trans-unit id="afd7f2c32bbe8a882c9de1e390eb8b53c79012e7" translate="yes" xml:space="preserve">
          <source>Index#unsorted_search</source>
          <target state="translated">Index#unsorted_search</target>
        </trans-unit>
        <trans-unit id="da7ebaa27b593275c9ddba6419e6467e4d5bf632" translate="yes" xml:space="preserve">
          <source>Index#use</source>
          <target state="translated">Index#use</target>
        </trans-unit>
        <trans-unit id="a3441fec908041a958c1c183233023511dac7ceb" translate="yes" xml:space="preserve">
          <source>Index::build</source>
          <target state="translated">Index::build</target>
        </trans-unit>
        <trans-unit id="9c868c94d5fdb550418df6d3b07b2a5c182901e3" translate="yes" xml:space="preserve">
          <source>Index::new</source>
          <target state="translated">Index::new</target>
        </trans-unit>
        <trans-unit id="b42957e5af33e886168082d1e142a72b01b23bee" translate="yes" xml:space="preserve">
          <source>Index::sort_specs</source>
          <target state="translated">Index::sort_specs</target>
        </trans-unit>
        <trans-unit id="383b324a3291b51f1e54ef9c0d763010fbc5e171" translate="yes" xml:space="preserve">
          <source>IndexError</source>
          <target state="translated">IndexError</target>
        </trans-unit>
        <trans-unit id="6cf2066f5d870045aea8fb6e1cf68775cc28549a" translate="yes" xml:space="preserve">
          <source>Indicated whether this &lt;a href=&quot;cipher/cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; instance uses an Authenticated Encryption mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d563ed5d15b7739576f26f00b2474671fc00f437" translate="yes" xml:space="preserve">
          <source>Indicates a failure to resolve a name or address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2599666de45045e116fca4e8a27080bfb82f7ff8" translate="yes" xml:space="preserve">
          <source>Indicates a problem with the &lt;a href=&quot;../../dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e1ce01935209d83cc4846286a6631eae3b52f9" translate="yes" xml:space="preserve">
          <source>Indicates a timeout resolving a name or address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6bd78ab4d211ab8f0b9600c6e31a72b1c0418b" translate="yes" xml:space="preserve">
          <source>Indicates no such domain was found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe6d60d8b152053953e8274f797aa00e01dc310" translate="yes" xml:space="preserve">
          <source>Indicates progress roughly once every second @return [void]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4836647056d9a63306fb972012bd4538ed165a16" translate="yes" xml:space="preserve">
          <source>Indicates some other unhandled resolver error was encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6386bee5d8ed8d5e96fe3f42f5fc42af29abbc13" translate="yes" xml:space="preserve">
          <source>Indicates that a value is +0. See &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt;&lt;code&gt;BigDecimal.sign&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a943d85343639632586f128725879e2396dae7a3" translate="yes" xml:space="preserve">
          <source>Indicates that a value is -0. See &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt;&lt;code&gt;BigDecimal.sign&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b64e68378ae3eed911768e0d343b20f904848ec" translate="yes" xml:space="preserve">
          <source>Indicates that a value is negative and finite. See &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt;&lt;code&gt;BigDecimal.sign&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d03de6faacf3987b1badeb002a74b0245462c05" translate="yes" xml:space="preserve">
          <source>Indicates that a value is negative and infinite. See &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt;&lt;code&gt;BigDecimal.sign&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c064c765062d46365e7621b4d785e82ec3c81718" translate="yes" xml:space="preserve">
          <source>Indicates that a value is not a number. See &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt;&lt;code&gt;BigDecimal.sign&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c4a3a93559c034af57a2efd166ac32ebf3c95f" translate="yes" xml:space="preserve">
          <source>Indicates that a value is positive and finite. See &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt;&lt;code&gt;BigDecimal.sign&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c383919905fb824b9ce2e20ae029fb602057c4cb" translate="yes" xml:space="preserve">
          <source>Indicates that a value is positive and infinite. See &lt;a href=&quot;bigdecimal#method-i-sign&quot;&gt;&lt;code&gt;BigDecimal.sign&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e31446029d83ac9086247a6535429c379aee056" translate="yes" xml:space="preserve">
          <source>Indicates that dbm_open() should open the database in read-only mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054b75f4cf8798f6f37641c147d7300ef8add08f" translate="yes" xml:space="preserve">
          <source>Indicates that dbm_open() should open the database in read/write mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22b7d946ab0f200123c2896faf16c62139763f7" translate="yes" xml:space="preserve">
          <source>Indicates that dbm_open() should open the database in read/write mode, and create it if it does not already exist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08328ea95169c772cba3d255a30d074798b4bdc" translate="yes" xml:space="preserve">
          <source>Indicates that dbm_open() should open the database in read/write mode, create it if it does not already exist, and delete all contents if it does already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6a3413acf8e1dad33e8c7b9d7c0f82a3b6a3ef" translate="yes" xml:space="preserve">
          <source>Indicates that digits &amp;gt;= 5 should be rounded up, others rounded down. See &lt;a href=&quot;bigdecimal#method-c-mode&quot;&gt;&lt;code&gt;BigDecimal.mode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f7554b1c92dec17f3008eadfbcd5f354bf894b" translate="yes" xml:space="preserve">
          <source>Indicates that digits &amp;gt;= 6 should be rounded up, others rounded down. See &lt;a href=&quot;bigdecimal#method-c-mode&quot;&gt;&lt;code&gt;BigDecimal.mode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f839fd751283af6dc3c9df1e4f86b048624c4b" translate="yes" xml:space="preserve">
          <source>Indicates that the &lt;a href=&quot;../dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; request was unable to be encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e96c3c99bd8e85407d4b442f5d780353e16fc38" translate="yes" xml:space="preserve">
          <source>Indicates that the &lt;a href=&quot;../dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; response was unable to be decoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0ff9293e857f099cddb7afabb0dc8589885920" translate="yes" xml:space="preserve">
          <source>Indicates that values should be rounded away from zero. See &lt;a href=&quot;bigdecimal#method-c-mode&quot;&gt;&lt;code&gt;BigDecimal.mode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5b2b2b6a38293a1ae59550a974a0cf64749762" translate="yes" xml:space="preserve">
          <source>Indicates that values should be rounded towards zero. See &lt;a href=&quot;bigdecimal#method-c-mode&quot;&gt;&lt;code&gt;BigDecimal.mode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e78e32174df6ab5360e958855196393af600ea2" translate="yes" xml:space="preserve">
          <source>Indicates the certificate has been revoked either permanently or temporarily (on hold).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d750ccd6fc3db96ffbc95c3dcb069886a992b5bf" translate="yes" xml:space="preserve">
          <source>Indicates the certificate is not revoked but does not necessarily mean the certificate was issued or that this response is within the certificate's validity interval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d5214aabae5a5d07a9f6e06bad46de19865b8b" translate="yes" xml:space="preserve">
          <source>Indicates the end of conditional blocks in control structures. See &lt;a href=&quot;syntax/control_expressions_rdoc&quot;&gt;control expressions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86bf4c7cfb16beddf87e53e9a1f018232d9bd78e" translate="yes" xml:space="preserve">
          <source>Indicates the responder does not know about the certificate being requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b9de7fc1f8ed52d8c9441f399b83dbcd689586" translate="yes" xml:space="preserve">
          <source>Indicates the source may be part of a larger string. See &lt;a href=&quot;converter#method-i-primitive_convert&quot;&gt;&lt;code&gt;primitive_convert&lt;/code&gt;&lt;/a&gt; for an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aff3fd80021d44c273c5b1b2a83e239205fcb6e" translate="yes" xml:space="preserve">
          <source>Indicates whether this &lt;a href=&quot;dh&quot;&gt;&lt;code&gt;DH&lt;/code&gt;&lt;/a&gt; instance has a private key associated with it or not. The private key may be retrieved with DH#priv_key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc202cd97f67e417b4f37d8d00a178683b3ba19b" translate="yes" xml:space="preserve">
          <source>Indicates whether this &lt;a href=&quot;dh&quot;&gt;&lt;code&gt;DH&lt;/code&gt;&lt;/a&gt; instance has a public key associated with it or not. The public key may be retrieved with DH#pub_key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e3954f5851f0b105e520db93732ede90f25179" translate="yes" xml:space="preserve">
          <source>Indicates whether this &lt;a href=&quot;dsa&quot;&gt;&lt;code&gt;DSA&lt;/code&gt;&lt;/a&gt; instance has a private key associated with it or not. The private key may be retrieved with DSA#private_key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fcf863f4a3cd19d1909c0cddb44c0cc0e524ddc" translate="yes" xml:space="preserve">
          <source>Indicates whether this &lt;a href=&quot;dsa&quot;&gt;&lt;code&gt;DSA&lt;/code&gt;&lt;/a&gt; instance has a public key associated with it or not. The public key may be retrieved with &lt;a href=&quot;dsa#method-i-public_key&quot;&gt;&lt;code&gt;DSA#public_key&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="385d4dde3b1f0001a0f08941a1716d9a565ec3ca" translate="yes" xml:space="preserve">
          <source>Individual switch class. Not important to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0219fd54bd5841008b18c414a5b2dea331bad1c5" translate="yes" xml:space="preserve">
          <source>Infinity</source>
          <target state="translated">Infinity</target>
        </trans-unit>
        <trans-unit id="8e75a642d9581e64a36197d3e50088c6d6d0923d" translate="yes" xml:space="preserve">
          <source>Inflate</source>
          <target state="translated">Inflate</target>
        </trans-unit>
        <trans-unit id="d1387cbdad743aba43c59cd0ab3ae911a48b62de" translate="yes" xml:space="preserve">
          <source>Inflate#&amp;lt;&amp;lt;</source>
          <target state="translated">Inflate#&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="de464422a0472d4cbda9112df04f1e8e13033229" translate="yes" xml:space="preserve">
          <source>Inflate#add_dictionary</source>
          <target state="translated">Inflate#add_dictionary</target>
        </trans-unit>
        <trans-unit id="7f8c7ae1925a23738bedbb7cde9dd1ebd693824f" translate="yes" xml:space="preserve">
          <source>Inflate#inflate</source>
          <target state="translated">Inflate#inflate</target>
        </trans-unit>
        <trans-unit id="9248552ebe4971971dcd2c119b4e98034f3b682d" translate="yes" xml:space="preserve">
          <source>Inflate#set_dictionary</source>
          <target state="translated">Inflate#set_dictionary</target>
        </trans-unit>
        <trans-unit id="267e69a4ecd744b046f51a6dbd13334574d27713" translate="yes" xml:space="preserve">
          <source>Inflate#sync</source>
          <target state="translated">Inflate#sync</target>
        </trans-unit>
        <trans-unit id="9d9c6a43d7e705253f6a6ee11dbe7b9def6bf6a5" translate="yes" xml:space="preserve">
          <source>Inflate#sync_point?</source>
          <target state="translated">Inflate#sync_point?</target>
        </trans-unit>
        <trans-unit id="b18288a8b783150adda7b58cfe3fd5abfdf42611" translate="yes" xml:space="preserve">
          <source>Inflate::inflate</source>
          <target state="translated">Inflate::inflate</target>
        </trans-unit>
        <trans-unit id="1d556d9eb37684aa00524de3b006a836a496bec2" translate="yes" xml:space="preserve">
          <source>Inflate::new</source>
          <target state="translated">Inflate::new</target>
        </trans-unit>
        <trans-unit id="0eb5ed506e4923c28d7f4a8aa69efe99b3ad75d1" translate="yes" xml:space="preserve">
          <source>Information</source>
          <target state="translated">Information</target>
        </trans-unit>
        <trans-unit id="477564c0cb350a5d10e0d558e089adce72403a2b" translate="yes" xml:space="preserve">
          <source>Information taken form the following places:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ffaa0a1279a5d5904fc00dc4185654709bb545" translate="yes" xml:space="preserve">
          <source>Information taken from the following places:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720ef62b39e1079b4cdac4e12c71f76297980e7b" translate="yes" xml:space="preserve">
          <source>Informational message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1aa918d342bb83164cec704d634aa81268d86f" translate="yes" xml:space="preserve">
          <source>Inherit from &lt;a href=&quot;basic&quot;&gt;&lt;code&gt;Bundler::Thor::Shell::Basic&lt;/code&gt;&lt;/a&gt; and add &lt;a href=&quot;color#method-i-set_color&quot;&gt;&lt;code&gt;set_color&lt;/code&gt;&lt;/a&gt; behavior. Check &lt;a href=&quot;basic&quot;&gt;&lt;code&gt;Bundler::Thor::Shell::Basic&lt;/code&gt;&lt;/a&gt; to see all available methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d7d76034b5323c847449ae03a02035a6a11ed9" translate="yes" xml:space="preserve">
          <source>Inherit from &lt;a href=&quot;basic&quot;&gt;&lt;code&gt;Bundler::Thor::Shell::Basic&lt;/code&gt;&lt;/a&gt; and add &lt;a href=&quot;html#method-i-set_color&quot;&gt;&lt;code&gt;set_color&lt;/code&gt;&lt;/a&gt; behavior. Check &lt;a href=&quot;basic&quot;&gt;&lt;code&gt;Bundler::Thor::Shell::Basic&lt;/code&gt;&lt;/a&gt; to see all available methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="5d4fd83fa830c9230fd0ef85fceb51a23abf115e" translate="yes" xml:space="preserve">
          <source>Inheritance with ExceptionClass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04eaee5fd70dc25722533c81b50efc3531b76c3c" translate="yes" xml:space="preserve">
          <source>Inheriting classes should also implement arithmetic operator methods (&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt;) and the &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; operator (see &lt;a href=&quot;comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;). These methods may rely on &lt;code&gt;coerce&lt;/code&gt; to ensure interoperability with instances of other numeric classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ccbb2b5d7ae1a9455f8bbb59a189d090240d0c3" translate="yes" xml:space="preserve">
          <source>Initialize an action to add an edge to a dependency graph @param [String] &lt;a href=&quot;deleteedge#attribute-i-origin_name&quot;&gt;&lt;code&gt;origin_name&lt;/code&gt;&lt;/a&gt; the name of the origin of the edge @param [String] &lt;a href=&quot;deleteedge#attribute-i-destination_name&quot;&gt;&lt;code&gt;destination_name&lt;/code&gt;&lt;/a&gt; the name of the destination of the edge @param [Object] requirement the requirement that the edge represents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aac21fcf7a7d47176949d4e56d63e63c0a55709" translate="yes" xml:space="preserve">
          <source>Initialize an action to add an edge to a dependency graph @param [String] origin the name of the origin of the edge @param [String] destination the name of the destination of the edge @param [Object] requirement the requirement that the edge represents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2fd2621797c2ea9c6004c3853d267982beb901" translate="yes" xml:space="preserve">
          <source>Initialize an action to detach a vertex from a dependency graph @param [String] name the name of the vertex to detach</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e071a14efd7d6e859a66194b6203694f551136" translate="yes" xml:space="preserve">
          <source>Initialize an action to tag a state of a dependency graph @param [Object] tag an opaque tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee65989ee8cb5a1a4072583e339098e9c5a9a52" translate="yes" xml:space="preserve">
          <source>Initializes a copy of a {DependencyGraph}, ensuring that all {#vertices} are properly copied. @param [DependencyGraph] other the graph to copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ac75eab19dfd97452d769a5a56351fe35197d0" translate="yes" xml:space="preserve">
          <source>Initializes a new error with the given circular vertices. @param [Array&amp;lt;DependencyGraph::Vertex&amp;gt;] vertices the vertices in the dependency</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5824fd7c9cd8e26fd453072185c9c06c41fc9d1b" translate="yes" xml:space="preserve">
          <source>Initializes a new error with the given missing dependency. @param [Object] dependency @see {#dependency} @param [Array&amp;lt;Object&amp;gt;] &lt;a href=&quot;nosuchdependencyerror#attribute-i-required_by&quot;&gt;&lt;code&gt;required_by&lt;/code&gt;&lt;/a&gt; @see {#required_by}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb687edcc0f8fd1252a48036d6cbc32e1f3deddb" translate="yes" xml:space="preserve">
          <source>Initializes a new error with the given version conflicts. @param [{String =&amp;gt; Resolution::Conflict}] conflicts see {#conflicts} @param [SpecificationProvider] &lt;a href=&quot;versionconflict#attribute-i-specification_provider&quot;&gt;&lt;code&gt;specification_provider&lt;/code&gt;&lt;/a&gt; see {#specification_provider}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb24c39813379e49938c7bf17c877e91773dcc6" translate="yes" xml:space="preserve">
          <source>Initializes a new instance and evaluates the optional block in context of the instance. Arguments &lt;code&gt;args&lt;/code&gt; are passed to &lt;a href=&quot;optionparser#method-i-new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;, see there for description of parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6030ca61b6ebeeff5cb04a5f7f8eb7be27a2be7" translate="yes" xml:space="preserve">
          <source>Initializes a new resolution. @param [SpecificationProvider] &lt;a href=&quot;resolution#attribute-i-specification_provider&quot;&gt;&lt;code&gt;specification_provider&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6233fd9e7a811d906c77bd772938d813b0172332" translate="yes" xml:space="preserve">
          <source>Initializes a new resolver. @param [SpecificationProvider] &lt;a href=&quot;resolver#attribute-i-specification_provider&quot;&gt;&lt;code&gt;specification_provider&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece8783fd2746eabcf43e1052c5922a7c490120c" translate="yes" xml:space="preserve">
          <source>Initializes a vertex with the given name and payload. @param [String] name see {#name} @param [Object] payload see {#payload}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8758c858498ca2699b2da05bfd9a1617a6485795" translate="yes" xml:space="preserve">
          <source>Initializes an empty dependency graph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e58dcdd03e961a1e6f97f4b43b80e7dbcf1f23" translate="yes" xml:space="preserve">
          <source>Initializes an empty log</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="119601371006d9e0197ebc6fd56e5c7d1dde3673" translate="yes" xml:space="preserve">
          <source>Initializes instance variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41cf2062b172fa6eb56193b1456377ddc0e8dd97" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;cipher/cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; for decryption.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8900562c3c74a0733f2b1d462f6e3c643d701c2" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;cipher/cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; for encryption.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5ef5d399eba0921aaf27abfa95142391e4dd98" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;monitormixin&quot;&gt;&lt;code&gt;MonitorMixin&lt;/code&gt;&lt;/a&gt; after being included in a class or when an object has been extended with the &lt;a href=&quot;monitormixin&quot;&gt;&lt;code&gt;MonitorMixin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebdf5c8e2ad65ac0647f9a3c425c42d3db239a7" translate="yes" xml:space="preserve">
          <source>Initializes the instance and yields itself if called with a block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9239bfad19cd4e5dcd8d99055c15d337d03dd637" translate="yes" xml:space="preserve">
          <source>Initializes the supplemental group access list by reading the system group database and using all groups of which the given user is a member. The group with the specified &lt;em&gt;gid&lt;/em&gt; is also added to the list. Returns the resulting &lt;code&gt;Array&lt;/code&gt; of the gids of all the groups in the supplementary group access list. Not available on all platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1382981d607629b6f24ce8f7181ab024e994b8" translate="yes" xml:space="preserve">
          <source>Initiates an SSL/TLS handshake with a server. The handshake may be started after unencrypted data has been sent over the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8159b1ca416869ef46ad2550c80edcba244a69b7" translate="yes" xml:space="preserve">
          <source>Initiates garbage collection, unless manually disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47eed7458e3265138906868610283af34bd9d70" translate="yes" xml:space="preserve">
          <source>Initiates the SSL/TLS handshake as a client in non-blocking manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d8997eba91022793087964f0f51efe2c677013" translate="yes" xml:space="preserve">
          <source>Initiates the SSL/TLS handshake as a server in non-blocking manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da47bd094f8f51bb22ce86e9bf2efe07ab25b154" translate="yes" xml:space="preserve">
          <source>Initiates the termination of the Ruby script by raising the &lt;code&gt;SystemExit&lt;/code&gt; exception. This exception may be caught. The optional parameter is used to return a status code to the invoking environment. &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;FALSE&lt;/code&gt; of &lt;em&gt;status&lt;/em&gt; means success and failure respectively. The interpretation of other integer values are system dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca8a0d344a0e19a0d77c7ff904b9681383397eb" translate="yes" xml:space="preserve">
          <source>Injector</source>
          <target state="translated">Injector</target>
        </trans-unit>
        <trans-unit id="ee2370833f30eb448197b966183503fdfbcd79dd" translate="yes" xml:space="preserve">
          <source>Injector#append_to</source>
          <target state="translated">Injector#append_to</target>
        </trans-unit>
        <trans-unit id="e16d25bc297932d263bb249091569017ddcd834e" translate="yes" xml:space="preserve">
          <source>Injector#build_gem_lines</source>
          <target state="translated">Injector#build_gem_lines</target>
        </trans-unit>
        <trans-unit id="813bdeda185d956c195b08b6ec01d5df8b806401" translate="yes" xml:space="preserve">
          <source>Injector#conservative_version</source>
          <target state="translated">Injector#conservative_version</target>
        </trans-unit>
        <trans-unit id="d2eea097a94fd776d46be9f411769dadcf199b48" translate="yes" xml:space="preserve">
          <source>Injector#cross_check_for_errors</source>
          <target state="translated">Injector#cross_check_for_errors</target>
        </trans-unit>
        <trans-unit id="9f4134f5d9219842ba5f28a272f53659d4382e53" translate="yes" xml:space="preserve">
          <source>Injector#inject</source>
          <target state="translated">Injector#inject</target>
        </trans-unit>
        <trans-unit id="e50387fe9ac40881386efc85a035d22da3fdf6f9" translate="yes" xml:space="preserve">
          <source>Injector#remove</source>
          <target state="translated">Injector#remove</target>
        </trans-unit>
        <trans-unit id="b17383dd7a961b2684d07f84cb79a22ef94927dc" translate="yes" xml:space="preserve">
          <source>Injector#remove_deps</source>
          <target state="translated">Injector#remove_deps</target>
        </trans-unit>
        <trans-unit id="ad41e9a1e7a7c3dc768898b41e26e2d2a3ed9586" translate="yes" xml:space="preserve">
          <source>Injector#remove_gems_from_dependencies</source>
          <target state="translated">Injector#remove_gems_from_dependencies</target>
        </trans-unit>
        <trans-unit id="d6d29387e3d0e4de73bcb6a5f15a09c0cc982270" translate="yes" xml:space="preserve">
          <source>Injector#remove_gems_from_gemfile</source>
          <target state="translated">Injector#remove_gems_from_gemfile</target>
        </trans-unit>
        <trans-unit id="1caf5338863fd24be071624568855785a82d6a4d" translate="yes" xml:space="preserve">
          <source>Injector#remove_nested_blocks</source>
          <target state="translated">Injector#remove_nested_blocks</target>
        </trans-unit>
        <trans-unit id="c1d4448db2a98451a0a107b5cfe9ba279c369f8f" translate="yes" xml:space="preserve">
          <source>Injector#show_warning</source>
          <target state="translated">Injector#show_warning</target>
        </trans-unit>
        <trans-unit id="a5518fdd0106f4c530c6bd146976d37f6669ab74" translate="yes" xml:space="preserve">
          <source>Injector#version_prefix</source>
          <target state="translated">Injector#version_prefix</target>
        </trans-unit>
        <trans-unit id="d2f3b2379cd6bb315daedbf7ea668275f258e758" translate="yes" xml:space="preserve">
          <source>Injector::inject</source>
          <target state="translated">Injector::inject</target>
        </trans-unit>
        <trans-unit id="21a5363c9246b1bdad59a3ff0d8c8d8e48751dc1" translate="yes" xml:space="preserve">
          <source>Injector::new</source>
          <target state="translated">Injector::new</target>
        </trans-unit>
        <trans-unit id="929c3bff7f322a11d9e6cf1b82bf62ae2be037cd" translate="yes" xml:space="preserve">
          <source>Injector::remove</source>
          <target state="translated">Injector::remove</target>
        </trans-unit>
        <trans-unit id="d547ba04eec79a0b1d8c7751ab23c521b871e795" translate="yes" xml:space="preserve">
          <source>Injects text right after the class definition. Since it depends on &lt;a href=&quot;actions#method-i-insert_into_file&quot;&gt;&lt;code&gt;insert_into_file&lt;/code&gt;&lt;/a&gt;, it's reversible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ebe2c18de79e9838ba514bc7a4833713cd05658" translate="yes" xml:space="preserve">
          <source>Injects text right after the module definition. Since it depends on &lt;a href=&quot;actions#method-i-insert_into_file&quot;&gt;&lt;code&gt;insert_into_file&lt;/code&gt;&lt;/a&gt;, it's reversible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26879501324081d7b6c82d4d8d00a356eead6ce" translate="yes" xml:space="preserve">
          <source>Injects the given content into a file. Different from &lt;a href=&quot;actions#method-i-gsub_file&quot;&gt;&lt;code&gt;gsub_file&lt;/code&gt;&lt;/a&gt;, this method is reversible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7656ed554262f7ac2ceb0432b1e0f2da16793520" translate="yes" xml:space="preserve">
          <source>Inputs &lt;code&gt;deflate_string&lt;/code&gt; into the inflate stream and returns the output from the stream. Calling this method, both the input and the output buffer of the stream are flushed. If string is &lt;code&gt;nil&lt;/code&gt;, this method finishes the stream, just like &lt;a href=&quot;zstream#method-i-finish&quot;&gt;&lt;code&gt;Zlib::ZStream#finish&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edcd86fc88c292fd50a0e8135ee00173f135d8fd" translate="yes" xml:space="preserve">
          <source>Inputs &lt;code&gt;string&lt;/code&gt; into the deflate stream and returns the output from the stream. On calling this method, both the input and the output buffers of the stream are flushed. If &lt;code&gt;string&lt;/code&gt; is nil, this method finishes the stream, just like &lt;a href=&quot;zstream#method-i-finish&quot;&gt;&lt;code&gt;Zlib::ZStream#finish&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7a8c306a8b672305c8de8913b882008d357919" translate="yes" xml:space="preserve">
          <source>Inputs &lt;code&gt;string&lt;/code&gt; into the deflate stream just like &lt;a href=&quot;deflate#method-i-deflate&quot;&gt;&lt;code&gt;Zlib::Deflate#deflate&lt;/code&gt;&lt;/a&gt;, but returns the &lt;a href=&quot;deflate&quot;&gt;&lt;code&gt;Zlib::Deflate&lt;/code&gt;&lt;/a&gt; object itself. The output from the stream is preserved in output buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e476c1c8c5b549a52928e57c2026c4ab7af211" translate="yes" xml:space="preserve">
          <source>Inputs &lt;code&gt;string&lt;/code&gt; into the end of input buffer and skips data until a full flush point can be found. If the point is found in the buffer, this method flushes the buffer and returns false. Otherwise it returns &lt;code&gt;true&lt;/code&gt; and the following data of full flush point is preserved in the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534d62fa25b93b5be807767144df1c296f7e31e7" translate="yes" xml:space="preserve">
          <source>Insert or update key-value pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d828f47947156a3d99b5be6675d904d1c0eb6a" translate="yes" xml:space="preserve">
          <source>Insert text into the line at the current cursor position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee46006138d065749ddc6d06396a6549608fa9c" translate="yes" xml:space="preserve">
          <source>Insert values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9461c0bccfee7431238f482502f8bb04a5d21b9" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;switch&lt;/code&gt; at the head of the list, and associates short, long and negated long options. Arguments are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c215b9ea2e97d5755afb98d26499cdbf340dbce" translate="yes" xml:space="preserve">
          <source>Inserts &lt;em&gt;other_str&lt;/em&gt; before the character at the given &lt;em&gt;index&lt;/em&gt;, modifying &lt;em&gt;str&lt;/em&gt;. Negative indices count from the end of the string, and insert &lt;em&gt;after&lt;/em&gt; the given character. The intent is insert &lt;em&gt;aString&lt;/em&gt; so that it starts at the given &lt;em&gt;index&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93be9be88a0d186ca5e619eff58ba2dbec660a2d" translate="yes" xml:space="preserve">
          <source>Inserts string into the encoding converter. The string will be converted to the destination encoding and output on later conversions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0bd333e9fed15d70a6a96a82a07eeaa41a436d5" translate="yes" xml:space="preserve">
          <source>Inserts the given values before the element with the given &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16cbab9195c6f34855ee1c374d0a6fa2602a7cae" translate="yes" xml:space="preserve">
          <source>Inside &lt;code&gt;map&lt;/code&gt;, the block of code is treated as a regular (non-lambda) proc, which means that the internal arrays will be deconstructed to pairs of arguments, and &lt;code&gt;return&lt;/code&gt; will exit from the method &lt;code&gt;test&lt;/code&gt;. That would not be possible with a stricter lambda.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6aed795e0d33dd57be7aeacaedaa293d5568e9f" translate="yes" xml:space="preserve">
          <source>Inside a rescue block is the only valid location for &lt;code&gt;retry&lt;/code&gt;, all other uses will raise a &lt;a href=&quot;../syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;. If you wish to retry a block iteration use &lt;code&gt;redo&lt;/code&gt;. See &lt;a href=&quot;control_expressions_rdoc&quot;&gt;Control Expressions&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca524db81bcb99f3382cd301ce47b0c595951595" translate="yes" xml:space="preserve">
          <source>Install socket-level Network &lt;a href=&quot;../kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; Extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ba4802bb14b2e37cd69eb7f1da00909c728741" translate="yes" xml:space="preserve">
          <source>Install socket-level Network &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; Extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5e9f46155832435f6f0a14a4cd27ea1b1a4d34" translate="yes" xml:space="preserve">
          <source>Install the gem specified by the spec at appropriate path. `install_path` provides a sufficient default, if the source can only satisfy one gem, but is not binding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32f3008bf0330dc691f3e5bc5d65acd9c33f09c" translate="yes" xml:space="preserve">
          <source>Installer</source>
          <target state="translated">Installer</target>
        </trans-unit>
        <trans-unit id="cabd321e7e22e7dbef227590d1e013e8f540b300" translate="yes" xml:space="preserve">
          <source>Installer#can_install_in_parallel?</source>
          <target state="translated">Installer#can_install_in_parallel?</target>
        </trans-unit>
        <trans-unit id="5e7e28c7eaad97c532fb75aa8dda6d612b4bbba1" translate="yes" xml:space="preserve">
          <source>Installer#create_bundle_path</source>
          <target state="translated">Installer#create_bundle_path</target>
        </trans-unit>
        <trans-unit id="af1cdede94406fc107461eaebe6d186b172bdb0f" translate="yes" xml:space="preserve">
          <source>Installer#ensure_specs_are_compatible!</source>
          <target state="translated">Installer#ensure_specs_are_compatible!</target>
        </trans-unit>
        <trans-unit id="ae817f26c35cb91f9aa7d627cf6c22471d48791d" translate="yes" xml:space="preserve">
          <source>Installer#generate_bundler_executable_stubs</source>
          <target state="translated">Installer#generate_bundler_executable_stubs</target>
        </trans-unit>
        <trans-unit id="9147c0efa654396f9f1f3c49e2764b522b1cb52b" translate="yes" xml:space="preserve">
          <source>Installer#generate_standalone_bundler_executable_stubs</source>
          <target state="translated">Installer#generate_standalone_bundler_executable_stubs</target>
        </trans-unit>
        <trans-unit id="8fd0c5f268c85d15a71b70916ca36a614f5ccf28" translate="yes" xml:space="preserve">
          <source>Installer#install</source>
          <target state="translated">Installer#install</target>
        </trans-unit>
        <trans-unit id="99617773a8aaade2d09e0704c328572acdba7c02" translate="yes" xml:space="preserve">
          <source>Installer#install_in_parallel</source>
          <target state="translated">Installer#install_in_parallel</target>
        </trans-unit>
        <trans-unit id="0f259bbfcfea6c8b502105ad6ff51cab5ffc30f4" translate="yes" xml:space="preserve">
          <source>Installer#installation_parallelization</source>
          <target state="translated">Installer#installation_parallelization</target>
        </trans-unit>
        <trans-unit id="a0a9af3f7bd516ff7b31ed5138e2b22cb8e205ba" translate="yes" xml:space="preserve">
          <source>Installer#load_plugins</source>
          <target state="translated">Installer#load_plugins</target>
        </trans-unit>
        <trans-unit id="adcd63624cd4542e78e019b1386d1e638a9c85ff" translate="yes" xml:space="preserve">
          <source>Installer#lock</source>
          <target state="translated">Installer#lock</target>
        </trans-unit>
        <trans-unit id="72886e46ce91c05bd09d566a2d43caa3c4c82465" translate="yes" xml:space="preserve">
          <source>Installer#post_install_messages</source>
          <target state="translated">Installer#post_install_messages</target>
        </trans-unit>
        <trans-unit id="e79749d9315349ecb9f7a079662e5023757af973" translate="yes" xml:space="preserve">
          <source>Installer#processor_count</source>
          <target state="translated">Installer#processor_count</target>
        </trans-unit>
        <trans-unit id="1a065783093e38f86bfdd4d6325eba32ce84442d" translate="yes" xml:space="preserve">
          <source>Installer#resolve_if_needed</source>
          <target state="translated">Installer#resolve_if_needed</target>
        </trans-unit>
        <trans-unit id="30e7ebbdf2d298df434f3971eef1cc655e520692" translate="yes" xml:space="preserve">
          <source>Installer#run</source>
          <target state="translated">Installer#run</target>
        </trans-unit>
        <trans-unit id="4e1102085e4f533b487e849b31ff71c703ade889" translate="yes" xml:space="preserve">
          <source>Installer#warn_on_incompatible_bundler_deps</source>
          <target state="translated">Installer#warn_on_incompatible_bundler_deps</target>
        </trans-unit>
        <trans-unit id="1ccb58cd13ad54d488c23aba4e39f82e8cf202e7" translate="yes" xml:space="preserve">
          <source>Installer::ambiguous_gems</source>
          <target state="translated">Installer::ambiguous_gems</target>
        </trans-unit>
        <trans-unit id="5af20ada841942b0c68e992c7a7d70e4d1029896" translate="yes" xml:space="preserve">
          <source>Installer::install</source>
          <target state="translated">Installer::install</target>
        </trans-unit>
        <trans-unit id="bf5dbb4e114909dc517a7b31f799fd888a066c32" translate="yes" xml:space="preserve">
          <source>Installer::new</source>
          <target state="translated">Installer::new</target>
        </trans-unit>
        <trans-unit id="94d861359ae44e0e8dfef45c7b8ea08772cfda2d" translate="yes" xml:space="preserve">
          <source>Installs a new plugin by the given name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8307f90137806b1b8cfa33d76801735a3c8c4d43" translate="yes" xml:space="preserve">
          <source>Installs the plugin from &lt;a href=&quot;../definition&quot;&gt;&lt;code&gt;Definition&lt;/code&gt;&lt;/a&gt; object created by limited parsing of Gemfile searching for plugins to be installed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a339d77e0d03428998ef1129b4d3a78175e8ea" translate="yes" xml:space="preserve">
          <source>Installs the plugin from rubygems source and returns the path where the plugin was installed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dee83eb988992d3df9e5d69b94e1c09c15fb49e" translate="yes" xml:space="preserve">
          <source>Installs the plugins and deps from the provided specs and returns map of gems to their paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f97f8775628e86310829ab9e8c465258ab92a5e" translate="yes" xml:space="preserve">
          <source>Instance</source>
          <target state="translated">Instance</target>
        </trans-unit>
        <trans-unit id="aa6dfe54274ed1710b82f903b6abd73713a2f05a" translate="yes" xml:space="preserve">
          <source>Instance Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab91ac16b8eaca1a003e1f456a797053f454508e" translate="yes" xml:space="preserve">
          <source>Instance methods defined in a module are only callable when included. These methods have access to the constants defined when they were included through the ancestors list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b107b5623fc53fba60fa12dc60efeade18b4caf9" translate="yes" xml:space="preserve">
          <source>Instance variables are not allowed on a class or module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5204ed8f7400ef971cfb941b65a445ff5b07d34e" translate="yes" xml:space="preserve">
          <source>Instance variables are shared across all methods for the same object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db8f817f339280552787d550366e0b49939f9d0" translate="yes" xml:space="preserve">
          <source>Instance#&amp;lt;&amp;lt;</source>
          <target state="translated">Instance#&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="f5aea0bfd65f35ebe91fc7450fd50e91f68fa7e5" translate="yes" xml:space="preserve">
          <source>Instance#==</source>
          <target state="translated">Instance#==</target>
        </trans-unit>
        <trans-unit id="a369b1cc9a19c283c82339a598e46d7b5a60d6f4" translate="yes" xml:space="preserve">
          <source>Instance#base64digest</source>
          <target state="translated">Instance#base64digest</target>
        </trans-unit>
        <trans-unit id="13437a8d85b8fa1be873e0eb57d752c09d5db046" translate="yes" xml:space="preserve">
          <source>Instance#base64digest!</source>
          <target state="translated">Instance#base64digest!</target>
        </trans-unit>
        <trans-unit id="5e2da1ab934b30ed932f606e08bc983e89360b8d" translate="yes" xml:space="preserve">
          <source>Instance#block_length</source>
          <target state="translated">Instance#block_length</target>
        </trans-unit>
        <trans-unit id="9c6962a80b965af1354758063c2ff934d184cb8d" translate="yes" xml:space="preserve">
          <source>Instance#bubblebabble</source>
          <target state="translated">Instance#bubblebabble</target>
        </trans-unit>
        <trans-unit id="1e537abba7b9c3172c166742a8b18082b360a1a4" translate="yes" xml:space="preserve">
          <source>Instance#digest</source>
          <target state="translated">Instance#digest</target>
        </trans-unit>
        <trans-unit id="6b916108877f86b6f8185ced0064741e6a9f16ca" translate="yes" xml:space="preserve">
          <source>Instance#digest!</source>
          <target state="translated">Instance#digest!</target>
        </trans-unit>
        <trans-unit id="b8256532b084cbef01c30e4534aeefc58b52d801" translate="yes" xml:space="preserve">
          <source>Instance#digest_length</source>
          <target state="translated">Instance#digest_length</target>
        </trans-unit>
        <trans-unit id="d69a113fcc624d82fb5e52bc0697ca83fe866dae" translate="yes" xml:space="preserve">
          <source>Instance#file</source>
          <target state="translated">Instance#file</target>
        </trans-unit>
        <trans-unit id="e57733e98608644a0b1a07eb0e5b3074b3975887" translate="yes" xml:space="preserve">
          <source>Instance#finish</source>
          <target state="translated">Instance#finish</target>
        </trans-unit>
        <trans-unit id="7909933ecd52d465cc7005ecb3ce135493f14f4d" translate="yes" xml:space="preserve">
          <source>Instance#hexdigest</source>
          <target state="translated">Instance#hexdigest</target>
        </trans-unit>
        <trans-unit id="8f14457761e3cf7fbb24d122f515bd89e2f136c8" translate="yes" xml:space="preserve">
          <source>Instance#hexdigest!</source>
          <target state="translated">Instance#hexdigest!</target>
        </trans-unit>
        <trans-unit id="5b343550ec9dcc1254217709f9ff8cb85239b61b" translate="yes" xml:space="preserve">
          <source>Instance#inspect</source>
          <target state="translated">Instance#inspect</target>
        </trans-unit>
        <trans-unit id="4e0e3e69ee3dd6d9713f62ef9d3b165a9482048f" translate="yes" xml:space="preserve">
          <source>Instance#length</source>
          <target state="translated">Instance#length</target>
        </trans-unit>
        <trans-unit id="deda894b0bf988b9c5212c519cf48253b861227c" translate="yes" xml:space="preserve">
          <source>Instance#new</source>
          <target state="translated">Instance#new</target>
        </trans-unit>
        <trans-unit id="bc57591fe936a48a4550497ef55e6d35f18e4dfa" translate="yes" xml:space="preserve">
          <source>Instance#reset</source>
          <target state="translated">Instance#reset</target>
        </trans-unit>
        <trans-unit id="9bbacb4a78c3ead484e0b851897de4c123674a81" translate="yes" xml:space="preserve">
          <source>Instance#size</source>
          <target state="translated">Instance#size</target>
        </trans-unit>
        <trans-unit id="50d575864c3e82b0903621822ecf8c3800569685" translate="yes" xml:space="preserve">
          <source>Instance#to_s</source>
          <target state="translated">Instance#to_s</target>
        </trans-unit>
        <trans-unit id="6587f45d5537c5e5d1a980a8fbe62e8d1f631b1c" translate="yes" xml:space="preserve">
          <source>Instance#update</source>
          <target state="translated">Instance#update</target>
        </trans-unit>
        <trans-unit id="df5aecf503b5dbacb861575e726c2cd57f4e6cf3" translate="yes" xml:space="preserve">
          <source>Instantiating a &lt;a href=&quot;cipher/cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10eb15123815dac61ce365e5cbb876eb455e4ad4" translate="yes" xml:space="preserve">
          <source>Instead of specifying mandatory or optional arguments directly in the switch parameter, this separate parameter can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c042f3d9b71b32db250543be269d410c99d13527" translate="yes" xml:space="preserve">
          <source>Instead of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f561bde9d2e4e7f7f99d456e84920fe512a1a7ac" translate="yes" xml:space="preserve">
          <source>InstructionSequence</source>
          <target state="translated">InstructionSequence</target>
        </trans-unit>
        <trans-unit id="bf08f424abb717083f3464b70a299bafc666638a" translate="yes" xml:space="preserve">
          <source>InstructionSequence#absolute_path</source>
          <target state="translated">InstructionSequence#absolute_path</target>
        </trans-unit>
        <trans-unit id="ecbd5d96cb5014f8b4d3f983e4416ae62ff7f2de" translate="yes" xml:space="preserve">
          <source>InstructionSequence#base_label</source>
          <target state="translated">InstructionSequence#base_label</target>
        </trans-unit>
        <trans-unit id="39d9fd0efcd5c41cdfae8fce1f02b5399329b0ff" translate="yes" xml:space="preserve">
          <source>InstructionSequence#disasm</source>
          <target state="translated">InstructionSequence#disasm</target>
        </trans-unit>
        <trans-unit id="65a4afacd79ac55a25bb92999262c5854b278f2b" translate="yes" xml:space="preserve">
          <source>InstructionSequence#disassemble</source>
          <target state="translated">InstructionSequence#disassemble</target>
        </trans-unit>
        <trans-unit id="eb2ebcdae960c7a4607b2adb9f84bee422abc2e8" translate="yes" xml:space="preserve">
          <source>InstructionSequence#each_child</source>
          <target state="translated">InstructionSequence#each_child</target>
        </trans-unit>
        <trans-unit id="29f3fb61379ff17e1cad7a1217a886221f049643" translate="yes" xml:space="preserve">
          <source>InstructionSequence#eval</source>
          <target state="translated">InstructionSequence#eval</target>
        </trans-unit>
        <trans-unit id="f3f92975bcae0f7e221bd0accf5c9aa5a095940c" translate="yes" xml:space="preserve">
          <source>InstructionSequence#first_lineno</source>
          <target state="translated">InstructionSequence#first_lineno</target>
        </trans-unit>
        <trans-unit id="0e7953eccc2b0088ef1ccf59a8de8591c1985873" translate="yes" xml:space="preserve">
          <source>InstructionSequence#inspect</source>
          <target state="translated">InstructionSequence#inspect</target>
        </trans-unit>
        <trans-unit id="f395b9c1d234067b1cd55d17c2170bb26dbb6d3d" translate="yes" xml:space="preserve">
          <source>InstructionSequence#label</source>
          <target state="translated">InstructionSequence#label</target>
        </trans-unit>
        <trans-unit id="4ea1c91ec0dc1380bc6b9707468d7afb573c157a" translate="yes" xml:space="preserve">
          <source>InstructionSequence#path</source>
          <target state="translated">InstructionSequence#path</target>
        </trans-unit>
        <trans-unit id="76824ac182f62e45b787ed867ffd7c82cfb0e756" translate="yes" xml:space="preserve">
          <source>InstructionSequence#to_a</source>
          <target state="translated">InstructionSequence#to_a</target>
        </trans-unit>
        <trans-unit id="0b14868a938bb6e3a7ac1c695db2aad8112e2e6e" translate="yes" xml:space="preserve">
          <source>InstructionSequence#to_binary</source>
          <target state="translated">InstructionSequence#to_binary</target>
        </trans-unit>
        <trans-unit id="1327265ccdb113a67d7ff9afa0355fb182f2a65a" translate="yes" xml:space="preserve">
          <source>InstructionSequence#trace_points</source>
          <target state="translated">InstructionSequence#trace_points</target>
        </trans-unit>
        <trans-unit id="5298a4dfd66290d02273f847da0b4bfdb0968cbf" translate="yes" xml:space="preserve">
          <source>InstructionSequence::compile</source>
          <target state="translated">InstructionSequence::compile</target>
        </trans-unit>
        <trans-unit id="8b1f8b0e6f8fd50a510da4d392d7a3eab22904a6" translate="yes" xml:space="preserve">
          <source>InstructionSequence::compile_file</source>
          <target state="translated">InstructionSequence::compile_file</target>
        </trans-unit>
        <trans-unit id="8c239958dffe8f5fa41780feb5c61139cbb58f5a" translate="yes" xml:space="preserve">
          <source>InstructionSequence::compile_option</source>
          <target state="translated">InstructionSequence::compile_option</target>
        </trans-unit>
        <trans-unit id="39c202f718e70f9b3bba9101870aa8b83a2771be" translate="yes" xml:space="preserve">
          <source>InstructionSequence::compile_option=</source>
          <target state="translated">InstructionSequence::compile_option=</target>
        </trans-unit>
        <trans-unit id="509f074376979282d0e9ee60912c1446be25698c" translate="yes" xml:space="preserve">
          <source>InstructionSequence::disasm</source>
          <target state="translated">InstructionSequence::disasm</target>
        </trans-unit>
        <trans-unit id="8557e66821be6deea6f51b8844d274e0cc2857c1" translate="yes" xml:space="preserve">
          <source>InstructionSequence::disassemble</source>
          <target state="translated">InstructionSequence::disassemble</target>
        </trans-unit>
        <trans-unit id="aa63e4d5f32010f2ea055258eda4a77b206da7a5" translate="yes" xml:space="preserve">
          <source>InstructionSequence::load_from_binary</source>
          <target state="translated">InstructionSequence::load_from_binary</target>
        </trans-unit>
        <trans-unit id="ede9dd1e53bbe6bc0e5a0ff663ae351f5cd6cc9a" translate="yes" xml:space="preserve">
          <source>InstructionSequence::load_from_binary_extra_data</source>
          <target state="translated">InstructionSequence::load_from_binary_extra_data</target>
        </trans-unit>
        <trans-unit id="ce310c9403c7b213ef0290692ec4be37b12dbbc8" translate="yes" xml:space="preserve">
          <source>InstructionSequence::new</source>
          <target state="translated">InstructionSequence::new</target>
        </trans-unit>
        <trans-unit id="e102a9238b123f807fd48aa04f7009715efcbbb0" translate="yes" xml:space="preserve">
          <source>InstructionSequence::of</source>
          <target state="translated">InstructionSequence::of</target>
        </trans-unit>
        <trans-unit id="29a8b35f0d1cc05daf78c831ab4b666dfefe276b" translate="yes" xml:space="preserve">
          <source>InsufficientStorage</source>
          <target state="translated">InsufficientStorage</target>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="translated">Integer</target>
        </trans-unit>
        <trans-unit id="8dd774ccb72ffbd5f4e598e4bcdaeac6033e20fa" translate="yes" xml:space="preserve">
          <source>Integer#%</source>
          <target state="translated">Integer#%</target>
        </trans-unit>
        <trans-unit id="e336113ea5884c082471ea2741dac7d7f1255c3a" translate="yes" xml:space="preserve">
          <source>Integer#&amp;gt;</source>
          <target state="translated">Integer#&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1248ed9ce1cb69e0cf5b0e736341c426b03b7c3e" translate="yes" xml:space="preserve">
          <source>Integer#&amp;lt;</source>
          <target state="translated">Integer#&amp;lt;</target>
        </trans-unit>
        <trans-unit id="9b844ff638a6091c03ff298f89a51a6b783bc7dd" translate="yes" xml:space="preserve">
          <source>Integer#*</source>
          <target state="translated">Integer#*</target>
        </trans-unit>
        <trans-unit id="fb0a6aeb2dae205322c7a209b3e2efd767298225" translate="yes" xml:space="preserve">
          <source>Integer#**</source>
          <target state="translated">Integer#**</target>
        </trans-unit>
        <trans-unit id="21579129901a7669b813d3ee3bb4c8d15cd7b50a" translate="yes" xml:space="preserve">
          <source>Integer#+</source>
          <target state="translated">Integer#+</target>
        </trans-unit>
        <trans-unit id="d53f885e2cbe7109d29430141ce92865f5f90c58" translate="yes" xml:space="preserve">
          <source>Integer#-</source>
          <target state="translated">Integer#-</target>
        </trans-unit>
        <trans-unit id="7451e131dd4e0aab581a43fe96603cc668697fb7" translate="yes" xml:space="preserve">
          <source>Integer#-@</source>
          <target state="translated">Integer#-@</target>
        </trans-unit>
        <trans-unit id="ac1ad7ca2433d44934f9e87a31e309b7aed9016f" translate="yes" xml:space="preserve">
          <source>Integer#/</source>
          <target state="translated">Integer#/</target>
        </trans-unit>
        <trans-unit id="02d29654b38e27c6239a94bc9aedfbfb8264393d" translate="yes" xml:space="preserve">
          <source>Integer#==</source>
          <target state="translated">Integer#==</target>
        </trans-unit>
        <trans-unit id="03a0066e740ee48d4220d13bfd5139baab9e201f" translate="yes" xml:space="preserve">
          <source>Integer#===</source>
          <target state="translated">Integer#===</target>
        </trans-unit>
        <trans-unit id="afbcefa04b3d00bd8d8b9c7daa8cae569a95be7d" translate="yes" xml:space="preserve">
          <source>Integer#[]</source>
          <target state="translated">Integer#[]</target>
        </trans-unit>
        <trans-unit id="99fd68fab1bd57990df1400ee32ea02ac4f49ad1" translate="yes" xml:space="preserve">
          <source>Integer#^</source>
          <target state="translated">Integer#^</target>
        </trans-unit>
        <trans-unit id="09694bfad11ec71a5a70518968b865b6828ff8a7" translate="yes" xml:space="preserve">
          <source>Integer#abs</source>
          <target state="translated">Integer#abs</target>
        </trans-unit>
        <trans-unit id="f1a986ea3341c4c8e16e8b5f689ba288495fbc1d" translate="yes" xml:space="preserve">
          <source>Integer#ceil</source>
          <target state="translated">Integer#ceil</target>
        </trans-unit>
        <trans-unit id="29bb01f8652a9a39ac28bf27453a699c26ae518d" translate="yes" xml:space="preserve">
          <source>Integer#chr</source>
          <target state="translated">Integer#chr</target>
        </trans-unit>
        <trans-unit id="0be075c7b80e2eda5b08f66344d29a00e5c842df" translate="yes" xml:space="preserve">
          <source>Integer#div</source>
          <target state="translated">Integer#div</target>
        </trans-unit>
        <trans-unit id="4dfcd7805a4f46db29a136512f9aea526a10da4c" translate="yes" xml:space="preserve">
          <source>Integer#fdiv</source>
          <target state="translated">Integer#fdiv</target>
        </trans-unit>
        <trans-unit id="172472c8f596eea84543fb879bbf001038b56074" translate="yes" xml:space="preserve">
          <source>Integer#gcd</source>
          <target state="translated">Integer#gcd</target>
        </trans-unit>
        <trans-unit id="80781cf1bb93aa5101c7febccea14b4a5e04e769" translate="yes" xml:space="preserve">
          <source>Integer#lcm</source>
          <target state="translated">Integer#lcm</target>
        </trans-unit>
        <trans-unit id="456d58480ae947311d063f8446b267d0d0441f30" translate="yes" xml:space="preserve">
          <source>Integer#next</source>
          <target state="translated">Integer#next</target>
        </trans-unit>
        <trans-unit id="8b6cd861b8687dce34ef7607982ea8c8e5962167" translate="yes" xml:space="preserve">
          <source>Integer#odd?</source>
          <target state="translated">Integer#odd?</target>
        </trans-unit>
        <trans-unit id="e05f574dac2bcb402d13a662feb325a750b649f1" translate="yes" xml:space="preserve">
          <source>Integer#ord</source>
          <target state="translated">Integer#ord</target>
        </trans-unit>
        <trans-unit id="198e8646d8bea74b9aadabbd2c79a7fe1f04b6d7" translate="yes" xml:space="preserve">
          <source>Integer#pow</source>
          <target state="translated">Integer#pow</target>
        </trans-unit>
        <trans-unit id="2c5f36aa52d61a99cf0e3db0edc100d622beddea" translate="yes" xml:space="preserve">
          <source>Integer#pred</source>
          <target state="translated">Integer#pred</target>
        </trans-unit>
        <trans-unit id="dfcb69fdc944c00af29eac3a5e478662ad3446fa" translate="yes" xml:space="preserve">
          <source>Integer#size</source>
          <target state="translated">Integer#size</target>
        </trans-unit>
        <trans-unit id="8957c2231911cd59e9979584bc99d8c8968f8f96" translate="yes" xml:space="preserve">
          <source>Integer#succ</source>
          <target state="translated">Integer#succ</target>
        </trans-unit>
        <trans-unit id="f243d1a5f3dcb20ba829afa7db127bb8471c24f6" translate="yes" xml:space="preserve">
          <source>Integer#to_d</source>
          <target state="translated">Integer#to_d</target>
        </trans-unit>
        <trans-unit id="5ddfb9bb49d7ce1b0a899d61386fae0287b34f86" translate="yes" xml:space="preserve">
          <source>Integer#to_f</source>
          <target state="translated">Integer#to_f</target>
        </trans-unit>
        <trans-unit id="544269d3ebc8133b0e6108e3d4a7d1e322354d04" translate="yes" xml:space="preserve">
          <source>Integer#to_i</source>
          <target state="translated">Integer#to_i</target>
        </trans-unit>
        <trans-unit id="09b2a6c7d42eb24855f2a6b7bf11a3129f17e19f" translate="yes" xml:space="preserve">
          <source>Integer#to_r</source>
          <target state="translated">Integer#to_r</target>
        </trans-unit>
        <trans-unit id="a77a2c91af064971b9c4fa0bcd6c913744aa3da1" translate="yes" xml:space="preserve">
          <source>Integer#to_s</source>
          <target state="translated">Integer#to_s</target>
        </trans-unit>
        <trans-unit id="b89c487f78ed4df3872a857c7d25d206451bd794" translate="yes" xml:space="preserve">
          <source>Integer#upto</source>
          <target state="translated">Integer#upto</target>
        </trans-unit>
        <trans-unit id="751dbc80971e4ae125c0e169741e208ebd29a4bf" translate="yes" xml:space="preserve">
          <source>Integer#|</source>
          <target state="translated">Integer#|</target>
        </trans-unit>
        <trans-unit id="13748fb4a6dcdc397a8803f0b319e69c7b3710c2" translate="yes" xml:space="preserve">
          <source>Integer#~</source>
          <target state="translated">Integer#~</target>
        </trans-unit>
        <trans-unit id="b36bea9c2ad0708dc4237f6beed0ae0db3ce4a4d" translate="yes" xml:space="preserve">
          <source>Integer(arg, base=0, exception: true) &amp;rarr; integer &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071e1374fac18a3e84d089983eb56cc649f181c6" translate="yes" xml:space="preserve">
          <source>Integer: value is assigned to an int, and a pointer to the int is passed, with length of sizeof(int).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c5e37fe2cf408eabaa3a96cc0bfc12045644ef" translate="yes" xml:space="preserve">
          <source>Integer::sqrt</source>
          <target state="translated">Integer::sqrt</target>
        </trans-unit>
        <trans-unit id="d0cf276c554053d12a5ed19696dab55db859e92b" translate="yes" xml:space="preserve">
          <source>Integrated Services Digital Network</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8c35a5998077be06f4fba234591f15074577e9" translate="yes" xml:space="preserve">
          <source>Interactive socket priority</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab024379b6c9cc79cf30d2db7a4a9a13979df3e" translate="yes" xml:space="preserve">
          <source>Internal data format used to compare equality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4d56896bdee4b92ae11d38367fbb46816ae8e8" translate="yes" xml:space="preserve">
          <source>Internal encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1e18168d251b5317a0f391073dab20953df89a" translate="yes" xml:space="preserve">
          <source>Internal encoding for the &lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt;. &amp;ldquo;-&amp;rdquo; is a synonym for the default internal encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f8cbdb5ee376b9765f4a3e7f75597ca341f266" translate="yes" xml:space="preserve">
          <source>Internal error in issuer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04e747a7d1d894091937a180c7f64dfe319a82f" translate="yes" xml:space="preserve">
          <source>Internal error, should be rescued</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1186e56b97fa12188e1a679b765c90d55fa23b6a" translate="yes" xml:space="preserve">
          <source>Internal method used to provide marshalling support. See the &lt;a href=&quot;marshal&quot;&gt;&lt;code&gt;Marshal&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93b3b98aac3ff8fa37bc2d2cee0c4f420a55b23" translate="yes" xml:space="preserve">
          <source>Internal routing protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7ae33f11417ebdd3837db9ee3c27bb83d9fa93" translate="yes" xml:space="preserve">
          <source>Internal use only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b37f0054ea7ed14a00a15871ad7da86f8edf00" translate="yes" xml:space="preserve">
          <source>Internal use. An implementation of Eratosthenes' sieve</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b81fb8c90a3ebdbbde51acd6d3587d1436ddbef" translate="yes" xml:space="preserve">
          <source>Internal use. An implementation of prime table by trial division method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc0103f663061894aa8a4227c553d6f5093dc99" translate="yes" xml:space="preserve">
          <source>InternalObjectWrapper</source>
          <target state="translated">InternalObjectWrapper</target>
        </trans-unit>
        <trans-unit id="1b4105ad1ded69c224828d59b535a717cc4cee0c" translate="yes" xml:space="preserve">
          <source>InternalObjectWrapper#inspect</source>
          <target state="translated">InternalObjectWrapper#inspect</target>
        </trans-unit>
        <trans-unit id="fabdada67ad276f140acbc85148bdc80619221b3" translate="yes" xml:space="preserve">
          <source>InternalObjectWrapper#internal_object_id</source>
          <target state="translated">InternalObjectWrapper#internal_object_id</target>
        </trans-unit>
        <trans-unit id="55c8e6135e26f0c626d235ae0e37d4bee44e3d06" translate="yes" xml:space="preserve">
          <source>InternalObjectWrapper#type</source>
          <target state="translated">InternalObjectWrapper#type</target>
        </trans-unit>
        <trans-unit id="d9c787ec6e5858e7e9ca7dd688f30428822c8033" translate="yes" xml:space="preserve">
          <source>InternalServerError</source>
          <target state="translated">InternalServerError</target>
        </trans-unit>
        <trans-unit id="78224187cf8257cc1fba62d3a535379ca2152a39" translate="yes" xml:space="preserve">
          <source>Internally calls EVP_CipherInit_ex(ctx, NULL, NULL, NULL, NULL, -1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2448d632862982096851834b333cd71a2dcb228" translate="yes" xml:space="preserve">
          <source>Internally calls EVP_CipherInit_ex(ctx, NULL, NULL, NULL, NULL, 0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8c61ee657da47ec6333e0445794176d32230fe" translate="yes" xml:space="preserve">
          <source>Internally calls EVP_CipherInit_ex(ctx, NULL, NULL, NULL, NULL, 1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889d95bf4e3b784e3485992df6b274bb2683e620" translate="yes" xml:space="preserve">
          <source>Internally, &lt;a href=&quot;tcpserver#method-c-new&quot;&gt;&lt;code&gt;TCPServer.new&lt;/code&gt;&lt;/a&gt; calls getaddrinfo() function to obtain addresses. If getaddrinfo() returns multiple addresses, &lt;a href=&quot;tcpserver#method-c-new&quot;&gt;&lt;code&gt;TCPServer.new&lt;/code&gt;&lt;/a&gt; tries to create a server socket for each address and returns first one that is successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b758fb5ee2ba7da552311244eb01ed2b31c21bc3" translate="yes" xml:space="preserve">
          <source>Interpolation may be disabled by escaping the &amp;ldquo;#&amp;rdquo; character or using single-quote strings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542e02b36aff5e5e131dcbc6279eb03d2fe7df6e" translate="yes" xml:space="preserve">
          <source>Interpolation may be used inside regular expressions along with escaped characters. Note that a regular expression may require additional escaped characters than a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5db45498426a18d87491bdc35ea0b2b61778847" translate="yes" xml:space="preserve">
          <source>Interrupt</source>
          <target state="translated">Interrupt</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="1a42a885ce8a5685c03924f0c90cf9ba2619ab6a" translate="yes" xml:space="preserve">
          <source>Invalid flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51551e84ab637dfefb37efcdc6234212df8e6385" translate="yes" xml:space="preserve">
          <source>Invalid value for hints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ecc2064bbe23ae9b8f94cdd1c60391c93c644ee" translate="yes" xml:space="preserve">
          <source>InvalidAddressError</source>
          <target state="translated">InvalidAddressError</target>
        </trans-unit>
        <trans-unit id="721bd28235527f71feda3a70976332e724e9adeb" translate="yes" xml:space="preserve">
          <source>InvalidArgument</source>
          <target state="translated">InvalidArgument</target>
        </trans-unit>
        <trans-unit id="83c98896354dcb37a5b41f0710d5ba593dc57415" translate="yes" xml:space="preserve">
          <source>InvalidByteSequenceError</source>
          <target state="translated">InvalidByteSequenceError</target>
        </trans-unit>
        <trans-unit id="a3e52b8c491a8b7fbfb11d8106d69c9933b3dd89" translate="yes" xml:space="preserve">
          <source>InvalidByteSequenceError#destination_encoding</source>
          <target state="translated">InvalidByteSequenceError#destination_encoding</target>
        </trans-unit>
        <trans-unit id="9175c4e776bdbbc75409c96158662fd82dccab05" translate="yes" xml:space="preserve">
          <source>InvalidByteSequenceError#destination_encoding_name</source>
          <target state="translated">InvalidByteSequenceError#destination_encoding_name</target>
        </trans-unit>
        <trans-unit id="1331ce1444935f7fe0299035030526beebe90e7e" translate="yes" xml:space="preserve">
          <source>InvalidByteSequenceError#error_bytes</source>
          <target state="translated">InvalidByteSequenceError#error_bytes</target>
        </trans-unit>
        <trans-unit id="0703c3a7a695d6cc01a6b96235bc247795636ba5" translate="yes" xml:space="preserve">
          <source>InvalidByteSequenceError#incomplete_input?</source>
          <target state="translated">InvalidByteSequenceError#incomplete_input?</target>
        </trans-unit>
        <trans-unit id="40948c157a99638d31097d7516c66e3f856bafd2" translate="yes" xml:space="preserve">
          <source>InvalidByteSequenceError#readagain_bytes</source>
          <target state="translated">InvalidByteSequenceError#readagain_bytes</target>
        </trans-unit>
        <trans-unit id="3a2207a5d6b6f3d9bb4209cfcfeec6e884d8788e" translate="yes" xml:space="preserve">
          <source>InvalidByteSequenceError#source_encoding</source>
          <target state="translated">InvalidByteSequenceError#source_encoding</target>
        </trans-unit>
        <trans-unit id="bff92aa6edb408b806e7540f0453f5b3b03f2e4e" translate="yes" xml:space="preserve">
          <source>InvalidByteSequenceError#source_encoding_name</source>
          <target state="translated">InvalidByteSequenceError#source_encoding_name</target>
        </trans-unit>
        <trans-unit id="c1f7d63c3ad36addb5e385c8e06c2a8f5223c7b3" translate="yes" xml:space="preserve">
          <source>InvalidComponentError</source>
          <target state="translated">InvalidComponentError</target>
        </trans-unit>
        <trans-unit id="e87b9dc160737bd0902d7c9a7a1708f65b0d771c" translate="yes" xml:space="preserve">
          <source>InvalidEncoding</source>
          <target state="translated">InvalidEncoding</target>
        </trans-unit>
        <trans-unit id="bf4db0486188b99aa47c4ecd12abeb5dc4dd1677" translate="yes" xml:space="preserve">
          <source>InvalidOption</source>
          <target state="translated">InvalidOption</target>
        </trans-unit>
        <trans-unit id="4342ea9b5c191caaedb3dc12588b030d7b8249f0" translate="yes" xml:space="preserve">
          <source>InvalidPrefixError</source>
          <target state="translated">InvalidPrefixError</target>
        </trans-unit>
        <trans-unit id="648fde43fc34b7a1758bffc46144bc3b0e306972" translate="yes" xml:space="preserve">
          <source>InvalidURIError</source>
          <target state="translated">InvalidURIError</target>
        </trans-unit>
        <trans-unit id="8a8ec69c029c82398fca42eff3527b96025d1c39" translate="yes" xml:space="preserve">
          <source>Invalidate stale locked specs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7d4ef4a6bbd6d8c22247069efc2db1d3fad7f5" translate="yes" xml:space="preserve">
          <source>Inverted version of &lt;a href=&quot;enumerable#method-i-grep&quot;&gt;&lt;code&gt;Enumerable#grep&lt;/code&gt;&lt;/a&gt;. Returns an array of every element in &lt;em&gt;enum&lt;/em&gt; for which not &lt;code&gt;Pattern === element&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e87685911552997e5abb0d5063063008eaa40e1" translate="yes" xml:space="preserve">
          <source>Inverts the bits in an &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;. As integers are conceptually of infinite length, the result acts as if it had an infinite number of one bits to the left. In hex representations, this is displayed as two periods to the left of the digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6096ccb82718476f59769ecc788ad1d74bfbd7" translate="yes" xml:space="preserve">
          <source>Inverts the following boolean expression. Has a lower precedence than &lt;code&gt;!&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b5e8cc3ee6cd6082a62d6562c0168532848eef" translate="yes" xml:space="preserve">
          <source>Invoke a thor class based on the value supplied by the user to the given option named &amp;ldquo;name&amp;rdquo;. A class option must be created before this method is invoked for each name given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af6bf4cc0cdd68208b50fd1aa26b39d5f5596041" translate="yes" xml:space="preserve">
          <source>Invoke interrupts immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eeada41f7035d99e5e94f51074434bec1b60f54" translate="yes" xml:space="preserve">
          <source>Invoke interrupts while &lt;em&gt;BlockingOperation&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461853aa7be1016e3d04aa02a19876e8aecf45e7" translate="yes" xml:space="preserve">
          <source>Invoke the given namespace or class given. It adds an instance method that will invoke the klass and command. You can give a block to configure how it will be invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2df3676738cd196a9a532ae27cd81cf0e0b934f" translate="yes" xml:space="preserve">
          <source>Invoked as a callback whenever a singleton method is added to the receiver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7efaba09b3473010acebee0f539795b7fde49da4" translate="yes" xml:space="preserve">
          <source>Invoked as a callback whenever a singleton method is removed from the receiver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97530a40e4d7e0fc75ecdf130d365adf228924fd" translate="yes" xml:space="preserve">
          <source>Invoked as a callback whenever a singleton method is undefined in the receiver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4290842f6d4f7646ef8a785da4ba26cb3225250b" translate="yes" xml:space="preserve">
          <source>Invoked as a callback whenever an instance method is added to the receiver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbdbb0e79d9c264e9a31d02f199a2701f1a43d44" translate="yes" xml:space="preserve">
          <source>Invoked as a callback whenever an instance method is removed from the receiver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f699af5331e1d4a125f4c596d009ad0f9da91fa4" translate="yes" xml:space="preserve">
          <source>Invoked by Ruby when &lt;em&gt;obj&lt;/em&gt; is sent a message it cannot handle. &lt;em&gt;symbol&lt;/em&gt; is the symbol for the method called, and &lt;em&gt;args&lt;/em&gt; are any arguments that were passed to it. By default, the interpreter raises an error when this method is called. However, it is possible to override the method to provide more dynamic behavior. If it is decided that a particular method should not be handled, then &lt;em&gt;super&lt;/em&gt; should be called, so that ancestors can pick up the missing method. The example below creates a class &lt;code&gt;Roman&lt;/code&gt;, which responds to methods with names consisting of roman numerals, returning the corresponding integer values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de37fa549433e8117d6a44ef4462f35bb41f0c2f" translate="yes" xml:space="preserve">
          <source>Invoked when a reference is made to an undefined constant in &lt;em&gt;mod&lt;/em&gt;. It is passed a symbol for the undefined constant, and returns a value to be used for that constant. The following code is an example of the same:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b60b8ee9b29253e0ee9458ab8aba55d8e238d3fd" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;Module.append_features&lt;/code&gt; on each parameter in reverse order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6da88a54af9505c610466d44c9d4d6bcb9a3c4" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;Module.prepend_features&lt;/code&gt; on each parameter in reverse order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdbf41aa1333f09795ec0ec781600f5808e5db6b" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;em&gt;meth&lt;/em&gt; with the specified arguments, returning the method's return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579674ee9f58cff164b2a47abf872b06fdb9c2fc" translate="yes" xml:space="preserve">
          <source>Invokes the block with &lt;code&gt;obj&lt;/code&gt; as the proc's parameter like &lt;a href=&quot;proc#method-i-call&quot;&gt;&lt;code&gt;Proc#call&lt;/code&gt;&lt;/a&gt;. This allows a proc object to be the target of a &lt;code&gt;when&lt;/code&gt; clause in a case statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5349a5832b6f518d93720d8ca5ef66bb23add1e8" translate="yes" xml:space="preserve">
          <source>Invokes the block with a Benchmark::Report object, which may be used to collect and report on the results of individual benchmark tests. Reserves &lt;code&gt;label_width&lt;/code&gt; leading spaces for labels on each line. Prints &lt;code&gt;caption&lt;/code&gt; at the top of the report, and uses &lt;code&gt;format&lt;/code&gt; to format each line. Returns an array of &lt;a href=&quot;benchmark/tms&quot;&gt;&lt;code&gt;Benchmark::Tms&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bddf47216ee73f436a0070de8924168401c17f1" translate="yes" xml:space="preserve">
          <source>Invokes the block, setting the block's parameters to the values in &lt;em&gt;params&lt;/em&gt; using something close to method calling semantics. Returns the value of the last expression evaluated in the block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e8e63757e725b048de9acd540c1858e112d00d" translate="yes" xml:space="preserve">
          <source>Invokes the child class's &lt;code&gt;to_i&lt;/code&gt; method to convert &lt;code&gt;num&lt;/code&gt; to an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be055b13549d92c0bf22286ea388db7cebafca7a" translate="yes" xml:space="preserve">
          <source>Invokes the continuation. The program continues from the end of the &lt;code&gt;callcc&lt;/code&gt; block. If no arguments are given, the original &lt;code&gt;callcc&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;. If one argument is given, &lt;code&gt;callcc&lt;/code&gt; returns it. Otherwise, an array containing &lt;em&gt;args&lt;/em&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020cf9330329258ef00bb426994027ffecf8b61b" translate="yes" xml:space="preserve">
          <source>Invokes the given block for each element of matrix, replacing the element with the value returned by the block. Elements can be restricted by passing an argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ba4c8533b03ea98203b64a3ef44b19ae948fc4" translate="yes" xml:space="preserve">
          <source>Invokes the given block once for each element of &lt;code&gt;self&lt;/code&gt;, replacing the element with the value returned by the block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e46eb092d7390c5cfaabb86ae5390730380421" translate="yes" xml:space="preserve">
          <source>Invokes the given block once for each element of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361a2d77d6e7462046a5b128fe1e62389437f3e3" translate="yes" xml:space="preserve">
          <source>Invokes the given block once for each key in &lt;em&gt;hsh&lt;/em&gt;, replacing it with the new key returned by the block, and then returns &lt;em&gt;hsh&lt;/em&gt;. This method does not change the values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4770dcab3deff44cd3b3ca49685cbebadda8ae3e" translate="yes" xml:space="preserve">
          <source>Invokes the given block once for each value in &lt;em&gt;hsh&lt;/em&gt;, replacing it with the new value returned by the block, and then returns &lt;em&gt;hsh&lt;/em&gt;. This method does not change the keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2ce6e505c3c2f489ca56fa7d3de71b3b1176d7" translate="yes" xml:space="preserve">
          <source>Invokes the given block passing in successive elements from &lt;code&gt;self&lt;/code&gt;, deleting elements for which the block returns a &lt;code&gt;false&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62d92b44e20d04d51df3a0f06c1be7842150112" translate="yes" xml:space="preserve">
          <source>Invokes the given block with the sequence of numbers starting at &lt;code&gt;num&lt;/code&gt;, incremented by &lt;code&gt;step&lt;/code&gt; (defaulted to &lt;code&gt;1&lt;/code&gt;) on each call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8625bae199901e0bbaf1ac317b2b75dd519cd1" translate="yes" xml:space="preserve">
          <source>Invokes the method identified by &lt;em&gt;symbol&lt;/em&gt;, passing it any arguments specified. Unlike send, &lt;a href=&quot;object#method-i-public_send&quot;&gt;&lt;code&gt;public_send&lt;/code&gt;&lt;/a&gt; calls public methods only. When the method is identified by a string, the string is converted to a symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82806a77d2596b50f57396389bce1bbc73a4faea" translate="yes" xml:space="preserve">
          <source>Invokes the method identified by &lt;em&gt;symbol&lt;/em&gt;, passing it any arguments specified. You can use &lt;code&gt;__send__&lt;/code&gt; if the name &lt;code&gt;send&lt;/code&gt; clashes with an existing method in &lt;em&gt;obj&lt;/em&gt;. When the method is identified by a string, the string is converted to a symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4e7aba5de4bcbb62328e0373b6bac62cec78c3" translate="yes" xml:space="preserve">
          <source>Invokes the method with &lt;code&gt;obj&lt;/code&gt; as the parameter like &lt;a href=&quot;method#method-i-call&quot;&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt;. This allows a method object to be the target of a &lt;code&gt;when&lt;/code&gt; clause in a case statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e525818215ce720341164e943068f8b3bb9ea0eb" translate="yes" xml:space="preserve">
          <source>Invokes using shell padding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0380cd57428d1e6f154d916e05339fee82033c5a" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;IO.select&lt;/code&gt; before &lt;code&gt;IO#readpartial&lt;/code&gt; works well as usual. However it is not the best way to use &lt;code&gt;IO.select&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e950c52c980f1c51babd3020a6416c41e7e3269" translate="yes" xml:space="preserve">
          <source>Is &lt;code&gt;req&lt;/code&gt; idempotent according to RFC 2616?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80295ec555460a2e2ca1bf6db29c1a65c8fc0663" translate="yes" xml:space="preserve">
          <source>Is &lt;code&gt;uri&lt;/code&gt; the &lt;a href=&quot;../uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; for this server?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557bf9e5d69c2892ea1d83bbee277b340f051a98" translate="yes" xml:space="preserve">
          <source>Is &lt;code&gt;uri&lt;/code&gt; the &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; for the current local server?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f734965cfdbe9f90aa340df6f1fb7f07b8c5b0d1" translate="yes" xml:space="preserve">
          <source>Is removed from a given class given mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803b29e030b6d63784eefdb13afd615da2e2f8d3" translate="yes" xml:space="preserve">
          <source>Is the exact nature of the class will be given a specified mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a948857d6081b75c3e045fdf439c0127b0b56d4" translate="yes" xml:space="preserve">
          <source>Is the request &lt;code&gt;req&lt;/code&gt; idempotent or is &lt;a href=&quot;persistent#attribute-i-retry_change_requests&quot;&gt;&lt;code&gt;retry_change_requests&lt;/code&gt;&lt;/a&gt; allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dae561e8c8a19cba465e062b15f971f546f92a2" translate="yes" xml:space="preserve">
          <source>Is the same as this &lt;code&gt;if&lt;/code&gt; expression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe88c09a46017efaf484fdcb15e8018e0da2489" translate="yes" xml:space="preserve">
          <source>Is there a path from `other` to `self` following edges in the dependency graph? @return true iff there is a path following edges within this {#graph}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1ace08d3dbcb57c5c49579e54778714d717088" translate="yes" xml:space="preserve">
          <source>Is there a path from `self` to `other` following edges in the dependency graph? @return true iff there is a path following edges within this {#graph}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48123e499fd2c72d641589d290234c5c29b8fa94" translate="yes" xml:space="preserve">
          <source>Is this connection still alive?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acedc3422dfbf37d2a53442796e63179b38fa95f" translate="yes" xml:space="preserve">
          <source>Is this server alive?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a00a76ad7b2c4d2393e37f3b17799569d4cb1a" translate="yes" xml:space="preserve">
          <source>Issuer name for the certificate. This is required when generating the certificate (if :SSLCertificate and :SSLPrivateKey were not given). The value of this is to be an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of pairs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad20a4591e403b86bbb5104be466309c627eb26" translate="yes" xml:space="preserve">
          <source>Issues a NOOP command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbd6c5fbe1632a763973fa2b9910fbed57f7224" translate="yes" xml:space="preserve">
          <source>Issues a SITE command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b89f4128ef165a1182e62cf58fe6163f25d95cc9" translate="yes" xml:space="preserve">
          <source>Issues the HELP command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f97a41036f712dc752f75205e8f2daabb407d8" translate="yes" xml:space="preserve">
          <source>It also provides an array core extension, &lt;a href=&quot;array#method-i-abbrev&quot;&gt;&lt;code&gt;Array#abbrev&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ff7024586d992a05ecbcdb03f5aba2497ef901" translate="yes" xml:space="preserve">
          <source>It also runs Gem hooks `pre_install`, `post_build` and `post_install`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad965110eacaa85d050f8a011d1c3222e760d8a9" translate="yes" xml:space="preserve">
          <source>It builds extensions, generates bins and installs them for the spec provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2edf72606a1644c4e6b051ebe806a169c9c9afdd" translate="yes" xml:space="preserve">
          <source>It calls the block for each message received.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85105bbd6e07b4664f8d4d42948224aa707a7c91" translate="yes" xml:space="preserve">
          <source>It can also be used to make a method return before the last expression is evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f50cc13136b37a3d41dee37090bac8bf527563b" translate="yes" xml:space="preserve">
          <source>It can output an option summary; you don't need to maintain this string separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7e3b22010a82117f6e6cbcd966ad236364c523" translate="yes" xml:space="preserve">
          <source>It compares elements using their &lt;a href=&quot;array#method-i-hash&quot;&gt;&lt;code&gt;hash&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;array#method-i-eql-3F&quot;&gt;&lt;code&gt;eql?&lt;/code&gt;&lt;/a&gt; methods for efficiency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ee07fed2eb3b27e04043d740d2c3cc5fe00cd6" translate="yes" xml:space="preserve">
          <source>It compares values using their &lt;a href=&quot;array#method-i-hash&quot;&gt;&lt;code&gt;hash&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;array#method-i-eql-3F&quot;&gt;&lt;code&gt;eql?&lt;/code&gt;&lt;/a&gt; methods for efficiency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417de631b58201ae13bd809e0c4a5c19270409c8" translate="yes" xml:space="preserve">
          <source>It contains a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; set of patterns and Regexp's that match and validate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c6a41b1892c11c5bd4bb925866e60b7ac02682" translate="yes" xml:space="preserve">
          <source>It defaults to a state object, that creates the shortest possible &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; text in one line, checks for circular data structures and doesn't allow &lt;a href=&quot;json#NaN&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;json#Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;, and -Infinity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d54066a23e53f27c7a903155a19a56901d805e" translate="yes" xml:space="preserve">
          <source>It depends on `spec.loaded_from` to get full_gem_path. The source plugins should set that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc0215b94776fcda524e7261842a4e7730d913c" translate="yes" xml:space="preserve">
          <source>It does this by registering an event handler with &lt;a href=&quot;kernel#method-i-set_trace_func&quot;&gt;&lt;code&gt;Kernel#set_trace_func&lt;/code&gt;&lt;/a&gt; for processing incoming events. It also provides methods for filtering unwanted trace output (see &lt;a href=&quot;tracer#method-c-add_filter&quot;&gt;&lt;code&gt;Tracer.add_filter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;tracer#method-c-on&quot;&gt;&lt;code&gt;Tracer.on&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;tracer#method-c-off&quot;&gt;&lt;code&gt;Tracer.off&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a65661607048cf8e5f1cc1a7175c76aafba488f" translate="yes" xml:space="preserve">
          <source>It doesn't access the filesystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e04fdfbfdd8cb48188b27726cd113ed8407518c" translate="yes" xml:space="preserve">
          <source>It doesn't access the filesystem. So it may return &lt;code&gt;false&lt;/code&gt; for some pathnames which points to roots such as &lt;code&gt;/usr/..&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac0944d18fdc67d2093fd8645b9be2b7f2bac1c1" translate="yes" xml:space="preserve">
          <source>It doesn't cause Errno::EWOULDBLOCK and Errno::EINTR. When readpartial meets EWOULDBLOCK and EINTR by read system call, readpartial retry the system call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674326a47a0e1641dfebb8505dc7e6344f94d60f" translate="yes" xml:space="preserve">
          <source>It expands a single array argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ceb4e9f1750770bbb5779c106693404f179b5e" translate="yes" xml:space="preserve">
          <source>It has the non-destructive &lt;a href=&quot;array#method-i-uniq&quot;&gt;&lt;code&gt;uniq&lt;/code&gt;&lt;/a&gt;, and destructive method &lt;a href=&quot;array#method-i-uniq-21&quot;&gt;&lt;code&gt;uniq!&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e783002c3a09c0524f2d45d67668af59cc1807" translate="yes" xml:space="preserve">
          <source>It is also possible to exchange file descriptors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e090a4e0187375603ea5375292fbeda885a12c" translate="yes" xml:space="preserve">
          <source>It is generalized to other dimensions to return a vector perpendicular to the arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="158844f1450f2e722119d3513ec254921b84b6ee" translate="yes" xml:space="preserve">
          <source>It is initialized to the current system time if no argument is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0926495ba5095eccf30183ee46ca9d3cdbe67bf1" translate="yes" xml:space="preserve">
          <source>It is only necessary to run cleanup when engines are loaded via &lt;a href=&quot;engine#method-c-load&quot;&gt;&lt;code&gt;OpenSSL::Engine.load&lt;/code&gt;&lt;/a&gt;. However, running cleanup before exit is recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1edd7361432629e8f6d0912653821b729b596933" translate="yes" xml:space="preserve">
          <source>It is passed to be similar to a &lt;a href=&quot;../prettyprint&quot;&gt;&lt;code&gt;PrettyPrint&lt;/code&gt;&lt;/a&gt; object itself, by responding to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab2bb01aa7cf80e9ceea186ef6d5bd41f2a1aa0" translate="yes" xml:space="preserve">
          <source>It is possible that the &lt;a href=&quot;../ocsp&quot;&gt;&lt;code&gt;OCSP&lt;/code&gt;&lt;/a&gt; request takes a few seconds or the time is not accurate. To avoid rejecting a valid response, this method allows the times to be within &lt;em&gt;nsec&lt;/em&gt; seconds of the current time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3030b895fa73ca3bd665e9ca1439dec11df0f87" translate="yes" xml:space="preserve">
          <source>It is possible to create arbitrary &lt;a href=&quot;asn1/asn1data&quot;&gt;&lt;code&gt;ASN1Data&lt;/code&gt;&lt;/a&gt; objects that also support a PRIVATE or APPLICATION tag class. Possible values for the &lt;em&gt;tag_class&lt;/em&gt; attribute are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd679dd487998b6d1ecc4e42092ed0fc0e3270e3" translate="yes" xml:space="preserve">
          <source>It is possible to open an http, https or ftp URL as though it were a file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b516dc39c13b99c49e728ce0b176e10b290ff26" translate="yes" xml:space="preserve">
          <source>It is recommended that a library should have one subclass of &lt;a href=&quot;standarderror&quot;&gt;&lt;code&gt;StandardError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;runtimeerror&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; and have specific exception types inherit from it. This allows the user to rescue a generic exception type to catch all exceptions the library may raise even if future versions of the library add new exception subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46426e360bbc14c0543824c11c51eef27653e2fa" translate="yes" xml:space="preserve">
          <source>It is similar to &lt;a href=&quot;basicsocket#method-i-recvmsg&quot;&gt;&lt;code&gt;BasicSocket#recvmsg&lt;/code&gt;&lt;/a&gt; but non-blocking flag is set before the system call and it doesn't retry the system call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1d87f118bd50679e3c255be40e56f2f98098d5" translate="yes" xml:space="preserve">
          <source>It is similar to &lt;a href=&quot;basicsocket#method-i-sendmsg&quot;&gt;&lt;code&gt;BasicSocket#sendmsg&lt;/code&gt;&lt;/a&gt; but the non-blocking flag is set before the system call and it doesn't retry the system call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="699b32adc3b98988b03cdbb912ca92cfc4f944e0" translate="yes" xml:space="preserve">
          <source>It is the caller's responsibility to encode the string in the right encoding for the shell environment where this string is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6886a45e727760c9c0477ada5a6c9a2dc1c64555" translate="yes" xml:space="preserve">
          <source>It is typical to call &lt;a href=&quot;object#method-i-to_enum&quot;&gt;&lt;code&gt;to_enum&lt;/code&gt;&lt;/a&gt; when defining methods for a generic &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt;, in case no block is passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72096abbffdbe857dda113cc9f97b9597c663ed1" translate="yes" xml:space="preserve">
          <source>It is used as a mixin by other classes, to provide hash-like access to &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; header values. Unlike raw hash access, &lt;a href=&quot;httpheader&quot;&gt;&lt;code&gt;HTTPHeader&lt;/code&gt;&lt;/a&gt; provides access via case-insensitive keys. It also provides methods for accessing commonly-used &lt;a href=&quot;http&quot;&gt;&lt;code&gt;HTTP&lt;/code&gt;&lt;/a&gt; header values in more convenient formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26354e20f5cd1176e09bdaff2fb8ef87363d1cf1" translate="yes" xml:space="preserve">
          <source>It is used to obtain the full_gem_path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2c04c55e392ddab708550500b8a63f43eb9605" translate="yes" xml:space="preserve">
          <source>It may also be helpful to use the &lt;a href=&quot;abbrev&quot;&gt;&lt;code&gt;Abbrev&lt;/code&gt;&lt;/a&gt; library to generate completions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb4f4e0e285485e849b1ed63d46e839b0e8c3d3" translate="yes" xml:space="preserve">
          <source>It mixes in the HTTPHeader module, which provides access to response header values both via hash-like methods and via individual readers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9906c190184e7b27f1040dc1c33665c3f2f0231" translate="yes" xml:space="preserve">
          <source>It must provide the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280c4dfde33ec9b52a094a792b1e9dc6f8077c00" translate="yes" xml:space="preserve">
          <source>It passes the passed arguments and block to the block registered with the api.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b9dadff729fdd1795e05a5626d4f132034e485" translate="yes" xml:space="preserve">
          <source>It provides &lt;code&gt;nil&lt;/code&gt; for missing arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c3c2a12371ab56da804908da5d3f51f278fb9d" translate="yes" xml:space="preserve">
          <source>It provides users the ability to execute commands with filters and pipes, like &lt;code&gt;sh&lt;/code&gt;/&lt;code&gt;csh&lt;/code&gt; by using native facilities of Ruby.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc8346edb40c1544430faf8dfaf9544973c2184" translate="yes" xml:space="preserve">
          <source>It raises &lt;code&gt;EOFError&lt;/code&gt; on end of &lt;a href=&quot;argf&quot;&gt;&lt;code&gt;ARGF&lt;/code&gt;&lt;/a&gt; stream. Since &lt;a href=&quot;argf&quot;&gt;&lt;code&gt;ARGF&lt;/code&gt;&lt;/a&gt; stream is a concatenation of multiple files, internally EOF is occur for each file. &lt;a href=&quot;argf#method-i-readpartial&quot;&gt;&lt;code&gt;ARGF.readpartial&lt;/code&gt;&lt;/a&gt; returns empty strings for EOFs except the last one and raises &lt;code&gt;EOFError&lt;/code&gt; for the last one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8cfec979e519a83d28382a0f47d79735b75f008" translate="yes" xml:space="preserve">
          <source>It raises &lt;code&gt;EOFError&lt;/code&gt; on end of file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ec2adf1d2034ed63381307680a6fc77a6b6a6c" translate="yes" xml:space="preserve">
          <source>It receives arguments in an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; and two hashes, one for options and other for configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fcba94e6ea2736550f43f8f36fda977e41ca566" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;false&lt;/code&gt; if the pathname begins with a slash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e2b4c52eefa03e4d6723f1338c589d991f6706" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;obj(s)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641f0ce5c2445bea7a8d7ae0f9f4e006366a5410" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;true&lt;/code&gt; if the pathname begins with a slash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c85acdfa4027a8a30509167a3614680f77eb8b" translate="yes" xml:space="preserve">
          <source>It returns a hash as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d85311edad0334f1a90ed8ea2e2c32ba3ed348e" translate="yes" xml:space="preserve">
          <source>It returns a hash, such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48ae827740322d947439521e6cd2979f5798300" translate="yes" xml:space="preserve">
          <source>It returns an array with the read buffer, followed by the matches. If a block is given, the result is yielded to the block and returns nil.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="431420575bcf522f538be5b2f4a9da8aed2ee1db" translate="yes" xml:space="preserve">
          <source>It returns nil if no host component exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c290ae8596b2a187a5768090fcdf087029c4cba9" translate="yes" xml:space="preserve">
          <source>It returns the number of bytes written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d62291478b22af54008813e8517fae99cc4caad" translate="yes" xml:space="preserve">
          <source>It returns the number of times &lt;a href=&quot;gc&quot;&gt;&lt;code&gt;GC&lt;/code&gt;&lt;/a&gt; occurred since the process started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8067cbb9aa44dabf852396c14c8cbe0a6940072c" translate="yes" xml:space="preserve">
          <source>It should be called in `install` after the plugin is done placing the gem at correct install location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56cb9d6da948c5d75fba6033bcf0a9cb361b20d8" translate="yes" xml:space="preserve">
          <source>It skips the sources if the second param is true @param [Pathname] index file path @param [Boolean] is the index file global index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09dbd01477aea4783909e630604671387adbc9ed" translate="yes" xml:space="preserve">
          <source>It supports the following secure random number generators:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85fc23c095fe3470480ae63c5105c54cc57255b" translate="yes" xml:space="preserve">
          <source>It supports two modes, depending on the nature of the block. They are exactly the same as in the case of the &lt;a href=&quot;array#method-i-bsearch&quot;&gt;&lt;code&gt;bsearch&lt;/code&gt;&lt;/a&gt; method, with the only difference being that this method returns the index of the element instead of the element itself. For more details consult the documentation for &lt;a href=&quot;array#method-i-bsearch&quot;&gt;&lt;code&gt;bsearch&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e419bbcb68a1080b38b88b7506326c674e094ad" translate="yes" xml:space="preserve">
          <source>It will create a doc directory in the destination with the following files (assuming that the `app_name` method returns the value &amp;ldquo;blog&amp;rdquo;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b684744187a69ad36da2abb3bebe6cf83b766bc1" translate="yes" xml:space="preserve">
          <source>It will return &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; depending on the value of the left argument relative to the right argument. Or it will return &lt;code&gt;nil&lt;/code&gt; if the arguments are not comparable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa6df2ab5d7ffa41b1599ee61d0be1ea9e88215" translate="yes" xml:space="preserve">
          <source>It wraps &lt;a href=&quot;http://sourceware.org/libffi/&quot;&gt;libffi&lt;/a&gt;, a popular C library which provides a portable interface that allows code written in one language to call code written in another language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a918d9f5457a5fdce5655597edfb7f060d0a062" translate="yes" xml:space="preserve">
          <source>It yields &lt;a href=&quot;pathname&quot;&gt;&lt;code&gt;Pathname&lt;/code&gt;&lt;/a&gt; object for each child.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b072ce8411808ce8f6fd7373e19878f4ff32fa48" translate="yes" xml:space="preserve">
          <source>It's a common misconception that &lt;a href=&quot;http://en.wikipedia.org/wiki/William_Shakespeare&quot;&gt;William Shakespeare&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Miguel_de_Cervantes&quot;&gt;Miguel de Cervantes&lt;/a&gt; died on the same day in history - so much so that UNESCO named April 23 as &lt;a href=&quot;http://en.wikipedia.org/wiki/World_Book_Day&quot;&gt;World Book Day because of this fact&lt;/a&gt;. However, because England hadn't yet adopted the &lt;a href=&quot;http://en.wikipedia.org/wiki/Gregorian_calendar#Gregorian_reform&quot;&gt;Gregorian Calendar Reform&lt;/a&gt; (and wouldn't until &lt;a href=&quot;http://en.wikipedia.org/wiki/Calendar_(New_Style)_Act_1750&quot;&gt;1752&lt;/a&gt;) their deaths are actually 10 days apart. Since Ruby's &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; class implements a &lt;a href=&quot;http://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar&quot;&gt;proleptic Gregorian calendar&lt;/a&gt; and has no concept of calendar reform there's no way to express this with &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; objects. This is where &lt;a href=&quot;datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; steps in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc0b81451cb08fccbc106d5f04ecb00622dd8df" translate="yes" xml:space="preserve">
          <source>It's also important to note that while all of CSV's core parser is now &lt;a href=&quot;encoding&quot;&gt;&lt;code&gt;Encoding&lt;/code&gt;&lt;/a&gt; agnostic, some features are not. For example, the built-in converters will try to transcode data to UTF-8 before making conversions. Again, you can provide custom converters that are aware of your Encodings to avoid this translation. It's just too hard for me to support native conversions in all of Ruby's Encodings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79bfbf7ead363cac18972d428da15ffd945a068" translate="yes" xml:space="preserve">
          <source>It's important to note that this does &lt;strong&gt;not&lt;/strong&gt; cause SimpleDelegator's methods to change. Because of this, you probably only want to change delegation to objects of the same type as the original delegate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b163e32a35583721d7fcbf5e12681b60f1f804e" translate="yes" xml:space="preserve">
          <source>It's important to note that this will essentially merge any of the keys in &lt;em&gt;pairs&lt;/em&gt; with the existing &lt;em&gt;section&lt;/em&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a068243c6471becd4893a897c94c073ce9911e" translate="yes" xml:space="preserve">
          <source>It's possible to stack multiple levels of &lt;a href=&quot;thread#method-c-handle_interrupt&quot;&gt;&lt;code&gt;::handle_interrupt&lt;/code&gt;&lt;/a&gt; blocks in order to control more than one ExceptionClass and TimingSymbol at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ec3302f1c944bfe4bc5b014f651b993521795a" translate="yes" xml:space="preserve">
          <source>It's recommended to first ::escape the provided &lt;code&gt;uri_str&lt;/code&gt; if there are any invalid &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4bc74e24ea6c926ea9f28e259a7429f50ef4f18" translate="yes" xml:space="preserve">
          <source>It's similar to &lt;a href=&quot;stringscanner#method-i-scan&quot;&gt;&lt;code&gt;scan&lt;/code&gt;&lt;/a&gt;, but without returning the matched string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4aff98d0ef49a2c880f8a436a49ba7f409212d" translate="yes" xml:space="preserve">
          <source>It's similar to &lt;a href=&quot;stringscanner#method-i-scan_until&quot;&gt;&lt;code&gt;scan_until&lt;/code&gt;&lt;/a&gt;, but without returning the intervening string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c7540bb4ab142bebc02f51f8ad7ed240e13c07" translate="yes" xml:space="preserve">
          <source>Items can be added to the end of an array by using either &lt;a href=&quot;array#method-i-push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;array#method-i-3C-3C&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b60e78284c728ff28704cfdef144ea0b8f2f27d" translate="yes" xml:space="preserve">
          <source>Iterate all direct child instruction sequences. Iteration order is implementation/version defined so that people should not rely on the order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4943cc3568dad597b8ba054d174cf146b1ebca" translate="yes" xml:space="preserve">
          <source>Iterate over the elements of this vector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb79fb067bf48412e65fbb057c48a388e994a41" translate="yes" xml:space="preserve">
          <source>Iterate over the elements of this vector and &lt;code&gt;v&lt;/code&gt; in conjunction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783f97276abcb9b5abed7abd6474f209740e08e6" translate="yes" xml:space="preserve">
          <source>Iterate through the tuple, yielding the index or key, and the value, thus ensuring arrays are iterated similarly to hashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d03422c0452f168b86623814e60a49f2ca3498" translate="yes" xml:space="preserve">
          <source>Iterates evaluation of the given block, which takes a date object. The limit should be a date object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abf3d0efeabf250a176eb9abc7d262f55e6be0d" translate="yes" xml:space="preserve">
          <source>Iterates over all &lt;code&gt;typeclass&lt;/code&gt;&lt;a href=&quot;dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; resources for &lt;code&gt;name&lt;/code&gt;. See &lt;a href=&quot;dns#method-i-getresource&quot;&gt;&lt;code&gt;getresource&lt;/code&gt;&lt;/a&gt; for argument details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7cb56e15d99c9cd7916708078e866356187e987" translate="yes" xml:space="preserve">
          <source>Iterates over all IP addresses for &lt;code&gt;name&lt;/code&gt; retrieved from the &lt;a href=&quot;dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; resolver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852c4adc3e18609622d69a2073cd81ef65a67a1f" translate="yes" xml:space="preserve">
          <source>Iterates over all IP addresses for &lt;code&gt;name&lt;/code&gt; retrieved from the hosts file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4590314945079306e785a01c64ae956b3d5cb265" translate="yes" xml:space="preserve">
          <source>Iterates over all IP addresses for &lt;code&gt;name&lt;/code&gt; retrieved from the mDNS resolver, provided name ends with &amp;ldquo;local&amp;rdquo;. If the name does not end in &amp;ldquo;local&amp;rdquo; no records will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6135e9455abaa3652fb7b1232c92eaa2ae3f65" translate="yes" xml:space="preserve">
          <source>Iterates over all IP addresses for &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee68be17e03bc23d3626a43dc2512b583fa6a5d" translate="yes" xml:space="preserve">
          <source>Iterates over all discovered TupleSpaces starting with the primary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da18809b6e8b34b53a4c74eef3596c0879cdea68" translate="yes" xml:space="preserve">
          <source>Iterates over all hostnames for &lt;code&gt;address&lt;/code&gt; retrieved from the &lt;a href=&quot;dns&quot;&gt;&lt;code&gt;DNS&lt;/code&gt;&lt;/a&gt; resolver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b0a14910c7bb755efbf462e73ab75baaf5f778" translate="yes" xml:space="preserve">
          <source>Iterates over all hostnames for &lt;code&gt;address&lt;/code&gt; retrieved from the hosts file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4d7dc55f06fe0e3eb6840594accff9551d9c70" translate="yes" xml:space="preserve">
          <source>Iterates over all hostnames for &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a58677828efd6e6b9f58ef49c3048ccc83c07a" translate="yes" xml:space="preserve">
          <source>Iterates over and yields a new &lt;a href=&quot;pathname&quot;&gt;&lt;code&gt;Pathname&lt;/code&gt;&lt;/a&gt; object for each element in the given path in ascending order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fbd84e0edc6aa1f271ec0ca501f183483a05201" translate="yes" xml:space="preserve">
          <source>Iterates over and yields a new &lt;a href=&quot;pathname&quot;&gt;&lt;code&gt;Pathname&lt;/code&gt;&lt;/a&gt; object for each element in the given path in descending order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00575b51edcc734c1ece88e61079f9ea4dddc16" translate="yes" xml:space="preserve">
          <source>Iterates over each &lt;code&gt;key&lt;/code&gt; in the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bbb0004fa0f8966a219c88c18a7a8fb188098d8" translate="yes" xml:space="preserve">
          <source>Iterates over each &lt;code&gt;value&lt;/code&gt; in the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c527c30d1cb4a2de0e0ddbd10e84ee48a5c219" translate="yes" xml:space="preserve">
          <source>Iterates over each byte of each file in &lt;code&gt;ARGV&lt;/code&gt;. A byte is returned as an &lt;code&gt;Integer&lt;/code&gt; in the range 0..255.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf418c5f28b4db4039320a8ec5efa5369e7732c" translate="yes" xml:space="preserve">
          <source>Iterates over each character of each file in &lt;code&gt;ARGF&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828b4ba5aadaab4d2c5ac9d777680b7c5622fe34" translate="yes" xml:space="preserve">
          <source>Iterates over each codepoint of each file in &lt;code&gt;ARGF&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61b8ec33e01f97c7a961d00c4b4a710e44a7bb2" translate="yes" xml:space="preserve">
          <source>Iterates over each component of the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3e3ecf886d68bd71ca206f6ae181b3619fbd48" translate="yes" xml:space="preserve">
          <source>Iterates over each key-value pair in the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac19ad411eb7b27130af6aacb1624f829ab0cdc3" translate="yes" xml:space="preserve">
          <source>Iterates over each line in the file and yields a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object for each.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc874f78885e6b0ef6269eee5c008c6a388208bc" translate="yes" xml:space="preserve">
          <source>Iterates over each option, passing the option to the &lt;code&gt;block&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a64cfddedfaf57541d822c96eb67a51c8f499e" translate="yes" xml:space="preserve">
          <source>Iterates over keys and objects in a weakly referenced object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b7a9fd72d5d0f22b5888e1fab246ecbe799486" translate="yes" xml:space="preserve">
          <source>Iterates over strongly connected component in the subgraph reachable from &lt;em&gt;node&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3249fa9a8b6028fdba4b5357149ab121236f66c" translate="yes" xml:space="preserve">
          <source>Iterates over strongly connected components in a graph. The graph is represented by &lt;em&gt;node&lt;/em&gt; and &lt;em&gt;each_child&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3b4fc42b1b4d20beaa6ec8579e5cc873c4f1c5" translate="yes" xml:space="preserve">
          <source>Iterates over the block according to how this &lt;a href=&quot;enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt; was constructed. If no block and no arguments are given, returns self.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4ddec5a6e8ca678fdca5081f69f9d34d24dbb1" translate="yes" xml:space="preserve">
          <source>Iterates over the children of the directory (files and subdirectories, not recursive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c1ed82c8b5c32f182f625f0b79f48419f8fa3b" translate="yes" xml:space="preserve">
          <source>Iterates over the directory tree in a depth first manner, yielding a &lt;a href=&quot;pathname&quot;&gt;&lt;code&gt;Pathname&lt;/code&gt;&lt;/a&gt; for each file under &amp;ldquo;this&amp;rdquo; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e735aa0be30fdb74b42ee916480404e590b7bc4" translate="yes" xml:space="preserve">
          <source>Iterates over the elements of range, passing each in turn to the block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd1f70ea62cafab2d66828904362e2954b1c537" translate="yes" xml:space="preserve">
          <source>Iterates over the elements of the first enumerable by calling the &amp;ldquo;each&amp;rdquo; method on it with the given arguments, then proceeds to the following enumerables in sequence until all of the enumerables are exhausted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b380e45bbf8bf9a62779c28fb7bf52c07c43d0e3" translate="yes" xml:space="preserve">
          <source>Iterates over the entries (files and subdirectories) in the directory, yielding a &lt;a href=&quot;pathname&quot;&gt;&lt;code&gt;Pathname&lt;/code&gt;&lt;/a&gt; object for each entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e402dae1ad8e2315e850ef25faa8be8c99e4e5" translate="yes" xml:space="preserve">
          <source>Iterates over the key-value pairs in the database, deleting those for which the block returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ae73c5ec6f89236445e65747ce3cb482a4e16c" translate="yes" xml:space="preserve">
          <source>Iterates over the range, passing each &lt;code&gt;n&lt;/code&gt;th element to the block. If begin and end are numeric, &lt;code&gt;n&lt;/code&gt; is added for each iteration. Otherwise &lt;code&gt;step&lt;/code&gt; invokes &lt;code&gt;succ&lt;/code&gt; to iterate through range elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897c3a31ef19909a496dc379ca3d8c689b069578" translate="yes" xml:space="preserve">
          <source>Iterates over values and objects in a weakly referenced object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609a18dd7831f506eabcac3603894d9081daa93a" translate="yes" xml:space="preserve">
          <source>Iterates the given block &lt;code&gt;int&lt;/code&gt; times, passing in values from zero to &lt;code&gt;int - 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634ca888fbb31d1296e5ad712444aaf2785d8dc5" translate="yes" xml:space="preserve">
          <source>Iterates the given block for each array of consecutive &amp;lt;n&amp;gt; elements. If no block is given, returns an enumerator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a76abf41d29f8e68f2af9ebda77f6604321eaa0" translate="yes" xml:space="preserve">
          <source>Iterates the given block for each element with an arbitrary object given, and returns the initially given object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a505078da90d63fed030b1929896ee95e832bd5" translate="yes" xml:space="preserve">
          <source>Iterates the given block for each element with an arbitrary object, &lt;code&gt;obj&lt;/code&gt;, and returns &lt;code&gt;obj&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ae915b23737704b643b3340000b3fc89638ef3" translate="yes" xml:space="preserve">
          <source>Iterates the given block for each element with an index, which starts from &lt;code&gt;offset&lt;/code&gt;. If no block is given, returns a new &lt;a href=&quot;enumerator&quot;&gt;&lt;code&gt;Enumerator&lt;/code&gt;&lt;/a&gt; that includes the index, starting from &lt;code&gt;offset&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a03a20e4c33abce1eb4babf4284dc83bd9eca48" translate="yes" xml:space="preserve">
          <source>Iterates the given block for each prime number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5352433f4e5fc342c6f8a681e5160401f98c3d5a" translate="yes" xml:space="preserve">
          <source>Iterates the given block for each slice of &amp;lt;n&amp;gt; elements. If no block is given, returns an enumerator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af132b526444f32207208d08182bf68c5212af2" translate="yes" xml:space="preserve">
          <source>Iterates the given block over all prime numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03b8c6ff923081bdaa9fcc2be8d9b4b5256405b" translate="yes" xml:space="preserve">
          <source>Iterates the given block, passing in decreasing values from &lt;code&gt;int&lt;/code&gt; down to and including &lt;code&gt;limit&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20484c31e0ac8506388fe73b6ef1ca39dabe05d9" translate="yes" xml:space="preserve">
          <source>Iterates the given block, passing in integer values from &lt;code&gt;int&lt;/code&gt; up to and including &lt;code&gt;limit&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e22cda6ad26ed28c84bb73b23e3693d650eb53f" translate="yes" xml:space="preserve">
          <source>Iterates through header values, passing each value to the code block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48151c3792758f33c691916bcf0b1ac81b1cd553" translate="yes" xml:space="preserve">
          <source>Iterates through successive values, starting at &lt;em&gt;str&lt;/em&gt; and ending at &lt;em&gt;other_str&lt;/em&gt; inclusive, passing each value in turn to the block. The &lt;code&gt;String#succ&lt;/code&gt; method is used to generate each value. If optional second argument exclusive is omitted or is false, the last value will be included; otherwise it will be excluded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f54bfcae0d41e68a7419c206d8452377716b2f" translate="yes" xml:space="preserve">
          <source>Iterates through the header names and values, passing in the name and value to the code block supplied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c082d930906bc2dc025ba936e28032b73a19dd4" translate="yes" xml:space="preserve">
          <source>Iterates through the header names in the header, passing capitalized header names to the code block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90dce7354e0b17a855548eadf88fee058e24a5a" translate="yes" xml:space="preserve">
          <source>Iterates through the header names in the header, passing each header name to the code block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2feb0ff8da7b48f9fdca2f51dc925fd9ca709e36" translate="yes" xml:space="preserve">
          <source>Iterating over Arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b525396cfe8478584b3ad641b9430fa191eef6" translate="yes" xml:space="preserve">
          <source>Iterator version of `get'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed5cdd6c41283b272cc74d21893535428631d1a" translate="yes" xml:space="preserve">
          <source>J, J! j, and j! are available since Ruby 2.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="0c04336fa4d32b645ad648b0e8bb7e5889ceb405" translate="yes" xml:space="preserve">
          <source>JSON#dump</source>
          <target state="translated">JSON#dump</target>
        </trans-unit>
        <trans-unit id="1d6401a01fdd185ab53551992ebcd5b2ba9ff7e2" translate="yes" xml:space="preserve">
          <source>JSON#load</source>
          <target state="translated">JSON#load</target>
        </trans-unit>
        <trans-unit id="8283ad0edbce1ff28597d178ab8c849d5affaeb7" translate="yes" xml:space="preserve">
          <source>JSON(object, *args)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf028e81420895b837c904c86c9061befcf52733" translate="yes" xml:space="preserve">
          <source>JSON::GeneratorError</source>
          <target state="translated">JSON::GeneratorError</target>
        </trans-unit>
        <trans-unit id="21890abbf0eaf8dc281f33cbb26571c9ea42a583" translate="yes" xml:space="preserve">
          <source>JSON::GenericObject</source>
          <target state="translated">JSON::GenericObject</target>
        </trans-unit>
        <trans-unit id="4d7de3edd4cb4fe27edec5c81707a98d17de9ec0" translate="yes" xml:space="preserve">
          <source>JSON::JSONError</source>
          <target state="translated">JSON::JSONError</target>
        </trans-unit>
        <trans-unit id="29c4af857973079e89f9b6685c9a6854f11c0718" translate="yes" xml:space="preserve">
          <source>JSON::MissingUnicodeSupport</source>
          <target state="translated">JSON::MissingUnicodeSupport</target>
        </trans-unit>
        <trans-unit id="e1dbb391c1c84d926a7d93ba63fc7e7c920e684e" translate="yes" xml:space="preserve">
          <source>JSON::NestingError</source>
          <target state="translated">JSON::NestingError</target>
        </trans-unit>
        <trans-unit id="4286a02953de5006fc47adb87cec05ce5c520977" translate="yes" xml:space="preserve">
          <source>JSON::ParserError</source>
          <target state="translated">JSON::ParserError</target>
        </trans-unit>
        <trans-unit id="5297658a0d35dcbb846355ab196445a907c2233d" translate="yes" xml:space="preserve">
          <source>JSON::UnparserError</source>
          <target state="translated">JSON::UnparserError</target>
        </trans-unit>
        <trans-unit id="0a6994a2cf9d04fab073b8b91e1bce7f53b080fd" translate="yes" xml:space="preserve">
          <source>JSON::[]</source>
          <target state="translated">JSON::[]</target>
        </trans-unit>
        <trans-unit id="982e4c22907564231ac6daa6130857f19fac83a4" translate="yes" xml:space="preserve">
          <source>JSON::iconv</source>
          <target state="translated">JSON::iconv</target>
        </trans-unit>
        <trans-unit id="80505fe989a34acf9bc51e5b7c9c629bf666d552" translate="yes" xml:space="preserve">
          <source>JSON::state</source>
          <target state="translated">JSON::state</target>
        </trans-unit>
        <trans-unit id="c1dfcb5bc12f1ba72e57a7fc05f88fccd95f6790" translate="yes" xml:space="preserve">
          <source>JSONError</source>
          <target state="translated">JSONError</target>
        </trans-unit>
        <trans-unit id="a5ecdc5042c932011399bd810ff08c40f2a19f92" translate="yes" xml:space="preserve">
          <source>JSONError::wrap</source>
          <target state="translated">JSONError::wrap</target>
        </trans-unit>
        <trans-unit id="4d1d625cafd55d9c56c9b18393608b0743d62fb8" translate="yes" xml:space="preserve">
          <source>JSON_LOADED</source>
          <target state="translated">JSON_LOADED</target>
        </trans-unit>
        <trans-unit id="705e15e414d11f7a087d987df49ad5bede2a087e" translate="yes" xml:space="preserve">
          <source>JULIAN</source>
          <target state="translated">JULIAN</target>
        </trans-unit>
        <trans-unit id="44d9ab80f02c9ef3726b26c3ccb97d35aad0a281" translate="yes" xml:space="preserve">
          <source>Jacobian</source>
          <target state="translated">Jacobian</target>
        </trans-unit>
        <trans-unit id="61f9569a4114d96bbcc222a70ff9ecdc8ab55ca8" translate="yes" xml:space="preserve">
          <source>Jacobian#dfdxi</source>
          <target state="translated">Jacobian#dfdxi</target>
        </trans-unit>
        <trans-unit id="7f985995074c52a92f9e3c1d32ae06a10b17aa7c" translate="yes" xml:space="preserve">
          <source>Jacobian#isEqual</source>
          <target state="translated">Jacobian#isEqual</target>
        </trans-unit>
        <trans-unit id="d4f148e52a128c77704e6684edaf697efa663140" translate="yes" xml:space="preserve">
          <source>Jacobian#jacobian</source>
          <target state="translated">Jacobian#jacobian</target>
        </trans-unit>
        <trans-unit id="f925b0648763d361abe1eb61e13a9dad7cabb150" translate="yes" xml:space="preserve">
          <source>JavaScript &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; Notation (JSON)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a4405a2c483f45e92694f9233a8db4f689cdf3f" translate="yes" xml:space="preserve">
          <source>Join a group membership</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b089a23f9e6e26e5c844e63c92c4d322be43810" translate="yes" xml:space="preserve">
          <source>Join a multicast group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789d6e03ee6812e63e0b52696a1eed6310e0c3d9" translate="yes" xml:space="preserve">
          <source>Join a multicast source group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f3f192e5fdd16bbf1119718404c5b44ac5729ed" translate="yes" xml:space="preserve">
          <source>Joins URIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803995a03ae0582093a6354289da0f075cad3d14" translate="yes" xml:space="preserve">
          <source>Joins the given pathnames onto &lt;code&gt;self&lt;/code&gt; to create a new &lt;a href=&quot;pathname&quot;&gt;&lt;code&gt;Pathname&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff739c75a6930842e3f29c58336028f85391256" translate="yes" xml:space="preserve">
          <source>Julian Day Number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd9b396e0abfe89091e97c1f5bf6e9d9e7169bb" translate="yes" xml:space="preserve">
          <source>Just initializes all instance variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7743d893707a6fda23f3770fadc5af65f46e8b39" translate="yes" xml:space="preserve">
          <source>Just prior to termination, Ruby executes any &lt;code&gt;at_exit&lt;/code&gt; functions (see Kernel::at_exit) and runs any object finalizers (see &lt;a href=&quot;objectspace#method-c-define_finalizer&quot;&gt;&lt;code&gt;ObjectSpace::define_finalizer&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a30dd7e15dea618ed8d7c2c7b7ebd09e949263d" translate="yes" xml:space="preserve">
          <source>Just returns true. It's nonsense, but is for symmetry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6bf391ac641b0b478a77a0a09885346151a629" translate="yes" xml:space="preserve">
          <source>KDF::KDFError</source>
          <target state="translated">KDF::KDFError</target>
        </trans-unit>
        <trans-unit id="a161165594ee84795a8913c014b6db134acbf13c" translate="yes" xml:space="preserve">
          <source>KDF::hkdf</source>
          <target state="translated">KDF::hkdf</target>
        </trans-unit>
        <trans-unit id="e953efd60870183549ef78c203be60c787eef3d7" translate="yes" xml:space="preserve">
          <source>KDF::pbkdf2_hmac</source>
          <target state="translated">KDF::pbkdf2_hmac</target>
        </trans-unit>
        <trans-unit id="f936f2762af2e8525fb17f51ab0cf0b0b5250b7a" translate="yes" xml:space="preserve">
          <source>KDF::scrypt</source>
          <target state="translated">KDF::scrypt</target>
        </trans-unit>
        <trans-unit id="3567c8e822f83dd02e43e87e2e43f05f1c9e6378" translate="yes" xml:space="preserve">
          <source>KNOWN_MAJOR_VERSIONS</source>
          <target state="translated">KNOWN_MAJOR_VERSIONS</target>
        </trans-unit>
        <trans-unit id="fef1e1f21f52c6ca6c12cc3e45ac5dae06e68b05" translate="yes" xml:space="preserve">
          <source>KNOWN_MINOR_VERSIONS</source>
          <target state="translated">KNOWN_MINOR_VERSIONS</target>
        </trans-unit>
        <trans-unit id="a49a3e39a9bd82f137bf370463fc03cd58d0e653" translate="yes" xml:space="preserve">
          <source>KNOWN_PLATFORMS</source>
          <target state="translated">KNOWN_PLATFORMS</target>
        </trans-unit>
        <trans-unit id="8d61b3d746dfbb62f7b811f0152fc5413a71d27f" translate="yes" xml:space="preserve">
          <source>KNOWN_SECTIONS</source>
          <target state="translated">KNOWN_SECTIONS</target>
        </trans-unit>
        <trans-unit id="672cd818a9966fff93aa7ccc88b48e06c34003ab" translate="yes" xml:space="preserve">
          <source>Keep connections alive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74808d3df030e992e7b9444241625147986487c1" translate="yes" xml:space="preserve">
          <source>Kernel</source>
          <target state="translated">Kernel</target>
        </trans-unit>
        <trans-unit id="29faa3a27a8586c58bce6ca928941bc584ff7b99" translate="yes" xml:space="preserve">
          <source>Kernel#Hash</source>
          <target state="translated">Kernel#Hash</target>
        </trans-unit>
        <trans-unit id="53f56ca41d33a9e882044e7d3de632ff626ca73f" translate="yes" xml:space="preserve">
          <source>Kernel#JSON</source>
          <target state="translated">Kernel#JSON</target>
        </trans-unit>
        <trans-unit id="5913479bdf9235f5906ae8761cb44cd2fc248179" translate="yes" xml:space="preserve">
          <source>Kernel#URI</source>
          <target state="translated">Kernel#URI</target>
        </trans-unit>
        <trans-unit id="1538de2202ebe0402bd3d7ed3b2c4dfd723a342f" translate="yes" xml:space="preserve">
          <source>Kernel#`</source>
          <target state="translated">Kernel#`</target>
        </trans-unit>
        <trans-unit id="9a4ad34a74b1912ef1b48e0a5b279be207bca2c6" translate="yes" xml:space="preserve">
          <source>Kernel#chop</source>
          <target state="translated">Kernel#chop</target>
        </trans-unit>
        <trans-unit id="984205fa6407adb6382932d94df4f12cce5c4de0" translate="yes" xml:space="preserve">
          <source>Kernel#enum_for</source>
          <target state="translated">Kernel#enum_for</target>
        </trans-unit>
        <trans-unit id="4b1088eeb90da68a52578b0c2f584e79dae73f7a" translate="yes" xml:space="preserve">
          <source>Kernel#eval</source>
          <target state="translated">Kernel#eval</target>
        </trans-unit>
        <trans-unit id="c505b455e15eefea9d35ca7c182f0c21a5e7ac83" translate="yes" xml:space="preserve">
          <source>Kernel#exec</source>
          <target state="translated">Kernel#exec</target>
        </trans-unit>
        <trans-unit id="8b3234b02bc582664bdef7f583b2370fa513e29b" translate="yes" xml:space="preserve">
          <source>Kernel#exit</source>
          <target state="translated">Kernel#exit</target>
        </trans-unit>
        <trans-unit id="2ec9135cfba8e6c3d412dd092701e0cd14c83766" translate="yes" xml:space="preserve">
          <source>Kernel#fail</source>
          <target state="translated">Kernel#fail</target>
        </trans-unit>
        <trans-unit id="e10371a159807a0bdc42c0aa601aec50befe2f46" translate="yes" xml:space="preserve">
          <source>Kernel#fork</source>
          <target state="translated">Kernel#fork</target>
        </trans-unit>
        <trans-unit id="f24321a4fc5291b9b09d74d3d1e6fc91b3c0753f" translate="yes" xml:space="preserve">
          <source>Kernel#gem</source>
          <target state="translated">Kernel#gem</target>
        </trans-unit>
        <trans-unit id="4d11daff113f9a8ab3af615d745f10310669d513" translate="yes" xml:space="preserve">
          <source>Kernel#gets</source>
          <target state="translated">Kernel#gets</target>
        </trans-unit>
        <trans-unit id="ee38d2187bb44418669ea9e311cb012ac6f2d66c" translate="yes" xml:space="preserve">
          <source>Kernel#gsub</source>
          <target state="translated">Kernel#gsub</target>
        </trans-unit>
        <trans-unit id="36e29bb14fa6e1ec0f2eb2409fdc744612cd2438" translate="yes" xml:space="preserve">
          <source>Kernel#j</source>
          <target state="translated">Kernel#j</target>
        </trans-unit>
        <trans-unit id="84c2bcb04c02943b4aea025ed9c93854bafa56a8" translate="yes" xml:space="preserve">
          <source>Kernel#jj</source>
          <target state="translated">Kernel#jj</target>
        </trans-unit>
        <trans-unit id="2a1b501de08067c86e6e4783c5838b26f0c014e7" translate="yes" xml:space="preserve">
          <source>Kernel#load</source>
          <target state="translated">Kernel#load</target>
        </trans-unit>
        <trans-unit id="5fe0e0608f70eb2c93b124ca99f51ba0332ae349" translate="yes" xml:space="preserve">
          <source>Kernel#loop</source>
          <target state="translated">Kernel#loop</target>
        </trans-unit>
        <trans-unit id="10cc59d38b08ddefa7a6e9745b3b9efe13638170" translate="yes" xml:space="preserve">
          <source>Kernel#open</source>
          <target state="translated">Kernel#open</target>
        </trans-unit>
        <trans-unit id="eb41fc7e86b58ce59a5f9d48d9748a94a0b9f576" translate="yes" xml:space="preserve">
          <source>Kernel#p</source>
          <target state="translated">Kernel#p</target>
        </trans-unit>
        <trans-unit id="cda85b223c4fe037779c6945cb6837607ebb531d" translate="yes" xml:space="preserve">
          <source>Kernel#pp</source>
          <target state="translated">Kernel#pp</target>
        </trans-unit>
        <trans-unit id="871ef08b98907d863d37d5ecab21b839a981bc45" translate="yes" xml:space="preserve">
          <source>Kernel#proc</source>
          <target state="translated">Kernel#proc</target>
        </trans-unit>
        <trans-unit id="049afb49b2a56264163f9f3e94ebb62328041ad9" translate="yes" xml:space="preserve">
          <source>Kernel#putc</source>
          <target state="translated">Kernel#putc</target>
        </trans-unit>
        <trans-unit id="7124c6f4bab7339bd3a1b8c070c8a0a7cd24056c" translate="yes" xml:space="preserve">
          <source>Kernel#puts</source>
          <target state="translated">Kernel#puts</target>
        </trans-unit>
        <trans-unit id="3ca228c3cef243f79f04dd068f3047a4600a1dfd" translate="yes" xml:space="preserve">
          <source>Kernel#rand</source>
          <target state="translated">Kernel#rand</target>
        </trans-unit>
        <trans-unit id="d80d9995979c176b68afa9e857a3176adef7a0fc" translate="yes" xml:space="preserve">
          <source>Kernel#sub</source>
          <target state="translated">Kernel#sub</target>
        </trans-unit>
        <trans-unit id="dfafbb7f753fd1cb1c58a064b630d9a6927edf06" translate="yes" xml:space="preserve">
          <source>Kernel#test</source>
          <target state="translated">Kernel#test</target>
        </trans-unit>
        <trans-unit id="bb44c3fd61227ccf8e97ead94d4a1027f61ad664" translate="yes" xml:space="preserve">
          <source>Kernel#to_enum</source>
          <target state="translated">Kernel#to_enum</target>
        </trans-unit>
        <trans-unit id="f52448e4f3ed6b82a73abe1481050d57a90d8a20" translate="yes" xml:space="preserve">
          <source>Kernel#trap</source>
          <target state="translated">Kernel#trap</target>
        </trans-unit>
        <trans-unit id="93aa8a5c724a55c41e275574a27829599e13b3e5" translate="yes" xml:space="preserve">
          <source>Kernel#warn</source>
          <target state="translated">Kernel#warn</target>
        </trans-unit>
        <trans-unit id="67fd71b1a20f969e23fdcea4ee4817d2fcc097f6" translate="yes" xml:space="preserve">
          <source>Kernel#y</source>
          <target state="translated">Kernel#y</target>
        </trans-unit>
        <trans-unit id="ea0eece808afc384c2e15a78016a66b6a6a4f613" translate="yes" xml:space="preserve">
          <source>Kernel::URI</source>
          <target state="translated">Kernel::URI</target>
        </trans-unit>
        <trans-unit id="3075fbd4fb0cbf511ce582f99b9613bdd1f3749b" translate="yes" xml:space="preserve">
          <source>Kernel::abort([msg])</source>
          <target state="translated">Kernel::abort([msg])</target>
        </trans-unit>
        <trans-unit id="8027ff7b6351ad220ed367b7e7868da22d84f786" translate="yes" xml:space="preserve">
          <source>Kernel::exit(status=true)</source>
          <target state="translated">Kernel::exit(status=true)</target>
        </trans-unit>
        <trans-unit id="3e2764f7f5bdc6466eb318ccc7ce5edd9e00dbf7" translate="yes" xml:space="preserve">
          <source>Kernel::open</source>
          <target state="translated">Kernel::open</target>
        </trans-unit>
        <trans-unit id="c5ee1dec960ef1cc7e90049731623108b92c77be" translate="yes" xml:space="preserve">
          <source>Kernel::pp</source>
          <target state="translated">Kernel::pp</target>
        </trans-unit>
        <trans-unit id="f8229ee730962c4cfe580eeb598d86b368d5d373" translate="yes" xml:space="preserve">
          <source>Key exchange</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74018238351de8a4b5f41ef51f98e3f2c94d5837" translate="yes" xml:space="preserve">
          <source>KeyError</source>
          <target state="translated">KeyError</target>
        </trans-unit>
        <trans-unit id="12fa944c389b35837ab34b67dab1f83e993eef02" translate="yes" xml:space="preserve">
          <source>KeyError#key</source>
          <target state="translated">KeyError#key</target>
        </trans-unit>
        <trans-unit id="0c22ea5cfbd199aca55bfc1444aac85ecd8628c1" translate="yes" xml:space="preserve">
          <source>KeyError#receiver</source>
          <target state="translated">KeyError#receiver</target>
        </trans-unit>
        <trans-unit id="edbf6b87ea890c33869daf3ceb52c1c62c5d46bd" translate="yes" xml:space="preserve">
          <source>KeyError::new</source>
          <target state="translated">KeyError::new</target>
        </trans-unit>
        <trans-unit id="e5651c683f14c95aa972cfdbc300d9fecfe02019" translate="yes" xml:space="preserve">
          <source>Keys</source>
          <target state="translated">Keys</target>
        </trans-unit>
        <trans-unit id="ee21f2573e357d16b1520cbc57952e835a1bdc82" translate="yes" xml:space="preserve">
          <source>Keys in the remains hash represent uninstalled gems specs. We enqueue all gem specs that do not have any dependencies. Later we call this lambda again to install specs that depended on previously installed specifications. We continue until all specs are installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c78719ca8d1119a5f22540542d732c4b7774b9" translate="yes" xml:space="preserve">
          <source>Keys saved to disk without encryption are not secure as anyone who gets ahold of the key may use it unless it is encrypted. In order to securely export a key you may export it with a pass phrase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db32172db3cd21ae36313d815fba0dd39bd7127a" translate="yes" xml:space="preserve">
          <source>Keyword Arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf448d1a4178321a81866723413b63f334bdcbe2" translate="yes" xml:space="preserve">
          <source>Keyword arguments are similar to positional arguments with default values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273a1d710a985b6171abb5d173f47670e1bdcc2a" translate="yes" xml:space="preserve">
          <source>Keyword arguments follow any positional arguments and are separated by commas like positional arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd2dc446901903231b95086f3684e2c1779a5fc" translate="yes" xml:space="preserve">
          <source>Keyword completion module. This allows partial arguments to be specified and resolved against a list of acceptable values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f530db58b3e5088dc7412c6d2298ba3f8456bdeb" translate="yes" xml:space="preserve">
          <source>Keywords</source>
          <target state="translated">Keywords</target>
        </trans-unit>
        <trans-unit id="f09ccbaf674f3ddcaaa0cff5d0f2a9658a2e308e" translate="yes" xml:space="preserve">
          <source>Klensin, J., Catoe, R., and Krumviede, P., &amp;ldquo;IMAP/POP AUTHorize Extension for Simple Challenge/Response&amp;rdquo;, RFC 2195, September 1997.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8cdbd4c6587b497a12cda79aa09c52aee9bfcd" translate="yes" xml:space="preserve">
          <source>LDAP#attributes</source>
          <target state="translated">LDAP#attributes</target>
        </trans-unit>
        <trans-unit id="5e8bbeb6108739bd0e178b433df999d41150e3a1" translate="yes" xml:space="preserve">
          <source>LDAP#attributes=</source>
          <target state="translated">LDAP#attributes=</target>
        </trans-unit>
        <trans-unit id="4afd5c377ef6a70b60dccce82613b1b87f836d35" translate="yes" xml:space="preserve">
          <source>LDAP#build_path_query</source>
          <target state="translated">LDAP#build_path_query</target>
        </trans-unit>
        <trans-unit id="d05098e6434e9be47a0af8fc300002242a278a22" translate="yes" xml:space="preserve">
          <source>LDAP#dn</source>
          <target state="translated">LDAP#dn</target>
        </trans-unit>
        <trans-unit id="0ddab08a159a1c49a5a21eb47cb513f01b7ae0cb" translate="yes" xml:space="preserve">
          <source>LDAP#dn=</source>
          <target state="translated">LDAP#dn=</target>
        </trans-unit>
        <trans-unit id="efa24acc2b0ed5016a4cea77aa43e8779eb287dc" translate="yes" xml:space="preserve">
          <source>LDAP#extensions</source>
          <target state="translated">LDAP#extensions</target>
        </trans-unit>
        <trans-unit id="e9b08b1126fc48679abadc4390f48a82640c1e21" translate="yes" xml:space="preserve">
          <source>LDAP#extensions=</source>
          <target state="translated">LDAP#extensions=</target>
        </trans-unit>
        <trans-unit id="b02f884700b21971a0bb07c278b3d32c40ebcdcd" translate="yes" xml:space="preserve">
          <source>LDAP#filter</source>
          <target state="translated">LDAP#filter</target>
        </trans-unit>
        <trans-unit id="8dc57a49055ef81d2e62af61f45fff0c772e1733" translate="yes" xml:space="preserve">
          <source>LDAP#filter=</source>
          <target state="translated">LDAP#filter=</target>
        </trans-unit>
        <trans-unit id="65d310f5f52798ac691c59aabf42c1fb7ae9c6bb" translate="yes" xml:space="preserve">
          <source>LDAP#hierarchical?</source>
          <target state="translated">LDAP#hierarchical?</target>
        </trans-unit>
        <trans-unit id="5e6afde1328e54ef4b15ed1cd36c08d66cdb7a0e" translate="yes" xml:space="preserve">
          <source>LDAP#parse_dn</source>
          <target state="translated">LDAP#parse_dn</target>
        </trans-unit>
        <trans-unit id="a0f37fe03be21e83bddaf508ceee8d986092fa46" translate="yes" xml:space="preserve">
          <source>LDAP#parse_query</source>
          <target state="translated">LDAP#parse_query</target>
        </trans-unit>
        <trans-unit id="f764e196cfc38772e2d6a4e6e9d6a0f98e1e66d2" translate="yes" xml:space="preserve">
          <source>LDAP#scope</source>
          <target state="translated">LDAP#scope</target>
        </trans-unit>
        <trans-unit id="95c704c3520a45fbcb87bb94a3e85a127faaa24a" translate="yes" xml:space="preserve">
          <source>LDAP#scope=</source>
          <target state="translated">LDAP#scope=</target>
        </trans-unit>
        <trans-unit id="8a05a84c7a5041b1ec5778d305b7384e5d849031" translate="yes" xml:space="preserve">
          <source>LDAP#set_attributes</source>
          <target state="translated">LDAP#set_attributes</target>
        </trans-unit>
        <trans-unit id="a7e2553f17548922424e971ad2b39e97cf09c728" translate="yes" xml:space="preserve">
          <source>LDAP#set_dn</source>
          <target state="translated">LDAP#set_dn</target>
        </trans-unit>
        <trans-unit id="acd99fc61cb372fd971eabfb76a01ab40ac2fe30" translate="yes" xml:space="preserve">
          <source>LDAP#set_extensions</source>
          <target state="translated">LDAP#set_extensions</target>
        </trans-unit>
        <trans-unit id="7520292ec4a7076e80d46a5eae833e8f3dffc558" translate="yes" xml:space="preserve">
          <source>LDAP#set_filter</source>
          <target state="translated">LDAP#set_filter</target>
        </trans-unit>
        <trans-unit id="b747c3c9904e4e0e945846f3b7268d770eb6ffa8" translate="yes" xml:space="preserve">
          <source>LDAP#set_scope</source>
          <target state="translated">LDAP#set_scope</target>
        </trans-unit>
        <trans-unit id="c29b6cc3073d774778933696f10065cd4021e824" translate="yes" xml:space="preserve">
          <source>LDAP::build</source>
          <target state="translated">LDAP::build</target>
        </trans-unit>
        <trans-unit id="5a72553ce356cfc6c77347e018630e14503336e6" translate="yes" xml:space="preserve">
          <source>LDAP::new</source>
          <target state="translated">LDAP::new</target>
        </trans-unit>
        <trans-unit id="0957c7e54089458fe25fcdbff41ca909dbdd9519" translate="yes" xml:space="preserve">
          <source>LDD_REGEX</source>
          <target state="translated">LDD_REGEX</target>
        </trans-unit>
        <trans-unit id="1c2701d7f57081b3a80f473ed6d16eeff44704a7" translate="yes" xml:space="preserve">
          <source>LENGTH_REQUIRED</source>
          <target state="translated">LENGTH_REQUIRED</target>
        </trans-unit>
        <trans-unit id="fca1c10086810b65b85828939046e2ed5e113fee" translate="yes" xml:space="preserve">
          <source>LEVELS</source>
          <target state="translated">LEVELS</target>
        </trans-unit>
        <trans-unit id="05caa6ee70e483dc72167aaba38a9794fec9430d" translate="yes" xml:space="preserve">
          <source>LEVEL_MAP</source>
          <target state="translated">LEVEL_MAP</target>
        </trans-unit>
        <trans-unit id="91a07087a57580c557f3a426586f0c2f60ef2af4" translate="yes" xml:space="preserve">
          <source>LF</source>
          <target state="translated">LF</target>
        </trans-unit>
        <trans-unit id="485fb5357b3841ee39d649ddf530c87fe1500b8a" translate="yes" xml:space="preserve">
          <source>LIBYAML_VERSION</source>
          <target state="translated">LIBYAML_VERSION</target>
        </trans-unit>
        <trans-unit id="ed05ce1444ba583f70a0fd3e866e559b6f71d8c5" translate="yes" xml:space="preserve">
          <source>LOC::Alt</source>
          <target state="translated">LOC::Alt</target>
        </trans-unit>
        <trans-unit id="77cc945ea00909c0381c6cc666d8208817d19be3" translate="yes" xml:space="preserve">
          <source>LOC::Alt#altitude</source>
          <target state="translated">LOC::Alt#altitude</target>
        </trans-unit>
        <trans-unit id="c62634c8c6119003d43a314b0d5c440ca378d0c6" translate="yes" xml:space="preserve">
          <source>LOC::Alt::create</source>
          <target state="translated">LOC::Alt::create</target>
        </trans-unit>
        <trans-unit id="9526b28d039069ff9d2d278f999a87f9a2afa585" translate="yes" xml:space="preserve">
          <source>LOC::Alt::new</source>
          <target state="translated">LOC::Alt::new</target>
        </trans-unit>
        <trans-unit id="ecaf2473697ab1b6967af53c584d824ed48fc870" translate="yes" xml:space="preserve">
          <source>LOC::Coord</source>
          <target state="translated">LOC::Coord</target>
        </trans-unit>
        <trans-unit id="deabecea3e344844b6a5ba5806fe1ea20eae8ac3" translate="yes" xml:space="preserve">
          <source>LOC::Coord#coordinates</source>
          <target state="translated">LOC::Coord#coordinates</target>
        </trans-unit>
        <trans-unit id="b3a74cf48ccc8097d652435974d4e842624e4224" translate="yes" xml:space="preserve">
          <source>LOC::Coord#orientation</source>
          <target state="translated">LOC::Coord#orientation</target>
        </trans-unit>
        <trans-unit id="38663246910a3120eee967081834c63fa50a9f18" translate="yes" xml:space="preserve">
          <source>LOC::Coord::create</source>
          <target state="translated">LOC::Coord::create</target>
        </trans-unit>
        <trans-unit id="888a8859c5030f2cc7c8e09d4b2d685661666f70" translate="yes" xml:space="preserve">
          <source>LOC::Coord::new</source>
          <target state="translated">LOC::Coord::new</target>
        </trans-unit>
        <trans-unit id="c3b2d35f5577a565f1291c9db67b5836b8d12711" translate="yes" xml:space="preserve">
          <source>LOC::Size</source>
          <target state="translated">LOC::Size</target>
        </trans-unit>
        <trans-unit id="51a38e116b7db741e3c015190c174ba8c8841bd0" translate="yes" xml:space="preserve">
          <source>LOC::Size#scalar</source>
          <target state="translated">LOC::Size#scalar</target>
        </trans-unit>
        <trans-unit id="147e86bb20b759ace00c5be5f3ae1633a539b7fe" translate="yes" xml:space="preserve">
          <source>LOC::Size::create</source>
          <target state="translated">LOC::Size::create</target>
        </trans-unit>
        <trans-unit id="af8bbc546e53e471e92ecf7a1c47dd3eaa9b11d0" translate="yes" xml:space="preserve">
          <source>LOC::Size::new</source>
          <target state="translated">LOC::Size::new</target>
        </trans-unit>
        <trans-unit id="0288325b381f251f4c1463a44f5cf81b6ce754b2" translate="yes" xml:space="preserve">
          <source>LOCAL_CONNWAIT</source>
          <target state="translated">LOCAL_CONNWAIT</target>
        </trans-unit>
        <trans-unit id="ae733024feb099f26573b874d2e2772593f46057" translate="yes" xml:space="preserve">
          <source>LOCAL_CREDS</source>
          <target state="translated">LOCAL_CREDS</target>
        </trans-unit>
        <trans-unit id="4b945bcf356f4feaed1ba049e4f11a645e7d377d" translate="yes" xml:space="preserve">
          <source>LOCAL_PEERCRED</source>
          <target state="translated">LOCAL_PEERCRED</target>
        </trans-unit>
        <trans-unit id="7fec2cc3fe9aa6624e325b3f2ea04e41447283ae" translate="yes" xml:space="preserve">
          <source>LOCK_EX</source>
          <target state="translated">LOCK_EX</target>
        </trans-unit>
        <trans-unit id="0b6904d01ee2c27e03d8b76ee7b3cfd862aee2d2" translate="yes" xml:space="preserve">
          <source>LOCK_NB</source>
          <target state="translated">LOCK_NB</target>
        </trans-unit>
        <trans-unit id="3ea9a98dfdac1e49b01fa83e39da76de14f7e718" translate="yes" xml:space="preserve">
          <source>LOCK_SH</source>
          <target state="translated">LOCK_SH</target>
        </trans-unit>
        <trans-unit id="c0f2b37e8a6f1e01ab3d372b6cbf05ef2ceb18f4" translate="yes" xml:space="preserve">
          <source>LOCK_UN</source>
          <target state="translated">LOCK_UN</target>
        </trans-unit>
        <trans-unit id="e0ac7d929c8c9064651f3a5b472a916a78c16845" translate="yes" xml:space="preserve">
          <source>LOG_ALERT</source>
          <target state="translated">LOG_ALERT</target>
        </trans-unit>
        <trans-unit id="00a42081f87dfdb7c8750d2dc99a1c5a47afe15c" translate="yes" xml:space="preserve">
          <source>LOG_AUTH</source>
          <target state="translated">LOG_AUTH</target>
        </trans-unit>
        <trans-unit id="b059e128bbbf4abbc726cbc5b3dc15823fa1d3b0" translate="yes" xml:space="preserve">
          <source>LOG_AUTHPRIV</source>
          <target state="translated">LOG_AUTHPRIV</target>
        </trans-unit>
        <trans-unit id="217e5135d4d9375faffbd583cfffab8d87328009" translate="yes" xml:space="preserve">
          <source>LOG_CONS</source>
          <target state="translated">LOG_CONS</target>
        </trans-unit>
        <trans-unit id="e182207ce67fb6c42de986fba0502bb423c2008e" translate="yes" xml:space="preserve">
          <source>LOG_CONSOLE</source>
          <target state="translated">LOG_CONSOLE</target>
        </trans-unit>
        <trans-unit id="3ea8e1cd8bec535a6b614c37476a25af434a2a64" translate="yes" xml:space="preserve">
          <source>LOG_CRIT</source>
          <target state="translated">LOG_CRIT</target>
        </trans-unit>
        <trans-unit id="e14c128e15575171dccf2a786c6c56cfe90aabfb" translate="yes" xml:space="preserve">
          <source>LOG_CRON</source>
          <target state="translated">LOG_CRON</target>
        </trans-unit>
        <trans-unit id="2db1ea382ae920e08017868d8ca7dc74f1e87577" translate="yes" xml:space="preserve">
          <source>LOG_DAEMON</source>
          <target state="translated">LOG_DAEMON</target>
        </trans-unit>
        <trans-unit id="e9132069aa3cd9868136c9eab4c9121997cd9261" translate="yes" xml:space="preserve">
          <source>LOG_DEBUG</source>
          <target state="translated">LOG_DEBUG</target>
        </trans-unit>
        <trans-unit id="5cbc989f5f6b54b988f6cf238d1dfcafddfe5df0" translate="yes" xml:space="preserve">
          <source>LOG_EMERG</source>
          <target state="translated">LOG_EMERG</target>
        </trans-unit>
        <trans-unit id="c25ebb67e3f524ee4cfb9f242122b115231b2969" translate="yes" xml:space="preserve">
          <source>LOG_ERR</source>
          <target state="translated">LOG_ERR</target>
        </trans-unit>
        <trans-unit id="7076f8e47c7f564a083cced7437884fc3de9c20e" translate="yes" xml:space="preserve">
          <source>LOG_FTP</source>
          <target state="translated">LOG_FTP</target>
        </trans-unit>
        <trans-unit id="508d693347703c9b1449225c00b44e2e84f15cce" translate="yes" xml:space="preserve">
          <source>LOG_INFO</source>
          <target state="translated">LOG_INFO</target>
        </trans-unit>
        <trans-unit id="147a80a7b7486a934d7581b0f33986ae6651bd87" translate="yes" xml:space="preserve">
          <source>LOG_KERN</source>
          <target state="translated">LOG_KERN</target>
        </trans-unit>
        <trans-unit id="9b6774ed7d3a2d50c6f0bd8ee2ef89e9d0c56b60" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL0 to LOG_LOCAL7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca5af74225a0e933cda1a23779b6b9b7534a5c0" translate="yes" xml:space="preserve">
          <source>LOG_LPR</source>
          <target state="translated">LOG_LPR</target>
        </trans-unit>
        <trans-unit id="3266bdf7a824a1128c05ff0a6eacbb163573bfdb" translate="yes" xml:space="preserve">
          <source>LOG_MAIL</source>
          <target state="translated">LOG_MAIL</target>
        </trans-unit>
        <trans-unit id="2c63543862450f2b19fa531066dbed36569ddf43" translate="yes" xml:space="preserve">
          <source>LOG_MASK(priority_level) &amp;rarr; priority_mask &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d371f479bc601aceb8e41c4276e48440974c93c0" translate="yes" xml:space="preserve">
          <source>LOG_NDELAY</source>
          <target state="translated">LOG_NDELAY</target>
        </trans-unit>
        <trans-unit id="f460581d8a89631890f08c7c200582c071d9f348" translate="yes" xml:space="preserve">
          <source>LOG_NEWS</source>
          <target state="translated">LOG_NEWS</target>
        </trans-unit>
        <trans-unit id="fd9c5faaf23df86fefa8b46f512c8f9f2f910ea4" translate="yes" xml:space="preserve">
          <source>LOG_NOTICE</source>
          <target state="translated">LOG_NOTICE</target>
        </trans-unit>
        <trans-unit id="da589d148afb14b7c0df9a155dbd6285eb211fcb" translate="yes" xml:space="preserve">
          <source>LOG_NOWAIT</source>
          <target state="translated">LOG_NOWAIT</target>
        </trans-unit>
        <trans-unit id="6a171382bca550df8c9135c2173eba1a741232d9" translate="yes" xml:space="preserve">
          <source>LOG_NTP</source>
          <target state="translated">LOG_NTP</target>
        </trans-unit>
        <trans-unit id="85e8001368ad0f0d993cd7483964b35cfa88a076" translate="yes" xml:space="preserve">
          <source>LOG_ODELAY</source>
          <target state="translated">LOG_ODELAY</target>
        </trans-unit>
        <trans-unit id="9381c17bbca703ca83b49c1a8cd5a6a845a0b1a0" translate="yes" xml:space="preserve">
          <source>LOG_PERROR</source>
          <target state="translated">LOG_PERROR</target>
        </trans-unit>
        <trans-unit id="7bc97b18fac138705c4fc37f27b71ac7873ff0fc" translate="yes" xml:space="preserve">
          <source>LOG_PID</source>
          <target state="translated">LOG_PID</target>
        </trans-unit>
        <trans-unit id="4b6ac43b9161da62322f71c40b4f21434411d756" translate="yes" xml:space="preserve">
          <source>LOG_SECURITY</source>
          <target state="translated">LOG_SECURITY</target>
        </trans-unit>
        <trans-unit id="00b0b0f7b44d7be30d92b1245948b1df8d49d79b" translate="yes" xml:space="preserve">
          <source>LOG_SYSLOG</source>
          <target state="translated">LOG_SYSLOG</target>
        </trans-unit>
        <trans-unit id="5cca87d5d211706b06a07ea01e035cfdae8bfe70" translate="yes" xml:space="preserve">
          <source>LOG_UPTO(priority_level) &amp;rarr; priority_mask &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf326c7cb4d0b7bd59e5815a628a819974d8b6a6" translate="yes" xml:space="preserve">
          <source>LOG_USER</source>
          <target state="translated">LOG_USER</target>
        </trans-unit>
        <trans-unit id="b69a6c99cd1a6e6314b53f763c30ba82bc041bc6" translate="yes" xml:space="preserve">
          <source>LOG_UUCP</source>
          <target state="translated">LOG_UUCP</target>
        </trans-unit>
        <trans-unit id="d0479a4f305480aef0fe90fae83a03f4865e7fd9" translate="yes" xml:space="preserve">
          <source>LOG_WARNING</source>
          <target state="translated">LOG_WARNING</target>
        </trans-unit>
        <trans-unit id="ffdf650971d14e5d1d59e1f4279c89155714e43e" translate="yes" xml:space="preserve">
          <source>LOW_METHODS</source>
          <target state="translated">LOW_METHODS</target>
        </trans-unit>
        <trans-unit id="026c7dd5a661ea1ae1bfdae1048aeabcfc0e0ed5" translate="yes" xml:space="preserve">
          <source>LUPDecomposition</source>
          <target state="translated">LUPDecomposition</target>
        </trans-unit>
        <trans-unit id="5cf03381b9cd112b0738a45796008c8d66c909b2" translate="yes" xml:space="preserve">
          <source>LUPDecomposition#det</source>
          <target state="translated">LUPDecomposition#det</target>
        </trans-unit>
        <trans-unit id="660175426e09226a6bb8d2fbda67d877bc5b897a" translate="yes" xml:space="preserve">
          <source>LUPDecomposition#determinant</source>
          <target state="translated">LUPDecomposition#determinant</target>
        </trans-unit>
        <trans-unit id="7ef2ed6b3b20b99e785b58a948960a9b24bf6529" translate="yes" xml:space="preserve">
          <source>LUPDecomposition#l</source>
          <target state="translated">LUPDecomposition#l</target>
        </trans-unit>
        <trans-unit id="1a29d6115f19e7c7b8e376e00cf95df7dd38dbe1" translate="yes" xml:space="preserve">
          <source>LUPDecomposition#p</source>
          <target state="translated">LUPDecomposition#p</target>
        </trans-unit>
        <trans-unit id="17c66a6fecc2b52df2c4608673eff75a45f24f61" translate="yes" xml:space="preserve">
          <source>LUPDecomposition#pivots</source>
          <target state="translated">LUPDecomposition#pivots</target>
        </trans-unit>
        <trans-unit id="d0824c8806547e8ff4bee06b4df6864120d50b53" translate="yes" xml:space="preserve">
          <source>LUPDecomposition#singular?</source>
          <target state="translated">LUPDecomposition#singular?</target>
        </trans-unit>
        <trans-unit id="f700dd93408d9e5338742033e3ff33ea838b0991" translate="yes" xml:space="preserve">
          <source>LUPDecomposition#solve</source>
          <target state="translated">LUPDecomposition#solve</target>
        </trans-unit>
        <trans-unit id="e7bb5baa9a998dcd60efdef8392df74b9f10867a" translate="yes" xml:space="preserve">
          <source>LUPDecomposition#to_a</source>
          <target state="translated">LUPDecomposition#to_a</target>
        </trans-unit>
        <trans-unit id="7edf35c5941fddcc819756de51eeb99c742d82f1" translate="yes" xml:space="preserve">
          <source>LUPDecomposition#to_ary</source>
          <target state="translated">LUPDecomposition#to_ary</target>
        </trans-unit>
        <trans-unit id="d497f04652506eb4b254ce1b7f3177cbf0cd129e" translate="yes" xml:space="preserve">
          <source>LUPDecomposition#u</source>
          <target state="translated">LUPDecomposition#u</target>
        </trans-unit>
        <trans-unit id="66ece8e557a5836bdd371618343701adcf6e716a" translate="yes" xml:space="preserve">
          <source>LUPDecomposition::new</source>
          <target state="translated">LUPDecomposition::new</target>
        </trans-unit>
        <trans-unit id="e80ff0a8b618ca310b5ceca12b0379d7d158b069" translate="yes" xml:space="preserve">
          <source>LUSolve</source>
          <target state="translated">LUSolve</target>
        </trans-unit>
        <trans-unit id="0475fdbae7fd0dbae81820814eeec9a04ce3f0a4" translate="yes" xml:space="preserve">
          <source>LUSolve#ludecomp</source>
          <target state="translated">LUSolve#ludecomp</target>
        </trans-unit>
        <trans-unit id="000fbacad08dc69a4ab2bdaa10aa730b50646885" translate="yes" xml:space="preserve">
          <source>LUSolve#lusolve</source>
          <target state="translated">LUSolve#lusolve</target>
        </trans-unit>
        <trans-unit id="74341e3c271df3c784e595b804b1f90be0f80429" translate="yes" xml:space="preserve">
          <source>Label</source>
          <target state="translated">Label</target>
        </trans-unit>
        <trans-unit id="6910626fb35f99d8391be43876b9c55fff6ab154" translate="yes" xml:space="preserve">
          <source>Lambda and non-lambda semantics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d29f8f83587a6d78d634e3330323119ec27f6d" translate="yes" xml:space="preserve">
          <source>Lambda semantics is typically preserved during the proc lifetime, including &lt;code&gt;&amp;amp;&lt;/code&gt;-deconstruction to a block of code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9eae73c0b8bf71334c68333551349986bd68bd0" translate="yes" xml:space="preserve">
          <source>Lambdas are useful as self-sufficient functions, in particular useful as arguments to higher-order functions, behaving exactly like Ruby methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="815a12cdf2e8aa4b89b0c81c1a7c46056a807644" translate="yes" xml:space="preserve">
          <source>Lastly, &lt;code&gt;\p{}&lt;/code&gt; matches a character's Unicode &lt;em&gt;script&lt;/em&gt;. The following scripts are supported: &lt;em&gt;Arabic&lt;/em&gt;, &lt;em&gt;Armenian&lt;/em&gt;, &lt;em&gt;Balinese&lt;/em&gt;, &lt;em&gt;Bengali&lt;/em&gt;, &lt;em&gt;Bopomofo&lt;/em&gt;, &lt;em&gt;Braille&lt;/em&gt;, &lt;em&gt;Buginese&lt;/em&gt;, &lt;em&gt;Buhid&lt;/em&gt;, &lt;em&gt;Canadian_Aboriginal&lt;/em&gt;, &lt;em&gt;Carian&lt;/em&gt;, &lt;em&gt;Cham&lt;/em&gt;, &lt;em&gt;Cherokee&lt;/em&gt;, &lt;em&gt;Common&lt;/em&gt;, &lt;em&gt;Coptic&lt;/em&gt;, &lt;em&gt;Cuneiform&lt;/em&gt;, &lt;em&gt;Cypriot&lt;/em&gt;, &lt;em&gt;Cyrillic&lt;/em&gt;, &lt;em&gt;Deseret&lt;/em&gt;, &lt;em&gt;Devanagari&lt;/em&gt;, &lt;em&gt;Ethiopic&lt;/em&gt;, &lt;em&gt;Georgian&lt;/em&gt;, &lt;em&gt;Glagolitic&lt;/em&gt;, &lt;em&gt;Gothic&lt;/em&gt;, &lt;em&gt;Greek&lt;/em&gt;, &lt;em&gt;Gujarati&lt;/em&gt;, &lt;em&gt;Gurmukhi&lt;/em&gt;, &lt;em&gt;Han&lt;/em&gt;, &lt;em&gt;Hangul&lt;/em&gt;, &lt;em&gt;Hanunoo&lt;/em&gt;, &lt;em&gt;Hebrew&lt;/em&gt;, &lt;em&gt;Hiragana&lt;/em&gt;, &lt;em&gt;Inherited&lt;/em&gt;, &lt;em&gt;Kannada&lt;/em&gt;, &lt;em&gt;Katakana&lt;/em&gt;, &lt;em&gt;Kayah_Li&lt;/em&gt;, &lt;em&gt;Kharoshthi&lt;/em&gt;, &lt;em&gt;Khmer&lt;/em&gt;, &lt;em&gt;Lao&lt;/em&gt;, &lt;em&gt;Latin&lt;/em&gt;, &lt;em&gt;Lepcha&lt;/em&gt;, &lt;em&gt;Limbu&lt;/em&gt;, &lt;em&gt;Linear_B&lt;/em&gt;, &lt;em&gt;Lycian&lt;/em&gt;, &lt;em&gt;Lydian&lt;/em&gt;, &lt;em&gt;Malayalam&lt;/em&gt;, &lt;em&gt;Mongolian&lt;/em&gt;, &lt;em&gt;Myanmar&lt;/em&gt;, &lt;em&gt;New_Tai_Lue&lt;/em&gt;, &lt;em&gt;Nko&lt;/em&gt;, &lt;em&gt;Ogham&lt;/em&gt;, &lt;em&gt;Ol_Chiki&lt;/em&gt;, &lt;em&gt;Old_Italic&lt;/em&gt;, &lt;em&gt;Old_Persian&lt;/em&gt;, &lt;em&gt;Oriya&lt;/em&gt;, &lt;em&gt;Osmanya&lt;/em&gt;, &lt;em&gt;Phags_Pa&lt;/em&gt;, &lt;em&gt;Phoenician&lt;/em&gt;, &lt;em&gt;Rejang&lt;/em&gt;, &lt;em&gt;Runic&lt;/em&gt;, &lt;em&gt;Saurashtra&lt;/em&gt;, &lt;em&gt;Shavian&lt;/em&gt;, &lt;em&gt;Sinhala&lt;/em&gt;, &lt;em&gt;Sundanese&lt;/em&gt;, &lt;em&gt;Syloti_Nagri&lt;/em&gt;, &lt;em&gt;Syriac&lt;/em&gt;, &lt;em&gt;Tagalog&lt;/em&gt;, &lt;em&gt;Tagbanwa&lt;/em&gt;, &lt;em&gt;Tai_Le&lt;/em&gt;, &lt;em&gt;Tamil&lt;/em&gt;, &lt;em&gt;Telugu&lt;/em&gt;, &lt;em&gt;Thaana&lt;/em&gt;, &lt;em&gt;Thai&lt;/em&gt;, &lt;em&gt;Tibetan&lt;/em&gt;, &lt;em&gt;Tifinagh&lt;/em&gt;, &lt;em&gt;Ugaritic&lt;/em&gt;, &lt;em&gt;Vai&lt;/em&gt;, and &lt;em&gt;Yi&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e51d3b7b4c2a1561a6b4fa961eb8032d3a63419" translate="yes" xml:space="preserve">
          <source>Lazy#chunk</source>
          <target state="translated">Lazy#chunk</target>
        </trans-unit>
        <trans-unit id="d42e34d81cd45c0015b22d11b4aa9a415f70c45a" translate="yes" xml:space="preserve">
          <source>Lazy#chunk_while</source>
          <target state="translated">Lazy#chunk_while</target>
        </trans-unit>
        <trans-unit id="5727e6f58aa6a389e617dbaa72b8d85212341558" translate="yes" xml:space="preserve">
          <source>Lazy#collect</source>
          <target state="translated">Lazy#collect</target>
        </trans-unit>
        <trans-unit id="4186a54184aec2bb2924a4a5c4baf8e49e0f247f" translate="yes" xml:space="preserve">
          <source>Lazy#collect_concat</source>
          <target state="translated">Lazy#collect_concat</target>
        </trans-unit>
        <trans-unit id="082307ec439da0fed8478ffc2ef08e227a42ed97" translate="yes" xml:space="preserve">
          <source>Lazy#drop</source>
          <target state="translated">Lazy#drop</target>
        </trans-unit>
        <trans-unit id="7304211a1e11ac7bbbdaf375f99c5ae4ae08350e" translate="yes" xml:space="preserve">
          <source>Lazy#drop_while</source>
          <target state="translated">Lazy#drop_while</target>
        </trans-unit>
        <trans-unit id="2f666c12e2fa6df90fb7acfcd8f461d6fc573304" translate="yes" xml:space="preserve">
          <source>Lazy#enum_for</source>
          <target state="translated">Lazy#enum_for</target>
        </trans-unit>
        <trans-unit id="9cc510a5ec59d9988e567fa1f59a6602924bb1d5" translate="yes" xml:space="preserve">
          <source>Lazy#filter</source>
          <target state="translated">Lazy#filter</target>
        </trans-unit>
        <trans-unit id="7a5ae57cb203d528579a49f5468e4b4f8e289e8e" translate="yes" xml:space="preserve">
          <source>Lazy#find_all</source>
          <target state="translated">Lazy#find_all</target>
        </trans-unit>
        <trans-unit id="889e084e8022927b68cad327ad0880066311e90a" translate="yes" xml:space="preserve">
          <source>Lazy#flat_map</source>
          <target state="translated">Lazy#flat_map</target>
        </trans-unit>
        <trans-unit id="f88e520e3b39fa8390ee9dbc886ed20233a7224e" translate="yes" xml:space="preserve">
          <source>Lazy#force</source>
          <target state="translated">Lazy#force</target>
        </trans-unit>
        <trans-unit id="6c34e63f5cc75a0add14c11272e06bee2a8a0286" translate="yes" xml:space="preserve">
          <source>Lazy#grep</source>
          <target state="translated">Lazy#grep</target>
        </trans-unit>
        <trans-unit id="59af75ae4e7d21bfff7ae512d244c53c08869911" translate="yes" xml:space="preserve">
          <source>Lazy#grep_v</source>
          <target state="translated">Lazy#grep_v</target>
        </trans-unit>
        <trans-unit id="b59e95f514cc62380914192e0f739bb4baaf3c0b" translate="yes" xml:space="preserve">
          <source>Lazy#lazy</source>
          <target state="translated">Lazy#lazy</target>
        </trans-unit>
        <trans-unit id="6ffdfce60aed26563cdba3777d763c8222dea9ac" translate="yes" xml:space="preserve">
          <source>Lazy#map</source>
          <target state="translated">Lazy#map</target>
        </trans-unit>
        <trans-unit id="4d5b581170dbdca3742f5419405e9603db804c39" translate="yes" xml:space="preserve">
          <source>Lazy#reject</source>
          <target state="translated">Lazy#reject</target>
        </trans-unit>
        <trans-unit id="4b9f55665da236c20144d1d4a790e4a90b8a133b" translate="yes" xml:space="preserve">
          <source>Lazy#select</source>
          <target state="translated">Lazy#select</target>
        </trans-unit>
        <trans-unit id="7693e8c3b690ae640cddfbe9f11b692443cca6ca" translate="yes" xml:space="preserve">
          <source>Lazy#slice_after</source>
          <target state="translated">Lazy#slice_after</target>
        </trans-unit>
        <trans-unit id="d22039ed92b2eb74264f0c68b34b1d8630413fa5" translate="yes" xml:space="preserve">
          <source>Lazy#slice_before</source>
          <target state="translated">Lazy#slice_before</target>
        </trans-unit>
        <trans-unit id="c6b5939708e3812a54a5119c10ef216179031f8b" translate="yes" xml:space="preserve">
          <source>Lazy#slice_when</source>
          <target state="translated">Lazy#slice_when</target>
        </trans-unit>
        <trans-unit id="331759a45431e0c7bfb9cc1ad58d9c205f7b0084" translate="yes" xml:space="preserve">
          <source>Lazy#take</source>
          <target state="translated">Lazy#take</target>
        </trans-unit>
        <trans-unit id="664370b0d2a2c9dba7d17d85e31c6372767ce610" translate="yes" xml:space="preserve">
          <source>Lazy#take_while</source>
          <target state="translated">Lazy#take_while</target>
        </trans-unit>
        <trans-unit id="646e436e1a72685f51e73d49534519e00a033868" translate="yes" xml:space="preserve">
          <source>Lazy#to_a</source>
          <target state="translated">Lazy#to_a</target>
        </trans-unit>
        <trans-unit id="2fd1aa422168fee324e99219475e9b008f2ec090" translate="yes" xml:space="preserve">
          <source>Lazy#to_enum</source>
          <target state="translated">Lazy#to_enum</target>
        </trans-unit>
        <trans-unit id="f1d9b180316c795ef64890522e14b07653b9588b" translate="yes" xml:space="preserve">
          <source>Lazy#uniq</source>
          <target state="translated">Lazy#uniq</target>
        </trans-unit>
        <trans-unit id="3edf9bdc631e7029033cf4763280d97708107e6e" translate="yes" xml:space="preserve">
          <source>Lazy#zip</source>
          <target state="translated">Lazy#zip</target>
        </trans-unit>
        <trans-unit id="a8a8ee495f0fcd41ac2ee4f0db0af824c8fc88f4" translate="yes" xml:space="preserve">
          <source>Lazy::new</source>
          <target state="translated">Lazy::new</target>
        </trans-unit>
        <trans-unit id="2e86ae220344d5ae8451c2aeef5ec07cb80dc95e" translate="yes" xml:space="preserve">
          <source>LazySpecification</source>
          <target state="translated">LazySpecification</target>
        </trans-unit>
        <trans-unit id="54bc890dd3f22629f50dcd974b05c2e326119479" translate="yes" xml:space="preserve">
          <source>LazySpecification#==</source>
          <target state="translated">LazySpecification#==</target>
        </trans-unit>
        <trans-unit id="4dbce3bedf0c70233c2437977e681b2771cc9cfd" translate="yes" xml:space="preserve">
          <source>LazySpecification#dependencies</source>
          <target state="translated">LazySpecification#dependencies</target>
        </trans-unit>
        <trans-unit id="f1ca0e08d7fe08cc742633f2e43abd0793de7a26" translate="yes" xml:space="preserve">
          <source>LazySpecification#full_name</source>
          <target state="translated">LazySpecification#full_name</target>
        </trans-unit>
        <trans-unit id="4e752e9cd9f41b63769b9302374eeadeee5b1c88" translate="yes" xml:space="preserve">
          <source>LazySpecification#git_version</source>
          <target state="translated">LazySpecification#git_version</target>
        </trans-unit>
        <trans-unit id="5fc5b68558dba6b7ae177f3f6d19beb783a6ce61" translate="yes" xml:space="preserve">
          <source>LazySpecification#identifier</source>
          <target state="translated">LazySpecification#identifier</target>
        </trans-unit>
        <trans-unit id="c06b55c666b7a7170cbbae575abfed1aee910e37" translate="yes" xml:space="preserve">
          <source>LazySpecification#method_missing</source>
          <target state="translated">LazySpecification#method_missing</target>
        </trans-unit>
        <trans-unit id="9d726da1f760c4632cd4311dcd9b94fb78bd2967" translate="yes" xml:space="preserve">
          <source>LazySpecification#name</source>
          <target state="translated">LazySpecification#name</target>
        </trans-unit>
        <trans-unit id="52151d98d5731e433faa51d388728fd2ae383c28" translate="yes" xml:space="preserve">
          <source>LazySpecification#platform</source>
          <target state="translated">LazySpecification#platform</target>
        </trans-unit>
        <trans-unit id="a3f6091dd91d36c55809cfc6adb5192d4471b064" translate="yes" xml:space="preserve">
          <source>LazySpecification#remote</source>
          <target state="translated">LazySpecification#remote</target>
        </trans-unit>
        <trans-unit id="9f3534f7f3b6f4e033f9a09482a132419a2ab1f8" translate="yes" xml:space="preserve">
          <source>LazySpecification#respond_to?</source>
          <target state="translated">LazySpecification#respond_to?</target>
        </trans-unit>
        <trans-unit id="9cedac44b6d3e55db93ea81b81ec5833fc167770" translate="yes" xml:space="preserve">
          <source>LazySpecification#satisfies?</source>
          <target state="translated">LazySpecification#satisfies?</target>
        </trans-unit>
        <trans-unit id="7187bf22008011208a81be5f1d9f6abb6491e95f" translate="yes" xml:space="preserve">
          <source>LazySpecification#source</source>
          <target state="translated">LazySpecification#source</target>
        </trans-unit>
        <trans-unit id="883bf129155d963f3dc2ef80319d1bc6e133e4bf" translate="yes" xml:space="preserve">
          <source>LazySpecification#to_ary</source>
          <target state="translated">LazySpecification#to_ary</target>
        </trans-unit>
        <trans-unit id="f274b201b969ee6f9b08e1cdd403bddc6cb294ca" translate="yes" xml:space="preserve">
          <source>LazySpecification#to_lock</source>
          <target state="translated">LazySpecification#to_lock</target>
        </trans-unit>
        <trans-unit id="9fe603a501026acf2ff65615845eae3515095138" translate="yes" xml:space="preserve">
          <source>LazySpecification#to_s</source>
          <target state="translated">LazySpecification#to_s</target>
        </trans-unit>
        <trans-unit id="09c2ac4bf5f69252ee15fa8aa95da0674807ac30" translate="yes" xml:space="preserve">
          <source>LazySpecification::Identifier</source>
          <target state="translated">LazySpecification::Identifier</target>
        </trans-unit>
        <trans-unit id="30ffc61e641fab6c462cfaaef6cb49fc2c741b70" translate="yes" xml:space="preserve">
          <source>LazySpecification::Identifier#&amp;lt;=&amp;gt;</source>
          <target state="translated">LazySpecification::Identifier#&amp;lt;=&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1602b876c00ffaa80faf75b8ebbafa0226359bc1" translate="yes" xml:space="preserve">
          <source>LazySpecification::Identifier#platform_string</source>
          <target state="translated">LazySpecification::Identifier#platform_string</target>
        </trans-unit>
        <trans-unit id="ee94b42be7009858d2926ec59d997b06e6cd3d63" translate="yes" xml:space="preserve">
          <source>LazySpecification::new</source>
          <target state="translated">LazySpecification::new</target>
        </trans-unit>
        <trans-unit id="0fc7870a4ec14aa55489eca3c0c5ff955f17dd2c" translate="yes" xml:space="preserve">
          <source>Leading/trailing spaces are dropped, string is downcased, remaining spaces are replaced with underscores, non-word characters are dropped, and finally to_sym() is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a2c8e75e707917fb03f3800847f1d759dad0cc" translate="yes" xml:space="preserve">
          <source>Leave a group membership</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1377c3b1ff81a73efcd20e9f2b588efd0032ce89" translate="yes" xml:space="preserve">
          <source>Leave a multicast group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d12cce0596d9b592ffca86b57b5267fa56cf16" translate="yes" xml:space="preserve">
          <source>Leave a multicast source group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412018af5b6a76d6e185f8e1eb48f6e35f85fba0" translate="yes" xml:space="preserve">
          <source>Leave received out-of-band data in-line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="018a90c4fe55d6e60e53235c5b06e538b3aaf030" translate="yes" xml:space="preserve">
          <source>Leaves IDLE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9a526d1bebe452fd49cf97d97caddd99b76b1e" translate="yes" xml:space="preserve">
          <source>Leaves a block early. See &lt;a href=&quot;syntax/control_expressions_rdoc&quot;&gt;control expressions syntax&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68461b4786fed373487908ca66d56bdc23bbda20" translate="yes" xml:space="preserve">
          <source>Leaves exclusive section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3175ef181af3ef2e0695001d64c07d5bb90f71cf" translate="yes" xml:space="preserve">
          <source>Length in octets of the derived key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c76287eaa059d2f69be73033e20ed56897c1d92" translate="yes" xml:space="preserve">
          <source>LengthRequired</source>
          <target state="translated">LengthRequired</target>
        </trans-unit>
        <trans-unit id="c3db25c618011a2ddb87bcde92e181c349bbd033" translate="yes" xml:space="preserve">
          <source>Let's create an internet socket using the IPv4 protocol in a C-like manner:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="510895d4d6f73fdf629386fbf16bd608c4c06a8d" translate="yes" xml:space="preserve">
          <source>Letter 'A' is not in the Unicode Ll (Letter; Lowercase) category, so this match succeeds:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">License</target>
        </trans-unit>
        <trans-unit id="c2d7c4d21267d3fc173bdb7d36d3325e549db132" translate="yes" xml:space="preserve">
          <source>License and copyright</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a297baa6131e7ddb3c08198bfc19d8527f1ef38" translate="yes" xml:space="preserve">
          <source>Licensed under the Ruby License.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17eac339a49cdafacec3c161ab0ff653dd71ad2d" translate="yes" xml:space="preserve">
          <source>Licensed under their own licenses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033df3d297c22e077f87acc4e5b0f910192e40c2" translate="yes" xml:space="preserve">
          <source>Lifecycle</source>
          <target state="translated">Lifecycle</target>
        </trans-unit>
        <trans-unit id="e36c99ee7333b7133a2877f86b3b99f78704b17b" translate="yes" xml:space="preserve">
          <source>Lifetime of orphaned FIN_WAIT2 sockets (Linux 2.4, glibc 2.2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4bb4e8bc5dc99bf642a8ee226fe0f54268f81b0" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; decomposition in &lt;a href=&quot;methods_rdoc&quot;&gt;method arguments&lt;/a&gt; you can decompose an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; during assignment using parenthesis:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d3c2d05bfdefc0d0ba1a6dfded5b3fdc6ebf04" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; literals, you can quote symbol keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285db8edcf42d901911e3d12a041489fe0c0e225" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;array#method-i-5B-5D&quot;&gt;&lt;code&gt;Array#[]&lt;/code&gt;&lt;/a&gt;, negative indices count backward from the end of the row or column (-1 is the last element). Returns nil if the starting row or column is greater than &lt;a href=&quot;matrix#method-i-row_count&quot;&gt;&lt;code&gt;row_count&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;matrix#attribute-i-column_count&quot;&gt;&lt;code&gt;column_count&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b0a37919f68a36767e8b94f90b31a4c7a6a87b2" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;array#method-i-collect&quot;&gt;&lt;code&gt;Array#collect&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313c1a6eac25cbac99f21ed20f22fd20e465490f" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;array#method-i-collect-21&quot;&gt;&lt;code&gt;Array#collect!&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0cc6f1ae7fa829bb958b5b2542b78d30a9583fd" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;vector#method-i-collect2&quot;&gt;&lt;code&gt;Vector#collect2&lt;/code&gt;&lt;/a&gt;, but returns a &lt;a href=&quot;vector&quot;&gt;&lt;code&gt;Vector&lt;/code&gt;&lt;/a&gt; instead of an &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107be89a4ff7a6b793640cc256f5c5b08f87ecb7" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;unless&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; and &lt;code&gt;until&lt;/code&gt; can be used as modifiers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6501faf0013a6dca19c44881af9d9dcaaf646e87" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;while&lt;/code&gt; and &lt;code&gt;until&lt;/code&gt;, the &lt;code&gt;do&lt;/code&gt; is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d705dabb723d4f530c85d526a38a08f18b45608" translate="yes" xml:space="preserve">
          <source>Like a &lt;code&gt;while&lt;/code&gt; loop, the &lt;code&gt;do&lt;/code&gt; is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00beeb913b5796e0a090ae83c9d8e426654f2b5f" translate="yes" xml:space="preserve">
          <source>Like a &lt;code&gt;while&lt;/code&gt; loop, the result of an &lt;code&gt;until&lt;/code&gt; loop is nil unless &lt;code&gt;break&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd9a0acb7f1524d32e0507c915cb8749a51489c" translate="yes" xml:space="preserve">
          <source>Like a key, a cert can also be loaded from a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059ede4d0a69dab468e9aad136b0e29f9bb1e920" translate="yes" xml:space="preserve">
          <source>Like all classes that include the &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; module, &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; has an each method, which defines what elements should be iterated over and how. In case of Array's &lt;a href=&quot;array#method-i-each&quot;&gt;&lt;code&gt;each&lt;/code&gt;&lt;/a&gt;, all elements in the &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; instance are yielded to the supplied block in sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13c2132e8ffe62d8ae82852a7725c694b5f1744" translate="yes" xml:space="preserve">
          <source>Like an &lt;code&gt;if&lt;/code&gt; expression you may use an &lt;code&gt;else&lt;/code&gt; condition with &lt;code&gt;unless&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c679d7fac56ca3afb711ef6613d4b29c45a3ff" translate="yes" xml:space="preserve">
          <source>Like an &lt;code&gt;if&lt;/code&gt;, an &lt;code&gt;elsif&lt;/code&gt; condition may be followed by a &lt;code&gt;then&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b181007e8e23e56d0678c95d094c9e56babe78" translate="yes" xml:space="preserve">
          <source>Like strings, a single-quote may be used to disable interpolation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ee144a4632574482719e55551e9d0e8e766439" translate="yes" xml:space="preserve">
          <source>Limit &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; matching to specific schemes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a62fd75818a3830f9475c284d9ba270fe76259b" translate="yes" xml:space="preserve">
          <source>Limit the number of significant digits in newly created &lt;a href=&quot;bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt; numbers to the specified value. Rounding is performed as necessary, as specified by &lt;a href=&quot;bigdecimal#method-c-mode&quot;&gt;&lt;code&gt;BigDecimal.mode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9eacf38bfd3b2d15142149d2aac7645c4342a53" translate="yes" xml:space="preserve">
          <source>Line number of the event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f485664a964d016d26b6f3cc1ec189dd8633eec" translate="yes" xml:space="preserve">
          <source>Line printer subsystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0b41ae4802aebba2c291a5ac4d2add32086c58" translate="yes" xml:space="preserve">
          <source>Linear timeouts for thin-streams (Linux 2.6.34, glibc 2.18)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6acf580cb2711003eaac5317e52512ecf5974ca" translate="yes" xml:space="preserve">
          <source>Linger on close if data is present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb13cd3ec8e6c2d726140bd50e099aa11525c097" translate="yes" xml:space="preserve">
          <source>Link layer interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="397ee3ab9dbb3166fcfeab11d30b10c59911df21" translate="yes" xml:space="preserve">
          <source>Links the file from the relative source to the relative destination. If the destination is not given it's assumed to be equal to the source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5972b828e7719f4ea553c3e08b0041c0e3202d1" translate="yes" xml:space="preserve">
          <source>Linux 2.6.28, macOS 10.12</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da62a2c8ea07164eecb450f56d610403d629c929" translate="yes" xml:space="preserve">
          <source>Linux 2.6.32</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a70e17c51ce10f2693d0a5ea4e7084ffccaa6e0" translate="yes" xml:space="preserve">
          <source>Linux 2.6.39</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e344e3d249ebf686deb980b9cd7c7d4b920654" translate="yes" xml:space="preserve">
          <source>Linux 3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bec53e45f69d8d9801d47d949d230b4e4c8dd0f" translate="yes" xml:space="preserve">
          <source>List of host suffixes which will not be proxied</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a8bdd6f11a3449472096789e453b0d89b862ca8" translate="yes" xml:space="preserve">
          <source>List of insecure methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521345a63961575443a653ec874288262ee8a4c1" translate="yes" xml:space="preserve">
          <source>List sender and subject of all recent messages in the default mailbox</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44d8f790b0ced9c2457507e085fe042c8763637" translate="yes" xml:space="preserve">
          <source>List#accept</source>
          <target state="translated">List#accept</target>
        </trans-unit>
        <trans-unit id="c35cded5d2aa4454fab1944cfe2c9d6a57374d4f" translate="yes" xml:space="preserve">
          <source>List#append</source>
          <target state="translated">List#append</target>
        </trans-unit>
        <trans-unit id="70966bc30aed17795bb9260545292dced8468f04" translate="yes" xml:space="preserve">
          <source>List#atype</source>
          <target state="translated">List#atype</target>
        </trans-unit>
        <trans-unit id="eef8271042d6bd916fc8085b76a4a742c2076c99" translate="yes" xml:space="preserve">
          <source>List#complete</source>
          <target state="translated">List#complete</target>
        </trans-unit>
        <trans-unit id="d37e8aca0984171517d01bd002eeddce9fb688d1" translate="yes" xml:space="preserve">
          <source>List#each_option</source>
          <target state="translated">List#each_option</target>
        </trans-unit>
        <trans-unit id="d01883c2effe231b0df1244a23df4dc103abcee8" translate="yes" xml:space="preserve">
          <source>List#list</source>
          <target state="translated">List#list</target>
        </trans-unit>
        <trans-unit id="cf0eecf9c3f0d5cd35c40419a6c2be85896d0197" translate="yes" xml:space="preserve">
          <source>List#long</source>
          <target state="translated">List#long</target>
        </trans-unit>
        <trans-unit id="8e757785f38edd8ac5dba9db1182772ee780bae6" translate="yes" xml:space="preserve">
          <source>List#prepend</source>
          <target state="translated">List#prepend</target>
        </trans-unit>
        <trans-unit id="f1a1773afde07f73d2103af25dc314be3444dc67" translate="yes" xml:space="preserve">
          <source>List#reject</source>
          <target state="translated">List#reject</target>
        </trans-unit>
        <trans-unit id="02bcff15385f5c0eb82f8093349ced2d318154dc" translate="yes" xml:space="preserve">
          <source>List#search</source>
          <target state="translated">List#search</target>
        </trans-unit>
        <trans-unit id="8a30f2e62b0e0db71eb9fd77afdb5a871db27004" translate="yes" xml:space="preserve">
          <source>List#short</source>
          <target state="translated">List#short</target>
        </trans-unit>
        <trans-unit id="ab9f5cad014b500c4c25d27f8c3c4e6326b61e29" translate="yes" xml:space="preserve">
          <source>List#summarize</source>
          <target state="translated">List#summarize</target>
        </trans-unit>
        <trans-unit id="78ba2ef5c87d7ef3ac887b7d01059ee716db79c7" translate="yes" xml:space="preserve">
          <source>List#update</source>
          <target state="translated">List#update</target>
        </trans-unit>
        <trans-unit id="400d95f961630a4c99a74fedf7a2beddee1593f3" translate="yes" xml:space="preserve">
          <source>List::new</source>
          <target state="translated">List::new</target>
        </trans-unit>
        <trans-unit id="130c07b07aa1316627b3cba64865a591156b72f6" translate="yes" xml:space="preserve">
          <source>Listens for connections, using the specified &lt;code&gt;int&lt;/code&gt; as the backlog. A call to &lt;em&gt;listen&lt;/em&gt; only applies if the &lt;code&gt;socket&lt;/code&gt; is of type &lt;a href=&quot;socket#SOCK_STREAM&quot;&gt;&lt;code&gt;SOCK_STREAM&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;socket#SOCK_SEQPACKET&quot;&gt;&lt;code&gt;SOCK_SEQPACKET&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c3ccf13872d81470e74ac6e795793c6a5f4564" translate="yes" xml:space="preserve">
          <source>Listens for connections, using the specified &lt;code&gt;int&lt;/code&gt; as the backlog. A call to &lt;em&gt;listen&lt;/em&gt; only applies if the &lt;code&gt;socket&lt;/code&gt; is of type SOCK_STREAM or SOCK_SEQPACKET.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7000b857502058911a0600e8623223b31671b943" translate="yes" xml:space="preserve">
          <source>Listing all supported algorithms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a1d3e737299f3817598d927d0bcf4ecf9f32891" translate="yes" xml:space="preserve">
          <source>Literal &amp;ldquo;%&amp;rdquo; character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ba7dcf662374aafe652b03d75cb8f6024519d9" translate="yes" xml:space="preserve">
          <source>Literals</source>
          <target state="translated">Literals</target>
        </trans-unit>
        <trans-unit id="3da1c0cdcd7c20626fc8db644d307a964681bb5f" translate="yes" xml:space="preserve">
          <source>Literals create objects you can use in your program. Literals include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d594c0c7f7e0a2f204c1b97b2e9dafdc64499a" translate="yes" xml:space="preserve">
          <source>Load &lt;code&gt;yaml&lt;/code&gt; in to a Ruby data structure. If multiple documents are provided, the object contained in the first document will be returned. &lt;code&gt;filename&lt;/code&gt; will be used in the exception message if any exception is raised while parsing. If &lt;code&gt;yaml&lt;/code&gt; is empty, it returns the specified &lt;code&gt;fallback&lt;/code&gt; return value, which defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f3a35504c6a55a4421676d0e3f709b02326011" translate="yes" xml:space="preserve">
          <source>Load a ruby data structure from a &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt;&lt;em&gt;source&lt;/em&gt; and return it. A source can either be a string-like object, an IO-like object, or an object responding to the read method. If &lt;em&gt;proc&lt;/em&gt; was given, it will be called with any nested Ruby object as an argument recursively in depth first order. To modify the default options pass in the optional &lt;em&gt;options&lt;/em&gt; argument as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946ba886d8736d72f67dcedee12a7717553bd640" translate="yes" xml:space="preserve">
          <source>Load an iseq object from binary format &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object created by &lt;a href=&quot;instructionsequence#method-i-to_binary&quot;&gt;&lt;code&gt;RubyVM::InstructionSequence.to_binary&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c05a9a68dbd8a6bdeb211baaae082722fa97d7ea" translate="yes" xml:space="preserve">
          <source>Load extra data embed into binary format &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="258b11b85f0247251b9dc1259303feb80e2d1147" translate="yes" xml:space="preserve">
          <source>Load information from Gemfile and Lockfile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15e18fc5f0564fe1de9058d2bc15dd466516e22" translate="yes" xml:space="preserve">
          <source>Load multiple documents given in &lt;code&gt;yaml&lt;/code&gt;. Returns the parsed documents as a list. If a block is given, each document will be converted to Ruby and passed to the block during parsing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714d73c9c6fe152fb548a0debf3c9a38e2ebd9b7" translate="yes" xml:space="preserve">
          <source>Load path for scripts and binary modules by load or require.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1679c0ce6bec49b1f9bea4d5d04f30bd9064595" translate="yes" xml:space="preserve">
          <source>Load the document contained in &lt;code&gt;filename&lt;/code&gt;. Returns the yaml contained in &lt;code&gt;filename&lt;/code&gt; as a Ruby object, or if the file is empty, it returns the specified &lt;code&gt;fallback&lt;/code&gt; return value, which defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c2b700d18defb82a1ce51b28abf209181d370f" translate="yes" xml:space="preserve">
          <source>Load the given &lt;a href=&quot;pstore&quot;&gt;&lt;code&gt;PStore&lt;/code&gt;&lt;/a&gt; file. If &lt;code&gt;read_only&lt;/code&gt; is true, the unmarshalled &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; will be returned. If &lt;code&gt;read_only&lt;/code&gt; is false, a 3-tuple will be returned: the unmarshalled &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;, a checksum of the data, and the size of the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46559e0eb7289033adcb2334be83299e56fb790b" translate="yes" xml:space="preserve">
          <source>LoadError</source>
          <target state="translated">LoadError</target>
        </trans-unit>
        <trans-unit id="ea7f6247d31c3a14494aa1c01dc161e11b00e0ff" translate="yes" xml:space="preserve">
          <source>LoadError#path</source>
          <target state="translated">LoadError#path</target>
        </trans-unit>
        <trans-unit id="bc62fe860d56a30ee2a52b51024478c7d42a5e6b" translate="yes" xml:space="preserve">
          <source>Loading a Certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5854fbf2cedea8e3c4635886762b9c9ce025ed4" translate="yes" xml:space="preserve">
          <source>Loading a Key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff10be51319932ccce4735f4e3cea3f19824812" translate="yes" xml:space="preserve">
          <source>Loading an Encrypted Key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f83537a0ecfb10c78574a1952fa42cff4080222" translate="yes" xml:space="preserve">
          <source>Loads an external file and execute it in the instance binding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094d30e2085f638bce17b0f026e0ba300cc5f2eb" translate="yes" xml:space="preserve">
          <source>Loads and executes the Ruby program in the file &lt;em&gt;filename&lt;/em&gt;. If the filename does not resolve to an absolute path, the file is searched for in the library directories listed in &lt;code&gt;$:&lt;/code&gt;. If the optional &lt;em&gt;wrap&lt;/em&gt; parameter is &lt;code&gt;true&lt;/code&gt;, the loaded script will be executed under an anonymous module, protecting the calling program's global namespace. In no circumstance will any local variables in the loaded file be propagated to the loading environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0183e5734634a4e5df94d166ae8a4ad0877b90b" translate="yes" xml:space="preserve">
          <source>Loads options from file names as &lt;code&gt;filename&lt;/code&gt;. Does nothing when the file is not present. Returns whether successfully loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6e5ce4f792cc7d24af982acfea7b03a34576b6" translate="yes" xml:space="preserve">
          <source>Loads the given private key identified by &lt;em&gt;id&lt;/em&gt; and &lt;em&gt;data&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
