<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="ramda">
    <body>
      <group id="ramda">
        <trans-unit id="d756b372a735ce2feea51c96a61d19c6d5f626aa" translate="yes" xml:space="preserve">
          <source>&quot;lifts&quot; a function of arity &amp;gt; 1 so that it may &quot;map over&quot; a list, Function or other object that satisfies the &lt;a href=&quot;https://github.com/fantasyland/fantasy-land#apply&quot;&gt;FantasyLand Apply spec&lt;/a&gt;.</source>
          <target state="translated">&quot;lifts&quot; a function of arity &amp;gt; 1 so that it may &quot;map over&quot; a list, Function or other object that satisfies the &lt;a href=&quot;https://github.com/fantasyland/fantasy-land#apply&quot;&gt;FantasyLand Apply spec&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9f3f3019c14d58cba74f08644d38e4eab8a0c61b" translate="yes" xml:space="preserve">
          <source>&quot;lifts&quot; a function to be the specified arity, so that it may &quot;map over&quot; that many lists, Functions or other objects that satisfy the &lt;a href=&quot;https://github.com/fantasyland/fantasy-land#apply&quot;&gt;FantasyLand Apply spec&lt;/a&gt;.</source>
          <target state="translated">&quot;lifts&quot; a function to be the specified arity, so that it may &quot;map over&quot; that many lists, Functions or other objects that satisfy the &lt;a href=&quot;https://github.com/fantasyland/fantasy-land#apply&quot;&gt;FantasyLand Apply spec&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0024fffd4ea47ba37baefba16b2ec1d93d939b33" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2013&amp;ndash;2016 Scott Sauyet and Michael Hurley</source>
          <target state="translated">&amp;copy; 2013&amp;ndash;2016 Scott Sauyet and Michael Hurley</target>
        </trans-unit>
        <trans-unit id="b008dae1fdb6e58b332ad966908c3435a02f3f89" translate="yes" xml:space="preserve">
          <source>*A copy of list without the first `n` elements</source>
          <target state="translated">*A copy of list without the first `n` elements</target>
        </trans-unit>
        <trans-unit id="c198c340e3e4ea6c4a8f919338089da90bbec4b8" translate="yes" xml:space="preserve">
          <source>*A deeply cloned copy of `val`</source>
          <target state="translated">*A deeply cloned copy of `val`</target>
        </trans-unit>
        <trans-unit id="b9d231a6709ef1826c020505a06d0138d59ec1be" translate="yes" xml:space="preserve">
          <source>*Either `x` or the result of applying `x` to `whenFalseFn`.</source>
          <target state="translated">*Either `x` or the result of applying `x` to `whenFalseFn`.</target>
        </trans-unit>
        <trans-unit id="c1f42279eca2c077f66c88de75a9a5c7754ba879" translate="yes" xml:space="preserve">
          <source>*Either `x` or the result of applying `x` to `whenTrueFn`.</source>
          <target state="translated">*Either `x` or the result of applying `x` to `whenTrueFn`.</target>
        </trans-unit>
        <trans-unit id="93aca4aa3fd9cff446e272e298e84ad0155420f4" translate="yes" xml:space="preserve">
          <source>*Final value that satisfies predicate</source>
          <target state="translated">*Final value that satisfies predicate</target>
        </trans-unit>
        <trans-unit id="4d779fa5d5bc1af8696b401680d8cad5240e7df5" translate="yes" xml:space="preserve">
          <source>*The data at `path` of the supplied object or the default value.</source>
          <target state="translated">*The data at `path` of the supplied object or the default value.</target>
        </trans-unit>
        <trans-unit id="5998a01c42c2ee773d3afa51f3d01b4863fc45f9" translate="yes" xml:space="preserve">
          <source>*The data at `path`.</source>
          <target state="translated">*The data at `path`.</target>
        </trans-unit>
        <trans-unit id="2ec807556e3ff79cb8390d9f1bc62ee6a1375fd8" translate="yes" xml:space="preserve">
          <source>*The final, accumulated value.</source>
          <target state="translated">*The final, accumulated value.</target>
        </trans-unit>
        <trans-unit id="d7763e6c1bad05ce63270f8c8bc0d8937b7bc336" translate="yes" xml:space="preserve">
          <source>*The input value, `x`.</source>
          <target state="translated">*The input value, `x`.</target>
        </trans-unit>
        <trans-unit id="802ff956596e604eaf7119dbc28ad6c81cde9d94" translate="yes" xml:space="preserve">
          <source>*The result of applying `f` to `x`</source>
          <target state="translated">*The result of applying `f` to `x`</target>
        </trans-unit>
        <trans-unit id="c3f9d0fd0c5dd53ee3fbe12c16206266ff90080b" translate="yes" xml:space="preserve">
          <source>*The result of invoking `fn` with its first two parameters' order reversed.</source>
          <target state="translated">*The result of invoking `fn` with its first two parameters' order reversed.</target>
        </trans-unit>
        <trans-unit id="18462637a6cdf8aa45c4c8b24a43e3246e2ebc0d" translate="yes" xml:space="preserve">
          <source>*The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value</source>
          <target state="translated">*The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value</target>
        </trans-unit>
        <trans-unit id="9bb5105e1b52ab816d27fb23236460dcb16b06c8" translate="yes" xml:space="preserve">
          <source>*The value at `obj.p`.</source>
          <target state="translated">*The value at `obj.p`.</target>
        </trans-unit>
        <trans-unit id="48a1e42a746fca5fffbfd35b5a6a68e14686086f" translate="yes" xml:space="preserve">
          <source>*The value of given property of the supplied object or the default value.</source>
          <target state="translated">*The value of given property of the supplied object or the default value.</target>
        </trans-unit>
        <trans-unit id="b05bd7ec68a2287085ed22a5ca185f3085b356d5" translate="yes" xml:space="preserve">
          <source>*The wrapped value.</source>
          <target state="translated">*The wrapped value.</target>
        </trans-unit>
        <trans-unit id="959f39ad9d13f9a61b6b2cd52afecda4e6515ccb" translate="yes" xml:space="preserve">
          <source>*`x`.</source>
          <target state="translated">*`x`.</target>
        </trans-unit>
        <trans-unit id="babedbd03453a955e898fdf0110c30e1ac056535" translate="yes" xml:space="preserve">
          <source>*result The result, equivalent to `fn(...args)`</source>
          <target state="translated">*result The result, equivalent to `fn(...args)`</target>
        </trans-unit>
        <trans-unit id="b4bbb10ec0763b2d219cb48e13671e1794a407b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R.complement&lt;/code&gt; may be applied to any functor</source>
          <target state="translated">&lt;code&gt;R.complement&lt;/code&gt; は任意のファンクターに適用できます</target>
        </trans-unit>
        <trans-unit id="d2ae4ebddd58a3cd41b9366116c55e6475241696" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R.composeK(h, g, f)&lt;/code&gt; is equivalent to &lt;code&gt;R.compose(R.chain(h), R.chain(g), f)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;R.composeK(h, g, f)&lt;/code&gt; は &lt;code&gt;R.compose(R.chain(h), R.chain(g), f)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="76f13ec7b8a3d632e22aff9e20f9f21bc0a0fbb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R.pipeK(f, g, h)&lt;/code&gt; is equivalent to &lt;code&gt;R.pipe(f, R.chain(g), R.chain(h))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;R.pipeK(f, g, h)&lt;/code&gt; は &lt;code&gt;R.pipe(f, R.chain(g), R.chain(h))&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="0313800f88c9684654082f59eebb522e6ff69ee6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chain&lt;/code&gt; maps a function over a list and concatenates the results. &lt;code&gt;chain&lt;/code&gt; is also known as &lt;code&gt;flatMap&lt;/code&gt; in some libraries.</source>
          <target state="translated">&lt;code&gt;chain&lt;/code&gt; は関数をリストにマッピングし、結果を連結します。 &lt;code&gt;chain&lt;/code&gt; は、一部のライブラリでは &lt;code&gt;flatMap&lt;/code&gt; としても知られています。</target>
        </trans-unit>
        <trans-unit id="ae2ac78c14828945c66ac62ee32ee8224d7f9435" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn&lt;/code&gt; is passed one argument: The current value of &lt;code&gt;n&lt;/code&gt;, which begins at &lt;code&gt;0&lt;/code&gt; and is gradually incremented to &lt;code&gt;n - 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; には1つの引数が渡されます &lt;code&gt;n&lt;/code&gt; の現在の値は &lt;code&gt;0&lt;/code&gt; から始まり、徐々に &lt;code&gt;n - 1&lt;/code&gt; 増加します。</target>
        </trans-unit>
        <trans-unit id="e108f977f71647196d80b3f122b4ab9f961fd5c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn&lt;/code&gt; receives one argument: &lt;em&gt;(value)&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; は1つの引数&lt;em&gt;（値）&lt;/em&gt;を受け取り&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e3462dc94a68e88d31a9ba91e16337386fce39af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn&lt;/code&gt; receives three argument: &lt;em&gt;(value, key, obj)&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; は&lt;em&gt;（value、key、obj）の&lt;/em&gt; 3つの引数を受け取ります。</target>
        </trans-unit>
        <trans-unit id="e14bc9078b21dc391f6645a003953b7093fc2492" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mathMod&lt;/code&gt; behaves like the modulo operator should mathematically, unlike the &lt;code&gt;%&lt;/code&gt; operator (and by extension, &lt;a href=&quot;#modulo&quot;&gt;&lt;code&gt;R.modulo&lt;/code&gt;&lt;/a&gt;). So while &lt;code&gt;-17 % 5&lt;/code&gt; is &lt;code&gt;-2&lt;/code&gt;, &lt;code&gt;mathMod(-17, 5)&lt;/code&gt; is &lt;code&gt;3&lt;/code&gt;. &lt;code&gt;mathMod&lt;/code&gt; requires Integer arguments, and returns NaN when the modulus is zero or negative.</source>
          <target state="translated">&lt;code&gt;mathMod&lt;/code&gt; は、 &lt;code&gt;%&lt;/code&gt; 演算子（および、拡張すると、&lt;a href=&quot;#modulo&quot;&gt; &lt;code&gt;R.modulo&lt;/code&gt; &lt;/a&gt;）とは異なり、数学的にはmodulo演算子のように動作します。したがって、 &lt;code&gt;-17 % 5&lt;/code&gt; は &lt;code&gt;-2&lt;/code&gt; ですが、 &lt;code&gt;mathMod(-17, 5)&lt;/code&gt; は &lt;code&gt;3&lt;/code&gt; です。 &lt;code&gt;mathMod&lt;/code&gt; は整数の引数を必要とし、係数がゼロまたは負の場合、NaNを返します。</target>
        </trans-unit>
        <trans-unit id="d68f060045802f2fe848bb2a71ad2703aaa5a5d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;o&lt;/code&gt; is a curried composition function that returns a unary function. Like &lt;a href=&quot;#compose&quot;&gt;&lt;code&gt;compose&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;o&lt;/code&gt; performs right-to-left function composition. Unlike &lt;a href=&quot;#compose&quot;&gt;&lt;code&gt;compose&lt;/code&gt;&lt;/a&gt;, the rightmost function passed to &lt;code&gt;o&lt;/code&gt; will be invoked with only one argument. Also, unlike &lt;a href=&quot;#compose&quot;&gt;&lt;code&gt;compose&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;o&lt;/code&gt; is limited to accepting only 2 unary functions. The name o was chosen because of its similarity to the mathematical composition operator ∘.</source>
          <target state="translated">&lt;code&gt;o&lt;/code&gt; は、単項関数を返すカレー合成関数です。&lt;a href=&quot;#compose&quot;&gt; &lt;code&gt;compose&lt;/code&gt; &lt;/a&gt;と同様に、 &lt;code&gt;o&lt;/code&gt; は右から左への関数合成を実行します。&lt;a href=&quot;#compose&quot;&gt; &lt;code&gt;compose&lt;/code&gt; &lt;/a&gt;とは異なり、 &lt;code&gt;o&lt;/code&gt; に渡される右端の関数は、1つの引数だけで呼び出されます。また、&lt;a href=&quot;#compose&quot;&gt; &lt;code&gt;compose&lt;/code&gt; &lt;/a&gt;とは異なり、 &lt;code&gt;o&lt;/code&gt; は2つの単項関数のみを受け入れるように制限されています。数学的な合成演算子toと類似しているため、名前oが選択されました。</target>
        </trans-unit>
        <trans-unit id="7f89fbd016ed0a16b9f92349e7ec2fd75b3f2c60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pluck&lt;/code&gt; will work on any &lt;a href=&quot;https://github.com/fantasyland/fantasy-land#functor&quot;&gt;functor&lt;/a&gt; in addition to arrays, as it is equivalent to &lt;code&gt;R.map(R.prop(k), f)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pluck&lt;/code&gt; いずれかで動作する&lt;a href=&quot;https://github.com/fantasyland/fantasy-land#functor&quot;&gt;ファンクタ&lt;/a&gt;それに相当するように、アレイに加えて &lt;code&gt;R.map(R.prop(k), f)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d24ba5859e628bfe564e938789ce94b2e876c64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pred&lt;/code&gt; must be a binary function expecting an element from each list.</source>
          <target state="translated">&lt;code&gt;pred&lt;/code&gt; は、各リストの要素を必要とするバイナリ関数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="39463dd598dc85009ce93226397928c5c67466d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tryCatch&lt;/code&gt; takes two functions, a &lt;code&gt;tryer&lt;/code&gt; and a &lt;code&gt;catcher&lt;/code&gt;. The returned function evaluates the &lt;code&gt;tryer&lt;/code&gt;; if it does not throw, it simply returns the result. If the &lt;code&gt;tryer&lt;/code&gt;&lt;em&gt;does&lt;/em&gt; throw, the returned function evaluates the &lt;code&gt;catcher&lt;/code&gt; function and returns its result. Note that for effective composition with this function, both the &lt;code&gt;tryer&lt;/code&gt; and &lt;code&gt;catcher&lt;/code&gt; functions must return the same type of results.</source>
          <target state="translated">&lt;code&gt;tryCatch&lt;/code&gt; は二つの機能、取り &lt;code&gt;tryer&lt;/code&gt; と &lt;code&gt;catcher&lt;/code&gt; 。返された関数は &lt;code&gt;tryer&lt;/code&gt; を評価します。スローしない場合は、単に結果を返します。場合 &lt;code&gt;tryer&lt;/code&gt; は&lt;em&gt;ありません&lt;/em&gt;スローを、返された関数が評価 &lt;code&gt;catcher&lt;/code&gt; 機能をし、その結果を返します。この関数で効果的な合成を行うには、 &lt;code&gt;tryer&lt;/code&gt; 関数と &lt;code&gt;catcher&lt;/code&gt; 関数の両方が同じタイプの結果を返す必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3483b8e1d827e1c101ca65f5f70640b06e066d87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;val&lt;/code&gt; will be returned instead of &lt;code&gt;default&lt;/code&gt; unless &lt;code&gt;val&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;val&lt;/code&gt; が代わりに返されます &lt;code&gt;default&lt;/code&gt; しない限り、 &lt;code&gt;val&lt;/code&gt; がある &lt;code&gt;null&lt;/code&gt; 、 &lt;code&gt;undefined&lt;/code&gt; または &lt;code&gt;NaN&lt;/code&gt; の。</target>
        </trans-unit>
        <trans-unit id="b601648355825b7adedbaa8c2a5d828f924c60ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;where&lt;/code&gt; is well suited to declaratively expressing constraints for other functions such as &lt;a href=&quot;#filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#find&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; は、&lt;a href=&quot;#filter&quot;&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#find&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt;などの他の関数の制約を宣言的に表現するのに適しています。</target>
        </trans-unit>
        <trans-unit id="7f1f0608205375b01cd0ce03bc3186c329c2ad08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;whereEq&lt;/code&gt; is a specialization of &lt;a href=&quot;#where&quot;&gt;&lt;code&gt;where&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;whereEq&lt;/code&gt; の専門です。&lt;a href=&quot;#where&quot;&gt; &lt;code&gt;where&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46c69b857508fd88be806d8df0d378d5c4784b85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xs&lt;/code&gt;, &lt;code&gt;ys&lt;/code&gt;, and &lt;code&gt;xs'&lt;/code&gt; are treated as sets, semantically, so ordering should not be significant, but since &lt;code&gt;xs'&lt;/code&gt; is ordered the implementation guarantees that its values are in the same order as they appear in &lt;code&gt;xs&lt;/code&gt;. Duplicates are not removed, so &lt;code&gt;xs'&lt;/code&gt; may contain duplicates if &lt;code&gt;xs&lt;/code&gt; contains duplicates.</source>
          <target state="translated">&lt;code&gt;xs&lt;/code&gt; 、 &lt;code&gt;ys&lt;/code&gt; 、および &lt;code&gt;xs'&lt;/code&gt; は意味的にセットとして扱われるため、順序付けは重要ではありませんが、 &lt;code&gt;xs'&lt;/code&gt; が順序付けされるため、実装はその値が &lt;code&gt;xs&lt;/code&gt; に表示される順序と同じであることを保証します。重複が削除されていないので &lt;code&gt;xs'&lt;/code&gt; 場合、重複が含まれていてもよい &lt;code&gt;xs&lt;/code&gt; 重複が含まれています。</target>
        </trans-unit>
        <trans-unit id="34857c2dbfc38bf133a9063b9997dd194e0c05a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The result of compose is not automatically curried.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;作成の結果は自動的にカリー化されません。</target>
        </trans-unit>
        <trans-unit id="f6ba2478329f530824613280380913cf4fe6ec2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The result of pipe is not automatically curried.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; pipeの結果は自動的にカリー化されません。</target>
        </trans-unit>
        <trans-unit id="1b62b74474df824d424dec86141d6d8b19e1fd52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The result of pipeWith is not automatically curried.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; pipeWithの結果は自動的にカリー化されません。</target>
        </trans-unit>
        <trans-unit id="e0d5428a86aec849891ad40ce48f3b25b26218f0" translate="yes" xml:space="preserve">
          <source>A 2D list</source>
          <target state="translated">2次元リスト</target>
        </trans-unit>
        <trans-unit id="7939946c44e7b2652deec3786f719becab46e2dc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;transformation&lt;/code&gt; function will not be invoked if its corresponding key does not exist in the evolved object.</source>
          <target state="translated">&lt;code&gt;transformation&lt;/code&gt; その対応するキーは、進化したオブジェクトに存在しない場合、この関数が呼び出されることはありません。</target>
        </trans-unit>
        <trans-unit id="201d162ff74c75b39c099eafe0856ca091082e61" translate="yes" xml:space="preserve">
          <source>A constructor</source>
          <target state="translated">コンストラクタ</target>
        </trans-unit>
        <trans-unit id="15850c0511808c0ab8c24a83a6e9b3a11802f67f" translate="yes" xml:space="preserve">
          <source>A function of arity one that returns a value that can be compared</source>
          <target state="translated">比較可能な値を返すアリティ1の関数</target>
        </trans-unit>
        <trans-unit id="a6cf8771550d533fa731cb71318007aff31d0118" translate="yes" xml:space="preserve">
          <source>A function that always returns &lt;code&gt;false&lt;/code&gt;. Any passed in parameters are ignored.</source>
          <target state="translated">常に &lt;code&gt;false&lt;/code&gt; を返す関数。渡されたパラメータはすべて無視されます。</target>
        </trans-unit>
        <trans-unit id="5218f58a858c89acada9fbd836a3828d5e8c76a4" translate="yes" xml:space="preserve">
          <source>A function that always returns &lt;code&gt;true&lt;/code&gt;. Any passed in parameters are ignored.</source>
          <target state="translated">常に &lt;code&gt;true&lt;/code&gt; を返す関数。渡されたパラメータはすべて無視されます。</target>
        </trans-unit>
        <trans-unit id="bd7f6f49c761b0a5263c98cf68dd0702cbe18f21" translate="yes" xml:space="preserve">
          <source>A function that does nothing but return the parameter supplied to it. Good as a default or placeholder function.</source>
          <target state="translated">与えられたパラメータを返すだけの関数。デフォルトまたはプレースホルダ関数として有効です。</target>
        </trans-unit>
        <trans-unit id="f42525e2fdc8cd5ecaf99b779e637de50b5b9bc8" translate="yes" xml:space="preserve">
          <source>A function that returns the &lt;code&gt;!&lt;/code&gt; of its argument. It will return &lt;code&gt;true&lt;/code&gt; when passed false-y value, and &lt;code&gt;false&lt;/code&gt; when passed a truth-y one.</source>
          <target state="translated">&lt;code&gt;!&lt;/code&gt; を返す関数 その議論の。それは戻ります &lt;code&gt;true&lt;/code&gt; 偽-yの値、および渡されたときに &lt;code&gt;false&lt;/code&gt; 真実-Y 1を通過したとき。</target>
        </trans-unit>
        <trans-unit id="f7d2041c7a4940e541f9c155f661cd1a20422e72" translate="yes" xml:space="preserve">
          <source>A function to invoke when the &lt;code&gt;condition&lt;/code&gt; evaluates to a falsy value.</source>
          <target state="translated">&lt;code&gt;condition&lt;/code&gt; が偽の値に評価されたときに呼び出す関数。</target>
        </trans-unit>
        <trans-unit id="d711ea343d69f02bac016e4ac44469b2b8d9495a" translate="yes" xml:space="preserve">
          <source>A function to invoke when the &lt;code&gt;condition&lt;/code&gt; evaluates to a truthy value.</source>
          <target state="translated">&lt;code&gt;condition&lt;/code&gt; が真の値に評価されるときに呼び出す関数。</target>
        </trans-unit>
        <trans-unit id="14384955245bb6e5f68907656fea5e3a18e65360" translate="yes" xml:space="preserve">
          <source>A function to invoke when the &lt;code&gt;pred&lt;/code&gt; evaluates to a falsy value.</source>
          <target state="translated">&lt;code&gt;pred&lt;/code&gt; が偽の値に評価されたときに呼び出す関数。</target>
        </trans-unit>
        <trans-unit id="f58385c6f901acb4617d6f3dd751e8921c6b7b22" translate="yes" xml:space="preserve">
          <source>A function to wrap in a thunk</source>
          <target state="translated">thunkでラップする関数</target>
        </trans-unit>
        <trans-unit id="2902828077038a2dbbfd8cdf620a1be2f66c9505" translate="yes" xml:space="preserve">
          <source>A function used to produce a value to use during comparisons.</source>
          <target state="translated">比較の際に使用する値を生成するために使用される関数。</target>
        </trans-unit>
        <trans-unit id="3df1e7bdb264f21644603c82ec25aba87417e3b1" translate="yes" xml:space="preserve">
          <source>A function which calls the two provided functions and returns the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; of the results. It returns the result of the first function if it is false-y and the result of the second function otherwise. Note that this is short-circuited, meaning that the second function will not be invoked if the first returns a false-y value.</source>
          <target state="translated">提供された2つの関数を呼び出し、結果の &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; を返す関数。false-yの場合は最初の関数の結果を返し、それ以外の場合は2番目の関数の結果を返します。これは短絡されていることに注意してください。つまり、最初の関数がfalse-y値を返した場合、2番目の関数は呼び出されません。</target>
        </trans-unit>
        <trans-unit id="85a57323c576f82bb310b1782a54c26b523b0889" translate="yes" xml:space="preserve">
          <source>A function wrapping calls to the two functions in an &lt;code&gt;||&lt;/code&gt; operation, returning the result of the first function if it is truth-y and the result of the second function otherwise. Note that this is short-circuited, meaning that the second function will not be invoked if the first returns a truth-y value.</source>
          <target state="translated">&lt;code&gt;||&lt;/code&gt; の 2つの関数への呼び出しをラップする関数 演算。最初の関数の結果がtrue-yの場合はそれを返し、それ以外の場合は2番目の関数の結果を返します。これは短絡されていることに注意してください。つまり、最初の関数がtrue-yの値を返した場合、2番目の関数は呼び出されません。</target>
        </trans-unit>
        <trans-unit id="4a5894a58bcdeccb0af5543cc1aee35123452d33" translate="yes" xml:space="preserve">
          <source>A function. &lt;code&gt;after&lt;/code&gt; will be invoked with the return values of &lt;code&gt;fn1&lt;/code&gt; and &lt;code&gt;fn2&lt;/code&gt; as its arguments.</source>
          <target state="translated">機能。 &lt;code&gt;after&lt;/code&gt; は、 &lt;code&gt;fn1&lt;/code&gt; と &lt;code&gt;fn2&lt;/code&gt; の戻り値を引数として呼び出されます。</target>
        </trans-unit>
        <trans-unit id="52290ea91cdd4d11b6bcc040228132dec50c10fb" translate="yes" xml:space="preserve">
          <source>A list iteration function that does not pass index or list to its callback</source>
          <target state="translated">コールバックにインデックスやリストを渡さないリスト反復関数</target>
        </trans-unit>
        <trans-unit id="64c26178cfd08bbdd3774eab4f32d89b838ab68e" translate="yes" xml:space="preserve">
          <source>A list of [predicate, transformer]</source>
          <target state="translated">述語、変換器]のリストです。</target>
        </trans-unit>
        <trans-unit id="a19f7b2140e856e91945c38917f3ff72130818f8" translate="yes" xml:space="preserve">
          <source>A list of comparator functions.</source>
          <target state="translated">コンパレータ機能のリストです。</target>
        </trans-unit>
        <trans-unit id="04b8cdd460c983e64fe7da2d925dcb29dc7f1b1f" translate="yes" xml:space="preserve">
          <source>A list of functions.</source>
          <target state="translated">機能の一覧です。</target>
        </trans-unit>
        <trans-unit id="5d57e0608808d448607892b02443ff6ff76c728b" translate="yes" xml:space="preserve">
          <source>A list of transformer functions</source>
          <target state="translated">トランス機能一覧</target>
        </trans-unit>
        <trans-unit id="7868da1a810f89d9fbcdcc57713a3231026ca1ac" translate="yes" xml:space="preserve">
          <source>A predicate</source>
          <target state="translated">述語</target>
        </trans-unit>
        <trans-unit id="07115095c5a64e46bd330c7b9e22f64aef19a84f" translate="yes" xml:space="preserve">
          <source>A predicate function</source>
          <target state="translated">述語関数</target>
        </trans-unit>
        <trans-unit id="7b89d99593e8921c1659fb4e8891412d059159b1" translate="yes" xml:space="preserve">
          <source>A predicate function of arity two which will return &lt;code&gt;true&lt;/code&gt; if the first argument is less than the second, &lt;code&gt;false&lt;/code&gt; otherwise</source>
          <target state="translated">最初の引数が2番目の引数より小さい場合は &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返す、アリティ2の述語関数</target>
        </trans-unit>
        <trans-unit id="f58304249ad7aca09d36525d1ee698921e56cd8b" translate="yes" xml:space="preserve">
          <source>A predicate to determine whether or not a key should be included on the output object.</source>
          <target state="translated">出力オブジェクトにキーを含めるかどうかを決定する述語。</target>
        </trans-unit>
        <trans-unit id="52bfd5de593eba40aa1c5384cb408989b5d673ca" translate="yes" xml:space="preserve">
          <source>A predicate to determine which side the element belongs to.</source>
          <target state="translated">要素がどちらの側に属するかを決定する述語。</target>
        </trans-unit>
        <trans-unit id="ee2a9967dbe206adf46404d232f70a21f5dbedc4" translate="yes" xml:space="preserve">
          <source>A predicate used to test whether two items are equal.</source>
          <target state="translated">2つの項目が等しいかどうかをテストするために使用される述語。</target>
        </trans-unit>
        <trans-unit id="d4822a5ddde783b98e4728cd8e6918cad177b847" translate="yes" xml:space="preserve">
          <source>A regular expression or a substring to match.</source>
          <target state="translated">正規表現またはマッチする部分文字列。</target>
        </trans-unit>
        <trans-unit id="fbf6deb15296d4c90baef4614f0b749974d45484" translate="yes" xml:space="preserve">
          <source>A regular expression.</source>
          <target state="translated">正規表現です。</target>
        </trans-unit>
        <trans-unit id="3b5b19a5c7d8c0a3497c0669c1d2a5d11f6aa8dd" translate="yes" xml:space="preserve">
          <source>A sorting function :: a -&amp;gt; b -&amp;gt; Int</source>
          <target state="translated">ソート関数:: a-&amp;gt; b-&amp;gt; Int</target>
        </trans-unit>
        <trans-unit id="9dceb73ec0e652dc18df9b4ae72a0082b4956669" translate="yes" xml:space="preserve">
          <source>A special placeholder value used to specify &quot;gaps&quot; within curried functions, allowing partial application of any combination of arguments, regardless of their positions.</source>
          <target state="translated">カーリングされた関数内の &quot;ギャップ &quot;を指定するために使用される特別なプレースホルダ値で、引数の位置に関係なく、任意の組み合わせの部分的な適用を可能にします。</target>
        </trans-unit>
        <trans-unit id="440a90aa8daf6833051982bf59f1d2009a967807" translate="yes" xml:space="preserve">
          <source>A transducer is a function that accepts a transformer and returns a transformer and can be composed directly.</source>
          <target state="translated">トランスデューサとは、トランスを受け入れてトランスを返す機能のことで、直接構成することができます。</target>
        </trans-unit>
        <trans-unit id="5835160ff35a41d547a87a6eb557081019055a37" translate="yes" xml:space="preserve">
          <source>A transformer is an an object that provides a 2-arity reducing iterator function, step, 0-arity initial value function, init, and 1-arity result extraction function, result. The step function is used as the iterator function in reduce. The result function is used to convert the final accumulator into the return type and in most cases is &lt;a href=&quot;#identity&quot;&gt;&lt;code&gt;R.identity&lt;/code&gt;&lt;/a&gt;. The init function can be used to provide an initial accumulator, but is ignored by transduce.</source>
          <target state="translated">トランスフォーマーは、2値削減イテレーター関数、ステップ、0値初期値関数、init、および1値結果抽出関数resultを提供するオブジェクトです。ステップ関数は、reduceの反復関数として使用されます。結果関数は、最終的なアキュムレータを戻り値の型に変換するために使用され、ほとんどの場合は&lt;a href=&quot;#identity&quot;&gt; &lt;code&gt;R.identity&lt;/code&gt; &lt;/a&gt;です。init関数は初期アキュムレータを提供するために使用できますが、変換によって無視されます。</target>
        </trans-unit>
        <trans-unit id="a2fa955e6b23c6dcd33739f1ac4e1a093b5e627b" translate="yes" xml:space="preserve">
          <source>A value between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;n - 1&lt;/code&gt;. Increments after each function call.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; から &lt;code&gt;n - 1&lt;/code&gt; までの値。各関数呼び出しの後に増分します。</target>
        </trans-unit>
        <trans-unit id="f3b28ce3171ca62cb0ce0adf8d179a84c8a3ff97" translate="yes" xml:space="preserve">
          <source>Accepts a converging function and a list of branching functions and returns a new function. The arity of the new function is the same as the arity of the longest branching function. When invoked, this new function is applied to some arguments, and each branching function is applied to those same arguments. The results of each branching function are passed as arguments to the converging function to produce the return value.</source>
          <target state="translated">収束関数と分岐関数のリストを受け取り、新しい関数を返します。新しい関数のアリティは、最も長い分岐関数のアリティと同じです。呼び出されると、この新しい関数はいくつかの引数に適用され、各分岐関数はそれらの同じ引数に適用されます。各分岐関数の結果は、収束関数の引数として渡され、戻り値を生成します。</target>
        </trans-unit>
        <trans-unit id="8df8c8e7c52f0cc2766f031356c3097cc027f258" translate="yes" xml:space="preserve">
          <source>Accepts a function &lt;code&gt;fn&lt;/code&gt; and a list of transformer functions and returns a new curried function. When the new function is invoked, it calls the function &lt;code&gt;fn&lt;/code&gt; with parameters consisting of the result of calling each supplied handler on successive arguments to the new function.</source>
          <target state="translated">関数 &lt;code&gt;fn&lt;/code&gt; と変換関数のリストを受け入れ、新しいカリー化された関数を返します。新しい関数が呼び出されると、新しい関数への連続した引数で指定された各ハンドラーを呼び出した結果からなるパラメーターを使用して、関数 &lt;code&gt;fn&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="b5a15167f8e3a50881ddebe36c7f233361606ce4" translate="yes" xml:space="preserve">
          <source>Accepts a function &lt;code&gt;fn&lt;/code&gt; and returns a function that guards invocation of &lt;code&gt;fn&lt;/code&gt; such that &lt;code&gt;fn&lt;/code&gt; can only ever be called once, no matter how many times the returned function is invoked. The first value calculated is returned in subsequent invocations.</source>
          <target state="translated">関数受け入れ &lt;code&gt;fn&lt;/code&gt; しての警備員の呼び出しという機能返し &lt;code&gt;fn&lt;/code&gt; よう &lt;code&gt;fn&lt;/code&gt; がしか一度に呼び出すことができ、返された関数が呼び出された回数に関係なく。計算された最初の値は、後続の呼び出しで返されます。</target>
        </trans-unit>
        <trans-unit id="9629bdbb27ce713cd92cad0b6e50f1f413ff66cb" translate="yes" xml:space="preserve">
          <source>Acts as a transducer if a transformer is given as second parameter.</source>
          <target state="translated">2番目のパラメータとしてトランスが与えられた場合、トランスデューサとして動作します。</target>
        </trans-unit>
        <trans-unit id="3b51847666a3bcc9fd627e9aad16bdf04c59f25d" translate="yes" xml:space="preserve">
          <source>Acts as a transducer if a transformer is given in list position.</source>
          <target state="translated">リストの位置にトランスが与えられている場合、トランスデューサとして動作します。</target>
        </trans-unit>
        <trans-unit id="855b1bc6af9ffc708465dff446317edcd412c821" translate="yes" xml:space="preserve">
          <source>Acts as a transducer if a transformer is given in list position. Filterable objects include plain objects or any object that has a filter method such as &lt;code&gt;Array&lt;/code&gt;.</source>
          <target state="translated">リストの位置にトランスが指定されている場合は、トランスデューサとして機能します。フィルター可能なオブジェクトには、プレーンオブジェクト、または &lt;code&gt;Array&lt;/code&gt; などのフィルターメソッドを持つオブジェクトが含まれます。</target>
        </trans-unit>
        <trans-unit id="4133c5fe713fb1f667786d90dae856e7264e4384" translate="yes" xml:space="preserve">
          <source>Acts as multiple &lt;code&gt;prop&lt;/code&gt;: array of keys in, array of values out. Preserves order.</source>
          <target state="translated">複数の &lt;code&gt;prop&lt;/code&gt; として機能：キーの配列を入力、値の配列を出力。順序を保持します。</target>
        </trans-unit>
        <trans-unit id="ee687ea7f6440f84a1185decb4e51861117e2e6b" translate="yes" xml:space="preserve">
          <source>Adds together all the elements of a list.</source>
          <target state="translated">リストのすべての要素を加算します。</target>
        </trans-unit>
        <trans-unit id="0e2425d8cd77ea661b1dd03582265a9d3bb8ec41" translate="yes" xml:space="preserve">
          <source>Adds two values.</source>
          <target state="translated">2つの値を追加します。</target>
        </trans-unit>
        <trans-unit id="544663d7402633ce65640f94ed4824d03dd0c1c1" translate="yes" xml:space="preserve">
          <source>Also note that, unlike &lt;code&gt;Array.prototype.forEach&lt;/code&gt;, Ramda's &lt;code&gt;forEach&lt;/code&gt; returns the original array. In some libraries this function is named &lt;code&gt;each&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Array.prototype.forEach&lt;/code&gt; とは異なり、Ramdaの &lt;code&gt;forEach&lt;/code&gt; は元の配列を返すことにも注意してください。一部のライブラリでは、この関数は &lt;code&gt;each&lt;/code&gt; という名前です。</target>
        </trans-unit>
        <trans-unit id="72a08a0964d25d2f0cf0dd50de3dad2310373b0e" translate="yes" xml:space="preserve">
          <source>Also treats functions as functors and will compose them together.</source>
          <target state="translated">また、関数をファンクタとして扱い、それらを一緒にコンパイルします。</target>
        </trans-unit>
        <trans-unit id="cab6e0b6580f49a4e48afae03b391871211cf7a2" translate="yes" xml:space="preserve">
          <source>Also works for other ordered types such as Strings and Dates.</source>
          <target state="translated">また、文字列や日付などの他の注文型にも対応しています。</target>
        </trans-unit>
        <trans-unit id="e99a851f7d3ba48f022714b6cb8971cd5e2fb2ff" translate="yes" xml:space="preserve">
          <source>An Object-specific version of &lt;a href=&quot;#map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;. The function is applied to three arguments: &lt;em&gt;(value, key, obj)&lt;/em&gt;. If only the value is significant, use &lt;a href=&quot;#map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">オブジェクト固有のバージョンの&lt;a href=&quot;#map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt;。関数は&lt;em&gt;（value、key、obj）の&lt;/em&gt; 3つの引数に適用されます。値のみが重要な場合は、代わりに&lt;a href=&quot;#map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="4b43ac03bfe006b3f783f8dafede2813d4754cb2" translate="yes" xml:space="preserve">
          <source>An array of functions</source>
          <target state="translated">関数の配列</target>
        </trans-unit>
        <trans-unit id="c6193dad6dd0e92fbc675c9f82a8d8e094c74d14" translate="yes" xml:space="preserve">
          <source>An array of numbers</source>
          <target state="translated">数字の配列</target>
        </trans-unit>
        <trans-unit id="37291442febe2d4115a8735f8084e26ca6d050c1" translate="yes" xml:space="preserve">
          <source>An array of objects</source>
          <target state="translated">オブジェクトの配列</target>
        </trans-unit>
        <trans-unit id="2917584c8c5d70d018dda79e039c3c3203b15b82" translate="yes" xml:space="preserve">
          <source>An array of predicates to check</source>
          <target state="translated">チェックする述語の配列</target>
        </trans-unit>
        <trans-unit id="88a0d0fcd6b3a55b1fb0b08c4426f8258815dd11" translate="yes" xml:space="preserve">
          <source>An array of two-element arrays that will be the keys and values of the output object.</source>
          <target state="translated">出力オブジェクトのキーと値となる2要素の配列。</target>
        </trans-unit>
        <trans-unit id="200adf619a53ca359bc8ed67a7c7ead8c1c05f08" translate="yes" xml:space="preserve">
          <source>An array-like object whose value at the supplied index will be replaced.</source>
          <target state="translated">指定されたインデックスの値が置換される配列のようなオブジェクト。</target>
        </trans-unit>
        <trans-unit id="9898c08328714245f502c3aa9b7a29c9de508e96" translate="yes" xml:space="preserve">
          <source>An object to test with the &lt;code&gt;pred&lt;/code&gt; function and pass to &lt;code&gt;whenFalseFn&lt;/code&gt; if necessary.</source>
          <target state="translated">&lt;code&gt;pred&lt;/code&gt; 関数でテストし、必要に応じて &lt;code&gt;whenFalseFn&lt;/code&gt; に渡すオブジェクト。</target>
        </trans-unit>
        <trans-unit id="a9b9ef057eec3d0c3b49c21ee3846f49c71344d7" translate="yes" xml:space="preserve">
          <source>An object to test with the &lt;code&gt;pred&lt;/code&gt; function and pass to &lt;code&gt;whenTrueFn&lt;/code&gt; if necessary.</source>
          <target state="translated">&lt;code&gt;pred&lt;/code&gt; 関数でテストし、必要に応じて &lt;code&gt;whenTrueFn&lt;/code&gt; に渡すオブジェクト。</target>
        </trans-unit>
        <trans-unit id="b3e8eff3d3219aede1e68d022f78aeb32f665e82" translate="yes" xml:space="preserve">
          <source>Another predicate</source>
          <target state="translated">別の述語</target>
        </trans-unit>
        <trans-unit id="74ed6d2b6d9f20feef85b308bf5835dd9f17b2ca" translate="yes" xml:space="preserve">
          <source>Any number of positional arguments.</source>
          <target state="translated">任意の数の位置の引数。</target>
        </trans-unit>
        <trans-unit id="734b7163a2e063a0b2a46d3488fcaa76ac0e3602" translate="yes" xml:space="preserve">
          <source>Anythe first argument if it is falsy, otherwise the second argument.</source>
          <target state="translated">それが虚偽である場合は第一引数、そうでない場合は第二引数。</target>
        </trans-unit>
        <trans-unit id="ee3d2f6ad4e6e5f45a2379d38d1808c2e4a1d758" translate="yes" xml:space="preserve">
          <source>Anythe first argument if truthy, otherwise the second argument.</source>
          <target state="translated">Anythe第1引数が真実であれば、それ以外の場合は第2引数。</target>
        </trans-unit>
        <trans-unit id="1c77324e13c0679d89a5ddf4e69f6b62acffe95e" translate="yes" xml:space="preserve">
          <source>Applies a function to the value at the given index of an array, returning a new copy of the array with the element at the given index replaced with the result of the function application.</source>
          <target state="translated">配列の指定されたインデックスの値に関数を適用し、指定されたインデックスの要素を関数の適用結果で置き換えた配列の新しいコピーを返します。</target>
        </trans-unit>
        <trans-unit id="313a9238550ae7a90b27f1bfb0dba0235b19eaf2" translate="yes" xml:space="preserve">
          <source>Applies function &lt;code&gt;fn&lt;/code&gt; to the argument list &lt;code&gt;args&lt;/code&gt;. This is useful for creating a fixed-arity function from a variadic function. &lt;code&gt;fn&lt;/code&gt; should be a bound function if context is significant.</source>
          <target state="translated">関数 &lt;code&gt;fn&lt;/code&gt; を引数リスト &lt;code&gt;args&lt;/code&gt; に適用します。これは、可変個の関数から固定アリティ関数を作成するのに役立ちます。コンテキストが重要な場合、 &lt;code&gt;fn&lt;/code&gt; はバインドされた関数である必要があります。</target>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="a132b2aff2cf944113b61407e9760b03d8ed3a88" translate="yes" xml:space="preserve">
          <source>ArrayA 2D list</source>
          <target state="translated">ArrayA 2次元リスト</target>
        </trans-unit>
        <trans-unit id="7859031364d5df8190509552ccb484bc75c7030d" translate="yes" xml:space="preserve">
          <source>ArrayA copy of `list` with the value at index `idx` replaced with `x`.</source>
          <target state="translated">Arrayインデックス `idx` の値を `x` に置き換えた `list` のコピー。</target>
        </trans-unit>
        <trans-unit id="d655ff10db5304f6e6e248e82263c3f74c7bbbe6" translate="yes" xml:space="preserve">
          <source>ArrayA copy of the list with only the first `list.length - n` elements</source>
          <target state="translated">Array最初の `list.length-n` 要素のみを持つリストのコピー。</target>
        </trans-unit>
        <trans-unit id="a1268401f4868833abde81ce45d7a828ddbf0cc6" translate="yes" xml:space="preserve">
          <source>ArrayA copy of the supplied array-like object with the element at index `idx` replaced with the value returned by applying `fn` to the existing element.</source>
          <target state="translated">Array指定された配列状のオブジェクトのコピーで、インデックス `idx` にある要素を、既存の要素に `fn` を適用して得られた値に置き換えます。</target>
        </trans-unit>
        <trans-unit id="035f3e9609eb534e7be203ee5ba3cb65c3848ff1" translate="yes" xml:space="preserve">
          <source>ArrayA list consisting of the elements of `firstList` followed by the elements of `secondList`.</source>
          <target state="translated">配列 `firstList` の要素と `secondList` の要素からなるリスト。</target>
        </trans-unit>
        <trans-unit id="2bb30f01183ab01eee3632352896d0931b3e06ab" translate="yes" xml:space="preserve">
          <source>ArrayA list of all intermediately reduced values.</source>
          <target state="translated">ArrayA すべての中間的に縮小された値のリスト。</target>
        </trans-unit>
        <trans-unit id="e59aec77f54846fd6f4d932179bd5d0c699f1e98" translate="yes" xml:space="preserve">
          <source>ArrayA new Array with `count` elements from `start` removed.</source>
          <target state="translated">Array新しい配列で、`start` から `count` の要素を削除したもの。</target>
        </trans-unit>
        <trans-unit id="fc027859e8c8af35b7f139d36bfcba15eaca5b97" translate="yes" xml:space="preserve">
          <source>ArrayA new Array with `elt` inserted at `index`.</source>
          <target state="translated">Arrayインデックスに `elt` を挿入した新しい配列。</target>
        </trans-unit>
        <trans-unit id="981945799e693f254e12c01f3a3fe12212521b67" translate="yes" xml:space="preserve">
          <source>ArrayA new Array with `elts` inserted starting at `index`.</source>
          <target state="translated">Arrayインデックスから始まる `elts` を挿入した新しい配列。</target>
        </trans-unit>
        <trans-unit id="6fcd07ef255c52790c44fb094eccf74aadfc7a54" translate="yes" xml:space="preserve">
          <source>ArrayA new array containing `n` `value`s.</source>
          <target state="translated">Array `n` `value` を含む新しい配列。</target>
        </trans-unit>
        <trans-unit id="d2731d39331cac64a3372a1bbe3c08f19a0a0859" translate="yes" xml:space="preserve">
          <source>ArrayA new array without any trailing elements that return `falsy` values from the `predicate`.</source>
          <target state="translated">Array末尾に要素を持たない新しい配列で、`predicate` から `falsy` の値を返します。</target>
        </trans-unit>
        <trans-unit id="bfc1758e7fe94b032d65aa3ec0cf810add22a891" translate="yes" xml:space="preserve">
          <source>ArrayA new array.</source>
          <target state="translated">ArrayA 新しい配列。</target>
        </trans-unit>
        <trans-unit id="c24b2435ca7001bbc5eaeeecea15326e900400a4" translate="yes" xml:space="preserve">
          <source>ArrayA new list containing the elements of the old list followed by `el`.</source>
          <target state="translated">Array古いリストの要素に `el` を付けた新しいリスト。</target>
        </trans-unit>
        <trans-unit id="778e0304868b46f591ba807837a3f86d6d3a8cd9" translate="yes" xml:space="preserve">
          <source>ArrayA new list sorted according to the comarator functions.</source>
          <target state="translated">Arrayコマラータ関数に従ってソートされた新しいリスト。</target>
        </trans-unit>
        <trans-unit id="66ef61f519e132b1504a6b60bd34edcc50f6ecff" translate="yes" xml:space="preserve">
          <source>ArrayA new list sorted by the keys generated by `fn`.</source>
          <target state="translated">Array `fn` で生成されたキーでソートされた新しいリスト。</target>
        </trans-unit>
        <trans-unit id="24d669dc9551ed0458d420dbfcbc295a2eb9e2cf" translate="yes" xml:space="preserve">
          <source>ArrayAn array containing the return values of all calls to `fn`.</source>
          <target state="translated">Arrayすべての `fn` の呼び出しの戻り値を含む配列。</target>
        </trans-unit>
        <trans-unit id="dbc6a70ef9acd0165d6ee2171c413278dbfc6d31" translate="yes" xml:space="preserve">
          <source>ArrayAn array of key, value arrays from the object's own and prototype properties.</source>
          <target state="translated">Arrayオブジェクト自身のプロパティとプロトタイプのプロパティのキー配列、値配列の配列。</target>
        </trans-unit>
        <trans-unit id="05d3edcbbfa40b23fd9e6068fc14a335226c583d" translate="yes" xml:space="preserve">
          <source>ArrayAn array of key, value arrays from the object's own properties.</source>
          <target state="translated">Arrayオブジェクト自身のプロパティのキー配列、値配列の配列。</target>
        </trans-unit>
        <trans-unit id="a5b679ecc239897a4884964e45aab059d01dc553" translate="yes" xml:space="preserve">
          <source>ArrayAn array of objects with just the `props` properties.</source>
          <target state="translated">Array単に `props` プロパティを持つオブジェクトの配列。</target>
        </trans-unit>
        <trans-unit id="fb854b5fb1d4807d95bc97bff05bb015a16cac14" translate="yes" xml:space="preserve">
          <source>ArrayAn array of the object's own and prototype properties.</source>
          <target state="translated">Arrayオブジェクト自身のプロパティとプロトタイプのプロパティの配列。</target>
        </trans-unit>
        <trans-unit id="db30fae5f5d45e193b48bea5e0462791687b83be" translate="yes" xml:space="preserve">
          <source>ArrayAn array of the object's own properties.</source>
          <target state="translated">Arrayオブジェクト自身のプロパティの配列。</target>
        </trans-unit>
        <trans-unit id="c4d21fd0864bed5c25a412819058f971cd0bcaff" translate="yes" xml:space="preserve">
          <source>ArrayAn array of the values of the object's own and prototype properties.</source>
          <target state="translated">Arrayオブジェクト自身のプロパティとプロトタイプのプロパティの値の配列。</target>
        </trans-unit>
        <trans-unit id="64a35133bbccaa1ef6fa610d44db37bd954ce6a5" translate="yes" xml:space="preserve">
          <source>ArrayAn array of the values of the object's own properties.</source>
          <target state="translated">Arrayオブジェクト自身のプロパティの値の配列。</target>
        </trans-unit>
        <trans-unit id="eb2343bed15faad32702e22f2a87e6d1b0c94b85" translate="yes" xml:space="preserve">
          <source>ArrayAn array wrapping `x`.</source>
          <target state="translated">Array`x`を包む配列。</target>
        </trans-unit>
        <trans-unit id="7e048f932ce2ee9ca4fa1ebc1b52eafd6484f2ca" translate="yes" xml:space="preserve">
          <source>ArrayAn array, containing first the subset of elements that satisfy the predicate, and second the subset of elements that do not satisfy.</source>
          <target state="translated">Array最初に述語を満たす要素のサブセットと、満たさない要素のサブセットを含む配列。</target>
        </trans-unit>
        <trans-unit id="5d41463c107d441c571294c7f7169b7ab2a0ea65" translate="yes" xml:space="preserve">
          <source>ArrayFilterable</source>
          <target state="translated">ArrayFilterable</target>
        </trans-unit>
        <trans-unit id="a60e0322bb21a8064f11739f3f1b817fe6202254" translate="yes" xml:space="preserve">
          <source>ArrayThe array of strings from `str` separated by `str`.</source>
          <target state="translated">Array `str` から `str` で区切られた文字列の配列。</target>
        </trans-unit>
        <trans-unit id="ab42197074b20399e0e82f25d360c0ca51e60b18" translate="yes" xml:space="preserve">
          <source>ArrayThe corresponding values or partially applied function.</source>
          <target state="translated">Array対応する値または部分的に適用される関数。</target>
        </trans-unit>
        <trans-unit id="b3be51d046c60caa08737b1c322a721c1a5f7d62" translate="yes" xml:space="preserve">
          <source>ArrayThe elements in `list1` or `list2`, but not both.</source>
          <target state="translated">Array `list1` または `list2` の要素。</target>
        </trans-unit>
        <trans-unit id="cec173b282289202529cc9e1c33671f7bdfdc588" translate="yes" xml:space="preserve">
          <source>ArrayThe elements in `list1` that are not in `list2`.</source>
          <target state="translated">Array`list1`に含まれる要素のうち、`list2`に含まれない要素。</target>
        </trans-unit>
        <trans-unit id="641a732f2ed8a7b62def210e51616b86d70d14cc" translate="yes" xml:space="preserve">
          <source>ArrayThe final list.</source>
          <target state="translated">Array最終的なリスト。</target>
        </trans-unit>
        <trans-unit id="a3331fbee9a6f752227b61bc0aa35d85e58efd46" translate="yes" xml:space="preserve">
          <source>ArrayThe first and second lists concatenated, with duplicates removed.</source>
          <target state="translated">Array1 番目と 2 番目のリストを連結し、重複を除去します。</target>
        </trans-unit>
        <trans-unit id="339c754f28ac599a3d16f4c186291e8401961e01" translate="yes" xml:space="preserve">
          <source>ArrayThe flattened list.</source>
          <target state="translated">Array平坦化されたリスト。</target>
        </trans-unit>
        <trans-unit id="29f0341ed5d4edfe47412948c2dae9eea6abe8ae" translate="yes" xml:space="preserve">
          <source>ArrayThe list made by combining each possible pair from `as` and `bs` into pairs (`[a, b]`).</source>
          <target state="translated">Array `as` と `bs` の各ペアを組み合わせたリスト(`[a,b]`)。</target>
        </trans-unit>
        <trans-unit id="a6c76eeb5003f58d4c4b983833ded52fe05e76c9" translate="yes" xml:space="preserve">
          <source>ArrayThe list made by combining same-indexed elements of `list1` and `list2` using `fn`.</source>
          <target state="translated">Array `list1` と `list2` の同じインデックスの要素を `fn` で結合したリスト。</target>
        </trans-unit>
        <trans-unit id="d35b3a5d8d841e1863ab3d3d36a85c7b2d7e4812" translate="yes" xml:space="preserve">
          <source>ArrayThe list made by pairing up same-indexed elements of `list1` and `list2`.</source>
          <target state="translated">Array `list1` と `list2` の同じインデックスの要素をペアにしたリスト。</target>
        </trans-unit>
        <trans-unit id="23d85f6607c1429b378a1e7e51ca954757a7982c" translate="yes" xml:space="preserve">
          <source>ArrayThe list of elements found in both `list1` and `list2`.</source>
          <target state="translated">Array `list1` と `list2` の両方に含まれる要素のリスト。</target>
        </trans-unit>
        <trans-unit id="09a901d935167478199486524fd47d1b93f19c32" translate="yes" xml:space="preserve">
          <source>ArrayThe list of matches or empty array.</source>
          <target state="translated">Array一致する配列のリスト、または空の配列。</target>
        </trans-unit>
        <trans-unit id="66624cce4edd2ad4317cfab99e3ce7fa7bfbc9c8" translate="yes" xml:space="preserve">
          <source>ArrayThe list of numbers in the set `[a, b)`.</source>
          <target state="translated">Array集合 `[a,b)` に含まれる数値のリスト。</target>
        </trans-unit>
        <trans-unit id="9f2bb2bcd16bde95ea19ebbb07d58d791cea857e" translate="yes" xml:space="preserve">
          <source>ArrayThe list of unique items.</source>
          <target state="translated">Arrayユニークな項目のリスト。</target>
        </trans-unit>
        <trans-unit id="5eae6b036406d0c5ce58bdf5364d8cc60c627c35" translate="yes" xml:space="preserve">
          <source>ArrayThe list of values for the given key.</source>
          <target state="translated">Array指定したキーの値のリスト。</target>
        </trans-unit>
        <trans-unit id="e34075edc60535c45d4010d1d2c1b791c9d22067" translate="yes" xml:space="preserve">
          <source>ArrayThe new array without values in `list1`.</source>
          <target state="translated">Array `list1` の値を含まない新しい配列。</target>
        </trans-unit>
        <trans-unit id="d0b51a628dbb85e130c60044b4d15256326e375b" translate="yes" xml:space="preserve">
          <source>ArrayThe new list reordered</source>
          <target state="translated">Array新しいリストを並べ替えたもの</target>
        </trans-unit>
        <trans-unit id="9a0d1b81af40439d0154c7ba9b6f6ae7699d098b" translate="yes" xml:space="preserve">
          <source>ArrayThe new list.</source>
          <target state="translated">Array新しいリスト。</target>
        </trans-unit>
        <trans-unit id="110661c35454ed0545e9dc0e8b3785a4644f1af9" translate="yes" xml:space="preserve">
          <source>ArrayThe original list.</source>
          <target state="translated">Array元のリスト。</target>
        </trans-unit>
        <trans-unit id="9c01a857ac065d0557ed912afcc5df0dcf6a83ff" translate="yes" xml:space="preserve">
          <source>ArrayThe result of flat-mapping `list` with `fn`</source>
          <target state="translated">Array `list` と `fn` をフラットマッピングした結果。</target>
        </trans-unit>
        <trans-unit id="69ea281d3971bca2b7e375219029d0bb74d3c2d3" translate="yes" xml:space="preserve">
          <source>ArrayThe resulting list of `n`-length tuples</source>
          <target state="translated">Array結果として得られる `n` 長さのタプルのリスト。</target>
        </trans-unit>
        <trans-unit id="bfbf3811f719349129f03224a3f3c27ba8c6348c" translate="yes" xml:space="preserve">
          <source>Array`list` without repeating elements.</source>
          <target state="translated">要素を繰り返さない配列`list`。</target>
        </trans-unit>
        <trans-unit id="f18919d11a94c8dff4023aac2f6ddc961a8c9a9d" translate="yes" xml:space="preserve">
          <source>Arraya new array with its elements sorted by the comparator function.</source>
          <target state="translated">比較関数でソートされた要素を持つ新しい配列.</target>
        </trans-unit>
        <trans-unit id="b76ff4906f33c2dd97ddd929b9662ba8cac6174c" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="translated">Boolean</target>
        </trans-unit>
        <trans-unit id="52d0999fc9a4f2ae3895c469856a535c4afc0271" translate="yes" xml:space="preserve">
          <source>BooleanWhether the path exists.</source>
          <target state="translated">Booleanパスが存在するかどうか。</target>
        </trans-unit>
        <trans-unit id="012cc1b85ba2ee6fe574715b1fa51ba18edff29f" translate="yes" xml:space="preserve">
          <source>BooleanWhether the property exists.</source>
          <target state="translated">Booleanプロパティが存在するかどうか。</target>
        </trans-unit>
        <trans-unit id="10d0fcd080d394be8e84db3b80e142fbea79e210" translate="yes" xml:space="preserve">
          <source>Boolean`true` if `x` is `undefined` or `null`, otherwise `false`.</source>
          <target state="translated">x` が `undefined` または `null` の場合はブール値`true`、そうでない場合は `false` となります。</target>
        </trans-unit>
        <trans-unit id="dce3ad29dbc604619587bf3818fcdb92390be770" translate="yes" xml:space="preserve">
          <source>Boolean`true` if an equivalent item is in the list, `false` otherwise.</source>
          <target state="translated">リスト内に同等の項目がある場合はブール値`true`、そうでない場合は `false`。</target>
        </trans-unit>
        <trans-unit id="699b5b4518be28a290c584a30d6c5e2c6939b618" translate="yes" xml:space="preserve">
          <source>Boolean`true` if the predicate is not satisfied by every element, `false` otherwise.</source>
          <target state="translated">述語がすべての要素で満たされていない場合はブール値`true`、そうでない場合は `false` となります。</target>
        </trans-unit>
        <trans-unit id="d173270cbe3151ea00dc3e0337e2f2efedb7bc55" translate="yes" xml:space="preserve">
          <source>Boolean`true` if the predicate is satisfied by at least one element, `false` otherwise.</source>
          <target state="translated">述語が少なくとも1つの要素で満たされている場合はブール値`true`、そうでない場合は `false`。</target>
        </trans-unit>
        <trans-unit id="e4d658cdd8a73d02b79247f9f81ee2a4243157f7" translate="yes" xml:space="preserve">
          <source>Boolean`true` if the predicate is satisfied by every element, `false` otherwise.</source>
          <target state="translated">述語がすべての要素で満たされている場合はブール値`true`、そうでない場合は `false` です。</target>
        </trans-unit>
        <trans-unit id="e9f7ebf1841376ce58190295fdd2e12a754a182d" translate="yes" xml:space="preserve">
          <source>Boolean`true` if the value equals the nested object property, `false` otherwise.</source>
          <target state="translated">値が入れ子になったオブジェクトのプロパティと等しい場合はブール値`true`、そうでない場合は`false`となります。</target>
        </trans-unit>
        <trans-unit id="cc6eb7cb7e7d83cb7dd59d2fa930d043142123cb" translate="yes" xml:space="preserve">
          <source>Booleanthe logical inverse of passed argument.</source>
          <target state="translated">引数に渡された引数の論理的な逆数。</target>
        </trans-unit>
        <trans-unit id="57229d2949cdf30374e6fe385791b5bdba71783c" translate="yes" xml:space="preserve">
          <source>Builds a list from a seed value. Accepts an iterator function, which returns either false to stop iteration or an array of length 2 containing the value to add to the resulting list and the seed to be used in the next call to the iterator function.</source>
          <target state="translated">種子の値からリストを作成します。イテレータ関数を受け取ります。イテレータ関数は、繰り返しを停止するために false を返すか、結果として得られるリストに追加する値と、イテレータ関数の次の呼び出しで使用するシードを含む長さ 2 の配列を返します。</target>
        </trans-unit>
        <trans-unit id="78e25888af8528d589986878ae86a521214d0a03" translate="yes" xml:space="preserve">
          <source>Calls an input function &lt;code&gt;n&lt;/code&gt; times, returning an array containing the results of those function calls.</source>
          <target state="translated">入力関数を &lt;code&gt;n&lt;/code&gt; 回呼び出し、それらの関数呼び出しの結果を含む配列を返します。</target>
        </trans-unit>
        <trans-unit id="766f3d47bf007f1606f1c6cc58423c100dda7807" translate="yes" xml:space="preserve">
          <source>Checks if a list ends with the provided sublist.</source>
          <target state="translated">リストが指定されたサブリストで終わるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="c52b36ef5e03790480529e3d26c92daa036048a1" translate="yes" xml:space="preserve">
          <source>Checks if a list starts with the provided sublist.</source>
          <target state="translated">リストが指定されたサブリストで始まるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="3cffec751a3a728a1d57bb9677c699651c271344" translate="yes" xml:space="preserve">
          <source>Checks if the input value is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">入力値が &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;undefined&lt;/code&gt; かどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="34943eba43a4c9aab393aa332acbad589147c852" translate="yes" xml:space="preserve">
          <source>Combines two lists into a set (i.e. no duplicates) composed of the elements of each list.</source>
          <target state="translated">2つのリストを結合して、それぞれのリストの要素からなる集合にします(つまり重複はありません)。</target>
        </trans-unit>
        <trans-unit id="e91a9d56c08586614e9a62b0f2b1bf3ec027daa9" translate="yes" xml:space="preserve">
          <source>Combines two lists into a set (i.e. no duplicates) composed of the elements of each list. Duplication is determined according to the value returned by applying the supplied predicate to two list elements.</source>
          <target state="translated">2つのリストを結合して、それぞれのリストの要素で構成される集合にします(つまり、重複はありません)。重複は、与えられた述語を2つのリストの要素に適用して返された値に応じて決定されます。</target>
        </trans-unit>
        <trans-unit id="8f152e3913ff1d9f8fadb371e214d7dabbf04582" translate="yes" xml:space="preserve">
          <source>Combines two lists into a set (i.e. no duplicates) composed of those elements common to both lists.</source>
          <target state="translated">2つのリストを結合して、両方のリストに共通する要素で構成された集合にします(つまり重複はありません)。</target>
        </trans-unit>
        <trans-unit id="5fdb39e89a87cc465e42555308303a8d5151f829" translate="yes" xml:space="preserve">
          <source>Converts an object into an array of key, value arrays. Only the object's own properties are used. Note that the order of the output array is not guaranteed to be consistent across different JS platforms.</source>
          <target state="translated">オブジェクトをキー、値の配列に変換します。オブジェクト自身のプロパティのみが使用されます。出力される配列の順序は、異なるJSプラットフォーム間で一貫していることは保証されていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="62b1c31b478f7f1452c04236542568492e637133" translate="yes" xml:space="preserve">
          <source>Converts an object into an array of key, value arrays. The object's own properties and prototype properties are used. Note that the order of the output array is not guaranteed to be consistent across different JS platforms.</source>
          <target state="translated">オブジェクトをキー、値の配列に変換します。オブジェクト自身のプロパティとプロトタイプのプロパティが使用されます。出力される配列の順序は、異なるJSプラットフォーム間で一貫していることが保証されていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="8be3bb4109eba9a0435d7cafe90ce5fc9856691a" translate="yes" xml:space="preserve">
          <source>Counts the elements of a list according to how many match each value of a key generated by the supplied function. Returns an object mapping the keys produced by &lt;code&gt;fn&lt;/code&gt; to the number of occurrences in the list. Note that all keys are coerced to strings because of how JavaScript objects work.</source>
          <target state="translated">指定された関数によって生成されたキーの各値と一致する数に応じて、リストの要素をカウントします。 &lt;code&gt;fn&lt;/code&gt; によって生成されたキーをリスト内の出現回数にマッピングするオブジェクトを返します。JavaScriptオブジェクトの仕組みにより、すべてのキーは文字列に強制変換されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c971da3ceb8ef358d35d809195da241096035d28" translate="yes" xml:space="preserve">
          <source>Create a new object with the own properties of the first object merged with the own properties of the second object. If a key exists in both objects, the value from the first object will be used.</source>
          <target state="translated">1 番目のオブジェクトのプロパティと 2 番目のオブジェクトのプロパティをマージした新しいオブジェクトを作成します。両方のオブジェクトにキーが存在する場合は、最初のオブジェクトの値が使用されます。</target>
        </trans-unit>
        <trans-unit id="a5b403cb5ae199927ef8f600bf5d470bbc78c600" translate="yes" xml:space="preserve">
          <source>Create a new object with the own properties of the first object merged with the own properties of the second object. If a key exists in both objects, the value from the second object will be used.</source>
          <target state="translated">1 番目のオブジェクトのプロパティと 2 番目のオブジェクトのプロパティをマージした新しいオブジェクトを作成します。両方のオブジェクトにキーが存在する場合は、2 番目のオブジェクトの値が使用されます。</target>
        </trans-unit>
        <trans-unit id="20d4135be02a8f6f6f3cddd27d0c171feeaf61d2" translate="yes" xml:space="preserve">
          <source>Creates a deep copy of the value which may contain (nested) &lt;code&gt;Array&lt;/code&gt;s and &lt;code&gt;Object&lt;/code&gt;s, &lt;code&gt;Number&lt;/code&gt;s, &lt;code&gt;String&lt;/code&gt;s, &lt;code&gt;Boolean&lt;/code&gt;s and &lt;code&gt;Date&lt;/code&gt;s. &lt;code&gt;Function&lt;/code&gt;s are assigned by reference rather than copied</source>
          <target state="translated">（ネストされた） &lt;code&gt;Array&lt;/code&gt; と &lt;code&gt;Object&lt;/code&gt; 、 &lt;code&gt;Number&lt;/code&gt; 、 &lt;code&gt;String&lt;/code&gt; 、 &lt;code&gt;Boolean&lt;/code&gt; 、 &lt;code&gt;Date&lt;/code&gt; を含むことができる値のディープコピーを作成します。 &lt;code&gt;Function&lt;/code&gt; sはコピーされるのではなく参照によって割り当てられます</target>
        </trans-unit>
        <trans-unit id="63f596da0a14dc93b3520affbe586e993ce8c009" translate="yes" xml:space="preserve">
          <source>Creates a function that is bound to a context. Note: &lt;code&gt;R.bind&lt;/code&gt; does not provide the additional argument-binding capabilities of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;Function.prototype.bind&lt;/a&gt;.</source>
          <target state="translated">コンテキストにバインドされる関数を作成します。注： &lt;code&gt;R.bind&lt;/code&gt; は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;Function.prototype.bindの&lt;/a&gt;追加の引数バインディング機能を提供しません。</target>
        </trans-unit>
        <trans-unit id="4e1c5d02fa1bb3ac0e225fd31930c73abbe57880" translate="yes" xml:space="preserve">
          <source>Creates a function that will process either the &lt;code&gt;onTrue&lt;/code&gt; or the &lt;code&gt;onFalse&lt;/code&gt; function depending upon the result of the &lt;code&gt;condition&lt;/code&gt; predicate.</source>
          <target state="translated">いずれかの処理する関数作成 &lt;code&gt;onTrue&lt;/code&gt; 又は &lt;code&gt;onFalse&lt;/code&gt; の結果に応じて機能 &lt;code&gt;condition&lt;/code&gt; 述語。</target>
        </trans-unit>
        <trans-unit id="3ef511ede98c65ed445c84808ab0f09b3848f5e9" translate="yes" xml:space="preserve">
          <source>Creates a new function that, when invoked, caches the result of calling &lt;code&gt;fn&lt;/code&gt; for a given argument set and returns the result. Subsequent calls to the memoized &lt;code&gt;fn&lt;/code&gt; with the same argument set will not result in an additional call to &lt;code&gt;fn&lt;/code&gt;; instead, the cached result for that set of arguments will be returned.</source>
          <target state="translated">呼び出されたときに、指定された引数セットに対して &lt;code&gt;fn&lt;/code&gt; を呼び出した結果をキャッシュし、結果を返す新しい関数を作成します。メモ化の後続の呼び出し &lt;code&gt;fn&lt;/code&gt; への追加の呼び出しにはなりません同じ引数が設定された &lt;code&gt;fn&lt;/code&gt; ; 代わりに、その引数セットのキャッシュされた結果が返されます。</target>
        </trans-unit>
        <trans-unit id="f3fe5757371e75a51974f472cda1df1e704e08b1" translate="yes" xml:space="preserve">
          <source>Creates a new list iteration function from an existing one by adding two new parameters to its callback function: the current index, and the entire list.</source>
          <target state="translated">既存のリスト反復関数から新しいリスト反復関数を作成します.コールバック関数に2つの新しいパラメータを追加します.</target>
        </trans-unit>
        <trans-unit id="3b2bdef703b5e6a85b446421f50fa32b28a4ffe6" translate="yes" xml:space="preserve">
          <source>Creates a new list out of the two supplied by applying the function to each equally-positioned pair in the lists. The returned list is truncated to the length of the shorter of the two input lists.</source>
          <target state="translated">この関数を,リスト内の等間隔に配置された各ペアに適用することで,入力された 2 つのリストから新しいリストを作成します.返されるリストは,入力された2つのリストのうち短い方の長さに切り詰められます.</target>
        </trans-unit>
        <trans-unit id="70add686ea7c5bc696a69b28a6acd5b38287412f" translate="yes" xml:space="preserve">
          <source>Creates a new list out of the two supplied by creating each possible pair from the lists.</source>
          <target state="translated">与えられた2つのリストから、可能なペアをそれぞれ作成することで、新しいリストを作成します。</target>
        </trans-unit>
        <trans-unit id="c3e1cb38192b92a68f988e46daa0f18b7974506b" translate="yes" xml:space="preserve">
          <source>Creates a new list out of the two supplied by pairing up equally-positioned items from both lists. The returned list is truncated to the length of the shorter of the two input lists. Note: &lt;code&gt;zip&lt;/code&gt; is equivalent to &lt;code&gt;zipWith(function(a, b) { return [a, b] })&lt;/code&gt;.</source>
          <target state="translated">提供された2つのリストから、両方のリストから同じ位置にあるアイテムをペアにして、新しいリストを作成します。返されたリストは、2つの入力リストの短い方の長さに切り捨てられます。注： &lt;code&gt;zip&lt;/code&gt; は &lt;code&gt;zipWith(function(a, b) { return [a, b] })&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="2dcde6a583363329052fa0a427b11a69ee2aaa9b" translate="yes" xml:space="preserve">
          <source>Creates a new list with the separator interposed between elements.</source>
          <target state="translated">要素間にセパレータを挟んだ新しいリストを作成します。</target>
        </trans-unit>
        <trans-unit id="55ed3b329070707f0710a283cb5ce4230944d789" translate="yes" xml:space="preserve">
          <source>Creates a new object by recursively evolving a shallow copy of &lt;code&gt;object&lt;/code&gt;, according to the &lt;code&gt;transformation&lt;/code&gt; functions. All non-primitive properties are copied by reference.</source>
          <target state="translated">&lt;code&gt;transformation&lt;/code&gt; 関数に従って、 &lt;code&gt;object&lt;/code&gt; の浅いコピーを再帰的に展開して新しいオブジェクトを作成します。すべての非プリミティブプロパティは参照によってコピーされます。</target>
        </trans-unit>
        <trans-unit id="e3d2efa436df92ba03893fededd55d981126d77e" translate="yes" xml:space="preserve">
          <source>Creates a new object from a list key-value pairs. If a key appears in multiple pairs, the rightmost pair is included in the object.</source>
          <target state="translated">キーと値のペアのリストから新しいオブジェクトを作成します。キーが複数のペアに含まれている場合、一番右のペアがオブジェクトに含まれます。</target>
        </trans-unit>
        <trans-unit id="0fe216508d86dccacd475e4f71a74707046d5c13" translate="yes" xml:space="preserve">
          <source>Creates a new object out of a list of keys and a list of values. Key/value pairing is truncated to the length of the shorter of the two lists. Note: &lt;code&gt;zipObj&lt;/code&gt; is equivalent to &lt;code&gt;pipe(zip, fromPairs)&lt;/code&gt;.</source>
          <target state="translated">キーのリストと値のリストから新しいオブジェクトを作成します。キーと値のペアは、2つのリストの短い方の長さに切り捨てられます。注： &lt;code&gt;zipObj&lt;/code&gt; は &lt;code&gt;pipe(zip, fromPairs)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="ffc2ff3002b23d482097b9cb26c8c6ef57ff4e3d" translate="yes" xml:space="preserve">
          <source>Creates a new object with the own properties of the first object merged with the own properties of the second object. If a key exists in both objects:</source>
          <target state="translated">1 番目のオブジェクトの独自のプロパティと 2 番目のオブジェクトの独自のプロパティをマージした新しいオブジェクトを作成します。両方のオブジェクトにキーが存在する場合。</target>
        </trans-unit>
        <trans-unit id="dd6cf04fe3cf9b7d80de4c6c4ff5bbfd39e381a2" translate="yes" xml:space="preserve">
          <source>Creates a new object with the own properties of the two provided objects. If a key exists in both objects, the provided function is applied to the key and the values associated with the key in each object, with the result being used as the value associated with the key in the returned object.</source>
          <target state="translated">提供された 2 つのオブジェクトの独自のプロパティを持つ新しいオブジェクトを作成します。両方のオブジェクトにキーが存在する場合は、提供された関数がそれぞれのオブジェクトのキーとキーに関連付けられた値に適用され、その結果が返されたオブジェクトのキーに関連付けられた値として使用されます。</target>
        </trans-unit>
        <trans-unit id="5a2781e6d79a638412f564e3a9418deacd13c6b9" translate="yes" xml:space="preserve">
          <source>Creates a new object with the own properties of the two provided objects. If a key exists in both objects, the provided function is applied to the values associated with the key in each object, with the result being used as the value associated with the key in the returned object.</source>
          <target state="translated">提供された 2 つのオブジェクトの独自のプロパティを持つ新しいオブジェクトを作成します。両方のオブジェクトにキーが存在する場合、提供された関数はそれぞれのオブジェクトのキーに関連付けられた値に適用され、その結果は返されたオブジェクトのキーに関連付けられた値として使用されます。</target>
        </trans-unit>
        <trans-unit id="3e422ead5df60827a82d97fa07c723447b6b47b9" translate="yes" xml:space="preserve">
          <source>Creates a new object with the own properties of the two provided objects. If a key exists in both objects:</source>
          <target state="translated">与えられた2つのオブジェクトの独自のプロパティを持つ新しいオブジェクトを作成します。両方のオブジェクトにキーが存在する場合。</target>
        </trans-unit>
        <trans-unit id="5cbb94400c316a2226e68482ff0cc3e43f786613" translate="yes" xml:space="preserve">
          <source>Creates a thunk out of a function. A thunk delays a calculation until its result is needed, providing lazy evaluation of arguments.</source>
          <target state="translated">関数からサンクを作成します。サンクは、結果が必要になるまで計算を遅延させ、引数の遅延評価を提供します。</target>
        </trans-unit>
        <trans-unit id="dfba43fe88f8635b2234dd902b60eeb211f6ab51" translate="yes" xml:space="preserve">
          <source>Creates an object containing a single key:value pair.</source>
          <target state="translated">単一のキーと値のペアを含むオブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="41d2161b3aa67eb78549de54e22aade4a1032270" translate="yes" xml:space="preserve">
          <source>Decrements its argument.</source>
          <target state="translated">その引数を減少させます。</target>
        </trans-unit>
        <trans-unit id="bb99afed7ad381e851f5afa4c6ed990d1424d660" translate="yes" xml:space="preserve">
          <source>Deprecated since v0.26.0</source>
          <target state="translated">v0.26.0 以降非推奨</target>
        </trans-unit>
        <trans-unit id="6520a23761f726b1f97e92309b128cea2961adce" translate="yes" xml:space="preserve">
          <source>Deprecated true</source>
          <target state="translated">非推奨の真</target>
        </trans-unit>
        <trans-unit id="d9bd8006bf4ecea585173a59b22db2677c083a9b" translate="yes" xml:space="preserve">
          <source>Determines whether a given string matches a given regular expression.</source>
          <target state="translated">与えられた文字列が与えられた正規表現にマッチするかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="0bf69ed81abbd2a129f51d15aee8e62b8700424b" translate="yes" xml:space="preserve">
          <source>Determines whether a nested path on an object has a specific value, in &lt;a href=&quot;#equals&quot;&gt;&lt;code&gt;R.equals&lt;/code&gt;&lt;/a&gt; terms. Most likely used to filter a list.</source>
          <target state="translated">&lt;a href=&quot;#equals&quot;&gt; &lt;code&gt;R.equals&lt;/code&gt; &lt;/a&gt;用語で、オブジェクトのネストされたパスに特定の値があるかどうかを決定します。ほとんどの場合、リストのフィルタリングに使用されます。</target>
        </trans-unit>
        <trans-unit id="c87faefcbcd73cfa3770fa0fd219dbf7cead2fa4" translate="yes" xml:space="preserve">
          <source>Dispatches symmetrically to the &lt;code&gt;equals&lt;/code&gt; methods of both arguments, if present.</source>
          <target state="translated">存在する場合、両方の引数の &lt;code&gt;equals&lt;/code&gt; メソッドに対称的にディスパッチします。</target>
        </trans-unit>
        <trans-unit id="7cab69fa87a9c4c393cae24fb7f6ac82939f482c" translate="yes" xml:space="preserve">
          <source>Dispatches to a &lt;code&gt;clone&lt;/code&gt; method if present.</source>
          <target state="translated">存在する場合は &lt;code&gt;clone&lt;/code&gt; メソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="8be9f130248e135cfc35a0b01adc9d59716c6e07" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;all&lt;/code&gt; method of the second argument, if present.</source>
          <target state="translated">存在する場合、2番目の引数の &lt;code&gt;all&lt;/code&gt; メソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="73e135d15384ba7e86cb89ddea2c62d9860b6b0d" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;any&lt;/code&gt; method of the second argument, if present.</source>
          <target state="translated">存在する場合、2番目の引数の &lt;code&gt;any&lt;/code&gt; メソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="f294245461a4f6b0dab51b268d21c8ebfd9cafa8" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;ap&lt;/code&gt; method of the second argument, if present. Also treats curried functions as applicatives.</source>
          <target state="translated">存在する場合、2番目の引数の &lt;code&gt;ap&lt;/code&gt; メソッドにディスパッチします。また、カレー関数をアプリケーションとして扱います。</target>
        </trans-unit>
        <trans-unit id="b9c86a43e17c8681198edf3681fa41aee4bc0974" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;chain&lt;/code&gt; method of the second argument, if present, according to the &lt;a href=&quot;https://github.com/fantasyland/fantasy-land#chain&quot;&gt;FantasyLand Chain spec&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/fantasyland/fantasy-land#chain&quot;&gt;FantasyLandチェーン仕様&lt;/a&gt;に従って、存在する場合、2番目の引数の &lt;code&gt;chain&lt;/code&gt; メソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="2b8864833204a510dc85144e584c627deb899284" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;concat&lt;/code&gt; method of the first argument, if present. Can also concatenate two members of a &lt;a href=&quot;https://github.com/fantasyland/fantasy-land#semigroup&quot;&gt;fantasy-land compatible semigroup&lt;/a&gt;.</source>
          <target state="translated">存在する場合、最初の引数の &lt;code&gt;concat&lt;/code&gt; メソッドにディスパッチします。&lt;a href=&quot;https://github.com/fantasyland/fantasy-land#semigroup&quot;&gt;ファンタジーランド互換のセミグループの&lt;/a&gt; 2つのメンバーを連結することもできます。</target>
        </trans-unit>
        <trans-unit id="b006a784622448192ccd3d2de1cca10bd534b40f" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;drop&lt;/code&gt; method of the second argument, if present.</source>
          <target state="translated">存在する場合、2番目の引数の &lt;code&gt;drop&lt;/code&gt; メソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="5a513deba1327015da234f85eacddc727e79e8d9" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;dropWhile&lt;/code&gt; method of the second argument, if present.</source>
          <target state="translated">存在する場合、2番目の引数の &lt;code&gt;dropWhile&lt;/code&gt; メソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="3690ed2b1d5ab8555d49e00232d954b2a049f2ab" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;empty&lt;/code&gt; method of the first argument, if present.</source>
          <target state="translated">存在する場合、最初の引数の &lt;code&gt;empty&lt;/code&gt; メソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="939c5fed0e59fc9e305f0fec08ece5b44f632d48" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;filter&lt;/code&gt; method of the second argument, if present.</source>
          <target state="translated">存在する場合、2番目の引数の &lt;code&gt;filter&lt;/code&gt; メソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="fa8881e0431b49d7bf952d103a57aae50646f3c7" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;find&lt;/code&gt; method of the second argument, if present.</source>
          <target state="translated">存在する場合、2番目の引数の &lt;code&gt;find&lt;/code&gt; メソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="d4428cd16f2bbb5f3a86a70e2d1b13109f58dc16" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;forEach&lt;/code&gt; method of the second argument, if present.</source>
          <target state="translated">存在する場合、2番目の引数の &lt;code&gt;forEach&lt;/code&gt; メソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="5b2bdfa5420391dd3b6aba6131d74dc1f96d0d2b" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;groupBy&lt;/code&gt; method of the second argument, if present.</source>
          <target state="translated">存在する場合、2番目の引数の &lt;code&gt;groupBy&lt;/code&gt; メソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="6094a002055899a6f427676f16a3e31b90991fea" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;intersperse&lt;/code&gt; method of the second argument, if present.</source>
          <target state="translated">存在する場合、2番目の引数の &lt;code&gt;intersperse&lt;/code&gt; メソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="dd62f20aae1aa9e8f7c9c860c2174a5791a9662c" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;map&lt;/code&gt; method of the second argument, if present.</source>
          <target state="translated">存在する場合、2番目の引数の &lt;code&gt;map&lt;/code&gt; メソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="bac30525e37433e8caa4db08e6ac921107c1dc62" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;reduce&lt;/code&gt; method of the third argument, if present. When doing so, it is up to the user to handle the &lt;a href=&quot;#reduced&quot;&gt;&lt;code&gt;R.reduced&lt;/code&gt;&lt;/a&gt; shortcuting, as this is not implemented by &lt;code&gt;reduce&lt;/code&gt;.</source>
          <target state="translated">存在する場合、3番目の引数の &lt;code&gt;reduce&lt;/code&gt; メソッドにディスパッチします。これを実行する場合、&lt;a href=&quot;#reduced&quot;&gt; &lt;code&gt;R.reduced&lt;/code&gt; &lt;/a&gt;ショートカットを処理するのはユーザー次第です。これは &lt;code&gt;reduce&lt;/code&gt; によって実装されていないためです。</target>
        </trans-unit>
        <trans-unit id="13107bae56e0bec44e26974b394e3e4a516710c0" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;sequence&lt;/code&gt; method of the second argument, if present.</source>
          <target state="translated">存在する場合、2番目の引数の &lt;code&gt;sequence&lt;/code&gt; メソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="53986a5de05f8022878872fa805eddc3ab7ec8a5" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;slice&lt;/code&gt; method of the first argument, if present.</source>
          <target state="translated">存在する場合、最初の引数の &lt;code&gt;slice&lt;/code&gt; メソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="76973815efb64fe6a17a81a546dc414104d2a05f" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;slice&lt;/code&gt; method of the third argument, if present.</source>
          <target state="translated">存在する場合、3番目の引数の &lt;code&gt;slice&lt;/code&gt; メソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="221131da8ffc2d0aeeac17fea5a40f07a03f3e4e" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;take&lt;/code&gt; method of the second argument, if present.</source>
          <target state="translated">存在する場合、2番目の引数の &lt;code&gt;take&lt;/code&gt; メソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="2f1785e85411a7cac6eca8062220d1ec8ecfce43" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;takeWhile&lt;/code&gt; method of the second argument, if present.</source>
          <target state="translated">存在する場合、2番目の引数の &lt;code&gt;takeWhile&lt;/code&gt; メソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="18d1d2c44279bed0e4e39f604c629a15486fb0fd" translate="yes" xml:space="preserve">
          <source>Dispatches to the &lt;code&gt;traverse&lt;/code&gt; method of the third argument, if present.</source>
          <target state="translated">存在する場合、3番目の引数の &lt;code&gt;traverse&lt;/code&gt; メソッドにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="0f976f5b0e6c6dea3c80f0811cf8e88939ddcf9f" translate="yes" xml:space="preserve">
          <source>Divides the first parameter by the second and returns the remainder. Note that this function preserves the JavaScript-style behavior for modulo. For mathematical modulo see &lt;a href=&quot;#mathMod&quot;&gt;&lt;code&gt;mathMod&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最初のパラメーターを2番目のパラメーターで除算し、余りを返します。この関数は、モジュロのJavaScriptスタイルの動作を保持することに注意してください。数学的なモジュロについては、&lt;a href=&quot;#mathMod&quot;&gt; &lt;code&gt;mathMod&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9727522f58445af70f71a82a15cfc1a7e2c6db59" translate="yes" xml:space="preserve">
          <source>Divides two numbers. Equivalent to &lt;code&gt;a / b&lt;/code&gt;.</source>
          <target state="translated">2つの数値を除算します。同等 &lt;code&gt;a / b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0efb05b1c23947abec0117c1c156956026d7a55a" translate="yes" xml:space="preserve">
          <source>F  &lt;small&gt;Added in v0.9.0&lt;/small&gt;</source>
          <target state="translated">F &lt;small&gt;v0.9.0で追加&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7325127217ed1564daad486e08bacd2915cf565d" translate="yes" xml:space="preserve">
          <source>Finds the set (i.e. no duplicates) of all elements contained in the first or second list, but not both.</source>
          <target state="translated">最初のリストまたは2番目のリストに含まれるすべての要素の集合(すなわち、重複しない)を見つけますが、両方ではありません。</target>
        </trans-unit>
        <trans-unit id="51ca72ef66fa7013ed8a7f404efe909abd420e73" translate="yes" xml:space="preserve">
          <source>Finds the set (i.e. no duplicates) of all elements contained in the first or second list, but not both. Duplication is determined according to the value returned by applying the supplied predicate to two list elements.</source>
          <target state="translated">最初のリストまたは2番目のリストに含まれるすべての要素の集合(すなわち、重複がない)を見つけますが、両方ではありません。重複は、与えられた述語を2つのリスト要素に適用して返された値に応じて決定されます。</target>
        </trans-unit>
        <trans-unit id="f2a22c3551b50759305dc19d811cbbed2b7effc9" translate="yes" xml:space="preserve">
          <source>Finds the set (i.e. no duplicates) of all elements in the first list not contained in the second list. Duplication is determined according to the value returned by applying the supplied predicate to two list elements.</source>
          <target state="translated">最初のリストに含まれるすべての要素のうち、2番目のリストに含まれていないものの集合(すなわち、重複がないもの)を見つけます。重複は、与えられた述語を2つのリスト要素に適用して返された値に応じて決定されます。</target>
        </trans-unit>
        <trans-unit id="a0aa4c80bf0b5c3a7013171b459631b6a3519b23" translate="yes" xml:space="preserve">
          <source>Finds the set (i.e. no duplicates) of all elements in the first list not contained in the second list. Objects and Arrays are compared in terms of value equality, not reference equality.</source>
          <target state="translated">最初のリストに含まれるすべての要素のうち、2 番目のリストに含まれていないものの集合(つまり重複がないもの)を見つけます。オブジェクトと配列は、参照の平等ではなく、値の平等で比較されます。</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="939efdf1c34b0ce8921ad2e4b7a3ba85ddcdd54f" translate="yes" xml:space="preserve">
          <source>Function :: a -&amp;gt; String</source>
          <target state="translated">関数:: a-&amp;gt;文字列</target>
        </trans-unit>
        <trans-unit id="2d746144dc94e3af686ccb333a5e9497e6c41329" translate="yes" xml:space="preserve">
          <source>Function for determining whether two given (adjacent) elements should be in the same group</source>
          <target state="translated">与えられた(隣接する)2つの要素が同じグループ内にあるべきかどうかを判断するための関数</target>
        </trans-unit>
        <trans-unit id="1e0c00d3ea6091185dbcff5c8dccffae851986f0" translate="yes" xml:space="preserve">
          <source>Given a function that generates a key, turns a list of objects into an object indexing the objects by the given key. Note that if multiple objects generate the same value for the indexing key only the last value will be included in the generated object.</source>
          <target state="translated">キーを生成する関数を指定すると、オブジェクトのリストを、指定されたキーでオブジェクトのインデックスを作成するオブジェクトに変換します。複数のオブジェクトがインデックスキーに対して同じ値を生成した場合、最後の値だけが生成されたオブジェクトに含まれることに注意してください。</target>
        </trans-unit>
        <trans-unit id="f230523c8abe4d3d406767b41d772fb715fb66c7" translate="yes" xml:space="preserve">
          <source>Given a spec object recursively mapping properties to functions, creates a function producing an object of the same structure, by mapping each property to the result of calling its associated function with the supplied arguments.</source>
          <target state="translated">プロパティを関数に再帰的にマッピングする仕様オブジェクトが与えられると、各プロパティを与えられた引数で関連付けられた関数を呼び出す結果にマッピングすることで、同じ構造のオブジェクトを生成する関数を作成します。</target>
        </trans-unit>
        <trans-unit id="2de548ddfe7a48310864e36b0c5774da16ab06a2" translate="yes" xml:space="preserve">
          <source>Gives a single-word string description of the (native) type of a value, returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not attempt to distinguish user Object types any further, reporting them all as 'Object'.</source>
          <target state="translated">値の (ネイティブな)型の単一単語の文字列の説明を与え、'Object'、'Number'、'Array'、または 'Null' のような答えを返します。これ以上、ユーザのオブジェクトの型を区別しようとはせず、すべてを「Object」として報告します。</target>
        </trans-unit>
        <trans-unit id="d858d75dc2fb77728e0cbbe591594b611d00c915" translate="yes" xml:space="preserve">
          <source>Groups the elements of the list according to the result of calling the String-returning function &lt;code&gt;keyFn&lt;/code&gt; on each element and reduces the elements of each group to a single value via the reducer function &lt;code&gt;valueFn&lt;/code&gt;.</source>
          <target state="translated">各要素で文字列を返す関数 &lt;code&gt;keyFn&lt;/code&gt; を呼び出した結果に従ってリストの要素をグループ化し、リデューサー関数 &lt;code&gt;valueFn&lt;/code&gt; を介して各グループの要素を単一の値に削減します。</target>
        </trans-unit>
        <trans-unit id="d26ab547c2d4328f3007ae91eba19c44c526fee6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;g&lt;/code&gt; is a curried ternary function and &lt;code&gt;_&lt;/code&gt; is &lt;code&gt;R.__&lt;/code&gt;, the following are equivalent:</source>
          <target state="translated">場合 &lt;code&gt;g&lt;/code&gt; カリー三元関数であり、 &lt;code&gt;_&lt;/code&gt; ある &lt;code&gt;R.__&lt;/code&gt; 、以下が等価です。</target>
        </trans-unit>
        <trans-unit id="25d704462518d049bfa5e17a49fb928f7bb92d53" translate="yes" xml:space="preserve">
          <source>If more arguments are passed to the returned function than transformer functions, those arguments are passed directly to &lt;code&gt;fn&lt;/code&gt; as additional parameters. If you expect additional arguments that don't need to be transformed, although you can ignore them, it's best to pass an identity function so that the new function reports the correct arity.</source>
          <target state="translated">返される関数に変換関数よりも多くの引数が渡される場合、それらの引数は追加のパラメーターとして &lt;code&gt;fn&lt;/code&gt; に直接渡されます。変換する必要のない追加の引数が予想される場合、それらを無視することはできますが、新しい関数が正しいアリティを報告するように、識別関数を渡すことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="6b363cfb32db52c40aed0e15955b1958c6442d5a" translate="yes" xml:space="preserve">
          <source>If second argument is a function, &lt;code&gt;chain(f, g)(x)&lt;/code&gt; is equivalent to &lt;code&gt;f(g(x), x)&lt;/code&gt;.</source>
          <target state="translated">2番目の引数が関数の場合、 &lt;code&gt;chain(f, g)(x)&lt;/code&gt; は &lt;code&gt;f(g(x), x)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="324e2a70580354172670c66e3c3eb98e57c3a9f9" translate="yes" xml:space="preserve">
          <source>If the given value is an &lt;code&gt;[object Object]&lt;/code&gt; with a &lt;code&gt;toString&lt;/code&gt; method other than &lt;code&gt;Object.prototype.toString&lt;/code&gt;, this method is invoked with no arguments to produce the return value. This means user-defined constructor functions can provide a suitable &lt;code&gt;toString&lt;/code&gt; method. For example:</source>
          <target state="translated">指定された値が &lt;code&gt;Object.prototype.toString&lt;/code&gt; 以外の &lt;code&gt;toString&lt;/code&gt; メソッドを持つ &lt;code&gt;[object Object]&lt;/code&gt; である場合、このメソッドは引数なしで呼び出され、戻り値を生成します。これは、ユーザー定義のコンストラクター関数が適切な &lt;code&gt;toString&lt;/code&gt; メソッドを提供できることを意味します。例えば：</target>
        </trans-unit>
        <trans-unit id="493383f2d4e96ec709cbab9e67fc2e098337f6ef" translate="yes" xml:space="preserve">
          <source>If the given, non-null object has a value at the given path, returns the value at that path. Otherwise returns the provided default value.</source>
          <target state="translated">与えられたパスに値がある場合は、そのパスの値を返します。それ以外の場合は、指定されたデフォルト値を返します。</target>
        </trans-unit>
        <trans-unit id="7acd3116a5e20c3366c16f77b53dc4ad72a83065" translate="yes" xml:space="preserve">
          <source>If the given, non-null object has an own property with the specified name, returns the value of that property. Otherwise returns the provided default value.</source>
          <target state="translated">与えられた、非ヌルでないオブジェクトが、指定された名前を持つ独自のプロパティを持っている場合、そのプロパティの値を返します。そうでない場合は、指定されたデフォルト値を返します。</target>
        </trans-unit>
        <trans-unit id="653d89a94a8414895578523c1f9f1e2c654fec6a" translate="yes" xml:space="preserve">
          <source>In addition to functions, &lt;code&gt;R.both&lt;/code&gt; also accepts any fantasy-land compatible applicative functor.</source>
          <target state="translated">関数に加えて、 &lt;code&gt;R.both&lt;/code&gt; はファンタジーランドと互換性のあるアプリケーションファンクタも受け入れます。</target>
        </trans-unit>
        <trans-unit id="15f34bd3fbb8def7210b2b6f86366559abebf3fa" translate="yes" xml:space="preserve">
          <source>In addition to functions, &lt;code&gt;R.either&lt;/code&gt; also accepts any fantasy-land compatible applicative functor.</source>
          <target state="translated">関数に加えて、 &lt;code&gt;R.either&lt;/code&gt; もファンタジーランドと互換性のあるアプリケーションファンクタを受け入れます。</target>
        </trans-unit>
        <trans-unit id="ccc602e9064ebf5a4d942a74e1a4e80815578f19" translate="yes" xml:space="preserve">
          <source>In other words, &lt;code&gt;R.unapply&lt;/code&gt; derives a variadic function from a function which takes an array. &lt;code&gt;R.unapply&lt;/code&gt; is the inverse of &lt;a href=&quot;#apply&quot;&gt;&lt;code&gt;R.apply&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">つまり、 &lt;code&gt;R.unapply&lt;/code&gt; は、配列を取る関数から可変個関数を派生させます。 &lt;code&gt;R.unapply&lt;/code&gt; はの逆である&lt;a href=&quot;#apply&quot;&gt; &lt;code&gt;R.apply&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7f045b2d9595d6d1eec6a3c4386150bacebf7ed" translate="yes" xml:space="preserve">
          <source>In some libraries this function is named &lt;code&gt;sequence&lt;/code&gt;.</source>
          <target state="translated">一部のライブラリでは、この関数は &lt;code&gt;sequence&lt;/code&gt; という名前です。</target>
        </trans-unit>
        <trans-unit id="8997103528c255b4c2b32b968ec37435ca99294b" translate="yes" xml:space="preserve">
          <source>Increments its argument.</source>
          <target state="translated">その引数を増加させます。</target>
        </trans-unit>
        <trans-unit id="fcb1ddc45496d5bd9bbb1d0e3e24a58c56f33281" translate="yes" xml:space="preserve">
          <source>Initial value</source>
          <target state="translated">初期値</target>
        </trans-unit>
        <trans-unit id="1ea6b70f18b2382ca971deaaade04d0e50c74e8e" translate="yes" xml:space="preserve">
          <source>Initializes a transducer using supplied iterator function. Returns a single item by iterating through the list, successively calling the transformed iterator function and passing it an accumulator value and the current value from the array, and then passing the result to the next call.</source>
          <target state="translated">提供されたイテレータ関数を使用して変換器を初期化します。リストを反復処理し、変換されたイテレータ関数を連続して呼び出し、配列からアキュムレータ値と現在値を渡し、その結果を次の呼び出しに渡すことで、1つの項目を返します。</target>
        </trans-unit>
        <trans-unit id="fe872a76252e25f2da4b4cb6702f6fdc935c1599" translate="yes" xml:space="preserve">
          <source>Inserts the sub-list into the list, at the specified &lt;code&gt;index&lt;/code&gt;. &lt;em&gt;Note that this is not destructive&lt;/em&gt;: it returns a copy of the list with the changes. &lt;small&gt;No lists have been harmed in the application of this function.&lt;/small&gt;</source>
          <target state="translated">サブリストをリストの指定した &lt;code&gt;index&lt;/code&gt; 挿入します。&lt;em&gt;これは破壊的ではないことに注意してください&lt;/em&gt;。変更されたリストのコピーを返します。&lt;small&gt;この機能の適用において害を及ぼすリストはありません。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3b3bc0f33cbc061915acf1290755e5a9ab73233b" translate="yes" xml:space="preserve">
          <source>Inserts the supplied element into the list, at the specified &lt;code&gt;index&lt;/code&gt;. &lt;em&gt;Note that this is not destructive&lt;/em&gt;: it returns a copy of the list with the changes. &lt;small&gt;No lists have been harmed in the application of this function.&lt;/small&gt;</source>
          <target state="translated">提供された要素をリストの指定された &lt;code&gt;index&lt;/code&gt; 挿入します。&lt;em&gt;これは破壊的ではないことに注意してください&lt;/em&gt;。変更されたリストのコピーを返します。&lt;small&gt;この機能の適用において害を及ぼすリストはありません。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7c2742d9e77846c6fd1a88fd7fd4125c044d098e" translate="yes" xml:space="preserve">
          <source>Iterate over an input &lt;code&gt;list&lt;/code&gt;, calling a provided function &lt;code&gt;fn&lt;/code&gt; for each element in the list.</source>
          <target state="translated">入力 &lt;code&gt;list&lt;/code&gt; 反復処理し、リスト内の各要素に対して提供されている関数 &lt;code&gt;fn&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="39682a78850121f016820665c4ea55a32f6e8851" translate="yes" xml:space="preserve">
          <source>Iterate over an input &lt;code&gt;object&lt;/code&gt;, calling a provided function &lt;code&gt;fn&lt;/code&gt; for each key and value in the object.</source>
          <target state="translated">入力 &lt;code&gt;object&lt;/code&gt; 反復処理し、オブジェクトのキーと値ごとに提供された関数 &lt;code&gt;fn&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="204d15148f96cffaaca5b2267c991d6cd4f434b5" translate="yes" xml:space="preserve">
          <source>Lens</source>
          <target state="translated">Lens</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">MITライセンスに基づいてライセンスされています。</target>
        </trans-unit>
        <trans-unit id="d9c04d4cc8f10e248d460ed3559d12862af2aef2" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#reduce&quot;&gt;&lt;code&gt;reduce&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;reduceWhile&lt;/code&gt; returns a single item by iterating through the list, successively calling the iterator function. &lt;code&gt;reduceWhile&lt;/code&gt; also takes a predicate that is evaluated before each step. If the predicate returns &lt;code&gt;false&lt;/code&gt;, it &quot;short-circuits&quot; the iteration and returns the current value of the accumulator.</source>
          <target state="translated">&lt;a href=&quot;#reduce&quot;&gt; &lt;code&gt;reduce&lt;/code&gt; &lt;/a&gt;と同様に、 &lt;code&gt;reduceWhile&lt;/code&gt; は、リストを反復処理して単一の項目を返し、順次反復関数を呼び出します。 &lt;code&gt;reduceWhile&lt;/code&gt; は、各ステップの前に評価される述語も受け取ります。述語が &lt;code&gt;false&lt;/code&gt; を返す場合、述語は反復を「短絡」し、アキュムレータの現在の値を返します。</target>
        </trans-unit>
        <trans-unit id="a1fffaaafb7cc996685bceb829c053cc4f7de43d" translate="yes" xml:space="preserve">
          <source>List</source>
          <target state="translated">List</target>
        </trans-unit>
        <trans-unit id="87e317ff0eebbf3f0d584a2d46ccca09e3a176d9" translate="yes" xml:space="preserve">
          <source>ListA list that contains sublists of elements, whose concatenations are equal to the original list.</source>
          <target state="translated">List要素のサブリストを含むリストで、その連結が元のリストと等しいもの。</target>
        </trans-unit>
        <trans-unit id="3d52a6d8fedcc48a65297c07bf5f7e3e41aab5aa" translate="yes" xml:space="preserve">
          <source>Logic</source>
          <target state="translated">Logic</target>
        </trans-unit>
        <trans-unit id="2d2d3548281a9973162677100dca83f4702bc47f" translate="yes" xml:space="preserve">
          <source>Makes a comparator function out of a function that reports whether the first element is less than the second.</source>
          <target state="translated">第1の要素が第2の要素よりも小さいかどうかを報告する関数のコンパレータ関数を作成します。</target>
        </trans-unit>
        <trans-unit id="b984f9518c48efc4d12b467c9abe171a01d1b145" translate="yes" xml:space="preserve">
          <source>Makes a descending comparator function out of a function that returns a value that can be compared with &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; および &lt;code&gt;&amp;gt;&lt;/code&gt; と比較できる値を返す関数から降順コンパレーター関数を作成します。</target>
        </trans-unit>
        <trans-unit id="b6aa9a4df5e7c437a0500b60d8041f7a5a036c26" translate="yes" xml:space="preserve">
          <source>Makes a shallow clone of an object, omitting the property at the given path. Note that this copies and flattens prototype properties onto the new object as well. All non-primitive properties are copied by reference.</source>
          <target state="translated">与えられたパスのプロパティを省略して、オブジェクトの浅いクローンを作成します。これは、プロトタイプのプロパティを新しいオブジェクトにもコピーして平坦化することに注意してください。非プリミティブなプロパティはすべて参照によってコピーされます。</target>
        </trans-unit>
        <trans-unit id="d3fe163f06c3f2b842c609215402ba65cd3297ae" translate="yes" xml:space="preserve">
          <source>Makes a shallow clone of an object, setting or overriding the nodes required to create the given path, and placing the specific value at the tail end of that path. Note that this copies and flattens prototype properties onto the new object as well. All non-primitive properties are copied by reference.</source>
          <target state="translated">オブジェクトの浅いクローンを作成し、与えられたパスを作成するために必要なノードを設定またはオーバーライドし、そのパスの末尾に特定の値を配置します。これは、プロトタイプのプロパティを新しいオブジェクトにもコピーして平坦化することに注意してください。原始的でないプロパティはすべて参照によってコピーされます。</target>
        </trans-unit>
        <trans-unit id="df610fa2588a0489f6584c06af251520def11605" translate="yes" xml:space="preserve">
          <source>Makes a shallow clone of an object, setting or overriding the specified property with the given value. Note that this copies and flattens prototype properties onto the new object as well. All non-primitive properties are copied by reference.</source>
          <target state="translated">オブジェクトの浅いクローンを作成し、指定されたプロパティを指定された値で設定したり、オーバーライドしたりします。これは、プロトタイプのプロパティを新しいオブジェクトにもコピーして平坦化することに注意してください。非プリミティブなプロパティはすべて参照によってコピーされます。</target>
        </trans-unit>
        <trans-unit id="d024bbc6f126c34e97e4e7db9d6ae3681e990cf3" translate="yes" xml:space="preserve">
          <source>Makes an ascending comparator function out of a function that returns a value that can be compared with &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; および &lt;code&gt;&amp;gt;&lt;/code&gt; と比較できる値を返す関数から昇順の比較関数を作成します。</target>
        </trans-unit>
        <trans-unit id="fd15a87a483faa4e4a1b7f1171b9ba83d3669ca0" translate="yes" xml:space="preserve">
          <source>Maps an &lt;a href=&quot;https://github.com/fantasyland/fantasy-land#applicative&quot;&gt;Applicative&lt;/a&gt;-returning function over a &lt;a href=&quot;https://github.com/fantasyland/fantasy-land#traversable&quot;&gt;Traversable&lt;/a&gt;, then uses &lt;a href=&quot;#sequence&quot;&gt;&lt;code&gt;sequence&lt;/code&gt;&lt;/a&gt; to transform the resulting Traversable of Applicative into an Applicative of Traversable.</source>
          <target state="translated">地図&lt;a href=&quot;https://github.com/fantasyland/fantasy-land#applicative&quot;&gt;のApplicative&lt;/a&gt;オーバー-returning機能&lt;a href=&quot;https://github.com/fantasyland/fantasy-land#traversable&quot;&gt;Traversableの&lt;/a&gt;、そして使用する&lt;a href=&quot;#sequence&quot;&gt; &lt;code&gt;sequence&lt;/code&gt; &lt;/a&gt; TraversableのののApplicativeへのApplicativeの結果Traversableのを変換します。</target>
        </trans-unit>
        <trans-unit id="3edf0df49942da6d11a1a217e4d3af4a5a8e64f2" translate="yes" xml:space="preserve">
          <source>Math</source>
          <target state="translated">Math</target>
        </trans-unit>
        <trans-unit id="7d7103933c318059b376a7d24b1970514b27ca68" translate="yes" xml:space="preserve">
          <source>Merges a list of objects together into one object.</source>
          <target state="translated">オブジェクトのリストを一つのオブジェクトに結合します。</target>
        </trans-unit>
        <trans-unit id="72060d24be81f4e99d8f636a887be4d9e28410a9" translate="yes" xml:space="preserve">
          <source>Move an item, at index &lt;code&gt;from&lt;/code&gt;, to index &lt;code&gt;to&lt;/code&gt;, in a list of elements. A new list will be created containing the new elements order.</source>
          <target state="translated">要素のリストで、インデックス &lt;code&gt;from&lt;/code&gt; のアイテムをインデックス &lt;code&gt;to&lt;/code&gt; に移動します。新しい要素の順序を含む新しいリストが作成されます。</target>
        </trans-unit>
        <trans-unit id="b24fe210c667d060a475e1a5299c08ecfbca02ab" translate="yes" xml:space="preserve">
          <source>Multiplies together all the elements of a list.</source>
          <target state="translated">リストのすべての要素を乗算します。</target>
        </trans-unit>
        <trans-unit id="a38d54335a2ed7731fe4afceb07549b57bf0ce4f" translate="yes" xml:space="preserve">
          <source>Multiplies two numbers. Equivalent to &lt;code&gt;a * b&lt;/code&gt; but curried.</source>
          <target state="translated">2つの数値を乗算します。相当 &lt;code&gt;a * b&lt;/code&gt; が、カレー。</target>
        </trans-unit>
        <trans-unit id="1d81cb92df240f87411e0084a52bf2fee09745a2" translate="yes" xml:space="preserve">
          <source>Name of the method to call.</source>
          <target state="translated">呼び出すメソッドの名前。</target>
        </trans-unit>
        <trans-unit id="1bb8a45913f29b4faa7d351662d324f24b90118f" translate="yes" xml:space="preserve">
          <source>Negates its argument.</source>
          <target state="translated">その議論を否定する。</target>
        </trans-unit>
        <trans-unit id="0d38abe99932b4bbf71953ff4fe86aaa30b724d1" translate="yes" xml:space="preserve">
          <source>Note this &lt;code&gt;of&lt;/code&gt; is different from the ES6 &lt;code&gt;of&lt;/code&gt;; See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of&lt;/a&gt;</source>
          <target state="translated">この注意 &lt;code&gt;of&lt;/code&gt; ES6と異なる &lt;code&gt;of&lt;/code&gt; 。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/ofを&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="a06cb184a96c7e3160d7a4fcaa2a261104124d3b" translate="yes" xml:space="preserve">
          <source>Note this is merely a curried version of ES6 &lt;code&gt;Object.is&lt;/code&gt;.</source>
          <target state="translated">これはES6 &lt;code&gt;Object.is&lt;/code&gt; のカレーバージョンにすぎないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="f0ca645a396061e1e03772e691d92ef04ab7bf16" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;R.concat&lt;/code&gt; expects both arguments to be of the same type, unlike the native &lt;code&gt;Array.prototype.concat&lt;/code&gt; method. It will throw an error if you &lt;code&gt;concat&lt;/code&gt; an Array with a non-Array value.</source>
          <target state="translated">注： &lt;code&gt;R.concat&lt;/code&gt; は、ネイティブの &lt;code&gt;Array.prototype.concat&lt;/code&gt; メソッドとは異なり、両方の引数が同じ型であることを想定しています。配列を非配列値と &lt;code&gt;concat&lt;/code&gt; すると、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="d23d5faecfc7af7114e6b36100b1b432505af005" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;R.forEach&lt;/code&gt; does not skip deleted or unassigned indices (sparse arrays), unlike the native &lt;code&gt;Array.prototype.forEach&lt;/code&gt; method. For more details on this behavior, see: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description&lt;/a&gt;</source>
          <target state="translated">注： &lt;code&gt;R.forEach&lt;/code&gt; は、ネイティブの &lt;code&gt;Array.prototype.forEach&lt;/code&gt; メソッドとは異なり、削除されたインデックスまたは割り当てられていないインデックス（スパース配列）をスキップしません。この動作の詳細については、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description&quot;&gt;https&lt;/a&gt;：//developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Descriptionを参照してください。</target>
        </trans-unit>
        <trans-unit id="08fa4472538b49e29ac25c8ee86b636b14501c94" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;R.reduce&lt;/code&gt; does not skip deleted or unassigned indices (sparse arrays), unlike the native &lt;code&gt;Array.prototype.reduce&lt;/code&gt; method. For more details on this behavior, see: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description&lt;/a&gt;</source>
          <target state="translated">注： &lt;code&gt;R.reduce&lt;/code&gt; は、ネイティブの &lt;code&gt;Array.prototype.reduce&lt;/code&gt; メソッドとは異なり、削除または割り当てられていないインデックス（スパース配列）をスキップしません。この動作の詳細については、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description&quot;&gt;https&lt;/a&gt;：//developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Descriptionを参照してください。</target>
        </trans-unit>
        <trans-unit id="a268f228b1652320d5ca458fd70299381880c62c" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;R.reduceRight&lt;/code&gt; does not skip deleted or unassigned indices (sparse arrays), unlike the native &lt;code&gt;Array.prototype.reduceRight&lt;/code&gt; method. For more details on this behavior, see: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description&lt;/a&gt;</source>
          <target state="translated">注： &lt;code&gt;R.reduceRight&lt;/code&gt; は、ネイティブの &lt;code&gt;Array.prototype.reduceRight&lt;/code&gt; メソッドとは異なり、削除または割り当てられていないインデックス（スパース配列）をスキップしません。この動作の詳細については、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description&quot;&gt;https&lt;/a&gt;：//developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Descriptionを参照してください。</target>
        </trans-unit>
        <trans-unit id="2d46d21fc88c00399f5ea79fd4e77aba89461cc8" translate="yes" xml:space="preserve">
          <source>Note: this optimization is only available to the below functions:</source>
          <target state="translated">注意:この最適化は以下の関数でのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="translated">Number</target>
        </trans-unit>
        <trans-unit id="d1a027e6afc46d9fadb46d9aad496859ea5e81b2" translate="yes" xml:space="preserve">
          <source>Number of arguments the returned function should take before the target object.</source>
          <target state="translated">返された関数がターゲットオブジェクトの前に取るべき引数の数。</target>
        </trans-unit>
        <trans-unit id="27237907f06b3599fb7606c976810465a91aaf7d" translate="yes" xml:space="preserve">
          <source>NumberReturns `minimum` when `val &amp;lt; minimum`, `maximum` when `val &amp;gt; maximum`, returns `val` otherwise</source>
          <target state="translated">Number戻り値は、「val &amp;lt;minimum」の場合は「minimum」、「val&amp;gt; maximum」の場合は「maximum」、それ以外の場合は「val」を返します。</target>
        </trans-unit>
        <trans-unit id="8664d60285b0e5e4618570f1bb51aefafe5dd8f2" translate="yes" xml:space="preserve">
          <source>NumberThe index of the element found, or `-1`.</source>
          <target state="translated">Number見つかった要素のインデックス。</target>
        </trans-unit>
        <trans-unit id="f14e8b6b69f6b350d02fad7ed3f58dbf5e84b464" translate="yes" xml:space="preserve">
          <source>NumberThe length of the array.</source>
          <target state="translated">Number配列の長さ。</target>
        </trans-unit>
        <trans-unit id="a29b602cdf4af5244d55a7adbcbddc79aea0a896" translate="yes" xml:space="preserve">
          <source>NumberThe product of all the numbers in the list.</source>
          <target state="translated">Numberリスト内のすべての数値の積。</target>
        </trans-unit>
        <trans-unit id="acb41236c501c365c13492d7f957dcda2af4087d" translate="yes" xml:space="preserve">
          <source>NumberThe result of `a * b`.</source>
          <target state="translated">数値 `a*b` の結果.</target>
        </trans-unit>
        <trans-unit id="2d826a88d18326f336e6607f40f5a7ca673b028e" translate="yes" xml:space="preserve">
          <source>NumberThe result of `a - b`.</source>
          <target state="translated">数値 `a-b` の結果.</target>
        </trans-unit>
        <trans-unit id="8a8fc622f021e737540f8d88e789cc2eb0caa0cd" translate="yes" xml:space="preserve">
          <source>NumberThe result of `a / b`.</source>
          <target state="translated">数値 `a/b` の結果.</target>
        </trans-unit>
        <trans-unit id="04913e3ffe5a723f06cd2649e8afc5a7dc9b5faa" translate="yes" xml:space="preserve">
          <source>NumberThe result of `b % a`.</source>
          <target state="translated">Number `b % a` の結果。</target>
        </trans-unit>
        <trans-unit id="e8bdb18cd413104c72112d4267f47c20b93c76a8" translate="yes" xml:space="preserve">
          <source>NumberThe result of `b mod a`.</source>
          <target state="translated">Number `b mod a` の結果。</target>
        </trans-unit>
        <trans-unit id="dd42ee119934bb21e06e5f920f20aa9f983233fd" translate="yes" xml:space="preserve">
          <source>NumberThe sum of all the numbers in the list.</source>
          <target state="translated">Numberリスト内のすべての数値の合計。</target>
        </trans-unit>
        <trans-unit id="36f4b8861e213617211a7a29895ab579d500c743" translate="yes" xml:space="preserve">
          <source>Number`-1` if fn(a) &amp;gt; fn(b), `1` if fn(b) &amp;gt; fn(a), otherwise `0`</source>
          <target state="translated">fn（a）&amp;gt; fn（b）の場合は数値 `-1`、fn（b）&amp;gt; fn（a）の場合は` 1`、それ以外の場合は `0`</target>
        </trans-unit>
        <trans-unit id="69f0c55128e4126fc1cbdaee633b997c7d8bfc67" translate="yes" xml:space="preserve">
          <source>Number`-1` if fn(a) &amp;lt; fn(b), `1` if fn(b) &amp;lt; fn(a), otherwise `0`</source>
          <target state="translated">fn（a）&amp;lt;fn（b）の場合は数値 `-1`、fn（b）&amp;lt;fn（a）の場合は` 1`、それ以外の場合は `0`</target>
        </trans-unit>
        <trans-unit id="983b88da2a45fbe8739085bc789c480858f4b7b6" translate="yes" xml:space="preserve">
          <source>Numbern + 1</source>
          <target state="translated">ナンバーン+1</target>
        </trans-unit>
        <trans-unit id="d09a858a05ed74f15eeb0f203d62356bf20ebcbf" translate="yes" xml:space="preserve">
          <source>Numbern - 1</source>
          <target state="translated">ナンバーン-1</target>
        </trans-unit>
        <trans-unit id="d11286f71a656d5d9d217048780e41d9256eccf2" translate="yes" xml:space="preserve">
          <source>Numberthe index of the target, or -1 if the target is not found.</source>
          <target state="translated">Numberターゲットのインデックス、ターゲットが見つからない場合は-1。</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="2ba98708d13b8a1a97dd95f12995adc55178c886" translate="yes" xml:space="preserve">
          <source>ObjectA merged object.</source>
          <target state="translated">ObjectA マージされたオブジェクト。</target>
        </trans-unit>
        <trans-unit id="6c81dc36a591811ccc0950120a754ed7f7077223" translate="yes" xml:space="preserve">
          <source>ObjectA new object equivalent to the original but without the specified property</source>
          <target state="translated">Object元のオブジェクトと同等の新しいオブジェクトですが、指定されたプロパティはありません。</target>
        </trans-unit>
        <trans-unit id="18b5c04c7e09330a1d6417d9726f00272ff465a1" translate="yes" xml:space="preserve">
          <source>ObjectA new object equivalent to the original except along the specified path.</source>
          <target state="translated">Object指定されたパスに沿っている以外は、元のオブジェクトと同等の新しいオブジェクト。</target>
        </trans-unit>
        <trans-unit id="4c385e22412a17ff55d17765be2b8422dc5d2257" translate="yes" xml:space="preserve">
          <source>ObjectA new object equivalent to the original except for the changed property.</source>
          <target state="translated">Object変更されたプロパティを除いて、元のオブジェクトと同等の新しいオブジェクト。</target>
        </trans-unit>
        <trans-unit id="32c056efe429b0d585f6054582d855accfb6997d" translate="yes" xml:space="preserve">
          <source>ObjectA new object with only properties from `names` on it.</source>
          <target state="translated">Object `names` のプロパティのみを持つ新しいオブジェクト。</target>
        </trans-unit>
        <trans-unit id="8ee8fa64e7a8e3dc4605cbe0d1b57a7f59076b2b" translate="yes" xml:space="preserve">
          <source>ObjectA new object with only properties that satisfy `pred` on it.</source>
          <target state="translated">Object新しいオブジェクトで、`pred`を満たすプロパティのみを持つオブジェクト。</target>
        </trans-unit>
        <trans-unit id="aa4642e782ea94461d9b6aa7f4ed6d92c8cfc2ec" translate="yes" xml:space="preserve">
          <source>ObjectA new object with properties from `names` not on it.</source>
          <target state="translated">Object新しいオブジェクトに `names` からのプロパティを持たせます。</target>
        </trans-unit>
        <trans-unit id="3eccfdcaf9c924a711b78341ec677aa3a375ba94" translate="yes" xml:space="preserve">
          <source>ObjectA new object without the property at path</source>
          <target state="translated">Objectパスにプロパティを持たない新しいオブジェクト</target>
        </trans-unit>
        <trans-unit id="e02159dbf809f3e01fe63773294c25a5c3e471d9" translate="yes" xml:space="preserve">
          <source>ObjectAn object indexing each array element by the given property.</source>
          <target state="translated">Object各配列要素を、指定されたプロパティでインデックス化したオブジェクト。</target>
        </trans-unit>
        <trans-unit id="4091a2a1afb6aee022223267be45dfdf8f57c797" translate="yes" xml:space="preserve">
          <source>ObjectAn object mapping keys to number of occurrences in the list.</source>
          <target state="translated">Objectキーをリスト内の出現数にマッピングしたオブジェクト。</target>
        </trans-unit>
        <trans-unit id="1b57c0a6c2427a09917b75b64bbddeb41a78e798" translate="yes" xml:space="preserve">
          <source>ObjectAn object with the output of `fn` for keys, mapped to arrays of elements that produced that key when passed to `fn`.</source>
          <target state="translated">Objectキーに対する `fn` の出力を持つオブジェクトで、`fn` に渡されたときにそのキーを生成した要素の配列にマップされています。</target>
        </trans-unit>
        <trans-unit id="4720db99360e3bbd733736e04cdeae6977196b1b" translate="yes" xml:space="preserve">
          <source>ObjectAn object with the output of `keyFn` for keys, mapped to the output of `valueFn` for elements which produced that key when passed to `keyFn`.</source>
          <target state="translated">Objectキーの `keyFn` の出力を持つオブジェクトで、`keyFn` に渡されたときにそのキーを生成した要素の `valueFn` の出力にマップされています。</target>
        </trans-unit>
        <trans-unit id="5c240d7b32f98a71d42a1ae97f6ffdf50a04d558" translate="yes" xml:space="preserve">
          <source>ObjectThe element found, or `undefined`.</source>
          <target state="translated">Object見つかった要素、または `undefined` 。</target>
        </trans-unit>
        <trans-unit id="689a6f1653174cd3fec5ca8e479e46c21b2f494c" translate="yes" xml:space="preserve">
          <source>ObjectThe object made by pairing up `keys` and `values`.</source>
          <target state="translated">オブジェクト `keys` と `values` をペアリングして作られたオブジェクト。</target>
        </trans-unit>
        <trans-unit id="77987f9b1bc97b401c1982663aae36decbca0b03" translate="yes" xml:space="preserve">
          <source>ObjectThe object made by pairing up same-indexed elements of `keys` and `values`.</source>
          <target state="translated">オブジェクト `keys` と `values` の同じインデックスを持つ要素をペアにしたオブジェクト。</target>
        </trans-unit>
        <trans-unit id="23671d26776024d4cf06e175a64fe003dbebdf03" translate="yes" xml:space="preserve">
          <source>ObjectThe original object.</source>
          <target state="translated">Object元のオブジェクト。</target>
        </trans-unit>
        <trans-unit id="4eb7e2cdd506f463e041850deeeffaf977fd8952" translate="yes" xml:space="preserve">
          <source>ObjectThe transformed object.</source>
          <target state="translated">オブジェクト変換されたオブジェクト。</target>
        </trans-unit>
        <trans-unit id="57b9756d186387f4b10bc6a2c948d3383b5c72fc" translate="yes" xml:space="preserve">
          <source>Objectout A new object</source>
          <target state="translated">Objectout 新しいオブジェクト</target>
        </trans-unit>
        <trans-unit id="49ce32ba20bf3d079412c03d41f76eaf56618186" translate="yes" xml:space="preserve">
          <source>Objectout A new object with keys in an array.</source>
          <target state="translated">Objectout 配列内のキーを持つ新規オブジェクト。</target>
        </trans-unit>
        <trans-unit id="353a41b4b99a3499439269fbdddb19f2db9f42dc" translate="yes" xml:space="preserve">
          <source>One more than the last number in the list.</source>
          <target state="translated">リストの最後の番号より1つ多い。</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="7234255ea6d1d79e30caf7ec0d963d986fc5bfc9" translate="yes" xml:space="preserve">
          <source>Performs left-to-right composition of one or more Promise-returning functions. The leftmost function may have any arity; the remaining functions must be unary.</source>
          <target state="translated">1つ以上のPromise-returning関数の左から右への合成を行います。左端の関数は任意のアリティを持つことができます。</target>
        </trans-unit>
        <trans-unit id="12bc9a7d2952f292d1c487a2b26bb8ba33da9a6c" translate="yes" xml:space="preserve">
          <source>Performs left-to-right function composition using transforming function. The leftmost function may have any arity; the remaining functions must be unary.</source>
          <target state="translated">変換関数を用いて,左から右への関数合成を行います.左端の関数は任意のアリティを持つことができ,残りの関数は単項式でなければなりません.</target>
        </trans-unit>
        <trans-unit id="3c9908e80ce073f33c1ee56d4bfb6548a77e318b" translate="yes" xml:space="preserve">
          <source>Performs left-to-right function composition. The leftmost function may have any arity; the remaining functions must be unary.</source>
          <target state="translated">関数の左から右への合成を行います。左端の関数は任意のアリティを持つことができます。</target>
        </trans-unit>
        <trans-unit id="ed18a96f00ae2606a22ddc8f456026a88cc016cf" translate="yes" xml:space="preserve">
          <source>Performs right-to-left composition of one or more Promise-returning functions. The rightmost function may have any arity; the remaining functions must be unary.</source>
          <target state="translated">1つ以上のPromise-returning関数の右から左への合成を行います。右端の関数は任意のアリティを持つことができます。</target>
        </trans-unit>
        <trans-unit id="29459aff32486d2fb70a728ebd97588b241a58f9" translate="yes" xml:space="preserve">
          <source>Performs right-to-left function composition using transforming function. The rightmost function may have any arity; the remaining functions must be unary.</source>
          <target state="translated">変換関数を用いて,右から左への関数合成を行います.右端の関数は任意のアリティを持つことができ,残りの関数は単項でなければなりません.</target>
        </trans-unit>
        <trans-unit id="4eb881f1da4d21dca040838c542964aef9987184" translate="yes" xml:space="preserve">
          <source>Performs right-to-left function composition. The rightmost function may have any arity; the remaining functions must be unary.</source>
          <target state="translated">関数の右から左への合成を行います。右端の関数は任意のアリティを持つことができます。</target>
        </trans-unit>
        <trans-unit id="b65ced976e40e86090dae263ac1b39de6082f724" translate="yes" xml:space="preserve">
          <source>PromiseThe result of calling `p.then(null, onFailure)`</source>
          <target state="translated">Promise `p.then(null,onFailure)` を呼び出した結果。</target>
        </trans-unit>
        <trans-unit id="c1d2048a3d14ca083a27ecee712fa466b571eeea" translate="yes" xml:space="preserve">
          <source>PromiseThe result of calling `p.then(onSuccess)`</source>
          <target state="translated">Promise `p.then(onSuccess)` を呼び出した結果。</target>
        </trans-unit>
        <trans-unit id="d0af55ccc35cfa65c0e64dd47da3a6a97daffeae" translate="yes" xml:space="preserve">
          <source>R.F</source>
          <target state="translated">R.F</target>
        </trans-unit>
        <trans-unit id="d731941120ea26d20a196b53e157bea00c7d922f" translate="yes" xml:space="preserve">
          <source>R.T</source>
          <target state="translated">R.T</target>
        </trans-unit>
        <trans-unit id="8f0f101404bc8105e8323db03d328ff90620b09b" translate="yes" xml:space="preserve">
          <source>R.__</source>
          <target state="translated">R.__</target>
        </trans-unit>
        <trans-unit id="be8326379572356ac3bd2147a0fdb6fdbecbdc7d" translate="yes" xml:space="preserve">
          <source>R.add</source>
          <target state="translated">R.add</target>
        </trans-unit>
        <trans-unit id="33dc268f03e4e85e447531cec4647acdf28561e9" translate="yes" xml:space="preserve">
          <source>R.addIndex</source>
          <target state="translated">R.addIndex</target>
        </trans-unit>
        <trans-unit id="82294aa70af00c44a6317606e6a7b01df04d036b" translate="yes" xml:space="preserve">
          <source>R.adjust</source>
          <target state="translated">R.adjust</target>
        </trans-unit>
        <trans-unit id="faa7c5670e1936b5218c86ec1f84250d30efd32d" translate="yes" xml:space="preserve">
          <source>R.all</source>
          <target state="translated">R.all</target>
        </trans-unit>
        <trans-unit id="7b2a1c4913c3c58eeb109eee3562b838c80f902f" translate="yes" xml:space="preserve">
          <source>R.allPass</source>
          <target state="translated">R.allPass</target>
        </trans-unit>
        <trans-unit id="e63304d17fae1ba7120148f88316ab83c3c157e3" translate="yes" xml:space="preserve">
          <source>R.always</source>
          <target state="translated">R.always</target>
        </trans-unit>
        <trans-unit id="5bc6a3571597cd90310b8638f71a9ec049c73c7b" translate="yes" xml:space="preserve">
          <source>R.and</source>
          <target state="translated">R.and</target>
        </trans-unit>
        <trans-unit id="75e4f296c0aa6997340e490879ce87ca45cb8368" translate="yes" xml:space="preserve">
          <source>R.any</source>
          <target state="translated">R.any</target>
        </trans-unit>
        <trans-unit id="9475ea6793c10b767379e44e7ebd84dd62020f24" translate="yes" xml:space="preserve">
          <source>R.anyPass</source>
          <target state="translated">R.anyPass</target>
        </trans-unit>
        <trans-unit id="c3aea3e6981bf7c006e9a7b8082ddd8becdd7e2f" translate="yes" xml:space="preserve">
          <source>R.ap</source>
          <target state="translated">R.ap</target>
        </trans-unit>
        <trans-unit id="988956feba6195ccdd18b28ca7a730a90516a2b4" translate="yes" xml:space="preserve">
          <source>R.aperture</source>
          <target state="translated">R.aperture</target>
        </trans-unit>
        <trans-unit id="8bfda73207730740aef15f2690f056a9e23237bf" translate="yes" xml:space="preserve">
          <source>R.append</source>
          <target state="translated">R.append</target>
        </trans-unit>
        <trans-unit id="0edf6647fd0d2ab1e84e3a2b04585b4fa74eda89" translate="yes" xml:space="preserve">
          <source>R.apply</source>
          <target state="translated">R.apply</target>
        </trans-unit>
        <trans-unit id="3613258fdde9d9f3a25954d913bcf762e21a2235" translate="yes" xml:space="preserve">
          <source>R.applySpec</source>
          <target state="translated">R.applySpec</target>
        </trans-unit>
        <trans-unit id="a874d9512127937dcb8815183a506fe1a44f9a88" translate="yes" xml:space="preserve">
          <source>R.applyTo</source>
          <target state="translated">R.applyTo</target>
        </trans-unit>
        <trans-unit id="e86150701df2ee748c1cba4cc8624795a1f1790d" translate="yes" xml:space="preserve">
          <source>R.ascend</source>
          <target state="translated">R.ascend</target>
        </trans-unit>
        <trans-unit id="ad74e5d646b3e5d9241da09178ca8bd3f95e9775" translate="yes" xml:space="preserve">
          <source>R.assoc</source>
          <target state="translated">R.assoc</target>
        </trans-unit>
        <trans-unit id="3273b9bd1dcd0a76235fae2884eed5b11b387c64" translate="yes" xml:space="preserve">
          <source>R.assocPath</source>
          <target state="translated">R.assocPath</target>
        </trans-unit>
        <trans-unit id="d78797d8ecb55ec4fe1d692c7dc2ef913424f533" translate="yes" xml:space="preserve">
          <source>R.binary</source>
          <target state="translated">R.binary</target>
        </trans-unit>
        <trans-unit id="782706d13a18fb50a4c91f7edf630e020270ec58" translate="yes" xml:space="preserve">
          <source>R.bind</source>
          <target state="translated">R.bind</target>
        </trans-unit>
        <trans-unit id="5f931f845d210e0353b092b7536586fa4c27c609" translate="yes" xml:space="preserve">
          <source>R.both</source>
          <target state="translated">R.both</target>
        </trans-unit>
        <trans-unit id="779c18adb7569efa2296c63ff6261abc67b5f107" translate="yes" xml:space="preserve">
          <source>R.call</source>
          <target state="translated">R.call</target>
        </trans-unit>
        <trans-unit id="7cdc551acee7f3be87c7613dab19b1ba9bda3250" translate="yes" xml:space="preserve">
          <source>R.chain</source>
          <target state="translated">R.chain</target>
        </trans-unit>
        <trans-unit id="91817255bcefd447fc03d89fe7a47fb9a147da1d" translate="yes" xml:space="preserve">
          <source>R.clamp</source>
          <target state="translated">R.clamp</target>
        </trans-unit>
        <trans-unit id="1e49af14cc6715858739046642bec75f841d83ab" translate="yes" xml:space="preserve">
          <source>R.clone</source>
          <target state="translated">R.clone</target>
        </trans-unit>
        <trans-unit id="a1a58d0b0d18584fd5f8a12b4f59b0108611e226" translate="yes" xml:space="preserve">
          <source>R.comparator</source>
          <target state="translated">R.comparator</target>
        </trans-unit>
        <trans-unit id="47b15e8557aecf4f2f13eefb35b36a1e940b05d6" translate="yes" xml:space="preserve">
          <source>R.complement</source>
          <target state="translated">R.complement</target>
        </trans-unit>
        <trans-unit id="a6546fb1acbe7798b6ede2f568a6d5d187c3184b" translate="yes" xml:space="preserve">
          <source>R.compose</source>
          <target state="translated">R.compose</target>
        </trans-unit>
        <trans-unit id="64169176938f749eb4bc7f77915c7dd25f6ccf9b" translate="yes" xml:space="preserve">
          <source>R.composeK</source>
          <target state="translated">R.composeK</target>
        </trans-unit>
        <trans-unit id="f15dec4051325d2670b1a766176ce09d825eefd7" translate="yes" xml:space="preserve">
          <source>R.composeP</source>
          <target state="translated">R.composeP</target>
        </trans-unit>
        <trans-unit id="003853a29b7c44e4c0a268d21cda0d1a9717bd36" translate="yes" xml:space="preserve">
          <source>R.composeWith</source>
          <target state="translated">R.composeWith</target>
        </trans-unit>
        <trans-unit id="b3c3af52c09d52ba8a5006f7f630493a849468e2" translate="yes" xml:space="preserve">
          <source>R.concat</source>
          <target state="translated">R.concat</target>
        </trans-unit>
        <trans-unit id="8e572815bbdd09e76806ece03478a644df92d6cb" translate="yes" xml:space="preserve">
          <source>R.cond</source>
          <target state="translated">R.cond</target>
        </trans-unit>
        <trans-unit id="427cbf634aa120fc8b00f7c864c4a69e1f747ad5" translate="yes" xml:space="preserve">
          <source>R.construct</source>
          <target state="translated">R.construct</target>
        </trans-unit>
        <trans-unit id="fe9f23be643cfa68da657564494105d05bd9c44a" translate="yes" xml:space="preserve">
          <source>R.constructN</source>
          <target state="translated">R.constructN</target>
        </trans-unit>
        <trans-unit id="d5bf2a663bca862a54ad23cafd9a0a61f11b555e" translate="yes" xml:space="preserve">
          <source>R.contains</source>
          <target state="translated">R.contains</target>
        </trans-unit>
        <trans-unit id="641ddfa5e523965aeffa55fbbf2659cd19a26cf8" translate="yes" xml:space="preserve">
          <source>R.converge</source>
          <target state="translated">R.converge</target>
        </trans-unit>
        <trans-unit id="6cab4c091d365e7a25b562b56d4bbf384217ec81" translate="yes" xml:space="preserve">
          <source>R.countBy</source>
          <target state="translated">R.countBy</target>
        </trans-unit>
        <trans-unit id="f3791f9f341795aff354e39ca640e903f671b025" translate="yes" xml:space="preserve">
          <source>R.curry</source>
          <target state="translated">R.curry</target>
        </trans-unit>
        <trans-unit id="d5feaee617227a24c4e63ef93ed3f99afe2da66e" translate="yes" xml:space="preserve">
          <source>R.curryN</source>
          <target state="translated">R.curryN</target>
        </trans-unit>
        <trans-unit id="15148f99a817d4bf83b9e9e0b8dfee6e73bcbebc" translate="yes" xml:space="preserve">
          <source>R.dec</source>
          <target state="translated">R.dec</target>
        </trans-unit>
        <trans-unit id="b684cd8a0ccfd7f65c3fc6156689eb477cb32639" translate="yes" xml:space="preserve">
          <source>R.defaultTo</source>
          <target state="translated">R.defaultTo</target>
        </trans-unit>
        <trans-unit id="e86b7c5b0aa122018210cbe7b7d4df9e139ca300" translate="yes" xml:space="preserve">
          <source>R.descend</source>
          <target state="translated">R.descend</target>
        </trans-unit>
        <trans-unit id="ee0e4c91f0f809656d7a67c7189ba88f6125934d" translate="yes" xml:space="preserve">
          <source>R.difference</source>
          <target state="translated">R.difference</target>
        </trans-unit>
        <trans-unit id="6209ae32d86f16e89b9a3e8cea555a9192827e7b" translate="yes" xml:space="preserve">
          <source>R.differenceWith</source>
          <target state="translated">R.differenceWith</target>
        </trans-unit>
        <trans-unit id="d8b975de685550e89953277ca9557bbc679ca7af" translate="yes" xml:space="preserve">
          <source>R.dissoc</source>
          <target state="translated">R.dissoc</target>
        </trans-unit>
        <trans-unit id="754ec21efbd38f3cea0861767ae7f2118e0190ba" translate="yes" xml:space="preserve">
          <source>R.dissocPath</source>
          <target state="translated">R.dissocPath</target>
        </trans-unit>
        <trans-unit id="21ae7a1ba774ef50d4b74c46cd9bfe813f4a92ec" translate="yes" xml:space="preserve">
          <source>R.divide</source>
          <target state="translated">R.divide</target>
        </trans-unit>
        <trans-unit id="2ea42acee38a9918e9d9de63d63ba9a86a727fa7" translate="yes" xml:space="preserve">
          <source>R.drop</source>
          <target state="translated">R.drop</target>
        </trans-unit>
        <trans-unit id="bf8f787476102ea6bef25f944babd51f23a46dd0" translate="yes" xml:space="preserve">
          <source>R.dropLast</source>
          <target state="translated">R.dropLast</target>
        </trans-unit>
        <trans-unit id="cee47f5246e8166ccc2a3fcc6e87cfe5c99318ce" translate="yes" xml:space="preserve">
          <source>R.dropLastWhile</source>
          <target state="translated">R.dropLastWhile</target>
        </trans-unit>
        <trans-unit id="141cb25d1542a172292923b4234f7bc6fb6884d8" translate="yes" xml:space="preserve">
          <source>R.dropRepeats</source>
          <target state="translated">R.dropRepeats</target>
        </trans-unit>
        <trans-unit id="4588c39a537ef7e2d806597a018dbbff88624979" translate="yes" xml:space="preserve">
          <source>R.dropRepeatsWith</source>
          <target state="translated">R.dropRepeatsWith</target>
        </trans-unit>
        <trans-unit id="10a0d809709bb39901520420600b21ff5c58427b" translate="yes" xml:space="preserve">
          <source>R.dropWhile</source>
          <target state="translated">R.dropWhile</target>
        </trans-unit>
        <trans-unit id="28e735303c3d653f1b665b5b349c9d231bf82245" translate="yes" xml:space="preserve">
          <source>R.either</source>
          <target state="translated">R.either</target>
        </trans-unit>
        <trans-unit id="7aa10f83b505a20c09d8e964b96f0176db40dfc0" translate="yes" xml:space="preserve">
          <source>R.empty</source>
          <target state="translated">R.empty</target>
        </trans-unit>
        <trans-unit id="06b5433f7292f127540cbba3be9168caa54524c2" translate="yes" xml:space="preserve">
          <source>R.endsWith</source>
          <target state="translated">R.endsWith</target>
        </trans-unit>
        <trans-unit id="1d77ccf732b1fde9e812f486af2307cccc5f2c60" translate="yes" xml:space="preserve">
          <source>R.eqBy</source>
          <target state="translated">R.eqBy</target>
        </trans-unit>
        <trans-unit id="db511a4fd7c25de05b782ae18d35cca1c98592e8" translate="yes" xml:space="preserve">
          <source>R.eqProps</source>
          <target state="translated">R.eqProps</target>
        </trans-unit>
        <trans-unit id="08db65d037d17612a9d365de83bcd61b9818eec3" translate="yes" xml:space="preserve">
          <source>R.equals</source>
          <target state="translated">R.equals</target>
        </trans-unit>
        <trans-unit id="8d67a07e22f4754110ef2a129517faf4b0807fee" translate="yes" xml:space="preserve">
          <source>R.evolve</source>
          <target state="translated">R.evolve</target>
        </trans-unit>
        <trans-unit id="9c8fbb0734c4968ccd9455b3eeb2d4b7995a137b" translate="yes" xml:space="preserve">
          <source>R.filter</source>
          <target state="translated">R.filter</target>
        </trans-unit>
        <trans-unit id="832f53762e21e53f2305853c3c0ce2d417ce05c6" translate="yes" xml:space="preserve">
          <source>R.find</source>
          <target state="translated">R.find</target>
        </trans-unit>
        <trans-unit id="899e9951e001923786b2a536ad198766b4e98e1a" translate="yes" xml:space="preserve">
          <source>R.findIndex</source>
          <target state="translated">R.findIndex</target>
        </trans-unit>
        <trans-unit id="d30f95bd80759de4fa14111243d87c46a9c41ad0" translate="yes" xml:space="preserve">
          <source>R.findLast</source>
          <target state="translated">R.findLast</target>
        </trans-unit>
        <trans-unit id="9bc620acf931a2a0ddc7ba81fce5de7a840c2008" translate="yes" xml:space="preserve">
          <source>R.findLastIndex</source>
          <target state="translated">R.findLastIndex</target>
        </trans-unit>
        <trans-unit id="018466ff8ad6dca0e01d932e81141748e4768210" translate="yes" xml:space="preserve">
          <source>R.flatten</source>
          <target state="translated">R.flatten</target>
        </trans-unit>
        <trans-unit id="ba78fb1c8b2422a4abf78673cf1b73499d599343" translate="yes" xml:space="preserve">
          <source>R.flip</source>
          <target state="translated">R.flip</target>
        </trans-unit>
        <trans-unit id="bb1697cce7ffd57d212eaa78dfd21304b48482a1" translate="yes" xml:space="preserve">
          <source>R.forEach</source>
          <target state="translated">R.forEach</target>
        </trans-unit>
        <trans-unit id="17a1516b4d916fbfe5c6edc89e1fd22f844e7c7c" translate="yes" xml:space="preserve">
          <source>R.forEachObjIndexed</source>
          <target state="translated">R.forEachObjIndexed</target>
        </trans-unit>
        <trans-unit id="37db7927540bd5ccde0f20b50ed2478079c6363d" translate="yes" xml:space="preserve">
          <source>R.fromPairs</source>
          <target state="translated">R.fromPairs</target>
        </trans-unit>
        <trans-unit id="935d57c43eb4c540e3d5ecb12cd7ac776b29235c" translate="yes" xml:space="preserve">
          <source>R.groupBy</source>
          <target state="translated">R.groupBy</target>
        </trans-unit>
        <trans-unit id="b0ff4b33f0abaf2260a063b3c436edfcb4272403" translate="yes" xml:space="preserve">
          <source>R.groupWith</source>
          <target state="translated">R.groupWith</target>
        </trans-unit>
        <trans-unit id="c5419a96fe75bb7e0167753973d254e575a60254" translate="yes" xml:space="preserve">
          <source>R.gt</source>
          <target state="translated">R.gt</target>
        </trans-unit>
        <trans-unit id="1cecd3f3f1f724dcda5dc2c74df042c675399c35" translate="yes" xml:space="preserve">
          <source>R.gte</source>
          <target state="translated">R.gte</target>
        </trans-unit>
        <trans-unit id="7fdae58f8881be8aff05284f331ddeb580cb20ed" translate="yes" xml:space="preserve">
          <source>R.has</source>
          <target state="translated">R.has</target>
        </trans-unit>
        <trans-unit id="592f72689d491b9f51fc4e40faa468e1e4d1df35" translate="yes" xml:space="preserve">
          <source>R.hasIn</source>
          <target state="translated">R.hasIn</target>
        </trans-unit>
        <trans-unit id="2ba47bbc09e941434137c69e95090f96ee50d488" translate="yes" xml:space="preserve">
          <source>R.hasPath</source>
          <target state="translated">R.hasPath</target>
        </trans-unit>
        <trans-unit id="b6deaeb4a93bfb0cc978193e08b66d32201cb310" translate="yes" xml:space="preserve">
          <source>R.head</source>
          <target state="translated">R.head</target>
        </trans-unit>
        <trans-unit id="8f025beb3c3a0278ce3a89cc995ba51e4852151b" translate="yes" xml:space="preserve">
          <source>R.identical</source>
          <target state="translated">R.identical</target>
        </trans-unit>
        <trans-unit id="e01eccda033cb8a755b911064afc6c3d02964442" translate="yes" xml:space="preserve">
          <source>R.identity</source>
          <target state="translated">R.identity</target>
        </trans-unit>
        <trans-unit id="68797800dc5f7f4069fe6553ca3fda1a57aee981" translate="yes" xml:space="preserve">
          <source>R.ifElse</source>
          <target state="translated">R.ifElse</target>
        </trans-unit>
        <trans-unit id="5ce4c12f97f0a7572b53bb80a9229e5939191b8b" translate="yes" xml:space="preserve">
          <source>R.inc</source>
          <target state="translated">R.inc</target>
        </trans-unit>
        <trans-unit id="d7046ab45c57584a645464515ef9e38e5854f2cf" translate="yes" xml:space="preserve">
          <source>R.includes</source>
          <target state="translated">R.includes</target>
        </trans-unit>
        <trans-unit id="832c225df21caef0f00175c340e30abd21ac6481" translate="yes" xml:space="preserve">
          <source>R.indexBy</source>
          <target state="translated">R.indexBy</target>
        </trans-unit>
        <trans-unit id="08f4054222032eb3c37cde783b01190acaffb238" translate="yes" xml:space="preserve">
          <source>R.indexOf</source>
          <target state="translated">R.indexOf</target>
        </trans-unit>
        <trans-unit id="97781fcced01a8d4d60cafb62bcb90411b22f50b" translate="yes" xml:space="preserve">
          <source>R.init</source>
          <target state="translated">R.init</target>
        </trans-unit>
        <trans-unit id="fef3aff007ef6bfef6afb53d750e4c537f004560" translate="yes" xml:space="preserve">
          <source>R.innerJoin</source>
          <target state="translated">R.innerJoin</target>
        </trans-unit>
        <trans-unit id="6f74b1837cb854c33baa1a8a57098bee03beb56b" translate="yes" xml:space="preserve">
          <source>R.insert</source>
          <target state="translated">R.insert</target>
        </trans-unit>
        <trans-unit id="e2e519d5aca9d44c0575e747d29d4f983810b395" translate="yes" xml:space="preserve">
          <source>R.insertAll</source>
          <target state="translated">R.insertAll</target>
        </trans-unit>
        <trans-unit id="d854d9fb9a916c89430308cea625b43bbc9383f9" translate="yes" xml:space="preserve">
          <source>R.intersection</source>
          <target state="translated">R.intersection</target>
        </trans-unit>
        <trans-unit id="a102e6ce26f0c60357a994b81987275e8fffef23" translate="yes" xml:space="preserve">
          <source>R.intersperse</source>
          <target state="translated">R.intersperse</target>
        </trans-unit>
        <trans-unit id="0f86c681430477890ec7d00eacacb23200e6341b" translate="yes" xml:space="preserve">
          <source>R.into</source>
          <target state="translated">R.into</target>
        </trans-unit>
        <trans-unit id="58b7852072fa2fef9c72b682e178bad2875df5dc" translate="yes" xml:space="preserve">
          <source>R.invert</source>
          <target state="translated">R.invert</target>
        </trans-unit>
        <trans-unit id="a778ef3d4986dcd92ae22e6c90d5c769452d1a9d" translate="yes" xml:space="preserve">
          <source>R.invertObj</source>
          <target state="translated">R.invertObj</target>
        </trans-unit>
        <trans-unit id="a7f15df0e8501f7515bf473dbf1d4d3e1dc971b7" translate="yes" xml:space="preserve">
          <source>R.invoker</source>
          <target state="translated">R.invoker</target>
        </trans-unit>
        <trans-unit id="bfc38eb5ffd2bdda3a541289073205df59bf5cdc" translate="yes" xml:space="preserve">
          <source>R.is</source>
          <target state="translated">R.is</target>
        </trans-unit>
        <trans-unit id="74a0a1e9c5d2cd3b2fcdbc0a90dff406ee0e804b" translate="yes" xml:space="preserve">
          <source>R.isEmpty</source>
          <target state="translated">R.isEmpty</target>
        </trans-unit>
        <trans-unit id="283b18a807a4c71e92aaba18d9651995c2351d08" translate="yes" xml:space="preserve">
          <source>R.isNil</source>
          <target state="translated">R.isNil</target>
        </trans-unit>
        <trans-unit id="c0adfd2836b60a06286bbe7b059d88d0628380bb" translate="yes" xml:space="preserve">
          <source>R.join</source>
          <target state="translated">R.join</target>
        </trans-unit>
        <trans-unit id="a54a8a2fb999ac78c0c14c2bf5f97a305e74cb1c" translate="yes" xml:space="preserve">
          <source>R.juxt</source>
          <target state="translated">R.juxt</target>
        </trans-unit>
        <trans-unit id="b0c5b566bda1c4e60ea16853428998792356632d" translate="yes" xml:space="preserve">
          <source>R.keys</source>
          <target state="translated">R.keys</target>
        </trans-unit>
        <trans-unit id="8dade292597c9606727bae0092b5fccf305cd1c0" translate="yes" xml:space="preserve">
          <source>R.keysIn</source>
          <target state="translated">R.keysIn</target>
        </trans-unit>
        <trans-unit id="fecb49de7f29ecce6b8c7a2aecdf7e2d8152f347" translate="yes" xml:space="preserve">
          <source>R.last</source>
          <target state="translated">R.last</target>
        </trans-unit>
        <trans-unit id="0e6b1b5ae34431fd7a0151ad64ed5d833319eae3" translate="yes" xml:space="preserve">
          <source>R.lastIndexOf</source>
          <target state="translated">R.lastIndexOf</target>
        </trans-unit>
        <trans-unit id="db1d119b7dd24679f85325e98cb30485c85dde76" translate="yes" xml:space="preserve">
          <source>R.length</source>
          <target state="translated">R.length</target>
        </trans-unit>
        <trans-unit id="f94ac2411a69a08d34efa9f40579eb356f1d053e" translate="yes" xml:space="preserve">
          <source>R.lens</source>
          <target state="translated">R.lens</target>
        </trans-unit>
        <trans-unit id="ff30c4eda6f70d47dd096646faa25d285ea9315d" translate="yes" xml:space="preserve">
          <source>R.lensIndex</source>
          <target state="translated">R.lensIndex</target>
        </trans-unit>
        <trans-unit id="0f99e087c5bdf3366b19a86fc06136f721ec562d" translate="yes" xml:space="preserve">
          <source>R.lensPath</source>
          <target state="translated">R.lensPath</target>
        </trans-unit>
        <trans-unit id="2703331125f5e404f0c1cab78ab62a6307a68c90" translate="yes" xml:space="preserve">
          <source>R.lensProp</source>
          <target state="translated">R.lensProp</target>
        </trans-unit>
        <trans-unit id="8089085c8ea5a0ed105ebb191d2a63d6d68d3d01" translate="yes" xml:space="preserve">
          <source>R.lift</source>
          <target state="translated">R.lift</target>
        </trans-unit>
        <trans-unit id="af0d261858d1cc003daa519e9737cce10b4b8b99" translate="yes" xml:space="preserve">
          <source>R.liftN</source>
          <target state="translated">R.liftN</target>
        </trans-unit>
        <trans-unit id="e6fd830dcb962e421195c7cec012975b5528216e" translate="yes" xml:space="preserve">
          <source>R.lt</source>
          <target state="translated">R.lt</target>
        </trans-unit>
        <trans-unit id="ec73fc973ebd0716d4c3d4e2d668cf9f1fab0a82" translate="yes" xml:space="preserve">
          <source>R.lte</source>
          <target state="translated">R.lte</target>
        </trans-unit>
        <trans-unit id="3007e2c336364f5c40f4f4806cf35612c7de0f6f" translate="yes" xml:space="preserve">
          <source>R.map</source>
          <target state="translated">R.map</target>
        </trans-unit>
        <trans-unit id="97d3f70ba21f72daf2d7d2bc69c5cef9069ed140" translate="yes" xml:space="preserve">
          <source>R.mapAccum</source>
          <target state="translated">R.mapAccum</target>
        </trans-unit>
        <trans-unit id="80d60b08579db420c2f2c4b006eae3b2703706d9" translate="yes" xml:space="preserve">
          <source>R.mapAccumRight</source>
          <target state="translated">R.mapAccumRight</target>
        </trans-unit>
        <trans-unit id="7369446c7fc8c4a8b95b42a823494989494b39da" translate="yes" xml:space="preserve">
          <source>R.mapObjIndexed</source>
          <target state="translated">R.mapObjIndexed</target>
        </trans-unit>
        <trans-unit id="924d68d7803fc7028188716facdf4d6c46b336a9" translate="yes" xml:space="preserve">
          <source>R.match</source>
          <target state="translated">R.match</target>
        </trans-unit>
        <trans-unit id="75c0c775ed30c7d3ee5b7852b2184cacf67ba3ee" translate="yes" xml:space="preserve">
          <source>R.mathMod</source>
          <target state="translated">R.mathMod</target>
        </trans-unit>
        <trans-unit id="d714a999e63c1e1578b17840b621e6ed6baeb5b5" translate="yes" xml:space="preserve">
          <source>R.max</source>
          <target state="translated">R.max</target>
        </trans-unit>
        <trans-unit id="95d47b3f5923e87983b28743a107bef64560044e" translate="yes" xml:space="preserve">
          <source>R.maxBy</source>
          <target state="translated">R.maxBy</target>
        </trans-unit>
        <trans-unit id="37217e96cbbbdf5b525c89c7c316362621050140" translate="yes" xml:space="preserve">
          <source>R.mean</source>
          <target state="translated">R.mean</target>
        </trans-unit>
        <trans-unit id="8c71a03b49ae55b2440b10426dd0e9082cbf694a" translate="yes" xml:space="preserve">
          <source>R.median</source>
          <target state="translated">R.median</target>
        </trans-unit>
        <trans-unit id="b8cded80cc637336f055c975cddbdd835e1e8104" translate="yes" xml:space="preserve">
          <source>R.memoizeWith</source>
          <target state="translated">R.memoizeWith</target>
        </trans-unit>
        <trans-unit id="f15b9963eb29dd99cd9b886d75bdca138c078677" translate="yes" xml:space="preserve">
          <source>R.merge</source>
          <target state="translated">R.merge</target>
        </trans-unit>
        <trans-unit id="1222cf0818db003f8b1d22a23eb662f127b75203" translate="yes" xml:space="preserve">
          <source>R.mergeAll</source>
          <target state="translated">R.mergeAll</target>
        </trans-unit>
        <trans-unit id="78cc2a2b8a5596b69b64bca87d3f752bd939209a" translate="yes" xml:space="preserve">
          <source>R.mergeDeepLeft</source>
          <target state="translated">R.mergeDeepLeft</target>
        </trans-unit>
        <trans-unit id="4bfb9e632a42d1c8ff1e4d829f9a7894d822ab18" translate="yes" xml:space="preserve">
          <source>R.mergeDeepRight</source>
          <target state="translated">R.mergeDeepRight</target>
        </trans-unit>
        <trans-unit id="075f0a5a6c842378df056d75f818525a46f5d74e" translate="yes" xml:space="preserve">
          <source>R.mergeDeepWith</source>
          <target state="translated">R.mergeDeepWith</target>
        </trans-unit>
        <trans-unit id="8b816cc830bf6885c72dfa29a4e4ca5e91b33327" translate="yes" xml:space="preserve">
          <source>R.mergeDeepWithKey</source>
          <target state="translated">R.mergeDeepWithKey</target>
        </trans-unit>
        <trans-unit id="873f65ec2eccd9cfc22316f2bb34730df4b7188c" translate="yes" xml:space="preserve">
          <source>R.mergeLeft</source>
          <target state="translated">R.mergeLeft</target>
        </trans-unit>
        <trans-unit id="306841aaec99029919d452270c9b6889e41b006d" translate="yes" xml:space="preserve">
          <source>R.mergeRight</source>
          <target state="translated">R.mergeRight</target>
        </trans-unit>
        <trans-unit id="217b92b0e16be726ecac187d4160af5a41fc9ef1" translate="yes" xml:space="preserve">
          <source>R.mergeWith</source>
          <target state="translated">R.mergeWith</target>
        </trans-unit>
        <trans-unit id="0e662151866296da56eb7c2c0450c8e0994d88a0" translate="yes" xml:space="preserve">
          <source>R.mergeWithKey</source>
          <target state="translated">R.mergeWithKey</target>
        </trans-unit>
        <trans-unit id="2aea119e7b6ebc4d2280fc6340f1a19173caffd1" translate="yes" xml:space="preserve">
          <source>R.min</source>
          <target state="translated">R.min</target>
        </trans-unit>
        <trans-unit id="adadcd261385e2f6f3462294123e5bbf9135ba76" translate="yes" xml:space="preserve">
          <source>R.minBy</source>
          <target state="translated">R.minBy</target>
        </trans-unit>
        <trans-unit id="defc226296fe6a23440724c7a877cefc9b936d3b" translate="yes" xml:space="preserve">
          <source>R.modulo</source>
          <target state="translated">R.modulo</target>
        </trans-unit>
        <trans-unit id="f63e4e9597dfdd8d6037ead41126265f0d55bb08" translate="yes" xml:space="preserve">
          <source>R.move</source>
          <target state="translated">R.move</target>
        </trans-unit>
        <trans-unit id="a982bbf91a09ae20c8318acd70611a281aa21090" translate="yes" xml:space="preserve">
          <source>R.multiply</source>
          <target state="translated">R.multiply</target>
        </trans-unit>
        <trans-unit id="ce72999739826e2833e4c973b91edf9b6fe4d6f6" translate="yes" xml:space="preserve">
          <source>R.nAry</source>
          <target state="translated">R.nAry</target>
        </trans-unit>
        <trans-unit id="84c7f3fc06b9f3b812079e9df80d173f00ffda31" translate="yes" xml:space="preserve">
          <source>R.negate</source>
          <target state="translated">R.negate</target>
        </trans-unit>
        <trans-unit id="359117b68e76a4fff6e9bc8d0d0b0f33b8f88587" translate="yes" xml:space="preserve">
          <source>R.none</source>
          <target state="translated">R.none</target>
        </trans-unit>
        <trans-unit id="d02f612cbcf2108083ec6a5a283cb8bcdb8bc3fd" translate="yes" xml:space="preserve">
          <source>R.not</source>
          <target state="translated">R.not</target>
        </trans-unit>
        <trans-unit id="0cd5b8d04289704915bce26ddecc28d0b49066f7" translate="yes" xml:space="preserve">
          <source>R.nth</source>
          <target state="translated">R.nth</target>
        </trans-unit>
        <trans-unit id="7077ec9b1fa342036930fc32870b14c9fd92597d" translate="yes" xml:space="preserve">
          <source>R.nthArg</source>
          <target state="translated">R.nthArg</target>
        </trans-unit>
        <trans-unit id="e675783f9c2f5d7cd4efae29450673a4fce4a328" translate="yes" xml:space="preserve">
          <source>R.o</source>
          <target state="translated">R.o</target>
        </trans-unit>
        <trans-unit id="b0eb072276fcf7ba273115342289d778812d0a7c" translate="yes" xml:space="preserve">
          <source>R.objOf</source>
          <target state="translated">R.objOf</target>
        </trans-unit>
        <trans-unit id="c9e94dace225691823090da7a121acd2b0e566d0" translate="yes" xml:space="preserve">
          <source>R.of</source>
          <target state="translated">R.of</target>
        </trans-unit>
        <trans-unit id="0f570b115c1a580a65e91abfedfdd7f3e0783ccf" translate="yes" xml:space="preserve">
          <source>R.omit</source>
          <target state="translated">R.omit</target>
        </trans-unit>
        <trans-unit id="641d5794ffa2ca734afc17b2caf76f86d3b2ade9" translate="yes" xml:space="preserve">
          <source>R.once</source>
          <target state="translated">R.once</target>
        </trans-unit>
        <trans-unit id="b96567db433241ad5df6814654f7b3758f941755" translate="yes" xml:space="preserve">
          <source>R.or</source>
          <target state="translated">R.or</target>
        </trans-unit>
        <trans-unit id="531eb9b3c989b3a07d8f3280def3e084c5f7fb97" translate="yes" xml:space="preserve">
          <source>R.otherwise</source>
          <target state="translated">R.otherwise</target>
        </trans-unit>
        <trans-unit id="6c270e60ad0146a3fd387cea842fc6e095632b0c" translate="yes" xml:space="preserve">
          <source>R.over</source>
          <target state="translated">R.over</target>
        </trans-unit>
        <trans-unit id="2cf7ede35a751a6f17585d93c80c3b08e05773aa" translate="yes" xml:space="preserve">
          <source>R.pair</source>
          <target state="translated">R.pair</target>
        </trans-unit>
        <trans-unit id="2df96eae5831e882ddb6563d5b283b728e561ebd" translate="yes" xml:space="preserve">
          <source>R.partial</source>
          <target state="translated">R.partial</target>
        </trans-unit>
        <trans-unit id="eda6ad3a226e5e776c64e29715190808e353b827" translate="yes" xml:space="preserve">
          <source>R.partialRight</source>
          <target state="translated">R.partialRight</target>
        </trans-unit>
        <trans-unit id="90166de7824f04112a11755a14ade239e40cfbc8" translate="yes" xml:space="preserve">
          <source>R.partition</source>
          <target state="translated">R.partition</target>
        </trans-unit>
        <trans-unit id="a9daad8ab62c7f09cae443d9b81e55cf4e3186c8" translate="yes" xml:space="preserve">
          <source>R.path</source>
          <target state="translated">R.path</target>
        </trans-unit>
        <trans-unit id="d1112d4f6e807a455c05b8bcae85df512b0fda6d" translate="yes" xml:space="preserve">
          <source>R.pathEq</source>
          <target state="translated">R.pathEq</target>
        </trans-unit>
        <trans-unit id="cd9c62316ee7c67ec8b3e570163e7ae00de9ed77" translate="yes" xml:space="preserve">
          <source>R.pathOr</source>
          <target state="translated">R.pathOr</target>
        </trans-unit>
        <trans-unit id="d839d584f31a32b0c42d09b8973ea59168b0a41e" translate="yes" xml:space="preserve">
          <source>R.pathSatisfies</source>
          <target state="translated">R.pathSatisfies</target>
        </trans-unit>
        <trans-unit id="ad58ef14e35973e43ba46405b8cda1d0853ef614" translate="yes" xml:space="preserve">
          <source>R.pick</source>
          <target state="translated">R.pick</target>
        </trans-unit>
        <trans-unit id="3e8a9976053ba9ddcb14e8fe959c8a8d26b61301" translate="yes" xml:space="preserve">
          <source>R.pickAll</source>
          <target state="translated">R.pickAll</target>
        </trans-unit>
        <trans-unit id="fb9a934dd51ac4dd768584c654c43ab9013ab610" translate="yes" xml:space="preserve">
          <source>R.pickBy</source>
          <target state="translated">R.pickBy</target>
        </trans-unit>
        <trans-unit id="d52237e19c88ff2422fef304d2e69fddf49fe25a" translate="yes" xml:space="preserve">
          <source>R.pipe</source>
          <target state="translated">R.pipe</target>
        </trans-unit>
        <trans-unit id="8864cd50e3bbf8fe740b6a11ae5a0ba46d0fb143" translate="yes" xml:space="preserve">
          <source>R.pipeK</source>
          <target state="translated">R.pipeK</target>
        </trans-unit>
        <trans-unit id="7b4f23766b1f641193a5b6a4ae438632d1e550f5" translate="yes" xml:space="preserve">
          <source>R.pipeP</source>
          <target state="translated">R.pipeP</target>
        </trans-unit>
        <trans-unit id="5e3f6880b41d5f375d1fe97cf7a271fb18053db7" translate="yes" xml:space="preserve">
          <source>R.pipeWith</source>
          <target state="translated">R.pipeWith</target>
        </trans-unit>
        <trans-unit id="87fc6fcf1211f4fb20738129b9341e63347d6116" translate="yes" xml:space="preserve">
          <source>R.pluck</source>
          <target state="translated">R.pluck</target>
        </trans-unit>
        <trans-unit id="c5d13b835b4e10dca3d5895304fc1e669d35e246" translate="yes" xml:space="preserve">
          <source>R.prepend</source>
          <target state="translated">R.prepend</target>
        </trans-unit>
        <trans-unit id="cddae5eb21ce9d60e483ff2fe519088d6d0bf316" translate="yes" xml:space="preserve">
          <source>R.product</source>
          <target state="translated">R.product</target>
        </trans-unit>
        <trans-unit id="1259ce612a8340f8885e1bfa36bdd3701ff541e8" translate="yes" xml:space="preserve">
          <source>R.project</source>
          <target state="translated">R.project</target>
        </trans-unit>
        <trans-unit id="7554edc87ac8bf6ea440f01a88291dd1dd794068" translate="yes" xml:space="preserve">
          <source>R.prop</source>
          <target state="translated">R.prop</target>
        </trans-unit>
        <trans-unit id="dd37ac263e63a2031bd4e80c782711681b8e3585" translate="yes" xml:space="preserve">
          <source>R.propEq</source>
          <target state="translated">R.propEq</target>
        </trans-unit>
        <trans-unit id="592cc7cfc42fa387a2c7b7a01944c1c7c64f4ffb" translate="yes" xml:space="preserve">
          <source>R.propIs</source>
          <target state="translated">R.propIs</target>
        </trans-unit>
        <trans-unit id="557a6ba9f09b1185763b187a97f6f35d03441a67" translate="yes" xml:space="preserve">
          <source>R.propOr</source>
          <target state="translated">R.propOr</target>
        </trans-unit>
        <trans-unit id="9f56b054b5f4d618666c403a5a976b48c61170b3" translate="yes" xml:space="preserve">
          <source>R.propSatisfies</source>
          <target state="translated">R.propSatisfies</target>
        </trans-unit>
        <trans-unit id="e95c429a7b828dc076b9034342a04e1a94e42a90" translate="yes" xml:space="preserve">
          <source>R.props</source>
          <target state="translated">R.props</target>
        </trans-unit>
        <trans-unit id="5163621249490759a16a51444ea205879d942f24" translate="yes" xml:space="preserve">
          <source>R.range</source>
          <target state="translated">R.range</target>
        </trans-unit>
        <trans-unit id="d471dd83b4b7b0e81444c63c4d00d84969b6c5ae" translate="yes" xml:space="preserve">
          <source>R.reduce</source>
          <target state="translated">R.reduce</target>
        </trans-unit>
        <trans-unit id="08091a4d1ef9444ce1a9f6584d42f596521fc18c" translate="yes" xml:space="preserve">
          <source>R.reduceBy</source>
          <target state="translated">R.reduceBy</target>
        </trans-unit>
        <trans-unit id="7b618e1505c9a9f3e82a3e3ab66a97e34e502d79" translate="yes" xml:space="preserve">
          <source>R.reduceRight</source>
          <target state="translated">R.reduceRight</target>
        </trans-unit>
        <trans-unit id="0e9ce7e303f32cf414681d20e75a8a9e915c00c1" translate="yes" xml:space="preserve">
          <source>R.reduceWhile</source>
          <target state="translated">R.reduceWhile</target>
        </trans-unit>
        <trans-unit id="39ccd248dbfd8461da52de7f6564d13144fa97c1" translate="yes" xml:space="preserve">
          <source>R.reduced</source>
          <target state="translated">R.reduced</target>
        </trans-unit>
        <trans-unit id="5727276a29fad77b633939b8862b8775186d7697" translate="yes" xml:space="preserve">
          <source>R.reject</source>
          <target state="translated">R.reject</target>
        </trans-unit>
        <trans-unit id="377d1e1ce2924464ff0ae4ee4bc3d19b24165881" translate="yes" xml:space="preserve">
          <source>R.remove</source>
          <target state="translated">R.remove</target>
        </trans-unit>
        <trans-unit id="4e4f9750b71731bf8be9cde56f7791d793e2e439" translate="yes" xml:space="preserve">
          <source>R.repeat</source>
          <target state="translated">R.repeat</target>
        </trans-unit>
        <trans-unit id="1b0742f17be25ed35128e100d2bde6c46b91d3f9" translate="yes" xml:space="preserve">
          <source>R.replace</source>
          <target state="translated">R.replace</target>
        </trans-unit>
        <trans-unit id="1c12ea0e4f42d1ddaf34af73600572d5ba1539f6" translate="yes" xml:space="preserve">
          <source>R.reverse</source>
          <target state="translated">R.reverse</target>
        </trans-unit>
        <trans-unit id="17e804d66c19182a4006f61c6e696a0cb9a59adc" translate="yes" xml:space="preserve">
          <source>R.scan</source>
          <target state="translated">R.scan</target>
        </trans-unit>
        <trans-unit id="c106fd95197d61c21fcba50e5b7c037a6359b542" translate="yes" xml:space="preserve">
          <source>R.sequence</source>
          <target state="translated">R.sequence</target>
        </trans-unit>
        <trans-unit id="5229cbaf010628e5b55e20dbfdf3b14d164305d6" translate="yes" xml:space="preserve">
          <source>R.set</source>
          <target state="translated">R.set</target>
        </trans-unit>
        <trans-unit id="a3b12408c1a31b9b3efdbfe60ecbbbc441a90b5a" translate="yes" xml:space="preserve">
          <source>R.slice</source>
          <target state="translated">R.slice</target>
        </trans-unit>
        <trans-unit id="12ecc7332e9dd85b08194f59718e71cc829d9d1f" translate="yes" xml:space="preserve">
          <source>R.sort</source>
          <target state="translated">R.sort</target>
        </trans-unit>
        <trans-unit id="11d71dbacc2559840c6636b3ce3684758729df8e" translate="yes" xml:space="preserve">
          <source>R.sortBy</source>
          <target state="translated">R.sortBy</target>
        </trans-unit>
        <trans-unit id="0a7e4890ec44053e131ffad58e09ac7e5c444c77" translate="yes" xml:space="preserve">
          <source>R.sortWith</source>
          <target state="translated">R.sortWith</target>
        </trans-unit>
        <trans-unit id="dee7e41daf4437c2f0caf6f3aca020ebb23f8c15" translate="yes" xml:space="preserve">
          <source>R.split</source>
          <target state="translated">R.split</target>
        </trans-unit>
        <trans-unit id="b5ab56df0b3eecd6fd131075614e6418a347639b" translate="yes" xml:space="preserve">
          <source>R.splitAt</source>
          <target state="translated">R.splitAt</target>
        </trans-unit>
        <trans-unit id="a57d031ce3bf45fd68050041241a2c0ffce73f32" translate="yes" xml:space="preserve">
          <source>R.splitEvery</source>
          <target state="translated">R.splitEvery</target>
        </trans-unit>
        <trans-unit id="5aab23dc15d9449abf2645733173b06cfba81420" translate="yes" xml:space="preserve">
          <source>R.splitWhen</source>
          <target state="translated">R.splitWhen</target>
        </trans-unit>
        <trans-unit id="d3190c6337b779df25b5da982d20220b84b68b7a" translate="yes" xml:space="preserve">
          <source>R.startsWith</source>
          <target state="translated">R.startsWith</target>
        </trans-unit>
        <trans-unit id="a1e184fe5caefb4581229eae3e217ba09037f00a" translate="yes" xml:space="preserve">
          <source>R.subtract</source>
          <target state="translated">R.subtract</target>
        </trans-unit>
        <trans-unit id="9d939f5f80d00b27e2f35b9a82a361d138514f2e" translate="yes" xml:space="preserve">
          <source>R.sum</source>
          <target state="translated">R.sum</target>
        </trans-unit>
        <trans-unit id="1a271e5f9c3ef1f4ef86bbe8cb5302daba1a9329" translate="yes" xml:space="preserve">
          <source>R.symmetricDifference</source>
          <target state="translated">R.symmetricDifference</target>
        </trans-unit>
        <trans-unit id="3485ca5356980ed6e85f009e785904c8a3d66061" translate="yes" xml:space="preserve">
          <source>R.symmetricDifferenceWith</source>
          <target state="translated">R.symmetricDifferenceWith</target>
        </trans-unit>
        <trans-unit id="b44403cb660f399f3481910b52e335c28b638eb1" translate="yes" xml:space="preserve">
          <source>R.tail</source>
          <target state="translated">R.tail</target>
        </trans-unit>
        <trans-unit id="3bd267df29f5be0d90dea80911bc78d991644e82" translate="yes" xml:space="preserve">
          <source>R.take</source>
          <target state="translated">R.take</target>
        </trans-unit>
        <trans-unit id="c4c9aa6ebc4ad7a4ef8db950786bc8afd43ae8c0" translate="yes" xml:space="preserve">
          <source>R.takeLast</source>
          <target state="translated">R.takeLast</target>
        </trans-unit>
        <trans-unit id="f95d208cb17587918ee2c5f97621b4ee171048dd" translate="yes" xml:space="preserve">
          <source>R.takeLastWhile</source>
          <target state="translated">R.takeLastWhile</target>
        </trans-unit>
        <trans-unit id="7e3524848b8caa18235fe95b028b016ad5c856f4" translate="yes" xml:space="preserve">
          <source>R.takeWhile</source>
          <target state="translated">R.takeWhile</target>
        </trans-unit>
        <trans-unit id="cf7a80f492dd8f3a885201ff31ec35ae945ec705" translate="yes" xml:space="preserve">
          <source>R.tap</source>
          <target state="translated">R.tap</target>
        </trans-unit>
        <trans-unit id="7eacbfc4f4b4d73056fa7129ee0e33e99b24b660" translate="yes" xml:space="preserve">
          <source>R.test</source>
          <target state="translated">R.test</target>
        </trans-unit>
        <trans-unit id="521af65ea536bfc85ee987c4c29f563dbe7f727c" translate="yes" xml:space="preserve">
          <source>R.then</source>
          <target state="translated">R.then</target>
        </trans-unit>
        <trans-unit id="5efa20cd089e8486dc7094e83a23772343b74080" translate="yes" xml:space="preserve">
          <source>R.thunkify</source>
          <target state="translated">R.thunkify</target>
        </trans-unit>
        <trans-unit id="4b55a7570bc698df36a4245b2ccc5f516f7b7522" translate="yes" xml:space="preserve">
          <source>R.times</source>
          <target state="translated">R.times</target>
        </trans-unit>
        <trans-unit id="469e31ad891f0270b2c6d8db82e87f5e99d7e011" translate="yes" xml:space="preserve">
          <source>R.toLower</source>
          <target state="translated">R.toLower</target>
        </trans-unit>
        <trans-unit id="db8ad89e38a5194e8d33e7ea5b22eaf4f19cc519" translate="yes" xml:space="preserve">
          <source>R.toPairs</source>
          <target state="translated">R.toPairs</target>
        </trans-unit>
        <trans-unit id="50a4ae7027069fc65ce1b2cb89458295a6e517eb" translate="yes" xml:space="preserve">
          <source>R.toPairsIn</source>
          <target state="translated">R.toPairsIn</target>
        </trans-unit>
        <trans-unit id="b96d6a530f359f4be9d7171e55b43ed615185a90" translate="yes" xml:space="preserve">
          <source>R.toString</source>
          <target state="translated">R.toString</target>
        </trans-unit>
        <trans-unit id="645c3e5c3c575d86e5648dd2cbc4ecd5be68274a" translate="yes" xml:space="preserve">
          <source>R.toUpper</source>
          <target state="translated">R.toUpper</target>
        </trans-unit>
        <trans-unit id="b6d5fe7710119df76de916f90d8ebb559d3d718e" translate="yes" xml:space="preserve">
          <source>R.transduce</source>
          <target state="translated">R.transduce</target>
        </trans-unit>
        <trans-unit id="4be01e977d3122c2795994651c7a653c7e192ab7" translate="yes" xml:space="preserve">
          <source>R.transpose</source>
          <target state="translated">R.transpose</target>
        </trans-unit>
        <trans-unit id="49b614f206108d7ef07316b68f4e562aadf29cb7" translate="yes" xml:space="preserve">
          <source>R.traverse</source>
          <target state="translated">R.traverse</target>
        </trans-unit>
        <trans-unit id="dd2f89270f6d9340e786459a99a0055fe7d87322" translate="yes" xml:space="preserve">
          <source>R.trim</source>
          <target state="translated">R.trim</target>
        </trans-unit>
        <trans-unit id="64172915714de947969389566608c5a4b358479b" translate="yes" xml:space="preserve">
          <source>R.tryCatch</source>
          <target state="translated">R.tryCatch</target>
        </trans-unit>
        <trans-unit id="951ed9459fdebc0a68f8914533e2849d76b79ab6" translate="yes" xml:space="preserve">
          <source>R.type</source>
          <target state="translated">R.type</target>
        </trans-unit>
        <trans-unit id="8084de1289c6d8335286de799de9ea3dd3927a70" translate="yes" xml:space="preserve">
          <source>R.unapply</source>
          <target state="translated">R.unapply</target>
        </trans-unit>
        <trans-unit id="d77033c7641e3f99584fbe5d5a65448a3ddbbbc2" translate="yes" xml:space="preserve">
          <source>R.unary</source>
          <target state="translated">R.unary</target>
        </trans-unit>
        <trans-unit id="f2d5e8287e77a0ee87223bc3d9ae6b5c9e8f0a91" translate="yes" xml:space="preserve">
          <source>R.uncurryN</source>
          <target state="translated">R.uncurryN</target>
        </trans-unit>
        <trans-unit id="a0b7788d5a4275671ed08de38ad14cf84b96f333" translate="yes" xml:space="preserve">
          <source>R.unfold</source>
          <target state="translated">R.unfold</target>
        </trans-unit>
        <trans-unit id="29e72b5948faa8b658a0f1f61173ffde391c10c7" translate="yes" xml:space="preserve">
          <source>R.union</source>
          <target state="translated">R.union</target>
        </trans-unit>
        <trans-unit id="afab5b168d8683e502b287b506fd0a03f00854f9" translate="yes" xml:space="preserve">
          <source>R.unionWith</source>
          <target state="translated">R.unionWith</target>
        </trans-unit>
        <trans-unit id="a3315f2dd6a0334c79a8c3aff941ecee3777c93a" translate="yes" xml:space="preserve">
          <source>R.uniq</source>
          <target state="translated">R.uniq</target>
        </trans-unit>
        <trans-unit id="9a3fc47c4040642c18e28a69a573ed6be833a63c" translate="yes" xml:space="preserve">
          <source>R.uniqBy</source>
          <target state="translated">R.uniqBy</target>
        </trans-unit>
        <trans-unit id="fd49c5297a1768143d7009f63f6d020d8f13fad1" translate="yes" xml:space="preserve">
          <source>R.uniqWith</source>
          <target state="translated">R.uniqWith</target>
        </trans-unit>
        <trans-unit id="db7cad673638e850ee986731269ac2a81cbff7fa" translate="yes" xml:space="preserve">
          <source>R.unless</source>
          <target state="translated">R.unless</target>
        </trans-unit>
        <trans-unit id="3643c05eedd5dc0d202f27fabe94be7a4270abca" translate="yes" xml:space="preserve">
          <source>R.unnest</source>
          <target state="translated">R.unnest</target>
        </trans-unit>
        <trans-unit id="1102b3204fd9ab013c5378e42531e7282ef01499" translate="yes" xml:space="preserve">
          <source>R.until</source>
          <target state="translated">R.until</target>
        </trans-unit>
        <trans-unit id="790e40b886ce1f07b92f4d7edf414a10297041d4" translate="yes" xml:space="preserve">
          <source>R.update</source>
          <target state="translated">R.update</target>
        </trans-unit>
        <trans-unit id="457d4d8f46622918829e1151a6f98f4a1bb40aa8" translate="yes" xml:space="preserve">
          <source>R.useWith</source>
          <target state="translated">R.useWith</target>
        </trans-unit>
        <trans-unit id="fa58924b5cff7e638e597dc83948ffa79a9af2c2" translate="yes" xml:space="preserve">
          <source>R.values</source>
          <target state="translated">R.values</target>
        </trans-unit>
        <trans-unit id="b9de27cb4346bf147290ed6df22064ffb4e7d60d" translate="yes" xml:space="preserve">
          <source>R.valuesIn</source>
          <target state="translated">R.valuesIn</target>
        </trans-unit>
        <trans-unit id="ce090d9a6895eff9e490c3b8c26f464ae4d23c15" translate="yes" xml:space="preserve">
          <source>R.view</source>
          <target state="translated">R.view</target>
        </trans-unit>
        <trans-unit id="f4aac7442ca06f317a7869fcbf722e2afd4b76ef" translate="yes" xml:space="preserve">
          <source>R.when</source>
          <target state="translated">R.when</target>
        </trans-unit>
        <trans-unit id="d45ac7d2049d601d8a174ea44ed37a1d2e9d45a7" translate="yes" xml:space="preserve">
          <source>R.where</source>
          <target state="translated">R.where</target>
        </trans-unit>
        <trans-unit id="20c7a3b37f7221f309cc87f654dbae7fb1a54c45" translate="yes" xml:space="preserve">
          <source>R.whereEq</source>
          <target state="translated">R.whereEq</target>
        </trans-unit>
        <trans-unit id="d8b19dabe14c67ed118260531f4a3fa27c61f082" translate="yes" xml:space="preserve">
          <source>R.without</source>
          <target state="translated">R.without</target>
        </trans-unit>
        <trans-unit id="fd8da1c37e578f4d986c1906e9ac5996db829461" translate="yes" xml:space="preserve">
          <source>R.xprod</source>
          <target state="translated">R.xprod</target>
        </trans-unit>
        <trans-unit id="ab750caf3a07356498dee1cc52d83e96f66e1270" translate="yes" xml:space="preserve">
          <source>R.zip</source>
          <target state="translated">R.zip</target>
        </trans-unit>
        <trans-unit id="ffc7ceb2608925522bd084761abd2a82d45dc5c2" translate="yes" xml:space="preserve">
          <source>R.zipObj</source>
          <target state="translated">R.zipObj</target>
        </trans-unit>
        <trans-unit id="a23d56d457c83eefe242a8d971b3497d05699b3d" translate="yes" xml:space="preserve">
          <source>R.zipWith</source>
          <target state="translated">R.zipWith</target>
        </trans-unit>
        <trans-unit id="0f10cf3a31fc2cdd67127642a0e49858c826d7ac" translate="yes" xml:space="preserve">
          <source>Ramda</source>
          <target state="translated">Ramda</target>
        </trans-unit>
        <trans-unit id="e9481fe997d82f8e823229a8c78416436264ad7a" translate="yes" xml:space="preserve">
          <source>Ramda provides suitable &lt;code&gt;map&lt;/code&gt; implementations for &lt;code&gt;Array&lt;/code&gt; and &lt;code&gt;Object&lt;/code&gt;, so this function may be applied to &lt;code&gt;[1, 2, 3]&lt;/code&gt; or &lt;code&gt;{x: 1, y: 2, z: 3}&lt;/code&gt;.</source>
          <target state="translated">Ramdaは &lt;code&gt;Array&lt;/code&gt; および &lt;code&gt;Object&lt;/code&gt; に適切な &lt;code&gt;map&lt;/code&gt; 実装を提供しているため、この関数は &lt;code&gt;[1, 2, 3]&lt;/code&gt; または &lt;code&gt;{x: 1, y: 2, z: 3}&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="9e2c0a1354712eca17d127deceeec4b043998c06" translate="yes" xml:space="preserve">
          <source>Reasonable analog to SQL &lt;code&gt;select&lt;/code&gt; statement.</source>
          <target state="translated">SQLの &lt;code&gt;select&lt;/code&gt; ステートメントに相応しいものです。</target>
        </trans-unit>
        <trans-unit id="33a5a7571bf686aab9c742d3d618a2dde6a4506e" translate="yes" xml:space="preserve">
          <source>Relation</source>
          <target state="translated">Relation</target>
        </trans-unit>
        <trans-unit id="c29abdc19c8045f267738d630a2eddd66a465f42" translate="yes" xml:space="preserve">
          <source>Removes (strips) whitespace from both ends of the string.</source>
          <target state="translated">文字列の両端の空白を削除します。</target>
        </trans-unit>
        <trans-unit id="524bcc70de7eaad85fabb25def7e8ff476825b0a" translate="yes" xml:space="preserve">
          <source>Removes the sub-list of &lt;code&gt;list&lt;/code&gt; starting at index &lt;code&gt;start&lt;/code&gt; and containing &lt;code&gt;count&lt;/code&gt; elements. &lt;em&gt;Note that this is not destructive&lt;/em&gt;: it returns a copy of the list with the changes. &lt;small&gt;No lists have been harmed in the application of this function.&lt;/small&gt;</source>
          <target state="translated">サブリスト削除 &lt;code&gt;list&lt;/code&gt; 、インデックスから始まる &lt;code&gt;start&lt;/code&gt; と含む &lt;code&gt;count&lt;/code&gt; 要素を。&lt;em&gt;これは破壊的ではないことに注意してください&lt;/em&gt;。変更されたリストのコピーを返します。&lt;small&gt;この機能の適用において害を及ぼすリストはありません。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7f07e66e5a07f435014480231098754149fb8b2b" translate="yes" xml:space="preserve">
          <source>Replace a substring or regex match in a string with a replacement.</source>
          <target state="translated">文字列中の部分文字列または正規表現にマッチする文字列を置換します。</target>
        </trans-unit>
        <trans-unit id="cccb456fa034ed9cbe49dae9dc3997a16f3061f5" translate="yes" xml:space="preserve">
          <source>Reports whether two objects have the same value, in &lt;a href=&quot;#equals&quot;&gt;&lt;code&gt;R.equals&lt;/code&gt;&lt;/a&gt; terms, for the specified property. Useful as a curried predicate.</source>
          <target state="translated">指定したプロパティについて、2つのオブジェクトが&lt;a href=&quot;#equals&quot;&gt; &lt;code&gt;R.equals&lt;/code&gt; の&lt;/a&gt;用語で同じ値を持っているかどうかを報告します。カレー述語として役立ちます。</target>
        </trans-unit>
        <trans-unit id="59e98f7aa54038335003eb8ca4b0f0ed09d8cb59" translate="yes" xml:space="preserve">
          <source>Restricts a number to be within a range.</source>
          <target state="translated">数値を範囲内に制限します。</target>
        </trans-unit>
        <trans-unit id="7efbbcc590844d75176287fbe884cfed913acacb" translate="yes" xml:space="preserve">
          <source>Retrieve the value at a given path.</source>
          <target state="translated">指定されたパスの値を取得します。</target>
        </trans-unit>
        <trans-unit id="9582a02f141fc4b345b2936eba691cd0654efebc" translate="yes" xml:space="preserve">
          <source>Returns</source>
          <target state="translated">Returns</target>
        </trans-unit>
        <trans-unit id="bc1af0b939bd3629cf049d8a1905b057ab39c03b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if all elements of the list match the predicate, &lt;code&gt;false&lt;/code&gt; if there are any that don't.</source>
          <target state="translated">リストのすべての要素が述語と一致する場合は &lt;code&gt;true&lt;/code&gt; を返し、一致しないものがある場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="942dbf3585d9d836cd85a59e42eb5a7c8fe772e3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if at least one of the elements of the list match the predicate, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">戻り値 &lt;code&gt;true&lt;/code&gt; リストの要素の少なくとも一つが、述語、一致した場合に &lt;code&gt;false&lt;/code&gt; そう。</target>
        </trans-unit>
        <trans-unit id="72d3663987bab1ed03869951030197dec9fbcad6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if both arguments are &lt;code&gt;true&lt;/code&gt;; &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">両方の引数が &lt;code&gt;true&lt;/code&gt; の場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a7f9bae347180c7ff67da13c5421f01e14ef6fad" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if its arguments are equivalent, &lt;code&gt;false&lt;/code&gt; otherwise. Handles cyclical data structures.</source>
          <target state="translated">引数が等しい場合は &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。循環データ構造を処理します。</target>
        </trans-unit>
        <trans-unit id="47c68f197defea4f9b715819238dcd32c535a5ea" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if no elements of the list match the predicate, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">述語に一致するリストの要素がない場合は &lt;code&gt;true&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="907a9b8512e2cadd99aad149764c81e584c28a68" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if one or both of its arguments are &lt;code&gt;true&lt;/code&gt;. Returns &lt;code&gt;false&lt;/code&gt; if both arguments are &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">戻り値 &lt;code&gt;true&lt;/code&gt; 引数の1つまたは両方の場合がある &lt;code&gt;true&lt;/code&gt; 。両方の引数が &lt;code&gt;false&lt;/code&gt; の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="05d29abb856a82686c4fc725a587d5fb4ea48570" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the first argument is greater than or equal to the second; &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">最初の引数が2番目の引数以上の場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5af2641bb5374d1f6cca7c401584e3a94e323316" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the first argument is greater than the second; &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">最初の引数が2番目の引数より大きい場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f3f96bb999135e9211e4c083e8e57ef3b853a154" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the first argument is less than or equal to the second; &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">最初の引数が2番目の引数以下の場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73df54bac265ab5b0766c7857af2dd6793571b06" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the first argument is less than the second; &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">最初の引数が2番目の引数より小さい場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6749c1cd0c8b5a2d2f14f6a913ef3877bbce449b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given value is its type's empty value; &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">指定された値がその型の空の値で &lt;code&gt;true&lt;/code&gt; 場合はtrueを返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ec8e35429da7fa120062da6f053fa0f1f409fee" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the specified object property at given path satisfies the given predicate; &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">指定されたパスの指定されたオブジェクトプロパティが指定された述語を満たす場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0798b28d988807f81756d58c6755aaaf2f759b4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the specified object property is equal, in &lt;a href=&quot;#equals&quot;&gt;&lt;code&gt;R.equals&lt;/code&gt;&lt;/a&gt; terms, to the given value; &lt;code&gt;false&lt;/code&gt; otherwise. You can test multiple properties with &lt;a href=&quot;#whereEq&quot;&gt;&lt;code&gt;R.whereEq&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定されたオブジェクトプロパティが&lt;a href=&quot;#equals&quot;&gt; &lt;code&gt;R.equals&lt;/code&gt; の&lt;/a&gt;用語で指定された値と等しい場合、 &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; 。&lt;a href=&quot;#whereEq&quot;&gt; &lt;code&gt;R.whereEq&lt;/code&gt; を使用して&lt;/a&gt;複数のプロパティをテストできます。</target>
        </trans-unit>
        <trans-unit id="0ddb610beaf14b4632db3480a380728a4014763e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the specified object property is of the given type; &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">指定されたオブジェクトプロパティが指定されたタイプである場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06b29c3303b1f638b7963d517bbf0e573b1d6c49" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the specified object property satisfies the given predicate; &lt;code&gt;false&lt;/code&gt; otherwise. You can test multiple properties with &lt;a href=&quot;#where&quot;&gt;&lt;code&gt;R.where&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定されたオブジェクトプロパティが指定された述語を満たす場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; 。&lt;a href=&quot;#where&quot;&gt; &lt;code&gt;R.where&lt;/code&gt; で&lt;/a&gt;複数のプロパティをテストできます。</target>
        </trans-unit>
        <trans-unit id="96063a58eabdc4bc416e2d7bc759e1c93e5c4e8b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the specified value is equal, in &lt;a href=&quot;#equals&quot;&gt;&lt;code&gt;R.equals&lt;/code&gt;&lt;/a&gt; terms, to at least one element of the given list; &lt;code&gt;false&lt;/code&gt; otherwise. Works also with strings.</source>
          <target state="translated">指定された値が&lt;a href=&quot;#equals&quot;&gt; &lt;code&gt;R.equals&lt;/code&gt; の&lt;/a&gt;用語で、指定されたリストの少なくとも1つの要素と等しい場合に &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; 。文字列でも動作します。</target>
        </trans-unit>
        <trans-unit id="698214ad29ad107e651d0bb14c274c6f4fef34d4" translate="yes" xml:space="preserve">
          <source>Returns a &quot;view&quot; of the given data structure, determined by the given lens. The lens's focus determines which portion of the data structure is visible.</source>
          <target state="translated">与えられたレンズによって決定された、与えられたデータ構造の「ビュー」を返します。レンズのフォーカスによって、データ構造のどの部分が見えるかが決まります。</target>
        </trans-unit>
        <trans-unit id="3ff586314768dbb26ef71f5687b2ab64ae2c52d3" translate="yes" xml:space="preserve">
          <source>Returns a copy of the list, sorted according to the comparator function, which should accept two values at a time and return a negative number if the first value is smaller, a positive number if it's larger, and zero if they are equal. Please note that this is a &lt;strong&gt;copy&lt;/strong&gt; of the list. It does not modify the original.</source>
          <target state="translated">コンパレータ関数に従って並べ替えられたリストのコピーを返します。一度に2つの値を受け入れ、最初の値が小さい場合は負の数、大きい場合は正の数、それらが等しい場合はゼロを返します。これはリストの&lt;strong&gt;コピー&lt;/strong&gt;であることに注意してください。オリジナルは変更されません。</target>
        </trans-unit>
        <trans-unit id="f1b7a628eb69ac3638c621dea9af6a4ca0c0eaba" translate="yes" xml:space="preserve">
          <source>Returns a curried equivalent of the provided function, with the specified arity. The curried function has two unusual capabilities. First, its arguments needn't be provided one at a time. If &lt;code&gt;g&lt;/code&gt; is &lt;code&gt;R.curryN(3, f)&lt;/code&gt;, the following are equivalent:</source>
          <target state="translated">指定されたアリティを使用して、提供された関数と同等のカリーを返します。カリー化された機能には2つの変わった機能があります。まず、引数を1つずつ指定する必要はありません。場合 &lt;code&gt;g&lt;/code&gt; ある &lt;code&gt;R.curryN(3, f)&lt;/code&gt; 、次のように等価です。</target>
        </trans-unit>
        <trans-unit id="e15efdafe2f1e384d375f827407075f38a1e7277" translate="yes" xml:space="preserve">
          <source>Returns a curried equivalent of the provided function. The curried function has two unusual capabilities. First, its arguments needn't be provided one at a time. If &lt;code&gt;f&lt;/code&gt; is a ternary function and &lt;code&gt;g&lt;/code&gt; is &lt;code&gt;R.curry(f)&lt;/code&gt;, the following are equivalent:</source>
          <target state="translated">指定された関数のカリーに相当するものを返します。カリー化された機能には2つの変わった機能があります。まず、引数を1つずつ指定する必要はありません。場合 &lt;code&gt;f&lt;/code&gt; は三元関数であり、 &lt;code&gt;g&lt;/code&gt; がある &lt;code&gt;R.curry(f)&lt;/code&gt; は、次のように等価です。</target>
        </trans-unit>
        <trans-unit id="9f1a95528a74cee483063606be4788ffcd1ca72a" translate="yes" xml:space="preserve">
          <source>Returns a fixed list of size &lt;code&gt;n&lt;/code&gt; containing a specified identical value.</source>
          <target state="translated">指定された同一の値を含むサイズ &lt;code&gt;n&lt;/code&gt; の固定リストを返します。</target>
        </trans-unit>
        <trans-unit id="8062603d6de7947aa66ce778e453cb1f505c45bf" translate="yes" xml:space="preserve">
          <source>Returns a function of arity &lt;code&gt;n&lt;/code&gt; from a (manually) curried function.</source>
          <target state="translated">（手動で）カリー化された関数からアリティ &lt;code&gt;n&lt;/code&gt; の関数を返します。</target>
        </trans-unit>
        <trans-unit id="852e57d2768f4afb0a2e9308f9575f633726ab27" translate="yes" xml:space="preserve">
          <source>Returns a function that always returns the given value. Note that for non-primitives the value returned is a reference to the original value.</source>
          <target state="translated">与えられた値を常に返す関数を返します。非プリミティブの場合、返される値は元の値への参照であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9a5f0a1d27a3e00d95f70010bf3e6a279b64b87a" translate="yes" xml:space="preserve">
          <source>Returns a function that when supplied an object returns the indicated property of that object, if it exists.</source>
          <target state="translated">オブジェクトを指定すると、指定したオブジェクトのプロパティが存在する場合に、そのプロパティを返す関数を返します。</target>
        </trans-unit>
        <trans-unit id="8a3e7f91c237ae26dd8fe5f81a2b7a77e1e678b9" translate="yes" xml:space="preserve">
          <source>Returns a function which returns its nth argument.</source>
          <target state="translated">n 番目の引数を返す関数を返します。</target>
        </trans-unit>
        <trans-unit id="514b4d391de8e95a0fb781a0e98baad04e6217c8" translate="yes" xml:space="preserve">
          <source>Returns a function, &lt;code&gt;fn&lt;/code&gt;, which encapsulates &lt;code&gt;if/else, if/else, ...&lt;/code&gt; logic. &lt;code&gt;R.cond&lt;/code&gt; takes a list of [predicate, transformer] pairs. All of the arguments to &lt;code&gt;fn&lt;/code&gt; are applied to each of the predicates in turn until one returns a &quot;truthy&quot; value, at which point &lt;code&gt;fn&lt;/code&gt; returns the result of applying its arguments to the corresponding transformer. If none of the predicates matches, &lt;code&gt;fn&lt;/code&gt; returns undefined.</source>
          <target state="translated">&lt;code&gt;if/else, if/else, ...&lt;/code&gt; ロジックをカプセル化する関数 &lt;code&gt;fn&lt;/code&gt; を返します。 &lt;code&gt;R.cond&lt;/code&gt; は[述語、トランスフォーマー]のペアのリストを取ります。 &lt;code&gt;fn&lt;/code&gt; へのすべての引数は、「真の」値を返すまで各述語に順番に適用されます。その時点で、 &lt;code&gt;fn&lt;/code&gt; は、対応するトランスフォーマに引数を適用した結果を返します。一致する述語がない場合、 &lt;code&gt;fn&lt;/code&gt; はundefinedを返します。</target>
        </trans-unit>
        <trans-unit id="69754b3a4711467b13513f8335c4b7c087da0c34" translate="yes" xml:space="preserve">
          <source>Returns a lens for the given getter and setter functions. The getter &quot;gets&quot; the value of the focus; the setter &quot;sets&quot; the value of the focus. The setter should not mutate the data structure.</source>
          <target state="translated">与えられたゲッター関数とセッター関数に対してレンズを返します。ゲッターはフォーカスの値を「取得」し、セッターはフォーカスの値を「設定」します。セッターはデータ構造を変更してはいけません。</target>
        </trans-unit>
        <trans-unit id="0617c2f3ddfa29fbb3bed1554b5da704bfa61e09" translate="yes" xml:space="preserve">
          <source>Returns a lens whose focus is the specified index.</source>
          <target state="translated">指定したインデックスにフォーカスを合わせたレンズを返します。</target>
        </trans-unit>
        <trans-unit id="fcb0906e2b715a7fc8be8760b099fa671e63accc" translate="yes" xml:space="preserve">
          <source>Returns a lens whose focus is the specified path.</source>
          <target state="translated">指定したパスにフォーカスがあるレンズを返します。</target>
        </trans-unit>
        <trans-unit id="443c5f6ca31a0e2a3207b69e5903e14c66618bcd" translate="yes" xml:space="preserve">
          <source>Returns a lens whose focus is the specified property.</source>
          <target state="translated">指定したプロパティにフォーカスがあるレンズを返します。</target>
        </trans-unit>
        <trans-unit id="8809f6261b6d0455fa42c68580eb4b22bcc3dfb1" translate="yes" xml:space="preserve">
          <source>Returns a list containing all but the last &lt;code&gt;n&lt;/code&gt; elements of the given &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">すべてを含むリストが、最後返し &lt;code&gt;n&lt;/code&gt; 個の与えられたの要素 &lt;code&gt;list&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bd099fad9b2d80f66db0225c48ea0cd0bc9b0d6" translate="yes" xml:space="preserve">
          <source>Returns a list containing the names of all the enumerable own properties of the supplied object. Note that the order of the output array is not guaranteed to be consistent across different JS platforms.</source>
          <target state="translated">指定したオブジェクトのすべての列挙可能な独自プロパティの名前を含むリストを返します。出力配列の順序が、異なる JS プラットフォーム間で一貫していることは保証されていないことに注意しましょう。</target>
        </trans-unit>
        <trans-unit id="78cd0621f4604ee5a45df501e480b317c33ed465" translate="yes" xml:space="preserve">
          <source>Returns a list containing the names of all the properties of the supplied object, including prototype properties. Note that the order of the output array is not guaranteed to be consistent across different JS platforms.</source>
          <target state="translated">指定したオブジェクトのすべてのプロパティの名前を含むリストを返します。出力配列の順序が、異なる JS プラットフォーム間で一貫していることは保証されていないことに注意しましょう。</target>
        </trans-unit>
        <trans-unit id="6f6a72777cf33d11315d7805742ebeae68074431" translate="yes" xml:space="preserve">
          <source>Returns a list of all the enumerable own properties of the supplied object. Note that the order of the output array is not guaranteed across different JS platforms.</source>
          <target state="translated">指定したオブジェクトの、列挙可能なすべての自身のプロパティの一覧を返します。出力配列の順序は、異なる JS プラットフォーム間で保証されていないことに注意しましょう。</target>
        </trans-unit>
        <trans-unit id="ffc3b930b56a9f3381196059ca73b12b74d8de1c" translate="yes" xml:space="preserve">
          <source>Returns a list of all the properties, including prototype properties, of the supplied object. Note that the order of the output array is not guaranteed to be consistent across different JS platforms.</source>
          <target state="translated">指定したオブジェクトのプロトタイププロパティを含むすべてのプロパティの一覧を返します。出力配列の順序が、異なる JS プラットフォーム間で一貫していることは保証されていないことに注意しましょう。</target>
        </trans-unit>
        <trans-unit id="6a513b02fd9817536363ed911b1bd9f9c45a4fa6" translate="yes" xml:space="preserve">
          <source>Returns a list of numbers from &lt;code&gt;from&lt;/code&gt; (inclusive) to &lt;code&gt;to&lt;/code&gt; (exclusive).</source>
          <target state="translated">戻り値から番号のリスト &lt;code&gt;from&lt;/code&gt; （包括的）に &lt;code&gt;to&lt;/code&gt; （排他的）。</target>
        </trans-unit>
        <trans-unit id="45340537ad8c6c7df374a70180e8664431721380" translate="yes" xml:space="preserve">
          <source>Returns a new copy of the array with the element at the provided index replaced with the given value.</source>
          <target state="translated">指定したインデックスの要素を指定した値に置き換えた配列の新しいコピーを返します。</target>
        </trans-unit>
        <trans-unit id="b82f7830d8e43c3f2d1c063aee1efd5dadc9f867" translate="yes" xml:space="preserve">
          <source>Returns a new function much like the supplied one, except that the first two arguments' order is reversed.</source>
          <target state="translated">最初の 2 つの引数の順序が逆になることを除いて、指定したものとよく似た新しい関数を返します。</target>
        </trans-unit>
        <trans-unit id="0d2aab647a8f3636d541a260a8547668e0c5cbcc" translate="yes" xml:space="preserve">
          <source>Returns a new list by plucking the same named property off all objects in the list supplied.</source>
          <target state="translated">与えられたリスト内のすべてのオブジェクトから同じ名前のプロパティを取り出して、新しいリストを返します。</target>
        </trans-unit>
        <trans-unit id="01fe0a4005eb938b9b367d0e43b52e2d254ea770" translate="yes" xml:space="preserve">
          <source>Returns a new list by pulling every item out of it (and all its sub-arrays) and putting them in a new array, depth-first.</source>
          <target state="translated">新しいリストを返します。</target>
        </trans-unit>
        <trans-unit id="dc5854b9d194abccf3f198a8db90f1b9b1c64372" translate="yes" xml:space="preserve">
          <source>Returns a new list containing only one copy of each element in the original list, based upon the value returned by applying the supplied function to each list element. Prefers the first item if the supplied function produces the same value on two items. &lt;a href=&quot;#equals&quot;&gt;&lt;code&gt;R.equals&lt;/code&gt;&lt;/a&gt; is used for comparison.</source>
          <target state="translated">提供された関数を各リスト要素に適用することによって返される値に基づいて、元のリストの各要素の1つのコピーのみを含む新しいリストを返します。指定された関数が2つの項目で同じ値を生成する場合、最初の項目を優先します。&lt;a href=&quot;#equals&quot;&gt; &lt;code&gt;R.equals&lt;/code&gt; &lt;/a&gt;は比較に使用されます。</target>
        </trans-unit>
        <trans-unit id="a4d1c0bf7fa476ee7395f35945b358d3be15a16b" translate="yes" xml:space="preserve">
          <source>Returns a new list containing only one copy of each element in the original list, based upon the value returned by applying the supplied predicate to two list elements. Prefers the first item if two items compare equal based on the predicate.</source>
          <target state="translated">与えられた述語を 2 つのリスト要素に適用して返された値に基づいて、元のリスト内の各要素のコピーを 1 つだけ含む新しいリストを返します。述語に基づいて 2 つの項目が等しい場合は、最初の項目を優先します。</target>
        </trans-unit>
        <trans-unit id="0181cb41d7e211d31d7b2b32a6d7e27332eecc23" translate="yes" xml:space="preserve">
          <source>Returns a new list containing only one copy of each element in the original list. &lt;a href=&quot;#equals&quot;&gt;&lt;code&gt;R.equals&lt;/code&gt;&lt;/a&gt; is used to determine equality.</source>
          <target state="translated">元のリストの各要素のコピーを1つだけ含む新しいリストを返します。&lt;a href=&quot;#equals&quot;&gt; &lt;code&gt;R.equals&lt;/code&gt; &lt;/a&gt;は、等しいかどうかを判断するために使用されます。</target>
        </trans-unit>
        <trans-unit id="00ec684662b8856bd7ba5dade6b832da1db834d4" translate="yes" xml:space="preserve">
          <source>Returns a new list containing the contents of the given list, followed by the given element.</source>
          <target state="translated">与えられたリストの内容を含む新しいリストを、与えられた要素の後に続けて返します。</target>
        </trans-unit>
        <trans-unit id="fdee37ba607c1d2c81d7fce11a7960ce13ea4510" translate="yes" xml:space="preserve">
          <source>Returns a new list containing the first &lt;code&gt;n&lt;/code&gt; elements of a given list, passing each value to the supplied predicate function, and terminating when the predicate function returns &lt;code&gt;false&lt;/code&gt;. Excludes the element that caused the predicate function to fail. The predicate function is passed one argument: &lt;em&gt;(value)&lt;/em&gt;.</source>
          <target state="translated">指定されたリストの最初の &lt;code&gt;n&lt;/code&gt; 個の要素を含む新しいリストを返し、各値を指定された述語関数に渡し、述語関数が &lt;code&gt;false&lt;/code&gt; を返すと終了します。述語関数が失敗する原因となった要素を除外します。述語関数には、1つの引数&lt;em&gt;（値）&lt;/em&gt;が渡され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="de6c845d75be3fe32203afa46080df101cba0703" translate="yes" xml:space="preserve">
          <source>Returns a new list containing the last &lt;code&gt;n&lt;/code&gt; elements of a given list, passing each value to the supplied predicate function, and terminating when the predicate function returns &lt;code&gt;false&lt;/code&gt;. Excludes the element that caused the predicate function to fail. The predicate function is passed one argument: &lt;em&gt;(value)&lt;/em&gt;.</source>
          <target state="translated">指定されたリストの最後の &lt;code&gt;n&lt;/code&gt; 個の要素を含む新しいリストを返し、各値を指定された述語関数に渡し、述語関数が &lt;code&gt;false&lt;/code&gt; を返すと終了します。述語関数が失敗する原因となった要素を除外します。述語関数には、1つの引数&lt;em&gt;（値）&lt;/em&gt;が渡され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="9df8559aab280db3eadbdda3685c525981c85a68" translate="yes" xml:space="preserve">
          <source>Returns a new list containing the last &lt;code&gt;n&lt;/code&gt; elements of the given list. If &lt;code&gt;n &amp;gt; list.length&lt;/code&gt;, returns a list of &lt;code&gt;list.length&lt;/code&gt; elements.</source>
          <target state="translated">指定されたリストの最後の &lt;code&gt;n&lt;/code&gt; 個の要素を含む新しいリストを返します。 &lt;code&gt;n &amp;gt; list.length&lt;/code&gt; 場合、 &lt;code&gt;list.length&lt;/code&gt; 要素のリストを返します。</target>
        </trans-unit>
        <trans-unit id="1321b179beb9eb4af594380b402e1a224d115ec1" translate="yes" xml:space="preserve">
          <source>Returns a new list excluding all the tailing elements of a given list which satisfy the supplied predicate function. It passes each value from the right to the supplied predicate function, skipping elements until the predicate function returns a &lt;code&gt;falsy&lt;/code&gt; value. The predicate function is applied to one argument: &lt;em&gt;(value)&lt;/em&gt;.</source>
          <target state="translated">指定された述語関数を満たす指定されたリストのすべての末尾要素を除外した新しいリストを返します。各値を右側から指定された述語関数に &lt;code&gt;falsy&lt;/code&gt; 、述語関数が偽の値を返すまで要素をスキップします。述語関数は、1つの引数&lt;em&gt;（値）に&lt;/em&gt;適用され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3e4ad144063974491190f2ee72c1a3d9167d89fa" translate="yes" xml:space="preserve">
          <source>Returns a new list excluding the leading elements of a given list which satisfy the supplied predicate function. It passes each value to the supplied predicate function, skipping elements while the predicate function returns &lt;code&gt;true&lt;/code&gt;. The predicate function is applied to one argument: &lt;em&gt;(value)&lt;/em&gt;.</source>
          <target state="translated">指定された述語関数を満たす、指定されたリストの先行要素を除く新しいリストを返します。各値を指定された述語関数に渡し、要素をスキップして述語関数が &lt;code&gt;true&lt;/code&gt; を返します。述語関数は、1つの引数&lt;em&gt;（値）に&lt;/em&gt;適用され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="388e9356411bbf95fb48255eaf5f4ef065dc126b" translate="yes" xml:space="preserve">
          <source>Returns a new list or string with the elements or characters in reverse order.</source>
          <target state="translated">要素や文字を逆順に並べた新しいリストや文字列を返します。</target>
        </trans-unit>
        <trans-unit id="e5d345d4add4db3237d8719363d72aef7dca0824" translate="yes" xml:space="preserve">
          <source>Returns a new list with the given element at the front, followed by the contents of the list.</source>
          <target state="translated">与えられた要素を先頭にして、そのリストの内容が続く新しいリストを返します。</target>
        </trans-unit>
        <trans-unit id="ca864b70304188da2a337765b1586b7b434cdd40" translate="yes" xml:space="preserve">
          <source>Returns a new list without any consecutively repeating elements. &lt;a href=&quot;#equals&quot;&gt;&lt;code&gt;R.equals&lt;/code&gt;&lt;/a&gt; is used to determine equality.</source>
          <target state="translated">連続して繰り返される要素のない新しいリストを返します。&lt;a href=&quot;#equals&quot;&gt; &lt;code&gt;R.equals&lt;/code&gt; &lt;/a&gt;は、等しいかどうかを判断するために使用されます。</target>
        </trans-unit>
        <trans-unit id="99464a422eafe8569eb89bf275b8fa2fa68ee1e2" translate="yes" xml:space="preserve">
          <source>Returns a new list without any consecutively repeating elements. Equality is determined by applying the supplied predicate to each pair of consecutive elements. The first element in a series of equal elements will be preserved.</source>
          <target state="translated">連続して繰り返される要素を含まない新しいリストを返します。等しいかどうかは、与えられた述語を連続する要素の各組に適用することで決定されます。等しい要素の連続した最初の要素は保持されます。</target>
        </trans-unit>
        <trans-unit id="f0af4f9a5588faafe3f3cd4fd1c665e81a860404" translate="yes" xml:space="preserve">
          <source>Returns a new list without values in the first argument. &lt;a href=&quot;#equals&quot;&gt;&lt;code&gt;R.equals&lt;/code&gt;&lt;/a&gt; is used to determine equality.</source>
          <target state="translated">最初の引数に値がない新しいリストを返します。&lt;a href=&quot;#equals&quot;&gt; &lt;code&gt;R.equals&lt;/code&gt; &lt;/a&gt;は、等しいかどうかを判断するために使用されます。</target>
        </trans-unit>
        <trans-unit id="47d1f655b5dfa782d836e8b422337d842f3148d3" translate="yes" xml:space="preserve">
          <source>Returns a new list, composed of n-tuples of consecutive elements. If &lt;code&gt;n&lt;/code&gt; is greater than the length of the list, an empty list is returned.</source>
          <target state="translated">連続する要素のnタプルで構成される新しいリストを返します。 &lt;code&gt;n&lt;/code&gt; がリストの長さより大きい場合、空のリストが返されます。</target>
        </trans-unit>
        <trans-unit id="d75a8db0336f82442a174bd9d841b6947dd26786" translate="yes" xml:space="preserve">
          <source>Returns a new object that does not contain a &lt;code&gt;prop&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;prop&lt;/code&gt; プロパティを含まない新しいオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="32a40e5473dc37c59fff2e2a432b4364c93c8d1f" translate="yes" xml:space="preserve">
          <source>Returns a new object with the keys of the given object as values, and the values of the given object, which are coerced to strings, as keys. Note that the last key found is preferred when handling the same value.</source>
          <target state="translated">与えられたオブジェクトのキーを値とし、文字列に強制された与えられたオブジェクトの値をキーとした新しいオブジェクトを返します。同じ値を扱う場合は、最後に見つかったキーが優先されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="fe136be2c1fdfc86ae003001455c8fa7c0f10ca6" translate="yes" xml:space="preserve">
          <source>Returns a partial copy of an object containing only the keys specified. If the key does not exist, the property is ignored.</source>
          <target state="translated">指定したキーのみを含むオブジェクトの部分的なコピーを返します。キーが存在しない場合、このプロパティは無視されます。</target>
        </trans-unit>
        <trans-unit id="e14df9c514ad94aaf948f3b89792adbe9b3f8024" translate="yes" xml:space="preserve">
          <source>Returns a partial copy of an object containing only the keys that satisfy the supplied predicate.</source>
          <target state="translated">指定した述語を満たすキーのみを含むオブジェクトの部分コピーを返します。</target>
        </trans-unit>
        <trans-unit id="0b69994261da5d19a87901574b1b143e2c3fea8d" translate="yes" xml:space="preserve">
          <source>Returns a partial copy of an object omitting the keys specified.</source>
          <target state="translated">指定したキーを省略したオブジェクトの部分コピーを返します。</target>
        </trans-unit>
        <trans-unit id="55869aa4cd9c82f102f45f61e0af0c9035efdd08" translate="yes" xml:space="preserve">
          <source>Returns a single item by iterating through the list, successively calling the iterator function and passing it an accumulator value and the current value from the array, and then passing the result to the next call.</source>
          <target state="translated">リストを反復処理し、イテレータ関数を連続して呼び出して配列からアキュムレータ値と現在値を渡し、その結果を次の呼び出しに渡すことで、1つの項目を返します。</target>
        </trans-unit>
        <trans-unit id="6efb375363906f50adc8b41c1ff3d51eece54121" translate="yes" xml:space="preserve">
          <source>Returns a singleton array containing the value provided.</source>
          <target state="translated">指定した値を含むシングルトン配列を返します。</target>
        </trans-unit>
        <trans-unit id="4357dddce2ce6b21de2116fdfb0822c34973bf92" translate="yes" xml:space="preserve">
          <source>Returns a string made by inserting the &lt;code&gt;separator&lt;/code&gt; between each element and concatenating all the elements into a single string.</source>
          <target state="translated">各要素の間に &lt;code&gt;separator&lt;/code&gt; を挿入し、すべての要素を単一の文字列に連結して作成された文字列を返します。</target>
        </trans-unit>
        <trans-unit id="8581c72cba3a032997e1bda22851182cd95fdeaf" translate="yes" xml:space="preserve">
          <source>Returns a value wrapped to indicate that it is the final value of the reduce and transduce functions. The returned value should be considered a black box: the internal structure is not guaranteed to be stable.</source>
          <target state="translated">reduce関数とtransduce関数の最終値であることを示すためにラップされた値を返します。返される値はブラックボックスと考えるべきです:内部構造が安定しているかどうかは保証されていません。</target>
        </trans-unit>
        <trans-unit id="4083d66ff9d5142f76dde05e9a46be104d398145" translate="yes" xml:space="preserve">
          <source>Returns all but the first &lt;code&gt;n&lt;/code&gt; elements of the given list, string, or transducer/transformer (or object with a &lt;code&gt;drop&lt;/code&gt; method).</source>
          <target state="translated">指定されたリスト、文字列、またはトランスデューサー/トランスフォーマー（または &lt;code&gt;drop&lt;/code&gt; メソッドを持つオブジェクト）の最初の &lt;code&gt;n&lt;/code&gt; 個の要素を除くすべてを返します。</target>
        </trans-unit>
        <trans-unit id="b7e76e1ff0eafbfb878c36372c0abe7269346dc2" translate="yes" xml:space="preserve">
          <source>Returns all but the first element of the given list or string (or object with a &lt;code&gt;tail&lt;/code&gt; method).</source>
          <target state="translated">指定されたリストまたは文字列（または &lt;code&gt;tail&lt;/code&gt; メソッドを持つオブジェクト）の最初の要素を除くすべてを返します。</target>
        </trans-unit>
        <trans-unit id="b25b34ce094d442b5e6a0529a1fcd806d7123dce" translate="yes" xml:space="preserve">
          <source>Returns all but the last element of the given list or string.</source>
          <target state="translated">指定したリストまたは文字列の最後の要素以外をすべて返します。</target>
        </trans-unit>
        <trans-unit id="98831a689e3b82eb67b003c3a8c5a27fb5ddb08f" translate="yes" xml:space="preserve">
          <source>Returns the elements of the given list or string (or object with a &lt;code&gt;slice&lt;/code&gt; method) from &lt;code&gt;fromIndex&lt;/code&gt; (inclusive) to &lt;code&gt;toIndex&lt;/code&gt; (exclusive).</source>
          <target state="translated">指定されたリストまたは文字列（または &lt;code&gt;slice&lt;/code&gt; メソッドを持つオブジェクト）の要素を、 &lt;code&gt;fromIndex&lt;/code&gt; （両端を含む）からtoIndex（両端を &lt;code&gt;toIndex&lt;/code&gt; ない）まで返します。</target>
        </trans-unit>
        <trans-unit id="325599128c1087b2606770e65a4ade4667fc9b39" translate="yes" xml:space="preserve">
          <source>Returns the empty value of its argument's type. Ramda defines the empty value of Array (&lt;code&gt;[]&lt;/code&gt;), Object (&lt;code&gt;{}&lt;/code&gt;), String (&lt;code&gt;''&lt;/code&gt;), and Arguments. Other types are supported if they define &lt;code&gt;&amp;lt;Type&amp;gt;.empty&lt;/code&gt;, &lt;code&gt;&amp;lt;Type&amp;gt;.prototype.empty&lt;/code&gt; or implement the &lt;a href=&quot;https://github.com/fantasyland/fantasy-land#monoid&quot;&gt;FantasyLand Monoid spec&lt;/a&gt;.</source>
          <target state="translated">引数の型の空の値を返します。Ramdaは、配列（ &lt;code&gt;[]&lt;/code&gt; ）、オブジェクト（ &lt;code&gt;{}&lt;/code&gt; ）、文字列（ &lt;code&gt;''&lt;/code&gt; ）、および引数の空の値を定義します。他のタイプは、 &lt;code&gt;&amp;lt;Type&amp;gt;.empty&lt;/code&gt; 、 &lt;code&gt;&amp;lt;Type&amp;gt;.prototype.empty&lt;/code&gt; を定義するか、または&lt;a href=&quot;https://github.com/fantasyland/fantasy-land#monoid&quot;&gt;FantasyLand Monoid仕様を&lt;/a&gt;実装する場合にサポートされます。</target>
        </trans-unit>
        <trans-unit id="e677dcd886f651be593e01b32c49ede3befe770c" translate="yes" xml:space="preserve">
          <source>Returns the first &lt;code&gt;n&lt;/code&gt; elements of the given list, string, or transducer/transformer (or object with a &lt;code&gt;take&lt;/code&gt; method).</source>
          <target state="translated">指定されたリスト、文字列、またはトランスデューサ/トランスフォーマ（または &lt;code&gt;take&lt;/code&gt; メソッドを持つオブジェクト）の最初の &lt;code&gt;n&lt;/code&gt; 個の要素を返します。</target>
        </trans-unit>
        <trans-unit id="36eac81e0f6ff5c914634a74de6d5c99753117fa" translate="yes" xml:space="preserve">
          <source>Returns the first element of the given list or string. In some libraries this function is named &lt;code&gt;first&lt;/code&gt;.</source>
          <target state="translated">指定されたリストまたは文字列の最初の要素を返します。一部のライブラリでは、この関数は &lt;code&gt;first&lt;/code&gt; 名前が付けられています。</target>
        </trans-unit>
        <trans-unit id="24b388879af652d4583e1de398402ba79a5b3cc6" translate="yes" xml:space="preserve">
          <source>Returns the first element of the list which matches the predicate, or &lt;code&gt;undefined&lt;/code&gt; if no element matches.</source>
          <target state="translated">述語と一致するリストの最初の要素を返します。一致する要素が &lt;code&gt;undefined&lt;/code&gt; 場合はundefinedを返します。</target>
        </trans-unit>
        <trans-unit id="385d42ed60fb7dba23e52e7bdfecc3a886027aad" translate="yes" xml:space="preserve">
          <source>Returns the index of the first element of the list which matches the predicate, or &lt;code&gt;-1&lt;/code&gt; if no element matches.</source>
          <target state="translated">述語と一致するリストの最初の要素のインデックスを返します。一致する要素がない場合は &lt;code&gt;-1&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0e47cb7c08c88b79f978a7688b9c3f4b20f1a3b4" translate="yes" xml:space="preserve">
          <source>Returns the index of the last element of the list which matches the predicate, or &lt;code&gt;-1&lt;/code&gt; if no element matches.</source>
          <target state="translated">述語に一致するリストの最後の要素のインデックスを返します。一致する要素がない場合は &lt;code&gt;-1&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e621cd49ffcf329b7eda0d2faeb47b2df8aa979e" translate="yes" xml:space="preserve">
          <source>Returns the larger of its two arguments.</source>
          <target state="translated">2つの引数のうち大きい方を返します。</target>
        </trans-unit>
        <trans-unit id="5338c05424d4b496dea8a7fe931fd57ba90d408b" translate="yes" xml:space="preserve">
          <source>Returns the last element of the given list or string.</source>
          <target state="translated">指定したリストまたは文字列の最後の要素を返します。</target>
        </trans-unit>
        <trans-unit id="1bcca0d1bebd494693fb79f3d940ace54e7cffee" translate="yes" xml:space="preserve">
          <source>Returns the last element of the list which matches the predicate, or &lt;code&gt;undefined&lt;/code&gt; if no element matches.</source>
          <target state="translated">述語と一致するリストの最後の要素を返します。一致する要素が &lt;code&gt;undefined&lt;/code&gt; 場合はundefinedを返します。</target>
        </trans-unit>
        <trans-unit id="02c503657e71f1fa1bdef2f843a69f8d21a83422" translate="yes" xml:space="preserve">
          <source>Returns the left-to-right Kleisli composition of the provided functions, each of which must return a value of a type supported by &lt;a href=&quot;#chain&quot;&gt;&lt;code&gt;chain&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">提供された関数の左から右へのKleisli構成を返します。各関数は、&lt;a href=&quot;#chain&quot;&gt; &lt;code&gt;chain&lt;/code&gt; で&lt;/a&gt;サポートされているタイプの値を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="b90f876ba02ab4b3207f865c3db4a976c0d8a1a0" translate="yes" xml:space="preserve">
          <source>Returns the mean of the given list of numbers.</source>
          <target state="translated">与えられた数値のリストの平均を返します。</target>
        </trans-unit>
        <trans-unit id="820262022f61c0bf1849489deeaedf8d7c6cafc2" translate="yes" xml:space="preserve">
          <source>Returns the median of the given list of numbers.</source>
          <target state="translated">指定した数値のリストの中央値を返します。</target>
        </trans-unit>
        <trans-unit id="642c1914715db28ce2381cc3084ef7bc73d7b7ee" translate="yes" xml:space="preserve">
          <source>Returns the nth element of the given list or string. If n is negative the element at index length + n is returned.</source>
          <target state="translated">指定したリストまたは文字列の n 番目の要素を返します。n が負の場合は、インデックス長+n の要素が返されます。</target>
        </trans-unit>
        <trans-unit id="713b58faf6c4a85cd0126c58ce32dc55c67b5cb3" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in the array by returning &lt;code&gt;list.length&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;list.length&lt;/code&gt; を返すことにより、配列の要素数を返します。</target>
        </trans-unit>
        <trans-unit id="7a86260a0ad2bfc475091837630e7a8ac86aa929" translate="yes" xml:space="preserve">
          <source>Returns the position of the first occurrence of an item in an array, or -1 if the item is not included in the array. &lt;a href=&quot;#equals&quot;&gt;&lt;code&gt;R.equals&lt;/code&gt;&lt;/a&gt; is used to determine equality.</source>
          <target state="translated">配列内で最初に出現するアイテムの位置を返します。アイテムが配列に含まれていない場合は-1を返します。&lt;a href=&quot;#equals&quot;&gt; &lt;code&gt;R.equals&lt;/code&gt; &lt;/a&gt;は、等しいかどうかを判断するために使用されます。</target>
        </trans-unit>
        <trans-unit id="21d2f0f78cb56678082c84db0e3702980e78d838" translate="yes" xml:space="preserve">
          <source>Returns the position of the last occurrence of an item in an array, or -1 if the item is not included in the array. &lt;a href=&quot;#equals&quot;&gt;&lt;code&gt;R.equals&lt;/code&gt;&lt;/a&gt; is used to determine equality.</source>
          <target state="translated">配列内で最後に出現するアイテムの位置を返します。アイテムが配列に含まれていない場合は-1を返します。&lt;a href=&quot;#equals&quot;&gt; &lt;code&gt;R.equals&lt;/code&gt; &lt;/a&gt;は、等しいかどうかを判断するために使用されます。</target>
        </trans-unit>
        <trans-unit id="04a210a33304b67ccf4114baa2be3fd981211184" translate="yes" xml:space="preserve">
          <source>Returns the result of &quot;setting&quot; the portion of the given data structure focused by the given lens to the given value.</source>
          <target state="translated">与えられたデータ構造のうち、与えられたレンズで焦点を合わせた部分を、与えられた値に設定した結果を返します。</target>
        </trans-unit>
        <trans-unit id="be8b6414bef32741ff2f4aefa739ce828570f9c2" translate="yes" xml:space="preserve">
          <source>Returns the result of &quot;setting&quot; the portion of the given data structure focused by the given lens to the result of applying the given function to the focused value.</source>
          <target state="translated">与えられたデータ構造のうち、与えられたレンズによってフォーカスされた部分を、フォーカスされた値に与えられた関数を適用した結果に「設定」した結果を返します。</target>
        </trans-unit>
        <trans-unit id="6e24fa4a9a3b3407f2c49461d483f8f3d16f4e2a" translate="yes" xml:space="preserve">
          <source>Returns the result of applying the onFailure function to the value inside a failed promise. This is useful for handling rejected promises inside function compositions.</source>
          <target state="translated">onFailure関数を、失敗したプロミス内の値に適用した結果を返します。これは、関数の構成内で拒否されたプロミスを処理するのに便利です。</target>
        </trans-unit>
        <trans-unit id="a1ef9217051b3b550ad6026de80c4a8a8e1b2fc1" translate="yes" xml:space="preserve">
          <source>Returns the result of applying the onSuccess function to the value inside a successfully resolved promise. This is useful for working with promises inside function compositions.</source>
          <target state="translated">onSuccess関数を、解決に成功したプロミス内の値に適用した結果を返します。これは、関数の構成内でプロミスを扱う際に便利です。</target>
        </trans-unit>
        <trans-unit id="793d3982a07bd96ed99813289195313a98da0eaa" translate="yes" xml:space="preserve">
          <source>Returns the result of calling its first argument with the remaining arguments. This is occasionally useful as a converging function for &lt;a href=&quot;#converge&quot;&gt;&lt;code&gt;R.converge&lt;/code&gt;&lt;/a&gt;: the first branch can produce a function while the remaining branches produce values to be passed to that function as its arguments.</source>
          <target state="translated">最初の引数を残りの引数とともに呼び出した結果を返します。これは、&lt;a href=&quot;#converge&quot;&gt; &lt;code&gt;R.converge&lt;/code&gt; の&lt;/a&gt;収束関数として役立つ場合があります。最初の分岐は関数を生成し、残りの分岐はその関数に引数として渡される値を生成します。</target>
        </trans-unit>
        <trans-unit id="de5911dcb62d61b6463e6c51b0b8d6abfd85418f" translate="yes" xml:space="preserve">
          <source>Returns the result of concatenating the given lists or strings.</source>
          <target state="translated">与えられたリストや文字列を連結した結果を返します。</target>
        </trans-unit>
        <trans-unit id="4be5ad973ba42f04032ae3ded96d245fbd57a333" translate="yes" xml:space="preserve">
          <source>Returns the right-to-left Kleisli composition of the provided functions, each of which must return a value of a type supported by &lt;a href=&quot;#chain&quot;&gt;&lt;code&gt;chain&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された関数の右から左へのKleisli構成を返します。各関数は、&lt;a href=&quot;#chain&quot;&gt; &lt;code&gt;chain&lt;/code&gt; で&lt;/a&gt;サポートされているタイプの値を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="d3a9111f38b8ea79f8570d1a8ea80bb0884e14d0" translate="yes" xml:space="preserve">
          <source>Returns the second argument if it is not &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;NaN&lt;/code&gt;; otherwise the first argument is returned.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 、 &lt;code&gt;undefined&lt;/code&gt; または &lt;code&gt;NaN&lt;/code&gt; でない場合、2番目の引数を返します。それ以外の場合は、最初の引数が返されます。</target>
        </trans-unit>
        <trans-unit id="956a54533ea4116288b777febfc08ad442e36b51" translate="yes" xml:space="preserve">
          <source>Returns the smaller of its two arguments.</source>
          <target state="translated">2つの引数のうち小さい方を返します。</target>
        </trans-unit>
        <trans-unit id="2c71fedee4fab64887627849065b5d636a9a02d1" translate="yes" xml:space="preserve">
          <source>Returns the string representation of the given value. &lt;code&gt;eval&lt;/code&gt;'ing the output should result in a value equivalent to the input value. Many of the built-in &lt;code&gt;toString&lt;/code&gt; methods do not satisfy this requirement.</source>
          <target state="translated">指定された値の文字列表現を返します。出力を &lt;code&gt;eval&lt;/code&gt; すると、入力値と同じ値になります。組み込みの &lt;code&gt;toString&lt;/code&gt; メソッドの多くは、この要件を満たしていません。</target>
        </trans-unit>
        <trans-unit id="ee21e4db9c89186e443545cf183ae8182b7f7215" translate="yes" xml:space="preserve">
          <source>Returns true if its arguments are identical, false otherwise. Values are identical if they reference the same memory. &lt;code&gt;NaN&lt;/code&gt; is identical to &lt;code&gt;NaN&lt;/code&gt;; &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;-0&lt;/code&gt; are not identical.</source>
          <target state="translated">引数が同一の場合はtrueを返し、それ以外の場合はfalseを返します。同じメモリを参照している場合、値は同じです。 &lt;code&gt;NaN&lt;/code&gt; は同一である &lt;code&gt;NaN&lt;/code&gt; 。 &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;-0&lt;/code&gt; は同一ではありません。</target>
        </trans-unit>
        <trans-unit id="0e07f9a0fd4f2a3ed05dee9ecce8b016f30418a9" translate="yes" xml:space="preserve">
          <source>Returns whether or not a path exists in an object. Only the object's own properties are checked.</source>
          <target state="translated">オブジェクト内にパスが存在するかどうかを返します。オブジェクト自身のプロパティのみがチェックされます。</target>
        </trans-unit>
        <trans-unit id="cacffac54a89b2daaf5b76474133d21cf76ed518" translate="yes" xml:space="preserve">
          <source>Returns whether or not an object has an own property with the specified name</source>
          <target state="translated">指定した名前のオブジェクトが自分のプロパティを持っているかどうかを返します</target>
        </trans-unit>
        <trans-unit id="5b06f95ecbafa0e3eabf74f792e1584031917df7" translate="yes" xml:space="preserve">
          <source>Returns whether or not an object or its prototype chain has a property with the specified name</source>
          <target state="translated">オブジェクトまたはそのプロトタイプチェーンが、指定した名前のプロパティを持っているかどうかを返します。</target>
        </trans-unit>
        <trans-unit id="d0b0bbf2402533023c81936e5eec34f62d910517" translate="yes" xml:space="preserve">
          <source>Runs the given function with the supplied object, then returns the object.</source>
          <target state="translated">与えられたオブジェクトで与えられた関数を実行し、そのオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="8ee9ec3dacfcd421d91b097673d486db1fd8e6d0" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#invertObj&quot;&gt;&lt;code&gt;R.invertObj&lt;/code&gt;&lt;/a&gt;, however this accounts for objects with duplicate values by putting the values into an array.</source>
          <target state="translated">&lt;a href=&quot;#invertObj&quot;&gt; &lt;code&gt;R.invertObj&lt;/code&gt; &lt;/a&gt;と同じですが、これは値を配列に入れることにより、重複する値を持つオブジェクトを考慮します。</target>
        </trans-unit>
        <trans-unit id="19e1f3de5882f002056d8f82912d7ce29bc2e676" translate="yes" xml:space="preserve">
          <source>Scan is similar to &lt;a href=&quot;#reduce&quot;&gt;&lt;code&gt;reduce&lt;/code&gt;&lt;/a&gt;, but returns a list of successively reduced values from the left</source>
          <target state="translated">スキャンは&lt;a href=&quot;#reduce&quot;&gt; &lt;code&gt;reduce&lt;/code&gt; &lt;/a&gt;に似ていますが、左から順に削減された値のリストを返します</target>
        </trans-unit>
        <trans-unit id="d7d9052069c2557d466595ba8744b261cb925379" translate="yes" xml:space="preserve">
          <source>Secondly, the special placeholder value &lt;a href=&quot;#__&quot;&gt;&lt;code&gt;R.__&lt;/code&gt;&lt;/a&gt; may be used to specify &quot;gaps&quot;, allowing partial application of any combination of arguments, regardless of their positions. If &lt;code&gt;g&lt;/code&gt; is as above and &lt;code&gt;_&lt;/code&gt; is &lt;a href=&quot;#__&quot;&gt;&lt;code&gt;R.__&lt;/code&gt;&lt;/a&gt;, the following are equivalent:</source>
          <target state="translated">第2に、特別なプレースホルダー値&lt;a href=&quot;#__&quot;&gt; &lt;code&gt;R.__&lt;/code&gt; &lt;/a&gt;を使用して「ギャップ」を指定し、位置に関係なく、引数の任意の組み合わせを部分的に適用できます。場合 &lt;code&gt;g&lt;/code&gt; 上記のようであり、 &lt;code&gt;_&lt;/code&gt; で&lt;a href=&quot;#__&quot;&gt; &lt;code&gt;R.__&lt;/code&gt; &lt;/a&gt;、以下が等価です。</target>
        </trans-unit>
        <trans-unit id="1badfc7091cb5da290f47773eb969e62d097c464" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#F&quot;&gt;F&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#F&quot;&gt;F&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="ec41da9bd8763c3c6478469a8da99883720426d5" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#T&quot;&gt;T&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#T&quot;&gt;T&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="ac5a8a4d5716a30febffa2f06de02d91a824b8ca" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#add&quot;&gt;add&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#add&quot;&gt;add&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="2b4fcfab3198e4bbd09f86eaa4615ebc22d5c89f" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mapAccum&quot;&gt;mapAccum&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mapAccum&quot;&gt;mapAccum&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="b45b336aae8b427e212658a978672c93c647716f" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="ee16ce5056c86bcdce8b1d2021048a00af0fc2a1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#adjust&quot;&gt;adjust&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Adjustも参照して &lt;code&gt;&lt;a href=&quot;#adjust&quot;&gt;adjust&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5ad33687024d2040057d639ffa4d88dccf2c099" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#all&quot;&gt;all&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#any&quot;&gt;any&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#all&quot;&gt;all&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#any&quot;&gt;any&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="fb937586f6dccddad205de244a3b1795108f4e0f" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#all&quot;&gt;all&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#none&quot;&gt;none&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#all&quot;&gt;all&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#none&quot;&gt;none&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="a60ae845c304328d5660f3a7d0a85770cb08f820" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#allPass&quot;&gt;allPass&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#allPass&quot;&gt;allPass&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="3a8e0a3ed34d44fc80ef109d211a3af68c4b0195" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#and&quot;&gt;and&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#and&quot;&gt;and&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="4d016e3ce3cee2343b6e3e6c071a22d68a6b2c87" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#any&quot;&gt;any&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#none&quot;&gt;none&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#any&quot;&gt;any&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#none&quot;&gt;none&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="720a68042664064c3e63e4f50c5cb0e871788cc9" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#any&quot;&gt;any&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#any&quot;&gt;any&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="09e0a171998170e71ab04647d68dc3707bfa2c11" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#anyPass&quot;&gt;anyPass&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#anyPass&quot;&gt;anyPass&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="71e1293a77153a87573f9b11c245868e1016eb6a" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#append&quot;&gt;append&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#append&quot;&gt;append&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="ba2ed050d6b9b71128ebdb91bdb1a98aab17b340" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#apply&quot;&gt;apply&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">「 &lt;code&gt;&lt;a href=&quot;#apply&quot;&gt;apply&lt;/a&gt;&lt;/code&gt; 」も参照してください。</target>
        </trans-unit>
        <trans-unit id="854c8a59415a08df1244929fcab54a16a5b6c83a" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#applySpec&quot;&gt;applySpec&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#applySpec&quot;&gt;applySpec&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="83ac2c535af877b09e7a49e96bce391e6d6bbc54" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#ascend&quot;&gt;ascend&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ascend&quot;&gt;ascend&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="5d891c4b0fd36c9f5e1bc85b63c7be60d1f432b0" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#assoc&quot;&gt;assoc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#omit&quot;&gt;omit&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">参照してください &lt;code&gt;&lt;a href=&quot;#assoc&quot;&gt;assoc&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#omit&quot;&gt;omit&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="833ac05f78a1f1aff8b872a5a7b59a29b6cda31a" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#assocPath&quot;&gt;assocPath&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#assocPath&quot;&gt;assocPath&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="e16f5c01897495f856dcc3fb9f5d497ed386a274" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#binary&quot;&gt;binary&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#nAry&quot;&gt;nAry&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#binary&quot;&gt;binary&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#nAry&quot;&gt;nAry&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="b8bfa37deadbb0c494422827b1c1b86fbe8bc397" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#binary&quot;&gt;binary&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#unary&quot;&gt;unary&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#binary&quot;&gt;binary&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#unary&quot;&gt;unary&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="62871915f20ab7a20b07980b0d4784b6c354ecbb" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#both&quot;&gt;both&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#both&quot;&gt;both&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="0aa4254ec7219566d9e39c4d450e6cca2928b27f" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#call&quot;&gt;call&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#unapply&quot;&gt;unapply&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#call&quot;&gt;call&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#unapply&quot;&gt;unapply&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="b83ab30327572870016d2e6eefb51cab31b3209b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#complement&quot;&gt;complement&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#complement&quot;&gt;complement&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="a0fce533f37042bade30a05fb89d6798e19101fb" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#compose&quot;&gt;compose&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#compose&quot;&gt;compose&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="2dab8b36164aeb72aa5dadf97eb38feed0a376bd" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#compose&quot;&gt;compose&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#pipeWith&quot;&gt;pipeWith&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#compose&quot;&gt;compose&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#pipeWith&quot;&gt;pipeWith&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="ce5d5c74b05c23c1c8d01afd03d0080f61083b37" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#compose&quot;&gt;compose&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#compose&quot;&gt;compose&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="d9485114b313ae0b8fcf3f3cb58044a760bc0faf" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#composeK&quot;&gt;composeK&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#composeK&quot;&gt;composeK&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="154c4215fd9651d76bfc4d40237839b2294006fd" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#composeP&quot;&gt;composeP&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#composeP&quot;&gt;composeP&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="8512a6df851f10d0d5cfb0d523c4e158fdf0bfec" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#composeWith&quot;&gt;composeWith&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#composeWith&quot;&gt;composeWith&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="96e1055c452c5cfcbc218c247b6b4ff433e381f6" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#construct&quot;&gt;construct&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#construct&quot;&gt;construct&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="3d77b98d57353403d4cef90288a17014d8c64685" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#converge&quot;&gt;converge&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#juxt&quot;&gt;juxt&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#converge&quot;&gt;converge&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#juxt&quot;&gt;juxt&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="a42f683226a757dcdad2cfc493bffd9970baed1f" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#converge&quot;&gt;converge&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#converge&quot;&gt;converge&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="25b1ef6abecf434a69bd39862832d40b0a9d4f1c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#curry&quot;&gt;curry&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#curry&quot;&gt;curry&lt;/a&gt;&lt;/code&gt; もご覧ください。</target>
        </trans-unit>
        <trans-unit id="e08386cb98ffcf2a33b7fde1ab642a6132b918bd" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#curryN&quot;&gt;curryN&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#partial&quot;&gt;partial&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#curryN&quot;&gt;curryN&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#partial&quot;&gt;partial&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="c5afa6a117082e7071cd3fafffa7e695902a96a1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#dec&quot;&gt;dec&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#dec&quot;&gt;dec&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="581c088c4ab1fdf7b885d22b8b9a03c92d776d25" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#descend&quot;&gt;descend&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">参照してください &lt;code&gt;&lt;a href=&quot;#descend&quot;&gt;descend&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6bc37e95b6d7e75d8da4bbe88da80b07f3e21e7e" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#symmetricDifference&quot;&gt;symmetricDifference&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#symmetricDifferenceWith&quot;&gt;symmetricDifferenceWith&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">参照してください &lt;code&gt;&lt;a href=&quot;#difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#symmetricDifference&quot;&gt;symmetricDifference&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#symmetricDifferenceWith&quot;&gt;symmetricDifferenceWith&lt;/a&gt;&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="eda3292b69992cd851c31bb082aa0af0f50aee7f" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#differenceWith&quot;&gt;differenceWith&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#symmetricDifference&quot;&gt;symmetricDifference&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#symmetricDifferenceWith&quot;&gt;symmetricDifferenceWith&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#without&quot;&gt;without&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">また、 &lt;code&gt;&lt;a href=&quot;#differenceWith&quot;&gt;differenceWith&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#symmetricDifference&quot;&gt;symmetricDifference&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#symmetricDifferenceWith&quot;&gt;symmetricDifferenceWith&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#without&quot;&gt;without&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="d0ba67c9735c19ef135651a454a578056ee9f01a" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#dissoc&quot;&gt;dissoc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#pick&quot;&gt;pick&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#dissoc&quot;&gt;dissoc&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#pick&quot;&gt;pick&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="92863654e6ef22389a5b4a3118ff424160f572b8" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#dissocPath&quot;&gt;dissocPath&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#dissocPath&quot;&gt;dissocPath&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="fef82f9cd3c0898afe9624039d5d4f4262fca137" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#divide&quot;&gt;divide&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#divide&quot;&gt;divide&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="80fd8b09487f46c3352123fdf8918fea81280773" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="41de8f8e6362de106638b05007cbf7186151e824" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#dropLast&quot;&gt;dropLast&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#dropLast&quot;&gt;dropLast&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="8d8f02a2fafcb2f5f6339f1a04db25e578fc9ab4" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#dropLastWhile&quot;&gt;dropLastWhile&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#dropLastWhile&quot;&gt;dropLastWhile&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="aaac2305efd34b4682e5e19c2f5fd1536963fffa" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="cca0d3fef74d52613f0e99a39a4cbe19dd612e2a" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#either&quot;&gt;either&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#either&quot;&gt;either&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="283c504d23b9b96fa602ee897bd2f8331316a3a0" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="86f17e0585c56c5d56d613ea9ca831b6aad5cfc3" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#endsWith&quot;&gt;endsWith&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#endsWith&quot;&gt;endsWith&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="996530ffeb61c7f6f3df7daac173e49c9952ad8c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#reject&quot;&gt;reject&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#reject&quot;&gt;reject&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="91ab7f9520e9000e0dfb831a841554f3446cac3c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="c283ebec78cde3e13313a9d113c7261c3a31077d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#flatten&quot;&gt;flatten&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#chain&quot;&gt;chain&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#flatten&quot;&gt;flatten&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#chain&quot;&gt;chain&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="0e8374a658026e23b2976aea5f2a377f0ca7edd8" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#fromPairs&quot;&gt;fromPairs&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#fromPairs&quot;&gt;fromPairs&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="86c262a1e49afae738c3388117bbffd181a58a49" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#reduce&quot;&gt;reduce&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#reduce&quot;&gt;reduce&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="9fbe36656bd38658b9e12e285cb3e41e1fb4befb" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#gt&quot;&gt;gt&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#gt&quot;&gt;gt&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="1bbb11e96f0b51fc08fc63b1872591e97132bfa6" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#gte&quot;&gt;gte&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#gte&quot;&gt;gte&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="638c27d40983f1ba0e3915e718d0167859a56aab" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#has&quot;&gt;has&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">参照してください &lt;code&gt;&lt;a href=&quot;#has&quot;&gt;has&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41db3f0a8fe664c43cc15277887c6e60154f50c8" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#head&quot;&gt;head&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#init&quot;&gt;init&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#head&quot;&gt;head&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#init&quot;&gt;init&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="c7b802c29822f65de07a3632c41706af1f251e26" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#ifElse&quot;&gt;ifElse&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#unless&quot;&gt;unless&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#cond&quot;&gt;cond&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">参照してください &lt;code&gt;&lt;a href=&quot;#ifElse&quot;&gt;ifElse&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#unless&quot;&gt;unless&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#cond&quot;&gt;cond&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af565379f2a54e9cce521694a648fa9083798ee0" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#ifElse&quot;&gt;ifElse&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#unless&quot;&gt;unless&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#when&quot;&gt;when&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">参照してください &lt;code&gt;&lt;a href=&quot;#ifElse&quot;&gt;ifElse&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#unless&quot;&gt;unless&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#when&quot;&gt;when&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="81b97440b36daa20291c05c4f756b88bc69f5674" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#ifElse&quot;&gt;ifElse&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#when&quot;&gt;when&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#cond&quot;&gt;cond&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ifElse&quot;&gt;ifElse&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#when&quot;&gt;when&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#cond&quot;&gt;cond&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="7155d79946c9f626d4c4cefee21300f78277a249" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#inc&quot;&gt;inc&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#inc&quot;&gt;inc&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="3c726915d8bd17262af9f96d2352bfe94e652d57" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#includes&quot;&gt;includes&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">参照してください &lt;code&gt;&lt;a href=&quot;#includes&quot;&gt;includes&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a9079013d948857b4c76e5473d6f0abf4b14bca" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#indexOf&quot;&gt;indexOf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#indexOf&quot;&gt;indexOf&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="7b9c945dd420d7140659276d3611df78b312ab54" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#init&quot;&gt;init&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#head&quot;&gt;head&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#tail&quot;&gt;tail&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#init&quot;&gt;init&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#head&quot;&gt;head&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#tail&quot;&gt;tail&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="c4948a3b6191b491ac8529e7b5fef236de35e41a" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#innerJoin&quot;&gt;innerJoin&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#innerJoin&quot;&gt;innerJoin&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="13bc438fe243e19004963b20aacab937872853d1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#intersection&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#intersection&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="323daabde2422247f1b688ed89c8e1dc996b63f2" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#invert&quot;&gt;invert&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#invert&quot;&gt;invert&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="ae3939b39597dad53e0c16f4ce150ae013b91f68" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#invertObj&quot;&gt;invertObj&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#invertObj&quot;&gt;invertObj&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="987f1c8f1d4df2acb772c3577e0ffbaff5e52418" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#invoker&quot;&gt;invoker&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#invoker&quot;&gt;invoker&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="b318b7e1d08c8773aab837411e63ba2ffdbdd360" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#is&quot;&gt;is&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#propSatisfies&quot;&gt;propSatisfies&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">参照して &lt;code&gt;&lt;a href=&quot;#is&quot;&gt;is&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#propSatisfies&quot;&gt;propSatisfies&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46dfc933f1839ec6c1c42888a2e9e096a30ed1b0" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#join&quot;&gt;join&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="e4a21dc2cf66d39c169c3c85045ae2f12ab30f27" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#valuesIn&quot;&gt;valuesIn&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#valuesIn&quot;&gt;valuesIn&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="6b7be0e950358712d9b686952b9c74f4911af22c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#keysIn&quot;&gt;keysIn&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#keysIn&quot;&gt;keysIn&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="083b324776269ecdaca3c643c96aefa34bf09c96" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#head&quot;&gt;head&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#tail&quot;&gt;tail&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#head&quot;&gt;head&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#tail&quot;&gt;tail&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="c6fdf5dfc8ea7095ae2f81fa101d45cef6d7c84b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#lastIndexOf&quot;&gt;lastIndexOf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#lastIndexOf&quot;&gt;lastIndexOf&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="e93f256cc845b74431beae8d9ac835727efc749e" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#lift&quot;&gt;lift&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#ap&quot;&gt;ap&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#lift&quot;&gt;lift&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#ap&quot;&gt;ap&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="fab487340e35ef513f700b78f0b6fe1e3988d1c8" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#liftN&quot;&gt;liftN&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#liftN&quot;&gt;liftN&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="75afc611eb7ebbd59148f00f68a1379033a70ce6" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#lt&quot;&gt;lt&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#lt&quot;&gt;lt&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="8100e0ab64a804309ceb006443833bee028020f3" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#lte&quot;&gt;lte&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#lte&quot;&gt;lte&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="38fa3856fcd7ef9aad6bb74a1009b1b4381a379d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#map&quot;&gt;map&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="0de2d3d775b68940a47ee9e9dcc3c1268f38078d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#match&quot;&gt;match&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#match&quot;&gt;match&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="5c77dadb7e934a80470ff853d83863c65e7dda1f" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#mathMod&quot;&gt;mathMod&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#mathMod&quot;&gt;mathMod&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="b7040e3d67e5dce273b511b35cfe073daee14984" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#max&quot;&gt;max&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#minBy&quot;&gt;minBy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#max&quot;&gt;max&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#minBy&quot;&gt;minBy&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="9da9877aba6b89b45f0fb8fbfed59588cf48404c" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#maxBy&quot;&gt;maxBy&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#min&quot;&gt;min&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#maxBy&quot;&gt;maxBy&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#min&quot;&gt;min&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="ffe28c30402655e5724cadfba6b00c31235827f1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#mean&quot;&gt;mean&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">参照してください &lt;code&gt;&lt;a href=&quot;#mean&quot;&gt;mean&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb89c8f4b7cfd4f9965650c8d7069a5d4907ff9b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#median&quot;&gt;median&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#median&quot;&gt;median&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="847f42a9c81d9a8069083247f0aa9536a06b9d28" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mergeDeepLeft&quot;&gt;mergeDeepLeft&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mergeDeepWith&quot;&gt;mergeDeepWith&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mergeDeepWithKey&quot;&gt;mergeDeepWithKey&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mergeDeepLeft&quot;&gt;mergeDeepLeft&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mergeDeepWith&quot;&gt;mergeDeepWith&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mergeDeepWithKey&quot;&gt;mergeDeepWithKey&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="eaed44da8054d998020f81bbb9d01a3b611f4e80" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mergeDeepRight&quot;&gt;mergeDeepRight&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mergeDeepWith&quot;&gt;mergeDeepWith&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mergeDeepWithKey&quot;&gt;mergeDeepWithKey&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mergeDeepRight&quot;&gt;mergeDeepRight&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mergeDeepWith&quot;&gt;mergeDeepWith&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mergeDeepWithKey&quot;&gt;mergeDeepWithKey&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="dfdf303070769103bc6a1e16166ce4e979f2f59e" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#mergeDeepWith&quot;&gt;mergeDeepWith&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#mergeDeepWith&quot;&gt;mergeDeepWith&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="4b9b984b6fe1b828d0346c6f1ba591fd68d23f1a" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#mergeDeepWithKey&quot;&gt;mergeDeepWithKey&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mergeWith&quot;&gt;mergeWith&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#mergeDeepWithKey&quot;&gt;mergeDeepWithKey&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mergeWith&quot;&gt;mergeWith&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="4faf0a8cd906903e6f4dd152212dd8491c145b00" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#mergeLeft&quot;&gt;mergeLeft&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mergeDeepRight&quot;&gt;mergeDeepRight&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mergeWith&quot;&gt;mergeWith&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#mergeLeft&quot;&gt;mergeLeft&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mergeDeepRight&quot;&gt;mergeDeepRight&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mergeWith&quot;&gt;mergeWith&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="9c2acdbf9fd1c94ad4eca407c09510581f7a7faf" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#mergeRight&quot;&gt;mergeRight&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mergeDeepLeft&quot;&gt;mergeDeepLeft&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mergeWith&quot;&gt;mergeWith&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#mergeRight&quot;&gt;mergeRight&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mergeDeepLeft&quot;&gt;mergeDeepLeft&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mergeWith&quot;&gt;mergeWith&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="ffcc50f8b65ab1b052999793bd8c332b4028000f" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#mergeRight&quot;&gt;mergeRight&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mergeDeepRight&quot;&gt;mergeDeepRight&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mergeWith&quot;&gt;mergeWith&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#mergeRight&quot;&gt;mergeRight&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mergeDeepRight&quot;&gt;mergeDeepRight&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mergeWith&quot;&gt;mergeWith&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="5665c79deaf29ef65da098690952f8119ce619d5" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#mergeWith&quot;&gt;mergeWith&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mergeDeepWithKey&quot;&gt;mergeDeepWithKey&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#mergeWith&quot;&gt;mergeWith&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mergeDeepWithKey&quot;&gt;mergeDeepWithKey&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="2be4c77672f6f718cceca2ff4493b56dc0888b22" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mergeDeepWith&quot;&gt;mergeDeepWith&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mergeDeepWith&quot;&gt;mergeDeepWith&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="b86c1b57d75e9d9becf1c32ff6d3866ef5d9970e" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#min&quot;&gt;min&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#maxBy&quot;&gt;maxBy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#min&quot;&gt;min&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#maxBy&quot;&gt;maxBy&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="895e4ccfe314c345e35d3fba8d1079784a5e20da" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#minBy&quot;&gt;minBy&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#max&quot;&gt;max&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#minBy&quot;&gt;minBy&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#max&quot;&gt;max&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="8eb1076f8dbd60f9d885c5c6b6af840706bc09b3" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#modulo&quot;&gt;modulo&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#modulo&quot;&gt;modulo&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="ed98d5bdd80c8404baf124688cc4bda73ff38d20" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#multiply&quot;&gt;multiply&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#multiply&quot;&gt;multiply&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="78fa991156c8db5c9cf2c38633cc81adae7cc729" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#nAry&quot;&gt;nAry&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#unary&quot;&gt;unary&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#nAry&quot;&gt;nAry&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#unary&quot;&gt;unary&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="5c62dca8a787ea7823101b0fb80fc4b7a3121423" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#not&quot;&gt;not&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#not&quot;&gt;not&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="1b63552de0f66288986ca3503b221ace4872de5b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#objOf&quot;&gt;objOf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#of&quot;&gt;of&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">参照してください &lt;code&gt;&lt;a href=&quot;#objOf&quot;&gt;objOf&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#of&quot;&gt;of&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f81432441a2ae7f916250c319cae96a6cf3b7fe8" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#omit&quot;&gt;omit&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#props&quot;&gt;props&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#omit&quot;&gt;omit&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#props&quot;&gt;props&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="d9e63488694ae4e1c0ae7ccee602efc23ff1ce3b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#or&quot;&gt;or&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#or&quot;&gt;or&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="ddc558cfeea6419c83d473dc5a1b5e230e33d871" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#otherwise&quot;&gt;otherwise&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#otherwise&quot;&gt;otherwise&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="6974bdcb2e1198c2d9b5726635d603068e9b0a6b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#pair&quot;&gt;pair&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#pair&quot;&gt;pair&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="563411c75d3ae960b97d2ae42a2421d0ce043d67" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#partial&quot;&gt;partial&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#partialRight&quot;&gt;partialRight&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#partial&quot;&gt;partial&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#partialRight&quot;&gt;partialRight&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="e25d701834dd028dc3ffa5cddaaeab965d3d7b67" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#partial&quot;&gt;partial&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#partial&quot;&gt;partial&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="444fe6cb9683bd9d01fdc797e386a2fa5e849d26" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#partialRight&quot;&gt;partialRight&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#curry&quot;&gt;curry&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#partialRight&quot;&gt;partialRight&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#curry&quot;&gt;curry&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="372df91cd9751715ce76e66841d234857e3fc85d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="468c1f89282107167ec941b933958831ce509f25" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#pick&quot;&gt;pick&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#pick&quot;&gt;pick&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="a8ee06f734b059e0d25786ee35fc58c1bc8e35cf" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#pick&quot;&gt;pick&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#pick&quot;&gt;pick&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="9cbe2120641173b9cc0c76234b794cd4f6e5c471" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#pipe&quot;&gt;pipe&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="1e2bc8c3fe7aba585d626dfb6d4d02c3f3994395" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#pipeK&quot;&gt;pipeK&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#pipeK&quot;&gt;pipeK&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="9d7860d4379f81b4e4140ea0fc6f51b738b22470" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#pipeP&quot;&gt;pipeP&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#pipeP&quot;&gt;pipeP&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="b1dddb0bba84e3e2ffb9552314796adf8827da92" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#prepend&quot;&gt;prepend&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#prepend&quot;&gt;prepend&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="eac636259a7846b130cfb64826746eeb6ad962f1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#prop&quot;&gt;prop&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#lensIndex&quot;&gt;lensIndex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#lensProp&quot;&gt;lensProp&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#prop&quot;&gt;prop&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#lensIndex&quot;&gt;lensIndex&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#lensProp&quot;&gt;lensProp&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="a4d904836ba168a6e1787dd94f3a6131bacf7776" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#prop&quot;&gt;prop&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#prop&quot;&gt;prop&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="deece6aeec612c74f420058219f053b9bf6b0778" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#propEq&quot;&gt;propEq&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#where&quot;&gt;where&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">参照してください &lt;code&gt;&lt;a href=&quot;#propEq&quot;&gt;propEq&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#where&quot;&gt;where&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7e97db9388ae918873ed35cecbf5837e9d4b7d9" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#propSatisfies&quot;&gt;propSatisfies&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#propSatisfies&quot;&gt;propSatisfies&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="66e409698480cd4aa811ea0a3a88221606d00768" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#propSatisfies&quot;&gt;propSatisfies&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#whereEq&quot;&gt;whereEq&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#propSatisfies&quot;&gt;propSatisfies&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#whereEq&quot;&gt;whereEq&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="e43988318e4e17877dd029cbe5f35909ea4918ee" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#props&quot;&gt;props&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#props&quot;&gt;props&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="7e4c827ad5ea7b0402190804dd95b3631a5aacd4" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#reduce&quot;&gt;reduce&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#reduce&quot;&gt;reduce&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="9d3a915ebf3129b186e93bfef4ba423bcdec926e" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#reduce&quot;&gt;reduce&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mapAccum&quot;&gt;mapAccum&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#reduce&quot;&gt;reduce&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mapAccum&quot;&gt;mapAccum&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="3a04d1a56120798783d7afc25669c94825ae2f50" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#reduce&quot;&gt;reduce&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#reduceWhile&quot;&gt;reduceWhile&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#reduce&quot;&gt;reduce&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#reduceWhile&quot;&gt;reduceWhile&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="ef94596fc70a1ec5cead1970d10fc03f41e63442" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#reduce&quot;&gt;reduce&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#reduced&quot;&gt;reduced&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#into&quot;&gt;into&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">参照してください &lt;code&gt;&lt;a href=&quot;#reduce&quot;&gt;reduce&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#reduced&quot;&gt;reduced&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#into&quot;&gt;into&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8282cd03f03dbaa1b0a5b89d15741e62bcfad515" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#reduce&quot;&gt;reduce&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#reduced&quot;&gt;reduced&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">参照してください &lt;code&gt;&lt;a href=&quot;#reduce&quot;&gt;reduce&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#reduced&quot;&gt;reduced&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="575f505e24eb9deae6f6563422a127ed8e1878c6" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#reduce&quot;&gt;reduce&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#reduce&quot;&gt;reduce&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="50fe89e0bf2df169f320014197988e92f41dda6d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#reduceBy&quot;&gt;reduceBy&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#reduceBy&quot;&gt;reduceBy&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="b2bc88775aafef1be696c582f9e5dbfd5aa65c83" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#reduced&quot;&gt;reduced&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#reduceRight&quot;&gt;reduceRight&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">参照して &lt;code&gt;&lt;a href=&quot;#reduced&quot;&gt;reduced&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#reduceRight&quot;&gt;reduceRight&lt;/a&gt;&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="75960a106e09233db796ece65bea45ee27240ddd" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#reject&quot;&gt;reject&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#reject&quot;&gt;reject&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="64868994aca99a9b011485ce14d37b9faf0ef494" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#repeat&quot;&gt;repeat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#repeat&quot;&gt;repeat&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="9d3c527c209d8c730851bb96ff98fd4742549599" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#scan&quot;&gt;scan&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#mapAccumRight&quot;&gt;mapAccumRight&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#scan&quot;&gt;scan&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#mapAccumRight&quot;&gt;mapAccumRight&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="d03a52f3017c186704382645c028bc5c41003250" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#sequence&quot;&gt;sequence&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#sequence&quot;&gt;sequence&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="39183d01ce135b6de8b750d26c533e398fbdcce1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#split&quot;&gt;split&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="579da36a9ba8df05d4bec43ed68f9fc4e6d88205" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#startsWith&quot;&gt;startsWith&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#startsWith&quot;&gt;startsWith&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="dae08f64bf4e5b73cc956d8e2aaee74fed09a8bf" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#subtract&quot;&gt;subtract&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#subtract&quot;&gt;subtract&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="422e99a321906d2b2dde41ec5fb0f2bcb853bbf7" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#symmetricDifference&quot;&gt;symmetricDifference&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#differenceWith&quot;&gt;differenceWith&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#symmetricDifference&quot;&gt;symmetricDifference&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#differenceWith&quot;&gt;differenceWith&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="d7f7e3b72c69ac6816a54227858c8e66363a88ee" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#symmetricDifferenceWith&quot;&gt;symmetricDifferenceWith&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#differenceWith&quot;&gt;differenceWith&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#symmetricDifferenceWith&quot;&gt;symmetricDifferenceWith&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#differenceWith&quot;&gt;differenceWith&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="37b821a9e88e5c65b23ac114038498d09e127432" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#tail&quot;&gt;tail&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#init&quot;&gt;init&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#last&quot;&gt;last&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#tail&quot;&gt;tail&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#init&quot;&gt;init&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="23f35dd609eba9dda72e471e74d38109a245337a" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#take&quot;&gt;take&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#dropLast&quot;&gt;dropLast&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#dropLast&quot;&gt;dropLast&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="c53b2b0d1b20f0d4ace2b071d74a850e68e9f7a0" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#takeLast&quot;&gt;takeLast&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#dropLastWhile&quot;&gt;dropLastWhile&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#takeLast&quot;&gt;takeLast&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#dropLastWhile&quot;&gt;dropLastWhile&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="a8ea7775b769c4d86bb2ea258aa7ef58f0bda02d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#takeLastWhile&quot;&gt;takeLastWhile&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#takeLastWhile&quot;&gt;takeLastWhile&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="fc923c0683e0a014a32fe6b46c060a50c9e302eb" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="a194c154803b986185d7c7742d26399cc5ba8000" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#test&quot;&gt;test&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#test&quot;&gt;test&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="b964b475b32b2caab96559d54b478936ff30f95e" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#then&quot;&gt;then&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#then&quot;&gt;then&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="8c947c9a0fa760ba0610d8fd0f017717386ae497" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#times&quot;&gt;times&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#times&quot;&gt;times&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="6c7d009f4f76b347169b5db1fb119383f4e5663d" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#toLower&quot;&gt;toLower&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#toLower&quot;&gt;toLower&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="079f7923d1ad683810677e9ca3f7304a4a96f0d4" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#toPairs&quot;&gt;toPairs&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#pair&quot;&gt;pair&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#toPairs&quot;&gt;toPairs&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#pair&quot;&gt;pair&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="4d5e2b4ed42ae0b5b52d8ef6a798e2ef23666543" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#toUpper&quot;&gt;toUpper&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#toUpper&quot;&gt;toUpper&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="850b6d575c179a2e6cf4fb119a7f56f3be716cd1" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#addIndex&quot;&gt;addIndex&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="4fd41b06215507ba2dcbf03f6eeb8bb743a33987" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#remove&quot;&gt;remove&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#remove&quot;&gt;remove&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="af048db6a0f24c80167987791cffaa82ad0be446" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#transduce&quot;&gt;transduce&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="cba46e52e822779c394786cc681166ebcbb751e2" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="05cf8aacb7ce5af1227781f7afa8f88bfd1ac2f4" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#union&quot;&gt;union&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="1bab6159d31eac4f192db530ea524b8e8d6364ec" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#unless&quot;&gt;unless&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#when&quot;&gt;when&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#cond&quot;&gt;cond&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">また、 &lt;code&gt;&lt;a href=&quot;#cond&quot;&gt;cond&lt;/a&gt;&lt;/code&gt; が &lt;code&gt;&lt;a href=&quot;#unless&quot;&gt;unless&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#when&quot;&gt;when&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="92d9f50ae77f0588dc02a1e636854f7c73f90d24" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#unnest&quot;&gt;unnest&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#unnest&quot;&gt;unnest&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="919fcdf5e1d88ba2be439770d07100db897545b3" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#update&quot;&gt;update&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#update&quot;&gt;update&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="defbcab5bf220ad84e0eb9446964b805eabf5773" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#useWith&quot;&gt;useWith&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#useWith&quot;&gt;useWith&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="df80c3a44af84d18d17db60812a75996273c81af" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#values&quot;&gt;values&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#keysIn&quot;&gt;keysIn&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#values&quot;&gt;values&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#keysIn&quot;&gt;keysIn&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="a6ace32dd166e966634bce2ed9e08e96b5e81238" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#valuesIn&quot;&gt;valuesIn&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#valuesIn&quot;&gt;valuesIn&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#keys&quot;&gt;keys&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="5441a3cd015884005468dd7779f017fa1394f8e2" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#view&quot;&gt;view&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#set&quot;&gt;set&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#over&quot;&gt;over&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#lensIndex&quot;&gt;lensIndex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#lensProp&quot;&gt;lensProp&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#view&quot;&gt;view&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#set&quot;&gt;set&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#over&quot;&gt;over&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#lensIndex&quot;&gt;lensIndex&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#lensProp&quot;&gt;lensProp&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="2f7eb2c216a54c69d56155f7b9b3fa3af39d1397" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#view&quot;&gt;view&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#set&quot;&gt;set&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#over&quot;&gt;over&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#view&quot;&gt;view&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#set&quot;&gt;set&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#over&quot;&gt;over&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="7c97507c4cb4a5d66a8ac9e5e97077d198c7f0ad" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#where&quot;&gt;where&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#propEq&quot;&gt;propEq&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#propIs&quot;&gt;propIs&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#where&quot;&gt;where&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#propEq&quot;&gt;propEq&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#propIs&quot;&gt;propIs&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="01e271bed9cdcc7855ec05dd554ab40c5101ed2b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#whereEq&quot;&gt;whereEq&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#propSatisfies&quot;&gt;propSatisfies&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#equals&quot;&gt;equals&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#whereEq&quot;&gt;whereEq&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#propSatisfies&quot;&gt;propSatisfies&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#equals&quot;&gt;equals&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="11aea2bfa7258473c0502a27e1bdbc3621c83e57" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;#without&quot;&gt;without&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#without&quot;&gt;without&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="db304b944c8a94ff878e0838cb0db18ebaaef287" translate="yes" xml:space="preserve">
          <source>See if an object (&lt;code&gt;val&lt;/code&gt;) is an instance of the supplied constructor. This function will check up the inheritance chain, if any.</source>
          <target state="translated">オブジェクト（ &lt;code&gt;val&lt;/code&gt; ）が、指定されたコンストラクターのインスタンスであるかどうかを確認します。この関数は、継承チェーンがある場合はそれをチェックします。</target>
        </trans-unit>
        <trans-unit id="421ddca0ddbbac97b345eb988702f4a9da633c6b" translate="yes" xml:space="preserve">
          <source>Shorthand for &lt;code&gt;R.chain(R.identity)&lt;/code&gt;, which removes one level of nesting from any &lt;a href=&quot;https://github.com/fantasyland/fantasy-land#chain&quot;&gt;Chain&lt;/a&gt;.</source>
          <target state="translated">省略形 &lt;code&gt;R.chain(R.identity)&lt;/code&gt; 任意のネストのレベル取り除き、&lt;a href=&quot;https://github.com/fantasyland/fantasy-land#chain&quot;&gt;チェーン&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6183d81f0a9e7fc7bfce9d5a704d331104f257c9" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#mapAccum&quot;&gt;&lt;code&gt;mapAccum&lt;/code&gt;&lt;/a&gt;, except moves through the input list from the right to the left.</source>
          <target state="translated">&lt;a href=&quot;#mapAccum&quot;&gt; &lt;code&gt;mapAccum&lt;/code&gt; &lt;/a&gt;と同様ですが、入力リストを右から左に移動します。</target>
        </trans-unit>
        <trans-unit id="ffef11e2ca9df59073a00200cc8fb4a6fcd71469" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#reduce&quot;&gt;&lt;code&gt;reduce&lt;/code&gt;&lt;/a&gt;, except moves through the input list from the right to the left.</source>
          <target state="translated">入力リストを右から左に移動する&lt;a href=&quot;#reduce&quot;&gt; &lt;code&gt;reduce&lt;/code&gt; &lt;/a&gt;を除いて、reduceと同様です。</target>
        </trans-unit>
        <trans-unit id="933981ba07fe3ade93fb3de48141e2c945643b0f" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;pick&lt;/code&gt; except that this one includes a &lt;code&gt;key: undefined&lt;/code&gt; pair for properties that don't exist.</source>
          <target state="translated">これには &lt;code&gt;key: undefined&lt;/code&gt; 含まれること &lt;code&gt;pick&lt;/code&gt; 除いて、pickに似ています。存在しないプロパティの未定義のペア。</target>
        </trans-unit>
        <trans-unit id="0283e396046767a946105323fc452b327c8515d5" translate="yes" xml:space="preserve">
          <source>Similarly, checks if a string ends with the provided substring.</source>
          <target state="translated">同様に、文字列が指定された部分文字列で終わるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="ddc9cfc31a4677bbc9342f29b6abee8440df4fd3" translate="yes" xml:space="preserve">
          <source>Similarly, checks if a string starts with the provided substring.</source>
          <target state="translated">同様に、文字列が指定された部分文字列で始まるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="91f0d9798849c45c11de164d5ba508592404bdcd" translate="yes" xml:space="preserve">
          <source>Sorts a list according to a list of comparators.</source>
          <target state="translated">比較対象のリストに従ってリストをソートします。</target>
        </trans-unit>
        <trans-unit id="fc3b06b32df3da57ace0107432a1437da1788813" translate="yes" xml:space="preserve">
          <source>Sorts the list according to the supplied function.</source>
          <target state="translated">与えられた関数に従ってリストをソートします。</target>
        </trans-unit>
        <trans-unit id="506816a0a271470cd0da8bbcf20176dad6c4f59f" translate="yes" xml:space="preserve">
          <source>Splits a collection into slices of the specified length.</source>
          <target state="translated">コレクションを指定した長さのスライスに分割します。</target>
        </trans-unit>
        <trans-unit id="13d5ce42d29d61c0960550d245ffdf0a1f6cb82c" translate="yes" xml:space="preserve">
          <source>Splits a given list or string at a given index.</source>
          <target state="translated">与えられたリストや文字列を、与えられたインデックスで分割します。</target>
        </trans-unit>
        <trans-unit id="8f6215238b867fc37d4ded4772cae67abb35d147" translate="yes" xml:space="preserve">
          <source>Splits a list into sub-lists stored in an object, based on the result of calling a String-returning function on each element, and grouping the results according to values returned.</source>
          <target state="translated">オブジェクトに格納されているリストを、各要素に対してString戻り関数を呼び出した結果に基づいてサブリストに分割し、返された値に応じてグループ化します。</target>
        </trans-unit>
        <trans-unit id="9091b2e0fa058abcea0d885c5e76afc8b47eb10a" translate="yes" xml:space="preserve">
          <source>Splits a string into an array of strings based on the given separator.</source>
          <target state="translated">与えられた区切り文字に基づいて文字列を文字列の配列に分割します。</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="1f030c4628cbb4dde5c8930836f44c064816b515" translate="yes" xml:space="preserve">
          <source>StringThe lower case version of `str`.</source>
          <target state="translated">String `str` の小文字版。</target>
        </trans-unit>
        <trans-unit id="86b921d2f4eef3387d7d40d95fb32782cfa92182" translate="yes" xml:space="preserve">
          <source>StringThe result.</source>
          <target state="translated">String結果。</target>
        </trans-unit>
        <trans-unit id="4a17d0f06c1c2c4ece2bec1e59c8e6d93e81911f" translate="yes" xml:space="preserve">
          <source>StringThe upper case version of `str`.</source>
          <target state="translated">String `str` の大文字版。</target>
        </trans-unit>
        <trans-unit id="90d74ac0b2e0cb60eee3083b6a0bf437370e6cff" translate="yes" xml:space="preserve">
          <source>StringTrimmed version of `str`.</source>
          <target state="translated">str`のStringTrimmed版。</target>
        </trans-unit>
        <trans-unit id="20eb0137205aeba8a484a853a93858d55c4914bb" translate="yes" xml:space="preserve">
          <source>Stringstr The string made by concatenating `xs` with `separator`.</source>
          <target state="translated">Stringstr `xs` と `separator` を連結した文字列.</target>
        </trans-unit>
        <trans-unit id="6340aaa6781118d20369055e8b27c0287b8ae1ef" translate="yes" xml:space="preserve">
          <source>Subtracts its second argument from its first argument.</source>
          <target state="translated">第1引数から第2引数を減算します。</target>
        </trans-unit>
        <trans-unit id="ce5bb50ab9f6251c009449db61ca7bae1a84d883" translate="yes" xml:space="preserve">
          <source>T  &lt;small&gt;Added in v0.9.0&lt;/small&gt;</source>
          <target state="translated">T &lt;small&gt;v0.9.0で追加&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b68fd679b134daa7e736f7f1b6198cd6d64997c7" translate="yes" xml:space="preserve">
          <source>Takes a function &lt;code&gt;f&lt;/code&gt; and a list of arguments, and returns a function &lt;code&gt;g&lt;/code&gt;. When applied, &lt;code&gt;g&lt;/code&gt; returns the result of applying &lt;code&gt;f&lt;/code&gt; to the arguments provided initially followed by the arguments provided to &lt;code&gt;g&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;f&lt;/code&gt; と引数のリストを取り、関数 &lt;code&gt;g&lt;/code&gt; を返します。適用すると、 &lt;code&gt;g&lt;/code&gt; は、最初に提供された引数に &lt;code&gt;f&lt;/code&gt; を適用した結果を返し、その後に &lt;code&gt;g&lt;/code&gt; に提供された引数が続きます。</target>
        </trans-unit>
        <trans-unit id="5d0616d54b871845213595436b4700015f1582e9" translate="yes" xml:space="preserve">
          <source>Takes a function &lt;code&gt;f&lt;/code&gt; and a list of arguments, and returns a function &lt;code&gt;g&lt;/code&gt;. When applied, &lt;code&gt;g&lt;/code&gt; returns the result of applying &lt;code&gt;f&lt;/code&gt; to the arguments provided to &lt;code&gt;g&lt;/code&gt; followed by the arguments provided initially.</source>
          <target state="translated">関数 &lt;code&gt;f&lt;/code&gt; と引数のリストを取り、関数 &lt;code&gt;g&lt;/code&gt; を返します。適用されたとき、 &lt;code&gt;g&lt;/code&gt; 適用した結果を返し &lt;code&gt;f&lt;/code&gt; に提供引数に &lt;code&gt;g&lt;/code&gt; は引数が最初に提供しました。</target>
        </trans-unit>
        <trans-unit id="10d3dba902e6493984c6b719f7189262662fb966" translate="yes" xml:space="preserve">
          <source>Takes a function &lt;code&gt;f&lt;/code&gt; and returns a function &lt;code&gt;g&lt;/code&gt; such that if called with the same arguments when &lt;code&gt;f&lt;/code&gt; returns a &quot;truthy&quot; value, &lt;code&gt;g&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt; and when &lt;code&gt;f&lt;/code&gt; returns a &quot;falsy&quot; value &lt;code&gt;g&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;f&lt;/code&gt; を受け取り、関数 &lt;code&gt;g&lt;/code&gt; を返します &lt;code&gt;f&lt;/code&gt; が「真の」値を返すときに同じ引数で呼び出された場合、 &lt;code&gt;g&lt;/code&gt; は &lt;code&gt;false&lt;/code&gt; を返し、 &lt;code&gt;f&lt;/code&gt; が「偽の」値を返す場合は &lt;code&gt;g&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8d84f2af274ade262df1b1460d2f063926a4d1a0" translate="yes" xml:space="preserve">
          <source>Takes a function &lt;code&gt;fn&lt;/code&gt;, which takes a single array argument, and returns a function which:</source>
          <target state="translated">単一の配列引数をとる関数 &lt;code&gt;fn&lt;/code&gt; を取り、次の関数を返します。</target>
        </trans-unit>
        <trans-unit id="fcb64d64a6442f07a63d7022909318dbe38d73d6" translate="yes" xml:space="preserve">
          <source>Takes a function and a &lt;a href=&quot;https://github.com/fantasyland/fantasy-land#functor&quot;&gt;functor&lt;/a&gt;, applies the function to each of the functor's values, and returns a functor of the same shape.</source>
          <target state="translated">関数と&lt;a href=&quot;https://github.com/fantasyland/fantasy-land#functor&quot;&gt;ファンクターを受け取り&lt;/a&gt;、関数をファンクターの各値に適用し、同じ形状のファンクターを返します。</target>
        </trans-unit>
        <trans-unit id="6d19c963165f2fb733f726588ded5897e4ac393b" translate="yes" xml:space="preserve">
          <source>Takes a function and two values in its domain and returns &lt;code&gt;true&lt;/code&gt; if the values map to the same value in the codomain; &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">関数とそのドメイン内の2つの値を受け取り、値がコドメイン内の同じ値にマップされている場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ee0e1e7310be7b4d292fa470be129fb80ebaa99" translate="yes" xml:space="preserve">
          <source>Takes a function and two values, and returns whichever value produces the larger result when passed to the provided function.</source>
          <target state="translated">関数と2つの値を受け取り、指定された関数に渡されたときにどちらか大きい方の値を返します。</target>
        </trans-unit>
        <trans-unit id="8f4714f5e92af90276c79d7bec03e36c281fef37" translate="yes" xml:space="preserve">
          <source>Takes a function and two values, and returns whichever value produces the smaller result when passed to the provided function.</source>
          <target state="translated">関数と2つの値を受け取り、指定された関数に渡されたときに結果が小さい方の値を返します。</target>
        </trans-unit>
        <trans-unit id="d9b17ed080ef4a0478ed922308a16df745c94d37" translate="yes" xml:space="preserve">
          <source>Takes a list and a predicate and returns a pair of lists with the following properties:</source>
          <target state="translated">リストと述語を受け取り、以下のプロパティを持つリストのペアを返します。</target>
        </trans-unit>
        <trans-unit id="a182bfeab35cea1e1f9548d195d5a9053bcfea9f" translate="yes" xml:space="preserve">
          <source>Takes a list and returns a list of lists where each sublist's elements are all satisfied pairwise comparison according to the provided function. Only adjacent elements are passed to the comparison function.</source>
          <target state="translated">リストを受け取り,各サブリストの要素が,指定された関数に従ってペアワイズ比較を満たすリストのリストを返します.隣接する要素のみが比較関数に渡されます。</target>
        </trans-unit>
        <trans-unit id="3983185d28a73597f8ab4e6ac2a16b83c85260e2" translate="yes" xml:space="preserve">
          <source>Takes a list of predicates and returns a predicate that returns true for a given list of arguments if at least one of the provided predicates is satisfied by those arguments.</source>
          <target state="translated">述語のリストを受け取り、与えられた引数のリストに対して、与えられた述語のうち少なくとも1つがそれらの引数によって満たされている場合に真を返す述語を返します。</target>
        </trans-unit>
        <trans-unit id="5168bdcdac943b2776cb6643dd46e64f11b49b96" translate="yes" xml:space="preserve">
          <source>Takes a list of predicates and returns a predicate that returns true for a given list of arguments if every one of the provided predicates is satisfied by those arguments.</source>
          <target state="translated">述語のリストを受け取り、与えられた引数のリストに対して、与えられた述語のすべてがそれらの引数によって満たされている場合に真を返す述語を返します。</target>
        </trans-unit>
        <trans-unit id="8353b4d14d2571601ee0387d9a48e2225182bb16" translate="yes" xml:space="preserve">
          <source>Takes a predicate &lt;code&gt;pred&lt;/code&gt;, a list &lt;code&gt;xs&lt;/code&gt;, and a list &lt;code&gt;ys&lt;/code&gt;, and returns a list &lt;code&gt;xs'&lt;/code&gt; comprising each of the elements of &lt;code&gt;xs&lt;/code&gt; which is equal to one or more elements of &lt;code&gt;ys&lt;/code&gt; according to &lt;code&gt;pred&lt;/code&gt;.</source>
          <target state="translated">述語かかる &lt;code&gt;pred&lt;/code&gt; が、リスト &lt;code&gt;xs&lt;/code&gt; 、及びリスト &lt;code&gt;ys&lt;/code&gt; 、リストを返し &lt;code&gt;xs'&lt;/code&gt; の各要素を含む &lt;code&gt;xs&lt;/code&gt; の1つの以上の要素に等しい &lt;code&gt;ys&lt;/code&gt; に従って &lt;code&gt;pred&lt;/code&gt; をします。</target>
        </trans-unit>
        <trans-unit id="1291f2388fecc1baa5bc332be7b8200ef47748e3" translate="yes" xml:space="preserve">
          <source>Takes a predicate and a &lt;code&gt;Filterable&lt;/code&gt;, and returns a new filterable of the same type containing the members of the given filterable which satisfy the given predicate. Filterable objects include plain objects or any object that has a filter method such as &lt;code&gt;Array&lt;/code&gt;.</source>
          <target state="translated">述語と &lt;code&gt;Filterable&lt;/code&gt; を取り、指定された述語を満たす指定されたFilterableのメンバーを含む同じタイプの新しいFilterableを返します。フィルター可能なオブジェクトには、プレーンオブジェクト、または &lt;code&gt;Array&lt;/code&gt; などのフィルターメソッドを持つオブジェクトが含まれます。</target>
        </trans-unit>
        <trans-unit id="7c3994a231385918a056000aaa5550ee1c127343" translate="yes" xml:space="preserve">
          <source>Takes a predicate and a list or other &lt;code&gt;Filterable&lt;/code&gt; object and returns the pair of filterable objects of the same type of elements which do and do not satisfy, the predicate, respectively. Filterable objects include plain objects or any object that has a filter method such as &lt;code&gt;Array&lt;/code&gt;.</source>
          <target state="translated">述語とリストまたは他の &lt;code&gt;Filterable&lt;/code&gt; オブジェクトを取り、それぞれ述語を満たし、満たしていない同じタイプの要素のフィルター可能なオブジェクトのペアをそれぞれ返します。フィルター可能なオブジェクトには、プレーンオブジェクト、または &lt;code&gt;Array&lt;/code&gt; などのフィルターメソッドを持つオブジェクトが含まれます。</target>
        </trans-unit>
        <trans-unit id="6da5e5d7317075f6626d764ed9c8c744b8bb6f6b" translate="yes" xml:space="preserve">
          <source>Takes a predicate, a transformation function, and an initial value, and returns a value of the same type as the initial value. It does so by applying the transformation until the predicate is satisfied, at which point it returns the satisfactory value.</source>
          <target state="translated">述語、変換関数、初期値を受け取り、初期値と同じ型の値を返します。述語が満たされるまで変換を適用し、その時点で満足のいく値を返します。</target>
        </trans-unit>
        <trans-unit id="20f7b6916aa9f648cae19020feca8c8addf4e5ec" translate="yes" xml:space="preserve">
          <source>Takes a spec object and a test object; returns true if the test satisfies the spec, false otherwise. An object satisfies the spec if, for each of the spec's own properties, accessing that property of the object gives the same value (in &lt;a href=&quot;#equals&quot;&gt;&lt;code&gt;R.equals&lt;/code&gt;&lt;/a&gt; terms) as accessing that property of the spec.</source>
          <target state="translated">specオブジェクトとtestオブジェクトを受け取ります。テストが仕様を満たしている場合はtrueを返し、それ以外の場合はfalseを返します。仕様の独自のプロパティごとに、オブジェクトのそのプロパティにアクセスすると、仕様のそのプロパティにアクセスするのと同じ値（&lt;a href=&quot;#equals&quot;&gt; &lt;code&gt;R.equals&lt;/code&gt; の&lt;/a&gt;用語）が得られる場合、オブジェクトは仕様を満たします。</target>
        </trans-unit>
        <trans-unit id="24a2dd255eeeab16948ae926672965a85f114308" translate="yes" xml:space="preserve">
          <source>Takes a spec object and a test object; returns true if the test satisfies the spec. Each of the spec's own properties must be a predicate function. Each predicate is applied to the value of the corresponding property of the test object. &lt;code&gt;where&lt;/code&gt; returns true if all the predicates return true, false otherwise.</source>
          <target state="translated">specオブジェクトとtestオブジェクトを受け取ります。テストが仕様を満たしている場合はtrueを返します。仕様の各プロパティは、述語関数でなければなりません。各述語は、テストオブジェクトの対応するプロパティの値に適用されます。 &lt;code&gt;where&lt;/code&gt; は、すべての述語がtrueを返す場合はtrueを返し、それ以外の場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="ea34a868179dcaf001ccfa538c8079d3434e9e9b" translate="yes" xml:space="preserve">
          <source>Takes a value and applies a function to it.</source>
          <target state="translated">値を取り、その値に関数を適用します。</target>
        </trans-unit>
        <trans-unit id="6a5b16a34c6893b203ace4979063d4879c502b24" translate="yes" xml:space="preserve">
          <source>Takes two arguments, &lt;code&gt;fst&lt;/code&gt; and &lt;code&gt;snd&lt;/code&gt;, and returns &lt;code&gt;[fst, snd]&lt;/code&gt;.</source>
          <target state="translated">2つの引数 &lt;code&gt;fst&lt;/code&gt; と &lt;code&gt;snd&lt;/code&gt; を取り、 &lt;code&gt;[fst, snd]&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="16a86f02fa0ef745f82f689fba29c880b76e9fe6" translate="yes" xml:space="preserve">
          <source>Tests a regular expression against a String. Note that this function will return an empty array when there are no matches. This differs from &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match&quot;&gt;&lt;code&gt;String.prototype.match&lt;/code&gt;&lt;/a&gt; which returns &lt;code&gt;null&lt;/code&gt; when there are no matches.</source>
          <target state="translated">文字列に対して正規表現をテストします。一致がない場合、この関数は空の配列を返すことに注意してください。これは、一致がない場合に &lt;code&gt;null&lt;/code&gt; を返す&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match&quot;&gt; &lt;code&gt;String.prototype.match&lt;/code&gt; &lt;/a&gt;とは異なります。</target>
        </trans-unit>
        <trans-unit id="d53469b8801cf22ce5f45fe01afd8b9953fa647a" translate="yes" xml:space="preserve">
          <source>Tests the final argument by passing it to the given predicate function. If the predicate is not satisfied, the function will return the result of calling the &lt;code&gt;whenFalseFn&lt;/code&gt; function with the same argument. If the predicate is satisfied, the argument is returned as is.</source>
          <target state="translated">指定された述語関数に渡して、最後の引数をテストします。述語が満たされない場合、関数は、同じ引数で &lt;code&gt;whenFalseFn&lt;/code&gt; 関数を呼び出した結果を返します。述語が満たされた場合、引数はそのまま返されます。</target>
        </trans-unit>
        <trans-unit id="6a55971ea52424e175c8d4027b0d3f48e9a22aab" translate="yes" xml:space="preserve">
          <source>Tests the final argument by passing it to the given predicate function. If the predicate is satisfied, the function will return the result of calling the &lt;code&gt;whenTrueFn&lt;/code&gt; function with the same argument. If the predicate is not satisfied, the argument is returned as is.</source>
          <target state="translated">指定された述語関数に渡して、最後の引数をテストします。述語が満たされた場合、関数は同じ引数を使用して &lt;code&gt;whenTrueFn&lt;/code&gt; 関数を呼び出した結果を返します。述語が満たされない場合、引数はそのまま返されます。</target>
        </trans-unit>
        <trans-unit id="a040614949a3577d4b7a7ef141045fc79153f0b7" translate="yes" xml:space="preserve">
          <source>The (initial) accumulator value for each group.</source>
          <target state="translated">各グループのアキュムレータ値(初期値)。</target>
        </trans-unit>
        <trans-unit id="9739fcdd8f3bfc530d14d6b6a6a001dbbaf330fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mapAccum&lt;/code&gt; function behaves like a combination of map and reduce; it applies a function to each element of a list, passing an accumulating parameter from left to right, and returning a final value of this accumulator together with the new list.</source>
          <target state="translated">&lt;code&gt;mapAccum&lt;/code&gt; のマップと削減の組み合わせのような機能に動作します。リストの各要素に関数を適用し、累積パラメーターを左から右に渡し、新しいリストと共にこのアキュムレーターの最終値を返します。</target>
        </trans-unit>
        <trans-unit id="fe579f0a0a4cf15caa363d85b70b8cc978297d8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mapAccumRight&lt;/code&gt; function behaves like a combination of map and reduce; it applies a function to each element of a list, passing an accumulating parameter from right to left, and returning a final value of this accumulator together with the new list.</source>
          <target state="translated">&lt;code&gt;mapAccumRight&lt;/code&gt; のマップの組み合わせのような関数の振る舞いと減らします。リストの各要素に関数を適用し、累積パラメーターを右から左に渡して、このリストの最終値を新しいリストと一緒に返します。</target>
        </trans-unit>
        <trans-unit id="8590f8c3a25bcd7b59ea64b9db93c3bf6bf24b4a" translate="yes" xml:space="preserve">
          <source>The String to do the search and replacement in.</source>
          <target state="translated">で検索・置換を行うための文字列。</target>
        </trans-unit>
        <trans-unit id="e3215bd08a6a574ebc8ba157d4a62f14866961a8" translate="yes" xml:space="preserve">
          <source>The accumulator can also be a transformer object that provides a 2-arity reducing iterator function, step, 0-arity initial value function, init, and 1-arity result extraction function result. The step function is used as the iterator function in reduce. The result function is used to convert the final accumulator into the return type and in most cases is R.identity. The init function is used to provide the initial accumulator.</source>
          <target state="translated">また、アキュムレータは、2-arityリデュースのイテレータ関数、ステップ関数、0-arity初期値関数、init、1-arity結果抽出関数の結果を提供する変換器オブジェクトであってもよい。ステップ関数はreduceのイテレータ関数として使用されます。result関数は、最終的なアキュムレータをリターン型に変換するために使用され、多くの場合はR.identityとなります。init関数は初期アキュムレータを提供するために使用されます。</target>
        </trans-unit>
        <trans-unit id="995ddd2f2210b6d211ebc151cab98c532ef28c2a" translate="yes" xml:space="preserve">
          <source>The accumulator can be an array, string, object or a transformer. Iterated items will be appended to arrays and concatenated to strings. Objects will be merged directly or 2-item arrays will be merged as key, value pairs.</source>
          <target state="translated">アキュムレータは、配列、文字列、オブジェクト、または変換器のいずれかになります。反復された項目は配列に追加され、文字列に連結されます。オブジェクトは直接マージされ、2項目の配列はキーと値のペアとしてマージされます。</target>
        </trans-unit>
        <trans-unit id="fde40e6abda5eba7f3220f492b9dca77f7dca59a" translate="yes" xml:space="preserve">
          <source>The accumulator value.</source>
          <target state="translated">アキュムレータの値。</target>
        </trans-unit>
        <trans-unit id="76538a3029246c0476729d29ed759988ab86ee52" translate="yes" xml:space="preserve">
          <source>The arguments to call &lt;code&gt;fn&lt;/code&gt; with</source>
          <target state="translated">引数は呼び出すために &lt;code&gt;fn&lt;/code&gt; と</target>
        </trans-unit>
        <trans-unit id="2f13f1b632ba92eafb6b317bdae65a61d058f8f8" translate="yes" xml:space="preserve">
          <source>The arguments' order of &lt;a href=&quot;#reduceRight&quot;&gt;&lt;code&gt;reduceRight&lt;/code&gt;&lt;/a&gt;'s iterator function is &lt;em&gt;(value, acc)&lt;/em&gt;.</source>
          <target state="translated">引数の&lt;a href=&quot;#reduceRight&quot;&gt; &lt;code&gt;reduceRight&lt;/code&gt; &lt;/a&gt;の反復関数の順序は&lt;em&gt;（値、acc）&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="a048eba7d6671d8b76bd53b4d01efd29503d6793" translate="yes" xml:space="preserve">
          <source>The arity for the returned function.</source>
          <target state="translated">返される関数のアリティ。</target>
        </trans-unit>
        <trans-unit id="fab4ad668b702a539f3ddbaff50b360b95a72f77" translate="yes" xml:space="preserve">
          <source>The arity of the constructor function.</source>
          <target state="translated">コンストラクタ関数のアリティ。</target>
        </trans-unit>
        <trans-unit id="da7cdfa29d1964ffd9a5787a673bf7d71289f2bb" translate="yes" xml:space="preserve">
          <source>The array of objects to index</source>
          <target state="translated">インデックスを作成するオブジェクトの配列</target>
        </trans-unit>
        <trans-unit id="1ae3fb349b5fd104025a80391853f624cf416572" translate="yes" xml:space="preserve">
          <source>The array or functor to consider.</source>
          <target state="translated">考慮すべき配列またはファンクタ。</target>
        </trans-unit>
        <trans-unit id="2fd41472219ab258f363e2e2547ab3aa2f2866db" translate="yes" xml:space="preserve">
          <source>The array that will be properties on the output object.</source>
          <target state="translated">出力オブジェクトのプロパティとなる配列。</target>
        </trans-unit>
        <trans-unit id="7183f321e994e0980dfd2ed8b6523d1f2c32ed67" translate="yes" xml:space="preserve">
          <source>The array to add to the tail of the output list.</source>
          <target state="translated">出力リストの末尾に追加する配列。</target>
        </trans-unit>
        <trans-unit id="121c5b5998ab84970d73ccca0ea1a35acda7ffbb" translate="yes" xml:space="preserve">
          <source>The array to be split.</source>
          <target state="translated">分割する配列。</target>
        </trans-unit>
        <trans-unit id="1c7c9cdb8af338577ba8db6b9390b84109eb06be" translate="yes" xml:space="preserve">
          <source>The array to consider.</source>
          <target state="translated">検討する配列。</target>
        </trans-unit>
        <trans-unit id="bfef94f7889c747480f6542302228924773b9ff8" translate="yes" xml:space="preserve">
          <source>The array to group</source>
          <target state="translated">グループ化する配列</target>
        </trans-unit>
        <trans-unit id="06454133d991751b6798fdc6a3b2f03c7667c5c3" translate="yes" xml:space="preserve">
          <source>The array to group.</source>
          <target state="translated">グループ化する配列。</target>
        </trans-unit>
        <trans-unit id="9387cb5fa6a972dcd3a198d857aa93c113aa08aa" translate="yes" xml:space="preserve">
          <source>The array to group. Also accepts a string, which will be treated as a list of characters.</source>
          <target state="translated">グループ化する配列。文字列も受け付けますが、これは文字のリストとして扱われます。</target>
        </trans-unit>
        <trans-unit id="50e5ff15f90ad9e47398678b0d49480bb061583f" translate="yes" xml:space="preserve">
          <source>The array to inspect.</source>
          <target state="translated">検査する配列。</target>
        </trans-unit>
        <trans-unit id="7b973cf4bb3ca65276e9540e0ee852b2396d23a8" translate="yes" xml:space="preserve">
          <source>The array to remove values from.</source>
          <target state="translated">値を削除する配列。</target>
        </trans-unit>
        <trans-unit id="53301df3984875b798353118a5d72bd00ef9c76b" translate="yes" xml:space="preserve">
          <source>The array to search in.</source>
          <target state="translated">検索対象の配列。</target>
        </trans-unit>
        <trans-unit id="6e339ac850582967d2c5615418730afe1471b8ad" translate="yes" xml:space="preserve">
          <source>The array/string to be split.</source>
          <target state="translated">分割する配列/文字列。</target>
        </trans-unit>
        <trans-unit id="5ed529ebeb76a0c966bfb5ffbf5081d91d826c14" translate="yes" xml:space="preserve">
          <source>The collection to consider.</source>
          <target state="translated">考察するコレクション。</target>
        </trans-unit>
        <trans-unit id="855f4ad927ec93a594cad344cf1931088533c109" translate="yes" xml:space="preserve">
          <source>The collection to iterate over.</source>
          <target state="translated">反復するコレクション。</target>
        </trans-unit>
        <trans-unit id="d45544b1d0551140a179335a10bf95729b75c026" translate="yes" xml:space="preserve">
          <source>The complement of &lt;a href=&quot;#filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#filter&quot;&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/a&gt;の補数。</target>
        </trans-unit>
        <trans-unit id="0c8381ee2fa3f6d0ac119d2135214b2b4bc833a0" translate="yes" xml:space="preserve">
          <source>The constructor function to wrap.</source>
          <target state="translated">ラップするコンストラクタ関数。</target>
        </trans-unit>
        <trans-unit id="02a69d89d4cfedee14e52dd6a76aea5ed1c00cef" translate="yes" xml:space="preserve">
          <source>The context to bind &lt;code&gt;fn&lt;/code&gt; to</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt; をバインドするコンテキスト</target>
        </trans-unit>
        <trans-unit id="175f9e59ae6d8d45a5ecbc8d3bf95ccec9b46335" translate="yes" xml:space="preserve">
          <source>The default value.</source>
          <target state="translated">デフォルト値です。</target>
        </trans-unit>
        <trans-unit id="fe82ebaac176ade65bc76b64d76cb6830ea6f867" translate="yes" xml:space="preserve">
          <source>The desired arity of the new function.</source>
          <target state="translated">新しい関数の希望するアリティ。</target>
        </trans-unit>
        <trans-unit id="d335a57b3225124868bdca7ccd3b3a87178ffdcd" translate="yes" xml:space="preserve">
          <source>The desired size of the output list.</source>
          <target state="translated">出力リストの希望するサイズ。</target>
        </trans-unit>
        <trans-unit id="f07fe6db3858849e57f1ae98f4a808de5cb9c651" translate="yes" xml:space="preserve">
          <source>The destination index</source>
          <target state="translated">宛先インデックス</target>
        </trans-unit>
        <trans-unit id="4cc015a72f51e2b50f25a4be4721bf09d282ceed" translate="yes" xml:space="preserve">
          <source>The dividend.</source>
          <target state="translated">配当金です。</target>
        </trans-unit>
        <trans-unit id="0534665a2968b5a3c356afc42f199fe3485afb86" translate="yes" xml:space="preserve">
          <source>The element to add to the end of the new list.</source>
          <target state="translated">新しいリストの最後に追加する要素。</target>
        </trans-unit>
        <trans-unit id="18179103959057c9d9621ac771ec2879baae8697" translate="yes" xml:space="preserve">
          <source>The element to add to the list.</source>
          <target state="translated">リストに追加する要素。</target>
        </trans-unit>
        <trans-unit id="828f7f5870543e06caaead6d2f3acf0ea5ba1126" translate="yes" xml:space="preserve">
          <source>The element to insert into the Array</source>
          <target state="translated">配列に挿入する要素</target>
        </trans-unit>
        <trans-unit id="29a0f0e833b17197cde191c6259fd1d5015fd8ff" translate="yes" xml:space="preserve">
          <source>The elements to join into a string.</source>
          <target state="translated">文字列に結合する要素。</target>
        </trans-unit>
        <trans-unit id="b6317ed452e476185c3663cf4e226821171b4df3" translate="yes" xml:space="preserve">
          <source>The end index (exclusive).</source>
          <target state="translated">エンドインデックス(排他的)。</target>
        </trans-unit>
        <trans-unit id="e4cc8fa73467a069a6808dc2a2f7ae012a35e27a" translate="yes" xml:space="preserve">
          <source>The final value of the reduce.</source>
          <target state="translated">リデュースの最終値です。</target>
        </trans-unit>
        <trans-unit id="dbc717e12b8a4ef6460ba35518b67d0f9ee0d908" translate="yes" xml:space="preserve">
          <source>The first array to consider.</source>
          <target state="translated">最初に考慮すべき配列。</target>
        </trans-unit>
        <trans-unit id="e98885a6731e37a7da0047bf153804132bbd2d5c" translate="yes" xml:space="preserve">
          <source>The first item to be compared.</source>
          <target state="translated">最初に比較対象となる項目です。</target>
        </trans-unit>
        <trans-unit id="1f5818baf967cdfd01a58c087d0122f7f032e1bb" translate="yes" xml:space="preserve">
          <source>The first list</source>
          <target state="translated">最初のリスト</target>
        </trans-unit>
        <trans-unit id="c70b1b2660043d425f203601e40766f84656c270" translate="yes" xml:space="preserve">
          <source>The first list.</source>
          <target state="translated">最初のリスト。</target>
        </trans-unit>
        <trans-unit id="c976dc410edf047de78ade66b3804cc06cef0bd8" translate="yes" xml:space="preserve">
          <source>The first number in the list.</source>
          <target state="translated">リストの最初の数字。</target>
        </trans-unit>
        <trans-unit id="457da1745646cb53daacb100ba0c4cd1f365ec8d" translate="yes" xml:space="preserve">
          <source>The first two parameters correspond to the parameters of the &lt;code&gt;String.prototype.replace()&lt;/code&gt; function, so the second parameter can also be a function.</source>
          <target state="translated">最初の2つのパラメーターは &lt;code&gt;String.prototype.replace()&lt;/code&gt; 関数のパラメーターに対応するため、2番目のパラメーターも関数にすることができます。</target>
        </trans-unit>
        <trans-unit id="e2439c1339300f0beeff9ce4d49e30645efecf00" translate="yes" xml:space="preserve">
          <source>The first value.</source>
          <target state="translated">最初の値。</target>
        </trans-unit>
        <trans-unit id="a5e68dd7206fd5153fb5bdabaa64ae4b1567b66d" translate="yes" xml:space="preserve">
          <source>The function called per iteration.</source>
          <target state="translated">反復ごとに呼び出される関数。</target>
        </trans-unit>
        <trans-unit id="6393ae0ddc8efcc6b50575cd53f76698c2d2cdd1" translate="yes" xml:space="preserve">
          <source>The function returned is a curried function whose arity matches that of the highest-arity predicate.</source>
          <target state="translated">返される関数は、アリティが最も高いアリティの述語のアリティと一致するカレード関数です。</target>
        </trans-unit>
        <trans-unit id="4beb9b1a26b52063347942092f68de450b1c9c84" translate="yes" xml:space="preserve">
          <source>The function that maps the list's element into a key.</source>
          <target state="translated">リストの要素をキーにマップする関数です。</target>
        </trans-unit>
        <trans-unit id="4d54d37572c6a05387abc4c6a50526c18fd6dd81" translate="yes" xml:space="preserve">
          <source>The function that may throw.</source>
          <target state="translated">投げられる可能性のある関数。</target>
        </trans-unit>
        <trans-unit id="eb0970142afc11ddc3d064dc325b894261e6daf4" translate="yes" xml:space="preserve">
          <source>The function that reduces the elements of each group to a single value. Receives two values, accumulator for a particular group and the current element.</source>
          <target state="translated">各グループの要素を1つの値に減らす機能。特定のグループのアキュムレータと現在の要素の2つの値を受け取ります。</target>
        </trans-unit>
        <trans-unit id="c7b0172ccd0108f2937572a1a9bced61f3894b1c" translate="yes" xml:space="preserve">
          <source>The function that will be evaluated if &lt;code&gt;tryer&lt;/code&gt; throws.</source>
          <target state="translated">&lt;code&gt;tryer&lt;/code&gt; スローした場合に評価される関数。</target>
        </trans-unit>
        <trans-unit id="3828529fe44b9d985f2819b39a61340d50812ed4" translate="yes" xml:space="preserve">
          <source>The function to apply</source>
          <target state="translated">適用する機能</target>
        </trans-unit>
        <trans-unit id="5319c507f15537dc8accf69d4a516356b56b9b9e" translate="yes" xml:space="preserve">
          <source>The function to apply to the remaining arguments.</source>
          <target state="translated">残りの引数に適用する関数。</target>
        </trans-unit>
        <trans-unit id="66debcc5c9e11b74e7426f800063be4482ac5e38" translate="yes" xml:space="preserve">
          <source>The function to apply.</source>
          <target state="translated">適用する機能です。</target>
        </trans-unit>
        <trans-unit id="aa558932358c9b7f5d28794d80177ab82805eae1" translate="yes" xml:space="preserve">
          <source>The function to apply. Can return a value or a promise of a value.</source>
          <target state="translated">適用する関数。値または値の約束を返すことができます。</target>
        </trans-unit>
        <trans-unit id="1fe813c9991ffe12ab78a293fbc9408a5a922ea1" translate="yes" xml:space="preserve">
          <source>The function to be called on each element</source>
          <target state="translated">各要素に呼び出される関数</target>
        </trans-unit>
        <trans-unit id="e4aa7781a13b652a8048eae721ed8c4f2baebe88" translate="yes" xml:space="preserve">
          <source>The function to be called on every element of the input &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">入力 &lt;code&gt;list&lt;/code&gt; すべての要素で呼び出される関数。</target>
        </trans-unit>
        <trans-unit id="3cd8340d6308bb72238d339a36160fb89218eb55" translate="yes" xml:space="preserve">
          <source>The function to bind to context</source>
          <target state="translated">コンテキストにバインドする関数</target>
        </trans-unit>
        <trans-unit id="81b850fdd8f00e660fa704e453a8d99741e30920" translate="yes" xml:space="preserve">
          <source>The function to call with &lt;code&gt;x&lt;/code&gt;. The return value of &lt;code&gt;fn&lt;/code&gt; will be thrown away.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; で呼び出す関数。 &lt;code&gt;fn&lt;/code&gt; の戻り値は破棄されます。</target>
        </trans-unit>
        <trans-unit id="94d2c59b9b9cdd8f6284d1138d6ead28d5a4df5c" translate="yes" xml:space="preserve">
          <source>The function to curry.</source>
          <target state="translated">カレーにする機能。</target>
        </trans-unit>
        <trans-unit id="8e84273d493c3c61aeee740947e68f4efe03a74a" translate="yes" xml:space="preserve">
          <source>The function to generate the cache key.</source>
          <target state="translated">キャッシュキーを生成する関数です。</target>
        </trans-unit>
        <trans-unit id="bdaadb4ff07deb04695fa44d84ec7250bf0a4a5a" translate="yes" xml:space="preserve">
          <source>The function to invoke with its first two parameters reversed.</source>
          <target state="translated">最初の2つのパラメータを逆にして呼び出す関数。</target>
        </trans-unit>
        <trans-unit id="9cdf583c17b14ff4f07180d70c6834fe56b4b2ea" translate="yes" xml:space="preserve">
          <source>The function to invoke. Passed one argument, the current value of &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">呼び出す関数。1つの引数として渡された &lt;code&gt;n&lt;/code&gt; の現在の値。</target>
        </trans-unit>
        <trans-unit id="036247d94e28b951f8c168ad0c4ef0913899b679" translate="yes" xml:space="preserve">
          <source>The function to invoke. Receives one argument, &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">呼び出す関数。1つの引数 &lt;code&gt;value&lt;/code&gt; を受け取ります。</target>
        </trans-unit>
        <trans-unit id="8a0c38576ac2a237463958bbf2e374cb2d459515" translate="yes" xml:space="preserve">
          <source>The function to invoke. Receives three argument, &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;obj&lt;/code&gt;.</source>
          <target state="translated">呼び出す関数。 3つの引数 &lt;code&gt;value&lt;/code&gt; 、 &lt;code&gt;key&lt;/code&gt; 、 &lt;code&gt;obj&lt;/code&gt; を受け取ります。</target>
        </trans-unit>
        <trans-unit id="b81a3ca00fd49a705185b2a878c520153db9f3c3" translate="yes" xml:space="preserve">
          <source>The function to lift into higher context</source>
          <target state="translated">より高い文脈に持ち上げる機能</target>
        </trans-unit>
        <trans-unit id="5c7c80f0524d1e914bb855340f8c97e619fbe88c" translate="yes" xml:space="preserve">
          <source>The function to map with</source>
          <target state="translated">でマッピングする機能</target>
        </trans-unit>
        <trans-unit id="a88c10e32f38fe07417b882dfe8dbacd80d35797" translate="yes" xml:space="preserve">
          <source>The function to memoize.</source>
          <target state="translated">メモする機能です。</target>
        </trans-unit>
        <trans-unit id="331728f8f81043750853dc89aaecc65586c43d63" translate="yes" xml:space="preserve">
          <source>The function to uncurry.</source>
          <target state="translated">カリカリを解除する機能です。</target>
        </trans-unit>
        <trans-unit id="6de9c8374883d471fd028cc94a78251fc394419f" translate="yes" xml:space="preserve">
          <source>The function to wrap in a call-only-once wrapper.</source>
          <target state="translated">呼び出しのみのラッパーでラップする関数です。</target>
        </trans-unit>
        <trans-unit id="818483846ef2282fe88a2ae296752a2d10573267" translate="yes" xml:space="preserve">
          <source>The function to wrap.</source>
          <target state="translated">ラップする関数です。</target>
        </trans-unit>
        <trans-unit id="ddb7f4c04bbf66867e5a63e8a338c0b906652dc2" translate="yes" xml:space="preserve">
          <source>The function used to combine the two elements into one value.</source>
          <target state="translated">2つの要素を1つの値に結合するために使用される関数です。</target>
        </trans-unit>
        <trans-unit id="daf12a2cbb72af5a9ee4ff6686922a2b2900f9fe" translate="yes" xml:space="preserve">
          <source>The function used to map values to keys.</source>
          <target state="translated">値をキーにマッピングするために使用する関数です。</target>
        </trans-unit>
        <trans-unit id="7a30108d0a9a236d754d96586eeb5ef1ee6893a5" translate="yes" xml:space="preserve">
          <source>The function which will be called with &lt;code&gt;args&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; で呼び出される関数</target>
        </trans-unit>
        <trans-unit id="9c7c17cf63fc500c3cec515447cd45da18da53e2" translate="yes" xml:space="preserve">
          <source>The functions to compose</source>
          <target state="translated">作曲する機能</target>
        </trans-unit>
        <trans-unit id="575fda007ceaa10a6490438c9dce54dd87ee71d3" translate="yes" xml:space="preserve">
          <source>The index to update.</source>
          <target state="translated">更新するインデックス。</target>
        </trans-unit>
        <trans-unit id="33c601db723dfbd09baeea748b8151237da6112f" translate="yes" xml:space="preserve">
          <source>The index where the array/string is split.</source>
          <target state="translated">配列/文字列が分割されるインデックス。</target>
        </trans-unit>
        <trans-unit id="4dd9df4788f29de75fb62d913aea700844f5ed25" translate="yes" xml:space="preserve">
          <source>The index.</source>
          <target state="translated">インデックス。</target>
        </trans-unit>
        <trans-unit id="1851f1f4c1dcc830f58d8aeabab407c94aeb6401" translate="yes" xml:space="preserve">
          <source>The initial accumulator value.</source>
          <target state="translated">アキュムレータの初期値。</target>
        </trans-unit>
        <trans-unit id="5ec982d59ba4bf0e308bb70c3a678ee45779d958" translate="yes" xml:space="preserve">
          <source>The item to add to the head of the output list.</source>
          <target state="translated">出力リストの先頭に追加する項目。</target>
        </trans-unit>
        <trans-unit id="5bfd29d3cac047a1f409023a70cd44b9f700a84c" translate="yes" xml:space="preserve">
          <source>The item to compare against.</source>
          <target state="translated">比較対象となる項目。</target>
        </trans-unit>
        <trans-unit id="2dc4230959cea6d21a8dfded5cd164680eddcb3e" translate="yes" xml:space="preserve">
          <source>The item to find.</source>
          <target state="translated">探すアイテム。</target>
        </trans-unit>
        <trans-unit id="86c19e3f54ba2b80d5d4952abfad56a1530d2d0a" translate="yes" xml:space="preserve">
          <source>The iteration is performed with &lt;a href=&quot;#reduce&quot;&gt;&lt;code&gt;R.reduce&lt;/code&gt;&lt;/a&gt; after initializing the transducer.</source>
          <target state="translated">反復は、トランスデューサの初期化後に&lt;a href=&quot;#reduce&quot;&gt; &lt;code&gt;R.reduce&lt;/code&gt; &lt;/a&gt;で実行されます。</target>
        </trans-unit>
        <trans-unit id="dabe193d77476003793be76bdf388c466cfc2e05" translate="yes" xml:space="preserve">
          <source>The iterator function</source>
          <target state="translated">イテレータ関数</target>
        </trans-unit>
        <trans-unit id="897dab7540c827ec97e3920f553f71cdde30fcc5" translate="yes" xml:space="preserve">
          <source>The iterator function receives one argument: &lt;em&gt;(seed)&lt;/em&gt;.</source>
          <target state="translated">反復関数は、1つの引数&lt;em&gt;（seed）&lt;/em&gt;を受け取ります。</target>
        </trans-unit>
        <trans-unit id="4bcc24bebabb8c2ccb0e7b430c63791e9a34b6e7" translate="yes" xml:space="preserve">
          <source>The iterator function receives two arguments, &lt;em&gt;acc&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt;, and should return a tuple &lt;em&gt;[acc, value]&lt;/em&gt;.</source>
          <target state="translated">反復関数は2つの引数&lt;em&gt;acc&lt;/em&gt;と&lt;em&gt;value&lt;/em&gt;を受け取り、タプル&lt;em&gt;[acc、value]&lt;/em&gt;を返す必要があり&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3040a14cea5041c1914f737e34e2681fb7037b3f" translate="yes" xml:space="preserve">
          <source>The iterator function receives two values: &lt;em&gt;(acc, value)&lt;/em&gt;. It may use &lt;a href=&quot;#reduced&quot;&gt;&lt;code&gt;R.reduced&lt;/code&gt;&lt;/a&gt; to shortcut the iteration.</source>
          <target state="translated">イテレータ関数は&lt;em&gt;（acc、value）の&lt;/em&gt; 2つの値を受け取ります。反復を&lt;a href=&quot;#reduced&quot;&gt; &lt;code&gt;R.reduced&lt;/code&gt; &lt;/a&gt;するためにR.reducedを使用する場合があります。</target>
        </trans-unit>
        <trans-unit id="53dcb4ad3f964e21cbeba66e57efd14e4463037b" translate="yes" xml:space="preserve">
          <source>The iterator function receives two values: &lt;em&gt;(acc, value)&lt;/em&gt;. It will be wrapped as a transformer to initialize the transducer. A transformer can be passed directly in place of an iterator function. In both cases, iteration may be stopped early with the &lt;a href=&quot;#reduced&quot;&gt;&lt;code&gt;R.reduced&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">イテレータ関数は&lt;em&gt;（acc、value）の&lt;/em&gt; 2つの値を受け取ります。トランスデューサーを初期化するためのトランスとしてラップされます。トランスフォーマーは、イテレーター関数の代わりに直接渡すことができます。どちらの場合も、&lt;a href=&quot;#reduced&quot;&gt; &lt;code&gt;R.reduced&lt;/code&gt; &lt;/a&gt;関数を使用すると、反復を早期に停止できます。</target>
        </trans-unit>
        <trans-unit id="ea08bda33b90eb497cc87d76dfc39c60f1e44065" translate="yes" xml:space="preserve">
          <source>The iterator function receives two values: &lt;em&gt;(value, acc)&lt;/em&gt;, while the arguments' order of &lt;code&gt;reduce&lt;/code&gt;'s iterator function is &lt;em&gt;(acc, value)&lt;/em&gt;.</source>
          <target state="translated">反復関数は&lt;em&gt;（value、acc）の&lt;/em&gt; 2つの値を受け取り&lt;em&gt;ますが、&lt;/em&gt; &lt;code&gt;reduce&lt;/code&gt; の反復関数の引数の順序は&lt;em&gt;（acc、value）&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="7303e2e70cd7bb760f90f7c62db56bd96c3f0642" translate="yes" xml:space="preserve">
          <source>The iterator function. Receives two values, the accumulator and the current element from the array</source>
          <target state="translated">イテレータ関数です。配列からアキュムレータと現在の要素の2つの値を受け取る</target>
        </trans-unit>
        <trans-unit id="aae6640c60d0559343281143d2e4e6819bbb801d" translate="yes" xml:space="preserve">
          <source>The iterator function. Receives two values, the accumulator and the current element from the array.</source>
          <target state="translated">イテレータ関数です。配列からアキュムレータと現在の要素の2つの値を受け取ります。</target>
        </trans-unit>
        <trans-unit id="639ea1010fb35295af1aa9a2aba193b444327fa9" translate="yes" xml:space="preserve">
          <source>The iterator function. Receives two values, the accumulator and the current element from the array. Wrapped as transformer, if necessary, and used to initialize the transducer</source>
          <target state="translated">イテレータ関数です。アキュムレータと現在の要素の2つの値を配列から受け取る。必要に応じてトランスデューサとしてラップされ、トランスデューサの初期化に使用される</target>
        </trans-unit>
        <trans-unit id="92ffae64ba1679b60f60fdeb69c8f0590734631d" translate="yes" xml:space="preserve">
          <source>The iterator function. Receives two values, the accumulator and the current element.</source>
          <target state="translated">イテレータ関数です。アキュムレータと現在の要素の2つの値を受け取ります。</target>
        </trans-unit>
        <trans-unit id="2b428ca7b5d99c25baea47cb9f548cbbd176ccce" translate="yes" xml:space="preserve">
          <source>The iterator function. Receives two values, the current element from the array and the accumulator.</source>
          <target state="translated">イテレータ関数です。配列から現在の要素とアキュムレータの2つの値を受け取ります。</target>
        </trans-unit>
        <trans-unit id="76cee8f78add8a3ede03cbf173c120aa5cf1ae33" translate="yes" xml:space="preserve">
          <source>The iterator function. receives one argument, &lt;code&gt;seed&lt;/code&gt;, and returns either false to quit iteration or an array of length two to proceed. The element at index 0 of this array will be added to the resulting array, and the element at index 1 will be passed to the next call to &lt;code&gt;fn&lt;/code&gt;.</source>
          <target state="translated">イテレータ関数。は、1つの引数 &lt;code&gt;seed&lt;/code&gt; を受け取り、繰り返しを中止する場合はfalseを、続行する場合は長さ2の配列を返します。この配列のインデックス0の要素が結果の配列に追加され、インデックス1の要素が次の &lt;code&gt;fn&lt;/code&gt; の呼び出しに渡されます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
