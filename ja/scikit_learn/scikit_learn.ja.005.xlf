<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="scikit_learn">
    <body>
      <group id="scikit_learn">
        <trans-unit id="7c5b63fbb9beaf2dde5378d9e8cf92993fd2df19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LassoLarsCV.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LassoLarsCV.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="ecf72604b887d8899cc998d229f0b6bda5b16fbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LassoLarsIC.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, copy_X])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf74d2e98392b1eb7d96f0c119d44f4a1951cdc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LassoLarsIC.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LassoLarsIC.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="48deac87772397fcc4a0d24546e29fb29228eb5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LassoLarsIC.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LassoLarsIC.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="bcd547f829e0230e1a5443278b4f90b0b0503fe2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LassoLarsIC.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4060f5d24ced6c0d5bcf20084c8de080e457bdec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LassoLarsIC.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LassoLarsIC.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="de92fb71bd62c920960d798af58af853f1a5bfa9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LinearRegression.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c255e88c94044d976bbd063695c916f7c61a300e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LinearRegression.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LinearRegression.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="66f0634709ad15af688d70b7c8e3fa58eeaa2149" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LinearRegression.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LinearRegression.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="b4eb2db18703402a3a7216d9d171d1555fc585ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LinearRegression.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b2aeeca3e73f62d00454ebd0c6567950f633ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LinearRegression.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LinearRegression.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="f9b517e33ac8d6974781b27b667e48096878a71f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LogisticRegression.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LogisticRegression.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="9ad667283905c6c27ca24cdcc36f6f79f13d2b46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LogisticRegression.densify&quot;&gt;&lt;code&gt;densify&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LogisticRegression.densify&quot;&gt;&lt;code&gt;densify&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="a5bbc26f6961477cc89b3ac11c0efad7eb864f4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LogisticRegression.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80bcb6a684662e8a6db8fea5611f27072475702f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LogisticRegression.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LogisticRegression.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="496bfe2ad1fa7e6e54bfcf59587b91c8884f08ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LogisticRegression.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LogisticRegression.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="be66317f4b6b8dbcc7822619089d20f739413900" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LogisticRegression.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LogisticRegression.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="1432e1b89057aa7ce132d7ced45fbce7a1519260" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LogisticRegression.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LogisticRegression.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="82c3f61a9c5f76d0a0c42a690262018b0233a19c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LogisticRegression.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d7443b88e3201f70a7cd1fb52d6aaa6f1527c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LogisticRegression.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LogisticRegression.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="2e08afd24fe7f863ba193155c11a192768a082ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LogisticRegression.sparsify&quot;&gt;&lt;code&gt;sparsify&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LogisticRegression.sparsify&quot;&gt;&lt;code&gt;sparsify&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="3bcaac4acd8d5b3680385dab5676eae209e4cf90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LogisticRegressionCV.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LogisticRegressionCV.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="fb38d5ac54f69380be49954717260b9ced643a38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LogisticRegressionCV.densify&quot;&gt;&lt;code&gt;densify&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LogisticRegressionCV.densify&quot;&gt;&lt;code&gt;densify&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="9ea62be7cd1315314e13c6b96ee7bbdff95e3f4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LogisticRegressionCV.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dce8b5cabeac0ec5f8e6c053a398ed66d895976" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LogisticRegressionCV.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LogisticRegressionCV.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="9fa6b044af847705a7f79ace80a58c44a1e19e9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LogisticRegressionCV.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LogisticRegressionCV.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="c8be96395c66c8fc64e34cae743da5bd38f05cd9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LogisticRegressionCV.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LogisticRegressionCV.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="3b2dd87fe10b547942da8726990146cf36e4336d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LogisticRegressionCV.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LogisticRegressionCV.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="87fdad71fe62d57112cff9aeaa66f083b9b4d3bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LogisticRegressionCV.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4348ec4fdeb86aac6188beca7d09d781f81c11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LogisticRegressionCV.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LogisticRegressionCV.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="453d2b774af55cb83b7387381f5752b558434de4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.LogisticRegressionCV.sparsify&quot;&gt;&lt;code&gt;sparsify&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.LogisticRegressionCV.sparsify&quot;&gt;&lt;code&gt;sparsify&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="32af962f4008176cb41798de1dc90e551519b63a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskElasticNet&quot;&gt;&lt;code&gt;MultiTaskElasticNet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.multitaskelasticnetcv#sklearn.linear_model.MultiTaskElasticNetCV&quot;&gt;&lt;code&gt;MultiTaskElasticNetCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.elasticnet#sklearn.linear_model.ElasticNet&quot;&gt;&lt;code&gt;ElasticNet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.linear_model.elasticnetcv#sklearn.linear_model.ElasticNetCV&quot;&gt;&lt;code&gt;ElasticNetCV&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf4cde32a278c30846c4860c48cb9f498015fa8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskElasticNet.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d26bed7af955634d2bcc02b4d0e15610da62c01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskElasticNet.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.MultiTaskElasticNet.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="bb9a1a7a4e1c527178807d5aa31feeceb1ca81b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskElasticNet.path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt;(X, y[, l1_ratio, eps, n_alphas, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d73a58191eeb9ef0e39e3c47984bf4a195632c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskElasticNet.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.MultiTaskElasticNet.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="a82b9d92d4d56ec43a50772da18a5cdebc2aa118" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskElasticNet.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c5b1d7e932812e5a4311e99f55bb2efd3cf80f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskElasticNet.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.MultiTaskElasticNet.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="dff5c5cc56bda1933ca942e152d466fcc5d7adfb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskElasticNetCV.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="909b25fbb1e365e45a6f12c5bdc88509b762f69e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskElasticNetCV.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.MultiTaskElasticNetCV.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="3df57ca8bf0b44fdbcf371c7376d5634d6e3c3cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskElasticNetCV.path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt;(X, y[, l1_ratio, eps, n_alphas, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5f9b352542fd7554ca290ffcc119014d1de80c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskElasticNetCV.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.MultiTaskElasticNetCV.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="86a116f7abecffbfca6b6ce6940140225afc285f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskElasticNetCV.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0961ed102682fb635191638f43876b8f2b9f9b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskElasticNetCV.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.MultiTaskElasticNetCV.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="31c6e7c137486cd0457de49da8ac0006c1c40cee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskLasso.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523fae1bdb6a07133a3e167af474ac920154aec4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskLasso.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.MultiTaskLasso.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="f9500ad4e606e73da90c12f819370111079450e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskLasso.path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt;(X, y[, l1_ratio, eps, n_alphas, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a9bfb569065e7c5e69e51b4c12de7e96080581" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskLasso.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.MultiTaskLasso.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="97e702c571787d576d5b595ab4ee8914a0e168e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskLasso.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed60ed3de53ac6379a06e1e8135c017374ec273" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskLasso.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.MultiTaskLasso.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="787bf795d961b9284ab7349c51ec51f8ae03d357" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskLassoCV.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23652f871040567eb4b1de44aa8aa1635700d416" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskLassoCV.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.MultiTaskLassoCV.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="6f2528020b782d2602193699767c17dbc991921b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskLassoCV.path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt;(X, y[, eps, n_alphas, alphas, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dca0e11cbaede69a1cef9bd651f89bd0a7eeaec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskLassoCV.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.MultiTaskLassoCV.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="df15d9b1770fadf839f3a7eeded56e5d413a54d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskLassoCV.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28faeb78868d7e8b7371c4fe9da2a64bd036c3f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.MultiTaskLassoCV.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.MultiTaskLassoCV.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="4919a3ada442f6336bc2bc1f028be3be6f8e8c4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.OrthogonalMatchingPursuit.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78b32d71a92af56f7b3bbc574679123bcc4b6d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.OrthogonalMatchingPursuit.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.OrthogonalMatchingPursuit.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="7fc60b5a4b6cdb2c27499c2811af9e20f7057433" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.OrthogonalMatchingPursuit.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.OrthogonalMatchingPursuit.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="318e76685d4f3b7b47f20a4b89cc27b85fb0fe33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.OrthogonalMatchingPursuit.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d92f62270bb3f3751e34002d8d3624dda041323" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.OrthogonalMatchingPursuit.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.OrthogonalMatchingPursuit.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="84a708539a876803e0449912880f101c2dc206bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.OrthogonalMatchingPursuitCV.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975dae335cd29bed58b38fae87fb8038d6e52bf1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.OrthogonalMatchingPursuitCV.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.OrthogonalMatchingPursuitCV.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="0cdf0a56034444af86eb0920d2320ed49149c35a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.OrthogonalMatchingPursuitCV.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.OrthogonalMatchingPursuitCV.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="6e1bca8ff6eab767d187f7c0dbd62315b8f27b8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.OrthogonalMatchingPursuitCV.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1bab4eb4b36a540da286df2b88aa223aaacac9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.OrthogonalMatchingPursuitCV.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.OrthogonalMatchingPursuitCV.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="59283539f10f36bbb5daf7e62e10a2552f456cc6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveClassifier.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveClassifier.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="c4b3272e6809858c61bba527e96a4cc8446f18f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveClassifier.densify&quot;&gt;&lt;code&gt;densify&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveClassifier.densify&quot;&gt;&lt;code&gt;densify&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="b274a5fbfcfd830a964383503edd920427eb37c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveClassifier.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, coef_init, intercept_init])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f76a10f07efec17cdb62f85091972d2daa224e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="4108cfdb9fc1752c925d8d1d27eceee8e2fed9a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveClassifier.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X, y[, classes])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d181469c59eabbf7592ef95524e5cfad97a5fd2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="253e9dde383d6cbe242bd3b1d9cf594457585d09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveClassifier.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7a318d74cb1e644a299d69e5e95e419a3d2514" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveClassifier.sparsify&quot;&gt;&lt;code&gt;sparsify&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveClassifier.sparsify&quot;&gt;&lt;code&gt;sparsify&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="994c3932e99ac32377d4a023ca2876e33c44e43b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveRegressor.densify&quot;&gt;&lt;code&gt;densify&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveRegressor.densify&quot;&gt;&lt;code&gt;densify&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="b0e9dd0735d07a5dd5812ecf3fbf2e2b51159270" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveRegressor.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, coef_init, intercept_init])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2e7acf76271d56f173935b8202564295bbc18e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="f068dce93683190cb2e232ac3003d1186b69bcef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveRegressor.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b065dceb01a9213d35f38011f46b0f2563ca117" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="e2ab7f39ff65a6257ef380cc8f6f27c4ce89d96e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveRegressor.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2656e4a05dbd22e4784551f738e55c89994a94a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveRegressor.sparsify&quot;&gt;&lt;code&gt;sparsify&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.PassiveAggressiveRegressor.sparsify&quot;&gt;&lt;code&gt;sparsify&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="dc6fd28c5200a4256b1e8c0f0123510fc4f7f0fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.Perceptron.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.Perceptron.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="779abf0c308bae272ef625e9ebd21be3e1d3c654" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.Perceptron.densify&quot;&gt;&lt;code&gt;densify&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.Perceptron.densify&quot;&gt;&lt;code&gt;densify&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="ed4a8a149c3574145dd6ed71d8ef396296fdd397" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.Perceptron.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, coef_init, intercept_init, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949b1414defeef6a2d0c86e81352e13008fac5b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.Perceptron.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.Perceptron.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="5bb553ffba25adf790e4094652aff81c65a4fcb9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.Perceptron.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X, y[, classes, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822d9ab617da225a2591fdef85f16cf873f37636" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.Perceptron.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.Perceptron.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="6c55137ff2e2922de6a703f1c068bb86d2af708f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.Perceptron.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201b1354e26708ea0f25962ad4300a2ebeea89d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.Perceptron.sparsify&quot;&gt;&lt;code&gt;sparsify&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.Perceptron.sparsify&quot;&gt;&lt;code&gt;sparsify&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="0c4f15f9a50b79c207c78aaea2d52b2879db4c1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RANSACRegressor.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1b0ea6ccaedbb8971dde33212a0673600148fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RANSACRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RANSACRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="fb1153bb76061da0bc0e511b84cc43f990edab7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RANSACRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RANSACRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="1546591a838e44c6f940ca31628a946838695429" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RANSACRegressor.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84afb4ab2bf56fdf4e55a349f2720689c95e56cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RANSACRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RANSACRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="c3ce9c8393850ca8600485da4d610e994588f37c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RandomizedLasso.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46dfc1fd7a2db337a4704cd4088728e932084368" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RandomizedLasso.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52656d6bcb7fdfd20e1947006a4f5085f4185059" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RandomizedLasso.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RandomizedLasso.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="69353aafb973d7e772a992469107d6dd2fb2119c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RandomizedLasso.get_support&quot;&gt;&lt;code&gt;get_support&lt;/code&gt;&lt;/a&gt;([indices])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RandomizedLasso.get_support&quot;&gt;&lt;code&gt;get_support&lt;/code&gt;&lt;/a&gt;([indices])</target>
        </trans-unit>
        <trans-unit id="aa086739122e4f063fc810c69d209a317de02fee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RandomizedLasso.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RandomizedLasso.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="08527ac4dd710b1056b38a0c3b2ea65b6050167f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RandomizedLasso.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RandomizedLasso.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="a366bab4102facabd052ae1273440056389035d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RandomizedLasso.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RandomizedLasso.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="46b13dd87b0b8df61b7a863ec0390eb3cf9b487b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RandomizedLogisticRegression.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b9e94eaf58de37d934b80a3b40a3b76f5b4f5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RandomizedLogisticRegression.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888fca61558d4f1f755156a19e3eba0bf4cd5952" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RandomizedLogisticRegression.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RandomizedLogisticRegression.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="2ba1bff30e0bb63c050d525d4d0ef3c0305c94eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RandomizedLogisticRegression.get_support&quot;&gt;&lt;code&gt;get_support&lt;/code&gt;&lt;/a&gt;([indices])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RandomizedLogisticRegression.get_support&quot;&gt;&lt;code&gt;get_support&lt;/code&gt;&lt;/a&gt;([indices])</target>
        </trans-unit>
        <trans-unit id="dff1c10fe585bded6302ab35d100ef6a2c1c4826" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RandomizedLogisticRegression.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RandomizedLogisticRegression.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="83853d51e426bcd15e3a371b7e90a0dbee6524a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RandomizedLogisticRegression.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RandomizedLogisticRegression.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="3628fbf101e5433d148c887ee1b34485f8745adf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RandomizedLogisticRegression.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RandomizedLogisticRegression.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="037421676d55e3f09449386c350aaf7f108e40ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.Ridge.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150b25ce750b896fd22f0539a3c3562f4eb89b02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.Ridge.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.Ridge.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="3f91428ddc4056b2c5aa1ab62aeb609253732b33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.Ridge.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.Ridge.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="cbbefd43afd07fa1609dec205f963e35f7d4c3e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.Ridge.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351802ee829746a4065378e0450ab152e0fd56eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.Ridge.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.Ridge.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="1a9643f5a10daec5dbe39059b22d469b8cb06c3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RidgeCV.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94a3dcec5d2d40e3ee97c08ffd20679e633c282" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RidgeCV.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RidgeCV.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="4848302a8d10d067d39c79cfd9a402cecec2f339" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RidgeCV.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RidgeCV.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="cc66cb4bddd3adcc6fbbf0bb72bcec072de4c7c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RidgeCV.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10bea0ee407f6dbb24ef79d16939ff970cef1555" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RidgeCV.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RidgeCV.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="6f99fd46d20c74724d95aa343815f1ad7d38e538" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RidgeClassifier.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RidgeClassifier.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="7cf134e39e75071ac8397e58b682b73f9faccd8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RidgeClassifier.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32945e1861dd66163a2ecb38e53961b2567987dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RidgeClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RidgeClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="b7b9b0c46da9eba08224a984269da118cf5bc958" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RidgeClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RidgeClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="3c2f49b94cbcc42317a2962b92972fb555ef6574" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RidgeClassifier.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7073699f83bd6bbf8015f470c73e7b9916c782f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RidgeClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RidgeClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="6bf1a8bdf593ededec14bc56ecf2fe8c82bbd333" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RidgeClassifierCV.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RidgeClassifierCV.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="5499dba0e1eded20715754b3b60a1535c3696ea1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RidgeClassifierCV.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="318b25770e7f5cac0d907db81f34102a33997fda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RidgeClassifierCV.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RidgeClassifierCV.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="210f083111b470feb35c9508dda892e995785f73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RidgeClassifierCV.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RidgeClassifierCV.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="cec51b801e0f2f13c3eb0a39ea412c9295520be0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RidgeClassifierCV.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe8bcd9def7bf6fbbe202785c5820e51d5bef83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.RidgeClassifierCV.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.RidgeClassifierCV.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="2279ea2581262c0a1f1548256f9bc59d45e7dcfc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.SGDClassifier.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.SGDClassifier.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="ef4cf4520abfcda4555b85221c103be69bfd0e25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.SGDClassifier.densify&quot;&gt;&lt;code&gt;densify&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.SGDClassifier.densify&quot;&gt;&lt;code&gt;densify&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="343821fc64c92a34ae3669b4f297fcd2bd136aa3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.SGDClassifier.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, coef_init, intercept_init, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e6f701ea752ff8d944ad3d0d48a20a44252dad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.SGDClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.SGDClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="4407b180d89b58e8ffacc63d0f04f25b3ba53652" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.SGDClassifier.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X, y[, classes, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4e724a26c869d6d99b1ccb17141b1b94bfd384" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.SGDClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.SGDClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="2c637702da20a8422da45dbdd0396e0deb824da3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.SGDClassifier.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4648fec28886a1e8ad7bb14183a7fbea00e1055f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.SGDClassifier.sparsify&quot;&gt;&lt;code&gt;sparsify&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.SGDClassifier.sparsify&quot;&gt;&lt;code&gt;sparsify&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="b8c74dfdf8d24506e92d46c5f96a92157102fbb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.SGDRegressor.densify&quot;&gt;&lt;code&gt;densify&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.SGDRegressor.densify&quot;&gt;&lt;code&gt;densify&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="4458b7f70dc6d0d98107afac0ff1623b51a06c8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.SGDRegressor.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, coef_init, intercept_init, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3dfd6b8df6914a1f6ad859126ea2fe0c63ebc1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.SGDRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.SGDRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="78299f1aaaa14efafda0644c9ddf98ba8a5a3a5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.SGDRegressor.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a0a7464ed669e3837fb8007c8a9f89087369176" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.SGDRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.SGDRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="f5662e18a7ab26f0a11fbc1e3ba6759b7709a34e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.SGDRegressor.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b863a69167a9ac32e3bb96dcdd23abbfdda7de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.SGDRegressor.sparsify&quot;&gt;&lt;code&gt;sparsify&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.SGDRegressor.sparsify&quot;&gt;&lt;code&gt;sparsify&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="63f23422569bf5f845acd0cd47ada1e7a5a1ab2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.TheilSenRegressor.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc7a5a37078068dc8f978e9935db3ff190348c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.TheilSenRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.TheilSenRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="cc1b5119a406d6edb82bb1086622ff3965eddc40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.TheilSenRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.TheilSenRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="8a745126528ff393f89af55fe60cfa32e912a081" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.TheilSenRegressor.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78309509fbcde1a1362ecacd1711e83e45016695" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.linear_model.TheilSenRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.linear_model.TheilSenRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="2a4c54c3010382bb38c9a873b5aa534bcdca043a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.Isomap.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de0ce6a4cf1f3bef857f638dcf9c002e60b31d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.Isomap.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73506efabef48f0af6acd9ca46cf97d1346bec7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.Isomap.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.manifold.Isomap.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="864f25416a4a0ef8cb71b08534d0d268993dad18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.Isomap.reconstruction_error&quot;&gt;&lt;code&gt;reconstruction_error&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.manifold.Isomap.reconstruction_error&quot;&gt;&lt;code&gt;reconstruction_error&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="6a5c375df5b855f12c5326a9ad9f2ef7c16f339d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.Isomap.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.manifold.Isomap.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="e8c2a6dbf42686a1fd48234a75a04377d9115ffc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.Isomap.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.manifold.Isomap.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="4381bb3689963a80d968cb2d415192b2171ba379" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.LocallyLinearEmbedding.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="455c5b24a6180ea1f590964fe5545d4c6be8eb3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.LocallyLinearEmbedding.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd1b042469d2964ae7fb8f6c69715b8940d0a62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.LocallyLinearEmbedding.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.manifold.LocallyLinearEmbedding.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="54b451cb26d3c54e49f1fb766067f21f2d2592a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.LocallyLinearEmbedding.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.manifold.LocallyLinearEmbedding.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="5d2e0246b5ad64ad3144100420a66f629a89edbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.LocallyLinearEmbedding.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.manifold.LocallyLinearEmbedding.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="21bd7395dc35db5779c0a10246645a23470104f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.MDS.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y, init])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b12c13ea45281521adb45e99a9a9f0af0cf5edbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.MDS.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y, init])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285f35fe654c132ffa90eca31dc2214facad05a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.MDS.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.manifold.MDS.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="c5b2238a1a670c8ca64e9acdc10c5a74061b935d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.MDS.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.manifold.MDS.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="3ca12e3fd1c19992c6472e9ec6a6b0bea71cfc9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.SpectralEmbedding.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ecb7890211512d75f17d077b091096eb8014423" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.SpectralEmbedding.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f14418c28350391c4e9a17a133640fa28350ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.SpectralEmbedding.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.manifold.SpectralEmbedding.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="bd4acf11ed8bd622de26925fb27c859a21973c8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.SpectralEmbedding.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.manifold.SpectralEmbedding.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="31f170867c36501ab5cee3f8b2e849dc6fd49afc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.TSNE.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c6b5cbaa41779ca67f3c41c1c8e882c4213fd22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.TSNE.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8e92d6d93215979d8e7bca3d8b5b04ee56faa0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.TSNE.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.manifold.TSNE.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="2121604c0f70195a28acc0cb4dea8b8c9ad1d334" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.manifold.TSNE.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.manifold.TSNE.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="423bf3a797daaf8693518284bade0ca4df4669b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.mixture.BayesianGaussianMixture.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586e4c2215db12cd2abc9e038ea17b9d9f5801c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.mixture.BayesianGaussianMixture.fit_predict&quot;&gt;&lt;code&gt;fit_predict&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af404f3d2bfe3f82c5c72da47e82522e78aedab0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.mixture.BayesianGaussianMixture.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.mixture.BayesianGaussianMixture.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="ad2087865ae56199c298efbf21b3e737e92ab8e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.mixture.BayesianGaussianMixture.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.mixture.BayesianGaussianMixture.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="d31fa1e69e2122d7238ee16b37b42a0c5bd2b31e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.mixture.BayesianGaussianMixture.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.mixture.BayesianGaussianMixture.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="a2de6b4e824c6208fafa3f8f0b16e3b5d1eb486e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.mixture.BayesianGaussianMixture.sample&quot;&gt;&lt;code&gt;sample&lt;/code&gt;&lt;/a&gt;([n_samples])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.mixture.BayesianGaussianMixture.sample&quot;&gt;&lt;code&gt;sample&lt;/code&gt;&lt;/a&gt;([n_samples])</target>
        </trans-unit>
        <trans-unit id="b6c62c1da5f6619a2c3c26cb28d29b84a49289dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.mixture.BayesianGaussianMixture.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7996b8e91fd9e739a0264c6575acd51d62f75a59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.mixture.BayesianGaussianMixture.score_samples&quot;&gt;&lt;code&gt;score_samples&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.mixture.BayesianGaussianMixture.score_samples&quot;&gt;&lt;code&gt;score_samples&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="5b3462be2f1d045a4d819ffd7ad24b4e35fe28d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.mixture.BayesianGaussianMixture.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.mixture.BayesianGaussianMixture.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="60aa9e9df48fdc260020de2a5b7647f1f9b6a6e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.mixture.GaussianMixture.aic&quot;&gt;&lt;code&gt;aic&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.mixture.GaussianMixture.aic&quot;&gt;&lt;code&gt;aic&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="c941b4dcfc1eaa9da3d38bfe04d04fbbf2939684" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.mixture.GaussianMixture.bic&quot;&gt;&lt;code&gt;bic&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.mixture.GaussianMixture.bic&quot;&gt;&lt;code&gt;bic&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="ca97dff2e563cab5ecfce6bc59f6e19716245529" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.mixture.GaussianMixture.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be642f04414c4612653d161a8e3dccd3069d0f47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.mixture.GaussianMixture.fit_predict&quot;&gt;&lt;code&gt;fit_predict&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88396157dda12de1e2408854a352deaf4b74a85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.mixture.GaussianMixture.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.mixture.GaussianMixture.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="623d0aaf2d0511d28fb25f4bb5631c3d765f760e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.mixture.GaussianMixture.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.mixture.GaussianMixture.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="1c02529e296287ff1d3a06b451e618e253530ff1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.mixture.GaussianMixture.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.mixture.GaussianMixture.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="04e7d03bf2b12385b7d01d0a3f1a6b4f3e4f1ffd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.mixture.GaussianMixture.sample&quot;&gt;&lt;code&gt;sample&lt;/code&gt;&lt;/a&gt;([n_samples])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.mixture.GaussianMixture.sample&quot;&gt;&lt;code&gt;sample&lt;/code&gt;&lt;/a&gt;([n_samples])</target>
        </trans-unit>
        <trans-unit id="d1c600ccf380d4efb49ebff0bf7631158d8af4f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.mixture.GaussianMixture.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d15c73f40d685fa26861bbe82a9060d650f8113" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.mixture.GaussianMixture.score_samples&quot;&gt;&lt;code&gt;score_samples&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.mixture.GaussianMixture.score_samples&quot;&gt;&lt;code&gt;score_samples&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="6d92a9cde95a9b524c1d38230316c579b5b27af7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.mixture.GaussianMixture.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.mixture.GaussianMixture.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="ce14023d427ac650d6290925564a38602f49eddc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.GridSearchCV.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.model_selection.GridSearchCV.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="06fb399fa100c5a361a80738566a611f13f32102" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.GridSearchCV.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8b4e223409415ba77a99d3c56cc8ee5a501cc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.GridSearchCV.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.model_selection.GridSearchCV.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="0551f13f201f3bf88284112de27bb2210a50f1a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.GridSearchCV.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(Xt)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.model_selection.GridSearchCV.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(Xt)</target>
        </trans-unit>
        <trans-unit id="4b51a6580ada58d5bf4e33ef887897facef1ac3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.GridSearchCV.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.model_selection.GridSearchCV.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="918256fe09ef047cec859816e9ade1790388c13f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.GridSearchCV.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.model_selection.GridSearchCV.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="1857872583833a9a9da8fff86181ab84786421df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.GridSearchCV.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.model_selection.GridSearchCV.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="632893ef4ee2333f8bb97fb3fd67e876e5822115" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.GridSearchCV.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8036f991e0d37b9381ba2287d25eb679b54b7205" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.GridSearchCV.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.model_selection.GridSearchCV.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="431e3353cb10a62fcbf6864556146ce8dac9935e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.GridSearchCV.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.model_selection.GridSearchCV.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="95a8f773c5fe05b1d77bab3e8073f407873deb68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.GroupKFold.get_n_splits&quot;&gt;&lt;code&gt;get_n_splits&lt;/code&gt;&lt;/a&gt;([X, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d22b4dc115bbd024b4c09a220ff1c9b739fa210" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.GroupKFold.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;(X[, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6fdbe9a0e0d87f10188c9cdfaf0c5a9212e6df0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.GroupShuffleSplit.get_n_splits&quot;&gt;&lt;code&gt;get_n_splits&lt;/code&gt;&lt;/a&gt;([X, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8126fbd57567c493925119183a1c8554c73d3d42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.GroupShuffleSplit.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;(X[, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a235543062de73a9e26602b39d4bb79f671a6e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.KFold.get_n_splits&quot;&gt;&lt;code&gt;get_n_splits&lt;/code&gt;&lt;/a&gt;([X, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b04ea3542b826ed187b338a62cc3f71783d496d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.KFold.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;(X[, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f768502b6e14cc6408ec13efd357d03029060c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.LeaveOneGroupOut.get_n_splits&quot;&gt;&lt;code&gt;get_n_splits&lt;/code&gt;&lt;/a&gt;([X, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5bfe611702880746ee875eaa91173c7fcec90cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.LeaveOneGroupOut.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;(X[, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec38d9d29c4e0c0ca2dd76b8b2223d55feb8e09b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.LeaveOneOut.get_n_splits&quot;&gt;&lt;code&gt;get_n_splits&lt;/code&gt;&lt;/a&gt;(X[, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35f61947e7dc02ade678514dcdbbcf62fe8ddde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.LeaveOneOut.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;(X[, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e2dd7f2383ca06b828e92456927e04067789a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.LeavePGroupsOut.get_n_splits&quot;&gt;&lt;code&gt;get_n_splits&lt;/code&gt;&lt;/a&gt;([X, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe79b3e02142df723b3c3b00d8f4418eaadf97cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.LeavePGroupsOut.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;(X[, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0052288fab3f32f6c192b369386f281e840d753" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.LeavePOut.get_n_splits&quot;&gt;&lt;code&gt;get_n_splits&lt;/code&gt;&lt;/a&gt;(X[, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c8e9a5c575b1ef10fbcaf33b10d631ffd1e6e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.LeavePOut.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;(X[, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c0742380cba500f9132a710f85e0d142b951a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.PredefinedSplit.get_n_splits&quot;&gt;&lt;code&gt;get_n_splits&lt;/code&gt;&lt;/a&gt;([X, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b7747fbe9b5c4046d01ca070412304dc9666da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.PredefinedSplit.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;([X, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6453265ea81d4d769257e75f95e22e0feb0379ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.RandomizedSearchCV.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.model_selection.RandomizedSearchCV.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="51428354b14b58ff2096fc49f5dd5bfe7d1f3e5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.RandomizedSearchCV.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5357d2a84df96b6ad87dc5de2fbc7bc0e1fe16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.RandomizedSearchCV.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.model_selection.RandomizedSearchCV.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="fb14f620827772a39633be98ad3eaec131a5ce05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.RandomizedSearchCV.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(Xt)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.model_selection.RandomizedSearchCV.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(Xt)</target>
        </trans-unit>
        <trans-unit id="c7625e2f0e04a6339907f1d8ed52b24b63869160" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.RandomizedSearchCV.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.model_selection.RandomizedSearchCV.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="47d02e32f4b936f9be4ffc874e011970cf3f1ec1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.RandomizedSearchCV.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.model_selection.RandomizedSearchCV.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="1104404c690c674dbccd631b604a03a5930f59a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.RandomizedSearchCV.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.model_selection.RandomizedSearchCV.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="2a616d8b0fe17110d9d31ce43ba81e68e11c473e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.RandomizedSearchCV.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f644685200c19d82a3c2f092810d9009ccc5400c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.RandomizedSearchCV.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.model_selection.RandomizedSearchCV.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="065d6d0fea18f22721d0e788953fafa769160439" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.RandomizedSearchCV.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.model_selection.RandomizedSearchCV.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="c571ef4f854ba2ad39ec8327da34f3940fdcb266" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.RepeatedKFold.get_n_splits&quot;&gt;&lt;code&gt;get_n_splits&lt;/code&gt;&lt;/a&gt;([X, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21875dff3b52926446873cd13d71e83b20d050a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.RepeatedKFold.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;(X[, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689ee4a85ea44f5ed62d482dc759074540e2bffa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.RepeatedStratifiedKFold.get_n_splits&quot;&gt;&lt;code&gt;get_n_splits&lt;/code&gt;&lt;/a&gt;([X, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd1fe05ffda33a14d3b174d882e91c9452c06dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.RepeatedStratifiedKFold.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;(X[, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a88afb0f7e825c85da1329ca2c1b4eb6237845d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.ShuffleSplit.get_n_splits&quot;&gt;&lt;code&gt;get_n_splits&lt;/code&gt;&lt;/a&gt;([X, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7c5fc7bdfbaee1649dfc876ab798f94022c6c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.ShuffleSplit.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;(X[, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a41a1832a76b3afe457cf2535d66b25f6bdfe03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.StratifiedKFold.get_n_splits&quot;&gt;&lt;code&gt;get_n_splits&lt;/code&gt;&lt;/a&gt;([X, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afeb9745c4e097ba441c2433b9153a6ce4e3c745" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.StratifiedKFold.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;(X, y[, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="901d86345582af77cea848245822e8d490ccc9e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.StratifiedShuffleSplit.get_n_splits&quot;&gt;&lt;code&gt;get_n_splits&lt;/code&gt;&lt;/a&gt;([X, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9d9897d65f42f9f56b33e546987bdddc5a8cb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.StratifiedShuffleSplit.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;(X, y[, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd4e4ca7d0c9a2529c1de13d9d6553092c619c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.TimeSeriesSplit.get_n_splits&quot;&gt;&lt;code&gt;get_n_splits&lt;/code&gt;&lt;/a&gt;([X, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d5cd6322e894d18f658ab817dad7d5edc1fdb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.model_selection.TimeSeriesSplit.split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;(X[, y, groups])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa991060ef205f912b54f1a1ee75ad4df290995c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multiclass.OneVsOneClassifier.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multiclass.OneVsOneClassifier.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="e7e5bbf998d49783d2d0d74b52a8d016fafd4be1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multiclass.OneVsOneClassifier.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f57d9df177453b731df592868c2c90e50f4ad87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multiclass.OneVsOneClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multiclass.OneVsOneClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="664fa1c1ac06bdee750f0a979ed96bd105ee483f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multiclass.OneVsOneClassifier.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X, y[, classes])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47f448ca186be4e235452fc97f2f6f964be98fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multiclass.OneVsOneClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multiclass.OneVsOneClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="3959e79b3178d27d16a641c437471f2e5f859106" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multiclass.OneVsOneClassifier.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac4fb7849f32ea2ae146b545089ab79d8335489" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multiclass.OneVsOneClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multiclass.OneVsOneClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="ed5b8515ae5b884cfaf1fc6e81fe6c17a2d4bb8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multiclass.OneVsRestClassifier.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multiclass.OneVsRestClassifier.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="66560ff1abdd0aea99e84e88471916c17af986a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multiclass.OneVsRestClassifier.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8da60242bc470d0a07e26629a0ce533557a3227" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multiclass.OneVsRestClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multiclass.OneVsRestClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="2d01edfafba87159d03e169b1e448ee4ad9b647f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multiclass.OneVsRestClassifier.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X, y[, classes])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b287ac1ec26f63f33e06b36a970fa04bab6a8392" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multiclass.OneVsRestClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multiclass.OneVsRestClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="81ef8de3141f699cd67eeadf80d28cab98c0c890" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multiclass.OneVsRestClassifier.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multiclass.OneVsRestClassifier.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="5f08087b22fcf7a6b78b602d3638389fc740df79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multiclass.OneVsRestClassifier.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f672afba8900cdde1aeb71ab16f82612232829" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multiclass.OneVsRestClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multiclass.OneVsRestClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="350b9374408a332feaba4f17f210aa2ab2b5f13b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multiclass.OutputCodeClassifier.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6192025cf855f81f3bd532f3e92e9e5a9552d381" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multiclass.OutputCodeClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multiclass.OutputCodeClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="7a1cc2ec34015fb3eac1f8930c64ecc42d0bab5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multiclass.OutputCodeClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multiclass.OutputCodeClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="0ba6207627d1c751037d0336d19aee1cbba6222c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multiclass.OutputCodeClassifier.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b730da146ae1a4bb3a0dab4ad68ef3429e165eac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multiclass.OutputCodeClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multiclass.OutputCodeClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="948d55009e977f45ebbce07092e22c505b5cb9df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.ClassifierChain.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multioutput.ClassifierChain.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="4395063b97a5b7e563c23c9c4be327576b37829b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.ClassifierChain.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, Y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f98b0b8960b5918963b84e531b93eddd173b16e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.ClassifierChain.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multioutput.ClassifierChain.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="b4ec0a09f01fb1b332a03d44f212c8c775cd9f15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.ClassifierChain.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multioutput.ClassifierChain.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="8db46c1985f2f639afeaa14384af1cb743565493" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.ClassifierChain.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multioutput.ClassifierChain.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="f0d901f3f3b719541da2bbe9383f10b8ce53f150" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.ClassifierChain.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b81090bc8692b38134e1e5a74e9fae31a13702dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.ClassifierChain.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multioutput.ClassifierChain.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="31d4e519c4632dfd66567cc2ebab48d188a5e0b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.MultiOutputClassifier.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba573ef453f6cc7a2c07fb9a4b9808faf41c8822" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.MultiOutputClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multioutput.MultiOutputClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="02d6642e6faec6bead5c4d22a7ca899ed3d0d798" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.MultiOutputClassifier.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X, y[, classes, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d07922fac1428b5f9373f47c625bfe528c4704" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.MultiOutputClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multioutput.MultiOutputClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="5aecce67223071acdd88e2edc577f11bcb4dad7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.MultiOutputClassifier.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multioutput.MultiOutputClassifier.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="2785a25922e5aba337893f13638dab8eaaf878d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.MultiOutputClassifier.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908cd31d56e486515a09ae4d28e4267ea6dccbf4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.MultiOutputClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multioutput.MultiOutputClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="651239eec2e50520fd3a0812ab6c35238621e95b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.MultiOutputRegressor.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6b50e8cf5515ca90ff01fe490080cf4ff53544" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.MultiOutputRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multioutput.MultiOutputRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="c5b84963e68cf28313f33e898ca654980ad4ac55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.MultiOutputRegressor.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e68087f48568e66ccd3b2ab2491497194afc1c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.MultiOutputRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multioutput.MultiOutputRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="74a15104f72903d372d736824d47b21c046d0a94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.MultiOutputRegressor.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c39ee1d46ac78f2128903efe237002631b6a0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.MultiOutputRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multioutput.MultiOutputRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="63989ecbfefac3b53f5600dccfc85b5242850dfe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.RegressorChain.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, Y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08cfb7b5a5272b5a15fa6a3b9b4f25b9a737ac64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.RegressorChain.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multioutput.RegressorChain.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="feca0db26c0b9161b821143d272d60f13c8ca041" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.RegressorChain.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multioutput.RegressorChain.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="2871780a7b5f7895a4033bcafdf6d41f06d495a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.RegressorChain.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564a9e33c9fa75262c897f40e3ecff251404ea53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.multioutput.RegressorChain.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.multioutput.RegressorChain.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="a147cd99ad48ccea405cb57700987af393e23de0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.BernoulliNB.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1a8b2e3b2691c0f3ff6089644ba7ad92cc040e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.BernoulliNB.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.naive_bayes.BernoulliNB.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="e4257a417fa4f25d674b6462a4196e30e49be074" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.BernoulliNB.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X, y[, classes, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89491833d9763582457db99f411645141b3e457a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.BernoulliNB.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.naive_bayes.BernoulliNB.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="ca3b8ab7f4effd98a4cd9add0e2bd303d03a001c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.BernoulliNB.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.naive_bayes.BernoulliNB.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="d45d6af2c25afda4b4ca1c4b3e1e101c7b940c96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.BernoulliNB.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.naive_bayes.BernoulliNB.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="da725856f8ae4b4ab9e81f3fc996999ab3c12269" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.BernoulliNB.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d704f08185b5df6b5c7ee2a475a893649ac224" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.BernoulliNB.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.naive_bayes.BernoulliNB.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="f8ac57f6dba77d1bed2577605de4066df421abbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.ComplementNB.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e2487e5d493e7a89194bb2ea50fed62f4ae85ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.ComplementNB.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.naive_bayes.ComplementNB.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="a2448a6059f8cec47508e65caffd2caee4ffcb16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.ComplementNB.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X, y[, classes, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb50ad483e0364495046a600b0935e91245727c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.ComplementNB.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.naive_bayes.ComplementNB.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="c170f5a4fecbabcc3a34dd82b0874363a56502db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.ComplementNB.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.naive_bayes.ComplementNB.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="62afedf69069719074185cf32e16e4376573df5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.ComplementNB.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.naive_bayes.ComplementNB.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="63772d562f43f7657161fd68e77df7eac29048fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.ComplementNB.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381673426f832140810c2c0431656eff1416d9ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.ComplementNB.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.naive_bayes.ComplementNB.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="c194ac1167e51e9dca7c774b8c931e18698ca09e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.GaussianNB.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1318644db52742ea97e538fa77962583a4d0734" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.GaussianNB.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.naive_bayes.GaussianNB.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="e9dd4969d2406335f99632a3a86a6b8345e0236e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.GaussianNB.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X, y[, classes, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a151fc2ffdf7256a1eab8e55df88101f7a013ec2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.GaussianNB.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.naive_bayes.GaussianNB.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="8464d991fbe20c46cc6fdbf3a934a69250206144" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.GaussianNB.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.naive_bayes.GaussianNB.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="c180a39521428ef639b729310030dcd1331c25e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.GaussianNB.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.naive_bayes.GaussianNB.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="c50dc4bc563aac60869532db46c08dc7dbdf4a76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.GaussianNB.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb3ba0cda6ace5f1d91049f6c39e347acb95c798" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.GaussianNB.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.naive_bayes.GaussianNB.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="0a269ac981fa846ff13ad1450de87a21b1655864" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.MultinomialNB.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e45187a0493bd87fc9d7b8e337960ade68e72a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.MultinomialNB.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.naive_bayes.MultinomialNB.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="ae2efa89569a09daefe7054f111effeb2ac407cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.MultinomialNB.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X, y[, classes, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ddc3de95118c571cb89adf2588e206261d34d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.MultinomialNB.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.naive_bayes.MultinomialNB.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="44baa11c6f07e5d81550ddcc182c578ee77269c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.MultinomialNB.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.naive_bayes.MultinomialNB.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="cddd615b32457df57b6d54a0c1a6100a4a74fa94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.MultinomialNB.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.naive_bayes.MultinomialNB.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="35c213cccbb4b0e9567df3b869966f861a15ef1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.MultinomialNB.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28df11c8dcb62819d080480675b0619282ddeccf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.naive_bayes.MultinomialNB.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.naive_bayes.MultinomialNB.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="f59d5c341dca1c22ab65453e13ec4a62ff7be254" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.BallTree.kernel_density&quot;&gt;&lt;code&gt;kernel_density&lt;/code&gt;&lt;/a&gt;(self, X, h[, kernel, atol, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bbaec0cf3a7973d4aabed3374a573e1e5dd055c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.BallTree.query&quot;&gt;&lt;code&gt;query&lt;/code&gt;&lt;/a&gt;(X[, k, return_distance, dualtree, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591c2cf0a58498b3a8db32f158f7043fffc66235" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KDTree.kernel_density&quot;&gt;&lt;code&gt;kernel_density&lt;/code&gt;&lt;/a&gt;(self, X, h[, kernel, atol, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41b671703d79c6960133025bc73d63cc0fcf641" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KDTree.query&quot;&gt;&lt;code&gt;query&lt;/code&gt;&lt;/a&gt;(X[, k, return_distance, dualtree, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60945fd278fcbe49a6e8c23572c826692b8a427" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KNeighborsClassifier.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee4954614d0ecbafa088fc7fda8c69bb13554c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KNeighborsClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.KNeighborsClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="7831242d4ca5e210694cc36ddf46269e73acaec1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KNeighborsClassifier.kneighbors&quot;&gt;&lt;code&gt;kneighbors&lt;/code&gt;&lt;/a&gt;([X, n_neighbors, return_distance])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b1b7badd25035af5c2d8922ce2d79677b0d7f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KNeighborsClassifier.kneighbors_graph&quot;&gt;&lt;code&gt;kneighbors_graph&lt;/code&gt;&lt;/a&gt;([X, n_neighbors, mode])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f82f4c51fcd2a1572c41ccba9212c4b9ff7bd2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KNeighborsClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.KNeighborsClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="d899ee3e8181a15dc99e426790b36ab50c21aa94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KNeighborsClassifier.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.KNeighborsClassifier.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="60cd4522ba2d5b9841c0e36d57826895673f5e2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KNeighborsClassifier.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92290416614d1d6ee0ccc8483895c01ac58a827a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KNeighborsClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.KNeighborsClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="bcef19abb95a786e0f2657222632bd5a53b8a28a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KNeighborsRegressor.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7660fd4b544954c861b5ea3f9f125c1a77a6337" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KNeighborsRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.KNeighborsRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="467acf2e28f52af5475d8bfc2796f755e1cd589a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KNeighborsRegressor.kneighbors&quot;&gt;&lt;code&gt;kneighbors&lt;/code&gt;&lt;/a&gt;([X, n_neighbors, return_distance])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c50f7c790288486b32360c21de7de552d5663e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KNeighborsRegressor.kneighbors_graph&quot;&gt;&lt;code&gt;kneighbors_graph&lt;/code&gt;&lt;/a&gt;([X, n_neighbors, mode])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f55ed33b6f88f7a836a97faffa89ac4d5ba1a01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KNeighborsRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.KNeighborsRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="cd104e806f9c906a373cadbf673d5f85d14744ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KNeighborsRegressor.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ab62fe67d5ec9a08ab9938333d388fda903338" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KNeighborsRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.KNeighborsRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="7dd65654ce39ed28d58567efbd66b053008da7fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KernelDensity.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155754c65508c8abe4d666dcb70bbd6d3e6994f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KernelDensity.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.KernelDensity.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="d512023cdc4446d1711c15c58db87f9dccaf5d10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KernelDensity.sample&quot;&gt;&lt;code&gt;sample&lt;/code&gt;&lt;/a&gt;([n_samples, random_state])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f34d80acfe589ea5dba630571bd536978ff6de8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KernelDensity.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3eb23e168c6331d11dee2d0101577fe6d4164eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KernelDensity.score_samples&quot;&gt;&lt;code&gt;score_samples&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.KernelDensity.score_samples&quot;&gt;&lt;code&gt;score_samples&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="ae09e64146c89c41f9c248d6e792a5cb2d5f8397" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.KernelDensity.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.KernelDensity.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="a2e0b2155be954cca63b285d84ee02889721b8d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.LSHForest.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e1bf92da95603fad006c4f0d20df2fcc50c4df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.LSHForest.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.LSHForest.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="3a959e8ba9e0e1abffacc40331673e1e70135685" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.LSHForest.kneighbors&quot;&gt;&lt;code&gt;kneighbors&lt;/code&gt;&lt;/a&gt;(X[, n_neighbors, return_distance])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db25254d31a7e43f803c63bd8a06dd7c06d075c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.LSHForest.kneighbors_graph&quot;&gt;&lt;code&gt;kneighbors_graph&lt;/code&gt;&lt;/a&gt;([X, n_neighbors, mode])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53063fc6586fa61b186d43d3ade53f9f7fb5dafe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.LSHForest.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba0f6c9d8fc03e580dcfa5db866666f21b589eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.LSHForest.radius_neighbors&quot;&gt;&lt;code&gt;radius_neighbors&lt;/code&gt;&lt;/a&gt;(X[, radius, return_distance])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744a2ecc70d149fae593f4a0fff1d4dab16200da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.LSHForest.radius_neighbors_graph&quot;&gt;&lt;code&gt;radius_neighbors_graph&lt;/code&gt;&lt;/a&gt;([X, radius, mode])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcfcf3cbd1243e1b8de83def9fea4f6e6216a63e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.LSHForest.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.LSHForest.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="d1bb2522415dd526cb738779161017ff89e42d3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.LocalOutlierFactor.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7353da06e574b223be536437a1e01ffa167d5ec1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.LocalOutlierFactor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.LocalOutlierFactor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="3340d85b58baf394ef5aec829c45c4fe62f27e60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.LocalOutlierFactor.kneighbors&quot;&gt;&lt;code&gt;kneighbors&lt;/code&gt;&lt;/a&gt;([X, n_neighbors, return_distance])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb7a4b19242e668ed5fca70ac72d764bc84a350" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.LocalOutlierFactor.kneighbors_graph&quot;&gt;&lt;code&gt;kneighbors_graph&lt;/code&gt;&lt;/a&gt;([X, n_neighbors, mode])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d956ca3c68e01940e7c4c3273171c0ff8d01d16a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.LocalOutlierFactor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.LocalOutlierFactor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="3b635b932ea90e190c5b326bc8349eccc0d7e62b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.NearestCentroid.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f14a274bbf02e6089e84b661947ab8a4e41677c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.NearestCentroid.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.NearestCentroid.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="96e9eb3fe0c1ad4198d0598bb450efc415db69b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.NearestCentroid.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.NearestCentroid.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="c0a0086bdec6b499ca30796d871d22624b0044b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.NearestCentroid.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde9430a6c40d093edc3f042cabad0ba13188bc2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.NearestCentroid.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.NearestCentroid.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="900e782a5ed7ace5bf78ad453a50d7f3a6d76a7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.NearestNeighbors.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d14315528fb8af24306c851aa43f75a622fee223" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.NearestNeighbors.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.NearestNeighbors.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="362987592e153185c8483272f5f70baa182e4672" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.NearestNeighbors.kneighbors&quot;&gt;&lt;code&gt;kneighbors&lt;/code&gt;&lt;/a&gt;([X, n_neighbors, return_distance])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112dd6977c8e3c051cb59f8b78ad631e16663647" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.NearestNeighbors.kneighbors_graph&quot;&gt;&lt;code&gt;kneighbors_graph&lt;/code&gt;&lt;/a&gt;([X, n_neighbors, mode])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="318b011af85deb8a6a33b145993a8d3f72a8611a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.NearestNeighbors.radius_neighbors&quot;&gt;&lt;code&gt;radius_neighbors&lt;/code&gt;&lt;/a&gt;([X, radius, return_distance])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45925998dd9a42be42f2a3ff0a2eaae6420a62bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.NearestNeighbors.radius_neighbors_graph&quot;&gt;&lt;code&gt;radius_neighbors_graph&lt;/code&gt;&lt;/a&gt;([X, radius, mode])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d223678d433a7d8c6e8809ca4f6957e0fa23c56f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.NearestNeighbors.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.NearestNeighbors.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="2083591db3a3e75d8c5b8bd675b1db59598002b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsClassifier.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0906ca1d0c002302e724ea385bda98331d8aa359" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="13e3e9d64e10011e831a37185eb36d289fe6b66b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="2facdd913a43497af3812d4342ba0379969cf7a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsClassifier.radius_neighbors&quot;&gt;&lt;code&gt;radius_neighbors&lt;/code&gt;&lt;/a&gt;([X, radius, return_distance])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e52bebafe86282d406a560c942898f42109fb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsClassifier.radius_neighbors_graph&quot;&gt;&lt;code&gt;radius_neighbors_graph&lt;/code&gt;&lt;/a&gt;([X, radius, mode])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a465ed3bad567ea0a67133dee5d395f41123e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsClassifier.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eac09105b79d4b4a6efcc80fa1d7ce15931cff8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="d230522a9468b68b7fb418ecabe3084f31e7d185" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsRegressor.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b4188504aac061d92e4e5a201fdc146801a108" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="5301227987f3f01fab72d5335d8add089a3f3146" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="2ffbfe3f1c49964be87e8df93cd71a0e2cdb5606" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsRegressor.radius_neighbors&quot;&gt;&lt;code&gt;radius_neighbors&lt;/code&gt;&lt;/a&gt;([X, radius, return_distance])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b348f8b9379b13f341f8355d655d4ad5b34513c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsRegressor.radius_neighbors_graph&quot;&gt;&lt;code&gt;radius_neighbors_graph&lt;/code&gt;&lt;/a&gt;([X, radius, mode])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a620e904f9afd4b9b15bb7ec8eb17689bcf2111f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsRegressor.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f62d01114a382838794847e8ad6f50ca921c375" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neighbors.RadiusNeighborsRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="f2fa69f1e0e2959a922e3a298fbe93870a147650" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neural_network.BernoulliRBM.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5482093ad6302cbe797f8105832d650798b6282e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neural_network.BernoulliRBM.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c46296a9d2dfbd087f99c4f01af43ddb306e94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neural_network.BernoulliRBM.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neural_network.BernoulliRBM.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="c99b2c3f548d129554cc46c69d09e5a695b71ab5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neural_network.BernoulliRBM.gibbs&quot;&gt;&lt;code&gt;gibbs&lt;/code&gt;&lt;/a&gt;(v)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neural_network.BernoulliRBM.gibbs&quot;&gt;&lt;code&gt;gibbs&lt;/code&gt;&lt;/a&gt;(v)</target>
        </trans-unit>
        <trans-unit id="4db8b8a29ddc35033be631420f3599fc58e6af49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neural_network.BernoulliRBM.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad111443cd323159085762da183344fe32a2cdd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neural_network.BernoulliRBM.score_samples&quot;&gt;&lt;code&gt;score_samples&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neural_network.BernoulliRBM.score_samples&quot;&gt;&lt;code&gt;score_samples&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="dc5ee4cde6b2aa29948fd14bd9a34044658faaee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neural_network.BernoulliRBM.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neural_network.BernoulliRBM.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="9c01364a01f747e6c2fcd928e829f2c3a9d6ffde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neural_network.BernoulliRBM.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neural_network.BernoulliRBM.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="c8abad221d4806c8c2a39abddbbf60d70da9eb75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neural_network.MLPClassifier.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da7c523784d66156551f3b3cf383d5fe6723b08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neural_network.MLPClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neural_network.MLPClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="c9ba0aca5117a5f00d9fc5dcc02005cf29845a6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neural_network.MLPClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neural_network.MLPClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="561e40fe2306441ca7cf58da33dba23bf5388f4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neural_network.MLPClassifier.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neural_network.MLPClassifier.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="c19a774fd2bdc9ef5c5f8c600f9386eeff8c9a6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neural_network.MLPClassifier.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neural_network.MLPClassifier.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="5204131a5d38d0de325c2e6621d7d4833bd6d49d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neural_network.MLPClassifier.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50fd83581137cf5391fa05620402bd4f9e88cd42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neural_network.MLPClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neural_network.MLPClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="359dcbcb12379fc41d358d659e51b942282de142" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neural_network.MLPRegressor.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ec775d735b476355aa4b85334c3e87a7d939e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neural_network.MLPRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neural_network.MLPRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="9e6ff1500baa0b1004e706d9eea999941d22437e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neural_network.MLPRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neural_network.MLPRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="e8ec8dceb11d3be33e2f87d7f533a2d206e7501f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neural_network.MLPRegressor.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ada3a4f32ca385762b7808d1665e535a7174be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.neural_network.MLPRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.neural_network.MLPRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="4517ba7d44edcdb6989232e87035a92b7248b401" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.pipeline.FeatureUnion.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276413a6a02245cc9c9fe9b9c564be68a242706f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.pipeline.FeatureUnion.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55d752c35fd86887a31cd53cfb53de2bc3bac37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.pipeline.FeatureUnion.get_feature_names&quot;&gt;&lt;code&gt;get_feature_names&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.pipeline.FeatureUnion.get_feature_names&quot;&gt;&lt;code&gt;get_feature_names&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="06e5e066deb61ccabd8961b2a398186eea542279" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.pipeline.FeatureUnion.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.pipeline.FeatureUnion.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="4c71001388f8e49ac714ef897657c749fef04b4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.pipeline.FeatureUnion.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**kwargs)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.pipeline.FeatureUnion.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**kwargs)</target>
        </trans-unit>
        <trans-unit id="68f3479ddb4f89f48eca97f7488a0d6896ffabd3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.pipeline.FeatureUnion.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.pipeline.FeatureUnion.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="d0deed8150549350499b28e1a35982b5983c7490" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.pipeline.Pipeline.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.pipeline.Pipeline.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="b45b9f0c52455a8473bb65f466512d5b13d62c35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.pipeline.Pipeline.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ebbf71239392f01006aaa672d7e03d9eb3c12b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.pipeline.Pipeline.fit_predict&quot;&gt;&lt;code&gt;fit_predict&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce00c1a6e7bf3d9b0c712bc2533d718831ae864" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.pipeline.Pipeline.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccbd4152a82b4173451dd5d099c0da457eef6cda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.pipeline.Pipeline.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.pipeline.Pipeline.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="51190c49bb719f0890f3e3342f8c9fc8329a1d53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.pipeline.Pipeline.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X, **predict_params)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a440a3dc8db460d88ceea0368fd0443ebac0e3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.pipeline.Pipeline.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.pipeline.Pipeline.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="d94c99028247422614baf8eee91318c140e5f1ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.pipeline.Pipeline.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.pipeline.Pipeline.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="da6af2e37c0cf2e49149dadb5bda7050e0a659dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.pipeline.Pipeline.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X[, y, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="933bf57afcc25ff79d181ca6abee7edd21b1f7f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.pipeline.Pipeline.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**kwargs)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.pipeline.Pipeline.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**kwargs)</target>
        </trans-unit>
        <trans-unit id="aafb275bfc58d02f45d51d038083dcce16d51dec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Binarizer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d44c0b3c6d04ddabf5693605bd5bfca686466d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Binarizer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced7cb8e9915d9d683d8f218d465f22cad33d5d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Binarizer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.Binarizer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="ab3429bd5c5b9eca28e3a24d39e8f59548bdb2b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Binarizer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.Binarizer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="7e348805638d307a143c70458c808b2a65230b9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Binarizer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X[, y, copy])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db98b4e84fce9648c6a9e14dc0438bb99ce1214b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.FunctionTransformer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="742918787bb202e5300a12660af4e369a11751f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.FunctionTransformer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834f5ff96a4f71eb2b26b955eec74a49eb22f467" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.FunctionTransformer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.FunctionTransformer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="efbae735f1402d8e6234015aa3c57ac74f37d0c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.FunctionTransformer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d32efa49558e765575d66cb94de5a1cea123a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.FunctionTransformer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.FunctionTransformer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="94e88535cc58f4a2c563622ffbca53991ee6002b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.FunctionTransformer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2edd1d6933a9484cf49839c285fd2b0d9218206" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Imputer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c37db638cb420b71e34bab2fea8adc24872572" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Imputer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6762ebcc556a079e66b87b3ff3577c384af1df6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Imputer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.Imputer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="5ccf64b1970fa918b41fdb7c9f4278f74bd4cbaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Imputer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.Imputer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="8c0a8b939ea63455b4425313c1a526e5f451b53a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Imputer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.Imputer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="3e6eb11f5506c62c21ab72347b5738338fcbfa24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.KBinsDiscretizer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ff3eab0bcfe2438b0fb8c4b2ade7273a0eac74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.KBinsDiscretizer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce66e3a3736f8cdc59923e689ec6d0959c7e0ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.KBinsDiscretizer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.KBinsDiscretizer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="abe5277dc1e676ec66b694dcd0dc56d88b0250ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.KBinsDiscretizer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(Xt)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.KBinsDiscretizer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(Xt)</target>
        </trans-unit>
        <trans-unit id="677cf28a6cf7f91912db36ba6233d91a5b40e007" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.KBinsDiscretizer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.KBinsDiscretizer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="1b67b7bad7778b4c2131aec77897c06514676922" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.KBinsDiscretizer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.KBinsDiscretizer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="7a5d34b1cc0928085a58141e3485b863918248b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.KernelCenterer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(K[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c44c552736202531d8e6da84bdef039de1939d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.KernelCenterer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834bf3c5f0ae1b175cd554be1c0d101b647f65e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.KernelCenterer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.KernelCenterer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="572e99441c61383a38a0a62d26693b74b60b9df3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.KernelCenterer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.KernelCenterer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="ebcc6fc0234ec9ab1a4c34a18818781353dc81f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.KernelCenterer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(K[, y, copy])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d68a8d18e6aeef44a270b543c09ac6b1dcf9a02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.LabelBinarizer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(y)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.LabelBinarizer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(y)</target>
        </trans-unit>
        <trans-unit id="ec01ea36a51dde71899a87b8965b9d519aeb7994" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.LabelBinarizer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(y)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.LabelBinarizer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(y)</target>
        </trans-unit>
        <trans-unit id="91e9da557926a26333bfeafbbde7bb2fdb7097f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.LabelBinarizer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.LabelBinarizer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="9c6092552336922bfb14e29321957e46377d565a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.LabelBinarizer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(Y[, threshold])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50db292732e285a0bedad7a6fd101fd6f8d1b267" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.LabelBinarizer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.LabelBinarizer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="0887e900bdd6dd2b6d346ea58323c78362863cb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.LabelBinarizer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(y)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.LabelBinarizer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(y)</target>
        </trans-unit>
        <trans-unit id="0ff16e1efbb10bda20be76133ac85e19b1b291c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.LabelEncoder.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(y)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.LabelEncoder.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(y)</target>
        </trans-unit>
        <trans-unit id="0fec80aca4c23a51b78fcc1f3263b2016b7a9dec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.LabelEncoder.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(y)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.LabelEncoder.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(y)</target>
        </trans-unit>
        <trans-unit id="0f842fe722f7ce0c7b6a60ee34ad661d1188e20f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.LabelEncoder.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.LabelEncoder.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="a87fab5dc7195d43f0f4355e93cbb29e73347154" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.LabelEncoder.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(y)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.LabelEncoder.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(y)</target>
        </trans-unit>
        <trans-unit id="00ea5357993375c18a7536525b48bbce51773395" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.LabelEncoder.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.LabelEncoder.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="3dba6b0cd47f4a243e1e5d0debc8f1bd62f35582" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.LabelEncoder.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(y)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.LabelEncoder.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(y)</target>
        </trans-unit>
        <trans-unit id="609c2899b7650adcd3ce5ddd63fcdf29f38e4664" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108eeedc7f670546ed697c07c115467aa4a6750f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e8268dcd4e9e907144a1ca273eebc15132a931" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="877d5b432494d50744cc64a508e7c2590b45812c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="5e2bc525ed053aae9b3aa348eede0e0386688f33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27bdcd15a19d29c6d88f9ffc7ce073cf2cd94db3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="1f4f33b9e0408dd5cd330e5d356eba5438ae0990" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="fd879c47fc662c91cdf08062a3b6941e074864ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3981f77fa0829d1713c86e373b1c7154fabaeb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a54e2f7268a5a18169139d2dfdb601f8b2e4b594" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="d25577b69fe18d2c8f51bfdde2f13df7c0f0bd4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="f9eb2f9eefb296f237fb7f621a1aa0f0987e0794" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e001a89a48181ebf451f4762786ccae07758835" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="130c1f559b623e348c3b86750ec94cb8ea88358b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="494e472057b758144e2de1e7d6bafc6bf870497b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(y)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(y)</target>
        </trans-unit>
        <trans-unit id="6f38175d82defb32828561ab80858a27c66d5316" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(y)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(y)</target>
        </trans-unit>
        <trans-unit id="93709b4d583c445eba0188aa1cb11117221ec22b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="3cae91e6f3d02df652cc23be1877ef840def4fd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(yt)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(yt)</target>
        </trans-unit>
        <trans-unit id="5e4c2f870e3926813d807af76271da7d61ef51e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="0f8a93ef67d4353f7e828d7db3c7f6f018481fb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(y)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(y)</target>
        </trans-unit>
        <trans-unit id="99525b9f5190717849914b4baf440a53efcd70a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Normalizer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71eb1c87958e3948518f0623227dab79f7bd7a89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Normalizer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5a7cab2e0297aeb6fcf2637ff58ae1ea02a974" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Normalizer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.Normalizer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="58cb4f02109b1db11a4d5b5a7a4ad7d1ae586d71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Normalizer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.Normalizer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="064492ad52805e309947e8398bb93c4915cc9011" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Normalizer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X[, y, copy])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c5895bffaf3739d5789aa82779fbaed03af49a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907c758253fdec591644c4d807f043410397e553" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888dc43c6581a40d0d2d233070ad9924bd039584" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.get_feature_names&quot;&gt;&lt;code&gt;get_feature_names&lt;/code&gt;&lt;/a&gt;([input_features])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.get_feature_names&quot;&gt;&lt;code&gt;get_feature_names&lt;/code&gt;&lt;/a&gt;([input_features])</target>
        </trans-unit>
        <trans-unit id="7252e9690a3dfad09062a29efba24cb1ce12bd2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="c8de54bcf822d3073bc97ab00ee8e0914bb23120" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="a317d34d14ac5b850581f825b3e4b4cdbeaad3e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="7342350a4763063cffe9defd7e795651fbeb6002" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="4b2ec09c31fd9f551550da0b7b3e0075b784e0e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1af33182170f9132299d957b08302a193f4558" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741af2c1f58d1845c9f05f3a5916cc330ece7cc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="a61e496ab0cc79b17b78b646fcee158aaa4feb10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="cdfc70e1811c3cead625394a5c4504e71b3133ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="e33f4663b7d12e40681ee8b2615785539779c45f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="a1763942ba02652bc492be37ed841f77d10fa033" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253312aab53ddf2c2e2ada6eca74918094daaccc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b329f00dede10d3c8c7610bd709a8de587e4cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.get_feature_names&quot;&gt;&lt;code&gt;get_feature_names&lt;/code&gt;&lt;/a&gt;([input_features])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.get_feature_names&quot;&gt;&lt;code&gt;get_feature_names&lt;/code&gt;&lt;/a&gt;([input_features])</target>
        </trans-unit>
        <trans-unit id="ab1a825a0a4f8c894bd822687d86ef019d89a6d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="217021a82cecc7c622c7758c23e0076b5e36d73b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="b561441dcb5ee4d6afb05559fb0a8fe846551bbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="25ab4107908611fb94f7c8468ff0dbee48f8f71b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b134cadf42805f23626a6f356a215571db637fa0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="a02f1b03de09cc573c18fc1b09949170a3b5d4dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="9a8517b5e077f709a72ec14a25a291b0cb328587" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="602433a2259cba932f43d710614b3b8c682aceef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="b5d1986c88da1574fb8671debc9e53b4b1ae349b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdae8893c6ba52b6ac24340a5b74fe5adcdf1672" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f8e48d49f8dcffb6111b1e904f1caecbb2d7b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="0b8f6d543c14fae3b80615ceb7ebd77102569216" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="7884e564bdbdbde88ce550c8e45ddff73219824c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="2e8612af1bc4e8bbaceb820639365ed35d96515b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="431d1063425f589ada0f92f2801f058b6e03c61b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="324f727d78ed824dc330a432e9dcc7a957ff8247" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b755ab16a811d3fe05ce1f542d2c57159af3cd16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="f917186bab461486bf2f9208ee6362918c0c74e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="7d764da5e1f7f138612d1a73821de6baeef686b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="f0c7686c1470d81b09ad7dfaf83cda86f1dc9f2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="61272ed6e5c8f6b927bd25e7f643fda6f3ad2f37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934d74037ceb0426d331ba2f1426f880f853dc33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4900fa5eace012db65332672660850860c55b282" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="a1f3c6341a9aad6c22dc2d0146db3961ab363073" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X[, copy])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a415d9dfe5d14669f4134fe83b0a41b52cf845e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a2bc9fe9f73d8c607f2276d98c06e203405701" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="1febb3b8588eaabb828e6171d442e036b2f895e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X[, y, copy])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237f76a7aff0b42d1ce83f750d084a2ecb90e2bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2ad30e94111b44ee9849199facfe60730b2d0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba0db0f32902d59d220742c64d5151773c5e106" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="e7b3d53385ec30771f82005232f0ef1ab5e24923" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="6fa24a2d3931f734f64c83917cdd41ed80e21e40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="49eb083df941b9a06fb0e9e9e44c9ec22922dac2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03810dace856edcd13e75d0d1d798cf82965c895" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66db0b81c1ffc75aecb161909ad1d4c6c41e72e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="954a1f728bcf61e22cb313ccc0cbada15c355942" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="a4f05f5ce056fa76e1b18b82a0b59c56584fa8f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="4d92f40ad8cd4f7d81565d3ac6d8592d74c8dd69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="2384b6dd19a9b76471c5e116d320d2df5d1713d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="b2def215b040f8f609c1e0ef616e48565db25705" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="815e72b6c22f573d100da7f62e6f6984cbe01a6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eadb5c500221df65a9f9866871486e05986c1c03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="b4c6b22a7a7ddaffa6b9441265cdab2817a1463e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8630cf34daeae7d19656dcf8831d170eb3f7ed61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="0fde66af8971f6bf9fcb000e0cccd94a55c27619" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="365321ce62987c1e7636537cc3ed643e8ce05858" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="8d485f6b57cacf3c2c76fba0d8d010a0a74af30b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311f06ff8566df2d6679d7063f940f05a36c0e8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="6c3f20ec165f7aa6a3d670b32608245e6583f139" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="be9de40ad61af21f78b172836eaf9d693f1c45f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.densify&quot;&gt;&lt;code&gt;densify&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.densify&quot;&gt;&lt;code&gt;densify&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="bb809ab613454a3a1d026086cfba58e3c98d34d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f030a50178d03a16bd17c283b7665a3b7de48b9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="4b6e54eb5d3c3e52e4d88cb2411f190d06aff596" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="641483ce095df447d49ca644ad2b5d4544707403" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b462e66676d7168cb3a0faffa8a5d61dd76bd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="52a9f430850177d33347add14123d34c6b5d649d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.sparsify&quot;&gt;&lt;code&gt;sparsify&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.sparsify&quot;&gt;&lt;code&gt;sparsify&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="35f2edd484816f0feb15e246090f656c45f02c31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVR.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8535ffcb5e2ffc82509c2d34e8be0ba83686da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVR.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVR.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="8ed0e70a27a20df9975d03812ad230dd3ed98906" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVR.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVR.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="d26574828ca3a6596fb536af3be72a95bf48da5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVR.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7506b45c9ba11ef47ec5a4be3185e991367df26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVR.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVR.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="c09ac5e766b0973e4b10c0434c7aa848ebdb68ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVC.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVC.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="0c13bb73d7e1cbc207d6bce94ffd8beca6980a7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVC.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414f1914c62a6cda2a05c5c60f0496b8bd309898" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVC.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVC.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="fbe4fbca9b4e649f7a40b34b82ca7ac63f84ec2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVC.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVC.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="aa1bfac167bc1f1dc9edf2c525e2a55264a5cbfe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVC.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0d5832191fac150767cb6bc791f22d0819b82d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVC.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVC.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="0659659b2bcd23e814a5bf62c673bb51bf41dbd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVR.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b59c94fbf894a69de94585d1c7729bcf514f25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVR.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVR.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="dc2c40490029f48847332a1d7b7688c850285293" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVR.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVR.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="b05ccdc8913bd08854e73f84583c0929095e3a81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVR.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221c7a8eae7188ea181b396dd1b90ac49256989b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVR.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVR.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="ad81c989ca74d7d05bc32460f7d151a89abf66e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.OneClassSVM.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="121e71cd0dc150bbcd6bf1af020b816dcb95fd9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99caa830d9c7da325413ebdae8b46d9352d967f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.fit_predict&quot;&gt;&lt;code&gt;fit_predict&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0782d3c143737b310a2e1a45c87ef6ec48a1f142" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.OneClassSVM.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="adaf768a3bca7e61d312bd51fb3e59c6c309f799" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.OneClassSVM.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="73a6d0ef953f99b24ffb1c0786307accfb6fd690" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.score_samples&quot;&gt;&lt;code&gt;score_samples&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.OneClassSVM.score_samples&quot;&gt;&lt;code&gt;score_samples&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="fa0a19f5a77b03aa200160842aec0974a2ba67c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.OneClassSVM.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="13e66010824bf3b559373309bab2d2d61ae28bcb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVC.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVC.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="eaf32b3fba4e046e7f0dfbcceebab679aa0e9cae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVC.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95149b0fbd0a334029835fb763d89a602030c35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVC.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVC.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="7024d28dc19312604573afcd8ee27c61976d0e55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVC.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVC.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="f7f1e3d3ab12c11542c3d93cb5ac4d441a537aaf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVC.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5caf9c0d345c40872c307e89f65c3d08261414ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVC.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVC.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="b18a48aa718fb82cc35acd42db5a888e525a5c39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVR.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b0b717eb0320c8ed2d029a38a1ba4a118c4ae0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVR.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVR.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="ee3d7b7294e8e666e3aec92fbdc1cf010c57e954" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVR.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVR.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="db222a2a96730b45af0d6966dd8580010796e0cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVR.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da073250731dc3752cc16c9e590e6fe5d6b7dbfc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVR.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVR.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="d986e854a3b166ca430c98b4e83ca44f19ee3bba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.apply&quot;&gt;&lt;code&gt;apply&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f946c7b239c78964754a859f6961889fca632a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.decision_path&quot;&gt;&lt;code&gt;decision_path&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15dd2da21da25f0b72636b05129a4f2ad44eb5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight, check_input, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed534d11e1cf0a3b7d5f1ba8d4ac2c534455b052" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="df0f801628b81edc9703115a2523da7c3297031f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16a13f825775d4191c21a28a445cc069149b988" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="073619ef7719fa9c6cd60b378b8ac90f91c49967" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a60fbc6050f842fbad040dc0b7aa5dbec0fdf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7ab526fbe96bb45d2404082a436d3ae705798f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="9e2c5f4b34bbb361501f217d7e2b203ea962daa7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.apply&quot;&gt;&lt;code&gt;apply&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4225c1c44eee7c5ec47865cb59c23a54cf828b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.decision_path&quot;&gt;&lt;code&gt;decision_path&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daaa1401fc2e0e66ce34d9f12d8e7587874d83a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight, check_input, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726ba138eade24bae52f40bd26c71a25cdcaf83c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="994401ea46be57764b391b5b200ce9aed24caad2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ff3b6ef210d4386ebb678005b2c672ac77d158" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a692ec644f74731db0443680d6e308ecc5a17044" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="bc62892f63d3a9cbab55981bbdc3efc558e37080" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.apply&quot;&gt;&lt;code&gt;apply&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85ef496dc313b339fce98d49f0305055ad0fd99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.decision_path&quot;&gt;&lt;code&gt;decision_path&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9290fa2e32c23849f534c4ec0b5688941351086b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight, check_input, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3ba55c4a55c3a86eb7527c695a560a010f2373" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="53913e1f39f53e714a3708c51f62056b1ecc0bf1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acbcfacac9580441f26e89b35ac1cd23803dc8e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="c5b625412cbe0e89bee6cf9f9d94da1f5acd8047" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58dee26c978e1620cbc0071b61c255257578e4ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942b9df16d517dfd8358deb8993ee47a76b81399" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="0ea74c7de7f40ccb999bccbfc3c79a1b586190ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.apply&quot;&gt;&lt;code&gt;apply&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5276183000dfbeb8a0a1913411460b0658af23de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.decision_path&quot;&gt;&lt;code&gt;decision_path&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0403cb18bc343bdfe95195e33961272fe68c1f19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight, check_input, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd34d709cdb5aa4be85df11d9f9d82d5178f6b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="0fddad60c342e7f6a0f90f2c41daa0945b17a29f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b46387aad6f982edd01a938124694a46881926d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503054553a0d98904bea6720dd7ce9a2736cf2ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="c4d7f6d8e4fd6d09c383dc403bef887d28ff6577" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Memory.cache&quot;&gt;&lt;code&gt;cache&lt;/code&gt;&lt;/a&gt;([func, ignore, verbose, mmap_mode])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbbd7395cfc079348c53ce24ecd5e92d5e1296ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Memory.clear&quot;&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/a&gt;([warn])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Memory.clear&quot;&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/a&gt;([warn])</target>
        </trans-unit>
        <trans-unit id="ee2b56aa3149f9e490e87ec82fec987be906a94e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Memory.eval&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;(func, *args, **kwargs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4200f25f6c85752e9e9dc85b9d3088f61f23a1a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Memory.format&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt;(obj[, indent])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9204d645d24081482d782f3bda1ae0c019af6dea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Memory.reduce_size&quot;&gt;&lt;code&gt;reduce_size&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Memory.reduce_size&quot;&gt;&lt;code&gt;reduce_size&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="fe97bdff76c4d8fc616e3cba00f74a8b16ec1c0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Parallel.dispatch_next&quot;&gt;&lt;code&gt;dispatch_next&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Parallel.dispatch_next&quot;&gt;&lt;code&gt;dispatch_next&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="e991b0616acafb2e9785c560e9c169a297b3dc13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Parallel.dispatch_one_batch&quot;&gt;&lt;code&gt;dispatch_one_batch&lt;/code&gt;&lt;/a&gt;(iterator)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Parallel.dispatch_one_batch&quot;&gt;&lt;code&gt;dispatch_one_batch&lt;/code&gt;&lt;/a&gt;(iterator)</target>
        </trans-unit>
        <trans-unit id="7a08d57eec9640a4518b2da114890ac2613c1d02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Parallel.format&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt;(obj[, indent])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14196be009f261fb0694105a239ea5c1e25f9541" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Parallel.print_progress&quot;&gt;&lt;code&gt;print_progress&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Parallel.print_progress&quot;&gt;&lt;code&gt;print_progress&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="e53d9a60ee634f44f24c91f040ecc7bf285bdd4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#theil-sen-regression&quot;&gt;Theil Sen&lt;/a&gt; will cope better with medium-size outliers in the X direction, but this property will disappear in large dimensional settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3340fb133daee19051282b36c1f0a858717abb3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/decomposition#ica&quot;&gt;Independent component analysis (ICA)&lt;/a&gt; is used to estimate sources given noisy measurements. Imagine 3 instruments playing simultaneously and 3 microphones recording the mixed signals. ICA is used to recover the sources ie. what is played by each instrument. Importantly, PCA fails at recovering our &lt;code&gt;instruments&lt;/code&gt; since the related signals reflect non-Gaussian processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0708446c01fcb547575dcd7398ebcb58d4d37ba0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/decomposition#ica&quot;&gt;Independent component analysis (ICA)&lt;/a&gt; selects components so that the distribution of their loadings carries a maximum amount of independent information. It is able to recover &lt;strong&gt;non-Gaussian&lt;/strong&gt; independent signals:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa776087f556995b19edda096679fcd47ef04b0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/decomposition#ica&quot;&gt;Independent component analysis (ICA)&lt;/a&gt; vs &lt;a href=&quot;../../modules/decomposition#pca&quot;&gt;Principal component analysis (PCA)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd02fba92261a4ec4d08b1b50b404c531a7c1f47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/decomposition#pca&quot;&gt;Principal component analysis (PCA)&lt;/a&gt; selects the successive components that explain the maximum variance in the signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8317624f45daa48dc8976e54f831ebcd9e88097c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;CountVectorizer&lt;/code&gt;&lt;/a&gt; supports counts of N-grams of words or consecutive characters. Once fitted, the vectorizer has built a dictionary of feature indices:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e852e16a1ccbd8d83717ebb95990fe61614c1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;LinearRegression&lt;/code&gt;&lt;/a&gt;, in its simplest form, fits a linear model to the data set by adjusting a set of parameters in order to make the sum of the squared residuals of the model as small as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974a26689b53da1460a8a54c4a626c31f6297fe8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;Ridge&lt;/code&gt;&lt;/a&gt; Regression is the estimator used in this example. Each color in the left plot represents one different dimension of the coefficient vector, and this is displayed as a function of the regularization parameter. The right plot shows how exact the solution is. This example illustrates how a well defined solution is found by Ridge regression and how regularization affects the coefficients and their values. The plot on the right shows how the difference of the coefficients from the estimator changes as a function of regularization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b32fb083b81b2c513e3262fcd261d2509046ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;Ridge&lt;/code&gt;&lt;/a&gt; Regression is the estimator used in this example. Each color represents a different feature of the coefficient vector, and this is displayed as a function of the regularization parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86565b85cea78fabec1bdc1da398314ff9e806d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.metrics.recall_score#sklearn.metrics.recall_score&quot;&gt;&lt;code&gt;sklearn.metrics.recall_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../modules/generated/sklearn.metrics.precision_score#sklearn.metrics.precision_score&quot;&gt;&lt;code&gt;sklearn.metrics.precision_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../modules/generated/sklearn.metrics.f1_score#sklearn.metrics.f1_score&quot;&gt;&lt;code&gt;sklearn.metrics.f1_score&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95d51f197cf77b6057df64318579bf546efd8bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.cross_val_score#sklearn.model_selection.cross_val_score&quot;&gt;&lt;code&gt;sklearn.model_selection.cross_val_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;plot_roc#sphx-glr-auto-examples-model-selection-plot-roc-py&quot;&gt;Receiver Operating Characteristic (ROC)&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2c4debd0c4978fc861a1a6759a1616605e4e05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt;&lt;code&gt;GroupKFold&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_splits)&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt;&lt;code&gt;GroupKFold&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_splits)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="323feb1523ae1df1e016eeec55adcac04a022e47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt;&lt;code&gt;KFold&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_splits, shuffle, random_state)&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4fe73455f55b43f06ccab5ce9ff9f9742c6c50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt;&lt;code&gt;LeaveOneGroupOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;()&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt;&lt;code&gt;LeaveOneGroupOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="483966b47af4dc78f56585b22f105868bda6e1dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;LeaveOneOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;()&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;LeaveOneOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0c5108a0ab0ac6bb52d13f14638b80e9a47e6fbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt;&lt;code&gt;LeavePGroupsOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_groups)&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt;&lt;code&gt;LeavePGroupsOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_groups)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fae688046b40a14ef3430a3a2ff7ff60db4a5700" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leavepout#sklearn.model_selection.LeavePOut&quot;&gt;&lt;code&gt;LeavePOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(p)&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leavepout#sklearn.model_selection.LeavePOut&quot;&gt;&lt;code&gt;LeavePOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(p)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b8bfb8e37d851e685fd8d627401ccb896f62727" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.shufflesplit#sklearn.model_selection.ShuffleSplit&quot;&gt;&lt;code&gt;ShuffleSplit&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_splits, test_size, train_size, random_state)&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef50307796f865a5db34c276ace8fe440647a050" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.stratifiedkfold#sklearn.model_selection.StratifiedKFold&quot;&gt;&lt;code&gt;StratifiedKFold&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_splits, shuffle, random_state)&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed77fdfe478e82b6cafa0a5b918124d75b04f07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/svm#svm&quot;&gt;Support Vector Machines&lt;/a&gt; belong to the discriminant model family: they try to find a combination of samples to build a plane maximizing the margin between the two classes. Regularization is set by the &lt;code&gt;C&lt;/code&gt; parameter: a small value for &lt;code&gt;C&lt;/code&gt; means the margin is calculated using many or all of the observations around the separating line (more regularization); a large value for &lt;code&gt;C&lt;/code&gt; means the margin is calculated on observations close to the separating line (less regularization).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252f42d4bf84393b3820af54e64cc21760a047ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/svm#svm-outlier-detection&quot;&gt;One-class SVM&lt;/a&gt; is an unsupervised algorithm that learns a decision function for novelty detection: classifying new data as similar or different to the training set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25cd5e36e35dabd3e6c256da0163359e2df881fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/applications/plot_stock_market#sphx-glr-auto-examples-applications-plot-stock-market-py&quot;&gt;Visualizing the stock market structure&lt;/a&gt; Affinity Propagation on Financial time series to find groups of companies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44be4400f60fc1f65ab4483f89053dc62ec071a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/applications/plot_stock_market#sphx-glr-auto-examples-applications-plot-stock-market-py&quot;&gt;Visualizing the stock market structure&lt;/a&gt;: example on real stock market data, finding which symbols are most linked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d50677ba87f9c5d1eeb5008ccb348937924acc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/bicluster/plot_bicluster_newsgroups#sphx-glr-auto-examples-bicluster-plot-bicluster-newsgroups-py&quot;&gt;Biclustering documents with the Spectral Co-clustering algorithm&lt;/a&gt;: An example of finding biclusters in the twenty newsgroup dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792fd3934b8e5069f477376df1827207e7123ecc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/bicluster/plot_spectral_biclustering#sphx-glr-auto-examples-bicluster-plot-spectral-biclustering-py&quot;&gt;A demo of the Spectral Biclustering algorithm&lt;/a&gt;: a simple example showing how to generate a checkerboard matrix and bicluster it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba1096ff77a2d8f57a5003afef74f494f2260b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/bicluster/plot_spectral_coclustering#sphx-glr-auto-examples-bicluster-plot-spectral-coclustering-py&quot;&gt;A demo of the Spectral Co-Clustering algorithm&lt;/a&gt;: A simple example showing how to generate a data matrix with biclusters and apply this method to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3535c5f9f05109b9c009dc4764a0a905544f682" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/classification/plot_lda#sphx-glr-auto-examples-classification-plot-lda-py&quot;&gt;Normal and Shrinkage Linear Discriminant Analysis for classification&lt;/a&gt;: Comparison of LDA classifiers with and without shrinkage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944af6fad4aaf9d9de737c634557a10c8e138043" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/classification/plot_lda_qda#sphx-glr-auto-examples-classification-plot-lda-qda-py&quot;&gt;Linear and Quadratic Discriminant Analysis with covariance ellipsoid&lt;/a&gt;: Comparison of LDA and QDA on synthetic data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="081608ed075d14d6a33b709aba2f5a0785ff23d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_adjusted_for_chance_measures#sphx-glr-auto-examples-cluster-plot-adjusted-for-chance-measures-py&quot;&gt;Adjustment for chance in clustering performance evaluation&lt;/a&gt;: Analysis of the impact of the dataset size on the value of clustering measures for random assignments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187d34d01b9be9a8171ce6a04c4b08e3a21fad92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_adjusted_for_chance_measures#sphx-glr-auto-examples-cluster-plot-adjusted-for-chance-measures-py&quot;&gt;Adjustment for chance in clustering performance evaluation&lt;/a&gt;: Analysis of the impact of the dataset size on the value of clustering measures for random assignments. This example also includes the Adjusted Rand Index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5a14259f767f9088d2f473a3e935f71b2c585b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_affinity_propagation#sphx-glr-auto-examples-cluster-plot-affinity-propagation-py&quot;&gt;Demo of affinity propagation clustering algorithm&lt;/a&gt;: Affinity Propagation on a synthetic 2D datasets with 3 classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1cc1fa9681d9dc465e839d7ce2fdf4f7aa536c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_coin_segmentation#sphx-glr-auto-examples-cluster-plot-coin-segmentation-py&quot;&gt;Segmenting the picture of greek coins in regions&lt;/a&gt;: Spectral clustering to split the image of coins in regions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b36597780e6856f756f89f0e2e7c12b24f8501" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_coin_ward_segmentation#sphx-glr-auto-examples-cluster-plot-coin-ward-segmentation-py&quot;&gt;A demo of structured Ward hierarchical clustering on an image of coins&lt;/a&gt;: Ward clustering to split the image of coins in regions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547c011992d38403733e67a473aac01c8d218fbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_digits_linkage#sphx-glr-auto-examples-cluster-plot-digits-linkage-py&quot;&gt;Various Agglomerative Clustering on a 2D embedding of digits&lt;/a&gt;: exploration of the different linkage strategies in a real dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc829166f42f9046d69ee97ccbe1453b3f4d9ae7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_feature_agglomeration_vs_univariate_selection#sphx-glr-auto-examples-cluster-plot-feature-agglomeration-vs-univariate-selection-py&quot;&gt;Feature agglomeration vs. univariate selection&lt;/a&gt;: Example of dimensionality reduction with feature agglomeration based on Ward hierarchical clustering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8c45713569a9a5c39b47cf456ff9315c76d077" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_kmeans_assumptions#sphx-glr-auto-examples-cluster-plot-kmeans-assumptions-py&quot;&gt;Demonstration of k-means assumptions&lt;/a&gt;: Demonstrating when k-means performs intuitively and when it does not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3413ae75ec878d880736f31cf45172c75d5ab0ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_kmeans_digits#sphx-glr-auto-examples-cluster-plot-kmeans-digits-py&quot;&gt;A demo of K-Means clustering on the handwritten digits data&lt;/a&gt;: Clustering handwritten digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccbc313c20268b02fdb60070ca95d2837b7ccde3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_kmeans_silhouette_analysis#sphx-glr-auto-examples-cluster-plot-kmeans-silhouette-analysis-py&quot;&gt;Selecting the number of clusters with silhouette analysis on KMeans clustering&lt;/a&gt; : In this example the silhouette analysis is used to choose an optimal value for n_clusters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8e7ad0cce139cea7cc063b2e7ef9f98d5fdfae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_mean_shift#sphx-glr-auto-examples-cluster-plot-mean-shift-py&quot;&gt;A demo of the mean-shift clustering algorithm&lt;/a&gt;: Mean Shift clustering on a synthetic 2D datasets with 3 classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170e65f032a1dde17e643e1cb24d69b496f652f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_mini_batch_kmeans#sphx-glr-auto-examples-cluster-plot-mini-batch-kmeans-py&quot;&gt;Comparison of the K-Means and MiniBatchKMeans clustering algorithms&lt;/a&gt;: Comparison of KMeans and MiniBatchKMeans</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d42636674d5e7be533c19086ea1b7e51f44271" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_segmentation_toy#sphx-glr-auto-examples-cluster-plot-segmentation-toy-py&quot;&gt;Spectral clustering for image segmentation&lt;/a&gt;: Segmenting objects from a noisy background using spectral clustering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8622c246137caca261a8f8dab784e4834be626dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_ward_structured_vs_unstructured#sphx-glr-auto-examples-cluster-plot-ward-structured-vs-unstructured-py&quot;&gt;Hierarchical clustering: structured vs unstructured ward&lt;/a&gt;: Example of Ward algorithm on a swiss-roll, comparison of structured approaches versus unstructured approaches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f88a6fa73d890d432a6aa42399b9b09d116112" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/covariance/plot_sparse_cov#sphx-glr-auto-examples-covariance-plot-sparse-cov-py&quot;&gt;Sparse inverse covariance estimation&lt;/a&gt;: example on synthetic data showing some recovery of a structure, and comparing to other covariance estimators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b1310ce0bab5f07182a4fb1a5894503ca68b87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/decomposition/plot_pca_vs_lda#sphx-glr-auto-examples-decomposition-plot-pca-vs-lda-py&quot;&gt;Comparison of LDA and PCA 2D projection of Iris dataset&lt;/a&gt;: Comparison of LDA and PCA for dimensionality reduction of the Iris dataset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0dd2f62cc3dfee226b121c6c421d1e26f52cda5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_adaboost_hastie_10_2#sphx-glr-auto-examples-ensemble-plot-adaboost-hastie-10-2-py&quot;&gt;Discrete versus Real AdaBoost&lt;/a&gt; compares the classification error of a decision stump, decision tree, and a boosted decision stump using AdaBoost-SAMME and AdaBoost-SAMME.R.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a0d2bbda60559f425e07fcc7165a5bef04f382" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_adaboost_multiclass#sphx-glr-auto-examples-ensemble-plot-adaboost-multiclass-py&quot;&gt;Multi-class AdaBoosted Decision Trees&lt;/a&gt; shows the performance of AdaBoost-SAMME and AdaBoost-SAMME.R on a multi-class problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b0bc23565669714e4af29dd536270273f3402e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_adaboost_regression#sphx-glr-auto-examples-ensemble-plot-adaboost-regression-py&quot;&gt;Decision Tree Regression with AdaBoost&lt;/a&gt; demonstrates regression with the AdaBoost.R2 algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c6d18139cc1cdd2de6eb6f4786a565e57db72c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_adaboost_twoclass#sphx-glr-auto-examples-ensemble-plot-adaboost-twoclass-py&quot;&gt;Two-class AdaBoost&lt;/a&gt; shows the decision boundary and decision function values for a non-linearly separable two-class problem using AdaBoost-SAMME.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017ef7814a79ae2025c6ec98cbfe58f80f9e673f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_feature_transformation#sphx-glr-auto-examples-ensemble-plot-feature-transformation-py&quot;&gt;Feature transformations with ensembles of trees&lt;/a&gt; compares supervised and unsupervised tree based feature transformations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e560c597aceeb951c8c67180435ee8b0e42ba5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_forest_importances#sphx-glr-auto-examples-ensemble-plot-forest-importances-py&quot;&gt;Feature importances with forests of trees&lt;/a&gt;: example on synthetic data showing the recovery of the actually meaningful features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb148629bec49066691c504d3215e85cac920009" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_forest_importances_faces#sphx-glr-auto-examples-ensemble-plot-forest-importances-faces-py&quot;&gt;Pixel importances with a parallel forest of trees&lt;/a&gt;: example on face recognition data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c61fb360f3b55d34958b071bfbb98ddf45ee0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/feature_selection/plot_rfe_digits#sphx-glr-auto-examples-feature-selection-plot-rfe-digits-py&quot;&gt;Recursive feature elimination&lt;/a&gt;: A recursive feature elimination example showing the relevance of pixels in a digit classification task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b001bec35db058b258a73d061dbf60b976bfe8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/feature_selection/plot_rfe_with_cross_validation#sphx-glr-auto-examples-feature-selection-plot-rfe-with-cross-validation-py&quot;&gt;Recursive feature elimination with cross-validation&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a390bc20d8352b46fbd72dc13994978da78ba234" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/feature_selection/plot_rfe_with_cross_validation#sphx-glr-auto-examples-feature-selection-plot-rfe-with-cross-validation-py&quot;&gt;Recursive feature elimination with cross-validation&lt;/a&gt;: A recursive feature elimination example with automatic tuning of the number of features selected with cross-validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328051f948fcba9623bf69836dca39c34ae81eac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/feature_selection/plot_select_from_model_boston#sphx-glr-auto-examples-feature-selection-plot-select-from-model-boston-py&quot;&gt;Feature selection using SelectFromModel and LassoCV&lt;/a&gt;: Selecting the two most important features from the Boston dataset without knowing the threshold beforehand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0650a2d5fcc4cb39ed3e3f859c0a39f3da833260" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/linear_model/plot_sgd_separating_hyperplane#sphx-glr-auto-examples-linear-model-plot-sgd-separating-hyperplane-py&quot;&gt;SGD: Maximum margin separating hyperplane&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac83a4cc8d160aa3241174545e9812a22069f55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/manifold/plot_lle_digits#sphx-glr-auto-examples-manifold-plot-lle-digits-py&quot;&gt;Manifold learning on handwritten digits: Locally Linear Embedding, Isomap&amp;hellip;&lt;/a&gt; compares non-linear dimensionality reduction techniques on handwritten digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7f078993cb737a820cfb64f65c25e08ce9a434" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/mixture/plot_gmm_sin#sphx-glr-auto-examples-mixture-plot-gmm-sin-py&quot;&gt;Gaussian Mixture Model Sine Curve&lt;/a&gt; shows using &lt;a href=&quot;generated/sklearn.mixture.gaussianmixture#sklearn.mixture.GaussianMixture&quot;&gt;&lt;code&gt;GaussianMixture&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.mixture.bayesiangaussianmixture#sklearn.mixture.BayesianGaussianMixture&quot;&gt;&lt;code&gt;BayesianGaussianMixture&lt;/code&gt;&lt;/a&gt; to fit a sine wave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5adde30104f8b2c420554d50b57864c2c3e4c6cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/model_selection/grid_search_text_feature_extraction#sphx-glr-auto-examples-model-selection-grid-search-text-feature-extraction-py&quot;&gt;Sample pipeline for text feature extraction and evaluation&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4a2c6ba8a9a602ef1f99c87cb24ab3111954e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/model_selection/plot_cv_predict#sphx-glr-auto-examples-model-selection-plot-cv-predict-py&quot;&gt;Plotting Cross-Validated Predictions&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe57101a1e1b2447a7b87fe498377899b02fd2c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/model_selection/plot_grid_search_digits#sphx-glr-auto-examples-model-selection-plot-grid-search-digits-py&quot;&gt;Parameter estimation using grid search with cross-validation&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d14e80cf909d5fa7e4eae41ab8f9596815b762" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/model_selection/plot_nested_cross_validation_iris#sphx-glr-auto-examples-model-selection-plot-nested-cross-validation-iris-py&quot;&gt;Nested versus non-nested cross-validation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e111d3a9d189834c5fe59a20d99be346584627e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/model_selection/plot_randomized_search#sphx-glr-auto-examples-model-selection-plot-randomized-search-py&quot;&gt;Comparing randomized search and grid search for hyperparameter estimation&lt;/a&gt; compares the usage and efficiency of randomized search and grid search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a4ba435eae0a10b14f919f278d37388d9abe36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/model_selection/plot_roc_crossval#sphx-glr-auto-examples-model-selection-plot-roc-crossval-py&quot;&gt;Receiver Operating Characteristic (ROC) with cross validation&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6396b67460cfc40805ab78a4385e8a9ec731d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/plot_classification#sphx-glr-auto-examples-neighbors-plot-classification-py&quot;&gt;Nearest Neighbors Classification&lt;/a&gt;: an example of classification using nearest neighbors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8ce5a82b89c597118121d42998af05b147eefa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/plot_digits_kde_sampling#sphx-glr-auto-examples-neighbors-plot-digits-kde-sampling-py&quot;&gt;Kernel Density Estimation&lt;/a&gt;: an example of using Kernel Density estimation to learn a generative model of the hand-written digits data, and drawing new samples from this model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64c661b49277d749817df15a4f58fb6e36a7855" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/plot_kde_1d#sphx-glr-auto-examples-neighbors-plot-kde-1d-py&quot;&gt;Simple 1D Kernel Density Estimation&lt;/a&gt;: computation of simple kernel density estimates in one dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecce84d7cfed724a52c77cd7ba7bd40de8af129f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/plot_nearest_centroid#sphx-glr-auto-examples-neighbors-plot-nearest-centroid-py&quot;&gt;Nearest Centroid Classification&lt;/a&gt;: an example of classification using nearest centroid with different shrink thresholds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae3f34bae8d4933f2c769f843a675fb23256c1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/plot_regression#sphx-glr-auto-examples-neighbors-plot-regression-py&quot;&gt;Nearest Neighbors regression&lt;/a&gt;: an example of regression using nearest neighbors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa447910bde4a9b44ec54bf541e85f668f6cb525" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/plot_species_kde#sphx-glr-auto-examples-neighbors-plot-species-kde-py&quot;&gt;Kernel Density Estimate of Species Distributions&lt;/a&gt;: an example of Kernel Density estimation using the Haversine distance metric to visualize geospatial data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b133cfa28f75dfe2f07e6b07b1735ff088b0730" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/plot_multioutput_face_completion#sphx-glr-auto-examples-plot-multioutput-face-completion-py&quot;&gt;Face completion with a multi-output estimators&lt;/a&gt;: an example of multi-output regression using nearest neighbors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d965cda82f943ebd05f20a86b4293b0d3bb1e0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_custom_kernel#sphx-glr-auto-examples-svm-plot-custom-kernel-py&quot;&gt;SVM with custom kernel&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19052aa638c3743a930908ba39e554a66fa045a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_iris#sphx-glr-auto-examples-svm-plot-iris-py&quot;&gt;Plot different SVM classifiers in the iris dataset&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5add981a49cef1b0d860d0e917a34eb9f7a3691f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_separating_hyperplane#sphx-glr-auto-examples-svm-plot-separating-hyperplane-py&quot;&gt;SVM: Maximum margin separating hyperplane&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b811e458696c59ceec8665a7b13533fba01aaad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_separating_hyperplane_unbalanced#sphx-glr-auto-examples-svm-plot-separating-hyperplane-unbalanced-py&quot;&gt;SVM: Separating hyperplane for unbalanced classes&lt;/a&gt; (See the &lt;code&gt;Note&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a447a3e4e0120d6c2471eb668972d816c954fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_svm_anova#sphx-glr-auto-examples-svm-plot-svm-anova-py&quot;&gt;SVM-Anova: SVM with univariate feature selection&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2fdc42dc8d5b94fb4d28ad400e5bb054529b31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_weighted_samples#sphx-glr-auto-examples-svm-plot-weighted-samples-py&quot;&gt;SVM: Weighted samples&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc0b020edb52bf4bce2266de7d77f784eb176c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/text/plot_document_classification_20newsgroups#sphx-glr-auto-examples-text-plot-document-classification-20newsgroups-py&quot;&gt;Classification of text documents using sparse features&lt;/a&gt;: Comparison of different algorithms for document classification including L1-based feature selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa739986683b2ab2c634f19f37f73f18f3720f71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/text/plot_document_clustering#sphx-glr-auto-examples-text-plot-document-clustering-py&quot;&gt;Clustering text documents using k-means&lt;/a&gt;: Document clustering using sparse MiniBatchKMeans</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e51e7c11dd8b29259adf7b6b09000415fe4434e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_20newsgroups#sklearn.datasets.fetch_20newsgroups&quot;&gt;&lt;code&gt;fetch_20newsgroups&lt;/code&gt;&lt;/a&gt;([data_home, subset, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e8facad56e12884e4f6ab504bfcfce84190b3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized#sklearn.datasets.fetch_20newsgroups_vectorized&quot;&gt;&lt;code&gt;fetch_20newsgroups_vectorized&lt;/code&gt;&lt;/a&gt;([subset, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de94fc920f74b3f94b8c744339671dc118b390f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized#sklearn.datasets.fetch_20newsgroups_vectorized&quot;&gt;&lt;code&gt;sklearn.datasets.fetch_20newsgroups_vectorized&lt;/code&gt;&lt;/a&gt; is a function which returns ready-to-use token counts features instead of file names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd51720577ef8ceb452fd1e10725b5402de80381" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_california_housing#sklearn.datasets.fetch_california_housing&quot;&gt;&lt;code&gt;fetch_california_housing&lt;/code&gt;&lt;/a&gt;([data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af271a932f083f2d16f41ba60308d0fc5190e5f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_covtype#sklearn.datasets.fetch_covtype&quot;&gt;&lt;code&gt;fetch_covtype&lt;/code&gt;&lt;/a&gt;([data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50de4697df9fcc442197a0baaea73bf43ee09751" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_covtype#sklearn.datasets.fetch_covtype&quot;&gt;&lt;code&gt;sklearn.datasets.fetch_covtype&lt;/code&gt;&lt;/a&gt; will load the covertype dataset; it returns a dictionary-like object with the feature matrix in the &lt;code&gt;data&lt;/code&gt; member and the target values in &lt;code&gt;target&lt;/code&gt;. The dataset will be downloaded from the web if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb89d0d40a2a8a2e054bab1505f9c4c1a6b7fbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_kddcup99#sklearn.datasets.fetch_kddcup99&quot;&gt;&lt;code&gt;fetch_kddcup99&lt;/code&gt;&lt;/a&gt;([subset, data_home, shuffle, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d250ef70704f5874111c664c10fb0218f6b172" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_kddcup99#sklearn.datasets.fetch_kddcup99&quot;&gt;&lt;code&gt;sklearn.datasets.fetch_kddcup99&lt;/code&gt;&lt;/a&gt; will load the kddcup99 dataset; it returns a dictionary-like object with the feature matrix in the &lt;code&gt;data&lt;/code&gt; member and the target values in &lt;code&gt;target&lt;/code&gt;. The dataset will be downloaded from the web if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abea90ddece0419e822d5d73268f6b36609a98fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_lfw_pairs#sklearn.datasets.fetch_lfw_pairs&quot;&gt;&lt;code&gt;fetch_lfw_pairs&lt;/code&gt;&lt;/a&gt;([subset, data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43587b7cdf8ec51d183c0cf3b79ea83badf714e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_lfw_people#sklearn.datasets.fetch_lfw_people&quot;&gt;&lt;code&gt;fetch_lfw_people&lt;/code&gt;&lt;/a&gt;([data_home, funneled, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e275393f243433879e30b34bc1a9a72870716c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_olivetti_faces#sklearn.datasets.fetch_olivetti_faces&quot;&gt;&lt;code&gt;fetch_olivetti_faces&lt;/code&gt;&lt;/a&gt;([data_home, shuffle, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78cf2bffc2f30bc99ea79586c8e01e69ea7312f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_rcv1#sklearn.datasets.fetch_rcv1&quot;&gt;&lt;code&gt;fetch_rcv1&lt;/code&gt;&lt;/a&gt;([data_home, subset, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503ab3fb9446bb7c92c83e34572194cdb94e4853" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_rcv1#sklearn.datasets.fetch_rcv1&quot;&gt;&lt;code&gt;sklearn.datasets.fetch_rcv1&lt;/code&gt;&lt;/a&gt; will load the following version: RCV1-v2, vectors, full sets, topics multilabels:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc069ce82bdee95faaf90e1d342156219711a94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_boston#sklearn.datasets.load_boston&quot;&gt;&lt;code&gt;load_boston&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_boston#sklearn.datasets.load_boston&quot;&gt;&lt;code&gt;load_boston&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="114e7affefcdf791d57c12138eafbdf0150ed5a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_breast_cancer#sklearn.datasets.load_breast_cancer&quot;&gt;&lt;code&gt;load_breast_cancer&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_breast_cancer#sklearn.datasets.load_breast_cancer&quot;&gt;&lt;code&gt;load_breast_cancer&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="5475774b62dc3c85aeab381258c350e3e94ca006" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_diabetes#sklearn.datasets.load_diabetes&quot;&gt;&lt;code&gt;load_diabetes&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_diabetes#sklearn.datasets.load_diabetes&quot;&gt;&lt;code&gt;load_diabetes&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="6b8f57fb423ab9cf3a53e30775b5e62a7f14e631" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_digits#sklearn.datasets.load_digits&quot;&gt;&lt;code&gt;load_digits&lt;/code&gt;&lt;/a&gt;([n_class, return_X_y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee5523bb0f12898ca4d7259cb74cf38035959c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_iris#sklearn.datasets.load_iris&quot;&gt;&lt;code&gt;load_iris&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_iris#sklearn.datasets.load_iris&quot;&gt;&lt;code&gt;load_iris&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="bd3cbd55f89cd5828e8328080716625c3ae513fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_linnerud#sklearn.datasets.load_linnerud&quot;&gt;&lt;code&gt;load_linnerud&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_linnerud#sklearn.datasets.load_linnerud&quot;&gt;&lt;code&gt;load_linnerud&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="9ad6809f4ea696af856bbdf5a6883fd1b42c84cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_sample_image#sklearn.datasets.load_sample_image&quot;&gt;&lt;code&gt;load_sample_image&lt;/code&gt;&lt;/a&gt;(image_name)</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_sample_image#sklearn.datasets.load_sample_image&quot;&gt;&lt;code&gt;load_sample_image&lt;/code&gt;&lt;/a&gt;(image_name)</target>
        </trans-unit>
        <trans-unit id="224ba39853f76ab922dd6bb5895fd38941d5be84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_sample_images#sklearn.datasets.load_sample_images&quot;&gt;&lt;code&gt;load_sample_images&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_sample_images#sklearn.datasets.load_sample_images&quot;&gt;&lt;code&gt;load_sample_images&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="25078b874bb45c1dff81765e1e96e7ab2a108971" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_wine#sklearn.datasets.load_wine&quot;&gt;&lt;code&gt;load_wine&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_wine#sklearn.datasets.load_wine&quot;&gt;&lt;code&gt;load_wine&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="0834712d93badaf504282d8c6a7ff9c190eb365b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_biclusters#sklearn.datasets.make_biclusters&quot;&gt;&lt;code&gt;make_biclusters&lt;/code&gt;&lt;/a&gt;(shape, n_clusters[, noise, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c860e34e901dcdabbfd4bdf6a39a73e12f2fa9aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_checkerboard#sklearn.datasets.make_checkerboard&quot;&gt;&lt;code&gt;make_checkerboard&lt;/code&gt;&lt;/a&gt;(shape, n_clusters[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30482253eb738861904d5cb711a0cc7592be281" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_circles#sklearn.datasets.make_circles&quot;&gt;&lt;code&gt;make_circles&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../modules/generated/sklearn.datasets.make_moons#sklearn.datasets.make_moons&quot;&gt;&lt;code&gt;make_moons&lt;/code&gt;&lt;/a&gt; generate 2d binary classification datasets that are challenging to certain algorithms (e.g. centroid-based clustering or linear classification), including optional Gaussian noise. They are useful for visualisation. produces Gaussian data with a spherical decision boundary for binary classification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4172acd40132d919c3b5c2bb7bb83102e0040a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_gaussian_quantiles#sklearn.datasets.make_gaussian_quantiles&quot;&gt;&lt;code&gt;make_gaussian_quantiles&lt;/code&gt;&lt;/a&gt; divides a single Gaussian cluster into near-equal-size classes separated by concentric hyperspheres. &lt;a href=&quot;../modules/generated/sklearn.datasets.make_hastie_10_2#sklearn.datasets.make_hastie_10_2&quot;&gt;&lt;code&gt;make_hastie_10_2&lt;/code&gt;&lt;/a&gt; generates a similar binary, 10-dimensional problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0c3adf3bd4b3ef215aacc01e4771c94ee96a74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_low_rank_matrix#sklearn.datasets.make_low_rank_matrix&quot;&gt;&lt;code&gt;make_low_rank_matrix&lt;/code&gt;&lt;/a&gt;([n_samples, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ea78ce337dcd49fc746b0bacde7d25c51e2268" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_multilabel_classification#sklearn.datasets.make_multilabel_classification&quot;&gt;&lt;code&gt;make_multilabel_classification&lt;/code&gt;&lt;/a&gt; generates random samples with multiple labels, reflecting a bag of words drawn from a mixture of topics. The number of topics for each document is drawn from a Poisson distribution, and the topics themselves are drawn from a fixed random distribution. Similarly, the number of words is drawn from Poisson, with words drawn from a multinomial, where each topic defines a probability distribution over words. Simplifications with respect to true bag-of-words mixtures include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4edc48aec4ee4aefa8c5c9069cb0861d36599360" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_regression#sklearn.datasets.make_regression&quot;&gt;&lt;code&gt;make_regression&lt;/code&gt;&lt;/a&gt; produces regression targets as an optionally-sparse random linear combination of random features, with noise. Its informative features may be uncorrelated, or low rank (few features account for most of the variance).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497a36082fd17e880c172685d124ccd138fc7788" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_s_curve#sklearn.datasets.make_s_curve&quot;&gt;&lt;code&gt;make_s_curve&lt;/code&gt;&lt;/a&gt;([n_samples, noise, random_state])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94485a36545d25c9ca1aac87f99e760429b69b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_sparse_coded_signal#sklearn.datasets.make_sparse_coded_signal&quot;&gt;&lt;code&gt;make_sparse_coded_signal&lt;/code&gt;&lt;/a&gt;(n_samples, &amp;hellip;[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f20dc3ba2bb4a702eaabae9293eeb4b24e156e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_sparse_spd_matrix#sklearn.datasets.make_sparse_spd_matrix&quot;&gt;&lt;code&gt;make_sparse_spd_matrix&lt;/code&gt;&lt;/a&gt;([dim, alpha, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c8a202b42ebb032f6b8c6be6db0a98aa6d0695" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_spd_matrix#sklearn.datasets.make_spd_matrix&quot;&gt;&lt;code&gt;make_spd_matrix&lt;/code&gt;&lt;/a&gt;(n_dim[, random_state])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3508835fb056170ff26542c5032d077cc8a2b2f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_swiss_roll#sklearn.datasets.make_swiss_roll&quot;&gt;&lt;code&gt;make_swiss_roll&lt;/code&gt;&lt;/a&gt;([n_samples, noise, random_state])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f526e575e7d67dc918abd8642ba35107cf9ee255" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;classes#module-sklearn.neighbors&quot;&gt;&lt;code&gt;sklearn.neighbors&lt;/code&gt;&lt;/a&gt; provides functionality for unsupervised and supervised neighbors-based learning methods. Unsupervised nearest neighbors is the foundation of many other learning methods, notably manifold learning and spectral clustering. Supervised neighbors-based learning comes in two flavors: &lt;a href=&quot;#classification&quot;&gt;classification&lt;/a&gt; for data with discrete labels, and &lt;a href=&quot;#regression&quot;&gt;regression&lt;/a&gt; for data with continuous labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373a75690f94bd1176677d6d31b98a89d0c849f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;compose#pipeline&quot;&gt;Pipeline: chaining estimators&lt;/a&gt; describes building composite estimators whose parameter space can be searched with these tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40686b045b637e198477129079fdb16e07c0e1c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.base.clone#sklearn.base.clone&quot;&gt;&lt;code&gt;base.clone&lt;/code&gt;&lt;/a&gt;(estimator[, safe])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3fa29a7dd6280e762e75ea2b1a7a1a619cb6cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.base.is_classifier#sklearn.base.is_classifier&quot;&gt;&lt;code&gt;base.is_classifier&lt;/code&gt;&lt;/a&gt;(estimator)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.base.is_classifier#sklearn.base.is_classifier&quot;&gt;&lt;code&gt;base.is_classifier&lt;/code&gt;&lt;/a&gt;(estimator)</target>
        </trans-unit>
        <trans-unit id="a092a391ba6b76e252a7407c59d7ccb219d5534c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.base.is_regressor#sklearn.base.is_regressor&quot;&gt;&lt;code&gt;base.is_regressor&lt;/code&gt;&lt;/a&gt;(estimator)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.base.is_regressor#sklearn.base.is_regressor&quot;&gt;&lt;code&gt;base.is_regressor&lt;/code&gt;&lt;/a&gt;(estimator)</target>
        </trans-unit>
        <trans-unit id="847ee981b4d10a208202b9d6fa1407d9e925b929" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt;&lt;code&gt;CalibratedClassifierCV&lt;/code&gt;&lt;/a&gt; can also deal with classification tasks that involve more than two classes if the base estimator can do so. In this case, the classifier is calibrated first for each class separately in an one-vs-rest fashion. When predicting probabilities for unseen data, the calibrated probabilities for each class are predicted separately. As those probabilities do not necessarily sum to one, a postprocessing is performed to normalize them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b7b3a4b1dd74cc587c5aa91f91b030522c7a2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt;&lt;code&gt;calibration.CalibratedClassifierCV&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt;&lt;code&gt;calibration.CalibratedClassifierCV&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="8b99fa2c7ee3091e973f9b961c4030c4584c4a90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.calibration.calibration_curve#sklearn.calibration.calibration_curve&quot;&gt;&lt;code&gt;calibration.calibration_curve&lt;/code&gt;&lt;/a&gt;(y_true, y_prob)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1454e397a1d8adf859b2ed5288bbfa1d2a4d29c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.affinity_propagation#sklearn.cluster.affinity_propagation&quot;&gt;&lt;code&gt;cluster.affinity_propagation&lt;/code&gt;&lt;/a&gt;(S[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f9fc4205bf1caeed749d957c2bd4fc09ce3fb6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.affinitypropagation#sklearn.cluster.AffinityPropagation&quot;&gt;&lt;code&gt;AffinityPropagation&lt;/code&gt;&lt;/a&gt; creates clusters by sending messages between pairs of samples until convergence. A dataset is then described using a small number of exemplars, which are identified as those most representative of other samples. The messages sent between pairs represent the suitability for one sample to be the exemplar of the other, which is updated in response to the values from other pairs. This updating happens iteratively until convergence, at which point the final exemplars are chosen, and hence the final clustering is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd649ccc42593843d8ff80686fc9618e6abfd73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.affinitypropagation#sklearn.cluster.AffinityPropagation&quot;&gt;&lt;code&gt;cluster.AffinityPropagation&lt;/code&gt;&lt;/a&gt;([damping, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc656359e2ef712fd43ce553377adb3f05ae0bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.agglomerativeclustering#sklearn.cluster.AgglomerativeClustering&quot;&gt;&lt;code&gt;AgglomerativeClustering&lt;/code&gt;&lt;/a&gt; can also scale to large number of samples when it is used jointly with a connectivity matrix, but is computationally expensive when no connectivity constraints are added between samples: it considers at each step all the possible merges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c180c2bb2be88e81d54d55191ae632024114f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.agglomerativeclustering#sklearn.cluster.AgglomerativeClustering&quot;&gt;&lt;code&gt;AgglomerativeClustering&lt;/code&gt;&lt;/a&gt; supports Ward, single, average, and complete linkage strategies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e923a0d5f53fcfc8e41d2bce903e50c47d020319" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.agglomerativeclustering#sklearn.cluster.AgglomerativeClustering&quot;&gt;&lt;code&gt;cluster.AgglomerativeClustering&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.agglomerativeclustering#sklearn.cluster.AgglomerativeClustering&quot;&gt;&lt;code&gt;cluster.AgglomerativeClustering&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="3b41c18b1bd61ac180741124377953d36b6e6ced" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.bicluster.spectralbiclustering#sklearn.cluster.bicluster.SpectralBiclustering&quot;&gt;&lt;code&gt;SpectralBiclustering&lt;/code&gt;&lt;/a&gt;([n_clusters, method, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eecc11c78b5c1a871b7d52cea732652b1f2f0c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.bicluster.spectralcoclustering#sklearn.cluster.bicluster.SpectralCoclustering&quot;&gt;&lt;code&gt;SpectralCoclustering&lt;/code&gt;&lt;/a&gt;([n_clusters, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc147f9f9be8b65390df38d3567a3db7c6fd96f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.birch#sklearn.cluster.Birch&quot;&gt;&lt;code&gt;cluster.Birch&lt;/code&gt;&lt;/a&gt;([threshold, branching_factor, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f74ce64787054d649a669d4132c468afc473d03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.dbscan#sklearn.cluster.DBSCAN&quot;&gt;&lt;code&gt;cluster.DBSCAN&lt;/code&gt;&lt;/a&gt;([eps, min_samples, metric, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c36c7c5cc3b5aa4e8061c8a64e4d9db9c08ae9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.dbscan#sklearn.cluster.dbscan&quot;&gt;&lt;code&gt;cluster.dbscan&lt;/code&gt;&lt;/a&gt;(X[, eps, min_samples, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51914bf6c7e6b950d00373a21419a4b04d5d2a68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.estimate_bandwidth#sklearn.cluster.estimate_bandwidth&quot;&gt;&lt;code&gt;cluster.estimate_bandwidth&lt;/code&gt;&lt;/a&gt;(X[, quantile, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c50d702ba29707744e776b124a1f0611aaf3516" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.featureagglomeration#sklearn.cluster.FeatureAgglomeration&quot;&gt;&lt;code&gt;cluster.FeatureAgglomeration&lt;/code&gt;&lt;/a&gt; applies &lt;a href=&quot;clustering#hierarchical-clustering&quot;&gt;Hierarchical clustering&lt;/a&gt; to group together features that behave similarly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6119e2504cff1c4820a08317abf87569fe39d64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.featureagglomeration#sklearn.cluster.FeatureAgglomeration&quot;&gt;&lt;code&gt;cluster.FeatureAgglomeration&lt;/code&gt;&lt;/a&gt;([n_clusters, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6542e2a0450499e101f34ce5d4238820316a2b1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.k_means#sklearn.cluster.k_means&quot;&gt;&lt;code&gt;cluster.k_means&lt;/code&gt;&lt;/a&gt;(X, n_clusters[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d94e9307d84954ab56ff338ce9ecced3488ab0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.kmeans#sklearn.cluster.KMeans&quot;&gt;&lt;code&gt;cluster.KMeans&lt;/code&gt;&lt;/a&gt;([n_clusters, init, n_init, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971be528aef82b23ef655e30761b4d844d26e5a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.mean_shift#sklearn.cluster.mean_shift&quot;&gt;&lt;code&gt;cluster.mean_shift&lt;/code&gt;&lt;/a&gt;(X[, bandwidth, seeds, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e69cb0b59dffb223cb6b813850674ca354e16f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.meanshift#sklearn.cluster.MeanShift&quot;&gt;&lt;code&gt;MeanShift&lt;/code&gt;&lt;/a&gt; clustering aims to discover &lt;em&gt;blobs&lt;/em&gt; in a smooth density of samples. It is a centroid based algorithm, which works by updating candidates for centroids to be the mean of the points within a given region. These candidates are then filtered in a post-processing stage to eliminate near-duplicates to form the final set of centroids.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319ecff37d6f928eca5970e3cc32b3268c49849d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.meanshift#sklearn.cluster.MeanShift&quot;&gt;&lt;code&gt;cluster.MeanShift&lt;/code&gt;&lt;/a&gt;([bandwidth, seeds, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3e7569496c39f993ee78b02c76d70311ecaad0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.minibatchkmeans#sklearn.cluster.MiniBatchKMeans&quot;&gt;&lt;code&gt;MiniBatchKMeans&lt;/code&gt;&lt;/a&gt; converges faster than &lt;a href=&quot;generated/sklearn.cluster.kmeans#sklearn.cluster.KMeans&quot;&gt;&lt;code&gt;KMeans&lt;/code&gt;&lt;/a&gt;, but the quality of the results is reduced. In practice this difference in quality can be quite small, as shown in the example and cited reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0283c74111ba2a27b8497c875d77cccc3a19aaa4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.minibatchkmeans#sklearn.cluster.MiniBatchKMeans&quot;&gt;&lt;code&gt;cluster.MiniBatchKMeans&lt;/code&gt;&lt;/a&gt;([n_clusters, init, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118211338211806b2e2229ab17fd79c45195e168" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.spectral_clustering#sklearn.cluster.spectral_clustering&quot;&gt;&lt;code&gt;cluster.spectral_clustering&lt;/code&gt;&lt;/a&gt;(affinity[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b976565f5f09c252f62f05d7ac51e340cb62fadf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.spectralclustering#sklearn.cluster.SpectralClustering&quot;&gt;&lt;code&gt;SpectralClustering&lt;/code&gt;&lt;/a&gt; does a low-dimension embedding of the affinity matrix between samples, followed by a KMeans in the low dimensional space. It is especially efficient if the affinity matrix is sparse and the &lt;a href=&quot;https://github.com/pyamg/pyamg&quot;&gt;pyamg&lt;/a&gt; module is installed. SpectralClustering requires the number of clusters to be specified. It works well for a small number of clusters but is not advised when using many clusters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d671ae70c6e355927e9bcd1ae32972c5d06461" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.spectralclustering#sklearn.cluster.SpectralClustering&quot;&gt;&lt;code&gt;cluster.SpectralClustering&lt;/code&gt;&lt;/a&gt;([n_clusters, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e817e7d25bf004469eb7f05074dcfae5a481b421" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.ward_tree#sklearn.cluster.ward_tree&quot;&gt;&lt;code&gt;cluster.ward_tree&lt;/code&gt;&lt;/a&gt;(X[, connectivity, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096575a0f141f71dde39613816f3ecddb55bf684" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.compose.columntransformer#sklearn.compose.ColumnTransformer&quot;&gt;&lt;code&gt;compose.ColumnTransformer&lt;/code&gt;&lt;/a&gt;(transformers[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0648ff2b2824be8791be640933174004b4f10e84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.compose.make_column_transformer#sklearn.compose.make_column_transformer&quot;&gt;&lt;code&gt;compose.make_column_transformer&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.compose.make_column_transformer#sklearn.compose.make_column_transformer&quot;&gt;&lt;code&gt;compose.make_column_transformer&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="d4bf277c8a30bfb2c96321e65066f2ebe9272683" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.compose.transformedtargetregressor#sklearn.compose.TransformedTargetRegressor&quot;&gt;&lt;code&gt;compose.TransformedTargetRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.compose.transformedtargetregressor#sklearn.compose.TransformedTargetRegressor&quot;&gt;&lt;code&gt;compose.TransformedTargetRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="4aed4220e4b42c3ed2d4bd917a288d0319a7ba44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.config_context#sklearn.config_context&quot;&gt;&lt;code&gt;config_context&lt;/code&gt;&lt;/a&gt;(**new_config)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.config_context#sklearn.config_context&quot;&gt;&lt;code&gt;config_context&lt;/code&gt;&lt;/a&gt;(**new_config)</target>
        </trans-unit>
        <trans-unit id="00df1503d28926253ce5f11c8391ebc0bc277a86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.ellipticenvelope#sklearn.covariance.EllipticEnvelope&quot;&gt;&lt;code&gt;covariance.EllipticEnvelope&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.ellipticenvelope#sklearn.covariance.EllipticEnvelope&quot;&gt;&lt;code&gt;covariance.EllipticEnvelope&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="4e51d82fb6a39c7387507567406805e37ab28de0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.empirical_covariance#sklearn.covariance.empirical_covariance&quot;&gt;&lt;code&gt;covariance.empirical_covariance&lt;/code&gt;&lt;/a&gt;(X[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bffe4464c32b2598543950605e726dd21383baef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.empiricalcovariance#sklearn.covariance.EmpiricalCovariance&quot;&gt;&lt;code&gt;covariance.EmpiricalCovariance&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.empiricalcovariance#sklearn.covariance.EmpiricalCovariance&quot;&gt;&lt;code&gt;covariance.EmpiricalCovariance&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0a61c16d7173244f321ed792c90a623f18effb4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graph_lasso#sklearn.covariance.graph_lasso&quot;&gt;&lt;code&gt;covariance.graph_lasso&lt;/code&gt;&lt;/a&gt;(emp_cov, alpha[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e347689901e4a41ae6912e00dfffd8e9ab4b89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graphical_lasso#sklearn.covariance.graphical_lasso&quot;&gt;&lt;code&gt;covariance.graphical_lasso&lt;/code&gt;&lt;/a&gt;(emp_cov, alpha[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c278cb012eda13c7c6937bff77a2ef7959eba33a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graphicallasso#sklearn.covariance.GraphicalLasso&quot;&gt;&lt;code&gt;covariance.GraphicalLasso&lt;/code&gt;&lt;/a&gt;([alpha, mode, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfd18b1f59533f8e5de3e040fb6794bf1cd00d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graphicallassocv#sklearn.covariance.GraphicalLassoCV&quot;&gt;&lt;code&gt;covariance.GraphicalLassoCV&lt;/code&gt;&lt;/a&gt;([alphas, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b7e66cbeaa9014a0120b7d004eb9dba492015e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graphlasso#sklearn.covariance.GraphLasso&quot;&gt;&lt;code&gt;covariance.GraphLasso&lt;/code&gt;&lt;/a&gt;(*args, **kwargs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c0ee3b069a9818bbd2168463c28ca4589a56f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graphlassocv#sklearn.covariance.GraphLassoCV&quot;&gt;&lt;code&gt;covariance.GraphLassoCV&lt;/code&gt;&lt;/a&gt;(*args, **kwargs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac790647f7ea5751f1ee3e35690c92d04c87a5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.ledoit_wolf#sklearn.covariance.ledoit_wolf&quot;&gt;&lt;code&gt;covariance.ledoit_wolf&lt;/code&gt;&lt;/a&gt;(X[, assume_centered, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfd336335e7c128e08d42fda8342ce13642fb2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.ledoitwolf#sklearn.covariance.LedoitWolf&quot;&gt;&lt;code&gt;covariance.LedoitWolf&lt;/code&gt;&lt;/a&gt;([store_precision, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e50236ea9e91a91915bcf880b7575b572c19ca9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.mincovdet#sklearn.covariance.MinCovDet&quot;&gt;&lt;code&gt;covariance.MinCovDet&lt;/code&gt;&lt;/a&gt;([store_precision, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778d71808300afebbe7905fb9e2c3e1f024fecb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.oas#sklearn.covariance.OAS&quot;&gt;&lt;code&gt;covariance.OAS&lt;/code&gt;&lt;/a&gt;([store_precision, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8367ebb53b65c33634c4ec1461a98c3024651db6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.oas#sklearn.covariance.oas&quot;&gt;&lt;code&gt;covariance.oas&lt;/code&gt;&lt;/a&gt;(X[, assume_centered])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c5dc944b25ce84eb46ec49143be4e7b992cd18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.shrunk_covariance#sklearn.covariance.shrunk_covariance&quot;&gt;&lt;code&gt;covariance.shrunk_covariance&lt;/code&gt;&lt;/a&gt;(emp_cov[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18617e558345e96bc6cda6646dc16f5bbd95636" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.shrunkcovariance#sklearn.covariance.ShrunkCovariance&quot;&gt;&lt;code&gt;covariance.ShrunkCovariance&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.shrunkcovariance#sklearn.covariance.ShrunkCovariance&quot;&gt;&lt;code&gt;covariance.ShrunkCovariance&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="a9496909d61a774d9fd6d5aa247b28e7c9343e90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cross_decomposition.cca#sklearn.cross_decomposition.CCA&quot;&gt;&lt;code&gt;cross_decomposition.CCA&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1569a76a4c1dfa292545a391d0b79eacf2b8c215" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cross_decomposition.plscanonical#sklearn.cross_decomposition.PLSCanonical&quot;&gt;&lt;code&gt;cross_decomposition.PLSCanonical&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cross_decomposition.plscanonical#sklearn.cross_decomposition.PLSCanonical&quot;&gt;&lt;code&gt;cross_decomposition.PLSCanonical&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="4a3c618e1fd201f96e0f07d252adf3f0d1b8f480" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cross_decomposition.plsregression#sklearn.cross_decomposition.PLSRegression&quot;&gt;&lt;code&gt;cross_decomposition.PLSRegression&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cross_decomposition.plsregression#sklearn.cross_decomposition.PLSRegression&quot;&gt;&lt;code&gt;cross_decomposition.PLSRegression&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e70394d8bdd125600bd0cd739da22c36cf2fb802" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cross_decomposition.plssvd#sklearn.cross_decomposition.PLSSVD&quot;&gt;&lt;code&gt;cross_decomposition.PLSSVD&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d4832ce114e3199c7d3fe8ff0a7822c241ad9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.clear_data_home#sklearn.datasets.clear_data_home&quot;&gt;&lt;code&gt;datasets.clear_data_home&lt;/code&gt;&lt;/a&gt;([data_home])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.clear_data_home#sklearn.datasets.clear_data_home&quot;&gt;&lt;code&gt;datasets.clear_data_home&lt;/code&gt;&lt;/a&gt;([data_home])</target>
        </trans-unit>
        <trans-unit id="921af65675cdf15a546fa8856e235a9b132eaa08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.dump_svmlight_file#sklearn.datasets.dump_svmlight_file&quot;&gt;&lt;code&gt;datasets.dump_svmlight_file&lt;/code&gt;&lt;/a&gt;(X, y, f[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65478566490dc47a2145e3a48a4a1ccd33f2b635" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_20newsgroups#sklearn.datasets.fetch_20newsgroups&quot;&gt;&lt;code&gt;datasets.fetch_20newsgroups&lt;/code&gt;&lt;/a&gt;([data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21877412be208e763d404a09ac853c173fe978ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_20newsgroups_vectorized#sklearn.datasets.fetch_20newsgroups_vectorized&quot;&gt;&lt;code&gt;datasets.fetch_20newsgroups_vectorized&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_20newsgroups_vectorized#sklearn.datasets.fetch_20newsgroups_vectorized&quot;&gt;&lt;code&gt;datasets.fetch_20newsgroups_vectorized&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="64d60ae467543ca83d24b19fb13f982ff98760ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_california_housing#sklearn.datasets.fetch_california_housing&quot;&gt;&lt;code&gt;datasets.fetch_california_housing&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_california_housing#sklearn.datasets.fetch_california_housing&quot;&gt;&lt;code&gt;datasets.fetch_california_housing&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="cb9cb8f573c667488959ecbc1c4b9afa78e77950" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_covtype#sklearn.datasets.fetch_covtype&quot;&gt;&lt;code&gt;datasets.fetch_covtype&lt;/code&gt;&lt;/a&gt;([data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c310f9ba89333cbb1505650f03e37fc1f18421" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_kddcup99#sklearn.datasets.fetch_kddcup99&quot;&gt;&lt;code&gt;datasets.fetch_kddcup99&lt;/code&gt;&lt;/a&gt;([subset, data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97364c2f96b1e8c0f27303d3572837a7eb2f59b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_lfw_pairs#sklearn.datasets.fetch_lfw_pairs&quot;&gt;&lt;code&gt;datasets.fetch_lfw_pairs&lt;/code&gt;&lt;/a&gt;([subset, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770073e22334f1a88609409f8ba0799598a3a61a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_lfw_people#sklearn.datasets.fetch_lfw_people&quot;&gt;&lt;code&gt;datasets.fetch_lfw_people&lt;/code&gt;&lt;/a&gt;([data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b922020a2a8822cb8426ed59f95785c76e01bd13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_mldata#sklearn.datasets.fetch_mldata&quot;&gt;&lt;code&gt;datasets.fetch_mldata&lt;/code&gt;&lt;/a&gt;(dataname[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9384ded44c0c46b5ba4947af230975d25830ad5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_olivetti_faces#sklearn.datasets.fetch_olivetti_faces&quot;&gt;&lt;code&gt;datasets.fetch_olivetti_faces&lt;/code&gt;&lt;/a&gt;([data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263ea682af63c9985dbf2a57b593291a27a643ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_openml#sklearn.datasets.fetch_openml&quot;&gt;&lt;code&gt;datasets.fetch_openml&lt;/code&gt;&lt;/a&gt;([name, version, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c178c9ab3e427095f5c8106931c5ca73a09118" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_rcv1#sklearn.datasets.fetch_rcv1&quot;&gt;&lt;code&gt;datasets.fetch_rcv1&lt;/code&gt;&lt;/a&gt;([data_home, subset, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5277328e627134a7f6776c7b59466f115caab182" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_species_distributions#sklearn.datasets.fetch_species_distributions&quot;&gt;&lt;code&gt;datasets.fetch_species_distributions&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_species_distributions#sklearn.datasets.fetch_species_distributions&quot;&gt;&lt;code&gt;datasets.fetch_species_distributions&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="18d8577ff27f8c99666cd13dab92c8c26a6458a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.get_data_home#sklearn.datasets.get_data_home&quot;&gt;&lt;code&gt;datasets.get_data_home&lt;/code&gt;&lt;/a&gt;([data_home])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.get_data_home#sklearn.datasets.get_data_home&quot;&gt;&lt;code&gt;datasets.get_data_home&lt;/code&gt;&lt;/a&gt;([data_home])</target>
        </trans-unit>
        <trans-unit id="b107fda677d1acc9bf95a83b0f33be296bec6dc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_boston#sklearn.datasets.load_boston&quot;&gt;&lt;code&gt;datasets.load_boston&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_boston#sklearn.datasets.load_boston&quot;&gt;&lt;code&gt;datasets.load_boston&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="33f488d33ee8da669d0ae9fb394f4e08f422c5af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_breast_cancer#sklearn.datasets.load_breast_cancer&quot;&gt;&lt;code&gt;datasets.load_breast_cancer&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_breast_cancer#sklearn.datasets.load_breast_cancer&quot;&gt;&lt;code&gt;datasets.load_breast_cancer&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="fed9668198374a859f950024783ccc5f0f9ccede" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_diabetes#sklearn.datasets.load_diabetes&quot;&gt;&lt;code&gt;datasets.load_diabetes&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_diabetes#sklearn.datasets.load_diabetes&quot;&gt;&lt;code&gt;datasets.load_diabetes&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="eec480f3bdf9cde1f42496d15748048c9383a7d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_digits#sklearn.datasets.load_digits&quot;&gt;&lt;code&gt;datasets.load_digits&lt;/code&gt;&lt;/a&gt;([n_class, return_X_y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3183dc22d35a732df9072f7ccc717ed03dc649" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_files#sklearn.datasets.load_files&quot;&gt;&lt;code&gt;datasets.load_files&lt;/code&gt;&lt;/a&gt;(container_path[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e4a25343b011892c53c76f421e02103a3323fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_iris#sklearn.datasets.load_iris&quot;&gt;&lt;code&gt;datasets.load_iris&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_iris#sklearn.datasets.load_iris&quot;&gt;&lt;code&gt;datasets.load_iris&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="f34fe08c89a7e25b54f668762979e4bf9cabbe20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_linnerud#sklearn.datasets.load_linnerud&quot;&gt;&lt;code&gt;datasets.load_linnerud&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_linnerud#sklearn.datasets.load_linnerud&quot;&gt;&lt;code&gt;datasets.load_linnerud&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="652598dc1c6c0db87dcea42be5e3c6d28f7d3270" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_mlcomp#sklearn.datasets.load_mlcomp&quot;&gt;&lt;code&gt;datasets.load_mlcomp&lt;/code&gt;&lt;/a&gt;(name_or_id[, set_, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d606304c84c4163295ac7455558baac5ccae34" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_sample_image#sklearn.datasets.load_sample_image&quot;&gt;&lt;code&gt;datasets.load_sample_image&lt;/code&gt;&lt;/a&gt;(image_name)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_sample_image#sklearn.datasets.load_sample_image&quot;&gt;&lt;code&gt;datasets.load_sample_image&lt;/code&gt;&lt;/a&gt;(image_name)</target>
        </trans-unit>
        <trans-unit id="9faa7d0b7dc3b4fb46ad6a06ef936b589057c8e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_sample_images#sklearn.datasets.load_sample_images&quot;&gt;&lt;code&gt;datasets.load_sample_images&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_sample_images#sklearn.datasets.load_sample_images&quot;&gt;&lt;code&gt;datasets.load_sample_images&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="0115827e9a8f73b7ceaa75daf74e9b7449a55db4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_svmlight_file#sklearn.datasets.load_svmlight_file&quot;&gt;&lt;code&gt;datasets.load_svmlight_file&lt;/code&gt;&lt;/a&gt;(f[, n_features, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406ad6345331d52f40fbd9283b553fa1ce2aef64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_svmlight_files#sklearn.datasets.load_svmlight_files&quot;&gt;&lt;code&gt;datasets.load_svmlight_files&lt;/code&gt;&lt;/a&gt;(files[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b7f2eebfd726ed333e9c28361042f0ed71b8f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_wine#sklearn.datasets.load_wine&quot;&gt;&lt;code&gt;datasets.load_wine&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_wine#sklearn.datasets.load_wine&quot;&gt;&lt;code&gt;datasets.load_wine&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="2f9709494d91cd998f4764746a72c7bbe376f5c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_biclusters#sklearn.datasets.make_biclusters&quot;&gt;&lt;code&gt;datasets.make_biclusters&lt;/code&gt;&lt;/a&gt;(shape, n_clusters)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf85ec98b171f3d0e2644d2b2a3c9e4725029c17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_blobs#sklearn.datasets.make_blobs&quot;&gt;&lt;code&gt;datasets.make_blobs&lt;/code&gt;&lt;/a&gt;([n_samples, n_features, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211c74bfe11253011e727d89c7f0c0da35f86537" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_checkerboard#sklearn.datasets.make_checkerboard&quot;&gt;&lt;code&gt;datasets.make_checkerboard&lt;/code&gt;&lt;/a&gt;(shape, n_clusters)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e2cad03353f800bd77a9d3b0bc13f9ead36398f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_circles#sklearn.datasets.make_circles&quot;&gt;&lt;code&gt;datasets.make_circles&lt;/code&gt;&lt;/a&gt;([n_samples, shuffle, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70bee3892f94a181a84b4f53bf3730ab2c70b890" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_classification#sklearn.datasets.make_classification&quot;&gt;&lt;code&gt;datasets.make_classification&lt;/code&gt;&lt;/a&gt;([n_samples, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb6498162fcd4904b00b74436fe62165d37fd60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_friedman1#sklearn.datasets.make_friedman1&quot;&gt;&lt;code&gt;datasets.make_friedman1&lt;/code&gt;&lt;/a&gt;([n_samples, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead982c9efa3eb84f84413098686df0c62d6ced3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_friedman2#sklearn.datasets.make_friedman2&quot;&gt;&lt;code&gt;datasets.make_friedman2&lt;/code&gt;&lt;/a&gt;([n_samples, noise, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2067cdc0697632a2e4dedac4f38ba8320018301a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_friedman3#sklearn.datasets.make_friedman3&quot;&gt;&lt;code&gt;datasets.make_friedman3&lt;/code&gt;&lt;/a&gt;([n_samples, noise, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee171e7d4a72e9733fb29bd347a162d3ece8b27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_gaussian_quantiles#sklearn.datasets.make_gaussian_quantiles&quot;&gt;&lt;code&gt;datasets.make_gaussian_quantiles&lt;/code&gt;&lt;/a&gt;([mean, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a0f087adb4c6d1b83727115b3521d98a198828" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_hastie_10_2#sklearn.datasets.make_hastie_10_2&quot;&gt;&lt;code&gt;datasets.make_hastie_10_2&lt;/code&gt;&lt;/a&gt;([n_samples, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f969e5f5f2a05f6145004039a256ee3d233f904" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_low_rank_matrix#sklearn.datasets.make_low_rank_matrix&quot;&gt;&lt;code&gt;datasets.make_low_rank_matrix&lt;/code&gt;&lt;/a&gt;([n_samples, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="985925136f65e7fc7c40bef1d880c24dbe2ae298" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_moons#sklearn.datasets.make_moons&quot;&gt;&lt;code&gt;datasets.make_moons&lt;/code&gt;&lt;/a&gt;([n_samples, shuffle, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa49dede815ade63674aca5d280514728c5e0a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_multilabel_classification#sklearn.datasets.make_multilabel_classification&quot;&gt;&lt;code&gt;datasets.make_multilabel_classification&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_multilabel_classification#sklearn.datasets.make_multilabel_classification&quot;&gt;&lt;code&gt;datasets.make_multilabel_classification&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0562a9e71e973cd426769084db009622daaf956a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_regression#sklearn.datasets.make_regression&quot;&gt;&lt;code&gt;datasets.make_regression&lt;/code&gt;&lt;/a&gt;([n_samples, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ec6b2c034582bae9622d06ce42f5c8b0c15b8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_s_curve#sklearn.datasets.make_s_curve&quot;&gt;&lt;code&gt;datasets.make_s_curve&lt;/code&gt;&lt;/a&gt;([n_samples, noise, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05b26e420d8fedd519f80534e5450850abb35b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_sparse_coded_signal#sklearn.datasets.make_sparse_coded_signal&quot;&gt;&lt;code&gt;datasets.make_sparse_coded_signal&lt;/code&gt;&lt;/a&gt;(n_samples, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c40a4e55da5ea5b60e6ed21a93220fcef602a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_sparse_spd_matrix#sklearn.datasets.make_sparse_spd_matrix&quot;&gt;&lt;code&gt;datasets.make_sparse_spd_matrix&lt;/code&gt;&lt;/a&gt;([dim, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b808d3b9761c867874a47677ea5ab2c4538af6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_sparse_uncorrelated#sklearn.datasets.make_sparse_uncorrelated&quot;&gt;&lt;code&gt;datasets.make_sparse_uncorrelated&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_sparse_uncorrelated#sklearn.datasets.make_sparse_uncorrelated&quot;&gt;&lt;code&gt;datasets.make_sparse_uncorrelated&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="84d28a1ac44f356d58d9f876ba3eb0206408bac0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_spd_matrix#sklearn.datasets.make_spd_matrix&quot;&gt;&lt;code&gt;datasets.make_spd_matrix&lt;/code&gt;&lt;/a&gt;(n_dim[, random_state])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb3197331c002949b36f41ef22b0b729d9522058" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_swiss_roll#sklearn.datasets.make_swiss_roll&quot;&gt;&lt;code&gt;datasets.make_swiss_roll&lt;/code&gt;&lt;/a&gt;([n_samples, noise, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec837732d011d88101cbf5a7698429b3c1e0d9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.mldata_filename#sklearn.datasets.mldata_filename&quot;&gt;&lt;code&gt;datasets.mldata_filename&lt;/code&gt;&lt;/a&gt;(dataname)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.mldata_filename#sklearn.datasets.mldata_filename&quot;&gt;&lt;code&gt;datasets.mldata_filename&lt;/code&gt;&lt;/a&gt;(dataname)</target>
        </trans-unit>
        <trans-unit id="a812c809afea22d8fc58f33e0efb64f78f545418" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.dict_learning#sklearn.decomposition.dict_learning&quot;&gt;&lt;code&gt;decomposition.dict_learning&lt;/code&gt;&lt;/a&gt;(X, n_components, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be9ade43ea6b59fdfb34c8d1a92b5451817fd29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.dict_learning_online#sklearn.decomposition.dict_learning_online&quot;&gt;&lt;code&gt;decomposition.dict_learning_online&lt;/code&gt;&lt;/a&gt;(X[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c27a97e10196e776caa1235bcd48381d675fe9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.dictionarylearning#sklearn.decomposition.DictionaryLearning&quot;&gt;&lt;code&gt;decomposition.DictionaryLearning&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.dictionarylearning#sklearn.decomposition.DictionaryLearning&quot;&gt;&lt;code&gt;decomposition.DictionaryLearning&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e57432ca8ff235deb860474d9f59541f538abd4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.factoranalysis#sklearn.decomposition.FactorAnalysis&quot;&gt;&lt;code&gt;decomposition.FactorAnalysis&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89fdb56c5d3c8ab7d274c759eb31a29526a04761" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.fastica#sklearn.decomposition.FastICA&quot;&gt;&lt;code&gt;decomposition.FastICA&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="708bebad5510ebcfc6b329957c8444785d4dca29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.fastica#sklearn.decomposition.fastica&quot;&gt;&lt;code&gt;decomposition.fastica&lt;/code&gt;&lt;/a&gt;(X[, n_components, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0fd18248e4090019765a49490a5206fc8fb7d52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.incrementalpca#sklearn.decomposition.IncrementalPCA&quot;&gt;&lt;code&gt;IncrementalPCA&lt;/code&gt;&lt;/a&gt; only stores estimates of component and noise variances, in order update &lt;code&gt;explained_variance_ratio_&lt;/code&gt; incrementally. This is why memory usage depends on the number of samples per batch, rather than the number of samples to be processed in the dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1cfed6c7e670c560a14821f785f633f24977cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.incrementalpca#sklearn.decomposition.IncrementalPCA&quot;&gt;&lt;code&gt;decomposition.IncrementalPCA&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc69f4fdb72950073daa1c077872bb083e369489" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.kernelpca#sklearn.decomposition.KernelPCA&quot;&gt;&lt;code&gt;KernelPCA&lt;/code&gt;&lt;/a&gt; is an extension of PCA which achieves non-linear dimensionality reduction through the use of kernels (see &lt;a href=&quot;metrics#metrics&quot;&gt;Pairwise metrics, Affinities and Kernels&lt;/a&gt;). It has many applications including denoising, compression and structured prediction (kernel dependency estimation). &lt;a href=&quot;generated/sklearn.decomposition.kernelpca#sklearn.decomposition.KernelPCA&quot;&gt;&lt;code&gt;KernelPCA&lt;/code&gt;&lt;/a&gt; supports both &lt;code&gt;transform&lt;/code&gt; and &lt;code&gt;inverse_transform&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060b452a77047e8520f36a02661fdca980722942" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.kernelpca#sklearn.decomposition.KernelPCA&quot;&gt;&lt;code&gt;decomposition.KernelPCA&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02b142b6de2044a18790219e6d4465348b2d2e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.latentdirichletallocation#sklearn.decomposition.LatentDirichletAllocation&quot;&gt;&lt;code&gt;LatentDirichletAllocation&lt;/code&gt;&lt;/a&gt; also implements &lt;code&gt;partial_fit&lt;/code&gt; method. This is used when data can be fetched sequentially.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df335eec147a3e2f594ac269626ffcc0f8b6c9f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.latentdirichletallocation#sklearn.decomposition.LatentDirichletAllocation&quot;&gt;&lt;code&gt;LatentDirichletAllocation&lt;/code&gt;&lt;/a&gt; implements online variational Bayes algorithm and supports both online and batch update method. While batch method updates variational variables after each full pass through the data, online method updates variational variables from mini-batch data points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5154be2f3f9c6c44355a9117558d026d0e25c4a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.latentdirichletallocation#sklearn.decomposition.LatentDirichletAllocation&quot;&gt;&lt;code&gt;decomposition.LatentDirichletAllocation&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.latentdirichletallocation#sklearn.decomposition.LatentDirichletAllocation&quot;&gt;&lt;code&gt;decomposition.LatentDirichletAllocation&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="42ca6aa072ad1c3f8e5f3803e56f82e76b95fb55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.minibatchdictionarylearning#sklearn.decomposition.MiniBatchDictionaryLearning&quot;&gt;&lt;code&gt;MiniBatchDictionaryLearning&lt;/code&gt;&lt;/a&gt; implements a faster, but less accurate version of the dictionary learning algorithm that is better suited for large datasets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b8edd5885663a6750603a5607907b53f396a79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.minibatchdictionarylearning#sklearn.decomposition.MiniBatchDictionaryLearning&quot;&gt;&lt;code&gt;decomposition.MiniBatchDictionaryLearning&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.minibatchdictionarylearning#sklearn.decomposition.MiniBatchDictionaryLearning&quot;&gt;&lt;code&gt;decomposition.MiniBatchDictionaryLearning&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="6daead0e12971443542eba8ba091fed2d6f4e56f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.minibatchsparsepca#sklearn.decomposition.MiniBatchSparsePCA&quot;&gt;&lt;code&gt;decomposition.MiniBatchSparsePCA&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.minibatchsparsepca#sklearn.decomposition.MiniBatchSparsePCA&quot;&gt;&lt;code&gt;decomposition.MiniBatchSparsePCA&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b44e0ec3380a1234a43390f5148b42951542558a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt; can also be initialized with correctly scaled random non-negative matrices by setting &lt;code&gt;init=&quot;random&quot;&lt;/code&gt;. An integer seed or a &lt;code&gt;RandomState&lt;/code&gt; can also be passed to &lt;code&gt;random_state&lt;/code&gt; to control reproducibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a2eac41caca70f78264e445fd358031043da4b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt; implements two solvers, using Coordinate Descent (&amp;lsquo;cd&amp;rsquo;) &lt;a href=&quot;#id14&quot; id=&quot;id9&quot;&gt;[5]&lt;/a&gt;, and Multiplicative Update (&amp;lsquo;mu&amp;rsquo;) &lt;a href=&quot;#id15&quot; id=&quot;id10&quot;&gt;[6]&lt;/a&gt;. The &amp;lsquo;mu&amp;rsquo; solver can optimize every beta-divergence, including of course the Frobenius norm (\(\beta=2\)), the (generalized) Kullback-Leibler divergence (\(\beta=1\)) and the Itakura-Saito divergence (\(\beta=0\)). Note that for \(\beta \in (1; 2)\), the &amp;lsquo;mu&amp;rsquo; solver is significantly faster than for other values of \(\beta\). Note also that with a negative (or 0, i.e. &amp;lsquo;itakura-saito&amp;rsquo;) \(\beta\), the input matrix cannot contain zero values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e6b4cbb7054f0d89862ee0c8059d8402bd2761" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt; regularizes both W and H. The public function &lt;code&gt;non_negative_factorization&lt;/code&gt; allows a finer control through the &lt;code&gt;regularization&lt;/code&gt; attribute, and may regularize only W, only H, or both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a81f1e169716dc98f9e4004fb1420aecb4816b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;#id11&quot; id=&quot;id5&quot;&gt;[1]&lt;/a&gt; is an alternative approach to decomposition that assumes that the data and the components are non-negative. &lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt; can be plugged in instead of &lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;PCA&lt;/code&gt;&lt;/a&gt; or its variants, in the cases where the data matrix does not contain negative values. It finds a decomposition of samples \(X\) into two matrices \(W\) and \(H\) of non-negative elements, by optimizing the distance \(d\) between \(X\) and the matrix product \(WH\). The most widely used distance function is the squared Frobenius norm, which is an obvious extension of the Euclidean norm to matrices:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cbae39e490f6cdaa6503a3909b02cf72fa29e12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;decomposition.NMF&lt;/code&gt;&lt;/a&gt;([n_components, init, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4542c2753c4b7005d0f16896f18d83e22721661a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;decomposition.PCA&lt;/code&gt;&lt;/a&gt; looks for a combination of features that capture well the variance of the original features. See &lt;a href=&quot;decomposition#decompositions&quot;&gt;Decomposing signals in components (matrix factorization problems)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ff87d58deba7d232d1a035d3623b38a53db1e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;decomposition.PCA&lt;/code&gt;&lt;/a&gt;([n_components, copy, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e06fd2df13ff51efd3e00b91a2c8a2ed25d85b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.sparse_encode#sklearn.decomposition.sparse_encode&quot;&gt;&lt;code&gt;decomposition.sparse_encode&lt;/code&gt;&lt;/a&gt;(X, dictionary[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4900c4f7b4a921ee0574be2a1923586617b1cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.sparsecoder#sklearn.decomposition.SparseCoder&quot;&gt;&lt;code&gt;decomposition.SparseCoder&lt;/code&gt;&lt;/a&gt;(dictionary[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b142b7e076ab502ceaed3f20c836f800a6f7f32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.sparsepca#sklearn.decomposition.SparsePCA&quot;&gt;&lt;code&gt;SparsePCA&lt;/code&gt;&lt;/a&gt; is a variant of PCA, with the goal of extracting the set of sparse components that best reconstruct the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1372bb96a5791b626dc2680095893e3f826d0c2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.sparsepca#sklearn.decomposition.SparsePCA&quot;&gt;&lt;code&gt;decomposition.SparsePCA&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef66c9fef15448e6d22ca354a6caa20721a0e489" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt;&lt;code&gt;TruncatedSVD&lt;/code&gt;&lt;/a&gt; implements a variant of singular value decomposition (SVD) that only computes the \(k\) largest singular values, where \(k\) is a user-specified parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a8b3ac8fbeff90fb497d72e9e50ecae0bc6bdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt;&lt;code&gt;TruncatedSVD&lt;/code&gt;&lt;/a&gt; is very similar to &lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;PCA&lt;/code&gt;&lt;/a&gt;, but differs in that it works on sample matrices \(X\) directly instead of their covariance matrices. When the columnwise (per-feature) means of \(X\) are subtracted from the feature values, truncated SVD on the resulting matrix is equivalent to PCA. In practical terms, this means that the &lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt;&lt;code&gt;TruncatedSVD&lt;/code&gt;&lt;/a&gt; transformer accepts &lt;code&gt;scipy.sparse&lt;/code&gt; matrices without the need to densify them, as densifying may fill up memory even for medium-sized document collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076a7222294c7a32114d77a711ae0bbe2cd5b125" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt;&lt;code&gt;decomposition.TruncatedSVD&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcd71cf475fe554229b8de9346d3227498e3580" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt; can be used to perform supervised dimensionality reduction, by projecting the input data to a linear subspace consisting of the directions which maximize the separation between classes (in a precise sense discussed in the mathematics section below). The dimension of the output is necessarily less than the number of classes, so this is, in general, a rather strong dimensionality reduction, and only makes sense in a multiclass setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ad3b1ba031d7faaa2d40419354e1bd00f8b1b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="55dc76ca3044e92c1f0a818b4ef781332a2ce07a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.discriminant_analysis.quadraticdiscriminantanalysis#sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.QuadraticDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.discriminant_analysis.quadraticdiscriminantanalysis#sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.QuadraticDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="023b98a9e14e40a63c85b5fdc9a204506623f507" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.dummy.dummyclassifier#sklearn.dummy.DummyClassifier&quot;&gt;&lt;code&gt;dummy.DummyClassifier&lt;/code&gt;&lt;/a&gt;([strategy, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d547ddcd36f9bd9a3f60c4035b99ffcb5ff12290" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.dummy.dummyregressor#sklearn.dummy.DummyRegressor&quot;&gt;&lt;code&gt;DummyRegressor&lt;/code&gt;&lt;/a&gt; also implements four simple rules of thumb for regression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6226ae362dfae9634bfc6cf33c89068d0fc9af2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.dummy.dummyregressor#sklearn.dummy.DummyRegressor&quot;&gt;&lt;code&gt;dummy.DummyRegressor&lt;/code&gt;&lt;/a&gt;([strategy, constant, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c1e2113f637cb8a643843dafae489d7dbc9230" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.adaboostclassifier#sklearn.ensemble.AdaBoostClassifier&quot;&gt;&lt;code&gt;ensemble.AdaBoostClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.adaboostclassifier#sklearn.ensemble.AdaBoostClassifier&quot;&gt;&lt;code&gt;ensemble.AdaBoostClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b8d637143b06af3f9df695d14f47bc3eeac2df01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.adaboostregressor#sklearn.ensemble.AdaBoostRegressor&quot;&gt;&lt;code&gt;ensemble.AdaBoostRegressor&lt;/code&gt;&lt;/a&gt;([base_estimator, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6df8a2a146f833477378aea6f6629fc96e513e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.baggingclassifier#sklearn.ensemble.BaggingClassifier&quot;&gt;&lt;code&gt;ensemble.BaggingClassifier&lt;/code&gt;&lt;/a&gt;([base_estimator, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7431316440cad4fa7fd79c2adfd1181c3daf8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.baggingregressor#sklearn.ensemble.BaggingRegressor&quot;&gt;&lt;code&gt;ensemble.BaggingRegressor&lt;/code&gt;&lt;/a&gt;([base_estimator, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ca4bbb93ffc03665651d9d7a8083870456167e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.extratreesclassifier#sklearn.ensemble.ExtraTreesClassifier&quot;&gt;&lt;code&gt;ensemble.ExtraTreesClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.extratreesclassifier#sklearn.ensemble.ExtraTreesClassifier&quot;&gt;&lt;code&gt;ensemble.ExtraTreesClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="8af339fe35f937cd5948e61d0d233ab708b99768" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.extratreesregressor#sklearn.ensemble.ExtraTreesRegressor&quot;&gt;&lt;code&gt;ensemble.ExtraTreesRegressor&lt;/code&gt;&lt;/a&gt;([n_estimators, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ebba809208e0f1fa839430f154a89d63d5e9e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingclassifier#sklearn.ensemble.GradientBoostingClassifier&quot;&gt;&lt;code&gt;GradientBoostingClassifier&lt;/code&gt;&lt;/a&gt; supports both binary and multi-class classification. The following example shows how to fit a gradient boosting classifier with 100 decision stumps as weak learners:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0d80858c341384175b5febb880a235761d73cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingclassifier#sklearn.ensemble.GradientBoostingClassifier&quot;&gt;&lt;code&gt;ensemble.GradientBoostingClassifier&lt;/code&gt;&lt;/a&gt;([loss, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2145fa80e48b64b35ee442565f0a1c9c4d93c80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingregressor#sklearn.ensemble.GradientBoostingRegressor&quot;&gt;&lt;code&gt;GradientBoostingRegressor&lt;/code&gt;&lt;/a&gt; supports a number of &lt;a href=&quot;#gradient-boosting-loss&quot;&gt;different loss functions&lt;/a&gt; for regression which can be specified via the argument &lt;code&gt;loss&lt;/code&gt;; the default loss function for regression is least squares (&lt;code&gt;'ls'&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3292d65811c4e54b9dd5f83951dac41b17f1d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingregressor#sklearn.ensemble.GradientBoostingRegressor&quot;&gt;&lt;code&gt;ensemble.GradientBoostingRegressor&lt;/code&gt;&lt;/a&gt;([loss, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d01ef66796cfd668ccf031a639314869d492c68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.isolationforest#sklearn.ensemble.IsolationForest&quot;&gt;&lt;code&gt;ensemble.IsolationForest&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.neighbors.localoutlierfactor#sklearn.neighbors.LocalOutlierFactor&quot;&gt;&lt;code&gt;neighbors.LocalOutlierFactor&lt;/code&gt;&lt;/a&gt; perform reasonably well on the data sets considered here. The &lt;a href=&quot;generated/sklearn.svm.oneclasssvm#sklearn.svm.OneClassSVM&quot;&gt;&lt;code&gt;svm.OneClassSVM&lt;/code&gt;&lt;/a&gt; is known to be sensitive to outliers and thus does not perform very well for outlier detection. Finally, &lt;a href=&quot;generated/sklearn.covariance.ellipticenvelope#sklearn.covariance.EllipticEnvelope&quot;&gt;&lt;code&gt;covariance.EllipticEnvelope&lt;/code&gt;&lt;/a&gt; assumes the data is Gaussian and learns an ellipse. For more details on the different estimators refer to the example &lt;a href=&quot;../auto_examples/plot_anomaly_comparison#sphx-glr-auto-examples-plot-anomaly-comparison-py&quot;&gt;Comparing anomaly detection algorithms for outlier detection on toy datasets&lt;/a&gt; and the sections hereunder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5005ace05eb20ea34f91b82c60d4cdb017dc472c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.isolationforest#sklearn.ensemble.IsolationForest&quot;&gt;&lt;code&gt;ensemble.IsolationForest&lt;/code&gt;&lt;/a&gt;([n_estimators, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0186941db443820a1e87db24081e94713229454e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.partial_dependence.partial_dependence#sklearn.ensemble.partial_dependence.partial_dependence&quot;&gt;&lt;code&gt;ensemble.partial_dependence.partial_dependence&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.partial_dependence.partial_dependence#sklearn.ensemble.partial_dependence.partial_dependence&quot;&gt;&lt;code&gt;ensemble.partial_dependence.partial_dependence&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="c231206b3a7c70755877ae081f9c6fa2004e722f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.partial_dependence.plot_partial_dependence#sklearn.ensemble.partial_dependence.plot_partial_dependence&quot;&gt;&lt;code&gt;ensemble.partial_dependence.plot_partial_dependence&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.partial_dependence.plot_partial_dependence#sklearn.ensemble.partial_dependence.plot_partial_dependence&quot;&gt;&lt;code&gt;ensemble.partial_dependence.plot_partial_dependence&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="a9e2e359837f80e06c1c0008e1d0be6ce6eca866" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.randomforestclassifier#sklearn.ensemble.RandomForestClassifier&quot;&gt;&lt;code&gt;RandomForestClassifier&lt;/code&gt;&lt;/a&gt; shows the opposite behavior: the histograms show peaks at approximately 0.2 and 0.9 probability, while probabilities close to 0 or 1 are very rare. An explanation for this is given by Niculescu-Mizil and Caruana &lt;a href=&quot;#id4&quot; id=&quot;id1&quot;&gt;[4]&lt;/a&gt;: &amp;ldquo;Methods such as bagging and random forests that average predictions from a base set of models can have difficulty making predictions near 0 and 1 because variance in the underlying base models will bias predictions that should be near zero or one away from these values. Because predictions are restricted to the interval [0,1], errors caused by variance tend to be one-sided near zero and one. For example, if a model should predict p = 0 for a case, the only way bagging can achieve this is if all bagged trees predict zero. If we add noise to the trees that bagging is averaging over, this noise will cause some trees to predict values larger than 0 for this case, thus moving the average prediction of the bagged ensemble away from 0. We observe this effect most strongly with random forests because the base-level trees trained with random forests have relatively high variance due to feature subsetting.&amp;rdquo; As a result, the calibration curve also referred to as the reliability diagram (Wilks 1995 &lt;a href=&quot;#id5&quot; id=&quot;id2&quot;&gt;[5]&lt;/a&gt;) shows a characteristic sigmoid shape, indicating that the classifier could trust its &amp;ldquo;intuition&amp;rdquo; more and return probabilities closer to 0 or 1 typically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c77092b3759936b9746d0950a3566679be2401" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.randomforestclassifier#sklearn.ensemble.RandomForestClassifier&quot;&gt;&lt;code&gt;ensemble.RandomForestClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.randomforestclassifier#sklearn.ensemble.RandomForestClassifier&quot;&gt;&lt;code&gt;ensemble.RandomForestClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="21fb13b74ba39bd2ce3b9350b49a8350b5727b9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.randomforestregressor#sklearn.ensemble.RandomForestRegressor&quot;&gt;&lt;code&gt;ensemble.RandomForestRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.randomforestregressor#sklearn.ensemble.RandomForestRegressor&quot;&gt;&lt;code&gt;ensemble.RandomForestRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="115bb0b0e8789ec5dfba7787892fe55d99dc48de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.randomtreesembedding#sklearn.ensemble.RandomTreesEmbedding&quot;&gt;&lt;code&gt;RandomTreesEmbedding&lt;/code&gt;&lt;/a&gt; implements an unsupervised transformation of the data. Using a forest of completely random trees, &lt;a href=&quot;generated/sklearn.ensemble.randomtreesembedding#sklearn.ensemble.RandomTreesEmbedding&quot;&gt;&lt;code&gt;RandomTreesEmbedding&lt;/code&gt;&lt;/a&gt; encodes the data by the indices of the leaves a data point ends up in. This index is then encoded in a one-of-K manner, leading to a high dimensional, sparse binary coding. This coding can be computed very efficiently and can then be used as a basis for other learning tasks. The size and sparsity of the code can be influenced by choosing the number of trees and the maximum depth per tree. For each tree in the ensemble, the coding contains one entry of one. The size of the coding is at most &lt;code&gt;n_estimators * 2
** max_depth&lt;/code&gt;, the maximum number of leaves in the forest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c838abc759fc7e678a40f22e5e90127d606e0c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.randomtreesembedding#sklearn.ensemble.RandomTreesEmbedding&quot;&gt;&lt;code&gt;ensemble.RandomTreesEmbedding&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.randomtreesembedding#sklearn.ensemble.RandomTreesEmbedding&quot;&gt;&lt;code&gt;ensemble.RandomTreesEmbedding&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="5377d8aa988bfd357764fb7db1bd5f152e7842ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.votingclassifier#sklearn.ensemble.VotingClassifier&quot;&gt;&lt;code&gt;ensemble.VotingClassifier&lt;/code&gt;&lt;/a&gt;(estimators[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c5afb094ce641820cdbeb685a54a2c66fb93d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.dictvectorizer#sklearn.feature_extraction.DictVectorizer&quot;&gt;&lt;code&gt;DictVectorizer&lt;/code&gt;&lt;/a&gt; implements what is called one-of-K or &amp;ldquo;one-hot&amp;rdquo; coding for categorical (aka nominal, discrete) features. Categorical features are &amp;ldquo;attribute-value&amp;rdquo; pairs where the value is restricted to a list of discrete of possibilities without ordering (e.g. topic identifiers, types of objects, tags, names&amp;hellip;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb5bed40da3090a6151533941fc8790bf25ca2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.dictvectorizer#sklearn.feature_extraction.DictVectorizer&quot;&gt;&lt;code&gt;DictVectorizer&lt;/code&gt;&lt;/a&gt; is also a useful representation transformation for training sequence classifiers in Natural Language Processing models that typically work by extracting feature windows around a particular word of interest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31032ccc123c3d4eceef5becabb4a2f3fb8de6e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.dictvectorizer#sklearn.feature_extraction.DictVectorizer&quot;&gt;&lt;code&gt;feature_extraction.DictVectorizer&lt;/code&gt;&lt;/a&gt;([dtype, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d4b6eea25406e64622efb691b2b08de3f5637e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt;&lt;code&gt;FeatureHasher&lt;/code&gt;&lt;/a&gt; accepts either mappings (like Python&amp;rsquo;s &lt;code&gt;dict&lt;/code&gt; and its variants in the &lt;code&gt;collections&lt;/code&gt; module), &lt;code&gt;(feature, value)&lt;/code&gt; pairs, or strings, depending on the constructor parameter &lt;code&gt;input_type&lt;/code&gt;. Mapping are treated as lists of &lt;code&gt;(feature, value)&lt;/code&gt; pairs, while single strings have an implicit value of 1, so &lt;code&gt;['feat1', 'feat2', 'feat3']&lt;/code&gt; is interpreted as &lt;code&gt;[('feat1', 1), ('feat2', 1), ('feat3', 1)]&lt;/code&gt;. If a single feature occurs multiple times in a sample, the associated values will be summed (so &lt;code&gt;('feat', 2)&lt;/code&gt; and &lt;code&gt;('feat', 3.5)&lt;/code&gt; become &lt;code&gt;('feat', 5.5)&lt;/code&gt;). The output from &lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt;&lt;code&gt;FeatureHasher&lt;/code&gt;&lt;/a&gt; is always a &lt;code&gt;scipy.sparse&lt;/code&gt; matrix in the CSR format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9aaad1a1da2a8d32410e23b6dd0e00cbe36efc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt;&lt;code&gt;FeatureHasher&lt;/code&gt;&lt;/a&gt; uses the signed 32-bit variant of MurmurHash3. As a result (and because of limitations in &lt;code&gt;scipy.sparse&lt;/code&gt;), the maximum number of features supported is currently \(2^{31} - 1\).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc55db510f56d523f5334aab3007bd0c7d1781c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt;&lt;code&gt;feature_extraction.FeatureHasher&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt;&lt;code&gt;feature_extraction.FeatureHasher&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="1124a3003490415eb6fc8142a05b80e8eec75ec1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.image.extract_patches_2d#sklearn.feature_extraction.image.extract_patches_2d&quot;&gt;&lt;code&gt;feature_extraction.image.extract_patches_2d&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.image.extract_patches_2d#sklearn.feature_extraction.image.extract_patches_2d&quot;&gt;&lt;code&gt;feature_extraction.image.extract_patches_2d&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="a5b3f99ce04c35a2339a337b235b5e007a78565a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.image.grid_to_graph#sklearn.feature_extraction.image.grid_to_graph&quot;&gt;&lt;code&gt;feature_extraction.image.grid_to_graph&lt;/code&gt;&lt;/a&gt;(n_x, n_y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c451e02ce81d485b64b1947b1884eac30f8ddca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.image.img_to_graph#sklearn.feature_extraction.image.img_to_graph&quot;&gt;&lt;code&gt;feature_extraction.image.img_to_graph&lt;/code&gt;&lt;/a&gt;(img[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2343a5863471d5d816b16b2868de6e2c88634b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.image.patchextractor#sklearn.feature_extraction.image.PatchExtractor&quot;&gt;&lt;code&gt;feature_extraction.image.PatchExtractor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.image.patchextractor#sklearn.feature_extraction.image.PatchExtractor&quot;&gt;&lt;code&gt;feature_extraction.image.PatchExtractor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2c0b77d575d98d27d89d05faf98dd25557e62039" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.image.reconstruct_from_patches_2d#sklearn.feature_extraction.image.reconstruct_from_patches_2d&quot;&gt;&lt;code&gt;feature_extraction.image.reconstruct_from_patches_2d&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.image.reconstruct_from_patches_2d#sklearn.feature_extraction.image.reconstruct_from_patches_2d&quot;&gt;&lt;code&gt;feature_extraction.image.reconstruct_from_patches_2d&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="7a79ef532e02e2f7573dad6a21a58025af09a1ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;CountVectorizer&lt;/code&gt;&lt;/a&gt; implements both tokenization and occurrence counting in a single class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2785d8676c2894c904e7f89c755882ec10a0e28b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.CountVectorizer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.CountVectorizer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="49966a80db07f49687fe8a8b70f5eb636c947257" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.hashingvectorizer#sklearn.feature_extraction.text.HashingVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.HashingVectorizer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.text.hashingvectorizer#sklearn.feature_extraction.text.HashingVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.HashingVectorizer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f236e80d783ed335ff2075120a87cec20a2756c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidftransformer#sklearn.feature_extraction.text.TfidfTransformer&quot;&gt;&lt;code&gt;feature_extraction.text.TfidfTransformer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidftransformer#sklearn.feature_extraction.text.TfidfTransformer&quot;&gt;&lt;code&gt;feature_extraction.text.TfidfTransformer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="85b6618e4aba300b78b9bbe54e69257ecee27565" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidfvectorizer#sklearn.feature_extraction.text.TfidfVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.TfidfVectorizer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidfvectorizer#sklearn.feature_extraction.text.TfidfVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.TfidfVectorizer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="adf918669c622f017287b914b82a05012185f241" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.chi2#sklearn.feature_selection.chi2&quot;&gt;&lt;code&gt;feature_selection.chi2&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a9375d86406c8d00263a91ba831e0187caf7b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.f_classif#sklearn.feature_selection.f_classif&quot;&gt;&lt;code&gt;feature_selection.f_classif&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d8c6e0fb058cfe37dfaa9529b5511abdfc643e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.f_regression#sklearn.feature_selection.f_regression&quot;&gt;&lt;code&gt;feature_selection.f_regression&lt;/code&gt;&lt;/a&gt;(X, y[, center])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b29bb7ffb4ed8ecc8f37e367bb4c2d426d8b92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.genericunivariateselect#sklearn.feature_selection.GenericUnivariateSelect&quot;&gt;&lt;code&gt;GenericUnivariateSelect&lt;/code&gt;&lt;/a&gt; allows to perform univariate feature selection with a configurable strategy. This allows to select the best univariate selection strategy with hyper-parameter search estimator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb177f1244583ebcdb5ecff0faea0809c9952106" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.genericunivariateselect#sklearn.feature_selection.GenericUnivariateSelect&quot;&gt;&lt;code&gt;feature_selection.GenericUnivariateSelect&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.genericunivariateselect#sklearn.feature_selection.GenericUnivariateSelect&quot;&gt;&lt;code&gt;feature_selection.GenericUnivariateSelect&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b3b27214f2f1014b3a0abbe46bc3c9bf4002b1cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.mutual_info_classif#sklearn.feature_selection.mutual_info_classif&quot;&gt;&lt;code&gt;feature_selection.mutual_info_classif&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44310524c1dadee19954a73a7fc6e03f4abc6027" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.mutual_info_regression#sklearn.feature_selection.mutual_info_regression&quot;&gt;&lt;code&gt;feature_selection.mutual_info_regression&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45710fb9d2236142417859a2ba412cbb1b418d8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.rfe#sklearn.feature_selection.RFE&quot;&gt;&lt;code&gt;feature_selection.RFE&lt;/code&gt;&lt;/a&gt;(estimator[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80f02fa02daf62a11de75741cf7807671e36c0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.rfecv#sklearn.feature_selection.RFECV&quot;&gt;&lt;code&gt;RFECV&lt;/code&gt;&lt;/a&gt; performs RFE in a cross-validation loop to find the optimal number of features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ee82952a2a24bc5f25f463ea2b210729661d48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.rfecv#sklearn.feature_selection.RFECV&quot;&gt;&lt;code&gt;feature_selection.RFECV&lt;/code&gt;&lt;/a&gt;(estimator[, step, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc81b59ed4ab18d9d5357dc59d38327a901e4116" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectfdr#sklearn.feature_selection.SelectFdr&quot;&gt;&lt;code&gt;feature_selection.SelectFdr&lt;/code&gt;&lt;/a&gt;([score_func, alpha])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9891455be9ff2bd2a35731dd6db00381fca2bf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectfpr#sklearn.feature_selection.SelectFpr&quot;&gt;&lt;code&gt;feature_selection.SelectFpr&lt;/code&gt;&lt;/a&gt;([score_func, alpha])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5a0ad12494f3451ae42dda190a45197b1d09e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectfrommodel#sklearn.feature_selection.SelectFromModel&quot;&gt;&lt;code&gt;SelectFromModel&lt;/code&gt;&lt;/a&gt; is a meta-transformer that can be used along with any estimator that has a &lt;code&gt;coef_&lt;/code&gt; or &lt;code&gt;feature_importances_&lt;/code&gt; attribute after fitting. The features are considered unimportant and removed, if the corresponding &lt;code&gt;coef_&lt;/code&gt; or &lt;code&gt;feature_importances_&lt;/code&gt; values are below the provided &lt;code&gt;threshold&lt;/code&gt; parameter. Apart from specifying the threshold numerically, there are built-in heuristics for finding a threshold using a string argument. Available heuristics are &amp;ldquo;mean&amp;rdquo;, &amp;ldquo;median&amp;rdquo; and float multiples of these like &amp;ldquo;0.1*mean&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec240538d63c3f501a01ff6f2f6ba218f76985e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectfrommodel#sklearn.feature_selection.SelectFromModel&quot;&gt;&lt;code&gt;feature_selection.SelectFromModel&lt;/code&gt;&lt;/a&gt;(estimator)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.selectfrommodel#sklearn.feature_selection.SelectFromModel&quot;&gt;&lt;code&gt;feature_selection.SelectFromModel&lt;/code&gt;&lt;/a&gt;(estimator)</target>
        </trans-unit>
        <trans-unit id="ae7b9a1b641d9a650ce5c990c7d827534ce13932" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectfwe#sklearn.feature_selection.SelectFwe&quot;&gt;&lt;code&gt;feature_selection.SelectFwe&lt;/code&gt;&lt;/a&gt;([score_func, alpha])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c8010300752bc5d2b22b38562e2114dbdf078a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectkbest#sklearn.feature_selection.SelectKBest&quot;&gt;&lt;code&gt;SelectKBest&lt;/code&gt;&lt;/a&gt; removes all but the \(k\) highest scoring features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb02fbc4fc44a0c91c89555cbd7cf3d3c98e4979" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectkbest#sklearn.feature_selection.SelectKBest&quot;&gt;&lt;code&gt;feature_selection.SelectKBest&lt;/code&gt;&lt;/a&gt;([score_func, k])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ba1e6e588ae6ab026f98f6373511731d2b14ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectpercentile#sklearn.feature_selection.SelectPercentile&quot;&gt;&lt;code&gt;SelectPercentile&lt;/code&gt;&lt;/a&gt; removes all but a user-specified highest scoring percentage of features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a60a6417e76fb7a238f6a397baf953ef2956a77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectpercentile#sklearn.feature_selection.SelectPercentile&quot;&gt;&lt;code&gt;feature_selection.SelectPercentile&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.selectpercentile#sklearn.feature_selection.SelectPercentile&quot;&gt;&lt;code&gt;feature_selection.SelectPercentile&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="044d9493f7a2099e98c2ced40b996e4591896166" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.variancethreshold#sklearn.feature_selection.VarianceThreshold&quot;&gt;&lt;code&gt;VarianceThreshold&lt;/code&gt;&lt;/a&gt; is a simple baseline approach to feature selection. It removes all features whose variance doesn&amp;rsquo;t meet some threshold. By default, it removes all zero-variance features, i.e. features that have the same value in all samples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c877666a1ebfd2b4274d66780f0b5307e389891" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.variancethreshold#sklearn.feature_selection.VarianceThreshold&quot;&gt;&lt;code&gt;feature_selection.VarianceThreshold&lt;/code&gt;&lt;/a&gt;([threshold])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.variancethreshold#sklearn.feature_selection.VarianceThreshold&quot;&gt;&lt;code&gt;feature_selection.VarianceThreshold&lt;/code&gt;&lt;/a&gt;([threshold])</target>
        </trans-unit>
        <trans-unit id="22652dec81acc1283c813305c9271231d930a820" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt;&lt;code&gt;GaussianProcessClassifier&lt;/code&gt;&lt;/a&gt; supports multi-class classification by performing either one-versus-rest or one-versus-one based training and prediction. In one-versus-rest, one binary Gaussian process classifier is fitted for each class, which is trained to separate this class from the rest. In &amp;ldquo;one_vs_one&amp;rdquo;, one binary Gaussian process classifier is fitted for each pair of classes, which is trained to separate these two classes. The predictions of these binary predictors are combined into multi-class predictions. See the section on &lt;a href=&quot;multiclass#multiclass&quot;&gt;multi-class classification&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd56d0834201a119c09d735190ede32d8c1bc7e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt;&lt;code&gt;gaussian_process.GaussianProcessClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt;&lt;code&gt;gaussian_process.GaussianProcessClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="5322b91eab7af477ef6901ae246a9be2492ce2ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt;&lt;code&gt;sklearn.gaussian_process.GaussianProcessClassifier&lt;/code&gt;&lt;/a&gt; (setting multi_class = &amp;ldquo;one_vs_one&amp;rdquo;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd08f370b97326c6d08f5f1724e124bfed5dd6a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt;&lt;code&gt;sklearn.gaussian_process.GaussianProcessClassifier&lt;/code&gt;&lt;/a&gt; (setting multi_class = &amp;ldquo;one_vs_rest&amp;rdquo;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de3ee96f5f01d430f020114d18a454a4020262d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessregressor#sklearn.gaussian_process.GaussianProcessRegressor&quot;&gt;&lt;code&gt;gaussian_process.GaussianProcessRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessregressor#sklearn.gaussian_process.GaussianProcessRegressor&quot;&gt;&lt;code&gt;gaussian_process.GaussianProcessRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2b08588e82fcd327d6b91869b4615d6eac928a72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.compoundkernel#sklearn.gaussian_process.kernels.CompoundKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.CompoundKernel&lt;/code&gt;&lt;/a&gt;(kernels)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.compoundkernel#sklearn.gaussian_process.kernels.CompoundKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.CompoundKernel&lt;/code&gt;&lt;/a&gt;(kernels)</target>
        </trans-unit>
        <trans-unit id="815d6023a6697cdbf3d07d272617c442ac11c2b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.constantkernel#sklearn.gaussian_process.kernels.ConstantKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.ConstantKernel&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.constantkernel#sklearn.gaussian_process.kernels.ConstantKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.ConstantKernel&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f1a53dd3b09a49ccad1f76a8be6b281006ab35af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.dotproduct#sklearn.gaussian_process.kernels.DotProduct&quot;&gt;&lt;code&gt;gaussian_process.kernels.DotProduct&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.dotproduct#sklearn.gaussian_process.kernels.DotProduct&quot;&gt;&lt;code&gt;gaussian_process.kernels.DotProduct&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ed593e0e20db54c1e1a1b144257a29eccd342c90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.exponentiation#sklearn.gaussian_process.kernels.Exponentiation&quot;&gt;&lt;code&gt;gaussian_process.kernels.Exponentiation&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.exponentiation#sklearn.gaussian_process.kernels.Exponentiation&quot;&gt;&lt;code&gt;gaussian_process.kernels.Exponentiation&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="1b549179a39ca48f936a53b1913041e4b5973684" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.expsinesquared#sklearn.gaussian_process.kernels.ExpSineSquared&quot;&gt;&lt;code&gt;gaussian_process.kernels.ExpSineSquared&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.expsinesquared#sklearn.gaussian_process.kernels.ExpSineSquared&quot;&gt;&lt;code&gt;gaussian_process.kernels.ExpSineSquared&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="13d4e33ab278a59a48456d657091a0434022e414" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.matern#sklearn.gaussian_process.kernels.Matern&quot;&gt;&lt;code&gt;gaussian_process.kernels.Matern&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.matern#sklearn.gaussian_process.kernels.Matern&quot;&gt;&lt;code&gt;gaussian_process.kernels.Matern&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e68405b2a68d44a9c9ed6d618182d170eac139bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.pairwisekernel#sklearn.gaussian_process.kernels.PairwiseKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.PairwiseKernel&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.pairwisekernel#sklearn.gaussian_process.kernels.PairwiseKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.PairwiseKernel&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="3044c4c3761fb3be525ab760dbfde797c8b526d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.product#sklearn.gaussian_process.kernels.Product&quot;&gt;&lt;code&gt;gaussian_process.kernels.Product&lt;/code&gt;&lt;/a&gt;(k1, k2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d5cad59224cd62715df45b67b8e625f4c6434e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.rationalquadratic#sklearn.gaussian_process.kernels.RationalQuadratic&quot;&gt;&lt;code&gt;gaussian_process.kernels.RationalQuadratic&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.rationalquadratic#sklearn.gaussian_process.kernels.RationalQuadratic&quot;&gt;&lt;code&gt;gaussian_process.kernels.RationalQuadratic&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="86c8f9443de9bbdae398550f3856a549ef22d2e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.rbf#sklearn.gaussian_process.kernels.RBF&quot;&gt;&lt;code&gt;gaussian_process.kernels.RBF&lt;/code&gt;&lt;/a&gt;([length_scale, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37516a63d2fa2efe1e4e73459efd6194d1dac9b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.sum#sklearn.gaussian_process.kernels.Sum&quot;&gt;&lt;code&gt;gaussian_process.kernels.Sum&lt;/code&gt;&lt;/a&gt;(k1, k2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29ef926106e264e7e34fcc406e6beae3a9432a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.whitekernel#sklearn.gaussian_process.kernels.WhiteKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.WhiteKernel&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.whitekernel#sklearn.gaussian_process.kernels.WhiteKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.WhiteKernel&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b60a50333125887b505e4c252d225ceecde61b64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.get_config#sklearn.get_config&quot;&gt;&lt;code&gt;get_config&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.get_config#sklearn.get_config&quot;&gt;&lt;code&gt;get_config&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="a74fe3209807b9a59e1c186b1e744bba1df41e78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.impute.missingindicator#sklearn.impute.MissingIndicator&quot;&gt;&lt;code&gt;impute.MissingIndicator&lt;/code&gt;&lt;/a&gt;([missing_values, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147bffd28e4cc951e06f9cfba5c2a8382913dd3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.impute.simpleimputer#sklearn.impute.SimpleImputer&quot;&gt;&lt;code&gt;SimpleImputer&lt;/code&gt;&lt;/a&gt; can be used in a Pipeline as a way to build a composite estimator that supports imputation. See &lt;a href=&quot;../auto_examples/plot_missing_values#sphx-glr-auto-examples-plot-missing-values-py&quot;&gt;Imputing missing values before building an estimator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c6396e08188deb8eaff6bcb76e7959158f6dfa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.impute.simpleimputer#sklearn.impute.SimpleImputer&quot;&gt;&lt;code&gt;impute.SimpleImputer&lt;/code&gt;&lt;/a&gt;([missing_values, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917ca251c02b98662dfdf6922cb93a1ea03df782" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.isotonic.check_increasing#sklearn.isotonic.check_increasing&quot;&gt;&lt;code&gt;isotonic.check_increasing&lt;/code&gt;&lt;/a&gt;(x, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa23fe350124b0e719eb698a6a718e721c14f87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.isotonic.isotonic_regression#sklearn.isotonic.isotonic_regression&quot;&gt;&lt;code&gt;isotonic.isotonic_regression&lt;/code&gt;&lt;/a&gt;(y[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d93bb84c61df15aead0ac1224117b486f70c954" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.isotonic.isotonicregression#sklearn.isotonic.IsotonicRegression&quot;&gt;&lt;code&gt;isotonic.IsotonicRegression&lt;/code&gt;&lt;/a&gt;([y_min, y_max, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a5ab18128fdd9051ee7e26d1989f5fe79a85b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_approximation.additivechi2sampler#sklearn.kernel_approximation.AdditiveChi2Sampler&quot;&gt;&lt;code&gt;kernel_approximation.AdditiveChi2Sampler&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.kernel_approximation.additivechi2sampler#sklearn.kernel_approximation.AdditiveChi2Sampler&quot;&gt;&lt;code&gt;kernel_approximation.AdditiveChi2Sampler&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c15e18a23b6aceb31106f2ae683829a43b46dcf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_approximation.nystroem#sklearn.kernel_approximation.Nystroem&quot;&gt;&lt;code&gt;kernel_approximation.Nystroem&lt;/code&gt;&lt;/a&gt;([kernel, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74870e36cbd22817ba9e6a0937b948cda244f4ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_approximation.rbfsampler#sklearn.kernel_approximation.RBFSampler&quot;&gt;&lt;code&gt;kernel_approximation.RBFSampler&lt;/code&gt;&lt;/a&gt;([gamma, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99373ea8262ced9b9ac126172101181a9c4ba5a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_approximation.skewedchi2sampler#sklearn.kernel_approximation.SkewedChi2Sampler&quot;&gt;&lt;code&gt;kernel_approximation.SkewedChi2Sampler&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.kernel_approximation.skewedchi2sampler#sklearn.kernel_approximation.SkewedChi2Sampler&quot;&gt;&lt;code&gt;kernel_approximation.SkewedChi2Sampler&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="aa595f1efba3e28d225adf72abd9000b5a06e2d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_ridge.kernelridge#sklearn.kernel_ridge.KernelRidge&quot;&gt;&lt;code&gt;kernel_ridge.KernelRidge&lt;/code&gt;&lt;/a&gt;([alpha, kernel, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9951e87a310b9386c7069f4214385dbdefe604e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt;&lt;code&gt;ARDRegression&lt;/code&gt;&lt;/a&gt; is very similar to &lt;a href=&quot;#id13&quot;&gt;Bayesian Ridge Regression&lt;/a&gt;, but can lead to sparser weights \(w\)&lt;a href=&quot;#id18&quot; id=&quot;id14&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;#id19&quot; id=&quot;id15&quot;&gt;[2]&lt;/a&gt;. &lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt;&lt;code&gt;ARDRegression&lt;/code&gt;&lt;/a&gt; poses a different prior over \(w\), by dropping the assumption of the Gaussian being spherical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb4f723c281937b48f50f6d2437227cf2396cde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt;&lt;code&gt;linear_model.ARDRegression&lt;/code&gt;&lt;/a&gt;([n_iter, tol, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2053491901e6666bcd9398a44de26d51d986167" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.bayesianridge#sklearn.linear_model.BayesianRidge&quot;&gt;&lt;code&gt;BayesianRidge&lt;/code&gt;&lt;/a&gt; estimates a probabilistic model of the regression problem as described above. The prior for the parameter \(w\) is given by a spherical Gaussian:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7007b16b8f8cfb9734c4b40612b23b7d25dbdcf0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.bayesianridge#sklearn.linear_model.BayesianRidge&quot;&gt;&lt;code&gt;linear_model.BayesianRidge&lt;/code&gt;&lt;/a&gt;([n_iter, tol, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53f22d10dffa4b4c725209b80bca9facb1296c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.elasticnet#sklearn.linear_model.ElasticNet&quot;&gt;&lt;code&gt;ElasticNet&lt;/code&gt;&lt;/a&gt; is a linear regression model trained with L1 and L2 prior as regularizer. This combination allows for learning a sparse model where few of the weights are non-zero like &lt;a href=&quot;generated/sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt;&lt;code&gt;Lasso&lt;/code&gt;&lt;/a&gt;, while still maintaining the regularization properties of &lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;Ridge&lt;/code&gt;&lt;/a&gt;. We control the convex combination of L1 and L2 using the &lt;code&gt;l1_ratio&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7af8585ba011b70e07b8132f31ab81638386da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.elasticnet#sklearn.linear_model.ElasticNet&quot;&gt;&lt;code&gt;linear_model.ElasticNet&lt;/code&gt;&lt;/a&gt;([alpha, l1_ratio, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66e5ace7c54e2b3806c8e21cea467b0ae435392" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.elasticnetcv#sklearn.linear_model.ElasticNetCV&quot;&gt;&lt;code&gt;linear_model.ElasticNetCV&lt;/code&gt;&lt;/a&gt;([l1_ratio, eps, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be8ccdb319576dbe3186affdb4d80747fdc3eb03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.enet_path#sklearn.linear_model.enet_path&quot;&gt;&lt;code&gt;linear_model.enet_path&lt;/code&gt;&lt;/a&gt;(X, y[, l1_ratio, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4decbec8ca1de7810069a3a6e2d984d5785c5b9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.huberregressor#sklearn.linear_model.HuberRegressor&quot;&gt;&lt;code&gt;HuberRegressor&lt;/code&gt;&lt;/a&gt; is scaling invariant. Once &lt;code&gt;epsilon&lt;/code&gt; is set, scaling &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; down or up by different values would produce the same robustness to outliers as before. as compared to &lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt;&lt;code&gt;SGDRegressor&lt;/code&gt;&lt;/a&gt; where &lt;code&gt;epsilon&lt;/code&gt; has to be set again when &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are scaled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8b8746171b3b291ce75003aeaa2d37051cf57e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.huberregressor#sklearn.linear_model.HuberRegressor&quot;&gt;&lt;code&gt;HuberRegressor&lt;/code&gt;&lt;/a&gt; should be more efficient to use on data with small number of samples while &lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt;&lt;code&gt;SGDRegressor&lt;/code&gt;&lt;/a&gt; needs a number of passes on the training data to produce the same robustness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c84d7aa989af1d1f0c132314330aceda91cf42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.huberregressor#sklearn.linear_model.HuberRegressor&quot;&gt;&lt;code&gt;linear_model.HuberRegressor&lt;/code&gt;&lt;/a&gt;([epsilon, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487d020cc7c6245afd4df7ce21bb620202e87861" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lars#sklearn.linear_model.Lars&quot;&gt;&lt;code&gt;linear_model.Lars&lt;/code&gt;&lt;/a&gt;([fit_intercept, verbose, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff0316157338886d8656c35f581f9292ce71f448" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lars_path#sklearn.linear_model.lars_path&quot;&gt;&lt;code&gt;linear_model.lars_path&lt;/code&gt;&lt;/a&gt;(X, y[, Xy, Gram, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b104e20462543e5ec2bb6c8d1f1fbf14660e69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.larscv#sklearn.linear_model.LarsCV&quot;&gt;&lt;code&gt;linear_model.LarsCV&lt;/code&gt;&lt;/a&gt;([fit_intercept, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="947eeb5a688642d845372cc1cb057f0078cf705e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt;&lt;code&gt;linear_model.Lasso&lt;/code&gt;&lt;/a&gt;([alpha, fit_intercept, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f74e089a17a57238a7d8a5bba41cdf2c77662d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lasso_path#sklearn.linear_model.lasso_path&quot;&gt;&lt;code&gt;linear_model.lasso_path&lt;/code&gt;&lt;/a&gt;(X, y[, eps, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66877a744f2538d5f69331f9b1a7f52a81592ba3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lasso_stability_path#sklearn.linear_model.lasso_stability_path&quot;&gt;&lt;code&gt;linear_model.lasso_stability_path&lt;/code&gt;&lt;/a&gt;(X, y[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0d424edef0409eb642c0b39f08bee4d60b5321" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassocv#sklearn.linear_model.LassoCV&quot;&gt;&lt;code&gt;linear_model.LassoCV&lt;/code&gt;&lt;/a&gt;([eps, n_alphas, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968c1d59187f56882bc3fbd09b187c63129651f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt;&lt;code&gt;LassoLars&lt;/code&gt;&lt;/a&gt; is a lasso model implemented using the LARS algorithm, and unlike the implementation based on coordinate_descent, this yields the exact solution, which is piecewise linear as a function of the norm of its coefficients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52faabfb3b0ecb538f9cbf9deb29429c9555574" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt;&lt;code&gt;linear_model.LassoLars&lt;/code&gt;&lt;/a&gt;([alpha, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1c0a7209b66b90efc735eb2b032820f501f80f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassolarscv#sklearn.linear_model.LassoLarsCV&quot;&gt;&lt;code&gt;linear_model.LassoLarsCV&lt;/code&gt;&lt;/a&gt;([fit_intercept, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77753da375928863059a28d1d6fbd122e6856e85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassolarsic#sklearn.linear_model.LassoLarsIC&quot;&gt;&lt;code&gt;linear_model.LassoLarsIC&lt;/code&gt;&lt;/a&gt;([criterion, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96b03d398fc6f5cdfad88b412cea9e9d66eb5c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;LinearRegression&lt;/code&gt;&lt;/a&gt; fits a linear model with coefficients \(w = (w_1, ..., w_p)\) to minimize the residual sum of squares between the observed responses in the dataset, and the responses predicted by the linear approximation. Mathematically it solves a problem of the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="707c09c449a34044b52576176f97c46d850c9643" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;LinearRegression&lt;/code&gt;&lt;/a&gt; will take in its &lt;code&gt;fit&lt;/code&gt; method arrays X, y and will store the coefficients \(w\) of the linear model in its &lt;code&gt;coef_&lt;/code&gt; member:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88df752d6ab48a5b55ccff5853c9a71a55494749" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;linear_model.LinearRegression&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;linear_model.LinearRegression&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="5fa4bf95b39a85729d30092440cb8723118496b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logistic_regression_path#sklearn.linear_model.logistic_regression_path&quot;&gt;&lt;code&gt;linear_model.logistic_regression_path&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a969e686b19caee8b03f87b495e87c2ebd9bc8e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;LogisticRegression&lt;/code&gt;&lt;/a&gt; returns well calibrated predictions by default as it directly optimizes log-loss. In contrast, the other methods return biased probabilities; with different biases per method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4a08a63174d9c78d3859503a392d6e9b3b516e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;linear_model.LogisticRegression&lt;/code&gt;&lt;/a&gt;([penalty, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ffc6248b165b74338396462a350e84e14bcf69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;sklearn.linear_model.LogisticRegression&lt;/code&gt;&lt;/a&gt; (setting multi_class=&amp;rdquo;multinomial&amp;rdquo;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34fc0c3a8ed105a5aeee6c9304b0cd0c8d9c9b5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;sklearn.linear_model.LogisticRegression&lt;/code&gt;&lt;/a&gt; (setting multi_class=&amp;rdquo;ovr&amp;rdquo;)</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
