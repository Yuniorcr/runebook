<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="gnu_fortran">
    <body>
      <group id="gnu_fortran">
        <trans-unit id="31118522388c4531f8fb8950dd7f59eac534bf88" translate="yes" xml:space="preserve">
          <source>9.99 &lt;code&gt;EVENT_QUERY&lt;/code&gt; &amp;mdash; Query whether a coarray event has occurred</source>
          <target state="translated">9.99 &lt;code&gt;EVENT_QUERY&lt;/code&gt; &amp;mdash; Coarrayイベントが発生したかどうかを照会します</target>
        </trans-unit>
        <trans-unit id="1535bcbe09c7757b3227dd9b6b2a79e542fb2334" translate="yes" xml:space="preserve">
          <source>9.99 EVENT_QUERY &amp;mdash; Query whether a coarray event has occurred</source>
          <target state="translated">9.99 EVENT_QUERY &amp;mdash; Coarrayイベントが発生したかどうかを照会します</target>
        </trans-unit>
        <trans-unit id="848ad12645bdcac61958ced883f82f64f6373edd" translate="yes" xml:space="preserve">
          <source>9.99. EVENT_QUERY</source>
          <target state="translated">9.99.EVENT_QUERY</target>
        </trans-unit>
        <trans-unit id="05a79f06cf3f67f726dae68d18a2290f6c9a50c9" translate="yes" xml:space="preserve">
          <source>:</source>
          <target state="translated">:</target>
        </trans-unit>
        <trans-unit id="30efd688ae27fc8b3582f6390698667e33a87317" translate="yes" xml:space="preserve">
          <source>; a line may start with a semicolon; for internal and module procedures &lt;code&gt;END&lt;/code&gt; can be used instead of &lt;code&gt;END SUBROUTINE&lt;/code&gt; and &lt;code&gt;END FUNCTION&lt;/code&gt;; &lt;code&gt;SELECTED_REAL_KIND&lt;/code&gt; now also takes a &lt;code&gt;RADIX&lt;/code&gt; argument; intrinsic types are supported for &lt;code&gt;TYPE&lt;/code&gt;(&lt;var&gt;intrinsic-type-spec&lt;/var&gt;); multiple type-bound procedures can be declared in a single &lt;code&gt;PROCEDURE&lt;/code&gt; statement; implied-shape arrays are supported for named constants (&lt;code&gt;PARAMETER&lt;/code&gt;).</source>
          <target state="translated">;行はセミコロンで始めることができます。内部モジュール手順について &lt;code&gt;END&lt;/code&gt; が代わりに使用することができる &lt;code&gt;END SUBROUTINE&lt;/code&gt; と &lt;code&gt;END FUNCTION&lt;/code&gt; 。 &lt;code&gt;SELECTED_REAL_KIND&lt;/code&gt; は、 &lt;code&gt;RADIX&lt;/code&gt; 引数も受け取るようになりました。組み込み型は &lt;code&gt;TYPE&lt;/code&gt; でサポートされています（ &lt;var&gt;intrinsic-type-spec&lt;/var&gt; ）。 1つの &lt;code&gt;PROCEDURE&lt;/code&gt; ステートメントで複数の型バインドされたプロシージャを宣言できます。暗黙形状配列は、名前付き定数（ &lt;code&gt;PARAMETER&lt;/code&gt; ）でサポートされています。</target>
        </trans-unit>
        <trans-unit id="c5ad5a39e32070263fcba8df5389d5af8c1e1b6d" translate="yes" xml:space="preserve">
          <source>; it causes the preprocessor to treat comments as tokens in their own right. For example, comments appearing at the start of what would be a directive line have the effect of turning that line into an ordinary source line, since the first token on the line is no longer a &lt;code&gt;'#'&lt;/code&gt;.</source>
          <target state="translated">; これにより、プリプロセッサはコメントをトークンとして処理します。たとえば、ディレクティブ行の先頭にあるコメントは、その行の最初のトークンが &lt;code&gt;'#'&lt;/code&gt; ではなくなっているため、その行を通常のソース行に変換する効果があります。</target>
        </trans-unit>
        <trans-unit id="8e0c84559f5ca074359299544164c9bb4eb30b6d" translate="yes" xml:space="preserve">
          <source>; note, however, that compile-time optimizations may convert them into quiet NaN and that trapping needs to be enabled (e.g. via</source>
          <target state="translated">;ただし、コンパイル時の最適化によって静かなNaNに変換される可能性があることと、トラッピングを有効にする必要があることに注意してください (例えば</target>
        </trans-unit>
        <trans-unit id="169a27909cc4636a203820a2820a62bb0c08be3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;abort#ABORT&quot;&gt;ABORT&lt;/a&gt;, &lt;a href=&quot;exit#EXIT&quot;&gt;EXIT&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;abort#ABORT&quot;&gt;ABORT&lt;/a&gt;、&lt;a href=&quot;exit#EXIT&quot;&gt;EXIT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49a6a9585c0d98c108876115490fe2636299cb42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;abort#ABORT&quot;&gt;ABORT&lt;/a&gt;, &lt;a href=&quot;kill#KILL&quot;&gt;KILL&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;abort#ABORT&quot;&gt;ABORT&lt;/a&gt;、&lt;a href=&quot;kill#KILL&quot;&gt;KILL&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11b77efacfc6239cf4f9846e2baca734d33ea3f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;achar#ACHAR&quot;&gt;ACHAR&lt;/a&gt;, &lt;a href=&quot;char#CHAR&quot;&gt;CHAR&lt;/a&gt;, &lt;a href=&quot;iachar#IACHAR&quot;&gt;IACHAR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;achar#ACHAR&quot;&gt;ACHAR&lt;/a&gt;、&lt;a href=&quot;char#CHAR&quot;&gt;CHAR&lt;/a&gt;、&lt;a href=&quot;iachar#IACHAR&quot;&gt;IACHAR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ad15f1024b6e010663591857404106d9410dae6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;achar#ACHAR&quot;&gt;ACHAR&lt;/a&gt;, &lt;a href=&quot;char#CHAR&quot;&gt;CHAR&lt;/a&gt;, &lt;a href=&quot;ichar#ICHAR&quot;&gt;ICHAR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;achar#ACHAR&quot;&gt;ACHAR&lt;/a&gt;、&lt;a href=&quot;char#CHAR&quot;&gt;CHAR&lt;/a&gt;、&lt;a href=&quot;ichar#ICHAR&quot;&gt;ICHAR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f4bfd344c9ccf8e3fa89519025cfb4e1109b5ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;achar#ACHAR&quot;&gt;ACHAR&lt;/a&gt;, &lt;a href=&quot;iachar#IACHAR&quot;&gt;IACHAR&lt;/a&gt;, &lt;a href=&quot;ichar#ICHAR&quot;&gt;ICHAR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;achar#ACHAR&quot;&gt;ACHAR&lt;/a&gt;、&lt;a href=&quot;iachar#IACHAR&quot;&gt;IACHAR&lt;/a&gt;、&lt;a href=&quot;ichar#ICHAR&quot;&gt;ICHAR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a99a0a5ca80d4620c475abff493a6b1d609e2c1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;adjustl#ADJUSTL&quot;&gt;ADJUSTL&lt;/a&gt;, &lt;a href=&quot;adjustr#ADJUSTR&quot;&gt;ADJUSTR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;adjustl#ADJUSTL&quot;&gt;ADJUSTL&lt;/a&gt;、&lt;a href=&quot;adjustr#ADJUSTR&quot;&gt;ADJUSTR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c7ff4866c02ca82f7ccecfa09fce986b765f577" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;adjustl#ADJUSTL&quot;&gt;ADJUSTL&lt;/a&gt;, &lt;a href=&quot;trim#TRIM&quot;&gt;TRIM&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;adjustl#ADJUSTL&quot;&gt;調整&lt;/a&gt;、&lt;a href=&quot;trim#TRIM&quot;&gt;トリム&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24a8fbd10b4817bc8a7eff60d437ad56af5229f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;adjustr#ADJUSTR&quot;&gt;ADJUSTR&lt;/a&gt;, &lt;a href=&quot;trim#TRIM&quot;&gt;TRIM&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;adjustr#ADJUSTR&quot;&gt;アジャスター&lt;/a&gt;、&lt;a href=&quot;trim#TRIM&quot;&gt;トリム&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1406d0512531a3ada467de82d3440b3945cd78a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;atomic_005fdefine#ATOMIC_005fDEFINE&quot;&gt;ATOMIC_DEFINE&lt;/a&gt;, &lt;a href=&quot;atomic_005fadd#ATOMIC_005fADD&quot;&gt;ATOMIC_ADD&lt;/a&gt;, &lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;, &lt;a href=&quot;atomic_005ffetch_005fand#ATOMIC_005fFETCH_005fAND&quot;&gt;ATOMIC_FETCH_AND&lt;/a&gt;, &lt;a href=&quot;atomic_005ffetch_005for#ATOMIC_005fFETCH_005fOR&quot;&gt;ATOMIC_FETCH_OR&lt;/a&gt;, &lt;a href=&quot;atomic_005ffetch_005fxor#ATOMIC_005fFETCH_005fXOR&quot;&gt;ATOMIC_FETCH_XOR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;atomic_005fdefine#ATOMIC_005fDEFINE&quot;&gt;ATOMIC_DEFINE&lt;/a&gt;、&lt;a href=&quot;atomic_005fadd#ATOMIC_005fADD&quot;&gt;ATOMIC_ADD&lt;/a&gt;、&lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;、&lt;a href=&quot;atomic_005ffetch_005fand#ATOMIC_005fFETCH_005fAND&quot;&gt;ATOMIC_FETCH_AND&lt;/a&gt;、&lt;a href=&quot;atomic_005ffetch_005for#ATOMIC_005fFETCH_005fOR&quot;&gt;ATOMIC_FETCH_OR&lt;/a&gt;、&lt;a href=&quot;atomic_005ffetch_005fxor#ATOMIC_005fFETCH_005fXOR&quot;&gt;ATOMIC_FETCH_XOR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b27ac829751ca6e3102078d89c1ac3e776120b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;atomic_005fdefine#ATOMIC_005fDEFINE&quot;&gt;ATOMIC_DEFINE&lt;/a&gt;, &lt;a href=&quot;atomic_005fand#ATOMIC_005fAND&quot;&gt;ATOMIC_AND&lt;/a&gt;, &lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;, &lt;a href=&quot;atomic_005ffetch_005fadd#ATOMIC_005fFETCH_005fADD&quot;&gt;ATOMIC_FETCH_ADD&lt;/a&gt;, &lt;a href=&quot;atomic_005ffetch_005for#ATOMIC_005fFETCH_005fOR&quot;&gt;ATOMIC_FETCH_OR&lt;/a&gt;, &lt;a href=&quot;atomic_005ffetch_005fxor#ATOMIC_005fFETCH_005fXOR&quot;&gt;ATOMIC_FETCH_XOR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;atomic_005fdefine#ATOMIC_005fDEFINE&quot;&gt;ATOMIC_DEFINE&lt;/a&gt;、&lt;a href=&quot;atomic_005fand#ATOMIC_005fAND&quot;&gt;ATOMIC_AND&lt;/a&gt;、&lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;、&lt;a href=&quot;atomic_005ffetch_005fadd#ATOMIC_005fFETCH_005fADD&quot;&gt;ATOMIC_FETCH_ADD&lt;/a&gt;、&lt;a href=&quot;atomic_005ffetch_005for#ATOMIC_005fFETCH_005fOR&quot;&gt;ATOMIC_FETCH_OR&lt;/a&gt;、&lt;a href=&quot;atomic_005ffetch_005fxor#ATOMIC_005fFETCH_005fXOR&quot;&gt;ATOMIC_FETCH_XOR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0421581df3c451147b544d9ddccc775159b4a3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;atomic_005fdefine#ATOMIC_005fDEFINE&quot;&gt;ATOMIC_DEFINE&lt;/a&gt;, &lt;a href=&quot;atomic_005fcas#ATOMIC_005fCAS&quot;&gt;ATOMIC_CAS&lt;/a&gt;, &lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;, &lt;a href=&quot;atomic_005ffetch_005fadd#ATOMIC_005fFETCH_005fADD&quot;&gt;ATOMIC_FETCH_ADD&lt;/a&gt;, &lt;a href=&quot;atomic_005ffetch_005fand#ATOMIC_005fFETCH_005fAND&quot;&gt;ATOMIC_FETCH_AND&lt;/a&gt;, &lt;a href=&quot;atomic_005ffetch_005for#ATOMIC_005fFETCH_005fOR&quot;&gt;ATOMIC_FETCH_OR&lt;/a&gt;, &lt;a href=&quot;atomic_005ffetch_005fxor#ATOMIC_005fFETCH_005fXOR&quot;&gt;ATOMIC_FETCH_XOR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;atomic_005fdefine#ATOMIC_005fDEFINE&quot;&gt;ATOMIC_DEFINE&lt;/a&gt;、&lt;a href=&quot;atomic_005fcas#ATOMIC_005fCAS&quot;&gt;ATOMIC_CAS&lt;/a&gt;、&lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;、&lt;a href=&quot;atomic_005ffetch_005fadd#ATOMIC_005fFETCH_005fADD&quot;&gt;ATOMIC_FETCH_ADD&lt;/a&gt;、&lt;a href=&quot;atomic_005ffetch_005fand#ATOMIC_005fFETCH_005fAND&quot;&gt;ATOMIC_FETCH_AND&lt;/a&gt;、&lt;a href=&quot;atomic_005ffetch_005for#ATOMIC_005fFETCH_005fOR&quot;&gt;ATOMIC_FETCH_OR&lt;/a&gt;、&lt;a href=&quot;atomic_005ffetch_005fxor#ATOMIC_005fFETCH_005fXOR&quot;&gt;ATOMIC_FETCH_XOR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb838e1b6f86b043360891bbef483c9f88cc0b9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;atomic_005fdefine#ATOMIC_005fDEFINE&quot;&gt;ATOMIC_DEFINE&lt;/a&gt;, &lt;a href=&quot;atomic_005ffetch_005fadd#ATOMIC_005fFETCH_005fADD&quot;&gt;ATOMIC_FETCH_ADD&lt;/a&gt;, &lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;, &lt;a href=&quot;atomic_005fand#ATOMIC_005fAND&quot;&gt;ATOMIC_AND&lt;/a&gt;, &lt;a href=&quot;atomic_005for#ATOMIC_005fOR&quot;&gt;ATOMIC_OR&lt;/a&gt;, &lt;a href=&quot;atomic_005fxor#ATOMIC_005fXOR&quot;&gt;ATOMIC_XOR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;atomic_005fdefine#ATOMIC_005fDEFINE&quot;&gt;ATOMIC_DEFINE&lt;/a&gt;、&lt;a href=&quot;atomic_005ffetch_005fadd#ATOMIC_005fFETCH_005fADD&quot;&gt;ATOMIC_FETCH_ADD&lt;/a&gt;、&lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;、&lt;a href=&quot;atomic_005fand#ATOMIC_005fAND&quot;&gt;ATOMIC_AND&lt;/a&gt;、&lt;a href=&quot;atomic_005for#ATOMIC_005fOR&quot;&gt;ATOMIC_OR&lt;/a&gt;、&lt;a href=&quot;atomic_005fxor#ATOMIC_005fXOR&quot;&gt;ATOMIC_XOR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="38f700700644863751917c38e8eff9c704c9537c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;atomic_005fdefine#ATOMIC_005fDEFINE&quot;&gt;ATOMIC_DEFINE&lt;/a&gt;, &lt;a href=&quot;atomic_005ffetch_005fand#ATOMIC_005fFETCH_005fAND&quot;&gt;ATOMIC_FETCH_AND&lt;/a&gt;, &lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;, &lt;a href=&quot;atomic_005fadd#ATOMIC_005fADD&quot;&gt;ATOMIC_ADD&lt;/a&gt;, &lt;a href=&quot;atomic_005for#ATOMIC_005fOR&quot;&gt;ATOMIC_OR&lt;/a&gt;, &lt;a href=&quot;atomic_005fxor#ATOMIC_005fXOR&quot;&gt;ATOMIC_XOR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;atomic_005fdefine#ATOMIC_005fDEFINE&quot;&gt;ATOMIC_DEFINE&lt;/a&gt;、&lt;a href=&quot;atomic_005ffetch_005fand#ATOMIC_005fFETCH_005fAND&quot;&gt;ATOMIC_FETCH_AND&lt;/a&gt;、&lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;、&lt;a href=&quot;atomic_005fadd#ATOMIC_005fADD&quot;&gt;ATOMIC_ADD&lt;/a&gt;、&lt;a href=&quot;atomic_005for#ATOMIC_005fOR&quot;&gt;ATOMIC_OR&lt;/a&gt;、&lt;a href=&quot;atomic_005fxor#ATOMIC_005fXOR&quot;&gt;ATOMIC_XOR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89f5045c2f0f25757bf4d2bab7e262d48bbee40d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;atomic_005fdefine#ATOMIC_005fDEFINE&quot;&gt;ATOMIC_DEFINE&lt;/a&gt;, &lt;a href=&quot;atomic_005ffetch_005for#ATOMIC_005fFETCH_005fOR&quot;&gt;ATOMIC_FETCH_OR&lt;/a&gt;, &lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;, &lt;a href=&quot;atomic_005fadd#ATOMIC_005fADD&quot;&gt;ATOMIC_ADD&lt;/a&gt;, &lt;a href=&quot;#ATOMIC_005fOR&quot;&gt;ATOMIC_OR&lt;/a&gt;, &lt;a href=&quot;atomic_005fxor#ATOMIC_005fXOR&quot;&gt;ATOMIC_XOR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;atomic_005fdefine#ATOMIC_005fDEFINE&quot;&gt;ATOMIC_DEFINE&lt;/a&gt;、&lt;a href=&quot;atomic_005ffetch_005for#ATOMIC_005fFETCH_005fOR&quot;&gt;ATOMIC_FETCH_OR&lt;/a&gt;、&lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;、&lt;a href=&quot;atomic_005fadd#ATOMIC_005fADD&quot;&gt;ATOMIC_ADD&lt;/a&gt;、&lt;a href=&quot;#ATOMIC_005fOR&quot;&gt;ATOMIC_OR&lt;/a&gt;、&lt;a href=&quot;atomic_005fxor#ATOMIC_005fXOR&quot;&gt;ATOMIC_XOR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5cbfc65007204979a5d5af287fe6c5a20215dfa1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;atomic_005fdefine#ATOMIC_005fDEFINE&quot;&gt;ATOMIC_DEFINE&lt;/a&gt;, &lt;a href=&quot;atomic_005ffetch_005fxor#ATOMIC_005fFETCH_005fXOR&quot;&gt;ATOMIC_FETCH_XOR&lt;/a&gt;, &lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;, &lt;a href=&quot;atomic_005fadd#ATOMIC_005fADD&quot;&gt;ATOMIC_ADD&lt;/a&gt;, &lt;a href=&quot;atomic_005for#ATOMIC_005fOR&quot;&gt;ATOMIC_OR&lt;/a&gt;, &lt;a href=&quot;#ATOMIC_005fXOR&quot;&gt;ATOMIC_XOR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;atomic_005fdefine#ATOMIC_005fDEFINE&quot;&gt;ATOMIC_DEFINE&lt;/a&gt;、&lt;a href=&quot;atomic_005ffetch_005fxor#ATOMIC_005fFETCH_005fXOR&quot;&gt;ATOMIC_FETCH_XOR&lt;/a&gt;、&lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;、&lt;a href=&quot;atomic_005fadd#ATOMIC_005fADD&quot;&gt;ATOMIC_ADD&lt;/a&gt;、&lt;a href=&quot;atomic_005for#ATOMIC_005fOR&quot;&gt;ATOMIC_OR&lt;/a&gt;、&lt;a href=&quot;#ATOMIC_005fXOR&quot;&gt;ATOMIC_XOR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69ede20794d0e9d09bfb50d3d1371cdc4600b7b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;atomic_005fdefine#ATOMIC_005fDEFINE&quot;&gt;ATOMIC_DEFINE&lt;/a&gt;, &lt;a href=&quot;atomic_005for#ATOMIC_005fOR&quot;&gt;ATOMIC_OR&lt;/a&gt;, &lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;, &lt;a href=&quot;atomic_005ffetch_005fadd#ATOMIC_005fFETCH_005fADD&quot;&gt;ATOMIC_FETCH_ADD&lt;/a&gt;, &lt;a href=&quot;atomic_005ffetch_005fand#ATOMIC_005fFETCH_005fAND&quot;&gt;ATOMIC_FETCH_AND&lt;/a&gt;, &lt;a href=&quot;atomic_005ffetch_005fxor#ATOMIC_005fFETCH_005fXOR&quot;&gt;ATOMIC_FETCH_XOR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;atomic_005fdefine#ATOMIC_005fDEFINE&quot;&gt;ATOMIC_DEFINE&lt;/a&gt;、&lt;a href=&quot;atomic_005for#ATOMIC_005fOR&quot;&gt;ATOMIC_OR&lt;/a&gt;、&lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;、&lt;a href=&quot;atomic_005ffetch_005fadd#ATOMIC_005fFETCH_005fADD&quot;&gt;ATOMIC_FETCH_ADD&lt;/a&gt;、&lt;a href=&quot;atomic_005ffetch_005fand#ATOMIC_005fFETCH_005fAND&quot;&gt;ATOMIC_FETCH_AND&lt;/a&gt;、&lt;a href=&quot;atomic_005ffetch_005fxor#ATOMIC_005fFETCH_005fXOR&quot;&gt;ATOMIC_FETCH_XOR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc8f14dfe8b1e1503664e2f3de611015ca8e9fb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;atomic_005fdefine#ATOMIC_005fDEFINE&quot;&gt;ATOMIC_DEFINE&lt;/a&gt;, &lt;a href=&quot;atomic_005fref#ATOMIC_005fREF&quot;&gt;ATOMIC_REF&lt;/a&gt;, &lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;atomic_005fdefine#ATOMIC_005fDEFINE&quot;&gt;ATOMIC_DEFINE&lt;/a&gt;、&lt;a href=&quot;atomic_005fref#ATOMIC_005fREF&quot;&gt;ATOMIC_REF&lt;/a&gt;、&lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1cee3720fd385e7a40a67217c409a392df6438e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;atomic_005fdefine#ATOMIC_005fDEFINE&quot;&gt;ATOMIC_DEFINE&lt;/a&gt;, &lt;a href=&quot;atomic_005fxor#ATOMIC_005fXOR&quot;&gt;ATOMIC_XOR&lt;/a&gt;, &lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;, &lt;a href=&quot;atomic_005ffetch_005fadd#ATOMIC_005fFETCH_005fADD&quot;&gt;ATOMIC_FETCH_ADD&lt;/a&gt;, &lt;a href=&quot;atomic_005ffetch_005fand#ATOMIC_005fFETCH_005fAND&quot;&gt;ATOMIC_FETCH_AND&lt;/a&gt;, &lt;a href=&quot;atomic_005ffetch_005for#ATOMIC_005fFETCH_005fOR&quot;&gt;ATOMIC_FETCH_OR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;atomic_005fdefine#ATOMIC_005fDEFINE&quot;&gt;ATOMIC_DEFINE&lt;/a&gt;、&lt;a href=&quot;atomic_005fxor#ATOMIC_005fXOR&quot;&gt;ATOMIC_XOR&lt;/a&gt;、&lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;、&lt;a href=&quot;atomic_005ffetch_005fadd#ATOMIC_005fFETCH_005fADD&quot;&gt;ATOMIC_FETCH_ADD&lt;/a&gt;、&lt;a href=&quot;atomic_005ffetch_005fand#ATOMIC_005fFETCH_005fAND&quot;&gt;ATOMIC_FETCH_AND&lt;/a&gt;、&lt;a href=&quot;atomic_005ffetch_005for#ATOMIC_005fFETCH_005fOR&quot;&gt;ATOMIC_FETCH_OR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57ea4f72a0be11882c29fa94a6b6d15c8c35bf4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;atomic_005fref#ATOMIC_005fREF&quot;&gt;ATOMIC_REF&lt;/a&gt;, &lt;a href=&quot;atomic_005fcas#ATOMIC_005fCAS&quot;&gt;ATOMIC_CAS&lt;/a&gt;, &lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;, &lt;a href=&quot;atomic_005fadd#ATOMIC_005fADD&quot;&gt;ATOMIC_ADD&lt;/a&gt;, &lt;a href=&quot;atomic_005fand#ATOMIC_005fAND&quot;&gt;ATOMIC_AND&lt;/a&gt;, &lt;a href=&quot;atomic_005for#ATOMIC_005fOR&quot;&gt;ATOMIC_OR&lt;/a&gt;, &lt;a href=&quot;atomic_005fxor#ATOMIC_005fXOR&quot;&gt;ATOMIC_XOR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;atomic_005fref#ATOMIC_005fREF&quot;&gt;ATOMIC_REF&lt;/a&gt;、&lt;a href=&quot;atomic_005fcas#ATOMIC_005fCAS&quot;&gt;ATOMIC_CAS&lt;/a&gt;、&lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;、&lt;a href=&quot;atomic_005fadd#ATOMIC_005fADD&quot;&gt;ATOMIC_ADD&lt;/a&gt;、&lt;a href=&quot;atomic_005fand#ATOMIC_005fAND&quot;&gt;ATOMIC_AND&lt;/a&gt;、&lt;a href=&quot;atomic_005for#ATOMIC_005fOR&quot;&gt;ATOMIC_OR&lt;/a&gt;、&lt;a href=&quot;atomic_005fxor#ATOMIC_005fXOR&quot;&gt;ATOMIC_XOR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7a32b4c3d234583040884c92166edd0304cee35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bge#BGE&quot;&gt;BGE&lt;/a&gt;, &lt;a href=&quot;bgt#BGT&quot;&gt;BGT&lt;/a&gt;, &lt;a href=&quot;ble#BLE&quot;&gt;BLE&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;bge#BGE&quot;&gt;BGE&lt;/a&gt;、&lt;a href=&quot;bgt#BGT&quot;&gt;BGT&lt;/a&gt;、&lt;a href=&quot;ble#BLE&quot;&gt;BLE&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62808544fd83637a6eb94c8391a568a27bbe8b33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bge#BGE&quot;&gt;BGE&lt;/a&gt;, &lt;a href=&quot;ble#BLE&quot;&gt;BLE&lt;/a&gt;, &lt;a href=&quot;blt#BLT&quot;&gt;BLT&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;bge#BGE&quot;&gt;BGE&lt;/a&gt;、&lt;a href=&quot;ble#BLE&quot;&gt;BLE&lt;/a&gt;、&lt;a href=&quot;blt#BLT&quot;&gt;BLT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cdf6da1d69475281643fffc0f28f1e8c19a3a53c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bgt#BGT&quot;&gt;BGT&lt;/a&gt;, &lt;a href=&quot;bge#BGE&quot;&gt;BGE&lt;/a&gt;, &lt;a href=&quot;blt#BLT&quot;&gt;BLT&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;bgt#BGT&quot;&gt;BGT&lt;/a&gt;、&lt;a href=&quot;bge#BGE&quot;&gt;BGE&lt;/a&gt;、&lt;a href=&quot;blt#BLT&quot;&gt;BLT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8749dd78f2e55b584f87bce850bfa42a6c9300b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bgt#BGT&quot;&gt;BGT&lt;/a&gt;, &lt;a href=&quot;ble#BLE&quot;&gt;BLE&lt;/a&gt;, &lt;a href=&quot;blt#BLT&quot;&gt;BLT&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;bgt#BGT&quot;&gt;BGT&lt;/a&gt;、&lt;a href=&quot;ble#BLE&quot;&gt;BLE&lt;/a&gt;、&lt;a href=&quot;blt#BLT&quot;&gt;BLT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e6ee2e3b1e7ee1bd07ae76641f70bdd89d3c024" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bit_005fsize#BIT_005fSIZE&quot;&gt;BIT_SIZE&lt;/a&gt;, &lt;a href=&quot;ibclr#IBCLR&quot;&gt;IBCLR&lt;/a&gt;, &lt;a href=&quot;ibset#IBSET&quot;&gt;IBSET&lt;/a&gt;, &lt;a href=&quot;iand#IAND&quot;&gt;IAND&lt;/a&gt;, &lt;a href=&quot;ior#IOR&quot;&gt;IOR&lt;/a&gt;, &lt;a href=&quot;ieor#IEOR&quot;&gt;IEOR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;bit_005fsize#BIT_005fSIZE&quot;&gt;BIT_SIZE&lt;/a&gt;、&lt;a href=&quot;ibclr#IBCLR&quot;&gt;IBCLR&lt;/a&gt;、&lt;a href=&quot;ibset#IBSET&quot;&gt;IBSET&lt;/a&gt;、&lt;a href=&quot;iand#IAND&quot;&gt;IAND&lt;/a&gt;、&lt;a href=&quot;ior#IOR&quot;&gt;IOR&lt;/a&gt;、&lt;a href=&quot;ieor#IEOR&quot;&gt;IEOR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9da6fce59bb4839cb9ad4c522dad8604caa752d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bit_005fsize#BIT_005fSIZE&quot;&gt;BIT_SIZE&lt;/a&gt;, &lt;a href=&quot;leadz#LEADZ&quot;&gt;LEADZ&lt;/a&gt;, &lt;a href=&quot;poppar#POPPAR&quot;&gt;POPPAR&lt;/a&gt;, &lt;a href=&quot;popcnt#POPCNT&quot;&gt;POPCNT&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;bit_005fsize#BIT_005fSIZE&quot;&gt;BIT_SIZE&lt;/a&gt;、&lt;a href=&quot;leadz#LEADZ&quot;&gt;LEADZ&lt;/a&gt;、&lt;a href=&quot;poppar#POPPAR&quot;&gt;POPPAR&lt;/a&gt;、&lt;a href=&quot;popcnt#POPCNT&quot;&gt;POPCNT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9081f9b9038e06195a86ffcbf10dfcc833c211b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bit_005fsize#BIT_005fSIZE&quot;&gt;BIT_SIZE&lt;/a&gt;, &lt;a href=&quot;trailz#TRAILZ&quot;&gt;TRAILZ&lt;/a&gt;, &lt;a href=&quot;popcnt#POPCNT&quot;&gt;POPCNT&lt;/a&gt;, &lt;a href=&quot;poppar#POPPAR&quot;&gt;POPPAR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;bit_005fsize#BIT_005fSIZE&quot;&gt;BIT_SIZE&lt;/a&gt;、&lt;a href=&quot;trailz#TRAILZ&quot;&gt;TRAILZ&lt;/a&gt;、&lt;a href=&quot;popcnt#POPCNT&quot;&gt;POPCNT&lt;/a&gt;、&lt;a href=&quot;poppar#POPPAR&quot;&gt;POPPAR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7228a162a0196ce9bbbd220e434a9c1e0655aa0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;c_005fassociated#C_005fASSOCIATED&quot;&gt;C_ASSOCIATED&lt;/a&gt;, &lt;a href=&quot;c_005ffunloc#C_005fFUNLOC&quot;&gt;C_FUNLOC&lt;/a&gt;, &lt;a href=&quot;c_005ff_005fpointer#C_005fF_005fPOINTER&quot;&gt;C_F_POINTER&lt;/a&gt;, &lt;a href=&quot;c_005ff_005fprocpointer#C_005fF_005fPROCPOINTER&quot;&gt;C_F_PROCPOINTER&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;c_005fassociated#C_005fASSOCIATED&quot;&gt;C_ASSOCIATED&lt;/a&gt;、&lt;a href=&quot;c_005ffunloc#C_005fFUNLOC&quot;&gt;C_FUNLOC&lt;/a&gt;、&lt;a href=&quot;c_005ff_005fpointer#C_005fF_005fPOINTER&quot;&gt;C_F_POINTER&lt;/a&gt;、&lt;a href=&quot;c_005ff_005fprocpointer#C_005fF_005fPROCPOINTER&quot;&gt;C_F_PROCPOINTER&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3fe10df6bc2de5104a1ff6e0a3d27dc868a8b8fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;c_005fassociated#C_005fASSOCIATED&quot;&gt;C_ASSOCIATED&lt;/a&gt;, &lt;a href=&quot;c_005floc#C_005fLOC&quot;&gt;C_LOC&lt;/a&gt;, &lt;a href=&quot;c_005ff_005fpointer#C_005fF_005fPOINTER&quot;&gt;C_F_POINTER&lt;/a&gt;, &lt;a href=&quot;c_005ff_005fprocpointer#C_005fF_005fPROCPOINTER&quot;&gt;C_F_PROCPOINTER&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;c_005fassociated#C_005fASSOCIATED&quot;&gt;C_ASSOCIATED&lt;/a&gt;、&lt;a href=&quot;c_005floc#C_005fLOC&quot;&gt;C_LOC&lt;/a&gt;、&lt;a href=&quot;c_005ff_005fpointer#C_005fF_005fPOINTER&quot;&gt;C_F_POINTER&lt;/a&gt;、&lt;a href=&quot;c_005ff_005fprocpointer#C_005fF_005fPROCPOINTER&quot;&gt;C_F_PROCPOINTER&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c227a5fcc12080fddb9841aaed05156fe9227a1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;c_005floc#C_005fLOC&quot;&gt;C_LOC&lt;/a&gt;, &lt;a href=&quot;c_005ff_005fpointer#C_005fF_005fPOINTER&quot;&gt;C_F_POINTER&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;c_005floc#C_005fLOC&quot;&gt;C_LOC&lt;/a&gt;、&lt;a href=&quot;c_005ff_005fpointer#C_005fF_005fPOINTER&quot;&gt;C_F_POINTER&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ca6a8c0e7031812d68236e5f929cdf0a17b172d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;c_005floc#C_005fLOC&quot;&gt;C_LOC&lt;/a&gt;, &lt;a href=&quot;c_005ff_005fprocpointer#C_005fF_005fPROCPOINTER&quot;&gt;C_F_PROCPOINTER&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;c_005floc#C_005fLOC&quot;&gt;C_LOC&lt;/a&gt;、&lt;a href=&quot;c_005ff_005fprocpointer#C_005fF_005fPROCPOINTER&quot;&gt;C_F_PROCPOINTER&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f4b3b558d6cbdafd13901ddab927d3ee2f93766a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;c_005floc#C_005fLOC&quot;&gt;C_LOC&lt;/a&gt;, &lt;a href=&quot;c_005ffunloc#C_005fFUNLOC&quot;&gt;C_FUNLOC&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;c_005floc#C_005fLOC&quot;&gt;C_LOC&lt;/a&gt;、&lt;a href=&quot;c_005ffunloc#C_005fFUNLOC&quot;&gt;C_FUNLOC&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb1b3ea478d3e342eb081656b7b3bdb372e44504" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;c_005fsizeof#C_005fSIZEOF&quot;&gt;C_SIZEOF&lt;/a&gt;, &lt;a href=&quot;sizeof#SIZEOF&quot;&gt;SIZEOF&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;c_005fsizeof#C_005fSIZEOF&quot;&gt;C_SIZEOF&lt;/a&gt;、&lt;a href=&quot;sizeof#SIZEOF&quot;&gt;SIZEOF&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="83ea2da1c4759591d880594d8997a0d392b71661" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;c_005fsizeof#C_005fSIZEOF&quot;&gt;C_SIZEOF&lt;/a&gt;, &lt;a href=&quot;storage_005fsize#STORAGE_005fSIZE&quot;&gt;STORAGE_SIZE&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;c_005fsizeof#C_005fSIZEOF&quot;&gt;C_SIZEOF&lt;/a&gt;、&lt;a href=&quot;storage_005fsize#STORAGE_005fSIZE&quot;&gt;STORAGE_SIZE&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd3fa58c4f4b4b3df9f0e4562ddc64fdb21c6c62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ceiling#CEILING&quot;&gt;CEILING&lt;/a&gt;, &lt;a href=&quot;floor#FLOOR&quot;&gt;FLOOR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ceiling#CEILING&quot;&gt;天井&lt;/a&gt;、&lt;a href=&quot;floor#FLOOR&quot;&gt;床&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ca3a9891a8eba7d46f8123717c525d6862e7df8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ceiling#CEILING&quot;&gt;CEILING&lt;/a&gt;, &lt;a href=&quot;nint#NINT&quot;&gt;NINT&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ceiling#CEILING&quot;&gt;天井&lt;/a&gt;、&lt;a href=&quot;nint#NINT&quot;&gt;NINT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="73d379f29a8523fdd5be52bd8c685cdbbfa03fcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;char#CHAR&quot;&gt;CHAR&lt;/a&gt;, &lt;a href=&quot;iachar#IACHAR&quot;&gt;IACHAR&lt;/a&gt;, &lt;a href=&quot;ichar#ICHAR&quot;&gt;ICHAR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;char#CHAR&quot;&gt;CHAR&lt;/a&gt;、&lt;a href=&quot;iachar#IACHAR&quot;&gt;IACHAR&lt;/a&gt;、&lt;a href=&quot;ichar#ICHAR&quot;&gt;ICHAR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d885b6952199c0a9054beddcd4e44e621c740e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;co_005fmax#CO_005fMAX&quot;&gt;CO_MAX&lt;/a&gt;, &lt;a href=&quot;co_005fmin#CO_005fMIN&quot;&gt;CO_MIN&lt;/a&gt;, &lt;a href=&quot;co_005freduce#CO_005fREDUCE&quot;&gt;CO_REDUCE&lt;/a&gt;, &lt;a href=&quot;co_005fbroadcast#CO_005fBROADCAST&quot;&gt;CO_BROADCAST&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;co_005fmax#CO_005fMAX&quot;&gt;CO_MAX&lt;/a&gt;、&lt;a href=&quot;co_005fmin#CO_005fMIN&quot;&gt;CO_MIN&lt;/a&gt;、&lt;a href=&quot;co_005freduce#CO_005fREDUCE&quot;&gt;CO_REDUCE&lt;/a&gt;、&lt;a href=&quot;co_005fbroadcast#CO_005fBROADCAST&quot;&gt;CO_BROADCAST&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff9840ab819e772c57f4952f9b26d59950cf8584" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;co_005fmax#CO_005fMAX&quot;&gt;CO_MAX&lt;/a&gt;, &lt;a href=&quot;co_005fmin#CO_005fMIN&quot;&gt;CO_MIN&lt;/a&gt;, &lt;a href=&quot;co_005fsum#CO_005fSUM&quot;&gt;CO_SUM&lt;/a&gt;, &lt;a href=&quot;co_005freduce#CO_005fREDUCE&quot;&gt;CO_REDUCE&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;co_005fmax#CO_005fMAX&quot;&gt;CO_MAX&lt;/a&gt;、&lt;a href=&quot;co_005fmin#CO_005fMIN&quot;&gt;CO_MIN&lt;/a&gt;、&lt;a href=&quot;co_005fsum#CO_005fSUM&quot;&gt;CO_SUM&lt;/a&gt;、&lt;a href=&quot;co_005freduce#CO_005fREDUCE&quot;&gt;CO_REDUCE&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91efd3d975fcffba060250e3ae6b6c69ade8463d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;co_005fmax#CO_005fMAX&quot;&gt;CO_MAX&lt;/a&gt;, &lt;a href=&quot;co_005fsum#CO_005fSUM&quot;&gt;CO_SUM&lt;/a&gt;, &lt;a href=&quot;co_005freduce#CO_005fREDUCE&quot;&gt;CO_REDUCE&lt;/a&gt;, &lt;a href=&quot;co_005fbroadcast#CO_005fBROADCAST&quot;&gt;CO_BROADCAST&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;co_005fmax#CO_005fMAX&quot;&gt;CO_MAX&lt;/a&gt;、&lt;a href=&quot;co_005fsum#CO_005fSUM&quot;&gt;CO_SUM&lt;/a&gt;、&lt;a href=&quot;co_005freduce#CO_005fREDUCE&quot;&gt;CO_REDUCE&lt;/a&gt;、&lt;a href=&quot;co_005fbroadcast#CO_005fBROADCAST&quot;&gt;CO_BROADCAST&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a44ed95d7ce6b4235958294c0287c6989405bd40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;co_005fmin#CO_005fMIN&quot;&gt;CO_MIN&lt;/a&gt;, &lt;a href=&quot;co_005fmax#CO_005fMAX&quot;&gt;CO_MAX&lt;/a&gt;, &lt;a href=&quot;co_005fsum#CO_005fSUM&quot;&gt;CO_SUM&lt;/a&gt;, &lt;a href=&quot;co_005fbroadcast#CO_005fBROADCAST&quot;&gt;CO_BROADCAST&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;co_005fmin#CO_005fMIN&quot;&gt;CO_MIN&lt;/a&gt;、&lt;a href=&quot;co_005fmax#CO_005fMAX&quot;&gt;CO_MAX&lt;/a&gt;、&lt;a href=&quot;co_005fsum#CO_005fSUM&quot;&gt;CO_SUM&lt;/a&gt;、&lt;a href=&quot;co_005fbroadcast#CO_005fBROADCAST&quot;&gt;CO_BROADCAST&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3f710f8aa2b5b54829eb715bb7443b977c83651" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;co_005fmin#CO_005fMIN&quot;&gt;CO_MIN&lt;/a&gt;, &lt;a href=&quot;co_005fsum#CO_005fSUM&quot;&gt;CO_SUM&lt;/a&gt;, &lt;a href=&quot;co_005freduce#CO_005fREDUCE&quot;&gt;CO_REDUCE&lt;/a&gt;, &lt;a href=&quot;co_005fbroadcast#CO_005fBROADCAST&quot;&gt;CO_BROADCAST&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;co_005fmin#CO_005fMIN&quot;&gt;CO_MIN&lt;/a&gt;、&lt;a href=&quot;co_005fsum#CO_005fSUM&quot;&gt;CO_SUM&lt;/a&gt;、&lt;a href=&quot;co_005freduce#CO_005fREDUCE&quot;&gt;CO_REDUCE&lt;/a&gt;、&lt;a href=&quot;co_005fbroadcast#CO_005fBROADCAST&quot;&gt;CO_BROADCAST&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0cc8c0dc466fbf69c028e51abba35a4b42c54a85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;compiler_005foptions#COMPILER_005fOPTIONS&quot;&gt;COMPILER_OPTIONS&lt;/a&gt;, &lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;compiler_005foptions#COMPILER_005fOPTIONS&quot;&gt;COMPILER_OPTIONS&lt;/a&gt;、&lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9cf2a7ba5a8ed52cf5d4d725a8b05686e22c2c3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;compiler_005fversion#COMPILER_005fVERSION&quot;&gt;COMPILER_VERSION&lt;/a&gt;, &lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;compiler_005fversion#COMPILER_005fVERSION&quot;&gt;COMPILER_VERSION&lt;/a&gt;、&lt;a href=&quot;iso_005ffortran_005fenv#ISO_005fFORTRAN_005fENV&quot;&gt;ISO_FORTRAN_ENV&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="70c346e0b646336f1105b728433c422e425966fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cpu_005ftime#CPU_005fTIME&quot;&gt;CPU_TIME&lt;/a&gt;, &lt;a href=&quot;system_005fclock#SYSTEM_005fCLOCK&quot;&gt;SYSTEM_CLOCK&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;cpu_005ftime#CPU_005fTIME&quot;&gt;CPU_TIME&lt;/a&gt;、&lt;a href=&quot;system_005fclock#SYSTEM_005fCLOCK&quot;&gt;SYSTEM_CLOCK&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f4e67dd17fbb833da6139e8ce9e38f4b47f84f0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ctime#CTIME&quot;&gt;CTIME&lt;/a&gt;, &lt;a href=&quot;gmtime#GMTIME&quot;&gt;GMTIME&lt;/a&gt;, &lt;a href=&quot;ltime#LTIME&quot;&gt;LTIME&lt;/a&gt;, &lt;a href=&quot;#MCLOCK&quot;&gt;MCLOCK&lt;/a&gt;, &lt;a href=&quot;time#TIME&quot;&gt;TIME&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ctime#CTIME&quot;&gt;CTIME&lt;/a&gt;、&lt;a href=&quot;gmtime#GMTIME&quot;&gt;GMTIME&lt;/a&gt;、&lt;a href=&quot;ltime#LTIME&quot;&gt;LTIME&lt;/a&gt;、&lt;a href=&quot;#MCLOCK&quot;&gt;MCLOCK&lt;/a&gt;、&lt;a href=&quot;time#TIME&quot;&gt;TIME&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a59760819ab6767161f9e615a62821fb7808b9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ctime#CTIME&quot;&gt;CTIME&lt;/a&gt;, &lt;a href=&quot;gmtime#GMTIME&quot;&gt;GMTIME&lt;/a&gt;, &lt;a href=&quot;ltime#LTIME&quot;&gt;LTIME&lt;/a&gt;, &lt;a href=&quot;mclock#MCLOCK&quot;&gt;MCLOCK&lt;/a&gt;, &lt;a href=&quot;time8#TIME8&quot;&gt;TIME8&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ctime#CTIME&quot;&gt;CTIME&lt;/a&gt;、&lt;a href=&quot;gmtime#GMTIME&quot;&gt;GMTIME&lt;/a&gt;、&lt;a href=&quot;ltime#LTIME&quot;&gt;LTIME&lt;/a&gt;、&lt;a href=&quot;mclock#MCLOCK&quot;&gt;MCLOCK&lt;/a&gt;、&lt;a href=&quot;time8#TIME8&quot;&gt;TIME8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="263fd304f31507d306578d2754b0bed39f7a7c2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;date_005fand_005ftime#DATE_005fAND_005fTIME&quot;&gt;DATE_AND_TIME&lt;/a&gt;, &lt;a href=&quot;cpu_005ftime#CPU_005fTIME&quot;&gt;CPU_TIME&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;date_005fand_005ftime#DATE_005fAND_005fTIME&quot;&gt;DATE_AND_TIME&lt;/a&gt;、&lt;a href=&quot;cpu_005ftime#CPU_005fTIME&quot;&gt;CPU_TIME&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba6ac47db5037ec917b31d8436e2e632da763db0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;date_005fand_005ftime#DATE_005fAND_005fTIME&quot;&gt;DATE_AND_TIME&lt;/a&gt;, &lt;a href=&quot;ctime#CTIME&quot;&gt;CTIME&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;date_005fand_005ftime#DATE_005fAND_005fTIME&quot;&gt;DATE_AND_TIME&lt;/a&gt;、&lt;a href=&quot;ctime#CTIME&quot;&gt;CTIME&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9574df458de5197224c61e9fb600df9eeae5603a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;date_005fand_005ftime#DATE_005fAND_005fTIME&quot;&gt;DATE_AND_TIME&lt;/a&gt;, &lt;a href=&quot;ctime#CTIME&quot;&gt;CTIME&lt;/a&gt;, &lt;a href=&quot;gmtime#GMTIME&quot;&gt;GMTIME&lt;/a&gt;, &lt;a href=&quot;ltime#LTIME&quot;&gt;LTIME&lt;/a&gt;, &lt;a href=&quot;mclock#MCLOCK&quot;&gt;MCLOCK&lt;/a&gt;, &lt;a href=&quot;time8#TIME8&quot;&gt;TIME8&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;date_005fand_005ftime#DATE_005fAND_005fTIME&quot;&gt;DATE_AND_TIME&lt;/a&gt;、&lt;a href=&quot;ctime#CTIME&quot;&gt;CTIME&lt;/a&gt;、&lt;a href=&quot;gmtime#GMTIME&quot;&gt;GMTIME&lt;/a&gt;、&lt;a href=&quot;ltime#LTIME&quot;&gt;LTIME&lt;/a&gt;、&lt;a href=&quot;mclock#MCLOCK&quot;&gt;MCLOCK&lt;/a&gt;、&lt;a href=&quot;time8#TIME8&quot;&gt;TIME8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed5bbb869cc25bb7594acb58897a2eb60fcb9d74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;date_005fand_005ftime#DATE_005fAND_005fTIME&quot;&gt;DATE_AND_TIME&lt;/a&gt;, &lt;a href=&quot;ctime#CTIME&quot;&gt;CTIME&lt;/a&gt;, &lt;a href=&quot;gmtime#GMTIME&quot;&gt;GMTIME&lt;/a&gt;, &lt;a href=&quot;ltime#LTIME&quot;&gt;LTIME&lt;/a&gt;, &lt;a href=&quot;mclock8#MCLOCK8&quot;&gt;MCLOCK8&lt;/a&gt;, &lt;a href=&quot;time#TIME&quot;&gt;TIME&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;date_005fand_005ftime#DATE_005fAND_005fTIME&quot;&gt;DATE_AND_TIME&lt;/a&gt;、&lt;a href=&quot;ctime#CTIME&quot;&gt;CTIME&lt;/a&gt;、&lt;a href=&quot;gmtime#GMTIME&quot;&gt;GMTIME&lt;/a&gt;、&lt;a href=&quot;ltime#LTIME&quot;&gt;LTIME&lt;/a&gt;、&lt;a href=&quot;mclock8#MCLOCK8&quot;&gt;MCLOCK8&lt;/a&gt;、&lt;a href=&quot;time#TIME&quot;&gt;TIME&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bcb87565b4ba4a97ddc6941158d7126991aa4734" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;date_005fand_005ftime#DATE_005fAND_005fTIME&quot;&gt;DATE_AND_TIME&lt;/a&gt;, &lt;a href=&quot;ctime#CTIME&quot;&gt;CTIME&lt;/a&gt;, &lt;a href=&quot;gmtime#GMTIME&quot;&gt;GMTIME&lt;/a&gt;, &lt;a href=&quot;time#TIME&quot;&gt;TIME&lt;/a&gt;, &lt;a href=&quot;time8#TIME8&quot;&gt;TIME8&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;date_005fand_005ftime#DATE_005fAND_005fTIME&quot;&gt;DATE_AND_TIME&lt;/a&gt;、&lt;a href=&quot;ctime#CTIME&quot;&gt;CTIME&lt;/a&gt;、&lt;a href=&quot;gmtime#GMTIME&quot;&gt;GMTIME&lt;/a&gt;、&lt;a href=&quot;time#TIME&quot;&gt;TIME&lt;/a&gt;、&lt;a href=&quot;time8#TIME8&quot;&gt;TIME8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="afb3516201eb2d2dfbccec5b135695f8bda27c3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;date_005fand_005ftime#DATE_005fAND_005fTIME&quot;&gt;DATE_AND_TIME&lt;/a&gt;, &lt;a href=&quot;ctime#CTIME&quot;&gt;CTIME&lt;/a&gt;, &lt;a href=&quot;ltime#LTIME&quot;&gt;LTIME&lt;/a&gt;, &lt;a href=&quot;time#TIME&quot;&gt;TIME&lt;/a&gt;, &lt;a href=&quot;time8#TIME8&quot;&gt;TIME8&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;date_005fand_005ftime#DATE_005fAND_005fTIME&quot;&gt;DATE_AND_TIME&lt;/a&gt;、&lt;a href=&quot;ctime#CTIME&quot;&gt;CTIME&lt;/a&gt;、&lt;a href=&quot;ltime#LTIME&quot;&gt;LTIME&lt;/a&gt;、&lt;a href=&quot;time#TIME&quot;&gt;TIME&lt;/a&gt;、&lt;a href=&quot;time8#TIME8&quot;&gt;TIME8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c64a9b72261151a363fa3435bd72f9153aae87e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;date_005fand_005ftime#DATE_005fAND_005fTIME&quot;&gt;DATE_AND_TIME&lt;/a&gt;, &lt;a href=&quot;gmtime#GMTIME&quot;&gt;GMTIME&lt;/a&gt;, &lt;a href=&quot;ltime#LTIME&quot;&gt;LTIME&lt;/a&gt;, &lt;a href=&quot;time#TIME&quot;&gt;TIME&lt;/a&gt;, &lt;a href=&quot;time8#TIME8&quot;&gt;TIME8&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;date_005fand_005ftime#DATE_005fAND_005fTIME&quot;&gt;DATE_AND_TIME&lt;/a&gt;、&lt;a href=&quot;gmtime#GMTIME&quot;&gt;GMTIME&lt;/a&gt;、&lt;a href=&quot;ltime#LTIME&quot;&gt;LTIME&lt;/a&gt;、&lt;a href=&quot;time#TIME&quot;&gt;TIME&lt;/a&gt;、&lt;a href=&quot;time8#TIME8&quot;&gt;TIME8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b184347d55e7236c78e23c38df711ac8239a9953" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;execute_005fcommand_005fline#EXECUTE_005fCOMMAND_005fLINE&quot;&gt;EXECUTE_COMMAND_LINE&lt;/a&gt;, which is part of the Fortran 2008 standard and should considered in new code for future portability.</source>
          <target state="translated">&lt;a href=&quot;execute_005fcommand_005fline#EXECUTE_005fCOMMAND_005fLINE&quot;&gt;EXECUTE_COMMAND_LINE&lt;/a&gt;は、Fortran 2008標準の一部であり、将来の移植性のために新しいコードで検討する必要があります。</target>
        </trans-unit>
        <trans-unit id="47df2f41a48ec91366898dc90ac25bec240f6087" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exit#EXIT&quot;&gt;EXIT&lt;/a&gt;, &lt;a href=&quot;kill#KILL&quot;&gt;KILL&lt;/a&gt;, &lt;a href=&quot;backtrace#BACKTRACE&quot;&gt;BACKTRACE&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;exit#EXIT&quot;&gt;終了&lt;/a&gt;、&lt;a href=&quot;kill#KILL&quot;&gt;キル&lt;/a&gt;、&lt;a href=&quot;backtrace#BACKTRACE&quot;&gt;バックトレース&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd5e6e6e90b682d66a41168dc1502b419fb97348" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fget#FGET&quot;&gt;FGET&lt;/a&gt;, &lt;a href=&quot;fput#FPUT&quot;&gt;FPUT&lt;/a&gt;, &lt;a href=&quot;fputc#FPUTC&quot;&gt;FPUTC&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;fget#FGET&quot;&gt;FGET&lt;/a&gt;、&lt;a href=&quot;fput#FPUT&quot;&gt;FPUT&lt;/a&gt;、&lt;a href=&quot;fputc#FPUTC&quot;&gt;FPUTC&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd8054436c25450ff52c089475bea5200a046e14" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fgetc#FGETC&quot;&gt;FGETC&lt;/a&gt;, &lt;a href=&quot;fput#FPUT&quot;&gt;FPUT&lt;/a&gt;, &lt;a href=&quot;fputc#FPUTC&quot;&gt;FPUTC&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;fgetc#FGETC&quot;&gt;FGETC&lt;/a&gt;、&lt;a href=&quot;fput#FPUT&quot;&gt;FPUT&lt;/a&gt;、&lt;a href=&quot;fputc#FPUTC&quot;&gt;FPUTC&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11bd9c34d1363a3d05aaa31395369451c8d078ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;floor#FLOOR&quot;&gt;FLOOR&lt;/a&gt;, &lt;a href=&quot;nint#NINT&quot;&gt;NINT&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;floor#FLOOR&quot;&gt;FLOOR&lt;/a&gt;、&lt;a href=&quot;nint#NINT&quot;&gt;NINT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="017846bbfaa37eaa62ff725c21bbad19002e26d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fput#FPUT&quot;&gt;FPUT&lt;/a&gt;, &lt;a href=&quot;fget#FGET&quot;&gt;FGET&lt;/a&gt;, &lt;a href=&quot;fgetc#FGETC&quot;&gt;FGETC&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;fput#FPUT&quot;&gt;FPUT&lt;/a&gt;、&lt;a href=&quot;fget#FGET&quot;&gt;FGET&lt;/a&gt;、&lt;a href=&quot;fgetc#FGETC&quot;&gt;FGETC&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a08c1785de756d65a7b7616ad9a20dcf34aa09df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fputc#FPUTC&quot;&gt;FPUTC&lt;/a&gt;, &lt;a href=&quot;fget#FGET&quot;&gt;FGET&lt;/a&gt;, &lt;a href=&quot;fgetc#FGETC&quot;&gt;FGETC&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;fputc#FPUTC&quot;&gt;FPUTC&lt;/a&gt;、&lt;a href=&quot;fget#FGET&quot;&gt;FGET&lt;/a&gt;、&lt;a href=&quot;fgetc#FGETC&quot;&gt;FGETC&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f3433a0e1a55d9c769ef588c49ab6e748cd6d9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;get_005fcommand#GET_005fCOMMAND&quot;&gt;GET_COMMAND&lt;/a&gt;, &lt;a href=&quot;command_005fargument_005fcount#COMMAND_005fARGUMENT_005fCOUNT&quot;&gt;COMMAND_ARGUMENT_COUNT&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;get_005fcommand#GET_005fCOMMAND&quot;&gt;GET_COMMAND&lt;/a&gt;、&lt;a href=&quot;command_005fargument_005fcount#COMMAND_005fARGUMENT_005fCOUNT&quot;&gt;COMMAND_ARGUMENT_COUNT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e35f60cdfe5d53fb030f0170bc0f639de7484e80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;get_005fcommand#GET_005fCOMMAND&quot;&gt;GET_COMMAND&lt;/a&gt;, &lt;a href=&quot;get_005fcommand_005fargument#GET_005fCOMMAND_005fARGUMENT&quot;&gt;GET_COMMAND_ARGUMENT&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;get_005fcommand#GET_005fCOMMAND&quot;&gt;GET_COMMAND&lt;/a&gt;、&lt;a href=&quot;get_005fcommand_005fargument#GET_005fCOMMAND_005fARGUMENT&quot;&gt;GET_COMMAND_ARGUMENT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e11dbcb79ce53dfb986b80c0a08ed9a03207c1ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;get_005fcommand_005fargument#GET_005fCOMMAND_005fARGUMENT&quot;&gt;GET_COMMAND_ARGUMENT&lt;/a&gt;, &lt;a href=&quot;command_005fargument_005fcount#COMMAND_005fARGUMENT_005fCOUNT&quot;&gt;COMMAND_ARGUMENT_COUNT&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;get_005fcommand_005fargument#GET_005fCOMMAND_005fARGUMENT&quot;&gt;GET_COMMAND_ARGUMENT&lt;/a&gt;、&lt;a href=&quot;command_005fargument_005fcount#COMMAND_005fARGUMENT_005fCOUNT&quot;&gt;COMMAND_ARGUMENT_COUNT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="658e625380b70ddbbe7b62e5f3fe6e61627ed2fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;getgid#GETGID&quot;&gt;GETGID&lt;/a&gt;, &lt;a href=&quot;getuid#GETUID&quot;&gt;GETUID&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;getgid#GETGID&quot;&gt;GETGID&lt;/a&gt;、&lt;a href=&quot;getuid#GETUID&quot;&gt;GETUID&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc7faf06df3becfbaeefe1430546361f7557d592" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;getpid#GETPID&quot;&gt;GETPID&lt;/a&gt;, &lt;a href=&quot;getlog#GETLOG&quot;&gt;GETLOG&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;getpid#GETPID&quot;&gt;GETPID&lt;/a&gt;、&lt;a href=&quot;getlog#GETLOG&quot;&gt;GETLOG&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c9d6911154773d4163d7c1271ff2a2ecec011f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;getpid#GETPID&quot;&gt;GETPID&lt;/a&gt;, &lt;a href=&quot;getuid#GETUID&quot;&gt;GETUID&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;getpid#GETPID&quot;&gt;GETPID&lt;/a&gt;、&lt;a href=&quot;getuid#GETUID&quot;&gt;GETUID&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5310f89357e3bebc0f0d6feb5bfc40946e6acb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iand#IAND&quot;&gt;IAND&lt;/a&gt;, &lt;a href=&quot;ieor#IEOR&quot;&gt;IEOR&lt;/a&gt;, &lt;a href=&quot;ior#IOR&quot;&gt;IOR&lt;/a&gt;, &lt;a href=&quot;ibits#IBITS&quot;&gt;IBITS&lt;/a&gt;, &lt;a href=&quot;ibset#IBSET&quot;&gt;IBSET&lt;/a&gt;, &lt;a href=&quot;ibclr#IBCLR&quot;&gt;IBCLR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;iand#IAND&quot;&gt;IAND&lt;/a&gt;、&lt;a href=&quot;ieor#IEOR&quot;&gt;IEOR&lt;/a&gt;、&lt;a href=&quot;ior#IOR&quot;&gt;IOR&lt;/a&gt;、&lt;a href=&quot;ibits#IBITS&quot;&gt;IBITS&lt;/a&gt;、&lt;a href=&quot;ibset#IBSET&quot;&gt;IBSET&lt;/a&gt;、&lt;a href=&quot;ibclr#IBCLR&quot;&gt;IBCLR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de812457391468ec86fd39e353b9bed3eaca48c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iany#IANY&quot;&gt;IANY&lt;/a&gt;, &lt;a href=&quot;iall#IALL&quot;&gt;IALL&lt;/a&gt;, &lt;a href=&quot;ieor#IEOR&quot;&gt;IEOR&lt;/a&gt;, &lt;a href=&quot;parity#PARITY&quot;&gt;PARITY&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;iany#IANY&quot;&gt;IANY&lt;/a&gt;、&lt;a href=&quot;iall#IALL&quot;&gt;IALL&lt;/a&gt;、&lt;a href=&quot;ieor#IEOR&quot;&gt;IEOR&lt;/a&gt;、&lt;a href=&quot;parity#PARITY&quot;&gt;PARITY&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00480143e5dbd7b8e77dc1940e713390a6dbfd40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iany#IANY&quot;&gt;IANY&lt;/a&gt;, &lt;a href=&quot;iparity#IPARITY&quot;&gt;IPARITY&lt;/a&gt;, &lt;a href=&quot;iand#IAND&quot;&gt;IAND&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;iany#IANY&quot;&gt;IANY&lt;/a&gt;、&lt;a href=&quot;iparity#IPARITY&quot;&gt;IPARITY&lt;/a&gt;、&lt;a href=&quot;iand#IAND&quot;&gt;IAND&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17827c32c924369fb2d1d73898356f4dc9b1ce23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ibclr#IBCLR&quot;&gt;IBCLR&lt;/a&gt;, &lt;a href=&quot;ibits#IBITS&quot;&gt;IBITS&lt;/a&gt;, &lt;a href=&quot;iand#IAND&quot;&gt;IAND&lt;/a&gt;, &lt;a href=&quot;ior#IOR&quot;&gt;IOR&lt;/a&gt;, &lt;a href=&quot;ieor#IEOR&quot;&gt;IEOR&lt;/a&gt;, &lt;a href=&quot;mvbits#MVBITS&quot;&gt;MVBITS&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ibclr#IBCLR&quot;&gt;IBCLR&lt;/a&gt;、&lt;a href=&quot;ibits#IBITS&quot;&gt;IBITS&lt;/a&gt;、&lt;a href=&quot;iand#IAND&quot;&gt;IAND&lt;/a&gt;、&lt;a href=&quot;ior#IOR&quot;&gt;IOR&lt;/a&gt;、&lt;a href=&quot;ieor#IEOR&quot;&gt;IEOR&lt;/a&gt;、&lt;a href=&quot;mvbits#MVBITS&quot;&gt;MVBITS&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a394d58e8ed6d0532ff735961463687427eaa099" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ibclr#IBCLR&quot;&gt;IBCLR&lt;/a&gt;, &lt;a href=&quot;ibset#IBSET&quot;&gt;IBSET&lt;/a&gt;, &lt;a href=&quot;ibits#IBITS&quot;&gt;IBITS&lt;/a&gt;, &lt;a href=&quot;iand#IAND&quot;&gt;IAND&lt;/a&gt;, &lt;a href=&quot;ior#IOR&quot;&gt;IOR&lt;/a&gt;, &lt;a href=&quot;ieor#IEOR&quot;&gt;IEOR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ibclr#IBCLR&quot;&gt;IBCLR&lt;/a&gt;、&lt;a href=&quot;ibset#IBSET&quot;&gt;IBSET&lt;/a&gt;、&lt;a href=&quot;ibits#IBITS&quot;&gt;IBITS&lt;/a&gt;、&lt;a href=&quot;iand#IAND&quot;&gt;IAND&lt;/a&gt;、&lt;a href=&quot;ior#IOR&quot;&gt;IOR&lt;/a&gt;、&lt;a href=&quot;ieor#IEOR&quot;&gt;IEOR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2de3856df0fe04a5a53d205aab92a508debcd61d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ibits#IBITS&quot;&gt;IBITS&lt;/a&gt;, &lt;a href=&quot;ibset#IBSET&quot;&gt;IBSET&lt;/a&gt;, &lt;a href=&quot;iand#IAND&quot;&gt;IAND&lt;/a&gt;, &lt;a href=&quot;ior#IOR&quot;&gt;IOR&lt;/a&gt;, &lt;a href=&quot;ieor#IEOR&quot;&gt;IEOR&lt;/a&gt;, &lt;a href=&quot;mvbits#MVBITS&quot;&gt;MVBITS&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ibits#IBITS&quot;&gt;IBITS&lt;/a&gt;、&lt;a href=&quot;ibset#IBSET&quot;&gt;IBSET&lt;/a&gt;、&lt;a href=&quot;iand#IAND&quot;&gt;IAND&lt;/a&gt;、&lt;a href=&quot;ior#IOR&quot;&gt;IOR&lt;/a&gt;、&lt;a href=&quot;ieor#IEOR&quot;&gt;IEOR&lt;/a&gt;、&lt;a href=&quot;mvbits#MVBITS&quot;&gt;MVBITS&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6cb311a1b6e4ea3a2a00d9e91940c577a2f9a781" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ieor#IEOR&quot;&gt;IEOR&lt;/a&gt;, &lt;a href=&quot;iand#IAND&quot;&gt;IAND&lt;/a&gt;, &lt;a href=&quot;ibits#IBITS&quot;&gt;IBITS&lt;/a&gt;, &lt;a href=&quot;ibset#IBSET&quot;&gt;IBSET&lt;/a&gt;, &lt;a href=&quot;ibclr#IBCLR&quot;&gt;IBCLR&lt;/a&gt;, &lt;a href=&quot;not#NOT&quot;&gt;NOT&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ieor#IEOR&quot;&gt;IEOR&lt;/a&gt;、&lt;a href=&quot;iand#IAND&quot;&gt;IAND&lt;/a&gt;、&lt;a href=&quot;ibits#IBITS&quot;&gt;IBITS&lt;/a&gt;、&lt;a href=&quot;ibset#IBSET&quot;&gt;IBSET&lt;/a&gt;、&lt;a href=&quot;ibclr#IBCLR&quot;&gt;IBCLR&lt;/a&gt;、&lt;a href=&quot;not#NOT&quot;&gt;NOT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b78bced9706386fd2120f370dbc08ea3d8b487a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ierrno#IERRNO&quot;&gt;IERRNO&lt;/a&gt;, &lt;a href=&quot;perror#PERROR&quot;&gt;PERROR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ierrno#IERRNO&quot;&gt;IERRNO&lt;/a&gt;、&lt;a href=&quot;perror#PERROR&quot;&gt;PERROR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bcdab080591a5f1905fa7ed5da3b3fbe67447b18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;index-intrinsic#INDEX-intrinsic&quot;&gt;INDEX intrinsic&lt;/a&gt;, &lt;a href=&quot;len_005ftrim#LEN_005fTRIM&quot;&gt;LEN_TRIM&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;index-intrinsic#INDEX-intrinsic&quot;&gt;INDEX組み込み&lt;/a&gt;、&lt;a href=&quot;len_005ftrim#LEN_005fTRIM&quot;&gt;LEN_TRIM&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2bcccb25db5a052607cf5d04f0e83e7355b648c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;index-intrinsic#INDEX-intrinsic&quot;&gt;INDEX intrinsic&lt;/a&gt;, &lt;a href=&quot;verify#VERIFY&quot;&gt;VERIFY&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;index-intrinsic#INDEX-intrinsic&quot;&gt;INDEX組み込み&lt;/a&gt;、&lt;a href=&quot;verify#VERIFY&quot;&gt;VERIFY&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19b7c63a7127907f41bc2edf422c39fd1a062cc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;int#INT&quot;&gt;INT&lt;/a&gt;, &lt;a href=&quot;int2#INT2&quot;&gt;INT2&lt;/a&gt;, &lt;a href=&quot;int8#INT8&quot;&gt;INT8&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;int#INT&quot;&gt;INT&lt;/a&gt;、&lt;a href=&quot;int2#INT2&quot;&gt;INT2&lt;/a&gt;、&lt;a href=&quot;int8#INT8&quot;&gt;INT8&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a36206d1e28f39dfba3352c0829e97a6fa2a5a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;int#INT&quot;&gt;INT&lt;/a&gt;, &lt;a href=&quot;int2#INT2&quot;&gt;INT2&lt;/a&gt;, &lt;a href=&quot;long#LONG&quot;&gt;LONG&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;int#INT&quot;&gt;INT&lt;/a&gt;、&lt;a href=&quot;int2#INT2&quot;&gt;INT2&lt;/a&gt;、&lt;a href=&quot;long#LONG&quot;&gt;LONG&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c52d15e712a3b00897d3f030a13ddac28a24cac4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;int#INT&quot;&gt;INT&lt;/a&gt;, &lt;a href=&quot;int8#INT8&quot;&gt;INT8&lt;/a&gt;, &lt;a href=&quot;long#LONG&quot;&gt;LONG&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;int#INT&quot;&gt;INT&lt;/a&gt;、&lt;a href=&quot;int8#INT8&quot;&gt;INT8&lt;/a&gt;、&lt;a href=&quot;long#LONG&quot;&gt;LONG&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4941b2aac52c33c34f7d0813155cfa82cd24fee4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;int#INT&quot;&gt;INT&lt;/a&gt;, &lt;a href=&quot;real#REAL&quot;&gt;REAL&lt;/a&gt;, &lt;a href=&quot;cmplx#CMPLX&quot;&gt;CMPLX&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;int#INT&quot;&gt;INT&lt;/a&gt;、&lt;a href=&quot;real#REAL&quot;&gt;REAL&lt;/a&gt;、&lt;a href=&quot;cmplx#CMPLX&quot;&gt;CMPLX&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e6dd905772934afd5be67d8e3cf8c855a5c0813" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ior#IOR&quot;&gt;IOR&lt;/a&gt;, &lt;a href=&quot;iand#IAND&quot;&gt;IAND&lt;/a&gt;, &lt;a href=&quot;ibits#IBITS&quot;&gt;IBITS&lt;/a&gt;, &lt;a href=&quot;ibset#IBSET&quot;&gt;IBSET&lt;/a&gt;, &lt;a href=&quot;ibclr#IBCLR&quot;&gt;IBCLR&lt;/a&gt;, &lt;a href=&quot;not#NOT&quot;&gt;NOT&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ior#IOR&quot;&gt;IOR&lt;/a&gt;、&lt;a href=&quot;iand#IAND&quot;&gt;IAND&lt;/a&gt;、&lt;a href=&quot;ibits#IBITS&quot;&gt;IBITS&lt;/a&gt;、&lt;a href=&quot;ibset#IBSET&quot;&gt;IBSET&lt;/a&gt;、&lt;a href=&quot;ibclr#IBCLR&quot;&gt;IBCLR&lt;/a&gt;、&lt;a href=&quot;not#NOT&quot;&gt;NOT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24b1c92ca54f588bc0bab81c7aa50d92f6ae8070" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ior#IOR&quot;&gt;IOR&lt;/a&gt;, &lt;a href=&quot;ieor#IEOR&quot;&gt;IEOR&lt;/a&gt;, &lt;a href=&quot;ibits#IBITS&quot;&gt;IBITS&lt;/a&gt;, &lt;a href=&quot;ibset#IBSET&quot;&gt;IBSET&lt;/a&gt;, &lt;a href=&quot;ibclr#IBCLR&quot;&gt;IBCLR&lt;/a&gt;, &lt;a href=&quot;not#NOT&quot;&gt;NOT&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ior#IOR&quot;&gt;IOR&lt;/a&gt;、&lt;a href=&quot;ieor#IEOR&quot;&gt;IEOR&lt;/a&gt;、&lt;a href=&quot;ibits#IBITS&quot;&gt;IBITS&lt;/a&gt;、&lt;a href=&quot;ibset#IBSET&quot;&gt;IBSET&lt;/a&gt;、&lt;a href=&quot;ibclr#IBCLR&quot;&gt;IBCLR&lt;/a&gt;、&lt;a href=&quot;not#NOT&quot;&gt;NOT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eed65ede294207b01e5c34904438adaa943b37fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iparity#IPARITY&quot;&gt;IPARITY&lt;/a&gt;, &lt;a href=&quot;iall#IALL&quot;&gt;IALL&lt;/a&gt;, &lt;a href=&quot;ior#IOR&quot;&gt;IOR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;iparity#IPARITY&quot;&gt;IPARITY&lt;/a&gt;、&lt;a href=&quot;iall#IALL&quot;&gt;IALL&lt;/a&gt;、&lt;a href=&quot;ior#IOR&quot;&gt;IOR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9e78ddd0526e609c3a5d37d799c6f136cc60c77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ishft#ISHFT&quot;&gt;ISHFT&lt;/a&gt;, &lt;a href=&quot;ishftc#ISHFTC&quot;&gt;ISHFTC&lt;/a&gt;, &lt;a href=&quot;lshift#LSHIFT&quot;&gt;LSHIFT&lt;/a&gt;, &lt;a href=&quot;shifta#SHIFTA&quot;&gt;SHIFTA&lt;/a&gt;, &lt;a href=&quot;shiftr#SHIFTR&quot;&gt;SHIFTR&lt;/a&gt;, &lt;a href=&quot;shiftl#SHIFTL&quot;&gt;SHIFTL&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ishft#ISHFT&quot;&gt;ISHFT&lt;/a&gt;、&lt;a href=&quot;ishftc#ISHFTC&quot;&gt;ISHFTC&lt;/a&gt;、&lt;a href=&quot;lshift#LSHIFT&quot;&gt;LSHIFT&lt;/a&gt;、&lt;a href=&quot;shifta#SHIFTA&quot;&gt;SHIFTA&lt;/a&gt;、&lt;a href=&quot;shiftr#SHIFTR&quot;&gt;SHIFTR&lt;/a&gt;、&lt;a href=&quot;shiftl#SHIFTL&quot;&gt;SHIFTL&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9eaa0c0788005e3a7bc56581d1038d531585f553" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ishft#ISHFT&quot;&gt;ISHFT&lt;/a&gt;, &lt;a href=&quot;ishftc#ISHFTC&quot;&gt;ISHFTC&lt;/a&gt;, &lt;a href=&quot;rshift#RSHIFT&quot;&gt;RSHIFT&lt;/a&gt;, &lt;a href=&quot;shifta#SHIFTA&quot;&gt;SHIFTA&lt;/a&gt;, &lt;a href=&quot;shiftl#SHIFTL&quot;&gt;SHIFTL&lt;/a&gt;, &lt;a href=&quot;shiftr#SHIFTR&quot;&gt;SHIFTR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ishft#ISHFT&quot;&gt;ISHFT&lt;/a&gt;、&lt;a href=&quot;ishftc#ISHFTC&quot;&gt;ISHFTC&lt;/a&gt;、&lt;a href=&quot;rshift#RSHIFT&quot;&gt;RSHIFT&lt;/a&gt;、&lt;a href=&quot;shifta#SHIFTA&quot;&gt;SHIFTA&lt;/a&gt;、&lt;a href=&quot;shiftl#SHIFTL&quot;&gt;SHIFTL&lt;/a&gt;、&lt;a href=&quot;shiftr#SHIFTR&quot;&gt;SHIFTR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc7ff850230e9aa0c226ee11b78a90daf852649c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;lbound#LBOUND&quot;&gt;LBOUND&lt;/a&gt;, &lt;a href=&quot;lcobound#LCOBOUND&quot;&gt;LCOBOUND&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;lbound#LBOUND&quot;&gt;LBOUND&lt;/a&gt;、&lt;a href=&quot;lcobound#LCOBOUND&quot;&gt;LCOBOUND&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f889d98ac99aae65b14f680ae1fb7ce68f463c5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;lcobound#LCOBOUND&quot;&gt;LCOBOUND&lt;/a&gt;, &lt;a href=&quot;lbound#LBOUND&quot;&gt;LBOUND&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;lcobound#LCOBOUND&quot;&gt;LCOBOUND&lt;/a&gt;、&lt;a href=&quot;lbound#LBOUND&quot;&gt;LBOUND&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68679e7cadfe7d8c0c3efd4366df115976492f2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;len#LEN&quot;&gt;LEN&lt;/a&gt;, &lt;a href=&quot;adjustl#ADJUSTL&quot;&gt;ADJUSTL&lt;/a&gt;, &lt;a href=&quot;adjustr#ADJUSTR&quot;&gt;ADJUSTR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;len#LEN&quot;&gt;LEN&lt;/a&gt;、&lt;a href=&quot;adjustl#ADJUSTL&quot;&gt;ADJUSTL&lt;/a&gt;、&lt;a href=&quot;adjustr#ADJUSTR&quot;&gt;ADJUSTR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93f1583ffa63e95f448e6103d6d7845e4139e1b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;len_005ftrim#LEN_005fTRIM&quot;&gt;LEN_TRIM&lt;/a&gt;, &lt;a href=&quot;adjustl#ADJUSTL&quot;&gt;ADJUSTL&lt;/a&gt;, &lt;a href=&quot;adjustr#ADJUSTR&quot;&gt;ADJUSTR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;len_005ftrim#LEN_005fTRIM&quot;&gt;LEN_TRIM&lt;/a&gt;、&lt;a href=&quot;adjustl#ADJUSTL&quot;&gt;ADJUSTL&lt;/a&gt;、&lt;a href=&quot;adjustr#ADJUSTR&quot;&gt;ADJUSTR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e6131b4b38d9ff9bb31ac8ef9b6e47951cd4bb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;lge#LGE&quot;&gt;LGE&lt;/a&gt;, &lt;a href=&quot;lgt#LGT&quot;&gt;LGT&lt;/a&gt;, &lt;a href=&quot;lle#LLE&quot;&gt;LLE&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;lge#LGE&quot;&gt;LGE&lt;/a&gt;、&lt;a href=&quot;lgt#LGT&quot;&gt;LGT&lt;/a&gt;、&lt;a href=&quot;lle#LLE&quot;&gt;LLE&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb9cf79f644b5c847bb415e1fcb35ab90337d29d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;lge#LGE&quot;&gt;LGE&lt;/a&gt;, &lt;a href=&quot;lgt#LGT&quot;&gt;LGT&lt;/a&gt;, &lt;a href=&quot;llt#LLT&quot;&gt;LLT&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;lge#LGE&quot;&gt;LGE&lt;/a&gt;、&lt;a href=&quot;lgt#LGT&quot;&gt;LGT&lt;/a&gt;、&lt;a href=&quot;llt#LLT&quot;&gt;LLT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e64c8f9707dc7d01b5f0a791e168f0290508f245" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;lge#LGE&quot;&gt;LGE&lt;/a&gt;, &lt;a href=&quot;lle#LLE&quot;&gt;LLE&lt;/a&gt;, &lt;a href=&quot;llt#LLT&quot;&gt;LLT&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;lge#LGE&quot;&gt;LGE&lt;/a&gt;、&lt;a href=&quot;lle#LLE&quot;&gt;LLE&lt;/a&gt;、&lt;a href=&quot;llt#LLT&quot;&gt;LLT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5d80985b3beddaa32869824ea0bb35c505dccf4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;lgt#LGT&quot;&gt;LGT&lt;/a&gt;, &lt;a href=&quot;lle#LLE&quot;&gt;LLE&lt;/a&gt;, &lt;a href=&quot;llt#LLT&quot;&gt;LLT&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;lgt#LGT&quot;&gt;LGT&lt;/a&gt;、&lt;a href=&quot;lle#LLE&quot;&gt;LLE&lt;/a&gt;、&lt;a href=&quot;llt#LLT&quot;&gt;LLT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="856ce70cf9e195fe679039665252c3564e06d321" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;link#LINK&quot;&gt;LINK&lt;/a&gt;, &lt;a href=&quot;symlnk#SYMLNK&quot;&gt;SYMLNK&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;link#LINK&quot;&gt;リンク&lt;/a&gt;、&lt;a href=&quot;symlnk#SYMLNK&quot;&gt;SYMLNK&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a6007d85a053fa6df1292d1a07aca9b1011bc31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;link#LINK&quot;&gt;LINK&lt;/a&gt;, &lt;a href=&quot;unlink#UNLINK&quot;&gt;UNLINK&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;link#LINK&quot;&gt;リンク&lt;/a&gt;、&lt;a href=&quot;unlink#UNLINK&quot;&gt;リンク解除&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21a588fa1b37b2bee5215f27f6029d8c7c77be78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;max#MAX&quot;&gt;MAX&lt;/a&gt;, &lt;a href=&quot;maxloc#MAXLOC&quot;&gt;MAXLOC&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;max#MAX&quot;&gt;MAX&lt;/a&gt;、&lt;a href=&quot;maxloc#MAXLOC&quot;&gt;MAXLOC&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e117b4b43b2189c8671c8d89cb3b186066140441" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;max#MAX&quot;&gt;MAX&lt;/a&gt;, &lt;a href=&quot;maxval#MAXVAL&quot;&gt;MAXVAL&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;max#MAX&quot;&gt;MAX&lt;/a&gt;、&lt;a href=&quot;maxval#MAXVAL&quot;&gt;MAXVAL&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a12d155464ff7f78fe96ab13faa196c2a91e38a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;max#MAX&quot;&gt;MAX&lt;/a&gt;, &lt;a href=&quot;minloc#MINLOC&quot;&gt;MINLOC&lt;/a&gt;, &lt;a href=&quot;minval#MINVAL&quot;&gt;MINVAL&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;max#MAX&quot;&gt;MAX&lt;/a&gt;、&lt;a href=&quot;minloc#MINLOC&quot;&gt;MINLOC&lt;/a&gt;、&lt;a href=&quot;minval#MINVAL&quot;&gt;MINVAL&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52e6000d41fdf5adfe3c819329e80c25af63ef37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;maxloc#MAXLOC&quot;&gt;MAXLOC&lt;/a&gt;&lt;a href=&quot;maxval#MAXVAL&quot;&gt;MAXVAL&lt;/a&gt;, &lt;a href=&quot;min#MIN&quot;&gt;MIN&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;maxloc#MAXLOC&quot;&gt;MAXLOC &lt;/a&gt;&lt;a href=&quot;maxval#MAXVAL&quot;&gt;MAXVAL&lt;/a&gt;、&lt;a href=&quot;min#MIN&quot;&gt;MIN&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="957ea31c72af871b88afde6167e582247d505099" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;min#MIN&quot;&gt;MIN&lt;/a&gt;, &lt;a href=&quot;minloc#MINLOC&quot;&gt;MINLOC&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;min#MIN&quot;&gt;MIN&lt;/a&gt;、&lt;a href=&quot;minloc#MINLOC&quot;&gt;MINLOC&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d327384ec4debce9055bf7ac83db99cc5fb4c169" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;min#MIN&quot;&gt;MIN&lt;/a&gt;, &lt;a href=&quot;minval#MINVAL&quot;&gt;MINVAL&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;min#MIN&quot;&gt;MIN&lt;/a&gt;、&lt;a href=&quot;minval#MINVAL&quot;&gt;MINVAL&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a2b73f0763dded9468c4fac7ce4ae77be74983d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;num_005fimages#NUM_005fIMAGES&quot;&gt;NUM_IMAGES&lt;/a&gt;, &lt;a href=&quot;image_005findex#IMAGE_005fINDEX&quot;&gt;IMAGE_INDEX&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;num_005fimages#NUM_005fIMAGES&quot;&gt;NUM_IMAGES&lt;/a&gt;、&lt;a href=&quot;image_005findex#IMAGE_005fINDEX&quot;&gt;IMAGE_INDEX&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff2bf61cca9f51478e7868d177f9f32967b614a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pack#PACK&quot;&gt;PACK&lt;/a&gt;, &lt;a href=&quot;spread#SPREAD&quot;&gt;SPREAD&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;pack#PACK&quot;&gt;パック&lt;/a&gt;、&lt;a href=&quot;spread#SPREAD&quot;&gt;スプレッド&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b6f2415db058492ef9ba31af51b18f847473b16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;popcnt#POPCNT&quot;&gt;POPCNT&lt;/a&gt;, &lt;a href=&quot;leadz#LEADZ&quot;&gt;LEADZ&lt;/a&gt;, &lt;a href=&quot;trailz#TRAILZ&quot;&gt;TRAILZ&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;popcnt#POPCNT&quot;&gt;POPCNT&lt;/a&gt;、&lt;a href=&quot;leadz#LEADZ&quot;&gt;LEADZ&lt;/a&gt;、&lt;a href=&quot;trailz#TRAILZ&quot;&gt;TRAILZ&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e305d31d8e1329776fada2eb2219287df4ae59a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;poppar#POPPAR&quot;&gt;POPPAR&lt;/a&gt;, &lt;a href=&quot;leadz#LEADZ&quot;&gt;LEADZ&lt;/a&gt;, &lt;a href=&quot;trailz#TRAILZ&quot;&gt;TRAILZ&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;poppar#POPPAR&quot;&gt;POPPAR&lt;/a&gt;、&lt;a href=&quot;leadz#LEADZ&quot;&gt;LEADZ&lt;/a&gt;、&lt;a href=&quot;trailz#TRAILZ&quot;&gt;TRAILZ&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d894b2f5473e211b604ca2ed624437057a2e0210" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;precision#PRECISION&quot;&gt;PRECISION&lt;/a&gt;, &lt;a href=&quot;range#RANGE&quot;&gt;RANGE&lt;/a&gt;, &lt;a href=&quot;radix#RADIX&quot;&gt;RADIX&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;precision#PRECISION&quot;&gt;PRECISION&lt;/a&gt;、&lt;a href=&quot;range#RANGE&quot;&gt;RANGE&lt;/a&gt;、&lt;a href=&quot;radix#RADIX&quot;&gt;RADIX&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64592654dc6bb3d483c3d3e7cd9b582887a4481b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rand#RAND&quot;&gt;RAND&lt;/a&gt;, &lt;a href=&quot;random_005fnumber#RANDOM_005fNUMBER&quot;&gt;RANDOM_NUMBER&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;rand#RAND&quot;&gt;RAND&lt;/a&gt;、&lt;a href=&quot;random_005fnumber#RANDOM_005fNUMBER&quot;&gt;RANDOM_NUMBER&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8cf8aee6865221a3dd232e2fc29c7337cee7c497" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rand#RAND&quot;&gt;RAND&lt;/a&gt;, &lt;a href=&quot;random_005fseed#RANDOM_005fSEED&quot;&gt;RANDOM_SEED&lt;/a&gt;, &lt;a href=&quot;random_005fnumber#RANDOM_005fNUMBER&quot;&gt;RANDOM_NUMBER&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;rand#RAND&quot;&gt;RAND&lt;/a&gt;、&lt;a href=&quot;random_005fseed#RANDOM_005fSEED&quot;&gt;RANDOM_SEED&lt;/a&gt;、&lt;a href=&quot;random_005fnumber#RANDOM_005fNUMBER&quot;&gt;RANDOM_NUMBER&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0bfe931e5caf04dc292d29ea35f7e3855bd0aa1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;reshape#RESHAPE&quot;&gt;RESHAPE&lt;/a&gt;, &lt;a href=&quot;size#SIZE&quot;&gt;SIZE&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;reshape#RESHAPE&quot;&gt;リシェイプ&lt;/a&gt;、&lt;a href=&quot;size#SIZE&quot;&gt;サイズ&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c1fdb2d759ff4ebb4625b549841b3154723a9217" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;scan#SCAN&quot;&gt;SCAN&lt;/a&gt;, &lt;a href=&quot;index-intrinsic#INDEX-intrinsic&quot;&gt;INDEX intrinsic&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;scan#SCAN&quot;&gt;SCAN&lt;/a&gt;、&lt;a href=&quot;index-intrinsic#INDEX-intrinsic&quot;&gt;INDEX組み込み&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eca168a0b71d0ae0edd6f9c0e77f24d483e409c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;scan#SCAN&quot;&gt;SCAN&lt;/a&gt;, &lt;a href=&quot;verify#VERIFY&quot;&gt;VERIFY&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;scan#SCAN&quot;&gt;スキャン&lt;/a&gt;、&lt;a href=&quot;verify#VERIFY&quot;&gt;確認&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d9376341b2e4225fdea329e06adfffd03b2eb6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;selected_005freal_005fkind#SELECTED_005fREAL_005fKIND&quot;&gt;SELECTED_REAL_KIND&lt;/a&gt;, &lt;a href=&quot;precision#PRECISION&quot;&gt;PRECISION&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;selected_005freal_005fkind#SELECTED_005fREAL_005fKIND&quot;&gt;SELECTED_REAL_KIND&lt;/a&gt;、&lt;a href=&quot;precision#PRECISION&quot;&gt;PRECISION&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa56dfac4255d977113eace1b0247c82026e96c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;selected_005freal_005fkind#SELECTED_005fREAL_005fKIND&quot;&gt;SELECTED_REAL_KIND&lt;/a&gt;, &lt;a href=&quot;range#RANGE&quot;&gt;RANGE&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;selected_005freal_005fkind#SELECTED_005fREAL_005fKIND&quot;&gt;SELECTED_REAL_KIND&lt;/a&gt;、&lt;a href=&quot;range#RANGE&quot;&gt;RANGE&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="43e046e8e78c5c8ce9bc4b956927ee7de914f5c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;shape#SHAPE&quot;&gt;SHAPE&lt;/a&gt;, &lt;a href=&quot;reshape#RESHAPE&quot;&gt;RESHAPE&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;shape#SHAPE&quot;&gt;シェイプ&lt;/a&gt;、&lt;a href=&quot;reshape#RESHAPE&quot;&gt;リシェイプ&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3772c2ceaadc6c05c8387049eedde607516ce87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;shifta#SHIFTA&quot;&gt;SHIFTA&lt;/a&gt;, &lt;a href=&quot;shiftl#SHIFTL&quot;&gt;SHIFTL&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;shifta#SHIFTA&quot;&gt;SHIFTA&lt;/a&gt;、&lt;a href=&quot;shiftl#SHIFTL&quot;&gt;SHIFTL&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5806b0bfed6c8476ed3c77c5c19d8f2346b8583c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;shifta#SHIFTA&quot;&gt;SHIFTA&lt;/a&gt;, &lt;a href=&quot;shiftr#SHIFTR&quot;&gt;SHIFTR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;shifta#SHIFTA&quot;&gt;SHIFTA&lt;/a&gt;、&lt;a href=&quot;shiftr#SHIFTR&quot;&gt;SHIFTR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86f3566e2e0b1f753d129839aec1d7301a657e46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;shiftl#SHIFTL&quot;&gt;SHIFTL&lt;/a&gt;, &lt;a href=&quot;shiftr#SHIFTR&quot;&gt;SHIFTR&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;shiftl#SHIFTL&quot;&gt;SHIFTL&lt;/a&gt;、&lt;a href=&quot;shiftr#SHIFTR&quot;&gt;SHIFTR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2b0792a996b19328323e6931ede6b43599538be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sizeof#SIZEOF&quot;&gt;SIZEOF&lt;/a&gt;, &lt;a href=&quot;storage_005fsize#STORAGE_005fSIZE&quot;&gt;STORAGE_SIZE&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;sizeof#SIZEOF&quot;&gt;SIZEOF&lt;/a&gt;、&lt;a href=&quot;storage_005fsize#STORAGE_005fSIZE&quot;&gt;STORAGE_SIZE&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd645fb65404cd3560326d06742c8b360ea62d43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;srand#SRAND&quot;&gt;SRAND&lt;/a&gt;, &lt;a href=&quot;random_005fnumber#RANDOM_005fNUMBER&quot;&gt;RANDOM_NUMBER&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;srand#SRAND&quot;&gt;SRAND&lt;/a&gt;、&lt;a href=&quot;random_005fnumber#RANDOM_005fNUMBER&quot;&gt;RANDOM_NUMBER&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a8362d1a33a3edb78dbd045b2950426fe3b5c2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;symlnk#SYMLNK&quot;&gt;SYMLNK&lt;/a&gt;, &lt;a href=&quot;unlink#UNLINK&quot;&gt;UNLINK&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;symlnk#SYMLNK&quot;&gt;SYMLNK&lt;/a&gt;、&lt;a href=&quot;unlink#UNLINK&quot;&gt;リンク&lt;/a&gt;解除</target>
        </trans-unit>
        <trans-unit id="5ea5437f761377c46dc17739f390ce57463725c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;system_005fclock#SYSTEM_005fCLOCK&quot;&gt;SYSTEM_CLOCK&lt;/a&gt;, &lt;a href=&quot;date_005fand_005ftime#DATE_005fAND_005fTIME&quot;&gt;DATE_AND_TIME&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;system_005fclock#SYSTEM_005fCLOCK&quot;&gt;SYSTEM_CLOCK&lt;/a&gt;、&lt;a href=&quot;date_005fand_005ftime#DATE_005fAND_005fTIME&quot;&gt;DATE_AND_TIME&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa62f38a6d5e78888b29355a505d0392c862a9fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;this_005fimage#THIS_005fIMAGE&quot;&gt;THIS_IMAGE&lt;/a&gt;, &lt;a href=&quot;image_005findex#IMAGE_005fINDEX&quot;&gt;IMAGE_INDEX&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;this_005fimage#THIS_005fIMAGE&quot;&gt;THIS_IMAGE&lt;/a&gt;、&lt;a href=&quot;image_005findex#IMAGE_005fINDEX&quot;&gt;IMAGE_INDEX&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="198671ba6dfc783952bcbcebdd2cc934c2bba728" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;this_005fimage#THIS_005fIMAGE&quot;&gt;THIS_IMAGE&lt;/a&gt;, &lt;a href=&quot;num_005fimages#NUM_005fIMAGES&quot;&gt;NUM_IMAGES&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;this_005fimage#THIS_005fIMAGE&quot;&gt;THIS_IMAGE&lt;/a&gt;、&lt;a href=&quot;num_005fimages#NUM_005fIMAGES&quot;&gt;NUM_IMAGES&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7356151ae43fd499d7a2b1dc8cdb19a2ed9e1c9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ubound#UBOUND&quot;&gt;UBOUND&lt;/a&gt;, &lt;a href=&quot;lcobound#LCOBOUND&quot;&gt;LCOBOUND&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ubound#UBOUND&quot;&gt;UBOUND&lt;/a&gt;、&lt;a href=&quot;lcobound#LCOBOUND&quot;&gt;LCOBOUND&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d8eb0d4c4b384b913a09c6a710a0250ed8bd4a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ucobound#UCOBOUND&quot;&gt;UCOBOUND&lt;/a&gt;, &lt;a href=&quot;lbound#LBOUND&quot;&gt;LBOUND&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ucobound#UCOBOUND&quot;&gt;UCOBOUND&lt;/a&gt;、&lt;a href=&quot;lbound#LBOUND&quot;&gt;LBOUND&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9fdfe6d0118c5c6a7db30fa577a49dda6ae82b73" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;index-ALLOCATABLE-components-of-derived-types&quot;&gt;ALLOCATABLE&lt;/code&gt; components of derived types</source>
          <target state="translated">&lt;code id=&quot;index-ALLOCATABLE-components-of-derived-types&quot;&gt;ALLOCATABLE&lt;/code&gt; 派生型の割り当て可能なコンポーネント</target>
        </trans-unit>
        <trans-unit id="474c69ccde4995b3f01df8c230e53676bf801645" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;index-ALLOCATABLE-dummy-arguments&quot;&gt;ALLOCATABLE&lt;/code&gt; dummy arguments.</source>
          <target state="translated">&lt;code id=&quot;index-ALLOCATABLE-dummy-arguments&quot;&gt;ALLOCATABLE&lt;/code&gt; 仮引数。</target>
        </trans-unit>
        <trans-unit id="60bc6b56a1bc6b78e9c663ab7fea85f4cb06106d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;index-ALLOCATABLE-function-results&quot;&gt;ALLOCATABLE&lt;/code&gt; function results</source>
          <target state="translated">&lt;code id=&quot;index-ALLOCATABLE-function-results&quot;&gt;ALLOCATABLE&lt;/code&gt; 関数の結果</target>
        </trans-unit>
        <trans-unit id="5c146f4c06505e60251059c305ee1713d83a6182" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;index-IOMSG_003d-specifier&quot;&gt;IOMSG=&lt;/code&gt; specifier for I/O statements.</source>
          <target state="translated">&lt;code id=&quot;index-IOMSG_003d-specifier&quot;&gt;IOMSG=&lt;/code&gt; I / OステートメントのIOMSG =指定子。</target>
        </trans-unit>
        <trans-unit id="cc66bbc51ea243e84e69dacae7000550c88f50ae" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;index-statement_002c-FLUSH&quot;&gt;FLUSH&lt;/code&gt; statement.</source>
          <target state="translated">&lt;code id=&quot;index-statement_002c-FLUSH&quot;&gt;FLUSH&lt;/code&gt; ステートメント。</target>
        </trans-unit>
        <trans-unit id="3cf1291bad1c439580fcc0c21f2b5dfce367d675" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;index-statement_002c-ISO_005fFORTRAN_005fENV&quot;&gt;USE&lt;/code&gt; statement with &lt;code&gt;INTRINSIC&lt;/code&gt; and &lt;code&gt;NON_INTRINSIC&lt;/code&gt; attribute; supported intrinsic modules: &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt;, &lt;code&gt;ISO_C_BINDING&lt;/code&gt;, &lt;code&gt;OMP_LIB&lt;/code&gt; and &lt;code&gt;OMP_LIB_KINDS&lt;/code&gt;, and &lt;code&gt;OPENACC&lt;/code&gt;.</source>
          <target state="translated">&lt;code id=&quot;index-statement_002c-ISO_005fFORTRAN_005fENV&quot;&gt;USE&lt;/code&gt; &lt;code&gt;INTRINSIC&lt;/code&gt; および &lt;code&gt;NON_INTRINSIC&lt;/code&gt; 属性を含むUSEステートメント。サポートされている組み込みモジュール： &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; 、 &lt;code&gt;ISO_C_BINDING&lt;/code&gt; 、 &lt;code&gt;OMP_LIB&lt;/code&gt; および &lt;code&gt;OMP_LIB_KINDS&lt;/code&gt; 、および &lt;code&gt;OPENACC&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b4403453492b3c91fdb82617c289be09f560d47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!GCC$ ATTRIBUTES&lt;/code&gt;&lt;var&gt;attribute-list&lt;/var&gt;&lt;code&gt;::&lt;/code&gt;&lt;var&gt;variable-list&lt;/var&gt;</source>
          <target state="translated">&lt;code&gt;!GCC$ ATTRIBUTES&lt;/code&gt; &lt;var&gt;attribute-list&lt;/var&gt; &lt;code&gt;::&lt;/code&gt; &lt;var&gt;variable-list&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="0841e6ecf9c716e3ca319a2cb8cd5bbba76a806c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%VAL&lt;/code&gt; passes a scalar argument by value, &lt;code&gt;%REF&lt;/code&gt; passes it by reference and &lt;code&gt;%LOC&lt;/code&gt; passes its memory location. Since gfortran already passes scalar arguments by reference, &lt;code&gt;%REF&lt;/code&gt; is in effect a do-nothing. &lt;code&gt;%LOC&lt;/code&gt; has the same effect as a Fortran pointer.</source>
          <target state="translated">&lt;code&gt;%VAL&lt;/code&gt; はスカラー引数を値で渡し、 &lt;code&gt;%REF&lt;/code&gt; は参照で渡し、 &lt;code&gt;%LOC&lt;/code&gt; はそのメモリ位置を渡します。gfortranは既に参照によってスカラー引数を渡しているため、 &lt;code&gt;%REF&lt;/code&gt; は事実上何もしません。 &lt;code&gt;%LOC&lt;/code&gt; には、Fortranポインターと同じ効果があります。</target>
        </trans-unit>
        <trans-unit id="3c998bd0d36ebf004984d00c2efa8d31fbd031b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'10-20'&lt;/code&gt; Units 10 to 20 are big-endian, the rest is native.</source>
          <target state="translated">&lt;code&gt;'10-20'&lt;/code&gt; ユニット10から20はビッグエンディアンで、残りはネイティブです。</target>
        </trans-unit>
        <trans-unit id="329f7f1f301199b8935f4ed12d9cacd563f7192b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'big_endian'&lt;/code&gt; Do all unformatted I/O in big_endian mode.</source>
          <target state="translated">&lt;code&gt;'big_endian'&lt;/code&gt; すべての未フォーマットI / Oをbig_endianモードで実行します。</target>
        </trans-unit>
        <trans-unit id="ef312558b238d9e441ab5dd8e48ba54b19f57311" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'little_endian;native:10-20,25'&lt;/code&gt; Do all unformatted I/O in little_endian mode, except for units 10 to 20 and 25, which are in native format.</source>
          <target state="translated">&lt;code&gt;'little_endian;native:10-20,25'&lt;/code&gt; ネイティブ形式のユニット10〜20および25を除き、すべての未フォーマットI / Oをlittle_endianモードで実行します。</target>
        </trans-unit>
        <trans-unit id="e1a3fddd168b8988d3371d28364babe990f9c6cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.FALSE.&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.FALSE.&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="76a1c1a7cc36bbed5ba75233368f7cf1de890765" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;acosd#ACOSD&quot;&gt;ACOSD&lt;/a&gt;&lt;/code&gt;*</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;acosd#ACOSD&quot;&gt;ACOSD&lt;/a&gt;&lt;/code&gt;*</target>
        </trans-unit>
        <trans-unit id="af730bb964fcc7fa3545f4388a977802ade1a457" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;asind#ASIND&quot;&gt;ASIND&lt;/a&gt;&lt;/code&gt;*</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;asind#ASIND&quot;&gt;ASIND&lt;/a&gt;&lt;/code&gt;*</target>
        </trans-unit>
        <trans-unit id="993ba0764155256b438e447f5e8cbff5a116843c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;atan2d#ATAN2D&quot;&gt;ATAN2D&lt;/a&gt;&lt;/code&gt;*</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;atan2d#ATAN2D&quot;&gt;ATAN2D&lt;/a&gt;&lt;/code&gt;*</target>
        </trans-unit>
        <trans-unit id="e4580a111040e0f5374d562f5f6bcb312dfdd949" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;atand#ATAND&quot;&gt;ATAND&lt;/a&gt;&lt;/code&gt;*</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;atand#ATAND&quot;&gt;ATAND&lt;/a&gt;&lt;/code&gt;*</target>
        </trans-unit>
        <trans-unit id="eb097cf0f4f63b47974b79e3b21ba77cf67f6864" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;cosd#COSD&quot;&gt;COSD&lt;/a&gt;&lt;/code&gt;*</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;cosd#COSD&quot;&gt;COSD&lt;/a&gt;&lt;/code&gt;*</target>
        </trans-unit>
        <trans-unit id="b38cd41112692a8645c3f8d089334ed8c087520f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;cotan#COTAN&quot;&gt;COTAN&lt;/a&gt;&lt;/code&gt;*</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;cotan#COTAN&quot;&gt;COTAN&lt;/a&gt;&lt;/code&gt;*</target>
        </trans-unit>
        <trans-unit id="102948bdafe0da74dad53b834cf5e654561fb8f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;cotand#COTAND&quot;&gt;COTAND&lt;/a&gt;&lt;/code&gt;*</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;cotand#COTAND&quot;&gt;COTAND&lt;/a&gt;&lt;/code&gt;*</target>
        </trans-unit>
        <trans-unit id="891f6c74267e3aad988dad8021fb4070c590080c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;sind#SIND&quot;&gt;SIND&lt;/a&gt;&lt;/code&gt;*</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;sind#SIND&quot;&gt;SIND&lt;/a&gt;&lt;/code&gt;*</target>
        </trans-unit>
        <trans-unit id="f16e4c049b446d2e0eaa21a3f7d4cd5b9c44ff03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tand#TAND&quot;&gt;TAND&lt;/a&gt;&lt;/code&gt;*</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tand#TAND&quot;&gt;TAND&lt;/a&gt;&lt;/code&gt;*</target>
        </trans-unit>
        <trans-unit id="a800140e9a03829e17781638ef4d266fbca130a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ABORT&lt;/code&gt; causes immediate termination of the program. On operating systems that support a core dump, &lt;code&gt;ABORT&lt;/code&gt; will produce a core dump. It will also print a backtrace, unless &lt;code&gt;-fno-backtrace&lt;/code&gt; is given.</source>
          <target state="translated">&lt;code&gt;ABORT&lt;/code&gt; は、プログラムを即座に終了させます。コアダンプをサポートするオペレーティングシステムでは、 &lt;code&gt;ABORT&lt;/code&gt; はコアダンプを生成します。 &lt;code&gt;-fno-backtrace&lt;/code&gt; が指定されていない限り、バックトレースも出力します。</target>
        </trans-unit>
        <trans-unit id="39f599b2326a6c1861e1530da23afe4ceb4ceb08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ABS(A)&lt;/code&gt; computes the absolute value of &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ABS(A)&lt;/code&gt; は、 &lt;code&gt;A&lt;/code&gt; の絶対値を計算します。</target>
        </trans-unit>
        <trans-unit id="620496eaa136f47c0f4a775c9d12fb95dd85e7cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ACCESS(NAME, MODE)&lt;/code&gt; checks whether the file &lt;var&gt;NAME&lt;/var&gt; exists, is readable, writable or executable. Except for the executable check, &lt;code&gt;ACCESS&lt;/code&gt; can be replaced by Fortran 95&amp;rsquo;s &lt;code&gt;INQUIRE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ACCESS(NAME, MODE)&lt;/code&gt; は、ファイル &lt;var&gt;NAME&lt;/var&gt; が存在するか、読み取り可能、書き込み可能、​​または実行可能であるかをチェックします。実行可能チェックを除いて、 &lt;code&gt;ACCESS&lt;/code&gt; はFortran 95の &lt;code&gt;INQUIRE&lt;/code&gt; で置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="39bd3f32e3d1ef1350ec8c45e82631450fcb8099" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ACHAR(I)&lt;/code&gt; returns the character located at position &lt;code&gt;I&lt;/code&gt; in the ASCII collating sequence.</source>
          <target state="translated">&lt;code&gt;ACHAR(I)&lt;/code&gt; は、ASCII照合シーケンスの位置 &lt;code&gt;I&lt;/code&gt; にある文字を返します。</target>
        </trans-unit>
        <trans-unit id="a127c8af850b548e9d3f924065fbbcf105c332ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ACOS(X)&lt;/code&gt; computes the arccosine of &lt;var&gt;X&lt;/var&gt; (inverse of &lt;code&gt;COS(X)&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;ACOS(X)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; の逆余弦を計算します（ &lt;code&gt;COS(X)&lt;/code&gt; の逆）。</target>
        </trans-unit>
        <trans-unit id="77f5b02d4611092abe61716b49bcbdc3f2043b1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ACOSD(X)&lt;/code&gt; computes the arccosine of &lt;var&gt;X&lt;/var&gt; in degrees (inverse of &lt;code&gt;COSD(X)&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;ACOSD(X)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; の逆余弦を度数で計算します（ &lt;code&gt;COSD(X)&lt;/code&gt; の逆）。</target>
        </trans-unit>
        <trans-unit id="dd9d5c9ac014242149c056c87d6d3a156f820f96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ACOSH(X)&lt;/code&gt; computes the inverse hyperbolic cosine of &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;ACOSH(X)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; の逆双曲線余弦を計算します。</target>
        </trans-unit>
        <trans-unit id="596d509ab7368f324fee5e407a66caf9f607ff4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ADJUSTL(STRING)&lt;/code&gt; will left adjust a string by removing leading spaces. Spaces are inserted at the end of the string as needed.</source>
          <target state="translated">&lt;code&gt;ADJUSTL(STRING)&lt;/code&gt; will left adjust a string by removing leading spaces. Spaces are inserted at the end of the string as needed.</target>
        </trans-unit>
        <trans-unit id="f83c4d7c9284cb49d0a2aee2ad539d06077d5b5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ADJUSTR(STRING)&lt;/code&gt; will right adjust a string by removing trailing spaces. Spaces are inserted at the start of the string as needed.</source>
          <target state="translated">&lt;code&gt;ADJUSTR(STRING)&lt;/code&gt; は、末尾のスペースを削除して文字列を右に調整します。必要に応じて、文字列の先頭にスペースが挿入されます。</target>
        </trans-unit>
        <trans-unit id="c15a7be428b3ae4ebef1c14e514c3e0fa63fec16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AIMAG(Z)&lt;/code&gt; yields the imaginary part of complex argument &lt;code&gt;Z&lt;/code&gt;. The &lt;code&gt;IMAG(Z)&lt;/code&gt; and &lt;code&gt;IMAGPART(Z)&lt;/code&gt; intrinsic functions are provided for compatibility with &lt;code&gt;g77&lt;/code&gt;, and their use in new code is strongly discouraged.</source>
          <target state="translated">&lt;code&gt;AIMAG(Z)&lt;/code&gt; は、複素引数 &lt;code&gt;Z&lt;/code&gt; の虚数部を生成します。 &lt;code&gt;IMAG(Z)&lt;/code&gt; と &lt;code&gt;IMAGPART(Z)&lt;/code&gt; 組み込み関数は、との互換性のために提供されている &lt;code&gt;g77&lt;/code&gt; 、及び新しいコードにおけるそれらの使用が強く推奨されます。</target>
        </trans-unit>
        <trans-unit id="f5db9fd14608e881abff7022f0c27d029afca6fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AINT(A [, KIND])&lt;/code&gt; truncates its argument to a whole number.</source>
          <target state="translated">&lt;code&gt;AINT(A [, KIND])&lt;/code&gt; 、引数を整数に切り捨てます。</target>
        </trans-unit>
        <trans-unit id="25de410960145e8f837acc1fdaa4f670ee70c507" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ALARM(SECONDS, HANDLER [, STATUS])&lt;/code&gt; causes external subroutine &lt;var&gt;HANDLER&lt;/var&gt; to be executed after a delay of &lt;var&gt;SECONDS&lt;/var&gt; by using &lt;code&gt;alarm(2)&lt;/code&gt; to set up a signal and &lt;code&gt;signal(2)&lt;/code&gt; to catch it. If &lt;var&gt;STATUS&lt;/var&gt; is supplied, it will be returned with the number of seconds remaining until any previously scheduled alarm was due to be delivered, or zero if there was no previously scheduled alarm.</source>
          <target state="translated">&lt;code&gt;ALARM(SECONDS, HANDLER [, STATUS])&lt;/code&gt; は、 &lt;code&gt;alarm(2)&lt;/code&gt; を使用してシグナルを設定し、それをキャッチするために &lt;code&gt;signal(2)&lt;/code&gt; を使用して、 &lt;var&gt;SECONDS&lt;/var&gt; の遅延後に外部サブルーチン &lt;var&gt;HANDLER&lt;/var&gt; を実行します。 &lt;var&gt;STATUS&lt;/var&gt; が指定されている場合は、以前にスケジュールされたアラームが配信されるまでの残り秒数で返されます。以前にスケジュールされたアラームがなかった場合はゼロになります。</target>
        </trans-unit>
        <trans-unit id="815654d39e96eed101115c8613a94cac6aea5f21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ALL(MASK [, DIM])&lt;/code&gt; determines if all the values are true in &lt;var&gt;MASK&lt;/var&gt; in the array along dimension &lt;var&gt;DIM&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;ALL(MASK [, DIM])&lt;/code&gt; は、次元 &lt;var&gt;DIM&lt;/var&gt; に沿った配列の &lt;var&gt;MASK&lt;/var&gt; ですべての値がtrueかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="7fd4d0a4f8ec1036543cb3dd0bd036e235ceac14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ALL(MASK)&lt;/code&gt; is true if all elements of &lt;var&gt;MASK&lt;/var&gt; are true. It also is true if &lt;var&gt;MASK&lt;/var&gt; has zero size; otherwise, it is false.</source>
          <target state="translated">&lt;code&gt;ALL(MASK)&lt;/code&gt; は、すべての要素の場合はtrueで &lt;var&gt;MASK&lt;/var&gt; が真です。 &lt;var&gt;MASK&lt;/var&gt; のサイズがゼロの場合も同様です。それ以外の場合はfalseです。</target>
        </trans-unit>
        <trans-unit id="8d3a902a09a5fe33b3dd7ff4449c4d2f47749e00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ALL(MASK)&lt;/code&gt; returns a scalar value of type &lt;code&gt;LOGICAL&lt;/code&gt; where the kind type parameter is the same as the kind type parameter of &lt;var&gt;MASK&lt;/var&gt;. If &lt;var&gt;DIM&lt;/var&gt; is present, then &lt;code&gt;ALL(MASK, DIM)&lt;/code&gt; returns an array with the rank of &lt;var&gt;MASK&lt;/var&gt; minus 1. The shape is determined from the shape of &lt;var&gt;MASK&lt;/var&gt; where the &lt;var&gt;DIM&lt;/var&gt; dimension is elided.</source>
          <target state="translated">&lt;code&gt;ALL(MASK)&lt;/code&gt; は、種類 &lt;code&gt;LOGICAL&lt;/code&gt; のスカラー値を返します。ここで、種類の型パラメーターは &lt;var&gt;MASK&lt;/var&gt; の種類の型パラメーターと同じです。場合 &lt;var&gt;DIM&lt;/var&gt; が存在し、その後、 &lt;code&gt;ALL(MASK, DIM)&lt;/code&gt; の階数を持つ配列を返し &lt;var&gt;MASK&lt;/var&gt; をマイナス1形状の形状から決定される &lt;var&gt;MASK&lt;/var&gt; &lt;var&gt;DIM&lt;/var&gt; の寸法が省略されています。</target>
        </trans-unit>
        <trans-unit id="040526b0fae29caab7b147f20936177c2954f7b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ALLOCATABLE&lt;/code&gt;, &lt;code&gt;INTENT(INOUT)&lt;/code&gt;, may be of any type and kind.</source>
          <target state="translated">&lt;code&gt;ALLOCATABLE&lt;/code&gt; 、 &lt;code&gt;INTENT(INOUT)&lt;/code&gt; は、どのタイプおよび種類でもかまいません。</target>
        </trans-unit>
        <trans-unit id="e61bed5113f3f589d1772c80071ee59680856172" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ALLOCATABLE&lt;/code&gt;, &lt;code&gt;INTENT(OUT)&lt;/code&gt;, shall be of the same type, kind and rank as &lt;var&gt;FROM&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;ALLOCATABLE&lt;/code&gt; 、 &lt;code&gt;INTENT(OUT)&lt;/code&gt; は、 &lt;var&gt;FROM&lt;/var&gt; と同じタイプ、種類、ランクでなければなりません。</target>
        </trans-unit>
        <trans-unit id="70bf193a6ff166a543742ea2f8021d28337f8cf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ALLOCATED(ARRAY)&lt;/code&gt; and &lt;code&gt;ALLOCATED(SCALAR)&lt;/code&gt; check the allocation status of &lt;var&gt;ARRAY&lt;/var&gt; and &lt;var&gt;SCALAR&lt;/var&gt;, respectively.</source>
          <target state="translated">&lt;code&gt;ALLOCATED(ARRAY)&lt;/code&gt; および &lt;code&gt;ALLOCATED(SCALAR)&lt;/code&gt; は、それぞれ &lt;var&gt;ARRAY&lt;/var&gt; および &lt;var&gt;SCALAR&lt;/var&gt; の割り当てステータスをチェックします。</target>
        </trans-unit>
        <trans-unit id="a408424f6122f9b6466023dcf760908681a34900" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ANINT(A [, KIND])&lt;/code&gt; rounds its argument to the nearest whole number.</source>
          <target state="translated">&lt;code&gt;ANINT(A [, KIND])&lt;/code&gt; 、引数を最も近い整数に丸めます。</target>
        </trans-unit>
        <trans-unit id="9a65af2698c829c002363976d488e928bf0a265f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ANY(MASK [, DIM])&lt;/code&gt; determines if any of the values in the logical array &lt;var&gt;MASK&lt;/var&gt; along dimension &lt;var&gt;DIM&lt;/var&gt; are &lt;code&gt;.TRUE.&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ANY(MASK [, DIM])&lt;/code&gt; は、ディメンション &lt;var&gt;DIM&lt;/var&gt; に沿った論理配列 &lt;var&gt;MASK&lt;/var&gt; の値が &lt;code&gt;.TRUE.&lt;/code&gt; であるかどうかを判別します。。</target>
        </trans-unit>
        <trans-unit id="6ce557dc91f7440a204e6659202c9899d4fbe0e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ANY(MASK)&lt;/code&gt; is true if any element of &lt;var&gt;MASK&lt;/var&gt; is true; otherwise, it is false. It also is false if &lt;var&gt;MASK&lt;/var&gt; has zero size.</source>
          <target state="translated">&lt;code&gt;ANY(MASK)&lt;/code&gt; は、任意の要素ならば真である &lt;var&gt;MASK&lt;/var&gt; が真です。それ以外の場合はfalseです。 &lt;var&gt;MASK&lt;/var&gt; のサイズがゼロの場合もfalseです。</target>
        </trans-unit>
        <trans-unit id="71f39605d598c39618d4891b60323e4a7856fe54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ANY(MASK)&lt;/code&gt; returns a scalar value of type &lt;code&gt;LOGICAL&lt;/code&gt; where the kind type parameter is the same as the kind type parameter of &lt;var&gt;MASK&lt;/var&gt;. If &lt;var&gt;DIM&lt;/var&gt; is present, then &lt;code&gt;ANY(MASK, DIM)&lt;/code&gt; returns an array with the rank of &lt;var&gt;MASK&lt;/var&gt; minus 1. The shape is determined from the shape of &lt;var&gt;MASK&lt;/var&gt; where the &lt;var&gt;DIM&lt;/var&gt; dimension is elided.</source>
          <target state="translated">&lt;code&gt;ANY(MASK)&lt;/code&gt; は、種類 &lt;code&gt;LOGICAL&lt;/code&gt; のスカラー値を返します。ここで、種類の型パラメーターは &lt;var&gt;MASK&lt;/var&gt; の種類の型パラメーターと同じです。場合 &lt;var&gt;DIM&lt;/var&gt; が存在し、その後、 &lt;code&gt;ANY(MASK, DIM)&lt;/code&gt; の階数を持つ配列を返し &lt;var&gt;MASK&lt;/var&gt; をマイナス1形状の形状から決定される &lt;var&gt;MASK&lt;/var&gt; &lt;var&gt;DIM&lt;/var&gt; の寸法が省略されています。</target>
        </trans-unit>
        <trans-unit id="3dc1af3c11a709e2e2716d6cee94be00042a97a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ASIN(X)&lt;/code&gt; computes the arcsine of its &lt;var&gt;X&lt;/var&gt; (inverse of &lt;code&gt;SIN(X)&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;ASIN(X)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; のアークサインを計算します（ &lt;code&gt;SIN(X)&lt;/code&gt; の逆）。</target>
        </trans-unit>
        <trans-unit id="41c38295ddba6f0fabbc281e489d6710ba146838" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ASIND(X)&lt;/code&gt; computes the arcsine of its &lt;var&gt;X&lt;/var&gt; in degrees (inverse of &lt;code&gt;SIND(X)&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;ASIND(X)&lt;/code&gt; は、そのアークサインの計算 &lt;var&gt;X&lt;/var&gt; 度（の逆 &lt;code&gt;SIND(X)&lt;/code&gt; を）。</target>
        </trans-unit>
        <trans-unit id="26b8d14e4433a9c154ba81635b54aab13e07ad95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ASINH(X)&lt;/code&gt; computes the inverse hyperbolic sine of &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;ASINH(X)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; の逆双曲線正弦を計算します。</target>
        </trans-unit>
        <trans-unit id="963e7e73761ec544bf6cad07465bfebc3a36cada" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ASSOCIATED(POINTER [, TARGET])&lt;/code&gt; determines the status of the pointer &lt;var&gt;POINTER&lt;/var&gt; or if &lt;var&gt;POINTER&lt;/var&gt; is associated with the target &lt;var&gt;TARGET&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;ASSOCIATED(POINTER [, TARGET])&lt;/code&gt; は、ポインター &lt;var&gt;POINTER&lt;/var&gt; の状況、または &lt;var&gt;POINTER&lt;/var&gt; がターゲット &lt;var&gt;TARGET&lt;/var&gt; に関連付けられているかどうかを判別します。</target>
        </trans-unit>
        <trans-unit id="d5a247a483f517fd57a056135495c1f4325a9dae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ASSOCIATED(POINTER)&lt;/code&gt; is true if &lt;var&gt;POINTER&lt;/var&gt; is associated with a target; otherwise, it returns false.</source>
          <target state="translated">&lt;code&gt;ASSOCIATED(POINTER)&lt;/code&gt; は、 &lt;var&gt;POINTER&lt;/var&gt; がターゲットに関連付けられている場合はtrueです。それ以外の場合は、falseを返します。</target>
        </trans-unit>
        <trans-unit id="678075069742806dbeac9168413008c622658045" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ASSOCIATED(POINTER)&lt;/code&gt; returns a scalar value of type &lt;code&gt;LOGICAL(4)&lt;/code&gt;. There are several cases:</source>
          <target state="translated">&lt;code&gt;ASSOCIATED(POINTER)&lt;/code&gt; は、タイプ &lt;code&gt;LOGICAL(4)&lt;/code&gt; のスカラー値を返します。いくつかのケースがあります：</target>
        </trans-unit>
        <trans-unit id="2f9ee01e5617d0f6f07d03ebe6a524d0355cac3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ATAN(X)&lt;/code&gt; computes the arctangent of &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;ATAN(X)&lt;/code&gt; は &lt;var&gt;X&lt;/var&gt; の逆正接を計算します。</target>
        </trans-unit>
        <trans-unit id="49b396fba415b1c3fe0dfe1a45978c5982e536dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ATAN2(Y, X)&lt;/code&gt; computes the principal value of the argument function of the complex number &lt;em&gt;X + i Y&lt;/em&gt;. This function can be used to transform from Cartesian into polar coordinates and allows to determine the angle in the correct quadrant.</source>
          <target state="translated">&lt;code&gt;ATAN2(Y, X)&lt;/code&gt; は、複素数&lt;em&gt;X + i Y&lt;/em&gt;の引数関数の主値を計算します。この関数は、デカルト座標から極座標に変換するために使用でき、正しい象限の角度を決定できます。</target>
        </trans-unit>
        <trans-unit id="cd948015be44ca4fec3bd11c9f97dfffcde68b56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ATAN2D(Y, X)&lt;/code&gt; computes the principal value of the argument function of the complex number &lt;em&gt;X + i Y&lt;/em&gt; in degrees. This function can be used to transform from Cartesian into polar coordinates and allows to determine the angle in the correct quadrant.</source>
          <target state="translated">&lt;code&gt;ATAN2D(Y, X)&lt;/code&gt; での複素数&lt;em&gt;X + i Y&lt;/em&gt;の引数関数の主値を計算します。この関数は、デカルト座標から極座標に変換するために使用でき、正しい象限の角度を決定できます。</target>
        </trans-unit>
        <trans-unit id="d3d23ed3062b504ae484d9779c76e910852f2797" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ATAND(X)&lt;/code&gt; computes the arctangent of &lt;var&gt;X&lt;/var&gt; in degrees (inverse of &lt;a href=&quot;tand#TAND&quot;&gt;TAND&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;ATAND(X)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; のアークタンジェントを度数で計算します（&lt;a href=&quot;tand#TAND&quot;&gt;TANDの&lt;/a&gt;逆）。</target>
        </trans-unit>
        <trans-unit id="a31190ac5dc73f57f2db752e573fae577158eea9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ATANH(X)&lt;/code&gt; computes the inverse hyperbolic tangent of &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;ATANH(X)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; の逆双曲線正接を計算します。</target>
        </trans-unit>
        <trans-unit id="2462c5db702ef6165543de308ddfb41e6e809cf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ATOMIC_ADD(ATOM, VALUE)&lt;/code&gt; atomically adds the value of &lt;var&gt;VAR&lt;/var&gt; to the variable &lt;var&gt;ATOM&lt;/var&gt;. When &lt;var&gt;STAT&lt;/var&gt; is present and the invocation was successful, it is assigned the value 0. If it is present and the invocation has failed, it is assigned a positive value; in particular, for a coindexed &lt;var&gt;ATOM&lt;/var&gt;, if the remote image has stopped, it is assigned the value of &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt;&amp;rsquo;s &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; and if the remote image has failed, the value &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ATOMIC_ADD(ATOM, VALUE)&lt;/code&gt; は、変数 &lt;var&gt;ATOM&lt;/var&gt; に &lt;var&gt;VAR&lt;/var&gt; の値をアトミックに追加します。場合 &lt;var&gt;STAT&lt;/var&gt; が存在し、呼び出しが成功したこと、それが存在し、呼び出しが失敗した場合、それは正の値を割り当てられている値0が割り当てられます。特に、coindexedため &lt;var&gt;ATOM&lt;/var&gt; 遠隔画像が停止した場合、それは、値が割り当てられる &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; の &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; をし、リモート画像が失敗した場合、値 &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a0dc7e225209e8c901c3ec95df6c3b75f5882c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ATOMIC_AND(ATOM, VALUE)&lt;/code&gt; atomically defines &lt;var&gt;ATOM&lt;/var&gt; with the bitwise AND between the values of &lt;var&gt;ATOM&lt;/var&gt; and &lt;var&gt;VALUE&lt;/var&gt;. When &lt;var&gt;STAT&lt;/var&gt; is present and the invocation was successful, it is assigned the value 0. If it is present and the invocation has failed, it is assigned a positive value; in particular, for a coindexed &lt;var&gt;ATOM&lt;/var&gt;, if the remote image has stopped, it is assigned the value of &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt;&amp;rsquo;s &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; and if the remote image has failed, the value &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ATOMIC_AND(ATOM, VALUE)&lt;/code&gt; は、 &lt;var&gt;ATOM&lt;/var&gt; と &lt;var&gt;VALUE&lt;/var&gt; の値の間のビットごとのANDで &lt;var&gt;ATOM&lt;/var&gt; をアトミックに定義します。場合 &lt;var&gt;STAT&lt;/var&gt; が存在し、呼び出しが成功したこと、それが存在し、呼び出しが失敗した場合、それは正の値を割り当てられている値0が割り当てられます。特に、coindexedため &lt;var&gt;ATOM&lt;/var&gt; 遠隔画像が停止した場合、それは、値が割り当てられる &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; の &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; をし、リモート画像が失敗した場合、値 &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0bb34aae75b39d386a491cbbf399bab23fcc7562" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ATOMIC_AND(ATOM, VALUE)&lt;/code&gt; atomically defines &lt;var&gt;ATOM&lt;/var&gt; with the bitwise XOR between the values of &lt;var&gt;ATOM&lt;/var&gt; and &lt;var&gt;VALUE&lt;/var&gt;. When &lt;var&gt;STAT&lt;/var&gt; is present and the invocation was successful, it is assigned the value 0. If it is present and the invocation has failed, it is assigned a positive value; in particular, for a coindexed &lt;var&gt;ATOM&lt;/var&gt;, if the remote image has stopped, it is assigned the value of &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt;&amp;rsquo;s &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; and if the remote image has failed, the value &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ATOMIC_AND(ATOM, VALUE)&lt;/code&gt; は、 &lt;var&gt;ATOM&lt;/var&gt; と &lt;var&gt;VALUE&lt;/var&gt; の値の間のビット単位のXORで &lt;var&gt;ATOM&lt;/var&gt; をアトミックに定義します。場合 &lt;var&gt;STAT&lt;/var&gt; が存在し、呼び出しが成功したこと、それが存在し、呼び出しが失敗した場合、それは正の値を割り当てられている値0が割り当てられます。特に、coindexedため &lt;var&gt;ATOM&lt;/var&gt; 遠隔画像が停止した場合、それは、値が割り当てられる &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; の &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; をし、リモート画像が失敗した場合、値 &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e6e831dc67cf7f1f1b9f22f342a75c3e62a8d0fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ATOMIC_AND(ATOM, VALUE)&lt;/code&gt; atomically stores the value of &lt;var&gt;ATOM&lt;/var&gt; in &lt;var&gt;OLD&lt;/var&gt; and defines &lt;var&gt;ATOM&lt;/var&gt; with the bitwise AND between the values of &lt;var&gt;ATOM&lt;/var&gt; and &lt;var&gt;VALUE&lt;/var&gt;. When &lt;var&gt;STAT&lt;/var&gt; is present and the invocation was successful, it is assigned the value 0. If it is present and the invocation has failed, it is assigned a positive value; in particular, for a coindexed &lt;var&gt;ATOM&lt;/var&gt;, if the remote image has stopped, it is assigned the value of &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt;&amp;rsquo;s &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; and if the remote image has failed, the value &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ATOMIC_AND(ATOM, VALUE)&lt;/code&gt; は、 &lt;var&gt;ATOM&lt;/var&gt; の値をアトミックに &lt;var&gt;OLD&lt;/var&gt; に格納し、 &lt;var&gt;ATOM&lt;/var&gt; と &lt;var&gt;VALUE&lt;/var&gt; の値の間のビットごとのANDで &lt;var&gt;ATOM&lt;/var&gt; を定義します。場合 &lt;var&gt;STAT&lt;/var&gt; が存在し、呼び出しが成功したこと、それが存在し、呼び出しが失敗した場合、それは正の値を割り当てられている値0が割り当てられます。特に、coindexedため &lt;var&gt;ATOM&lt;/var&gt; 遠隔画像が停止した場合、それは、値が割り当てられる &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; の &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; をし、リモート画像が失敗した場合、値 &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7384f5a5dc8b0dc6f4eb13493a87815032dbdb75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ATOMIC_CAS&lt;/code&gt; compares the variable &lt;var&gt;ATOM&lt;/var&gt; with the value of &lt;var&gt;COMPARE&lt;/var&gt;; if the value is the same, &lt;var&gt;ATOM&lt;/var&gt; is set to the value of &lt;var&gt;NEW&lt;/var&gt;. Additionally, &lt;var&gt;OLD&lt;/var&gt; is set to the value of &lt;var&gt;ATOM&lt;/var&gt; that was used for the comparison. When &lt;var&gt;STAT&lt;/var&gt; is present and the invocation was successful, it is assigned the value 0. If it is present and the invocation has failed, it is assigned a positive value; in particular, for a coindexed &lt;var&gt;ATOM&lt;/var&gt;, if the remote image has stopped, it is assigned the value of &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt;&amp;rsquo;s &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; and if the remote image has failed, the value &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ATOMIC_CAS&lt;/code&gt; は、変数 &lt;var&gt;ATOM&lt;/var&gt; を &lt;var&gt;COMPARE&lt;/var&gt; の値と比較します。値が同じ場合、 &lt;var&gt;ATOM&lt;/var&gt; は &lt;var&gt;NEW&lt;/var&gt; の値に設定されます。さらに、 &lt;var&gt;OLD&lt;/var&gt; は、比較に使用された &lt;var&gt;ATOM&lt;/var&gt; の値に設定されます。場合 &lt;var&gt;STAT&lt;/var&gt; が存在し、呼び出しが成功したこと、それが存在し、呼び出しが失敗した場合、それは正の値を割り当てられている値0が割り当てられます。特に、coindexedため &lt;var&gt;ATOM&lt;/var&gt; 遠隔画像が停止している場合、それは、値が割り当てられる &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; の &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; と遠隔画像が失敗した場合、値を &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a0b1b815f57797d56b4aed99b81829c59985376" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ATOMIC_DEFINE(ATOM, VALUE)&lt;/code&gt; atomically assigns the value of the variable &lt;var&gt;ATOM&lt;/var&gt; to &lt;var&gt;VALUE&lt;/var&gt;. When &lt;var&gt;STAT&lt;/var&gt; is present and the invocation was successful, it is assigned the value 0. If it is present and the invocation has failed, it is assigned a positive value; in particular, for a coindexed &lt;var&gt;ATOM&lt;/var&gt;, if the remote image has stopped, it is assigned the value of &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt;&amp;rsquo;s &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; and if the remote image has failed, the value &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ATOMIC_DEFINE(ATOM, VALUE)&lt;/code&gt; アトミック変数の値が代入 &lt;var&gt;ATOM&lt;/var&gt; に &lt;var&gt;VALUE&lt;/var&gt; 。場合 &lt;var&gt;STAT&lt;/var&gt; が存在し、呼び出しが成功したこと、それが存在し、呼び出しが失敗した場合、それは正の値を割り当てられている値0が割り当てられます。特に、coindexedため &lt;var&gt;ATOM&lt;/var&gt; 遠隔画像が停止した場合、それは、値が割り当てられる &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; の &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; をし、リモート画像が失敗した場合、値 &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="84dc70d78578a5e9032dc4c07ca720def0cf619e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ATOMIC_DEFINE(ATOM, VALUE)&lt;/code&gt; defines the variable &lt;var&gt;ATOM&lt;/var&gt; with the value &lt;var&gt;VALUE&lt;/var&gt; atomically. When &lt;var&gt;STAT&lt;/var&gt; is present and the invocation was successful, it is assigned the value 0. If it is present and the invocation has failed, it is assigned a positive value; in particular, for a coindexed &lt;var&gt;ATOM&lt;/var&gt;, if the remote image has stopped, it is assigned the value of &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt;&amp;rsquo;s &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; and if the remote image has failed, the value &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ATOMIC_DEFINE(ATOM, VALUE)&lt;/code&gt; は、変数 &lt;var&gt;ATOM&lt;/var&gt; を値 &lt;var&gt;VALUE&lt;/var&gt; でアトミックに定義します。場合 &lt;var&gt;STAT&lt;/var&gt; が存在し、呼び出しが成功したこと、それが存在し、呼び出しが失敗した場合、それは正の値を割り当てられている値0が割り当てられます。特に、coindexedため &lt;var&gt;ATOM&lt;/var&gt; 遠隔画像が停止した場合、それは、値が割り当てられる &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; の &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; をし、リモート画像が失敗した場合、値 &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="badab29c4af731a8db3167f97c1e72b091bae36b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ATOMIC_FETCH_ADD(ATOM, VALUE, OLD)&lt;/code&gt; atomically stores the value of &lt;var&gt;ATOM&lt;/var&gt; in &lt;var&gt;OLD&lt;/var&gt; and adds the value of &lt;var&gt;VAR&lt;/var&gt; to the variable &lt;var&gt;ATOM&lt;/var&gt;. When &lt;var&gt;STAT&lt;/var&gt; is present and the invocation was successful, it is assigned the value 0. If it is present and the invocation has failed, it is assigned a positive value; in particular, for a coindexed &lt;var&gt;ATOM&lt;/var&gt;, if the remote image has stopped, it is assigned the value of &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt;&amp;rsquo;s &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; and if the remote image has failed, the value &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ATOMIC_FETCH_ADD(ATOM, VALUE, OLD)&lt;/code&gt; アトミックの値格納 &lt;var&gt;ATOM&lt;/var&gt; で &lt;var&gt;OLD&lt;/var&gt; をの値加算 &lt;var&gt;VAR&lt;/var&gt; を可変に &lt;var&gt;ATOM&lt;/var&gt; 。場合 &lt;var&gt;STAT&lt;/var&gt; が存在し、呼び出しが成功したこと、それが存在し、呼び出しが失敗した場合、それは正の値を割り当てられている値0が割り当てられます。特に、coindexedため &lt;var&gt;ATOM&lt;/var&gt; 遠隔画像が停止した場合、それは、値が割り当てられる &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; の &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; をし、リモート画像が失敗した場合、値 &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47aa3defa61922f60213f14fb0dfe895d793dd88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ATOMIC_INT_KIND&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;ATOMIC_INT_KIND&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="ac02760464e8fdea6ba6bb89c90608c4d2800f47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ATOMIC_LOGICAL_KIND&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;ATOMIC_LOGICAL_KIND&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="4b99a01faaad0428b609dbc7917a653907a30a2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ATOMIC_OR(ATOM, VALUE)&lt;/code&gt; atomically defines &lt;var&gt;ATOM&lt;/var&gt; with the bitwise AND between the values of &lt;var&gt;ATOM&lt;/var&gt; and &lt;var&gt;VALUE&lt;/var&gt;. When &lt;var&gt;STAT&lt;/var&gt; is present and the invocation was successful, it is assigned the value 0. If it is present and the invocation has failed, it is assigned a positive value; in particular, for a coindexed &lt;var&gt;ATOM&lt;/var&gt;, if the remote image has stopped, it is assigned the value of &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt;&amp;rsquo;s &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; and if the remote image has failed, the value &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ATOMIC_OR(ATOM, VALUE)&lt;/code&gt; は、 &lt;var&gt;ATOM&lt;/var&gt; と &lt;var&gt;VALUE&lt;/var&gt; の値の間のビットごとのANDで &lt;var&gt;ATOM&lt;/var&gt; をアトミックに定義します。場合 &lt;var&gt;STAT&lt;/var&gt; が存在し、呼び出しが成功したこと、それが存在し、呼び出しが失敗した場合、それは正の値を割り当てられている値0が割り当てられます。特に、coindexedため &lt;var&gt;ATOM&lt;/var&gt; 遠隔画像が停止した場合、それは、値が割り当てられる &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; の &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; をし、リモート画像が失敗した場合、値 &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75839c8391c3b86e17e3d3e240949d853692601a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ATOMIC_OR(ATOM, VALUE)&lt;/code&gt; atomically stores the value of &lt;var&gt;ATOM&lt;/var&gt; in &lt;var&gt;OLD&lt;/var&gt; and defines &lt;var&gt;ATOM&lt;/var&gt; with the bitwise OR between the values of &lt;var&gt;ATOM&lt;/var&gt; and &lt;var&gt;VALUE&lt;/var&gt;. When &lt;var&gt;STAT&lt;/var&gt; is present and the invocation was successful, it is assigned the value 0. If it is present and the invocation has failed, it is assigned a positive value; in particular, for a coindexed &lt;var&gt;ATOM&lt;/var&gt;, if the remote image has stopped, it is assigned the value of &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt;&amp;rsquo;s &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; and if the remote image has failed, the value &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ATOMIC_OR(ATOM, VALUE)&lt;/code&gt; は、 &lt;var&gt;ATOM&lt;/var&gt; の値をアトミックに &lt;var&gt;OLD&lt;/var&gt; に格納し、 &lt;var&gt;ATOM&lt;/var&gt; と &lt;var&gt;VALUE&lt;/var&gt; の値の間のビット単位ORで &lt;var&gt;ATOM&lt;/var&gt; を定義します。場合 &lt;var&gt;STAT&lt;/var&gt; が存在し、呼び出しが成功したこと、それが存在し、呼び出しが失敗した場合、それは正の値を割り当てられている値0が割り当てられます。特に、coindexedため &lt;var&gt;ATOM&lt;/var&gt; 遠隔画像が停止した場合、それは、値が割り当てられる &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; の &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; をし、リモート画像が失敗した場合、値 &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1737969298b5750a81ab8df57d835baba288e484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ATOMIC_XOR(ATOM, VALUE)&lt;/code&gt; atomically stores the value of &lt;var&gt;ATOM&lt;/var&gt; in &lt;var&gt;OLD&lt;/var&gt; and defines &lt;var&gt;ATOM&lt;/var&gt; with the bitwise XOR between the values of &lt;var&gt;ATOM&lt;/var&gt; and &lt;var&gt;VALUE&lt;/var&gt;. When &lt;var&gt;STAT&lt;/var&gt; is present and the invocation was successful, it is assigned the value 0. If it is present and the invocation has failed, it is assigned a positive value; in particular, for a coindexed &lt;var&gt;ATOM&lt;/var&gt;, if the remote image has stopped, it is assigned the value of &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt;&amp;rsquo;s &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; and if the remote image has failed, the value &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ATOMIC_XOR(ATOM, VALUE)&lt;/code&gt; は、 &lt;var&gt;ATOM&lt;/var&gt; の値を原子的に &lt;var&gt;OLD&lt;/var&gt; に格納し、 &lt;var&gt;ATOM&lt;/var&gt; と &lt;var&gt;VALUE&lt;/var&gt; の値の間のビット単位のXORで &lt;var&gt;ATOM&lt;/var&gt; を定義します。場合 &lt;var&gt;STAT&lt;/var&gt; が存在し、呼び出しが成功したこと、それが存在し、呼び出しが失敗した場合、それは正の値を割り当てられている値0が割り当てられます。特に、coindexedため &lt;var&gt;ATOM&lt;/var&gt; 遠隔画像が停止した場合、それは、値が割り当てられる &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; の &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; をし、リモート画像が失敗した場合、値 &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="20eb8c99f8d6bf674e4ff4eb96c5ccf3b8e1ce81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BACKTRACE&lt;/code&gt; shows a backtrace at an arbitrary place in user code. Program execution continues normally afterwards. The backtrace information is printed to the unit corresponding to &lt;code&gt;ERROR_UNIT&lt;/code&gt; in &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BACKTRACE&lt;/code&gt; は、ユーザーコードの任意の場所にバックトレースを表示します。その後、プログラムの実行は正常に続行されます。バックトレース情報は、 &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; の &lt;code&gt;ERROR_UNIT&lt;/code&gt; に対応するユニットに出力されます。</target>
        </trans-unit>
        <trans-unit id="659e335362c9d3454aea450b5403d6be25ddd52f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BESSEL_J0(X)&lt;/code&gt; computes the Bessel function of the first kind of order 0 of &lt;var&gt;X&lt;/var&gt;. This function is available under the name &lt;code&gt;BESJ0&lt;/code&gt; as a GNU extension.</source>
          <target state="translated">&lt;code&gt;BESSEL_J0(X)&lt;/code&gt; は、の0次の第一種ベッセル関数計算 &lt;var&gt;X&lt;/var&gt; を。この関数は、GNU拡張機能として &lt;code&gt;BESJ0&lt;/code&gt; という名前で使用できます。</target>
        </trans-unit>
        <trans-unit id="7aaa5865bd98aa9d9e1716c45ccc8d2d0b886a63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BESSEL_J1(X)&lt;/code&gt; computes the Bessel function of the first kind of order 1 of &lt;var&gt;X&lt;/var&gt;. This function is available under the name &lt;code&gt;BESJ1&lt;/code&gt; as a GNU extension.</source>
          <target state="translated">&lt;code&gt;BESSEL_J1(X)&lt;/code&gt; は、順序1の第1種ベッセル関数計算 &lt;var&gt;X&lt;/var&gt; を。この関数は、GNU拡張機能として &lt;code&gt;BESJ1&lt;/code&gt; という名前で使用できます。</target>
        </trans-unit>
        <trans-unit id="63c7d9044482ee1176a4d8265e7a200ef3a48e32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BESSEL_JN(N, X)&lt;/code&gt; computes the Bessel function of the first kind of order &lt;var&gt;N&lt;/var&gt; of &lt;var&gt;X&lt;/var&gt;. This function is available under the name &lt;code&gt;BESJN&lt;/code&gt; as a GNU extension. If &lt;var&gt;N&lt;/var&gt; and &lt;var&gt;X&lt;/var&gt; are arrays, their ranks and shapes shall conform.</source>
          <target state="translated">&lt;code&gt;BESSEL_JN(N, X)&lt;/code&gt; 、注文の第一種ベッセル関数計算 &lt;var&gt;N&lt;/var&gt; の &lt;var&gt;X&lt;/var&gt; を。この関数は、GNU拡張機能として &lt;code&gt;BESJN&lt;/code&gt; という名前で使用できます。 &lt;var&gt;N&lt;/var&gt; と &lt;var&gt;X&lt;/var&gt; が配列の場合、それらのランクと形状は一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="04867aa960c1b4d13f57c31d5e164c7ffb029711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BESSEL_JN(N1, N2, X)&lt;/code&gt; returns an array with the Bessel functions of the first kind of the orders &lt;var&gt;N1&lt;/var&gt; to &lt;var&gt;N2&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;BESSEL_JN(N1, N2, X)&lt;/code&gt; 注文の第一種ベッセル関数の配列戻り &lt;var&gt;N1&lt;/var&gt; に &lt;var&gt;N2&lt;/var&gt; を。</target>
        </trans-unit>
        <trans-unit id="8d82654428ebc275a73195c1552f7e95652f2347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BESSEL_Y0(X)&lt;/code&gt; computes the Bessel function of the second kind of order 0 of &lt;var&gt;X&lt;/var&gt;. This function is available under the name &lt;code&gt;BESY0&lt;/code&gt; as a GNU extension.</source>
          <target state="translated">&lt;code&gt;BESSEL_Y0(X)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; の次数0の第2種のベッセル関数を計算します。この関数は、GNU拡張機能として &lt;code&gt;BESY0&lt;/code&gt; という名前で使用できます。</target>
        </trans-unit>
        <trans-unit id="d6b689a62331c029c9b39065e5ea97626e6866db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BESSEL_Y1(X)&lt;/code&gt; computes the Bessel function of the second kind of order 1 of &lt;var&gt;X&lt;/var&gt;. This function is available under the name &lt;code&gt;BESY1&lt;/code&gt; as a GNU extension.</source>
          <target state="translated">&lt;code&gt;BESSEL_Y1(X)&lt;/code&gt; は、順序1の第2種のベッセル関数計算 &lt;var&gt;X&lt;/var&gt; を。この関数は、GNU拡張機能として &lt;code&gt;BESY1&lt;/code&gt; という名前で使用できます。</target>
        </trans-unit>
        <trans-unit id="a30ad80dfaa4d2f776b2dd3489f202f27df727df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BESSEL_YN(N, X)&lt;/code&gt; computes the Bessel function of the second kind of order &lt;var&gt;N&lt;/var&gt; of &lt;var&gt;X&lt;/var&gt;. This function is available under the name &lt;code&gt;BESYN&lt;/code&gt; as a GNU extension. If &lt;var&gt;N&lt;/var&gt; and &lt;var&gt;X&lt;/var&gt; are arrays, their ranks and shapes shall conform.</source>
          <target state="translated">&lt;code&gt;BESSEL_YN(N, X)&lt;/code&gt; 、注文の第二種ベッセル関数計算 &lt;var&gt;N&lt;/var&gt; の &lt;var&gt;X&lt;/var&gt; を。この関数は、GNU拡張として &lt;code&gt;BESYN&lt;/code&gt; という名前で使用できます。 &lt;var&gt;N&lt;/var&gt; と &lt;var&gt;X&lt;/var&gt; が配列の場合、それらのランクと形状は一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="9754fff74222b86d940ae858f3ceb5b7486cdaba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BESSEL_YN(N1, N2, X)&lt;/code&gt; returns an array with the Bessel functions of the first kind of the orders &lt;var&gt;N1&lt;/var&gt; to &lt;var&gt;N2&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;BESSEL_YN(N1, N2, X)&lt;/code&gt; は、次数が &lt;var&gt;N1&lt;/var&gt; から &lt;var&gt;N2&lt;/var&gt; の第1種のベッセル関数を含む配列を返します。</target>
        </trans-unit>
        <trans-unit id="9e304f524feb8eea3b3d9ab19f777c6f67f968a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BIG_ENDIAN&lt;/code&gt; Use the big-endian format for unformatted files.</source>
          <target state="translated">&lt;code&gt;BIG_ENDIAN&lt;/code&gt; 書式なしファイルにはビッグエンディアン形式を使用します。</target>
        </trans-unit>
        <trans-unit id="52f8d22c9b4b7cb0ae2c48e678c4a285a4b7882b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BIT_SIZE(I)&lt;/code&gt; returns the number of bits (integer precision plus sign bit) represented by the type of &lt;var&gt;I&lt;/var&gt;. The result of &lt;code&gt;BIT_SIZE(I)&lt;/code&gt; is independent of the actual value of &lt;var&gt;I&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;BIT_SIZE(I)&lt;/code&gt; は、 &lt;var&gt;I&lt;/var&gt; の型で表されるビット数（整数精度と符号ビット）を返します。 &lt;code&gt;BIT_SIZE(I)&lt;/code&gt; の結果は、 &lt;var&gt;I&lt;/var&gt; の実際の値とは無関係です。</target>
        </trans-unit>
        <trans-unit id="13fcfcc599d81093b9a77dfbcea5690b5ebe39e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BTEST(I,POS)&lt;/code&gt; returns logical &lt;code&gt;.TRUE.&lt;/code&gt; if the bit at &lt;var&gt;POS&lt;/var&gt; in &lt;var&gt;I&lt;/var&gt; is set. The counting of the bits starts at 0.</source>
          <target state="translated">&lt;code&gt;BTEST(I,POS)&lt;/code&gt; は論理 &lt;code&gt;.TRUE.&lt;/code&gt; 返します。場合のビット &lt;var&gt;POS&lt;/var&gt; で &lt;var&gt;I&lt;/var&gt; が設定されています。ビットのカウントは0から始まります。</target>
        </trans-unit>
        <trans-unit id="ccbc6784f2f320f451f7ff95086351ff1f03eb6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CALL CTIME(TIME, RESULT)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CALL CTIME(TIME, RESULT)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e6648c1259a68c5c964590d1df67d71043b738d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CALL DTIME(VALUES, TIME)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CALL DTIME(VALUES, TIME)&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="e281d31792e1668ff16bc3948630a6e717f7c6ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CALL ETIME(VALUES, TIME)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CALL ETIME(VALUES, TIME)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc6bdd5db31f6917d22e92647e11989b77f484a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CALL FDATE(DATE)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CALL FDATE(DATE)&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="92e493c3c794dc504b480c5e2a668ce5c3f169de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CDECL&lt;/code&gt; &amp;ndash; standard C calling convention</source>
          <target state="translated">&lt;code&gt;CDECL&lt;/code&gt; &amp;ndash;標準C呼び出し規約</target>
        </trans-unit>
        <trans-unit id="124a8cd620bbc9aa59493ce34ae4cd513cbc8b04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CEILING(A)&lt;/code&gt; returns the least integer greater than or equal to &lt;var&gt;A&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;CEILING(A)&lt;/code&gt; はより少なく整数大きくを返すか等しい &lt;var&gt;A&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="0af7b39055d3651c9a9bcb1ffa4a6c8570ea8f53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CHAR(I [, KIND])&lt;/code&gt; returns the character represented by the integer &lt;var&gt;I&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;CHAR(I [, KIND])&lt;/code&gt; は、整数 &lt;var&gt;I&lt;/var&gt; で表される文字を返します。</target>
        </trans-unit>
        <trans-unit id="d30bac89def6fdbf2ba423f194dd791fd09de3a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CHARACTER_KINDS&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;CHARACTER_KINDS&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="5b13524374bc75569386f908ec58e4d41fc41720" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CHARACTER_STORAGE_SIZE&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;CHARACTER_STORAGE_SIZE&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="566384a002c40bbb283845810f269c7053ce9fb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CHMOD&lt;/code&gt; as function:</source>
          <target state="translated">&lt;code&gt;CHMOD&lt;/code&gt; 関数としてのCHMOD：</target>
        </trans-unit>
        <trans-unit id="d17b8e1263f83427a25c5fc2211dd8ab6cf4683b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CHMOD&lt;/code&gt; as subroutine</source>
          <target state="translated">&lt;code&gt;CHMOD&lt;/code&gt; サブルーチンとして</target>
        </trans-unit>
        <trans-unit id="8c3c7765b88ba08896022119831797d5edb30009" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CHMOD&lt;/code&gt; changes the permissions of a file.</source>
          <target state="translated">&lt;code&gt;CHMOD&lt;/code&gt; はファイルの権限を変更します。</target>
        </trans-unit>
        <trans-unit id="40b90d66f307635ac3f99b2c593ab0b252bb34c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CMPLX(X [, Y [, KIND]])&lt;/code&gt; returns a complex number where &lt;var&gt;X&lt;/var&gt; is converted to the real component. If &lt;var&gt;Y&lt;/var&gt; is present it is converted to the imaginary component. If &lt;var&gt;Y&lt;/var&gt; is not present then the imaginary component is set to 0.0. If &lt;var&gt;X&lt;/var&gt; is complex then &lt;var&gt;Y&lt;/var&gt; must not be present.</source>
          <target state="translated">&lt;code&gt;CMPLX(X [, Y [, KIND]])&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; が実数成分に変換される複素数を返します。 &lt;var&gt;Y&lt;/var&gt; が存在する場合は、虚数成分に変換されます。 &lt;var&gt;Y&lt;/var&gt; が存在しない場合、虚数成分は0.0に設定されます。 &lt;var&gt;X&lt;/var&gt; が複素数の場合、 &lt;var&gt;Y&lt;/var&gt; が存在してはなりません。</target>
        </trans-unit>
        <trans-unit id="d144ab71a589686cf1eaa1fa702ccde2957c2dd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COMMAND_ARGUMENT_COUNT&lt;/code&gt; returns the number of arguments passed on the command line when the containing program was invoked.</source>
          <target state="translated">&lt;code&gt;COMMAND_ARGUMENT_COUNT&lt;/code&gt; は、含まれているプログラムが呼び出されたときにコマンドラインで渡された引数の数を返します。</target>
        </trans-unit>
        <trans-unit id="c4b214687809069dfa670afa43a9a5c464cdcd75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COMPILER_OPTIONS&lt;/code&gt; returns a string with the options used for compiling.</source>
          <target state="translated">&lt;code&gt;COMPILER_OPTIONS&lt;/code&gt; は、コンパイルに使用されるオプションを含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="d38461de68097c91b0516e639e92c90dd44d3f2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COMPILER_VERSION&lt;/code&gt; returns a string with the name and the version of the compiler.</source>
          <target state="translated">&lt;code&gt;COMPILER_VERSION&lt;/code&gt; は、コンパイラの名前とバージョンを含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="77c930124287503d64d3b3fbe229281d081bb921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COMPLEX(X, Y)&lt;/code&gt; returns a complex number where &lt;var&gt;X&lt;/var&gt; is converted to the real component and &lt;var&gt;Y&lt;/var&gt; is converted to the imaginary component.</source>
          <target state="translated">&lt;code&gt;COMPLEX(X, Y)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; が実数成分に変換され、 &lt;var&gt;Y&lt;/var&gt; が虚数成分に変換される複素数を返します。</target>
        </trans-unit>
        <trans-unit id="e30c9cdd8dca0f1e74a0328f75c41f54f7d69535" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CONJG(Z)&lt;/code&gt; returns the conjugate of &lt;var&gt;Z&lt;/var&gt;. If &lt;var&gt;Z&lt;/var&gt; is &lt;code&gt;(x, y)&lt;/code&gt; then the result is &lt;code&gt;(x, -y)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CONJG(Z)&lt;/code&gt; は、の共役戻り &lt;var&gt;Z&lt;/var&gt; を。場合 &lt;var&gt;Z&lt;/var&gt; はである &lt;code&gt;(x, y)&lt;/code&gt; 、結果は &lt;code&gt;(x, -y)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7cc562e4a8eb02ab44d32005920e59dfebb7144" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CONVERT&lt;/code&gt; works between big- and little-endian for &lt;code&gt;INTEGER&lt;/code&gt; values of all supported kinds and for &lt;code&gt;REAL&lt;/code&gt; on IEEE systems of kinds 4 and 8. Conversion between different &amp;ldquo;extended double&amp;rdquo; types on different architectures such as m68k and x86_64, which GNU Fortran supports as &lt;code&gt;REAL(KIND=10)&lt;/code&gt; and &lt;code&gt;REAL(KIND=16)&lt;/code&gt;, will probably not work.</source>
          <target state="translated">&lt;code&gt;CONVERT&lt;/code&gt; は、ビッグエンディアンとリトルエンディアンの間で機能し、サポートされているすべての種類の &lt;code&gt;INTEGER&lt;/code&gt; 値と、種類4および8のIEEEシステムの &lt;code&gt;REAL&lt;/code&gt; で機能します。 &lt;code&gt;REAL(KIND=10)&lt;/code&gt; および &lt;code&gt;REAL(KIND=16)&lt;/code&gt; はおそらく機能しません。</target>
        </trans-unit>
        <trans-unit id="6799fe288e06ac26d7f4bfa0835b4e2d473d8c72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CONVERT='BIG_ENDIAN'&lt;/code&gt; Use the big-endian representation for unformatted files.</source>
          <target state="translated">&lt;code&gt;CONVERT='BIG_ENDIAN'&lt;/code&gt; 書式なしファイルにはビッグエンディアン表現を使用します。</target>
        </trans-unit>
        <trans-unit id="082812e13e90245b14a200f682ef8691e731cb63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CONVERT='LITTLE_ENDIAN'&lt;/code&gt; Use the little-endian representation for unformatted files.</source>
          <target state="translated">&lt;code&gt;CONVERT='LITTLE_ENDIAN'&lt;/code&gt; フォーマットされていないファイルにはリトルエンディアン表現を使用します。</target>
        </trans-unit>
        <trans-unit id="16040a897876bfedb8446618c5b692f6a3647265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CONVERT='NATIVE'&lt;/code&gt; Use the native format. This is the default.</source>
          <target state="translated">&lt;code&gt;CONVERT='NATIVE'&lt;/code&gt; ネイティブ形式を使用します。これがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="aad1080486dde49c310c0d93133907770f4246c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CONVERT='SWAP'&lt;/code&gt; Swap between little- and big-endian.</source>
          <target state="translated">&lt;code&gt;CONVERT='SWAP'&lt;/code&gt; リトルエンディアンとビッグエンディアンを入れ替えます。</target>
        </trans-unit>
        <trans-unit id="bd679be58dd4540d1566ea52dc8f6f0bfa20f420" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COS(X)&lt;/code&gt; computes the cosine of &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;COS(X)&lt;/code&gt; は &lt;var&gt;X&lt;/var&gt; の余弦を計算します。</target>
        </trans-unit>
        <trans-unit id="d33efdd882ee8cb8c9afb0f6283c5a3085f1b2d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COSD(X)&lt;/code&gt; computes the cosine of &lt;var&gt;X&lt;/var&gt; in degrees.</source>
          <target state="translated">&lt;code&gt;COSD(X)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; のコサインを度単位で計算します。</target>
        </trans-unit>
        <trans-unit id="584d44120fa9a02407fa0d3537948e8225bec9ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COSH(X)&lt;/code&gt; computes the hyperbolic cosine of &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;COSH(X)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; の双曲線余弦を計算します。</target>
        </trans-unit>
        <trans-unit id="901bc02a693ed9382891c54e86296c3414d0b775" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COTAN(X)&lt;/code&gt; computes the cotangent of &lt;var&gt;X&lt;/var&gt;. Equivalent to &lt;code&gt;COS(x)&lt;/code&gt; divided by &lt;code&gt;SIN(x)&lt;/code&gt;, or &lt;code&gt;1 / TAN(x)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;COTAN(X)&lt;/code&gt; は &lt;var&gt;X&lt;/var&gt; のコタンジェントを計算します。相当する &lt;code&gt;COS(x)&lt;/code&gt; で割った &lt;code&gt;SIN(x)&lt;/code&gt; 、又は &lt;code&gt;1 / TAN(x)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d4c293355c942859aff0b914ce4e56d62e3ce37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COTAND(X)&lt;/code&gt; computes the cotangent of &lt;var&gt;X&lt;/var&gt; in degrees. Equivalent to &lt;code&gt;COSD(x)&lt;/code&gt; divided by &lt;code&gt;SIND(x)&lt;/code&gt;, or &lt;code&gt;1 / TAND(x)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;COTAND(X)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; のコタンジェントを度数で計算します。 &lt;code&gt;COSD(x)&lt;/code&gt; をSIND（x）で割った &lt;code&gt;SIND(x)&lt;/code&gt; 、または &lt;code&gt;1 / TAND(x)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5b9835670c0fd2b2334e0ec10b09873c3b93af2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CO_BROADCAST&lt;/code&gt; copies the value of argument &lt;var&gt;A&lt;/var&gt; on the image with image index &lt;code&gt;SOURCE_IMAGE&lt;/code&gt; to all images in the current team. &lt;var&gt;A&lt;/var&gt; becomes defined as if by intrinsic assignment. If the execution was successful and &lt;var&gt;STAT&lt;/var&gt; is present, it is assigned the value zero. If the execution failed, &lt;var&gt;STAT&lt;/var&gt; gets assigned a nonzero value and, if present, &lt;var&gt;ERRMSG&lt;/var&gt; gets assigned a value describing the occurred error.</source>
          <target state="translated">&lt;code&gt;CO_BROADCAST&lt;/code&gt; は、画像インデックス &lt;code&gt;SOURCE_IMAGE&lt;/code&gt; を持つ画像の引数 &lt;var&gt;A&lt;/var&gt; の値を現在のチームのすべての画像にコピーします。 &lt;var&gt;A&lt;/var&gt; は、組み込み代入によって定義されたかのようになります。実行が成功し、 &lt;var&gt;STAT&lt;/var&gt; が存在する場合は、値0が割り当てられます。実行が失敗した場合、 &lt;var&gt;STAT&lt;/var&gt; にはゼロ以外の値が割り当てられ、存在する場合、 &lt;var&gt;ERRMSG&lt;/var&gt; には発生したエラーを説明する値が割り当てられます。</target>
        </trans-unit>
        <trans-unit id="828969f39a9589a75e32ef77ef57c6d71a4fe978" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CO_MAX&lt;/code&gt; determines element-wise the maximal value of &lt;var&gt;A&lt;/var&gt; on all images of the current team. If &lt;var&gt;RESULT_IMAGE&lt;/var&gt; is present, the maximum values are returned in &lt;var&gt;A&lt;/var&gt; on the specified image only and the value of &lt;var&gt;A&lt;/var&gt; on the other images become undefined. If &lt;var&gt;RESULT_IMAGE&lt;/var&gt; is not present, the value is returned on all images. If the execution was successful and &lt;var&gt;STAT&lt;/var&gt; is present, it is assigned the value zero. If the execution failed, &lt;var&gt;STAT&lt;/var&gt; gets assigned a nonzero value and, if present, &lt;var&gt;ERRMSG&lt;/var&gt; gets assigned a value describing the occurred error.</source>
          <target state="translated">&lt;code&gt;CO_MAX&lt;/code&gt; は、要素ごとに現在のチームのすべての画像の &lt;var&gt;A&lt;/var&gt; の最大値を決定します。場合 &lt;var&gt;RESULT_IMAGE&lt;/var&gt; が存在し、最大値はで返される &lt;var&gt;A&lt;/var&gt; のみ指定された画像上の値 &lt;var&gt;A&lt;/var&gt; 他の画像では不定となります。 &lt;var&gt;RESULT_IMAGE&lt;/var&gt; が存在しない場合、値はすべての画像で返されます。実行が成功し、 &lt;var&gt;STAT&lt;/var&gt; が存在する場合は、値0が割り当てられます。実行が失敗した場合、 &lt;var&gt;STAT&lt;/var&gt; にはゼロ以外の値が割り当てられ、存在する場合、 &lt;var&gt;ERRMSG&lt;/var&gt; には発生したエラーを説明する値が割り当てられます。</target>
        </trans-unit>
        <trans-unit id="eb084191b0b6dfed9b771e79102673ce8badad3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CO_MIN&lt;/code&gt; determines element-wise the minimal value of &lt;var&gt;A&lt;/var&gt; on all images of the current team. If &lt;var&gt;RESULT_IMAGE&lt;/var&gt; is present, the minimal values are returned in &lt;var&gt;A&lt;/var&gt; on the specified image only and the value of &lt;var&gt;A&lt;/var&gt; on the other images become undefined. If &lt;var&gt;RESULT_IMAGE&lt;/var&gt; is not present, the value is returned on all images. If the execution was successful and &lt;var&gt;STAT&lt;/var&gt; is present, it is assigned the value zero. If the execution failed, &lt;var&gt;STAT&lt;/var&gt; gets assigned a nonzero value and, if present, &lt;var&gt;ERRMSG&lt;/var&gt; gets assigned a value describing the occurred error.</source>
          <target state="translated">&lt;code&gt;CO_MIN&lt;/code&gt; は、現在のチームのすべての画像で、要素ごとに &lt;var&gt;A&lt;/var&gt; の最小値を決定します。場合 &lt;var&gt;RESULT_IMAGE&lt;/var&gt; が存在し、最小値に戻され &lt;var&gt;A&lt;/var&gt; のみ指定された画像上の値 &lt;var&gt;A&lt;/var&gt; 他の画像では不定となります。 &lt;var&gt;RESULT_IMAGE&lt;/var&gt; が存在しない場合、値はすべての画像で返されます。実行が成功し、 &lt;var&gt;STAT&lt;/var&gt; が存在する場合は、値0が割り当てられます。実行が失敗した場合、 &lt;var&gt;STAT&lt;/var&gt; にはゼロ以外の値が割り当てられ、存在する場合、 &lt;var&gt;ERRMSG&lt;/var&gt; には発生したエラーを説明する値が割り当てられます。</target>
        </trans-unit>
        <trans-unit id="f216fb1da44f46994374ab67c6d336abb113c173" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CO_REDUCE&lt;/code&gt; determines element-wise the reduction of the value of &lt;var&gt;A&lt;/var&gt; on all images of the current team. The pure function passed as &lt;var&gt;OPERATOR&lt;/var&gt; is used to pairwise reduce the values of &lt;var&gt;A&lt;/var&gt; by passing either the value of &lt;var&gt;A&lt;/var&gt; of different images or the result values of such a reduction as argument. If &lt;var&gt;A&lt;/var&gt; is an array, the deduction is done element wise. If &lt;var&gt;RESULT_IMAGE&lt;/var&gt; is present, the result values are returned in &lt;var&gt;A&lt;/var&gt; on the specified image only and the value of &lt;var&gt;A&lt;/var&gt; on the other images become undefined. If &lt;var&gt;RESULT_IMAGE&lt;/var&gt; is not present, the value is returned on all images. If the execution was successful and &lt;var&gt;STAT&lt;/var&gt; is present, it is assigned the value zero. If the execution failed, &lt;var&gt;STAT&lt;/var&gt; gets assigned a nonzero value and, if present, &lt;var&gt;ERRMSG&lt;/var&gt; gets assigned a value describing the occurred error.</source>
          <target state="translated">&lt;code&gt;CO_REDUCE&lt;/code&gt; は、現在のチームのすべての画像の &lt;var&gt;A&lt;/var&gt; の値の要素ごとの削減を決定します。 &lt;var&gt;OPERATOR&lt;/var&gt; として渡される純粋な関数は、異なる画像の &lt;var&gt;A&lt;/var&gt; の値またはそのような削減の結果値を引数として渡すことにより、ペアで &lt;var&gt;A&lt;/var&gt; の値を削減するために使用されます。場合は &lt;var&gt;A&lt;/var&gt; 配列され、控除は賢明な要素が行われます。場合 &lt;var&gt;RESULT_IMAGE&lt;/var&gt; が存在し、結果値がで返される &lt;var&gt;A&lt;/var&gt; のみ指定された画像上の値 &lt;var&gt;A&lt;/var&gt; 他の画像では不定となります。 &lt;var&gt;RESULT_IMAGE&lt;/var&gt; が存在しない場合、値はすべての画像で返されます。実行が成功し、 &lt;var&gt;STAT&lt;/var&gt; が存在し、値0が割り当てられています。実行が失敗した場合、 &lt;var&gt;STAT&lt;/var&gt; にはゼロ以外の値が割り当てられ、存在する場合、 &lt;var&gt;ERRMSG&lt;/var&gt; には発生したエラーを説明する値が割り当てられます。</target>
        </trans-unit>
        <trans-unit id="3265bf5e79c689106690cc7a31f644c0e4ff1ab4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CO_SUM&lt;/code&gt; sums up the values of each element of &lt;var&gt;A&lt;/var&gt; on all images of the current team. If &lt;var&gt;RESULT_IMAGE&lt;/var&gt; is present, the summed-up values are returned in &lt;var&gt;A&lt;/var&gt; on the specified image only and the value of &lt;var&gt;A&lt;/var&gt; on the other images become undefined. If &lt;var&gt;RESULT_IMAGE&lt;/var&gt; is not present, the value is returned on all images. If the execution was successful and &lt;var&gt;STAT&lt;/var&gt; is present, it is assigned the value zero. If the execution failed, &lt;var&gt;STAT&lt;/var&gt; gets assigned a nonzero value and, if present, &lt;var&gt;ERRMSG&lt;/var&gt; gets assigned a value describing the occurred error.</source>
          <target state="translated">&lt;code&gt;CO_SUM&lt;/code&gt; は、現在のチームのすべての画像の &lt;var&gt;A&lt;/var&gt; の各要素の値を合計します。場合 &lt;var&gt;RESULT_IMAGE&lt;/var&gt; が存在し、合計アップ値は、で返される &lt;var&gt;A&lt;/var&gt; のみ指定された画像上の値 &lt;var&gt;A&lt;/var&gt; 他の画像では不定となります。 &lt;var&gt;RESULT_IMAGE&lt;/var&gt; が存在しない場合、値はすべての画像で返されます。実行が成功し、 &lt;var&gt;STAT&lt;/var&gt; が存在する場合は、値0が割り当てられます。実行が失敗した場合、 &lt;var&gt;STAT&lt;/var&gt; にはゼロ以外の値が割り当てられ、存在する場合、 &lt;var&gt;ERRMSG&lt;/var&gt; には発生したエラーを説明する値が割り当てられます。</target>
        </trans-unit>
        <trans-unit id="7fff442d42d15bd45561895d9906b6999497f5f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CSHIFT(ARRAY, SHIFT [, DIM])&lt;/code&gt; performs a circular shift on elements of &lt;var&gt;ARRAY&lt;/var&gt; along the dimension of &lt;var&gt;DIM&lt;/var&gt;. If &lt;var&gt;DIM&lt;/var&gt; is omitted it is taken to be &lt;code&gt;1&lt;/code&gt;. &lt;var&gt;DIM&lt;/var&gt; is a scalar of type &lt;code&gt;INTEGER&lt;/code&gt; in the range of &lt;em&gt;1 \leq DIM \leq n)&lt;/em&gt; where &lt;em&gt;n&lt;/em&gt; is the rank of &lt;var&gt;ARRAY&lt;/var&gt;. If the rank of &lt;var&gt;ARRAY&lt;/var&gt; is one, then all elements of &lt;var&gt;ARRAY&lt;/var&gt; are shifted by &lt;var&gt;SHIFT&lt;/var&gt; places. If rank is greater than one, then all complete rank one sections of &lt;var&gt;ARRAY&lt;/var&gt; along the given dimension are shifted. Elements shifted out one end of each rank one section are shifted back in the other end.</source>
          <target state="translated">&lt;code&gt;CSHIFT(ARRAY, SHIFT [, DIM])&lt;/code&gt; の要素に循環シフト行う &lt;var&gt;ARRAY&lt;/var&gt; の次元に沿った &lt;var&gt;DIM&lt;/var&gt; を。場合 &lt;var&gt;DIM&lt;/var&gt; が省略されていることがあるとみなされる &lt;code&gt;1&lt;/code&gt; 。 &lt;var&gt;DIM&lt;/var&gt; は、&lt;em&gt;1 \ leq DIM \ leq n）&lt;/em&gt;の範囲の &lt;code&gt;INTEGER&lt;/code&gt; 型のスカラーです。ここで、&lt;em&gt;n&lt;/em&gt;は &lt;var&gt;ARRAY&lt;/var&gt; のランクです。ランク場合は &lt;var&gt;ARRAY&lt;/var&gt; が 1である、その後のすべての要素 &lt;var&gt;ARRAY&lt;/var&gt; がずれている &lt;var&gt;SHIFT&lt;/var&gt; の場所。ランクが1より大きい場合、 &lt;var&gt;ARRAY&lt;/var&gt; のすべての完全なランク1セクション&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;与えられた次元に沿ってシフトされます。各ランクの1つのセクションの一方の端から外側にシフトされた要素は、もう一方の端にシフトバックされます。</target>
        </trans-unit>
        <trans-unit id="02a83c5ed7e726456685c031e495b54f38213b9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CTIME&lt;/code&gt; converts a system time value, such as returned by &lt;a href=&quot;time8#TIME8&quot;&gt;TIME8&lt;/a&gt;, to a string. The output will be of the form &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;CTIME&lt;/code&gt; は、&lt;a href=&quot;time8#TIME8&quot;&gt;TIME8&lt;/a&gt;から返されるようなシステム時刻値を文字列に変換します。出力は次の形式になります '</target>
        </trans-unit>
        <trans-unit id="a065a3e55bdcd38bb8039390a359d00ef36a25ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C_ASSOCIATED(c_ptr_1[, c_ptr_2])&lt;/code&gt; determines the status of the C pointer &lt;var&gt;c_ptr_1&lt;/var&gt; or if &lt;var&gt;c_ptr_1&lt;/var&gt; is associated with the target &lt;var&gt;c_ptr_2&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;C_ASSOCIATED(c_ptr_1[, c_ptr_2])&lt;/code&gt; は、Cポインター &lt;var&gt;c_ptr_1&lt;/var&gt; のステータス、または &lt;var&gt;c_ptr_1&lt;/var&gt; がターゲット &lt;var&gt;c_ptr_2&lt;/var&gt; に関連付けられているかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="4aa008d98a954b17c9b8e1098ea312eac7d4b5e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C_FUNLOC(x)&lt;/code&gt; determines the C address of the argument.</source>
          <target state="translated">&lt;code&gt;C_FUNLOC(x)&lt;/code&gt; は、引数のCアドレスを決定します。</target>
        </trans-unit>
        <trans-unit id="8779f80381247cd8664bc51796517172156390c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C_F_POINTER(CPTR, FPTR[, SHAPE])&lt;/code&gt; assigns the target of the C pointer &lt;var&gt;CPTR&lt;/var&gt; to the Fortran pointer &lt;var&gt;FPTR&lt;/var&gt; and specifies its shape.</source>
          <target state="translated">&lt;code&gt;C_F_POINTER(CPTR, FPTR[, SHAPE])&lt;/code&gt; は、Cポインター &lt;var&gt;CPTR&lt;/var&gt; のターゲットをFortranポインター &lt;var&gt;FPTR&lt;/var&gt; に割り当て、その形状を指定します。</target>
        </trans-unit>
        <trans-unit id="a5eecc38c91d53d3a1b9f562b752d919d2ee39ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C_F_PROCPOINTER(CPTR, FPTR)&lt;/code&gt; Assign the target of the C function pointer &lt;var&gt;CPTR&lt;/var&gt; to the Fortran procedure pointer &lt;var&gt;FPTR&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;C_F_PROCPOINTER(CPTR, FPTR)&lt;/code&gt; C関数ポインター &lt;var&gt;CPTR&lt;/var&gt; のターゲットをFortranプロシージャーポインター &lt;var&gt;FPTR&lt;/var&gt; に割り当てます。</target>
        </trans-unit>
        <trans-unit id="c4aa0ba03493d7d7ddd38112f143eed434649eee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C_LOC(X)&lt;/code&gt; determines the C address of the argument.</source>
          <target state="translated">&lt;code&gt;C_LOC(X)&lt;/code&gt; は、引数のCアドレスを決定します。</target>
        </trans-unit>
        <trans-unit id="e7135175e23a34da4298e9db1933b0f53bd8a3a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C_SIZEOF(X)&lt;/code&gt; calculates the number of bytes of storage the expression &lt;code&gt;X&lt;/code&gt; occupies.</source>
          <target state="translated">&lt;code&gt;C_SIZEOF(X)&lt;/code&gt; は、式 &lt;code&gt;X&lt;/code&gt; が占めるストレージのバイト数を計算します。</target>
        </trans-unit>
        <trans-unit id="6a553c05523bb1704a95f8064c5c928819dca5dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DATE = FDATE()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DATE = FDATE()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4bfea721164c68ad64db8fb084eeb2f91078695d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DATE_AND_TIME(DATE, TIME, ZONE, VALUES)&lt;/code&gt; gets the corresponding date and time information from the real-time system clock. &lt;var&gt;DATE&lt;/var&gt; is &lt;code&gt;INTENT(OUT)&lt;/code&gt; and has form ccyymmdd. &lt;var&gt;TIME&lt;/var&gt; is &lt;code&gt;INTENT(OUT)&lt;/code&gt; and has form hhmmss.sss. &lt;var&gt;ZONE&lt;/var&gt; is &lt;code&gt;INTENT(OUT)&lt;/code&gt; and has form (+-)hhmm, representing the difference with respect to Coordinated Universal Time (UTC). Unavailable time and date parameters return blanks.</source>
          <target state="translated">&lt;code&gt;DATE_AND_TIME(DATE, TIME, ZONE, VALUES)&lt;/code&gt; は、リアルタイムのシステムクロックから対応する日時情報を取得します。 &lt;var&gt;DATE&lt;/var&gt; は &lt;code&gt;INTENT(OUT)&lt;/code&gt; であり、形式はccyymmddです。 &lt;var&gt;TIME&lt;/var&gt; は &lt;code&gt;INTENT(OUT)&lt;/code&gt; で、hhmmss.sssの形式です。 &lt;var&gt;ZONE&lt;/var&gt; は &lt;code&gt;INTENT(OUT)&lt;/code&gt; であり、（+-）hhmmという形式で、協定世界時（UTC）との差を表します。使用できない時間と日付のパラメーターは空白を返します。</target>
        </trans-unit>
        <trans-unit id="a917aa3b4ab49f39be72884fa7203ba2ea2f2d9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DBLE(A)&lt;/code&gt; Converts &lt;var&gt;A&lt;/var&gt; to double precision real type.</source>
          <target state="translated">&lt;code&gt;DBLE(A)&lt;/code&gt; &lt;var&gt;A&lt;/var&gt; を倍精度の実数型に変換します。</target>
        </trans-unit>
        <trans-unit id="da1c3c32fc6371565d22fb1dc5c85a834d306671" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DCMPLX(X [,Y])&lt;/code&gt; returns a double complex number where &lt;var&gt;X&lt;/var&gt; is converted to the real component. If &lt;var&gt;Y&lt;/var&gt; is present it is converted to the imaginary component. If &lt;var&gt;Y&lt;/var&gt; is not present then the imaginary component is set to 0.0. If &lt;var&gt;X&lt;/var&gt; is complex then &lt;var&gt;Y&lt;/var&gt; must not be present.</source>
          <target state="translated">&lt;code&gt;DCMPLX(X [,Y])&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; が実際のコンポーネントに変換される二重複素数を返します。 &lt;var&gt;Y&lt;/var&gt; が存在する場合は、虚数成分に変換されます。 &lt;var&gt;Y&lt;/var&gt; が存在しない場合、虚数成分は0.0に設定されます。 &lt;var&gt;X&lt;/var&gt; が複素数の場合、 &lt;var&gt;Y&lt;/var&gt; が存在してはなりません。</target>
        </trans-unit>
        <trans-unit id="142e8be657c2ac104d98b3ff236a04529063b5c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DIGITS(X)&lt;/code&gt; returns the number of significant binary digits of the internal model representation of &lt;var&gt;X&lt;/var&gt;. For example, on a system using a 32-bit floating point representation, a default real number would likely return 24.</source>
          <target state="translated">&lt;code&gt;DIGITS(X)&lt;/code&gt; 内部のモデル表現の有意なバイナリ桁数戻り &lt;var&gt;X&lt;/var&gt; を。たとえば、32ビット浮動小数点表現を使用するシステムでは、デフォルトの実数は24を返す可能性があります。</target>
        </trans-unit>
        <trans-unit id="0892901af491f12deecbf0e80844e8ac206b327d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DIM(X,Y)&lt;/code&gt; returns the difference &lt;code&gt;X-Y&lt;/code&gt; if the result is positive; otherwise returns zero.</source>
          <target state="translated">&lt;code&gt;DIM(X,Y)&lt;/code&gt; は、結果が正の場合、差 &lt;code&gt;X-Y&lt;/code&gt; 返します。それ以外の場合はゼロを返します。</target>
        </trans-unit>
        <trans-unit id="19f9baac7613c8a86540ea556a30245e569910cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DLLEXPORT&lt;/code&gt; &amp;ndash; provide a global pointer to a pointer in the DLL</source>
          <target state="translated">&lt;code&gt;DLLEXPORT&lt;/code&gt; &amp;ndash; DLL内のポインターへのグローバルポインターを提供する</target>
        </trans-unit>
        <trans-unit id="bab620ceff1a81c3ec7a5a234c397449af806ca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DLLIMPORT&lt;/code&gt; &amp;ndash; reference the function or variable using a global pointer</source>
          <target state="translated">&lt;code&gt;DLLIMPORT&lt;/code&gt; &amp;ndash;グローバルポインターを使用して関数または変数を参照する</target>
        </trans-unit>
        <trans-unit id="afd9f25f0ed27db0862cb63655bfae807c4e0ead" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DOT_PRODUCT(VECTOR_A, VECTOR_B)&lt;/code&gt; computes the dot product multiplication of two vectors &lt;var&gt;VECTOR_A&lt;/var&gt; and &lt;var&gt;VECTOR_B&lt;/var&gt;. The two vectors may be either numeric or logical and must be arrays of rank one and of equal size. If the vectors are &lt;code&gt;INTEGER&lt;/code&gt; or &lt;code&gt;REAL&lt;/code&gt;, the result is &lt;code&gt;SUM(VECTOR_A*VECTOR_B)&lt;/code&gt;. If the vectors are &lt;code&gt;COMPLEX&lt;/code&gt;, the result is &lt;code&gt;SUM(CONJG(VECTOR_A)*VECTOR_B)&lt;/code&gt;. If the vectors are &lt;code&gt;LOGICAL&lt;/code&gt;, the result is &lt;code&gt;ANY(VECTOR_A .AND. VECTOR_B)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOT_PRODUCT(VECTOR_A, VECTOR_B)&lt;/code&gt; は、2つのベクトル &lt;var&gt;VECTOR_A&lt;/var&gt; および &lt;var&gt;VECTOR_B&lt;/var&gt; の内積乗算を計算します。2つのベクトルは数値または論理のいずれかであり、ランク1でサイズが等しい配列でなければなりません。ベクトルが &lt;code&gt;INTEGER&lt;/code&gt; または &lt;code&gt;REAL&lt;/code&gt; の場合、結果は &lt;code&gt;SUM(VECTOR_A*VECTOR_B)&lt;/code&gt; です。ベクトルが &lt;code&gt;COMPLEX&lt;/code&gt; の場合、結果は &lt;code&gt;SUM(CONJG(VECTOR_A)*VECTOR_B)&lt;/code&gt; になります。ベクトルが &lt;code&gt;LOGICAL&lt;/code&gt; の場合、結果は &lt;code&gt;ANY(VECTOR_A .AND. VECTOR_B)&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="4ae57531fc7dd3d63adb429eca2d2442a578f092" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DPROD(X,Y)&lt;/code&gt; returns the product &lt;code&gt;X*Y&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DPROD(X,Y)&lt;/code&gt; は積 &lt;code&gt;X*Y&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a50ccdac95dc85f4ea9be916b52d8c4e076a9655" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DREAL(Z)&lt;/code&gt; returns the real part of complex variable &lt;var&gt;Z&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;DREAL(Z)&lt;/code&gt; は、複素変数 &lt;var&gt;Z&lt;/var&gt; の実数部を返します。</target>
        </trans-unit>
        <trans-unit id="45c74cc855d9efe0cc0c4e02138e339ac8b83169" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DSHIFTL(I, J, SHIFT)&lt;/code&gt; combines bits of &lt;var&gt;I&lt;/var&gt; and &lt;var&gt;J&lt;/var&gt;. The rightmost &lt;var&gt;SHIFT&lt;/var&gt; bits of the result are the leftmost &lt;var&gt;SHIFT&lt;/var&gt; bits of &lt;var&gt;J&lt;/var&gt;, and the remaining bits are the rightmost bits of &lt;var&gt;I&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;DSHIFTL(I, J, SHIFT)&lt;/code&gt; は、 &lt;var&gt;I&lt;/var&gt; と &lt;var&gt;J&lt;/var&gt; のビットを組み合わせます。結果の右端の &lt;var&gt;SHIFT&lt;/var&gt; ビットは &lt;var&gt;J&lt;/var&gt; の左端の &lt;var&gt;SHIFT&lt;/var&gt; ビットで、残りのビットは &lt;var&gt;I&lt;/var&gt; の右端のビットです。</target>
        </trans-unit>
        <trans-unit id="f7dc19427ff0123868d917641927b8e22d78f2fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DSHIFTR(I, J, SHIFT)&lt;/code&gt; combines bits of &lt;var&gt;I&lt;/var&gt; and &lt;var&gt;J&lt;/var&gt;. The leftmost &lt;var&gt;SHIFT&lt;/var&gt; bits of the result are the rightmost &lt;var&gt;SHIFT&lt;/var&gt; bits of &lt;var&gt;I&lt;/var&gt;, and the remaining bits are the leftmost bits of &lt;var&gt;J&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;DSHIFTR(I, J, SHIFT)&lt;/code&gt; は、 &lt;var&gt;I&lt;/var&gt; と &lt;var&gt;J&lt;/var&gt; のビットを組み合わせます。結果の左端の &lt;var&gt;SHIFT&lt;/var&gt; ビットは &lt;var&gt;I&lt;/var&gt; の右端の &lt;var&gt;SHIFT&lt;/var&gt; ビットで、残りのビットは &lt;var&gt;J&lt;/var&gt; の左端のビットです。</target>
        </trans-unit>
        <trans-unit id="e5c0d5634fbc2ffeff188a14b2906da73122aec5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DTIME(VALUES, TIME)&lt;/code&gt; initially returns the number of seconds of runtime since the start of the process&amp;rsquo;s execution in &lt;var&gt;TIME&lt;/var&gt;. &lt;var&gt;VALUES&lt;/var&gt; returns the user and system components of this time in &lt;code&gt;VALUES(1)&lt;/code&gt; and &lt;code&gt;VALUES(2)&lt;/code&gt; respectively. &lt;var&gt;TIME&lt;/var&gt; is equal to &lt;code&gt;VALUES(1) +
VALUES(2)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DTIME(VALUES, TIME)&lt;/code&gt; は、最初に &lt;var&gt;TIME&lt;/var&gt; でプロセスの実行が開始されてからのランタイムの秒数を返します。 &lt;var&gt;VALUES&lt;/var&gt; は、この時間のユーザーコンポーネントとシステムコンポーネントをそれぞれ &lt;code&gt;VALUES(1)&lt;/code&gt; と &lt;code&gt;VALUES(2)&lt;/code&gt; で返します。 &lt;var&gt;TIME&lt;/var&gt; は &lt;code&gt;VALUES(1) + VALUES(2)&lt;/code&gt; と等しくなります。</target>
        </trans-unit>
        <trans-unit id="72a50a2a1951559d5227778a90122595a0ca9537" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EOSHIFT(ARRAY, SHIFT[, BOUNDARY, DIM])&lt;/code&gt; performs an end-off shift on elements of &lt;var&gt;ARRAY&lt;/var&gt; along the dimension of &lt;var&gt;DIM&lt;/var&gt;. If &lt;var&gt;DIM&lt;/var&gt; is omitted it is taken to be &lt;code&gt;1&lt;/code&gt;. &lt;var&gt;DIM&lt;/var&gt; is a scalar of type &lt;code&gt;INTEGER&lt;/code&gt; in the range of &lt;em&gt;1 \leq DIM \leq n)&lt;/em&gt; where &lt;em&gt;n&lt;/em&gt; is the rank of &lt;var&gt;ARRAY&lt;/var&gt;. If the rank of &lt;var&gt;ARRAY&lt;/var&gt; is one, then all elements of &lt;var&gt;ARRAY&lt;/var&gt; are shifted by &lt;var&gt;SHIFT&lt;/var&gt; places. If rank is greater than one, then all complete rank one sections of &lt;var&gt;ARRAY&lt;/var&gt; along the given dimension are shifted. Elements shifted out one end of each rank one section are dropped. If &lt;var&gt;BOUNDARY&lt;/var&gt; is present then the corresponding value of from &lt;var&gt;BOUNDARY&lt;/var&gt; is copied back in the other end. If &lt;var&gt;BOUNDARY&lt;/var&gt; is not present then the following are copied in depending on the type of &lt;var&gt;ARRAY&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;EOSHIFT(ARRAY, SHIFT[, BOUNDARY, DIM])&lt;/code&gt; の要素の端オフシフト行う &lt;var&gt;ARRAY&lt;/var&gt; の次元に沿った &lt;var&gt;DIM&lt;/var&gt; を。場合 &lt;var&gt;DIM&lt;/var&gt; が省略されていることがあるとみなされる &lt;code&gt;1&lt;/code&gt; 。 &lt;var&gt;DIM&lt;/var&gt; は、&lt;em&gt;1 \ leq DIM \ leq n）&lt;/em&gt;の範囲の &lt;code&gt;INTEGER&lt;/code&gt; 型のスカラーです。ここで、&lt;em&gt;n&lt;/em&gt;は &lt;var&gt;ARRAY&lt;/var&gt; のランクです。ランク場合は &lt;var&gt;ARRAY&lt;/var&gt; が 1である、その後のすべての要素 &lt;var&gt;ARRAY&lt;/var&gt; がずれている &lt;var&gt;SHIFT&lt;/var&gt; の場所。ランクが1より大きい場合、 &lt;var&gt;ARRAY&lt;/var&gt; のすべての完全なランク1セクション&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;与えられた次元に沿ってシフトされます。各ランクの1つの端からシフトアウトされたエレメントは1つのセクションがドロップされます。場合 &lt;var&gt;BOUNDARY&lt;/var&gt; が存在し、その後からの対応する値 &lt;var&gt;BOUNDARY&lt;/var&gt; 他方の端に戻ってコピーされます。 &lt;var&gt;BOUNDARY&lt;/var&gt; が存在しない場合、 &lt;var&gt;ARRAY&lt;/var&gt; のタイプに応じて、以下がコピーされます。</target>
        </trans-unit>
        <trans-unit id="60c0f14f86d3131ad2a51053f9904831e61b1467" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EPSILON(X)&lt;/code&gt; returns the smallest number &lt;var&gt;E&lt;/var&gt; of the same kind as &lt;var&gt;X&lt;/var&gt; such that &lt;em&gt;1 + E &amp;gt; 1&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;EPSILON(X)&lt;/code&gt; が最小数の戻り &lt;var&gt;E&lt;/var&gt; と同じ種類の &lt;var&gt;X&lt;/var&gt; ように&lt;em&gt;1 + E&amp;gt; 1&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="4498b50f8cc55b842a598a15d463a7fe372cb3be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERF(X)&lt;/code&gt; computes the error function of &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;ERF(X)&lt;/code&gt; は &lt;var&gt;X&lt;/var&gt; の誤差関数を計算します。</target>
        </trans-unit>
        <trans-unit id="9f3b5f89cc2ad9d45ab71986f7e378bdfce40877" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERFC(X)&lt;/code&gt; computes the complementary error function of &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;ERFC(X)&lt;/code&gt; は &lt;var&gt;X&lt;/var&gt; の相補誤差関数を計算します。</target>
        </trans-unit>
        <trans-unit id="4fb2e505d6132ad5fd45137442ef9b6921383139" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERFC_SCALED(X)&lt;/code&gt; computes the exponentially-scaled complementary error function of &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;ERFC_SCALED(X)&lt;/code&gt; は、の指数関数的スケール相補誤差関数計算 &lt;var&gt;X&lt;/var&gt; を。</target>
        </trans-unit>
        <trans-unit id="93d74d05cd64de2117e8822a46192aec9c49d989" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERROR_UNIT&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;ERROR_UNIT&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="c0df2cb6d8795ac2d89f3fbb1730dcaa894ab595" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ETIME(VALUES, TIME)&lt;/code&gt; returns the number of seconds of runtime since the start of the process&amp;rsquo;s execution in &lt;var&gt;TIME&lt;/var&gt;. &lt;var&gt;VALUES&lt;/var&gt; returns the user and system components of this time in &lt;code&gt;VALUES(1)&lt;/code&gt; and &lt;code&gt;VALUES(2)&lt;/code&gt; respectively. &lt;var&gt;TIME&lt;/var&gt; is equal to &lt;code&gt;VALUES(1) + VALUES(2)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ETIME(VALUES, TIME)&lt;/code&gt; は、プロセスの実行が &lt;var&gt;TIME&lt;/var&gt; に開始されてからのランタイムの秒数を返します。 &lt;var&gt;VALUES&lt;/var&gt; は、この時間のユーザーコンポーネントとシステムコンポーネントをそれぞれ &lt;code&gt;VALUES(1)&lt;/code&gt; と &lt;code&gt;VALUES(2)&lt;/code&gt; で返します。 &lt;var&gt;TIME&lt;/var&gt; は &lt;code&gt;VALUES(1) + VALUES(2)&lt;/code&gt; と等しくなります。</target>
        </trans-unit>
        <trans-unit id="d5eef394bac89f54210ff99c12e96db4c138e21c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EVENT_QUERY&lt;/code&gt; assignes the number of events to &lt;var&gt;COUNT&lt;/var&gt; which have been posted to the &lt;var&gt;EVENT&lt;/var&gt; variable and not yet been removed by calling &lt;code&gt;EVENT WAIT&lt;/code&gt;. When &lt;var&gt;STAT&lt;/var&gt; is present and the invocation was successful, it is assigned the value 0. If it is present and the invocation has failed, it is assigned a positive value and &lt;var&gt;COUNT&lt;/var&gt; is assigned the value &lt;em&gt;-1&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;EVENT_QUERY&lt;/code&gt; は、 &lt;var&gt;EVENT&lt;/var&gt; 変数にポストされ、 &lt;code&gt;EVENT WAIT&lt;/code&gt; を呼び出してまだ削除されていないイベントの数を &lt;var&gt;COUNT&lt;/var&gt; に割り当てます。場合 &lt;var&gt;STAT&lt;/var&gt; が存在し、呼び出しが成功したことがある場合、それは値0が割り当てられ、呼び出しは、それが正の値が割り当てられると、失敗した &lt;var&gt;COUNT&lt;/var&gt; は値が割り当てられ&lt;em&gt;-1&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="98ad5f23efffedcbcfb5126810b5b8ac56f94724" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXECUTE_COMMAND_LINE&lt;/code&gt; runs a shell command, synchronously or asynchronously.</source>
          <target state="translated">&lt;code&gt;EXECUTE_COMMAND_LINE&lt;/code&gt; は、同期または非同期でシェルコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="ac9e255d3703d6c843d0ea5c7d4363706f323d6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXIT&lt;/code&gt; causes immediate termination of the program with status. If status is omitted it returns the canonical &lt;em&gt;success&lt;/em&gt; for the system. All Fortran I/O units are closed.</source>
          <target state="translated">&lt;code&gt;EXIT&lt;/code&gt; を指定すると、ステータス付きのプログラムが即座に終了します。ステータスが省略されている場合は、システムの標準的な&lt;em&gt;成功&lt;/em&gt;を返します。すべてのFortran I / Oユニットが閉じています。</target>
        </trans-unit>
        <trans-unit id="347984a3a4f591c4766f6b74d879699f0123ef18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXP(X)&lt;/code&gt; computes the base &lt;em&gt;e&lt;/em&gt; exponential of &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;EXP(X)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; の底&lt;em&gt;eの&lt;/em&gt;指数を計算します。</target>
        </trans-unit>
        <trans-unit id="d83698b9839d014ede03ee985aca182017cbf27f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXPONENT(X)&lt;/code&gt; returns the value of the exponent part of &lt;var&gt;X&lt;/var&gt;. If &lt;var&gt;X&lt;/var&gt; is zero the value returned is zero.</source>
          <target state="translated">&lt;code&gt;EXPONENT(X)&lt;/code&gt; は、の指数部の値を返し &lt;var&gt;X&lt;/var&gt; を。場合 &lt;var&gt;X&lt;/var&gt; がゼロで返される値はゼロです。</target>
        </trans-unit>
        <trans-unit id="4eb74f30d0e044ca5fc7aecde93e60273c914d19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FASTCALL&lt;/code&gt; &amp;ndash; part of the arguments are passed via registers instead using the stack</source>
          <target state="translated">&lt;code&gt;FASTCALL&lt;/code&gt; &amp;ndash;引数の一部は、スタックを使用する代わりにレジスタを介して渡されます</target>
        </trans-unit>
        <trans-unit id="d8bcc296b69953c0f5dbfbea24db9a91a5a8e9c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FDATE(DATE)&lt;/code&gt; returns the current date (using the same format as &lt;a href=&quot;ctime#CTIME&quot;&gt;CTIME&lt;/a&gt;) in &lt;var&gt;DATE&lt;/var&gt;. It is equivalent to &lt;code&gt;CALL CTIME(DATE,
TIME())&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FDATE(DATE)&lt;/code&gt; が（同じフォーマットを使用して現在の日付を返し&lt;a href=&quot;ctime#CTIME&quot;&gt;CTIME&lt;/a&gt;で） &lt;var&gt;DATE&lt;/var&gt; 。 &lt;code&gt;CALL CTIME(DATE, TIME())&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="50c6d19480fb943a1917d025bf47aedfc4d80474" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILE_STORAGE_SIZE&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;FILE_STORAGE_SIZE&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="3de48ce42096ca165c124e0bc5adf90a57c24710" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FLOOR(A)&lt;/code&gt; returns the greatest integer less than or equal to &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;FLOOR(A)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; 以下の最大の整数を返します。</target>
        </trans-unit>
        <trans-unit id="a66c962d522c1f3cdcb50be88a470fb240648b86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FNUM(UNIT)&lt;/code&gt; returns the POSIX file descriptor number corresponding to the open Fortran I/O unit &lt;code&gt;UNIT&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FNUM(UNIT)&lt;/code&gt; は、開いているFortran I / Oユニット &lt;code&gt;UNIT&lt;/code&gt; に対応するPOSIXファイル記述子番号を返します。</target>
        </trans-unit>
        <trans-unit id="5099952f80010fc5cd6c5a4daca0bda6094f0aa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FRACTION(X)&lt;/code&gt; returns the fractional part of the model representation of &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FRACTION(X)&lt;/code&gt; のモデル表現の小数部を返し &lt;code&gt;X&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="26ea52dead6581fc0f0ab90d5ee2dfef5efb5d7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FSTAT&lt;/code&gt; is identical to &lt;a href=&quot;stat#STAT&quot;&gt;STAT&lt;/a&gt;, except that information about an already opened file is obtained.</source>
          <target state="translated">&lt;code&gt;FSTAT&lt;/code&gt; は&lt;a href=&quot;stat#STAT&quot;&gt;STAT&lt;/a&gt;と同じですが、すでに開いているファイルに関する情報が取得される点が異なります。</target>
        </trans-unit>
        <trans-unit id="9967c5658a871745d62b681cac70d7cb09ca9e7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GAMMA(X)&lt;/code&gt; computes Gamma (&lt;em&gt;\Gamma&lt;/em&gt;) of &lt;var&gt;X&lt;/var&gt;. For positive, integer values of &lt;var&gt;X&lt;/var&gt; the Gamma function simplifies to the factorial function &lt;em&gt;\Gamma(x)=(x-1)!&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;GAMMA(X)&lt;/code&gt; は &lt;var&gt;X&lt;/var&gt; のガンマ（&lt;em&gt;\ Gamma&lt;/em&gt;）を計算します。 &lt;var&gt;X&lt;/var&gt; の正の整数値の場合、ガンマ関数は階乗関数&lt;em&gt;\ Gamma（x）=（x-1）に&lt;/em&gt;単純化され&lt;em&gt;ます！&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="27deaa69d326d3a834ebb41dbcac6ffe23f6912e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HUGE(X)&lt;/code&gt; returns the largest number that is not an infinity in the model of the type of &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;HUGE(X)&lt;/code&gt; は、 &lt;code&gt;X&lt;/code&gt; の型のモデルで、無限ではない最大数を返します。</target>
        </trans-unit>
        <trans-unit id="ebeb8c6f9d9b8d3457ff8cf3b1e265e23dda5dfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HYPOT(X,Y)&lt;/code&gt; is the Euclidean distance function. It is equal to &lt;em&gt;\sqrt{X^2 + Y^2}&lt;/em&gt;, without undue underflow or overflow.</source>
          <target state="translated">&lt;code&gt;HYPOT(X,Y)&lt;/code&gt; はユークリッド距離関数です。これは&lt;em&gt;\ sqrt {X ^ 2 + Y ^ 2}&lt;/em&gt;に等しく、過度のアンダーフローまたはオーバーフローはありません。</target>
        </trans-unit>
        <trans-unit id="190cad20335a1ec2df1ecbaae90d6b0ebae4e100" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IACHAR(C)&lt;/code&gt; returns the code for the ASCII character in the first character position of &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IACHAR(C)&lt;/code&gt; は、の最初の文字位置にASCII文字のコードを返し &lt;code&gt;C&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="d610419c936a0a4ebdfca15f014dc8df802d045a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IARGC&lt;/code&gt; returns the number of arguments passed on the command line when the containing program was invoked.</source>
          <target state="translated">&lt;code&gt;IARGC&lt;/code&gt; は、包含プログラムが呼び出されたときにコマンドラインで渡された引数の数を返します。</target>
        </trans-unit>
        <trans-unit id="5227b64c9f3a457605eed86cb7bb5a9c97791bd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IBCLR&lt;/code&gt; returns the value of &lt;var&gt;I&lt;/var&gt; with the bit at position &lt;var&gt;POS&lt;/var&gt; set to zero.</source>
          <target state="translated">&lt;code&gt;IBCLR&lt;/code&gt; は、位置 &lt;var&gt;POS&lt;/var&gt; のビットがゼロに設定された &lt;var&gt;I&lt;/var&gt; の値を返します。</target>
        </trans-unit>
        <trans-unit id="f52f9213b2aadbf11ca5f8fd3e0a2c922d871a58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IBITS&lt;/code&gt; extracts a field of length &lt;var&gt;LEN&lt;/var&gt; from &lt;var&gt;I&lt;/var&gt;, starting from bit position &lt;var&gt;POS&lt;/var&gt; and extending left for &lt;var&gt;LEN&lt;/var&gt; bits. The result is right-justified and the remaining bits are zeroed. The value of &lt;code&gt;POS+LEN&lt;/code&gt; must be less than or equal to the value &lt;code&gt;BIT_SIZE(I)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IBITS&lt;/code&gt; は、長さ &lt;var&gt;LEN&lt;/var&gt; のフィールドを &lt;var&gt;I&lt;/var&gt; から抽出します。ビット位置 &lt;var&gt;POS&lt;/var&gt; から始まり、 &lt;var&gt;LEN&lt;/var&gt; ビットの左に拡張されます。結果は右寄せされ、残りのビットはゼロにリセットされます。 &lt;code&gt;POS+LEN&lt;/code&gt; の値は、値 &lt;code&gt;BIT_SIZE(I)&lt;/code&gt; 以下でなければなりません。</target>
        </trans-unit>
        <trans-unit id="d8b3e1d9835e2555543e08916e85c7535d3de3d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IBSET&lt;/code&gt; returns the value of &lt;var&gt;I&lt;/var&gt; with the bit at position &lt;var&gt;POS&lt;/var&gt; set to one.</source>
          <target state="translated">&lt;code&gt;IBSET&lt;/code&gt; は、位置 &lt;var&gt;POS&lt;/var&gt; のビットが1に設定された &lt;var&gt;I&lt;/var&gt; の値を返します。</target>
        </trans-unit>
        <trans-unit id="71c4391787465e2e12ffffaa79dcb3affdc10711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ICHAR(C)&lt;/code&gt; returns the code for the character in the first character position of &lt;code&gt;C&lt;/code&gt; in the system&amp;rsquo;s native character set. The correspondence between characters and their codes is not necessarily the same across different GNU Fortran implementations.</source>
          <target state="translated">&lt;code&gt;ICHAR(C)&lt;/code&gt; は、システムのネイティブ文字セットの &lt;code&gt;C&lt;/code&gt; の最初の文字位置にある文字のコードを返します。文字とコード間の対応は、異なるGNU Fortran実装間で必ずしも同じではありません。</target>
        </trans-unit>
        <trans-unit id="2cd0701b296ead8a90e32c8eb37e2ce3c5d6e08f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IDATE(VALUES)&lt;/code&gt; Fills &lt;var&gt;VALUES&lt;/var&gt; with the numerical values at the current local time. The day (in the range 1-31), month (in the range 1-12), and year appear in elements 1, 2, and 3 of &lt;var&gt;VALUES&lt;/var&gt;, respectively. The year has four significant digits.</source>
          <target state="translated">&lt;code&gt;IDATE(VALUES)&lt;/code&gt; 塗りつぶしの &lt;var&gt;VALUES&lt;/var&gt; 現在のローカル時刻での数値を有します。日（1〜31の範囲）、月（1〜12の範囲）、年は、それぞれ &lt;var&gt;VALUES&lt;/var&gt; の要素1、2、3に表示されます。年には4桁の有効数字があります。</target>
        </trans-unit>
        <trans-unit id="2e7e6b67673e25b3263156f37bf3a8c22cbfe995" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IEOR&lt;/code&gt; returns the bitwise Boolean exclusive-OR of &lt;var&gt;I&lt;/var&gt; and &lt;var&gt;J&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;IEOR&lt;/code&gt; は、 &lt;var&gt;I&lt;/var&gt; と &lt;var&gt;J&lt;/var&gt; のビットごとのブール排他的論理和を返します。</target>
        </trans-unit>
        <trans-unit id="1bec83e0803314e62cb3f38ff38272efba811995" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INPUT_UNIT&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;INPUT_UNIT&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="22cec38d83ccf55767d1b568a5aa116fda2bbf96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INT8&lt;/code&gt;, &lt;code&gt;INT16&lt;/code&gt;, &lt;code&gt;INT32&lt;/code&gt;, &lt;code&gt;INT64&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;INT8&lt;/code&gt; 、 &lt;code&gt;INT16&lt;/code&gt; 、 &lt;code&gt;INT32&lt;/code&gt; 、 &lt;code&gt;INT64&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3ac2ec146eb22028d0bdfb6fedb8544f36803492" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INTEGER_KINDS&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;INTEGER_KINDS&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="8de83dc74b34554d35d80df437a8ae8d3e6ab4fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IOR&lt;/code&gt; returns the bitwise Boolean inclusive-OR of &lt;var&gt;I&lt;/var&gt; and &lt;var&gt;J&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;IOR&lt;/code&gt; は、 &lt;var&gt;I&lt;/var&gt; と &lt;var&gt;J&lt;/var&gt; のビット単位のブール包含ORを返します。</target>
        </trans-unit>
        <trans-unit id="4d6e1edbbf3b2cbb4ca2a6c137578f84ba2b285b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IOSTAT_END&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;IOSTAT_END&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="dcf4ef956228b300c611438f60c08eccbefdeac2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IOSTAT_EOR&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;IOSTAT_EOR&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="aaab5fee9a29e06c18589e560e87e7bf808eb630" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IOSTAT_INQUIRE_INTERNAL_UNIT&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;IOSTAT_INQUIRE_INTERNAL_UNIT&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="e1832f0b5571cb7f55262d222502e3d03f525e26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IRAND(FLAG)&lt;/code&gt; returns a pseudo-random number from a uniform distribution between 0 and a system-dependent limit (which is in most cases 2147483647). If &lt;var&gt;FLAG&lt;/var&gt; is 0, the next number in the current sequence is returned; if &lt;var&gt;FLAG&lt;/var&gt; is 1, the generator is restarted by &lt;code&gt;CALL SRAND(0)&lt;/code&gt;; if &lt;var&gt;FLAG&lt;/var&gt; has any other value, it is used as a new seed with &lt;code&gt;SRAND&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IRAND(FLAG)&lt;/code&gt; は、0とシステム依存の制限（ほとんどの場合2147483647）の間の一様分布から疑似乱数を返します。 &lt;var&gt;FLAG&lt;/var&gt; が0の場合、現在のシーケンスの次の数値が返されます。場合 &lt;var&gt;FLAG&lt;/var&gt; が 1であり、発電機は、によって再起動される &lt;code&gt;CALL SRAND(0)&lt;/code&gt; 。場合 &lt;var&gt;FLAG&lt;/var&gt; は他の値を持っている、それが持つ新しいシードとして使用されている &lt;code&gt;SRAND&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b970921cd8b183fe9f60c685afb0b51f403a2c2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ISHFT&lt;/code&gt; returns a value corresponding to &lt;var&gt;I&lt;/var&gt; with all of the bits shifted &lt;var&gt;SHIFT&lt;/var&gt; places. A value of &lt;var&gt;SHIFT&lt;/var&gt; greater than zero corresponds to a left shift, a value of zero corresponds to no shift, and a value less than zero corresponds to a right shift. If the absolute value of &lt;var&gt;SHIFT&lt;/var&gt; is greater than &lt;code&gt;BIT_SIZE(I)&lt;/code&gt;, the value is undefined. Bits shifted out from the left end or right end are lost; zeros are shifted in from the opposite end.</source>
          <target state="translated">&lt;code&gt;ISHFT&lt;/code&gt; は &lt;var&gt;I&lt;/var&gt; に対応する値を返し、すべてのビットが &lt;var&gt;SHIFT&lt;/var&gt; 桁シフトされます。ゼロより大きい &lt;var&gt;SHIFT&lt;/var&gt; の値は左シフトに対応し、ゼロの値はシフトなしに対応し、ゼロより小さい値は右シフトに対応します。 &lt;var&gt;SHIFT&lt;/var&gt; の絶対値が &lt;code&gt;BIT_SIZE(I)&lt;/code&gt; より大きい場合、値は未定義です。左端または右端からシフトアウトされたビットは失われます。ゼロは反対側からシフトインされます。</target>
        </trans-unit>
        <trans-unit id="5f36ed6bb6cdb8854e3388ab9d6a3d162d9c2033" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ISHFTC&lt;/code&gt; returns a value corresponding to &lt;var&gt;I&lt;/var&gt; with the rightmost &lt;var&gt;SIZE&lt;/var&gt; bits shifted circularly &lt;var&gt;SHIFT&lt;/var&gt; places; that is, bits shifted out one end are shifted into the opposite end. A value of &lt;var&gt;SHIFT&lt;/var&gt; greater than zero corresponds to a left shift, a value of zero corresponds to no shift, and a value less than zero corresponds to a right shift. The absolute value of &lt;var&gt;SHIFT&lt;/var&gt; must be less than &lt;var&gt;SIZE&lt;/var&gt;. If the &lt;var&gt;SIZE&lt;/var&gt; argument is omitted, it is taken to be equivalent to &lt;code&gt;BIT_SIZE(I)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ISHFTC&lt;/code&gt; は、右端の &lt;var&gt;SIZE&lt;/var&gt; ビットが循環的に &lt;var&gt;SHIFT&lt;/var&gt; れた &lt;var&gt;I&lt;/var&gt; に対応する値を返します。つまり、一方の端からシフトアウトされたビットは、もう一方の端にシフトされます。ゼロより大きい &lt;var&gt;SHIFT&lt;/var&gt; の値は左シフトに対応し、ゼロの値はシフトなしに対応し、ゼロより小さい値は右シフトに対応します。 &lt;var&gt;SHIFT&lt;/var&gt; の絶対値は &lt;var&gt;SIZE&lt;/var&gt; より小さくなければなりません。場合 &lt;var&gt;SIZE&lt;/var&gt; の引数が省略され、と同等であるとみなされる &lt;code&gt;BIT_SIZE(I)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41d541fd5d3b80b4c6130e0424e2a7131ea5d958" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ISNAN&lt;/code&gt; tests whether a floating-point value is an IEEE Not-a-Number (NaN).</source>
          <target state="translated">&lt;code&gt;ISNAN&lt;/code&gt; は、浮動小数点値がIEEE非数（NaN）かどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="e187f824d03129be776606ef4dc4f126a9e4bf47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IS_IOSTAT_END&lt;/code&gt; tests whether an variable has the value of the I/O status &amp;ldquo;end of file&amp;rdquo;. The function is equivalent to comparing the variable with the &lt;code&gt;IOSTAT_END&lt;/code&gt; parameter of the intrinsic module &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IS_IOSTAT_END&lt;/code&gt; は、変数にI / Oステータス「ファイルの終わり」の値があるかどうかをテストします。この関数は、変数を組み込みモジュール &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; の &lt;code&gt;IOSTAT_END&lt;/code&gt; パラメーターと比較することと同等です。</target>
        </trans-unit>
        <trans-unit id="e8145f61772208cc738f293b092a0a7a3f978aa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IS_IOSTAT_EOR&lt;/code&gt; tests whether an variable has the value of the I/O status &amp;ldquo;end of record&amp;rdquo;. The function is equivalent to comparing the variable with the &lt;code&gt;IOSTAT_EOR&lt;/code&gt; parameter of the intrinsic module &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IS_IOSTAT_EOR&lt;/code&gt; は、変数にI / Oステータス「レコードの終わり」の値があるかどうかをテストします。この関数は、変数を組み込みモジュール &lt;code&gt;ISO_FORTRAN_ENV&lt;/code&gt; の &lt;code&gt;IOSTAT_EOR&lt;/code&gt; パラメーターと比較することと同等です。</target>
        </trans-unit>
        <trans-unit id="d582395270a9362271328b1a2621e5345b7e6136" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ITIME(VALUES)&lt;/code&gt; Fills &lt;var&gt;VALUES&lt;/var&gt; with the numerical values at the current local time. The hour (in the range 1-24), minute (in the range 1-60), and seconds (in the range 1-60) appear in elements 1, 2, and 3 of &lt;var&gt;VALUES&lt;/var&gt;, respectively.</source>
          <target state="translated">&lt;code&gt;ITIME(VALUES)&lt;/code&gt; 塗りつぶしの &lt;var&gt;VALUES&lt;/var&gt; 現在のローカル時刻での数値を有します。時間（1〜24の範囲）、分（1〜60の範囲）、および秒（1〜60の範囲）は、それぞれ &lt;var&gt;VALUES&lt;/var&gt; の要素1、2、および3に表示されます。</target>
        </trans-unit>
        <trans-unit id="07c5eea905b94a7607af3d8c946161f6cc885724" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KIND(X)&lt;/code&gt; returns the kind value of the entity &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;KIND(X)&lt;/code&gt; は、エンティティ &lt;var&gt;X&lt;/var&gt; の種類の値を返します。</target>
        </trans-unit>
        <trans-unit id="cb9297fb52d4a2e6d326e9b770585f40c0d80820" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LEADZ&lt;/code&gt; returns the number of leading zero bits of an integer.</source>
          <target state="translated">&lt;code&gt;LEADZ&lt;/code&gt; は、整数の先行ゼロビットの数を返します。</target>
        </trans-unit>
        <trans-unit id="0391b17ffda06c41879993c2a2d0fe28f710905e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LITTLE_ENDIAN&lt;/code&gt; Use the little-endian format for unformatted files.</source>
          <target state="translated">&lt;code&gt;LITTLE_ENDIAN&lt;/code&gt; 書式なしファイルにはリトルエンディアン形式を使用します。</target>
        </trans-unit>
        <trans-unit id="dca8db31cfa78063287e86e183f95e401189ba4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOC(X)&lt;/code&gt; returns the address of &lt;var&gt;X&lt;/var&gt; as an integer.</source>
          <target state="translated">&lt;code&gt;LOC(X)&lt;/code&gt; は、のアドレスを返し &lt;var&gt;X&lt;/var&gt; を整数として。</target>
        </trans-unit>
        <trans-unit id="2217dea10d00d9f621c5ed6051bb6ecbbcf3aaa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCK_TYPE&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;LOCK_TYPE&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="6c26fa8359996044bf958721b863afcfeb92623e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG(X)&lt;/code&gt; computes the natural logarithm of &lt;var&gt;X&lt;/var&gt;, i.e. the logarithm to the base &lt;em&gt;e&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;LOG(X)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; の自然対数、つまり、底&lt;em&gt;e&lt;/em&gt;に対する対数を計算します。</target>
        </trans-unit>
        <trans-unit id="3b35b020287e0f8392577ce3f8d8a48452e57d55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG10(X)&lt;/code&gt; computes the base 10 logarithm of &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;LOG10(X)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; の 10を底とする対数を計算します。</target>
        </trans-unit>
        <trans-unit id="da870d089bad70b6dd5980d494afc71f0ceee55b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOGICAL_KINDS&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;LOGICAL_KINDS&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="6c634a17fc8f5707542e95b276bd366247689c5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOG_GAMMA(X)&lt;/code&gt; computes the natural logarithm of the absolute value of the Gamma (&lt;em&gt;\Gamma&lt;/em&gt;) function.</source>
          <target state="translated">&lt;code&gt;LOG_GAMMA(X)&lt;/code&gt; は、ガンマ（&lt;em&gt;\ Gamma&lt;/em&gt;）関数の絶対値の自然対数を計算します。</target>
        </trans-unit>
        <trans-unit id="8fbd6781171e4a800ccd8520793c4b1fc1fb8161" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSHIFT&lt;/code&gt; returns a value corresponding to &lt;var&gt;I&lt;/var&gt; with all of the bits shifted left by &lt;var&gt;SHIFT&lt;/var&gt; places. If the absolute value of &lt;var&gt;SHIFT&lt;/var&gt; is greater than &lt;code&gt;BIT_SIZE(I)&lt;/code&gt;, the value is undefined. Bits shifted out from the left end are lost; zeros are shifted in from the opposite end.</source>
          <target state="translated">&lt;code&gt;LSHIFT&lt;/code&gt; は &lt;var&gt;I&lt;/var&gt; に対応する値を返します。すべてのビットは &lt;var&gt;SHIFT&lt;/var&gt; 桁だけ左にシフトされます。 &lt;var&gt;SHIFT&lt;/var&gt; の絶対値が &lt;code&gt;BIT_SIZE(I)&lt;/code&gt; より大きい場合、値は未定義です。左端からシフトアウトされたビットは失われます。ゼロは反対側からシフトインされます。</target>
        </trans-unit>
        <trans-unit id="b6774fcb26ac97e2119917abeab8bce31e1a775d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSTAT&lt;/code&gt; is identical to &lt;a href=&quot;stat#STAT&quot;&gt;STAT&lt;/a&gt;, except that if path is a symbolic link, then the link itself is statted, not the file that it refers to.</source>
          <target state="translated">&lt;code&gt;LSTAT&lt;/code&gt; は&lt;a href=&quot;stat#STAT&quot;&gt;STAT&lt;/a&gt;と同じですが、pathがシンボリックリンクの場合は、リンク自体が示され、参照先のファイルは示されません。</target>
        </trans-unit>
        <trans-unit id="6bac4e5a82379f36a0ceb54090e8929b000b2bf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MALLOC(SIZE)&lt;/code&gt; allocates &lt;var&gt;SIZE&lt;/var&gt; bytes of dynamic memory and returns the address of the allocated memory. The &lt;code&gt;MALLOC&lt;/code&gt; intrinsic is an extension intended to be used with Cray pointers, and is provided in GNU Fortran to allow the user to compile legacy code. For new code using Fortran 95 pointers, the memory allocation intrinsic is &lt;code&gt;ALLOCATE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MALLOC(SIZE)&lt;/code&gt; は、 &lt;var&gt;SIZE&lt;/var&gt; バイトの動的メモリを割り当て、割り当てられたメモリのアドレスを返します。 &lt;code&gt;MALLOC&lt;/code&gt; の固有の拡張Crayポインタと一緒に使用することを意図し、そしてユーザは、レガシー・コードをコンパイルすることを可能にするGNU Fortranで提供されています。Fortran 95ポインターを使用する新しいコードの場合、メモリー割り当て組み込みは &lt;code&gt;ALLOCATE&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d84579e8742e6cb545a7d0d751eb6483e656b0ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MASKL(I[, KIND])&lt;/code&gt; has its leftmost &lt;var&gt;I&lt;/var&gt; bits set to 1, and the remaining bits set to 0.</source>
          <target state="translated">&lt;code&gt;MASKL(I[, KIND])&lt;/code&gt; 左端の &lt;var&gt;I&lt;/var&gt; ビットは1に設定され、残りのビットは0に設定されます。</target>
        </trans-unit>
        <trans-unit id="14cf321f55e8e8ac8420ce1db3f6f21d3b7ac2a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MASKL(I[, KIND])&lt;/code&gt; has its rightmost &lt;var&gt;I&lt;/var&gt; bits set to 1, and the remaining bits set to 0.</source>
          <target state="translated">&lt;code&gt;MASKL(I[, KIND])&lt;/code&gt; 右端の &lt;var&gt;I&lt;/var&gt; ビットは1に設定され、残りのビットは0に設定されます。</target>
        </trans-unit>
        <trans-unit id="03dd72f28cdb5292f683a0341fab08dde22d864b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MAXEXPONENT(X)&lt;/code&gt; returns the maximum exponent in the model of the type of &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MAXEXPONENT(X)&lt;/code&gt; は、 &lt;code&gt;X&lt;/code&gt; の型のモデルの最大指数を返します。</target>
        </trans-unit>
        <trans-unit id="3c375d4b7a18a008632ec78b441523a6cde57c89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MERGE_BITS(I, J, MASK)&lt;/code&gt; merges the bits of &lt;var&gt;I&lt;/var&gt; and &lt;var&gt;J&lt;/var&gt; as determined by the mask. The i-th bit of the result is equal to the i-th bit of &lt;var&gt;I&lt;/var&gt; if the i-th bit of &lt;var&gt;MASK&lt;/var&gt; is 1; it is equal to the i-th bit of &lt;var&gt;J&lt;/var&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;MERGE_BITS(I, J, MASK)&lt;/code&gt; は、マスクによって決定された &lt;var&gt;I&lt;/var&gt; と &lt;var&gt;J&lt;/var&gt; のビットをマージします。結果のi番目のビットは、 &lt;var&gt;MASK&lt;/var&gt; の i 番目のビットが &lt;var&gt;I&lt;/var&gt; 場合、Iの i番目のビットと等しくなります。それ以外の場合は、 &lt;var&gt;J&lt;/var&gt; の i番目のビットと同じです。</target>
        </trans-unit>
        <trans-unit id="283ff04b6429553ab8679c82f71b4bcaa4259ae5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINEXPONENT(X)&lt;/code&gt; returns the minimum exponent in the model of the type of &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MINEXPONENT(X)&lt;/code&gt; は、 &lt;code&gt;X&lt;/code&gt; の型のモデルの最小指数を返します。</target>
        </trans-unit>
        <trans-unit id="dd5cacb8e74dc4bce7d5af0cf9f736dcd4a79e38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MOD(A,P)&lt;/code&gt; computes the remainder of the division of A by P.</source>
          <target state="translated">&lt;code&gt;MOD(A,P)&lt;/code&gt; は、AをPで除算した剰余を計算します。</target>
        </trans-unit>
        <trans-unit id="5e54d269bfe18f22e7aca35cc0142cfbc0ae23ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODULO(A,P)&lt;/code&gt; computes the &lt;var&gt;A&lt;/var&gt; modulo &lt;var&gt;P&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;MODULO(A,P)&lt;/code&gt; 算出 &lt;var&gt;A&lt;/var&gt; モジュロ &lt;var&gt;P&lt;/var&gt; を。</target>
        </trans-unit>
        <trans-unit id="275af9bb1aa202404b2d30d6e3c45a583eddcb53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODULO(A,P)&lt;/code&gt; has the value &lt;var&gt;R&lt;/var&gt; such that &lt;code&gt;A=Q*P+R&lt;/code&gt;, where &lt;var&gt;Q&lt;/var&gt; is an integer and &lt;var&gt;R&lt;/var&gt; is between 0 (inclusive) and &lt;var&gt;P&lt;/var&gt; (exclusive).</source>
          <target state="translated">&lt;code&gt;MODULO(A,P)&lt;/code&gt; の値 &lt;var&gt;R&lt;/var&gt; は、 &lt;code&gt;A=Q*P+R&lt;/code&gt; です &lt;var&gt;Q&lt;/var&gt; は整数で、 &lt;var&gt;R&lt;/var&gt; は0（両端を含む）から &lt;var&gt;P&lt;/var&gt; （両端を含まない）の間です。</target>
        </trans-unit>
        <trans-unit id="81843ed91b95dc28c21f4a710c8514127e5221c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODULO(A,P)&lt;/code&gt; has the value of &lt;code&gt;A - FLOOR (A / P) * P&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MODULO(A,P)&lt;/code&gt; の値は &lt;code&gt;A - FLOOR (A / P) * P&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="139bb8c53439aa9c59ea821dc68f28a737c467b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MOVE_ALLOC(FROM, TO)&lt;/code&gt; moves the allocation from &lt;var&gt;FROM&lt;/var&gt; to &lt;var&gt;TO&lt;/var&gt;. &lt;var&gt;FROM&lt;/var&gt; will become deallocated in the process.</source>
          <target state="translated">&lt;code&gt;MOVE_ALLOC(FROM, TO)&lt;/code&gt; は、割り当てを &lt;var&gt;FROM&lt;/var&gt; から &lt;var&gt;TO&lt;/var&gt; に移動します。 &lt;var&gt;FROM&lt;/var&gt; はその過程で割り当て解除されます。</target>
        </trans-unit>
        <trans-unit id="709e99788491f9922411b820087984efbd7904a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NATIVE&lt;/code&gt; Use the native format. This is the default.</source>
          <target state="translated">&lt;code&gt;NATIVE&lt;/code&gt; 使用ネイティブフォーマット。これがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="2dc90b5968614a25b7061d43e3a3abbc5ac9d67d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NEAREST(X, S)&lt;/code&gt; returns the processor-representable number nearest to &lt;code&gt;X&lt;/code&gt; in the direction indicated by the sign of &lt;code&gt;S&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NEAREST(X, S)&lt;/code&gt; に最も近いプロセッサ表現数を返す &lt;code&gt;X&lt;/code&gt; 方向の符号によって示さに &lt;code&gt;S&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2e8ef9c21a752a65daf244d8701948b258cf4bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NEW_LINE(C)&lt;/code&gt; returns the new-line character.</source>
          <target state="translated">&lt;code&gt;NEW_LINE(C)&lt;/code&gt; は改行文字を返します。</target>
        </trans-unit>
        <trans-unit id="3515b5a0ef9c7f5c07c891ca89c991eefdfe4774" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NINT(A)&lt;/code&gt; rounds its argument to the nearest whole number.</source>
          <target state="translated">&lt;code&gt;NINT(A)&lt;/code&gt; は、引数を最も近い整数に丸めます。</target>
        </trans-unit>
        <trans-unit id="443668b482579662dec35e7b167058077f4e402c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NOT&lt;/code&gt; returns the bitwise Boolean inverse of &lt;var&gt;I&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;NOT&lt;/code&gt; は、 &lt;var&gt;I&lt;/var&gt; のビットごとのブール反転を返します。</target>
        </trans-unit>
        <trans-unit id="b8c443850902f5d8356fc89828d23c61765bb82b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NO_ARG_CHECK&lt;/code&gt; &amp;ndash; disable the type, kind and rank checking</source>
          <target state="translated">&lt;code&gt;NO_ARG_CHECK&lt;/code&gt; &amp;ndash;タイプ、種類、ランクのチェックを無効にします</target>
        </trans-unit>
        <trans-unit id="0fcf35fbb335eb65bd72079faa5675277b1460e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NUMERIC_STORAGE_SIZE&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;NUMERIC_STORAGE_SIZE&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="e036abaed2ee46fa5ab9bae7625520fd07a46371" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OMP_LIB&lt;/code&gt; provides the scalar default-integer named constant &lt;code&gt;openmp_version&lt;/code&gt; with a value of the form &lt;var&gt;yyyymm&lt;/var&gt;, where &lt;code&gt;yyyy&lt;/code&gt; is the year and &lt;var&gt;mm&lt;/var&gt; the month of the OpenMP version; for OpenMP v4.5 the value is &lt;code&gt;201511&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OMP_LIB&lt;/code&gt; は一定の名前のスカラーデフォルト-整数提供 &lt;code&gt;openmp_version&lt;/code&gt; フォームの値を持つ &lt;var&gt;yyyymm&lt;/var&gt; 、 &lt;code&gt;yyyy&lt;/code&gt; は年です &lt;var&gt;mm&lt;/var&gt; のOpenMP版の月を。OpenMP v4.5の場合、値は &lt;code&gt;201511&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9aafd44c58dca4dd5d043f73f33b73bde8040610" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OMP_LIB_KINDS&lt;/code&gt; provides the following scalar default-integer named constants:</source>
          <target state="translated">&lt;code&gt;OMP_LIB_KINDS&lt;/code&gt; は、次のスカラーのデフォルト整数の名前付き定数を提供します。</target>
        </trans-unit>
        <trans-unit id="46029585c912a51a964a544bd7858a5965e0cea8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPENACC&lt;/code&gt; provides the scalar default-integer named constant &lt;code&gt;openacc_version&lt;/code&gt; with a value of the form &lt;var&gt;yyyymm&lt;/var&gt;, where &lt;code&gt;yyyy&lt;/code&gt; is the year and &lt;var&gt;mm&lt;/var&gt; the month of the OpenACC version; for OpenACC v2.0 the value is &lt;code&gt;201306&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OPENACC&lt;/code&gt; は一定の名前のスカラーデフォルト-整数提供 &lt;code&gt;openacc_version&lt;/code&gt; フォームの値を持つ &lt;var&gt;yyyymm&lt;/var&gt; 、 &lt;code&gt;yyyy&lt;/code&gt; は年です &lt;var&gt;mm&lt;/var&gt; OpenACCバージョンの月を。OpenACC v2.0の場合、値は &lt;code&gt;201306&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ebadafda6e75ee1097f256d10237bcb4d5f103c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OUTPUT_UNIT&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;OUTPUT_UNIT&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="659e2a1d5a53032fc2eb481881b3d82b0875c7a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POPCNT(I)&lt;/code&gt; returns the number of bits set (&amp;rsquo;1&amp;rsquo; bits) in the binary representation of &lt;code&gt;I&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;POPCNT(I)&lt;/code&gt; のバイナリ表現に設定されたビットの数（「1」ビット）を返し &lt;code&gt;I&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="32c6f50388553662a8569434f8711388705ff908" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POPPAR(I)&lt;/code&gt; returns parity of the integer &lt;code&gt;I&lt;/code&gt;, i.e. the parity of the number of bits set (&amp;rsquo;1&amp;rsquo; bits) in the binary representation of &lt;code&gt;I&lt;/code&gt;. It is equal to 0 if &lt;code&gt;I&lt;/code&gt; has an even number of bits set, and 1 for an odd number of &amp;rsquo;1&amp;rsquo; bits.</source>
          <target state="translated">&lt;code&gt;POPPAR(I)&lt;/code&gt; 整数の戻りパリティ &lt;code&gt;I&lt;/code&gt; 、すなわちのバイナリ表現で（「1」ビット）を設定されたビットの数のパリティ、 &lt;code&gt;I&lt;/code&gt; 。偶数のビットが設定されている場合 &lt;code&gt;I&lt;/code&gt; 0 、奇数の「1」ビットの場合は1です。</target>
        </trans-unit>
        <trans-unit id="5b9a5433cde8707912676b7944743758a553d355" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRECISION(X)&lt;/code&gt; returns the decimal precision in the model of the type of &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PRECISION(X)&lt;/code&gt; は、 &lt;code&gt;X&lt;/code&gt; の型のモデルの10進精度を返します。</target>
        </trans-unit>
        <trans-unit id="b9d0a8506986b9acfcb3d0ed380c0097b6f8bc68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRINT&lt;/code&gt; namelist is permitted. This causes an error if</source>
          <target state="translated">&lt;code&gt;PRINT&lt;/code&gt; リストの印刷が許可されています。これはエラーを引き起こします</target>
        </trans-unit>
        <trans-unit id="e7bf736e8262344dcb9385beec637ba084fb08eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RADIX(X)&lt;/code&gt; returns the base of the model representing the entity &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;RADIX(X)&lt;/code&gt; は、エンティティ &lt;var&gt;X&lt;/var&gt; を表すモデルのベースを返します。</target>
        </trans-unit>
        <trans-unit id="0f76425d9c7cdefbd7b301628377fa91f1ccf490" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RAND(FLAG)&lt;/code&gt; returns a pseudo-random number from a uniform distribution between 0 and 1. If &lt;var&gt;FLAG&lt;/var&gt; is 0, the next number in the current sequence is returned; if &lt;var&gt;FLAG&lt;/var&gt; is 1, the generator is restarted by &lt;code&gt;CALL SRAND(0)&lt;/code&gt;; if &lt;var&gt;FLAG&lt;/var&gt; has any other value, it is used as a new seed with &lt;code&gt;SRAND&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RAND(FLAG)&lt;/code&gt; は、0と1の間の一様分布から疑似乱数を返します &lt;var&gt;FLAG&lt;/var&gt; が0の場合、現在のシーケンスの次の数値が返されます。場合 &lt;var&gt;FLAG&lt;/var&gt; が 1であり、発電機は、によって再起動される &lt;code&gt;CALL SRAND(0)&lt;/code&gt; 。場合 &lt;var&gt;FLAG&lt;/var&gt; は他の値を持っている、それが持つ新しいシードとして使用されている &lt;code&gt;SRAND&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="338f978a9c7b42d70a3e5f7f36f20ffa6122cbff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RANGE(X)&lt;/code&gt; returns the decimal exponent range in the model of the type of &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RANGE(X)&lt;/code&gt; は、 &lt;code&gt;X&lt;/code&gt; の型のモデルの10進数の指数範囲を返します。</target>
        </trans-unit>
        <trans-unit id="e167f850e13c887ac10b5efdf3bb40403988a8ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RANK(A)&lt;/code&gt; returns the rank of a scalar or array data object.</source>
          <target state="translated">&lt;code&gt;RANK(A)&lt;/code&gt; は、スカラーまたは配列データオブジェクトのランクを返します。</target>
        </trans-unit>
        <trans-unit id="ce5c51e9cb26eba12cfc636ceceb5d3f6576300a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REAL(A [, KIND])&lt;/code&gt; converts its argument &lt;var&gt;A&lt;/var&gt; to a real type. The &lt;code&gt;REALPART&lt;/code&gt; function is provided for compatibility with &lt;code&gt;g77&lt;/code&gt;, and its use is strongly discouraged.</source>
          <target state="translated">&lt;code&gt;REAL(A [, KIND])&lt;/code&gt; 、引数 &lt;var&gt;A&lt;/var&gt; を実数型に変換します。 &lt;code&gt;REALPART&lt;/code&gt; の関数はとの互換性のために提供される &lt;code&gt;g77&lt;/code&gt; 、及びその使用は強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="5879439285230f2aaa838b4b36b24e02e3abf32a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REAL(A)&lt;/code&gt; is converted to a default real type if &lt;var&gt;A&lt;/var&gt; is an integer or real variable.</source>
          <target state="translated">&lt;code&gt;REAL(A)&lt;/code&gt; &lt;var&gt;A&lt;/var&gt; が整数または実数変数の場合、REAL（A）はデフォルトの実数型に変換されます。</target>
        </trans-unit>
        <trans-unit id="161be9a0f21927d7283c11ee769b467a75d90607" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REAL(A)&lt;/code&gt; is converted to a real type with the kind type parameter of &lt;var&gt;A&lt;/var&gt; if &lt;var&gt;A&lt;/var&gt; is a complex variable.</source>
          <target state="translated">&lt;code&gt;REAL(A)&lt;/code&gt; は、 &lt;var&gt;A&lt;/var&gt; が複素変数である場合、 &lt;var&gt;A&lt;/var&gt; の kind型パラメーターを持つ実数型に変換されます。</target>
        </trans-unit>
        <trans-unit id="4ecca9999f933a52e1df478b924d1f33e03ad78a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REAL(A, KIND)&lt;/code&gt; is converted to a real type with kind type parameter &lt;var&gt;KIND&lt;/var&gt; if &lt;var&gt;A&lt;/var&gt; is a complex, integer, or real variable.</source>
          <target state="translated">&lt;code&gt;REAL(A, KIND)&lt;/code&gt; は、 &lt;var&gt;A&lt;/var&gt; が複素数、整数、または実数変数の場合、kind型パラメーター &lt;var&gt;KIND&lt;/var&gt; を持つ実数型に変換されます。</target>
        </trans-unit>
        <trans-unit id="a1533ba94e1b550e316b2102396bbceb957d222a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REAL32&lt;/code&gt;, &lt;code&gt;REAL64&lt;/code&gt;, &lt;code&gt;REAL128&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;REAL32&lt;/code&gt; 、 &lt;code&gt;REAL64&lt;/code&gt; 、 &lt;code&gt;REAL128&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5d0d8d8c0158ac99bb8fcc49a14e359a46e84b19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REAL_KINDS&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;REAL_KINDS&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="53a86c265ee0227cebff97156ab11acb5ee85403" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RESULT = CTIME(TIME)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RESULT = CTIME(TIME)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b733a3e260ea92b0f5da5064d228e997b142347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RRSPACING(X)&lt;/code&gt; returns the reciprocal of the relative spacing of model numbers near &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;RRSPACING(X)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; の近くのモデル番号の相対間隔の逆数を返します。</target>
        </trans-unit>
        <trans-unit id="09a241acc8a13829527133543488750a38f51454" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSHIFT&lt;/code&gt; returns a value corresponding to &lt;var&gt;I&lt;/var&gt; with all of the bits shifted right by &lt;var&gt;SHIFT&lt;/var&gt; places. If the absolute value of &lt;var&gt;SHIFT&lt;/var&gt; is greater than &lt;code&gt;BIT_SIZE(I)&lt;/code&gt;, the value is undefined. Bits shifted out from the right end are lost. The fill is arithmetic: the bits shifted in from the left end are equal to the leftmost bit, which in two&amp;rsquo;s complement representation is the sign bit.</source>
          <target state="translated">&lt;code&gt;RSHIFT&lt;/code&gt; は &lt;var&gt;I&lt;/var&gt; に対応する値を返し、すべてのビットが &lt;var&gt;SHIFT&lt;/var&gt; 桁だけ右にシフトされます。 &lt;var&gt;SHIFT&lt;/var&gt; の絶対値が &lt;code&gt;BIT_SIZE(I)&lt;/code&gt; より大きい場合、値は未定義です。右端からシフトアウトされたビットは失われます。塗りつぶしは算術です。左端からシフトインされたビットは、左端のビットと等しく、2の補数表現では符号ビットです。</target>
        </trans-unit>
        <trans-unit id="f200b88fa5407ae04634bc4145693f044351bf3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCALE(X,I)&lt;/code&gt; returns &lt;code&gt;X * RADIX(X)**I&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SCALE(X,I)&lt;/code&gt; は &lt;code&gt;X * RADIX(X)**I&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="8d1c14f94ecc13257771f2f57d506ccd909ffc05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECNDS(X)&lt;/code&gt; gets the time in seconds from the real-time system clock. &lt;var&gt;X&lt;/var&gt; is a reference time, also in seconds. If this is zero, the time in seconds from midnight is returned. This function is non-standard and its use is discouraged.</source>
          <target state="translated">&lt;code&gt;SECNDS(X)&lt;/code&gt; は、リアルタイムシステムクロックから時間を秒単位で取得します。 &lt;var&gt;X&lt;/var&gt; は、秒単位の基準時間です。これがゼロの場合、午前0時からの秒単位の時間が返されます。この関数は非標準であり、その使用は推奨されません。</target>
        </trans-unit>
        <trans-unit id="fe6e507f6b84988b21c73cfa30314e3e47004751" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SELECTED_CHAR_KIND(NAME)&lt;/code&gt; returns the kind value for the character set named &lt;var&gt;NAME&lt;/var&gt;, if a character set with such a name is supported, or &lt;em&gt;-1&lt;/em&gt; otherwise. Currently, supported character sets include &amp;ldquo;ASCII&amp;rdquo; and &amp;ldquo;DEFAULT&amp;rdquo;, which are equivalent, and &amp;ldquo;ISO_10646&amp;rdquo; (Universal Character Set, UCS-4) which is commonly known as Unicode.</source>
          <target state="translated">&lt;code&gt;SELECTED_CHAR_KIND(NAME)&lt;/code&gt; は、そのような名前の文字セットがサポートされている場合は &lt;var&gt;NAME&lt;/var&gt; という名前の文字セットの種類の値を返し、そうでない場合は&lt;em&gt;-1を&lt;/em&gt;返します。現在サポートされている文字セットには、同等の「ASCII」と「DEFAULT」、および一般にUnicodeとして知られている「ISO_10646」（Universal Character Set、UCS-4）が含まれます。</target>
        </trans-unit>
        <trans-unit id="b7f490e9b8f5501236a29f61fd5e906032d0abe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SELECTED_INT_KIND(R)&lt;/code&gt; return the kind value of the smallest integer type that can represent all values ranging from &lt;em&gt;-10^R&lt;/em&gt; (exclusive) to &lt;em&gt;10^R&lt;/em&gt; (exclusive). If there is no integer kind that accommodates this range, &lt;code&gt;SELECTED_INT_KIND&lt;/code&gt; returns &lt;em&gt;-1&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;SELECTED_INT_KIND(R)&lt;/code&gt; は、&lt;em&gt;-10 ^ R&lt;/em&gt;（排他的）&lt;em&gt;〜10 ^ R&lt;/em&gt;（排他的）の範囲のすべての値を表すことができる最小の整数型の種類値を返します。この範囲に対応する整数の種類がない場合、 &lt;code&gt;SELECTED_INT_KIND&lt;/code&gt; は&lt;em&gt;-1を&lt;/em&gt;返します。</target>
        </trans-unit>
        <trans-unit id="86ab01c6fb24e14dfa50127fdff68346b787ccf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SELECTED_REAL_KIND(P,R)&lt;/code&gt; returns the kind value of a real data type with decimal precision of at least &lt;code&gt;P&lt;/code&gt; digits, exponent range of at least &lt;code&gt;R&lt;/code&gt;, and with a radix of &lt;code&gt;RADIX&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SELECTED_REAL_KIND(P,R)&lt;/code&gt; は、少なくとも &lt;code&gt;P&lt;/code&gt; 桁の小数精度、少なくとも &lt;code&gt;R&lt;/code&gt; の指数範囲、および基数が &lt;code&gt;RADIX&lt;/code&gt; の実数データ型の種類値を返します。</target>
        </trans-unit>
        <trans-unit id="595f035f785e10946e5189c617dce1eba4270c7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SELECTED_REAL_KIND&lt;/code&gt; returns the value of the kind type parameter of a real data type with decimal precision of at least &lt;code&gt;P&lt;/code&gt; digits, a decimal exponent range of at least &lt;code&gt;R&lt;/code&gt;, and with the requested &lt;code&gt;RADIX&lt;/code&gt;. If the &lt;code&gt;RADIX&lt;/code&gt; parameter is absent, real kinds with any radix can be returned. If more than one real data type meet the criteria, the kind of the data type with the smallest decimal precision is returned. If no real data type matches the criteria, the result is</source>
          <target state="translated">&lt;code&gt;SELECTED_REAL_KIND&lt;/code&gt; は、少なくとも &lt;code&gt;P&lt;/code&gt; 桁の10進精度、少なくとも &lt;code&gt;R&lt;/code&gt; の 10進数の指数範囲、および要求された &lt;code&gt;RADIX&lt;/code&gt; を持つ、実数データ型のkind型パラメーターの値を返します。 &lt;code&gt;RADIX&lt;/code&gt; パラメータがない場合、基数のある実数を返すことができます。複数の実際のデータ型が基準を満たす場合、最小の10進精度を持つデータ型の種類が返されます。基準に一致する実際のデータ型がない場合、結果は</target>
        </trans-unit>
        <trans-unit id="e1bbfcbcd18c95cc3ee66b6973daf4e9c27d3562" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET_EXPONENT(X, I)&lt;/code&gt; returns the real number whose fractional part is that that of &lt;var&gt;X&lt;/var&gt; and whose exponent part is &lt;var&gt;I&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;SET_EXPONENT(X, I)&lt;/code&gt; は、小数部が &lt;var&gt;X&lt;/var&gt; の実数で、指数部が &lt;var&gt;I&lt;/var&gt; である実数を返します。</target>
        </trans-unit>
        <trans-unit id="56821a9919793fef3bc4e46855b1f8d1b34f530b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHIFTA&lt;/code&gt; returns a value corresponding to &lt;var&gt;I&lt;/var&gt; with all of the bits shifted right by &lt;var&gt;SHIFT&lt;/var&gt; places. If the absolute value of &lt;var&gt;SHIFT&lt;/var&gt; is greater than &lt;code&gt;BIT_SIZE(I)&lt;/code&gt;, the value is undefined. Bits shifted out from the right end are lost. The fill is arithmetic: the bits shifted in from the left end are equal to the leftmost bit, which in two&amp;rsquo;s complement representation is the sign bit.</source>
          <target state="translated">&lt;code&gt;SHIFTA&lt;/code&gt; は &lt;var&gt;I&lt;/var&gt; に対応する値を返し、すべてのビットが &lt;var&gt;SHIFT&lt;/var&gt; 桁だけ右にシフトされます。 &lt;var&gt;SHIFT&lt;/var&gt; の絶対値が &lt;code&gt;BIT_SIZE(I)&lt;/code&gt; より大きい場合、値は未定義です。右端からシフトアウトされたビットは失われます。塗りつぶしは算術です。左端からシフトインされたビットは、左端のビットと等しく、2の補数表現では符号ビットです。</target>
        </trans-unit>
        <trans-unit id="873181d5c5c1bb223c9c1d9fc4e6f20e5bf5ebc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHIFTL&lt;/code&gt; returns a value corresponding to &lt;var&gt;I&lt;/var&gt; with all of the bits shifted left by &lt;var&gt;SHIFT&lt;/var&gt; places. If the absolute value of &lt;var&gt;SHIFT&lt;/var&gt; is greater than &lt;code&gt;BIT_SIZE(I)&lt;/code&gt;, the value is undefined. Bits shifted out from the left end are lost, and bits shifted in from the right end are set to 0.</source>
          <target state="translated">&lt;code&gt;SHIFTL&lt;/code&gt; は &lt;var&gt;I&lt;/var&gt; に対応する値を返し、すべてのビットは &lt;var&gt;SHIFT&lt;/var&gt; 桁だけ左にシフトされます。 &lt;var&gt;SHIFT&lt;/var&gt; の絶対値が &lt;code&gt;BIT_SIZE(I)&lt;/code&gt; より大きい場合、値は未定義です。左端からシフトアウトされたビットは失われ、右端からシフトインされたビットは0に設定されます。</target>
        </trans-unit>
        <trans-unit id="415e83f1e4be741205d3ad7038a323859fa9b2b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHIFTR&lt;/code&gt; returns a value corresponding to &lt;var&gt;I&lt;/var&gt; with all of the bits shifted right by &lt;var&gt;SHIFT&lt;/var&gt; places. If the absolute value of &lt;var&gt;SHIFT&lt;/var&gt; is greater than &lt;code&gt;BIT_SIZE(I)&lt;/code&gt;, the value is undefined. Bits shifted out from the right end are lost, and bits shifted in from the left end are set to 0.</source>
          <target state="translated">&lt;code&gt;SHIFTR&lt;/code&gt; は &lt;var&gt;I&lt;/var&gt; に対応する値を返し、すべてのビットが &lt;var&gt;SHIFT&lt;/var&gt; 桁だけ右にシフトされます。 &lt;var&gt;SHIFT&lt;/var&gt; の絶対値が &lt;code&gt;BIT_SIZE(I)&lt;/code&gt; より大きい場合、値は未定義です。右端からシフトアウトされたビットは失われ、左端からシフトインされたビットは0に設定されます。</target>
        </trans-unit>
        <trans-unit id="fe385f6a177126d8892513c4bd3025f059b901c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SIGN(A,B)&lt;/code&gt; returns the value of &lt;var&gt;A&lt;/var&gt; with the sign of &lt;var&gt;B&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;SIGN(A,B)&lt;/code&gt; は、 &lt;var&gt;A&lt;/var&gt; の値と &lt;var&gt;B&lt;/var&gt; の符号を返します。</target>
        </trans-unit>
        <trans-unit id="009ba41ca2ab9c32be906bd2bdce1737d32eae67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SIGNAL(NUMBER, HANDLER [, STATUS])&lt;/code&gt; causes external subroutine &lt;var&gt;HANDLER&lt;/var&gt; to be executed with a single integer argument when signal &lt;var&gt;NUMBER&lt;/var&gt; occurs. If &lt;var&gt;HANDLER&lt;/var&gt; is an integer, it can be used to turn off handling of signal &lt;var&gt;NUMBER&lt;/var&gt; or revert to its default action. See &lt;code&gt;signal(2)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SIGNAL(NUMBER, HANDLER [, STATUS])&lt;/code&gt; は、シグナル &lt;var&gt;NUMBER&lt;/var&gt; が発生したときに、外部サブルーチン &lt;var&gt;HANDLER&lt;/var&gt; を単一の整数引数で実行します。場合 &lt;var&gt;HANDLER&lt;/var&gt; は整数であり、信号の取り扱いオフにするために使用することができ &lt;var&gt;NUMBER&lt;/var&gt; デフォルトのアクションにまたは元に戻します。 &lt;code&gt;signal(2)&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="be8b94d4a083977dc0c0cebd756ac36182826fae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SIN(X)&lt;/code&gt; computes the sine of &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;SIN(X)&lt;/code&gt; は &lt;var&gt;X&lt;/var&gt; の正弦を計算します。</target>
        </trans-unit>
        <trans-unit id="8adfd0c680916e48ba9637d13dea16b3acad6c7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SIND(X)&lt;/code&gt; computes the sine of &lt;var&gt;X&lt;/var&gt; in degrees.</source>
          <target state="translated">&lt;code&gt;SIND(X)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; のサインを度数で計算します。</target>
        </trans-unit>
        <trans-unit id="4ce94d3297ac6f47247cb0d8d8db020e3f82f398" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINH(X)&lt;/code&gt; computes the hyperbolic sine of &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;SINH(X)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; の双曲線正弦を計算します。</target>
        </trans-unit>
        <trans-unit id="84d4de5f26a9631a1c20a225e26fb7ace91a1fe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SIZEOF(X)&lt;/code&gt; calculates the number of bytes of storage the expression &lt;code&gt;X&lt;/code&gt; occupies.</source>
          <target state="translated">&lt;code&gt;SIZEOF(X)&lt;/code&gt; は、式 &lt;code&gt;X&lt;/code&gt; が占めるストレージのバイト数を計算します。</target>
        </trans-unit>
        <trans-unit id="d64ad3d3823457d1f9b04086f417d5ae4b9bfeee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQRT(X)&lt;/code&gt; computes the square root of &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;SQRT(X)&lt;/code&gt; は &lt;var&gt;X&lt;/var&gt; の平方根を計算します。</target>
        </trans-unit>
        <trans-unit id="26122c2e710c310bc95a935297203d9d00a2355b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SRAND&lt;/code&gt; reinitializes the pseudo-random number generator called by &lt;code&gt;RAND&lt;/code&gt; and &lt;code&gt;IRAND&lt;/code&gt;. The new seed used by the generator is specified by the required argument &lt;var&gt;SEED&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;SRAND&lt;/code&gt; は、 &lt;code&gt;RAND&lt;/code&gt; および &lt;code&gt;IRAND&lt;/code&gt; によって呼び出される疑似乱数ジェネレータを再初期化します。ジェネレーターによって使用される新しいシードは、必須の引数 &lt;var&gt;SEED&lt;/var&gt; によって指定されます。</target>
        </trans-unit>
        <trans-unit id="4304dd07f28016bc3a0c326c08aed0b7f7a0d43c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STATIC&lt;/code&gt; is exactly equivalent to &lt;code&gt;SAVE&lt;/code&gt;, and specifies that an entity should be allocated in static memory. As an example, &lt;code&gt;STATIC&lt;/code&gt; local variables will retain their values across multiple calls to a function.</source>
          <target state="translated">&lt;code&gt;STATIC&lt;/code&gt; は &lt;code&gt;SAVE&lt;/code&gt; とまったく同じであり、エンティティを静的メモリに割り当てる必要があることを指定します。例として、 &lt;code&gt;STATIC&lt;/code&gt; ローカル変数は、関数への複数の呼び出しにわたって値を保持します。</target>
        </trans-unit>
        <trans-unit id="bc0122cc4bb188ce1882ffa2ffd58be737458c05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STATUS&lt;/code&gt; is passed to the parent process on exit.</source>
          <target state="translated">&lt;code&gt;STATUS&lt;/code&gt; は、終了時に親プロセスに渡されます。</target>
        </trans-unit>
        <trans-unit id="a0aecedd7f2ead6059b29dede981acc0154aa45d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="8fe687732e362f8763a136f309610087d06f340c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STAT_LOCKED&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;STAT_LOCKED&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="0196e407bbbc1c96ee862cbef0ecb4726794a148" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STAT_LOCKED_OTHER_IMAGE&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;STAT_LOCKED_OTHER_IMAGE&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="f8c43bc122d3f5f7f501d9923184695f2e2dd14a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="fc82921fc124620db5fe056de02ed29f3422c8e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STAT_UNLOCKED&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;STAT_UNLOCKED&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="63a29e4005a0d5b2599123cc7478f6043c903308" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STDCALL&lt;/code&gt; &amp;ndash; convention where the called procedure pops the stack</source>
          <target state="translated">&lt;code&gt;STDCALL&lt;/code&gt; &amp;ndash;呼び出されたプロシージャがスタックをポップする規則</target>
        </trans-unit>
        <trans-unit id="1424f6d841ac5af4424ea636ab970d162d968c5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SWAP&lt;/code&gt; Swap between little- and big-endian.</source>
          <target state="translated">&lt;code&gt;SWAP&lt;/code&gt; リトルエンディアンとビッグエンディアンを入れ替えます。</target>
        </trans-unit>
        <trans-unit id="1afa8cf5f307d30094407a70bb62a0007fa9db1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAN(X)&lt;/code&gt; computes the tangent of &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;TAN(X)&lt;/code&gt; は &lt;var&gt;X&lt;/var&gt; のタンジェントを計算します。</target>
        </trans-unit>
        <trans-unit id="ad8aa63b3446ed2eecaa516834474f336bfe0d86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAND(X)&lt;/code&gt; computes the tangent of &lt;var&gt;X&lt;/var&gt; in degrees.</source>
          <target state="translated">&lt;code&gt;TAND(X)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; のタンジェントを度数で計算します。</target>
        </trans-unit>
        <trans-unit id="10fbdaebd08d5ad576696dbacc867af41ecd8619" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TANH(X)&lt;/code&gt; computes the hyperbolic tangent of &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;TANH(X)&lt;/code&gt; は、 &lt;var&gt;X&lt;/var&gt; の双曲線正接を計算します。</target>
        </trans-unit>
        <trans-unit id="3e35f6913f306b774aada21fa3a781b4f5a866fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TIME = DTIME(VALUES)&lt;/code&gt;, (not recommended).</source>
          <target state="translated">&lt;code&gt;TIME = DTIME(VALUES)&lt;/code&gt; 、（非推奨）。</target>
        </trans-unit>
        <trans-unit id="3b8e653a627338d4fb971de864f6b883a3d4ef48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TIME = ETIME(VALUES)&lt;/code&gt;, (not recommended).</source>
          <target state="translated">&lt;code&gt;TIME = ETIME(VALUES)&lt;/code&gt; 、（非推奨）。</target>
        </trans-unit>
        <trans-unit id="25bbc647d57152b46b7c13c9c7c35b2840725503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TIME&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TIME&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="cd7534023c9ba93bd78e5e0beeb602c1fac186ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TINY(X)&lt;/code&gt; returns the smallest positive (non zero) number in the model of the type of &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TINY(X)&lt;/code&gt; は、 &lt;code&gt;X&lt;/code&gt; の型のモデル内の最小の正（ゼロ以外）の数値を返します。</target>
        </trans-unit>
        <trans-unit id="df817ef457f6b9faccc2f82d9476811a3d079560" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRAILZ&lt;/code&gt; returns the number of trailing zero bits of an integer.</source>
          <target state="translated">&lt;code&gt;TRAILZ&lt;/code&gt; は、整数の後続ゼロビットの数を返します。</target>
        </trans-unit>
        <trans-unit id="bd39c461d8afa14555f0f5bdcd2b2005d0e7e9e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VALUE(1)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;VALUE(1)&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="1aec4c8c43e1ead27ade16a3cadabe017ae7bf9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VALUE(2)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;VALUE(2)&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="f6b24262260fbae025a67e5517466206989bb09e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VALUE(3)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;VALUE(3)&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="e0f1363e2fc379de441bf8018678f2d4ece44d8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VALUE(4)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;VALUE(4)&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="d4a89f6a785870fcb3afa3440f51d6de9489aa1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VALUE(5)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;VALUE(5)&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="126b7dd589265b50b65b5f0c81d152c2ee13bdb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VALUE(6)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;VALUE(6)&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="ac09d2738bfd89f785c0f72c31a5a4aa8806a7ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VALUE(7)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;VALUE(7)&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="ff751b7e9e4d82f4e81e80dd2bca9aaac48650dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VALUE(8)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;VALUE(8)&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="4c0b01cbefd110ee5a18812ad4d2ef19362a48b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VALUES(1)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;VALUES(1)&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="721bbcf648bdd8e6705c5df34cbf3376ebcc5de1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VALUES(2)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;VALUES(2)&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="c31e753d3b1c265dcf278506861be86b0065feca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__asm__ __volatile__ (&quot;&quot;:::&quot;memory&quot;)&lt;/code&gt; to prevent code movements.</source>
          <target state="translated">&lt;code&gt;__asm__ __volatile__ (&quot;&quot;:::&quot;memory&quot;)&lt;/code&gt; コードの移動を防止します。</target>
        </trans-unit>
        <trans-unit id="56b728657960d86d7c4df8eaecfd3a1d1e5262c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_gfortran_set_args&lt;/code&gt; saves the command-line arguments; this initialization is required if any of the command-line intrinsics is called. Additionally, it shall be called if backtracing is enabled (see &lt;code&gt;_gfortran_set_options&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;_gfortran_set_args&lt;/code&gt; はコマンドライン引数を保存します。この初期化は、コマンドライン組み込み関数が呼び出された場合に必要です。さらに、バックトレースが有効な場合に呼び出されます（ &lt;code&gt;_gfortran_set_options&lt;/code&gt; を参照）。</target>
        </trans-unit>
        <trans-unit id="63d68a0c02e891d93f58b29b2bcfbee61f13abc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_gfortran_set_convert&lt;/code&gt; set the representation of data for unformatted files.</source>
          <target state="translated">&lt;code&gt;_gfortran_set_convert&lt;/code&gt; は、フォーマットされていないファイルのデータ表現を設定します。</target>
        </trans-unit>
        <trans-unit id="1edfe62a9ccdb94ce1a00748494d9234bc63ad51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_gfortran_set_fpe&lt;/code&gt; enables floating point exception traps for the specified exceptions. On most systems, this will result in a SIGFPE signal being sent and the program being aborted.</source>
          <target state="translated">&lt;code&gt;_gfortran_set_fpe&lt;/code&gt; は、指定された例外の浮動小数点例外トラップを有効にします。ほとんどのシステムでは、これによりSIGFPEシグナルが送信され、プログラムが中止されます。</target>
        </trans-unit>
        <trans-unit id="820909460c80edc43bd2edd6dc310393a5f51ea2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_gfortran_set_max_subrecord_length&lt;/code&gt; set the maximum length for a subrecord. This option only makes sense for testing and debugging of unformatted I/O.</source>
          <target state="translated">&lt;code&gt;_gfortran_set_max_subrecord_length&lt;/code&gt; は、サブレコードの最大長を設定します。このオプションは、フォーマットされていないI / Oのテストとデバッグにのみ意味があります。</target>
        </trans-unit>
        <trans-unit id="f69e8572ae4a070e32e2f1ec33c5511701d155ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_gfortran_set_options&lt;/code&gt; sets several flags related to the Fortran standard to be used, whether backtracing should be enabled and whether range checks should be performed. The syntax allows for upward compatibility since the number of passed flags is specified; for non-passed flags, the default value is used. See also see &lt;a href=&quot;code-gen-options#Code-Gen-Options&quot;&gt;Code Gen Options&lt;/a&gt;. Please note that not all flags are actually used.</source>
          <target state="translated">&lt;code&gt;_gfortran_set_options&lt;/code&gt; は、使用するFortran規格に関連するいくつかのフラグ、バックトレースを有効にするかどうか、および範囲チェックを実行するかどうかを設定します。渡されるフラグの数が指定されているため、構文は上位互換性を考慮しています。渡されなかったフラグには、デフォルト値が使用されます。&lt;a href=&quot;code-gen-options#Code-Gen-Options&quot;&gt;コード生成オプション&lt;/a&gt;も参照してください。すべてのフラグが実際に使用されるわけではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="0f995879cc0a1da4d98ad3c583df986a2f6d70ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_gfortran_set_record_marker&lt;/code&gt; sets the length of record markers for unformatted files.</source>
          <target state="translated">&lt;code&gt;_gfortran_set_record_marker&lt;/code&gt; は、フォーマットされていないファイルのレコードマーカーの長さを設定します。</target>
        </trans-unit>
        <trans-unit id="305c73d244dd90dd218d2e60cdd91cace80b846a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;signed char&lt;/code&gt;/&lt;code&gt;unsigned char&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;signed char&lt;/code&gt; / &lt;code&gt;unsigned char&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9a03b6ac1c59a374267d6f867b7b1689491e5485" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Array Type&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;配列タイプ&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c4013d58a1302800fb0cd3e02cd2dacd842bdcdd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Boundary Value&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;境界値&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43167334cf7bea283baba4bd19b3ec1bbcfd97d5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Caution: This option can lead to long compile times and excessively large object files.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意：このオプションを使用すると、コンパイル時間が長くなり、オブジェクトファイルが非常に大きくなる可能性があります。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="681e5f25c4771cb0667a4e539338028ea19f116a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Caution:&lt;/em&gt; It is not a good idea to mix Fortran code compiled with</source>
          <target state="translated">&lt;em&gt;注意：&lt;/em&gt;でコンパイルされたFortranコードを混在させることはお勧めできません。</target>
        </trans-unit>
        <trans-unit id="5143f3f427bdf8385df3ba587d4af85098970c93" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Caution:&lt;/em&gt; This will break code which passes intrinsic functions of type default &lt;code&gt;REAL&lt;/code&gt; or &lt;code&gt;COMPLEX&lt;/code&gt; as actual arguments, as the library implementations use the</source>
          <target state="translated">&lt;em&gt;注意：&lt;/em&gt;これは、ライブラリの実装が使用するため、デフォルトの &lt;code&gt;REAL&lt;/code&gt; または &lt;code&gt;COMPLEX&lt;/code&gt; タイプの組み込み関数を実際の引数として渡すコードを壊します。</target>
        </trans-unit>
        <trans-unit id="1b56a57b458342c8a38e3bdd0e593d7cf950ce49" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Caution&lt;/em&gt;: The default behavior of GNU Fortran is incompatible with &lt;code&gt;f2c&lt;/code&gt; and &lt;code&gt;g77&lt;/code&gt;, please use the</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：GNUのFortranのデフォルトの動作はと互換性がありません &lt;code&gt;f2c&lt;/code&gt; と &lt;code&gt;g77&lt;/code&gt; 、ご使用ください</target>
        </trans-unit>
        <trans-unit id="eaa55b6f1fdb7d01eaa68d24d7eddef02fc0ce5e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NOTES&lt;/em&gt; The member &lt;code&gt;STATIC_ARRAY_TYPE&lt;/code&gt; is used only when the &lt;code&gt;TYPE&lt;/code&gt; is &lt;code&gt;CAF_REF_STATIC_ARRAY&lt;/code&gt;. The member gives the type of the data referenced. Because no array descriptor is available for a descriptor-less array and type conversion still needs to take place the type is transported here.</source>
          <target state="translated">&lt;em&gt;注&lt;/em&gt;メンバ &lt;code&gt;STATIC_ARRAY_TYPE&lt;/code&gt; は、 &lt;code&gt;TYPE&lt;/code&gt; が &lt;code&gt;CAF_REF_STATIC_ARRAY&lt;/code&gt; の場合にのみ使用されます。メンバーは、参照されるデータのタイプを示します。記述子のない配列に使用できる配列記述子はなく、型変換を行う必要があるため、型はここに転送されます。</target>
        </trans-unit>
        <trans-unit id="2c0cda60ed98482d4ecedc90513448da3a393da4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note that the values specified via the GFORTRAN_CONVERT_UNIT environment variable will override the CONVERT specifier in the open statement&lt;/em&gt;. This is to give control over data formats to users who do not have the source code of their program available.</source>
          <target state="translated">&lt;em&gt;GFORTRAN_CONVERT_UNIT環境変数で指定された値は、openステートメントのCONVERT指定子を上書きすることに注意してください&lt;/em&gt;。これは、プログラムのソースコードを入手できないユーザーにデータ形式の制御を提供するためです。</target>
        </trans-unit>
        <trans-unit id="d39e0ef65defe2ad17c0cc27bc012057f55c3c5d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This option has an effect only when used in the main program. The &lt;code&gt;CONVERT&lt;/code&gt; specifier and the GFORTRAN_CONVERT_UNIT environment variable override the default specified by &lt;samp&gt;-fconvert&lt;/samp&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;このオプションは、メインプログラムで使用する場合にのみ効果があります。 &lt;code&gt;CONVERT&lt;/code&gt; の指定子とGFORTRAN_CONVERT_UNIT環境変数のオーバーライドで指定されたデフォルト&lt;samp&gt;-fconvert&lt;/samp&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a1b63991bb4a00ea7afefeaeb3bb74cd606fdc52" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Warning:&lt;/em&gt; this intrinsic does not increase the range of the timing values over that returned by &lt;code&gt;clock(3)&lt;/code&gt;. On a system with a 32-bit &lt;code&gt;clock(3)&lt;/code&gt;, &lt;code&gt;MCLOCK8&lt;/code&gt; will return a 32-bit value, even though it is converted to a 64-bit &lt;code&gt;INTEGER(8)&lt;/code&gt; value. That means overflows of the 32-bit value can still occur. Therefore, the values returned by this intrinsic might be or become negative or numerically less than previous values during a single run of the compiled program.</source>
          <target state="translated">&lt;em&gt;警告：&lt;/em&gt;この組み込み関数は、 &lt;code&gt;clock(3)&lt;/code&gt; が返す値よりもタイミング値の範囲を広げません。 32ビットの &lt;code&gt;clock(3)&lt;/code&gt; を備えたシステムでは、 &lt;code&gt;MCLOCK8&lt;/code&gt; は64ビットの &lt;code&gt;INTEGER(8)&lt;/code&gt; 値に変換されていますが、32ビットの値を返します。つまり、32ビット値のオーバーフローが引き続き発生する可能性があります。したがって、この組み込み関数によって返される値は、コンパイル済みプログラムの1回の実行中に、以前の値よりも負になるか、数値的に小さくなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="9897a33ca49c27b3245df549f301ec0bd47d73c3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Warning:&lt;/em&gt; this intrinsic does not increase the range of the timing values over that returned by &lt;code&gt;time(3)&lt;/code&gt;. On a system with a 32-bit &lt;code&gt;time(3)&lt;/code&gt;, &lt;code&gt;TIME8&lt;/code&gt; will return a 32-bit value, even though it is converted to a 64-bit &lt;code&gt;INTEGER(8)&lt;/code&gt; value. That means overflows of the 32-bit value can still occur. Therefore, the values returned by this intrinsic might be or become negative or numerically less than previous values during a single run of the compiled program.</source>
          <target state="translated">&lt;em&gt;警告：&lt;/em&gt;このコンパイラ組み込み関数は、 &lt;code&gt;time(3)&lt;/code&gt; が返す値よりもタイミング値の範囲を広げません。32ビットの &lt;code&gt;time(3)&lt;/code&gt; を持つシステムでは、 &lt;code&gt;TIME8&lt;/code&gt; は64ビットの &lt;code&gt;INTEGER(8)&lt;/code&gt; 値に変換されますが、32ビットの値を返します。つまり、32ビット値のオーバーフローが引き続き発生する可能性があります。したがって、この組み込み関数によって返される値は、コンパイル済みプログラムの1回の実行中に、以前の値よりも負になるか、数値的に小さくなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="c8a1da3be4ba23514dd6ecbd71b3abb864339d4c" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;A2&lt;/var&gt;, &lt;var&gt;A3&lt;/var&gt;, ...</source>
          <target state="translated">&lt;var&gt;A2&lt;/var&gt; 、 &lt;var&gt;A3&lt;/var&gt; 、...</target>
        </trans-unit>
        <trans-unit id="4ee5bbddf24cd2f1ce8f56da2544afbb3756a812" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;COUNT_RATE&lt;/var&gt; is system dependent and can vary depending on the kind of the arguments. For &lt;var&gt;kind=4&lt;/var&gt; arguments (and smaller integer kinds), &lt;var&gt;COUNT&lt;/var&gt; represents milliseconds, while for &lt;var&gt;kind=8&lt;/var&gt; arguments (and larger integer kinds), &lt;var&gt;COUNT&lt;/var&gt; typically represents micro- or nanoseconds depending on resolution of the underlying platform clock. &lt;var&gt;COUNT_MAX&lt;/var&gt; usually equals &lt;code&gt;HUGE(COUNT_MAX)&lt;/code&gt;. Note that the millisecond resolution of the &lt;var&gt;kind=4&lt;/var&gt; version implies that the &lt;var&gt;COUNT&lt;/var&gt; will wrap around in roughly 25 days. In order to avoid issues with the wrap around and for more precise timing, please use the &lt;var&gt;kind=8&lt;/var&gt; version.</source>
          <target state="translated">&lt;var&gt;COUNT_RATE&lt;/var&gt; はシステムに依存し、引数の種類によって異なる場合があります。ための &lt;var&gt;kind=4&lt;/var&gt; 引数（小さい整数種類）、 &lt;var&gt;COUNT&lt;/var&gt; のためながら、ミリ秒を表す &lt;var&gt;kind=8&lt;/var&gt; 引数（及び種類大きい整数）、 &lt;var&gt;COUNT&lt;/var&gt; は、典型的には、基礎となるプラットフォームのクロックの分解能に応じてマイクロまたはナノ秒を表します。 &lt;var&gt;COUNT_MAX&lt;/var&gt; は通常 &lt;code&gt;HUGE(COUNT_MAX)&lt;/code&gt; と等しくなります。 &lt;var&gt;kind=4&lt;/var&gt; バージョンのミリ秒の解像度は、 &lt;var&gt;COUNT&lt;/var&gt; が約25日で折り返すことを意味することに注意してください。ラップアラウンドの問題を回避し、より正確なタイミングを得るには、 &lt;var&gt;kind=8&lt;/var&gt; バージョンを使用してください。</target>
        </trans-unit>
        <trans-unit id="2651458b14f3a206b71081da103df2d59ef259fd" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;POINTER&lt;/var&gt; shall have the &lt;code&gt;POINTER&lt;/code&gt; attribute and it can be of any type.</source>
          <target state="translated">&lt;var&gt;POINTER&lt;/var&gt; には &lt;code&gt;POINTER&lt;/code&gt; 属性があり、どのタイプでもかまいません。</target>
        </trans-unit>
        <trans-unit id="96e21d99d5f38c3ef4326174f022376976774528" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;TARGET&lt;/var&gt; and &lt;var&gt;POINTER&lt;/var&gt; have the same shape, are not zero-sized arrays, are arrays whose elements are not zero-sized storage sequences, and &lt;var&gt;TARGET&lt;/var&gt; and &lt;var&gt;POINTER&lt;/var&gt; occupy the same storage units in array element order. As in case(B), the result is false, if &lt;var&gt;POINTER&lt;/var&gt; is disassociated.</source>
          <target state="translated">&lt;var&gt;TARGET&lt;/var&gt; と &lt;var&gt;POINTER&lt;/var&gt; は同じ形状で、サイズがゼロの配列ではなく、要素のサイズがゼロのストレージシーケンスではない配列で、 &lt;var&gt;TARGET&lt;/var&gt; と &lt;var&gt;POINTER&lt;/var&gt; は配列の要素順に同じストレージユニットを使用します。ケース（B）と同様に、 &lt;var&gt;POINTER&lt;/var&gt; の関連付けが解除されている場合、結果はfalseになります。</target>
        </trans-unit>
        <trans-unit id="34705e75ffac67dad6c5a3b989952734ad512473" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;TARGET&lt;/var&gt; is not a zero-sized storage sequence and the target associated with &lt;var&gt;POINTER&lt;/var&gt; occupies the same storage units. If &lt;var&gt;POINTER&lt;/var&gt; is disassociated, the result is false.</source>
          <target state="translated">&lt;var&gt;TARGET&lt;/var&gt; はサイズがゼロのストレージシーケンスではなく、 &lt;var&gt;POINTER&lt;/var&gt; に関連付けられたターゲットは同じストレージユニットを占有します。場合は &lt;var&gt;POINTER&lt;/var&gt; 関連解除され、結果はfalseです。</target>
        </trans-unit>
        <trans-unit id="1740be202ff525e467643eb2a6c751c2bf38d648" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;VALUES&lt;/var&gt; and &lt;var&gt;TIME&lt;/var&gt; are &lt;code&gt;INTENT(OUT)&lt;/code&gt; and provide the following:</source>
          <target state="translated">&lt;var&gt;VALUES&lt;/var&gt; および &lt;var&gt;TIME&lt;/var&gt; は &lt;code&gt;INTENT(OUT)&lt;/code&gt; であり、以下を提供します。</target>
        </trans-unit>
        <trans-unit id="6725676eba89c36800e176d38b930bb9884d07b3" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;VALUES&lt;/var&gt; is &lt;code&gt;INTENT(OUT)&lt;/code&gt; and provides the following:</source>
          <target state="translated">&lt;var&gt;VALUES&lt;/var&gt; は &lt;code&gt;INTENT(OUT)&lt;/code&gt; であり、以下を提供します。</target>
        </trans-unit>
        <trans-unit id="56a8df010524098ddf85dc494692cfc7f2b9d9ca" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;Y&lt;/var&gt; shall be of the same type and kind as &lt;var&gt;X&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;Y&lt;/var&gt; は &lt;var&gt;X&lt;/var&gt; と同じタイプおよび種類でなければなりません。</target>
        </trans-unit>
        <trans-unit id="db3b7a83065dde4b4ac738556770ee6e862e2c8a" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;len&lt;/var&gt; blanks.</source>
          <target state="translated">&lt;var&gt;len&lt;/var&gt; ブランク。</target>
        </trans-unit>
        <trans-unit id="e5b8cc2bf473716ee73591a5c5168397ed1e6b3e" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;option&lt;/var&gt;[0]</source>
          <target state="translated">&lt;var&gt;option&lt;/var&gt;[0]</target>
        </trans-unit>
        <trans-unit id="f3448aa319fc77e94d173d269808b6a5a31db353" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;option&lt;/var&gt;[1]</source>
          <target state="translated">&lt;var&gt;option&lt;/var&gt;[1]</target>
        </trans-unit>
        <trans-unit id="869f684ad5a86849295f821ee0485870c407cadd" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;option&lt;/var&gt;[2]</source>
          <target state="translated">&lt;var&gt;option&lt;/var&gt;[2]</target>
        </trans-unit>
        <trans-unit id="7d4b266d1c621478bce018e88048d29940277e4a" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;option&lt;/var&gt;[3]</source>
          <target state="translated">&lt;var&gt;option&lt;/var&gt;[3]</target>
        </trans-unit>
        <trans-unit id="74443c59a5f6a48ae6e93d29851d053a201ce638" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;option&lt;/var&gt;[4]</source>
          <target state="translated">&lt;var&gt;option&lt;/var&gt;[4]</target>
        </trans-unit>
        <trans-unit id="01e66c0254ac76b7b05d0aea9c7235b7b5832962" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;option&lt;/var&gt;[5]</source>
          <target state="translated">&lt;var&gt;option&lt;/var&gt;[5]</target>
        </trans-unit>
        <trans-unit id="6479e5aec3834693dbe338465103440606e6b831" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;option&lt;/var&gt;[6]</source>
          <target state="translated">&lt;var&gt;option&lt;/var&gt;[6]</target>
        </trans-unit>
        <trans-unit id="334b08d5454c2a3a52b0d2ed6ebe54f535d91e07" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;option&lt;/var&gt;[7]</source>
          <target state="translated">&lt;var&gt;option&lt;/var&gt;[7]</target>
        </trans-unit>
        <trans-unit id="b4d7850b93156c2e3589efc550056c58f670b40a" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;option&lt;/var&gt;[8]</source>
          <target state="translated">&lt;var&gt;option&lt;/var&gt;[8]</target>
        </trans-unit>
        <trans-unit id="4b24e7eaf919998f8c6849fcfd67fdc1091d902f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CHARACTER&lt;/code&gt; variable is declared with negative length.</source>
          <target state="translated">&lt;code&gt;CHARACTER&lt;/code&gt; の変数は、負の長さで宣言されています。</target>
        </trans-unit>
        <trans-unit id="b3a699accf48741320f41b458b33c4c3c3189f05" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;LOGICAL(KIND=N)&lt;/code&gt; variable is represented as an &lt;code&gt;INTEGER(KIND=N)&lt;/code&gt; variable, however, with only two permissible values: &lt;code&gt;1&lt;/code&gt; for &lt;code&gt;.TRUE.&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;.FALSE.&lt;/code&gt;. Any other integer value results in undefined behavior.</source>
          <target state="translated">&lt;code&gt;LOGICAL(KIND=N)&lt;/code&gt; 変数として表される &lt;code&gt;INTEGER(KIND=N)&lt;/code&gt; ：2つだけの許容値で、しかし、変数 &lt;code&gt;1&lt;/code&gt; のための &lt;code&gt;.TRUE.&lt;/code&gt; そして、 &lt;code&gt;0&lt;/code&gt; のため &lt;code&gt;.FALSE.&lt;/code&gt; 。その他の整数値は、未定義の動作になります。</target>
        </trans-unit>
        <trans-unit id="b060b157ad10193f46dc2409611856cdcd3fb445" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;UNION&lt;/code&gt; declaration occurs within a structure; within the definition of each union is a number of &lt;code&gt;MAP&lt;/code&gt; blocks. Each &lt;code&gt;MAP&lt;/code&gt; shares storage with its sibling maps (in the same union), and the size of the union is the size of the largest map within it, just as with unions in C. The major difference is that component references do not indicate which union or map the component is in (the compiler gets to figure that out).</source>
          <target state="translated">&lt;code&gt;UNION&lt;/code&gt; の宣言は、構造内で生じます。各ユニオンの定義内には、いくつかの &lt;code&gt;MAP&lt;/code&gt; ブロックがあります。各 &lt;code&gt;MAP&lt;/code&gt; は、（同じユニオン内の）兄弟マップとストレージを共有し、ユニオンのサイズは、Cのユニオンと同様に、その中で最大のマップのサイズです。主な違いは、コンポーネント参照がどのユニオンを示していないことです。または、コンポーネントが含まれていることをマップします（コンパイラはそれを理解します）。</target>
        </trans-unit>
        <trans-unit id="ff073bece1e14a6b5f7a33381b21b7ecf1bfd38b" translate="yes" xml:space="preserve">
          <source>A Cray pointer may also point to a function or a subroutine. For example, the following excerpt is valid:</source>
          <target state="translated">Crayポインタは、関数やサブルーチンを指すこともあります。例えば、以下の抜粋が有効です。</target>
        </trans-unit>
        <trans-unit id="143685a891792082db88f46a4dc6472aab068f8b" translate="yes" xml:space="preserve">
          <source>A LOGICAL SELECT construct has three CASE statements.</source>
          <target state="translated">LOGICAL SELECT構文は3つのCASE文を持っています。</target>
        </trans-unit>
        <trans-unit id="770c0967c0cfd83545816b8f8d09605a432bdfb6" translate="yes" xml:space="preserve">
          <source>A TRANSFER specifies a source that is shorter than the destination.</source>
          <target state="translated">TRANSFERは、宛先よりも短いソースを指定します。</target>
        </trans-unit>
        <trans-unit id="a395b0e263933394481aeb955d7fb9ece603feac" translate="yes" xml:space="preserve">
          <source>A chain of references to address the allocatable or pointer component in the derived type coarray. The object reference needs to be a scalar or a full array reference, respectively.</source>
          <target state="translated">派生型 Co-Array のアロケート可能なコンポーネントまたはポインタコンポーネントをアドレスするための参照の連鎖。オブジェクト参照は、それぞれスカラーまたは完全配列参照である必要があります。</target>
        </trans-unit>
        <trans-unit id="c12b1cb82ddfa1f408d9a33bbc20fb8b6469a18d" translate="yes" xml:space="preserve">
          <source>A collection of run-time libraries. These libraries contain the machine code needed to support capabilities of the Fortran language that are not directly provided by the machine code generated by the &lt;code&gt;gfortran&lt;/code&gt; compilation phase, such as intrinsic functions and subroutines, and routines for interaction with files and the operating system.</source>
          <target state="translated">ランタイムライブラリのコレクション。これらのライブラリには、Fortran言語の機能をサポートするために必要なマシンコードが含まれています。これらの関数は、 &lt;code&gt;gfortran&lt;/code&gt; コンパイルフェーズによって生成されたマシンコードでは直接提供されません。たとえば、組み込み関数やサブルーチン、ファイルやオペレーティングシステムとのやり取りのためのルーチンなどです。</target>
        </trans-unit>
        <trans-unit id="b3df78e31352f601736d816cc10dd3fc3ba4cb71" translate="yes" xml:space="preserve">
          <source>A default &lt;code&gt;INTEGER&lt;/code&gt; array with 9 elements, with &lt;code&gt;INTENT(OUT)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INTENT(OUT)&lt;/code&gt; を使用した、9つのエレメントを持つデフォルトの &lt;code&gt;INTEGER&lt;/code&gt; 配列。</target>
        </trans-unit>
        <trans-unit id="0487241e4171bd86f6a4cab5129074e6a24c7443" translate="yes" xml:space="preserve">
          <source>A disassociated pointer.</source>
          <target state="translated">解離されたポインタ。</target>
        </trans-unit>
        <trans-unit id="85c232310e18bedafdeffa5921ae68abd0ebf55d" translate="yes" xml:space="preserve">
          <source>A matching implementation for &lt;code&gt;get_values&lt;/code&gt; in Fortran, that correctly receives the procedure pointer from C and is able to call it, is given in the following &lt;code&gt;MODULE&lt;/code&gt;:</source>
          <target state="translated">Fortranの &lt;code&gt;get_values&lt;/code&gt; に対応する実装は、Cからプロシージャポインターを正しく受け取り、それを呼び出すことができます。次の &lt;code&gt;MODULE&lt;/code&gt; で提供されます。</target>
        </trans-unit>
        <trans-unit id="e63491f5a07b078c142fbabf183e9c64289542da" translate="yes" xml:space="preserve">
          <source>A missing mode for an exception is taken to mean &lt;code&gt;BIG_ENDIAN&lt;/code&gt;. Examples of values for &lt;code&gt;GFORTRAN_CONVERT_UNIT&lt;/code&gt; are:</source>
          <target state="translated">例外の欠落モードは、 &lt;code&gt;BIG_ENDIAN&lt;/code&gt; を意味すると解釈されます。 &lt;code&gt;GFORTRAN_CONVERT_UNIT&lt;/code&gt; の値の例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1ebaf59224bf3b5a2e4f4da54ce7a28edd6a0c5b" translate="yes" xml:space="preserve">
          <source>A new scalar of type &lt;code&gt;CHARACTER&lt;/code&gt; built up from &lt;var&gt;NCOPIES&lt;/var&gt; copies of &lt;var&gt;STRING&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;STRING&lt;/var&gt; の &lt;var&gt;NCOPIES&lt;/var&gt; コピーから構築された &lt;code&gt;CHARACTER&lt;/code&gt; 型の新しいスカラー。</target>
        </trans-unit>
        <trans-unit id="53c31d9c6b19034432143d78dcb8480b2bc9a6d5" translate="yes" xml:space="preserve">
          <source>A pointer may be modified during the course of a program, and this will change the location to which the pointee refers. However, when pointees are passed as arguments, they are treated as ordinary variables in the invoked function. Subsequent changes to the pointer will not change the base address of the array that was passed.</source>
          <target state="translated">ポインタはプログラムの途中で変更される可能性があり、これによりポインタが参照する場所が変更されます。しかし、ポインタが引数として渡された場合は、呼び出された関数では通常の変数として扱われます。ポインタを後から変更しても、渡された配列の基底アドレスは変わりません。</target>
        </trans-unit>
        <trans-unit id="cdd7c39a6d209284863a26a436f2ba9bf6e42b51" translate="yes" xml:space="preserve">
          <source>A scalar of type &lt;code&gt;CHARACTER&lt;/code&gt; and of the default kind.</source>
          <target state="translated">&lt;code&gt;CHARACTER&lt;/code&gt; 型およびデフォルトの種類のスカラー。</target>
        </trans-unit>
        <trans-unit id="e0ff62ca3a0502c7aa87a8cf5b29d744f4667051" translate="yes" xml:space="preserve">
          <source>A scalar of type &lt;code&gt;CHARACTER&lt;/code&gt; which length is that of &lt;var&gt;STRING&lt;/var&gt; less the number of trailing blanks.</source>
          <target state="translated">長さが &lt;var&gt;STRING&lt;/var&gt; から後続ブランクの数を差し引いたタイプ &lt;code&gt;CHARACTER&lt;/code&gt; のスカラー。</target>
        </trans-unit>
        <trans-unit id="010c9adc73be2adba1d910ce59fc10b488d4bcb7" translate="yes" xml:space="preserve">
          <source>A variable &lt;code&gt;FORMAT&lt;/code&gt; expression is format statement which includes angle brackets enclosing a Fortran expression: &lt;code&gt;FORMAT(I&amp;lt;N&amp;gt;)&lt;/code&gt;. GNU Fortran does not support this legacy extension. The effect of variable format expressions can be reproduced by using the more powerful (and standard) combination of internal output and string formats. For example, replace a code fragment like this:</source>
          <target state="translated">変数 &lt;code&gt;FORMAT&lt;/code&gt; 式は、Fortran式を囲む山括弧を含む形式ステートメントです： &lt;code&gt;FORMAT(I&amp;lt;N&amp;gt;)&lt;/code&gt; 。 GNU Fortranはこのレガシー拡張をサポートしていません。可変フォーマット式の効果は、内部出力と文字列フォーマットのより強力な（そして標準の）組み合わせを使用することで再現できます。たとえば、次のようなコードを置き換えます。</target>
        </trans-unit>
        <trans-unit id="a4aef81c53b1585f24d647c6e0c6ec536ef1aba1" translate="yes" xml:space="preserve">
          <source>A version of the &lt;code&gt;gcc&lt;/code&gt; command (which also might be installed as the system&amp;rsquo;s &lt;code&gt;cc&lt;/code&gt; command) that also understands and accepts Fortran source code. The &lt;code&gt;gcc&lt;/code&gt; command is the &lt;em&gt;driver&lt;/em&gt; program for all the languages in the GNU Compiler Collection (GCC); With &lt;code&gt;gcc&lt;/code&gt;, you can compile the source code of any language for which a front end is available in GCC.</source>
          <target state="translated">Fortranソースコードを理解して受け入れる &lt;code&gt;gcc&lt;/code&gt; コマンドのバージョン（システムの &lt;code&gt;cc&lt;/code&gt; コマンドとしてもインストールされる場合があります）。 &lt;code&gt;gcc&lt;/code&gt; コマンドは&lt;em&gt;、ドライバの&lt;/em&gt; GNUコンパイラコレクション（GCC）のすべての言語のためのプログラム。では &lt;code&gt;gcc&lt;/code&gt; 、あなたはフロントエンドは、GCCで提供されている任意の言語のソースコードをコンパイルすることができます。</target>
        </trans-unit>
        <trans-unit id="cbd57cfd9437b3c9c1c3ce7cb0fb7a7b8366940a" translate="yes" xml:space="preserve">
          <source>ABORT</source>
          <target state="translated">ABORT</target>
        </trans-unit>
        <trans-unit id="b14e4cc3f9a03a17ac3f6123a6226b7b7d34c952" translate="yes" xml:space="preserve">
          <source>ADDENDUM: How to use this License for your documents</source>
          <target state="translated">追加事項:このライセンスのドキュメントへの使用方法</target>
        </trans-unit>
        <trans-unit id="f8a6ad0c85a5734b40f194ec5bdaa679c92bffb7" translate="yes" xml:space="preserve">
          <source>AIMAG</source>
          <target state="translated">AIMAG</target>
        </trans-unit>
        <trans-unit id="9902db2204cf50a1c9aed02a9c5c333e7b1cdedd" translate="yes" xml:space="preserve">
          <source>ASINH</source>
          <target state="translated">ASINH</target>
        </trans-unit>
        <trans-unit id="2538b84d6fa7c1ebf5460242f9da1aa4d79e0b25" translate="yes" xml:space="preserve">
          <source>ASSOCIATED</source>
          <target state="translated">ASSOCIATED</target>
        </trans-unit>
        <trans-unit id="e69dc76eb813ecc0aa7266456f32f3e51d54c63e" translate="yes" xml:space="preserve">
          <source>ATANH</source>
          <target state="translated">ATANH</target>
        </trans-unit>
        <trans-unit id="eedd2a5a77f8bb8419911542ebc10426b78b0cb1" translate="yes" xml:space="preserve">
          <source>Abort the program</source>
          <target state="translated">プログラムを中止する</target>
        </trans-unit>
        <trans-unit id="35e4a1a9ace5e53c1521b13130f3b1fce0bb312b" translate="yes" xml:space="preserve">
          <source>Absolute value</source>
          <target state="translated">絶対値</target>
        </trans-unit>
        <trans-unit id="1c342f412fd7e2a44ed4d54f027bc9a3cdb5593b" translate="yes" xml:space="preserve">
          <source>Abstract interfaces and type extension with the possibility to override type-bound procedures or to have deferred binding.</source>
          <target state="translated">抽象的なインターフェイスと型拡張で,型に縛られたプロシージャをオーバーライドしたり,繰延バインディングを持つ可能性があります.</target>
        </trans-unit>
        <trans-unit id="34d1852d63c601908c0aa993478c4e48027e40ed" translate="yes" xml:space="preserve">
          <source>According the Fortran standard, valid Fortran names consist of a letter between &lt;code&gt;A&lt;/code&gt; to &lt;code&gt;Z&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;z&lt;/code&gt;, digits &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;9&lt;/code&gt; and underscores (&lt;code&gt;_&lt;/code&gt;) with the restriction that names may only start with a letter. As vendor extension, the dollar sign (&lt;code&gt;$&lt;/code&gt;) is additionally permitted with the option</source>
          <target state="translated">Fortran規格によれば、有効なFortranの名前は文字の間で構成 &lt;code&gt;A&lt;/code&gt; の &lt;code&gt;Z&lt;/code&gt; 、に &lt;code&gt;z&lt;/code&gt; 、数字 &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;1&lt;/code&gt; に &lt;code&gt;9&lt;/code&gt; および下線（ &lt;code&gt;_&lt;/code&gt; 名のみ文字で開始してもよいという制約を伴います）。ベンダー拡張として、オプションでドル記号（ &lt;code&gt;$&lt;/code&gt; ）がさらに許可されます &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2251bb4bf10f0398f05a950cae36ec46c1704a40" translate="yes" xml:space="preserve">
          <source>Acquire a lock on the given image on a scalar locking variable or for the given array element for an array-valued variable. If the &lt;var&gt;aquired_lock&lt;/var&gt; is &lt;code&gt;NULL&lt;/code&gt;, the function returns after having obtained the lock. If it is non-&lt;code&gt;NULL&lt;/code&gt;, then &lt;var&gt;acquired_lock&lt;/var&gt; is assigned the value true (one) when the lock could be obtained and false (zero) otherwise. Locking a lock variable which has already been locked by the same image is an error.</source>
          <target state="translated">スカラーロック変数または配列値変数の特定の配列要素の特定の画像のロックを取得します。場合 &lt;var&gt;aquired_lock&lt;/var&gt; がある &lt;code&gt;NULL&lt;/code&gt; 、関数がロックを取得した後に返します。それ以外であれば &lt;code&gt;NULL&lt;/code&gt; を、次いで &lt;var&gt;acquired_lock&lt;/var&gt; ロックが得られた真の値（1）、そうでなければ偽（ゼロ）が割り当てられます。同じ画像によってすでにロックされているロック変数をロックすると、エラーになります。</target>
        </trans-unit>
        <trans-unit id="8cb50faf70c1e1b121cd21e8a2dddae6f20f149f" translate="yes" xml:space="preserve">
          <source>Acts as optimization barrier between different segments. It also ensures that all pending memory operations of this image have been completed.</source>
          <target state="translated">異なるセグメント間の最適化バリアとして機能します。また、このイメージの保留中のメモリ操作がすべて完了したことを保証します。</target>
        </trans-unit>
        <trans-unit id="a96b77edfdbae014eec0cd18888fc03f969e50a8" translate="yes" xml:space="preserve">
          <source>Add a dimension to an array</source>
          <target state="translated">配列に次元を追加する</target>
        </trans-unit>
        <trans-unit id="ff3ba585c09c1dcf33037225d960f373d59ad4f1" translate="yes" xml:space="preserve">
          <source>Adding this option will make the Fortran compiler put all local arrays, even those of unknown size onto stack memory. If your program uses very large local arrays it is possible that you will have to extend your runtime limits for stack memory on some operating systems. This flag is enabled by default at optimization level</source>
          <target state="translated">このオプションを追加すると、Fortran コンパイラは、サイズが不明なローカル配列も含めて、すべてのローカル配列をスタックメモリ上に配置します。プログラムが非常に大きなローカル配列を使用する場合、オペレーティング・システムによってはスタック・メモリの実行時間制限を拡張しなければならない可能性があります。このフラグは最適化レベルでデフォルトで有効になっています</target>
        </trans-unit>
        <trans-unit id="2c40c8762feca2935c81a48468c51e83b2108046" translate="yes" xml:space="preserve">
          <source>Additionally, the GNU Fortran compilers supports the OpenMP specification (version 4.0 and most of the features of the 4.5 version, &lt;a href=&quot;http://openmp.org/wp/openmp-specifications/&quot;&gt;http://openmp.org/wp/openmp-specifications/&lt;/a&gt;). There also is initial support for the OpenACC specification (targeting version 2.0, &lt;a href=&quot;http://www.openacc.org/&quot;&gt;http://www.openacc.org/&lt;/a&gt;). Note that this is an experimental feature, incomplete, and subject to change in future versions of GCC. See &lt;a href=&quot;https://gcc.gnu.org/wiki/OpenACC&quot;&gt;https://gcc.gnu.org/wiki/OpenACC&lt;/a&gt; for more information.</source>
          <target state="translated">さらに、GNU FortranコンパイラーはOpenMP仕様（バージョン4.0および4.5バージョンのほとんどの機能、&lt;a href=&quot;http://openmp.org/wp/openmp-specifications/&quot;&gt;http：//openmp.org/wp/openmp-specifications/&lt;/a&gt;）をサポートしています。OpenACC仕様の初期サポートもあります（ターゲットバージョン2.0、&lt;a href=&quot;http://www.openacc.org/&quot;&gt;http：&lt;/a&gt; //www.openacc.org/ ）。これは実験的な機能であり、不完全であり、GCCの将来のバージョンでは変更される可能性があることに注意してください。詳細については、&lt;a href=&quot;https://gcc.gnu.org/wiki/OpenACC&quot;&gt;https：//gcc.gnu.org/wiki/OpenACC&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8540fbc2d2f9d953e9359449d458fe8f73b970b8" translate="yes" xml:space="preserve">
          <source>Additionally, the following parameters of type &lt;code&gt;CHARACTER(KIND=C_CHAR)&lt;/code&gt; are defined.</source>
          <target state="translated">さらに、タイプ &lt;code&gt;CHARACTER(KIND=C_CHAR)&lt;/code&gt; の以下のパラメーターが定義されています。</target>
        </trans-unit>
        <trans-unit id="48b2262a7ad1228a34fc080513c9dcc690f13053" translate="yes" xml:space="preserve">
          <source>Adds the elements of &lt;var&gt;ARRAY&lt;/var&gt; along dimension &lt;var&gt;DIM&lt;/var&gt; if the corresponding element in &lt;var&gt;MASK&lt;/var&gt; is &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;MASK&lt;/var&gt; の対応する要素が &lt;code&gt;TRUE&lt;/code&gt; の場合、ディメンション &lt;var&gt;DIM&lt;/var&gt; に沿って &lt;var&gt;ARRAY&lt;/var&gt; の要素を追加します。</target>
        </trans-unit>
        <trans-unit id="9ef427bb816728cd5ff0b51840caec7e8b45d457" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;GETARG&lt;/code&gt; returns, the &lt;var&gt;VALUE&lt;/var&gt; argument holds the &lt;var&gt;POS&lt;/var&gt;th command line argument. If &lt;var&gt;VALUE&lt;/var&gt; can not hold the argument, it is truncated to fit the length of &lt;var&gt;VALUE&lt;/var&gt;. If there are less than &lt;var&gt;POS&lt;/var&gt; arguments specified at the command line, &lt;var&gt;VALUE&lt;/var&gt; will be filled with blanks. If &lt;em&gt;&lt;var&gt;POS&lt;/var&gt; = 0&lt;/em&gt;, &lt;var&gt;VALUE&lt;/var&gt; is set to the name of the program (on systems that support this feature).</source>
          <target state="translated">&lt;code&gt;GETARG&lt;/code&gt; が戻った後、 &lt;var&gt;VALUE&lt;/var&gt; 引数は &lt;var&gt;POS&lt;/var&gt; 番目のコマンドライン引数を保持します。 &lt;var&gt;VALUE&lt;/var&gt; が引数を保持できない場合は、 &lt;var&gt;VALUE&lt;/var&gt; の長さに合わせて切り捨てられます。コマンドラインで指定された &lt;var&gt;POS&lt;/var&gt; 引数より少ない場合、 &lt;var&gt;VALUE&lt;/var&gt; は空白で埋められます。&lt;em&gt; &lt;var&gt;POS&lt;/var&gt; = 0の&lt;/em&gt;場合、 &lt;var&gt;VALUE&lt;/var&gt; はプログラムの名前に設定されます（この機能をサポートするシステム上）。</target>
        </trans-unit>
        <trans-unit id="c59df33ede5e4c00b67aaa98e3a0fb5396c248d1" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;GET_COMMAND_ARGUMENT&lt;/code&gt; returns, the &lt;var&gt;VALUE&lt;/var&gt; argument holds the &lt;var&gt;NUMBER&lt;/var&gt;-th command line argument. If &lt;var&gt;VALUE&lt;/var&gt; can not hold the argument, it is truncated to fit the length of &lt;var&gt;VALUE&lt;/var&gt;. If there are less than &lt;var&gt;NUMBER&lt;/var&gt; arguments specified at the command line, &lt;var&gt;VALUE&lt;/var&gt; will be filled with blanks. If &lt;em&gt;&lt;var&gt;NUMBER&lt;/var&gt; = 0&lt;/em&gt;, &lt;var&gt;VALUE&lt;/var&gt; is set to the name of the program (on systems that support this feature). The &lt;var&gt;LENGTH&lt;/var&gt; argument contains the length of the &lt;var&gt;NUMBER&lt;/var&gt;-th command line argument. If the argument retrieval fails, &lt;var&gt;STATUS&lt;/var&gt; is a positive number; if &lt;var&gt;VALUE&lt;/var&gt; contains a truncated command line argument, &lt;var&gt;STATUS&lt;/var&gt; is -1; and otherwise the &lt;var&gt;STATUS&lt;/var&gt; is zero.</source>
          <target state="translated">&lt;code&gt;GET_COMMAND_ARGUMENT&lt;/code&gt; が返された後、 &lt;var&gt;VALUE&lt;/var&gt; 引数は &lt;var&gt;NUMBER&lt;/var&gt; 番目のコマンドライン引数を保持します。 &lt;var&gt;VALUE&lt;/var&gt; が引数を保持できない場合は、 &lt;var&gt;VALUE&lt;/var&gt; の長さに合わせて切り捨てられます。コマンドラインで指定された引数が &lt;var&gt;NUMBER&lt;/var&gt; 未満の場合、 &lt;var&gt;VALUE&lt;/var&gt; は空白で埋められます。&lt;em&gt; &lt;var&gt;NUMBER&lt;/var&gt; = 0の&lt;/em&gt;場合、 &lt;var&gt;VALUE&lt;/var&gt; はプログラムの名前に設定されます（この機能をサポートするシステム上）。 &lt;var&gt;LENGTH&lt;/var&gt; の引数は、長さが含まれ &lt;var&gt;NUMBER&lt;/var&gt; 番目のコマンドライン引数を。引数の取得が失敗した場合、 &lt;var&gt;STATUS&lt;/var&gt; 正の数です。 &lt;var&gt;VALUE&lt;/var&gt; に切り詰められたコマンドライン引数が含まれている場合、 &lt;var&gt;STATUS&lt;/var&gt; は-1です。それ以外の場合、 &lt;var&gt;STATUS&lt;/var&gt; はゼロです。</target>
        </trans-unit>
        <trans-unit id="5d9abd062789987bc30d3efab333d4c5972c80cb" translate="yes" xml:space="preserve">
          <source>Alias: &lt;a href=&quot;atan#ATAN&quot;&gt;ATAN&lt;/a&gt; Degrees function: &lt;a href=&quot;atan2d#ATAN2D&quot;&gt;ATAN2D&lt;/a&gt;</source>
          <target state="translated">エイリアス：&lt;a href=&quot;atan#ATAN&quot;&gt;ATAN&lt;/a&gt; Degrees関数：&lt;a href=&quot;atan2d#ATAN2D&quot;&gt;ATAN2D&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c1f24dbf8ac90dccdd3db847b0e4be9137fd414c" translate="yes" xml:space="preserve">
          <source>Alias: &lt;a href=&quot;atand#ATAND&quot;&gt;ATAND&lt;/a&gt; Radians function: &lt;a href=&quot;atan2#ATAN2&quot;&gt;ATAN2&lt;/a&gt;</source>
          <target state="translated">エイリアス：&lt;a href=&quot;atand#ATAND&quot;&gt;ATAND&lt;/a&gt;ラジアン関数：&lt;a href=&quot;atan2#ATAN2&quot;&gt;ATAN2&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b785366a6f98d462bb0e363a439d3c3d7e49284e" translate="yes" xml:space="preserve">
          <source>All GCC and GNU Fortran options are accepted both by &lt;code&gt;gfortran&lt;/code&gt; and by &lt;code&gt;gcc&lt;/code&gt; (as well as any other drivers built at the same time, such as &lt;code&gt;g++&lt;/code&gt;), since adding GNU Fortran to the GCC distribution enables acceptance of GNU Fortran options by all of the relevant drivers.</source>
          <target state="translated">すべてのGCCおよびGNU Fortranのオプションは両方によって受け入れられる &lt;code&gt;gfortran&lt;/code&gt; により &lt;code&gt;gcc&lt;/code&gt; （並びにと同時に構築され、他のドライバ、 &lt;code&gt;g++&lt;/code&gt; GCC分布にGNUのFortranを追加するためには、）の全てによってGNUのFortranオプションの受入れを可能にします関連するドライバー。</target>
        </trans-unit>
        <trans-unit id="0d9b85081b41451fadfb75db3cad80f162e9761c" translate="yes" xml:space="preserve">
          <source>All-image barrier</source>
          <target state="translated">オールイメージバリア</target>
        </trans-unit>
        <trans-unit id="eaad1c570dd980acc725c97ccb6c9445c011f926" translate="yes" xml:space="preserve">
          <source>Allow &amp;lsquo;</source>
          <target state="translated">許可する</target>
        </trans-unit>
        <trans-unit id="d7f69c896c6aa4df0ec46d4ea68068a8accaf47a" translate="yes" xml:space="preserve">
          <source>Allow indirect recursion by forcing all local arrays to be allocated on the stack. This flag cannot be used together with</source>
          <target state="translated">すべてのローカル配列をスタック上で強制的に確保することで、間接的な再帰を許可します。このフラグは</target>
        </trans-unit>
        <trans-unit id="f5aa7d9f62e553b71b8fdd9fb9271c08945bbfa5" translate="yes" xml:space="preserve">
          <source>Allowed standard; can give run-time errors if e.g. an input-output edit descriptor is invalid in a given standard. Possible values are (bitwise or-ed) &lt;code&gt;GFC_STD_F77&lt;/code&gt; (1), &lt;code&gt;GFC_STD_F95_OBS&lt;/code&gt; (2), &lt;code&gt;GFC_STD_F95_DEL&lt;/code&gt; (4), &lt;code&gt;GFC_STD_F95&lt;/code&gt; (8), &lt;code&gt;GFC_STD_F2003&lt;/code&gt; (16), &lt;code&gt;GFC_STD_GNU&lt;/code&gt; (32), &lt;code&gt;GFC_STD_LEGACY&lt;/code&gt; (64), &lt;code&gt;GFC_STD_F2008&lt;/code&gt; (128), &lt;code&gt;GFC_STD_F2008_OBS&lt;/code&gt; (256) and GFC_STD_F2008_TS (512). Default: &lt;code&gt;GFC_STD_F95_OBS | GFC_STD_F95_DEL | GFC_STD_F95 | GFC_STD_F2003
| GFC_STD_F2008 | GFC_STD_F2008_TS | GFC_STD_F2008_OBS | GFC_STD_F77
| GFC_STD_GNU | GFC_STD_LEGACY&lt;/code&gt;.</source>
          <target state="translated">許可された規格。たとえば、入出力編集記述子が特定の規格で無効である場合、ランタイムエラーが発生する可能性があります。可能な値は（ビット単位または-ED）である &lt;code&gt;GFC_STD_F77&lt;/code&gt; （1）、 &lt;code&gt;GFC_STD_F95_OBS&lt;/code&gt; （2）、 &lt;code&gt;GFC_STD_F95_DEL&lt;/code&gt; （4）、 &lt;code&gt;GFC_STD_F95&lt;/code&gt; （8）、 &lt;code&gt;GFC_STD_F2003&lt;/code&gt; （16）、 &lt;code&gt;GFC_STD_GNU&lt;/code&gt; （32）、 &lt;code&gt;GFC_STD_LEGACY&lt;/code&gt; 、（64） &lt;code&gt;GFC_STD_F2008&lt;/code&gt; 、（128） &lt;code&gt;GFC_STD_F2008_OBS&lt;/code&gt; （256）およびGFC_STD_F2008_TS（512）。デフォルト： &lt;code&gt;GFC_STD_F95_OBS | GFC_STD_F95_DEL | GFC_STD_F95 | GFC_STD_F2003 | GFC_STD_F2008 | GFC_STD_F2008_TS | GFC_STD_F2008_OBS | GFC_STD_F77 | GFC_STD_GNU | GFC_STD_LEGACY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ccceb5451f5947860d0d11ae9c653a781703fca3" translate="yes" xml:space="preserve">
          <source>Allows to specifiy the type of deregistration of a coarray object. The &lt;code&gt;CAF_DEREGTYPE_COARRAY_DEALLOCATE_ONLY&lt;/code&gt; flag is only allowed for allocatable components in derived type coarrays.</source>
          <target state="translated">Co-Arrayオブジェクトの登録解除のタイプを指定できます。 &lt;code&gt;CAF_DEREGTYPE_COARRAY_DEALLOCATE_ONLY&lt;/code&gt; のフラグのみ派生型coarraysに割り当てコンポーネントに許可されています。</target>
        </trans-unit>
        <trans-unit id="e9b6931411a17cbd9c677fb94db8bd91fd59ea4e" translate="yes" xml:space="preserve">
          <source>Also note that the general behavior of</source>
          <target state="translated">の一般的な動作にも注意してください。</target>
        </trans-unit>
        <trans-unit id="a010f25919a43b05cee57c97c7e10e3f1acd9f24" translate="yes" xml:space="preserve">
          <source>Also, &lt;code&gt;c_by_val.f&lt;/code&gt; and its partner &lt;code&gt;c_by_val.c&lt;/code&gt; of the GNU Fortran testsuite are worth a look.</source>
          <target state="translated">また、GNU Fortran &lt;code&gt;c_by_val.c&lt;/code&gt; &lt;code&gt;c_by_val.f&lt;/code&gt; とそのパートナーc_by_val.cも一見の価値があります。</target>
        </trans-unit>
        <trans-unit id="03769b6fd59ddee4b9f6c9b1a64a2fd90aa7e99f" translate="yes" xml:space="preserve">
          <source>Also, note that with</source>
          <target state="translated">また、以下のことにも注意してください。</target>
        </trans-unit>
        <trans-unit id="9de49a3c572dc848e4b6b26dc63aa733f00e2a7a" translate="yes" xml:space="preserve">
          <source>Among other things, the GNU Fortran compiler is intended as a replacement for G77. At this point, nearly all programs that could be compiled with G77 can be compiled with GNU Fortran, although there are a few minor known regressions.</source>
          <target state="translated">とりわけ、GNU FortranコンパイラはG77の代替として意図されています。現時点では、G77でコンパイルできるプログラムのほとんどすべてがGNU Fortranでコンパイルできますが、いくつかのマイナーな既知のリグレッションがあります。</target>
        </trans-unit>
        <trans-unit id="bd12d1b553b898735248d531abcb8e2828ccf693" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;INTEGER&lt;/code&gt; array of rank one with as many elements as &lt;var&gt;SOURCE&lt;/var&gt; has dimensions. The elements of the resulting array correspond to the extend of &lt;var&gt;SOURCE&lt;/var&gt; along the respective dimensions. If &lt;var&gt;SOURCE&lt;/var&gt; is a scalar, the result is the rank one array of size zero. If &lt;var&gt;KIND&lt;/var&gt; is absent, the return value has the default integer kind otherwise the specified kind.</source>
          <target state="translated">&lt;var&gt;SOURCE&lt;/var&gt; の次元数と同じ数の要素を持つランク1 の &lt;code&gt;INTEGER&lt;/code&gt; 配列。結果の配列の要素は、それぞれの次元に沿った &lt;var&gt;SOURCE&lt;/var&gt; の拡張に対応します。場合 &lt;var&gt;SOURCE&lt;/var&gt; はスカラーであり、その結果、サイズがゼロの1次元アレイです。場合は &lt;var&gt;KIND&lt;/var&gt; 存在せず、戻り値は親切そうでない場合は、デフォルトの整数指定された種類があります。</target>
        </trans-unit>
        <trans-unit id="971177b6434d7014803774b86a16a28ff6527986" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;INTEGER&lt;/code&gt; scalar expression corresponding to a system time, with &lt;code&gt;INTENT(IN)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INTENT(IN)&lt;/code&gt; を使用した、システム時刻に対応する &lt;code&gt;INTEGER&lt;/code&gt; スカラー式。</target>
        </trans-unit>
        <trans-unit id="67b042b1d2ebdd1e055d8a345580947ef6ee255d" translate="yes" xml:space="preserve">
          <source>An INTEGER SELECT construct has a CASE that can never be matched as its lower value is greater than its upper value.</source>
          <target state="translated">INTEGER SELECT コンストラクトは、下位の値が上位の値よりも大きいため、決して一致させることができない CASE を持ちます。</target>
        </trans-unit>
        <trans-unit id="a97ad4f89c6c310657b6b72a7da664cc6f59c2e2" translate="yes" xml:space="preserve">
          <source>An allocatable left-hand side of an intrinsic assignment is automatically (re)allocated if it is either unallocated or has a different shape. The option is enabled by default except when</source>
          <target state="translated">割り当て可能な固有代入の左辺は、割り当てられていないか、形状が異なる場合は自動的に(再)割り当てられます。このオプションはデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="5b59f5b432640358cdfcad06f3a9018693e15249" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;INTEGER&lt;/code&gt;, &lt;code&gt;REAL&lt;/code&gt;, &lt;code&gt;COMPLEX&lt;/code&gt;, or &lt;code&gt;LOGICAL&lt;/code&gt; type, with a rank of one or two.</source>
          <target state="translated">ランクが1または2 の &lt;code&gt;INTEGER&lt;/code&gt; 、 &lt;code&gt;REAL&lt;/code&gt; 、 &lt;code&gt;COMPLEX&lt;/code&gt; 、または &lt;code&gt;LOGICAL&lt;/code&gt; タイプの配列。</target>
        </trans-unit>
        <trans-unit id="b2f8c32724b62c61e27af659ee8d5a3582642fe3" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;INTEGER&lt;/code&gt;, &lt;code&gt;REAL&lt;/code&gt;, or &lt;code&gt;COMPLEX&lt;/code&gt; type if &lt;var&gt;MATRIX_A&lt;/var&gt; is of a numeric type; otherwise, an array of &lt;code&gt;LOGICAL&lt;/code&gt; type. The rank shall be one or two, and the first (or only) dimension of &lt;var&gt;MATRIX_B&lt;/var&gt; shall be equal to the last (or only) dimension of &lt;var&gt;MATRIX_A&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;MATRIX_A&lt;/var&gt; が数値タイプの場合は、 &lt;code&gt;INTEGER&lt;/code&gt; 、 &lt;code&gt;REAL&lt;/code&gt; 、または &lt;code&gt;COMPLEX&lt;/code&gt; タイプの配列。それ以外の場合は、 &lt;code&gt;LOGICAL&lt;/code&gt; タイプの配列。ランクは1つまたは2つであり、 &lt;var&gt;MATRIX_B&lt;/var&gt; の最初の（または唯一の）次元はMATRIX_Aの最後の（または唯一の）次元と等しくなければなり &lt;var&gt;MATRIX_A&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="2fb9aaa38eaf0800c9afe4fe357312a3e531b1a1" translate="yes" xml:space="preserve">
          <source>An example of a parallelized loop taken from Appendix A.1 of the OpenMP Application Program Interface v2.5:</source>
          <target state="translated">OpenMP Application Program Interface v2.5の付録A.1から引用した並列ループの例です。</target>
        </trans-unit>
        <trans-unit id="c56e866e94a12a9092a1f1d241924b5dbfaecf53" translate="yes" xml:space="preserve">
          <source>An example of passing an argument by value to a C subroutine foo.:</source>
          <target state="translated">C言語のサブルーチンfoo...に値で引数を渡す例です。</target>
        </trans-unit>
        <trans-unit id="fcfb2abb6dd9553846055b3308ef6e6ad2665874" translate="yes" xml:space="preserve">
          <source>An expression of the same type and kind as &lt;var&gt;A1&lt;/var&gt;. (As a GNU extension, arguments of different kinds are permitted.)</source>
          <target state="translated">&lt;var&gt;A1&lt;/var&gt; と同じタイプと種類の式。（GNU拡張として、さまざまな種類の引数が許可されています。）</target>
        </trans-unit>
        <trans-unit id="ff2aadba47ce707a36efe2e131b078f39a58132e" translate="yes" xml:space="preserve">
          <source>An opaque pointer identifying the coarray.</source>
          <target state="translated">Co-Arrayを識別する不透明なポインタ。</target>
        </trans-unit>
        <trans-unit id="78dde013e96fb00db352e66e401a05d3737caa82" translate="yes" xml:space="preserve">
          <source>An open I/O unit number of type &lt;code&gt;INTEGER&lt;/code&gt;.</source>
          <target state="translated">タイプ &lt;code&gt;INTEGER&lt;/code&gt; のオープンI / Oユニット番号。</target>
        </trans-unit>
        <trans-unit id="af6a4d792dc8d9c179fb5747c83180c4b1c22a95" translate="yes" xml:space="preserve">
          <source>And the following scalar integer named constants of the kind &lt;code&gt;omp_proc_bind_kind&lt;/code&gt;:</source>
          <target state="translated">次のスカラー整数の名前付き定数 &lt;code&gt;omp_proc_bind_kind&lt;/code&gt; の定数：</target>
        </trans-unit>
        <trans-unit id="092aafbf6d660f5086ac5a7729f3d793b5c20808" translate="yes" xml:space="preserve">
          <source>Any expression involving the pointee will be translated to use the value stored in the pointer as the base address.</source>
          <target state="translated">ポインタを含む式は、ポインタに格納されている値をベースアドレスとして使用するように変換されます。</target>
        </trans-unit>
        <trans-unit id="b07b9d102c8b6807cef5d4ab805ad0ef7f19356e" translate="yes" xml:space="preserve">
          <source>Apply an operation atomically to an atomic integer or logical variable. After the operation, &lt;var&gt;old&lt;/var&gt; contains the value just before the operation, which, respectively, adds (GFC_CAF_ATOMIC_ADD) atomically the &lt;code&gt;value&lt;/code&gt; to the atomic integer variable or does a bitwise AND, OR or exclusive OR between the atomic variable and &lt;var&gt;value&lt;/var&gt;; the result is then stored in the atomic variable.</source>
          <target state="translated">操作をアトミック整数または論理変数にアトミックに適用します。操作の後、 &lt;var&gt;old&lt;/var&gt; には、操作の直前の値が含まれます。これは、それぞれ（GFC_CAF_ATOMIC_ADD）の &lt;code&gt;value&lt;/code&gt; をアトミック整数変数にアトミックに追加するか、アトミック変数と &lt;var&gt;value&lt;/var&gt; 間でビットごとのAND、OR、または排他的ORを実行します。その後、結果はアトミック変数に格納されます。</target>
        </trans-unit>
        <trans-unit id="f112c3d32d8d0c6c1d3d8b3290d994b99247278d" translate="yes" xml:space="preserve">
          <source>Arccosine function</source>
          <target state="translated">アルコシン機能</target>
        </trans-unit>
        <trans-unit id="f1fdb65d1f85c2602ba7eedf51322906a8da69d4" translate="yes" xml:space="preserve">
          <source>Arccosine function, degrees</source>
          <target state="translated">アルコシン機能、度</target>
        </trans-unit>
        <trans-unit id="6ecd3564ebced055a905a5c1dc9119f7cb08c240" translate="yes" xml:space="preserve">
          <source>Arcsine function</source>
          <target state="translated">アルシン関数</target>
        </trans-unit>
        <trans-unit id="fdd99f4a3a0ebaae8de45c28b95705c89d709535" translate="yes" xml:space="preserve">
          <source>Arcsine function, degrees</source>
          <target state="translated">アルシン関数、度</target>
        </trans-unit>
        <trans-unit id="3bfc68e59471e0c337229dd2a9172f2a5e4e1502" translate="yes" xml:space="preserve">
          <source>Arctangent function</source>
          <target state="translated">アークタンジェント関数</target>
        </trans-unit>
        <trans-unit id="391082f6ad6f2c3bf3b33362e5d47cdf6d200a7d" translate="yes" xml:space="preserve">
          <source>Arctangent function, degrees</source>
          <target state="translated">二角関数、度</target>
        </trans-unit>
        <trans-unit id="ce5e5792e97fe5c7861d6ae9b29cf5a25cc0e70a" translate="yes" xml:space="preserve">
          <source>Argument</source>
          <target state="translated">Argument</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="65f9d8868845568d00ef978d0d15706c0828d738" translate="yes" xml:space="preserve">
          <source>Arguments are passed according to the platform ABI. In particular, complex arguments might not be compatible to a struct with two real components for the real and imaginary part. The argument passing matches the one of C99&amp;rsquo;s &lt;code&gt;_Complex&lt;/code&gt;. Functions with scalar complex result variables return their value and do not use a by-reference argument. Note that with the</source>
          <target state="translated">引数はプラットフォームABIに従って渡されます。特に、複雑な引数は、実数部と虚数部の2つの実数コンポーネントを持つ構造体と互換性がない場合があります。渡される引数は、C99の &lt;code&gt;_Complex&lt;/code&gt; のいずれかに一致します。スカラーの複素数結果変数を持つ関数は、その値を返し、参照引数を使用しません。に注意してください</target>
        </trans-unit>
        <trans-unit id="62cf890b180b2c6442b30fab3b3ce5ddbd062d57" translate="yes" xml:space="preserve">
          <source>Arguments which are assumed-shape, assumed-rank or deferred-rank arrays or, with</source>
          <target state="translated">仮定形状、仮定ランク、または繰延ランクの配列、または</target>
        </trans-unit>
        <trans-unit id="a0478ca5f4c068ca3ac12f9474f6a15865ce9053" translate="yes" xml:space="preserve">
          <source>Arguments:</source>
          <target state="translated">Arguments:</target>
        </trans-unit>
        <trans-unit id="92b7704abee8bc3d69acafe355e16137a9995e7e" translate="yes" xml:space="preserve">
          <source>Arguments: None.</source>
          <target state="translated">引数は?なし。</target>
        </trans-unit>
        <trans-unit id="bb87ce94e5793fd89400e90e3e82274f2be82db5" translate="yes" xml:space="preserve">
          <source>Array constructors using square brackets. That is, &lt;code id=&quot;index-_005b_002e_002e_002e_005d&quot;&gt;[...]&lt;/code&gt; rather than &lt;code&gt;(/.../)&lt;/code&gt;. Type-specification for array constructors like &lt;code&gt;(/ some-type :: ... /)&lt;/code&gt;.</source>
          <target state="translated">大括弧を使用した配列コンストラクター。つまり、 &lt;code&gt;(/.../)&lt;/code&gt; ではなく &lt;code id=&quot;index-_005b_002e_002e_002e_005d&quot;&gt;[...]&lt;/code&gt; です。 &lt;code&gt;(/ some-type :: ... /)&lt;/code&gt; ような配列コンストラクターの型指定。</target>
        </trans-unit>
        <trans-unit id="2463d442dcf4d081242818a9b9d53d851d124a2b" translate="yes" xml:space="preserve">
          <source>As an extension for backwards compatibility with other compilers, GNU Fortran allows the implicit conversion of &lt;code&gt;LOGICAL&lt;/code&gt; values to &lt;code&gt;INTEGER&lt;/code&gt; values and vice versa. When converting from a &lt;code&gt;LOGICAL&lt;/code&gt; to an &lt;code&gt;INTEGER&lt;/code&gt;, &lt;code&gt;.FALSE.&lt;/code&gt; is interpreted as zero, and &lt;code&gt;.TRUE.&lt;/code&gt; is interpreted as one. When converting from &lt;code&gt;INTEGER&lt;/code&gt; to &lt;code&gt;LOGICAL&lt;/code&gt;, the value zero is interpreted as &lt;code&gt;.FALSE.&lt;/code&gt; and any nonzero value is interpreted as &lt;code&gt;.TRUE.&lt;/code&gt;.</source>
          <target state="translated">他のコンパイラーとの後方互換性のための拡張として、GNU Fortranは &lt;code&gt;LOGICAL&lt;/code&gt; 値から &lt;code&gt;INTEGER&lt;/code&gt; 値への暗黙的な変換、およびその逆を可能にします。 &lt;code&gt;LOGICAL&lt;/code&gt; から &lt;code&gt;INTEGER&lt;/code&gt; に変換する場合、 &lt;code&gt;.FALSE.&lt;/code&gt; ゼロとして解釈され、 &lt;code&gt;.TRUE.&lt;/code&gt; として解釈されます。 &lt;code&gt;INTEGER&lt;/code&gt; から &lt;code&gt;LOGICAL&lt;/code&gt; に変換する場合、値0は &lt;code&gt;.FALSE.&lt;/code&gt; として解釈されます。ゼロ以外の値は &lt;code&gt;.TRUE.&lt;/code&gt; として解釈されます。。</target>
        </trans-unit>
        <trans-unit id="4794353c36fe25632421ff7bc0e02c15efe176dc" translate="yes" xml:space="preserve">
          <source>As an extension to the Fortran standard, the GFortran &lt;code&gt;RANDOM_NUMBER&lt;/code&gt; supports multiple threads. Each thread in a multi-threaded program has its own seed. When &lt;code&gt;RANDOM_SEED&lt;/code&gt; is called either without arguments or with the &lt;var&gt;PUT&lt;/var&gt; argument, the given seed is copied into a master seed as well as the seed of the current thread. When a new thread uses &lt;code&gt;RANDOM_NUMBER&lt;/code&gt; for the first time, the seed is copied from the master seed, and forwarded &lt;em&gt;N * 2^{512}&lt;/em&gt; steps to guarantee that the random stream does not alias any other stream in the system, where &lt;var&gt;N&lt;/var&gt; is the number of threads that have used &lt;code&gt;RANDOM_NUMBER&lt;/code&gt; so far during the program execution.</source>
          <target state="translated">Fortran規格の拡張機能として、GFortran &lt;code&gt;RANDOM_NUMBER&lt;/code&gt; は複数のスレッドをサポートします。マルチスレッドプログラムの各スレッドには、独自のシードがあります。場合 &lt;code&gt;RANDOM_SEED&lt;/code&gt; は、引数なしで、またはのいずれかで呼ばれる &lt;var&gt;PUT&lt;/var&gt; の引数、所与のシードは、マスターシードと同様、現在のスレッドの種にコピーされます。新しいスレッドが初めて &lt;code&gt;RANDOM_NUMBER&lt;/code&gt; を使用するとき、シードはマスターシードからコピーされ、&lt;em&gt;N * 2 ^ {512}&lt;/em&gt;ステップが転送されて、ランダムストリームがシステム内の他のストリームにエイリアスを設定しないことを保証します。ここで、 &lt;var&gt;N&lt;/var&gt; はプログラムの実行中にこれまでに &lt;code&gt;RANDOM_NUMBER&lt;/code&gt; を使用したスレッドの数。</target>
        </trans-unit>
        <trans-unit id="94af6f578b8c84e49b8a4780536a468b06666ec0" translate="yes" xml:space="preserve">
          <source>As an extension, GNU Fortran allows hexadecimal BOZ literal constants to be specified using the &lt;code&gt;X&lt;/code&gt; prefix, in addition to the standard &lt;code&gt;Z&lt;/code&gt; prefix. The BOZ literal can also be specified by adding a suffix to the string, for example, &lt;code&gt;Z'ABC'&lt;/code&gt; and &lt;code&gt;'ABC'Z&lt;/code&gt; are equivalent.</source>
          <target state="translated">拡張機能として、GNU Fortranでは、標準の &lt;code&gt;Z&lt;/code&gt; 接頭辞に加えて、 &lt;code&gt;X&lt;/code&gt; 接頭辞を使用して16進数のBOZリテラル定数を指定できます。BOZリテラルは、サフィックスを文字列に追加して指定することもできます。たとえば、 &lt;code&gt;Z'ABC'&lt;/code&gt; と &lt;code&gt;'ABC'Z&lt;/code&gt; は同等です。</target>
        </trans-unit>
        <trans-unit id="98f59fc1bb6520a924ea7f2226895d1d54a604a0" translate="yes" xml:space="preserve">
          <source>As an extension, GNU Fortran allows the use of &lt;code&gt;REAL&lt;/code&gt; expressions or variables as array indices.</source>
          <target state="translated">拡張機能として、GNU Fortranでは、 &lt;code&gt;REAL&lt;/code&gt; 式または変数を配列インデックスとして使用できます。</target>
        </trans-unit>
        <trans-unit id="f6163b5bc3e03c9c7e587962794e237c78c1c319" translate="yes" xml:space="preserve">
          <source>As an extension, GNU Fortran allows unary plus and unary minus operators to appear as the second operand of binary arithmetic operators without the need for parenthesis.</source>
          <target state="translated">拡張として、GNU Fortranでは、単項プラスと単項マイナスの演算子が、括弧を必要とせずにバイナリ算術演算子の第二オペランドとして現れることを可能にしています。</target>
        </trans-unit>
        <trans-unit id="617aaf610a328d49eb72edcd19ea1487f239d377" translate="yes" xml:space="preserve">
          <source>As long as &lt;code&gt;ipt&lt;/code&gt; remains unchanged, &lt;code&gt;iarr&lt;/code&gt; is now an alias for &lt;code&gt;target&lt;/code&gt;. The optimizer, however, will not detect this aliasing, so it is unsafe to use &lt;code&gt;iarr&lt;/code&gt; and &lt;code&gt;target&lt;/code&gt; simultaneously. Using a pointee in any way that violates the Fortran aliasing rules or assumptions is illegal. It is the user&amp;rsquo;s responsibility to avoid doing this; the compiler works under the assumption that no such aliasing occurs.</source>
          <target state="translated">&lt;code&gt;ipt&lt;/code&gt; が変更されない限り、 &lt;code&gt;iarr&lt;/code&gt; は &lt;code&gt;target&lt;/code&gt; のエイリアスになりました。ただし、オプティマイザはこのエイリアシングを検出しないため、 &lt;code&gt;iarr&lt;/code&gt; と &lt;code&gt;target&lt;/code&gt; を同時に使用するのは危険です。Fortranのエイリアシングルールまたは仮定に違反する方法で指示先を使用することは違法です。これを回避するのはユーザーの責任です。コンパイラーは、そのようなエイリアシングが発生しないという前提の下で機能します。</target>
        </trans-unit>
        <trans-unit id="d3fea5067b1077db0f1bd8ce6ec05f67d849f63e" translate="yes" xml:space="preserve">
          <source>As soon as &lt;code&gt;gfortran&lt;/code&gt; can parse all of the statements correctly, it will be in the &amp;ldquo;larva&amp;rdquo; state. When we generate code, the &amp;ldquo;puppa&amp;rdquo; state. When &lt;code&gt;gfortran&lt;/code&gt; is done, we&amp;rsquo;ll see if it will be a beautiful butterfly, or just a big bug....</source>
          <target state="translated">&lt;code&gt;gfortran&lt;/code&gt; がすべてのステートメントを正しく解析できるとすぐに、「幼虫」の状態になります。コードを生成すると、「puppa」状態になります。とき &lt;code&gt;gfortran&lt;/code&gt; 行われ、それは美しい蝶、または単に大きなバグになる場合、我々は表示されます....</target>
        </trans-unit>
        <trans-unit id="de6b2942dd45330e434da46543c484c9400417e5" translate="yes" xml:space="preserve">
          <source>As specified for the &lt;code&gt;this_image&lt;/code&gt; intrinsic in TS18508. Shall be a non-negative number.</source>
          <target state="translated">&lt;code&gt;this_image&lt;/code&gt; 組み込みで指定されたとおり。負でない数でなければならない。</target>
        </trans-unit>
        <trans-unit id="9996ed989720054ccf4eff82b3541577d87b517b" translate="yes" xml:space="preserve">
          <source>As the example shows, one needs to ensure that the string is &lt;code&gt;NUL&lt;/code&gt; terminated. Additionally, the dummy argument &lt;var&gt;string&lt;/var&gt; of &lt;code&gt;print_C&lt;/code&gt; is a length-one assumed-size array; using &lt;code&gt;character(len=*)&lt;/code&gt; is not allowed. The example above uses &lt;code&gt;c_char_&quot;Hello World&quot;&lt;/code&gt; to ensure the string literal has the right type; typically the default character kind and &lt;code&gt;c_char&lt;/code&gt; are the same and thus &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; is equivalent. However, the standard does not guarantee this.</source>
          <target state="translated">例が示すように、文字列が &lt;code&gt;NUL&lt;/code&gt; で終了していることを確認する必要があります。また、仮引数の &lt;var&gt;string&lt;/var&gt; の &lt;code&gt;print_C&lt;/code&gt; は長ワン想定サイズの配列です。使用して &lt;code&gt;character(len=*)&lt;/code&gt; 許可されていません。上記の例では、 &lt;code&gt;c_char_&quot;Hello World&quot;&lt;/code&gt; を使用して、文字列リテラルの型が正しいことを確認しています。通常、デフォルトの文字の種類と &lt;code&gt;c_char&lt;/code&gt; は同じであるため、 &lt;code&gt;&quot;Hello World&quot;&lt;/code&gt; は同等です。ただし、標準はこれを保証しません。</target>
        </trans-unit>
        <trans-unit id="7784b8229779d77fd01362854bf970cadb931eb4" translate="yes" xml:space="preserve">
          <source>As there exist no direct Fortran equivalents, neither unions nor structs with bit field or variable-length array members are interoperable.</source>
          <target state="translated">Fortranには直接等価なものが存在しないため、ユニオンもビットフィールドや可変長配列のメンバを持つ構造体も相互運用できません。</target>
        </trans-unit>
        <trans-unit id="e9f6cfc3dfbfff93cafa391dca4485a931aa1d95" translate="yes" xml:space="preserve">
          <source>Assign atomically a value to an integer or logical variable.</source>
          <target state="translated">整数または論理変数に原子的に値を代入します。</target>
        </trans-unit>
        <trans-unit id="3cf51a3eafc16a9137ac78663ccdadecdecbfc8c" translate="yes" xml:space="preserve">
          <source>Assumed types (&lt;code&gt;TYPE(*)&lt;/code&gt;) have been added, which may only be used for dummy arguments. They are unlimited polymorphic but contrary to &lt;code&gt;CLASS(*)&lt;/code&gt; they do not contain any type information, similar to C&amp;rsquo;s &lt;code&gt;void *&lt;/code&gt; pointers. Expressions of any type and kind can be passed; thus, it can be used as replacement for &lt;code&gt;TYPE(C_PTR)&lt;/code&gt;, avoiding the use of &lt;code&gt;C_LOC&lt;/code&gt; in the caller.</source>
          <target state="translated">想定されるタイプ（ &lt;code&gt;TYPE(*)&lt;/code&gt; ）が追加されました。これは、仮引数にのみ使用できます。これらは無制限の多態性ですが、 &lt;code&gt;CLASS(*)&lt;/code&gt; とは異なり、Cの &lt;code&gt;void *&lt;/code&gt; ポインターと同様に、型情報を含みません。任意のタイプと種類の式を渡すことができます。したがって、これは &lt;code&gt;TYPE(C_PTR)&lt;/code&gt; の代わりとして使用でき、呼び出し元での &lt;code&gt;C_LOC&lt;/code&gt; の使用を回避します。</target>
        </trans-unit>
        <trans-unit id="93f893367434751a750296960d4f6f2fc2492a76" translate="yes" xml:space="preserve">
          <source>Assumed types (&lt;code&gt;TYPE(*)&lt;/code&gt;).</source>
          <target state="translated">想定されるタイプ（ &lt;code&gt;TYPE(*)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8d34a744023b48e74eef8229baf6a8786fe1e922" translate="yes" xml:space="preserve">
          <source>Assumed-rank (&lt;code&gt;DIMENSION(..)&lt;/code&gt;). However, the array descriptor of the TS is not yet supported.</source>
          <target state="translated">仮定ランク（ &lt;code&gt;DIMENSION(..)&lt;/code&gt; ）。ただし、TSの配列記述子はまだサポートされていません。</target>
        </trans-unit>
        <trans-unit id="0ba660d9a165e5935ea80775a1e184e81de1b605" translate="yes" xml:space="preserve">
          <source>Assumed-rank arrays (&lt;code&gt;DIMENSION(..)&lt;/code&gt;) as dummy argument allow that scalars and arrays of any rank can be passed as actual argument. As the Technical Specification does not provide for direct means to operate with them, they have to be used either from the C side or be converted using &lt;code&gt;C_LOC&lt;/code&gt; and &lt;code&gt;C_F_POINTER&lt;/code&gt; to scalars or arrays of a specific rank. The rank can be determined using the &lt;code&gt;RANK&lt;/code&gt; intrinisic.</source>
          <target state="translated">仮引数としての推定ランク配列（ &lt;code&gt;DIMENSION(..)&lt;/code&gt; ）により、任意のランクのスカラーおよび配列を実引数として渡すことができます。技術仕様ではそれらを操作するための直接的な手段を提供していないため、C側から使用するか、 &lt;code&gt;C_LOC&lt;/code&gt; および &lt;code&gt;C_F_POINTER&lt;/code&gt; を使用して特定のランクのスカラーまたは配列に変換する必要があります。ランクは、 &lt;code&gt;RANK&lt;/code&gt; イントリニシックを使用して決定できます。</target>
        </trans-unit>
        <trans-unit id="563900e7adcb10592c225da79d2d5e61a683a853" translate="yes" xml:space="preserve">
          <source>At present, the GNU Fortran compiler passes the &lt;a href=&quot;http://www.fortran-2000.com/ArnaudRecipes/fcvs21_f95.html&quot;&gt;NIST Fortran 77 Test Suite&lt;/a&gt;, and produces acceptable results on the &lt;a href=&quot;http://www.netlib.org/lapack/faq.html#1.21&quot;&gt;LAPACK Test Suite&lt;/a&gt;. It also provides respectable performance on the &lt;a href=&quot;http://www.polyhedron.com/fortran-compiler-comparisons/polyhedron-benchmark-suite&quot;&gt;Polyhedron Fortran compiler benchmarks&lt;/a&gt; and the &lt;a href=&quot;http://www.netlib.org/benchmark/livermore&quot;&gt;Livermore Fortran Kernels test&lt;/a&gt;. It has been used to compile a number of large real-world programs, including &lt;a href=&quot;http://hirlam.org/&quot;&gt;the HARMONIE and HIRLAM weather forecasting code&lt;/a&gt; and &lt;a href=&quot;http://physical-chemistry.scb.uwa.edu.au/tonto/wiki/index.php/Main_Page&quot;&gt;the Tonto quantum chemistry package&lt;/a&gt;; see &lt;a href=&quot;https://gcc.gnu.org/wiki/GfortranApps&quot;&gt;https://gcc.gnu.org/wiki/GfortranApps&lt;/a&gt; for an extended list.</source>
          <target state="translated">現在、GNU Fortranコンパイラは&lt;a href=&quot;http://www.fortran-2000.com/ArnaudRecipes/fcvs21_f95.html&quot;&gt;NIST Fortran 77テストスイート&lt;/a&gt;に合格し、&lt;a href=&quot;http://www.netlib.org/lapack/faq.html#1.21&quot;&gt;LAPACKテストスイートで&lt;/a&gt;許容可能な結果を​​生成します。また、&lt;a href=&quot;http://www.polyhedron.com/fortran-compiler-comparisons/polyhedron-benchmark-suite&quot;&gt;Polyhedron Fortranコンパイラのベンチマーク&lt;/a&gt;と&lt;a href=&quot;http://www.netlib.org/benchmark/livermore&quot;&gt;Livermore Fortranカーネルテストで&lt;/a&gt;優れたパフォーマンスを提供します。これは&lt;a href=&quot;http://hirlam.org/&quot;&gt;、HARMONIEとHIRLAMの天気予報コード&lt;/a&gt;や&lt;a href=&quot;http://physical-chemistry.scb.uwa.edu.au/tonto/wiki/index.php/Main_Page&quot;&gt;Tonto量子化学パッケージ&lt;/a&gt;など、多数の大規模な現実世界のプログラムをコンパイルするために使用されています。拡張リストについては、&lt;a href=&quot;https://gcc.gnu.org/wiki/GfortranApps&quot;&gt;https：//gcc.gnu.org/wiki/GfortranApps&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9c38ba61dc1a3177f325e31a77962ad514a4ba76" translate="yes" xml:space="preserve">
          <source>At the moment &lt;code&gt;CAF_ARR_REF_VECTOR&lt;/code&gt; is not implemented in the front end for descriptor-less arrays. The library caf_single has untested support for it.</source>
          <target state="translated">現時点では、 &lt;code&gt;CAF_ARR_REF_VECTOR&lt;/code&gt; は記述子のない配列のフロントエンドには実装されていません。ライブラリcaf_singleには、テストされていないサポートがあります。</target>
        </trans-unit>
        <trans-unit id="fc42a7f818d24c88494b8202b0dda5ef77224687" translate="yes" xml:space="preserve">
          <source>Atomic ADD operation</source>
          <target state="translated">アトミックADD操作</target>
        </trans-unit>
        <trans-unit id="b7a5c288426aa560745dc7e8cc778a204636a1a2" translate="yes" xml:space="preserve">
          <source>Atomic ADD operation with prior fetch</source>
          <target state="translated">先行取得を伴うアトミックADD演算</target>
        </trans-unit>
        <trans-unit id="bf565b441e83c28513d95507c62ab47aec39f341" translate="yes" xml:space="preserve">
          <source>Atomic bitwise AND operation</source>
          <target state="translated">アトミックビットごとのAND演算</target>
        </trans-unit>
        <trans-unit id="b1bfd7d0da8d49152a1a8c7d6c2c556d9b3af332" translate="yes" xml:space="preserve">
          <source>Atomic bitwise AND operation with prior fetch</source>
          <target state="translated">先行フェッチを用いた原子的ビットごとのAND演算</target>
        </trans-unit>
        <trans-unit id="2e7c52210033660c4407f96486cc4830c6e671dc" translate="yes" xml:space="preserve">
          <source>Atomic bitwise OR operation</source>
          <target state="translated">アトミックビットごとのOR演算</target>
        </trans-unit>
        <trans-unit id="2b0189a08c36bdfd0ae0e98e4134ef618f03ff50" translate="yes" xml:space="preserve">
          <source>Atomic bitwise OR operation with prior fetch</source>
          <target state="translated">先行フェッチを用いたビットごとの原子的論理和演算</target>
        </trans-unit>
        <trans-unit id="1e033cb7b407c9e892b4e4ae1f863bd3daf383fd" translate="yes" xml:space="preserve">
          <source>Atomic bitwise XOR operation with prior fetch</source>
          <target state="translated">先行フェッチを用いたアトミックビットごとのXOR演算</target>
        </trans-unit>
        <trans-unit id="be519469bcd3e5b2d6487fc37d44ff28def3dbae" translate="yes" xml:space="preserve">
          <source>Atomic compare and swap</source>
          <target state="translated">原子の比較とスワップ</target>
        </trans-unit>
        <trans-unit id="2e78c84ab5c12dcd295734f75ebb50f2529eddd2" translate="yes" xml:space="preserve">
          <source>Atomic compare and swap of a kind-4 integer or logical variable. Assigns atomically the specified value to the atomic variable, if the latter has the value specified by the passed condition value.</source>
          <target state="translated">kind-4 の整数または論理変数のアトミック比較とスワップ。後者が渡された条件値で指定された値を持っている場合、指定された値をアトミック変数に代入します。</target>
        </trans-unit>
        <trans-unit id="c5c3d535b17d3b00025c7eabf767b1b26ca06d5d" translate="yes" xml:space="preserve">
          <source>Atomic operation</source>
          <target state="translated">原子操作</target>
        </trans-unit>
        <trans-unit id="41a12f043eece5fb2decde8f4c227ab56d7148c6" translate="yes" xml:space="preserve">
          <source>Atomic subroutine</source>
          <target state="translated">アトミックサブルーチン</target>
        </trans-unit>
        <trans-unit id="f4e9d304774823ba4a2a2d7c46f1f456bd19eee0" translate="yes" xml:space="preserve">
          <source>Atomic variable assignment</source>
          <target state="translated">原子変数の代入</target>
        </trans-unit>
        <trans-unit id="9929e2f3ce73b6567e12c96ef1a3ba883c1a55d7" translate="yes" xml:space="preserve">
          <source>Atomic variable reference</source>
          <target state="translated">原子変数参照</target>
        </trans-unit>
        <trans-unit id="551bdfd3bd976b65a9318fb95dbf5e832e232940" translate="yes" xml:space="preserve">
          <source>Attempt to open the file with &lt;code&gt;ACTION='READWRITE'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ACTION='READWRITE'&lt;/code&gt; でファイルを開こうとします</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="b356eeab734c4ff47f91e2cbe385f83b802c23df" translate="yes" xml:space="preserve">
          <source>Barrier for selected images</source>
          <target state="translated">選択された画像のバリア</target>
        </trans-unit>
        <trans-unit id="1d4781248bfa1e27c4aa538e6c7ff5ca1bc7f11c" translate="yes" xml:space="preserve">
          <source>Base 10 logarithm function</source>
          <target state="translated">ベース10対数関数</target>
        </trans-unit>
        <trans-unit id="e87278a34ffbc4c17bda6e2c994a42635c3cca72" translate="yes" xml:space="preserve">
          <source>Base of a data model</source>
          <target state="translated">データモデルのベース</target>
        </trans-unit>
        <trans-unit id="b0c0a5b87b0289101611830fbd70aeb258f905c4" translate="yes" xml:space="preserve">
          <source>Because of the more complicated references possible some operations may be unsupported by certain libraries. The library is expected to issue a precise error message why the operation is not permitted.</source>
          <target state="translated">より複雑な参照が可能なため、いくつかの操作はライブラリによってはサポートされていない場合があります。ライブラリは、その操作が許可されていない理由を正確にエラーメッセージとして表示することが期待されます。</target>
        </trans-unit>
        <trans-unit id="ce5081af44393adc2ba2dab9d9793ef969ae243a" translate="yes" xml:space="preserve">
          <source>Because this intrinsic is implemented in terms of the &lt;code&gt;system&lt;/code&gt; function call, its behavior with respect to signaling is processor dependent. In particular, on POSIX-compliant systems, the SIGINT and SIGQUIT signals will be ignored, and the SIGCHLD will be blocked. As such, if the parent process is terminated, the child process might not be terminated alongside.</source>
          <target state="translated">この組み込み関数は &lt;code&gt;system&lt;/code&gt; 関数呼び出しに関して実装されているため、シグナリングに関するその動作はプロセッサに依存します。特に、POSIX準拠のシステムでは、SIGINTおよびSIGQUITシグナルは無視され、SIGCHLDはブロックされます。そのため、親プロセスが終了すると、子プロセスも一緒に終了しない場合があります。</target>
        </trans-unit>
        <trans-unit id="9ea4ae9824f1182424000b837597d38d844e8714" translate="yes" xml:space="preserve">
          <source>Before Fortran 2008, at least one of the arguments &lt;var&gt;R&lt;/var&gt; or &lt;var&gt;P&lt;/var&gt; shall be present; since Fortran 2008, they are assumed to be zero if absent.</source>
          <target state="translated">Fortran 2008以前は、引数 &lt;var&gt;R&lt;/var&gt; または &lt;var&gt;P&lt;/var&gt; の少なくとも1つが存在する必要があります。Fortran 2008以降、存在しない場合はゼロと見なされます。</target>
        </trans-unit>
        <trans-unit id="1dd73ae98abaf5b21a2d39baaf5d5d005b5bfa67" translate="yes" xml:space="preserve">
          <source>Beginning with the Fortran 2003 standard, there is a &lt;code&gt;FLUSH&lt;/code&gt; statement that should be preferred over the &lt;code&gt;FLUSH&lt;/code&gt; intrinsic.</source>
          <target state="translated">Fortran 2003標準以降、 &lt;code&gt;FLUSH&lt;/code&gt; 組み込み関数よりも優先される &lt;code&gt;FLUSH&lt;/code&gt; ステートメントがあります。</target>
        </trans-unit>
        <trans-unit id="5cf2869b26eb2f2fd437796e9de3996c555c124d" translate="yes" xml:space="preserve">
          <source>Besides changing the calling convention, the attributes also influence the decoration of the symbol name, e.g., by a leading underscore or by a trailing at-sign followed by the number of bytes on the stack. When assigning a procedure to a procedure pointer, both should use the same calling convention.</source>
          <target state="translated">呼び出し規約を変更するだけでなく、属性はシンボル名の装飾にも影響を与えます。例えば、先頭のアンダースコアや末尾のアットサインの後にスタック上のバイト数をつけるなどです。プロシージャをプロシージャポインタに代入する際には、どちらも同じ呼び出し規約を使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="203c67bafdb6036d2f0cc6dbdd5189e4669b71f7" translate="yes" xml:space="preserve">
          <source>Besides decimal constants, Fortran also supports binary (&lt;code&gt;b&lt;/code&gt;), octal (&lt;code&gt;o&lt;/code&gt;) and hexadecimal (&lt;code&gt;z&lt;/code&gt;) integer constants. The syntax is: &amp;lsquo;</source>
          <target state="translated">Fortranは、10進定数に加えて、2進（ &lt;code&gt;b&lt;/code&gt; ）、8進（ &lt;code&gt;o&lt;/code&gt; ）、および16進（ &lt;code&gt;z&lt;/code&gt; ）整数定数もサポートしています。構文は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="a30dd46b9e9c1bdc36f5579db55e3eb16f955c9d" translate="yes" xml:space="preserve">
          <source>Bessel function of the first kind</source>
          <target state="translated">第一種ベッセル関数</target>
        </trans-unit>
        <trans-unit id="0f797fe7e2e407c0ccdf341e6a12b249c9889fcc" translate="yes" xml:space="preserve">
          <source>Bessel function of the first kind of order 0</source>
          <target state="translated">次数0のベッセル関数</target>
        </trans-unit>
        <trans-unit id="8384517ffc250230cd6045af038b0d65ea3d3e6f" translate="yes" xml:space="preserve">
          <source>Bessel function of the first kind of order 1</source>
          <target state="translated">一次のベッセルかんすう</target>
        </trans-unit>
        <trans-unit id="444153ea0d510a7dec96c6ace3dba56306534b6a" translate="yes" xml:space="preserve">
          <source>Bessel function of the second kind</source>
          <target state="translated">第二種ベッセル関数</target>
        </trans-unit>
        <trans-unit id="180d8d2861b9e37acff48c68c094e736ceadef7a" translate="yes" xml:space="preserve">
          <source>Bessel function of the second kind of order 0</source>
          <target state="translated">次数0のベッセル関数</target>
        </trans-unit>
        <trans-unit id="605021b17225347c7659825bde86f71274be7f76" translate="yes" xml:space="preserve">
          <source>Bessel function of the second kind of order 1</source>
          <target state="translated">二次のベッセルかんすう</target>
        </trans-unit>
        <trans-unit id="f34d9b0547e467d92b9019b796258eae0e9ed102" translate="yes" xml:space="preserve">
          <source>Bit extraction</source>
          <target state="translated">ビット抽出</target>
        </trans-unit>
        <trans-unit id="5de844a3f211510aa83123e4871c683a603bc6b8" translate="yes" xml:space="preserve">
          <source>Bit size inquiry function</source>
          <target state="translated">ビットサイズ照会機能</target>
        </trans-unit>
        <trans-unit id="25703c888a5e9b917351196de7861c349721ccbd" translate="yes" xml:space="preserve">
          <source>Bit test function</source>
          <target state="translated">ビットテスト機能</target>
        </trans-unit>
        <trans-unit id="81d2ebea896d25f1a13f14232bbcc8eb08dd4ae6" translate="yes" xml:space="preserve">
          <source>Bitwise AND of array elements</source>
          <target state="translated">配列要素のビットごとのAND</target>
        </trans-unit>
        <trans-unit id="728f5f3b75cd63caacb5ade57b62aa428e6330a7" translate="yes" xml:space="preserve">
          <source>Bitwise OR of array elements</source>
          <target state="translated">配列要素のビットごとのOR</target>
        </trans-unit>
        <trans-unit id="22798b405425f016b1b076dd44976c0afd2c5324" translate="yes" xml:space="preserve">
          <source>Bitwise XOR of array elements</source>
          <target state="translated">配列要素のビットごとのXOR</target>
        </trans-unit>
        <trans-unit id="bc64a003025d89e33f430ca072ade49abff64d75" translate="yes" xml:space="preserve">
          <source>Bitwise greater than</source>
          <target state="translated">ビット単位では</target>
        </trans-unit>
        <trans-unit id="d618e855b47a89a9df579cca5ab8d12794e2a3e0" translate="yes" xml:space="preserve">
          <source>Bitwise greater than or equal to</source>
          <target state="translated">ビット単位で以下の値になります。</target>
        </trans-unit>
        <trans-unit id="e809f4cd4800cb733cc274f61df0d7ae79489dd2" translate="yes" xml:space="preserve">
          <source>Bitwise less than</source>
          <target state="translated">ビット単位では、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="ec4aa5c7f77dbf1295f3945c4d0ce92888b1a26b" translate="yes" xml:space="preserve">
          <source>Bitwise less than or equal to</source>
          <target state="translated">ビット単位では、以下の値になります。</target>
        </trans-unit>
        <trans-unit id="2d1a409d40ca7e64b41bba02a5680568b1d38704" translate="yes" xml:space="preserve">
          <source>Bitwise logical &lt;code&gt;AND&lt;/code&gt;.</source>
          <target state="translated">ビットごとの論理 &lt;code&gt;AND&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4c93447f0677efd2761eac0517f4c5c95115db1" translate="yes" xml:space="preserve">
          <source>Bitwise logical &lt;code&gt;OR&lt;/code&gt;.</source>
          <target state="translated">ビットごとの論理 &lt;code&gt;OR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="02e4d842d41b458f02ee56bb1e36d5b78e74b474" translate="yes" xml:space="preserve">
          <source>Bitwise logical AND</source>
          <target state="translated">ビットごとの論理 AND</target>
        </trans-unit>
        <trans-unit id="51cc17b61d71e74324199fe3e18630c9479fa344" translate="yes" xml:space="preserve">
          <source>Bitwise logical OR</source>
          <target state="translated">ビットごとの論理和</target>
        </trans-unit>
        <trans-unit id="7e262f8156e0bde7d3fdf45da4373816d5a0f744" translate="yes" xml:space="preserve">
          <source>Bitwise logical and</source>
          <target state="translated">ビット単位での論理的な</target>
        </trans-unit>
        <trans-unit id="6fbd08e14ef9cd92c8635e48a67cba790f1f654b" translate="yes" xml:space="preserve">
          <source>Bitwise logical exclusive or</source>
          <target state="translated">ビット単位の論理排他的または</target>
        </trans-unit>
        <trans-unit id="e12d57bf21bac825baf9ff63c9856f69ab644445" translate="yes" xml:space="preserve">
          <source>Bitwise logical exclusive or.</source>
          <target state="translated">ビット単位の論理的排他的または</target>
        </trans-unit>
        <trans-unit id="4870e18ecb37553176726ddbf50c1a19130c1d2d" translate="yes" xml:space="preserve">
          <source>Bitwise logical or</source>
          <target state="translated">ビット単位で論理的または</target>
        </trans-unit>
        <trans-unit id="4c5c0cad4ae403108a5dc8624302e33f4750bc81" translate="yes" xml:space="preserve">
          <source>Bitwise operation</source>
          <target state="translated">ビット演算</target>
        </trans-unit>
        <trans-unit id="19c6b04aae9aafa4c22a40b4395f6dcb6758149d" translate="yes" xml:space="preserve">
          <source>Both are equivalent to the value &lt;code&gt;NULL&lt;/code&gt; in C.</source>
          <target state="translated">どちらもCの値 &lt;code&gt;NULL&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="a1a67f229b779231b95e7482c8d6d7fa949c2f92" translate="yes" xml:space="preserve">
          <source>Brief list of all &lt;code&gt;gfortran&lt;/code&gt; options, without explanations.</source>
          <target state="translated">説明なしのすべての &lt;code&gt;gfortran&lt;/code&gt; オプションの簡単なリスト。</target>
        </trans-unit>
        <trans-unit id="2158ee2d66e03393d4b426585c79604199f8a8d3" translate="yes" xml:space="preserve">
          <source>By default no exception traps are enabled.</source>
          <target state="translated">デフォルトでは、例外トラップは有効になっていません。</target>
        </trans-unit>
        <trans-unit id="9470bfdf5b3c18663e010eb9344ce05e5941c98f" translate="yes" xml:space="preserve">
          <source>By default the parentheses in expression are honored for all optimization levels such that the compiler does not do any re-association. Using</source>
          <target state="translated">デフォルトでは、コンパイラが再関連付けを行わないように、すべての最適化レベルで式中の括弧が優先されます。式の使用法</target>
        </trans-unit>
        <trans-unit id="6b8ea690003bcfcd116abdd1fc3d0b4c7d61f7e0" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;gfortran&lt;/code&gt; enforces proper alignment of all variables in a &lt;code&gt;COMMON&lt;/code&gt; block by padding them as needed. On certain platforms this is mandatory, on others it increases performance. If a &lt;code&gt;COMMON&lt;/code&gt; block is not declared with consistent data types everywhere, this padding can cause trouble, and</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;gfortran&lt;/code&gt; は、必要に応じてパディングすることにより、 &lt;code&gt;COMMON&lt;/code&gt; ブロック内のすべての変数を適切に配置します。特定のプラットフォームでは必須ですが、他のプラットフォームではパフォーマンスが向上します。 &lt;code&gt;COMMON&lt;/code&gt; ブロックがどこでも一貫したデータ型で宣言されていない場合、このパディングは問題を引き起こす可能性があります。</target>
        </trans-unit>
        <trans-unit id="494e8f480b13e3bd8b25bcbebeaf211910421e4c" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;gfortran&lt;/code&gt; warns about any occasion of variables being padded for proper alignment inside a &lt;code&gt;COMMON&lt;/code&gt; block. This warning can be turned off via</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;gfortran&lt;/code&gt; は、 &lt;code&gt;COMMON&lt;/code&gt; ブロック内の適切な配置のために変数が埋め込まれるあらゆる機会について警告します。この警告は、</target>
        </trans-unit>
        <trans-unit id="f651876a014bd25ec25517c7b71e97c6f44ab155" translate="yes" xml:space="preserve">
          <source>By default, GNU Fortran appends an underscore to external names. If this option is used GNU Fortran appends two underscores to names with underscores and one underscore to external names with no underscores. GNU Fortran also appends two underscores to internal names with underscores to avoid naming collisions with external names.</source>
          <target state="translated">デフォルトでは、GNU Fortranは外部の名前にアンダースコアを追加します。このオプションを使用すると、GNU Fortranはアンダースコアのある名前には2つのアンダースコアを、アンダースコアのない外部の名前には1つのアンダースコアを追加します。また、GNU Fortranは、外部名との命名衝突を避けるために、アンダースコアを持つ内部名に2つのアンダースコアを追加します。</target>
        </trans-unit>
        <trans-unit id="621975a477791b3a406958e2698ec52a7c743143" translate="yes" xml:space="preserve">
          <source>By default, a summary for all exceptions but &amp;lsquo;</source>
          <target state="translated">デフォルトでは、 '以外のすべての例外の要約</target>
        </trans-unit>
        <trans-unit id="95c2ca9e022b2d009f78184d5dc34f0506c3b86a" translate="yes" xml:space="preserve">
          <source>By default, tabs are accepted as whitespace, but tabs are not members of the Fortran Character Set. For continuation lines, a tab followed by a digit between 1 and 9 is supported.</source>
          <target state="translated">デフォルトでは、タブは空白として受け入れられますが、タブはFortran文字セットのメンバーではありません。連続行では、タブの後に1から9までの数字が続くタブがサポートされています。</target>
        </trans-unit>
        <trans-unit id="bf10d05944108cdfc372215085afd519fc92c049" translate="yes" xml:space="preserve">
          <source>By default, the procedure name is the lower-cased Fortran name with an appended underscore (&lt;code&gt;_&lt;/code&gt;); using</source>
          <target state="translated">デフォルトでは、プロシージャー名はアンダースコア（ &lt;code&gt;_&lt;/code&gt; ）が追加された小文字のFortran名です。を使用して</target>
        </trans-unit>
        <trans-unit id="edfcca908c326b0071bb7e39182b30097c02a1c8" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;GFORTRAN_CONVERT_UNIT&lt;/code&gt; variable, it is possible to change the representation of data for unformatted files. The syntax for the &lt;code&gt;GFORTRAN_CONVERT_UNIT&lt;/code&gt; variable is:</source>
          <target state="translated">&lt;code&gt;GFORTRAN_CONVERT_UNIT&lt;/code&gt; 変数を設定することにより、フォーマットされていないファイルのデータの表現を変更できます。 &lt;code&gt;GFORTRAN_CONVERT_UNIT&lt;/code&gt; 変数の構文は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="403b5445ac98aeb69d7c99aacbf642c1c998d25d" translate="yes" xml:space="preserve">
          <source>C definition</source>
          <target state="translated">C定義</target>
        </trans-unit>
        <trans-unit id="edba7476e44f0a1276550cdb3f850cc6a1a2a8ea" translate="yes" xml:space="preserve">
          <source>C pointers are represented in Fortran via the special opaque derived type &lt;code&gt;type(c_ptr)&lt;/code&gt; (with private components). Thus one needs to use intrinsic conversion procedures to convert from or to C pointers.</source>
          <target state="translated">Cポインターは、Fortranでは特別な不透明な派生型 &lt;code&gt;type(c_ptr)&lt;/code&gt; （プライベートコンポーネント付き）を介して表されます。したがって、Cポインターとの間で変換を行うには、組み込みの変換手順を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="502ca6c945d9f8aee115c49e01f9edd12a50b0c8" translate="yes" xml:space="preserve">
          <source>C type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f35938e07f994b80b54eb87f01789cb3b2a241" translate="yes" xml:space="preserve">
          <source>CHDIR</source>
          <target state="translated">CHDIR</target>
        </trans-unit>
        <trans-unit id="1258e611fc7cbd03d2f39e6a27e8d2acdd24bc5b" translate="yes" xml:space="preserve">
          <source>CMPLX</source>
          <target state="translated">CMPLX</target>
        </trans-unit>
        <trans-unit id="b93902c9a6f48c919988f40fbd5dbfc953916ca2" translate="yes" xml:space="preserve">
          <source>COMPLEX</source>
          <target state="translated">COMPLEX</target>
        </trans-unit>
        <trans-unit id="00b8f9a935ceea9af0867a7456fd37b036afca33" translate="yes" xml:space="preserve">
          <source>CPU time function</source>
          <target state="translated">CPUタイム機能</target>
        </trans-unit>
        <trans-unit id="9c57ead1e73cf1ac994dbc83e611d53391aed85b" translate="yes" xml:space="preserve">
          <source>CPU time subroutine</source>
          <target state="translated">CPUタイムサブルーチン</target>
        </trans-unit>
        <trans-unit id="afcb9be24b81517be9e3ecd27a6462cfa3090967" translate="yes" xml:space="preserve">
          <source>CPU_TIME</source>
          <target state="translated">CPU_TIME</target>
        </trans-unit>
        <trans-unit id="ded88b5200a35884165325c3129ae4ce1bc6646d" translate="yes" xml:space="preserve">
          <source>Calculates for each array element of the variable &lt;var&gt;a&lt;/var&gt; the maximum value for that element in the current team; if &lt;var&gt;result_image&lt;/var&gt; has the value 0, the result shall be stored on all images, otherwise, only on the specified image. This function operates on numeric values and character strings.</source>
          <target state="translated">変数の各アレイ要素について算出 &lt;var&gt;a&lt;/var&gt; 現在のチームのその要素の最大値。場合 &lt;var&gt;result_image&lt;/var&gt; は値0を有し、これは、指定された画像上に、そうでなければ、すべての画像上に格納されなければなりません。この関数は、数値と文字列を操作します。</target>
        </trans-unit>
        <trans-unit id="61aba3fb834bcbe10aa672aee0b4e8c2bfa014cd" translate="yes" xml:space="preserve">
          <source>Calculates for each array element of the variable &lt;var&gt;a&lt;/var&gt; the minimum value for that element in the current team; if &lt;var&gt;result_image&lt;/var&gt; has the value 0, the result shall be stored on all images, otherwise, only on the specified image. This function operates on numeric values and character strings.</source>
          <target state="translated">変数の各アレイ要素について算出 &lt;var&gt;a&lt;/var&gt; 現在のチームのその要素の最小値。場合 &lt;var&gt;result_image&lt;/var&gt; は値0を有し、これは、指定された画像上に、そうでなければ、すべての画像上に格納されなければなりません。この関数は、数値と文字列を操作します。</target>
        </trans-unit>
        <trans-unit id="368b3e1172e6f91df4e6fe15761fd822cc33fc28" translate="yes" xml:space="preserve">
          <source>Calculates for each array element of the variable &lt;var&gt;a&lt;/var&gt; the reduction value for that element in the current team; if &lt;var&gt;result_image&lt;/var&gt; has the value 0, the result shall be stored on all images, otherwise, only on the specified image. The &lt;var&gt;opr&lt;/var&gt; is a pure function doing a mathematically commutative and associative operation.</source>
          <target state="translated">変数の各アレイ要素について算出 &lt;var&gt;a&lt;/var&gt; 現在のチームのその要素の減少値。場合 &lt;var&gt;result_image&lt;/var&gt; は値0を有し、これは、指定された画像上に、そうでなければ、すべての画像上に格納されなければなりません。 &lt;var&gt;opr&lt;/var&gt; 数学的に交換し、連想動作を行って、純粋な機能です。</target>
        </trans-unit>
        <trans-unit id="afc6b28729b114d6cb3a4ae1ee84081e76f1467a" translate="yes" xml:space="preserve">
          <source>Calculates for each array element of the variable &lt;var&gt;a&lt;/var&gt; the sum of all values for that element in the current team; if &lt;var&gt;result_image&lt;/var&gt; has the value 0, the result shall be stored on all images, otherwise, only on the specified image. This function operates on numeric values only.</source>
          <target state="translated">変数の各アレイ要素について算出 &lt;var&gt;a&lt;/var&gt; 現在のチームのその要素のすべての値の合計。場合 &lt;var&gt;result_image&lt;/var&gt; は値0を有し、これは、指定された画像上に、そうでなければ、すべての画像上に格納されなければなりません。この関数は数値のみに作用します。</target>
        </trans-unit>
        <trans-unit id="51e0a82828daf667cb3858a5349dde7ff38cad64" translate="yes" xml:space="preserve">
          <source>Calculates the Euclidean vector norm (&lt;em&gt;L_2&lt;/em&gt; norm) of of &lt;var&gt;ARRAY&lt;/var&gt; along dimension &lt;var&gt;DIM&lt;/var&gt;.</source>
          <target state="translated">次元 &lt;var&gt;DIM&lt;/var&gt; に沿った &lt;var&gt;ARRAY&lt;/var&gt; のユークリッドベクトルノルム（&lt;em&gt;L_2&lt;/em&gt;ノルム）を計算します。</target>
        </trans-unit>
        <trans-unit id="c08f2f83a949abe6d99e9a132fde2833fda77c1c" translate="yes" xml:space="preserve">
          <source>Calculates the parity, i.e. the reduction using &lt;code&gt;.XOR.&lt;/code&gt;, of &lt;var&gt;MASK&lt;/var&gt; along dimension &lt;var&gt;DIM&lt;/var&gt;.</source>
          <target state="translated">パリティ、すなわち &lt;code&gt;.XOR.&lt;/code&gt; を使用した削減を計算します。、ディメンション &lt;var&gt;DIM&lt;/var&gt; に沿った &lt;var&gt;MASK&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="f67ff76084ad94c9888c164676068779412f45a6" translate="yes" xml:space="preserve">
          <source>Called to free or deregister the memory of a coarray; the processor calls this function for automatic and explicit deallocation. In case of an error, this function shall fail with an error message, unless the &lt;var&gt;STAT&lt;/var&gt; variable is not null. The library is only expected to free memory it allocated itself during a call to &lt;code&gt;_gfortran_caf_register&lt;/code&gt;.</source>
          <target state="translated">Co-Arrayのメモリを解放または登録解除するために呼び出されます。プロセッサは、自動および明示的な割り当て解除のためにこの関数を呼び出します。エラーの場合、 &lt;var&gt;STAT&lt;/var&gt; 変数がnull でない限り、この関数はエラーメッセージで失敗します。ライブラリは、 &lt;code&gt;_gfortran_caf_register&lt;/code&gt; の呼び出し中にそれ自体が割り当てたメモリを解放することのみが期待されています。</target>
        </trans-unit>
        <trans-unit id="685a2b49527c9946029a140f6e7e862e57fd4a60" translate="yes" xml:space="preserve">
          <source>Called to get a scalar, an array section or a whole array from a remote image identified by the &lt;var&gt;image_index&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;image_index&lt;/var&gt; で識別されるリモートイメージからスカラー、配列セクション、または配列全体を取得するために呼び出されます。</target>
        </trans-unit>
        <trans-unit id="73fb8d143c8ed75342952d0a4f32ee969404700a" translate="yes" xml:space="preserve">
          <source>Called to get an array section or a whole array from a remote, image identified by the image_index.</source>
          <target state="translated">image_index で指定されたリモートの画像から配列セクションまたは配列全体を取得するためにコールされます。</target>
        </trans-unit>
        <trans-unit id="42b35eab41e8652a8be66bf5712a7946e722dd84" translate="yes" xml:space="preserve">
          <source>Called to send a scalar, an array section or a whole array from a local to a remote image identified by the &lt;var&gt;image_index&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;image_index&lt;/var&gt; で識別されるローカルイメージからリモートイメージにスカラー、配列セクション、または配列全体を送信するために呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2a1f3e0ba6a5254764ea28e7afe8497a1c55cd00" translate="yes" xml:space="preserve">
          <source>Called to send a scalar, an array section or a whole array from a local to a remote image identified by the image_index.</source>
          <target state="translated">image_index で指定されたローカル画像からリモート画像へスカラ,配列セクション,配列全体を送信するためにコールされます.</target>
        </trans-unit>
        <trans-unit id="a3f66a579a064fa7e118247f05db9a81443d7709" translate="yes" xml:space="preserve">
          <source>Called to send a scalar, an array section or a whole array from a remote image identified by the &lt;var&gt;src_image_index&lt;/var&gt; to a remote image identified by the &lt;var&gt;dst_image_index&lt;/var&gt;.</source>
          <target state="translated">同定遠隔画像からスカラ、アレイ部またはアレイ全体を送信するために呼び出さ &lt;var&gt;src_image_index&lt;/var&gt; によって同定遠隔画像に &lt;var&gt;dst_image_index&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="de089d2fae25ce2119b044ebd58a58158d63d7b8" translate="yes" xml:space="preserve">
          <source>Calling this subroutine causes the process to pause for &lt;var&gt;SECONDS&lt;/var&gt; seconds.</source>
          <target state="translated">このサブルーチンを呼び出すと、プロセスが &lt;var&gt;SECONDS&lt;/var&gt; 秒間停止します。</target>
        </trans-unit>
        <trans-unit id="f8eba46ecad008a4e218a210a71672db04d7e157" translate="yes" xml:space="preserve">
          <source>Cancel an assertion with the predicate &lt;var&gt;predicate&lt;/var&gt; and answer &lt;var&gt;answer&lt;/var&gt;.</source>
          <target state="translated">述語 &lt;var&gt;predicate&lt;/var&gt; を使用してアサーションをキャンセルし、回答に &lt;var&gt;answer&lt;/var&gt; ます。</target>
        </trans-unit>
        <trans-unit id="59d15eea66865b0282cb17c0e3120ed653071f95" translate="yes" xml:space="preserve">
          <source>Cancel any previous definition of &lt;var&gt;name&lt;/var&gt;, either built in or provided with a</source>
          <target state="translated">以前に定義された &lt;var&gt;name&lt;/var&gt; の定義をキャンセルします。</target>
        </trans-unit>
        <trans-unit id="4c3e78e25303f285caea07bc640a21603a3fdef3" translate="yes" xml:space="preserve">
          <source>Carriage return only</source>
          <target state="translated">キャリッジリターンのみ</target>
        </trans-unit>
        <trans-unit id="98babc7d151e019f378c33e513d3cb9afaaa0327" translate="yes" xml:space="preserve">
          <source>Change access permissions of files</source>
          <target state="translated">ファイルのアクセス権限の変更</target>
        </trans-unit>
        <trans-unit id="260f53de2ce74ccda0ba4436f6a571ffd27d12ea" translate="yes" xml:space="preserve">
          <source>Change current working directory to a specified path.</source>
          <target state="translated">現在の作業ディレクトリを指定したパスに変更します。</target>
        </trans-unit>
        <trans-unit id="0540db552edff9aefeb60127437ee15ff20542fb" translate="yes" xml:space="preserve">
          <source>Change the interpretation of backslashes in string literals from a single backslash character to &amp;ldquo;C-style&amp;rdquo; escape characters. The following combinations are expanded &lt;code&gt;\a&lt;/code&gt;, &lt;code&gt;\b&lt;/code&gt;, &lt;code&gt;\f&lt;/code&gt;, &lt;code&gt;\n&lt;/code&gt;, &lt;code&gt;\r&lt;/code&gt;, &lt;code&gt;\t&lt;/code&gt;, &lt;code&gt;\v&lt;/code&gt;, &lt;code&gt;\\&lt;/code&gt;, and &lt;code&gt;\0&lt;/code&gt; to the ASCII characters alert, backspace, form feed, newline, carriage return, horizontal tab, vertical tab, backslash, and NUL, respectively. Additionally, &lt;code&gt;\x&lt;/code&gt;&lt;var&gt;nn&lt;/var&gt;, &lt;code&gt;\u&lt;/code&gt;&lt;var&gt;nnnn&lt;/var&gt; and &lt;code&gt;\U&lt;/code&gt;&lt;var&gt;nnnnnnnn&lt;/var&gt; (where each &lt;var&gt;n&lt;/var&gt; is a hexadecimal digit) are translated into the Unicode characters corresponding to the specified code points. All other combinations of a character preceded by \ are unexpanded.</source>
          <target state="translated">文字列リテラルのバックスラッシュの解釈を、単一のバックスラッシュ文字から「Cスタイル」のエスケープ文字に変更します。以下の組み合わせが展開され &lt;code&gt;\a&lt;/code&gt; 、 &lt;code&gt;\b&lt;/code&gt; 、 &lt;code&gt;\f&lt;/code&gt; 、 &lt;code&gt;\n&lt;/code&gt; 、 &lt;code&gt;\r&lt;/code&gt; 、 &lt;code&gt;\t&lt;/code&gt; 、 &lt;code&gt;\v&lt;/code&gt; 、 &lt;code&gt;\\&lt;/code&gt; 、及び &lt;code&gt;\0&lt;/code&gt; ASCII文字アラート、バックスペース、フォームフィード、改行、キャリッジリターン、水平タブに、垂直タブ、バックスラッシュ、NUL。さらに、 &lt;code&gt;\x&lt;/code&gt; &lt;var&gt;nn&lt;/var&gt; 、 &lt;code&gt;\u&lt;/code&gt; &lt;var&gt;nnnn&lt;/var&gt; および &lt;code&gt;\U&lt;/code&gt; &lt;var&gt;nnnnnnnn&lt;/var&gt; （各 &lt;var&gt;n&lt;/var&gt; 16進数字）は、指定されたコードポイントに対応するUnicode文字に変換されます。\が前に付く文字の他のすべての組み合わせは、展開されません。</target>
        </trans-unit>
        <trans-unit id="cbe6906aa9b8a77cda6be78ee588789dd31c70ce" translate="yes" xml:space="preserve">
          <source>Change working directory</source>
          <target state="translated">作業ディレクトリの変更</target>
        </trans-unit>
        <trans-unit id="eea370510744912991547865226311a4554eafe9" translate="yes" xml:space="preserve">
          <source>Character in ASCII collating sequence</source>
          <target state="translated">ASCII照合順序の文字</target>
        </trans-unit>
        <trans-unit id="93b528fc78e924179bac2c006bbd6d1a542679e9" translate="yes" xml:space="preserve">
          <source>Character length of the function result, if it is a of type &lt;code&gt;CHARACTER&lt;/code&gt; and no C binding is used</source>
          <target state="translated">関数結果の文字長（ &lt;code&gt;CHARACTER&lt;/code&gt; 型であり、Cバインディングが使用されていない場合）</target>
        </trans-unit>
        <trans-unit id="6664bcdd3d0ae01c04ee310f06653bd32340976b" translate="yes" xml:space="preserve">
          <source>Character(&lt;var&gt;len&lt;/var&gt;)</source>
          <target state="translated">Character(&lt;var&gt;len&lt;/var&gt;)</target>
        </trans-unit>
        <trans-unit id="302c5b5827e02ab0466eddb29fe2afaa117ad581" translate="yes" xml:space="preserve">
          <source>Character-to-integer conversion function</source>
          <target state="translated">文字から整数への変換機能</target>
        </trans-unit>
        <trans-unit id="0eca3e561fce08ef4c3630019c8b1b1418625032" translate="yes" xml:space="preserve">
          <source>Check the code for syntax errors, but do not actually compile it. This will generate module files for each module present in the code, but no other output file.</source>
          <target state="translated">コードの構文エラーをチェックしますが、実際にはコンパイルしないでください。これにより、コード内に存在する各モジュールのモジュールファイルが生成されますが、それ以外の出力ファイルは生成されません。</target>
        </trans-unit>
        <trans-unit id="b41f68c03619feab3cc08d3f333f33bfb9286fb0" translate="yes" xml:space="preserve">
          <source>Checks file access modes</source>
          <target state="translated">ファイルアクセスモードのチェック</target>
        </trans-unit>
        <trans-unit id="927b60f0a7c5bfccce8c05753c5b58b9ed32975c" translate="yes" xml:space="preserve">
          <source>Choose character kind</source>
          <target state="translated">キャラクターの種類を選ぶ</target>
        </trans-unit>
        <trans-unit id="312e3da5b8d8fc186648c99a814b972c25289aa5" translate="yes" xml:space="preserve">
          <source>Choose integer kind</source>
          <target state="translated">整数の種類を選択</target>
        </trans-unit>
        <trans-unit id="9c7d486265c78ac950c638932a8ab6895ee99567" translate="yes" xml:space="preserve">
          <source>Choose real kind</source>
          <target state="translated">本物の種類を選択してください</target>
        </trans-unit>
        <trans-unit id="8ff057702146fa9076a2b274cf3e7444e3b02e94" translate="yes" xml:space="preserve">
          <source>Circular shift elements of an array</source>
          <target state="translated">配列の円形シフト要素</target>
        </trans-unit>
        <trans-unit id="47e575792f49544e528121a141f6cd82ca4fe559" translate="yes" xml:space="preserve">
          <source>Class:</source>
          <target state="translated">Class:</target>
        </trans-unit>
        <trans-unit id="1d575e2b797291a4fe91e40f871090e3871d3cfc" translate="yes" xml:space="preserve">
          <source>Clear bit</source>
          <target state="translated">クリアビット</target>
        </trans-unit>
        <trans-unit id="ffd51bd1963303cca4bcb433151864afb59b64ea" translate="yes" xml:space="preserve">
          <source>Coarray of any type (optional; if &lt;var&gt;DIM&lt;/var&gt; present, required).</source>
          <target state="translated">任意のタイプのCo-Array（オプション、 &lt;var&gt;DIM&lt;/var&gt; が存在する場合は必須）。</target>
        </trans-unit>
        <trans-unit id="6e564dd6ba682d0b6f26a4b2846edd183b01997e" translate="yes" xml:space="preserve">
          <source>Coarray of any type.</source>
          <target state="translated">任意のタイプの Co-Array。</target>
        </trans-unit>
        <trans-unit id="24a72e35898db30f8565da27e7ac5ba8bb79598b" translate="yes" xml:space="preserve">
          <source>Coarray support for serial programs with</source>
          <target state="translated">を持つシリアルプログラムの Co-Array サポート</target>
        </trans-unit>
        <trans-unit id="e7d5e82c3d8cf6aecb50f1c3dec1dfd81862c300" translate="yes" xml:space="preserve">
          <source>Code Generation Options</source>
          <target state="translated">コード生成オプション</target>
        </trans-unit>
        <trans-unit id="f45cb8fc71eb171d806f2c9fbc3f7e33e13ac130" translate="yes" xml:space="preserve">
          <source>Code in ASCII collating sequence</source>
          <target state="translated">ASCII照合順序のコード</target>
        </trans-unit>
        <trans-unit id="642f5b8bf27f7c5ceb4089adda001f0e517e735e" translate="yes" xml:space="preserve">
          <source>Collective maximum reduction</source>
          <target state="translated">集団最大削減</target>
        </trans-unit>
        <trans-unit id="38e6a433107ddd7634eadc3b94f7be5df9145da8" translate="yes" xml:space="preserve">
          <source>Collective minimum reduction</source>
          <target state="translated">集団的最小削減</target>
        </trans-unit>
        <trans-unit id="a1eaaa535d0fc93a2976d521fe34fa8f8e629578" translate="yes" xml:space="preserve">
          <source>Collective subroutine</source>
          <target state="translated">コレクティブサブルーチン</target>
        </trans-unit>
        <trans-unit id="136ddb6a75481e8cfd8f1998dea3b44e2f549d35" translate="yes" xml:space="preserve">
          <source>Collective summing reduction</source>
          <target state="translated">集団和算の削減</target>
        </trans-unit>
        <trans-unit id="758d92958976f6d2dd49bd957265e0ea47511e7c" translate="yes" xml:space="preserve">
          <source>Combined left shift</source>
          <target state="translated">左シフトの組み合わせ</target>
        </trans-unit>
        <trans-unit id="84e2223096285eec5a958404306f323e2a73cdf1" translate="yes" xml:space="preserve">
          <source>Combined right shift</source>
          <target state="translated">右シフトの組み合わせ</target>
        </trans-unit>
        <trans-unit id="34ae8a26580d6c091e1596af4eb11d77810ea06b" translate="yes" xml:space="preserve">
          <source>Command options supported by &lt;code&gt;gfortran&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gfortran&lt;/code&gt; でサポートされているコマンドオプション。</target>
        </trans-unit>
        <trans-unit id="719d17f048f27d99ad4ddc3aad0911b8bda899e5" translate="yes" xml:space="preserve">
          <source>Compiler extensions:</source>
          <target state="translated">コンパイラの拡張機能。</target>
        </trans-unit>
        <trans-unit id="ab8dc424cefdcedda375f546df052825622c54be" translate="yes" xml:space="preserve">
          <source>Compiler version string</source>
          <target state="translated">コンパイラのバージョン文字列</target>
        </trans-unit>
        <trans-unit id="f8ad3ce6091208da960c4f9ee62d22e28a03304d" translate="yes" xml:space="preserve">
          <source>Complementary error function</source>
          <target state="translated">相補エラー関数</target>
        </trans-unit>
        <trans-unit id="12a2fd6a5caf1062c731dc495f8cd1bdbb355dc3" translate="yes" xml:space="preserve">
          <source>Complex conjugate function</source>
          <target state="translated">複素共役関数</target>
        </trans-unit>
        <trans-unit id="48e1b1b88c3d7c1dce9c133674796b1ecac0d5d1" translate="yes" xml:space="preserve">
          <source>Complex conversion function</source>
          <target state="translated">複素変換機能</target>
        </trans-unit>
        <trans-unit id="63ce726434fa9464f1128577f0a1fc19fdaa41c2" translate="yes" xml:space="preserve">
          <source>Concatenates &lt;var&gt;NCOPIES&lt;/var&gt; copies of a string.</source>
          <target state="translated">文字列の &lt;var&gt;NCOPIES&lt;/var&gt; コピーを連結します。</target>
        </trans-unit>
        <trans-unit id="f5fe73c0e7d8afc203f459ff5d86f4fa08a5f7dc" translate="yes" xml:space="preserve">
          <source>Contrary to &lt;code&gt;gcc&lt;/code&gt;&amp;rsquo;s meaning of</source>
          <target state="translated">&lt;code&gt;gcc&lt;/code&gt; の意味に反して</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">Contributing</target>
        </trans-unit>
        <trans-unit id="04f897fa9705a45362d138aee1e3f78e007b1af1" translate="yes" xml:space="preserve">
          <source>Contributors to GNU Fortran</source>
          <target state="translated">GNU Fortranの貢献者</target>
        </trans-unit>
        <trans-unit id="00656ecaac3cd06dda885cb34ac89a85adf0521d" translate="yes" xml:space="preserve">
          <source>Controlling the variant of Fortran language compiled.</source>
          <target state="translated">コンパイルされたFortran言語のバリアントを制御します。</target>
        </trans-unit>
        <trans-unit id="619ea7422e1635a9f131b7a407dc350696993a3e" translate="yes" xml:space="preserve">
          <source>Converse function: &lt;a href=&quot;tan#TAN&quot;&gt;TAN&lt;/a&gt; Degrees function: &lt;a href=&quot;cotand#COTAND&quot;&gt;COTAND&lt;/a&gt;</source>
          <target state="translated">逆関数：&lt;a href=&quot;tan#TAN&quot;&gt;TAN&lt;/a&gt;度関数：&lt;a href=&quot;cotand#COTAND&quot;&gt;COTAND&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9e511fa9ffc4c5d4ba69bfd859cfd3ddad14b56" translate="yes" xml:space="preserve">
          <source>Converse function: &lt;a href=&quot;tand#TAND&quot;&gt;TAND&lt;/a&gt; Radians function: &lt;a href=&quot;cotan#COTAN&quot;&gt;COTAN&lt;/a&gt;</source>
          <target state="translated">逆関数：&lt;a href=&quot;tand#TAND&quot;&gt;TAND&lt;/a&gt;ラジアン関数：&lt;a href=&quot;cotan#COTAN&quot;&gt;COTAN&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8bae3f0468e05ca326dfd3e0017af87a554461d2" translate="yes" xml:space="preserve">
          <source>Convert C into Fortran pointer</source>
          <target state="translated">C を Fortran ポインタに変換</target>
        </trans-unit>
        <trans-unit id="3382caf15c9ca562f5f60b590528cc1cfb23288d" translate="yes" xml:space="preserve">
          <source>Convert C into Fortran procedure pointer</source>
          <target state="translated">CをFortranプロシージャポインタに変換</target>
        </trans-unit>
        <trans-unit id="3273790cc762cb6d20959735ffa1829bf9e648c4" translate="yes" xml:space="preserve">
          <source>Convert time to GMT info</source>
          <target state="translated">GMT情報に時間を変換する</target>
        </trans-unit>
        <trans-unit id="e96d13b61848efd2bc5dc39dd8e3fbf18e31b39d" translate="yes" xml:space="preserve">
          <source>Convert time to local time info</source>
          <target state="translated">ローカルタイム情報に時間を変換する</target>
        </trans-unit>
        <trans-unit id="53dc955cb07cc6d3deb2d9d88a6dc1e636329877" translate="yes" xml:space="preserve">
          <source>Convert to 16-bit integer type</source>
          <target state="translated">16ビット整数型に変換</target>
        </trans-unit>
        <trans-unit id="3a4cdb9b32b6daac7eb9699a1b09f86d1d2a9778" translate="yes" xml:space="preserve">
          <source>Convert to 64-bit integer type</source>
          <target state="translated">64ビット整数型に変換</target>
        </trans-unit>
        <trans-unit id="5269eae92cd848afb83ac4ea0c817bc408173ef2" translate="yes" xml:space="preserve">
          <source>Convert to a &lt;code&gt;KIND=2&lt;/code&gt; integer type. This is equivalent to the standard &lt;code&gt;INT&lt;/code&gt; intrinsic with an optional argument of &lt;code&gt;KIND=2&lt;/code&gt;, and is only included for backwards compatibility.</source>
          <target state="translated">&lt;code&gt;KIND=2&lt;/code&gt; 整数型に変換します。これは、オプションの引数が &lt;code&gt;KIND=2&lt;/code&gt; である標準の &lt;code&gt;INT&lt;/code&gt; 組み込みに相当し、下位互換性のためにのみ含まれています。</target>
        </trans-unit>
        <trans-unit id="02b8746fc1bca23a2145890a3c3e597a6444bf78" translate="yes" xml:space="preserve">
          <source>Convert to a &lt;code&gt;KIND=4&lt;/code&gt; integer type, which is the same size as a C &lt;code&gt;long&lt;/code&gt; integer. This is equivalent to the standard &lt;code&gt;INT&lt;/code&gt; intrinsic with an optional argument of &lt;code&gt;KIND=4&lt;/code&gt;, and is only included for backwards compatibility.</source>
          <target state="translated">&lt;code&gt;KIND=4&lt;/code&gt; 整数型に変換します。これは、Cの &lt;code&gt;long&lt;/code&gt; 整数と同じサイズです。これは、オプションの引数が &lt;code&gt;KIND=4&lt;/code&gt; の標準 &lt;code&gt;INT&lt;/code&gt; 組み込みに相当し、下位互換性のためにのみ含まれています。</target>
        </trans-unit>
        <trans-unit id="48cdb5cabc83af9ed1b46a622b31410658d42438" translate="yes" xml:space="preserve">
          <source>Convert to a &lt;code&gt;KIND=8&lt;/code&gt; integer type. This is equivalent to the standard &lt;code&gt;INT&lt;/code&gt; intrinsic with an optional argument of &lt;code&gt;KIND=8&lt;/code&gt;, and is only included for backwards compatibility.</source>
          <target state="translated">&lt;code&gt;KIND=8&lt;/code&gt; 整数型に変換します。これは、オプションの引数が &lt;code&gt;KIND=8&lt;/code&gt; の標準 &lt;code&gt;INT&lt;/code&gt; 組み込みに相当し、下位互換性のためにのみ含まれています。</target>
        </trans-unit>
        <trans-unit id="5946b90c6bdbdb047c476d580caf6ef7134a8f88" translate="yes" xml:space="preserve">
          <source>Convert to integer type</source>
          <target state="translated">整数型に変換</target>
        </trans-unit>
        <trans-unit id="5894e58d62ebc473f5ff5540aabc124661619c5e" translate="yes" xml:space="preserve">
          <source>Convert to logical type</source>
          <target state="translated">論理型に変換</target>
        </trans-unit>
        <trans-unit id="5e821a1f572fbfadbb768a60aab9dd4bd1ebce5b" translate="yes" xml:space="preserve">
          <source>Convert to real type</source>
          <target state="translated">実数型への変換</target>
        </trans-unit>
        <trans-unit id="97ad744ed209b116f65bbfb63fdf02e1e49b8df4" translate="yes" xml:space="preserve">
          <source>Converts one kind of &lt;code&gt;LOGICAL&lt;/code&gt; variable to another.</source>
          <target state="translated">&lt;code&gt;LOGICAL&lt;/code&gt; 変数の種類を別の種類に変換します。</target>
        </trans-unit>
        <trans-unit id="7f2b478e5c5c9bfbdfef7006987960c45641ed5c" translate="yes" xml:space="preserve">
          <source>Copy a value to all images the current set of images</source>
          <target state="translated">現在の画像セットのすべての画像に値をコピーします。</target>
        </trans-unit>
        <trans-unit id="1dd3bb7758be1b9a3198143f88e38a84abe194a2" translate="yes" xml:space="preserve">
          <source>Cosine function</source>
          <target state="translated">コサイン関数</target>
        </trans-unit>
        <trans-unit id="66814fc8ba666e3c115d37c0cda25cc7963763d1" translate="yes" xml:space="preserve">
          <source>Cosine function, degrees</source>
          <target state="translated">コサイン関数、度</target>
        </trans-unit>
        <trans-unit id="a89d25e5d1c7e0d0aad6aca918169a994bb32f0b" translate="yes" xml:space="preserve">
          <source>Cosubscript index of this image</source>
          <target state="translated">この画像の添字インデックス</target>
        </trans-unit>
        <trans-unit id="3eed853d5c82805eb63e0e4270c81dc68a994730" translate="yes" xml:space="preserve">
          <source>Cosubscript to image index conversion</source>
          <target state="translated">添字から画像インデックスへの変換</target>
        </trans-unit>
        <trans-unit id="67620e471dedb5582ae96416e1c53fa34aaa91d2" translate="yes" xml:space="preserve">
          <source>Cotangent function</source>
          <target state="translated">コタンジェント関数</target>
        </trans-unit>
        <trans-unit id="4da51761194b2aad5cb5e8e9bb503052a82cca64" translate="yes" xml:space="preserve">
          <source>Cotangent function, degrees</source>
          <target state="translated">コタンジェント関数、度</target>
        </trans-unit>
        <trans-unit id="cb8163ad103a88a54e40e8bf20f12cf3ece06d65" translate="yes" xml:space="preserve">
          <source>Count occurrences of TRUE in an array</source>
          <target state="translated">配列内の TRUE の出現回数を数えます</target>
        </trans-unit>
        <trans-unit id="abcaab02d87bbb084dbb6d194df8f7fa41f2b93c" translate="yes" xml:space="preserve">
          <source>Counts the number of &lt;code&gt;.TRUE.&lt;/code&gt; elements in a logical &lt;var&gt;MASK&lt;/var&gt;, or, if the &lt;var&gt;DIM&lt;/var&gt; argument is supplied, counts the number of elements along each row of the array in the &lt;var&gt;DIM&lt;/var&gt; direction. If the array has zero size, or all of the elements of &lt;var&gt;MASK&lt;/var&gt; are &lt;code&gt;.FALSE.&lt;/code&gt;, then the result is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.TRUE.&lt;/code&gt; の数をカウントします。論理 &lt;var&gt;MASK&lt;/var&gt; 内の要素、または &lt;var&gt;DIM&lt;/var&gt; 引数が指定されている場合は、配列の各行に沿った &lt;var&gt;DIM&lt;/var&gt; 方向の要素数をカウントします。配列のサイズがゼロの場合、または &lt;var&gt;MASK&lt;/var&gt; のすべての要素が &lt;code&gt;.FALSE.&lt;/code&gt; の場合、結果は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ca84aecb51df48a92404be79666e6d5fe337e2fb" translate="yes" xml:space="preserve">
          <source>Cray pointees often are used to alias an existing variable. For example:</source>
          <target state="translated">Cray pointeesは、既存の変数のエイリアスとしてよく使用されます。例えば</target>
        </trans-unit>
        <trans-unit id="079133d1dbb4c697df4f85c6fc9afe1637edc023" translate="yes" xml:space="preserve">
          <source>Cray pointers are part of a non-standard extension that provides a C-like pointer in Fortran. This is accomplished through a pair of variables: an integer &quot;pointer&quot; that holds a memory address, and a &quot;pointee&quot; that is used to dereference the pointer.</source>
          <target state="translated">Cray ポインタは、Fortran の C ライクなポインタを提供する非標準の拡張機能の一部です。これは、メモリアドレスを保持する整数の &quot;ポインタ &quot;と、ポインタの参照を解除するために使用される &quot;ポインティ &quot;という2つの変数によって実現されています。</target>
        </trans-unit>
        <trans-unit id="189251406fc434eb4a003209d557b57ba7d792aa" translate="yes" xml:space="preserve">
          <source>Cray pointers will work correctly when there is no aliasing (i.e., when they are used to access a dynamically allocated block of memory), and also in any routine where a pointee is used, but any variable with which it shares storage is not used. Code that violates these rules may not run as the user intends. This is not a bug in the optimizer; any code that violates the aliasing rules is illegal. (Note that this is not unique to GNU Fortran; any Fortran compiler that supports Cray pointers will &amp;ldquo;incorrectly&amp;rdquo; optimize code with illegal aliasing.)</source>
          <target state="translated">エイリアシングがない場合（つまり、動的に割り当てられたメモリのブロックにアクセスするために使用される場合）、および指示先が使用されるルーチンでもクレイポインターは正しく機能しますが、ストレージを共有する変数は使用されません。これらのルールに違反するコードは、ユーザーが意図したとおりに実行されない可能性があります。これはオプティマイザのバグではありません。エイリアシング規則に違反するコードはすべて違法です。（これはGNU Fortranに固有のものではないことに注意してください。CrayポインターをサポートするFortranコンパイラーは、不正なエイリアスを持つコードを「誤って」最適化します。）</target>
        </trans-unit>
        <trans-unit id="37691e38dc85a77a1cce380491ac6ff70a383a88" translate="yes" xml:space="preserve">
          <source>Create a hard link</source>
          <target state="translated">ハードリンクを作成する</target>
        </trans-unit>
        <trans-unit id="1fb3b81881446baf520c50a8895db365d405c3df" translate="yes" xml:space="preserve">
          <source>Create a symbolic link</source>
          <target state="translated">シンボリックリンクの作成</target>
        </trans-unit>
        <trans-unit id="5a97fd2f7800692f948278bd72a1d644dd56c0aa" translate="yes" xml:space="preserve">
          <source>Current local time (day/month/year)</source>
          <target state="translated">現在の現地時間(日/月/年</target>
        </trans-unit>
        <trans-unit id="d9dd5ea3b903bc3ea5cf9ee7b4e51012d213a407" translate="yes" xml:space="preserve">
          <source>Current local time (hour/minutes/seconds)</source>
          <target state="translated">現在の現地時間(時/分/秒</target>
        </trans-unit>
        <trans-unit id="841ee80cc5097665e4c196b6c36d0c034f58d0c4" translate="yes" xml:space="preserve">
          <source>Current stream position</source>
          <target state="translated">現在のストリーム位置</target>
        </trans-unit>
        <trans-unit id="0bfd9e295c59bdb506130f195215edf1662041f3" translate="yes" xml:space="preserve">
          <source>Currently unimplemented:</source>
          <target state="translated">現在は未実装です。</target>
        </trans-unit>
        <trans-unit id="234e141e0cc0149b5367330679e583e7377ad5de" translate="yes" xml:space="preserve">
          <source>DATE_AND_TIME</source>
          <target state="translated">DATE_AND_TIME</target>
        </trans-unit>
        <trans-unit id="9a68d58101c1167c77921bb1b3d4c775e4412eb7" translate="yes" xml:space="preserve">
          <source>DBLE</source>
          <target state="translated">DBLE</target>
        </trans-unit>
        <trans-unit id="c3fc78b985a85e8417b1171dde3ac810557056ea" translate="yes" xml:space="preserve">
          <source>DEC compatibility mode. Enables extensions and other features that mimic the default behavior of older compilers (such as DEC). These features are non-standard and should be avoided at all costs. For details on GNU Fortran&amp;rsquo;s implementation of these extensions see the full documentation.</source>
          <target state="translated">DEC互換モード。古いコンパイラ（DECなど）のデフォルトの動作を模倣する拡張機能やその他の機能を有効にします。これらの機能は非標準であり、すべてのコストで回避する必要があります。GNU Fortranによるこれらの拡張機能の実装の詳細については、完全なドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="a062eff730d2400585803b25fb2c0e436ff1d02c" translate="yes" xml:space="preserve">
          <source>DSHIFTL</source>
          <target state="translated">DSHIFTL</target>
        </trans-unit>
        <trans-unit id="7a25328c3e7487f62dd163c5fbe22e202421c9cb" translate="yes" xml:space="preserve">
          <source>DSHIFTR</source>
          <target state="translated">DSHIFTR</target>
        </trans-unit>
        <trans-unit id="8e14ba075e7c86c483ac920c87faca0c5998f037" translate="yes" xml:space="preserve">
          <source>Date and time subroutine</source>
          <target state="translated">日時サブルーチン</target>
        </trans-unit>
        <trans-unit id="a78bf1f038bb229130c5eb95cd940a8f4b199b90" translate="yes" xml:space="preserve">
          <source>Day of month, range 1&amp;ndash;31</source>
          <target state="translated">月の日、範囲は1〜31</target>
        </trans-unit>
        <trans-unit id="cd7df5f994fdf90b2919c30d4589c1be2ae92db3" translate="yes" xml:space="preserve">
          <source>Daylight savings indicator: positive if daylight savings is in effect, zero if not, and negative if the information is not available.</source>
          <target state="translated">日中光節約指標:日中光節約が有効な場合は正、有効でない場合は0、情報がない場合は負の値になります。</target>
        </trans-unit>
        <trans-unit id="1cf25e4dcdd21f003c5d1747e593e85b67ab4cd5" translate="yes" xml:space="preserve">
          <source>Days since January 1, range 0&amp;ndash;365</source>
          <target state="translated">1月1日からの日数、範囲は0〜365</target>
        </trans-unit>
        <trans-unit id="b7b96436cf5229d16fb5897e129a114445f95678" translate="yes" xml:space="preserve">
          <source>Debugging Options</source>
          <target state="translated">デバッグオプション</target>
        </trans-unit>
        <trans-unit id="543a00cabbb859baf30c90e9ceeba2a2406f1f5e" translate="yes" xml:space="preserve">
          <source>Decimal exponent range</source>
          <target state="translated">小数点以下の指数範囲</target>
        </trans-unit>
        <trans-unit id="ddc70c88a42231ed25a487a924e7d53809087e6a" translate="yes" xml:space="preserve">
          <source>Decimal precision of a real kind</source>
          <target state="translated">実数種の小数点精度</target>
        </trans-unit>
        <trans-unit id="ce0e0a7e2a933d3c8749095e1595766f541fe6a3" translate="yes" xml:space="preserve">
          <source>Default integer. If &lt;var&gt;COARRAY&lt;/var&gt; is not present, it is scalar; if &lt;var&gt;DISTANCE&lt;/var&gt; is not present or has value 0, its value is the image index on the invoking image for the current team, for values smaller or equal distance to the initial team, it returns the image index on the ancestor team which has a distance of &lt;var&gt;DISTANCE&lt;/var&gt; from the invoking team. If &lt;var&gt;DISTANCE&lt;/var&gt; is larger than the distance to the initial team, the image index of the initial team is returned. Otherwise when the &lt;var&gt;COARRAY&lt;/var&gt; is present, if &lt;var&gt;DIM&lt;/var&gt; is not present, a rank-1 array with corank elements is returned, containing the cosubscripts for &lt;var&gt;COARRAY&lt;/var&gt; specifying the invoking image. If &lt;var&gt;DIM&lt;/var&gt; is present, a scalar is returned, with the value of the &lt;var&gt;DIM&lt;/var&gt; element of &lt;code&gt;THIS_IMAGE(COARRAY)&lt;/code&gt;.</source>
          <target state="translated">デフォルトの整数。 &lt;var&gt;COARRAY&lt;/var&gt; が存在しない場合は、スカラーです。場合に &lt;var&gt;DISTANCE&lt;/var&gt; 存在しないか、または値0を有し、その値は小さい値または初期チームに等しい距離の現在のチームのための起動画像の画像インデックスであり、それは距離を有する祖先チームの画像インデックスを返します &lt;var&gt;DISTANCE&lt;/var&gt; 呼び出しチームから。 &lt;var&gt;DISTANCE&lt;/var&gt; が最初のチームまでの距離より大きい場合、最初のチームの画像インデックスが返されます。場合さもなければ &lt;var&gt;COARRAY&lt;/var&gt; 存在する場合、 &lt;var&gt;DIM&lt;/var&gt; は存在しない、corank要素とランク1アレイのためcosubscriptsを含む、返された &lt;var&gt;COARRAY&lt;/var&gt; 呼び出し画像を特定します。 &lt;var&gt;DIM&lt;/var&gt; の場合が存在する場合、 &lt;code&gt;THIS_IMAGE(COARRAY)&lt;/code&gt; の &lt;var&gt;DIM&lt;/var&gt; 要素の値とともにスカラーが返されます。</target>
        </trans-unit>
        <trans-unit id="e1a3509bb9f9e43493afb4bea400ad2f5c8be81b" translate="yes" xml:space="preserve">
          <source>Default record length for new files</source>
          <target state="translated">新規ファイルのデフォルトのレコード長</target>
        </trans-unit>
        <trans-unit id="48bcdf14a7727032f039944b612996363b0e9f7a" translate="yes" xml:space="preserve">
          <source>Default-kind integer constant array of rank one containing the supported kind parameters of the &lt;code&gt;CHARACTER&lt;/code&gt; type. (Fortran 2008 or later.)</source>
          <target state="translated">サポートされている &lt;code&gt;CHARACTER&lt;/code&gt; 型のkindパラメーターを含む、ランク1のデフォルトの種類の定数定数配列。（Fortran 2008以降。）</target>
        </trans-unit>
        <trans-unit id="d317f117580f31040fe9523448ffeae3469357fb" translate="yes" xml:space="preserve">
          <source>Default-kind integer constant array of rank one containing the supported kind parameters of the &lt;code&gt;INTEGER&lt;/code&gt; type. (Fortran 2008 or later.)</source>
          <target state="translated">&lt;code&gt;INTEGER&lt;/code&gt; 型のサポートされている種類パラメーターを含む、ランク1のデフォルト種類の整数定数配列。（Fortran 2008以降。）</target>
        </trans-unit>
        <trans-unit id="750c62d8bcf38185c20b80578d24d922c240cc80" translate="yes" xml:space="preserve">
          <source>Default-kind integer constant array of rank one containing the supported kind parameters of the &lt;code&gt;LOGICAL&lt;/code&gt; type. (Fortran 2008 or later.)</source>
          <target state="translated">サポートされている &lt;code&gt;LOGICAL&lt;/code&gt; タイプの種類パラメーターを含む、ランク1のデフォルトの種類の整数定数配列。（Fortran 2008以降。）</target>
        </trans-unit>
        <trans-unit id="035e4e1b75f094d9cbfb79c5dc27aa69a18417dc" translate="yes" xml:space="preserve">
          <source>Default-kind integer constant array of rank one containing the supported kind parameters of the &lt;code&gt;REAL&lt;/code&gt; type. (Fortran 2008 or later.)</source>
          <target state="translated">&lt;code&gt;REAL&lt;/code&gt; 型のサポートされている種類パラメーターを含む、ランク1のデフォルト種類の整数定数配列。（Fortran 2008以降。）</target>
        </trans-unit>
        <trans-unit id="987c3b8d4841c1db76c0897441658986e5be163a" translate="yes" xml:space="preserve">
          <source>Default-kind integer constant to be used as kind parameter when defining integer variables used in atomic operations. (Fortran 2008 or later.)</source>
          <target state="translated">アトミック演算で使用される整数変数を定義する際に、種類パラメータとして使用されるデフォルトの種類の整数定数。(Fortran 2008 以降)。</target>
        </trans-unit>
        <trans-unit id="c041cc1955dfe46abd903b429630f3acc920e89f" translate="yes" xml:space="preserve">
          <source>Default-kind integer constant to be used as kind parameter when defining logical variables used in atomic operations. (Fortran 2008 or later.)</source>
          <target state="translated">アトミック演算で使用される論理変数を定義する際に、種類パラメータとして使用されるデフォルトの整数型定数。(Fortran 2008 以降)。</target>
        </trans-unit>
        <trans-unit id="f61a7aa88fb5b54fda84efc2c9cb07be25b94c40" translate="yes" xml:space="preserve">
          <source>Deferred-length character strings of Fortran 2003 supports part of the features of &lt;code&gt;ISO_VARYING_STRING&lt;/code&gt; and should be considered as replacement. (Namely, allocatable or pointers of the type &lt;code&gt;character(len=:)&lt;/code&gt;.)</source>
          <target state="translated">Fortran 2003の据え置き長さの文字ストリングは、 &lt;code&gt;ISO_VARYING_STRING&lt;/code&gt; の機能の一部をサポートしており、置き換えと見なす必要があります。（つまり、 &lt;code&gt;character(len=:)&lt;/code&gt; 型の割り当て可能ポインタまたはポインタ。）</target>
        </trans-unit>
        <trans-unit id="7436ecaf3aecf955cac06effc6ca88047daebb6c" translate="yes" xml:space="preserve">
          <source>Deferred-length character variables and scalar deferred-length character components of derived types are supported. (Note that array-valued compoents are not yet implemented.)</source>
          <target state="translated">派生型の繰延長文字変数とスカラー繰延長文字コンポーネントがサポートされています。(配列値を持つコンポーネントはまだ実装されていないことに注意してください)。</target>
        </trans-unit>
        <trans-unit id="f36756a2375aeaf9260cc6764ebee064766205e8" translate="yes" xml:space="preserve">
          <source>Degrees</source>
          <target state="translated">Degrees</target>
        </trans-unit>
        <trans-unit id="d91d455936afb1a85dca05e4fb682918e3149b72" translate="yes" xml:space="preserve">
          <source>Deprecated alias for</source>
          <target state="translated">の非推奨エイリアス</target>
        </trans-unit>
        <trans-unit id="0996e31228feb52806804af2a2eae3f6596c3d14" translate="yes" xml:space="preserve">
          <source>Deregistering coarrays</source>
          <target state="translated">コアレイの登録解除</target>
        </trans-unit>
        <trans-unit id="5354039385ebb0e8aedfae0480e1551597d0418d" translate="yes" xml:space="preserve">
          <source>Derived type with private components to be use with the &lt;code&gt;LOCK&lt;/code&gt; and &lt;code&gt;UNLOCK&lt;/code&gt; statement. A variable of its type has to be always declared as coarray and may not appear in a variable-definition context. (Fortran 2008 or later.)</source>
          <target state="translated">&lt;code&gt;LOCK&lt;/code&gt; および &lt;code&gt;UNLOCK&lt;/code&gt; ステートメントで使用するプライベートコンポーネントを持つ派生型。その型の変数は常にcoarrayとして宣言する必要があり、変数定義のコンテキストに表示されない場合があります。（Fortran 2008以降。）</target>
        </trans-unit>
        <trans-unit id="2ac0667b5b0b769cbab11ec47bfe4c30495fbe50" translate="yes" xml:space="preserve">
          <source>Derived types with the C binding attribute shall not have the &lt;code&gt;sequence&lt;/code&gt; attribute, type parameters, the &lt;code&gt;extends&lt;/code&gt; attribute, nor type-bound procedures. Every component must be of interoperable type and kind and may not have the &lt;code&gt;pointer&lt;/code&gt; or &lt;code&gt;allocatable&lt;/code&gt; attribute. The names of the components are irrelevant for interoperability.</source>
          <target state="translated">Cバインディング属性を持つ派生型には、 &lt;code&gt;sequence&lt;/code&gt; 属性、型パラメーター、 &lt;code&gt;extends&lt;/code&gt; 属性、または型バインドプロシージャを含めないでください。すべてのコンポーネントは相互運用可能なタイプと種類である必要があり、 &lt;code&gt;pointer&lt;/code&gt; または &lt;code&gt;allocatable&lt;/code&gt; 属性を持たない場合があります。コンポーネントの名前は、相互運用性には関係ありません。</target>
        </trans-unit>
        <trans-unit id="9b6f3f0766171c305edc998380e7c5cc141a33d8" translate="yes" xml:space="preserve">
          <source>Description:</source>
          <target state="translated">Description:</target>
        </trans-unit>
        <trans-unit id="0d8bc074b156a947960313d7dc3e755177218fce" translate="yes" xml:space="preserve">
          <source>Determine if all values are true</source>
          <target state="translated">すべての値が真かどうかを判断する</target>
        </trans-unit>
        <trans-unit id="dbc43b933a41010cf9a39818d0f3483e06d3cfb0" translate="yes" xml:space="preserve">
          <source>Determine if any values are true</source>
          <target state="translated">値が真かどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="ba2a682db5500ba705aff269d2c2057387092a7b" translate="yes" xml:space="preserve">
          <source>Determine the extent of &lt;var&gt;ARRAY&lt;/var&gt; along a specified dimension &lt;var&gt;DIM&lt;/var&gt;, or the total number of elements in &lt;var&gt;ARRAY&lt;/var&gt; if &lt;var&gt;DIM&lt;/var&gt; is absent.</source>
          <target state="translated">指定された次元 &lt;var&gt;DIM&lt;/var&gt; に沿った &lt;var&gt;ARRAY&lt;/var&gt; の範囲、または &lt;var&gt;DIM&lt;/var&gt; が存在しない場合は &lt;var&gt;ARRAY&lt;/var&gt; の要素の総数を決定します。</target>
        </trans-unit>
        <trans-unit id="1a4d1ae3b0b68b688c02b431017566fb5eb4850e" translate="yes" xml:space="preserve">
          <source>Determine the shape of an array</source>
          <target state="translated">配列の形状を決定する</target>
        </trans-unit>
        <trans-unit id="9cf4774792e99f655367fbaf16c078d7c1ab8567" translate="yes" xml:space="preserve">
          <source>Determine the size in bytes of an expression</source>
          <target state="translated">式のサイズをバイト単位で決定します。</target>
        </trans-unit>
        <trans-unit id="01fc82092db3061bbd9cb5dcb43d3e88dce5d961" translate="yes" xml:space="preserve">
          <source>Determine whether a unit is connected to a terminal device.</source>
          <target state="translated">ユニットが端末装置に接続されているかどうかを判定します。</target>
        </trans-unit>
        <trans-unit id="0df6699a2689f0edde25fde23f2cb750b949d554" translate="yes" xml:space="preserve">
          <source>Determine whether an optional dummy argument is specified</source>
          <target state="translated">オプションのダミー引数が指定されているかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="85229bc6c3f454ded7f675001ddc0acdce11f0bd" translate="yes" xml:space="preserve">
          <source>Determines the &lt;var&gt;COUNT&lt;/var&gt; of a processor clock since an unspecified time in the past modulo &lt;var&gt;COUNT_MAX&lt;/var&gt;, &lt;var&gt;COUNT_RATE&lt;/var&gt; determines the number of clock ticks per second. If the platform supports a monotonic clock, that clock is used and can, depending on the platform clock implementation, provide up to nanosecond resolution. If a monotonic clock is not available, the implementation falls back to a realtime clock.</source>
          <target state="translated">決定 &lt;var&gt;COUNT&lt;/var&gt; 過去モジュロで不特定の時間以降のプロセッサクロックの &lt;var&gt;COUNT_MAX&lt;/var&gt; を、 &lt;var&gt;COUNT_RATE&lt;/var&gt; は、クロックの数は毎秒ティック判定する。プラットフォームが単調クロックをサポートする場合、そのクロックが使用され、プラットフォームクロックの実装に応じて、最大でナノ秒の分解能を提供できます。単調クロックが利用できない場合、実装はリアルタイムクロックにフォールバックします。</target>
        </trans-unit>
        <trans-unit id="0a73a137a1052572beb9c2f492dde435aee4ffad" translate="yes" xml:space="preserve">
          <source>Determines the distance between the argument &lt;var&gt;X&lt;/var&gt; and the nearest adjacent number of the same type.</source>
          <target state="translated">引数 &lt;var&gt;X&lt;/var&gt; と、同じ型の最も近い隣接する数値との間の距離を決定します。</target>
        </trans-unit>
        <trans-unit id="0a4dfc22f28e7b1911c261cf7cad0ef631f11778" translate="yes" xml:space="preserve">
          <source>Determines the location of the element in the array with the maximum value, or, if the &lt;var&gt;DIM&lt;/var&gt; argument is supplied, determines the locations of the maximum element along each row of the array in the &lt;var&gt;DIM&lt;/var&gt; direction. If &lt;var&gt;MASK&lt;/var&gt; is present, only the elements for which &lt;var&gt;MASK&lt;/var&gt; is &lt;code&gt;.TRUE.&lt;/code&gt; are considered. If more than one element in the array has the maximum value, the location returned is that of the first such element in array element order. If the array has zero size, or all of the elements of &lt;var&gt;MASK&lt;/var&gt; are &lt;code&gt;.FALSE.&lt;/code&gt;, then the result is an array of zeroes. Similarly, if &lt;var&gt;DIM&lt;/var&gt; is supplied and all of the elements of &lt;var&gt;MASK&lt;/var&gt; along a given row are zero, the result value for that row is zero.</source>
          <target state="translated">最大値を持つ配列内の要素の位置を決定します。または、 &lt;var&gt;DIM&lt;/var&gt; 引数が指定されている場合は、配列の各行に沿った &lt;var&gt;DIM&lt;/var&gt; 方向の最大要素の位置を決定します。 &lt;var&gt;MASK&lt;/var&gt; が存在する場合、 &lt;var&gt;MASK&lt;/var&gt; が &lt;code&gt;.TRUE.&lt;/code&gt; である要素のみ。考えられています。配列内の複数の要素が最大値を持つ場合、返される場所は、配列要素の順序で最初のそのような要素の場所です。配列のサイズがゼロの場合、または &lt;var&gt;MASK&lt;/var&gt; のすべての要素が &lt;code&gt;.FALSE.&lt;/code&gt; の場合、結果はゼロの配列になります。同様に、 &lt;var&gt;DIM&lt;/var&gt; が提供され、 &lt;var&gt;MASK&lt;/var&gt; のすべての要素が特定の行に沿ってゼロである場合、その行の結果値はゼロです。</target>
        </trans-unit>
        <trans-unit id="87809581ed451e33703ede880b8866ad0dc63b0d" translate="yes" xml:space="preserve">
          <source>Determines the location of the element in the array with the minimum value, or, if the &lt;var&gt;DIM&lt;/var&gt; argument is supplied, determines the locations of the minimum element along each row of the array in the &lt;var&gt;DIM&lt;/var&gt; direction. If &lt;var&gt;MASK&lt;/var&gt; is present, only the elements for which &lt;var&gt;MASK&lt;/var&gt; is &lt;code&gt;.TRUE.&lt;/code&gt; are considered. If more than one element in the array has the minimum value, the location returned is that of the first such element in array element order. If the array has zero size, or all of the elements of &lt;var&gt;MASK&lt;/var&gt; are &lt;code&gt;.FALSE.&lt;/code&gt;, then the result is an array of zeroes. Similarly, if &lt;var&gt;DIM&lt;/var&gt; is supplied and all of the elements of &lt;var&gt;MASK&lt;/var&gt; along a given row are zero, the result value for that row is zero.</source>
          <target state="translated">最小値を持つ配列内の要素の位置を決定します。または、 &lt;var&gt;DIM&lt;/var&gt; 引数が指定されている場合は、配列の各行に沿った &lt;var&gt;DIM&lt;/var&gt; 方向の最小要素の位置を決定します。 &lt;var&gt;MASK&lt;/var&gt; が存在する場合、 &lt;var&gt;MASK&lt;/var&gt; が &lt;code&gt;.TRUE.&lt;/code&gt; である要素のみ。考えられています。配列内の複数の要素に最小値がある場合、返される場所は、配列要素の順序で最初のそのような要素の場所です。配列のサイズがゼロの場合、または &lt;var&gt;MASK&lt;/var&gt; のすべての要素が &lt;code&gt;.FALSE.&lt;/code&gt; の場合、結果はゼロの配列になります。同様に、 &lt;var&gt;DIM&lt;/var&gt; が提供され、 &lt;var&gt;MASK&lt;/var&gt; のすべての要素が特定の行に沿ってゼロである場合、その行の結果値はゼロです。</target>
        </trans-unit>
        <trans-unit id="848bb5d64844e29a29d224776f1202dc4ee5e9d4" translate="yes" xml:space="preserve">
          <source>Determines the maximum value of the elements in an array value, or, if the &lt;var&gt;DIM&lt;/var&gt; argument is supplied, determines the maximum value along each row of the array in the &lt;var&gt;DIM&lt;/var&gt; direction. If &lt;var&gt;MASK&lt;/var&gt; is present, only the elements for which &lt;var&gt;MASK&lt;/var&gt; is &lt;code&gt;.TRUE.&lt;/code&gt; are considered. If the array has zero size, or all of the elements of &lt;var&gt;MASK&lt;/var&gt; are &lt;code&gt;.FALSE.&lt;/code&gt;, then the result is &lt;code&gt;-HUGE(ARRAY)&lt;/code&gt; if &lt;var&gt;ARRAY&lt;/var&gt; is numeric, or a string of nulls if &lt;var&gt;ARRAY&lt;/var&gt; is of character type.</source>
          <target state="translated">配列値の要素の最大値を決定します &lt;var&gt;DIM&lt;/var&gt; 引数が指定されている場合は、配列の各行に沿った &lt;var&gt;DIM&lt;/var&gt; 方向の最大値を決定します。 &lt;var&gt;MASK&lt;/var&gt; が存在する場合、 &lt;var&gt;MASK&lt;/var&gt; が &lt;code&gt;.TRUE.&lt;/code&gt; である要素のみ。考えられています。配列のサイズがゼロの場合、または &lt;var&gt;MASK&lt;/var&gt; のすべての要素が &lt;code&gt;.FALSE.&lt;/code&gt; 、その後、結果は &lt;code&gt;-HUGE(ARRAY)&lt;/code&gt; 場合 &lt;var&gt;ARRAY&lt;/var&gt; があればヌル文字列が数値である、または &lt;var&gt;ARRAY&lt;/var&gt; が文字型です。</target>
        </trans-unit>
        <trans-unit id="2fecbe4ac0bbb4ab6b9c4d0b6fa23ff44fce1ad1" translate="yes" xml:space="preserve">
          <source>Determines the minimum value of the elements in an array value, or, if the &lt;var&gt;DIM&lt;/var&gt; argument is supplied, determines the minimum value along each row of the array in the &lt;var&gt;DIM&lt;/var&gt; direction. If &lt;var&gt;MASK&lt;/var&gt; is present, only the elements for which &lt;var&gt;MASK&lt;/var&gt; is &lt;code&gt;.TRUE.&lt;/code&gt; are considered. If the array has zero size, or all of the elements of &lt;var&gt;MASK&lt;/var&gt; are &lt;code&gt;.FALSE.&lt;/code&gt;, then the result is &lt;code&gt;HUGE(ARRAY)&lt;/code&gt; if &lt;var&gt;ARRAY&lt;/var&gt; is numeric, or a string of &lt;code&gt;CHAR(255)&lt;/code&gt; characters if &lt;var&gt;ARRAY&lt;/var&gt; is of character type.</source>
          <target state="translated">配列値の要素の最小値を決定します &lt;var&gt;DIM&lt;/var&gt; 引数が指定されている場合は、配列の各行に沿った &lt;var&gt;DIM&lt;/var&gt; 方向の最小値を決定します。 &lt;var&gt;MASK&lt;/var&gt; が存在する場合、 &lt;var&gt;MASK&lt;/var&gt; が &lt;code&gt;.TRUE.&lt;/code&gt; である要素のみ。考えられています。配列のサイズがゼロの場合、または &lt;var&gt;MASK&lt;/var&gt; のすべての要素が &lt;code&gt;.FALSE.&lt;/code&gt; 、その後、結果は &lt;code&gt;HUGE(ARRAY)&lt;/code&gt; 場合は &lt;var&gt;ARRAY&lt;/var&gt; は、数値、または文字列である &lt;code&gt;CHAR(255)&lt;/code&gt; 場合、文字 &lt;var&gt;ARRAY&lt;/var&gt; は、文字型です。</target>
        </trans-unit>
        <trans-unit id="19ab302149887d93a9aa7e018bf921d95d86c6fc" translate="yes" xml:space="preserve">
          <source>Determines the shape of an array.</source>
          <target state="translated">配列の形状を決定します。</target>
        </trans-unit>
        <trans-unit id="abe8951f4889f667a0c3a629889daaf32fc240b7" translate="yes" xml:space="preserve">
          <source>Determines whether an integral is a bitwise greater than another.</source>
          <target state="translated">積分がビット単位で他のものより大きいかどうかを判定します。</target>
        </trans-unit>
        <trans-unit id="4da029268431fb07f97b1b75eff7ac20aebdaca3" translate="yes" xml:space="preserve">
          <source>Determines whether an integral is a bitwise greater than or equal to another.</source>
          <target state="translated">積分がビット単位で別のビットより大きいか等しくないかを判定します。</target>
        </trans-unit>
        <trans-unit id="b5c006aa4c1f3b9564c14c8fc3c67c986a9cf692" translate="yes" xml:space="preserve">
          <source>Determines whether an integral is a bitwise less than another.</source>
          <target state="translated">積分が他のものよりビット単位で小さいかどうかを判定します。</target>
        </trans-unit>
        <trans-unit id="351f8a26dbbdeaf5586224ab2f8686ce19a5505c" translate="yes" xml:space="preserve">
          <source>Determines whether an integral is a bitwise less than or equal to another.</source>
          <target state="translated">積分がビット単位で別のビットより小さいか等しくないかを判定します。</target>
        </trans-unit>
        <trans-unit id="ed7fa27530af04a18ec9c6571a7c85db7fda81d7" translate="yes" xml:space="preserve">
          <source>Determines whether an optional dummy argument is present.</source>
          <target state="translated">オプションのダミー引数が存在するかどうかを判定します。</target>
        </trans-unit>
        <trans-unit id="b60d333f342eb77850694efb101c6842f30ec6fd" translate="yes" xml:space="preserve">
          <source>Determines whether one string is lexically greater than another string, where the two strings are interpreted as containing ASCII character codes. If the String A and String B are not the same length, the shorter is compared as if spaces were appended to it to form a value that has the same length as the longer.</source>
          <target state="translated">ある文字列が別の文字列よりも字句的に大きいかどうかを判定します。文字列Aと文字列Bが同じ長さでない場合、短い方の文字列は、長い方の文字列と同じ長さの値を形成するためにスペースが追加されたかのように比較されます。</target>
        </trans-unit>
        <trans-unit id="7bb9c5d73acc9af457d47ecebc4935665189144f" translate="yes" xml:space="preserve">
          <source>Determines whether one string is lexically greater than or equal to another string, where the two strings are interpreted as containing ASCII character codes. If the String A and String B are not the same length, the shorter is compared as if spaces were appended to it to form a value that has the same length as the longer.</source>
          <target state="translated">ある文字列が別の文字列よりも大きいか等しいかを判定します。文字列Aと文字列Bが同じ長さでない場合、短い方の文字列は、長い方の文字列と同じ長さの値を形成するためにスペースが追加されたかのように比較されます。</target>
        </trans-unit>
        <trans-unit id="54cc2eddda49a9802234158a557e7ef28b78ff84" translate="yes" xml:space="preserve">
          <source>Determines whether one string is lexically less than another string, where the two strings are interpreted as containing ASCII character codes. If the String A and String B are not the same length, the shorter is compared as if spaces were appended to it to form a value that has the same length as the longer.</source>
          <target state="translated">ある文字列が別の文字列よりも字句的に小さいかどうかを判定します。文字列Aと文字列Bが同じ長さでない場合、短い方の文字列は、長い方の文字列と同じ長さの値を形成するためにスペースが追加されたかのように比較されます。</target>
        </trans-unit>
        <trans-unit id="0d2382892a7aed218e63d9861861c9862f61fa7f" translate="yes" xml:space="preserve">
          <source>Determines whether one string is lexically less than or equal to another string, where the two strings are interpreted as containing ASCII character codes. If the String A and String B are not the same length, the shorter is compared as if spaces were appended to it to form a value that has the same length as the longer.</source>
          <target state="translated">ある文字列が他の文字列よりも字句的に小さいか、または等しいかを判断します。文字列Aと文字列Bが同じ長さでない場合、短い方の文字列は、長い方の文字列と同じ長さの値を形成するためにスペースが追加されたかのように比較されます。</target>
        </trans-unit>
        <trans-unit id="7c9f0f8d9fcf58e3b112ecdbab5210f6478886d4" translate="yes" xml:space="preserve">
          <source>Device ID</source>
          <target state="translated">デバイスアイディー</target>
        </trans-unit>
        <trans-unit id="f710acdf8c3a36b577ab367527e400e4e4519a38" translate="yes" xml:space="preserve">
          <source>Directory Options</source>
          <target state="translated">ディレクトリオプション</target>
        </trans-unit>
        <trans-unit id="bc705c6be6645c0cdb464a3dc08ed28c834f4276" translate="yes" xml:space="preserve">
          <source>Directory for scratch files</source>
          <target state="translated">スクラッチファイルのディレクトリ</target>
        </trans-unit>
        <trans-unit id="1f6f5a494170050dd5a2071ec1d37e8314afdc9f" translate="yes" xml:space="preserve">
          <source>Disable coarray support; using coarray declarations and image-control statements will produce a compile-time error. (Default)</source>
          <target state="translated">Co-Array サポートを無効にします。 Co-Array 宣言や image-control ステートメントを使うと、コンパイル時エラーが発生します。(デフォルト)</target>
        </trans-unit>
        <trans-unit id="19cf4c749798adbcfdd0ce5247951e55e8259eac" translate="yes" xml:space="preserve">
          <source>Disable range checking on results of simplification of constant expressions during compilation. For example, GNU Fortran will give an error at compile time when simplifying &lt;code&gt;a = 1. / 0&lt;/code&gt;. With this option, no error will be given and &lt;code&gt;a&lt;/code&gt; will be assigned the value &lt;code&gt;+Infinity&lt;/code&gt;. If an expression evaluates to a value outside of the relevant range of [&lt;code&gt;-HUGE()&lt;/code&gt;:&lt;code&gt;HUGE()&lt;/code&gt;], then the expression will be replaced by &lt;code&gt;-Inf&lt;/code&gt; or &lt;code&gt;+Inf&lt;/code&gt; as appropriate. Similarly, &lt;code&gt;DATA i/Z'FFFFFFFF'/&lt;/code&gt; will result in an integer overflow on most systems, but with</source>
          <target state="translated">コンパイル中の定数式の簡略化の結果に対する範囲チェックを無効にします。たとえば、GNU Fortranは &lt;code&gt;a = 1. / 0&lt;/code&gt; 簡略化すると、コンパイル時にエラーを出します。このオプションを使用すると、エラーは発生せず、 &lt;code&gt;a&lt;/code&gt; には値 &lt;code&gt;+Infinity&lt;/code&gt; が割り当てられます。式が[ &lt;code&gt;-HUGE()&lt;/code&gt; ： &lt;code&gt;HUGE()&lt;/code&gt; ] の関連する範囲外の値に評価される場合、式は &lt;code&gt;-Inf&lt;/code&gt; または &lt;code&gt;+Inf&lt;/code&gt; で適切に置き換えられます。同様に、 &lt;code&gt;DATA i/Z'FFFFFFFF'/&lt;/code&gt; は、ほとんどのシステムで整数オーバーフローを引き起こしますが、</target>
        </trans-unit>
        <trans-unit id="3efa8677a2d2f1a55a04bcc71e834b85911153df" translate="yes" xml:space="preserve">
          <source>Distribute a value from a given image to all other images in the team. Has to be called collectively.</source>
          <target state="translated">与えられた画像の値を、チーム内の他のすべての画像に分配します。まとめて呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="54067347787aab9ba7be50edb99e0c22c0febc0d" translate="yes" xml:space="preserve">
          <source>Do not buffer I/O for all units.</source>
          <target state="translated">すべてのユニットのI/Oをバッファリングしないでください。</target>
        </trans-unit>
        <trans-unit id="6e00f4c62b721970c5323850fda6638ab16d5398" translate="yes" xml:space="preserve">
          <source>Do not buffer I/O for preconnected units.</source>
          <target state="translated">プリコネクテッドユニットのI/Oをバッファリングしないでください。</target>
        </trans-unit>
        <trans-unit id="61bd4083e901aa03be2fec075c5a07232b9c93d4" translate="yes" xml:space="preserve">
          <source>Do not discard comments, including during macro expansion. This is like</source>
          <target state="translated">マクロ展開中も含めて、コメントを破棄しない。のようなものです。</target>
        </trans-unit>
        <trans-unit id="094e1651c852304b7a16e16ed4d0185ecd59b26b" translate="yes" xml:space="preserve">
          <source>Do not discard comments. All comments are passed through to the output file, except for comments in processed directives, which are deleted along with the directive.</source>
          <target state="translated">コメントは破棄しないでください。すべてのコメントは出力ファイルに渡されますが、処理されたディレクティブのコメントは ディレクティブと一緒に削除されます。</target>
        </trans-unit>
        <trans-unit id="5cf0a2e01f314e50aac688fcc0637765ffe183d2" translate="yes" xml:space="preserve">
          <source>Do not predefine any system-specific or GCC-specific macros. The standard predefined macros remain defined.</source>
          <target state="translated">システム固有のマクロや GCC 固有のマクロを事前に定義しないでください。標準の定義済みマクロは定義されたままです。</target>
        </trans-unit>
        <trans-unit id="222aa59b95b5ee84de37b060585fd5b26c0f9339" translate="yes" xml:space="preserve">
          <source>Do not search the standard system directories for header files. Only the directories you have specified with</source>
          <target state="translated">標準システムのディレクトリでヘッダファイルを検索しないでください。ヘッダファイルを検索しないのは</target>
        </trans-unit>
        <trans-unit id="ecd0231af8e56a99514d9c79420e07924f53d15e" translate="yes" xml:space="preserve">
          <source>Do not transform names of entities specified in the Fortran source file by appending underscores to them.</source>
          <target state="translated">Fortranソースファイルで指定されたエンティティの名前にアンダースコアを付加して変換しないでください。</target>
        </trans-unit>
        <trans-unit id="e2689b4b2ff06ffcb5bd466d619321be4e14dc1e" translate="yes" xml:space="preserve">
          <source>Does not return anything.</source>
          <target state="translated">何も返ってこない。</target>
        </trans-unit>
        <trans-unit id="296a7b0727ac5f4d9354c9f55737697f1f04594d" translate="yes" xml:space="preserve">
          <source>Does not return.</source>
          <target state="translated">戻りません。</target>
        </trans-unit>
        <trans-unit id="03ce16978c5be7e187be5ba279de9c8f71e851e8" translate="yes" xml:space="preserve">
          <source>Dot product function</source>
          <target state="translated">ドット積機能</target>
        </trans-unit>
        <trans-unit id="88f7a9944fcc4d921b543327df1c52badf20d41c" translate="yes" xml:space="preserve">
          <source>Double complex conversion function</source>
          <target state="translated">複素変換機能</target>
        </trans-unit>
        <trans-unit id="f83fd22d6b6fbec2f57c07ff09dbbb59b9d3a0e1" translate="yes" xml:space="preserve">
          <source>Double precision conversion function</source>
          <target state="translated">倍精度変換機能</target>
        </trans-unit>
        <trans-unit id="3b3d36ddeed7452d6c59af30dc2c050a5b361a21" translate="yes" xml:space="preserve">
          <source>Double product function</source>
          <target state="translated">ダブルプロダクト機能</target>
        </trans-unit>
        <trans-unit id="f85ca61beb82ce6136013c70693d3a44b1384068" translate="yes" xml:space="preserve">
          <source>Double real part function</source>
          <target state="translated">倍実数部関数</target>
        </trans-unit>
        <trans-unit id="7fe18e97bbdf405bd4e76fe16f36c526e30dda47" translate="yes" xml:space="preserve">
          <source>During library initialization, the C &lt;code&gt;getenv&lt;/code&gt; function is used, which need not be thread-safe. Similarly, the &lt;code&gt;getenv&lt;/code&gt; function is used to implement the &lt;code&gt;GET_ENVIRONMENT_VARIABLE&lt;/code&gt; and &lt;code&gt;GETENV&lt;/code&gt; intrinsics. It is the responsibility of the user to ensure that the environment is not being updated concurrently when any of these actions are taking place.</source>
          <target state="translated">ライブラリの初期化中に、Cの &lt;code&gt;getenv&lt;/code&gt; 関数が使用されます。これはスレッドセーフである必要はありません。同様に、 &lt;code&gt;getenv&lt;/code&gt; 関数は、 &lt;code&gt;GET_ENVIRONMENT_VARIABLE&lt;/code&gt; および &lt;code&gt;GETENV&lt;/code&gt; 組み込み関数を実装するために使用されます。これらのアクションが実行されているときに環境が同時に更新されないようにするのは、ユーザーの責任です。</target>
        </trans-unit>
        <trans-unit id="068e594fc0356dbd1518222cd2a44af7284e39a5" translate="yes" xml:space="preserve">
          <source>Dynamic memory allocation function</source>
          <target state="translated">動的メモリ割り当て機能</target>
        </trans-unit>
        <trans-unit id="6a88e83c73d82668260a3fe86e1f0107b965b7fe" translate="yes" xml:space="preserve">
          <source>EXTENDS_TYPE_OF</source>
          <target state="translated">EXTENDS_TYPE_OF</target>
        </trans-unit>
        <trans-unit id="5965dceb4597ee13e7c59f1b7471b162a8c98fb7" translate="yes" xml:space="preserve">
          <source>Elapsed time in seconds since the last invocation or since the start of program execution if not called before.</source>
          <target state="translated">最後に呼び出されてからの経過時間、または以前に呼び出されていない場合はプログラムの実行開始からの経過時間を秒単位で表示します。</target>
        </trans-unit>
        <trans-unit id="a6ac4fc06ef735a5c94b88572231f560830c5521" translate="yes" xml:space="preserve">
          <source>Elapsed time in seconds since the start of program execution.</source>
          <target state="translated">プログラム実行開始からの経過時間(秒)。</target>
        </trans-unit>
        <trans-unit id="9637fbbf70583956dd126514d116f420b0c4657f" translate="yes" xml:space="preserve">
          <source>Elemental function</source>
          <target state="translated">元素機能</target>
        </trans-unit>
        <trans-unit id="a53a76efbf024deae270dc5165464427c1b1e531" translate="yes" xml:space="preserve">
          <source>Elemental function, except for the transformational function &lt;code&gt;BESSEL_JN(N1, N2, X)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BESSEL_JN(N1, N2, X)&lt;/code&gt; 関数（変換関数BESSEL_JN（N1、N2、X）を除く）</target>
        </trans-unit>
        <trans-unit id="fc148c745e81ab8bb6f2291418f9072fdf6049da" translate="yes" xml:space="preserve">
          <source>Elemental function, except for the transformational function &lt;code&gt;BESSEL_YN(N1, N2, X)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BESSEL_YN(N1, N2, X)&lt;/code&gt; 関数（変換関数BESSEL_YN（N1、N2、X）を除く）</target>
        </trans-unit>
        <trans-unit id="a6181d67a5ad4436ac9a8cb957bd2eb3684c8e9b" translate="yes" xml:space="preserve">
          <source>Elemental subroutine</source>
          <target state="translated">元素サブルーチン</target>
        </trans-unit>
        <trans-unit id="8bbf81520945437612d4d7fd6d97b20d12c8c0c3" translate="yes" xml:space="preserve">
          <source>Enable B/I/J/K kind variants of existing integer functions (e.g. BIAND, IIAND, JIAND, etc...). For a complete list of intrinsics see the full documentation.</source>
          <target state="translated">既存の整数関数 (BIAND、IIAND、JIAND など)の B/I/J/K 種類のバリアントを有効にします。内部構造の完全なリストについては、完全なドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="a67449d4e64250c3a4f02022c303f46464c42f58" translate="yes" xml:space="preserve">
          <source>Enable DEC &lt;code&gt;STRUCTURE&lt;/code&gt; and &lt;code&gt;RECORD&lt;/code&gt; as well as &lt;code&gt;UNION&lt;/code&gt;, &lt;code&gt;MAP&lt;/code&gt;, and dot (&amp;rsquo;.&amp;rsquo;) as a member separator (in addition to &amp;rsquo;%&amp;rsquo;). This is provided for compatibility only; Fortran 90 derived types should be used instead where possible.</source>
          <target state="translated">12月の有効 &lt;code&gt;STRUCTURE&lt;/code&gt; と &lt;code&gt;RECORD&lt;/code&gt; ならびに &lt;code&gt;UNION&lt;/code&gt; 、 &lt;code&gt;MAP&lt;/code&gt; を、ドット（「」）メンバーセパレータとして（ 『％』に加えて）。これは互換性のためにのみ提供されています。可能な場合は、代わりにFortran 90派生型を使用してください。</target>
        </trans-unit>
        <trans-unit id="d974b2ad85b66558365ce154dc8407f7e5e07560" translate="yes" xml:space="preserve">
          <source>Enable DEC-style STATIC and AUTOMATIC attributes to explicitly specify the storage of variables and other objects.</source>
          <target state="translated">DECスタイルのSTATIC属性とAUTOMATIC属性を有効にして、変数やその他のオブジェクトの格納場所を明示的に指定します。</target>
        </trans-unit>
        <trans-unit id="5837ae70c83ed6e5a8da9fd573ee8f0b4616d62c" translate="yes" xml:space="preserve">
          <source>Enable all run-time test of</source>
          <target state="translated">のすべてのランタイムテストを有効にします。</target>
        </trans-unit>
        <trans-unit id="816ec934d7837e44e83c9b6817eec868219c243f" translate="yes" xml:space="preserve">
          <source>Enable and customize preprocessing.</source>
          <target state="translated">前処理を有効にしてカスタマイズします。</target>
        </trans-unit>
        <trans-unit id="2be02fef4451c03fff215e0ca3f3405bfc0f57fd" translate="yes" xml:space="preserve">
          <source>Enable generation of linemarkers in the preprocessor output that will let the compiler know the current working directory at the time of preprocessing. When this option is enabled, the preprocessor will emit, after the initial linemarker, a second linemarker with the current working directory followed by two slashes. GCC will use this directory, when it is present in the preprocessed input, as the directory emitted as the current working directory in some debugging information formats. This option is implicitly enabled if debugging information is enabled, but this can be inhibited with the negated form</source>
          <target state="translated">プリプロセッサの出力にラインマーカーを生成して、プリプロセッサの実行時に現在の作業ディレクトリをコンパイラに知らせることを有効にします。このオプションを有効にすると、プリプロセッサは、最初のラインマーカーの後に、現在の作業ディレクトリの後に 2 つのスラッシュが続く 2 番目のラインマーカーを出力します。GCC は、前処理された入力の中にこのディレクトリが存在する場合、いくつかのデバッグ情報フォーマットでは、このディレクトリをカレントの作業ディレクトリとしてエミュレートするディレクトリとして使用します。このオプションは、デバッグ情報が有効な場合に暗黙的に有効になりますが、否定形の</target>
        </trans-unit>
        <trans-unit id="97f09c22fecc360be3a32cced5b8225a4d33235b" translate="yes" xml:space="preserve">
          <source>Enable generation of run-time checks for array subscripts and against the declared minimum and maximum values. It also checks array indices for assumed and deferred shape arrays against the actual allocated bounds and ensures that all string lengths are equal for character array constructors without an explicit typespec.</source>
          <target state="translated">配列の添え字,宣言された最小値および最大値に対するランタイムチェックの生成を有効にします.また、想定される形状配列や遅延された形状配列の配列インデックスを実際に割り当てられた境界と比較してチェックし、明示的な型指定がない文字配列コンストラクタではすべての文字列の長さが等しいことを保証します。</target>
        </trans-unit>
        <trans-unit id="804f8ad05ca48e7309b108637b54bec71b75e2bd" translate="yes" xml:space="preserve">
          <source>Enable generation of run-time checks for invalid modification of loop iteration variables.</source>
          <target state="translated">ループ反復変数の不正な変更に対するランタイムチェックの生成を有効にします。</target>
        </trans-unit>
        <trans-unit id="640402594d74f18dabbe55ab4fea6ebd9ada4e45" translate="yes" xml:space="preserve">
          <source>Enable generation of run-time checks for memory allocation. Note: This option does not affect explicit allocations using the &lt;code&gt;ALLOCATE&lt;/code&gt; statement, which will be always checked.</source>
          <target state="translated">メモリ割り当てのランタイムチェックの生成を有効にします。注：このオプションは、常にチェックされる &lt;code&gt;ALLOCATE&lt;/code&gt; ステートメントを使用した明示的な割り当てには影響しません。</target>
        </trans-unit>
        <trans-unit id="c1761460f2bc298733fa3b410d9b4ee3c5b791f4" translate="yes" xml:space="preserve">
          <source>Enable generation of run-time checks for pointers and allocatables.</source>
          <target state="translated">ポインタとアロカッタブルのランタイムチェックの生成を有効にします。</target>
        </trans-unit>
        <trans-unit id="7d202d71df64ce14bad49ccba79ed3f4f93ab0f9" translate="yes" xml:space="preserve">
          <source>Enable generation of run-time checks for recursively called subroutines and functions which are not marked as recursive. See also</source>
          <target state="translated">再帰的に呼び出されたサブルーチンや再帰的にマークされていない関数のランタイムチェックの生成を有効にします。関連項目</target>
        </trans-unit>
        <trans-unit id="fe19993cf2b833166cbd7876fa50e498a89e8f85" translate="yes" xml:space="preserve">
          <source>Enable legacy math intrinsics such as COTAN and degree-valued trigonometric functions (e.g. TAND, ATAND, etc...) for compatability with older code.</source>
          <target state="translated">古いコードとの互換性を保つために、COTANや度付き三角関数(TAND、ATANDなど)などのレガシーな数学の本質を有効にします。</target>
        </trans-unit>
        <trans-unit id="fd8c6e2e4f52eeb216da79d6d6023ac60af0d79c" translate="yes" xml:space="preserve">
          <source>Enable preprocessing. The preprocessor is automatically invoked if the file extension is</source>
          <target state="translated">前処理を有効にします。ファイルの拡張子が</target>
        </trans-unit>
        <trans-unit id="be660567d4e4ccd0f86d15658d9ef4c67943e4b4" translate="yes" xml:space="preserve">
          <source>Enable special treatment for lines beginning with &lt;code&gt;d&lt;/code&gt; or &lt;code&gt;D&lt;/code&gt; in fixed form sources. If the</source>
          <target state="translated">固定形式のソースで、 &lt;code&gt;d&lt;/code&gt; または &lt;code&gt;D&lt;/code&gt; で始まる行の特別な処理を有効にします。もし</target>
        </trans-unit>
        <trans-unit id="5f05cf07b5dee288bd26b3e8429a3e173788ec9d" translate="yes" xml:space="preserve">
          <source>Enable the Cray pointer extension, which provides C-like pointer functionality.</source>
          <target state="translated">C ライクなポインタ機能を提供する Cray ポインタ拡張機能を有効にします。</target>
        </trans-unit>
        <trans-unit id="fd891f5141276d933a037740fec3d6f298095c33" translate="yes" xml:space="preserve">
          <source>Enable the OpenACC extensions. This includes OpenACC &lt;code&gt;!$acc&lt;/code&gt; directives in free form and &lt;code&gt;c$acc&lt;/code&gt;, &lt;code&gt;*$acc&lt;/code&gt; and &lt;code&gt;!$acc&lt;/code&gt; directives in fixed form, &lt;code&gt;!$&lt;/code&gt; conditional compilation sentinels in free form and &lt;code&gt;c$&lt;/code&gt;, &lt;code&gt;*$&lt;/code&gt; and &lt;code&gt;!$&lt;/code&gt; sentinels in fixed form, and when linking arranges for the OpenACC runtime library to be linked in.</source>
          <target state="translated">OpenACC拡張機能を有効にします。これには、自由形式のOpenACC &lt;code&gt;!$acc&lt;/code&gt; ディレクティブと固定形式の &lt;code&gt;c$acc&lt;/code&gt; 、 &lt;code&gt;*$acc&lt;/code&gt; および &lt;code&gt;!$acc&lt;/code&gt; ディレクティブ、自由形式の &lt;code&gt;!$&lt;/code&gt; 条件付きコンパイルセンチネル、固定形式の &lt;code&gt;c$&lt;/code&gt; 、 &lt;code&gt;*$&lt;/code&gt; と &lt;code&gt;!$&lt;/code&gt; センチネルが含まれます。リンクすると、OpenACCランタイムライブラリがリンクされるように調整されます。</target>
        </trans-unit>
        <trans-unit id="c4491cc16fe42c88d0515217c3bbc1be5ced4263" translate="yes" xml:space="preserve">
          <source>Enable the OpenMP extensions. This includes OpenMP &lt;code&gt;!$omp&lt;/code&gt; directives in free form and &lt;code&gt;c$omp&lt;/code&gt;, &lt;code&gt;*$omp&lt;/code&gt; and &lt;code&gt;!$omp&lt;/code&gt; directives in fixed form, &lt;code&gt;!$&lt;/code&gt; conditional compilation sentinels in free form and &lt;code&gt;c$&lt;/code&gt;, &lt;code&gt;*$&lt;/code&gt; and &lt;code&gt;!$&lt;/code&gt; sentinels in fixed form, and when linking arranges for the OpenMP runtime library to be linked in. The option</source>
          <target state="translated">OpenMP拡張機能を有効にします。これには、自由形式のOpenMP &lt;code&gt;!$omp&lt;/code&gt; ディレクティブと固定形式の &lt;code&gt;c$omp&lt;/code&gt; 、 &lt;code&gt;*$omp&lt;/code&gt; および &lt;code&gt;!$omp&lt;/code&gt; ディレクティブ、自由形式の &lt;code&gt;!$&lt;/code&gt; 条件付きコンパイルセンチネル、固定形式の &lt;code&gt;c$&lt;/code&gt; 、 &lt;code&gt;*$&lt;/code&gt; および &lt;code&gt;!$&lt;/code&gt; センチネルが含まれます。リンクすると、OpenMPランタイムライブラリがリンクされるようになります。オプション</target>
        </trans-unit>
        <trans-unit id="3df0ff791aff36a80d556d2b67a1e152b709663d" translate="yes" xml:space="preserve">
          <source>Enable the generation of run-time checks; the argument shall be a comma-delimited list of the following keywords. Prefixing a check with</source>
          <target state="translated">実行時チェックの生成を有効にします。引数には、以下のキーワードのカンマ区切りのリストを指定します。チェックの前に</target>
        </trans-unit>
        <trans-unit id="f55014936e9e5689911fd55434a6710cbcd8de5a" translate="yes" xml:space="preserve">
          <source>Enables commonly used warning options pertaining to usage that we recommend avoiding and that we believe are easy to avoid. This currently includes</source>
          <target state="translated">避けることを推奨し、避けるのが簡単だと思われる使用法に関連して、一般的に使用されている警告オプションを有効にします。これには現在以下のものが含まれています。</target>
        </trans-unit>
        <trans-unit id="c51b6a9f08bb1378874e4f235c5241ecde89a357" translate="yes" xml:space="preserve">
          <source>Enables run-time checking. Possible values are (bitwise or-ed): GFC_RTCHECK_BOUNDS (1), GFC_RTCHECK_ARRAY_TEMPS (2), GFC_RTCHECK_RECURSION (4), GFC_RTCHECK_DO (16), GFC_RTCHECK_POINTER (32). Default: disabled.</source>
          <target state="translated">ランタイムチェックを有効にします。可能な値は、(ビット単位で、または、リードされた値)です。gfc_rtcheck_bounds (1),gfc_rtcheck_array_temps (2),gfc_rtcheck_recursion (4),gfc_rtcheck_do (16),gfc_rtcheck_pointer (32)。デフォルトは無効です。</target>
        </trans-unit>
        <trans-unit id="c4bb5e77bb32879c9b1139092395e91ea1a9638d" translate="yes" xml:space="preserve">
          <source>Enables some warning options for usages of language features which may be problematic. This currently includes</source>
          <target state="translated">問題のある可能性のある言語機能の使用に対するいくつかの警告オプションを有効にします。現在のところ、これには以下のものが含まれます。</target>
        </trans-unit>
        <trans-unit id="736b202b96ccbcb2d419ba178f9f6671142976d0" translate="yes" xml:space="preserve">
          <source>End-off shift elements of an array</source>
          <target state="translated">配列のエンドオフシフト要素</target>
        </trans-unit>
        <trans-unit id="717bd7ce3ae71c32074ca2e4fdd25ba9275aebf4" translate="yes" xml:space="preserve">
          <source>Endian conversion, possible values: GFC_CONVERT_NATIVE (0, default), GFC_CONVERT_SWAP (1), GFC_CONVERT_BIG (2), GFC_CONVERT_LITTLE (3).</source>
          <target state="translated">エンディアン変換、可能な値。GFC_CONVERT_NATIVE(0、デフォルト)、GFC_CONVERT_SWAP(1)、GFC_CONVERT_BIG(2)、GFC_CONVERT_LITTLE(3)。</target>
        </trans-unit>
        <trans-unit id="679b6834d5e74ac1addbcfb12cf181035a208ca4" translate="yes" xml:space="preserve">
          <source>Enhance test coverage by forcing most forall assignments to use temporary.</source>
          <target state="translated">ほとんどのフォーオールの割り当てを一時的に使用するように強制することで、テストカバレッジを向上させます。</target>
        </trans-unit>
        <trans-unit id="055ca553c9f111d93d8b8e040bb84e9ef4cc622c" translate="yes" xml:space="preserve">
          <source>Entering &amp;lsquo;</source>
          <target state="translated">を入力しています</target>
        </trans-unit>
        <trans-unit id="4d76ce6c27fdf6c6d1b5b427c5f1536a979fd7d5" translate="yes" xml:space="preserve">
          <source>Entities marked &lt;code&gt;AUTOMATIC&lt;/code&gt; will be stack automatic whenever possible. &lt;code&gt;AUTOMATIC&lt;/code&gt; is the default for local variables smaller than</source>
          <target state="translated">&lt;code&gt;AUTOMATIC&lt;/code&gt; とマークされたエンティティは、可能な場合はいつでも自動的にスタックされます。 &lt;code&gt;AUTOMATIC&lt;/code&gt; は、より小さいローカル変数のデフォルトです</target>
        </trans-unit>
        <trans-unit id="95e1752eccc38d5ee799e62cfff0d6c30ca5ac2d" translate="yes" xml:space="preserve">
          <source>Environment Options</source>
          <target state="translated">環境オプション</target>
        </trans-unit>
        <trans-unit id="822503b7ce12eca3400e8db03d118b6a47883ce8" translate="yes" xml:space="preserve">
          <source>Environment variables that affect &lt;code&gt;gfortran&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gfortran&lt;/code&gt; に影響を与える環境変数。</target>
        </trans-unit>
        <trans-unit id="110c7d0804a6049443bac6b51f71fe7cbaddcc42" translate="yes" xml:space="preserve">
          <source>Epsilon function</source>
          <target state="translated">エプシロン関数</target>
        </trans-unit>
        <trans-unit id="514b47930d45f4f8aa313dd4016aaa2289bef675" translate="yes" xml:space="preserve">
          <source>Error and Warning Options</source>
          <target state="translated">エラーと警告のオプション</target>
        </trans-unit>
        <trans-unit id="a623c8e1a198390969227d2d0b456f83bf23e21d" translate="yes" xml:space="preserve">
          <source>Error function</source>
          <target state="translated">エラー関数</target>
        </trans-unit>
        <trans-unit id="1be2857ae204742673930b5b6e7e5e06a562e515" translate="yes" xml:space="preserve">
          <source>Error termination with exit code</source>
          <target state="translated">終了コードによるエラー終了</target>
        </trans-unit>
        <trans-unit id="71a396c9bc1709f18366cff9ba8cbf4fdded6057" translate="yes" xml:space="preserve">
          <source>Error termination with string</source>
          <target state="translated">文字列によるエラー終了</target>
        </trans-unit>
        <trans-unit id="d334fd577103a199bfd3f2f850942b0b138efdac" translate="yes" xml:space="preserve">
          <source>Errors are diagnostic messages that report that the GNU Fortran compiler cannot compile the relevant piece of source code. The compiler will continue to process the program in an attempt to report further errors to aid in debugging, but will not produce any compiled output.</source>
          <target state="translated">エラーは、GNU Fortranコンパイラが関連するソースコードをコンパイルできないことを報告する診断メッセージです。コンパイラはデバッグを助けるためにさらなるエラーを報告するためにプログラムの処理を続けますが、コンパイルされた出力は生成されません。</target>
        </trans-unit>
        <trans-unit id="d106371f92338f637fe47f23a332ff1ebd2419d9" translate="yes" xml:space="preserve">
          <source>Euclidean distance function</source>
          <target state="translated">ユークリッド距離関数</target>
        </trans-unit>
        <trans-unit id="e9f121bde814d9377bcef33277dedf3bb786b52d" translate="yes" xml:space="preserve">
          <source>Euclidean vector norm</source>
          <target state="translated">ユークリッドベクトルノルム</target>
        </trans-unit>
        <trans-unit id="c348ee0cf6e63ecd0e206f04f9116a4e8293380b" translate="yes" xml:space="preserve">
          <source>Even if you are doing mixed-language programming, it is very likely that you do not need to know or use the information in this section. Since it is about the internal structure of GNU Fortran, it may also change in GCC minor releases.</source>
          <target state="translated">混合言語プログラミングをしている場合でも、このセクションの情報を知っていたり、使ったりする必要はない可能性が高いです。GNU Fortranの内部構造に関するものなので、GCCのマイナーリリースでも変わるかもしれません。</target>
        </trans-unit>
        <trans-unit id="8c2267fb1e94c781d17e9e2745a19c2b87d07f8f" translate="yes" xml:space="preserve">
          <source>Events (&lt;code&gt;EVENT POST&lt;/code&gt;, &lt;code&gt;EVENT WAIT&lt;/code&gt;, &lt;code&gt;EVENT_QUERY&lt;/code&gt;)</source>
          <target state="translated">イベント（ &lt;code&gt;EVENT POST&lt;/code&gt; 、 &lt;code&gt;EVENT WAIT&lt;/code&gt; 、 &lt;code&gt;EVENT_QUERY&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="f03fce1e89651559dc4fef62427b73963e4b51a5" translate="yes" xml:space="preserve">
          <source>Example code for &lt;code&gt;csh&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;csh&lt;/code&gt; のコード例：</target>
        </trans-unit>
        <trans-unit id="3ca52a83bd82617c4b879929d630469ff282b466" translate="yes" xml:space="preserve">
          <source>Example for &lt;code&gt;sh&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;sh&lt;/code&gt; の例：</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="d7d21fc9aca2bd8ce5b741dc50bbd2f05d8fb0ce" translate="yes" xml:space="preserve">
          <source>Example: Assuming you have a file</source>
          <target state="translated">例を挙げてみます。ファイルがあると仮定して</target>
        </trans-unit>
        <trans-unit id="d2dd30cb8567ddb3d452c6b506347886f72de342" translate="yes" xml:space="preserve">
          <source>Examples of standard-conforming code equivalent to the above example are:</source>
          <target state="translated">上記の例に相当する標準適合コードの例としては、以下のものが挙げられる。</target>
        </trans-unit>
        <trans-unit id="8a18e7062dd7ab6ef5e754f3541ddbcff8268381" translate="yes" xml:space="preserve">
          <source>Examples of valid uses of Hollerith constants:</source>
          <target state="translated">ホレリス定数の有効な使用例。</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="e5b45b3f8e1e7fcadcabc19465055e58ea97b07b" translate="yes" xml:space="preserve">
          <source>Exclusive (write) lock</source>
          <target state="translated">排他的(書き込み)ロック</target>
        </trans-unit>
        <trans-unit id="fe8338e17b2cbe4fe73dbf0c080b9a2560bbd979" translate="yes" xml:space="preserve">
          <source>Execute a shell command</source>
          <target state="translated">シェルコマンドの実行</target>
        </trans-unit>
        <trans-unit id="d2280adbbd397c997cfdecf1073f9d9e51c1e78c" translate="yes" xml:space="preserve">
          <source>Execution time subroutine (or function)</source>
          <target state="translated">実行時間サブルーチン</target>
        </trans-unit>
        <trans-unit id="d72d094032d0fc7b0571382de535733d0fde2b2a" translate="yes" xml:space="preserve">
          <source>Exit the program with status.</source>
          <target state="translated">ステータスで終了します。</target>
        </trans-unit>
        <trans-unit id="5b0c206832dc7ef2660e7877a8f50474947ba66d" translate="yes" xml:space="preserve">
          <source>Expanded namelist reads are permitted. This causes an error if</source>
          <target state="translated">拡張されたネームリストの読み取りが許可されています。これは、以下のような場合にエラーを引き起こします。</target>
        </trans-unit>
        <trans-unit id="72001987a55c3c95306938db75f624e209fdc027" translate="yes" xml:space="preserve">
          <source>Explicit form</source>
          <target state="translated">明示的な形式</target>
        </trans-unit>
        <trans-unit id="de91599a67aa51bfcab657facf2665db23dc5eb8" translate="yes" xml:space="preserve">
          <source>Exponent function</source>
          <target state="translated">指数関数</target>
        </trans-unit>
        <trans-unit id="4f1941c72a58c3dfdbb377e8a0b69218db658e01" translate="yes" xml:space="preserve">
          <source>Exponential function</source>
          <target state="translated">指数関数</target>
        </trans-unit>
        <trans-unit id="3162adee32d3803a3372c5524b8427f0be751f78" translate="yes" xml:space="preserve">
          <source>Exponentially-scaled complementary error function</source>
          <target state="translated">指数的にスケーリングされた相補誤差関数</target>
        </trans-unit>
        <trans-unit id="82b4b0e4204e568cce8f019d876eda0d0fd07bc2" translate="yes" xml:space="preserve">
          <source>Ext.</source>
          <target state="translated">Ext.</target>
        </trans-unit>
        <trans-unit id="659087d3ca23db6ae11e0a43579b5f4a260dda11" translate="yes" xml:space="preserve">
          <source>Extension</source>
          <target state="translated">Extension</target>
        </trans-unit>
        <trans-unit id="d9f5087a226b6b4ca3c6512566b85a862a66a750" translate="yes" xml:space="preserve">
          <source>Extensions to the &lt;code&gt;ALLOCATE&lt;/code&gt; statement, allowing for a type-specification with type parameter and for allocation and initialization from a &lt;code&gt;SOURCE=&lt;/code&gt; expression; &lt;code&gt;ALLOCATE&lt;/code&gt; and &lt;code&gt;DEALLOCATE&lt;/code&gt; optionally return an error message string via &lt;code&gt;ERRMSG=&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ALLOCATE&lt;/code&gt; ステートメントの拡張。タイプパラメータを使用したタイプ指定、および &lt;code&gt;SOURCE=&lt;/code&gt; 式からの割り当てと初期化を可能にします。 &lt;code&gt;ALLOCATE&lt;/code&gt; および &lt;code&gt;DEALLOCATE&lt;/code&gt; は、オプションで &lt;code&gt;ERRMSG=&lt;/code&gt; を介してエラーメッセージ文字列を返します。</target>
        </trans-unit>
        <trans-unit id="c8fd044d83063b270bbe0406d6e7802f9b0b0f33" translate="yes" xml:space="preserve">
          <source>Extensions to the specification and initialization expressions, including the support for intrinsics with real and complex arguments.</source>
          <target state="translated">実引数と複雑な引数を持つ組込み式のサポートを含む、仕様式と初期化式の拡張。</target>
        </trans-unit>
        <trans-unit id="5b12df15e4b3f0f76de287c2988f11a897a181d2" translate="yes" xml:space="preserve">
          <source>F77 and later</source>
          <target state="translated">エフ77以降</target>
        </trans-unit>
        <trans-unit id="ae47a00d0363e43fde2562a3b67f222cc3955326" translate="yes" xml:space="preserve">
          <source>F95 and later</source>
          <target state="translated">エフ95以降</target>
        </trans-unit>
        <trans-unit id="4a9768fab0628379ad61cfc011fe3685fe4972f3" translate="yes" xml:space="preserve">
          <source>FREE</source>
          <target state="translated">FREE</target>
        </trans-unit>
        <trans-unit id="423e40a50eeb9ebcfb0a19115ffe5c3d55e61788" translate="yes" xml:space="preserve">
          <source>FSEEK</source>
          <target state="translated">FSEEK</target>
        </trans-unit>
        <trans-unit id="53551c309ecb38ca2a64866447eb9dcdf64abc08" translate="yes" xml:space="preserve">
          <source>FTELL</source>
          <target state="translated">FTELL</target>
        </trans-unit>
        <trans-unit id="4be42a04bd6aaf55b94d4242d0f631c3aee9225d" translate="yes" xml:space="preserve">
          <source>Failed images (&lt;code&gt;FAIL IMAGE&lt;/code&gt;, &lt;code&gt;IMAGE_STATUS&lt;/code&gt;, &lt;code&gt;FAILED_IMAGES&lt;/code&gt;, &lt;code&gt;STOPPED_IMAGES&lt;/code&gt;)</source>
          <target state="translated">失敗した画像（ &lt;code&gt;FAIL IMAGE&lt;/code&gt; 、 &lt;code&gt;IMAGE_STATUS&lt;/code&gt; 、 &lt;code&gt;FAILED_IMAGES&lt;/code&gt; 、 &lt;code&gt;STOPPED_IMAGES&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a42254df52793c39c2ede39da84f389dca208d33" translate="yes" xml:space="preserve">
          <source>File mode</source>
          <target state="translated">ファイルモード</target>
        </trans-unit>
        <trans-unit id="d8df668120bb484081e760b37513790b01350187" translate="yes" xml:space="preserve">
          <source>File number function</source>
          <target state="translated">ファイル番号機能</target>
        </trans-unit>
        <trans-unit id="c1762107e3ccce4613cb6916b2f5f2f3f490e545" translate="yes" xml:space="preserve">
          <source>File size (bytes)</source>
          <target state="translated">ファイルサイズ(バイト)</target>
        </trans-unit>
        <trans-unit id="4c6cb52df9a645cf10f921a3f31ab2d5a818b1c6" translate="yes" xml:space="preserve">
          <source>Finalization function</source>
          <target state="translated">確定機能</target>
        </trans-unit>
        <trans-unit id="a77e3ade07a6ed30a721049e2e4e1e5b4b59568d" translate="yes" xml:space="preserve">
          <source>Finally, note that enabling any of the</source>
          <target state="translated">最後に</target>
        </trans-unit>
        <trans-unit id="1055921af2b8d34b3b9ae5925fe674ba7247ff53" translate="yes" xml:space="preserve">
          <source>Flush I/O unit(s)</source>
          <target state="translated">フラッシュI/Oユニット</target>
        </trans-unit>
        <trans-unit id="8ad3157a6acceee89fe4a8d67d9b6fced5bcec92" translate="yes" xml:space="preserve">
          <source>Flushes Fortran unit(s) currently open for output. Without the optional argument, all units are flushed, otherwise just the unit specified.</source>
          <target state="translated">出力のために現在オープンされているFortranユニットをフラッシュします。オプションの引数を指定しない場合、すべてのユニットがフラッシュされ、そうでない場合は指定されたユニットのみがフラッシュされます。</target>
        </trans-unit>
        <trans-unit id="891f012ae7669ec3305d5df16b52933f9f008c6f" translate="yes" xml:space="preserve">
          <source>Following is an example mirroring the layout of an Intel x86_64 register:</source>
          <target state="translated">以下は、Intel x86_64 レジスタのレイアウトをミラーリングした例です。</target>
        </trans-unit>
        <trans-unit id="fe3141d92469bdac0372f1256fb1b519d1cd9340" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;CAF_REGTYPE_COARRAY_STATIC&lt;/code&gt; and &lt;code&gt;CAF_REGTYPE_COARRAY_ALLOC&lt;/code&gt;, the passed size is the byte size requested. For &lt;code&gt;CAF_REGTYPE_LOCK_STATIC&lt;/code&gt;, &lt;code&gt;CAF_REGTYPE_LOCK_ALLOC&lt;/code&gt; and &lt;code&gt;CAF_REGTYPE_CRITICAL&lt;/code&gt; it is the array size or one for a scalar.</source>
          <target state="translated">&lt;code&gt;CAF_REGTYPE_COARRAY_STATIC&lt;/code&gt; と &lt;code&gt;CAF_REGTYPE_COARRAY_ALLOC&lt;/code&gt; 、渡されたサイズは、要求されたバイトサイズです。ため &lt;code&gt;CAF_REGTYPE_LOCK_STATIC&lt;/code&gt; 、 &lt;code&gt;CAF_REGTYPE_LOCK_ALLOC&lt;/code&gt; と &lt;code&gt;CAF_REGTYPE_CRITICAL&lt;/code&gt; それはスカラーの配列サイズまたは1です。</target>
        </trans-unit>
        <trans-unit id="e7fdc76d6673ddd61a5752377f7cbc3656ca5dff" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;OPTIONAL&lt;/code&gt; dummy arguments, an absent argument is denoted by a NULL pointer, except for scalar dummy arguments of type &lt;code&gt;INTEGER&lt;/code&gt;, &lt;code&gt;LOGICAL&lt;/code&gt;, &lt;code&gt;REAL&lt;/code&gt; and &lt;code&gt;COMPLEX&lt;/code&gt; which have the &lt;code&gt;VALUE&lt;/code&gt; attribute. For those, a hidden Boolean argument (&lt;code&gt;logical(kind=C_bool),value&lt;/code&gt;) is used to indicate whether the argument is present.</source>
          <target state="translated">ため &lt;code&gt;OPTIONAL&lt;/code&gt; 仮引数、存在しない引数は型のスカラー仮引数を除いて、NULLポインタで示され &lt;code&gt;INTEGER&lt;/code&gt; 、 &lt;code&gt;LOGICAL&lt;/code&gt; 、 &lt;code&gt;REAL&lt;/code&gt; および &lt;code&gt;COMPLEX&lt;/code&gt; 有する &lt;code&gt;VALUE&lt;/code&gt; の属性。それらの場合、非表示のブール引数（ &lt;code&gt;logical(kind=C_bool),value&lt;/code&gt; ）を使用して、引数が存在するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="fd7591b61c29f7a7e8a7fccd73e4bf12ac95577e" translate="yes" xml:space="preserve">
          <source>For Boolean (&lt;code&gt;LOGICAL&lt;/code&gt;) arguments, please note that GCC expects only the integer value 0 and 1. If a GNU Fortran &lt;code&gt;LOGICAL&lt;/code&gt; variable contains another integer value, the result is undefined. As some other Fortran compilers use &lt;em&gt;-1&lt;/em&gt; for &lt;code&gt;.TRUE.&lt;/code&gt;, extra care has to be taken &amp;ndash; such as passing the value as &lt;code&gt;INTEGER&lt;/code&gt;. (The same value restriction also applies to other front ends of GCC, e.g. to GCC&amp;rsquo;s C99 compiler for &lt;code&gt;_Bool&lt;/code&gt; or GCC&amp;rsquo;s Ada compiler for &lt;code&gt;Boolean&lt;/code&gt;.)</source>
          <target state="translated">ブール（ &lt;code&gt;LOGICAL&lt;/code&gt; ）引数の場合、GCCは整数値0および1のみを想定していることに注意してください &lt;code&gt;LOGICAL&lt;/code&gt; 変数に別の整数値が含まれている場合、結果は未定義です。他の一部のFortranコンパイラーでは、 &lt;code&gt;.TRUE.&lt;/code&gt; &lt;em&gt;-1&lt;/em&gt;を使用します。、値を &lt;code&gt;INTEGER&lt;/code&gt; として渡すなど、特別な注意が必要です。 （同じ値の制限は、GCCの他のフロントエンドにも適用されます。たとえば、 &lt;code&gt;_Bool&lt;/code&gt; の場合はGCCのC99 コンパイラー、 &lt;code&gt;Boolean&lt;/code&gt; の場合はGCCのAdaコンパイラーに適用されます。）</target>
        </trans-unit>
        <trans-unit id="17c42d36ba186c9c9566a4f51dd4f2ecdc877351" translate="yes" xml:space="preserve">
          <source>For advanced users, it may be important to know the implementation of these functions. They are simply wrappers around the standard radian functions, which have more accurate builtin versions. These functions convert their arguments (or results) to degrees (or radians) by taking the value modulus 360 (or 2*pi) and then multiplying it by a constant radian-to-degree (or degree-to-radian) factor, as appropriate. The factor is computed at compile-time as 180/pi (or pi/180).</source>
          <target state="translated">上級者にとっては、これらの関数の実装を知っておくことが重要かもしれません。これらの関数は、標準のラジアン関数の単なるラッパーであり、より正確なバージョンが組み込まれています。これらの関数は、引数(または結果)を度(またはラジアン)に変換するために、モジュラス360(または2*pi)を取り、それに一定のラジアン-度(または度-ラジアン)係数を掛けます。この係数はコンパイル時に180/pi(またはpi/180)として計算されます。</target>
        </trans-unit>
        <trans-unit id="259f214752a0743a89be2e404853ef1cb91d6dee" translate="yes" xml:space="preserve">
          <source>For arguments of &lt;code&gt;CHARACTER&lt;/code&gt; type, the character length is passed as hidden argument. For deferred-length strings, the value is passed by reference, otherwise by value. The character length has the type &lt;code&gt;INTEGER(kind=4)&lt;/code&gt;. Note with C binding, &lt;code&gt;CHARACTER(len=1)&lt;/code&gt; result variables are returned according to the platform ABI and no hidden length argument is used for dummy arguments; with &lt;code&gt;VALUE&lt;/code&gt;, those variables are passed by value.</source>
          <target state="translated">&lt;code&gt;CHARACTER&lt;/code&gt; タイプの引数の場合、文字の長さが隠し引数として渡されます。据え置き長さストリングの場合、値は参照によって渡され、そうでない場合は値によって渡されます。文字長のタイプは &lt;code&gt;INTEGER(kind=4)&lt;/code&gt; です。Cバインディングでは、プラットフォームABIに従って &lt;code&gt;CHARACTER(len=1)&lt;/code&gt; 結果変数が返され、隠し長さ引数は仮引数に使用されません。 &lt;code&gt;VALUE&lt;/code&gt; 、それらの変数は値によって渡されます。</target>
        </trans-unit>
        <trans-unit id="970ca85e2243e1294e41d72d1a5174d7359f30dd" translate="yes" xml:space="preserve">
          <source>For arguments with &lt;code&gt;ALLOCATABLE&lt;/code&gt; and &lt;code&gt;POINTER&lt;/code&gt; attribute (including procedure pointers), a pointer to the pointer is passed such that the pointer address can be modified in the procedure.</source>
          <target state="translated">&lt;code&gt;ALLOCATABLE&lt;/code&gt; および &lt;code&gt;POINTER&lt;/code&gt; 属性を持つ引数（プロシージャポインタを含む）の場合、ポインタへのポインタが渡されるため、プロシージャでポインタアドレスを変更できます。</target>
        </trans-unit>
        <trans-unit id="b7aebafeeb2d15a5bdeaa2c90a8ea58f48434e2d" translate="yes" xml:space="preserve">
          <source>For character arguments, the result is passed as first argument, followed by the result string length, next come the two string arguments, followed by the two hidden string length arguments. With C binding, there are no hidden arguments and by-reference passing and either only a single character is passed or an array descriptor.</source>
          <target state="translated">文字引数の場合は、結果が第一引数として渡され、続いて結果の文字列長が渡され、次に2つの文字列引数が渡され、続いて2つの隠された文字列長の引数が渡されます。C言語のバインディングでは、隠された引数や参照渡しはなく、1文字のみが渡されるか、配列記述子が渡されます。</target>
        </trans-unit>
        <trans-unit id="426c7003c930ea128233368d2180db222e3dcb29" translate="yes" xml:space="preserve">
          <source>For common blocks, the same convention is used, i.e. by default an underscore is appended to the lower-cased Fortran name. Blank commons have the name &lt;code&gt;__BLNK__&lt;/code&gt;.</source>
          <target state="translated">共通ブロックの場合、同じ規則が使用されます。つまり、デフォルトでは、アンダースコアが小文字のFortran名に追加されます。空白のコモンズの名前は &lt;code&gt;__BLNK__&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="178a1b3ff1abdd2db7e5af0d1c7094b5b151cdcc" translate="yes" xml:space="preserve">
          <source>For compatibility of derived types with &lt;code&gt;struct&lt;/code&gt;, one needs to use the &lt;code&gt;BIND(C)&lt;/code&gt; attribute in the type declaration. For instance, the following type declaration</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt; とstructとの互換性のために、型宣言で &lt;code&gt;BIND(C)&lt;/code&gt; 属性を使用する必要があります。たとえば、次の型宣言</target>
        </trans-unit>
        <trans-unit id="8f71090cd2615e03758ff6a0140e754aa8db6fa4" translate="yes" xml:space="preserve">
          <source>For compatibility with HP FORTRAN 77/iX, the &lt;code&gt;RAN&lt;/code&gt; intrinsic is provided as an alias for &lt;code&gt;RAND&lt;/code&gt;. See &lt;a href=&quot;rand#RAND&quot;&gt;RAND&lt;/a&gt; for complete documentation.</source>
          <target state="translated">HP FORTRAN 77 / iXとの互換性のために、 &lt;code&gt;RAN&lt;/code&gt; 組み込み関数は &lt;code&gt;RAND&lt;/code&gt; のエイリアスとして提供されています。完全なドキュメントについては、&lt;a href=&quot;rand#RAND&quot;&gt;RAND&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="25af6b4c58f069b25e713da7d5557ff178a3f5a5" translate="yes" xml:space="preserve">
          <source>For compatibility, GNU Fortran supports a default exponent of zero in real constants with</source>
          <target state="translated">互換性のために、GNU Fortranは、実数定数のデフォルトのゼロの指数を</target>
        </trans-unit>
        <trans-unit id="c5af42816bc5cc524c275158a3ba0c37e8664d06" translate="yes" xml:space="preserve">
          <source>For compatibility, GNU Fortran supports legacy PARAMETER statements without parentheses with</source>
          <target state="translated">互換性のために、GNU Fortranでは、括弧のないレガシーPARAMETER文を</target>
        </trans-unit>
        <trans-unit id="7e098c3322755ef138df8f0ecec6e73425f20c18" translate="yes" xml:space="preserve">
          <source>For compatibility, GNU Fortran will interpret &lt;code&gt;TYPE&lt;/code&gt; statements as &lt;code&gt;PRINT&lt;/code&gt; statements with the flag</source>
          <target state="translated">互換性のために、GNU Fortranは &lt;code&gt;TYPE&lt;/code&gt; ステートメントをフラグ付きの &lt;code&gt;PRINT&lt;/code&gt; ステートメントとして解釈します</target>
        </trans-unit>
        <trans-unit id="d0e99ef452ad37b29f8957ca1708f2fbb08ca447" translate="yes" xml:space="preserve">
          <source>For details refer to the actual &lt;a href=&quot;http://www.openacc.org/&quot;&gt;OpenACC Application Programming Interface v2.0&lt;/a&gt;.</source>
          <target state="translated">詳細については、実際の&lt;a href=&quot;http://www.openacc.org/&quot;&gt;OpenACCアプリケーションプログラミングインターフェイスv2.0を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d00cc4c9c80b5855ef42975c57c5aee54c5b4f4a" translate="yes" xml:space="preserve">
          <source>For details refer to the actual &lt;a href=&quot;http://www.openmp.org/wp-content/uploads/openmp-4.5.pdf&quot;&gt;OpenMP Application Program Interface v4.5&lt;/a&gt;.</source>
          <target state="translated">詳細については、実際の&lt;a href=&quot;http://www.openmp.org/wp-content/uploads/openmp-4.5.pdf&quot;&gt;OpenMPアプリケーションプログラムインターフェイスv4.5を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e594c16383c40239383e20ad91fe6f6521c6aa29" translate="yes" xml:space="preserve">
          <source>For details refer to the g77 manual &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-3.4.6/g77/index.html#Top&quot;&gt;https://gcc.gnu.org/onlinedocs/gcc-3.4.6/g77/index.html#Top&lt;/a&gt;.</source>
          <target state="translated">詳細については、g77のマニュアル&lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc-3.4.6/g77/index.html#Top&quot;&gt;https://gcc.gnu.org/onlinedocs/gcc-3.4.6/g77/index.html#Topを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8e0fade3bb34774f9ec842779237f963e3e8cfb6" translate="yes" xml:space="preserve">
          <source>For dummy arguments with the &lt;code&gt;VALUE&lt;/code&gt; attribute: Scalar arguments of the type &lt;code&gt;INTEGER&lt;/code&gt;, &lt;code&gt;LOGICAL&lt;/code&gt;, &lt;code&gt;REAL&lt;/code&gt; and &lt;code&gt;COMPLEX&lt;/code&gt; are passed by value according to the platform ABI. (As vendor extension and not recommended, using &lt;code&gt;%VAL()&lt;/code&gt; in the call to a procedure has the same effect.) For &lt;code&gt;TYPE(C_PTR)&lt;/code&gt; and procedure pointers, the pointer itself is passed such that it can be modified without affecting the caller.</source>
          <target state="translated">&lt;code&gt;VALUE&lt;/code&gt; 属性を持つ仮引数の場合：タイプ &lt;code&gt;INTEGER&lt;/code&gt; 、 &lt;code&gt;LOGICAL&lt;/code&gt; 、 &lt;code&gt;REAL&lt;/code&gt; 、および &lt;code&gt;COMPLEX&lt;/code&gt; のスカラー引数は、プラットフォームABIに従って値によって渡されます。 （ベンダー拡張であり、お勧めできません。プロシージャの呼び出しで &lt;code&gt;%VAL()&lt;/code&gt; を使用しても同じ効果があります。） &lt;code&gt;TYPE(C_PTR)&lt;/code&gt; とプロシージャポインターの場合、ポインター自体が渡されるため、呼び出し元に影響を与えることなく変更できます。</target>
        </trans-unit>
        <trans-unit id="b14d0076ba78b293765b275b3929440d94cf1437" translate="yes" xml:space="preserve">
          <source>For dummy arguments, the &lt;code&gt;NO_ARG_CHECK&lt;/code&gt; attribute can be used; in other compilers, it is also known as &lt;code&gt;IGNORE_TKR&lt;/code&gt;. For dummy arguments with this attribute actual arguments of any type and kind (similar to &lt;code&gt;TYPE(*)&lt;/code&gt;), scalars and arrays of any rank (no equivalent in Fortran standard) are accepted. As with &lt;code&gt;TYPE(*)&lt;/code&gt;, the argument is unlimited polymorphic and no type information is available. Additionally, the argument may only be passed to dummy arguments with the &lt;code&gt;NO_ARG_CHECK&lt;/code&gt; attribute and as argument to the &lt;code&gt;PRESENT&lt;/code&gt; intrinsic function and to &lt;code&gt;C_LOC&lt;/code&gt; of the &lt;code&gt;ISO_C_BINDING&lt;/code&gt; module.</source>
          <target state="translated">仮引数の場合、 &lt;code&gt;NO_ARG_CHECK&lt;/code&gt; 属性を使用できます。他のコンパイラでは、 &lt;code&gt;IGNORE_TKR&lt;/code&gt; とも呼ばれます。この属性を持つ仮引数の場合、任意のタイプおよび種類の実際の引数（ &lt;code&gt;TYPE(*)&lt;/code&gt; と同様）、任意のランクのスカラーおよび配列（Fortran規格では同等のもの）が受け入れられます。同じように &lt;code&gt;TYPE(*)&lt;/code&gt; 、引数が無制限多型であり、いかなる種類の情報はありません。また、引数がのみで仮引数に渡される &lt;code&gt;NO_ARG_CHECK&lt;/code&gt; の属性との引数として &lt;code&gt;PRESENT&lt;/code&gt; 組み込み関数とに &lt;code&gt;C_LOC&lt;/code&gt; の &lt;code&gt;ISO_C_BINDING&lt;/code&gt; のモジュール。</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="5d819b4ca99447d987dd9489f0eb33f9f0ca4cea" translate="yes" xml:space="preserve">
          <source>For example, with</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="e2fed11faf2ee2dfa0347c4b85e45acbbe12c868" translate="yes" xml:space="preserve">
          <source>For full compliance with the Fortran standards, code using the &lt;code&gt;IEEE_EXCEPTIONS&lt;/code&gt; or &lt;code&gt;IEEE_ARITHMETIC&lt;/code&gt; modules should be compiled with the following options: &lt;code&gt;-fno-unsafe-math-optimizations
-frounding-math -fsignaling-nans&lt;/code&gt;.</source>
          <target state="translated">Fortran規格に完全に準拠するには、 &lt;code&gt;IEEE_EXCEPTIONS&lt;/code&gt; または &lt;code&gt;IEEE_ARITHMETIC&lt;/code&gt; モジュールを使用するコードを &lt;code&gt;-fno-unsafe-math-optimizations -frounding-math -fsignaling-nans&lt;/code&gt; オプションでコンパイルする必要があります。</target>
        </trans-unit>
        <trans-unit id="53fb0ed666c8e4637fb179fb6cd1945b65370392" translate="yes" xml:space="preserve">
          <source>For lock types, the value shall only used for checking the allocation status. Note that for critical blocks, the locking is only required on one image; in the locking statement, the processor shall always pass an image index of one for critical-block lock variables (&lt;code&gt;CAF_REGTYPE_CRITICAL&lt;/code&gt;). For lock types and critical-block variables, the initial value shall be unlocked (or, respecitively, not in critical section) such as the value false; for event types, the initial state should be no event, e.g. zero.</source>
          <target state="translated">ロックタイプの場合、値は割り当てステータスの確認にのみ使用されます。重要なブロックの場合、ロックが必要なのは1つのイメージのみです。ロッキングステートメントでは、プロセッサはクリティカルブロックロック変数（ &lt;code&gt;CAF_REGTYPE_CRITICAL&lt;/code&gt; ）に対して常に1のイメージインデックスを渡す必要があります。ロックタイプとクリティカルブロック変数の場合、値falseなどの初期値はロック解除されます（または、それぞれクリティカルセクションではありません）。イベントタイプの場合、初期状態はイベントなし、たとえばゼロでなければなりません。</target>
        </trans-unit>
        <trans-unit id="afc3c44d8400821c7e66ccec759312f8ae890d0c" translate="yes" xml:space="preserve">
          <source>For logical types, please note that the Fortran standard only guarantees interoperability between C99&amp;rsquo;s &lt;code&gt;_Bool&lt;/code&gt; and Fortran&amp;rsquo;s &lt;code&gt;C_Bool&lt;/code&gt;-kind logicals and C99 defines that &lt;code&gt;true&lt;/code&gt; has the value 1 and &lt;code&gt;false&lt;/code&gt; the value 0. Using any other integer value with GNU Fortran&amp;rsquo;s &lt;code&gt;LOGICAL&lt;/code&gt; (with any kind parameter) gives an undefined result. (Passing other integer values than 0 and 1 to GCC&amp;rsquo;s &lt;code&gt;_Bool&lt;/code&gt; is also undefined, unless the integer is explicitly or implicitly casted to &lt;code&gt;_Bool&lt;/code&gt;.)</source>
          <target state="translated">論理型の場合、Fortran規格はC99の &lt;code&gt;_Bool&lt;/code&gt; とFortranの &lt;code&gt;C_Bool&lt;/code&gt; -kind logicals の間の相互運用性のみを保証し、C99は &lt;code&gt;true&lt;/code&gt; の値が1で &lt;code&gt;false&lt;/code&gt; の値が0であると定義していることに注意してください。GNUFortranの &lt;code&gt;LOGICAL&lt;/code&gt; （その他の種類のパラメータ）は未定義の結果を与えます。 （0と1以外の他の整数値をGCCの &lt;code&gt;_Bool&lt;/code&gt; に渡すことも、整数が明示的または暗黙的に &lt;code&gt;_Bool&lt;/code&gt; にキャストされない限り、未定義です。）</target>
        </trans-unit>
        <trans-unit id="645123108939cc7f1351ed4c5ed24616382f1cd6" translate="yes" xml:space="preserve">
          <source>For non-Fortran programs, it is recommended to call the function at the end of the main program. To ensure that the shutdown is also performed for programs where this function is not explicitly invoked, for instance non-Fortran programs or calls to the system&amp;rsquo;s exit() function, the library can use a destructor function. Note that programs can also be terminated using the STOP and ERROR STOP statements; those use different library calls.</source>
          <target state="translated">Fortran以外のプログラムの場合は、メインプログラムの最後で関数を呼び出すことをお勧めします。この関数が明示的に呼び出されないプログラム（Fortran以外のプログラムやシステムのexit（）関数の呼び出しなど）でもシャットダウンが確実に実行されるように、ライブラリはデストラクタ関数を使用できます。STOPおよびERROR STOPステートメントを使用してプログラムを終了することもできます。それらは異なるライブラリ呼び出しを使用します。</target>
        </trans-unit>
        <trans-unit id="0fda3fe5658bbb16bc94a64d431d46d85c448ba3" translate="yes" xml:space="preserve">
          <source>For nonalloatable coarrays this function is never called. If a cleanup is required, it has to be handled via the finish, stop and error stop functions, and via destructors.</source>
          <target state="translated">非可逆配列の場合,この関数は決して呼び出されません.クリーンアップが必要な場合は、finish,stop,error stop 関数やデストラクタを介して処理しなければなりません。</target>
        </trans-unit>
        <trans-unit id="769b4b8ff7c8ca82cfd759be116b71400b388a27" translate="yes" xml:space="preserve">
          <source>For normal coarrays, the byte size of the coarray to be allocated; for lock types and event types, the number of elements.</source>
          <target state="translated">通常の Coarrays の場合、割り当てられる Coarray のバイトサイズ、ロックタイプとイベントタイプの場合は要素数。</target>
        </trans-unit>
        <trans-unit id="c5a7495577baa115fd7ba4bd2538cc9655c8ba1e" translate="yes" xml:space="preserve">
          <source>For platforms not supporting thread-safe POSIX functions, further functionality might not be thread-safe. For details, please consult the documentation for your operating system.</source>
          <target state="translated">スレッドセーフPOSIX関数をサポートしていないプラットフォームでは、それ以上の機能はスレッドセーフではない可能性があります。詳細については、お使いのオペレーティングシステムのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="0f754cea2447fc1f7de796841a533e2b0e744924" translate="yes" xml:space="preserve">
          <source>For pointers an &lt;code&gt;INTENT&lt;/code&gt; may be specified which affect the association status not the value of the pointer target.</source>
          <target state="translated">ポインターの場合、ポインターターゲットの値ではなく関連付けステータスに影響する &lt;code&gt;INTENT&lt;/code&gt; を指定できます。</target>
        </trans-unit>
        <trans-unit id="861923ed4e8e6a14a71a9b944d725060158e3744" translate="yes" xml:space="preserve">
          <source>For procedures and procedure pointers, the following attributes can be used to change the calling convention:</source>
          <target state="translated">プロシージャとプロシージャポインタについては、以下の属性を使用して呼び出し規約を変更することができます。</target>
        </trans-unit>
        <trans-unit id="d0c19985c4d97eb50e552a2c489eae620bd68157" translate="yes" xml:space="preserve">
          <source>For procedures and variables declared in the specification space of a module, the name is formed by &lt;code&gt;__&lt;/code&gt;, followed by the lower-cased module name, &lt;code&gt;_MOD_&lt;/code&gt;, and the lower-cased Fortran name. Note that no underscore is appended.</source>
          <target state="translated">モジュールの仕様空間で宣言されたプロシージャと変数の場合、名前は &lt;code&gt;__&lt;/code&gt; で構成され、その後に小文字のモジュール名 &lt;code&gt;_MOD_&lt;/code&gt; と小文字のFortran名が続きます。下線は付加されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="655c405a81e5a3a4c19aebaf53d1a577457fd59d" translate="yes" xml:space="preserve">
          <source>For procedures, the compiler directives shall be placed into the body of the procedure; for variables and procedure pointers, they shall be in the same declaration part as the variable or procedure pointer.</source>
          <target state="translated">プロシージャの場合、コンパイラの指示はプロシージャの本文に、変数やプロシージャ・ポインタの場合は変数やプロシージャ・ポインタと同じ宣言部分に記述します。</target>
        </trans-unit>
        <trans-unit id="8a427ba74194babc5453eab5da2db6811558bae1" translate="yes" xml:space="preserve">
          <source>For some applications, using an assumed type (&lt;code&gt;TYPE(*)&lt;/code&gt;) can be an alternative to a C pointer; see &lt;a href=&quot;further-interoperability-of-fortran-with-c#Further-Interoperability-of-Fortran-with-C&quot;&gt;Further Interoperability of Fortran with C&lt;/a&gt;.</source>
          <target state="translated">一部のアプリケーションでは、想定されるタイプ（ &lt;code&gt;TYPE(*)&lt;/code&gt; ）を使用すると、Cポインターの代わりになる場合があります。&lt;a href=&quot;further-interoperability-of-fortran-with-c#Further-Interoperability-of-Fortran-with-C&quot;&gt;FortranとCのさらなる相互運用性を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="bc450d193004ed238e7b680da61abe25abf08cb2" translate="yes" xml:space="preserve">
          <source>Form feed and carriage return</source>
          <target state="translated">フォームフィードとキャリッジリターン</target>
        </trans-unit>
        <trans-unit id="8a752c06d30a05c39b13add7d13788b1ea87fc28" translate="yes" xml:space="preserve">
          <source>Fortran 2003 and 2008 features supported by GNU Fortran.</source>
          <target state="translated">GNU FortranでサポートされているFortran 2003と2008の機能。</target>
        </trans-unit>
        <trans-unit id="8049b8b2641e35bcef652edc2904190c33161072" translate="yes" xml:space="preserve">
          <source>Fortran 2003 and later</source>
          <target state="translated">Fortran 2003 以降</target>
        </trans-unit>
        <trans-unit id="be8e678d225d2b02acdd7a9b7addf693485412fe" translate="yes" xml:space="preserve">
          <source>Fortran 2003 and later, GNU extensions</source>
          <target state="translated">Fortran 2003とそれ以降、GNU拡張</target>
        </trans-unit>
        <trans-unit id="1bac20e1b5cfb75c26c838eb05fc0f399a52b7a3" translate="yes" xml:space="preserve">
          <source>Fortran 2003 and later, except when otherwise noted</source>
          <target state="translated">Fortran 2003 以降、特に明記されていない場合を除く</target>
        </trans-unit>
        <trans-unit id="2b810db8309afcef29e853d785091fcf7ee3f676" translate="yes" xml:space="preserve">
          <source>Fortran 2003 functions and subroutines: &lt;a href=&quot;get_005fcommand#GET_005fCOMMAND&quot;&gt;GET_COMMAND&lt;/a&gt;, &lt;a href=&quot;get_005fcommand_005fargument#GET_005fCOMMAND_005fARGUMENT&quot;&gt;GET_COMMAND_ARGUMENT&lt;/a&gt;, &lt;a href=&quot;command_005fargument_005fcount#COMMAND_005fARGUMENT_005fCOUNT&quot;&gt;COMMAND_ARGUMENT_COUNT&lt;/a&gt;</source>
          <target state="translated">Fortran 2003関数およびサブルーチン：&lt;a href=&quot;get_005fcommand#GET_005fCOMMAND&quot;&gt;GET_COMMAND&lt;/a&gt;、&lt;a href=&quot;get_005fcommand_005fargument#GET_005fCOMMAND_005fARGUMENT&quot;&gt;GET_COMMAND_ARGUMENT&lt;/a&gt;、&lt;a href=&quot;command_005fargument_005fcount#COMMAND_005fARGUMENT_005fCOUNT&quot;&gt;COMMAND_ARGUMENT_COUNT&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25848bf241e950c63f1af4412340dd891bb47b18" translate="yes" xml:space="preserve">
          <source>Fortran 2008</source>
          <target state="translated">フォートラン2008</target>
        </trans-unit>
        <trans-unit id="1ea679a39ceb6a95c07c9136a2a03692a4fea5af" translate="yes" xml:space="preserve">
          <source>Fortran 2008 and later</source>
          <target state="translated">Fortran 2008 以降</target>
        </trans-unit>
        <trans-unit id="8f34cb0c57bf1062c41e4b93972f755afbc10716" translate="yes" xml:space="preserve">
          <source>Fortran 2008 and later, negative &lt;var&gt;N&lt;/var&gt; is allowed as GNU extension</source>
          <target state="translated">Fortran 2008以降では、負の &lt;var&gt;N&lt;/var&gt; がGNU拡張として許可されています</target>
        </trans-unit>
        <trans-unit id="322b57ba2de9a741b3868d4083ba39f7926978dc" translate="yes" xml:space="preserve">
          <source>Fortran 2008 and later. With &lt;var&gt;DISTANCE&lt;/var&gt; argument, Technical Specification (TS) 18508 or later</source>
          <target state="translated">Fortran 2008以降。 &lt;var&gt;DISTANCE&lt;/var&gt; の引数、技術仕様書（TS）18508以降</target>
        </trans-unit>
        <trans-unit id="fa27f8e58cdf2fbed1b4cb7be9731382928222ae" translate="yes" xml:space="preserve">
          <source>Fortran 2008 and later. With &lt;var&gt;DISTANCE&lt;/var&gt; or &lt;var&gt;FAILED&lt;/var&gt; argument, Technical Specification (TS) 18508 or later</source>
          <target state="translated">Fortran 2008以降。 &lt;var&gt;DISTANCE&lt;/var&gt; または &lt;var&gt;FAILED&lt;/var&gt; 引数、技術仕様書（TS）18508以降</target>
        </trans-unit>
        <trans-unit id="9947fdd595045d2a5ada116bbf1d475822f8bd04" translate="yes" xml:space="preserve">
          <source>Fortran 2008 and later; with &lt;var&gt;STAT&lt;/var&gt;, TS 18508 or later</source>
          <target state="translated">Fortran 2008以降。 &lt;var&gt;STAT&lt;/var&gt; 後に、TS 18508または</target>
        </trans-unit>
        <trans-unit id="64ebfe3bdefc03fc3b8a2fb51e20b176dbf58034" translate="yes" xml:space="preserve">
          <source>Fortran 77 and later</source>
          <target state="translated">Fortran 77以降</target>
        </trans-unit>
        <trans-unit id="406765d348ddc55fb3b91484131b625d8e6eb094" translate="yes" xml:space="preserve">
          <source>Fortran 77 and later, for a complex argument Fortran 2008 or later</source>
          <target state="translated">Fortran 77 以降、複雑な引数の場合 Fortran 2008 以降</target>
        </trans-unit>
        <trans-unit id="714736797536bf0646c3b4cf42e8c2040e4ea876" translate="yes" xml:space="preserve">
          <source>Fortran 77 and later, for a complex argument and for two arguments Fortran 2008 or later</source>
          <target state="translated">Fortran 77 以降、複素数引数と 2 つの引数 Fortran 2008 以降</target>
        </trans-unit>
        <trans-unit id="b9169d4c0be406db1eef72c1660dd14b9b9c7fa4" translate="yes" xml:space="preserve">
          <source>Fortran 77 and later, has overloads that are GNU extensions</source>
          <target state="translated">Fortran 77 以降では、GNU 拡張であるオーバーロードがあります。</target>
        </trans-unit>
        <trans-unit id="f1445fcd8e1699afbac35eaa338e8a6e961d6a2f" translate="yes" xml:space="preserve">
          <source>Fortran 77 and later, with &lt;var&gt;KIND&lt;/var&gt; argument Fortran 2003 and later</source>
          <target state="translated">Fortran 77以降、 &lt;var&gt;KIND&lt;/var&gt; 引数付きFortran 2003以降</target>
        </trans-unit>
        <trans-unit id="ae9013e97816898f809221ee28bd8df9c13ae6a9" translate="yes" xml:space="preserve">
          <source>Fortran 77 and later, with &lt;var&gt;KIND&lt;/var&gt; argument Fortran 90 and later</source>
          <target state="translated">Fortran 77以降、 &lt;var&gt;KIND&lt;/var&gt; 引数Fortran 90以降</target>
        </trans-unit>
        <trans-unit id="9d1a390a6227549bd15a3d74d47103ceed783f7a" translate="yes" xml:space="preserve">
          <source>Fortran 90 and later</source>
          <target state="translated">Fortran 90以降</target>
        </trans-unit>
        <trans-unit id="f28b6433b672ab4087d5c1052ae2b048f775e07d" translate="yes" xml:space="preserve">
          <source>Fortran 95 and later</source>
          <target state="translated">Fortran 95 以降</target>
        </trans-unit>
        <trans-unit id="258b2e407dd7e5f9bbd42c55b1b282b6655a94bc" translate="yes" xml:space="preserve">
          <source>Fortran 95 and later, for a complex argument Fortran 2008 or later</source>
          <target state="translated">Fortran 95 以降、複雑な引数の場合 Fortran 2008 以降</target>
        </trans-unit>
        <trans-unit id="88e83054bc9dcae86855ef30adb36bbab2552b43" translate="yes" xml:space="preserve">
          <source>Fortran 95 and later, has overloads that are GNU extensions</source>
          <target state="translated">Fortran 95 以降では、GNU 拡張であるオーバーロードを持っています。</target>
        </trans-unit>
        <trans-unit id="7082ed796134462f215c555635c4e20555039118" translate="yes" xml:space="preserve">
          <source>Fortran 95 and later, with &lt;code&gt;RADIX&lt;/code&gt; Fortran 2008 or later</source>
          <target state="translated">Fortran 95以降、 &lt;code&gt;RADIX&lt;/code&gt; Fortran 2008以降</target>
        </trans-unit>
        <trans-unit id="0768f019ed4d414b08efc2f301588a33f55b93d6" translate="yes" xml:space="preserve">
          <source>Fortran 95 and later, with &lt;var&gt;KIND&lt;/var&gt; argument Fortran 2003 and later</source>
          <target state="translated">Fortran 95以降、 &lt;var&gt;KIND&lt;/var&gt; 引数付きFortran 2003以降</target>
        </trans-unit>
        <trans-unit id="879bb704bc2f86505f3e0631f4b58fc10950abc3" translate="yes" xml:space="preserve">
          <source>Fortran 95 and later. Note, the &lt;code&gt;SCALAR=&lt;/code&gt; keyword and allocatable scalar entities are available in Fortran 2003 and later.</source>
          <target state="translated">Fortran 95以降。 &lt;code&gt;SCALAR=&lt;/code&gt; キーワードと割り当て可能なスカラーエンティティは、Fortran 2003以降で使用できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a5d8df09e78a1084c33c7aac6193603864a17f71" translate="yes" xml:space="preserve">
          <source>Fortran 95 elemental function: &lt;a href=&quot;iand#IAND&quot;&gt;IAND&lt;/a&gt;</source>
          <target state="translated">Fortran 95要素関数：&lt;a href=&quot;iand#IAND&quot;&gt;IAND&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6368675714d27fbb9b56e26657d5b94a105b6e3f" translate="yes" xml:space="preserve">
          <source>Fortran 95 elemental function: &lt;a href=&quot;ieor#IEOR&quot;&gt;IEOR&lt;/a&gt;</source>
          <target state="translated">Fortran 95要素関数：&lt;a href=&quot;ieor#IEOR&quot;&gt;IEOR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="993f62b2d6ca12ac307616884e8ad713156de516" translate="yes" xml:space="preserve">
          <source>Fortran 95 elemental function: &lt;a href=&quot;ior#IOR&quot;&gt;IOR&lt;/a&gt;</source>
          <target state="translated">Fortran 95要素関数：&lt;a href=&quot;ior#IOR&quot;&gt;IOR&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42d778535505f2ef38eff025c01584470ad683bb" translate="yes" xml:space="preserve">
          <source>Fortran Language Options</source>
          <target state="translated">Fortran 言語オプション</target>
        </trans-unit>
        <trans-unit id="1d64a65cb92d6acfa4f3277db10770db00729a5f" translate="yes" xml:space="preserve">
          <source>Fortran Type</source>
          <target state="translated">フォートラン型</target>
        </trans-unit>
        <trans-unit id="442fd3f199ddd4f07bbf54f773b0e1c5ed9e8c43" translate="yes" xml:space="preserve">
          <source>Fractional part of the model representation</source>
          <target state="translated">モデル表現の端数部分</target>
        </trans-unit>
        <trans-unit id="21dabba56632079279a35d6666164c2072f09efc" translate="yes" xml:space="preserve">
          <source>Frees memory previously allocated by &lt;code&gt;MALLOC&lt;/code&gt;. The &lt;code&gt;FREE&lt;/code&gt; intrinsic is an extension intended to be used with Cray pointers, and is provided in GNU Fortran to allow user to compile legacy code. For new code using Fortran 95 pointers, the memory de-allocation intrinsic is &lt;code&gt;DEALLOCATE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MALLOC&lt;/code&gt; によって以前に割り当てられたメモリを解放します。 &lt;code&gt;FREE&lt;/code&gt; 組み込み関数は、Crayポインタと一緒に使用するためのもの、およびコンパイルレガシーコードにユーザーを許可するようにGNUのFortranで提供される拡張機能です。Fortran 95ポインターを使用する新しいコードの場合、メモリー割り当て &lt;code&gt;DEALLOCATE&lt;/code&gt; 組み込み関数はDEALLOCATEです。</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="a323d397468d0292cd859b40e6885c1536825738" translate="yes" xml:space="preserve">
          <source>Function that returns an disassociated pointer</source>
          <target state="translated">解離されたポインタを返す関数</target>
        </trans-unit>
        <trans-unit id="932cd43f239d13a2c65179e9e19e3285e9b79863" translate="yes" xml:space="preserve">
          <source>Function to determine the size of an array</source>
          <target state="translated">配列のサイズを決定する関数</target>
        </trans-unit>
        <trans-unit id="fbc95357a0bb0e0f7999bf3d35f4957175759774" translate="yes" xml:space="preserve">
          <source>Function to get the last system error number</source>
          <target state="translated">最後のシステムエラー番号を取得する関数</target>
        </trans-unit>
        <trans-unit id="e253e93cbdfe85e94c0d10667a1052e9a8283e0c" translate="yes" xml:space="preserve">
          <source>Function to reshape an array</source>
          <target state="translated">配列のリシェイプを行う関数</target>
        </trans-unit>
        <trans-unit id="940bd249ac05dca12ac5b392fbddd7c23a8edf32" translate="yes" xml:space="preserve">
          <source>Functionally, this is implemented with a driver program (&lt;code&gt;gcc&lt;/code&gt;) which provides the command-line interface for the compiler. It calls the relevant compiler front-end program (e.g., &lt;code&gt;f951&lt;/code&gt; for Fortran) for each file in the source code, and then calls the assembler and linker as appropriate to produce the compiled output. In a copy of GCC which has been compiled with Fortran language support enabled, &lt;code&gt;gcc&lt;/code&gt; will recognize files with</source>
          <target state="translated">機能的には、これは、コンパイラーにコマンド行インターフェースを提供するドライバー・プログラム（ &lt;code&gt;gcc&lt;/code&gt; ）を使用して実装されます。ソースコード内の各ファイルについて、関連するコンパイラフロントエンドプログラム（Fortranの場合は &lt;code&gt;f951&lt;/code&gt; など）を呼び出してから、必要に応じてアセンブラとリンカを呼び出して、コンパイルされた出力を生成します。Fortran言語サポートを有効にしてコンパイルされたGCCのコピーでは、 &lt;code&gt;gcc&lt;/code&gt; は</target>
        </trans-unit>
        <trans-unit id="9dcfc60614436d1a4ee53a29e9a404d17b3d2cd8" translate="yes" xml:space="preserve">
          <source>Functions with identical argument lists are eliminated within statements, regardless of whether these functions are marked &lt;code&gt;PURE&lt;/code&gt; or not. For example, in</source>
          <target state="translated">同じ引数リストを持つ関数は、これらの関数が &lt;code&gt;PURE&lt;/code&gt; とマークされているかどうかに関係なく、ステートメント内で削除されます。たとえば、</target>
        </trans-unit>
        <trans-unit id="a77748cc250a919f08dac1cbb97eb54cbd2d36e9" translate="yes" xml:space="preserve">
          <source>Funding Free Software</source>
          <target state="translated">自由ソフトウェアの資金調達</target>
        </trans-unit>
        <trans-unit id="66abd3c3ee5158c581855ea4c522e7242179740c" translate="yes" xml:space="preserve">
          <source>Furthermore, GNU Fortran allows using BOZ literal constants outside DATA statements and the four intrinsic functions allowed by Fortran 2003. In DATA statements, in direct assignments, where the right-hand side only contains a BOZ literal constant, and for old-style initializers of the form &lt;code&gt;integer i /o'0173'/&lt;/code&gt;, the constant is transferred as if &lt;code&gt;TRANSFER&lt;/code&gt; had been used; for &lt;code&gt;COMPLEX&lt;/code&gt; numbers, only the real part is initialized unless &lt;code&gt;CMPLX&lt;/code&gt; is used. In all other cases, the BOZ literal constant is converted to an &lt;code&gt;INTEGER&lt;/code&gt; value with the largest decimal representation. This value is then converted numerically to the type and kind of the variable in question. (For instance, &lt;code&gt;real :: r = b'0000001' + 1&lt;/code&gt; initializes &lt;code&gt;r&lt;/code&gt; with &lt;code&gt;2.0&lt;/code&gt;.) As different compilers implement the extension differently, one should be careful when doing bitwise initialization of non-integer variables.</source>
          <target state="translated">さらに、GNU Fortranでは、DATAステートメントの外でBOZリテラル定数とFortran 2003で許可されている4つの組み込み関数を使用できます。DATAステートメントでは、直接割り当てで右側にBOZリテラル定数のみが含まれ、 &lt;code&gt;integer i /o'0173'/&lt;/code&gt; の形式では、定数は &lt;code&gt;TRANSFER&lt;/code&gt; が使用されたかのように転送されます。以下のため &lt;code&gt;COMPLEX&lt;/code&gt; ない限り、数字、実数部のみが初期化され &lt;code&gt;CMPLX&lt;/code&gt; が使用されています。他のすべての場合では、BOZリテラル定数は、最大の10進数表現を持つ &lt;code&gt;INTEGER&lt;/code&gt; 値に変換されます。この値は、問題の変数のタイプと種類に数値的に変換されます。 （たとえば、 &lt;code&gt;real :: r = b'0000001' + 1&lt;/code&gt; &lt;code&gt;2.0&lt;/code&gt; で &lt;code&gt;r&lt;/code&gt; を初期化します。）コンパイラによって拡張機能の実装が異なるため、非整数変数をビットごとに初期化する場合は注意が必要です。</target>
        </trans-unit>
        <trans-unit id="bbc57e1ff195fb60a4dc030079988a8caafdb6ef" translate="yes" xml:space="preserve">
          <source>GETCWD</source>
          <target state="translated">GETCWD</target>
        </trans-unit>
        <trans-unit id="bf64874bb6e6efb715db91b4688bc8d9b681e8a9" translate="yes" xml:space="preserve">
          <source>GETUID</source>
          <target state="translated">GETUID</target>
        </trans-unit>
        <trans-unit id="228c47fb16d6a0582ae98c80a744855f61262c0a" translate="yes" xml:space="preserve">
          <source>GET_ENVIRONMENT_VARIABLE</source>
          <target state="translated">GET_ENVIRONMENT_VARIABLE</target>
        </trans-unit>
        <trans-unit id="47589cef14436d9e5f4a4197810b9e1417f75b07" translate="yes" xml:space="preserve">
          <source>GNU Extension</source>
          <target state="translated">GNU拡張</target>
        </trans-unit>
        <trans-unit id="9d11a1402788dabb9b90460c67bf622c641fc435" translate="yes" xml:space="preserve">
          <source>GNU Extension, enabled with</source>
          <target state="translated">で有効になっているGNU拡張</target>
        </trans-unit>
        <trans-unit id="b27d2a644db1110043e95237723e7b6fbb43d091" translate="yes" xml:space="preserve">
          <source>GNU Fortran</source>
          <target state="translated">GNUフォートラン</target>
        </trans-unit>
        <trans-unit id="f9845869f9c3cabebff2ed011b38f05ca510b9b3" translate="yes" xml:space="preserve">
          <source>GNU Fortran 77 compatibility function: &lt;a href=&quot;iargc#IARGC&quot;&gt;IARGC&lt;/a&gt;</source>
          <target state="translated">GNU Fortran 77互換関数：&lt;a href=&quot;iargc#IARGC&quot;&gt;IARGC&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e98ebee3e38c9be3ca0bd13c101015227ed57bd" translate="yes" xml:space="preserve">
          <source>GNU Fortran 77 compatibility subroutine: &lt;a href=&quot;getarg#GETARG&quot;&gt;GETARG&lt;/a&gt;</source>
          <target state="translated">GNU Fortran 77互換性サブルーチン：&lt;a href=&quot;getarg#GETARG&quot;&gt;GETARG&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d568bce829108a46f995220a9ab78d6b78677849" translate="yes" xml:space="preserve">
          <source>GNU Fortran accepts real literal constants with an exponent-letter of &lt;code&gt;Q&lt;/code&gt;, for example, &lt;code&gt;1.23Q45&lt;/code&gt;. The constant is interpreted as a &lt;code&gt;REAL(16)&lt;/code&gt; entity on targets that support this type. If the target does not support &lt;code&gt;REAL(16)&lt;/code&gt; but has a &lt;code&gt;REAL(10)&lt;/code&gt; type, then the real-literal-constant will be interpreted as a &lt;code&gt;REAL(10)&lt;/code&gt; entity. In the absence of &lt;code&gt;REAL(16)&lt;/code&gt; and &lt;code&gt;REAL(10)&lt;/code&gt;, an error will occur.</source>
          <target state="translated">GNU Fortranは、 &lt;code&gt;1.23Q45&lt;/code&gt; などの指数文字が &lt;code&gt;Q&lt;/code&gt; の実際のリテラル定数を受け入れます。定数は、このタイプをサポートするターゲットの &lt;code&gt;REAL(16)&lt;/code&gt; エンティティとして解釈されます。ターゲットが &lt;code&gt;REAL(16)&lt;/code&gt; をサポートしていないが &lt;code&gt;REAL(10)&lt;/code&gt; タイプを持っている場合、実数定数は &lt;code&gt;REAL(10)&lt;/code&gt; エンティティとして解釈されます。非存在下で &lt;code&gt;REAL(16)&lt;/code&gt; と &lt;code&gt;REAL(10)&lt;/code&gt; 、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="8cc12fe6bf7d9a6f2e0f483a56e6b990f69ae76c" translate="yes" xml:space="preserve">
          <source>GNU Fortran allows old-style initialization of variables of the form:</source>
          <target state="translated">GNU Fortranでは、古い形式の変数の初期化が可能です。</target>
        </trans-unit>
        <trans-unit id="9d62703b61697fd52fa89ea26be10f7ce06feb5b" translate="yes" xml:space="preserve">
          <source>GNU Fortran allows old-style kind specifications in declarations. These look like:</source>
          <target state="translated">GNU Fortranでは、宣言の中に旧式の種類指定を許可しています。これらは次のようになります。</target>
        </trans-unit>
        <trans-unit id="f094672adc1332ad3930e3853cf12feb53281427" translate="yes" xml:space="preserve">
          <source>GNU Fortran allows the conversion of unformatted data between little- and big-endian representation to facilitate moving of data between different systems. The conversion can be indicated with the &lt;code&gt;CONVERT&lt;/code&gt; specifier on the &lt;code&gt;OPEN&lt;/code&gt; statement. See &lt;a href=&quot;gfortran_005fconvert_005funit#GFORTRAN_005fCONVERT_005fUNIT&quot;&gt;GFORTRAN_CONVERT_UNIT&lt;/a&gt;, for an alternative way of specifying the data format via an environment variable.</source>
          <target state="translated">GNU Fortranを使用すると、リトルエンディアン表現とビッグエンディアン表現の間でフォーマットされていないデータを変換して、異なるシステム間でのデータの移動を容易にすることができます。変換は、 &lt;code&gt;OPEN&lt;/code&gt; ステートメントの &lt;code&gt;CONVERT&lt;/code&gt; 指定子で示すことができます。環境変数を介してデータ形式を指定する別の方法については、&lt;a href=&quot;gfortran_005fconvert_005funit#GFORTRAN_005fCONVERT_005fUNIT&quot;&gt;GFORTRAN_CONVERT_UNITを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6c64552c26182faee772ccec0f65d17f06acfa00" translate="yes" xml:space="preserve">
          <source>GNU Fortran also have a partial support for ISO/IEC 1539-1:2004 (Fortran 2003), ISO/IEC 1539-1:2010 (Fortran 2008), the Technical Specification &lt;code&gt;Further Interoperability of Fortran with C&lt;/code&gt; (ISO/IEC TS 29113:2012). Full support of those standards and future Fortran standards is planned. The current status of the support is can be found in the &lt;a href=&quot;fortran-2003-status#Fortran-2003-status&quot;&gt;Fortran 2003 status&lt;/a&gt;, &lt;a href=&quot;fortran-2008-status#Fortran-2008-status&quot;&gt;Fortran 2008 status&lt;/a&gt;, &lt;a href=&quot;ts-29113-status#TS-29113-status&quot;&gt;TS 29113 status&lt;/a&gt; and &lt;a href=&quot;ts-18508-status#TS-18508-status&quot;&gt;TS 18508 status&lt;/a&gt; sections of the documentation.</source>
          <target state="translated">GNU Fortranは、ISO / IEC 1539-1：2004（Fortran 2003）、ISO / IEC 1539-1：2010（Fortran 2008）、 &lt;code&gt;Further Interoperability of Fortran with C&lt;/code&gt; （ISO / IEC TS 29113： 2012）。これらの標準と将来のFortran標準の完全なサポートが計画されています。サポートの現在のステータスは、ドキュメントの&lt;a href=&quot;fortran-2003-status#Fortran-2003-status&quot;&gt;Fortran 2003ステータス&lt;/a&gt;、&lt;a href=&quot;fortran-2008-status#Fortran-2008-status&quot;&gt;Fortran 2008ステータス&lt;/a&gt;、&lt;a href=&quot;ts-29113-status#TS-29113-status&quot;&gt;TS 29113ステータス&lt;/a&gt;、および&lt;a href=&quot;ts-18508-status#TS-18508-status&quot;&gt;TS 18508ステータス&lt;/a&gt;セクションにあります。</target>
        </trans-unit>
        <trans-unit id="b8672e55f2e327a750569586e4e71cb4943f2bf7" translate="yes" xml:space="preserve">
          <source>GNU Fortran always uses an array descriptor, which does not match the one of the Technical Specification. The &lt;code&gt;ISO_Fortran_binding.h&lt;/code&gt; header file and the C functions it specifies are not available.</source>
          <target state="translated">GNU Fortranは常に配列記述子を使用しますが、これは技術仕様の1つと一致しません。 &lt;code&gt;ISO_Fortran_binding.h&lt;/code&gt; のヘッダファイルとC関数、それ指定は使用できません。</target>
        </trans-unit>
        <trans-unit id="9ecddba3cc14c0996ac91825bf94c8f6b35e3904" translate="yes" xml:space="preserve">
          <source>GNU Fortran can be used in programs with multiple threads, e.g. by using OpenMP, by calling OS thread handling functions via the &lt;code&gt;ISO_C_BINDING&lt;/code&gt; facility, or by GNU Fortran compiled library code being called from a multi-threaded program.</source>
          <target state="translated">GNU Fortranは、OpenMPの使用、 &lt;code&gt;ISO_C_BINDING&lt;/code&gt; 機能を介したOSスレッド処理関数の呼び出し、マルチスレッドプログラムから呼び出されるGNU Fortranコンパイル済みライブラリコードなど、複数のスレッドを持つプログラムで使用できます。</target>
        </trans-unit>
        <trans-unit id="447467fdc3f175bcd86b8693e7201ee8f541a067" translate="yes" xml:space="preserve">
          <source>GNU Fortran does not support the &lt;code&gt;ENCODE&lt;/code&gt; and &lt;code&gt;DECODE&lt;/code&gt; statements. These statements are best replaced by &lt;code&gt;READ&lt;/code&gt; and &lt;code&gt;WRITE&lt;/code&gt; statements involving internal files (&lt;code&gt;CHARACTER&lt;/code&gt; variables and arrays), which have been part of the Fortran standard since Fortran 77. For example, replace a code fragment like</source>
          <target state="translated">GNU Fortranは、 &lt;code&gt;ENCODE&lt;/code&gt; および &lt;code&gt;DECODE&lt;/code&gt; ステートメントをサポートしていません。これらのステートメントは、Fortran 77以降のFortran規格の一部である内部ファイル（ &lt;code&gt;CHARACTER&lt;/code&gt; 変数と配列）を含む &lt;code&gt;READ&lt;/code&gt; および &lt;code&gt;WRITE&lt;/code&gt; ステートメントに置き換えるのが最適です。たとえば、次のようなコードフラグメントを置き換えます。</target>
        </trans-unit>
        <trans-unit id="ccc03f51d2cc4d7f4f3f38601b8099e2f6d00a56" translate="yes" xml:space="preserve">
          <source>GNU Fortran fully supports the Fortran 95 standard for namelist I/O including array qualifiers, substrings and fully qualified derived types. The output from a namelist write is compatible with namelist read. The output has all names in upper case and indentation to column 1 after the namelist name. Two extensions are permitted:</source>
          <target state="translated">GNU Fortranは、配列修飾子、部分文字列、完全修飾派生型を含む名前リストI/OのためにFortran 95標準を完全にサポートしています。名前リストの書き込みからの出力は、名前リストの読み込みと互換性があります。出力はすべての名前を大文字にして、名前リスト名の後の列1にインデントします。2つの拡張子が許可されています。</target>
        </trans-unit>
        <trans-unit id="f548b7cd5e7e4d16ae60e93714613f0e3e130ad5" translate="yes" xml:space="preserve">
          <source>GNU Fortran has various special options that are used for debugging either your program or the GNU Fortran compiler.</source>
          <target state="translated">GNU Fortranには、あなたのプログラムやGNU Fortranコンパイラをデバッグするための様々な特別なオプションがあります。</target>
        </trans-unit>
        <trans-unit id="47ad0c9eac11dcb2cdb893f6385f732a10b1853c" translate="yes" xml:space="preserve">
          <source>GNU Fortran implements STRUCTURES like derived types with the following rules and exceptions:</source>
          <target state="translated">GNU Fortranは,派生型のようなSTRUCTURESを以下のルールと例外を用いて実装しています.</target>
        </trans-unit>
        <trans-unit id="625d543534791964fe1574ff68c00c154f782cb1" translate="yes" xml:space="preserve">
          <source>GNU Fortran implements a number of extensions over standard Fortran. This chapter contains information on their syntax and meaning. There are currently two categories of GNU Fortran extensions, those that provide functionality beyond that provided by any standard, and those that are supported by GNU Fortran purely for backward compatibility with legacy compilers. By default,</source>
          <target state="translated">GNU Fortranは標準的なFortranの上に多くの拡張機能を実装しています。この章では、それらの構文と意味についての情報を提供します。現在、GNU Fortranの拡張には2つのカテゴリがあります。標準で提供されている以上の機能を提供するものと、レガシーコンパイラとの下位互換性のためにGNU Fortranが純粋にサポートしているものです。デフォルトでは</target>
        </trans-unit>
        <trans-unit id="f8ea9f382015a621de25c15b1f5c1e121bc69316" translate="yes" xml:space="preserve">
          <source>GNU Fortran is a part of GCC, the &lt;em&gt;GNU Compiler Collection&lt;/em&gt;. GCC consists of a collection of front ends for various languages, which translate the source code into a language-independent form called &lt;em&gt;GENERIC&lt;/em&gt;. This is then processed by a common middle end which provides optimization, and then passed to one of a collection of back ends which generate code for different computer architectures and operating systems.</source>
          <target state="translated">GNU Fortranは、GCC、&lt;em&gt;GNU Compiler Collectionの&lt;/em&gt;一部です。GCCは、ソースコードを&lt;em&gt;GENERIC&lt;/em&gt;と呼ばれる言語に依存しない形式に変換する、さまざまな言語のフロントエンドのコレクションで構成されています。これは、最適化を提供する共通のミドルエンドによって処理され、さまざまなコンピューターアーキテクチャとオペレーティングシステム用のコードを生成するバックエンドのコレクションの1つに渡されます。</target>
        </trans-unit>
        <trans-unit id="77fc15f7464b2307f13e0309e5d109ebdfb7903c" translate="yes" xml:space="preserve">
          <source>GNU Fortran offers the</source>
          <target state="translated">GNU Fortranは以下の機能を提供します。</target>
        </trans-unit>
        <trans-unit id="4b8131fce7ae118f5293b7d5ffffe8f39cc935c5" translate="yes" xml:space="preserve">
          <source>GNU Fortran passes most arguments by reference, i.e. by passing a pointer to the data. Note that the compiler might use a temporary variable into which the actual argument has been copied, if required semantically (copy-in/copy-out).</source>
          <target state="translated">GNU Fortranはほとんどの引数を参照で渡します。コンパイラは、意味的に必要であれば、実際の引数がコピーされた一時変数を使うかもしれないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="ed55c7647592d8224c021fbc2513a8f43d1a33b4" translate="yes" xml:space="preserve">
          <source>GNU Fortran strives to be compatible to the &lt;a href=&quot;http://openmp.org/wp/openmp-specifications/&quot;&gt;OpenMP Application Program Interface v4.5&lt;/a&gt;.</source>
          <target state="translated">GNU Fortranは、&lt;a href=&quot;http://openmp.org/wp/openmp-specifications/&quot;&gt;OpenMPアプリケーションプログラムインターフェイスv4.5&lt;/a&gt;との互換性を目指しています。</target>
        </trans-unit>
        <trans-unit id="79d35f17a63cfd65b1bd1868405b806d5f1015b1" translate="yes" xml:space="preserve">
          <source>GNU Fortran strives to be compatible to the &lt;a href=&quot;http://www.openacc.org/&quot;&gt;OpenACC Application Programming Interface v2.0&lt;/a&gt;.</source>
          <target state="translated">GNU Fortranは、&lt;a href=&quot;http://www.openacc.org/&quot;&gt;OpenACCアプリケーションプログラミングインターフェイスv2.0&lt;/a&gt;と互換性があるように努めています。</target>
        </trans-unit>
        <trans-unit id="2a09f1c576de44f06637c60cacd25debe5f9c37d" translate="yes" xml:space="preserve">
          <source>GNU Fortran supports &lt;code&gt;.XOR.&lt;/code&gt; as a logical operator with &lt;code&gt;-std=legacy&lt;/code&gt; for compatibility with legacy code. &lt;code&gt;.XOR.&lt;/code&gt; is equivalent to &lt;code&gt;.NEQV.&lt;/code&gt;. That is, the output is true if and only if the inputs differ.</source>
          <target state="translated">GNU Fortranは &lt;code&gt;.XOR.&lt;/code&gt; サポートしています。レガシーコードとの互換性のために &lt;code&gt;-std=legacy&lt;/code&gt; を指定した論理演算子として。 &lt;code&gt;.XOR.&lt;/code&gt; &lt;code&gt;.NEQV.&lt;/code&gt; と同等です。。つまり、入力が異なる場合にのみ、出力がtrueになります。</target>
        </trans-unit>
        <trans-unit id="4a00a34c938a2bbcbad18bafd9df71d187c8e3cd" translate="yes" xml:space="preserve">
          <source>GNU Fortran supports Hollerith constants in assignments, function arguments, and &lt;code&gt;DATA&lt;/code&gt; and &lt;code&gt;ASSIGN&lt;/code&gt; statements. A Hollerith constant is written as a string of characters preceded by an integer constant indicating the character count, and the letter &lt;code&gt;H&lt;/code&gt; or &lt;code&gt;h&lt;/code&gt;, and stored in bytewise fashion in a numeric (&lt;code&gt;INTEGER&lt;/code&gt;, &lt;code&gt;REAL&lt;/code&gt;, or &lt;code&gt;complex&lt;/code&gt;) or &lt;code&gt;LOGICAL&lt;/code&gt; variable. The constant will be padded or truncated to fit the size of the variable in which it is stored.</source>
          <target state="translated">GNU Fortranは、割り当て、関数の引数、 &lt;code&gt;DATA&lt;/code&gt; および &lt;code&gt;ASSIGN&lt;/code&gt; ステートメントでホレリス定数をサポートしています。ホレリス定数は、文字数を示す整数定数と文字 &lt;code&gt;H&lt;/code&gt; または &lt;code&gt;h&lt;/code&gt; が前に付く文字列として記述され、数値（ &lt;code&gt;INTEGER&lt;/code&gt; 、 &lt;code&gt;REAL&lt;/code&gt; 、または &lt;code&gt;complex&lt;/code&gt; ）または &lt;code&gt;LOGICAL&lt;/code&gt; 変数にバイト単位で格納されます。定数は、それが格納されている変数のサイズに合わせて埋め込まれるか切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="7704e6ebcc55f94b909980a2c64854ef85e852d7" translate="yes" xml:space="preserve">
          <source>GNU Fortran supports an extended list of mathematical intrinsics with the compile flag</source>
          <target state="translated">GNU Fortranはコンパイルフラグで数学的本質の拡張リストをサポートしています</target>
        </trans-unit>
        <trans-unit id="dd7c20c1d7193db3330e2d961f55f93e67fbd664" translate="yes" xml:space="preserve">
          <source>GNU Fortran supports argument list functions &lt;code&gt;%VAL&lt;/code&gt;, &lt;code&gt;%REF&lt;/code&gt; and &lt;code&gt;%LOC&lt;/code&gt; statements, for backward compatibility with g77. It is recommended that these should be used only for code that is accessing facilities outside of GNU Fortran, such as operating system or windowing facilities. It is best to constrain such uses to isolated portions of a program&amp;ndash;portions that deal specifically and exclusively with low-level, system-dependent facilities. Such portions might well provide a portable interface for use by the program as a whole, but are themselves not portable, and should be thoroughly tested each time they are rebuilt using a new compiler or version of a compiler.</source>
          <target state="translated">GNU Fortranは、g77との下位互換性のために、引数リスト関数 &lt;code&gt;%VAL&lt;/code&gt; 、 &lt;code&gt;%REF&lt;/code&gt; および &lt;code&gt;%LOC&lt;/code&gt; ステートメントをサポートしています。これらは、オペレーティングシステムやウィンドウ機能など、GNU Fortran以外の機能にアクセスするコードにのみ使用することをお勧めします。そのような使用は、プログラムの分離された部分、つまり、低レベルのシステム依存の機能を特別かつ排他的に扱う部分に制限するのが最善です。このような部分は、プログラム全体で使用できるポータブルインターフェイスを提供する可能性がありますが、それ自体はポータブルではないため、新しいコンパイラまたはコンパイラのバージョンを使用して再構築するたびに徹底的にテストする必要があります。</target>
        </trans-unit>
        <trans-unit id="445dfaa7f5081a7d47ac9e4767ab6be58c462303" translate="yes" xml:space="preserve">
          <source>GNU Fortran supports several Fortran 2003 features; an incomplete list can be found below. See also the &lt;a href=&quot;https://gcc.gnu.org/wiki/Fortran2003&quot;&gt;wiki page&lt;/a&gt; about Fortran 2003.</source>
          <target state="translated">GNU Fortranは、いくつかのFortran 2003機能をサポートしています。不完全なリストは以下にあります。Fortran 2003に関する&lt;a href=&quot;https://gcc.gnu.org/wiki/Fortran2003&quot;&gt;Wikiページ&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="0bdb89bc801212ecb67aea6afa195b4cbb5bd86a" translate="yes" xml:space="preserve">
          <source>GNU Fortran supports some of the new features of the Technical Specification (TS) 29113 on Further Interoperability of Fortran with C. The &lt;a href=&quot;https://gcc.gnu.org/wiki/TS29113Status&quot;&gt;wiki&lt;/a&gt; has some information about the current TS 29113 implementation status. In particular, the following is implemented.</source>
          <target state="translated">GNU Fortranは、CとFortranののさらなる相互運用性に技術仕様の新機能の一部（TS）29113をサポートしてい&lt;a href=&quot;https://gcc.gnu.org/wiki/TS29113Status&quot;&gt;ウィキは&lt;/a&gt;現在TS 29113の実施状況に関するいくつかの情報を持っています。特に、以下が実装されます。</target>
        </trans-unit>
        <trans-unit id="3168af2f2d39be058f856f9c3724ece621648ace" translate="yes" xml:space="preserve">
          <source>GNU Fortran supports the DEC extended attributes &lt;code&gt;STATIC&lt;/code&gt; and &lt;code&gt;AUTOMATIC&lt;/code&gt; to provide explicit specification of entity storage. These follow the syntax of the Fortran standard &lt;code&gt;SAVE&lt;/code&gt; attribute.</source>
          <target state="translated">GNU Fortranは、DEC拡張属性 &lt;code&gt;STATIC&lt;/code&gt; および &lt;code&gt;AUTOMATIC&lt;/code&gt; をサポートして、エンティティストレージを明示的に指定します。これらは、Fortranの標準の &lt;code&gt;SAVE&lt;/code&gt; 属性の構文に従います。</target>
        </trans-unit>
        <trans-unit id="91ad3f0b4de8a83590fb2963cdae8d47a1099527" translate="yes" xml:space="preserve">
          <source>GNU Fortran supports the additional legacy I/O specifiers &lt;code&gt;CARRIAGECONTROL&lt;/code&gt;, &lt;code&gt;READONLY&lt;/code&gt;, and &lt;code&gt;SHARE&lt;/code&gt; with the compile flag</source>
          <target state="translated">GNU Fortranは、追加のレガシーI / O指定子 &lt;code&gt;CARRIAGECONTROL&lt;/code&gt; 、 &lt;code&gt;READONLY&lt;/code&gt; 、および &lt;code&gt;SHARE&lt;/code&gt; をコンパイルフラグでサポートします</target>
        </trans-unit>
        <trans-unit id="58ddecfb39e88b81e89a51a582f2009a784a242f" translate="yes" xml:space="preserve">
          <source>GNU Fortran supports the following new features of the Technical Specification 18508 on Additional Parallel Features in Fortran:</source>
          <target state="translated">GNU Fortranは、Fortranの追加並列機能に関する技術仕様書18508の以下の新機能をサポートしています。</target>
        </trans-unit>
        <trans-unit id="510cb0ea38009fead4207419120896cc9148954a" translate="yes" xml:space="preserve">
          <source>GNU Fortran supports these with the flag</source>
          <target state="translated">GNU Fortranはこれらをフラグでサポートしています</target>
        </trans-unit>
        <trans-unit id="43455e30bbbf4ab44a09434cda7dec6248d9c9a1" translate="yes" xml:space="preserve">
          <source>GNU Fortran&amp;rsquo;s implementation for variables with &lt;code&gt;ASYNCHRONOUS&lt;/code&gt; attribute is compatible with TS 29113.</source>
          <target state="translated">&lt;code&gt;ASYNCHRONOUS&lt;/code&gt; 属性を持つ変数のGNU Fortranの実装は、TS 29113と互換性があります。</target>
        </trans-unit>
        <trans-unit id="0e4ec8a54cfff9c2845fa38842cb6cd1bdea197d" translate="yes" xml:space="preserve">
          <source>GNU Free Documentation License</source>
          <target state="translated">GNU自由文書ライセンス</target>
        </trans-unit>
        <trans-unit id="d9cbf0740e34d88c506fb7df6e17deeabd18660c" translate="yes" xml:space="preserve">
          <source>GNU General Public License</source>
          <target state="translated">GNU一般公衆利用許諾書</target>
        </trans-unit>
        <trans-unit id="72b0f7603350332026276f6acb46731114869aa9" translate="yes" xml:space="preserve">
          <source>GNU General Public License says how you can copy and share GNU Fortran.</source>
          <target state="translated">GNU General Public Licenseには、GNU Fortranをコピーして共有する方法が書かれています。</target>
        </trans-unit>
        <trans-unit id="e956d8af4614cc6d3e84a8a4627ea068fea673f9" translate="yes" xml:space="preserve">
          <source>GNU extension</source>
          <target state="translated">GNU拡張</target>
        </trans-unit>
        <trans-unit id="41bd17b399fc645999b1f94c3ff8b57752ca8b82" translate="yes" xml:space="preserve">
          <source>GNU extension.</source>
          <target state="translated">GNU拡張。</target>
        </trans-unit>
        <trans-unit id="0675e5ed2feb2a82988689be9b86b2c468fe17e1" translate="yes" xml:space="preserve">
          <source>Gamma function</source>
          <target state="translated">ガンマ関数</target>
        </trans-unit>
        <trans-unit id="34471dede732d687ac24eb5a1593778ba0b06069" translate="yes" xml:space="preserve">
          <source>Gamma function: &lt;a href=&quot;gamma#GAMMA&quot;&gt;GAMMA&lt;/a&gt;</source>
          <target state="translated">ガンマ関数：&lt;a href=&quot;gamma#GAMMA&quot;&gt;GAMMA&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c8ca638b3696cdddd24bcd0056cafc900c7a7184" translate="yes" xml:space="preserve">
          <source>Gathering nonzero elements from an array and appending elements from &lt;var&gt;VECTOR&lt;/var&gt;:</source>
          <target state="translated">配列からゼロ以外の要素を収集し、 &lt;var&gt;VECTOR&lt;/var&gt; から要素を追加します。</target>
        </trans-unit>
        <trans-unit id="0a5135b58dd78ae6468fc9736ab8d345870bb9b3" translate="yes" xml:space="preserve">
          <source>Gathering nonzero elements from an array:</source>
          <target state="translated">配列から0以外の要素を収集します。</target>
        </trans-unit>
        <trans-unit id="b5d810154138e075635771eb8f7059d14e72c59e" translate="yes" xml:space="preserve">
          <source>Generate code designed to be compatible with code generated by &lt;code&gt;g77&lt;/code&gt; and &lt;code&gt;f2c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;g77&lt;/code&gt; および &lt;code&gt;f2c&lt;/code&gt; によって生成されたコードと互換性があるように設計されたコードを生成します。</target>
        </trans-unit>
        <trans-unit id="919793fa37b98b0bf85804270264af9dd0ca28c3" translate="yes" xml:space="preserve">
          <source>Generic collective reduction</source>
          <target state="translated">一般的な集団的削減</target>
        </trans-unit>
        <trans-unit id="049f7061c4e993da9c1f4fe97f0420d1f9690d12" translate="yes" xml:space="preserve">
          <source>Generic interface names, which have the same name as derived types, are now supported. This allows one to write constructor functions. Note that Fortran does not support static constructor functions. For static variables, only default initialization or structure-constructor initialization are available.</source>
          <target state="translated">派生型と同じ名前を持つ一般的なインターフェース名がサポートされるようになりました。これにより,コンストラクタ関数を書くことができるようになりました.なお,Fortran は静的コンストラクタ関数をサポートしていません.静的変数については、デフォルトの初期化か構造体コンストラクタの初期化しかできません。</target>
        </trans-unit>
        <trans-unit id="27c46583e30309be203aa42f9d60abc74e5c3a95" translate="yes" xml:space="preserve">
          <source>Get an array of image indexes in the current &lt;var&gt;team&lt;/var&gt; that have failed. The array is sorted ascendingly. When &lt;var&gt;team&lt;/var&gt; is not provided the current team is to be used. When &lt;var&gt;kind&lt;/var&gt; is provided then the resulting array is of that integer kind else it is of default integer kind. The returns an unallocated size zero array when no images have failed.</source>
          <target state="translated">失敗した現在の &lt;var&gt;team&lt;/var&gt; 画像インデックスの配列を取得します。配列は昇順でソートされます。ときに &lt;var&gt;team&lt;/var&gt; 現在のチームに提供されていない使用されるべきです。場合は &lt;var&gt;kind&lt;/var&gt; 提供され、その後結果の配列は、それがデフォルトの整数の種類のものである種類の他にその整数です。失敗した画像がない場合、は未割り当てのサイズ0の配列を返します。</target>
        </trans-unit>
        <trans-unit id="8750de70663bd94e3d7b799db532b0584c0a8e9e" translate="yes" xml:space="preserve">
          <source>Get an array of image indexes in the current &lt;var&gt;team&lt;/var&gt; that have stopped. The array is sorted ascendingly. When &lt;var&gt;team&lt;/var&gt; is not provided the current team is to be used. When &lt;var&gt;kind&lt;/var&gt; is provided then the resulting array is of that integer kind else it is of default integer kind. The returns an unallocated size zero array when no images have failed.</source>
          <target state="translated">現在の &lt;var&gt;team&lt;/var&gt; で停止した画像インデックスの配列を取得します。配列は昇順でソートされます。ときに &lt;var&gt;team&lt;/var&gt; 現在のチームに提供されていない使用されるべきです。場合は &lt;var&gt;kind&lt;/var&gt; 提供され、その後結果の配列は、それがデフォルトの整数の種類のものである種類の他にその整数です。失敗した画像がない場合、は未割り当てのサイズ0の配列を返します。</target>
        </trans-unit>
        <trans-unit id="2aba41e9e2d4dc2b01fd8f259d8d59e7588bd504" translate="yes" xml:space="preserve">
          <source>Get an array of the indexes of the failed images</source>
          <target state="translated">失敗した画像のインデックスの配列を取得します。</target>
        </trans-unit>
        <trans-unit id="ff3a5c1d18d8f587bdaaeacf0112eaf3065976b2" translate="yes" xml:space="preserve">
          <source>Get an array of the indexes of the stopped images</source>
          <target state="translated">停止している画像のインデックスの配列を取得します。</target>
        </trans-unit>
        <trans-unit id="2bf3e201cf5f496679370a9612a717071221a5ea" translate="yes" xml:space="preserve">
          <source>Get an environmental variable</source>
          <target state="translated">環境変数の取得</target>
        </trans-unit>
        <trans-unit id="040140e3262d3a58f7a7816e8b40d028cdf4b91e" translate="yes" xml:space="preserve">
          <source>Get command line arguments</source>
          <target state="translated">コマンドライン引数の取得</target>
        </trans-unit>
        <trans-unit id="e8fb6b95e25f0305e85b02a0b01da7f4304ed68e" translate="yes" xml:space="preserve">
          <source>Get current working directory</source>
          <target state="translated">現在の作業ディレクトリを取得します。</target>
        </trans-unit>
        <trans-unit id="42574d8ecb0db8a42c325bacc92304e852efada4" translate="yes" xml:space="preserve">
          <source>Get current working directory.</source>
          <target state="translated">現在の作業ディレクトリを取得します。</target>
        </trans-unit>
        <trans-unit id="95e14bdbc1bc3ce95d306dbd99a979d905ef8ea9" translate="yes" xml:space="preserve">
          <source>Get file status</source>
          <target state="translated">ファイルの状態を取得</target>
        </trans-unit>
        <trans-unit id="dc1d731fd9e505246dfb70199010e7041b7bb29f" translate="yes" xml:space="preserve">
          <source>Get last system error message</source>
          <target state="translated">最後のシステムエラーメッセージを取得</target>
        </trans-unit>
        <trans-unit id="426b193448e23996e8cb561f7b073e50373d9b40" translate="yes" xml:space="preserve">
          <source>Get login name</source>
          <target state="translated">ログイン名の取得</target>
        </trans-unit>
        <trans-unit id="a0d458e1bda2a42de2b2389b3f9a2fde65b8ee3b" translate="yes" xml:space="preserve">
          <source>Get number of command line arguments</source>
          <target state="translated">コマンドライン引数の数を取得します。</target>
        </trans-unit>
        <trans-unit id="731831bafacd4df8009b2d1ecf1592fc81d2452c" translate="yes" xml:space="preserve">
          <source>Get system host name</source>
          <target state="translated">システムホスト名の取得</target>
        </trans-unit>
        <trans-unit id="35c3baf37e095ff5f289ce5cb4250d099027c523" translate="yes" xml:space="preserve">
          <source>Get the &lt;var&gt;VALUE&lt;/var&gt; of the environmental variable &lt;var&gt;NAME&lt;/var&gt;.</source>
          <target state="translated">取得 &lt;var&gt;VALUE&lt;/var&gt; 環境変数の &lt;var&gt;NAME&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="d211d75913429dcca3ee9dda5d278613a926b645" translate="yes" xml:space="preserve">
          <source>Get the entire command line</source>
          <target state="translated">コマンドライン全体を取得</target>
        </trans-unit>
        <trans-unit id="b60ec21d43c83cef00ee69748350825a081d49de" translate="yes" xml:space="preserve">
          <source>Get the name of a terminal device.</source>
          <target state="translated">端末デバイスの名前を取得します。</target>
        </trans-unit>
        <trans-unit id="31b5607f73a87eb8e22876547cdaf23f6cc64b10" translate="yes" xml:space="preserve">
          <source>Get the name of a terminal device. For more information, see &lt;code&gt;ttyname(3)&lt;/code&gt;.</source>
          <target state="translated">端末デバイスの名前を取得します。詳細は、 &lt;code&gt;ttyname(3)&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="32f6da6e7b7c6b5a48dfec5d5348c836c99f6ff5" translate="yes" xml:space="preserve">
          <source>Get the number of command line arguments</source>
          <target state="translated">コマンドライン引数の数を取得</target>
        </trans-unit>
        <trans-unit id="e993de4d1e7f30efea14e1469f08dfa2609ca383" translate="yes" xml:space="preserve">
          <source>Get the status of the image given by the id &lt;var&gt;image&lt;/var&gt; of the team given by &lt;var&gt;team&lt;/var&gt;. Valid results are zero, for image is ok, &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; from the ISO_FORTRAN_ENV module to indicate that the image has been stopped and &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt; also from ISO_FORTRAN_ENV to indicate that the image has executed a &lt;code&gt;FAIL IMAGE&lt;/code&gt; statement.</source>
          <target state="translated">idで指定されたイメージの状態を取得 &lt;var&gt;image&lt;/var&gt; によって与えられたチームの &lt;var&gt;team&lt;/var&gt; 。有効な結果は、画像がOKであるため、ゼロで &lt;code&gt;STAT_STOPPED_IMAGE&lt;/code&gt; 画像が停止されたことを示すISO_FORTRAN_ENVモジュールから &lt;code&gt;STAT_FAILED_IMAGE&lt;/code&gt; イメージが実行されたことを示すためにISO_FORTRAN_ENVからも &lt;code&gt;FAIL IMAGE&lt;/code&gt; ステートメント。</target>
        </trans-unit>
        <trans-unit id="2a6bd4493abe9cc5b5ba4108db64b55b16fbd63f" translate="yes" xml:space="preserve">
          <source>Gets the username under which the program is running.</source>
          <target state="translated">プログラムが実行されているユーザ名を取得します。</target>
        </trans-unit>
        <trans-unit id="3102bb9594e0ff6e8e038a8c1964a5c333458a56" translate="yes" xml:space="preserve">
          <source>Getting data from a remote image</source>
          <target state="translated">リモート画像からデータを取得する</target>
        </trans-unit>
        <trans-unit id="240ac964653bcfaab04e5fd3ec363ee0bf2af2f0" translate="yes" xml:space="preserve">
          <source>Getting data from a remote image using enhanced references</source>
          <target state="translated">拡張参照を使用したリモート画像からのデータ取得</target>
        </trans-unit>
        <trans-unit id="3806daf7c7ff821a9956038b5fe1d7adfa0fc983" translate="yes" xml:space="preserve">
          <source>Given a system time value &lt;var&gt;TIME&lt;/var&gt; (as provided by the &lt;a href=&quot;time#TIME&quot;&gt;TIME&lt;/a&gt; intrinsic), fills &lt;var&gt;VALUES&lt;/var&gt; with values extracted from it appropriate to the UTC time zone (Universal Coordinated Time, also known in some countries as GMT, Greenwich Mean Time), using &lt;code&gt;gmtime(3)&lt;/code&gt;.</source>
          <target state="translated">システム時間値 &lt;var&gt;TIME&lt;/var&gt; （&lt;a href=&quot;time#TIME&quot;&gt;TIME&lt;/a&gt;組み込み関数によって提供される）を指定すると、 &lt;var&gt;VALUES&lt;/var&gt; に、 &lt;code&gt;gmtime(3)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="968e707b9fcefbfcc6db9cf99ad10ca01aff5d51" translate="yes" xml:space="preserve">
          <source>Given a system time value &lt;var&gt;TIME&lt;/var&gt; (as provided by the &lt;a href=&quot;time#TIME&quot;&gt;TIME&lt;/a&gt; intrinsic), fills &lt;var&gt;VALUES&lt;/var&gt; with values extracted from it appropriate to the local time zone using &lt;code&gt;localtime(3)&lt;/code&gt;.</source>
          <target state="translated">システム時刻値 &lt;var&gt;TIME&lt;/var&gt; （&lt;a href=&quot;time#TIME&quot;&gt;TIME&lt;/a&gt;組み込みによって提供される）を指定すると、 &lt;code&gt;localtime(3)&lt;/code&gt; を使用して、ローカルタイムゾーンに適切な値から抽出された値を &lt;var&gt;VALUES&lt;/var&gt; に入力します。</target>
        </trans-unit>
        <trans-unit id="a3e6940f38a47d3df129001d326e2111cb6d93e8" translate="yes" xml:space="preserve">
          <source>Group ID function</source>
          <target state="translated">グループID機能</target>
        </trans-unit>
        <trans-unit id="0d1313538a726b49ebcebb349444981ad47993d2" translate="yes" xml:space="preserve">
          <source>Here is a small example:</source>
          <target state="translated">ちょっとした例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="7a9040de5034658c4f1c776ca9472f411d205c8d" translate="yes" xml:space="preserve">
          <source>Here is a summary of all the options specific to GNU Fortran, grouped by type. Explanations are in the following sections.</source>
          <target state="translated">ここでは、GNU Fortranに特有のすべてのオプションをタイプ別にまとめています。説明は以下のセクションにあります。</target>
        </trans-unit>
        <trans-unit id="d270a86d721c488d2b7f2378ace3926f89ec2fb5" translate="yes" xml:space="preserve">
          <source>Here is an example of code using the non portable record structure syntax:</source>
          <target state="translated">ここでは、ポータブルではないレコード構造構文を使用したコードの例を示します。</target>
        </trans-unit>
        <trans-unit id="4df9cd3b9b1b6294dc038ba9a270226d44a1c4a7" translate="yes" xml:space="preserve">
          <source>Here is the mapping of logical operator to bitwise intrinsic used with</source>
          <target state="translated">で使用される論理演算子とビット単位の内在性のマッピングを以下に示します。</target>
        </trans-unit>
        <trans-unit id="453e56e746b8b58d7f3ec1cadfba1451089fd6f6" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;_MyProject_flags&lt;/code&gt; is the case-sensitive name of the variable as seen from C programs while &lt;code&gt;global_flag&lt;/code&gt; is the case-insensitive name as seen from Fortran. If no binding name is specified, as for &lt;var&gt;tp&lt;/var&gt;, the C binding name is the (lowercase) Fortran binding name. If a binding name is specified, only a single variable may be after the double colon. Note of warning: You cannot use a global variable to access &lt;var&gt;errno&lt;/var&gt; of the C library as the C standard allows it to be a macro. Use the &lt;code&gt;IERRNO&lt;/code&gt; intrinsic (GNU extension) instead.</source>
          <target state="translated">ここで、 &lt;code&gt;_MyProject_flags&lt;/code&gt; はCプログラムから見た大文字と小文字を区別する変数の名前ですが、 &lt;code&gt;global_flag&lt;/code&gt; はFortranから見た大文字と小文字を区別しない名前です。 &lt;var&gt;tp&lt;/var&gt; のようにバインディング名が指定されていない場合、Cバインディング名は（小文字の）Fortranバインディング名です。バインディング名が指定されている場合、単一の変数のみが二重コロンの後にある可能性があります。警告の注記：C標準ではマクロであることを許可しているため、グローバル変数を使用してCライブラリの &lt;var&gt;errno&lt;/var&gt; にアクセスすることはできません。代わりに &lt;code&gt;IERRNO&lt;/code&gt; 組み込み（GNU拡張）を使用してください。</target>
        </trans-unit>
        <trans-unit id="58b5c30890f28e47bce9bc7844bbcc1e20f8fb25" translate="yes" xml:space="preserve">
          <source>Historically, legacy compilers allowed insertion of form feed characters (&amp;rsquo;\f&amp;rsquo;, ASCII 0xC) at the beginning of lines for formatted output to line printers, though the Fortran standard does not mention this. GNU Fortran supports the interpretation of form feed characters in source as whitespace for compatibility.</source>
          <target state="translated">歴史的には、レガシーコンパイラーは、ラインプリンターへのフォーマット済み出力の行頭にフォームフィード文字（ '\ f'、ASCII 0xC）の挿入を許可していましたが、Fortran規格ではこれについては言及されていません。GNU Fortranは、互換性のために、ソース内のフォームフィード文字の空白としての解釈をサポートしています。</target>
        </trans-unit>
        <trans-unit id="beb2619069b1f05f6fb873c61cb1abb0b0f1bc41" translate="yes" xml:space="preserve">
          <source>Hours past midnight, range 0&amp;ndash;23</source>
          <target state="translated">午前0時を過ぎた時間、範囲0〜23</target>
        </trans-unit>
        <trans-unit id="31524a9fb30368b64541b8aeb51e1826b2eb3b0a" translate="yes" xml:space="preserve">
          <source>How picky should the compiler be?</source>
          <target state="translated">コンパイラはどれだけうるさいのか?</target>
        </trans-unit>
        <trans-unit id="e800f9a1c4318af26c1a8da2685388acc65db0d7" translate="yes" xml:space="preserve">
          <source>How to help assure continued work for free software.</source>
          <target state="translated">自由ソフトウェアのための継続的な作業を保証するためにはどうすればよいか。</target>
        </trans-unit>
        <trans-unit id="4e461b3cc6748ec681eab8b558da86d4b08a95ab" translate="yes" xml:space="preserve">
          <source>How you can copy and share this manual.</source>
          <target state="translated">このマニュアルをコピーして共有する方法</target>
        </trans-unit>
        <trans-unit id="a8c96b87780fbc8dacc860ba152e6de87cea9ccc" translate="yes" xml:space="preserve">
          <source>How you can help.</source>
          <target state="translated">どうすればいいの?</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
