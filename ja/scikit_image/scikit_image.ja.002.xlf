<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="scikit_image">
    <body>
      <group id="scikit_image">
        <trans-unit id="35b1b56797217bec15c792472e88d19b19d69ba4" translate="yes" xml:space="preserve">
          <source>If True, clip the negative range (i.e. return 0 for min intensity) even if the image dtype allows negative values. The default behavior (None) is equivalent to True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da50679a0514b4e954a5a4d8cf6b6778190fca3f" translate="yes" xml:space="preserve">
          <source>If True, convert color images to gray-scale (64-bit floats). Images that are already in gray-scale format are not converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4906bc91424c06ef2a5cdde8854c9d19733177" translate="yes" xml:space="preserve">
          <source>If True, diagonal moves are permitted, if False, only axial moves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160bffcfdd1a46bb2e3f04f92123a99cf1daa654" translate="yes" xml:space="preserve">
          <source>If True, each patch has its mean and variance spatially weighted by a normalized Gaussian kernel of width sigma=1.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88106394e7f9aba26c03771139d5699e36e7e4c7" translate="yes" xml:space="preserve">
          <source>If True, input data is parsed as multichannel data (see &amp;lsquo;data&amp;rsquo; above for proper input format in this case)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f57919b23d526d770e743ba8bf0adfb3bf7f93" translate="yes" xml:space="preserve">
          <source>If True, it performs inverse logarithmic correction, else correction will be logarithmic. Defaults to False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d762705fbaa8a8f0fe07eb950ea574c26e0757" translate="yes" xml:space="preserve">
          <source>If True, never keep more than one in memory at a specific time. Otherwise, images will be cached once they are loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bae82b465d9ef47b7dba0879cff6eac9073dc6" translate="yes" xml:space="preserve">
          <source>If True, normalize each matrix &lt;code&gt;P[:, :, d, theta]&lt;/code&gt; by dividing by the total number of accumulated co-occurrences for the given offset. The elements of the resulting matrix sum to 1. The default is False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b1401a38762afaf8486e2b1b86d93226f2747c" translate="yes" xml:space="preserve">
          <source>If True, normalize the accumulator by the radius to sort the prominent peaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d2e5988da7c1a8cc80bfa4e67280c2059f6c7b" translate="yes" xml:space="preserve">
          <source>If True, pad &lt;code&gt;image&lt;/code&gt; so that output is the same size as the image, and output values correspond to the template center. Otherwise, the output is an array with shape &lt;code&gt;(M - m + 1, N - n + 1)&lt;/code&gt; for an &lt;code&gt;(M, N)&lt;/code&gt; image and an &lt;code&gt;(m, n)&lt;/code&gt; template, and matches correspond to origin (top-left corner) of the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d39f789af5cc44c1f46b15b122b5076e3674083" translate="yes" xml:space="preserve">
          <source>If True, return an read-only array stored in a binary file on disk if possible. The TIFF file is used if possible, else a temporary file is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b09332fdd28af6fb2f39a8721d6b49ff4bce3a" translate="yes" xml:space="preserve">
          <source>If True, return the full structural similarity image instead of the mean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbc1bedd02755626ad29bb89b8afc3f31761e2a" translate="yes" xml:space="preserve">
          <source>If True, returns the level set for this ellipsoid (signed level set about zero, with positive denoting interior) as np.float64. False returns a binarized version of said level set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002c53a472dd59d1da5d3632467b0fc385ee2a2e" translate="yes" xml:space="preserve">
          <source>If True, returns the negative sigmoid correction. Defaults to False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54f126bcf1840b98ead5f3264befdf7db7e5723" translate="yes" xml:space="preserve">
          <source>If True, show only those plugins currently loaded. By default, all plugins are shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b168920cfd2e03761405619149acf0dbeba3a6a4" translate="yes" xml:space="preserve">
          <source>If True, the BigTIFF format is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e903a275cea1b126a6665233c7b45530373801" translate="yes" xml:space="preserve">
          <source>If True, the MCP_Geometric class is used to calculate costs, if False, the MCP base class is used. See the class documentation for an explanation of the differences between MCP and MCP_Geometric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fbc385e2dd4c0951fce6f5af6e6cd592606bc77" translate="yes" xml:space="preserve">
          <source>If True, the generated image has &lt;code&gt;num_channels&lt;/code&gt; color channels, otherwise generates grayscale image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9f03eecdf77a60206b20a77742c6a7ac60efc2" translate="yes" xml:space="preserve">
          <source>If True, the last &lt;code&gt;arr_in&lt;/code&gt; dimension is threated as a color channel, otherwise as spatial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a939e06eb22d7cf18c5b7c42780c639e4a63bb7" translate="yes" xml:space="preserve">
          <source>If True, the last &lt;code&gt;image&lt;/code&gt; dimension is considered as a color channel, otherwise as spatial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c95c37fab78d3de7e4d2468ee25d7a371c1ef3a" translate="yes" xml:space="preserve">
          <source>If True, the matched keypoints are returned after cross checking i.e. a matched pair (keypoint1, keypoint2) is returned if keypoint2 is the best match for keypoint1 in second image and keypoint1 is the best match for keypoint2 in first image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc6b2cbc1fc15c975ddc3617b4657fd9481d4a2" translate="yes" xml:space="preserve">
          <source>If True, the output matrix &lt;code&gt;P[:, :, d, theta]&lt;/code&gt; is symmetric. This is accomplished by ignoring the order of value pairs, so both (i, j) and (j, i) are accumulated when (i, j) is encountered for a given offset. The default is False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb051059f0d24a5bc07d6f6d049e0ae23f3a3fc2" translate="yes" xml:space="preserve">
          <source>If True, the output will be an array representing peak coordinates. If False, the output will be a boolean array shaped as &lt;code&gt;image.shape&lt;/code&gt; with peaks present at True elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c260bf04004a614e688e2f52d2c2df529c4b8e5" translate="yes" xml:space="preserve">
          <source>If True, the probability that a pixel belongs to each of the labels will be returned, instead of only the most likely label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ecf00b8f7d4b69d04ea543ce944668f3e34ba8d" translate="yes" xml:space="preserve">
          <source>If True, the tag is written to the first page only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6e91a5e2db55f223ba9afabd92c0f8c8816462" translate="yes" xml:space="preserve">
          <source>If True, treat the last dimension of the array as channels. Similarity calculations are done independently for each channel then averaged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05bd3d014c00cf725ce0562ffef6e52e589fb44" translate="yes" xml:space="preserve">
          <source>If True, use blitting to speed up animation. Only available on some Matplotlib backends. If None, set to True when using Agg backend. This only has an effect if you draw on top of an image viewer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f947197c4bab79f72e2a07ae6658110df71e486" translate="yes" xml:space="preserve">
          <source>If True, write an ImageJ hyperstack compatible file. This format can handle data types uint8, uint16, or float32 and data shapes up to 6 dimensions in TZCYXS order. RGB images (S=3 or S=4) must be uint8. ImageJ&amp;rsquo;s default byte order is big endian but this implementation uses the system&amp;rsquo;s native byte order by default. ImageJ does not support BigTIFF format or LZMA compression. The ImageJ file format is undocumented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ee38fcf920b25213fcc4433aa854b1248f42c3" translate="yes" xml:space="preserve">
          <source>If a glob string is given for &lt;code&gt;load_pattern&lt;/code&gt;, this attribute stores the expanded file list. Otherwise, this is simply equal to &lt;code&gt;load_pattern&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c8e0844b38bbdd21c7f5d7c3c2085a4db843fa" translate="yes" xml:space="preserve">
          <source>If a mask is given, only those elements in &lt;code&gt;image&lt;/code&gt; with a true value in &lt;code&gt;mask&lt;/code&gt; are used for computing the medial axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b3f6bfb42e6b52258c850ea36ab66110271338" translate="yes" xml:space="preserve">
          <source>If an integer, shifts in &lt;code&gt;range(0, max_shifts+1)&lt;/code&gt; will be used along each axis of &lt;code&gt;x&lt;/code&gt;. If a tuple, &lt;code&gt;range(0, max_shifts[i]+1)&lt;/code&gt; will be along axis i.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ffc7bed044684c5334a4e5e530b0758a1766b54" translate="yes" xml:space="preserve">
          <source>If any of the pixels are invalid (Z &amp;lt; 0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67bdbb94f98a745c95b3f64265ba09975785e31c" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;threshold_abs&lt;/code&gt; and &lt;code&gt;threshold_rel&lt;/code&gt; are provided, the maximum of the two is chosen as the minimum intensity threshold of peaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3db48770e3ee7e20eb0df6d6367f7b080d8a72b" translate="yes" xml:space="preserve">
          <source>If both sigmas and ring_radii are given, they must satisfy the following predicate since no radius is needed for the center histogram.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64dadadcdd00e9759c76fda0d046f2079b11d1b0" translate="yes" xml:space="preserve">
          <source>If called with a masked 1D array or called with a 1D array and &lt;code&gt;wrap_around=True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7087466c267f6796d09a03c98fbfa8f143c78270" translate="yes" xml:space="preserve">
          <source>If copy is False, the &lt;code&gt;labels&lt;/code&gt; array will be overwritten with the result of the segmentation. Use copy=False if you want to save on memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5723d72d6295a2413411d0b32d38fd3af33d96" translate="yes" xml:space="preserve">
          <source>If cv_image is an array of unsigned bytes, &lt;code&gt;skimage&lt;/code&gt; will understand it by default. If you prefer working with floating point images, &lt;code&gt;img_as_float()&lt;/code&gt; can be used to convert the image:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb7008708fc74f1d0b93e575e49c2d9bda8ddec9" translate="yes" xml:space="preserve">
          <source>If either the illuminant or the observer angle are not supported or unknown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e300c3f6f6935d4df66d8f3c6d88ff99415a65a" translate="yes" xml:space="preserve">
          <source>If either the illuminant or the observer angle is unsupported or unknown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a140a9f8c39aad9820fa48d1193f895c8e36445e" translate="yes" xml:space="preserve">
          <source>If given and True, the classic marching cubes by Lorensen (1987) is used. This option is included for reference purposes. Note that this algorithm has ambiguities and is not guaranteed to produce a topologically correct result. The results with using this option are &lt;em&gt;not&lt;/em&gt; generally the same as the &lt;code&gt;marching_cubes_classic()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35c6cbe56bff2d5b89afcd962d4b5d757a0d88d" translate="yes" xml:space="preserve">
          <source>If given, this function is called once per iteration with the current level set as the only argument. This is useful for debugging or for plotting intermediate results during the evolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f4746af69ae5d7e8c58ef463dbbca96937a6f5" translate="yes" xml:space="preserve">
          <source>If images in &lt;code&gt;ic&lt;/code&gt; don&amp;rsquo;t have identical shapes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aebf1501a55345e7fb8a339adac366b8eae87590" translate="yes" xml:space="preserve">
          <source>If images in the &lt;code&gt;ImageCollection&lt;/code&gt; don&amp;rsquo;t have identical shapes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2403d0bd3d2ac8c8a9756c4cde9cd9202cbe9926" translate="yes" xml:space="preserve">
          <source>If int, random_state is the seed used by the random number generator; If RandomState instance, random_state is the random number generator; If None, the random number generator is the RandomState instance used by &lt;code&gt;np.random&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50de493edf108c426e70c3e401a32459f419cc6b" translate="yes" xml:space="preserve">
          <source>If int, random_state is the seed used by the random number generator; If RandomState instance, random_state is the random number generator; If None, the random number generator is the RandomState instance used by &lt;code&gt;np.random&lt;/code&gt;. The random state is used when generating a set of features smaller than the total number of available features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0c356ebf46f2aecd54f2f1165df63c840492f2" translate="yes" xml:space="preserve">
          <source>If memmap is True, return an array stored in a binary file on disk. The args and kwargs parameters are passed to the imread function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c1e2d3987fa10a29ebcafdc9c7ec85ef38370b" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;offsets&lt;/code&gt; are provided, this determines the connectivity of the generated neighborhood. If true, the path may go along diagonals between elements of the &lt;code&gt;costs&lt;/code&gt; array; otherwise only axial moves are permitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee56d12a334d619fc00ea795eb906328bfb02c4" translate="yes" xml:space="preserve">
          <source>If nonzero, &lt;code&gt;exclude_border&lt;/code&gt; excludes peaks from within &lt;code&gt;exclude_border&lt;/code&gt;-pixels of the border of the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a38cd3f59590540d58a4052eabed2b287bcba2" translate="yes" xml:space="preserve">
          <source>If peaks are flat (i.e. multiple adjacent pixels have identical intensities), the coordinates of all such pixels are returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a82036b91f89c42c0871ab79c359d83ec807c7" translate="yes" xml:space="preserve">
          <source>If provided, &lt;code&gt;footprint == 1&lt;/code&gt; represents the local region within which to search for peaks at every point in &lt;code&gt;image&lt;/code&gt;. Overrides &lt;code&gt;min_distance&lt;/code&gt; (also for &lt;code&gt;exclude_border&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08723c06fee708388f68dd1d05de8cffd46fca1e" translate="yes" xml:space="preserve">
          <source>If provided, each unique region &lt;code&gt;labels == value&lt;/code&gt; represents a unique region to search for peaks. Zero is reserved for background.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4dd5823e0155db4b5f28a6d3c548c7d7a01dc2a" translate="yes" xml:space="preserve">
          <source>If provided, this will set the random seed before generating noise, for valid pseudo-random comparisons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a392ce8d2e080f32d7b6c86f0cf2ca1b551bc7b8" translate="yes" xml:space="preserve">
          <source>If scale is 1, the figure and axes have the same dimension as the image. Smaller values of &lt;code&gt;scale&lt;/code&gt; will shrink the figure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a6cc76fbd39defec22eb49d1056b69997f4fcd" translate="yes" xml:space="preserve">
          <source>If set intermediate values of standard deviations are interpolated using a logarithmic scale to the base &lt;code&gt;10&lt;/code&gt;. If not, linear interpolation is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f28dea7c1f34f390a41245551071ce7a6bd39131" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;True&lt;/code&gt;, the merged node has the id &lt;code&gt;dst&lt;/code&gt;, else merged node has a new id which is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88fb82ff0e9131db2716e47d053dcfe8e3fb3825" translate="yes" xml:space="preserve">
          <source>If set to True, the return value will be a tuple containing the three return values (see below). If set to False which is the default value, only the &amp;lsquo;segmentation&amp;rsquo; array will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca869e564fb66bdd09435612a21b112cb77b7c3" translate="yes" xml:space="preserve">
          <source>If set, modifies &lt;code&gt;rag&lt;/code&gt; in place. For each node &lt;code&gt;n&lt;/code&gt; the function will set a new attribute &lt;code&gt;rag.node[n]['ncut label']&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1c28f27e4fc3644bd941bbd53f206cb21ed3ce" translate="yes" xml:space="preserve">
          <source>If set, modifies &lt;code&gt;rag&lt;/code&gt; in place. The function will remove the edges with weights less that &lt;code&gt;thresh&lt;/code&gt;. If set to &lt;code&gt;False&lt;/code&gt; the function makes a copy of &lt;code&gt;rag&lt;/code&gt; before proceeding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d705b194fdc954e33c29f5eb1fc843b14d35c9e3" translate="yes" xml:space="preserve">
          <source>If set, the &lt;code&gt;image&lt;/code&gt; and &lt;code&gt;energy_map&lt;/code&gt; are copied before being used by the method which modifies it in place. Set this to &lt;code&gt;False&lt;/code&gt; if the original image and the energy map are no longer needed after this operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f02f049b957e119c79876def808da3ecc83d955" translate="yes" xml:space="preserve">
          <source>If set, the RAG copied before modifying.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6502619e48a0e5c9fe7ab1b81ce3f4a04080424" translate="yes" xml:space="preserve">
          <source>If set, the RAG is modified in place. For each node &lt;code&gt;n&lt;/code&gt; the function will set a new attribute &lt;code&gt;rag.node[n]['centroid']&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc21423a0e0507152f3a017af6ddaa5779ed829" translate="yes" xml:space="preserve">
          <source>If set, the nodes are merged in place. Otherwise, a new node is created for each merge..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1ac76961046f5477e6c9bd5326c005be013fca" translate="yes" xml:space="preserve">
          <source>If the array type is int, it is assumed that it contains already-labeled objects. The labels are not kept in the output image (this function always outputs a bool image). It is suggested that labeling is completed after using this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d16abf81bdc354309bd5c30d2e3b919d593292" translate="yes" xml:space="preserve">
          <source>If the image array has less than two or more than four dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a497d9e73d470b2d6ce684da40e41910a7118a6" translate="yes" xml:space="preserve">
          <source>If the input array contains negative values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7839b02175f1c1b9ea0a02fc97000c0e92e847" translate="yes" xml:space="preserve">
          <source>If the input array is of an invalid type, such as float or string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a88a3975f34484aa739ad7b1fbeae999cd6bb472" translate="yes" xml:space="preserve">
          <source>If the input is 3D, this function performs wavelet denoising on each color plane separately. The output image is clipped between either [-1, 1] and [0, 1] depending on the input image range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c39626510d2c6fa7c55ea3d973f21559c36122a" translate="yes" xml:space="preserve">
          <source>If the input is a 1-dimensional image of shape &lt;code&gt;(M, )&lt;/code&gt;, the output will be shape &lt;code&gt;(M, 3)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25c4e9ad57b963bd0a28a32dd72c35de9497102" translate="yes" xml:space="preserve">
          <source>If the input is not a 1-, 2- or 3-dimensional image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f196493b476cf9e5d40d94cf7aa1d3e2e17083" translate="yes" xml:space="preserve">
          <source>If the line is parallel to the given axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61aa6fc2489fa3511f4665eefd9f544c21c293ef" translate="yes" xml:space="preserve">
          <source>If the min/max value of &lt;code&gt;in_range&lt;/code&gt; is more/less than the min/max image intensity, then the intensity levels are clipped:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5fe9fade7f3d3d0ebf288b416959446ceaa0b6f" translate="yes" xml:space="preserve">
          <source>If the noise standard deviation, &lt;code&gt;sigma&lt;/code&gt;, is provided a more robust computation of patch weights is used. Subtracting the known noise variance from the computed patch distances improves the estimates of patch similarity, giving a moderate improvement to denoising performance &lt;a href=&quot;#rc9b3919da938-4&quot; id=&quot;id30&quot;&gt;[4]&lt;/a&gt;. It was also mentioned as an option for the fast variant of the algorithm in &lt;a href=&quot;#rc9b3919da938-3&quot; id=&quot;id31&quot;&gt;[3]&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80582ea48fd70f12c80361b46650b8070fc9bfbc" translate="yes" xml:space="preserve">
          <source>If there is an alpha channel present, it is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe75bc4d5bc5436c0f29086e08256afe79f12c6" translate="yes" xml:space="preserve">
          <source>If true, average the channel estimates of &lt;code&gt;sigma&lt;/code&gt;. Otherwise return a list of sigmas corresponding to each channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5782b450215eb39009e18aa059a9e96b3bbfda45" translate="yes" xml:space="preserve">
          <source>If true, the distance transform is returned as well as the skeleton.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5128512bd7ea7dc71fe6983d1d261a6c439cba1c" translate="yes" xml:space="preserve">
          <source>If unable to find two local maxima in the histogram or if the smoothing takes more than 1e4 iterations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8d2ea8a3655e46a9c1a140f1e8a3f66b68c3ba" translate="yes" xml:space="preserve">
          <source>If using with &lt;code&gt;feature_coord&lt;/code&gt;, it should correspond to the feature type of each associated coordinate feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15145b62432a0824cd5d04878f98a5f8c09d6e13" translate="yes" xml:space="preserve">
          <source>If watershed_line is True, a one-pixel wide line separates the regions obtained by the watershed algorithm. The line has the label 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed8c6f1cff9bc355397ecc18a753617c141075b" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want to simply replace the displayed image with the filtered image (e.g., you want to display a transparent overlay), you can override this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c313223cc4bb570ce6b43ee39beb8a09a56fa83" translate="yes" xml:space="preserve">
          <source>If you have an image with signed integers but want to rescale the image to just the positive range, use the &lt;code&gt;out_range&lt;/code&gt; parameter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d7f807366155bfe58ff2e27f30b887863908110" translate="yes" xml:space="preserve">
          <source>If you need to apply the same filter multiple times over different images, construct the LPIFilter2D and specify it here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e19fda0d5b4b74a4a1a1d584e56578693a4ea4" translate="yes" xml:space="preserve">
          <source>Image</source>
          <target state="translated">Image</target>
        </trans-unit>
        <trans-unit id="d9ffdc5614e253f8138a385edd47dcbfbdf2414e" translate="yes" xml:space="preserve">
          <source>Image Processing SciKit (Toolbox for SciPy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bba56a55842d1b7c18c092d08ba8f139f912574" translate="yes" xml:space="preserve">
          <source>Image Segmentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b84bca7ebef4bb37bc2dbaf80ff6a6b497bf1e9" translate="yes" xml:space="preserve">
          <source>Image Viewer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e36055f4cdcacef801d07b85f64c3de4e02ece3" translate="yes" xml:space="preserve">
          <source>Image adjustment: transforming image content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4819cae75b86054777632471d83ece887ba3f371" translate="yes" xml:space="preserve">
          <source>Image array (uint8 array).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e81485bf50e0a917a90ebd75e99fc67094ce11c5" translate="yes" xml:space="preserve">
          <source>Image array after histogram equalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398b83edf20371828fe292f189efd5ed8d577e11" translate="yes" xml:space="preserve">
          <source>Image array after rescaling its intensity. This image is the same dtype as the input image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232d57d1c622213cb83df035ac7dd484d80b5f8b" translate="yes" xml:space="preserve">
          <source>Image array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9b5c7946852ed43e876e55567db0e0223d6da4" translate="yes" xml:space="preserve">
          <source>Image axes to update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c6905e68dd566d081c9755ad7172b3bf3b798f" translate="yes" xml:space="preserve">
          <source>Image being viewed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16cde5daee4dc53cb4f765aee9962dbef57477b" translate="yes" xml:space="preserve">
          <source>Image being viewed. Setting this value will update the displayed frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872fb513ddc358a84b5efbc2d7f3c66b1a8a4e33" translate="yes" xml:space="preserve">
          <source>Image containing an initial reconstruction estimate. Shape of this array should be &lt;code&gt;(radon_image.shape[0], radon_image.shape[0])&lt;/code&gt;. The default is an array of zeros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="671ad12d6d4c50626f79bd49e20397e454e0a311" translate="yes" xml:space="preserve">
          <source>Image containing radon transform (sinogram). Each column of the image corresponds to a projection along a different angle. The tomography rotation axis should lie at the pixel index &lt;code&gt;radon_image.shape[0] // 2&lt;/code&gt; along the 0th dimension of &lt;code&gt;radon_image&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea04fb74cf25fd4babf3153efeed11b48f571715" translate="yes" xml:space="preserve">
          <source>Image data are written in one stripe per plane by default. Dimensions larger than 2 to 4 (depending on photometric mode, planar configuration, and SGI mode) are flattened and saved as separate pages. The &amp;lsquo;sample_format&amp;rsquo; and &amp;lsquo;bits_per_sample&amp;rsquo; tags are derived from the data type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0263a2f2a84e1ea8c370e3af6b3e4ad310255328" translate="yes" xml:space="preserve">
          <source>Image data or name of image file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc711a6387854e4721cd080acfd30b64193cdba6" translate="yes" xml:space="preserve">
          <source>Image data stored as numpy array with origin at the bottom-left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec0c63a937af6bd354fc8dd50f26c381ad5770d" translate="yes" xml:space="preserve">
          <source>Image data stored as numpy array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98c144fd38c4354f0534fd841186e9ab2218c17" translate="yes" xml:space="preserve">
          <source>Image data types and what they mean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b102e8ba16eafab01f06ffeaa720d2418cdb3fc9" translate="yes" xml:space="preserve">
          <source>Image data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d828895e7e1af8a6e3cf659b33202edb82b0d7" translate="yes" xml:space="preserve">
          <source>Image file name, e.g. &lt;code&gt;test.jpg&lt;/code&gt; or URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5451a211d4767f786f3212eb935cb98d5acb8d8" translate="yes" xml:space="preserve">
          <source>Image for which to estimate the noise standard deviation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="235f6ef741948adbfec3023fe085bfaed8af241b" translate="yes" xml:space="preserve">
          <source>Image inside region bounding box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215e240b8478c2f6b27df0d77e55f5439821452a" translate="yes" xml:space="preserve">
          <source>Image intensity adjustment, e.g., histogram equalization, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919cc65653321d454b024a7c7327fe2f0031af1b" translate="yes" xml:space="preserve">
          <source>Image inversion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae979cf28ab0feeeb31bf41bc926a370b2e0c342" translate="yes" xml:space="preserve">
          <source>Image loaded from &lt;code&gt;skimage.data_dir&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb8514dbed52f696e30e51e8588f06263b5e07b" translate="yes" xml:space="preserve">
          <source>Image moments and central image moments are equivalent (by definition) when the center is (0, 0):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a68e65ee1fe5cb563963383977ed39672fb5adf" translate="yes" xml:space="preserve">
          <source>Image on which to visualize the pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ea5cdee0124a6ec60472b8844fff2fed30cff3" translate="yes" xml:space="preserve">
          <source>Image pixels can take values determined by the &lt;code&gt;dtype&lt;/code&gt; of the image (see &lt;a href=&quot;data_types#data-types&quot;&gt;Image data types and what they mean&lt;/a&gt;), such as 0 to 255 for &lt;code&gt;uint8&lt;/code&gt; images or &lt;code&gt;[0,
1]&lt;/code&gt; for floating-point images. However, most images either have a narrower range of values (because of poor contrast), or have most pixel values concentrated in a subrange of the accessible values. &lt;a href=&quot;../api/skimage.exposure#module-skimage.exposure&quot;&gt;&lt;code&gt;skimage.exposure&lt;/code&gt;&lt;/a&gt; provides functions that spread the intensity values over a larger range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26107e2c7c6f05f6e1ed40a7783bb6aaecaeb780" translate="yes" xml:space="preserve">
          <source>Image popped from the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465fbdec3ba1ff0621a5d82fc5518fd5ee6aee9d" translate="yes" xml:space="preserve">
          <source>Image processing pipeline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bba99fdaa69f0d0bd3fc21b15f796a8b5c79af1" translate="yes" xml:space="preserve">
          <source>Image read function or class with asarray function returning numpy array from single file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab14f1e1e0158bd4c405810d841a2ff13d3dd2e" translate="yes" xml:space="preserve">
          <source>Image reading and writing via SimpleITK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7628f4150fc43e761c20ef0f86ac08f2a89ead26" translate="yes" xml:space="preserve">
          <source>Image reading and writing via imread</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a20680c9c4e8c5b9edae6e67e8c281f48fc6238" translate="yes" xml:space="preserve">
          <source>Image reading via the GDAL Library (www.gdal.org)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="febe0466ed05f3e198227bd72dbb691ee50e843e" translate="yes" xml:space="preserve">
          <source>Image reading via the ImageIO Library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba56087817e6ca93b2e8b414604feda66c5b2cd7" translate="yes" xml:space="preserve">
          <source>Image reading via the Python Imaging Library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99b1a91523a3766df08f152859e5467ff5726ed" translate="yes" xml:space="preserve">
          <source>Image restoration module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f72e1a946effeba332cf0b4f652283271b41c9" translate="yes" xml:space="preserve">
          <source>Image segmentation is the task of labeling the pixels of objects of interest in an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd08bf0e99e27baec7d565d155bace4fc0bd836d" translate="yes" xml:space="preserve">
          <source>Image shape used to determine the maximum bounds of the output coordinates. This is useful for clipping rectangles that exceed the image size. By default, no clipping is done.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb89108942c0a20600038da78938b545483dc1a" translate="yes" xml:space="preserve">
          <source>Image shape which is used to determine maximum extents of output pixel coordinates. This is useful for polygons that exceed the image size. If None, the full extents of the polygon is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649d266b2ab1df31accb0621efe73ccd3377c049" translate="yes" xml:space="preserve">
          <source>Image shape which is used to determine the maximum extent of output pixel coordinates. This is useful for circles that exceed the image size. If None, the full extent of the circle is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de70dcb390378763ac43ad002a531e5364f1a70" translate="yes" xml:space="preserve">
          <source>Image shape which is used to determine the maximum extent of output pixel coordinates. This is useful for curves that exceed the image size. If None, the full extent of the curve is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4521126531a0185ef547edc1017b77e65ab8a7" translate="yes" xml:space="preserve">
          <source>Image shape which is used to determine the maximum extent of output pixel coordinates. This is useful for ellipses that exceed the image size. If None, the full extent of the ellipse is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab6532298136e502f00f4abed44005bbc939091" translate="yes" xml:space="preserve">
          <source>Image shape which is used to determine the maximum extent of output pixel coordinates. This is useful for ellipses which exceed the image size. By default the full extent of the ellipse are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca5ae8a103ebe6eb569d4a450c1ff04fb2b5551" translate="yes" xml:space="preserve">
          <source>Image shape which is used to determine the maximum extent of output pixel coordinates. This is useful for polygons that exceed the image size. If None, the full extent of the polygon is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b9d11ffe56c6b3259e5845d259766dc416c31f" translate="yes" xml:space="preserve">
          <source>Image to be segmented in phases. Gray-level &lt;code&gt;data&lt;/code&gt; can be two- or three-dimensional; multichannel data can be three- or four- dimensional (multichannel=True) with the highest dimension denoting channels. Data spacing is assumed isotropic unless the &lt;code&gt;spacing&lt;/code&gt; keyword argument is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de92e47367823fbd95ba4d83fd40d0ee6cc4faab" translate="yes" xml:space="preserve">
          <source>Image to label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f961aa3fc1ee2eda34117f0fee3b811fa9215d69" translate="yes" xml:space="preserve">
          <source>Image to process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0981ec54c626023f2143b4e74876922279d06ce6" translate="yes" xml:space="preserve">
          <source>Image to process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea17bfbbe70d8326a8ff3e05c0b84ef74af0c9b" translate="yes" xml:space="preserve">
          <source>Image to push.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f0c1b62d60b46f5386d5885955f73bf3c7aab0" translate="yes" xml:space="preserve">
          <source>Image to register. Must be same dimensionality as &lt;code&gt;src_image&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01602140e2a7c5c326242ee266afd5572f9bb02d" translate="yes" xml:space="preserve">
          <source>Image type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3099c69e92af55b76324bb2d63643a7b465e171c" translate="yes" xml:space="preserve">
          <source>Image used as underlay for labels. If the input is an RGB image, it&amp;rsquo;s converted to grayscale before coloring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c0f0777129c16c050805f961dfb4b9ac0345b1" translate="yes" xml:space="preserve">
          <source>Image with MB-LBP visualization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3fcbfe5a288ca1c4bb920f918360f2d4fe10a75" translate="yes" xml:space="preserve">
          <source>Image. Any dimensionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cef8f64908201535e3aff3fc0baa71612526f10" translate="yes" xml:space="preserve">
          <source>ImageCollection</source>
          <target state="translated">ImageCollection</target>
        </trans-unit>
        <trans-unit id="bad4eee99151ef5f0e8b8d444f966905043a6d80" translate="yes" xml:space="preserve">
          <source>ImageCollection can be modified to load images from an arbitrary source by specifying a combination of &lt;code&gt;load_pattern&lt;/code&gt; and &lt;code&gt;load_func&lt;/code&gt;. For an ImageCollection &lt;code&gt;ic&lt;/code&gt;, &lt;code&gt;ic[5]&lt;/code&gt; uses &lt;code&gt;load_func(file_pattern[5])&lt;/code&gt; to load the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82185ab6587082cbee1c2eb1f09681e761fc92c7" translate="yes" xml:space="preserve">
          <source>ImageJ AutoThresholder code, &lt;a href=&quot;http://fiji.sc/wiki/index.php/Auto_Threshold&quot;&gt;http://fiji.sc/wiki/index.php/Auto_Threshold&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c033e5027a160e20d271415cf9079129f5e2d2" translate="yes" xml:space="preserve">
          <source>ImageViewer</source>
          <target state="translated">ImageViewer</target>
        </trans-unit>
        <trans-unit id="a7dd4395ec6b3aa7100321232386fca450e7f0b9" translate="yes" xml:space="preserve">
          <source>ImageViewer class for viewing and interacting with images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d12845a5cef0d3691e967bebc4d959e8f48e219" translate="yes" xml:space="preserve">
          <source>Imageio</source>
          <target state="translated">Imageio</target>
        </trans-unit>
        <trans-unit id="9f1c23db97c62e830a28d539b7032e582d28c2a4" translate="yes" xml:space="preserve">
          <source>Imageio can be installed with pip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098bc4e52bf309cc5914bae7834d5215e0bd075f" translate="yes" xml:space="preserve">
          <source>Images manipulated by &lt;code&gt;scikit-image&lt;/code&gt; are simply NumPy arrays. Hence, a large fraction of operations on images will just consist in using NumPy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e035d4b2162327f79e9f90c49007bcc66748fd" translate="yes" xml:space="preserve">
          <source>Images of shape (M, N, 3) are interpreted as 2D RGB images by default. To interpret them as 3D with the last dimension having length 3, use &lt;code&gt;multichannel=False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ea56b44bf2b3e69668d9b96acf7a600eb9f3ae" translate="yes" xml:space="preserve">
          <source>Imagine, for example, an ImageCollection that loads every tenth frame from a video file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7445f54d756fb8e1ce07a9af90e89c9285a323d1" translate="yes" xml:space="preserve">
          <source>Imaging data labels with cleared borders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76bf9d5d05ab9f8e2f29b5397a3cba833a4e049a" translate="yes" xml:space="preserve">
          <source>Imaging data labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf545197cf5535e45082145097938447434d8a3f" translate="yes" xml:space="preserve">
          <source>Immunohistochemical (IHC) staining with hematoxylin counterstaining.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca770014f4a51ee97e38a5dadfb09ea9e31488d" translate="yes" xml:space="preserve">
          <source>Immunohistochemistry image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abbbb551a3f78858a80322754d9a42316a7ccf89" translate="yes" xml:space="preserve">
          <source>Impulse response of the filter. See LPIFilter2D.__init__.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac41d8083f869c638cbe1ce56e3d3a6b44b8a96" translate="yes" xml:space="preserve">
          <source>In &amp;lsquo;rc&amp;rsquo; coordinates, angle between the 0th axis (rows) and the major axis of the ellipse that has the same second moments as the region, ranging from &lt;code&gt;-pi/2&lt;/code&gt; to &lt;code&gt;pi/2&lt;/code&gt; counter-clockwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7dbc863b83628844b228cf65431f86f85c0a0e" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;skimage&lt;/code&gt;, images are simply &lt;a href=&quot;http://docs.scipy.org/doc/numpy/user/&quot;&gt;numpy&lt;/a&gt; arrays, which support a variety of data types &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;, &lt;em&gt;i.e.&lt;/em&gt; &amp;ldquo;dtypes&amp;rdquo;. To avoid distorting image intensities (see &lt;a href=&quot;#rescaling-intensity-values&quot;&gt;Rescaling intensity values&lt;/a&gt;), we assume that images use the following dtype ranges:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f73cc714de80bc48709091037354dc141f9e98e" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;xy&lt;/code&gt; coordinates, as above but the angle is now measured from the &amp;ldquo;x&amp;rdquo; or horizontal axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea89fbdd57a3d166f7a68c5e7d01513348ae313" translate="yes" xml:space="preserve">
          <source>In FFmpeg, the following command generates an image file from each frame in a video. The files are numbered with five digits, padded on the left with zeros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a310d854c66a73f201404b3b1aa1276f0757c1" translate="yes" xml:space="preserve">
          <source>In a scientific context, it is usually better to avoid these formats in favor of a simple directory of images or a multi-dimensional TIF. Video formats are more difficult to read piecemeal, typically do not support random frame access or research-minded meta data, and use lossy compression if not carefully configured. But video files are in widespread use, and they are easy to share, so it is convenient to be equipped to read and write them when necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1336e2064d9e2ff26946e8cd412ee794c69bc4ca" translate="yes" xml:space="preserve">
          <source>In case of a &lt;code&gt;SimilarityTransform&lt;/code&gt;, &lt;code&gt;AffineTransform&lt;/code&gt; and &lt;code&gt;ProjectiveTransform&lt;/code&gt; and &lt;code&gt;order&lt;/code&gt; in [0, 3] this function uses the underlying transformation matrix to warp the image with a much faster routine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272567beccf9003b21e6ac8140d461328c4b0a90" translate="yes" xml:space="preserve">
          <source>In case of the affine transformation the coefficients c0 and c1 are 0. Thus the system of equations is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9a3c81af4c46317f935349531ec1e73bd7f7f2" translate="yes" xml:space="preserve">
          <source>In case of total least-squares the solution of this homogeneous system of equations is the right singular vector of A which corresponds to the smallest singular value normed by the coefficient c3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0094e16f5b9905c17e063181b7043771b6e8ef" translate="yes" xml:space="preserve">
          <source>In contrast to &lt;code&gt;marching_cubes_classic()&lt;/code&gt;, this algorithm is faster, resolves ambiguities, and guarantees topologically correct results. Therefore, this algorithm generally a better choice, unless there is a specific need for the classic algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d704109092e2578dda498f81bdc913acc19f33" translate="yes" xml:space="preserve">
          <source>In contrast to ordinary least squares line estimation, this estimator minimizes the orthogonal distances of points to the estimated line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338be8cb68e7c8792c9fb966b28da6f3f30d0795" translate="yes" xml:space="preserve">
          <source>In contrast to the 2-D interpolation in &lt;code&gt;skimage.transform.resize&lt;/code&gt; and &lt;code&gt;skimage.transform.rescale&lt;/code&gt; this function may be applied to N-dimensional images and calculates the local mean of elements in each block of size &lt;code&gt;factors&lt;/code&gt; in the input image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43749ce841d61ce28a0b8e6161d9c7aa9f589eb5" translate="yes" xml:space="preserve">
          <source>In image processing, we frequently apply the same algorithm on a large batch of images. In this paragraph, we propose to use &lt;a href=&quot;https://pythonhosted.org/joblib/&quot;&gt;joblib&lt;/a&gt; to parallelize loops. Here is an example of such repetitive tasks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4bdabd056559ff39d4109cc5fee8463b950bf87" translate="yes" xml:space="preserve">
          <source>In many cases, the third imaging dimension has lower resolution than the other two. Some scikit-image functions provide a &lt;code&gt;spacing&lt;/code&gt; keyword argument to process these images:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a719b703f53cd8aab6eaa55faf245b8affa034" translate="yes" xml:space="preserve">
          <source>In other words, &lt;code&gt;impulse_response&lt;/code&gt; would be called like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408c8136b8bde28a475cc098c1904f20c42e4a74" translate="yes" xml:space="preserve">
          <source>In particular, if given an array of coordinates of shape (Npoints, Ndim), it will remove repeated points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7879bd1e57002432f16c042fe410fbbed29228b9" translate="yes" xml:space="preserve">
          <source>In the case of color (or multichannel) images, the last dimension contains the color information and is denoted &lt;code&gt;channel&lt;/code&gt; or &lt;code&gt;ch&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13a7f24e6d6b95642e4c7f2b700878db17fee81" translate="yes" xml:space="preserve">
          <source>In the original method a threshold T is calculated for every pixel in the image using the following formula:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eadfbc6a53f08fba6acb86d91d63d1cc432d6ea2" translate="yes" xml:space="preserve">
          <source>In the original version of the algorithm &lt;a href=&quot;#rc9b3919da938-1&quot; id=&quot;id26&quot;&gt;[1]&lt;/a&gt;, corresponding to &lt;code&gt;fast=False&lt;/code&gt;, the computational complexity is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51de1f3a074e08774510db56e4bd5caab278f85" translate="yes" xml:space="preserve">
          <source>In this example, only one plugin is attached, so the list returned by &lt;code&gt;show&lt;/code&gt; will have length 1. We extract the single tuple and bind its &lt;code&gt;overlay&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt; elements to individual variables. Here, &lt;code&gt;overlay&lt;/code&gt; contains an image of the line drawn on the viewer, and &lt;code&gt;data&lt;/code&gt; contains the 1-dimensional intensity profile along that line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076425d3033beb4768eab87fd176307c85610c72" translate="yes" xml:space="preserve">
          <source>In this tutorial, we will see how to segment objects from a background. We use the &lt;code&gt;coins&lt;/code&gt; image from &lt;code&gt;skimage.data&lt;/code&gt;. This image shows several coins outlined against a darker background. The segmentation of the coins cannot be done directly from the histogram of grey values, because the background shares enough grey levels with the coins that a thresholding segmentation is not sufficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c5af99d2b92d34099b0b3b3e6941057dca10a7" translate="yes" xml:space="preserve">
          <source>Increasing the compactness parameter yields more square regions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="translated">Index</target>
        </trans-unit>
        <trans-unit id="8b08aaea5205850bc5380150ff8e824babef18d4" translate="yes" xml:space="preserve">
          <source>Indicates step size at which extraction shall be performed. If integer is given, then the step is uniform in all dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="496a96b871dc3b788e9e79287c9f00ccfb356590" translate="yes" xml:space="preserve">
          <source>Indicates whether array elements below the given level value are to be considered fully-connected (and hence elements above the value will only be face connected), or vice-versa. (See notes below for details.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad817ebe5831deac348a4825497658cdd36552f3" translate="yes" xml:space="preserve">
          <source>Indicates whether seams are to be removed vertically or horizontally. Removing seams horizontally will decrease the height whereas removing vertically will decrease the width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="879c68c894fd43cf26a5a1ec7cb9d5c02d5ca4c0" translate="yes" xml:space="preserve">
          <source>Indicates whether the output contours will produce positively-oriented polygons around islands of low- or high-valued elements. If &amp;lsquo;low&amp;rsquo; then contours will wind counter- clockwise around elements below the iso-value. Alternately, this means that low-valued elements are always on the left of the contour. (See below for details.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e0495e30e8cff52bf5a99cf4ec27c6f91b3af2" translate="yes" xml:space="preserve">
          <source>Indices</source>
          <target state="translated">Indices</target>
        </trans-unit>
        <trans-unit id="dd97b33ff44cc3cb2f6ac48ebc35f069e81c9118" translate="yes" xml:space="preserve">
          <source>Indices of corresponding matches in first and second set of descriptors, where &lt;code&gt;matches[:, 0]&lt;/code&gt; denote the indices in the first and &lt;code&gt;matches[:, 1]&lt;/code&gt; the indices in the second set of descriptors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb16a2139e48fc00c4bee9e338fbb746131013e" translate="yes" xml:space="preserve">
          <source>Indices of pixels (&lt;code&gt;rr&lt;/code&gt;, &lt;code&gt;cc&lt;/code&gt;) and intensity values (&lt;code&gt;val&lt;/code&gt;). &lt;code&gt;img[rr, cc] = val&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064d9c3ac277c7604a20f194bc4bdf3822cb2ed8" translate="yes" xml:space="preserve">
          <source>Indices of pixels that belong to the Bezier curve. May be used to directly index into an array, e.g. &lt;code&gt;img[rr, cc] = 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20f09da7f66f0e2ab888807eb32500b6d0d8749" translate="yes" xml:space="preserve">
          <source>Indices of pixels that belong to the ellipse perimeter. May be used to directly index into an array, e.g. &lt;code&gt;img[rr, cc] = 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c018880f12f3d6356bd72f929aa45079f6411dae" translate="yes" xml:space="preserve">
          <source>Indices of pixels that belong to the line. May be used to directly index into an array, e.g. &lt;code&gt;img[rr, cc] = 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab41991519240ee4617dade4bd9ef93e68aaadbf" translate="yes" xml:space="preserve">
          <source>Indices of the pages to read. If None (default) all pages are read. Can be used to read only the first page with pages=[0]. Specifying pages might invalidate series based on metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40bd89c784d32f66c184b7e32031e9f514941e7d" translate="yes" xml:space="preserve">
          <source>Inertia tensor of the region for the rotation around its mass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f41a8fa55a7bc051fceb89c77de327b361d9ddd" translate="yes" xml:space="preserve">
          <source>Initial level set. If an array is given, it will be binarized and used as the initial level set. If a string is given, it defines the method to generate a reasonable initial level set with the shape of the &lt;code&gt;image&lt;/code&gt;. Accepted values are &amp;lsquo;checkerboard&amp;rsquo; and &amp;lsquo;circle&amp;rsquo;. See the documentation of &lt;code&gt;checkerboard_level_set&lt;/code&gt; and &lt;code&gt;circle_level_set&lt;/code&gt; respectively for details about how these level sets are created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87a439c0a6b88780dadab343b99a8478a8e748c" translate="yes" xml:space="preserve">
          <source>Initial or additional edges to pass to the NetworkX Graph constructor. See &lt;code&gt;networkx.Graph&lt;/code&gt;. Valid edge specifications include edge list (list of tuples), NumPy arrays, and SciPy sparse matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ef4db9291f118952e1c1194cd62ff092d8e3ca" translate="yes" xml:space="preserve">
          <source>Initial state of the CheckBox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004d083c9c578dd1610d95ca56be9b3701ef5eff" translate="yes" xml:space="preserve">
          <source>Initialisation coordinates of snake. For periodic snakes, it should not include duplicate endpoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f67a5d48bf73ab6328edcd9119b409ad9f6b8e1" translate="yes" xml:space="preserve">
          <source>Initialize QAppliction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c47ef1dfd843e2d6a7d07fc69433f4874ea9a19" translate="yes" xml:space="preserve">
          <source>Initialize a graph with edges, name, or graph attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c54a3a4b263a20ea2528000e6dae0a0f803d1a" translate="yes" xml:space="preserve">
          <source>Initialize instance from file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6360086211ae6845eba4ced44b12f2e25e418dd1" translate="yes" xml:space="preserve">
          <source>Initialize instance from multiple files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f66672d1a211feccb2663e524389cc7bbdc9544" translate="yes" xml:space="preserve">
          <source>Initialize self. See help(type(self)) for accurate signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06a115ad17b626dbd5fc9149098dbf5c86f1c55" translate="yes" xml:space="preserve">
          <source>Initiliaze spline:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e75038336dd6a60a75b713b9c982576adadac45" translate="yes" xml:space="preserve">
          <source>Inpaint masked points in image with biharmonic equations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df78d5709935001a8bf74fe47ed30fca9beafae5" translate="yes" xml:space="preserve">
          <source>Input array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ca749420dd58126c1f3f4ccf95ce2fc49387c9" translate="yes" xml:space="preserve">
          <source>Input array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d157ce317df7d107524727b81474eb2333631fb0" translate="yes" xml:space="preserve">
          <source>Input array. &lt;code&gt;P&lt;/code&gt; is the grey-level co-occurrence histogram for which to compute the specified property. The value &lt;code&gt;P[i,j,d,theta]&lt;/code&gt; is the number of times that grey-level j occurs at a distance d and at an angle theta from grey-level i.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1dcc6b6f89f55c6fbd559a0fc71c89df2c7a9c" translate="yes" xml:space="preserve">
          <source>Input data in which to find contours.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df795b6877ceb959174b6f36fd52e75997951646" translate="yes" xml:space="preserve">
          <source>Input data to be denoised (converted using img_as_float`).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab06d023a08c04b9e18e9c0def21a6caf79a4c0" translate="yes" xml:space="preserve">
          <source>Input data to be denoised. &lt;code&gt;image&lt;/code&gt; can be of any numeric type, but it is cast into an ndarray of floats for the computation of the denoised image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e95d17bd0e2237b7dba639ca4f341f4d0a933b" translate="yes" xml:space="preserve">
          <source>Input data volume to find isosurfaces. Will be cast to &lt;code&gt;np.float64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414f266640ea25b859ee7f33af7e522d1d4490e6" translate="yes" xml:space="preserve">
          <source>Input data volume to find isosurfaces. Will internally be converted to float32 if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260753716624ad2077f13f38ada17a33c0f48cba" translate="yes" xml:space="preserve">
          <source>Input data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11af4414a11a87498c1d0cf772d2e92ee313f444" translate="yes" xml:space="preserve">
          <source>Input degraded image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4114ec157beb35d80f148235336fd0d526d07b3" translate="yes" xml:space="preserve">
          <source>Input degraded image (can be N dimensional).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ffc39d8aedebaebe3d78801c0f345ce6394db1d" translate="yes" xml:space="preserve">
          <source>Input file generated by the feature detectors from &lt;a href=&quot;http://people.cs.ubc.ca/~lowe/keypoints/&quot;&gt;http://people.cs.ubc.ca/~lowe/keypoints/&lt;/a&gt; or &lt;a href=&quot;http://www.vision.ee.ethz.ch/~surf/&quot;&gt;http://www.vision.ee.ethz.ch/~surf/&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003b8b8719ccd7126697c19842551e29ff2b4368" translate="yes" xml:space="preserve">
          <source>Input grayscale image, blobs are assumed to be light on dark background (white on black).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437ed592f488f50f742405ce874146f7a740b59c" translate="yes" xml:space="preserve">
          <source>Input grayscale image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdabb66a3c4066a177a5635bec79dca10a4341f4" translate="yes" xml:space="preserve">
          <source>Input grayscale image.Blobs can either be light on dark or vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e02108984f7d615535ed1ea4cbb686f86661ce" translate="yes" xml:space="preserve">
          <source>Input image (grayscale or color) to filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713047a917de8cbfd092c460263ea369003596e2" translate="yes" xml:space="preserve">
          <source>Input image (grayscale).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f910995acd0a535ea8f5c2e42a3b1f1809bdce78" translate="yes" xml:space="preserve">
          <source>Input image data. Will be converted to float.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5f3adfbbbaa37613ac39a2378748606ae4e466" translate="yes" xml:space="preserve">
          <source>Input image of shape &lt;code&gt;(M[, N][, P])&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9a7d12ea022df2badb2787806d67230a1bcfdb" translate="yes" xml:space="preserve">
          <source>Input image to be denoised, which can be 2D or 3D, and grayscale or RGB (for 2D images only, see &lt;code&gt;multichannel&lt;/code&gt; parameter).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309bf1ae812efe3bd79a3f13076c68d18f7f4faa" translate="yes" xml:space="preserve">
          <source>Input image whose seams are to be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adacf7c384ae2d391c354a7a4411bb350c35be1b" translate="yes" xml:space="preserve">
          <source>Input image with masked pixels inpainted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa067c46de88b772ac7280fbe2387b09ca159790" translate="yes" xml:space="preserve">
          <source>Input image with nonzero values representing edges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b81d526b88b9e5806fb6b165a6226e18fe901b" translate="yes" xml:space="preserve">
          <source>Input image, 2D grayscale or RGB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae48d923580296780d8342ab92cb990466270d92" translate="yes" xml:space="preserve">
          <source>Input image, which can be 2D or 3D, and grayscale or multichannel (see &lt;code&gt;multichannel&lt;/code&gt; parameter).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb7eb5dbbfa0510f25ad72424349b4ad90b2b51" translate="yes" xml:space="preserve">
          <source>Input image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec97a4a71f583ca562d449c2c71cb25871b0d70" translate="yes" xml:space="preserve">
          <source>Input image. If &lt;code&gt;colormap&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, the image should be in RGB format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab596acbdaee1bb19500ad23239837e4f26d0a96" translate="yes" xml:space="preserve">
          <source>Input image. The last dimensions are assumed to be image depth, height (length), width, and samples. If a colormap is provided, the dtype must be uint8 or uint16 and the data values are indices into the last dimension of the colormap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a020c8cd01923456f81ceb847b7cbc3df00c57" translate="yes" xml:space="preserve">
          <source>Input image. The last dimensions are assumed to be image depth, height, width, and samples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513312429fab6c3751dffd5f0d1d3fd1d3f290a2" translate="yes" xml:space="preserve">
          <source>Input image. The rotation axis will be located in the pixel with indices &lt;code&gt;(image.shape[0] // 2, image.shape[1] // 2)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f579db8f30de8aa16b71e2465aed33ac231819" translate="yes" xml:space="preserve">
          <source>Input points, &lt;code&gt;(x, y)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf95e153fc782908b73a76c28ab8d19b3f790986" translate="yes" xml:space="preserve">
          <source>Input types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9c190dbd91d31c567bbc487895736a4b61256f" translate="yes" xml:space="preserve">
          <source>Installation Steps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50fb44787bb2b889f277102822bee1a49574fffa" translate="yes" xml:space="preserve">
          <source>Integer array of labels with the same shape as &lt;code&gt;image&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e387fc472b75758a22b5dabf7a90887dd5c0ad" translate="yes" xml:space="preserve">
          <source>Integer arrays are converted to float.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed61e36d075ff9461f34b934b720df74cfa818cf" translate="yes" xml:space="preserve">
          <source>Integer equal to the depth of the added boundary cells. Defaults to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99986b6356f56017052b1ef4e6c86576629946e5" translate="yes" xml:space="preserve">
          <source>Integer mask indicating segment labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a787df962f0175cb6d7f4b9e4c7e52d9b45c7017" translate="yes" xml:space="preserve">
          <source>Integer typed input image. Only positive valued images are supported. If type is other than uint8, the argument &lt;code&gt;levels&lt;/code&gt; needs to be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ea126d38d10f816097be962f563bad75480912" translate="yes" xml:space="preserve">
          <source>Integral (sum) over the given window(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e07cca2d1168a772d182096b88c4194161c9bc8" translate="yes" xml:space="preserve">
          <source>Integral image / summed area table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e585bcfe5368991ea8ff4e85c5eb50a26d07d2cf" translate="yes" xml:space="preserve">
          <source>Integral image for which the features need to be computed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5648fac9ae401bd0b408dd677a30d43e522c950d" translate="yes" xml:space="preserve">
          <source>Integral image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7847ea64adfa4c7e270aeef834230e4de3138a72" translate="yes" xml:space="preserve">
          <source>Integral image/summed area table of same shape as input image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25d196ef75bf2aa7a9136d4c82d30abb039d6d9" translate="yes" xml:space="preserve">
          <source>Intensity (i.e., input) image with same size as labeled image. Default is None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460cfad4d32ad044a1b746009374b58c434d869e" translate="yes" xml:space="preserve">
          <source>Interpolation method used in reconstruction. Methods available: &amp;lsquo;linear&amp;rsquo;, &amp;lsquo;nearest&amp;rsquo;, and &amp;lsquo;cubic&amp;rsquo; (&amp;lsquo;cubic&amp;rsquo; is slow).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944af09f5323b826f8961d86f4303557da75a74e" translate="yes" xml:space="preserve">
          <source>Interval (s in &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f953597bfad096182fc1841fed7084fb6b89444" translate="yes" xml:space="preserve">
          <source>Introduction to skimage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a43dde86251b81aacef31c125a8fa8c11a26934d" translate="yes" xml:space="preserve">
          <source>Introductory examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3671401bc0bab1668c5ae8f91b53fb378d853c4f" translate="yes" xml:space="preserve">
          <source>Inverse Finite Radon Transform array of n x n integer coefficients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a8821501db9245f566faadac6c71fa20406cd9f" translate="yes" xml:space="preserve">
          <source>Inverse affine transformations for each triangle in the mesh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a4be8fd95bbeb304ee740106ce87f1e0ed21ed0" translate="yes" xml:space="preserve">
          <source>Inverse coordinate map, which transforms coordinates in the output images into their corresponding coordinates in the input image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdff04d2f36a5f1fa9d3274aba4fb97bd17e08b" translate="yes" xml:space="preserve">
          <source>Inverse of gradient magnitude.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48874d4a5858c3d72bee34713846a568b57b8178" translate="yes" xml:space="preserve">
          <source>Inverse radon transform</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5227f9894900d7516418ebefb841096d79fc5188" translate="yes" xml:space="preserve">
          <source>Inverse radon transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636eb664a87b86aeb780eee41c20e8bff528e58f" translate="yes" xml:space="preserve">
          <source>Invert an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f68742abba635ff835384e8c080e41a8bbfe75" translate="yes" xml:space="preserve">
          <source>Invert the intensity range of the input image, so that the dtype maximum is now the dtype minimum, and vice-versa. This operation is slightly different depending on the input dtype:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcaecb135c13828d6ca26e59dafe454d25224a23" translate="yes" xml:space="preserve">
          <source>Inverted image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4023a58fe01f1d803d49a8b2a9761d7ec69dc37a" translate="yes" xml:space="preserve">
          <source>It applies the Fourier slice theorem to reconstruct an image by multiplying the frequency domain of the filter with the FFT of the projection data. This algorithm is called filtered back projection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6367eb112ad9d3cd73e0dcefc9d4808ed0e49ef5" translate="yes" xml:space="preserve">
          <source>It is based on the Douglas-Peucker algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b899fce86e5fa8a3893aa5d5cbdc4deb4ee8d4ba" translate="yes" xml:space="preserve">
          <source>It is derived from the eigen values of the Hessian, and its value ranges from -1 to 1 (and is undefined (=NaN) in &lt;em&gt;flat&lt;/em&gt; regions), with following ranges representing following shapes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16fea9993d667a5d6bf34a6c58879b07ffb7924b" translate="yes" xml:space="preserve">
          <source>It is possible that you may need to use an image created using &lt;code&gt;skimage&lt;/code&gt; with &lt;a href=&quot;http://opencv.org/&quot;&gt;OpenCV&lt;/a&gt; or vice versa. OpenCV image data can be accessed (without copying) in NumPy (and, thus, in scikit-image). OpenCV uses BGR (instead of scikit-image&amp;rsquo;s RGB) for color images, and its dtype is uint8 by default (See &lt;a href=&quot;#image-data-types-and-what-they-mean&quot;&gt;Image data types and what they mean&lt;/a&gt;). BGR stands for Blue Green Red.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f9123b14827f3a9526e29c58d3942ae755abbf" translate="yes" xml:space="preserve">
          <source>It is provided separately from &lt;code&gt;warp&lt;/code&gt; to give additional flexibility to users who would like, for example, to re-use a particular coordinate mapping, to use specific dtypes at various points along the the image-warping process, or to implement different post-processing logic than &lt;code&gt;warp&lt;/code&gt; performs after the call to &lt;code&gt;ndi.map_coordinates&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ca44d266de3934c75e794909ec3b68fc04095d" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s easy to accidentally convert an image dtype from uint8 to float:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f963cbbfae922b59d49d082b0cade2798281a17b" translate="yes" xml:space="preserve">
          <source>J. Canny. A computational approach to edge detection. IEEE Transactions on Pattern Analysis and Machine Intelligence. 1986; vol. 8, pp.679-698. DOI: 10.1109/TPAMI.1986.4767851</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8794dad8da1657d87018925247681465dc82b1c" translate="yes" xml:space="preserve">
          <source>J. Sauvola and M. Pietikainen, &amp;ldquo;Adaptive document image binarization,&amp;rdquo; Pattern Recognition 33(2), pp. 225-236, 2000. DOI:10.1016/S0031-3203(99)00055-2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea5e0c61b0e8e417b3e161f53ea582039e47f22" translate="yes" xml:space="preserve">
          <source>J.E. Bresenham, &amp;ldquo;Algorithm for computer control of a digital plotter&amp;rdquo;, IBM Systems journal, 4 (1965) 25-30.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef87cf20c5b0a9e642c7ca7d2f9fa0b703da5b5" translate="yes" xml:space="preserve">
          <source>James R. Fienup, &amp;ldquo;Invariant error metrics for image reconstruction&amp;rdquo; Optics Letters 36, 8352-8357 (1997). DOI:10.1364/AO.36.008352</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a02af2ce3b987ae0a855862b9600880dca2b63" translate="yes" xml:space="preserve">
          <source>Johannes Kilian. Simple Image Analysis By Moments. Durham University, version 0.2, Durham, 2001.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491fc159371390ff7823c9524c7f43e25cb09a13" translate="yes" xml:space="preserve">
          <source>K. Benkrid, D. Crookes. Design and FPGA Implementation of a Perimeter Estimator. The Queen&amp;rsquo;s University of Belfast. &lt;a href=&quot;http://www.cs.qub.ac.uk/~d.crookes/webpubs/papers/perimeter.doc&quot;&gt;http://www.cs.qub.ac.uk/~d.crookes/webpubs/papers/perimeter.doc&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca3b58024afe360757fc491ab365f77f0320437" translate="yes" xml:space="preserve">
          <source>Kaczmarz&amp;rsquo; method, Wikipedia, &lt;a href=&quot;http://en.wikipedia.org/wiki/Kaczmarz_method&quot;&gt;http://en.wikipedia.org/wiki/Kaczmarz_method&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366a4fb187b22d01b4584683b5f0562932d53d8f" translate="yes" xml:space="preserve">
          <source>Kass, M.; Witkin, A.; Terzopoulos, D. &amp;ldquo;Snakes: Active contour models&amp;rdquo;. International Journal of Computer Vision 1 (4): 321 (1988).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e26ca0a331ca4006a93388eadb0b634782065654" translate="yes" xml:space="preserve">
          <source>Kensheng Wu, Ekow Otoo and Arie Shoshani, &amp;ldquo;Optimizing connected component labeling algorithms&amp;rdquo;, Paper LBNL-56864, 2005, Lawrence Berkeley National Laboratory (University of California), &lt;a href=&quot;http://repositories.cdlib.org/lbnl/LBNL-56864&quot;&gt;http://repositories.cdlib.org/lbnl/LBNL-56864&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4036e872429d92e795395b5fb411004df230005" translate="yes" xml:space="preserve">
          <source>Keyboard modifiers, which: &amp;lsquo;move&amp;rsquo;: Move the existing shape. &amp;lsquo;clear&amp;rsquo;: Clear the current shape. &amp;lsquo;square&amp;rsquo;: Makes the shape square. &amp;lsquo;center&amp;rsquo;: Make the initial point the center of the shape. &amp;lsquo;square&amp;rsquo; and &amp;lsquo;center&amp;rsquo; can be combined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e80c7a4bd124f98925cb741afc7353dd0c1aee" translate="yes" xml:space="preserve">
          <source>Keypoint coordinates as &lt;code&gt;(row, col)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0f8907f73221dd0aca201116a517de1f84046f" translate="yes" xml:space="preserve">
          <source>Keyword arguments passed &lt;code&gt;matplotlib.figure.Figure.add_subplot&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd3ff8bdc96408be8547062c76b72c8bb7eb73d" translate="yes" xml:space="preserve">
          <source>Keyword arguments passed &lt;code&gt;matplotlib.figure.Figure&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74946a6d05af47b69e797708d2d92ea22c2a8b19" translate="yes" xml:space="preserve">
          <source>Keyword arguments passed to &lt;code&gt;inverse_map&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368e8378f965d6fa1c21321571b01f5020c5bd27" translate="yes" xml:space="preserve">
          <source>Kind of descriptor used to generate &lt;code&gt;filelike&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ca56a1622787392b46fa13585b9a7db3decf19" translate="yes" xml:space="preserve">
          <source>Kitchen and Rosenfeld response image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3707ca93e81e53f9cf6fd22588474e9e6ad1abd1" translate="yes" xml:space="preserve">
          <source>Kohler, T. &amp;ldquo;A projection access scheme for iterative reconstruction based on the golden section.&amp;rdquo; Nuclear Science Symposium Conference Record, 2004 IEEE. Vol. 6. IEEE, 2004.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5603180d370aa3b36c0d040a057231729b2d7e86" translate="yes" xml:space="preserve">
          <source>Kroon, D.J.: Hessian based Frangi vesselness filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07cae4ba6021e74c3b306aa9b0b934a4931a71b7" translate="yes" xml:space="preserve">
          <source>LBP image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c5d229e6c098e27d520a7317e9abcccce859e7" translate="yes" xml:space="preserve">
          <source>LBP is an invariant descriptor that can be used for texture classification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b612c3d007a5e618ff2844a1a3d2499a7fd72a8f" translate="yes" xml:space="preserve">
          <source>LCH is the cylindrical representation of the LAB (Cartesian) colorspace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56f634d836e6e535bef548e101e19fbac22f7da8" translate="yes" xml:space="preserve">
          <source>LPIFilter2D</source>
          <target state="translated">LPIFilter2D</target>
        </trans-unit>
        <trans-unit id="a9f2e37c9eaddca8be7bf52f8b0bddab0a097df4" translate="yes" xml:space="preserve">
          <source>L_ii = d_i, the number of neighbors of pixel i (the degree of i)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14eb64379d1f2f37ac8aa3c12293e8290f4b6a22" translate="yes" xml:space="preserve">
          <source>L_ij = -w_ij if i and j are adjacent pixels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ff33c95d1d3e8641e78881de489af0a3b9739f" translate="yes" xml:space="preserve">
          <source>Lab to RGB color space conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="455878986e28bbf17386dfdfb1590f86a60eaa9f" translate="yes" xml:space="preserve">
          <source>Label array where regions are marked by different integer values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a18bfc4d7443b1fff23f9d48e2ed9f58c98f02" translate="yes" xml:space="preserve">
          <source>Label connected regions of an integer array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e4d53c8e97536573f935e6dbcf1771f5c0e166" translate="yes" xml:space="preserve">
          <source>Label that&amp;rsquo;s treated as the background.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ecf83b697f40256a9bc7e46b70f72c78fcd7c3" translate="yes" xml:space="preserve">
          <source>LabelPainter</source>
          <target state="translated">LabelPainter</target>
        </trans-unit>
        <trans-unit id="6e4ba3116d0101e3958023e7a2468db0508315eb" translate="yes" xml:space="preserve">
          <source>Labeled array, where all connected regions are assigned the same integer value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5307497b6a2bd086234a19f383d58f1f3593c234" translate="yes" xml:space="preserve">
          <source>Labeled input image. Labels with value 0 are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815929b749809fe586ec8fb1ae555220c47d23ae" translate="yes" xml:space="preserve">
          <source>Labels of axes in shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dfe6f9dbc1e15073ac575a72e6fb633970c5dc7" translate="yes" xml:space="preserve">
          <source>Larger eigen value for each input matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a3a91bd2603ec76143937f83a17a05e2e62a8b" translate="yes" xml:space="preserve">
          <source>Launch photo of DSCOVR on Falcon 9 by SpaceX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4241a56c0a782bd4690708d267e1a7b3e13cc5" translate="yes" xml:space="preserve">
          <source>Launch the event loop of the current gui plugin, and display all pending images, queued via &lt;code&gt;imshow&lt;/code&gt;. This is required when using &lt;code&gt;imshow&lt;/code&gt; from non-interactive scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c83a03f08857610c7c3ef5a56eb54b82359d3fba" translate="yes" xml:space="preserve">
          <source>Lazy object attribute whose value is computed on first access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2ebb47948ed0981203c48fdc818e0932f499a4" translate="yes" xml:space="preserve">
          <source>Left stereo image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bef01dc26e286e8123edbf6f728fa5cfcefe737" translate="yes" xml:space="preserve">
          <source>Length of semimajor axis aligned with x-axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596316fdb8ae64ffd4bb5d21b88a3d54a3f21ceb" translate="yes" xml:space="preserve">
          <source>Length of semimajor axis aligned with y-axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f199314665489076cc36e561533827d8f4b32c" translate="yes" xml:space="preserve">
          <source>Length of semimajor axis aligned with z-axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4673c3a75db73933d5e011736a6b0c237736a37" translate="yes" xml:space="preserve">
          <source>Length of the two dimensional square patch sampling region around the keypoints. Default is 49.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f90fbb04e50aab6ca2643bbd20645f5c2df0211" translate="yes" xml:space="preserve">
          <source>Let us first determine markers of the coins and the background. These markers are pixels that we can label unambiguously as either object or background. Here, the markers are found at the two extreme parts of the histogram of grey values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17008627fdf79696b3289323f69e50ce024fc5b1" translate="yes" xml:space="preserve">
          <source>Let us first try to detect edges that enclose the coins. For edge detection, we use the &lt;a href=&quot;http://en.wikipedia.org/wiki/Canny_edge_detector&quot;&gt;Canny detector&lt;/a&gt; of &lt;code&gt;skimage.feature.canny&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201be38934fafa0536de12d0693ca9da85b584d7" translate="yes" xml:space="preserve">
          <source>Let us now compute the watershed transform:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd6f6e21c5f7d58a091fd3cfdde3808d7d356cd1" translate="yes" xml:space="preserve">
          <source>Level set variation tolerance between iterations. If the L2 norm difference between the level sets of successive iterations normalized by the area of the image is below this value, the algorithm will assume that the solution was reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1166ca9323281ac476b039f7d16ed7690da6d767" translate="yes" xml:space="preserve">
          <source>Lewiner marching cubes algorithm to find surfaces in 3d volumetric data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45f9368ce0f50292b6734ee6d409b5db9080f46" translate="yes" xml:space="preserve">
          <source>Li C.H. and Lee C.K. (1993) &amp;ldquo;Minimum Cross Entropy Thresholding&amp;rdquo; Pattern Recognition, 26(4): 617-625 DOI:10.1016/0031-3203(93)90115-D</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1d294283973fa54927c6d15063aa888705405c" translate="yes" xml:space="preserve">
          <source>Li C.H. and Tam P.K.S. (1998) &amp;ldquo;An Iterative Algorithm for Minimum Cross Entropy Thresholding&amp;rdquo; Pattern Recognition Letters, 18(8): 771-776 DOI:10.1016/S0167-8655(98)00057-9</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b0387e1b88dab05d3baaa9fa68c75f99a4d6bc" translate="yes" xml:space="preserve">
          <source>License Info</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc9c5a7d8326df046caa8d770d0b0dc0dbc12f4" translate="yes" xml:space="preserve">
          <source>Licensed under the BSD 3-clause License.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc3e6d35b771fe83a8099650ed02e75e7a82175" translate="yes" xml:space="preserve">
          <source>Lightness scale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="930b1310a3327e52b2859902aed3460c35fa54b1" translate="yes" xml:space="preserve">
          <source>Limit the filter gain. Often, the filter contains zeros, which would cause the inverse filter to have infinite gain. High gain causes amplification of artefacts, so a conservative limit is recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4496b987964f0427a3ae0bc1d394239d1f70303f" translate="yes" xml:space="preserve">
          <source>Line model parameters in the following order &lt;code&gt;origin&lt;/code&gt;, &lt;code&gt;direction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e46bf951994838ef52a48f1930c1c7834fd22cc1" translate="yes" xml:space="preserve">
          <source>LineModelND</source>
          <target state="translated">LineModelND</target>
        </trans-unit>
        <trans-unit id="cda606865b0b673cef77fca02c36675ab4394918" translate="yes" xml:space="preserve">
          <source>LineProfile</source>
          <target state="translated">LineProfile</target>
        </trans-unit>
        <trans-unit id="044456a5a299665676dfebb45ac8ee87ba596839" translate="yes" xml:space="preserve">
          <source>LineTool</source>
          <target state="translated">LineTool</target>
        </trans-unit>
        <trans-unit id="faa4e861f16fd1c649544711b38ae0e501dd4d29" translate="yes" xml:space="preserve">
          <source>Linear Position-Invariant Filter (2-dimensional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1941489209ee56d1750b85ff5f3d4f3f8fb8a387" translate="yes" xml:space="preserve">
          <source>Linear size of output image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68023c0d9f367ffea00cca8402eb9030d267455" translate="yes" xml:space="preserve">
          <source>LinearColormap</source>
          <target state="translated">LinearColormap</target>
        </trans-unit>
        <trans-unit id="3785cadb86ee7114c7fccfc656aefa6be3844597" translate="yes" xml:space="preserve">
          <source>LinearSegmentedColormap in which color varies smoothly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2bf465b67dabf1cbaa646aaecb9a60260467c7" translate="yes" xml:space="preserve">
          <source>Lines are defined by a point (origin) and a unit vector (direction) according to the following vector equation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702ae412fae48149345803a0ddf264783a22ce57" translate="yes" xml:space="preserve">
          <source>List available plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65b7faf92495381b93966125e4bef5e1968e618" translate="yes" xml:space="preserve">
          <source>List of Matplotlib artists and canvastools. Any artists created by the plugin should be added to this list so that it gets cleaned up on close.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058e91e1215a2a9ea1814ce78d9a4974ca726911" translate="yes" xml:space="preserve">
          <source>List of attached plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7658637e56ec3ad00e3fe0dd5fde699784ae0b" translate="yes" xml:space="preserve">
          <source>List of available plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ca9f432dea77b0135de1a4f2ded537bc217aa8" translate="yes" xml:space="preserve">
          <source>List of colors. If the number of labels exceeds the number of colors, then the colors are cycled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7f1e9da8df69f074f8e124e9ae7140e19d657c" translate="yes" xml:space="preserve">
          <source>List of file names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a5b05a754427764a8e04a8aa405077a96a4bfb" translate="yes" xml:space="preserve">
          <source>List of images to be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e459f20aacd1bbf3c685b82a1adb6974c9197453" translate="yes" xml:space="preserve">
          <source>List of length-3 lists of integers, referencing vertex coordinates as provided in &lt;code&gt;verts&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733bc1ab758acf2729c05c17e9b5d260723ccd95" translate="yes" xml:space="preserve">
          <source>List of length-3 lists of integers, referencing vertex coordinates as provided in &lt;code&gt;verts&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2830d5975c37d64bbbee94290333b6384c1551c2" translate="yes" xml:space="preserve">
          <source>List of lines identified, lines in format ((x0, y0), (x1, y1)), indicating line start and end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4487d23e1659173abb9e0798427b4092d08de442" translate="yes" xml:space="preserve">
          <source>List of n-d index tuples defining the path from &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf5aed60300f8c83cd7217e752b3d97ad5e0406" translate="yes" xml:space="preserve">
          <source>List of objects to load. These are usually filenames, but may vary depending on the currently active plugin. See the docstring for &lt;code&gt;ImageCollection&lt;/code&gt; for the default behaviour of this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0feb0e019e2cd547c231d192e35f0f892b20583" translate="yes" xml:space="preserve">
          <source>List of pixel pair angles in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7e5e6a74cdbc71428ee9a133d71f1efcb31180" translate="yes" xml:space="preserve">
          <source>List of pixel pair distance offsets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72353c5f3bd97c9503ce43d4aee390bc72c10e97" translate="yes" xml:space="preserve">
          <source>Load a collection of images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eddd2d464f55383508cfaa22f66af7b0829c173" translate="yes" xml:space="preserve">
          <source>Load a multi-img.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f77243f654a5c15fb1d5d8f3d934348f5ca51a56" translate="yes" xml:space="preserve">
          <source>Load an image file located in the data directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de6f9366684283256d1ee41b0385262e53e2ef6" translate="yes" xml:space="preserve">
          <source>Load an image from a URL (the URL must start with &lt;code&gt;http(s)://&lt;/code&gt; or &lt;code&gt;ftp(s)://&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c50433bba32f1db6ef626b208bd7d01be9d203" translate="yes" xml:space="preserve">
          <source>Load an image from a file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5489eaa4e570c0a0eb2b49ecdfe692d9cd0e3802" translate="yes" xml:space="preserve">
          <source>Load an image from file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b893e547eb411a59e85dd42d0c5e7def3c258dd9" translate="yes" xml:space="preserve">
          <source>Load and manage a collection of image files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9122a08570a125cf0332601cc269c187a3412f56" translate="yes" xml:space="preserve">
          <source>Load and manage a collection of images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3bf3702f84cd3f39529adc6c70e053b31028ab" translate="yes" xml:space="preserve">
          <source>Load and save TIFF and TIFF-based images using tifffile.py</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a638ee8b72eeec588a0d6ffadc71f5b65dc3aaa" translate="yes" xml:space="preserve">
          <source>Local Otsu&amp;rsquo;s threshold value for each pixel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52780be8e39e3f2d1813acc05df69187d5bcd222" translate="yes" xml:space="preserve">
          <source>Local bottom-hat of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04b475693a3b6f8c799c420ae7667f829473ab3" translate="yes" xml:space="preserve">
          <source>Local entropy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eba7abe923546c797d1164882e73791f260ea71" translate="yes" xml:space="preserve">
          <source>Local threshold of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdd356cb621e2241cd67cb5ce553eabe9a952d5" translate="yes" xml:space="preserve">
          <source>Local top-hat of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33185e81cf7330863ebdeb6109fb306620252f2e" translate="yes" xml:space="preserve">
          <source>Logarithm corrected output image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0956992c8a877dab7232e907f11b42e5d1729983" translate="yes" xml:space="preserve">
          <source>Logo image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8bd9cdc8a472a96e58cfb8b42ab750f68be6720" translate="yes" xml:space="preserve">
          <source>Lower and upper intensity limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3271eb177c6e79a9417abd3e729b4bb35515cb9" translate="yes" xml:space="preserve">
          <source>Lower bound for hysteresis thresholding (linking edges). If None, low_threshold is set to 10% of dtype&amp;rsquo;s max.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ecc895f5b3a0884e1ad0c3a0d189c8740a19fa" translate="yes" xml:space="preserve">
          <source>Lower threshold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a3791c32b5ef9972c9ae4af8f95ce3603bbaca" translate="yes" xml:space="preserve">
          <source>M. K. Hu, &amp;ldquo;Visual Pattern Recognition by Moment Invariants&amp;rdquo;, IRE Trans. Info. Theory, vol. IT-8, pp. 179-187, 1962</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2509f4a9a1657bb856bddb584c674a163f43be57" translate="yes" xml:space="preserve">
          <source>M. Melgosa, J. Quesada, and E. Hita, &amp;ldquo;Uniformity of some recent color metrics tested with an accurate color-difference tolerance dataset,&amp;rdquo; Appl. Opt. 33, 8069-8077 (1994).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041bd82205fefaf1641dcd9878195c72fdef6737" translate="yes" xml:space="preserve">
          <source>MB-LBP is an extension of LBP that can be computed on multiple scales in constant time using the integral image. Nine equally-sized rectangles are used to compute a feature. For each rectangle, the sum of the pixel intensities is computed. Comparisons of these sums to that of the central rectangle determine the feature, similarly to LBP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21593b807a966ea15557d6ab6615a57e6ec8efeb" translate="yes" xml:space="preserve">
          <source>MCP</source>
          <target state="translated">MCP</target>
        </trans-unit>
        <trans-unit id="0275d9fc6733139ab1a1bdfe021b5c62445ab7ae" translate="yes" xml:space="preserve">
          <source>MCP_Connect</source>
          <target state="translated">MCP_Connect</target>
        </trans-unit>
        <trans-unit id="a0171154ee1eda8d6beec40d8f27e531c2a5f402" translate="yes" xml:space="preserve">
          <source>MCP_Flexible</source>
          <target state="translated">MCP_Flexible</target>
        </trans-unit>
        <trans-unit id="381628959d786c57ac9fb5370b169037a31ca115" translate="yes" xml:space="preserve">
          <source>MCP_Geometric</source>
          <target state="translated">MCP_Geometric</target>
        </trans-unit>
        <trans-unit id="35d2d65f37db2fbc865114d544847041301ee83f" translate="yes" xml:space="preserve">
          <source>Mailing-list</source>
          <target state="translated">Mailing-list</target>
        </trans-unit>
        <trans-unit id="e1b307501430a92832fe69e86e469936f8c71eb4" translate="yes" xml:space="preserve">
          <source>Major axis orientation in clockwise direction as radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8418c71e443f95e298652d47504cf6c879fb8c84" translate="yes" xml:space="preserve">
          <source>Make an educated guess about whether an image has a channels dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6347eddfcec91f6797bde67c71ed956788c4146b" translate="yes" xml:space="preserve">
          <source>Make sure to set the multichannel parameter appropriately for color images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d9e99c9e91d4919f81e1b01f4e11bf4d587dcb" translate="yes" xml:space="preserve">
          <source>Manuel Guizar-Sicairos, Samuel T. Thurman, and James R. Fienup, &amp;ldquo;Efficient subpixel image registration algorithms,&amp;rdquo; Optics Letters 33, 156-158 (2008). DOI:10.1364/OL.33.000156</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5b3045148b5074e5311eea42afbe1376cc036d" translate="yes" xml:space="preserve">
          <source>Many functions in scikit-image operate on 3D images directly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780d8c2733c9cb2e9c734ed6a72615692ef37e1b" translate="yes" xml:space="preserve">
          <source>Many wavelet coefficient thresholding approaches have been proposed. By default, &lt;code&gt;denoise_wavelet&lt;/code&gt; applies BayesShrink, which is an adaptive thresholding method that computes separate thresholds for each wavelet sub-band as described in &lt;a href=&quot;#r3b8ec6d23a4e-1&quot; id=&quot;id22&quot;&gt;[1]&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27990a31ea864becb5478b834a387656db9241aa" translate="yes" xml:space="preserve">
          <source>Map a function in parallel across an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df25dd8f03070d206be72346092f6ce5f1feeb3a" translate="yes" xml:space="preserve">
          <source>Marker properties for the handles (also see &lt;a href=&quot;https://matplotlib.org/api/_as_gen/matplotlib.lines.Line2D.html#matplotlib.lines.Line2D&quot;&gt;&lt;code&gt;matplotlib.lines.Line2D&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6164fcfd7a2971953acee7d919bf0ed4d5b87d88" translate="yes" xml:space="preserve">
          <source>Markers can be determined manually, or automatically using for example the local minima of the gradient of the image, or the local maxima of the distance function to the background for separating overlapping objects (see example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3287aac1632116e614b268d33ae0b01cecc06090" translate="yes" xml:space="preserve">
          <source>Mask array that defines (&amp;gt;0) area of the image included in the local neighborhood. If None, the complete image is used (default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0382f887773705a066b2b8b7ca336e2315765a8e" translate="yes" xml:space="preserve">
          <source>Mask defining the local neighborhood of the corner used for the calculation of the central moment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007521c625b32f7bce3133a7532a161df4ce10c9" translate="yes" xml:space="preserve">
          <source>Mask indicating whether a keypoint has been filtered out (&lt;code&gt;False&lt;/code&gt;) or is described in the &lt;code&gt;descriptors&lt;/code&gt; array (&lt;code&gt;True&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b36edc549855678c030bd5776bee9ac268917a9a" translate="yes" xml:space="preserve">
          <source>Mask to limit the application of Canny to a certain area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80cf76b047e8129782a79111d975e0c0d3330f2e" translate="yes" xml:space="preserve">
          <source>Masking (indexing with masks of booleans):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49b52481fa505f7345dbcb67441fa1c76e6e0ad" translate="yes" xml:space="preserve">
          <source>Match a template to a 2-D or 3-D image using normalized correlation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3873d0e61444549f04f246b2d225a1d24a6057dd" translate="yes" xml:space="preserve">
          <source>Matches and image are drawn in this ax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d436dfd8fcade225f57f7c19f5683cbea262bcc5" translate="yes" xml:space="preserve">
          <source>Matplotlib canvas, figure, and axes used to display image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e88a67439772b907bd81e3a1dc95230d563bee" translate="yes" xml:space="preserve">
          <source>Matplotlib figure and axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f6d6337e2d3335b0e27e04ee31c178adb6db27" translate="yes" xml:space="preserve">
          <source>Matplotlib to use for plotting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0f566b2689c1ddcb360a8f2fe89319ae499417" translate="yes" xml:space="preserve">
          <source>Maximal distance in pixels where to search patches used for denoising.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332f275ba81a07a08f7a86d32375d2fe0c196e28" translate="yes" xml:space="preserve">
          <source>Maximal minor axis length. If None, the value is set to the half of the smaller image dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79db24cb64ac9e5b12fad853e8ccf89db7d0d08c" translate="yes" xml:space="preserve">
          <source>Maximal number of iterations used for the optimization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f87246b51b2e7bb82d3bbe41094f20b17525ce7" translate="yes" xml:space="preserve">
          <source>Maximum allowed distance between descriptors of two keypoints in separate images to be regarded as a match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0aa131f6dd5baccdc6a0e746cef242d41b8ba9" translate="yes" xml:space="preserve">
          <source>Maximum distance for a data point to be classified as an inlier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473369f7ba7ba46f9fb9ab935437acae3a5f74cd" translate="yes" xml:space="preserve">
          <source>Maximum distance from original points of polygon to approximated polygonal chain. If tolerance is 0, the original coordinate array is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9092fe5c08fbd6a98c957ebfb5fbba633be6ffa9" translate="yes" xml:space="preserve">
          <source>Maximum gap between pixels to still form a line. Increase the parameter to merge broken lines more aggresively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485c13dd83f3ab52997693df02bc008571745294" translate="yes" xml:space="preserve">
          <source>Maximum iterations to optimize snake shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57dbe3c6f8ece7d6ff69532c605fe5b599f8b77" translate="yes" xml:space="preserve">
          <source>Maximum number of iterations allowed before the algorithm interrupts itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7dfd80e629f3bb34ea64892d98c69b612b79e1" translate="yes" xml:space="preserve">
          <source>Maximum number of iterations for random sample selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d5cf5701a23dc18975be3384b32aa445c39900" translate="yes" xml:space="preserve">
          <source>Maximum number of iterations of k-means.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9a6f0174dd944d3e6db30dccae9646bd26c701" translate="yes" xml:space="preserve">
          <source>Maximum number of iterations to smooth the histogram.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8642823756e8a9af796cc8d2f78e22d75f626798" translate="yes" xml:space="preserve">
          <source>Maximum number of orthogonal hops to consider a pixel/voxel as a neighbor. Accepted values are ranging from 1 to input.ndim. If &lt;code&gt;None&lt;/code&gt;, a full connectivity of &lt;code&gt;input.ndim&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79edf11ae99d5f70016352548ce7cebcf72c8eae" translate="yes" xml:space="preserve">
          <source>Maximum number of peaks for each label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feceadf372d4266896e129f8f921c8f6cea13a2e" translate="yes" xml:space="preserve">
          <source>Maximum number of peaks in each Hough space. When the number of peaks exceeds &lt;code&gt;num_peaks&lt;/code&gt;, only &lt;code&gt;num_peaks&lt;/code&gt; coordinates based on peak intensity are considered for the corresponding radius.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8a3448096c3588d84fec0a5d359c664ca9df68" translate="yes" xml:space="preserve">
          <source>Maximum number of peaks. When the number of peaks exceeds &lt;code&gt;num_peaks&lt;/code&gt;, return &lt;code&gt;num_peaks&lt;/code&gt; coordinates based on peak intensity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c29dbfabcf06fb8ec525eed02568dee9fb3ed10" translate="yes" xml:space="preserve">
          <source>Maximum number of peaks. When the number of peaks exceeds &lt;code&gt;num_peaks&lt;/code&gt;, return &lt;code&gt;num_peaks&lt;/code&gt; peaks based on highest peak intensity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8fb44b681aaaf09b3d9ee72477fb6ff5a801a9" translate="yes" xml:space="preserve">
          <source>Maximum number of scales from the bottom of the image pyramid to extract the features from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7d02ee193d2254cbb672f320008dc086ed7a99" translate="yes" xml:space="preserve">
          <source>Maximum order of moments. Default is 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a555aaa9b05c798dc9394775839e1972fcd836f" translate="yes" xml:space="preserve">
          <source>Maximum pixel distance allowed when selecting control handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc507554fef71868a75269fde7607afa94b6d35" translate="yes" xml:space="preserve">
          <source>Maximum pixel distance allowed when selecting end point of scan line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7cc87016c5eb0eec1c925c0b2cbbfb85ad16a5" translate="yes" xml:space="preserve">
          <source>Maximum pixel distance to move per iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae37c01c1279fc98aece192ccbb38a49235bd7b" translate="yes" xml:space="preserve">
          <source>Maximum ratio of distances between first and second closest descriptor in the second set of descriptors. This threshold is useful to filter ambiguous matches between the two descriptor sets. The choice of this value depends on the statistics of the chosen descriptor, e.g., for SIFT descriptors a value of 0.8 is usually chosen, see D.G. Lowe, &amp;ldquo;Distinctive Image Features from Scale-Invariant Keypoints&amp;rdquo;, International Journal of Computer Vision, 2004.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4c92c339641658d67d0ea998065eba4b7653a9" translate="yes" xml:space="preserve">
          <source>Maximum scale to extract keypoints from. The keypoints will be extracted from all the scales except the first and the last i.e. from the scales in the range [min_scale + 1, max_scale - 1]. The filter sizes for different scales is such that the two adjacent scales comprise of an octave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa04b7444cefded92ff4890d7e172e154c9821f2" translate="yes" xml:space="preserve">
          <source>Mean of random distribution. Used in &amp;lsquo;gaussian&amp;rsquo; and &amp;lsquo;speckle&amp;rsquo;. Default : 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4fd0a232ee5c998e8392a526fe61ebecb52fc64" translate="yes" xml:space="preserve">
          <source>Measure</source>
          <target state="translated">Measure</target>
        </trans-unit>
        <trans-unit id="44cfb8487c9623a4cfd33d60122af108de365358" translate="yes" xml:space="preserve">
          <source>Measure properties of labeled image regions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769aacd24364e96b6066e0522171ba669620714b" translate="yes" xml:space="preserve">
          <source>Measurement of image properties, e.g., similarity and contours.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4b4f89db4e6929bca401d4f5dc5b6fc9bc620d" translate="yes" xml:space="preserve">
          <source>Medial axis transform of the image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960fac4c51b7a8f14ca28707750bb912ddb3a44c" translate="yes" xml:space="preserve">
          <source>Merge node &lt;code&gt;src&lt;/code&gt; and &lt;code&gt;dst&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295a5bc2d3b140e58bc7993c1f3e33e7e6013922" translate="yes" xml:space="preserve">
          <source>Meta data as specified in plugin &lt;code&gt;.ini&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d1976efdb530a6e9b5ec4790ed77f0b6eaa810" translate="yes" xml:space="preserve">
          <source>Method to compute the response image from the auto-correlation matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8a56c86d432f264db818d6afd87c41cda1301f" translate="yes" xml:space="preserve">
          <source>Method to determine the pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc754df1a02e846295a1f5abd8561787cf51f492" translate="yes" xml:space="preserve">
          <source>Method used to determine adaptive threshold for local neighbourhood in weighted mean image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f34cf2ad27bfe37af6ca8acbc0a4ed3f49a8035" translate="yes" xml:space="preserve">
          <source>Middle control point weight, it describes the line tension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28beecbfc0c4464f5c311ec9c5b37a7b74647cf6" translate="yes" xml:space="preserve">
          <source>Midpoint of rectangle edges from left, moving clockwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8ad33cc1d39018337b532ed8b7fd55bc5e1091" translate="yes" xml:space="preserve">
          <source>Miguel Arevallilo Herraez, David R. Burton, Michael J. Lalor, and Munther A. Gdeisat, &amp;ldquo;Fast two-dimensional phase-unwrapping algorithm based on sorting by reliability following a noncontinuous path&amp;rdquo;, Journal Applied Optics, Vol. 41, No. 35 (2002) 7437,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd8ab6a24f94f4816a2b83957da1a1078f341ff" translate="yes" xml:space="preserve">
          <source>Min and max intensity values of input and output image. The possible values for this parameter are enumerated below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246717723dc407fad415c0437f30e8f60d18ee76" translate="yes" xml:space="preserve">
          <source>Minimal major axis length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a53882469022ee6da458ef69c85a868579cfa14" translate="yes" xml:space="preserve">
          <source>Minimum Mean Square Error (Wiener) inverse filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5544f49a7a57e7951e2ca0cfcb63a62fa47ed079" translate="yes" xml:space="preserve">
          <source>Minimum accepted length of detected lines. Increase the parameter to extract longer lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e504b2c6029329f58439b31fe3e021365fe4ba81" translate="yes" xml:space="preserve">
          <source>Minimum angle separating lines (maximum filter size for second dimension of hough space).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbd1c6c68fdb91049781e71886516b3d27e50df" translate="yes" xml:space="preserve">
          <source>Minimum component size. Enforced using postprocessing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91ce208f1de4b7ab4361c70ba2d3a5abc06162b" translate="yes" xml:space="preserve">
          <source>Minimum distance separating centers in the x dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c2ec1336a4e8e25703a7a56daf135716c6bcb3" translate="yes" xml:space="preserve">
          <source>Minimum distance separating centers in the y dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ede6a955b8b140fddc0f56db03023ee26504b6" translate="yes" xml:space="preserve">
          <source>Minimum distance separating lines (maximum filter size for first dimension of hough space).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2ad9d4d12da56207a80ed1c1b3aa701c167144" translate="yes" xml:space="preserve">
          <source>Minimum intensity of peaks in each Hough space. Default is &lt;code&gt;0.5 * max(hspace)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b3d30b2d347c3aa30c8ea6b8e9026fc77b365e" translate="yes" xml:space="preserve">
          <source>Minimum intensity of peaks, calculated as &lt;code&gt;max(image) * threshold_rel&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3d2de7ec92ffa821da39eb43c8d5be266f9c88" translate="yes" xml:space="preserve">
          <source>Minimum intensity of peaks. By default, the absolute threshold is the minimum intensity of the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed960c2dc41b2c13eb6e0bccb8104175a147dd33" translate="yes" xml:space="preserve">
          <source>Minimum intensity of peaks. Default is &lt;code&gt;0.5 * max(hspace)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e513c10efba59889f88b45b2d9f0ded095fc87" translate="yes" xml:space="preserve">
          <source>Minimum number of consecutive pixels out of 16 pixels on the circle that should all be either brighter or darker w.r.t testpixel. A point c on the circle is darker w.r.t test pixel p if &lt;code&gt;Ic &amp;lt; Ip - threshold&lt;/code&gt; and brighter if &lt;code&gt;Ic &amp;gt; Ip + threshold&lt;/code&gt;. Also stands for the n in &lt;code&gt;FAST-n&lt;/code&gt; corner detector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71919fcac9a89f039f915eec5c375794050fb250" translate="yes" xml:space="preserve">
          <source>Minimum number of pixels separating peaks in a region of &lt;code&gt;2 * min_distance + 1&lt;/code&gt; (i.e. peaks are separated by at least &lt;code&gt;min_distance&lt;/code&gt;). To find the maximum number of peaks, use &lt;code&gt;min_distance=1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f35fc011827b4d11a1ed50708b233427018d3fb" translate="yes" xml:space="preserve">
          <source>Minimum scale to extract keypoints from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd91a13448b4e8b7946e92192c13c9e95ea7571c" translate="yes" xml:space="preserve">
          <source>Minor and major semi-axes. &lt;code&gt;(r/r_radius)**2 + (c/c_radius)**2 = 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e528aee11524a6fa2c83ff8532bae87b50bb11c" translate="yes" xml:space="preserve">
          <source>Mode for solving the linear system in the random walker algorithm. If no preference given, automatically attempt to use the fastest option available (&amp;lsquo;cg_mg&amp;rsquo; from pyamg &amp;gt;&amp;gt; &amp;lsquo;cg&amp;rsquo; with UMFPACK &amp;gt; &amp;lsquo;bf&amp;rsquo;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98321f04feaa76b0d48f52bdaac1d7ba8ccfb3e7" translate="yes" xml:space="preserve">
          <source>Mode used to convolve image with a kernel, passed to &lt;code&gt;ndi.convolve&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9a7bcffec221764163db4e65db3aa40c8366f0" translate="yes" xml:space="preserve">
          <source>Modes &amp;lsquo;reflect&amp;rsquo; and &amp;lsquo;symmetric&amp;rsquo; are similar, but differ in whether the edge pixels are duplicated during the reflection. As an example, if an array has values [0, 1, 2] and was padded to the right by four values using symmetric, the result would be [0, 1, 2, 2, 1, 0, 0], while for reflect it would be [0, 1, 2, 1, 0, 1, 2].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c00192464ebf8bc569c10177e732c0c031aabd1" translate="yes" xml:space="preserve">
          <source>Module: color</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83b28d322dbbaa401231e3abe7bea4eb0b9cfd3" translate="yes" xml:space="preserve">
          <source>Module: data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea49ef92ec48b96f1d038adde7a96b512e857430" translate="yes" xml:space="preserve">
          <source>Module: draw</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e508ff146ffab39fbdfc7e2d6cc0e5200aa0d5ea" translate="yes" xml:space="preserve">
          <source>Module: exposure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600e366cb8b9ca47aa9944efc7e3006e63f6299c" translate="yes" xml:space="preserve">
          <source>Module: external</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c8f6f185c4263d2cedfeaaed1946bc2f3e5757" translate="yes" xml:space="preserve">
          <source>Module: external.tifffile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d49ec0399e0f0ad96fead2bbf45119dc1b86805e" translate="yes" xml:space="preserve">
          <source>Module: feature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753d3291d6e60d216b5da09e9019537e9d274bc8" translate="yes" xml:space="preserve">
          <source>Module: filters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2529d281e7a564baaa45a6007265d0caba484e" translate="yes" xml:space="preserve">
          <source>Module: filters.rank</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f8822d3c17ccfec1bbc07ae3ee8aef081aa1fc" translate="yes" xml:space="preserve">
          <source>Module: future</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c0eb94bfb47f99725c18c2cfd2bec2fc2b1a98" translate="yes" xml:space="preserve">
          <source>Module: future.graph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08bfa2ac760bc0f0cae39498a80a909536329f52" translate="yes" xml:space="preserve">
          <source>Module: graph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32cfb22345a8b07319722ae3ff4c7642cb12a1c" translate="yes" xml:space="preserve">
          <source>Module: io</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a587271f318a0630dbdc5970320425af3728d2" translate="yes" xml:space="preserve">
          <source>Module: measure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4227f8517ac95832852324e3f25f44843285c61e" translate="yes" xml:space="preserve">
          <source>Module: morphology</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d90a37c3cf7dfb76b6ab8b06b3063c73e5d4dec" translate="yes" xml:space="preserve">
          <source>Module: novice</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602c2874190d8c4b54aa37261902f6c3752779aa" translate="yes" xml:space="preserve">
          <source>Module: restoration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea1abff38ab368e72d0474018030bf2fc97b2d0" translate="yes" xml:space="preserve">
          <source>Module: segmentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de5cdd0a06056e5c43d50ec2f9ece9113d6b387" translate="yes" xml:space="preserve">
          <source>Module: transform</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2726fa50a6e2e510bbd0315aec776162bf8922b3" translate="yes" xml:space="preserve">
          <source>Module: util</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8dd8187cdcd74e39c552151a160a9ce8c1ad4d" translate="yes" xml:space="preserve">
          <source>Module: viewer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78270d6f041a8ad84e1783ddbc5cd2b9e3a83cbc" translate="yes" xml:space="preserve">
          <source>Module: viewer.canvastools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0390c0e3c0cf4443a515b16feca42d40242531cc" translate="yes" xml:space="preserve">
          <source>Module: viewer.plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5a8a444ab9ebc27ab7f4676a751ac8fdd282bf" translate="yes" xml:space="preserve">
          <source>Module: viewer.utils</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fcd783bc9f7c42493d880679d167cd5997a5894" translate="yes" xml:space="preserve">
          <source>Module: viewer.viewers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3baf20d23f9a688ed53ef1096084f00228b0da" translate="yes" xml:space="preserve">
          <source>Module: viewer.widgets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e34650ac26311470cc4d6233daffda8fd88ea37" translate="yes" xml:space="preserve">
          <source>Moon image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="495122ed26d82e7b934cd5118cacb437d205027d" translate="yes" xml:space="preserve">
          <source>Moravec response image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d2ef40cab25e5eb9e2ce73c476c5484fcdefed" translate="yes" xml:space="preserve">
          <source>More information is available in an &lt;a href=&quot;http://en.wikibooks.org/wiki/FFMPEG_An_Intermediate_Guide/image_sequence#Making_an_Image_Sequence_from_a_video&quot;&gt;FFmpeg tutorial on image sequences&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d2f3a8f8e7074179912934a7faad81d480f6a6" translate="yes" xml:space="preserve">
          <source>Morphological Active Contours without Edges (MorphACWE)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63c4758134950aa9977fddabba258fdda2197cc" translate="yes" xml:space="preserve">
          <source>Morphological Geodesic Active Contours (MorphGAC).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f673e70de58ebea14bae71a54696006089c50f8" translate="yes" xml:space="preserve">
          <source>Morphological dilation sets a pixel at (i,j) to the maximum over all pixels in the neighborhood centered at (i,j). Dilation enlarges bright regions and shrinks dark regions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80568821ecea39bb81b3251ba4886b50344433cb" translate="yes" xml:space="preserve">
          <source>Morphological dilation sets a pixel at &lt;code&gt;(i,j)&lt;/code&gt; to the maximum over all pixels in the neighborhood centered at &lt;code&gt;(i,j)&lt;/code&gt;. Dilation enlarges bright regions and shrinks dark regions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33f05edd0f076ac5749640346acdc4f453d3025" translate="yes" xml:space="preserve">
          <source>Morphological erosion sets a pixel at (i,j) to the minimum over all pixels in the neighborhood centered at (i,j). Erosion shrinks bright regions and enlarges dark regions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a47d01c7394ae5d93959ca8677831db5f4eac2" translate="yes" xml:space="preserve">
          <source>Morphological erosion sets a pixel at &lt;code&gt;(i,j)&lt;/code&gt; to the minimum over all pixels in the neighborhood centered at &lt;code&gt;(i,j)&lt;/code&gt;. Erosion shrinks bright regions and enlarges dark regions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0634110d2ed799499811c8177e62107322dde478" translate="yes" xml:space="preserve">
          <source>Morphological operations, e.g., opening or skeletonization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92aff669dd6f05f9196b7fb2d203c8c2990a005" translate="yes" xml:space="preserve">
          <source>Morphological reconstruction by dilation is similar to basic morphological dilation: high-intensity values will replace nearby low-intensity values. The basic dilation operator, however, uses a structuring element to determine how far a value in the input image can spread. In contrast, reconstruction uses two images: a &amp;ldquo;seed&amp;rdquo; image, which specifies the values that spread, and a &amp;ldquo;mask&amp;rdquo; image, which gives the maximum allowed value at each pixel. The mask image, like the structuring element, limits the spread of high-intensity values. Reconstruction by erosion is simply the inverse: low-intensity values spread from the seed image and are limited by the mask image, which represents the minimum allowed value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47140a1616950b056f886aef5097e50f3eea9707" translate="yes" xml:space="preserve">
          <source>Most coins are well segmented out of the background. Small objects from the background can be easily removed using the &lt;code&gt;ndi.label&lt;/code&gt; function to remove objects smaller than a small threshold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b9fdafe9fcab288b00167c40e4f1b4b093a2e2" translate="yes" xml:space="preserve">
          <source>Most functions for manipulating color channels are found in the submodule &lt;a href=&quot;../api/skimage.color#module-skimage.color&quot;&gt;&lt;code&gt;skimage.color&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d704cd30c366a73843b74de5388a01e12e93b9" translate="yes" xml:space="preserve">
          <source>Most functions of &lt;code&gt;skimage&lt;/code&gt; are found within submodules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c0f4d77ebfe82a6fc31bc2c547e211365d9eb0" translate="yes" xml:space="preserve">
          <source>Most notably, if v4, v8, v2, and v6 are all &amp;gt;= &lt;code&gt;level&lt;/code&gt; (or any generalization of this case) two parallel planes are generated by this algorithm, separating v4 and v8 from v2 and v6. An equally valid interpretation would be a single connected thin surface enclosing all four points. This is the best known ambiguity, though there are others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751be01c6145935b1327ae8c1b3e85ef927f2734" translate="yes" xml:space="preserve">
          <source>Motilal Agrawal, Kurt Konolige and Morten Rufus Blas &amp;ldquo;CENSURE: Center Surround Extremas for Realtime Feature Detection and Matching&amp;rdquo;, &lt;a href=&quot;https://link.springer.com/chapter/10.1007/978-3-540-88693-8_8&quot;&gt;https://link.springer.com/chapter/10.1007/978-3-540-88693-8_8&lt;/a&gt; DOI:10.1007/978-3-540-88693-8_8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b65e0f980982a8caa3bac5cf2dba2088be3629" translate="yes" xml:space="preserve">
          <source>Motion blurred clock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12ec81792f69772dc2f94e2b6cd2e7649bf0421" translate="yes" xml:space="preserve">
          <source>MoviePy</source>
          <target state="translated">MoviePy</target>
        </trans-unit>
        <trans-unit id="31fb833339145c7dc9eb70fb15cbce625dffe7fe" translate="yes" xml:space="preserve">
          <source>MoviePy can be installed with pip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42b54e3a5bdf92d1a5862828310781d2e9435e3" translate="yes" xml:space="preserve">
          <source>Multi-block local binary pattern (MB-LBP).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e66408c0e54af9a6f142ef299e7e369701de05" translate="yes" xml:space="preserve">
          <source>Multi-block local binary pattern visualization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8062786effc1c9cc0a166ad98e6fe4d51b1d373" translate="yes" xml:space="preserve">
          <source>Multi-dimensional Gaussian filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8ff0477c675f8bc331a7aec716c4ae6e3900fb" translate="yes" xml:space="preserve">
          <source>MultiImage</source>
          <target state="translated">MultiImage</target>
        </trans-unit>
        <trans-unit id="4720ceb80f80a2e12c97b5858c1f8919d14a630e" translate="yes" xml:space="preserve">
          <source>Multichannel inputs are scaled with all channel data combined. Ensure all channels are separately normalized prior to running this algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7282ce48ec17801c1378946807868eb167bf6a5" translate="yes" xml:space="preserve">
          <source>Multiresolution Gray-Scale and Rotation Invariant Texture Classification with Local Binary Patterns. Timo Ojala, Matti Pietikainen, Topi Maenpaa. &lt;a href=&quot;http://www.ee.oulu.fi/research/mvmp/mvg/files/pdf/pdf_94.pdf&quot;&gt;http://www.ee.oulu.fi/research/mvmp/mvg/files/pdf/pdf_94.pdf&lt;/a&gt;, 2002.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3705178f69da97d81c63b5a9c055569fd2f6a222" translate="yes" xml:space="preserve">
          <source>N &amp;gt;= log(1 - probability) / log(1 - e**m)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784a26486bf996cb884f697c457e27d5b1c1cb9d" translate="yes" xml:space="preserve">
          <source>N points in a space of dimension dim.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994acf65e4b262272d14e66ca384c51b4e9fdb8c" translate="yes" xml:space="preserve">
          <source>N points in a space of dimensionality dim &amp;gt;= 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a7416cd6fde60cc635e07c0851a78cdf530d28" translate="yes" xml:space="preserve">
          <source>N points with &lt;code&gt;(x, y)&lt;/code&gt; coordinates, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f0744060f7dc7c1125712509a431a3df98e479" translate="yes" xml:space="preserve">
          <source>N-d input array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0ed4ad0a5d3b790882f21293e472971130f95b" translate="yes" xml:space="preserve">
          <source>N-dimensional input image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf77d8da842cbcf71a5532b61a548e5bc8f2977" translate="yes" xml:space="preserve">
          <source>N. Hashimoto et al. Referenceless image quality evaluation for whole slide imaging. J Pathol Inform 2012;3:9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ccfa2ccce4115f4425f5897abc807dfba6fac3a" translate="yes" xml:space="preserve">
          <source>N.S.Hoang, S.B.Damelin, &amp;ldquo;On surface completion and image inpainting by biharmonic functions: numerical aspects&amp;rdquo;, &lt;a href=&quot;https://arxiv.org/abs/1707.06567&quot;&gt;https://arxiv.org/abs/1707.06567&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3fef1696f4ff06599e59b794b2dd09497cd85f" translate="yes" xml:space="preserve">
          <source>Name of CheckBox parameter. If this parameter is passed as a keyword argument, it must match the name of that keyword argument (spaces are replaced with underscores). In addition, this name is displayed as the name of the CheckBox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5728c4a882b6771d13fdfe838ac9be35429385d1" translate="yes" xml:space="preserve">
          <source>Name of ComboBox parameter. If this parameter is passed as a keyword argument, it must match the name of that keyword argument (spaces are replaced with underscores). In addition, this name is displayed as the name of the ComboBox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e39473ecc7b4d5fed5fc3746b0af3ed33c4a47" translate="yes" xml:space="preserve">
          <source>Name of button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29092dc506da407f000febd81f43b1e4e2b0b3ec" translate="yes" xml:space="preserve">
          <source>Name of colormap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d80a849eaf7905b1838a8f2f42cb6f80f6d8cce" translate="yes" xml:space="preserve">
          <source>Name of file or open file object. The file objects are closed in TiffFile.close().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74309dff6a75f64bc597711444284f394f54117" translate="yes" xml:space="preserve">
          <source>Name of plugin to use. By default, the different plugins are tried (starting with the Python Imaging Library) until a suitable candidate is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52298fa8c964ca7af4cdc01e48c6774f032983c9" translate="yes" xml:space="preserve">
          <source>Name of plugin to use. By default, the different plugins are tried (starting with the Python Imaging Library) until a suitable candidate is found. If not given and fname is a tiff file, the tifffile plugin will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46abd25f0715f58fb7d2272be9a57fae18fc89d4" translate="yes" xml:space="preserve">
          <source>Name of plugin to use. By default, the different plugins are tried until a suitable candidate is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02fa2c765213b5c888e155f5400dd8c0bc21bce" translate="yes" xml:space="preserve">
          <source>Name of plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177783e5a16de27cb1396dd3a8c05d0d9afa5119" translate="yes" xml:space="preserve">
          <source>Name of plugin. This is displayed as the window title.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd8c489c8b3739d3329650fe4698f0f9a0031a8" translate="yes" xml:space="preserve">
          <source>Name of slider parameter. If this parameter is passed as a keyword argument, it must match the name of that keyword argument (spaces are replaced with underscores). In addition, this name is displayed as the name of the slider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b24edf803e3ec77b7de9eb7d0ca585f7d8adc6" translate="yes" xml:space="preserve">
          <source>Name of the software used to create the file. Saved with the first page in the file only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61359a136955337d39a854f0637803033e85dcb2" translate="yes" xml:space="preserve">
          <source>Negative input values will be clipped. Positive values are scaled between 0 and 255.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876fc6b1b91da53ac0e19e1f25bce65125756257" translate="yes" xml:space="preserve">
          <source>Negative input values will be clipped. Positive values are scaled between 0 and 65535.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91fee69b73d36fdb11472bbf2c8bf3ab2de83e1d" translate="yes" xml:space="preserve">
          <source>Neighborhood connectivity for border pixel determination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb1afde7c6ca2fc8f380e2e2dec648016c13d5ae" translate="yes" xml:space="preserve">
          <source>New array where each pixel has the rank-order value of the corresponding pixel in &lt;code&gt;image&lt;/code&gt;. Pixel values are between 0 and n - 1, where n is the number of distinct unique values in &lt;code&gt;image&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dcb523c8b35ef7bba188a1b72a37583d73585c0" translate="yes" xml:space="preserve">
          <source>New in version 1.7.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a97553c109222d87d519494877459813b491c0c" translate="yes" xml:space="preserve">
          <source>Next, we want to separate the two circles. We generate markers at the maxima of the distance to the background:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e19ae8c9bd55b88207c8941b2611504f91d9f0" translate="yes" xml:space="preserve">
          <source>Niblack, W (1986), An introduction to Digital Image Processing, Prentice-Hall.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cafab2db820ecd3c164631fc7c65d879d53306f5" translate="yes" xml:space="preserve">
          <source>No copyright restrictions. CC0 by the photographer (Rachel Michetti).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f649137eb402be7e62f067e27cf606a62d4bd0c" translate="yes" xml:space="preserve">
          <source>No copyright restrictions. CC0 by the photographer (Stefan van der Walt).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6265ea4a053fe88f12e36b94fd6c54e3ee647935" translate="yes" xml:space="preserve">
          <source>No known copyright restrictions, released into the public domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48591b6cff7b38fe9bd195ddb704ecb89f8d42b9" translate="yes" xml:space="preserve">
          <source>No known copyright restrictions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967a62bdce50f3769eb01a174d8cb157ce1c2371" translate="yes" xml:space="preserve">
          <source>Nodes to be merged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb0cea20b9180c53297aed73d905d7dd426abfa" translate="yes" xml:space="preserve">
          <source>Noise feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b934e12cb93daca1da199ff2b44b990ce22069" translate="yes" xml:space="preserve">
          <source>Non negative real number. Default value is 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f395456330b10eb2acd51da4486ed2d4dafea3e1" translate="yes" xml:space="preserve">
          <source>None : rescale based on min/max intensity along selected scan line. &amp;lsquo;image&amp;rsquo; : fixed scale based on min/max intensity in image. &amp;lsquo;dtype&amp;rsquo; : fixed scale based on min/max intensity of image dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e7852ce9876a59c732cc5beb3697806c36a58a" translate="yes" xml:space="preserve">
          <source>Normalisation factor (Noble&amp;rsquo;s corner measure).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b599f3999bb538fce17982b1688e921b8f5cdc57" translate="yes" xml:space="preserve">
          <source>Normalization using L1-norm, followed by square root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438523bf291902f9566bd638289f571ddb7a2ed0" translate="yes" xml:space="preserve">
          <source>Normalization using L1-norm. (default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a9bb62d0ceeca9483896a379ef6cdc9a1e24c9" translate="yes" xml:space="preserve">
          <source>Normalization using L2-norm, followed by limiting the maximum values to 0.2 (&lt;code&gt;Hys&lt;/code&gt; stands for &lt;code&gt;hysteresis&lt;/code&gt;) and renormalization using L2-norm. For details, see &lt;a href=&quot;#ra159ccd8c91f-3&quot; id=&quot;id8&quot;&gt;[3]&lt;/a&gt;, &lt;a href=&quot;#ra159ccd8c91f-4&quot; id=&quot;id9&quot;&gt;[4]&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d3edfbcf60a003e40607428cb8e55638066dc52" translate="yes" xml:space="preserve">
          <source>Normalization using L2-norm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba02d9b1a654c48070083b59cc68e4d0bd9afb5" translate="yes" xml:space="preserve">
          <source>Normalize the accumulator with the number of pixels used to draw the radius.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbdd9a67674778022bf45424434c26c54b1c57b5" translate="yes" xml:space="preserve">
          <source>Normalized central image moments, where M must be &amp;gt; 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fedd6ecf2ed7969b2d25fda229dc376a1dc9cc9a" translate="yes" xml:space="preserve">
          <source>Normalized central image moments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c76aee4e089add31bb761547a9b0e5c61dd2b5" translate="yes" xml:space="preserve">
          <source>Normalized moments (translation and scale invariant) of intensity image up to 3rd order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50c075b8a671b2ffe11f7d890b8926a3e371d24" translate="yes" xml:space="preserve">
          <source>Normalized moments (translation and scale invariant) up to 3rd order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00de0e993f5bca5c017f793d8c544419fd69a5ba" translate="yes" xml:space="preserve">
          <source>Normalized sliding window histogram</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="cbd0adccba157cbeb3d0d89dec6831eb9f9501de" translate="yes" xml:space="preserve">
          <source>Note about negative values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e57dbd32016888eb7de719dbee5f3784ebfecd7e" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;scipy.ndimage.sobel&lt;/code&gt; returns a directional Sobel which has to be further processed to perform edge detection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="274ea2b93e33d7181196bbcfb96ae63703b58b32" translate="yes" xml:space="preserve">
          <source>Note that artists must be appended to &lt;code&gt;self.artists&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5636f6e4d05d9a68d0e903657c4791c81d75746a" translate="yes" xml:space="preserve">
          <source>Note that central moments are translation invariant but not scale and rotation invariant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd204a3ce148e51ed31c93328d86de40eade01c" translate="yes" xml:space="preserve">
          <source>Note that files are always stored in alphabetical order. Also note that slicing returns a new ImageCollection, &lt;em&gt;not&lt;/em&gt; a view into the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4c16b0da174ff264695da480a1e32d12c335ac" translate="yes" xml:space="preserve">
          <source>Note that float images should be restricted to the range -1 to 1 even though the data type itself can exceed this range; all integer dtypes, on the other hand, have pixel intensities that can span the entire data type range. With a few exceptions, &lt;em&gt;64-bit (u)int images are not supported&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82255b38ca563076522e898322bfce40cafd3b70" translate="yes" xml:space="preserve">
          <source>Note that in &lt;code&gt;scikit-image&lt;/code&gt; we usually refer to &lt;code&gt;rows&lt;/code&gt; and &lt;code&gt;columns&lt;/code&gt; instead of width and height (see &lt;a href=&quot;numpy_images#numpy-images-coordinate-conventions&quot;&gt;Coordinate conventions&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1d7aa6bb7998868f8dc8028a313245623a9aed" translate="yes" xml:space="preserve">
          <source>Note that normalized central moments are translation and scale invariant but not rotation invariant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90598c6964d89edf1f250425008eab6272def57" translate="yes" xml:space="preserve">
          <source>Note that raw moments are neither translation, scale nor rotation invariant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a114cde7e62396086fa246099904a2054cafa4e7" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;marching_cubes()&lt;/code&gt; algorithm is recommended over this algorithm, because it&amp;rsquo;s faster and produces better results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc0b8b027f1031005eed954f272f553162ee2c0" translate="yes" xml:space="preserve">
          <source>Note that the ImageViewer will automatically call this method when the plugin is added to the ImageViewer. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b19d4e76db9071c953ad8f25e415aec202ded31" translate="yes" xml:space="preserve">
          <source>Note that the approximated polygon is always within the convex hull of the original polygon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ce4693d048eff35b5e12611b42789bfc4a10ac" translate="yes" xml:space="preserve">
          <source>Note that the first image of the pyramid will be the difference between the original, unscaled image and its smoothed version. The total number of images is &lt;code&gt;max_layer + 1&lt;/code&gt;. In case all layers are computed, the last image is either a one-pixel image or the image where the reduction does not change its shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ee17a0a6970b8ccc3c9d9f61a0e8c24b66c8bc" translate="yes" xml:space="preserve">
          <source>Note that the first image of the pyramid will be the original, unscaled image. The total number of images is &lt;code&gt;max_layer + 1&lt;/code&gt;. In case all layers are computed, the last image is either a one-pixel image or the image where the reduction does not change its shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22b64e14f859d036b3bb1a919f2c37b79524a6c5" translate="yes" xml:space="preserve">
          <source>Note that the keypoints must be extracted using the same &lt;code&gt;downscale&lt;/code&gt; and &lt;code&gt;n_scales&lt;/code&gt; parameters. Additionally, if you want to extract both keypoints and descriptors you should use the faster &lt;code&gt;detect_and_extract&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36036246e2b0a5fe8eb0d4b104e705c41c3dc8e" translate="yes" xml:space="preserve">
          <source>Note that the positions of &lt;code&gt;ellipse&lt;/code&gt; without specified &lt;code&gt;shape&lt;/code&gt; can have also, negative values, as this is correct on the plane. On the other hand using these ellipse positions for an image afterwards may lead to appearing on the other side of image, because &lt;code&gt;image[-1, -1] = image[end-1, end-1]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff4373396d99a06e1ed74ff76d77714c0115955" translate="yes" xml:space="preserve">
          <source>Note that the resulting curve is always within the convex hull of the original polygon. Circular polygons stay closed after subdivision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c57b5407a35a87fd17590dac770cd053763a50c" translate="yes" xml:space="preserve">
          <source>Note that the sum may overflow depending on the data type of the input array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4dee38328a5b906de22af8d540999a24c6de80" translate="yes" xml:space="preserve">
          <source>Note that this algorithm will give different results than a medial axis transform, which is also often referred to as &amp;ldquo;skeletonization&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b96d34dcbd2a4551f6a325c7b2552230c0794e" translate="yes" xml:space="preserve">
          <source>Note that this function modifies the color of the image in-place. Coordinates that exceed the shape of the image will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fdfff60f19fbfd2edeaa0bd762be88cdd448624" translate="yes" xml:space="preserve">
          <source>Note that this is faster than first calling &lt;code&gt;detect&lt;/code&gt; and then &lt;code&gt;extract&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c8747179a123d8ae6f876667ef505b8698b8ef" translate="yes" xml:space="preserve">
          <source>Note that this set of moments is proofed to be translation, scale and rotation invariant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b75db82d03ad4ef2a6ed6a52c0dc12361270ec" translate="yes" xml:space="preserve">
          <source>Note that, by default, &lt;code&gt;imshow&lt;/code&gt; is non-blocking, so a special function &lt;code&gt;_app_show&lt;/code&gt; must be provided to block the GUI. We can modify our plugin to provide it as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72cd58c3798936a3a89f90afc882e8f944f1ca5" translate="yes" xml:space="preserve">
          <source>Note that, if more than one plugin provides certain functionality, the last plugin loaded is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14c4d0f4bb63732f1bb36b4461c3a7d068b551d" translate="yes" xml:space="preserve">
          <source>Note, that a &lt;code&gt;(3, 3)&lt;/code&gt; matrix is interpreted as a homogeneous transformation matrix, so you cannot interpolate values from a 3-D input, if the output is of shape &lt;code&gt;(3,)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="953518cf234c10a4118ec7db8b4aa14a0d4a0498" translate="yes" xml:space="preserve">
          <source>Note, typically:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5515ab301acf9a3326266edba293688af4bd5e" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;display_filtered_image&lt;/code&gt; is automatically called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="35d9f0f105fe8cb77ce4da6c2d1e6e9366d54db6" translate="yes" xml:space="preserve">
          <source>Notes on array order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304137aee29bac56bc933300db0b5635b6120f6b" translate="yes" xml:space="preserve">
          <source>Now that we have contours that delineate the outer boundary of the coins, we fill the inner part of the coins using the &lt;code&gt;ndi.binary_fill_holes&lt;/code&gt; function, which uses mathematical morphology to fill the holes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d5b577b6d1d9d5fc92ad3888602e04adc3fc7a" translate="yes" xml:space="preserve">
          <source>NumPy arrays representing images can be of different integer of float numerical types. See &lt;a href=&quot;data_types#data-types&quot;&gt;Image data types and what they mean&lt;/a&gt; for more information about these types and how scikit-image treats them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8c68dad20f12396930cc25ee612a22c27f1ab3" translate="yes" xml:space="preserve">
          <source>NumPy indexing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7294f6f46886c5191dbb5ccbfa2f02b2c88e69a8" translate="yes" xml:space="preserve">
          <source>NumPy indexing can be used both for looking at pixel values, and to modify pixel values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a92a19dc0af19f2f908043312c587c2d4c4f54" translate="yes" xml:space="preserve">
          <source>Number of bins for image histogram.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88daa645ac1bfe06d1c78c81ecf0c4019f62c316" translate="yes" xml:space="preserve">
          <source>Number of bins for image histogram. Note: this argument is ignored for integer images, for which each integer is its own bin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77d1428647f0c62c4bcb2236b7fbef1a3c10235" translate="yes" xml:space="preserve">
          <source>Number of bins used to calculate histogram. This value is ignored for integer arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8fb9beb55d5bae521e706c4043c33ffe468663" translate="yes" xml:space="preserve">
          <source>Number of bits per channel in integer RGB images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b01a67c27c45d354d4571914f9e31fe6b171f0" translate="yes" xml:space="preserve">
          <source>Number of cells in each block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90eaa034802a45d613bb15761be78de1bc60dcf" translate="yes" xml:space="preserve">
          <source>Number of channels in the generated image. If 1, generate monochrome images, else color images with multiple channels. Ignored if &lt;code&gt;multichannel&lt;/code&gt; is set to False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ee550742db8d18d5b3bd32773af7aa1ae0cd8d" translate="yes" xml:space="preserve">
          <source>Number of circularly symmetric neighbour set points (quantization of the angular space).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63104a7142d66d641ea9336721dd01404bef9473" translate="yes" xml:space="preserve">
          <source>Number of data values. Not used for string values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e29520388bf12de6bdaa654a8985ba716d0e2b" translate="yes" xml:space="preserve">
          <source>Number of dimensions of output image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175af97b2bc76f336c088260cb62e62d582106c4" translate="yes" xml:space="preserve">
          <source>Number of discrete values for Gaussian weights of color filtering. A larger value results in improved accuracy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4bf6870311d79e1b90c492489ed864c9a3958e" translate="yes" xml:space="preserve">
          <source>Number of gray bins for histogram (&amp;ldquo;data range&amp;rdquo;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24226522be8808aef08026d5f4fb377c978659e1" translate="yes" xml:space="preserve">
          <source>Number of histograms sampled per ring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50757cd0d43f22c75913b35948a21cce296ffbb" translate="yes" xml:space="preserve">
          <source>Number of iterations to run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424e2f72a5ae61a310f1b26f1604083ac95c9a37" translate="yes" xml:space="preserve">
          <source>Number of iterations to run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98530769c7e3be44aa7d64eaa64e3311b9464725" translate="yes" xml:space="preserve">
          <source>Number of iterations. This parameter plays the role of regularisation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f9f170fed373f8f3755633c099bc3e4ea4ecac" translate="yes" xml:space="preserve">
          <source>Number of keypoints to be returned. The function will return the best &lt;code&gt;n_keypoints&lt;/code&gt; according to the Harris corner response if more than &lt;code&gt;n_keypoints&lt;/code&gt; are detected. If not, then all the detected keypoints are returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b596079e4719d5b7cfc2c41a79dabe4538b9bfa4" translate="yes" xml:space="preserve">
          <source>Number of labels, which equals the maximum label index and is only returned if return_num is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a449ee6d01061da4aa3ecb2e735f1f3b1c55021e" translate="yes" xml:space="preserve">
          <source>Number of layers for the pyramid. 0th layer is the original image. Default is -1 which builds all possible layers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4754de3fa9cd601ca2d350fccf2a91c6ce6599" translate="yes" xml:space="preserve">
          <source>Number of orientation bins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2c860dccedce5410566f86e629928e8c3ba0cc" translate="yes" xml:space="preserve">
          <source>Number of orientations (bins) per histogram.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec92b5a85379275646163dc3b8d0c7e1ba643c84" translate="yes" xml:space="preserve">
          <source>Number of pixels of bounding box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c15e2a535c323ea838a3934b90c4143d1caf9b5" translate="yes" xml:space="preserve">
          <source>Number of pixels of convex hull image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa979ef1fcab73bf71958263ba02d1d792978ae2" translate="yes" xml:space="preserve">
          <source>Number of pixels of filled region.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549524d0cf6fd0b56a4cbfa33aabfd95b0f8efe2" translate="yes" xml:space="preserve">
          <source>Number of pixels of region.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64dc21016d8954eeeaee71489d7e4ad4c8937ce8" translate="yes" xml:space="preserve">
          <source>Number of rings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08c36eae262f5feba22561e74e1594e2aed9d0f" translate="yes" xml:space="preserve">
          <source>Number of rows and columns in the reconstruction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef0c09293beaa13371129da3ccd4a6eefd38ea6" translate="yes" xml:space="preserve">
          <source>Number of seams are to be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41a0ead9a66389ba80c3c398af8222ceca5be0e" translate="yes" xml:space="preserve">
          <source>Number of source and destination coordinates must match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4d4e01bfaf1964e4f02bcd59978c4116535bcd" translate="yes" xml:space="preserve">
          <source>Number of times the smoothing operator is applied per iteration. Reasonable values are around 1-4. Larger values lead to smoother segmentations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612ea9a9fedd365d5dfed6db5fa33a0bb992e5bc" translate="yes" xml:space="preserve">
          <source>Number of values padded to the edges of each axis. ((before_1, after_1), &amp;hellip; (before_N, after_N)) unique pad widths for each axis. ((before, after),) yields same before and after pad for each axis. (pad,) or int is a shortcut for before = after = pad width for all axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ecca28674546b1670e426892b7f1052f6187da" translate="yes" xml:space="preserve">
          <source>Number of values to remove from the edges of each axis. &lt;code&gt;((before_1, after_1),&lt;/code&gt; &amp;hellip; &lt;code&gt;(before_N, after_N))&lt;/code&gt; specifies unique crop widths at the start and end of each axis. &lt;code&gt;((before, after),)&lt;/code&gt; specifies a fixed start and end crop for every axis. &lt;code&gt;(n,)&lt;/code&gt; or &lt;code&gt;n&lt;/code&gt; for integer &lt;code&gt;n&lt;/code&gt; is a shortcut for before = after = &lt;code&gt;n&lt;/code&gt; for all axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee66251ed8797af51dd3b21e368df761fc00bad5" translate="yes" xml:space="preserve">
          <source>Numeric type of slider value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f0de49dec2459cc03a8c6ac9ca586d69e656d5" translate="yes" xml:space="preserve">
          <source>Numpy edge modes &amp;lsquo;symmetric&amp;rsquo;, &amp;lsquo;wrap&amp;rsquo;, and &amp;lsquo;edge&amp;rsquo; are converted to the equivalent &lt;code&gt;dask&lt;/code&gt; boundary modes &amp;lsquo;reflect&amp;rsquo;, &amp;lsquo;periodic&amp;rsquo; and &amp;lsquo;nearest&amp;rsquo;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1beee4a2b8c4ef7939fb8d3aa00ada8eb32d58d3" translate="yes" xml:space="preserve">
          <source>OK will replace the original image with the current (filtered) image. Cancel will just close the plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721ee0db16ce101016c1c1aec6bb8dc15823e281" translate="yes" xml:space="preserve">
          <source>OKCancelButtons</source>
          <target state="translated">OKCancelButtons</target>
        </trans-unit>
        <trans-unit id="97a4d7bf7cb91bf265e94e43b7d057801ba13627" translate="yes" xml:space="preserve">
          <source>ORB</source>
          <target state="translated">ORB</target>
        </trans-unit>
        <trans-unit id="125b4bdbadec5945c91d921f45281b26ed8195ab" translate="yes" xml:space="preserve">
          <source>Object with the following object methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07eb1204b324ab8f619e8928630c4c6e2bcbc8e" translate="yes" xml:space="preserve">
          <source>Odd size of pixel neighborhood which is used to calculate the threshold value (e.g. 3, 5, 7, &amp;hellip;, 21, &amp;hellip;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b5033740fce9c36c7c1d36a1295d34f707ed1f" translate="yes" xml:space="preserve">
          <source>Odd size of pixel neighborhood window (e.g. 3, 5, 7&amp;hellip;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef0f20371f087c8158bca42d097d37ff87d6122" translate="yes" xml:space="preserve">
          <source>Of course, it is also possible to load your own images as NumPy arrays from image files, using &lt;a href=&quot;../api/skimage.io#skimage.io.imread&quot;&gt;&lt;code&gt;skimage.io.imread()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e855ddaacf9602c5b0e6e1aef3bd4f193a80e57e" translate="yes" xml:space="preserve">
          <source>Of course, you could just as easily use &lt;code&gt;imshow&lt;/code&gt; from &lt;a href=&quot;http://matplotlib.sourceforge.net/&quot;&gt;matplotlib&lt;/a&gt; (or alternatively, &lt;code&gt;skimage.io.imshow&lt;/code&gt; which adds support for multiple io-plugins) to display images. The advantage of &lt;code&gt;ImageViewer&lt;/code&gt; is that you can easily add plugins for manipulating images. Currently, only a few plugins are implemented, but it is easy to write your own. Before going into the details, let&amp;rsquo;s see an example of how a pre-defined plugin is added to the viewer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa402feb6cd2b30e6210954f712d975344a5111f" translate="yes" xml:space="preserve">
          <source>Offset added to the structuring element center point. Shift is bounded to the structuring element sizes (center must be inside the given structuring element).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f92624db8f2fe9330b09b4ef41dbab20255884d" translate="yes" xml:space="preserve">
          <source>Often used for segmentation and denoising examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdaa4f7b783c5a17a7592a8acd16a5378fe75dbd" translate="yes" xml:space="preserve">
          <source>On close disconnect all artists and events from ImageViewer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245ea090bb40a1cb00bf86a2009c74bc9907d3f9" translate="yes" xml:space="preserve">
          <source>On the other hand, a move from (1, 1) to (2, 2) is along the diagonal and is sqrt(2) in length. Half of this move is within the pixel (1, 1) and the other half in (2, 2), so the cost of this move is calculated as &lt;code&gt;(sqrt(2)/2)*costs[1,1] + (sqrt(2)/2)*costs[2,2]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8bb917d30f8e918beefbd1feb7c9a171676de0" translate="yes" xml:space="preserve">
          <source>One of the following string values or a user supplied function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601c350e77f0cbb966d6e0da6c07020900d47c2d" translate="yes" xml:space="preserve">
          <source>One of the following strings, selecting the type of noise to add:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5655a03526ab76549019edb83530a5fdaa8c9d72" translate="yes" xml:space="preserve">
          <source>One should be very careful with rolling views when it comes to memory usage. Indeed, although a &amp;lsquo;view&amp;rsquo; has the same memory footprint as its base array, the actual array that emerges when this &amp;lsquo;view&amp;rsquo; is used in a computation is generally a (much) larger array than the original, especially for 2-dimensional arrays and above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc9f68e87951f53b6b9fff4bed333ff28c32c494" translate="yes" xml:space="preserve">
          <source>Only greyvalues between percentiles [p0, p1] are considered in the filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793b79e4b04d19d0ebd2ad6f8b6116c84ebe0172" translate="yes" xml:space="preserve">
          <source>Only pixels belonging to the structuring element AND having a greylevel inside this interval are summed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0ebaac4f1ac8fb764ef26bab81f9857e96051b" translate="yes" xml:space="preserve">
          <source>Only pixels belonging to the structuring element and having a greylevel inside this interval are averaged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f506b006cd64ef83d101963f02f0c939a6d08e4" translate="yes" xml:space="preserve">
          <source>Opacity of colorized labels. Ignored if image is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15934db0130b8ccfbb41b4d4480674ca61db9796" translate="yes" xml:space="preserve">
          <source>Opacity of overlay</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03a5afe66fe16ef87028c28f24f4059f58a311e" translate="yes" xml:space="preserve">
          <source>Opacity of the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718df53da10c9c4df89b030f357e2e234b174eda" translate="yes" xml:space="preserve">
          <source>Open a TIFF file for writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfab2638a3c1d993ece26a7158ee523a3b16434d" translate="yes" xml:space="preserve">
          <source>Open image file and display in viewer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ceb60ff69ef41a393942a25dcdea0ce5b6c844" translate="yes" xml:space="preserve">
          <source>OpenCV</source>
          <target state="translated">OpenCV</target>
        </trans-unit>
        <trans-unit id="6fb1e0d1d6f2dc22d47cc24894bd3785c0e6fb7a" translate="yes" xml:space="preserve">
          <source>Optimised snake, same shape as input parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb4e65fe9e2245c35d56be0dae8235f152664d9" translate="yes" xml:space="preserve">
          <source>Optional custom parameter set in the form (&lt;code&gt;origin&lt;/code&gt;, &lt;code&gt;direction&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2056025ea76009cebd5dfddd1d54f45412413db" translate="yes" xml:space="preserve">
          <source>Optional custom parameter set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e1365f7e024b65aed43bdc932a1ed9dd4ce5825" translate="yes" xml:space="preserve">
          <source>Optional name of file in case &amp;lsquo;arg&amp;rsquo; is a file handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f41ffe61743377e857d48645cb00018ff605865" translate="yes" xml:space="preserve">
          <source>Optional size of embedded file. By default this is the number of bytes from the &amp;lsquo;offset&amp;rsquo; to the end of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b7b467f380454a30f47515eb84ba87a469f672" translate="yes" xml:space="preserve">
          <source>Optional start position of embedded file. By default this is the current file position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bea3a8c67af85420d3ff648ca5fe09c258aca60" translate="yes" xml:space="preserve">
          <source>Order angles to reduce the amount of correlated information in subsequent projections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa9c251db8c9532af6e17dd0abadb020c44819c4" translate="yes" xml:space="preserve">
          <source>Order of splines used in interpolation of downsampling. See &lt;code&gt;skimage.transform.warp&lt;/code&gt; for detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adeb45a9c9cd90d360dca85cab27f33ac3a8a2df" translate="yes" xml:space="preserve">
          <source>Order of splines used in interpolation of upsampling. See &lt;code&gt;skimage.transform.warp&lt;/code&gt; for detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d3be54ab3cc6bcb25ed6c34550317d94134ddf" translate="yes" xml:space="preserve">
          <source>Orientation in radians. If 0, the harmonic is in the x-direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1464e8e15ee9133d05e52e3dae9046174ffdc663" translate="yes" xml:space="preserve">
          <source>Orientations of corners in the range [-pi, pi].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5076ec9728f1b4dfdd67c84ab68f32248604339a" translate="yes" xml:space="preserve">
          <source>Oriented FAST and rotated BRIEF feature detector and binary descriptor extractor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d1c8c592cfd96fdbe69971d51afc4865984721" translate="yes" xml:space="preserve">
          <source>Origin point of the rectangle, e.g., &lt;code&gt;([plane,] row, column)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0faa321ae463cf423d057b0fb19c09b0142f3c2a" translate="yes" xml:space="preserve">
          <source>Other Parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ef9ed5fbd1041118b9434f61e09b646dd52177" translate="yes" xml:space="preserve">
          <source>Other methods re-distribute pixel values according to the &lt;em&gt;histogram&lt;/em&gt; of the image. The histogram of pixel values is computed with &lt;a href=&quot;../api/skimage.exposure#skimage.exposure.histogram&quot;&gt;&lt;code&gt;skimage.exposure.histogram()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58bc02e95bda5ec126f615cac998f9b65a671424" translate="yes" xml:space="preserve">
          <source>Other times, processing must be done plane-wise. When planes are the leading dimension, we can use the following syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5107010366c7dba8c95c59b7c2ac7dad2a29fb" translate="yes" xml:space="preserve">
          <source>Output array where &amp;lsquo;alpha&amp;rsquo; has been determined automatically to fit (at least) the &lt;code&gt;n_images&lt;/code&gt; in &lt;code&gt;arr_in&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478fdf2bf56550ae417e20ac257a08f3fcb5c925" translate="yes" xml:space="preserve">
          <source>Output array with input images glued together (including padding &lt;code&gt;p&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d9670255bd13871746c4f1d025777b1efbc2ad" translate="yes" xml:space="preserve">
          <source>Output binary image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b134ef80290e361e591294fd37323757bd3438b" translate="yes" xml:space="preserve">
          <source>Output contours are not guaranteed to be closed: contours which intersect the array edge will be left open. All other contours will be closed. (The closed-ness of a contours can be tested by checking whether the beginning point is the same as the end point.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361b36f7ab89ca41d153fd6c81bded3b9d373aad" translate="yes" xml:space="preserve">
          <source>Output floating-point image data on range [0, 1] or [-1, 1] if the input &lt;code&gt;image&lt;/code&gt; was unsigned or signed, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55358ade273339837e6679b80bb9a5207e306f96" translate="yes" xml:space="preserve">
          <source>Output image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7fafdc4f5dd82e83eebd24d557dd675cb7caae" translate="yes" xml:space="preserve">
          <source>Output types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3adb15459086839afa19e7342488ccf85f581e10" translate="yes" xml:space="preserve">
          <source>Overlay displayed on top of image. This overlay defaults to a color map with alpha values varying linearly from 0 to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a33357d08aaa328a6141eca5ef33b6f3528d96" translate="yes" xml:space="preserve">
          <source>Overlay of painted labels displayed on top of image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f17fe326607e7131e6ef0a7055775e0ebc54702" translate="yes" xml:space="preserve">
          <source>OverlayPlugin</source>
          <target state="translated">OverlayPlugin</target>
        </trans-unit>
        <trans-unit id="13e8fe88bfd08cae55594ce7027a241b42f41f59" translate="yes" xml:space="preserve">
          <source>Overload this method to keep track of the connections that are found during MCP processing. Note that a connection with the same ids can be found multiple times (but with different positions and costs).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="6c64a3c184df5aeb7bc38e04edd8b59c5b25b5af" translate="yes" xml:space="preserve">
          <source>PIMS is installable via conda on the &lt;code&gt;soft-matter&lt;/code&gt; channel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feac253e9e632b40a757ae8b74417de069a2a3e2" translate="yes" xml:space="preserve">
          <source>Padded array of rank equal to &lt;code&gt;array&lt;/code&gt; with shape increased according to &lt;code&gt;pad_width&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d526b53b9f3056522af85f26a2d434f580eafad" translate="yes" xml:space="preserve">
          <source>Padding function, see Notes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00257956982318f595df34f7c0ae7823ee7ef2ea" translate="yes" xml:space="preserve">
          <source>Padding mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49bbf324a7e6a05ed6cefa1faf313fb819eccbdc" translate="yes" xml:space="preserve">
          <source>Pads an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed38b70d664fac1df990b27835f8a3a31c0260f4" translate="yes" xml:space="preserve">
          <source>Pads with a constant value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f2ac48720b42a9d74674f19c7f64e1c0499c32" translate="yes" xml:space="preserve">
          <source>Pads with the edge values of array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca51805348b473c846607d0a2857abe02017fd5" translate="yes" xml:space="preserve">
          <source>Pads with the linear ramp between end_value and the array edge value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630cd57bb220770a2f515175c115bde03142bb98" translate="yes" xml:space="preserve">
          <source>Pads with the maximum value of all or part of the vector along each axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b2120b9c4caeb3f445da36215883fca44003eb" translate="yes" xml:space="preserve">
          <source>Pads with the mean value of all or part of the vector along each axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b8c9f7297b280c0b0ee0ea3cb9a6f56b7bac40" translate="yes" xml:space="preserve">
          <source>Pads with the median value of all or part of the vector along each axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec1953311c26ffb67e42015bdd267c1393f31365" translate="yes" xml:space="preserve">
          <source>Pads with the minimum value of all or part of the vector along each axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84bf3b9c4e883de4227d55b10846e004bac799fd" translate="yes" xml:space="preserve">
          <source>Pads with the reflection of the vector mirrored along the edge of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b83447ca8923bd3b3b6c9f855b78e24ddedd519" translate="yes" xml:space="preserve">
          <source>Pads with the reflection of the vector mirrored on the first and last values of the vector along each axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5d2e46c3cd8911ff34acad9b1fd07efaafaa7f" translate="yes" xml:space="preserve">
          <source>Pads with the wrap of the vector along the axis. The first values are used to pad the end and the end values are used to pad the beginning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a509e99c30aaee3135fdb04e630de8604806a46a" translate="yes" xml:space="preserve">
          <source>Page image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa15cd507b289d431858f01d6675bba2cf08283" translate="yes" xml:space="preserve">
          <source>PaintTool</source>
          <target state="translated">PaintTool</target>
        </trans-unit>
        <trans-unit id="508a3b50658486966218d18e54ebe39b1689cdce" translate="yes" xml:space="preserve">
          <source>Painting images with labels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f699f295e5ae4ac633cfa18437fed38d028b3fdb" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="translated">Parameter</target>
        </trans-unit>
        <trans-unit id="d91b6ee0847841ea22ec4a830f6187b64d76ee72" translate="yes" xml:space="preserve">
          <source>Parameter deciding the size of the star structural element. The side of the square array returned is &lt;code&gt;2*a + 1 + 2*floor(a / 2)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e6d46705a1d764e6c31d40a45e9679a43d066c" translate="yes" xml:space="preserve">
          <source>Parameter type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d46e27cf99ae732294b4abd39a1d4338f706d1" translate="yes" xml:space="preserve">
          <source>Parameter type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964e069bc203a4956361cd251757e21e96bad60f" translate="yes" xml:space="preserve">
          <source>Parameters &amp;lsquo;append&amp;rsquo;, &amp;lsquo;byteorder&amp;rsquo;, &amp;lsquo;bigtiff&amp;rsquo;, &amp;lsquo;software&amp;rsquo;, and &amp;lsquo;imagej&amp;rsquo;, are passed to the TiffWriter class. Parameters &amp;lsquo;photometric&amp;rsquo;, &amp;lsquo;planarconfig&amp;rsquo;, &amp;lsquo;resolution&amp;rsquo;, &amp;lsquo;compress&amp;rsquo;, &amp;lsquo;colormap&amp;rsquo;, &amp;lsquo;tile&amp;rsquo;, &amp;lsquo;description&amp;rsquo;, &amp;lsquo;datetime&amp;rsquo;, &amp;lsquo;metadata&amp;rsquo;, &amp;lsquo;contiguous&amp;rsquo; and &amp;lsquo;extratags&amp;rsquo; are passed to the TiffWriter.save function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eead40ca196734855eb73d29956db20cfce9781f" translate="yes" xml:space="preserve">
          <source>Parameters &amp;lsquo;multifile&amp;rsquo;, &amp;lsquo;multifile_close&amp;rsquo;, &amp;lsquo;pages&amp;rsquo;, &amp;lsquo;fastij&amp;rsquo;, and &amp;lsquo;is_ome&amp;rsquo; are passed to the TiffFile class. The &amp;lsquo;pattern&amp;rsquo; parameter is passed to the TiffSequence class. Other parameters are passed to the asarray functions. The first image series is returned if no arguments are provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="4223e2acf4f8183d847a870405189c979f44cdb1" translate="yes" xml:space="preserve">
          <source>Partitioning an image into multiple regions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09022d21d668b30e49cda7f5974921450688f597" translate="yes" xml:space="preserve">
          <source>Passed to the given plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b2565ef880191299b238adae41f72d6a67e4d6" translate="yes" xml:space="preserve">
          <source>Passed to the plugin function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d285d3b0c8a885a52574bf8d58f59236801caa8" translate="yes" xml:space="preserve">
          <source>Path (with file extension) where the picture is saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd77a599dc494c5ac5705dc85ef314c1804584f" translate="yes" xml:space="preserve">
          <source>Pattern Recognition Engineering, Morton Nadler &amp;amp; Eric P. Smith</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6c2357fae9339b73e54347d6e11e1117b1f6b6" translate="yes" xml:space="preserve">
          <source>Pattern glob or filenames to load. The path can be absolute or relative. Multiple patterns should be separated by os.pathsep, e.g. &amp;lsquo;/tmp/work/&lt;em&gt;.png:/tmp/other/&lt;/em&gt;.jpg&amp;rsquo;. Also see implementation notes below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2751c3752edfcec099c19aa049da13d4e41bea4" translate="yes" xml:space="preserve">
          <source>Paul L. Rosin, &amp;ldquo;Measuring Corner Properties&amp;rdquo; &lt;a href=&quot;http://users.cs.cf.ac.uk/Paul.Rosin/corner2.pdf&quot;&gt;http://users.cs.cf.ac.uk/Paul.Rosin/corner2.pdf&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cda1f94464d95ce117024ffd910892602011629" translate="yes" xml:space="preserve">
          <source>Peak values in Hough space, angles and distances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44b8c0efb4f2ab899ecf2d48f61318759c6c94e" translate="yes" xml:space="preserve">
          <source>Peak values in Hough space, x and y center coordinates and radii.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9754a961f06fbafb6b212723cbff46038ef80ec1" translate="yes" xml:space="preserve">
          <source>Peaks are the local maxima in a region of &lt;code&gt;2 * min_distance + 1&lt;/code&gt; (i.e. peaks are separated by at least &lt;code&gt;min_distance&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e58267fb95749cc47ae1d5b9b3f7bb2d7a83c4" translate="yes" xml:space="preserve">
          <source>Penalization coefficient for the random walker motion (the greater &lt;code&gt;beta&lt;/code&gt;, the more difficult the diffusion).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61f40db847d809f1e6617909a2998f7eed74e2a" translate="yes" xml:space="preserve">
          <source>People very often represent images in signed dtypes, even though they only manipulate the positive values of the image (e.g., using only 0-127 in an int8 image). For this reason, conversion functions &lt;em&gt;only spread the positive values&lt;/em&gt; of a signed dtype over the entire range of an unsigned dtype. In other words, negative values are clipped to 0 when converting from signed to unsigned dtypes. (Negative values are preserved when converting between signed dtypes.) To prevent this clipping behavior, you should rescale your image beforehand:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d88c047a4781cb48128552fa1b65d3c57eb6ac" translate="yes" xml:space="preserve">
          <source>Perform Normalized Graph cut on the Region Adjacency Graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a836407224f2e55be6db4fa93eb74737a9b71b" translate="yes" xml:space="preserve">
          <source>Perform a circular Hough transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b301fbb7073ac56c9e7086e0634e3ca3b7f149ea" translate="yes" xml:space="preserve">
          <source>Perform a hysteresis thresholding: first label all points above the high threshold as edges. Then recursively label any point above the low threshold that is 8-connected to a labeled point as an edge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691aae2cd7c35fe0e8c7f8163bceef07c0a3bb42" translate="yes" xml:space="preserve">
          <source>Perform a morphological reconstruction of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d9508f7d7defeb2229561d9d64121db079e831" translate="yes" xml:space="preserve">
          <source>Perform a straight line Hough transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f28db81b3b200dc0998bc207a629a810e26b787" translate="yes" xml:space="preserve">
          <source>Perform a swirl transformation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79285e9702be56332f3bf7eed92a6fcacfcf771" translate="yes" xml:space="preserve">
          <source>Perform an elliptical Hough transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f87210a71108ae47aba19da45fde4b7c9eaa866" translate="yes" xml:space="preserve">
          <source>Perform hierarchical merging of a RAG.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ac3ceba4f7ac60dcd8bd0f316c7229613e38be" translate="yes" xml:space="preserve">
          <source>Perform morphological thinning of a binary image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f029ce087089ddf25673f5b16bf2ae01e456df" translate="yes" xml:space="preserve">
          <source>Perform non-local means denoising on 2-D or 3-D grayscale images, and 2-D RGB images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be0c50f394c9cc9509962846bec70dbbb2c8b14" translate="yes" xml:space="preserve">
          <source>Perform reconstruction by dilation or erosion. In dilation (or erosion), the seed image is dilated (or eroded) until limited by the mask image. For dilation, each seed value must be less than or equal to the corresponding mask value; for erosion, the reverse is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a85375ef71ddf9b473a172ae45b6d92fe72e4a" translate="yes" xml:space="preserve">
          <source>Perform total-variation denoising on n-dimensional images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ac386348a1ccf8b842bd551cc670d9c8678889" translate="yes" xml:space="preserve">
          <source>Perform total-variation denoising using split-Bregman optimization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c43b3594c45e57458f5d410c5b3c60bc53b254" translate="yes" xml:space="preserve">
          <source>Perform wavelet denoising on an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44b24a79d05b50d012be9675365fdc9ca912648" translate="yes" xml:space="preserve">
          <source>Performs Gamma Correction on the input image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04758d4afc985d96174086dbace65f87d1145d83" translate="yes" xml:space="preserve">
          <source>Performs Logarithmic correction on the input image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d5a120d9c6a5a781973d9dea1538d3cafd90a6" translate="yes" xml:space="preserve">
          <source>Performs Sigmoid Correction on the input image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47af0f827b2c29d91e0f5bb6f8267d3650d9aebf" translate="yes" xml:space="preserve">
          <source>Performs interpolation to up-scale or down-scale images. Note that anti- aliasing should be enabled when down-sizing images to avoid aliasing artifacts. For down-sampling N-dimensional images with an integer factor also see &lt;code&gt;skimage.transform.downscale_local_mean&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8215ee1a3192a48730521a59daa1a22d37a34889" translate="yes" xml:space="preserve">
          <source>Performs interpolation to up-size or down-size images. Note that anti- aliasing should be enabled when down-sizing images to avoid aliasing artifacts. For down-sampling N-dimensional images with an integer factor also see &lt;code&gt;skimage.transform.downscale_local_mean&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c0017b9c58ebefcc09aa69e30489f277f9dbd2" translate="yes" xml:space="preserve">
          <source>Perimeter of object which approximates the contour as a line through the centers of border pixels using a 4-connectivity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fac151c29817a3c9740e142d4279f670af74026" translate="yes" xml:space="preserve">
          <source>Phase offset of harmonic function in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e71e33cb9bb8fdedfa07c47d4f206a9b7e9656" translate="yes" xml:space="preserve">
          <source>Photograph of Eileen Collins, an American astronaut. She was selected as an astronaut in 1992 and first piloted the space shuttle STS-63 in 1995. She retired in 2006 after spending a total of 38 days, 8 hours and 10 minutes in outer space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61852524b8f8fb65ef0743aec389512536cc7b64" translate="yes" xml:space="preserve">
          <source>Picture</source>
          <target state="translated">Picture</target>
        </trans-unit>
        <trans-unit id="7e26d3e19fdeed77894bd4d98cf5a03fcb3bd2a7" translate="yes" xml:space="preserve">
          <source>Pictures can be indexed like arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69f410ca4c30f74b53a35026ab38c396e5e3da3" translate="yes" xml:space="preserve">
          <source>Pictures know if they&amp;rsquo;ve been modified from the original file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5107f269372705da18f4dc352c372e31053fa3" translate="yes" xml:space="preserve">
          <source>Pictures know their format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b652c50779945689c7bb98c633c58809b07ebb74" translate="yes" xml:space="preserve">
          <source>PiecewiseAffineTransform</source>
          <target state="translated">PiecewiseAffineTransform</target>
        </trans-unit>
        <trans-unit id="aaf84bc85c0f4346dc17504b1d639b656ebee8d2" translate="yes" xml:space="preserve">
          <source>Pixel coordinates of circle. May be used to directly index into an array, e.g. &lt;code&gt;img[rr, cc] = 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a6ad4a45d5854f0135704150183ec7165c31800" translate="yes" xml:space="preserve">
          <source>Pixel coordinates of ellipse. May be used to directly index into an array, e.g. &lt;code&gt;img[rr, cc] = 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c77b6790daa718b7490bc694c6380cff2383cc" translate="yes" xml:space="preserve">
          <source>Pixel coordinates of polygon. May be used to directly index into an array, e.g. &lt;code&gt;img[rr, cc] = 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a15f56e3dcfb466294be9d88f4fcec80407c98" translate="yes" xml:space="preserve">
          <source>Pixels with a squared distance less than &lt;code&gt;connectivity&lt;/code&gt; from each other are considered adjacent. It can range from 1 to &lt;code&gt;labels.ndim&lt;/code&gt;. Its behavior is the same as &lt;code&gt;connectivity&lt;/code&gt; parameter in &lt;code&gt;scipy.ndimage.filters.generate_binary_structure&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aee3b648625688186b79b5a797f563369ad492e" translate="yes" xml:space="preserve">
          <source>Pixels with a squared distance less than &lt;code&gt;connectivity&lt;/code&gt; from each other are considered adjacent. It can range from 1 to &lt;code&gt;labels.ndim&lt;/code&gt;. Its behavior is the same as &lt;code&gt;connectivity&lt;/code&gt; parameter in &lt;code&gt;scipy.ndimage.generate_binary_structure&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f178dbb4a1f052669ea325ac7343d27542696d6f" translate="yes" xml:space="preserve">
          <source>Plot matched features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc042aff96adc3f9223db44f91970a96813337ba" translate="yes" xml:space="preserve">
          <source>Plot n-dimensional images using matplotlib.pyplot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45145cedd96514d72fa6a5f684ff1f6391d74ad" translate="yes" xml:space="preserve">
          <source>PlotPlugin</source>
          <target state="translated">PlotPlugin</target>
        </trans-unit>
        <trans-unit id="8dc208f8ebe86aa9ee6a37d49d48058be5364bff" translate="yes" xml:space="preserve">
          <source>Plugin</source>
          <target state="translated">Plugin</target>
        </trans-unit>
        <trans-unit id="caadaf83aad058359943f22b0545708824874e93" translate="yes" xml:space="preserve">
          <source>Plugin for ImageViewer that contains a plot canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dda17188f06ccbd546fed9b44c619758c27fd6f" translate="yes" xml:space="preserve">
          <source>Plugin for ImageViewer that displays an overlay on top of main image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5666aae3eca4dab2ff2f8a3771c5046badbf097" translate="yes" xml:space="preserve">
          <source>Plugin to compute interpolated intensity under a scan line on an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8aa3ac12ff7474cc01f7e6043ca937fd6020db" translate="yes" xml:space="preserve">
          <source>Plugin to load. Defaults to None, in which case the first matching plugin is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a477157fb8b21304b817433c0f68dcbfedd3ae" translate="yes" xml:space="preserve">
          <source>Plugins typically operate on (but don&amp;rsquo;t change) the &lt;em&gt;original&lt;/em&gt; image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc5cf7f959ea623a77c63925c3e0bb1f1e0098e" translate="yes" xml:space="preserve">
          <source>Point Spread Function. This is assumed to be the impulse response (input image space) if the data-type is real, or the transfer function (Fourier space) if the data-type is complex. There is no constraints on the shape of the impulse response. The transfer function must be of shape &lt;code&gt;(M, N)&lt;/code&gt; if &lt;code&gt;is_real is True&lt;/code&gt;, &lt;code&gt;(M, N // 2 + 1)&lt;/code&gt; otherwise (see &lt;code&gt;np.fft.rfftn&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd89e19de07f04dd6b9fad5be54926f73cd8a08" translate="yes" xml:space="preserve">
          <source>Points outside the boundaries of the input are filled according to the given mode, with &amp;lsquo;constant&amp;rsquo; used as the default. Modes match the behaviour of &lt;code&gt;numpy.pad&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb788c45aa9bf0c52ab271a5dc08e6659a4cf5db" translate="yes" xml:space="preserve">
          <source>Points outside the boundaries of the input are filled according to the given mode. Modes match the behaviour of &lt;code&gt;numpy.pad&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3aa0a2ae8da376b7dde9ed41de17e9c08f5998" translate="yes" xml:space="preserve">
          <source>Points outside the boundaries of the input are filled according to the given mode. Modes match the behaviour of &lt;code&gt;numpy.pad&lt;/code&gt;. The default mode is &amp;lsquo;constant&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224d46bff57593f5a1e4d5bfa9b8ee19c88402c8" translate="yes" xml:space="preserve">
          <source>Polynomial coefficients where &lt;code&gt;N * 2 = (order + 1) * (order + 2)&lt;/code&gt;. So, a_ji is defined in &lt;code&gt;params[0, :]&lt;/code&gt; and b_ji in &lt;code&gt;params[1, :]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc39f3ce49f100d07407540d2aa1f47502a6b32" translate="yes" xml:space="preserve">
          <source>Polynomial order (number of coefficients is order + 1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d60e0d943936448da53bc31993f2157ed222a8a0" translate="yes" xml:space="preserve">
          <source>PolynomialTransform</source>
          <target state="translated">PolynomialTransform</target>
        </trans-unit>
        <trans-unit id="b033a4598786620d58bd3f2df3cf4fcc1facdfa9" translate="yes" xml:space="preserve">
          <source>Pop an image from the shared image stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb401bba3d5653cde93c344ec8e349d4a8b8e54" translate="yes" xml:space="preserve">
          <source>Power law compression, also known as Gamma correction, is used to reduce the effects of shadowing and illumination variations. The compression makes the dark regions lighter. When the kwarg &lt;code&gt;transform_sqrt&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;, the function computes the square root of each color channel and then applies the hog algorithm to the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee72e8f5eafb99f8efd356543cf471ef256d4b4" translate="yes" xml:space="preserve">
          <source>Predict intersection of the estimated line model with a hyperplane orthogonal to a given axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796f49bccaa827c34fe4d248a239f4ff41d8cd21" translate="yes" xml:space="preserve">
          <source>Predict x- and y-coordinates using the estimated model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a4936ad00b930ccbbf974eacce16c6e778b116" translate="yes" xml:space="preserve">
          <source>Predict x-coordinates for 2D lines using the estimated model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0376391d2e9f867cc9336228817afc0f72ee4880" translate="yes" xml:space="preserve">
          <source>Predict y-coordinates for 2D lines using the estimated model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174912491bf96a91a09033b155be2cf08e3b21db" translate="yes" xml:space="preserve">
          <source>Predicted coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ee507fe54de88b467eae492163401062b58b52" translate="yes" xml:space="preserve">
          <source>Predicted x- and y-coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209226ccc7d2496304e882f8f9bdba114fff140e" translate="yes" xml:space="preserve">
          <source>Predicted x-coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e08e62186f29d34ecb031564cc7eff7daf92540" translate="yes" xml:space="preserve">
          <source>Predicted y-coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f257afa173fe87b0fc69afaf33a8c273737c5345" translate="yes" xml:space="preserve">
          <source>Preprocessed image (or volume) suitable for &lt;code&gt;morphological_geodesic_active_contour&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3ec8847e0b0e94662a2217b4bd04de103a00fa" translate="yes" xml:space="preserve">
          <source>Preprocessed image or volume to be segmented. This is very rarely the original image. Instead, this is usually a preprocessed version of the original image that enhances and highlights the borders (or other structures) of the object to segment. &lt;code&gt;morphological_geodesic_active_contour&lt;/code&gt; will try to stop the contour evolution in areas where &lt;code&gt;gimage&lt;/code&gt; is small. See &lt;code&gt;morphsnakes.inverse_gaussian_gradient&lt;/code&gt; as an example function to perform this preprocessing. Note that the quality of &lt;code&gt;morphological_geodesic_active_contour&lt;/code&gt; might greatly depend on this preprocessing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875fe507ce38d062c18e5ab9007bb958d3ce3b6f" translate="yes" xml:space="preserve">
          <source>Preserve first and last coordinate of non-circular polygon. Default is False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50597cc43b4a814d91a7306f57aa2a4f08902714" translate="yes" xml:space="preserve">
          <source>Press and hold the left mouse button to draw around each object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed79f52a1b8dd8352bdd76d1c3843698eb836b9" translate="yes" xml:space="preserve">
          <source>Previous/next image in collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e733109ba46e5be5eebf58af32f73443a7f750f" translate="yes" xml:space="preserve">
          <source>Prewitt, JMS &amp;amp; Mendelsohn, ML (1966), &amp;ldquo;The analysis of cell images&amp;rdquo;, Annals of the New York Academy of Sciences 128: 1035-1053 DOI:10.1111/j.1749-6632.1965.tb11715.x</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f78579ccf0a787538628dfc26d670a786685cab" translate="yes" xml:space="preserve">
          <source>Print function name for each method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685026c28edc2eb8d09c677fd8c6990486fdec37" translate="yes" xml:space="preserve">
          <source>Probability distribution for sampling location of decision pixel-pairs around keypoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680a04e28e78cc2360ec9fa30ae51e9c4ce38733" translate="yes" xml:space="preserve">
          <source>Produce a coordinate map that shifts an image up and to the right:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde43e8d7e711d0632ed8706d5587f35d4f21b84" translate="yes" xml:space="preserve">
          <source>Produces an oversegmentation of a multichannel (i.e. RGB) image using a fast, minimum spanning tree based clustering on the image grid. The parameter &lt;code&gt;scale&lt;/code&gt; sets an observation level. Higher scale means less and larger segments. &lt;code&gt;sigma&lt;/code&gt; is the diameter of a Gaussian kernel, used for smoothing the image prior to segmentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fffc62e3639fb39d8ebf7a3d74fa39c527ee8ca" translate="yes" xml:space="preserve">
          <source>Produces an oversegmentation of the image using the quickshift mode-seeking algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7396ae1a993c9db6f8afcbbdf8908c7a26a91fe" translate="yes" xml:space="preserve">
          <source>Profile of intensity values. Length 1 (grayscale) or 3 (rgb).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3d89bc78d282bea9eecb8d2e0884b3f4b0800f" translate="yes" xml:space="preserve">
          <source>Projection angles (in degrees).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc17c748560b9cc0bc0e1eaf05ade62263f8265" translate="yes" xml:space="preserve">
          <source>Projection angles in degrees. Duplicate angles are not allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbed0672d49609bbfb2de90e3dbedf7e19255b3" translate="yes" xml:space="preserve">
          <source>Projective transformation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300df5b6212a7a3969227bc85a4763bda8f6da82" translate="yes" xml:space="preserve">
          <source>ProjectiveTransform</source>
          <target state="translated">ProjectiveTransform</target>
        </trans-unit>
        <trans-unit id="92804cbf17c433aa071c2c3cf400650ffe6dca91" translate="yes" xml:space="preserve">
          <source>Properties for &lt;a href=&quot;https://matplotlib.org/api/_as_gen/matplotlib.lines.Line2D.html#matplotlib.lines.Line2D&quot;&gt;&lt;code&gt;matplotlib.lines.Line2D&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e693b878631fb7da62e11f57a4a2c35b785e05" translate="yes" xml:space="preserve">
          <source>Properties for &lt;a href=&quot;https://matplotlib.org/api/_as_gen/matplotlib.patches.Rectangle.html#matplotlib.patches.Rectangle&quot;&gt;&lt;code&gt;matplotlib.patches.Rectangle&lt;/code&gt;&lt;/a&gt;. This class redefines defaults in &lt;a href=&quot;https://matplotlib.org/api/widgets_api.html#matplotlib.widgets.RectangleSelector&quot;&gt;&lt;code&gt;matplotlib.widgets.RectangleSelector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe3493bb5f7b31b7f0388fef88c5fcc029392c7" translate="yes" xml:space="preserve">
          <source>Proportion of image pixels to replace with noise on range [0, 1]. Used in &amp;lsquo;salt&amp;rsquo;, &amp;lsquo;pepper&amp;rsquo;, and &amp;lsquo;salt &amp;amp; pepper&amp;rsquo;. Default : 0.05</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32de54a882f2cc2ec717baaae4d0ad8a0650d774" translate="yes" xml:space="preserve">
          <source>Proportion of salt vs. pepper noise for &amp;lsquo;s&amp;amp;p&amp;rsquo; on range [0, 1]. Higher values represent more salt. Default : 0.5 (equal amounts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b238ebd5bf02eb82770ba0ebbe9bf7cb590a32" translate="yes" xml:space="preserve">
          <source>Proportion of the maximum connected segment size. A value of 3 works in most of the cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bdc4d14593710358e4d4b17622e5ccfd7ac57b" translate="yes" xml:space="preserve">
          <source>Proportion of the minimum segment size to be removed with respect to the supposed segment size &lt;code&gt;`depth*width*height/n_segments`&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cefa10abf25ba5d31ea2c26de1325f80fe46bb01" translate="yes" xml:space="preserve">
          <source>Push an image onto the shared image stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb1348c0e2c582cd5b7f9ab64d73581507ad610" translate="yes" xml:space="preserve">
          <source>PyAV</source>
          <target state="translated">PyAV</target>
        </trans-unit>
        <trans-unit id="0c86a2c31b6396b0be75d3c92e441e88fa9f0e4d" translate="yes" xml:space="preserve">
          <source>PyAV has also been &lt;a href=&quot;http://mikeboers.github.io/PyAV/#windows&quot;&gt;shown to build successfully on Windows&lt;/a&gt;, but convenient binary packages are not publicly distributed as of this writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3173a0a15a257248b0cf9a83430209ea17e0bad8" translate="yes" xml:space="preserve">
          <source>PyAV is pip-installable (&lt;code&gt;pip install av&lt;/code&gt;) on Linux and OSX, but getting the linking to FFmpeg&amp;rsquo;s libraries set up correctly is subtle. The binary installers are recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438443dc9e7adbfc1519181ff8d128ec90fa43da" translate="yes" xml:space="preserve">
          <source>PyAV&amp;rsquo;s API reflects the way frames are stored in a video file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722ab4c62112f8cae685f8aa5d1386ebbaac795b" translate="yes" xml:space="preserve">
          <source>Qt widget that displays the plot objects. If None, you must manually call &lt;code&gt;canvas.setParent&lt;/code&gt; and pass the parent widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="455083cac2ae96eabe3895762b6080aa09e6afa4" translate="yes" xml:space="preserve">
          <source>Quick Start</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ec0752e540161cbfd9bceece85ac90373f1d99" translate="yes" xml:space="preserve">
          <source>Quick shift and kernel methods for mode seeking, Vedaldi, A. and Soatto, S. European Conference on Computer Vision, 2008</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1879da55493b3c04f81d2d392644542c3cf5091f" translate="yes" xml:space="preserve">
          <source>RAG</source>
          <target state="translated">RAG</target>
        </trans-unit>
        <trans-unit id="deaf3e4bd628b58c25a11e1e737fd1d0011562ed" translate="yes" xml:space="preserve">
          <source>RAG Thresholding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f245f8295dd1f71eb18cbb3ae149dc7ddc7bd8" translate="yes" xml:space="preserve">
          <source>RANSAC is an iterative algorithm for the robust estimation of parameters from a subset of inliers from the complete data set. Each iteration performs the following tasks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a08b033a80b6c9fa0f956b1fe5a4cbf108ed6a5" translate="yes" xml:space="preserve">
          <source>RANSAC iteration stops if at least one outlier-free set of the training data is sampled with &lt;code&gt;probability &amp;gt;= stop_probability&lt;/code&gt;, depending on the current best model&amp;rsquo;s inlier ratio and the number of trials. This requires to generate at least N samples (trials):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6e48dac27ae528d339f6450a10fe74cd5a9a40" translate="yes" xml:space="preserve">
          <source>RGB CIE to RGB color space conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efed343ca8fe483a1d6ecb078e3f8cb5441487f0" translate="yes" xml:space="preserve">
          <source>RGB color of boundaries in the output image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40bd03b9009fda67b556d6167f5a5a8a5786cbc" translate="yes" xml:space="preserve">
          <source>RGB color surrounding boundaries in the output image. If None, no outline is drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c87edb28ebef44aefb63a14d389bc06bca045f" translate="yes" xml:space="preserve">
          <source>RGB color values for the corresponding data value. Must be of shape (3, 2**(data.itemsize*8)) and dtype uint16.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c225eec9e6ef656a8af63f1d36523e5819a45820" translate="yes" xml:space="preserve">
          <source>RGB image of shape &lt;code&gt;(M[, N][, P], 3)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2572e2f47cc80246ab57589ec6cf6cd18eff515a" translate="yes" xml:space="preserve">
          <source>RGB or RGBA tuple with the fill color for the picture [0-255] or a valid key in &lt;code&gt;color_dict&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149d2dc721c82afdab9e9363f873c11d6f53664c" translate="yes" xml:space="preserve">
          <source>RGB to HSV color space conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d526485ae897715e2940fa68ad15f3bada3cd0" translate="yes" xml:space="preserve">
          <source>RGB to Haematoxylin-Eosin-DAB (HED) color space conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="239567fecc4bea8719f1630ac5fdcb9e6714bfdc" translate="yes" xml:space="preserve">
          <source>RGB to RGB CIE color space conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1bf519ca8a62c0498b67719ca9f65d35735d338" translate="yes" xml:space="preserve">
          <source>RGB to XYZ color space conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e100f6c633b9da2ab0abfbd6a5d98d518fe322" translate="yes" xml:space="preserve">
          <source>RGB to YCbCr color space conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20b8655a0182de33d2a9dfad3b55a93c8f90d15" translate="yes" xml:space="preserve">
          <source>RGB to YDbDr color space conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45675b590315b3376ae902fd1a970e069670fb6" translate="yes" xml:space="preserve">
          <source>RGB to YIQ color space conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7381335cff0927f2b78bfdb2967c89e37e5b1bb6" translate="yes" xml:space="preserve">
          <source>RGB to YPbPr color space conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e59dea57f778937c03353cc5b27793654cc407" translate="yes" xml:space="preserve">
          <source>RGB to YUV color space conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2dfdb6980d0a9cbe786005aa3a8fa7a8818221f" translate="yes" xml:space="preserve">
          <source>RGB to lab color space conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db5ceed7b2c75e8558e8d1ea75d4a9e72518636" translate="yes" xml:space="preserve">
          <source>RGB to stain color space conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80fe4d83a0516933ea0bd78e8e909964bb0c4ea3" translate="yes" xml:space="preserve">
          <source>Radhakrishna Achanta, Appu Shaji, Kevin Smith, Aurelien Lucchi, Pascal Fua, and Sabine S&amp;uuml;sstrunk, SLIC Superpixels Compared to State-of-the-art Superpixel Methods, TPAMI, May 2012.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4546893f21e0c239b1f2323842e5b9173f87c5b4" translate="yes" xml:space="preserve">
          <source>Radii at which to compute the Hough transform. Floats are converted to integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1b1ddf6a6a3a4e0aabbbb349e1afe7a8b07253" translate="yes" xml:space="preserve">
          <source>Radii corresponding to Hough spaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6764e8aa7639718815c21cee580f14ff9534169" translate="yes" xml:space="preserve">
          <source>Radiometric similarity is defined by the greylevel interval [g-s0, g+s1] where g is the current pixel greylevel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b4cdfe07df3e36bc712053983e0302cc827575" translate="yes" xml:space="preserve">
          <source>Radiometric similarity is measured by the Gaussian function of the Euclidean distance between two color values and a certain standard deviation (&lt;code&gt;sigma_color&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0680adae2c4ccb275d9a49338934461049ae1b" translate="yes" xml:space="preserve">
          <source>Radius (in pixels) for each ring. Specifying ring_radii overrides the following two parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d84f5c375405b49e03250cc818bec46b08ae1b" translate="yes" xml:space="preserve">
          <source>Radius (in pixels) of the outermost ring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d389d36134ba8d90ad22e304e638b7ae0831e01" translate="yes" xml:space="preserve">
          <source>Radius of circle (spatial resolution of the operator).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e36528206f2d34701491952fe49bba6986e867" translate="yes" xml:space="preserve">
          <source>Radius of circle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d1f74e7923c9eb3eabd7facbb05a63d87c7f4c" translate="yes" xml:space="preserve">
          <source>Radius of the circle. If not given, it is set to the 75% of the smallest image dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c92959447b01a2683aa87d1421fea668591b42" translate="yes" xml:space="preserve">
          <source>Radon transform (sinogram). The tomography rotation axis will lie at the pixel index &lt;code&gt;radon_image.shape[0] // 2&lt;/code&gt; along the 0th dimension of &lt;code&gt;radon_image&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9837058f7ca36c954c5b8ba6bbf0a03cc035bd8" translate="yes" xml:space="preserve">
          <source>Raise IndexError or ValueError if image shapes do not match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0eb5268f437200e3ca42ec2d178bdfb80e8e252" translate="yes" xml:space="preserve">
          <source>Raises:</source>
          <target state="translated">Raises:</target>
        </trans-unit>
        <trans-unit id="7a02fff6be815ab6d9bea01ed68e995d0c7a4eab" translate="yes" xml:space="preserve">
          <source>Random seed used for breaking ties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d98d26040c23858d07b1e74cc2a0e7c4a5b037" translate="yes" xml:space="preserve">
          <source>Random walker algorithm for segmentation from markers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc1a45d00d5a86176b451e34e64403f04fe934c" translate="yes" xml:space="preserve">
          <source>Random walker algorithm is implemented for gray-level or multichannel images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a16c5bbe4bf996740f257aa1e81bd57e4c52c8dd" translate="yes" xml:space="preserve">
          <source>Range</source>
          <target state="translated">Range</target>
        </trans-unit>
        <trans-unit id="d2274ca92f53280202c8443f6e7a718a226bbdc2" translate="yes" xml:space="preserve">
          <source>Range of slider values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea8557fcd2070235a812b5c471b25c93a0b4f7f" translate="yes" xml:space="preserve">
          <source>Ranges of the shape index and corresponding shapes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9aa9b35fd0f3011e864899d6d068a14c7c1ca5" translate="yes" xml:space="preserve">
          <source>Rasterized shape as image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3f40be7eff97c10d13b4f896fa6a7f454e106c" translate="yes" xml:space="preserve">
          <source>Ratio between power spectrum of noise and undegraded image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b8e4db32d7dfa73aa27e578d1ca00bb5dc9f51" translate="yes" xml:space="preserve">
          <source>Ratio of pixels in the region to pixels in the total bounding box. Computed as &lt;code&gt;area / (rows * cols)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5371345eb45e5be7083ad759b3cc892f57da7e" translate="yes" xml:space="preserve">
          <source>Ratio of pixels in the region to pixels of the convex hull image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949d981832da3ef07b33d5d4a3498d952f0d509e" translate="yes" xml:space="preserve">
          <source>Raw image moments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf55ac81258b30394e4d041fc8ddc2c6c56293c" translate="yes" xml:space="preserve">
          <source>Raw image moments. (D dimensions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b4af8fdaaf58739347aeb9522269e1551d227e" translate="yes" xml:space="preserve">
          <source>Read SIFT or SURF features from externally generated file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c5f4bc5b400b8af19b9d22d429bb5bfec3bb45" translate="yes" xml:space="preserve">
          <source>Read image and metadata from TIFF, STK, LSM, and FluoView files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc77f1b1d9c09a17747e6b8cda4948175b3d7d0f" translate="yes" xml:space="preserve">
          <source>Read image data from all files and return as single numpy array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86bf98bb92de177c531b4d66627fade0b6457fec" translate="yes" xml:space="preserve">
          <source>Reading, saving, and displaying images and video.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dbc170ca82c8fa95eed0b46bebb3e9a3824a7f8" translate="yes" xml:space="preserve">
          <source>Recently, &lt;a href=&quot;https://binstar.org/danielballan/pyav&quot;&gt;conda packages&lt;/a&gt; (with &lt;a href=&quot;https://github.com/conda/conda-recipes&quot;&gt;public recipes&lt;/a&gt; for PyAV and its dependencies became available for OSX and Linux.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c82b6b2fdb25003c219146ab573808815833938" translate="yes" xml:space="preserve">
          <source>Reconstruct an image from the radon transform, using a single iteration of the Simultaneous Algebraic Reconstruction Technique (SART) algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b638ca5217ccbb08973a74549d01aef0e0413226" translate="yes" xml:space="preserve">
          <source>Reconstruct an image from the radon transform, using the filtered back projection algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3124763ed45e6da28205cd5d6826fc344782f0b" translate="yes" xml:space="preserve">
          <source>Reconstructed image. The rotation axis will be located in the pixel with indices &lt;code&gt;(reconstructed.shape[0] // 2, reconstructed.shape[1] // 2)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca72700b201a1e33215d0ebec76018703bcad4e" translate="yes" xml:space="preserve">
          <source>Reconstruction angles (in degrees). Default: m angles evenly spaced between 0 and 180 (if the shape of &lt;code&gt;radon_image&lt;/code&gt; is (N, M)).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d633f5cec091b582fe35dd6250b5a6fdf7b2aac3" translate="yes" xml:space="preserve">
          <source>Recover the original from a wrapped phase image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c025a3514e17c232e45009c3c32bf1c31a82940" translate="yes" xml:space="preserve">
          <source>RectangleTool</source>
          <target state="translated">RectangleTool</target>
        </trans-unit>
        <trans-unit id="e06b77a920a51b12786dd7ed0ae335b7c92c3874" translate="yes" xml:space="preserve">
          <source>Rectified stereo image pair with ground-truth disparities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f50f99c189fb4f7ab37cff37debcea57c0c4b2" translate="yes" xml:space="preserve">
          <source>Recursively applies the &lt;code&gt;pyramid_reduce&lt;/code&gt; function to the image, and yields the downscaled images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="defa8d5cd932f9952f25dd698937242ef4f974ac" translate="yes" xml:space="preserve">
          <source>Redraw plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37a5acc92244e65374628412e4e3086f73809e5" translate="yes" xml:space="preserve">
          <source>Refer to the TiffFile class and member functions for documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e87380227e38e899d663dc65a1b485b6e9f9e0" translate="yes" xml:space="preserve">
          <source>Refer to the TiffWriter class and member functions for documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76411f339cd6d0fb03ed2a923079dce17b692980" translate="yes" xml:space="preserve">
          <source>Reference image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="023317c5c51a5e6f5450c0ba1365316c625bd57c" translate="yes" xml:space="preserve">
          <source>Regarding visualization of algorithm output, to contour a volume named &lt;code&gt;myvolume&lt;/code&gt; about the level 0.0, using the &lt;code&gt;mayavi&lt;/code&gt; package:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f345557d2056b2b941d09b42eae252e7c93e886" translate="yes" xml:space="preserve">
          <source>Regardless of the value of this parameter, the thinned image is returned immediately if an iteration produces no change. If this parameter is specified it thus sets an upper bound on the number of iterations performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1651c948de1bbfdae223373f90061a456401125" translate="yes" xml:space="preserve">
          <source>Region-based segmentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87ba2d70667bfeb17074ebd05496a598dfe6d88" translate="yes" xml:space="preserve">
          <source>Regions connected by an edge with weight smaller than &lt;code&gt;thresh&lt;/code&gt; are merged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd72354f3efda9c95a66a147663479be754940e" translate="yes" xml:space="preserve">
          <source>Regular expression pattern that matches axes names and sequence indices in file names. By default this matches Olympus OIF and Leica TIFF series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58bddc23def85e084fa547c9e0615c141f859079" translate="yes" xml:space="preserve">
          <source>Relabel arbitrary labels to {&lt;code&gt;offset&lt;/code&gt;, &amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62b772b49b73652544c1f1913675c3463df1995" translate="yes" xml:space="preserve">
          <source>Relabel arbitrary labels to {&lt;code&gt;offset&lt;/code&gt;, &amp;hellip; &lt;code&gt;offset&lt;/code&gt; + number_of_labels}.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcaf8dd41982dc41737ef7da7a60745327027d60" translate="yes" xml:space="preserve">
          <source>Relative difference of the value of the cost function that determines the stop criterion. The algorithm stops when:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6311ec5bfe4eed2f3b19f731b8d876d5670410db" translate="yes" xml:space="preserve">
          <source>Relaxation parameter for the update step. A higher value can improve the convergence rate, but one runs the risk of instabilities. Values close to or higher than 1 are not recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3472de5607967fdbe190736b21b5a5293c23269a" translate="yes" xml:space="preserve">
          <source>Released into public domain and drawn and uploaded by Andreas Preuss (marauder).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5547ac3a9a74ea9d97e18cb8017e94779c55d1" translate="yes" xml:space="preserve">
          <source>Released into the public domain by the photographer (Stefan van der Walt).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a741eb1bea56742791dfa6caf4d0ddebf7e18259" translate="yes" xml:space="preserve">
          <source>Remove artists that are connected to the image viewer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175197e190daeddd088c5bd2ce6b5e91756077fa" translate="yes" xml:space="preserve">
          <source>Remove connected components smaller than the specified size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0660a3348beb57d67b7fdeab7abb32dcf19965" translate="yes" xml:space="preserve">
          <source>Remove continguous holes smaller than the specified size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb0420d82e6a6e42f1860c03521a8cd49d94adf" translate="yes" xml:space="preserve">
          <source>Remove repeated rows from a 2D array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d8e73d7e302e9a6b62ccaa2caaa66f7e4078f6" translate="yes" xml:space="preserve">
          <source>RequiredAttr</source>
          <target state="translated">RequiredAttr</target>
        </trans-unit>
        <trans-unit id="7b8a68ed0dfd6d548facb2f59de1719bebf42565" translate="yes" xml:space="preserve">
          <source>Rescaling intensity values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3abb213611d7e9bca729c1b11d24a5bd4e74de13" translate="yes" xml:space="preserve">
          <source>Reset image to its original state, removing modifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b148aca49735feaf0447a0fbd6bba4e85057eae5" translate="yes" xml:space="preserve">
          <source>Residual for each data point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37fbc08d602863ec2254c911c5e183de3f36b21" translate="yes" xml:space="preserve">
          <source>Resize image to match a certain size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b1f3fc362dd94ea244199a51e8ed44b1318d898" translate="yes" xml:space="preserve">
          <source>Resized version of the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4012a1f8d1076b3ca9caffd84945a91d45ee2f" translate="yes" xml:space="preserve">
          <source>Response image with correlation coefficients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9208a02de6e3af59b65ec5cea6ed36bebceef3e1" translate="yes" xml:space="preserve">
          <source>Restoration algorithms, e.g., deconvolution algorithms, denoising, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179defe987125e33f5354d11e55958e8384e458a" translate="yes" xml:space="preserve">
          <source>Resulting Haar-like features. Each value is equal to the subtraction of sums of the positive and negative rectangles. The data type depends of the data type of &lt;code&gt;int_image&lt;/code&gt;: &lt;code&gt;int&lt;/code&gt; when the data type of &lt;code&gt;int_image&lt;/code&gt; is &lt;code&gt;uint&lt;/code&gt; or &lt;code&gt;int&lt;/code&gt; and &lt;code&gt;float&lt;/code&gt; when the data type of &lt;code&gt;int_image&lt;/code&gt; is &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9816eae6e09bdf4e53842998a934d4e18db28f1" translate="yes" xml:space="preserve">
          <source>Retrieving statistical information about gray values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c049624ff28700d3f77bf901546b2e6c93eb66" translate="yes" xml:space="preserve">
          <source>Retrieving the geometry of the image and the number of pixels:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3709f1b8fd91b371a212093515888bbefeb7ba0c" translate="yes" xml:space="preserve">
          <source>Return (xmin, xmax, ymin, ymax).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53066b904bedaeaff90ae60f24145e015f09d703" translate="yes" xml:space="preserve">
          <source>Return Picture object from the given image path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222c35df23b67d3607f0910be79588fc13548499" translate="yes" xml:space="preserve">
          <source>Return a Picture of the specified size and a uniform color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a82d8856eb32394327fce3c933017686ed197b" translate="yes" xml:space="preserve">
          <source>Return a fresh copy graph with the same data structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8402c2fd4f4627e609ce8536c2578e2613cb6a82" translate="yes" xml:space="preserve">
          <source>Return a label image based on freeform selections made with the mouse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ecd49cde0b9df1f4e3c0fcc3ecc3ee6ff8accf" translate="yes" xml:space="preserve">
          <source>Return a label image based on polygon selections made with the mouse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8053e1b5134ad45eeb8d46bba1d0de2c9aa5d5f" translate="yes" xml:space="preserve">
          <source>Return an RGB image where color-coded labels are painted over the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e960d7dc6910ee949b43ddb6b04198d1bf2433" translate="yes" xml:space="preserve">
          <source>Return an image of the same shape where each pixel is the index of the pixel value in the ascending order of the unique values of &lt;code&gt;image&lt;/code&gt;, aka the rank-order value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467b803d0e13689202d9bd2fed03dd48d64cbfa1" translate="yes" xml:space="preserve">
          <source>Return an image with ~`n_points` regularly-spaced nonzero pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f259d2234822b2bd7bd2a5449bce3746604778b" translate="yes" xml:space="preserve">
          <source>Return black top hat of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3b0ccf868b8e54d257074857c5f6b14482923d" translate="yes" xml:space="preserve">
          <source>Return bool array where boundaries between labeled regions are True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad58a2123be85e03a83b4553cf6371eb021f7bf1" translate="yes" xml:space="preserve">
          <source>Return complex 2D Gabor filter kernel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3cf17c59218c7a485aab7541d5eade3943886da" translate="yes" xml:space="preserve">
          <source>Return cumulative distribution function (cdf) for the given image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a766be4c8d68ae4b6e45a29b5ea729e16a7a73f" translate="yes" xml:space="preserve">
          <source>Return fast binary morphological closing of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e15423124028cb119b02931f24c3ed98d9de475" translate="yes" xml:space="preserve">
          <source>Return fast binary morphological dilation of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d7a4cff0f1c6d182ade8c767bef33e6045d21b" translate="yes" xml:space="preserve">
          <source>Return fast binary morphological erosion of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c87502740939b9ce4a5700a6ebef85fa94cec0" translate="yes" xml:space="preserve">
          <source>Return fast binary morphological opening of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26c24d850998b6acddf42a97c1169fc57b42eee" translate="yes" xml:space="preserve">
          <source>Return figure and axes with figure tightly surrounding image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ccde4c9d542a2004ceac54fe5bf643037d976ed" translate="yes" xml:space="preserve">
          <source>Return figure, subplot and plot axis. Requires pyplot already imported &lt;code&gt;from matplotlib import pyplot&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2e09c9d05e814ed1f3c5a2c7971c0d1dd8a9f3" translate="yes" xml:space="preserve">
          <source>Return file handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb36d914b0c7223c080bb406dce0b3f0864e378" translate="yes" xml:space="preserve">
          <source>Return filtered image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16d649e14adc6adea0156429fa9240866dc5779" translate="yes" xml:space="preserve">
          <source>Return greyscale local autolevel of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa23c47eadfbd230eda0e8bc7585a403680f6dc3" translate="yes" xml:space="preserve">
          <source>Return greyscale morphological closing of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e9693e1db75e02c5ce33c1299215bb20092b44" translate="yes" xml:space="preserve">
          <source>Return greyscale morphological dilation of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062458e6222d10271444769cbb62fc90afd95d18" translate="yes" xml:space="preserve">
          <source>Return greyscale morphological erosion of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea3697182618064b8f7e4becbeed0d07c8ed9761" translate="yes" xml:space="preserve">
          <source>Return greyscale morphological opening of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538c02a5cd60c8adb5a86ba6d322f3c57bb12850" translate="yes" xml:space="preserve">
          <source>Return histogram of image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14486d07fd9d34af14a03f51b392e0ef7279abd2" translate="yes" xml:space="preserve">
          <source>Return image after histogram equalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b499eeee6647077e40a9b23b793ccb0d6637ec" translate="yes" xml:space="preserve">
          <source>Return image after stretching or shrinking its intensity levels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675e49ed2e77c1d9172c39e721840b08f5bcc1b5" translate="yes" xml:space="preserve">
          <source>Return image data from TIFF file(s) as numpy array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3104b62bcb090bf418b78eb9dac6dfa6e98414eb" translate="yes" xml:space="preserve">
          <source>Return image data from multiple TIFF pages as numpy array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c9c5cde40b07d66864282d591a80d6e03c29ee" translate="yes" xml:space="preserve">
          <source>Return image subtracted from its local mean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4976c5c8b5b4d75bea5637484278d0e4b1ef255e" translate="yes" xml:space="preserve">
          <source>Return image with boundaries between labeled regions highlighted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58797837a205a6f5188d514e59e52fc8b7d302d4" translate="yes" xml:space="preserve">
          <source>Return input coordinates for given output coordinates. Coordinates are in the shape (P, 2), where P is the number of coordinates and each element is a &lt;code&gt;(row, col)&lt;/code&gt; pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7781c8f7c7f12ad4e0b533593411b78bcae683c0" translate="yes" xml:space="preserve">
          <source>Return intensity limits, i.e.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79fd26285c318086c8f8b54bc51f044ac6355ef6" translate="yes" xml:space="preserve">
          <source>Return intensity limits, i.e. (min, max) tuple, of the image&amp;rsquo;s dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402d49f9580a6d0bcf6e7bcc133c6b42169fe9e5" translate="yes" xml:space="preserve">
          <source>Return intensity profile of the selected line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3437c260f1ee8f189d6911b76c57bee75e8c87d5" translate="yes" xml:space="preserve">
          <source>Return lines from a progressive probabilistic line Hough transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f96c4077dd5686b06a53fe9c7ac4a290700e32" translate="yes" xml:space="preserve">
          <source>Return local geometric mean of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3938609867e4dc79f0a3776c334606638f550154" translate="yes" xml:space="preserve">
          <source>Return local gradient of an image (i.e.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a838951d1f375ec9c746fde1a00721667681c1" translate="yes" xml:space="preserve">
          <source>Return local gradient of an image (i.e. local maximum - local minimum).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac580ec07c25bfcaf966f4aa3b7a0d2d7d096cda" translate="yes" xml:space="preserve">
          <source>Return local maximum of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483b5c01061ac601486c64d18ce76068b3ef1558" translate="yes" xml:space="preserve">
          <source>Return local mean of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84fffe8d1ada77e34e0c524b1689693bacbe2fba" translate="yes" xml:space="preserve">
          <source>Return local median of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644208172addb38885be62294dab9486d39c7f4c" translate="yes" xml:space="preserve">
          <source>Return local minimum of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="904d1b610293054b0c2d83001fee4554b859de46" translate="yes" xml:space="preserve">
          <source>Return local mode of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b59d4264d7c83bbc922d84c9695b58164531b8" translate="yes" xml:space="preserve">
          <source>Return local percentile of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfa61e37d91c109e62b5c2588de370a9ce70cff3" translate="yes" xml:space="preserve">
          <source>Return name of file handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564d677975f43b937b2b60905299f37f5508c61c" translate="yes" xml:space="preserve">
          <source>Return new figure and axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38dd8c3a10b5db873eee060f6b5a233fd47d68fe" translate="yes" xml:space="preserve">
          <source>Return peaks in a circle Hough transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af786fc4617eff1bdc090856e0d534e5025fd339" translate="yes" xml:space="preserve">
          <source>Return peaks in a straight line Hough transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c953401d0b43b67240811c5b8d1ae23107f55c" translate="yes" xml:space="preserve">
          <source>Return plugin meta-data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0143f354d04fffd6cf42b1dd7896309bdb37651c" translate="yes" xml:space="preserve">
          <source>Return real and imaginary responses to Gabor filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="617669f2473594713a0d1fbd4f791682baf7eac8" translate="yes" xml:space="preserve">
          <source>Return string with detailed information about file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6121136b388b78d648f87662f06809996e1478f" translate="yes" xml:space="preserve">
          <source>Return the currently preferred plugin order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c551b72a50d88259a84af76eb1c178e07af2961e" translate="yes" xml:space="preserve">
          <source>Return the data as a feature vector by calling .ravel() on the result just before returning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6215e74b38214ec176701e05c38f2a5a7ead6f" translate="yes" xml:space="preserve">
          <source>Return the deconvolution with a Wiener-Hunt approach (i.e. with Fourier diagonalisation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc175cde0971f5f417e52a9c4ecc8cc1be378b06" translate="yes" xml:space="preserve">
          <source>Return the deconvolution with a Wiener-Hunt approach, where the hyperparameters are automatically estimated. The algorithm is a stochastic iterative process (Gibbs sampler) described in the reference below. See also &lt;code&gt;wiener&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f61b5e813e04156099d5f1542df0b2e2ee4df2d" translate="yes" xml:space="preserve">
          <source>Return the drawn line and the resulting scan.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e146dbe65452a64f209aa2ef29fc10da33d16f0d" translate="yes" xml:space="preserve">
          <source>Return the image mask and the histogram data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d418dfd72073c262bdab605a3737d65589d36eaf" translate="yes" xml:space="preserve">
          <source>Return the intensity profile of an image measured along a scan line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc5bc03ecdec012bcc79ae0621cddf5dd885cd2" translate="yes" xml:space="preserve">
          <source>Return the join of the two input segmentations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3706aceb3c25260e05cef84f380b96637a126bc4" translate="yes" xml:space="preserve">
          <source>Return the local number (population) of pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e2d55c682e045027ac4c4bf3105c72f7975a6d" translate="yes" xml:space="preserve">
          <source>Return the local sum of pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0eee6ad63c3ec6c750ade10b4ab7f0263fc692b" translate="yes" xml:space="preserve">
          <source>Return the overlaid image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a23f393584ef7e5f36af6f75ef672dd13341657" translate="yes" xml:space="preserve">
          <source>Return the plugin&amp;rsquo;s representation and data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8c42b6b8e0dab956da2e6ccc874a903278d65c" translate="yes" xml:space="preserve">
          <source>Return the skeleton of a binary image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38696deebed8b95482b7124f48b2045299e6990" translate="yes" xml:space="preserve">
          <source>Return the square root of the sum of squares of the horizontal and vertical Prewitt transforms. The edge magnitude depends slightly on edge directions, since the approximation of the gradient operator by the Prewitt operator is not completely rotation invariant. For a better rotation invariance, the Scharr operator should be used. The Sobel operator has a better rotation invariance than the Prewitt operator, but a worse rotation invariance than the Scharr operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2014ee70a9955562eb267d0bc1826608ef65b8" translate="yes" xml:space="preserve">
          <source>Return threshold value based on Otsu&amp;rsquo;s method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246cb7d7672dc8de89ca3e8a5e443ab9534347a8" translate="yes" xml:space="preserve">
          <source>Return threshold value based on Yen&amp;rsquo;s method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971fbf3822343439341cd5078c33fffca5c611a3" translate="yes" xml:space="preserve">
          <source>Return threshold value based on minimum method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e566e0ba26cd12de94a07c479a38162610df24ca" translate="yes" xml:space="preserve">
          <source>Return threshold value based on the mean of grayscale values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfbc9c930b6af946485997a2dbfefde33531c46" translate="yes" xml:space="preserve">
          <source>Return threshold value based on the triangle algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde1623a00d2e91dd4ade110b62a958f9741d042" translate="yes" xml:space="preserve">
          <source>Return threshold value(s) based on ISODATA method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a242e61a8326418386efe588cacc314aec9376c" translate="yes" xml:space="preserve">
          <source>Return white top hat of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd9c806676608a8ea3a5b4e15d6ad58039e97d2" translate="yes" xml:space="preserve">
          <source>Returns a figure comparing the outputs of different thresholding methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586de20a784b3a96f7656e2f9400460d25da1a55" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;id&lt;/code&gt; for the new node to be inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a11f7e8c62b79f17d2f4839963e1c39610d1075" translate="yes" xml:space="preserve">
          <source>Returns the value of the p0 lower percentile of the local greyvalue distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="e26c93d7317886c297bcf945bc91dbd04c1c3636" translate="yes" xml:space="preserve">
          <source>Richardson-Lucy deconvolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d64e58da8b794220ab854510f1b4903b289768" translate="yes" xml:space="preserve">
          <source>Ridge</source>
          <target state="translated">Ridge</target>
        </trans-unit>
        <trans-unit id="ac8096466a3c67f3f79969dcfd8179467914fcbd" translate="yes" xml:space="preserve">
          <source>Ridler, TW &amp;amp; Calvard, S (1978), &amp;ldquo;Picture thresholding using an iterative selection method&amp;rdquo; IEEE Transactions on Systems, Man and Cybernetics 8: 630-632, DOI:10.1109/TSMC.1978.4310039</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c838b76d07a7014d2e86e7935c58eccb3819ea2" translate="yes" xml:space="preserve">
          <source>Right stereo image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b385042024b0902ff2408d8370aa715c2b85034d" translate="yes" xml:space="preserve">
          <source>Robust wavelet-based estimator of the (Gaussian) noise standard deviation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04781fb34261640cad796a02c26173b2f5d20fc" translate="yes" xml:space="preserve">
          <source>Robustly estimate geometric transformation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3167909d3c0b522743f351bc49432edaa484ee5" translate="yes" xml:space="preserve">
          <source>Rocket image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a857e55d00176ac1675537a623e4f5db202548d" translate="yes" xml:space="preserve">
          <source>Rolling window view of the input n-dimensional array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c935f2e942eaa245c35d4fac083b78afe92833" translate="yes" xml:space="preserve">
          <source>Rotate image by a certain angle around its center.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4114250f6b5123dfe58bdb163fd9809169716a" translate="yes" xml:space="preserve">
          <source>Rotated version of the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40b085732024d6dc162e4d7c0ea4f583d4e0306" translate="yes" xml:space="preserve">
          <source>Rotation angle in counter-clockwise direction as radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2754a0d4ac6716296958e8d55a19e4b3e29bd331" translate="yes" xml:space="preserve">
          <source>Rotation angle in degrees in counter-clockwise direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f897ca8d2b6ca68aae8944556c77bb389154d07" translate="yes" xml:space="preserve">
          <source>Rotation matrix of the relative camera motion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e29120206328da78bf0c1e60ee2947514214f0" translate="yes" xml:space="preserve">
          <source>Roundness of error ellipse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f3423d27f30d4902049dfb7bf1743e46c69a38" translate="yes" xml:space="preserve">
          <source>Row and column coordinates of pixels to be colored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f755a99ce316b48f42c87adeeb3643839d5aa1b" translate="yes" xml:space="preserve">
          <source>Row coordinates of vertices of polygon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5865c25f818338f33d30856826bed549a7763c" translate="yes" xml:space="preserve">
          <source>Row-coordinate of top left corner of a rectangle containing feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85fb4690f119c6a7b991e96acf89621e1426802e" translate="yes" xml:space="preserve">
          <source>Row-coordinate of top left corner of the detection window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f7102e03f1dac55bc80993111ab078e064bd4f" translate="yes" xml:space="preserve">
          <source>Run SLIC-zero, the zero-parameter mode of SLIC. &lt;a href=&quot;#rbeb231216055-2&quot; id=&quot;id3&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60061b2ababb65de7797553fe19d0ccc8c07db61" translate="yes" xml:space="preserve">
          <source>Run all unit tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c96f96e627ef5809a5ac5c0499c69264ba9fe70" translate="yes" xml:space="preserve">
          <source>Rut</source>
          <target state="translated">Rut</target>
        </trans-unit>
        <trans-unit id="af10b0c2e32ce6ef94c2adf4c163591e08925f64" translate="yes" xml:space="preserve">
          <source>S Kaczmarz, &amp;ldquo;Angen&amp;auml;herte aufl&amp;ouml;sung von systemen linearer gleichungen&amp;rdquo;, Bulletin International de l&amp;rsquo;Academie Polonaise des Sciences et des Lettres 35 pp 355&amp;ndash;357 (1937)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530f8483b9788f437aea102f58b4209749db9637" translate="yes" xml:space="preserve">
          <source>Saddle</source>
          <target state="translated">Saddle</target>
        </trans-unit>
        <trans-unit id="2c4b35adedcfb3421893a159bf0d2c0a2e66f5b0" translate="yes" xml:space="preserve">
          <source>Saddle ridge</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2845c05fbcd07945b31bf6246b5dd42f908c39b5" translate="yes" xml:space="preserve">
          <source>Saddle rut</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6abe5e5096e1b170036dd068a2df64c822b5acaf" translate="yes" xml:space="preserve">
          <source>Same shape as the &lt;code&gt;costs&lt;/code&gt; array; this array contains the offset to any given index from its predecessor index. The offset indices index into the &lt;code&gt;offsets&lt;/code&gt; attribute, which is a array of n-d offsets. In the 2-d case, if offsets[traceback[x, y]] is (-1, -1), that means that the predecessor of [x, y] in the minimum cost path to some start position is [x+1, y+1]. Note that if the offset_index is -1, then the given index was not considered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f874e5ed1ff403bdcbdd304b86c9573d179a0c2b" translate="yes" xml:space="preserve">
          <source>Same shape as the &lt;code&gt;costs&lt;/code&gt; array; this array records the minimum cost path from the nearest/cheapest starting index to each index considered. (If &lt;code&gt;ends&lt;/code&gt; were specified, not all elements in the array will necessarily be considered: positions not evaluated will have a cumulative cost of inf. If &lt;code&gt;find_all_ends&lt;/code&gt; is &amp;lsquo;False&amp;rsquo;, only one of the specified end-positions will have a finite cumulative cost.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1c199568646883e56fbeeac991bcf9244628b3" translate="yes" xml:space="preserve">
          <source>Sampson distance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164ebb88f20da9057cf33b4a3c127b17b46c1b6c" translate="yes" xml:space="preserve">
          <source>Save an image to file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b4364dd149ea2c7b1e3057b9aae3afc5942963" translate="yes" xml:space="preserve">
          <source>Save current image to file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf6e2f76bfb9b5fdd813f83e47c3cb76916da1a" translate="yes" xml:space="preserve">
          <source>Save estimated model as best model if number of inlier samples is maximal. In case the current estimated model has the same number of inliers, it is only considered as the best model if it has less sum of residuals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075c744317819374614f0444c5c817615c518a3f" translate="yes" xml:space="preserve">
          <source>SaveButtons</source>
          <target state="translated">SaveButtons</target>
        </trans-unit>
        <trans-unit id="e9e9ccae986ed27cf990467c7f056a4129ee26e0" translate="yes" xml:space="preserve">
          <source>Saves the picture to the given path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9ed206a3856551d43d272bc34e4c28ed37ba33" translate="yes" xml:space="preserve">
          <source>Saving the picture updates the path attribute, format, and modified state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e305c295f810396c28d30f1e4ea9e187baa0645" translate="yes" xml:space="preserve">
          <source>Scale factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476de69a314a29f358660ee0e7ae52e6455527c5" translate="yes" xml:space="preserve">
          <source>Scale factors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be932e0431ae8dd9f7b73f1b82ce0658c66fbdc3" translate="yes" xml:space="preserve">
          <source>Scale factors. Separate scale factors can be defined as &lt;code&gt;(rows, cols[, &amp;hellip;][, dim])&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c014f0d72690954db15fc4897643106272672cc4" translate="yes" xml:space="preserve">
          <source>Scale image by a certain factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4744f04cf59589b74b039fc415ee1b2f07c9d070" translate="yes" xml:space="preserve">
          <source>Scaled version of the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdef5092584ab266f620f08a87b27dc6f8a99324" translate="yes" xml:space="preserve">
          <source>Scanned page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0239a640b7cb0984694aaa5094314e4451f0f2" translate="yes" xml:space="preserve">
          <source>Scikit-image is an image processing toolbox for &lt;a href=&quot;http://www.scipy.org&quot;&gt;SciPy&lt;/a&gt;. View the latest &lt;a href=&quot;http://scikit-image.org/docs/0.14.x/release_notes_and_installation.html&quot;&gt;release notes here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d740f2a7f3dddcf8a7a47c1a6f7cca720cbb09fc" translate="yes" xml:space="preserve">
          <source>Scikit-image logo, a RGBA image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ddf283f03fda4643fe2db02659e6fb64a89999" translate="yes" xml:space="preserve">
          <source>Search Page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff24de00cd04a23be96554c0cb133bcdbcde947" translate="yes" xml:space="preserve">
          <source>Search field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9145f6299392a79823c0bbbc263e83f7256f22e8" translate="yes" xml:space="preserve">
          <source>Search this documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c080ebbd4b6e4852e3eea97edabbee61b8d8fde1" translate="yes" xml:space="preserve">
          <source>Search window size for subpixel estimation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6f0aa392b4065dc956b198b75af83e4b7712e2" translate="yes" xml:space="preserve">
          <source>Second grayscale or color image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1df9c91bf4c240e8292c7a525a47602a6649424" translate="yes" xml:space="preserve">
          <source>Second keypoint coordinates as &lt;code&gt;(row, col)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff5a6dafd806f6d95302657c480d07703b64604" translate="yes" xml:space="preserve">
          <source>Sections</source>
          <target state="translated">Sections</target>
        </trans-unit>
        <trans-unit id="5b3fc1222b7fbcb2747334e398c9ec6630760d05" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#skimage.feature.peak_local_max&quot;&gt;&lt;code&gt;skimage.feature.peak_local_max()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32756155f7c0f71d7f4c514a05c6060ca0b444c7" translate="yes" xml:space="preserve">
          <source>See PlotPlugin and Plugin classes for additional details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">参照</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
