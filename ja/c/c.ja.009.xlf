<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="">
    <body>
      <group id="">
        <trans-unit id="e2eaf59369a9ae63ccdcfe0adb32b935682278ff" translate="yes" xml:space="preserve">
          <source>if one operand is a pointer and the other is a pointer to void, the non-void pointer is &lt;a href=&quot;conversion&quot;&gt;converted&lt;/a&gt; to the pointer to void and the two pointers are compared as described below</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b83677c0fc97a6c108bc1516b92c34336048f56" translate="yes" xml:space="preserve">
          <source>if one pointer points to the element of an array and the other pointer points one past the end of the same array, the one-past-the-end pointer compares greater</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b1e4d2fd5184e4c3384679d4c5c493a2c0e3b6b" translate="yes" xml:space="preserve">
          <source>if statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c8fa5228ed3748134c2e32444720b78643cc25" translate="yes" xml:space="preserve">
          <source>if the argument is &amp;plusmn;&amp;infin;, NaN is returned and &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; is raised</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d9eed5147b72562e4ab054f2506f13d1c89fd8" translate="yes" xml:space="preserve">
          <source>if the argument is &amp;plusmn;0 or &amp;plusmn;&amp;infin;, it is returned unmodified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8f5618d1c7c914a0aec620dc95184c32f5cea1" translate="yes" xml:space="preserve">
          <source>if the argument is &amp;plusmn;0 or &amp;plusmn;&amp;infin;, it is returned, unchanged</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2df7edfa7b4405703f581445a8452367771902b" translate="yes" xml:space="preserve">
          <source>if the argument is &amp;plusmn;0, &amp;plusmn;0 is returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3bf1a94fe47eaf53d0780a1d9299def8dfd8d23" translate="yes" xml:space="preserve">
          <source>if the argument is &amp;plusmn;0, 1 is returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60113d53785a368f483ea6644990b1f55f92d158" translate="yes" xml:space="preserve">
          <source>if the argument is &amp;plusmn;0, it is returned unmodified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25505d46685192a9f482e11f919518f7ee8a1f1" translate="yes" xml:space="preserve">
          <source>if the argument is &amp;plusmn;0, the result is 1.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e81f5cce3fedaf5208c7fdd5827d5d8bcabc9c5" translate="yes" xml:space="preserve">
          <source>if the argument is &amp;plusmn;1, &amp;plusmn;&amp;infin; is returned and &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_DIVBYZERO&lt;/a&gt;&lt;/code&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c8a32a1a67b049dd0a34bb9d8fc4b8271ec492" translate="yes" xml:space="preserve">
          <source>if the argument is +&amp;infin;, +&amp;infin; is returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01a2a2f5aac5ae430863c5b4f3d7cae19226d6a" translate="yes" xml:space="preserve">
          <source>if the argument is 1, +0 is returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2354a411a328d6f45042db43663a98e23dd056" translate="yes" xml:space="preserve">
          <source>if the argument is NaN, NaN is returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a7e9baa06698e6bb8d974bc0c976545459866d" translate="yes" xml:space="preserve">
          <source>if the argument is NaN, NaN is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d00088511496e12a2d600f1ec98edb72f74077" translate="yes" xml:space="preserve">
          <source>if the argument is less than 1, &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; is raised an NaN is returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ceb82ba3200a2d1406e89ae015d1b710cff010" translate="yes" xml:space="preserve">
          <source>if the first operand is a complex infinity and the second operand is finite, then the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7522cf7ec02fc14fc6098583e41ad69490d422" translate="yes" xml:space="preserve">
          <source>if the first operand is finite and the second operand is a complex infinity, then the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9562977c2124ecb210f02af093371fa3b0f6365" translate="yes" xml:space="preserve">
          <source>if the target type can represent the value, the value is unchanged</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a272cbb7518fb75c8bc1fc4f5b4b6f06bed210b" translate="yes" xml:space="preserve">
          <source>if the two floating-point operands have different type domains (complex vs. real, complex vs imaginary, or imaginary vs. real), the result type is complex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a6e30c511eb21d3ff744c01d7608cd643bceb7" translate="yes" xml:space="preserve">
          <source>if the two pointers point to members of the same &lt;a href=&quot;struct&quot;&gt;struct&lt;/a&gt;, the pointer to the member declared later in the struct definition compares greater than then pointer to the member declared earlier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2e6d167b0487bc2d84fefd0d3d6a386038aaee" translate="yes" xml:space="preserve">
          <source>if the value can be represented exactly by the target type, it is unchanged</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbacbb6e4a14568a35727ca50d4ff9b3781fb7b5" translate="yes" xml:space="preserve">
          <source>if the value can be represented, but cannot be represented exactly, the result is the nearest higher or the nearest lower value (in other words, rounding direction is implementation-defined), although if IEEE arithmetic is supported, rounding is to nearest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a0bf8800f3c7e2969590888f18d2ef58d5fac2" translate="yes" xml:space="preserve">
          <source>if the value can be represented, but cannot be represented exactly, the result is the nearest higher or the nearest lower value (in other words, rounding direction is implementation-defined), although if IEEE arithmetic is supported, rounding is to nearest. It is unspecified whether &lt;code&gt;&lt;a href=&quot;../numeric/fenv/fe_exceptions&quot;&gt;FE_INEXACT&lt;/a&gt;&lt;/code&gt; is raised in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788191625cbbb018beb2dfd20717bae09f2eede5" translate="yes" xml:space="preserve">
          <source>if the value cannot be represented, the behavior is undefined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d56648be8c20cef0c441b507d63a47726c5be8a6" translate="yes" xml:space="preserve">
          <source>if the value cannot be represented, the behavior is undefined, although if IEEE arithmetic is supported, &lt;code&gt;&lt;a href=&quot;../numeric/fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; is raised and the result value is unspecified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a086cbed461e80a9b584a7aba7d4d0a1a9ecc43" translate="yes" xml:space="preserve">
          <source>if there is a &lt;a href=&quot;variadic&quot;&gt;trailing ellipsis&lt;/a&gt; parameter, &lt;a href=&quot;conversion#Default_argument_promotions&quot;&gt;Default argument promotions&lt;/a&gt; are performed on the remaining arguments, which are made available to &lt;code&gt;va_list&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e16833097ba5fe2225877a908bb6df98b91301d" translate="yes" xml:space="preserve">
          <source>if two pointers point to different elements of the same array, the one pointing at the element with the larger index compares greater.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4a5fff5f7e6ff34936450b1ff30adb336dc9ff" translate="yes" xml:space="preserve">
          <source>if two pointers point to the same object, or both point one past the end of the same array, they compare equal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a5fb4322ea2556ee927d3c399d46dd6332ea15" translate="yes" xml:space="preserve">
          <source>if |arg|&amp;gt;1, NaN is returned and &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c5f0a412e0d091ebc2df6f2b4ff637b45e023d8" translate="yes" xml:space="preserve">
          <source>ignore callback for the bounds-checked functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="651294f587c58d58b2cbb84dd893603ef9a5516b" translate="yes" xml:space="preserve">
          <source>ignore_handler_s</source>
          <target state="translated">ignore_handler_s</target>
        </trans-unit>
        <trans-unit id="49e2cf03faf323f5b2f62213b3f5801863509461" translate="yes" xml:space="preserve">
          <source>ilogb</source>
          <target state="translated">ilogb</target>
        </trans-unit>
        <trans-unit id="b24ddf39fc08da02a4ff901d8726449fadce0612" translate="yes" xml:space="preserve">
          <source>ilogb, ilogbf, ilogbl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68b2045f03cd246ac10e9ec103c00dab1b5458f" translate="yes" xml:space="preserve">
          <source>ilogbilogbfilogbl</source>
          <target state="translated">ilogbilogbfilogbl</target>
        </trans-unit>
        <trans-unit id="d52124b33efa094a8f9772483c0c7ad07d2ade52" translate="yes" xml:space="preserve">
          <source>ilogbl</source>
          <target state="translated">ilogbl</target>
        </trans-unit>
        <trans-unit id="c0ab4ae6443f3600e2f5fa0b615dafddb25a2731" translate="yes" xml:space="preserve">
          <source>imag</source>
          <target state="translated">imag</target>
        </trans-unit>
        <trans-unit id="1519bc46bfb051be135aec61da427a20695d597e" translate="yes" xml:space="preserve">
          <source>imaginary</source>
          <target state="translated">imaginary</target>
        </trans-unit>
        <trans-unit id="ba58340c91973e122cd5f6244c42a30b59188c58" translate="yes" xml:space="preserve">
          <source>imaginary type macro</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0264ab57615abb91f4fdccb5652041548f958253" translate="yes" xml:space="preserve">
          <source>imaginary type remains &lt;code&gt;float &lt;a href=&quot;../numeric/complex/imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a2d8ae029009dd1172c2222c8c8459ea0a6df64" translate="yes" xml:space="preserve">
          <source>imaginary type to &lt;code&gt;double &lt;a href=&quot;../numeric/complex/imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1714858c43cc691366d6622ad2a4b27bf9e3ea55" translate="yes" xml:space="preserve">
          <source>imaginary type to &lt;code&gt;long double &lt;a href=&quot;../numeric/complex/imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d40bf0a611d5295c936fc167bf5b9f9c8b5f59" translate="yes" xml:space="preserve">
          <source>imaginary types: &lt;code&gt;float _Imaginary&lt;/code&gt;, &lt;code&gt;double _Imaginary&lt;/code&gt;, &lt;code&gt;long double _Imaginary&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d70a698a79040105711fdbdbea77856d2b2ca82" translate="yes" xml:space="preserve">
          <source>imaxabs</source>
          <target state="translated">imaxabs</target>
        </trans-unit>
        <trans-unit id="0b81d0c1dc291255ebd330ac45c7a67d8d43f723" translate="yes" xml:space="preserve">
          <source>imaxdiv</source>
          <target state="translated">imaxdiv</target>
        </trans-unit>
        <trans-unit id="e4aca5735c9c51de556ff01d9f228f6cf22f2dd3" translate="yes" xml:space="preserve">
          <source>imaxdiv_t</source>
          <target state="translated">imaxdiv_t</target>
        </trans-unit>
        <trans-unit id="4ff7808b91ea3d12391a4e5b0bc8e78eec5f18df" translate="yes" xml:space="preserve">
          <source>implementation-defined</source>
          <target state="translated">implementation-defined</target>
        </trans-unit>
        <trans-unit id="2f624b7b9583b9f5991df27b2520bb844b1dd862" translate="yes" xml:space="preserve">
          <source>implementation-defined behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fd57871ce969439af4ba167ce51d33d1299196" translate="yes" xml:space="preserve">
          <source>implementation-defined complete object type identifying a thread</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b3c0a56c896f580bdb2761f51daa70cbdc09da" translate="yes" xml:space="preserve">
          <source>implementation-defined error message string describing the error code stored in &lt;code&gt;errno&lt;/code&gt;, followed by &lt;code&gt;'\n'&lt;/code&gt;. The error message string is identical to the result of &lt;code&gt;&lt;a href=&quot;../string/byte/strerror&quot;&gt;strerror&lt;/a&gt;(errno)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db2b3f1bcf7b982f139f8323813b02c7949213e2" translate="yes" xml:space="preserve">
          <source>implementation-defined null pointer constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246b79a92008bf25fe7ea34e9ea0a13124753c49" translate="yes" xml:space="preserve">
          <source>in any case, the returned value is independent of the current rounding mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40636c2e6182984a02449c60a716d872ede0553" translate="yes" xml:space="preserve">
          <source>in the complex plane and has no branch cuts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634048ca8507f3d6902676b654d3aa23df6773f3" translate="yes" xml:space="preserve">
          <source>in the thread that did a load), but also establish a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88e3c495ee266fe956f83190b49341f56d03745" translate="yes" xml:space="preserve">
          <source>in thread B. That is, once the atomic load is completed, thread B is guaranteed to see everything thread A wrote to memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2e98eb338086725da9cad83e15f67ddeba2c4d" translate="yes" xml:space="preserve">
          <source>increment and decrement operators (note: pre- forms are lvalues in C++)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea5249e766e24269dad40576842e89fc6665652" translate="yes" xml:space="preserve">
          <source>increment&lt;br/&gt;decrement</source>
          <target state="translated">increment&lt;br/&gt;decrement</target>
        </trans-unit>
        <trans-unit id="cfdf1939371162fd51a66847dcbdc79903def336" translate="yes" xml:space="preserve">
          <source>indicates a floating-point category</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df804f7d1f3fa33c250e9e6ad4c25d2174234920" translate="yes" xml:space="preserve">
          <source>indicates a thread error status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8cf4b212c2cf8b6480e6a56a5f08c17f2a71ccb" translate="yes" xml:space="preserve">
          <source>indicates program execution execution status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0041df70509b75fb18d3a953861555ac2448891" translate="yes" xml:space="preserve">
          <source>indicates successful return value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8652974e312d05ad065e46b04b608002328e6b47" translate="yes" xml:space="preserve">
          <source>indicates that UTF-16 encoding is used by &lt;code&gt;&lt;a href=&quot;multibyte/mbrtoc16&quot;&gt;mbrtoc16&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;multibyte/c16rtomb&quot;&gt;c16rtomb&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec4274c125ddf1a5521d890a4614c35ddd03de2" translate="yes" xml:space="preserve">
          <source>indicates that UTF-32 encoding is used by &lt;code&gt;&lt;a href=&quot;multibyte/mbrtoc32&quot;&gt;mbrtoc32&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;multibyte/c32rtomb&quot;&gt;c32rtomb&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f60ca90e0aa94794450ec747d925f3af94b3383" translate="yes" xml:space="preserve">
          <source>indicates that floating-point exceptions are used: at least &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_DIVBYZERO&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../fenv/fe_exceptions&quot;&gt;FE_OVERFLOW&lt;/a&gt;&lt;/code&gt; are defined in &lt;code&gt;&amp;lt;fenv.h&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f7d3cb74d715c55cd905df869401d3cc018b4d" translate="yes" xml:space="preserve">
          <source>indicates that floating-point operations use the variable &lt;code&gt;&lt;a href=&quot;../../error/errno&quot;&gt;errno&lt;/a&gt;&lt;/code&gt; to report errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6d787e36838ed64dac78874d2804637ad93111" translate="yes" xml:space="preserve">
          <source>indicates that the fma function generally executes about as fast as, or faster than, a multiply and an add of double operands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8154305be8e5ac2ccf7bf457c1673d5fe6bb3c64" translate="yes" xml:space="preserve">
          <source>indicates that the given atomic type is lock-free</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806bfa041a25dd51fda55c4d1c52dd9df94a4bd9" translate="yes" xml:space="preserve">
          <source>indicates that the value is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="849bc88ece107ff50d73b4f26fc56a277345d4a6" translate="yes" xml:space="preserve">
          <source>indicates that the value is not representable by the underlying type (positive or negative infinity)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc12ba5965741eb0922a18e2a7e4711dba8f074f" translate="yes" xml:space="preserve">
          <source>indicates that the value is not-a-number (NaN)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4ec00185a81c122e15a2c322dc3a022e65db19" translate="yes" xml:space="preserve">
          <source>indicates that the value is positive or negative zero</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff3e968a6df5975e78fa301b04e0b52f2b9c386" translate="yes" xml:space="preserve">
          <source>indicates the position of &lt;code&gt;negative_sign&lt;/code&gt; in a negative international monetary value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1670e296e615ed4a26c1e0a553c68a81403bdd8" translate="yes" xml:space="preserve">
          <source>indicates the position of &lt;code&gt;negative_sign&lt;/code&gt; in a negative monetary value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59eee5fec7a1da3d80c55ef4783befa57d45f99e" translate="yes" xml:space="preserve">
          <source>indicates the position of &lt;code&gt;positive_sign&lt;/code&gt; in a non-negative international monetary value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e871fd849356ea35ab4e888bda91171d99f6181" translate="yes" xml:space="preserve">
          <source>indicates the position of &lt;code&gt;positive_sign&lt;/code&gt; in a non-negative monetary value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972bbef3d21092dea4f7372dd8ddaf86e4ef1bcd" translate="yes" xml:space="preserve">
          <source>indicates the separation of &lt;code&gt;currency_symbol&lt;/code&gt;, &lt;code&gt;negative_sign&lt;/code&gt;, and the negative monetary value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d26909f8fe48e8e6b4c922a82eed05dd33673dd" translate="yes" xml:space="preserve">
          <source>indicates the separation of &lt;code&gt;currency_symbol&lt;/code&gt;, &lt;code&gt;positive_sign&lt;/code&gt;, and the non-negative monetary value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7daa6e01931feda8c9c7353aa42a0b505c8b3b22" translate="yes" xml:space="preserve">
          <source>indicates the separation of &lt;code&gt;int_curr_symbol&lt;/code&gt;, &lt;code&gt;negative_sign&lt;/code&gt;, and the negative international monetary value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe0e4ff2e434c8cc8b8d576c2998607a958b6c30" translate="yes" xml:space="preserve">
          <source>indicates the separation of &lt;code&gt;int_curr_symbol&lt;/code&gt;, &lt;code&gt;positive_sign&lt;/code&gt;, and the non-negative international monetary value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29d8a154349a9a02f5f2299f83f531f1a292c37" translate="yes" xml:space="preserve">
          <source>indicates timed out return value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f3fb52f6288dc930f09a1cd910b0811adaf216" translate="yes" xml:space="preserve">
          <source>indicates unsuccessful return value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a89c8b9bb91f81c97b7ece9af96357e83517dde5" translate="yes" xml:space="preserve">
          <source>indicates unsuccessful return value due to out of memory condition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f46f4fe1641ed484b4d86737955b866c5ada2be" translate="yes" xml:space="preserve">
          <source>indicates unsuccessful return value due to resource temporary unavailable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7cc1f8fd9c4623a63f9bda9adce93a6303a2844" translate="yes" xml:space="preserve">
          <source>indicates value too big to be representable (infinity) by &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt; and &lt;code&gt;long double&lt;/code&gt; respectively</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9328a120e98f241f791b55e54180095e5bb1f30" translate="yes" xml:space="preserve">
          <source>indicates whether the atomic object is lock-free</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a534b32909238f6f8bcbcd7515c19c5d2c97ec2d" translate="yes" xml:space="preserve">
          <source>indicator (see &lt;code&gt;&lt;a href=&quot;feof&quot;&gt;feof()&lt;/a&gt;&lt;/code&gt;) on &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;. If the failure has been caused by some other error, sets the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5221952fedb9037ad4697c4a749c035131fb2464" translate="yes" xml:space="preserve">
          <source>indicator (see &lt;code&gt;&lt;a href=&quot;feof&quot;&gt;feof()&lt;/a&gt;&lt;/code&gt;) on &lt;code&gt;stream&lt;/code&gt;. If the failure has been caused by some other error, sets the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e10d0c4f0d46096f0fe4c01c0a868e5961edac" translate="yes" xml:space="preserve">
          <source>indicator (see &lt;code&gt;&lt;a href=&quot;feof&quot;&gt;feof()&lt;/a&gt;&lt;/code&gt;) on &lt;code&gt;stream&lt;/code&gt;. The contents of the array pointed to by &lt;code&gt;str&lt;/code&gt; are not altered in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66112b3aebca89b92735e43509eee6151d9e2ddc" translate="yes" xml:space="preserve">
          <source>indicator (see &lt;code&gt;&lt;a href=&quot;ferror&quot;&gt;ferror()&lt;/a&gt;&lt;/code&gt;) on &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aad53d7cf556e6a05918515ce053073b7ea453c" translate="yes" xml:space="preserve">
          <source>indicator (see &lt;code&gt;&lt;a href=&quot;ferror&quot;&gt;ferror()&lt;/a&gt;&lt;/code&gt;) on &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b34d21db8866fb354cfbacb54d716377b59f59d" translate="yes" xml:space="preserve">
          <source>indicator (see &lt;code&gt;&lt;a href=&quot;ferror&quot;&gt;ferror()&lt;/a&gt;&lt;/code&gt;) on &lt;code&gt;stream&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4cc924f2b43218e9b56702ad28662d6ba01605" translate="yes" xml:space="preserve">
          <source>indicator (see &lt;code&gt;&lt;a href=&quot;ferror&quot;&gt;ferror()&lt;/a&gt;&lt;/code&gt;) on &lt;code&gt;stream&lt;/code&gt;. The contents of the array pointed to by &lt;code&gt;str&lt;/code&gt; are indeterminate (it may not even be null-terminated).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d23d732b406ecce41b147e047c1d31bb81d3cfc" translate="yes" xml:space="preserve">
          <source>indicator (see &lt;code&gt;&lt;a href=&quot;ferror&quot;&gt;ferror&lt;/a&gt;&lt;/code&gt;) on &lt;code&gt;stream&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729ece9fa830e654008eba24ff4f01836443b468" translate="yes" xml:space="preserve">
          <source>indirection</source>
          <target state="translated">indirection</target>
        </trans-unit>
        <trans-unit id="a0e9d7bd7c98073ac045f5ead7f4554c0622e961" translate="yes" xml:space="preserve">
          <source>inexact result: rounding was necessary to store the result of an earlier floating-point operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4c6b12888e68a0828006f4e252af0b387cc357" translate="yes" xml:space="preserve">
          <source>infinity</source>
          <target state="translated">infinity</target>
        </trans-unit>
        <trans-unit id="803ad7670f66366ba8119d3b7dbf071fcb6ca592" translate="yes" xml:space="preserve">
          <source>infinity expression. It consists of the following parts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe87b51dec7f718a5d96a4ec9c833c0e23b6a79" translate="yes" xml:space="preserve">
          <source>infinity minus infinity is NaN and &lt;code&gt;&lt;a href=&quot;../numeric/fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; is raised</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c81c5c5fbdc8d68305e1243453b46f6e9d0c25c" translate="yes" xml:space="preserve">
          <source>infinity plus the negative infinity is NaN and &lt;code&gt;&lt;a href=&quot;../numeric/fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; is raised</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790fafe5e4fe4bc5c8e0a78ce628d69d2d3e4e63" translate="yes" xml:space="preserve">
          <source>init_clause may be an expression or a declaration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e3c8c5a5f73c97d4160f0d6ff210eeca0f2017" translate="yes" xml:space="preserve">
          <source>init_clause, cond_expression, and iteration_expression are all optional:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d719c68c76a6d48ea3348b3e9929ba9a29a06d6" translate="yes" xml:space="preserve">
          <source>initialization</source>
          <target state="translated">initialization</target>
        </trans-unit>
        <trans-unit id="318aaf0a4235e9b16cc916a2edaf4d38fba03e29" translate="yes" xml:space="preserve">
          <source>initializer expression or &lt;a href=&quot;initialization&quot;&gt;initializer list&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65762088a07fbaab513124db20b3d6dfb885ffd" translate="yes" xml:space="preserve">
          <source>initializer-list</source>
          <target state="translated">initializer-list</target>
        </trans-unit>
        <trans-unit id="1ba857149997564f9a7820f733cacde5a823c075" translate="yes" xml:space="preserve">
          <source>initializes a new &lt;code&gt;&lt;a href=&quot;atomic/atomic_flag&quot;&gt;atomic_flag&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f3c3dbadec6bd7086c041328450781f9653fff" translate="yes" xml:space="preserve">
          <source>initializes a new &lt;code&gt;&lt;a href=&quot;atomic_flag&quot;&gt;atomic_flag&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfc2f3ee94bdf44ddc4423c385f819d8201043d" translate="yes" xml:space="preserve">
          <source>initializes a new &lt;code&gt;atomic_flag&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7f0075eb95f27f7eb2487061d468e9267e6300" translate="yes" xml:space="preserve">
          <source>initializes a new atomic object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf63a88d5bbb292273fa8623770d32a0eae1493" translate="yes" xml:space="preserve">
          <source>initializes an existing atomic object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9937e7ddf42c6644513492f9c75aa07378e781" translate="yes" xml:space="preserve">
          <source>inline</source>
          <target state="translated">inline</target>
        </trans-unit>
        <trans-unit id="3a8d6dd4c3de5ad21f0f511926c7c2f2fc96e3c6" translate="yes" xml:space="preserve">
          <source>inline definition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b6c8c379fff3f54355fde665a27a721a02d2bd" translate="yes" xml:space="preserve">
          <source>inline function specifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff0c771644b6a7bfe62ad76115bc0fd87a99162" translate="yes" xml:space="preserve">
          <source>input file stream to read from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1000c433155e4367732cc57d680c7958eb10666c" translate="yes" xml:space="preserve">
          <source>input of a signed decimal integer value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7627cdfc070e096e6d953ce0b57b05be8e6808cb" translate="yes" xml:space="preserve">
          <source>input of a signed integer value (base is determined by the first characters parsed)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f305dea755be32e1c72aad2ea1e47e2f8dd34fdc" translate="yes" xml:space="preserve">
          <source>input of an unsigned decimal integer value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac60292dbc094322e1085b1e4bfc6c56501cf00" translate="yes" xml:space="preserve">
          <source>input of an unsigned hexadecimal integer value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b430e48e366d8d43d7f09a388d2dba686d962a8" translate="yes" xml:space="preserve">
          <source>input of an unsigned octal integer value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="translated">int</target>
        </trans-unit>
        <trans-unit id="d12a09bc7a35e9ff16d96a94a464527d3bd5adf3" translate="yes" xml:space="preserve">
          <source>int cmp(constvoid*a, constvoid*b);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3743becc8d5e1373805a3c21fc8204e388e92352" translate="yes" xml:space="preserve">
          <source>int tm_hour</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d0634598e522eae95f2d2694ba47896156cce0" translate="yes" xml:space="preserve">
          <source>int tm_isdst</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf729acbf650fa9e02f01a0c30b534db55b1776" translate="yes" xml:space="preserve">
          <source>int tm_mday</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53685a1b332c60ce9dce697f09e86d2841fee1ce" translate="yes" xml:space="preserve">
          <source>int tm_min</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d9cc68caf92806b1e3dbae4157ae8c7c5a4154" translate="yes" xml:space="preserve">
          <source>int tm_mon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80340f2c3316f1d433af292daf833fea5548abd0" translate="yes" xml:space="preserve">
          <source>int tm_sec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833fd473005e754b2caa0c41a6e8b5cb49276d2c" translate="yes" xml:space="preserve">
          <source>int tm_wday</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a3b190e6a973c8b5a9530fa743442c754ab994" translate="yes" xml:space="preserve">
          <source>int tm_yday</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93573526004ba985bf6e192d369769a45dfd1ffe" translate="yes" xml:space="preserve">
          <source>int tm_year</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5459c1f95817ca497888fcf6d70b56e44b506b5a" translate="yes" xml:space="preserve">
          <source>integer constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b2310008d62f3f5b8a7fbf6d95e0f79e01f2f8" translate="yes" xml:space="preserve">
          <source>integer constant &lt;code&gt;0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eec4fc917f6a0eba4b71e5c7a573ed1f899ace6" translate="yes" xml:space="preserve">
          <source>integer constant &lt;code&gt;1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c4caca2ed82d27598fed985c54d85dfeab8342" translate="yes" xml:space="preserve">
          <source>integer constant expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af859169b3746ba4b6680c2332b3d882e1437828" translate="yes" xml:space="preserve">
          <source>integer constant expression of type &lt;code&gt;int&lt;/code&gt; and negative value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53c1f752be6e0ca35bc188b78c90a38c5fe9234" translate="yes" xml:space="preserve">
          <source>integer constant expressions':</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6981b3daab75c6e4ce104ad104d3bdff7933557e" translate="yes" xml:space="preserve">
          <source>integer constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8525f1fcd7ad40707da5b1cafc0a908df5459bf" translate="yes" xml:space="preserve">
          <source>integer or real floating type to &lt;code&gt;double&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cccafcadc56663ee41e9ff8ad4ac2871749f7ebf" translate="yes" xml:space="preserve">
          <source>integer or real floating type to &lt;code&gt;long double&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faac1057714e6fc83d9fb7ee89e2a39f99076706" translate="yes" xml:space="preserve">
          <source>integer promotion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c834bbdab0747d7478cc8e9f1c845aea5268043b" translate="yes" xml:space="preserve">
          <source>integer promotions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ea88088b716cfdcbe013591b8de37c5abc88a5" translate="yes" xml:space="preserve">
          <source>integer type capable of holding a pointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdbe7afeb632a5debeab6fc512f6dc8d50772d03" translate="yes" xml:space="preserve">
          <source>integer type that can hold any valid wide character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049c59cde21fd40acc8fa85b48db5fb1c2622c37" translate="yes" xml:space="preserve">
          <source>integer type that can hold any valid wide character and at least one more value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586403f62b3bd5532d024f581a4140c41fc54c4d" translate="yes" xml:space="preserve">
          <source>integer type to &lt;code&gt;float&lt;/code&gt; (the only real type possible is float, which remains as-is)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6bb2d7b18309b3464e268b3492dc695ecd5984a" translate="yes" xml:space="preserve">
          <source>integer types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a58d730501fa1ad9f02e2d098900ec47c26af30" translate="yes" xml:space="preserve">
          <source>integer value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6bbf11c0ecbf9d6fbd2a47c9d463a4ea5135be" translate="yes" xml:space="preserve">
          <source>integer value greater than zero to set the stream wide, less than zero to set the stream narrow, or zero to query only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd51974824e9b446e985918004540e44ee58085c" translate="yes" xml:space="preserve">
          <source>integer values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc977f95ff6e361d481bf73925837705c027f1e1" translate="yes" xml:space="preserve">
          <source>integer, character, and floating constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01cc82a9a54ece60c3d8e6a794635654e5d468d" translate="yes" xml:space="preserve">
          <source>integer-expression</source>
          <target state="translated">integer-expression</target>
        </trans-unit>
        <trans-unit id="683d3e5e009bf9a56409e448ddf1026abf48efbf" translate="yes" xml:space="preserve">
          <source>integer-expression&lt;code&gt;[&lt;/code&gt;pointer-expression&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">integer-expression&lt;code&gt;[&lt;/code&gt;pointer-expression&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3bd769ff06d0246fadb832285c2ed0c3cb72598" translate="yes" xml:space="preserve">
          <source>integer-suffix, if provided, may contain one or both of the following (if both are provided, they may appear in any order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2740c989e2cae15d51ebcf973de05be2859c7dcb" translate="yes" xml:space="preserve">
          <source>integral</source>
          <target state="translated">integral</target>
        </trans-unit>
        <trans-unit id="ea644978373c20a46ce9a876c5e6b8fd5523ae87" translate="yes" xml:space="preserve">
          <source>integral value referring to an error code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582ba1ea85f07520c47b313ebf59b18b50d8fe12" translate="yes" xml:space="preserve">
          <source>introductory &lt;code&gt;%&lt;/code&gt; character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ccb2fe49fb034561209a29625b448812a742c6" translate="yes" xml:space="preserve">
          <source>invalid memory access (segmentation fault)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac4c22c12305fb98ebc7f50ca1e873db09d03ad" translate="yes" xml:space="preserve">
          <source>invalid program image, such as invalid instruction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad79a664f30ba181b6c4c72dabb2f39e3be1948d" translate="yes" xml:space="preserve">
          <source>iptr</source>
          <target state="translated">iptr</target>
        </trans-unit>
        <trans-unit id="b47f363e2b430c0647f14deea3eced9b0ef300ce" translate="yes" xml:space="preserve">
          <source>is</source>
          <target state="translated">is</target>
        </trans-unit>
        <trans-unit id="584955fca4767b6725e6c6e75080956e27dedfe2" translate="yes" xml:space="preserve">
          <source>is a C language construct that introduces one or more &lt;a href=&quot;identifier&quot;&gt;identifiers&lt;/a&gt; into the program and specifies their meaning and properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20bde49e5bc8c72ae09035d126aa4b653c05c3e" translate="yes" xml:space="preserve">
          <source>is a declaration that may or may not act as a definition. If an actual external definition is found earlier or later in the same translation unit, then the tentative definition just acts as a declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0cbaa546b4450923e4afa467ad1d9c71096624e" translate="yes" xml:space="preserve">
          <source>is a declaration that provides all information about the identifiers it declares.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7455de40287310e0df3bcaabf926af6474bc4096" translate="yes" xml:space="preserve">
          <source>is a distinct &lt;a href=&quot;compatible_type&quot;&gt;type&lt;/a&gt; whose value is a value of its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7bda27df144918ed99619ff22b5f5af2570265d" translate="yes" xml:space="preserve">
          <source>is a multibyte character set which includes the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2795e5033f1f31fcb549dcbe0eb4c63afcbc7a7b" translate="yes" xml:space="preserve">
          <source>is allowed to produce &lt;code&gt;r1 == r2 == 42&lt;/code&gt; because, although A is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd456ebb965b8eaf04ee19966a7170d1afce2d1b" translate="yes" xml:space="preserve">
          <source>is an arbitrarily long sequence of digits, underscores, lowercase and uppercase Latin letters, and Unicode characters specified using &lt;code&gt;\u&lt;/code&gt; and &lt;code&gt;\U&lt;/code&gt;&lt;a href=&quot;escape&quot;&gt;escape&lt;/a&gt; notation(since C99). A valid identifier must begin with a non-digit character (Latin letter, underscore, or Unicode non-digit character(since C99)). Identifiers are case-sensitive (lowercase and uppercase letters are distinct).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ccae5ab807ad9a5497953067a5e6115b51255e3" translate="yes" xml:space="preserve">
          <source>is an external declaration without an initializer, and either without a &lt;a href=&quot;storage_duration&quot;&gt;storage-class specifier&lt;/a&gt; or with the specifier &lt;code&gt;static&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2bac3cbe2a9f92adeaa506d50170562ddcd0c9e" translate="yes" xml:space="preserve">
          <source>is an ordered sequence of characters composed into lines (zero or more characters plus a terminating &lt;code&gt;'\n'&lt;/code&gt;). Whether the last line requires a terminating &lt;code&gt;'\n'&lt;/code&gt; is implementation-defined. Characters may have to be added, altered, or deleted on input and output to conform to the conventions for representing text in the OS (in particular, C streams on Windows OS convert &lt;code&gt;\n&lt;/code&gt; to &lt;code&gt;\r\n&lt;/code&gt; on output, and convert &lt;code&gt;\r\n&lt;/code&gt; to &lt;code&gt;\n&lt;/code&gt; on input).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18011902ecb8e7c0e07be455a6dac9c03ac55c3c" translate="yes" xml:space="preserve">
          <source>is an ordered sequence of characters that can transparently record internal data. Data read in from a binary stream always equals to the data that were earlier written out to that stream. Implementations are only allowed to append a number of null characters to the end of the stream. A wide binary stream doesn't need to end in the initial shift state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdedfe83ec6ba782f543c59049f2fcc1c6f18773" translate="yes" xml:space="preserve">
          <source>is any lvalue expression of complete, non-array type which is not &lt;a href=&quot;const&quot;&gt;const&lt;/a&gt;-qualified, and, if it's a struct/union, has no members that are &lt;a href=&quot;const&quot;&gt;const&lt;/a&gt;-qualified, recursively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86ffb73ef8cb6bec00e7848b1db2cf17ed42eac" translate="yes" xml:space="preserve">
          <source>is called. The static objects defined within an inline definition are distinct from the static objects defined within the external definition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf238eed553a5ea10ab7ab60c131a8f104d86dd" translate="yes" xml:space="preserve">
          <source>is fully re-initialized and any prior explicit initializers for any of its subobjects are ignored:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="082f9b0b627c8a57057fb6496cfaa1088f3abfbf" translate="yes" xml:space="preserve">
          <source>is not a cross-thread relationship, unlike</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ca85e4d4f2034a25c2bc1ec799e2a2f04ea8ee" translate="yes" xml:space="preserve">
          <source>is not specified, writes every byte up to and not including the first null terminator. If the &lt;b&gt;l&lt;/b&gt; specifier is used, the argument must be a pointer to the initial element of an array of &lt;code&gt;wchar_t&lt;/code&gt;, which is converted to char array as if by a call to &lt;code&gt;&lt;a href=&quot;../string/multibyte/wcrtomb&quot;&gt;wcrtomb&lt;/a&gt;&lt;/code&gt; with zero-initialized conversion state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540f17ba8d6fe7af3013ea37133b6da773e9a1d9" translate="yes" xml:space="preserve">
          <source>is not specified, writes every wide characters up to and not including the first null terminator. If the &lt;b&gt;l&lt;/b&gt; specifier is used, the argument must be a pointer to the initial element of an array of &lt;code&gt;wchar_t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be606ed006710cc3555e8998792c95ba1afe0b57" translate="yes" xml:space="preserve">
          <source>is requested the trailing zeros are removed, also the decimal point character is removed if no fractional part is left. For infinity and not-a-number conversion style see notes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab1f8b59686974bbcd2707bc651d6707dac406f" translate="yes" xml:space="preserve">
          <source>is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a12e81ede9109246a418728fcfbce9817e3ecce1" translate="yes" xml:space="preserve">
          <source>is specified by an additional argument of type &lt;code&gt;int&lt;/code&gt;. If the value of this argument is negative, it is ignored. If neither a number nor &lt;code&gt;*&lt;/code&gt; is used, the precision is taken as zero. See the table below for exact effects of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8b809af30c308b4e2b23ec6f233aa32281b63a" translate="yes" xml:space="preserve">
          <source>is the smallest addressable unit of memory. It is defined as a contiguous sequence of bits, large enough to hold any member of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f6617e74d8b437b7e4b1ece7dcd15695d1dd64" translate="yes" xml:space="preserve">
          <source>is used, which is, grammatically, exactly the same as a list of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6839d76bbb7783af5dc7927fd3ea8c02821e91c" translate="yes" xml:space="preserve">
          <source>is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8341ed3eb188b28a7521f956dad478d599e47a0d" translate="yes" xml:space="preserve">
          <source>is.</source>
          <target state="translated">is.</target>
        </trans-unit>
        <trans-unit id="f98603d244240ad696c623414f9d8c44d4388b08" translate="yes" xml:space="preserve">
          <source>isalnum</source>
          <target state="translated">isalnum</target>
        </trans-unit>
        <trans-unit id="a80bcf955c9bf2ee8ca03a442b78cc0d9115191b" translate="yes" xml:space="preserve">
          <source>isalpha</source>
          <target state="translated">isalpha</target>
        </trans-unit>
        <trans-unit id="82d00548829fd775bc03447056c6090323f0b173" translate="yes" xml:space="preserve">
          <source>isblank</source>
          <target state="translated">isblank</target>
        </trans-unit>
        <trans-unit id="d106236f8f591c26002d10b884251cd86b65929a" translate="yes" xml:space="preserve">
          <source>iscntrl</source>
          <target state="translated">iscntrl</target>
        </trans-unit>
        <trans-unit id="a4f850ec663f1a95a7308acdd7c0882ac96284f1" translate="yes" xml:space="preserve">
          <source>isdigit</source>
          <target state="translated">isdigit</target>
        </trans-unit>
        <trans-unit id="22e8d3e589ddf297337028d15f802a31d0f9a148" translate="yes" xml:space="preserve">
          <source>isfinite</source>
          <target state="translated">isfinite</target>
        </trans-unit>
        <trans-unit id="6fa9a8b269f20808a2e6e24c0b729ade652ac472" translate="yes" xml:space="preserve">
          <source>isgraph</source>
          <target state="translated">isgraph</target>
        </trans-unit>
        <trans-unit id="204780ba157e282abd5f8f565a5355c6e0d785f6" translate="yes" xml:space="preserve">
          <source>isgreater</source>
          <target state="translated">isgreater</target>
        </trans-unit>
        <trans-unit id="f440857bcb6299311f5ee06bdf27b84d3598eb29" translate="yes" xml:space="preserve">
          <source>isgreaterequal</source>
          <target state="translated">isgreaterequal</target>
        </trans-unit>
        <trans-unit id="d056083a86a1bbffc86d863e094b919b223684ba" translate="yes" xml:space="preserve">
          <source>isinf</source>
          <target state="translated">isinf</target>
        </trans-unit>
        <trans-unit id="c297f9ca66668fa2e932162df4fb382d37eb2a56" translate="yes" xml:space="preserve">
          <source>isless</source>
          <target state="translated">isless</target>
        </trans-unit>
        <trans-unit id="a5230cbaa088d30ee63eaecad1f3e474015889d4" translate="yes" xml:space="preserve">
          <source>islessequal</source>
          <target state="translated">islessequal</target>
        </trans-unit>
        <trans-unit id="c11b530966ef1b6a3fcc91785240aa47bc624a73" translate="yes" xml:space="preserve">
          <source>islessgreater</source>
          <target state="translated">islessgreater</target>
        </trans-unit>
        <trans-unit id="f30fa1adac02a3cbe31556d8b28823fdaff84ca4" translate="yes" xml:space="preserve">
          <source>islower</source>
          <target state="translated">islower</target>
        </trans-unit>
        <trans-unit id="6a0e9e2fc662576a9398259e75fd3a2ece885f1b" translate="yes" xml:space="preserve">
          <source>isnan</source>
          <target state="translated">isnan</target>
        </trans-unit>
        <trans-unit id="561964c38dda95853fe56cdfcbe872562da5817e" translate="yes" xml:space="preserve">
          <source>isnormal</source>
          <target state="translated">isnormal</target>
        </trans-unit>
        <trans-unit id="3eaa77e81ec3e7315da64522588fa78653f04c48" translate="yes" xml:space="preserve">
          <source>isprint</source>
          <target state="translated">isprint</target>
        </trans-unit>
        <trans-unit id="b46a43e82705327e79eab10ba90a2c7256ae5f43" translate="yes" xml:space="preserve">
          <source>ispunct</source>
          <target state="translated">ispunct</target>
        </trans-unit>
        <trans-unit id="dcb83ac7d6a6b5f11ee201d1f2de0695c01d47a8" translate="yes" xml:space="preserve">
          <source>isspace</source>
          <target state="translated">isspace</target>
        </trans-unit>
        <trans-unit id="ade5c371c09bca0388b52bf2c491c95ba41a8206" translate="yes" xml:space="preserve">
          <source>issues a compile-time diagnostic if the value of a constant expression is false</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6e8a867432c68f5c4d719267fe581bcdc67cba" translate="yes" xml:space="preserve">
          <source>isunordered</source>
          <target state="translated">isunordered</target>
        </trans-unit>
        <trans-unit id="a75940e15c80a9f6f3e3f1f35e71a404899ffbb3" translate="yes" xml:space="preserve">
          <source>isupper</source>
          <target state="translated">isupper</target>
        </trans-unit>
        <trans-unit id="d2dfa72d5f7687c8fc5c3805442df6dee4f6c3b1" translate="yes" xml:space="preserve">
          <source>iswalnum</source>
          <target state="translated">iswalnum</target>
        </trans-unit>
        <trans-unit id="554df484ee827039f6d55b688d751dc800be894e" translate="yes" xml:space="preserve">
          <source>iswalpha</source>
          <target state="translated">iswalpha</target>
        </trans-unit>
        <trans-unit id="e69f3bc5c9a54d34b11abdc610e4dda69b0cc402" translate="yes" xml:space="preserve">
          <source>iswblank</source>
          <target state="translated">iswblank</target>
        </trans-unit>
        <trans-unit id="89b1f542708893a647118c3167cd1340f03067b1" translate="yes" xml:space="preserve">
          <source>iswcntrl</source>
          <target state="translated">iswcntrl</target>
        </trans-unit>
        <trans-unit id="137449388f01677086f1008e3ef2cc7741fdca83" translate="yes" xml:space="preserve">
          <source>iswctype</source>
          <target state="translated">iswctype</target>
        </trans-unit>
        <trans-unit id="6c3439c829dddd36ef57986f66d8153b2e55f5dc" translate="yes" xml:space="preserve">
          <source>iswdigit</source>
          <target state="translated">iswdigit</target>
        </trans-unit>
        <trans-unit id="472c730068380a25239f8e571b1a05d0966e4668" translate="yes" xml:space="preserve">
          <source>iswgraph</source>
          <target state="translated">iswgraph</target>
        </trans-unit>
        <trans-unit id="abdcf434a28d98518286d4696e44436cf3855999" translate="yes" xml:space="preserve">
          <source>iswlower</source>
          <target state="translated">iswlower</target>
        </trans-unit>
        <trans-unit id="5ef274c329f0bc261f09ebd822f4462325519d2f" translate="yes" xml:space="preserve">
          <source>iswprint</source>
          <target state="translated">iswprint</target>
        </trans-unit>
        <trans-unit id="2fea2fe4d8efc9bbe54f86abd8b3c52df089f6bf" translate="yes" xml:space="preserve">
          <source>iswpunct</source>
          <target state="translated">iswpunct</target>
        </trans-unit>
        <trans-unit id="b7cf052224b89c154a34ead28c03fcedc67c69c5" translate="yes" xml:space="preserve">
          <source>iswspace</source>
          <target state="translated">iswspace</target>
        </trans-unit>
        <trans-unit id="43d2f295348a5b87ce88cf93b8fd97311d35eafb" translate="yes" xml:space="preserve">
          <source>iswupper</source>
          <target state="translated">iswupper</target>
        </trans-unit>
        <trans-unit id="0a6a9cf0dc0799f57fbfc0b4a5bfbfc8f4271a37" translate="yes" xml:space="preserve">
          <source>iswxdigit</source>
          <target state="translated">iswxdigit</target>
        </trans-unit>
        <trans-unit id="8d0aa355f9bfcbe256bca3c4d82f24a93d5a901e" translate="yes" xml:space="preserve">
          <source>isxdigit</source>
          <target state="translated">isxdigit</target>
        </trans-unit>
        <trans-unit id="8e93b57487993ab1957a07cd993ebca55db7603d" translate="yes" xml:space="preserve">
          <source>iteration_expression is evaluated after the loop body and its result is discarded. After evaluating iteration_expression, control is transferred to cond_expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b946ddae90df50f553375cbadede63ef5dcc8b0" translate="yes" xml:space="preserve">
          <source>iv</source>
          <target state="translated">iv</target>
        </trans-unit>
        <trans-unit id="43fed2f378e6973ec6bfd7aa62ddb71d9b079eea" translate="yes" xml:space="preserve">
          <source>iy</source>
          <target state="translated">iy</target>
        </trans-unit>
        <trans-unit id="f6a9fa276ba7340e4237d855431c70aa20ae1c94" translate="yes" xml:space="preserve">
          <source>jmp_buf</source>
          <target state="translated">jmp_buf</target>
        </trans-unit>
        <trans-unit id="137eef35fe63f3efa6755d15509f4babf1b6c1ad" translate="yes" xml:space="preserve">
          <source>jumps to specified location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62f2225bf70bfaccbc7f1ef2a397836717377de" translate="yes" xml:space="preserve">
          <source>key</source>
          <target state="translated">key</target>
        </trans-unit>
        <trans-unit id="a43aa2b3cce8548368bbd79297bc5714364ea31a" translate="yes" xml:space="preserve">
          <source>keyword</source>
          <target state="translated">keyword</target>
        </trans-unit>
        <trans-unit id="67af815a43d67aacb56e8ef806c815bc9547ae60" translate="yes" xml:space="preserve">
          <source>kill_dependency</source>
          <target state="translated">kill_dependency</target>
        </trans-unit>
        <trans-unit id="3d1d98000dec7a4b3aa12c311854be2307e359e4" translate="yes" xml:space="preserve">
          <source>label&lt;code&gt;:&lt;/code&gt;statement</source>
          <target state="translated">label&lt;code&gt;:&lt;/code&gt;statement</target>
        </trans-unit>
        <trans-unit id="f800c8377b66a5012b88baf80ced69593281911e" translate="yes" xml:space="preserve">
          <source>labeled</source>
          <target state="translated">labeled</target>
        </trans-unit>
        <trans-unit id="c7775e9214ae79db6716acbac8529400a4aff25c" translate="yes" xml:space="preserve">
          <source>labels</source>
          <target state="translated">labels</target>
        </trans-unit>
        <trans-unit id="66d1063ed8bc3230ce5667074fff8c0de685b3bf" translate="yes" xml:space="preserve">
          <source>largest acceptable size for bounds-checked functions, expands to either constant or variable which may change at runtime (e.g. as the currently allocated memory size changes)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19122a12cca7225c609957e3a7df0c09be46f2b0" translate="yes" xml:space="preserve">
          <source>lconv</source>
          <target state="translated">lconv</target>
        </trans-unit>
        <trans-unit id="0aec9395a8febe8803cdb75edc8edab4c3f01de9" translate="yes" xml:space="preserve">
          <source>ldexp</source>
          <target state="translated">ldexp</target>
        </trans-unit>
        <trans-unit id="9c97404936d8abbf045fe217f64d07dac0fb4225" translate="yes" xml:space="preserve">
          <source>ldexp, ldexpf, ldexpl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd98c59ade22da921d7621ebc8c05b3dc3402dd" translate="yes" xml:space="preserve">
          <source>ldexpl</source>
          <target state="translated">ldexpl</target>
        </trans-unit>
        <trans-unit id="bc4103f018b27c34cfa89817c5065f03d37b20a4" translate="yes" xml:space="preserve">
          <source>ldexpldexpfldexpl</source>
          <target state="translated">ldexpldexpfldexpl</target>
        </trans-unit>
        <trans-unit id="4e5e15af10475c353350ae2c6dc22c29c10d89a5" translate="yes" xml:space="preserve">
          <source>ldiv_t</source>
          <target state="translated">ldiv_t</target>
        </trans-unit>
        <trans-unit id="a573b540d2dde90ba6da3b9d6286c8ec60c10044" translate="yes" xml:space="preserve">
          <source>len</source>
          <target state="translated">len</target>
        </trans-unit>
        <trans-unit id="29084be4dd4c043da59c50f6b518af1f724787c6" translate="yes" xml:space="preserve">
          <source>length modifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b439cf4e10f87567e60f4b7818ecd57383dc7f0" translate="yes" xml:space="preserve">
          <source>less</source>
          <target state="translated">less</target>
        </trans-unit>
        <trans-unit id="6fa7ea816f7eab36cdd18d6c0079926126c85c35" translate="yes" xml:space="preserve">
          <source>less or equal to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb2aa987a1cdc7525f5672334ed54a5cee446c5" translate="yes" xml:space="preserve">
          <source>less than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b709205d85df56c7a244034c07e09a1af509871" translate="yes" xml:space="preserve">
          <source>less than or equal to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1993b38fb74c5fca08a3d2e892e40e1940cdf73a" translate="yes" xml:space="preserve">
          <source>lgamma</source>
          <target state="translated">lgamma</target>
        </trans-unit>
        <trans-unit id="027abd40247e45ba9b81c3d409541af27b92c1ec" translate="yes" xml:space="preserve">
          <source>lgamma, lgammaf, lgammal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3d10fa52f87de5d95879764b8647a263cb007a" translate="yes" xml:space="preserve">
          <source>lgammal</source>
          <target state="translated">lgammal</target>
        </trans-unit>
        <trans-unit id="f0a73fde553218755a887097b1f425a05551c8bd" translate="yes" xml:space="preserve">
          <source>lgammalgammaflgammal</source>
          <target state="translated">lgammalgammaflgammal</target>
        </trans-unit>
        <trans-unit id="1eca3aa9ac529ba38c4faf0bc37d60555df58440" translate="yes" xml:space="preserve">
          <source>lhs</source>
          <target state="translated">lhs</target>
        </trans-unit>
        <trans-unit id="677dc8b75b32c63163f506b703c7b3c5707b5e1b" translate="yes" xml:space="preserve">
          <source>lhs has pointer to complete object type, rhs has integer type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7156c1a007170fbb4e57442f2ab06221274855e8" translate="yes" xml:space="preserve">
          <source>lhs has type &lt;code&gt;_Bool&lt;/code&gt; (possibly qualified or atomic) and rhs is a pointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7011a13ff58c13b7998eacef75af7dd4d6258bb" translate="yes" xml:space="preserve">
          <source>lhs is a pointer (possibly qualified or atomic) and rhs is a null pointer constant such as &lt;code&gt;&lt;a href=&quot;../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40aa927592879319a56b1c11e7138669a812fd0" translate="yes" xml:space="preserve">
          <source>lhs, rhs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7056c65a0fc98eb49ea3f54a93d2654d76569f" translate="yes" xml:space="preserve">
          <source>lhs&lt;code&gt;!=&lt;/code&gt;rhs</source>
          <target state="translated">lhs&lt;code&gt;!=&lt;/code&gt;rhs</target>
        </trans-unit>
        <trans-unit id="d77ecd070a63ee15dd427d4e7a59412a815d68e4" translate="yes" xml:space="preserve">
          <source>lhs&lt;code&gt;%&lt;/code&gt;rhs</source>
          <target state="translated">lhs&lt;code&gt;%&lt;/code&gt;rhs</target>
        </trans-unit>
        <trans-unit id="0242d6ffcfc8a8bf1baafcefc516c938022fcbec" translate="yes" xml:space="preserve">
          <source>lhs&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;rhs</source>
          <target state="translated">lhs&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;rhs</target>
        </trans-unit>
        <trans-unit id="0a7ed2dcbef4cc85904fc4126595c5deace58ed9" translate="yes" xml:space="preserve">
          <source>lhs&lt;code&gt;&amp;amp;&lt;/code&gt;rhs</source>
          <target state="translated">lhs&lt;code&gt;&amp;amp;&lt;/code&gt;rhs</target>
        </trans-unit>
        <trans-unit id="852b343ec709deb6d344c0aac535f46286b03ddc" translate="yes" xml:space="preserve">
          <source>lhs&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;rhs</source>
          <target state="translated">lhs&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;rhs</target>
        </trans-unit>
        <trans-unit id="9dec3ac077e820b31fee0e26657e00ed0267e3c3" translate="yes" xml:space="preserve">
          <source>lhs&lt;code&gt;&amp;gt;&lt;/code&gt;rhs</source>
          <target state="translated">lhs&lt;code&gt;&amp;gt;&lt;/code&gt;rhs</target>
        </trans-unit>
        <trans-unit id="79ca82c1def46747f30f41de070692095d9869fc" translate="yes" xml:space="preserve">
          <source>lhs&lt;code&gt;&amp;gt;=&lt;/code&gt;rhs</source>
          <target state="translated">lhs&lt;code&gt;&amp;gt;=&lt;/code&gt;rhs</target>
        </trans-unit>
        <trans-unit id="b244225a625086259ea2e868765a1a2476dd27c0" translate="yes" xml:space="preserve">
          <source>lhs&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;rhs</source>
          <target state="translated">lhs&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;rhs</target>
        </trans-unit>
        <trans-unit id="eb9df6eed9a2c8ceba7d17e2cb57e2ad338c30d7" translate="yes" xml:space="preserve">
          <source>lhs&lt;code&gt;&amp;lt;&lt;/code&gt;rhs</source>
          <target state="translated">lhs&lt;code&gt;&amp;lt;&lt;/code&gt;rhs</target>
        </trans-unit>
        <trans-unit id="25a64aa7cc0682c978ca474fd3c27a233fb0566e" translate="yes" xml:space="preserve">
          <source>lhs&lt;code&gt;&amp;lt;=&lt;/code&gt;rhs</source>
          <target state="translated">lhs&lt;code&gt;&amp;lt;=&lt;/code&gt;rhs</target>
        </trans-unit>
        <trans-unit id="586986f84b2266070fbba9df17972b9c5846c2bb" translate="yes" xml:space="preserve">
          <source>lhs&lt;code&gt;*&lt;/code&gt;rhs</source>
          <target state="translated">lhs&lt;code&gt;*&lt;/code&gt;rhs</target>
        </trans-unit>
        <trans-unit id="ae07e659b4f00603999420cda0506cfa04de695d" translate="yes" xml:space="preserve">
          <source>lhs&lt;code&gt;+&lt;/code&gt;rhs</source>
          <target state="translated">lhs&lt;code&gt;+&lt;/code&gt;rhs</target>
        </trans-unit>
        <trans-unit id="369d0fe00989935f3ef1bd489f108088b27d14ea" translate="yes" xml:space="preserve">
          <source>lhs&lt;code&gt;,&lt;/code&gt;rhs</source>
          <target state="translated">lhs&lt;code&gt;,&lt;/code&gt;rhs</target>
        </trans-unit>
        <trans-unit id="d53e3d3a2b4ab682ec88b7d57290d9ca5baedf46" translate="yes" xml:space="preserve">
          <source>lhs&lt;code&gt;-&lt;/code&gt;rhs</source>
          <target state="translated">lhs&lt;code&gt;-&lt;/code&gt;rhs</target>
        </trans-unit>
        <trans-unit id="c8c16d0a46550ac8d5e4cd3a4e8d994e4ee200dc" translate="yes" xml:space="preserve">
          <source>lhs&lt;code&gt;/&lt;/code&gt;rhs</source>
          <target state="translated">lhs&lt;code&gt;/&lt;/code&gt;rhs</target>
        </trans-unit>
        <trans-unit id="d89db968b9e2e0bc9e6e1f9e342db3f2bca1ac48" translate="yes" xml:space="preserve">
          <source>lhs&lt;code&gt;=&lt;/code&gt;rhs</source>
          <target state="translated">lhs&lt;code&gt;=&lt;/code&gt;rhs</target>
        </trans-unit>
        <trans-unit id="5bc143a2c00c074518aaca5e1d1342afd66bdafe" translate="yes" xml:space="preserve">
          <source>lhs&lt;code&gt;==&lt;/code&gt;rhs</source>
          <target state="translated">lhs&lt;code&gt;==&lt;/code&gt;rhs</target>
        </trans-unit>
        <trans-unit id="cdb3c2ee844a46336343447a0364833ff13f89df" translate="yes" xml:space="preserve">
          <source>lhs&lt;code&gt;^&lt;/code&gt;rhs</source>
          <target state="translated">lhs&lt;code&gt;^&lt;/code&gt;rhs</target>
        </trans-unit>
        <trans-unit id="11db6dd0d61465b4c983d11a0846277ace067b77" translate="yes" xml:space="preserve">
          <source>lhs&lt;code&gt;|&lt;/code&gt;rhs</source>
          <target state="translated">lhs&lt;code&gt;|&lt;/code&gt;rhs</target>
        </trans-unit>
        <trans-unit id="6304d1d4fd583a8a4de4bca5f5c6569afd58972b" translate="yes" xml:space="preserve">
          <source>lhs&lt;code&gt;||&lt;/code&gt;rhs</source>
          <target state="translated">lhs&lt;code&gt;||&lt;/code&gt;rhs</target>
        </trans-unit>
        <trans-unit id="6ca72084953328fcab0ec8d017a9468944a89a13" translate="yes" xml:space="preserve">
          <source>lhsoprhs</source>
          <target state="translated">lhsoprhs</target>
        </trans-unit>
        <trans-unit id="00299a408dc3498a3cd7bae6db588f3324654d76" translate="yes" xml:space="preserve">
          <source>library</source>
          <target state="translated">library</target>
        </trans-unit>
        <trans-unit id="ba1d32fcf830168f963462f731e4546b662bcec6" translate="yes" xml:space="preserve">
          <source>lifetime</source>
          <target state="translated">lifetime</target>
        </trans-unit>
        <trans-unit id="0e82a885c4751c2fdff0ce8c43313506e17c3e28" translate="yes" xml:space="preserve">
          <source>limit on the number of bytes in s that can be examined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d47f0289bd8f498418fd9a7881dafdbc1afef8" translate="yes" xml:space="preserve">
          <source>line break</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e667c693da9f4a8ac06bdb006556f37ca5325a" translate="yes" xml:space="preserve">
          <source>line buffering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187b6974e98b3e686ccfa6b34933167d1053f1a0" translate="yes" xml:space="preserve">
          <source>line feed - new line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa7008744c62d2981fbbdd0904715176cfd6aa2" translate="yes" xml:space="preserve">
          <source>lineno must be a sequence of at least one decimal digit (the program is ill-formed, otherwise) and is always interpreted as decimal (even if it starts with &lt;code&gt;0&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b0cc490d0dd926b363f64387053ee3a9187d7c" translate="yes" xml:space="preserve">
          <source>linkage</source>
          <target state="translated">linkage</target>
        </trans-unit>
        <trans-unit id="06b885bff885d267d7cd6bec9de0085b98c02211" translate="yes" xml:space="preserve">
          <source>list of initializers suitable for &lt;a href=&quot;initialization&quot;&gt;initialization&lt;/a&gt; of an object of type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c19ddcdec5f37aac4764f6155aa028678500ba" translate="yes" xml:space="preserve">
          <source>listed in phase 1 have single-byte representations). If the character specified by an escape sequence isn't a member of the execution character set, the result is implementation-defined, but is guaranteed to not be a null (wide) character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aadf46ad52b563db141c6a8b633250cb09e7740c" translate="yes" xml:space="preserve">
          <source>little-endian</source>
          <target state="translated">little-endian</target>
        </trans-unit>
        <trans-unit id="e8194ca096dd2e313fc5227ea03a332ea303b178" translate="yes" xml:space="preserve">
          <source>llabs</source>
          <target state="translated">llabs</target>
        </trans-unit>
        <trans-unit id="8a571bb76d84c390fdabd516f88ba7e1ed4bfca4" translate="yes" xml:space="preserve">
          <source>lldiv</source>
          <target state="translated">lldiv</target>
        </trans-unit>
        <trans-unit id="3d3b136b4e83db1bd45fe13e2c27a8a3cbb8a2e9" translate="yes" xml:space="preserve">
          <source>lldiv_t</source>
          <target state="translated">lldiv_t</target>
        </trans-unit>
        <trans-unit id="7c04541109a5b1b1434d89f2de1926a35360e24d" translate="yes" xml:space="preserve">
          <source>llrint</source>
          <target state="translated">llrint</target>
        </trans-unit>
        <trans-unit id="66a9b74abf4430e2c9dc2abbc8135817d02323d1" translate="yes" xml:space="preserve">
          <source>llround</source>
          <target state="translated">llround</target>
        </trans-unit>
        <trans-unit id="05ce53aad601cbbc2e91ed7f9bd3f16f37b5d3c3" translate="yes" xml:space="preserve">
          <source>ln(</source>
          <target state="translated">ln(</target>
        </trans-unit>
        <trans-unit id="84d9be0de438b8414d47620dec7c3120559c7a6b" translate="yes" xml:space="preserve">
          <source>ln(1+z)-ln(z-1)</source>
          <target state="translated">ln(1+z)-ln(z-1)</target>
        </trans-unit>
        <trans-unit id="0e038a42cca30122c3324dfda646d3f079374dd5" translate="yes" xml:space="preserve">
          <source>locale</source>
          <target state="translated">locale</target>
        </trans-unit>
        <trans-unit id="c44d53b2c97694f90468c5314b680b2c9d640f09" translate="yes" xml:space="preserve">
          <source>locale categories for &lt;code&gt;&lt;a href=&quot;locale/setlocale&quot;&gt;setlocale&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243616947e9e4439cf020cf8febe1c5c1ed3ae08" translate="yes" xml:space="preserve">
          <source>locale categories for &lt;code&gt;setlocale&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375fa19820dd6f3da683d4048022af2066cade92" translate="yes" xml:space="preserve">
          <source>locale category identifier, one of the &lt;a href=&quot;lc_categories&quot;&gt;LC_xxx&lt;/a&gt; macros. May be null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62f111e724be09060968fedfdfe9c19ab5c465e" translate="yes" xml:space="preserve">
          <source>locale-specific behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dede1c0d1294472a85993c15fbed5d1b1bf59e5d" translate="yes" xml:space="preserve">
          <source>localeconv</source>
          <target state="translated">localeconv</target>
        </trans-unit>
        <trans-unit id="112ad43f7dd838f8e905a4ccaa51f82e03de12d2" translate="yes" xml:space="preserve">
          <source>localtime, localtime_s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85bf3a7f7b346739e0186ba76269266330ce20eb" translate="yes" xml:space="preserve">
          <source>localtime_s</source>
          <target state="translated">localtime_s</target>
        </trans-unit>
        <trans-unit id="9b00fc36c352a84dcb1ed7d92c03aa8c4f631a82" translate="yes" xml:space="preserve">
          <source>localtimelocaltime_s</source>
          <target state="translated">localtimelocaltime_s</target>
        </trans-unit>
        <trans-unit id="94b4bf442d000b4f3c7ad29cb6a09f2483c3d910" translate="yes" xml:space="preserve">
          <source>location to put the result code to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d32c0a177b280ccc4d0860aecf6e773bcc46ac" translate="yes" xml:space="preserve">
          <source>lock-free atomic boolean flag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acbe0af15fb020af22d88b51d0894ec0d4adc549" translate="yes" xml:space="preserve">
          <source>locks a mutex or returns without blocking if already locked</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7babc233de26ab19ead1b9c278128d5c434910ee" translate="yes" xml:space="preserve">
          <source>log</source>
          <target state="translated">log</target>
        </trans-unit>
        <trans-unit id="7be4e55a1309b50f194265a4191c096575044bd9" translate="yes" xml:space="preserve">
          <source>log, logf, logl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd303ce8c67a19dcb9bce227396fb2a401cd042" translate="yes" xml:space="preserve">
          <source>log10</source>
          <target state="translated">log10</target>
        </trans-unit>
        <trans-unit id="ce65584ee3e07dcb9742744272f6cb9dc9ed994b" translate="yes" xml:space="preserve">
          <source>log10, log10f, log10l</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b7fc14694ee5deff2339afbaac5c0f54aa4d54" translate="yes" xml:space="preserve">
          <source>log10l</source>
          <target state="translated">log10l</target>
        </trans-unit>
        <trans-unit id="64dc4c4ce73f53267c71d4043133ac2ba8611866" translate="yes" xml:space="preserve">
          <source>log10log10flog10l</source>
          <target state="translated">log10log10flog10l</target>
        </trans-unit>
        <trans-unit id="008391a6494b0a1a3990b931239d73dda4761f08" translate="yes" xml:space="preserve">
          <source>log1p</source>
          <target state="translated">log1p</target>
        </trans-unit>
        <trans-unit id="35124ea62eb30bc41190e7f7a26fc301a5702cdd" translate="yes" xml:space="preserve">
          <source>log1p, log1pf, log1pl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f745593adc27515f468867b339621641fd6b3a7" translate="yes" xml:space="preserve">
          <source>log1pl</source>
          <target state="translated">log1pl</target>
        </trans-unit>
        <trans-unit id="67ac89de49558345687e0b22cba1628522f8e170" translate="yes" xml:space="preserve">
          <source>log1plog1pflog1pl</source>
          <target state="translated">log1plog1pflog1pl</target>
        </trans-unit>
        <trans-unit id="8272fbd4ea89b69b3ccf4f94a9578f957614acd7" translate="yes" xml:space="preserve">
          <source>log2</source>
          <target state="translated">log2</target>
        </trans-unit>
        <trans-unit id="4a796d5de9467e0a3cad7f6ac39e61d381c1a2ec" translate="yes" xml:space="preserve">
          <source>log2, log2f, log2l</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff00ed2e385edf7d3b16db67989ac1f98271163" translate="yes" xml:space="preserve">
          <source>log2l</source>
          <target state="translated">log2l</target>
        </trans-unit>
        <trans-unit id="dd41a8035c4489b6af4497edf2595ba25b88ee61" translate="yes" xml:space="preserve">
          <source>log2log2flog2l</source>
          <target state="translated">log2log2flog2l</target>
        </trans-unit>
        <trans-unit id="0a5865da5ce1b67ecbd7dc1cdb3cedada55a21d8" translate="yes" xml:space="preserve">
          <source>logarithm of &lt;code&gt;arg&lt;/code&gt; (log</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19915c0c6861ef3c8ae328541f9e0266a5ccfda9" translate="yes" xml:space="preserve">
          <source>logb</source>
          <target state="translated">logb</target>
        </trans-unit>
        <trans-unit id="3397a1626ad58e34c9cf4941d0ff16eb5df60163" translate="yes" xml:space="preserve">
          <source>logb, logbf, logbl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370aa750f3914b253fef1556c185af39458370f6" translate="yes" xml:space="preserve">
          <source>logbl</source>
          <target state="translated">logbl</target>
        </trans-unit>
        <trans-unit id="3a5062380bd8802d66580b32f048772ed880b938" translate="yes" xml:space="preserve">
          <source>logblogbflogbl</source>
          <target state="translated">logblogbflogbl</target>
        </trans-unit>
        <trans-unit id="38dd66928079819674d735fcd8176fe58a1d7607" translate="yes" xml:space="preserve">
          <source>logical</source>
          <target state="translated">logical</target>
        </trans-unit>
        <trans-unit id="268437e9bd2e099a9f82701e5f6bc2d784b2fc62" translate="yes" xml:space="preserve">
          <source>logical AND</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef719b9bb4e71ca6f34eaf8da36a6dce28cb9a1e" translate="yes" xml:space="preserve">
          <source>logical NOT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7885a0b6df2add59817cfee480cdaf87d6b5b971" translate="yes" xml:space="preserve">
          <source>logical OR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a7e925de15747a2c4de82f77c051b47b26389ea" translate="yes" xml:space="preserve">
          <source>logl</source>
          <target state="translated">logl</target>
        </trans-unit>
        <trans-unit id="1cf0caf245bfde0757b40b8e8c45ee444906c122" translate="yes" xml:space="preserve">
          <source>loglogflogl</source>
          <target state="translated">loglogflogl</target>
        </trans-unit>
        <trans-unit id="bd3027fa569ea15ca76d84db21c67e2d514c1a5a" translate="yes" xml:space="preserve">
          <source>long</source>
          <target state="translated">long</target>
        </trans-unit>
        <trans-unit id="76224d2221094e2497c214a4a8efcf04355abea6" translate="yes" xml:space="preserve">
          <source>long tv_nsec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d037b847aa1711bf14b51ebc555fa9444c042e87" translate="yes" xml:space="preserve">
          <source>long-suffix (the character &lt;code&gt;l&lt;/code&gt; or the character &lt;code&gt;L&lt;/code&gt;) or the long-long-suffix (the character sequence &lt;code&gt;ll&lt;/code&gt; or the character sequence &lt;code&gt;LL&lt;/code&gt;)(since C99)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db80fe1858b7298b4f93ba11b5eec308b2efe052" translate="yes" xml:space="preserve">
          <source>longjmp</source>
          <target state="translated">longjmp</target>
        </trans-unit>
        <trans-unit id="6146b08ab050672210b7212942f8767215a2c79b" translate="yes" xml:space="preserve">
          <source>looks up a character classification category in the current C locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd2da9b64fc4564e19a18b189fea010414d7f83" translate="yes" xml:space="preserve">
          <source>looks up a character mapping category in the current C locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b12a783325a5adc14186016f4554df90131a613c" translate="yes" xml:space="preserve">
          <source>loop_statement is not optional, but it may be a null statement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479cb585c22136210c7fb6dfec93e71f5df30b2e" translate="yes" xml:space="preserve">
          <source>lowercase letters (&lt;code&gt;abcdefghijklmnopqrstuvwxyz&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197ba0c98538cd944c4c3856f3d2e8f2011c6571" translate="yes" xml:space="preserve">
          <source>lrint</source>
          <target state="translated">lrint</target>
        </trans-unit>
        <trans-unit id="15cff4a5430a12ca9198fe38c0fa03146015ca47" translate="yes" xml:space="preserve">
          <source>lround</source>
          <target state="translated">lround</target>
        </trans-unit>
        <trans-unit id="1f139701edafc10f11e787a76e84c429bffa53d3" translate="yes" xml:space="preserve">
          <source>lvalue contexts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b984fc87eb8ad3a2daef32be299cd842106358f" translate="yes" xml:space="preserve">
          <source>lvalue conversion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60895c899e8ed347549784876fe230b97897324" translate="yes" xml:space="preserve">
          <source>lvalue expressions of array type, when used in most contexts, undergo an &lt;a href=&quot;conversion&quot;&gt;implicit conversion&lt;/a&gt; to the pointer to the first element of the array. See &lt;a href=&quot;array#Array_to_pointer_conversion&quot;&gt;array&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bbfda3c4e4de7ef89edbf20b47730c4c1b815bc" translate="yes" xml:space="preserve">
          <source>lvalue-expression</source>
          <target state="translated">lvalue-expression</target>
        </trans-unit>
        <trans-unit id="d090b51fdef025d99d457de87883fd38f29af3ca" translate="yes" xml:space="preserve">
          <source>macro names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33b837d8a421962ebbc41b569d30e27d53a1d5b" translate="yes" xml:space="preserve">
          <source>macro which expands to POSIX-compatible thread-local error number variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57551f7c9531c1174ab0da2bbc9754773c4696b" translate="yes" xml:space="preserve">
          <source>macros for standard POSIX-compatible error conditions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90aab07335eba81e8967fa716ddc0217f842ecef" translate="yes" xml:space="preserve">
          <source>makes a copy of the variadic function arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9a1c48d66a548e9b603740fb063b6f9faad86c" translate="yes" xml:space="preserve">
          <source>malloc</source>
          <target state="translated">malloc</target>
        </trans-unit>
        <trans-unit id="c3f0bfe976a399c77a089eca7e7c765ef597ab72" translate="yes" xml:space="preserve">
          <source>matches a &lt;b&gt;character&lt;/b&gt; or a sequence of &lt;b&gt;characters&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6cb162c68340ad9f18e906aa1967ce24d63529" translate="yes" xml:space="preserve">
          <source>matches a &lt;b&gt;decimal integer&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb4f10c42fe419dd072f6a22a1fad127f15b354" translate="yes" xml:space="preserve">
          <source>matches a &lt;b&gt;floating-point number&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6f7326a69a49fedde44461cccd231c30bf157e" translate="yes" xml:space="preserve">
          <source>matches a non-empty sequence of character from set of characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094fb9cc218c71a18d0862e4d2f607d35761b0c8" translate="yes" xml:space="preserve">
          <source>matches a sequence of non-whitespace characters (a &lt;b&gt;string&lt;/b&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5005712b9e553c0922e8c7082591fcd0dc4f26" translate="yes" xml:space="preserve">
          <source>matches an &lt;b&gt;integer&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf037610b70082c10e4ab4447e597707f9aacc72" translate="yes" xml:space="preserve">
          <source>matches an unsigned &lt;b&gt;decimal integer&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d086b9970de956559aeb632c45f14c592b85a63" translate="yes" xml:space="preserve">
          <source>matches an unsigned &lt;b&gt;hexadecimal integer&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f1cd287ae2a47e30b23f7b7de42e8ca379182e" translate="yes" xml:space="preserve">
          <source>matches an unsigned &lt;b&gt;octal integer&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09fd3e3cff3172f46da3df622e21413da7c17e8a" translate="yes" xml:space="preserve">
          <source>matches implementation defined character sequence defining a &lt;b&gt;pointer&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae095b4cb9e7f257943ffd91ae4dd0f813471b6" translate="yes" xml:space="preserve">
          <source>matches literal &lt;code&gt;%&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="315cef0b25d3eac86550815df5d361fdeaed459d" translate="yes" xml:space="preserve">
          <source>math_errhandlingMATH_ERRNOMATH_ERREXCEPT</source>
          <target state="translated">math_errhandlingMATH_ERRNOMATH_ERREXCEPT</target>
        </trans-unit>
        <trans-unit id="f6d685070186fde6acbd51b826422b5de1aa8323" translate="yes" xml:space="preserve">
          <source>max number of bytes that will be written (size of the &lt;code&gt;dst&lt;/code&gt; array)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029ef692faa2d53e614afa72a024114c94cb1879" translate="yes" xml:space="preserve">
          <source>max number of bytes to modify in the destination (typically the size of the destination object)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fbad64d56582fc7952bdd589e0fedd312f9b928" translate="yes" xml:space="preserve">
          <source>max number of bytes to output, typically the size of the buffer pointed to by &lt;code&gt;buffer&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5983430eed7e3f8d1bf75892bce6de283b910e91" translate="yes" xml:space="preserve">
          <source>max number of bytes to write (the size of the buffer &lt;code&gt;s&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d1330be4b744724ca62c2e1acf948e3ed482a6" translate="yes" xml:space="preserve">
          <source>max number of characters to examine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3483ddfe769ef6cd928be5d4480167b5bbf452cb" translate="yes" xml:space="preserve">
          <source>max number of wide characters that will be written (size of the &lt;code&gt;dst&lt;/code&gt; array)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b7b09dc3a108aba478c1b5dcd0a0de0adb5789" translate="yes" xml:space="preserve">
          <source>max number of wide characters to write (the size of the destination buffer)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2b082309c39a5e7f5dbfb53df9e5e7a8d13284" translate="yes" xml:space="preserve">
          <source>max:</source>
          <target state="translated">max:</target>
        </trans-unit>
        <trans-unit id="b311cd078b7f94716db2622ce5167340f9fb35d4" translate="yes" xml:space="preserve">
          <source>max_align_t</source>
          <target state="translated">max_align_t</target>
        </trans-unit>
        <trans-unit id="18b7158037be67d6e9ed42de4a49624e523caf28" translate="yes" xml:space="preserve">
          <source>maximal munch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52bb792ca7ea0bbb1ffab9f2ebbae4d42e1c08a" translate="yes" xml:space="preserve">
          <source>maximum field width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af2e579ed4fa20a865b2600a1693c68098fad5c" translate="yes" xml:space="preserve">
          <source>maximum number of bytes in a multibyte character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a364aae818ede7e2102b39a2b942fe2a994f6f70" translate="yes" xml:space="preserve">
          <source>maximum number of bytes in a multibyte character, for any supported locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c48b6142f7a8fc8ed4cdb0579f6d4cb9569ab4" translate="yes" xml:space="preserve">
          <source>maximum number of bytes in a multibyte character, in the current locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac990a59dfff96c6e5d8d8ad210f1153f5cae159" translate="yes" xml:space="preserve">
          <source>maximum number of bytes to write</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9958b714bcc564415f17b79659bf621c37beb49" translate="yes" xml:space="preserve">
          <source>maximum number of bytes to write to &lt;code&gt;s&lt;/code&gt; (size of the array &lt;code&gt;s&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b93e2c8be291c165c5d6b266de807478c80a7b" translate="yes" xml:space="preserve">
          <source>maximum number of characters that getenv_s is allowed to write to dest (size of the buffer)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fc659eacbdfcc6597a486752ca6bd5c5b52591" translate="yes" xml:space="preserve">
          <source>maximum number of characters the function is allowed to write (typically the size of the &lt;code&gt;filename_s&lt;/code&gt; array).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20237950817f8cbe58d0f5eae9e05fff6a088b8a" translate="yes" xml:space="preserve">
          <source>maximum number of characters to be written</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee00c493aadeee4513fd44847d9a3b1787f0645c" translate="yes" xml:space="preserve">
          <source>maximum number of characters to compare</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b731627f47dd1fa6948ad31ecae8195ae54f74" translate="yes" xml:space="preserve">
          <source>maximum number of characters to copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4a7cfcfdefdafff7381f2d93032c881da9347f" translate="yes" xml:space="preserve">
          <source>maximum number of characters to examine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04856dd201b185aaa3dc0de457e1d1200b5fb7e2" translate="yes" xml:space="preserve">
          <source>maximum number of characters to output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8bb4538dc171ff9c19a01b9fc1ae79317a5cb6" translate="yes" xml:space="preserve">
          <source>maximum number of characters to write (typically the length of &lt;code&gt;str&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="325e1bebf58d59887fabd0ee1129f8c73e354649" translate="yes" xml:space="preserve">
          <source>maximum number of characters to write, typically the size of the destination buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e07603a89d8c48bd689ceb086a9d4a5319894b" translate="yes" xml:space="preserve">
          <source>maximum number of files that can be open simultaneously</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba6e6a78d7c3754b4fc0434d2396a6b044c18405" translate="yes" xml:space="preserve">
          <source>maximum number of times destructors are called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba77ec69b191436a62ec45dd63ab487df9007db" translate="yes" xml:space="preserve">
          <source>maximum number of unique filenames that can be generated by &lt;code&gt;&lt;a href=&quot;io/tmpnam&quot;&gt;tmpnam&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86af059c1f26b36e8f51ad6a7a150e34ccefd8bb" translate="yes" xml:space="preserve">
          <source>maximum number of unique filenames that can be generated by &lt;code&gt;tmpnam_s&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7f3aa1bb962f2499119f3691de220022859259" translate="yes" xml:space="preserve">
          <source>maximum number of wide characters to copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee48a1f671bf6dfdd15b0d6e7607c523184c5c8c" translate="yes" xml:space="preserve">
          <source>maximum number of wide characters to examine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7974421f2c34230a34133287d19d9f9ed857f66" translate="yes" xml:space="preserve">
          <source>maximum number of wide characters to write</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d824942b8ff9c9d8a31bcc8e11af88b3d42719" translate="yes" xml:space="preserve">
          <source>maximum positive integer such that &lt;code&gt;10&lt;/code&gt; raised by power one less than that integer is a normalized &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt; and &lt;code&gt;long double&lt;/code&gt; respectively</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a64fa890fdb92b1d065b9fdf088cf19a030eb2" translate="yes" xml:space="preserve">
          <source>maximum positive integer such that &lt;code&gt;FLT_RADIX&lt;/code&gt; raised by power one less than that integer is a normalized &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt; and &lt;code&gt;long double&lt;/code&gt; respectively</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7ee078bfeb025f7f4f560d89159c3ab5dd6794" translate="yes" xml:space="preserve">
          <source>maximum possible value generated by &lt;code&gt;&lt;a href=&quot;rand&quot;&gt;rand&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3a8874a5010c6e81746fc3907c1cd626426d7d" translate="yes" xml:space="preserve">
          <source>maximum possible value generated by &lt;code&gt;&lt;a href=&quot;random/rand&quot;&gt;rand&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba144572e86038726ad2a3dfcc80c7669aaa8bc2" translate="yes" xml:space="preserve">
          <source>maximum possible value generated by &lt;code&gt;rand()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f04ad7d3b5ac50875dc10377fea9fe0ab913b46" translate="yes" xml:space="preserve">
          <source>maximum value of &lt;code&gt;char&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6d5c3fd7937ff691efcd11dd0c622208be355d" translate="yes" xml:space="preserve">
          <source>maximum value of &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt; and &lt;code&gt;long double&lt;/code&gt; respectively</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366f2f411973f76187d15360e6caa0aaa6f8701d" translate="yes" xml:space="preserve">
          <source>maximum value of &lt;code&gt;signed char&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt; and &lt;code&gt;long long&lt;/code&gt; respectively</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a422293067268e30e9766c2d37e2588cc58ec6" translate="yes" xml:space="preserve">
          <source>maximum value of &lt;code&gt;unsigned char&lt;/code&gt;, &lt;code&gt;unsigned short&lt;/code&gt;, &lt;code&gt;unsigned int&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971fd26603b800731dd4725ed2a799d47d796571" translate="yes" xml:space="preserve">
          <source>maximum value of an object of type &lt;code&gt;int8_t&lt;/code&gt;, &lt;code&gt;int16_t&lt;/code&gt;, &lt;code&gt;int32_t&lt;/code&gt;, &lt;code&gt;int64_t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e6bcbc2a1de2239b7697b6f0c5db9da577919a" translate="yes" xml:space="preserve">
          <source>maximum value of an object of type &lt;code&gt;int_fast8_t&lt;/code&gt;, &lt;code&gt;int_fast16_t&lt;/code&gt;, &lt;code&gt;int_fast32_t&lt;/code&gt;, &lt;code&gt;int_fast64_t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebda8815968ab0c93105ad4df1c9705ec8912430" translate="yes" xml:space="preserve">
          <source>maximum value of an object of type &lt;code&gt;int_least8_t&lt;/code&gt;, &lt;code&gt;int_least16_t&lt;/code&gt;, &lt;code&gt;int_least32_t&lt;/code&gt;, &lt;code&gt;int_least64_t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef855dd9dc6c51c093cb7fff92a522e1d88f0fee" translate="yes" xml:space="preserve">
          <source>maximum value of an object of type &lt;code&gt;intmax_t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab26ddc7675aebc9b1507086b6b6b4bf0f036e4" translate="yes" xml:space="preserve">
          <source>maximum value of an object of type &lt;code&gt;intptr_t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1f4b57d07ca4db8b3cbfa2c68b0ec1387cae9c" translate="yes" xml:space="preserve">
          <source>maximum value of an object of type &lt;code&gt;uint8_t&lt;/code&gt;, &lt;code&gt;uint16_t&lt;/code&gt;, &lt;code&gt;uint32_t&lt;/code&gt;, &lt;code&gt;uint64_t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88c7b52248ac6ddb80dbfc529d22d2b1f6a2821" translate="yes" xml:space="preserve">
          <source>maximum value of an object of type &lt;code&gt;uint_fast8_t&lt;/code&gt;, &lt;code&gt;uint_fast16_t&lt;/code&gt;, &lt;code&gt;uint_fast32_t&lt;/code&gt;, &lt;code&gt;uint_fast64_t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb95aa957aefd1f617cd3f61cb852d7ce7798593" translate="yes" xml:space="preserve">
          <source>maximum value of an object of type &lt;code&gt;uint_least8_t&lt;/code&gt;, &lt;code&gt;uint_least16_t&lt;/code&gt;, &lt;code&gt;uint_least32_t&lt;/code&gt;, &lt;code&gt;uint_least64_t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dea712a888ef9873a611f70897923801cdd572d" translate="yes" xml:space="preserve">
          <source>maximum value of an object of type &lt;code&gt;uintmax_t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f58ac017ce56912018fe618c7907830c2f14fce" translate="yes" xml:space="preserve">
          <source>maximum value of an object of type &lt;code&gt;uintptr_t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f194e01febe551bc804aa3b4cac9d2176c471fb" translate="yes" xml:space="preserve">
          <source>maximum value of object of &lt;code&gt;&lt;a href=&quot;../program/sig_atomic_t&quot;&gt;sig_atomic_t&lt;/a&gt;&lt;/code&gt; type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="502bc820f2ec56a5cec82dcadc31993cda10f60d" translate="yes" xml:space="preserve">
          <source>maximum value of object of &lt;code&gt;&lt;a href=&quot;ptrdiff_t&quot;&gt;ptrdiff_t&lt;/a&gt;&lt;/code&gt; type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7a9e891812ccf605cc7876889e7115ace5bf17" translate="yes" xml:space="preserve">
          <source>maximum value of object of &lt;code&gt;&lt;a href=&quot;size_t&quot;&gt;size_t&lt;/a&gt;&lt;/code&gt; type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3fb5e9eea018610e4077a834da827b994e7f27" translate="yes" xml:space="preserve">
          <source>maximum value of object of &lt;code&gt;wchar_t&lt;/code&gt; type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab906b3c67c40f2af9531506ad04791d5717aa99" translate="yes" xml:space="preserve">
          <source>maximum value of object of &lt;code&gt;wint_t&lt;/code&gt; type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527b31952d10f6e6fc078ec119b0952d39c16a3d" translate="yes" xml:space="preserve">
          <source>maximum width integer type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b31444237f5c45865a14baa3ddeb203790649b2" translate="yes" xml:space="preserve">
          <source>maximum width unsigned integer type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e81b4cc63bcd3ef0cc5d803e0069f94e9e6647c" translate="yes" xml:space="preserve">
          <source>maxsize</source>
          <target state="translated">maxsize</target>
        </trans-unit>
        <trans-unit id="d532cc705e33c0e865a5185d4420786096f2821e" translate="yes" xml:space="preserve">
          <source>may be compiled as (&lt;a href=&quot;https://godbolt.org/z/D249FL&quot;&gt;demo&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e09bf24a1754cd94b1d2e6b995bca9782d3d92" translate="yes" xml:space="preserve">
          <source>may be compiled as (&lt;a href=&quot;https://godbolt.org/z/W6nz9j&quot;&gt;foo with gcc, bar with clang&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3830d62f93e2bad29a086959b345dd572594acc" translate="yes" xml:space="preserve">
          <source>may occur:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb010223b4d7de38e8b50ce30d83400d62815a90" translate="yes" xml:space="preserve">
          <source>mblen</source>
          <target state="translated">mblen</target>
        </trans-unit>
        <trans-unit id="cb4862a51326fd34fc81adf9a50a8e14e03d907e" translate="yes" xml:space="preserve">
          <source>mbrlen</source>
          <target state="translated">mbrlen</target>
        </trans-unit>
        <trans-unit id="b16714ba698f2a971d861272700e4faf338b6c19" translate="yes" xml:space="preserve">
          <source>mbrtoc16</source>
          <target state="translated">mbrtoc16</target>
        </trans-unit>
        <trans-unit id="35b4b1d73ef33e686af4af5f1ba9430aeaf4dfa6" translate="yes" xml:space="preserve">
          <source>mbrtoc32</source>
          <target state="translated">mbrtoc32</target>
        </trans-unit>
        <trans-unit id="ff5349709928c1326418d17eb27a0f50fef2465f" translate="yes" xml:space="preserve">
          <source>mbrtowc</source>
          <target state="translated">mbrtowc</target>
        </trans-unit>
        <trans-unit id="a68b02acff2c2131b0415a748d16aab10d7b483d" translate="yes" xml:space="preserve">
          <source>mbsinit</source>
          <target state="translated">mbsinit</target>
        </trans-unit>
        <trans-unit id="589ac1f9a3ac19c5855291301ac4d94b9b9f4fda" translate="yes" xml:space="preserve">
          <source>mbsrtowcs, mbsrtowcs_s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b980700243603bf84310ce4ec780606a6aa9a881" translate="yes" xml:space="preserve">
          <source>mbsrtowcs_s</source>
          <target state="translated">mbsrtowcs_s</target>
        </trans-unit>
        <trans-unit id="448035d300835137e271330218894e4dde4f276a" translate="yes" xml:space="preserve">
          <source>mbsrtowcsmbsrtowcs_s</source>
          <target state="translated">mbsrtowcsmbsrtowcs_s</target>
        </trans-unit>
        <trans-unit id="729d177da43aa164704e309f897d35005f35cd07" translate="yes" xml:space="preserve">
          <source>mbstate_t</source>
          <target state="translated">mbstate_t</target>
        </trans-unit>
        <trans-unit id="9564a7a9c71df8f74be4575f991f38f7272cf5f3" translate="yes" xml:space="preserve">
          <source>mbstowcs, mbstowcs_s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d36d7ffb7f8f7717bae8d29b1ace8dceb35e30a" translate="yes" xml:space="preserve">
          <source>mbstowcs_s</source>
          <target state="translated">mbstowcs_s</target>
        </trans-unit>
        <trans-unit id="0e2cb9b0ce082d89d0aa84bffeb022a827b03400" translate="yes" xml:space="preserve">
          <source>mbstowcsmbstowcs_s</source>
          <target state="translated">mbstowcsmbstowcs_s</target>
        </trans-unit>
        <trans-unit id="c251787f0f76b6bec0f7574ea2fb2eb82ee8fd7f" translate="yes" xml:space="preserve">
          <source>mbtowc</source>
          <target state="translated">mbtowc</target>
        </trans-unit>
        <trans-unit id="d3664183ef4de8cc20f982c88a971283caea5f6b" translate="yes" xml:space="preserve">
          <source>member access</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9707ce7e2a1e0c1f0e50326eca36f4cbe9490285" translate="yes" xml:space="preserve">
          <source>member access operator (dot) applied to a non-lvalue structure/union, &lt;code&gt;f().x&lt;/code&gt;, &lt;code&gt;(x,s1).a&lt;/code&gt;, &lt;code&gt;(s1=s2).m&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877cc6dd1a70bb9ac8d0052d81309920c59465dc" translate="yes" xml:space="preserve">
          <source>member access through pointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95660e9690d6a3119acea775ecf87d567814912a" translate="yes" xml:space="preserve">
          <source>member-name</source>
          <target state="translated">member-name</target>
        </trans-unit>
        <trans-unit id="e42316a25ed28b949abade1f2fcd193542acec3f" translate="yes" xml:space="preserve">
          <source>member&lt;br/&gt;access</source>
          <target state="translated">member&lt;br/&gt;access</target>
        </trans-unit>
        <trans-unit id="b3e4e3cfab4ee2924b54b368ca04993e95ed208c" translate="yes" xml:space="preserve">
          <source>members of arrays, structs, and unions are initialized as described above, recursively, plus all padding bits are initialized to zero</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1788a76873ff8cbacfdb1d12cec5a5a2c0345c86" translate="yes" xml:space="preserve">
          <source>memchr</source>
          <target state="translated">memchr</target>
        </trans-unit>
        <trans-unit id="f7d1d081ce689f65415b0bb7b2c869f919d84e2f" translate="yes" xml:space="preserve">
          <source>memcmp</source>
          <target state="translated">memcmp</target>
        </trans-unit>
        <trans-unit id="53e6e659ba7b011ce852ecaa7fea60337d2fb78b" translate="yes" xml:space="preserve">
          <source>memcpy, memcpy_s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c184d8b110b79d53f2a4bd6b1d6273fb75ff2a35" translate="yes" xml:space="preserve">
          <source>memcpy_s</source>
          <target state="translated">memcpy_s</target>
        </trans-unit>
        <trans-unit id="4837729860ee340d1b6a14b875df276daa64cc91" translate="yes" xml:space="preserve">
          <source>memcpymemcpy_s</source>
          <target state="translated">memcpymemcpy_s</target>
        </trans-unit>
        <trans-unit id="f7fb6ef1743ada600d049866f1d1d1a8e7c8e18d" translate="yes" xml:space="preserve">
          <source>memmove, memmove_s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="becf8648158a8a3f84a8a6cdfb8a8826e26b8248" translate="yes" xml:space="preserve">
          <source>memmove_s</source>
          <target state="translated">memmove_s</target>
        </trans-unit>
        <trans-unit id="5d2a24517241f57156b502376d57e8e7c0d3c28c" translate="yes" xml:space="preserve">
          <source>memmovememmove_s</source>
          <target state="translated">memmovememmove_s</target>
        </trans-unit>
        <trans-unit id="0b1f8aafb7c5ba546f6bf4cf7391fa212e67bf15" translate="yes" xml:space="preserve">
          <source>memory location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64afcc3d4660a2c3db3836eac500164a17c63830" translate="yes" xml:space="preserve">
          <source>memory locations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861082c94ac7c48a1048e25bf8476803cbac12ca" translate="yes" xml:space="preserve">
          <source>memory_order</source>
          <target state="translated">memory_order</target>
        </trans-unit>
        <trans-unit id="388e84c506cfd6dedfd26dd888ab7e6efd669f8b" translate="yes" xml:space="preserve">
          <source>memset, memset_s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac679984138c0f9356e5c221183b46755dadec1" translate="yes" xml:space="preserve">
          <source>memset_s</source>
          <target state="translated">memset_s</target>
        </trans-unit>
        <trans-unit id="93d10c811dfb9cb3c804defe1807ddeef9fdee18" translate="yes" xml:space="preserve">
          <source>memsetmemset_s</source>
          <target state="translated">memsetmemset_s</target>
        </trans-unit>
        <trans-unit id="6f9b9af3cd6e8b8a73c2cdced37fe9f59226e27d" translate="yes" xml:space="preserve">
          <source>message</source>
          <target state="translated">message</target>
        </trans-unit>
        <trans-unit id="b4b0619e54d7b1901acd696633372be2039219ab" translate="yes" xml:space="preserve">
          <source>min normal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14566f6f8c371092ad1f80ffcb272bdb81662ff8" translate="yes" xml:space="preserve">
          <source>min subnormal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d49b043de8df4dbdd69cfc9545ce54892f123e" translate="yes" xml:space="preserve">
          <source>minimum negative integer such that &lt;code&gt;10&lt;/code&gt; raised by power one less than that integer is a normalized &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt; and &lt;code&gt;long double&lt;/code&gt; respectively</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a948286a24edad75c0c1a9f59ff666b63e363236" translate="yes" xml:space="preserve">
          <source>minimum negative integer such that &lt;code&gt;FLT_RADIX&lt;/code&gt; raised by power one less than that integer is a normalized &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt; and &lt;code&gt;long double&lt;/code&gt; respectively</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976e8bd4052232b0956c1713306fa92fe98b0440" translate="yes" xml:space="preserve">
          <source>minimum positive value of &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt; and &lt;code&gt;long double&lt;/code&gt; respectively</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6f2d66fb26d27ac0ba57d59e0b297a4da3a2ac" translate="yes" xml:space="preserve">
          <source>minimum value of &lt;code&gt;char&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e05d9c34aa63ff91013815232e64023541eaa2" translate="yes" xml:space="preserve">
          <source>minimum value of &lt;code&gt;signed char&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt; and &lt;code&gt;long long&lt;/code&gt; respectively</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59e37612676008bc6362073259c6986d7cef1c8" translate="yes" xml:space="preserve">
          <source>minimum value of an object of type &lt;code&gt;int8_t&lt;/code&gt;, &lt;code&gt;int16_t&lt;/code&gt;, &lt;code&gt;int32_t&lt;/code&gt;, &lt;code&gt;int64_t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb54df0084df593550a594481886e4cbe3d6125" translate="yes" xml:space="preserve">
          <source>minimum value of an object of type &lt;code&gt;int_fast8_t&lt;/code&gt;, &lt;code&gt;int_fast16_t&lt;/code&gt;, &lt;code&gt;int_fast32_t&lt;/code&gt;, &lt;code&gt;int_fast64_t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4dab2e8e75110ff28a1ffa57fd7b67ba467c73" translate="yes" xml:space="preserve">
          <source>minimum value of an object of type &lt;code&gt;int_least8_t&lt;/code&gt;, &lt;code&gt;int_least16_t&lt;/code&gt;, &lt;code&gt;int_least32_t&lt;/code&gt;, &lt;code&gt;int_least64_t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c40f03704d62d7cc2e124da31601e29e970f7a" translate="yes" xml:space="preserve">
          <source>minimum value of an object of type &lt;code&gt;intmax_t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a232304d0ef9e0228e8b5da4403f59103ab121a" translate="yes" xml:space="preserve">
          <source>minimum value of an object of type &lt;code&gt;intptr_t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a993db69c35808bbed175599380155607a7013" translate="yes" xml:space="preserve">
          <source>minimum value of object of &lt;code&gt;&lt;a href=&quot;../program/sig_atomic_t&quot;&gt;sig_atomic_t&lt;/a&gt;&lt;/code&gt; type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf80446d42ab7f2d8d442e0fd313c45cb328b0d4" translate="yes" xml:space="preserve">
          <source>minimum value of object of &lt;code&gt;&lt;a href=&quot;ptrdiff_t&quot;&gt;ptrdiff_t&lt;/a&gt;&lt;/code&gt; type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a5fbfc4d654c0c86b11fd1d0ab661179240161" translate="yes" xml:space="preserve">
          <source>minimum value of object of &lt;code&gt;wchar_t&lt;/code&gt; type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149e8df842a1fdc0e88c117e0e52d1f280cacf63" translate="yes" xml:space="preserve">
          <source>minimum value of object of &lt;code&gt;wint_t&lt;/code&gt; type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fce3d024be760315c7d2bb2f28105423b0f0c5" translate="yes" xml:space="preserve">
          <source>minimum, normalized, positive value of &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt; and &lt;code&gt;long double&lt;/code&gt; respectively</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790be34ce7fedc5a99bd21e0c7f72b64ed640d22" translate="yes" xml:space="preserve">
          <source>minutes after the hour &amp;ndash; [0, 59]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f09233e4916172d5d86c08098f2696e5b9e7785a" translate="yes" xml:space="preserve">
          <source>mktime</source>
          <target state="translated">mktime</target>
        </trans-unit>
        <trans-unit id="e78fe7049341b36116d8054f5a3e00d01f245fcc" translate="yes" xml:space="preserve">
          <source>mode</source>
          <target state="translated">mode</target>
        </trans-unit>
        <trans-unit id="854729ad09e0a980889b6252f5131fa79c7e8bcd" translate="yes" xml:space="preserve">
          <source>mode string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3aaf9a4eef16baaf87515e358978a3535c9d812" translate="yes" xml:space="preserve">
          <source>modf, modff, modfl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9552eff5f21a7e84d214fea41695d9f4edff51e" translate="yes" xml:space="preserve">
          <source>modfl</source>
          <target state="translated">modfl</target>
        </trans-unit>
        <trans-unit id="1e812cc82a42eb59ba45f1c70e3c8cc45365eaf2" translate="yes" xml:space="preserve">
          <source>modfmodffmodfl</source>
          <target state="translated">modfmodffmodfl</target>
        </trans-unit>
        <trans-unit id="0faa8d7e497bae7da177b5256a237ece8b659bb3" translate="yes" xml:space="preserve">
          <source>modifiable lvalue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265c42c984d2b4a74fa6c9c2545eddbccbada9e4" translate="yes" xml:space="preserve">
          <source>modifiable lvalues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c9ce73c3a7f1a7049a6e36e83e8505b8e05b919" translate="yes" xml:space="preserve">
          <source>modification of a &lt;a href=&quot;const&quot;&gt;const object&lt;/a&gt; through a non-const pointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837ce2c63634fa39239a4bd0d1423f7b865fda5a" translate="yes" xml:space="preserve">
          <source>modification order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af60b7b96e08873e7bd780893eed25aa7a430b1" translate="yes" xml:space="preserve">
          <source>modulo</source>
          <target state="translated">modulo</target>
        </trans-unit>
        <trans-unit id="e85037d59b5f0b38591c3664b6866692fab24a5c" translate="yes" xml:space="preserve">
          <source>modulo assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3998c0ee13294887184b2360c5513f78d26284bc" translate="yes" xml:space="preserve">
          <source>months since January &amp;ndash; [0, 11]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad9ed0c8435ab23777fc9af1600f5206b3dc68e" translate="yes" xml:space="preserve">
          <source>most efficient floating-point type at least as wide as &lt;code&gt;double&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a139e2ef2938d453eda5ab324eba1ae64157a9" translate="yes" xml:space="preserve">
          <source>most efficient floating-point type at least as wide as &lt;code&gt;float&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52dcae5ab529d929457fb94997a026cccae226e5" translate="yes" xml:space="preserve">
          <source>moves one buffer to another</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e905f22cf9758a4bda1d64387f0ed75b5accc8" translate="yes" xml:space="preserve">
          <source>moves the file position indicator to a specific location in a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46da76f1a0f3fa2ad8bb2b2e42f87ec8c9e8b4c5" translate="yes" xml:space="preserve">
          <source>moves the file position indicator to the beginning in a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f34ee1e406ea84ca83c835a3301b5d9014a788" translate="yes" xml:space="preserve">
          <source>msg</source>
          <target state="translated">msg</target>
        </trans-unit>
        <trans-unit id="59208f1eddfd4d2a1acc761453182ef918ec0caf" translate="yes" xml:space="preserve">
          <source>mtx_destroy</source>
          <target state="translated">mtx_destroy</target>
        </trans-unit>
        <trans-unit id="773dd2742effd7918a4ca3d21900aab0989ed898" translate="yes" xml:space="preserve">
          <source>mtx_init</source>
          <target state="translated">mtx_init</target>
        </trans-unit>
        <trans-unit id="ba8c362f22d5a90f604ccc650ce0091bc65033c4" translate="yes" xml:space="preserve">
          <source>mtx_lock</source>
          <target state="translated">mtx_lock</target>
        </trans-unit>
        <trans-unit id="fdd56c547cdd4ea78502508c5d34b33e1cea68bf" translate="yes" xml:space="preserve">
          <source>mtx_plain, mtx_recursive, mtx_timed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe0377beada8176d967a1579b37ea1bc36811d6e" translate="yes" xml:space="preserve">
          <source>mtx_plainmtx_recursivemtx_timed</source>
          <target state="translated">mtx_plainmtx_recursivemtx_timed</target>
        </trans-unit>
        <trans-unit id="0917787165f126446048b6f1036d7a3957bac740" translate="yes" xml:space="preserve">
          <source>mtx_timed</source>
          <target state="translated">mtx_timed</target>
        </trans-unit>
        <trans-unit id="38a0a4d8ba7296b63e520d94a4c1af06f9fd45e9" translate="yes" xml:space="preserve">
          <source>mtx_timedlock</source>
          <target state="translated">mtx_timedlock</target>
        </trans-unit>
        <trans-unit id="c200d6dd083b502229e6e65442bbc2ff2d88ee5f" translate="yes" xml:space="preserve">
          <source>mtx_trylock</source>
          <target state="translated">mtx_trylock</target>
        </trans-unit>
        <trans-unit id="f3a02a3eedbc0eaa9cafcbb9f7c77a6ef03f9599" translate="yes" xml:space="preserve">
          <source>mtx_unlock</source>
          <target state="translated">mtx_unlock</target>
        </trans-unit>
        <trans-unit id="0bf303b4e290a4a5f36b40f0bd70928e55331b50" translate="yes" xml:space="preserve">
          <source>multiplication assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b814de6076d1a4f1afe803894423d5042fc64c4a" translate="yes" xml:space="preserve">
          <source>multiplication if infinity by zero gives NaN and &lt;code&gt;&lt;a href=&quot;../numeric/fenv/fe_exceptions&quot;&gt;FE_INVALID&lt;/a&gt;&lt;/code&gt; is raised</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efebbfce02081c0116e88c59ab17a9afd854b51c" translate="yes" xml:space="preserve">
          <source>multiplication of infinity by a nonzero gives infinity (even for complex arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977e3ea124d247ddc78ba06ee8c17d015f7209e9" translate="yes" xml:space="preserve">
          <source>multiplies a number by &lt;code&gt;2&lt;/code&gt; raised to a power</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a23216baab7a6cd1bceac0ac309df5563e1990" translate="yes" xml:space="preserve">
          <source>multiplying the imaginary unit by real infinity gives the correctly-signed imaginary infinity: i &amp;times; &amp;infin; = i&amp;infin;. Also, i &amp;times; (&amp;infin; &amp;ndash; i&amp;infin;) = &amp;infin; + i&amp;infin; indicates the reasonable quadrant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e4754124cb83ce27a00910ef8c68b27d4cff86" translate="yes" xml:space="preserve">
          <source>multithreaded data races</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728299390a2ef1c0b1e55a5a0c64141ae30e6490" translate="yes" xml:space="preserve">
          <source>mutex</source>
          <target state="translated">mutex</target>
        </trans-unit>
        <trans-unit id="55c48eca087f286c9fefe4671cf4fd2ddedb0b62" translate="yes" xml:space="preserve">
          <source>mutex identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1854cae891ec7b29161ccaf79a24b00c274bdaa" translate="yes" xml:space="preserve">
          <source>n</source>
          <target state="translated">n</target>
        </trans-unit>
        <trans-unit id="6ae999552a0d2dca14d62e2bc8b764d377b1dd6c" translate="yes" xml:space="preserve">
          <source>name</source>
          <target state="translated">name</target>
        </trans-unit>
        <trans-unit id="f7b95086780bc44783a4e8a0b5011e2f0c7ec54f" translate="yes" xml:space="preserve">
          <source>name spaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf385bb97f87aba54ce34b08bb3cb019cc672f81" translate="yes" xml:space="preserve">
          <source>nan, nanf, nanl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e168771cef7afcdceea770501df4b0892b89dca" translate="yes" xml:space="preserve">
          <source>nanl</source>
          <target state="translated">nanl</target>
        </trans-unit>
        <trans-unit id="c0177cea51b13cd83c90ca3a0925395ae809a92e" translate="yes" xml:space="preserve">
          <source>nannanfnanl</source>
          <target state="translated">nannanfnanl</target>
        </trans-unit>
        <trans-unit id="c575d25968c697f7dc9df2c04963d9a690e20707" translate="yes" xml:space="preserve">
          <source>nanoseconds (valid values are [0, 999999999])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9aedde2154fb1586ba2b467de839bdebbfe642" translate="yes" xml:space="preserve">
          <source>narrow character string identifying the contents of a NaN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ddd2d456469af8bee91ba120f5084bc995b03d" translate="yes" xml:space="preserve">
          <source>narrows a wide character to a single-byte narrow character, if possible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac87125b843b45093e79d65861298691b61f876" translate="yes" xml:space="preserve">
          <source>nearbyint</source>
          <target state="translated">nearbyint</target>
        </trans-unit>
        <trans-unit id="6ef1eb3f993e30f0bc2460b73d980ff4eac47f5f" translate="yes" xml:space="preserve">
          <source>nearbyint, nearbyintf, nearbyintl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f322feaf29f7a8522ef7e010d79e1b24ee92ac" translate="yes" xml:space="preserve">
          <source>nearbyintl</source>
          <target state="translated">nearbyintl</target>
        </trans-unit>
        <trans-unit id="569efbee7c820c7526105135a6a22ca8ef54e7a9" translate="yes" xml:space="preserve">
          <source>nearbyintnearbyintfnearbyintl</source>
          <target state="translated">nearbyintnearbyintfnearbyintl</target>
        </trans-unit>
        <trans-unit id="4a8ee389c5c5c251dffb0854a4d00b44f9502b13" translate="yes" xml:space="preserve">
          <source>negative values except &lt;code&gt;-1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce142e812defd18106486cdbd8f46e6a5c053198" translate="yes" xml:space="preserve">
          <source>negative zero</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0dbd3b64f74b6f12eb42456167969a5551a86c" translate="yes" xml:space="preserve">
          <source>new size of the array in bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91179181a3cd792dfc56784bf815df456d0c5a5e" translate="yes" xml:space="preserve">
          <source>new_filename</source>
          <target state="translated">new_filename</target>
        </trans-unit>
        <trans-unit id="f0e72d3113c0be1a1cdf2642a185b70d97793483" translate="yes" xml:space="preserve">
          <source>new_size</source>
          <target state="translated">new_size</target>
        </trans-unit>
        <trans-unit id="dc196352942b17e456ca2a07a9a8a3eb5c64457d" translate="yes" xml:space="preserve">
          <source>newstreamptr</source>
          <target state="translated">newstreamptr</target>
        </trans-unit>
        <trans-unit id="2ddf2063dc7c6cb558f8f595784c75f614fb0ffe" translate="yes" xml:space="preserve">
          <source>nextafter</source>
          <target state="translated">nextafter</target>
        </trans-unit>
        <trans-unit id="49623c39e21aa4d451e8dffb8d75451ba2e299f6" translate="yes" xml:space="preserve">
          <source>nextafter, nextafterf, nextafterl, nexttoward, nexttowardf, nexttowardl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5558f4da2b57e29fe76a6b9da64008bdd6121242" translate="yes" xml:space="preserve">
          <source>nextafternextafterfnextafterlnexttowardnexttowardfnexttowardl</source>
          <target state="translated">nextafternextafterfnextafterlnexttowardnexttowardfnexttowardl</target>
        </trans-unit>
        <trans-unit id="3e116a41ae6334b8ebf417fb15349afa3e4bd773" translate="yes" xml:space="preserve">
          <source>nexttoward</source>
          <target state="translated">nexttoward</target>
        </trans-unit>
        <trans-unit id="ce03199ba6f96ebef793815b794c98ab1bc70780" translate="yes" xml:space="preserve">
          <source>nexttowardl</source>
          <target state="translated">nexttowardl</target>
        </trans-unit>
        <trans-unit id="5849502f613da535804902658ee61d307c540229" translate="yes" xml:space="preserve">
          <source>no \n is immediately preceded by a space character (space characters that are written out immediately before a \n may disappear when read)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929686e1abc57065a9c41e7ece918fa014498bee" translate="yes" xml:space="preserve">
          <source>no buffering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7fd215a42597f458c94e3ca6d5cb6c00819224f" translate="yes" xml:space="preserve">
          <source>no space separates the currency symbol and the value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536b2f708c3016649fc5bc1a70cd76a504887156" translate="yes" xml:space="preserve">
          <source>no suffix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424eb92025bf3afff1a1dcb48d62ca2104500506" translate="yes" xml:space="preserve">
          <source>non-whitespace multibyte characters except &lt;code&gt;%&lt;/code&gt;: each such character in the format string consumes exactly one identical character from the input stream, or causes the function to fail if the next character on the stream does not compare equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52d45a3573dbf6f66671aba251adb71f6d93c0c" translate="yes" xml:space="preserve">
          <source>non-whitespace wide characters except &lt;code&gt;%&lt;/code&gt;: each such character in the format string consumes exactly one identical character from the input stream, or causes the function to fail if the next character on the stream does not compare equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c261a67f37ef0389f735795a9c881315e845f3" translate="yes" xml:space="preserve">
          <source>none; this function does not return to its caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf084fed1ba8a94ae6452521c44f8f08323a6cb" translate="yes" xml:space="preserve">
          <source>nonempty sequence of decimal digits optionally containing decimal-point character (as determined by the current C &lt;code&gt;locale&lt;/code&gt;) (defines significand)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59458f0c854e2371e0e8fdd26e7d146ab0779ced" translate="yes" xml:space="preserve">
          <source>nonempty sequence of hexadecimal digits optionally containing a decimal-point character (as determined by the current C &lt;code&gt;locale&lt;/code&gt;) (defines significand)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438bf1efb41a20fc7cf6c81c871ac4833c3306e8" translate="yes" xml:space="preserve">
          <source>nonzero value if the end of the stream has been reached, otherwise &lt;code&gt;​0​&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="626c5a49245132f353875e6c2962b1aa3abaa0eb" translate="yes" xml:space="preserve">
          <source>noptr-declarator</source>
          <target state="translated">noptr-declarator</target>
        </trans-unit>
        <trans-unit id="265f0805afb6cad8497f8242676645149ad98fff" translate="yes" xml:space="preserve">
          <source>noptr-declarator&lt;code&gt;(&lt;/code&gt;identifier-list(optional)&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">noptr-declarator&lt;code&gt;(&lt;/code&gt;identifier-list(optional)&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b20094aa49d64ba16d7f0b389128c070d505d38b" translate="yes" xml:space="preserve">
          <source>noptr-declarator&lt;code&gt;(&lt;/code&gt;parameter-list&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">noptr-declarator&lt;code&gt;(&lt;/code&gt;parameter-list&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b63ad7862b0fb3d56d555dba297c2c52a79c25f" translate="yes" xml:space="preserve">
          <source>noptr-declarator&lt;code&gt;(&lt;/code&gt;parameters-or-identifiers&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">noptr-declarator&lt;code&gt;(&lt;/code&gt;parameters-or-identifiers&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="86d6c73a14a9c9518b4c268f2af662b953d38f9a" translate="yes" xml:space="preserve">
          <source>noptr-declarator&lt;code&gt;[&lt;/code&gt;qualifiers(optional)&lt;code&gt;*&lt;/code&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">noptr-declarator&lt;code&gt;[&lt;/code&gt;qualifiers(optional)&lt;code&gt;*&lt;/code&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3a866ec20c328b618e62edac355567289bd33eb" translate="yes" xml:space="preserve">
          <source>noptr-declarator&lt;code&gt;[&lt;/code&gt;static(optional)qualifiers(optional)expression&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">noptr-declarator&lt;code&gt;[&lt;/code&gt;static(optional)qualifiers(optional)expression&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1278e1f5cbacb266caf4540a8bd98faddb269649" translate="yes" xml:space="preserve">
          <source>noreturn</source>
          <target state="translated">noreturn</target>
        </trans-unit>
        <trans-unit id="9c2a6e4809aeef7b7712ca4db05a681452f4f748" translate="yes" xml:space="preserve">
          <source>normal</source>
          <target state="translated">normal</target>
        </trans-unit>
        <trans-unit id="557f255516719ea16f8f4a0aae1166054e2c9b43" translate="yes" xml:space="preserve">
          <source>not</source>
          <target state="translated">not</target>
        </trans-unit>
        <trans-unit id="1e5bd1f816cccf7d7efc769b94a39398018c37f4" translate="yes" xml:space="preserve">
          <source>not all members of &lt;code&gt;*time_ptr&lt;/code&gt; are within their normal ranges</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3d1f23345e583c3c022ad5d6ba45f3eb22f29c" translate="yes" xml:space="preserve">
          <source>not equal to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0110fe1fb4e0d4c2ab3f7dd7367ad6b1f31ecee4" translate="yes" xml:space="preserve">
          <source>not-a-number</source>
          <target state="translated">not-a-number</target>
        </trans-unit>
        <trans-unit id="91fe3f50f53fd125f6dc5c64e50ca7ba1e908602" translate="yes" xml:space="preserve">
          <source>not-a-number expression. It consists of the following parts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b7867427e30a13542ff970bcc94d19e618d128" translate="yes" xml:space="preserve">
          <source>nptr</source>
          <target state="translated">nptr</target>
        </trans-unit>
        <trans-unit id="2be88ca4242c76e8253ac62474851065032d6833" translate="yes" xml:space="preserve">
          <source>null</source>
          <target state="translated">null</target>
        </trans-unit>
        <trans-unit id="bbc86f42bd0789088adccd4b1371c6900002afc7" translate="yes" xml:space="preserve">
          <source>null pointer constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad6939dae628ad4130139cb7e70bffcfb2b70108" translate="yes" xml:space="preserve">
          <source>null pointer value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224e99b32f170507eca9b7ff261da30aa95c49a7" translate="yes" xml:space="preserve">
          <source>null statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e51166ec12687b85a5739f209a9d7a15975276f" translate="yes" xml:space="preserve">
          <source>null-terminated character string determining file access mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc8d047f02dd8bbb79f58dfcb482448c07b424e" translate="yes" xml:space="preserve">
          <source>null-terminated character string determining new file access mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4dbee2869d70c7077e7444856f514a6fe5f6de" translate="yes" xml:space="preserve">
          <source>null-terminated character string identifying the name of the environmental variable to look for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd43faf876168d6e96b34fbd29e5ed45ec238f65" translate="yes" xml:space="preserve">
          <source>null-terminated character string to be written</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50dcfaeafa7aa89e9a3713c5534938294a015b62" translate="yes" xml:space="preserve">
          <source>null-terminated wide string to be written</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c6c337ee51971e973c9fdc9f4140c220df7f249" translate="yes" xml:space="preserve">
          <source>num</source>
          <target state="translated">num</target>
        </trans-unit>
        <trans-unit id="eba3de96690740849f38d269ec4ccc645578474d" translate="yes" xml:space="preserve">
          <source>number of base-&lt;code&gt;FLT_RADIX&lt;/code&gt; digits that are in the floating-point mantissa and that can be represented without losing precision for &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt; and &lt;code&gt;long double&lt;/code&gt; respectively</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90b8cb2ef35be36a8a72f5593ca9dbe8ac028a3" translate="yes" xml:space="preserve">
          <source>number of bits in a byte</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e801c1a3cf7b9225e972bf4d8575d2b9d55ad111" translate="yes" xml:space="preserve">
          <source>number of bytes available in the array pointed to by dst</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3decac98a65148bc8a86d53ac44a2a77858dc88" translate="yes" xml:space="preserve">
          <source>number of bytes to allocate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9cfc4e03a8b5b1e13664332f53e661afdd2e3db" translate="yes" xml:space="preserve">
          <source>number of bytes to allocate. An integral multiple of &lt;code&gt;alignment&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d4194750625ef4a788bb18fd8cf8778387ae6d" translate="yes" xml:space="preserve">
          <source>number of bytes to copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df6a939291dc2a7d142afffba7a92e4952b5829" translate="yes" xml:space="preserve">
          <source>number of bytes to examine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5162b8829eb294853dc1f82480b6c555f6b6f67c" translate="yes" xml:space="preserve">
          <source>number of bytes to fill</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe4abbeea8b17d21caa74a2d1e24b769e32105a" translate="yes" xml:space="preserve">
          <source>number of characters to shift the position relative to origin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b471b5537d7f76a13cfcc560609d62df0e3f392b" translate="yes" xml:space="preserve">
          <source>number of decimal digits that are guaranteed to be preserved in text -&amp;gt; &lt;code&gt;float&lt;/code&gt;/&lt;code&gt;double&lt;/code&gt;/&lt;code&gt;long double&lt;/code&gt; -&amp;gt; text roundtrip without change due to rounding or overflow (see the C++ analog &lt;a href=&quot;http://en.cppreference.com/w/cpp/types/numeric_limits/digits10.html&quot;&gt;digits10&lt;/a&gt; for detail)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd50815af6ed75e16b16443d98f13d245b1da47" translate="yes" xml:space="preserve">
          <source>number of element in the array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d507963bd163e912028d2bb06021f787953f684" translate="yes" xml:space="preserve">
          <source>number of objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505b2469614923dfac2a5b3075d6ce913f70f2da" translate="yes" xml:space="preserve">
          <source>number of parameters (unless used in an old-style function definition).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23747ac9f0fec90c2d6dddffc88d4958cd8063d2" translate="yes" xml:space="preserve">
          <source>number of processor clock ticks per second</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9491d64d5d79aac60532fbcf2a40b1385efe282" translate="yes" xml:space="preserve">
          <source>number of wide characters available in the array pointed to by dst</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3621bb101a3cc288e27c9e2b69fd9227f58992c1" translate="yes" xml:space="preserve">
          <source>number of wide characters to copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd3553130c3914e061e6e252f5a4042383082e0" translate="yes" xml:space="preserve">
          <source>number of wide characters to examine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3cf3c1b891c428d1636d9044afb62cdcab0415a" translate="yes" xml:space="preserve">
          <source>number of wide characters to fill</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c36ce51252d16d88f5d22b7dcf136177569e3f4" translate="yes" xml:space="preserve">
          <source>number of wide characters written into the wide character array pointed to by &lt;code&gt;str&lt;/code&gt; not including the terminating &lt;code&gt;L'\0'&lt;/code&gt; on success. If &lt;code&gt;count&lt;/code&gt; was reached before the entire string could be stored, &lt;code&gt;​0​&lt;/code&gt; is returned and the contents are undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90411679b504991295ce127e96e54d5fcd141b8b" translate="yes" xml:space="preserve">
          <source>numeric digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5c0b859faba061dd60fd8070fce74fcee29d0b" translate="yes" xml:space="preserve">
          <source>obj</source>
          <target state="translated">obj</target>
        </trans-unit>
        <trans-unit id="9ed006f108c3e653314f4894d48adf0996d8daa9" translate="yes" xml:space="preserve">
          <source>object identity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79515e0ed0d45f9c2b9ebb23b467b1b3e5d7bc4" translate="yes" xml:space="preserve">
          <source>object representation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c846947507df092f74b27de8e597d00678042924" translate="yes" xml:space="preserve">
          <source>object types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f7f39ec7e62249ee81dac2c3f1b3586a4fd52e" translate="yes" xml:space="preserve">
          <source>objects</source>
          <target state="translated">objects</target>
        </trans-unit>
        <trans-unit id="c74e840d929efb32fed213f4b3d7eb9c3b9a8c7a" translate="yes" xml:space="preserve">
          <source>objects of floating types are initialized to positive zero</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65bb4295836c93ef216744b32b208900238c15aa" translate="yes" xml:space="preserve">
          <source>objects of integral types are initialized to unsigned zero</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e15a1eb50cbdc90236bba875b683e741280247d1" translate="yes" xml:space="preserve">
          <source>objects of lock-free atomic types (since C11)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861a79caec89442eeb19fb2828238811ad79e888" translate="yes" xml:space="preserve">
          <source>objects of type &lt;code&gt;volatile &lt;a href=&quot;sig_atomic_t&quot;&gt;sig_atomic_t&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b65e90051f9a2b414398705e52da0ba66266a9" translate="yes" xml:space="preserve">
          <source>objects with automatic &lt;a href=&quot;storage_duration&quot;&gt;storage duration&lt;/a&gt; are initialized to indeterminate values (which may be &lt;a href=&quot;object&quot;&gt;trap representations&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7ffc22b4cadd1d776f07484f44e26458117152" translate="yes" xml:space="preserve">
          <source>objects with static and thread-local &lt;a href=&quot;storage_duration&quot;&gt;storage duration&lt;/a&gt; are initialized as follows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32cb659a1b14dfeda8fbbbebd4e248a215cb3fa" translate="yes" xml:space="preserve">
          <source>obtains the current thread identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40aa649814e362e3f1fc63e4205db7cdb1ac5ed" translate="yes" xml:space="preserve">
          <source>occur</source>
          <target state="translated">occur</target>
        </trans-unit>
        <trans-unit id="8eb277b706a2a088c3330b5723d58b4e931be024" translate="yes" xml:space="preserve">
          <source>octal</source>
          <target state="translated">octal</target>
        </trans-unit>
        <trans-unit id="23635b7fa049fed8ba3470df22a75b3b4a2a39b6" translate="yes" xml:space="preserve">
          <source>octal-constant is the digit zero (&lt;code&gt;0&lt;/code&gt;) followed by zero or more octal digits (&lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt;, &lt;code&gt;4&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;6&lt;/code&gt;, &lt;code&gt;7&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d4fca1b488762c42711943e6fc0dc5c6f58dc3" translate="yes" xml:space="preserve">
          <source>octal-constantinteger-suffix(optional)</source>
          <target state="translated">octal-constantinteger-suffix(optional)</target>
        </trans-unit>
        <trans-unit id="4ed0ac754eae12ad78ef4ffd477e275535cc0e16" translate="yes" xml:space="preserve">
          <source>of a &lt;a href=&quot;operator_other#Function_call&quot;&gt;function call operator&lt;/a&gt;, and may return a value to its caller by means of the &lt;a href=&quot;return&quot;&gt;return statement&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62bd3794b2072ce2d3d164e6c5b87f5f96bdd49" translate="yes" xml:space="preserve">
          <source>of all atomic operations that are so tagged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9274421e3ae876da874f68ac60b3ecd65e66a96" translate="yes" xml:space="preserve">
          <source>of floating-point expressions, that is optimizations that omit rounding errors and floating-point exceptions that would be observed if the expression was evaluated exactly as written. For example, allows the implementation of &lt;code&gt;(x*y) + z&lt;/code&gt; with a single fused multiply-add CPU instruction. The default value is implementation-defined, usually &lt;code&gt;ON&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26ca411a76f88832931ea265a3fe61ab6df5c9e" translate="yes" xml:space="preserve">
          <source>of int or of a &lt;a href=&quot;bit_field&quot;&gt;bit field&lt;/a&gt; of type _Bool, int, signed int, unsigned int, to the value of type &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;unsigned int&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761ea6c295b3d8ea2d615a56911924d6311dc5ea" translate="yes" xml:space="preserve">
          <source>of objects and functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82ef2d92dd2defb4bdc6af03abdd0f0a0f152f0" translate="yes" xml:space="preserve">
          <source>of only the characters found in another byte string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dcafcdb201f3b3a22efae590b6f1b08c1c64784" translate="yes" xml:space="preserve">
          <source>of only the characters not found in another byte string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f1109d5598e565c7dfebd58ad96504e4c767c9" translate="yes" xml:space="preserve">
          <source>of only the wide characters found in another wide string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9292fca3443b17128c76db1db08b1553307d41e0" translate="yes" xml:space="preserve">
          <source>of only the wide chars</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f65ae8727aecae1f9212733ab057ed5d33cd2d7" translate="yes" xml:space="preserve">
          <source>of some complete object type, plus or minus an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a876d21dfbc565eeefa3a363961e1975f2e898e" translate="yes" xml:space="preserve">
          <source>of that type. A pointer whose value is null does not point to an object or a function (dereferencing a null pointer is undefined behavior), and compares equal to all pointers of the same type whose value is also</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b45d78fd720b6582049d02edb023df9290ac7b6" translate="yes" xml:space="preserve">
          <source>of the conversion is performed. See the table below for exact effects otherwise the behavior is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a05cb49d5a305ee0b961f5e679146bdb9f095e" translate="yes" xml:space="preserve">
          <source>of the conversion. In the case when &lt;code&gt;*&lt;/code&gt; is used, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="611ec0d2a524204d234f5ba1e825fd5b6a982873" translate="yes" xml:space="preserve">
          <source>of the interpreted integer value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18bcd34d200514d2a7aff2a2767239eda2a2ab2d" translate="yes" xml:space="preserve">
          <source>of width zero breaks up padding: it specifies that the next bit field begins at the beginning of the next allocation unit:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a610e925bbc0a175e365d31241ae75aeead651" translate="yes" xml:space="preserve">
          <source>offset</source>
          <target state="translated">offset</target>
        </trans-unit>
        <trans-unit id="190fe195e266ccf48d6885ff3cfa4f0bd6b37f0d" translate="yes" xml:space="preserve">
          <source>offsetof</source>
          <target state="translated">offsetof</target>
        </trans-unit>
        <trans-unit id="5c30f02acacec7a0651ee106156be7d1e2841853" translate="yes" xml:space="preserve">
          <source>old_filename</source>
          <target state="translated">old_filename</target>
        </trans-unit>
        <trans-unit id="e9ba2b04dfe0f61c213e7528180649287a990901" translate="yes" xml:space="preserve">
          <source>on a non-initial call (with null &lt;code&gt;str&lt;/code&gt;), &lt;code&gt;*ptr&lt;/code&gt; is a null pointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee58bfcf9ac3465c4f7c1983870f52602836cd7" translate="yes" xml:space="preserve">
          <source>on the affected memory location: no reads or writes in the current thread can be reordered before this load. All writes in other threads that release the same atomic variable are visible in the current thread (see &lt;a href=&quot;memory_order#Release-Acquire_ordering&quot;&gt;Release-Acquire ordering&lt;/a&gt; below)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b86fd9b57f724d1ff8dd2655ed26f054dc14cb" translate="yes" xml:space="preserve">
          <source>on the affected memory location: no reads or writes in the current thread dependent on the value currently loaded can be reordered before this load. Writes to data-dependent variables in other threads that release the same atomic variable are visible in the current thread. On most platforms, this affects compiler optimizations only (see &lt;a href=&quot;memory_order#Release-Consume_ordering&quot;&gt;Release-Consume ordering&lt;/a&gt; below)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7b1f587d00619346bd9fe8ed338b558c155ae7" translate="yes" xml:space="preserve">
          <source>on the first call, &lt;code&gt;*strmax&lt;/code&gt; is zero or greater than &lt;code&gt;RSIZE_MAX/sizeof(wchar_t)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37a325c876f4d83a7f7294949e2740aa8e42960" translate="yes" xml:space="preserve">
          <source>on the first call, &lt;code&gt;*strmax&lt;/code&gt; is zero or greater than &lt;code&gt;RSIZE_MAX&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f1d01a11775d823f9bdd261284bac817a47dd9" translate="yes" xml:space="preserve">
          <source>one expression is a pointer and the other is the null pointer constant (such as &lt;code&gt;&lt;a href=&quot;../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="935f847cd38adc8d0d96c186e7671385ee0d694e" translate="yes" xml:space="preserve">
          <source>one expression is a pointer to object and the other is a pointer to void (possibly qualified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46618d9dc04cab3bb05135a0092e8388872fe51a" translate="yes" xml:space="preserve">
          <source>one is a pointer to complete object type, the other has integer type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdbde3872cdf530603439a1e25703f5bafeef06a" translate="yes" xml:space="preserve">
          <source>one is a pointer to object and the other is a pointer to (possibly qualified) &lt;code&gt;void&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aee0bd9997042c9146ef134adfc818bb442907c" translate="yes" xml:space="preserve">
          <source>one is a pointer to object or function and the other is a null pointer constant such as &lt;code&gt;&lt;a href=&quot;../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb38927f448ad0df8726f23dbd3c99268c171523" translate="yes" xml:space="preserve">
          <source>one is an enumerated type and the other is that enumeration's underlying type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b56b280997ffffaa1f99ca62a5ee440e3dbbb4" translate="yes" xml:space="preserve">
          <source>one is an old-style (parameter-less) declaration, the other has a parameter list, the parameter list does not use an ellipsis, and all parameters (after function parameter type adjustment) are unaffected by default argument promotions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281d9ae630c353c393c2110ed9b6871628f558a1" translate="yes" xml:space="preserve">
          <source>one is an old-style (parameter-less) definition, the other has a parameter list, the parameter list does not use an ellipsis and each parameter is compatible (after function parameter type adjustment) with the corresponding old-style parameter after default argument promotions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3b6bcb123b85da9838a463ea4bb406d01c2001" translate="yes" xml:space="preserve">
          <source>one is one past the end of an array, and the other is at the start of a different array (of the same type) that follows the first in a larger array or in a struct with no padding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb424054957fbd3fc4f434cf5ec0ad9a2651eff3" translate="yes" xml:space="preserve">
          <source>one of &lt;code&gt;*=&lt;/code&gt;, &lt;code&gt;/=&lt;/code&gt;&lt;code&gt;%=&lt;/code&gt;, &lt;code&gt;+=&lt;/code&gt;&lt;code&gt;-=&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;amp;=&lt;/code&gt;, &lt;code&gt;^=&lt;/code&gt;, &lt;code&gt;|=&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f5aef893c3ab3996f6b79d09c6f43693881d93" translate="yes" xml:space="preserve">
          <source>one of the conflicting evaluations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f6944b22c9e68417a1afa3d92f95798f10e5423" translate="yes" xml:space="preserve">
          <source>one operand of a relational or equality operator with the other operand an integer constant expression, with the resulting expression being the entire controlling expression of &lt;a href=&quot;../language/if&quot;&gt;if&lt;/a&gt;, &lt;a href=&quot;../language/switch&quot;&gt;switch&lt;/a&gt;, &lt;a href=&quot;../language/while&quot;&gt;while&lt;/a&gt;, &lt;a href=&quot;../language/do&quot;&gt;do-while&lt;/a&gt;, &lt;a href=&quot;../language/for&quot;&gt;for&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61cb5cb393fca275911e778655ba9cd973ad12c1" translate="yes" xml:space="preserve">
          <source>one pointer is to a struct/union/array object and the other is to its first member/any member/first element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def2314acd2f7913f35a60737db4953ad5584dea" translate="yes" xml:space="preserve">
          <source>one type is a signed integer type, the other type is the corresponding unsigned integer type, and the value is representable in both types; or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a891758ec4712688d336c06a02989f4e90dd014e" translate="yes" xml:space="preserve">
          <source>one type is pointer to &lt;code&gt;void&lt;/code&gt; and the other is a pointer to a character type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512f7c8d1e9cd6dda2556f6558d3b31300a7f983" translate="yes" xml:space="preserve">
          <source>only.</source>
          <target state="translated">only.</target>
        </trans-unit>
        <trans-unit id="d13150fd106676133ad3bd816c2c7a57a3638029" translate="yes" xml:space="preserve">
          <source>oooo</source>
          <target state="translated">oooo</target>
        </trans-unit>
        <trans-unit id="824f601c2a81ee6bab79ccd4792304c738d17630" translate="yes" xml:space="preserve">
          <source>op</source>
          <target state="translated">op</target>
        </trans-unit>
        <trans-unit id="baa255405cd708663ff3b9bbfcc4bc69fdb55c8b" translate="yes" xml:space="preserve">
          <source>open an existing stream with a different name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397e1cc03e7b718f2fdab43b8dc860aae7c1de77" translate="yes" xml:space="preserve">
          <source>opens a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880628bd451518cf4353fb15b22d572f2c37b7fb" translate="yes" xml:space="preserve">
          <source>operands</source>
          <target state="translated">operands</target>
        </trans-unit>
        <trans-unit id="697823d308688f7c73ec9a1160acc4fc207ea540" translate="yes" xml:space="preserve">
          <source>operators</source>
          <target state="translated">operators</target>
        </trans-unit>
        <trans-unit id="48a7b8889e1542650266c14a18c8708488fa1951" translate="yes" xml:space="preserve">
          <source>optional</source>
          <target state="translated">optional</target>
        </trans-unit>
        <trans-unit id="f4ffb2f695d43ad10d85ee6a1fa746cc4b0b77e2" translate="yes" xml:space="preserve">
          <source>optionally, an &lt;a href=&quot;identifier&quot;&gt;identifier&lt;/a&gt; that denotes this object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7e4acdb948e1c7b167cc2f7e19e311d0a13cf9" translate="yes" xml:space="preserve">
          <source>optionally, any other detectable error, such as unknown conversion specifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="f72780eb100d9526618c8dfb2476d069854f3d3e" translate="yes" xml:space="preserve">
          <source>or 1-erf(arg), is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3927572c45dc7a8d20da56759afcb9b30937e4d2" translate="yes" xml:space="preserve">
          <source>or a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85ae60d77be87b4d38b07013b1ff89f1b8ab490" translate="yes" xml:space="preserve">
          <source>or a buffer using variable argument list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6766e4802afe07044e5fe568981fea186fe6f89b" translate="yes" xml:space="preserve">
          <source>or the largest contiguous sequence of &lt;a href=&quot;bit_field&quot;&gt;bit fields&lt;/a&gt; of non-zero length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9e5c41121327fae9c321f101ab83cc845666c7" translate="yes" xml:space="preserve">
          <source>or until the first whitespace character, whichever appears first. Always stores a null character in addition to the characters matched (so the argument array must have room for at least</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1be399d73ccc268e36d2eedbae7027def1bdb16" translate="yes" xml:space="preserve">
          <source>or, there are &lt;code&gt;memory_order_seq_cst&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;atomic_thread_fence&quot;&gt;atomic_thread_fence&lt;/a&gt;&lt;/code&gt;s X and Y such that A is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfaba5c9824599dbccf193ab77a2e947e6b522a" translate="yes" xml:space="preserve">
          <source>or, there is a &lt;code&gt;memory_order_seq_cst&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;atomic_thread_fence&quot;&gt;atomic_thread_fence&lt;/a&gt;&lt;/code&gt; Y such that Y is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31005d83eb25d3ded961cf520d40119f0f295af5" translate="yes" xml:space="preserve">
          <source>or.</source>
          <target state="translated">or.</target>
        </trans-unit>
        <trans-unit id="cce55e4309a753985bdd21919395fdc17daa11e4" translate="yes" xml:space="preserve">
          <source>order</source>
          <target state="translated">order</target>
        </trans-unit>
        <trans-unit id="35b7889643f36a73588f4546f588b1302f3c467c" translate="yes" xml:space="preserve">
          <source>ordinary identifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9ee40d92dc6b7fabe5816269a72f090048059e" translate="yes" xml:space="preserve">
          <source>ordinary string literals and UTF-8 string literals(since C11) can initialize arrays of any character type (&lt;code&gt;char&lt;/code&gt;, &lt;code&gt;signed char&lt;/code&gt;, &lt;code&gt;unsigned char&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b284f94827db1fa2970d9e2014f080413b547a7e" translate="yes" xml:space="preserve">
          <source>origin</source>
          <target state="translated">origin</target>
        </trans-unit>
        <trans-unit id="d0941e68da8f38151ff86a61fc59f7c5cf9fcaa2" translate="yes" xml:space="preserve">
          <source>other</source>
          <target state="translated">other</target>
        </trans-unit>
        <trans-unit id="35bb2f774af435a1b0473f18a2633888d87c9ad4" translate="yes" xml:space="preserve">
          <source>other values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb46787fdfbfe50355e8621ebf1014385e8e5d9" translate="yes" xml:space="preserve">
          <source>otherwise, if any of the arguments is NaN, NaN is returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54261cd129ecdd24e6e29e0be2340f9aec3cea9" translate="yes" xml:space="preserve">
          <source>otherwise, if the target type is signed, the behavior is implementation-defined (which may include raising a signal)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf787991330a06c775eca85a36f6290a9d1d6a4c" translate="yes" xml:space="preserve">
          <source>otherwise, if the target type is unsigned, the value 2b</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60af6693e8f407b523d159dabd8199e8e5e63d7" translate="yes" xml:space="preserve">
          <source>otherwise, the behavior is undefined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9d839d57813e43fc95f6639fc57269f684ad3a" translate="yes" xml:space="preserve">
          <source>otherwise, the conversion is with style &lt;code&gt;e&lt;/code&gt; or &lt;code&gt;E&lt;/code&gt; and precision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ec088900ea01f7e5f8737c5e04774b7b00b5b4" translate="yes" xml:space="preserve">
          <source>otherwise, the single-byte representation of &lt;code&gt;c&lt;/code&gt; as &lt;code&gt;unsigned char&lt;/code&gt; converted to &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d72fba503cec61dba2458774e2435a57591319" translate="yes" xml:space="preserve">
          <source>otherwise. If the expression evaluates to nonzero value, the controlled code block is included and skipped otherwise. If any used identifier is not a constant, it is replaced with &lt;code&gt;​0​&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6b62e451aea0de7d7ac216bf57af095b20e350" translate="yes" xml:space="preserve">
          <source>output file stream to write to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ffc505e30193f6ae0ed786a0bcb54c29a414b7e" translate="yes" xml:space="preserve">
          <source>output of a signed decimal integer value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b36b832a983903c83735e4df976b1c3fc44ec32" translate="yes" xml:space="preserve">
          <source>output of an unsigned decimal integer value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365e037ad84cb72f1cfb53f5e6e392563572a3e3" translate="yes" xml:space="preserve">
          <source>output of an unsigned lowercase hexadecimal integer value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b63b70bb5e6ce7ae35f4306dc4a24de39d0850" translate="yes" xml:space="preserve">
          <source>output of an unsigned octal integer value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a57058a1e68f27680c785445b681f6cfc86ff6e" translate="yes" xml:space="preserve">
          <source>output of an unsigned uppercase hexadecimal integer value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7824a06f7477e20b1776944e1f604065a0a05a42" translate="yes" xml:space="preserve">
          <source>output stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e4de34a13aff4890913f09b1058055a04e73a6" translate="yes" xml:space="preserve">
          <source>output wide stream to write to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e18dad51fd9e8869897fba48fa93d118e5e404" translate="yes" xml:space="preserve">
          <source>outside</source>
          <target state="translated">outside</target>
        </trans-unit>
        <trans-unit id="9457734874f267501b5518062771025a28095487" translate="yes" xml:space="preserve">
          <source>over-aligned type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ebfd2ebfcded88e22bd32cfb4e303bf62199dc" translate="yes" xml:space="preserve">
          <source>overlap would occur between the source and the destination arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e28a06bdb5cf4bc47e4a8f6def9b2825919811" translate="yes" xml:space="preserve">
          <source>overlap would occur between the source and the destination strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df28bf7b3a2496c15255bf4f8bd34b86b72f28f1" translate="yes" xml:space="preserve">
          <source>parameter-list</source>
          <target state="translated">parameter-list</target>
        </trans-unit>
        <trans-unit id="69921fed6f949f0f5da35b918f72169010ae0493" translate="yes" xml:space="preserve">
          <source>parameter-list-declarator</source>
          <target state="translated">parameter-list-declarator</target>
        </trans-unit>
        <trans-unit id="f1f1425b65e5770c87be308dd6bfee4b3fa1b113" translate="yes" xml:space="preserve">
          <source>parameters</source>
          <target state="translated">parameters</target>
        </trans-unit>
        <trans-unit id="04ee1a5a50f6bcd2538eccd8e211ba95146d272b" translate="yes" xml:space="preserve">
          <source>parameters cannot have type &lt;code&gt;void&lt;/code&gt; (but can have type pointer to void). The special parameter list that consists entirely of the keyword &lt;code&gt;void&lt;/code&gt; is used to declare functions that take no parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb03e60a25ebf03c565a33c0510d4d530e389119" translate="yes" xml:space="preserve">
          <source>parameters may have incomplete type and may use the VLA notation [*](since C99) (except that in a &lt;a href=&quot;function_definition&quot;&gt;function definition&lt;/a&gt;, the parameter types after array-to-pointer and function-to-pointer adjustment must be complete)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deba527ee1b974266815bd9087bd2a68b7f43065" translate="yes" xml:space="preserve">
          <source>parentheses around the value and the currency symbol are used to represent the sign</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80711e0fce8c1650fc4b16b63f30ef2bae1c32d" translate="yes" xml:space="preserve">
          <source>parenthesized expression if the unparenthesized expression is an lvalue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f21701ed25540cb4d758c29d75afb3364cbab46" translate="yes" xml:space="preserve">
          <source>parmN</source>
          <target state="translated">parmN</target>
        </trans-unit>
        <trans-unit id="e5a8ebfa0aaf79dff27e812b726882df403647d9" translate="yes" xml:space="preserve">
          <source>pc16</source>
          <target state="translated">pc16</target>
        </trans-unit>
        <trans-unit id="d71eda08f027692f30115f28c9fabee3098cd856" translate="yes" xml:space="preserve">
          <source>pc32</source>
          <target state="translated">pc32</target>
        </trans-unit>
        <trans-unit id="a74290746b9929ad54a9d565324acdc4cbce776d" translate="yes" xml:space="preserve">
          <source>per &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1892.htm#dr_471&quot;&gt;DR471&lt;/a&gt;, this only holds for non-zero x. If &lt;code&gt;z&lt;/code&gt; is &lt;code&gt;0+&amp;infin;i&lt;/code&gt;, the result should be &lt;code&gt;0+NaNi&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0032a827f5a60ea197e778467652db9213b9a399" translate="yes" xml:space="preserve">
          <source>per &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1892.htm#dr_471&quot;&gt;DR471&lt;/a&gt;, this only holds for non-zero x. If &lt;code&gt;z&lt;/code&gt; is &lt;code&gt;0+NaNi&lt;/code&gt;, the result should be &lt;code&gt;0+NaNi&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f2f0800ba529790b37c7867b135ebedbd45742" translate="yes" xml:space="preserve">
          <source>performs character mapping according to the specified LC_CTYPE mapping category</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e148e0d6a2883d98982a70d91b55d42ed43d78" translate="yes" xml:space="preserve">
          <source>perror</source>
          <target state="translated">perror</target>
        </trans-unit>
        <trans-unit id="61c45c9d838456cbfc27261ef765e5719f7e9aca" translate="yes" xml:space="preserve">
          <source>plain mutex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a7ca855f38bc559d0fce6727c7e2d8ada99ff8" translate="yes" xml:space="preserve">
          <source>point</source>
          <target state="translated">point</target>
        </trans-unit>
        <trans-unit id="512b2b93e1a0541203f0a283a9edff17463ad8df" translate="yes" xml:space="preserve">
          <source>pointer dereference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e35fa896da76028080913dcb3ace52b830f7373" translate="yes" xml:space="preserve">
          <source>pointer to a &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;fpos_t&lt;/a&gt;&lt;/code&gt; object to store the file position indicator to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa6e35267936d76fd097d62df86f80def4e7b96" translate="yes" xml:space="preserve">
          <source>pointer to a &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;fpos_t&lt;/a&gt;&lt;/code&gt; object to use as new value of file position indicator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7594ba6dbf3badcd94806a0d43093627b58c326c" translate="yes" xml:space="preserve">
          <source>pointer to a &lt;code&gt;&lt;a href=&quot;time_t&quot;&gt;time_t&lt;/a&gt;&lt;/code&gt; object specifying the time to print</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237f34d51276219161c94910d8b1d94e81374827" translate="yes" xml:space="preserve">
          <source>pointer to a &lt;code&gt;&lt;a href=&quot;time_t&quot;&gt;time_t&lt;/a&gt;&lt;/code&gt; object where the time will be stored, or a null pointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e427230556606e7baa55972e10d01bc4c83e8e6" translate="yes" xml:space="preserve">
          <source>pointer to a &lt;code&gt;&lt;a href=&quot;tm&quot;&gt;tm&lt;/a&gt;&lt;/code&gt; object specifying local calendar time to convert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4bfa1bc6858aaf311d0fd7fb9474631d758aca" translate="yes" xml:space="preserve">
          <source>pointer to a &lt;code&gt;&lt;a href=&quot;tm&quot;&gt;tm&lt;/a&gt;&lt;/code&gt; object specifying the time to print</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea93f8ba9834d035d83412b4bd1168dc604d3fd3" translate="yes" xml:space="preserve">
          <source>pointer to a &lt;code&gt;time_t&lt;/code&gt; object to convert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54388dc6bbd55619015a61b61dac03a037103fac" translate="yes" xml:space="preserve">
          <source>pointer to a buffer for the stream to use or null pointer to change size and mode only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93add368ce86d2268132f559943519b38631816d" translate="yes" xml:space="preserve">
          <source>pointer to a buffer for the stream to use. If &lt;code&gt;&lt;a href=&quot;../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt; is supplied, the buffering is turned off</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc6e77b593cd58ffd489cdbad16b45d87dca23b" translate="yes" xml:space="preserve">
          <source>pointer to a character string to write to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c425f11199ea51907f91684bf79063085bd219c" translate="yes" xml:space="preserve">
          <source>pointer to a condition variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497f1c576fa8e40056f9ef9344915004c575d54c" translate="yes" xml:space="preserve">
          <source>pointer to a function to be called on normal program termination</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3510a6a8978a3df53f3cb32f2f8b751a97b84b" translate="yes" xml:space="preserve">
          <source>pointer to a function to be called on quick program termination</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f21e79ae107d1eef073865f69b0d203dc7af0c" translate="yes" xml:space="preserve">
          <source>pointer to a function to call at thread exit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a701565b789ce4e0a22b54d6b3a2f25d73c84ea9" translate="yes" xml:space="preserve">
          <source>pointer to a function. The signature of the function must be equivalent to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f740e63566b311acd730630f6601da60553d9a" translate="yes" xml:space="preserve">
          <source>pointer to a narrow null-terminated string identifying the C locale after applying the changes, if any, or null pointer on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d14dfc7839a467f4f406ff58efd838552c7862fd" translate="yes" xml:space="preserve">
          <source>pointer to a null-terminated character string specifying how to interpret the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05913f3e5d66fd7e94d291d6a1c0be3231029f95" translate="yes" xml:space="preserve">
          <source>pointer to a null-terminated character string specifying how to read the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855ba0c1f851d58decc057cce05eb92d18994be8" translate="yes" xml:space="preserve">
          <source>pointer to a null-terminated character string to read from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8709170f808354428b7bed1f28ecd6cf60e86a" translate="yes" xml:space="preserve">
          <source>pointer to a null-terminated multibyte character string specifying the format of conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6b16930a6a65fe0050cd781e3fc78addd882ed" translate="yes" xml:space="preserve">
          <source>pointer to a null-terminated multibyte string specifying how to interpret the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aba10f0fd34fb78f53e0ef850feb8473d6c708a" translate="yes" xml:space="preserve">
          <source>pointer to a null-terminated string containing the new path of the file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fda3d5b3d7e0402f5205e22e3074790d5ffbcb6" translate="yes" xml:space="preserve">
          <source>pointer to a null-terminated string containing the path identifying the file to delete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f71a630df548ce202bf9d3138497d506422358" translate="yes" xml:space="preserve">
          <source>pointer to a null-terminated string containing the path identifying the file to rename</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a0d58abef4d3167052ea8dac76190eb393697c" translate="yes" xml:space="preserve">
          <source>pointer to a null-terminated string with explanatory message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38735e5bb38745117772eaffafaa5f08444cdbf3" translate="yes" xml:space="preserve">
          <source>pointer to a null-terminated wide character string specifying the format of conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd8d9a235506a72124c90655a28fee5dc0bcf2c" translate="yes" xml:space="preserve">
          <source>pointer to a null-terminated wide string specifying how to interpret the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd83eecff7d17a5411934b9da6f91e5d593a516" translate="yes" xml:space="preserve">
          <source>pointer to a null-terminated wide string specifying how to read the input. The format string consists of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e5bc8b9ed65bb155c20c548884e7f272285a98" translate="yes" xml:space="preserve">
          <source>pointer to a null-terminated wide string to read from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7edd7bf441238bd32a91dbb5be329be06367c41f" translate="yes" xml:space="preserve">
          <source>pointer to a object specifying timeout time to wait until</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc5299ab280d79f3040932f80200b213e6525eb" translate="yes" xml:space="preserve">
          <source>pointer to a pointer to a wide character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba39572f49ac151df9ef36b7c78731c82d7ad347" translate="yes" xml:space="preserve">
          <source>pointer to a pointer to character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe468df745453c86e8ff4a0edfb5b36d2d858e8" translate="yes" xml:space="preserve">
          <source>pointer to a pointer to wide character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b0f2e53427be2c38e7e9f15885cb7a08b96736" translate="yes" xml:space="preserve">
          <source>pointer to a pointer where the function stores the result (an out-parameter)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd407eda5736c7c89f49093c89ad52bea2b07cfb" translate="yes" xml:space="preserve">
          <source>pointer to a size_t object where the result will be stored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761059de63a288cb6d54f879bccde25bda90f559" translate="yes" xml:space="preserve">
          <source>pointer to a struct tm object specifying the time to format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e376201c49a6801f32ac7e7b878d200b07178c6c" translate="yes" xml:space="preserve">
          <source>pointer to a struct tm object to store the result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c190a1493d2ccbbe5b86261b34441e652cb68f28" translate="yes" xml:space="preserve">
          <source>pointer to a time_t object to convert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754fcd40c3add10e075eb040ddd8777e5c770ebf" translate="yes" xml:space="preserve">
          <source>pointer to a user-provided buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54897d0292fddbbc25bcc11b050fa0264cc8d8d8" translate="yes" xml:space="preserve">
          <source>pointer to a user-provided character array where getenv_s will store the contents of the environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2bb44c60d57f9725b7f428b8f16548d6b364e0" translate="yes" xml:space="preserve">
          <source>pointer to a user-provided location where getenv_s will store the length of the environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e21408a1a22113b933560f1cb69be018258c27" translate="yes" xml:space="preserve">
          <source>pointer to a user-supplied buffer at least 26 bytes in length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea26270063879b53141ed09210bd0a8e53cfde1" translate="yes" xml:space="preserve">
          <source>pointer to a variable to store identifier of the condition variable to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae39c4ac545fe0f201e1f33ff909b8ba7ac55100" translate="yes" xml:space="preserve">
          <source>pointer to a wide character string to write to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b885dc7b2eea9d24b2d80db1ad8f2ebea76b6109" translate="yes" xml:space="preserve">
          <source>pointer to a wide string to write to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba373c3e279349dbfc7ec3d6d52cc3c3013b166d" translate="yes" xml:space="preserve">
          <source>pointer to an &lt;code&gt;fexcept_t&lt;/code&gt; object where the flags will be stored or read from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b03798cadf446346561866ebae9ffc5f0dd307" translate="yes" xml:space="preserve">
          <source>pointer to an atomic object to initialize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ab2b6d52d28e170bb32db7dffc18cc27d610c2" translate="yes" xml:space="preserve">
          <source>pointer to an element of a char array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b1cac4989051b947a2456f1ec7723e5b45f852" translate="yes" xml:space="preserve">
          <source>pointer to an element of a char array of size at least &lt;code&gt;bufsz&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c95ee302a2e9c2f33caf40aeea29c73d580728" translate="yes" xml:space="preserve">
          <source>pointer to an element of a multibyte character string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d70c4b5a30bda2255ccfb0fc1e84a99fa14d7d3" translate="yes" xml:space="preserve">
          <source>pointer to an implementation-defined object or a null pointer. Examples of implementation-defined objects are objects that give the name of the function that detected the violation and the line number when the violation was detected</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b1be1b7e736e2c078df81b4624b026529533b1" translate="yes" xml:space="preserve">
          <source>pointer to an integer value to store the sign and some bits of &lt;code&gt;x/y&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a384cffa20af24d12e4837b067a390669da98edd" translate="yes" xml:space="preserve">
          <source>pointer to an object of type &lt;code&gt;call_once&lt;/code&gt; that is used to ensure &lt;code&gt;func&lt;/code&gt; is called only once</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d15f943b3d1fc2fde137dccaf584ca5e83a7254" translate="yes" xml:space="preserve">
          <source>pointer to an object of type &lt;code&gt;char*&lt;/code&gt;, which is used by strtok_s to store its internal state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d6ad9dcb499c4b4ff2430c5eb4fd825fcf3ce6f" translate="yes" xml:space="preserve">
          <source>pointer to an object of type &lt;code&gt;struct timespec&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd6fb9826c241c9e8bd99142b56e677d91e35f1" translate="yes" xml:space="preserve">
          <source>pointer to an object of type &lt;code&gt;wchar_t*&lt;/code&gt;, which is used by both &lt;code&gt;wcstok&lt;/code&gt; and &lt;code&gt;wcstok_s&lt;/code&gt; to store the internal state of the parser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed629c0259a9d2983515cfe04b56d32b0dd3726" translate="yes" xml:space="preserve">
          <source>pointer to an object which initially holds the size of &lt;code&gt;str&lt;/code&gt;: strtok_s stores the number of characters that remain to be examined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87dc33e2a18d51b57fd120587c90cf6d934ca1eb" translate="yes" xml:space="preserve">
          <source>pointer to an object which initially holds the size of &lt;code&gt;str&lt;/code&gt;: wcstok_s stores the number of characters that remain to be examined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1248961b1794fb3cffa0d543aeaf6e9847219ae" translate="yes" xml:space="preserve">
          <source>pointer to an out-parameter where the result (length of the multibyte sequence or the shift sequence status) will be stored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729d7b107db62de0c4f4f47fa35434babb1d0210" translate="yes" xml:space="preserve">
          <source>pointer to an out-parameter where the result (number of bytes in the multibyte string including any shift sequences) will be stored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926f02419f0994f2b7f2af4a763291daaf0ac0c4" translate="yes" xml:space="preserve">
          <source>pointer to character string that describes the error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3090ae94997ce72273136098f3fa3b53fc679346" translate="yes" xml:space="preserve">
          <source>pointer to floating point value to store the integral part to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392ebeb677d68268972a4f2623fb683cc85ffe94" translate="yes" xml:space="preserve">
          <source>pointer to function of type &lt;code&gt;constraint_handler_t&lt;/code&gt; or a null pointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2ad1e165985a676219285353e8b10cfb624734" translate="yes" xml:space="preserve">
          <source>pointer to integer value to store the exponent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0f078ef10fed9a03db388a979bbf86654563ba" translate="yes" xml:space="preserve">
          <source>pointer to memory location to put the identifier of the new thread</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dcd9dda81862ba0944845a2ac0f242366d4315d" translate="yes" xml:space="preserve">
          <source>pointer to memory location to store the new thread-specific storage key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b4089bc01a9c40b4b148642e6fd832f33cab78" translate="yes" xml:space="preserve">
          <source>pointer to narrow character array where the multibyte character will be stored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b8efc39be1077be54d4caa1fc527f24dc1daa3" translate="yes" xml:space="preserve">
          <source>pointer to narrow character array where the multibyte characters will be stored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f10627c24c2eee641572b2d5f90eff47ae5eaca7" translate="yes" xml:space="preserve">
          <source>pointer to pointer to the first element of a null-terminated multibyte string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98783e289e0dce3b8220d1ce98f12ed1336dc69" translate="yes" xml:space="preserve">
          <source>pointer to pointer to the first element of a null-terminated wide string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884da0b1ad15a83c343a413a55fdfbbf8d25154b" translate="yes" xml:space="preserve">
          <source>pointer to the C I/O stream to modify or query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34ab8cee8dc472915172144eee4c65e5c51f57f" translate="yes" xml:space="preserve">
          <source>pointer to the array to examine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73114bb9a916adaa3e2bb9f82731d2954e3d7712" translate="yes" xml:space="preserve">
          <source>pointer to the array to sort</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54aaba5885575f4a6703f9996600d36ad077cff" translate="yes" xml:space="preserve">
          <source>pointer to the array where the read objects are stored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb55c46166f1027ace4330e49aa147e74e41930" translate="yes" xml:space="preserve">
          <source>pointer to the atomic flag object to modify</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ef6c51a63d739c24012346b405446ae420187c" translate="yes" xml:space="preserve">
          <source>pointer to the atomic object to access</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2bb59772df632c34030732a723d1018d7d8bcf" translate="yes" xml:space="preserve">
          <source>pointer to the atomic object to inspect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e65ac31816d12744b76b8f8f58d099eace5049d" translate="yes" xml:space="preserve">
          <source>pointer to the atomic object to modify</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b30013bb1fe224c1036ae62a6f468b4ac998c9df" translate="yes" xml:space="preserve">
          <source>pointer to the atomic object to test and modify</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff54a86416994befa5d5e8d4e89085d9ea08978" translate="yes" xml:space="preserve">
          <source>pointer to the character array capable of holding at least &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;L_tmpnam&lt;/a&gt;&lt;/code&gt; bytes, to be used as a result buffer. If null pointer is passed, a pointer to an internal static buffer is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186cd069b4b0f2ecea26cc7af1c9314a043a1460" translate="yes" xml:space="preserve">
          <source>pointer to the character array capable of holding at least &lt;code&gt;L_tmpnam_s&lt;/code&gt; bytes, to be used as a result buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a4d7455e5cab3f1ee961ff9af60fee31510fe6" translate="yes" xml:space="preserve">
          <source>pointer to the character array for output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee12a10ccb8e2b844c8483f8088baa15fa67552" translate="yes" xml:space="preserve">
          <source>pointer to the character array to copy from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba5d8911a3ed558aff41a7dd589d452da1f6561" translate="yes" xml:space="preserve">
          <source>pointer to the character array to copy to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec678cfbb051760917d97b631f363768eb27a8ef" translate="yes" xml:space="preserve">
          <source>pointer to the character array to write to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a9afef5d9205859a65f73cb6aef8cea9a04f77" translate="yes" xml:space="preserve">
          <source>pointer to the condition variable to block on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a695f66362fd4dac9fe7c69c858e03e399b0dfc" translate="yes" xml:space="preserve">
          <source>pointer to the condition variable to destroy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0886dc029cd74559bb5ffbf8bbfa2506b33a999d" translate="yes" xml:space="preserve">
          <source>pointer to the conversion state object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f98e15c7b7e88aa54e7d41dabb3e27d50bb128" translate="yes" xml:space="preserve">
          <source>pointer to the conversion state object used when interpreting the multibyte string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1363c47a60ddfd56604129045cbc7aa01e68c5aa" translate="yes" xml:space="preserve">
          <source>pointer to the conversion state used when interpreting the multibyte character string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ef36db323ae38ad282dbe0bb5e2677138d9e0b" translate="yes" xml:space="preserve">
          <source>pointer to the current &lt;code&gt;&lt;a href=&quot;lconv&quot;&gt;lconv&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9622693021a060884da077fc55d026599506bf6f" translate="yes" xml:space="preserve">
          <source>pointer to the duration to sleep for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282db8d94f28a558570c87fbbbe0e59ae13e14d4" translate="yes" xml:space="preserve">
          <source>pointer to the element to search for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4d25de5c7c2995f36d22620ea040f1386b4a52" translate="yes" xml:space="preserve">
          <source>pointer to the first character of a null-terminated byte string to transform</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf439ce2740049b84026a531934d3695211c072" translate="yes" xml:space="preserve">
          <source>pointer to the first element of a null-terminated multibyte string to convert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec217be3551b43e73a6e7fd8d4203f21e08a25f" translate="yes" xml:space="preserve">
          <source>pointer to the first element of a null-terminated wide string to convert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68918db7cbb87b6147f4a0639ca7daa138620dd0" translate="yes" xml:space="preserve">
          <source>pointer to the first element of a wide null-terminated string to write the transformed string to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca85508088115312d0e7d49bac52a212ae160e6" translate="yes" xml:space="preserve">
          <source>pointer to the first element of the array where the transformed string will be written</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97413dc08b88a2884cf0fd0637db39fb2ee0831" translate="yes" xml:space="preserve">
          <source>pointer to the first element of the char array for output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9486b0db8cdee4fd56cc939cf1e58c8832bf48f7" translate="yes" xml:space="preserve">
          <source>pointer to the first element of the wchar_t array for output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88ba00208e079dbe26b33a8e6b1e5859460e1c4" translate="yes" xml:space="preserve">
          <source>pointer to the first object in the array to be written</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7190877a941a82d109d09cbf855307fabbe775b4" translate="yes" xml:space="preserve">
          <source>pointer to the location where the resulting 16-bit wide character will be written</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513f5815c665ba981c1c9851355198eeff42858f" translate="yes" xml:space="preserve">
          <source>pointer to the location where the resulting 32-bit wide character will be written</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a60f692f2a3e1b2d1fcfaf2100d17d367f7af65" translate="yes" xml:space="preserve">
          <source>pointer to the location where the resulting wide character will be written</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c844e030ac724aa9547c2cabb6ee850a7dea0448" translate="yes" xml:space="preserve">
          <source>pointer to the mbstate_t object to examine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3873768bf3d5980b209b353997359112dd755d02" translate="yes" xml:space="preserve">
          <source>pointer to the memory area to be reallocated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549b7d13a15d9b6cf0bd63eb8886a46ad46c4ec6" translate="yes" xml:space="preserve">
          <source>pointer to the memory to deallocate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf5324b03a7d01d4c41e0b2b2c062546977330d" translate="yes" xml:space="preserve">
          <source>pointer to the message written to the standard error stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577279dad5cdf02fb1b289aed6a8d6d51a26602a" translate="yes" xml:space="preserve">
          <source>pointer to the multibyte character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad2d82802d2b43e1df46c21f19ac14fe601609e" translate="yes" xml:space="preserve">
          <source>pointer to the multibyte character string used as input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74497e3b2ab092f57a856a1f141a52a4c2dded6" translate="yes" xml:space="preserve">
          <source>pointer to the mutex to destroy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd6abe39c605e319521350c7dcaf37a264f108de" translate="yes" xml:space="preserve">
          <source>pointer to the mutex to initialize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f470145a46bb8c1c95590d5866a778a326ea9e66" translate="yes" xml:space="preserve">
          <source>pointer to the mutex to lock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9f9bed6571819963787f755a11b5cc05b0c142" translate="yes" xml:space="preserve">
          <source>pointer to the mutex to unlock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d23832acfbb4e386a45de40bd857f4d05c13ce9" translate="yes" xml:space="preserve">
          <source>pointer to the mutex to unlock for the duration of the block</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ed1de15bf124ce12e181d85fb67b09e2892bdf" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated byte string identifying delimiters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db78d484115e17b97b1212b859f2f0c31cd94727" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated byte string that contains the characters to search for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2743c9e873b7419d43b5a38662447d87d498e93" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated byte string to append to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7daf1c28e744b50f7ef3a4ed7e2bbf6de4d6079" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated byte string to be analyzed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e548cf2e07b9463b060acbd7a6223b993fd795a2" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated byte string to be examined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6367a4b10f8ec4b36cfc83ee0dac72571b8fe228" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated byte string to be interpreted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c31b28c03a9ccba41ae160e2c7cb962f16c285" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated byte string to copy from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9ed016121a932e6719e3fdc575acb82147198e" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated byte string to examine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290cd6afee7f73f41da908ebb2b2247b043f2f6e" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated byte string to search for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad1a87b1e2ac53c7a43c61cc692215ec81e62f7" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated byte string to tokenize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5490c6aed0af543564b9746f4d52e724842b3f" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated wide character string to transform</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b030ee9e3e0d7e27ba274f81f46293bfc532bc0d" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated wide string identifying delimiters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273e9e8916aa995f76cba8cfa7a527b7b7f80f86" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated wide string that contains the characters to search for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd6d4bbc7c7a841289f5e42334abadbde215c2a" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated wide string to append to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12758c71f37e78283c69c5759eda4b8026306f67" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated wide string to be analyzed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263112767dc7792ae0cd58456af6f954cce7dfc2" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated wide string to be examined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1258b469da98dd8f95ccac6e3338b5a60726f63c" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated wide string to be interpreted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfd3c5a43da8f8a22fe250969d58206c7608804" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated wide string to copy from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a11ac7ab9e40cb71acb3b12f037e53f212ae6f9" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated wide string to examine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e087e240806c2f874978eba13e0a9a653a8712b" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated wide string to search for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f338390c86e4aa6c8bc9297c27c0d2ca7f553a0" translate="yes" xml:space="preserve">
          <source>pointer to the null-terminated wide string to tokenize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa72a7fbbe4a7a64334147d81508b25d871a960e" translate="yes" xml:space="preserve">
          <source>pointer to the object of type &lt;code&gt;fenv_t&lt;/code&gt; set by an earlier call to &lt;code&gt;&lt;a href=&quot;feholdexcept&quot;&gt;feholdexcept&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;fegetenv&lt;/code&gt; or equal to &lt;code&gt;&lt;a href=&quot;fe_dfl_env&quot;&gt;FE_DFL_ENV&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1516707bfdd4ac2bb2bcde0c32e5f1fc28017785" translate="yes" xml:space="preserve">
          <source>pointer to the object of type &lt;code&gt;fenv_t&lt;/code&gt; where the floating-point environment will be stored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d313b810f85c82fd61d72e943c6306df1f52c5" translate="yes" xml:space="preserve">
          <source>pointer to the object of type &lt;code&gt;fenv_t&lt;/code&gt; which holds the status of the floating-point environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384f04240b9582d6329b40bc3fb441cda6c8c65e" translate="yes" xml:space="preserve">
          <source>pointer to the object to be examined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7a6bd104c8e017281bb85f55eb988e4185857d" translate="yes" xml:space="preserve">
          <source>pointer to the object to copy from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428b4e5c064c42aac3aba1d64fcd7439dc83e66c" translate="yes" xml:space="preserve">
          <source>pointer to the object to copy to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14a90f9c17598af70e40d8799e9dd2e4bcc75ff" translate="yes" xml:space="preserve">
          <source>pointer to the object to fill</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a989596bb98e96f030d73077e090ef45e6648fa" translate="yes" xml:space="preserve">
          <source>pointer to the object to put the remaining time on interruption. May be &lt;code&gt;&lt;a href=&quot;../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt;, in which case it is ignored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921d75cb68fe08002df9a2207cd6dc57a9b13ad6" translate="yes" xml:space="preserve">
          <source>pointer to the output stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af23b0b1ba3abfa508f03418a83e4cc411aea1f8" translate="yes" xml:space="preserve">
          <source>pointer to the timeout time to wait until</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70cf8617858445213bf7ba7ee39cf1934023d34d" translate="yes" xml:space="preserve">
          <source>pointer to the value expected to be found in the atomic object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8420c845d4b8e03a13caa457a9a5048e9de5f8" translate="yes" xml:space="preserve">
          <source>pointer to the variable holding the conversion state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4908f987e0fcadf9ac29fc1256769482c4e15bc7" translate="yes" xml:space="preserve">
          <source>pointer to the wide character array to be examined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73132fb22e602258365706b7440ba373b8171071" translate="yes" xml:space="preserve">
          <source>pointer to the wide character array to copy from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470f3ac1a203d6c068fe8530bf8b299d9d436c9a" translate="yes" xml:space="preserve">
          <source>pointer to the wide character array to copy to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010a5e2ed0e150739cb5bfb16fd9c021b91fb070" translate="yes" xml:space="preserve">
          <source>pointer to the wide character array to fill</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad4915204eb8a8e731822c8dd4cd6d2468ac810b" translate="yes" xml:space="preserve">
          <source>pointer to the wide character for output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b289d30f6e9afa49fdbb2dd0388bdfe58601e9a" translate="yes" xml:space="preserve">
          <source>pointer to the wide string to copy from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f9336b635204b5e72aef4df1cdaca94def4707" translate="yes" xml:space="preserve">
          <source>pointer to wide character array where the results will be stored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b448eb42abc466a65704e86d5a4850d46a97ec" translate="yes" xml:space="preserve">
          <source>pointer to wide character array where the wide string will be stored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08aa496bf69321c55248a2a8c6e8a6b6565fcc5" translate="yes" xml:space="preserve">
          <source>pointer types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b30ed6446e9582ee3e83a0064661ca8d46d199d" translate="yes" xml:space="preserve">
          <source>pointer-expression</source>
          <target state="translated">pointer-expression</target>
        </trans-unit>
        <trans-unit id="f8d466108d6fa90c98be3f0adbd89740de717882" translate="yes" xml:space="preserve">
          <source>pointer-expression&lt;code&gt;[&lt;/code&gt;integer-expression&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">pointer-expression&lt;code&gt;[&lt;/code&gt;integer-expression&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="715cb6ecaa1528fbe1b15be48bcd8e3fb7722a0c" translate="yes" xml:space="preserve">
          <source>pointers are initialized to null pointer values of their types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b845c161af1a047cde81362df473b8a247aa1a" translate="yes" xml:space="preserve">
          <source>pointers to members of the same union compare equal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6053db4bd7b8fbf0094349edcd014c22a90230a" translate="yes" xml:space="preserve">
          <source>pointers to the null-terminated byte strings to compare</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c640bfebc6e8810fc36cb2109285165b3ebcbf5" translate="yes" xml:space="preserve">
          <source>pointers to the null-terminated wide strings to compare</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86974ed8885e483419a6cb672afced50d3818fe" translate="yes" xml:space="preserve">
          <source>pointers to the objects to compare</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0942a9852ae3fdee056b16ffedb542cea5a2199" translate="yes" xml:space="preserve">
          <source>pointers to the possibly null-terminated arrays to compare</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ee949743384f64bb4ee64835e5f02dd54cfe57" translate="yes" xml:space="preserve">
          <source>pointers to the wide character arrays to compare</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad0bebc943f01706a86204907a2d9fbeac39563" translate="yes" xml:space="preserve">
          <source>pointers to void and pointers to (possibly cvr-qualified) character types are considered compatible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72af30d878831c0324b9618c8edd2ccbc3df0fd3" translate="yes" xml:space="preserve">
          <source>pole error occurred in an earlier floating-point operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1478c028a16709cb32d8b1a69ccca032ca1d9ef5" translate="yes" xml:space="preserve">
          <source>pos</source>
          <target state="translated">pos</target>
        </trans-unit>
        <trans-unit id="a040b929a5829ea5aa084f9aa5259bb3735b6b55" translate="yes" xml:space="preserve">
          <source>position to which &lt;code&gt;offset&lt;/code&gt; is added. It can have one of the following values: &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;SEEK_SET&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;SEEK_CUR&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;SEEK_END&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c489d619caf333fd1dc1b5746f8a9b6af996204" translate="yes" xml:space="preserve">
          <source>pow</source>
          <target state="translated">pow</target>
        </trans-unit>
        <trans-unit id="3c16113a23a5b59fbf16ea9220455904bf751ef7" translate="yes" xml:space="preserve">
          <source>pow, powf, powl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6de266d26c14cbdf279cdaa51422c1bb5783c28" translate="yes" xml:space="preserve">
          <source>powl</source>
          <target state="translated">powl</target>
        </trans-unit>
        <trans-unit id="2bb1f042435f6c57bda892f9904e7b94375dc599" translate="yes" xml:space="preserve">
          <source>powpowfpowl</source>
          <target state="translated">powpowfpowl</target>
        </trans-unit>
        <trans-unit id="13800272d7a85c03409344e8e130d16ae2dc138f" translate="yes" xml:space="preserve">
          <source>precision</source>
          <target state="translated">precision</target>
        </trans-unit>
        <trans-unit id="72b708489fe91466ededf522ce09519f80e85484" translate="yes" xml:space="preserve">
          <source>precision is increased if necessary, to write one leading zero. In that case if both the converted value and the precision are &lt;code&gt;​0​&lt;/code&gt;, single &lt;code&gt;​0​&lt;/code&gt; is written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ccbdc4c8345e049ef90344ce5a53a4c0185d94" translate="yes" xml:space="preserve">
          <source>preprocessing instruction (one of &lt;code&gt;define&lt;/code&gt;, &lt;code&gt;undef&lt;/code&gt;, &lt;code&gt;include&lt;/code&gt;, &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;ifdef&lt;/code&gt;, &lt;code&gt;ifndef&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;elif&lt;/code&gt;, &lt;code&gt;endif&lt;/code&gt;, &lt;code&gt;line&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;pragma&lt;/code&gt;) &lt;sup id=&quot;cite_ref-1&quot;&gt;&lt;a href=&quot;preprocessor#cite_note-1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ed280e576cfcabf7ef2df0359cecf340b9aac2" translate="yes" xml:space="preserve">
          <source>preprocessing tokens</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7971f9a8c0417df30817e176977cc2769f236bf3" translate="yes" xml:space="preserve">
          <source>primary expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b62261527af62ca079550f31042238ff0ea0fbd" translate="yes" xml:space="preserve">
          <source>printf, fprintf, sprintf, snprintf, printf_s, fprintf_s, sprintf_s, snprintf_s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b774cb3a4f8393f80278f56884aefdc78416f6d" translate="yes" xml:space="preserve">
          <source>printffprintfsprintfsnprintfprintf_sfprintf_ssprintf_ssnprintf_s</source>
          <target state="translated">printffprintfsprintfsnprintfprintf_sfprintf_ssprintf_ssnprintf_s</target>
        </trans-unit>
        <trans-unit id="ee05b5bd67aaadcc3180a13f4fb79502a3588179" translate="yes" xml:space="preserve">
          <source>prints formatted output to &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;, a file stream or a buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b45b37492415361ac298d130aa0cc773c273082" translate="yes" xml:space="preserve">
          <source>prints formatted output to &lt;code&gt;stdout&lt;/code&gt;, a file stream or a buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c183895104a4645b26c6ea560ee6350132ca002" translate="yes" xml:space="preserve">
          <source>prints formatted wide character output to &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;, a file stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4b854c4363e15c69d393b558da2ae8f0df0526" translate="yes" xml:space="preserve">
          <source>prints formatted wide character output to &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;, a file stream or a buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05d8810e0f2994f5f9e5924d5977f50ba3fe359" translate="yes" xml:space="preserve">
          <source>prints formatted wide character output to &lt;code&gt;stdout&lt;/code&gt;, a file stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdac5f757642676c843dd0a71d152f5975ec14c1" translate="yes" xml:space="preserve">
          <source>prints formatted wide character output to &lt;code&gt;stdout&lt;/code&gt;, a file stream or a buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb060753dddb3cdb1746d9ff0d6da08069b5232" translate="yes" xml:space="preserve">
          <source>processor time since era type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46ebacd72828a574283cff6b24fcae626348f14" translate="yes" xml:space="preserve">
          <source>produces a value with the magnitude of a given value and the sign of another given value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a007151abe87cc01a5b6e9cc418e85286e2087" translate="yes" xml:space="preserve">
          <source>product</source>
          <target state="translated">product</target>
        </trans-unit>
        <trans-unit id="16a0fa6710d1eab2c16edd37cf521d2e8ba1a77f" translate="yes" xml:space="preserve">
          <source>program (boot loaders, OS kernels, etc) are implementation-defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44120775617b4f2a26a7728431a6b6468f051f05" translate="yes" xml:space="preserve">
          <source>program, in which case the entry point is implementation-defined).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c257c6a8cd537400e7297bcb92b9a1ef6e30d00" translate="yes" xml:space="preserve">
          <source>prototype</source>
          <target state="translated">prototype</target>
        </trans-unit>
        <trans-unit id="e1b310ecb222181e018e83a681275bdd5f1bd4ac" translate="yes" xml:space="preserve">
          <source>provides a way to declare an identifier as a type alias, to be used to replace a possibly complex &lt;a href=&quot;compatible_type#Type_names&quot;&gt;type name&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67f1ee17880030ce11821dcc9be7af90b863d9b" translate="yes" xml:space="preserve">
          <source>ps</source>
          <target state="translated">ps</target>
        </trans-unit>
        <trans-unit id="daf4a923626420fa50e11cdf1f69b7ac3a91a362" translate="yes" xml:space="preserve">
          <source>ptr</source>
          <target state="translated">ptr</target>
        </trans-unit>
        <trans-unit id="d6b6d0fda4c3305d82b3bb3faf13d58719b7c0a1" translate="yes" xml:space="preserve">
          <source>ptrdiff_t</source>
          <target state="translated">ptrdiff_t</target>
        </trans-unit>
        <trans-unit id="823dd1d8e46ce1cda303931a3fcc0c34e74cdbb9" translate="yes" xml:space="preserve">
          <source>putc</source>
          <target state="translated">putc</target>
        </trans-unit>
        <trans-unit id="cc2f4b22f6e8143010ea82a1390e950c47f6b816" translate="yes" xml:space="preserve">
          <source>putc with error checking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7568d7e6ec72795f5cb4021c49a90503fab38d" translate="yes" xml:space="preserve">
          <source>putchar</source>
          <target state="translated">putchar</target>
        </trans-unit>
        <trans-unit id="c952c792aea614ec160470a26618560d3d2e64e7" translate="yes" xml:space="preserve">
          <source>putchar with error checking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98c7cd92e7e43c61ae38e86011a05d481660773" translate="yes" xml:space="preserve">
          <source>puts</source>
          <target state="translated">puts</target>
        </trans-unit>
        <trans-unit id="01deb133ca8b3c06b21fbde0af1bd39942d30397" translate="yes" xml:space="preserve">
          <source>puts a character back into a file stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a8e55efab16caa5dcacacff295e59564250ccb" translate="yes" xml:space="preserve">
          <source>puts a wide character back into a file stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444c413290925ab3145b045cdd310a587b66daee" translate="yes" xml:space="preserve">
          <source>putwc</source>
          <target state="translated">putwc</target>
        </trans-unit>
        <trans-unit id="0bd925cef6047aff9848ada94f99eac39a5992fd" translate="yes" xml:space="preserve">
          <source>putwchar</source>
          <target state="translated">putwchar</target>
        </trans-unit>
        <trans-unit id="c3a0759193588607186ad63edccccbc67b102711" translate="yes" xml:space="preserve">
          <source>pwc</source>
          <target state="translated">pwc</target>
        </trans-unit>
        <trans-unit id="eebce6cc8e65c503c21a8364aa278fb1d289145a" translate="yes" xml:space="preserve">
          <source>qsort, qsort_s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3bebdf7b86f6e2cb08224c763f0d651a312e86" translate="yes" xml:space="preserve">
          <source>qsort_s</source>
          <target state="translated">qsort_s</target>
        </trans-unit>
        <trans-unit id="bde0f3f9f6bd6f60aad9a7bef76508572db81d26" translate="yes" xml:space="preserve">
          <source>qsortqsort_s</source>
          <target state="translated">qsortqsort_s</target>
        </trans-unit>
        <trans-unit id="9f04d6a7d7bb81380c6230d828b6b0454dab10aa" translate="yes" xml:space="preserve">
          <source>qualified</source>
          <target state="translated">qualified</target>
        </trans-unit>
        <trans-unit id="1d1b43d52e11e46d490fa9998bed3704a48bd93c" translate="yes" xml:space="preserve">
          <source>qualifier from C++, but unlike in C++, expressions of const-qualified type in C are not &lt;a href=&quot;constant_expression&quot;&gt;constant expressions&lt;/a&gt;; they may not be used as &lt;a href=&quot;switch&quot;&gt;case&lt;/a&gt; labels or to initialize &lt;a href=&quot;static_storage_duration&quot;&gt;static&lt;/a&gt; and &lt;a href=&quot;thread_storage_duration&quot;&gt;thread&lt;/a&gt; storage duration objects, &lt;a href=&quot;enum&quot;&gt;enumerators&lt;/a&gt;, or &lt;a href=&quot;bit_field&quot;&gt;bit field&lt;/a&gt; sizes. When they are used as &lt;a href=&quot;array&quot;&gt;array&lt;/a&gt; sizes, the resulting arrays are VLAs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20bb5c4b88a89262b3d95a37738eb288bea3c9c9" translate="yes" xml:space="preserve">
          <source>qualifier.</source>
          <target state="translated">qualifier.</target>
        </trans-unit>
        <trans-unit id="7b65a2f4491d24fdfb65c8a93e3af2f23d929153" translate="yes" xml:space="preserve">
          <source>qualifiers</source>
          <target state="translated">qualifiers</target>
        </trans-unit>
        <trans-unit id="f9fb365f7a02e9713ea2992110947a68506675bd" translate="yes" xml:space="preserve">
          <source>qualifiers. This page describes the effects of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54735b4073ecd1a95567ce8bbdde2fe9dfa45188" translate="yes" xml:space="preserve">
          <source>queries numeric and monetary formatting details of the current locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5bf57734a49948b4d8e12ceb682a490c459502b" translate="yes" xml:space="preserve">
          <source>question mark</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f437de87f8983dc3286508a590492c037f6994" translate="yes" xml:space="preserve">
          <source>quick_exit</source>
          <target state="translated">quick_exit</target>
        </trans-unit>
        <trans-unit id="857670a148ddb467a4f27de21b9220867fdfa7a1" translate="yes" xml:space="preserve">
          <source>quo</source>
          <target state="translated">quo</target>
        </trans-unit>
        <trans-unit id="657db1e0dffa000c9cdad10f4bed2f8bfb0b5a09" translate="yes" xml:space="preserve">
          <source>raise</source>
          <target state="translated">raise</target>
        </trans-unit>
        <trans-unit id="b193468d409ac84dd31a36613e9910a096a99957" translate="yes" xml:space="preserve">
          <source>raised to the given power (2&lt;sup&gt;x&lt;/sup&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fd67d76266d4e5add103f5e034ab90fde295a2" translate="yes" xml:space="preserve">
          <source>raised to the given power (e&lt;sup&gt;x&lt;/sup&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc1f45cdba1dbf8cc3b101cf45deee888fd6b45" translate="yes" xml:space="preserve">
          <source>raised to the given power, minus one (e&lt;sup&gt;x&lt;/sup&gt;-1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c20a396e227793aaf36f250ded2b37e9694a3a" translate="yes" xml:space="preserve">
          <source>raised to the power of &lt;code&gt;z&lt;/code&gt;, ez</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b67fa586b849798e668a3378b4f7509109b275" translate="yes" xml:space="preserve">
          <source>raises the specified floating-point exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524005606ce5a9dca230b8d334e82c37526bd9a5" translate="yes" xml:space="preserve">
          <source>rand</source>
          <target state="translated">rand</target>
        </trans-unit>
        <trans-unit id="9f0d66272a0406f6697f0f5d94471bacb8d8f833" translate="yes" xml:space="preserve">
          <source>rank</source>
          <target state="translated">rank</target>
        </trans-unit>
        <trans-unit id="a7afddb68260a60f86c02a021efba7f216c2e7cf" translate="yes" xml:space="preserve">
          <source>read</source>
          <target state="translated">read</target>
        </trans-unit>
        <trans-unit id="802d4f63a061bcefdd0e2dd6e8b1feb6dbb6851e" translate="yes" xml:space="preserve">
          <source>read extended</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3caf0de1519c106cb065e1bfc9a52b7b1c803899" translate="yes" xml:space="preserve">
          <source>read from a stream into a automatically resized buffer until delimiter/end of line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0da57e1b6c7653829ad3f69f769ebb967f1570" translate="yes" xml:space="preserve">
          <source>read from start</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a38d8ae7a4b584faf19cb7c06d35556f78f5e8" translate="yes" xml:space="preserve">
          <source>reads a character from &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d417f7bc8d4b1e8def982b2ab2283e2e8855dc7" translate="yes" xml:space="preserve">
          <source>reads a character from &lt;code&gt;stdin&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70bf75ace16347cce421d2245b3fccd15126b38f" translate="yes" xml:space="preserve">
          <source>reads a character string from &lt;code&gt;stdin&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72d40c0c7b960b344d182ba5ecdc1b695d605d4" translate="yes" xml:space="preserve">
          <source>reads a value from an atomic object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5afc587ba8d18d27b3c10bee475a0d52127bf6f9" translate="yes" xml:space="preserve">
          <source>reads a wide character from &lt;code&gt;stdin&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb37739a3759d484dca9a0c1fc00ca160d02f847" translate="yes" xml:space="preserve">
          <source>reads formatted input from &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;, a file stream or a buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e28981b81d627ffe95584fc5481af8b06ff8d8" translate="yes" xml:space="preserve">
          <source>reads formatted input from &lt;code&gt;stdin&lt;/code&gt;, a file stream or a buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7288bd38aa2abbc85066c39f814914fb1d4b52" translate="yes" xml:space="preserve">
          <source>reads formatted wide character input from &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;, a file stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69cb2321e0168f7a9ec05465ba682f736e2298a" translate="yes" xml:space="preserve">
          <source>reads formatted wide character input from &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;, a file stream or a buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a829ee788afbe22d503a6c768bc299027f97cd9" translate="yes" xml:space="preserve">
          <source>reads formatted wide character input from &lt;code&gt;stdin&lt;/code&gt;, a file stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856334d8f7a1766e3fc06e882e2357a99b1d5149" translate="yes" xml:space="preserve">
          <source>reads formatted wide character input from &lt;code&gt;stdin&lt;/code&gt;, a file stream or a buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98971ce28a083eab987404d560a12db69d26baa" translate="yes" xml:space="preserve">
          <source>reads from a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf79af84e5f9afc840c00954bdc3cb29df9bce0" translate="yes" xml:space="preserve">
          <source>reads from thread-specific storage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9c64e071d2853bc7906c017a231ad1cc46ab630" translate="yes" xml:space="preserve">
          <source>real</source>
          <target state="translated">real</target>
        </trans-unit>
        <trans-unit id="849459586d4d1e2635587f226cd50293f8ba9e84" translate="yes" xml:space="preserve">
          <source>real floating types: &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;long double&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f07a7d70d79ac9b953e2904cb6436f993aa921" translate="yes" xml:space="preserve">
          <source>real function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce5a709f8aed99f0b93b3b289b954c00860e580" translate="yes" xml:space="preserve">
          <source>real types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecfbf37e66674dcd827520cd101d91c6dce3a6ab" translate="yes" xml:space="preserve">
          <source>realloc</source>
          <target state="translated">realloc</target>
        </trans-unit>
        <trans-unit id="cd943aa5454c36b3a95b0543b8063220d57b8596" translate="yes" xml:space="preserve">
          <source>receiving arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9bf82956c88f72a17acc1c0a687ef87ca6e52c" translate="yes" xml:space="preserve">
          <source>recursive mutex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a2828b3adecc1c32ea3888d08afa51e147b3f3" translate="yes" xml:space="preserve">
          <source>register</source>
          <target state="translated">register</target>
        </trans-unit>
        <trans-unit id="2074e879b64e9380543a26a2aa3d7156d8edb739" translate="yes" xml:space="preserve">
          <source>registers a function to be called on &lt;a href=&quot;program/quick_exit&quot;&gt;&lt;code&gt;quick_exit&lt;/code&gt;&lt;/a&gt; invocation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92eba9065785ed67f779db448d02322a22952b59" translate="yes" xml:space="preserve">
          <source>registers a function to be called on &lt;a href=&quot;quick_exit&quot;&gt;&lt;code&gt;quick_exit&lt;/code&gt;&lt;/a&gt; invocation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3a1dc68034ef4262afc82b060a040687017a8b" translate="yes" xml:space="preserve">
          <source>registers a function to be called on &lt;code&gt;&lt;a href=&quot;exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; invocation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6505558d15052cd0fe85d3cd510be6bf3d9c19fc" translate="yes" xml:space="preserve">
          <source>registers a function to be called on &lt;code&gt;&lt;a href=&quot;program/exit&quot;&gt;exit()&lt;/a&gt;&lt;/code&gt; invocation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdce6aa86575dc31550e7def869ea8c35c3a0bac" translate="yes" xml:space="preserve">
          <source>registers a function to be called on &lt;code&gt;exit()&lt;/code&gt; invocation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b1a18b0dc5be299ee77a5d8785658a8a7c3894" translate="yes" xml:space="preserve">
          <source>registers a function to be called on &lt;strong&gt;&lt;code&gt;quick_exit&lt;/code&gt;&lt;/strong&gt; invocation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096b07e74133dbbc7c97b16ab8c3359ec812db90" translate="yes" xml:space="preserve">
          <source>release operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f3dfe9a3a5daa3fdf2c8dcc2046549c7feb2db" translate="yes" xml:space="preserve">
          <source>releases the resources held by a given thread-specific pointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7536e3d87187f30ffccb89458ac9f80f0c3964f" translate="yes" xml:space="preserve">
          <source>releasing</source>
          <target state="translated">releasing</target>
        </trans-unit>
        <trans-unit id="d89d955d2f093ddbb85b7cc6d1026c324f244490" translate="yes" xml:space="preserve">
          <source>remainder</source>
          <target state="translated">remainder</target>
        </trans-unit>
        <trans-unit id="b4deaa0eb40cfe9bdfc0f928f43d8772d80f5750" translate="yes" xml:space="preserve">
          <source>remainder, remainderf, remainderl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd61962f89852e5d00e24613d0627fcd935735af" translate="yes" xml:space="preserve">
          <source>remainderl</source>
          <target state="translated">remainderl</target>
        </trans-unit>
        <trans-unit id="77660c4480099cc4230765ebc4b6fdfd06db4336" translate="yes" xml:space="preserve">
          <source>remainderremainderfremainderl</source>
          <target state="translated">remainderremainderfremainderl</target>
        </trans-unit>
        <trans-unit id="398658a601d9ccc4e7a808989f7e8c426c51bee6" translate="yes" xml:space="preserve">
          <source>remaining</source>
          <target state="translated">remaining</target>
        </trans-unit>
        <trans-unit id="db99845855b2ecbfecca9a095062b96c3e27703f" translate="yes" xml:space="preserve">
          <source>remove</source>
          <target state="translated">remove</target>
        </trans-unit>
        <trans-unit id="c3245cec663e90d5c9ad5e260b36c608714205c1" translate="yes" xml:space="preserve">
          <source>remquo</source>
          <target state="translated">remquo</target>
        </trans-unit>
        <trans-unit id="689d0e8308b6447f633904aa649da0f102cb2a94" translate="yes" xml:space="preserve">
          <source>remquo, remquof, remquol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59639355d5d9c3c8fe21b8c0bb53ca29910ffe36" translate="yes" xml:space="preserve">
          <source>remquol</source>
          <target state="translated">remquol</target>
        </trans-unit>
        <trans-unit id="b9f3ea5a7094767939a891d6621c4346ddd6c682" translate="yes" xml:space="preserve">
          <source>remquoremquofremquol</source>
          <target state="translated">remquoremquofremquol</target>
        </trans-unit>
        <trans-unit id="04a26d6f4aab9bc632ef3b0b244135354c76f93c" translate="yes" xml:space="preserve">
          <source>rename</source>
          <target state="translated">rename</target>
        </trans-unit>
        <trans-unit id="7fac02a8fc27a0b273af59624f6f4092bc94ac1c" translate="yes" xml:space="preserve">
          <source>renames a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da4c43565262b91a66713b9f1a62d5e2952c6b6" translate="yes" xml:space="preserve">
          <source>replaced</source>
          <target state="translated">replaced</target>
        </trans-unit>
        <trans-unit id="dee1ebcd105d3d47adf43aba6fd674e80d1dc35f" translate="yes" xml:space="preserve">
          <source>res</source>
          <target state="translated">res</target>
        </trans-unit>
        <trans-unit id="c3fed1dae28105416889eb25d33d7d24c7a20450" translate="yes" xml:space="preserve">
          <source>reserved</source>
          <target state="translated">reserved</target>
        </trans-unit>
        <trans-unit id="f4a0bd6dfdbd06f34e92513e724423a2f3c8bc9f" translate="yes" xml:space="preserve">
          <source>restores the floating-point environment and raises the previously raise exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1e5b88d0a9c6e7ad2881d14fac38f7a4b737a8" translate="yes" xml:space="preserve">
          <source>restrict</source>
          <target state="translated">restrict</target>
        </trans-unit>
        <trans-unit id="9cf053e968e7eba6576280d346b26ae2d84ab2dc" translate="yes" xml:space="preserve">
          <source>restrict semantics apply to lvalue expressions only; for example, a cast to restrict-qualified pointer or a function call returning a restrict-qualified pointer are not lvalues and the qualifier has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722dda3c2987a38397d7c1a40e68503700ad450b" translate="yes" xml:space="preserve">
          <source>restrict type qualifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a5301a88da334dc5afc5b63979daa0f3f45e68" translate="yes" xml:space="preserve">
          <source>result</source>
          <target state="translated">result</target>
        </trans-unit>
        <trans-unit id="cb28d01689851fee02c268c7c4eb27b7c5fcf17f" translate="yes" xml:space="preserve">
          <source>result of the / operator is a complex infinity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499a642c83825e55a3477339a27d8f5355f35dd0" translate="yes" xml:space="preserve">
          <source>result of the / operator is a zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4448b2175ccbd4eb1fb410c137c5078b03ad71c6" translate="yes" xml:space="preserve">
          <source>results of floating-point arithmetic operators in constant expressions executed at compile time (always to nearest)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca9000252db9e9eacad66783e86ab1758592b259" translate="yes" xml:space="preserve">
          <source>results of floating-point arithmetic operators outside of constant expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db8b17ac27e356e57c7daefbaba4cd0d59f4fac" translate="yes" xml:space="preserve">
          <source>results of standard library &lt;a href=&quot;../math&quot;&gt;mathematical functions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63143b6f8007b98c53ca2149822777b3566f9241" translate="yes" xml:space="preserve">
          <source>return</source>
          <target state="translated">return</target>
        </trans-unit>
        <trans-unit id="aed25d6d175e0e1566404545b57b8556d709f9b4" translate="yes" xml:space="preserve">
          <source>return statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b2fe560da1d1c1526243e312f5bbfb0c73ecfb" translate="yes" xml:space="preserve">
          <source>return type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a2aa9cc937f18166bd6b454cb203da66577eea" translate="yes" xml:space="preserve">
          <source>returns a NaN (not-a-number)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72f63352c8098fca621928c90241012a80b38b3" translate="yes" xml:space="preserve">
          <source>returns a pointer to a temporary file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0796ac4020939ca7ea8b8b095a78da86e4bd47ab" translate="yes" xml:space="preserve">
          <source>returns a text version of a given error code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9651f1e0f943e1b715278edbf1ddb7dd6becf5a" translate="yes" xml:space="preserve">
          <source>returns a unique filename</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c801781652471c68adb15a3295ed823641dd09a" translate="yes" xml:space="preserve">
          <source>returns raw processor clock time since the program is started</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5495a275ace9657c1e6435bfecb9a7f85aac057b" translate="yes" xml:space="preserve">
          <source>returns the &lt;b&gt;number of characters read so far&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54202ac2cffff5a6c49cc68fcc12247dd2b0258f" translate="yes" xml:space="preserve">
          <source>returns the &lt;b&gt;number of characters written&lt;/b&gt; so far by this call to the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642979d254c2a29ba34933372bd94514fa35f1ff" translate="yes" xml:space="preserve">
          <source>returns the calendar time based on a given time base</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64fc730a7b2de76d662884efe2a953e409920676" translate="yes" xml:space="preserve">
          <source>returns the current calendar time of the system as time since epoch</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
