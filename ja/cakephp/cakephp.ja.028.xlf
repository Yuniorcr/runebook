<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="ansible">
    <body>
      <group id="ansible">
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="e3428040a0883692d48b0b59bf21a95045941cfe" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;withParsedBody()&lt;/code&gt; if you need to replace the all request data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fdd6b930fcbab438e9d95d0207d06dc8e96062e" translate="yes" xml:space="preserve">
          <source>Use HMAC-SHA1 signing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f3d1c70ace8b215d8cd2139af5107f431832e7" translate="yes" xml:space="preserve">
          <source>Use MESSAGE_* constants or null to return the full message as array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4056f3e582dc3bc6e4fd28402db3410a579bf99" translate="yes" xml:space="preserve">
          <source>Use RSA-SHA1 signing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e5994e965b10df61b005cb40b12593f4ab9f11" translate="yes" xml:space="preserve">
          <source>Use _loadAssociatedByIds()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3c301778a242fe45d15ed7ef13d5017d96b01a" translate="yes" xml:space="preserve">
          <source>Use a boolean to enable/toggle all logging. Use one of the verbosity constants (self::VERBOSE, self::QUIET, self::NORMAL) to control logging levels. VERBOSE enables debug logs, NORMAL does not include debug logs, QUIET disables notice, info and debug logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e709e362b26760efbc0044b56b4486546cda61c0" translate="yes" xml:space="preserve">
          <source>Use a boolean to set the hydration mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3418f12910b6ca5f59a09e35a8f60ce907b3c613" translate="yes" xml:space="preserve">
          <source>Use a boolean to set the hydration mode. Null will fetch the current hydration mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c907d9461c10cda2f9cd6b5507a9ac5c894f07" translate="yes" xml:space="preserve">
          <source>Use a string or an array of the keys above. Arrays should be passed as ['dmy', 'mdy', etc]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769f3935d34f87bd62b22f6227e45c0fd5d17dfd" translate="yes" xml:space="preserve">
          <source>Use config/error.php to customize or replace this error handler. This function will use Debugger to display errors when debug &amp;gt; 0. And will log errors to Log, when debug == 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ea27cf3a0f0678ba61173ec335f891a31e6a06" translate="yes" xml:space="preserve">
          <source>Use fallback-domain for translation loaders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2e09b9b42bd90a3142e4195961e0ba14bed0f0" translate="yes" xml:space="preserve">
          <source>Use false to not use auto-loading on this object. Null auto-detects based on controller name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84fb2d7ce31cea4b527097e9c23ea31e84c8519" translate="yes" xml:space="preserve">
          <source>Use hash compatible syntax to read/write/delete values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd336de4ffdcc8ea275a53a4dab3577f9a77fd7" translate="yes" xml:space="preserve">
          <source>Use relative paths in the pot files rather than full path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f61f3507a5c1ff194f1bf58b96607ba76d4491" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;exceptionRenderer&lt;/code&gt; option to inject an Exception renderer. This will let you keep the existing handling logic but override the rendering logic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548e16716272d4174f4204660d3890ad4a8f5f75" translate="yes" xml:space="preserve">
          <source>Use the application to do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52a34822c1a5cea82a1ae0d79b0ce0317e02cf6" translate="yes" xml:space="preserve">
          <source>Use the configuration options to create the correct authentication strategy handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6efc12f3329148feca4755d35d4e780c76fe9f84" translate="yes" xml:space="preserve">
          <source>Use the configured authentication adapters, and attempt to identify the user by credentials contained in $request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad4899a8146a33d1ff222f335312786a0cde7e8" translate="yes" xml:space="preserve">
          <source>Use the implementedEvents() method to exclude callback methods. Methods starting with &lt;code&gt;_&lt;/code&gt; will be ignored, as will methods declared on Cake\ORM\Behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6c5cfbf2460d07defce43b8eaf0b264b270aee" translate="yes" xml:space="preserve">
          <source>Use the provided RouteBuilder to define an application's routing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea83beea24b6ca89817a733ef8da23a11ee915e" translate="yes" xml:space="preserve">
          <source>Use this decorator to allow your event listener to only be invoked if event subject matches the &lt;code&gt;allowedSubject&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e43241f8ce33f1d9a4a58bd4d96651aa608b824" translate="yes" xml:space="preserve">
          <source>Use this decorator to allow your event listener to only be invoked if the &lt;code&gt;if&lt;/code&gt; and/or &lt;code&gt;unless&lt;/code&gt; conditions pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9e6bbf73343973994d9c6aa7525324a092a314" translate="yes" xml:space="preserve">
          <source>Use this method to define transports to use in delivery profiles. Once defined you cannot edit the configurations, and must use Email::dropTransport() to flush the configuration first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a3f62a0b24958022f8d63cc68069aede57b943" translate="yes" xml:space="preserve">
          <source>Use to convert binary data between PHP and the database types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ddf06395a1e1b3bb3ca81702898c93b061f5e6" translate="yes" xml:space="preserve">
          <source>Use to convert binary uuid data between PHP and the database types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c41420bd5a9d734fbc4d5cd61ea83114a80a590" translate="yes" xml:space="preserve">
          <source>Use to convert bool data between PHP and the database types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec6cf691e878b39aad9340d60389cb286c551c9" translate="yes" xml:space="preserve">
          <source>Use to convert datetime instances to strings &amp;amp; back.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e71969cd17268efb55e3ea5eaf234da6e6e8f02" translate="yes" xml:space="preserve">
          <source>Use to convert decimal data between PHP and the database types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4b1101667d3cae37a6ba4f9fe1807c0421e80c" translate="yes" xml:space="preserve">
          <source>Use to convert float/decimal data between PHP and the database types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5d6cef71cf52404a10119d5541f6a469f895cb" translate="yes" xml:space="preserve">
          <source>Use to convert integer data between PHP and the database types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5a5d7689603f80a277b156f7322b4d81cf6bc3" translate="yes" xml:space="preserve">
          <source>Use to convert json data between PHP and the database types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbaa2daaf91e705a7171763f401afb9e934d96c2" translate="yes" xml:space="preserve">
          <source>Use to convert string data between PHP and the database types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d07a3b6c41b6f97b784f5eb1a34f7af4ad1946b" translate="yes" xml:space="preserve">
          <source>Use to convert time instances to strings &amp;amp; back.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e109f0a94fcdd4066b844ba1b05561ec6db92d97" translate="yes" xml:space="preserve">
          <source>Used as the security salt if specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf9966ab9b74e7fc9ce79771f49294d8c5acc7e" translate="yes" xml:space="preserve">
          <source>Used by &lt;code&gt;execute()&lt;/code&gt; to execute the form's action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ece6b21e8aa5b0e9238b927b7de614c6a1d49e2" translate="yes" xml:space="preserve">
          <source>Used by Applications to whitelist their console commands. CakePHP will use the mapped commands to construct and dispatch shell commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b549cbb3e8df78cde4d9275de293bdfd92e4e17" translate="yes" xml:space="preserve">
          <source>Used by Cake\Cache\Cache to load and manage cache engines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdbb7493f3a9f2e3161b50f55a9a51509124aa4d" translate="yes" xml:space="preserve">
          <source>Used by Cake\Database\Schema package to reflect schema and generate schema.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ef58609da3a0c447147b8196f921d5e3bf5afb" translate="yes" xml:space="preserve">
          <source>Used by Cake\Datasource\QueryTrait internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f63037174df1c91f979ea4770834a888975577" translate="yes" xml:space="preserve">
          <source>Used by Cake\Http\Client to contain request information for making requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c091d171a363c64aa6a9891fca4e0805223694d" translate="yes" xml:space="preserve">
          <source>Used by Cake\Schema package to reflect schema and generate schema.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a14e26bde401358b0f5ec49cb3b17837836b535" translate="yes" xml:space="preserve">
          <source>Used by Http\Client to upload POST/PUT data and files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da81752dbc428dff2b932d23fab90d0ffe3fe5e" translate="yes" xml:space="preserve">
          <source>Used by several helpers to provide simple flexible templates for generating HTML and other content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5956985510dbfb6bf1de7f3955d15fe6a6ad163" translate="yes" xml:space="preserve">
          <source>Used by top level functions checkDelete, checkCreate and checkUpdate, this function iterates an array containing the rules to be checked and checks them all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2aa2d8517ad7fe7521548973595877d180d18e" translate="yes" xml:space="preserve">
          <source>Used internally by other methods, but can also be used to send handcrafted Request objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad7a92bf65c52d9bbef9ffc398d351a840b4266" translate="yes" xml:space="preserve">
          <source>Used to access information about the tables, and other data in a database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4bd4a86a4fa6ae437377413384cc69c5b361196" translate="yes" xml:space="preserve">
          <source>Used to add constraints to a table. For example primary keys, unique keys and foreign keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c97938251a43b43a0a9852fc51bb08b58a7fd9" translate="yes" xml:space="preserve">
          <source>Used to add indexes, and full text indexes in platforms that support them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e75798bf9d4c384aae596df0648f0b88cfa741" translate="yes" xml:space="preserve">
          <source>Used to avoid repetition when calling multiple functions inside this class that may require a custom type for a specific field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52376279a9bda234e689c75878c60ac69dc098f" translate="yes" xml:space="preserve">
          <source>Used to capture connection warnings which can happen when there are SSL errors for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb55e6191da51779ebaf31f36abdfc954c9a642" translate="yes" xml:space="preserve">
          <source>Used to check if $data passes this form's validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf247718cc72700d14fc2b119650f83c42812d9c" translate="yes" xml:space="preserve">
          <source>Used to check the count of a given value of type array or Countable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5276c521485456b7199c1f6f1b82c71cc010cc89" translate="yes" xml:space="preserve">
          <source>Used to clear a directory of matching files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f60659c4fa9cbe3f2990de57e026a9677112850" translate="yes" xml:space="preserve">
          <source>Used to compare 2 numeric values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83cc627d3c5b22858ea8215b46b02d198a479fb" translate="yes" xml:space="preserve">
          <source>Used to consume information stored in Configure. It's not possible to store &lt;code&gt;null&lt;/code&gt; values in Configure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a550f532416b30c2b8169f119b367d4c2000b14e" translate="yes" xml:space="preserve">
          <source>Used to delete a variable from Configure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7405c822700ceb6a718cd783981f470982d2fc5" translate="yes" xml:space="preserve">
          <source>Used to determine the current version of CakePHP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8594e98f2c09a65812a002b4994d889214514859" translate="yes" xml:space="preserve">
          <source>Used to enable or disable logging stream output to stdout and stderr If you don't wish all log output in stdout or stderr through Cake's Log class, call this function with &lt;code&gt;$enable=false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878c09798373ef9f29af814d965463e679b16f21" translate="yes" xml:space="preserve">
          <source>Used to get information stored in Configure. It's not possible to store &lt;code&gt;null&lt;/code&gt; values in Configure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38cb9bcdb2d880b469de0bbf8bcc2587a9e55eb4" translate="yes" xml:space="preserve">
          <source>Used to instruct a CommandRetry object on whether or not a retry for an action should be performed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86d46b185ded444a4d642cc544d0c1c15df42e3" translate="yes" xml:space="preserve">
          <source>Used to map the string names back to their LOG_* constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b37052d7c13831157dae866f50c36701733e68" translate="yes" xml:space="preserve">
          <source>Used to pre-configure pagination preferences for the various tables your controller will be paginating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d9eac3ffee6aa77cec646bcaddb741a168ea922" translate="yes" xml:space="preserve">
          <source>Used to read and delete a variable from Configure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f4227521ec6e903c2abe68d50bd47b4f7eb55b" translate="yes" xml:space="preserve">
          <source>Used to read information stored in Configure. It's not possible to store &lt;code&gt;null&lt;/code&gt; values in Configure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0addf6f2609c9a21efe013f7a7e711a1fd134347" translate="yes" xml:space="preserve">
          <source>Used to read information stored path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12aa50f6cda080e12b40da9cd5a7dda19376d98" translate="yes" xml:space="preserve">
          <source>Used to recursively add contained association column types to the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb7e6a5157f23ab8740725e09d4dfa94e420780" translate="yes" xml:space="preserve">
          <source>Used to render the message set in FlashComponent::set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3586c25516a96bdba02410b0a3e921e97c645474" translate="yes" xml:space="preserve">
          <source>Used to set a session variable that can be used to output messages in the view. If you make consecutive calls to this method, the messages will stack (if they are set with the same flash key)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61cf06adb50a1a7aaeda27ed0bfa580891990a52" translate="yes" xml:space="preserve">
          <source>Used to store a dynamic variable in Configure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d0b87174110427a4ca19016507946416f2332d" translate="yes" xml:space="preserve">
          <source>Used to write new data to _SESSION, since PHP doesn't like us setting the _SESSION var itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d9f8176796f5b7b52661b1daf2648e17fffced" translate="yes" xml:space="preserve">
          <source>Used to write runtime configuration into Cache. Stored runtime configuration can be restored using &lt;code&gt;Configure::restore()&lt;/code&gt;. These methods can be used to enable configuration managers frontends, or other GUI type interfaces for configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8932a87d4a296714937b0b11c3a85b3045f8410" translate="yes" xml:space="preserve">
          <source>Used when a Helper cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2eba58a06640df985cc736555f1e17dd00e9b43" translate="yes" xml:space="preserve">
          <source>Used when a Task cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa90845cc409e8ceecd816da0f90694093b5e885" translate="yes" xml:space="preserve">
          <source>Used when a behavior cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509c28840da42dcc0d1784e7d0903b4c48da3867" translate="yes" xml:space="preserve">
          <source>Used when a cell class file cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5345cc629419370faf044b643236f3149d73bb5" translate="yes" xml:space="preserve">
          <source>Used when a component cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4111d298935dd13d2661b899639638f3177066" translate="yes" xml:space="preserve">
          <source>Used when a custom regular expression is needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581e2dbfdef28c0a936d0b8d3f4e2aede3b27df0" translate="yes" xml:space="preserve">
          <source>Used when a datasource cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c92618df0b4a0f7748afde184744fed53b5f93" translate="yes" xml:space="preserve">
          <source>Used when a helper cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ef6512d1db61b82228ca02a02cae247a8957e3" translate="yes" xml:space="preserve">
          <source>Used when a layout file cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab88fc17fe06cccddac1ad485befc0e4801a405d" translate="yes" xml:space="preserve">
          <source>Used when a mailer cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf671ba930961ec7c606529d24ba2a1d1a01431" translate="yes" xml:space="preserve">
          <source>Used when a model cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca7d3bf5335ac4b3db4f6f4295c79a6b9feb4d9" translate="yes" xml:space="preserve">
          <source>Used when a shell cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f6cb572d520ce880276446e7167b9eac8a34d4" translate="yes" xml:space="preserve">
          <source>Used when a shell method cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4daeaf92544f9210690d23ebdf38a7cc7a4d9d74" translate="yes" xml:space="preserve">
          <source>Used when a strict save or delete fails</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093f328f4c3507289069898a243eeffe5f9e925a" translate="yes" xml:space="preserve">
          <source>Used when a template file cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a858aa149118289a9a7f20900d631de453368128" translate="yes" xml:space="preserve">
          <source>Used when a transaction was rolled back from a callback event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca948938c2148ca43150004f1fe6d3e89f83ac2" translate="yes" xml:space="preserve">
          <source>Used when a view class file cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80cac50cfe642c1d1d0dfe070bddc107a9c4ece1" translate="yes" xml:space="preserve">
          <source>Used when a view file for a cell cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae153e47b21aac6900d812adc91b833006f67d1" translate="yes" xml:space="preserve">
          <source>Used when an element file cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7befb18854cd9785c6710d3ee5bdb4eeb4c669" translate="yes" xml:space="preserve">
          <source>Useful for building progress bars, or when you want to replace text already output to the screen with new text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5865b8db83d6806ad18fdb48adb6f4ea12e51a42" translate="yes" xml:space="preserve">
          <source>Useful for debugging and testing context creation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66277283959a267eac045d5fcf7c9e8a2dad885b" translate="yes" xml:space="preserve">
          <source>Useful in test case teardown methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f88c9064ade22e1901915cf5f022909618b4448" translate="yes" xml:space="preserve">
          <source>Useful to test how plugins being loaded/not loaded interact with other elements in CakePHP or applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba994d345235a01ac5189c29f4205b4f2cb9654a" translate="yes" xml:space="preserve">
          <source>Useful when converting request data into entities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76470c3c2be9d873e2931a04f6d878b76bc9c921" translate="yes" xml:space="preserve">
          <source>Useful when you are redefining joins or want to re-order the join clauses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce5da2e3be9a72297568f2b17941d1ba9e338eb8" translate="yes" xml:space="preserve">
          <source>User data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124e0616124b9f7b8ebdaef6a486a8cf9e502c2d" translate="yes" xml:space="preserve">
          <source>User record data, or false, if the user could not be identified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b923462c929deee9fccf631b47b5c9f3bb57f065" translate="yes" xml:space="preserve">
          <source>User record if available else null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07cef62b6383cba7ff111c62038b918e5515ad96" translate="yes" xml:space="preserve">
          <source>User record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4ff8b37e15a171bfb1bb4fd51dff31e858a4f1" translate="yes" xml:space="preserve">
          <source>User's timezone string or DateTimeZone object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87491c9d490da1437121474180493fb83d1e49bc" translate="yes" xml:space="preserve">
          <source>Username.</source>
          <target state="translated">Username.</target>
        </trans-unit>
        <trans-unit id="2cd6eaf682ff22bc7a6c02d9af3caf08853302bb" translate="yes" xml:space="preserve">
          <source>Uses Conventions to map controller events to standard component callback method names. By defining one of the callback methods a component is assumed to be interested in the related event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23dcc8f17032928479ea39ada9dc4a8d48b4a639" translate="yes" xml:space="preserve">
          <source>Uses a template method provided by subclasses to display errors in an environment appropriate way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f96a1f75eb38b68645f7c04e3e6ee0e55e6a71" translate="yes" xml:space="preserve">
          <source>Uses the $_GET, $_POST, $_FILES, $_COOKIE, $_SERVER, $_ENV and php://input data to construct the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c158fe9c2e73cda3f2ca872472f7b375a6abe5" translate="yes" xml:space="preserve">
          <source>Uses the &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;errorList&lt;/code&gt; and &lt;code&gt;errorItem&lt;/code&gt; templates. The &lt;code&gt;errorList&lt;/code&gt; and &lt;code&gt;errorItem&lt;/code&gt; templates are used to format multiple error messages per field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02bfd20cc0d19e95de9c2bc42d3cff79ab2e3f1e" translate="yes" xml:space="preserve">
          <source>Uses the authentication type to choose the correct strategy and use its methods to add headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53cac2f1d7b4f68ecf0d0ea01d6e5b152f5dd02" translate="yes" xml:space="preserve">
          <source>Uses the built in detection rules as well as additional rules defined with Cake\Http\ServerRequest::addDetector(). Any detector can be called as &lt;code&gt;is($type)&lt;/code&gt; or &lt;code&gt;is$Type()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f01769f44885a4bc9366be720a37544e03ebbb3" translate="yes" xml:space="preserve">
          <source>Uses the configured Authorization adapters to check whether or not a user is authorized. Each adapter will be checked in sequence, if any of them return true, then the user will be authorized for the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b75a93d7546b5c311721cecb4ba7631351b8910" translate="yes" xml:space="preserve">
          <source>Uses the connection to access the schema dialect to generate platform specific SQL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e717cae7336281dabab5480c8f4ebfeeb8d8995f" translate="yes" xml:space="preserve">
          <source>Uses the first password hasher in the list to generate the hash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77eb4661f7245d3fb7b328bb4086bd9a090dfead" translate="yes" xml:space="preserve">
          <source>Uses the implementedEvents() method to exclude callback methods. Methods starting with &lt;code&gt;_&lt;/code&gt; will be ignored, as will methods declared on Cake\ORM\Behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c9dfa3efa7da1852a519cedb1850382f169d3e" translate="yes" xml:space="preserve">
          <source>Uses the template, defaults and options properties to compile a regular expression that can be used to parse request strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07885ee424a58056f270e5408b9b4883705a72fc" translate="yes" xml:space="preserve">
          <source>Using Basic auth</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9baa8f10e38c6ddd6281222db83cc6c80188ebc6" translate="yes" xml:space="preserve">
          <source>Using Cake\Controller\Controller::$components as an example. You can alias an object by setting the 'className' key, i.e.,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebdc6724e6e8571cbcafbaa8fd85ca09f9a36fb3" translate="yes" xml:space="preserve">
          <source>Using Digest auth</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0461af9eadf2c95645ff06efcb1ec2c9fe40cc3e" translate="yes" xml:space="preserve">
          <source>Using Form auth</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a38d3d36a6ec8d2792170a01b5e62d08595015" translate="yes" xml:space="preserve">
          <source>Using Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55aec0c83973ff42f6501d88c3a309fa36b4e69" translate="yes" xml:space="preserve">
          <source>Using a Closure to provide data, assume &lt;code&gt;$this&lt;/code&gt; is a Table object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b79ca02425afc8f2079977dd1cc3e86ace6a2ce" translate="yes" xml:space="preserve">
          <source>Using a closure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93f14ba9f5ec22d7a0abf28e8f8751ac0d45b61" translate="yes" xml:space="preserve">
          <source>Using a custom renderer with &lt;code&gt;exceptionRenderer&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ddee142c8d0623e033ad75f6e136bf31dfe3d0" translate="yes" xml:space="preserve">
          <source>Using a factory function to get an adapter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ad5456e3f3452a651fd6a3df6ea01527a55ba3" translate="yes" xml:space="preserve">
          <source>Using a subclass of ExceptionRenderer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c839b2b7e8ddc367c0770f1422286c59a5361a8" translate="yes" xml:space="preserve">
          <source>Using a subclass of ExceptionRenderer gives you full control over how Exceptions are rendered, you can configure your class in your config/app.php.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775b4b164b9e924693b474eb03f4942567c36598" translate="yes" xml:space="preserve">
          <source>Using a transformer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2788563704a9e5f7a0746afa84ed265199c818f5" translate="yes" xml:space="preserve">
          <source>Using a video file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dda106b905e94a4193e0420ec663e98c541e97c" translate="yes" xml:space="preserve">
          <source>Using an audio file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0845cd2f7fcc6e11bf4be59ae7616bbf9bb631" translate="yes" xml:space="preserve">
          <source>Using authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d68232de492e50a135e24e187a0b4c84e92955" translate="yes" xml:space="preserve">
          <source>Using conditions and types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d5845b3d352c60b4e5a1c200305fee98ab2f74" translate="yes" xml:space="preserve">
          <source>Using expressions objects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4642cf5be247a9f1229042996cb1872f38d0cf67" translate="yes" xml:space="preserve">
          <source>Using multiple video files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d7a876bdd113f4940d781859515dc8f3133d487" translate="yes" xml:space="preserve">
          <source>Using options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607234a75f76db2efff0e5fd6cc75cfac557be76" translate="yes" xml:space="preserve">
          <source>Using proxies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d22ae48b11916acef841dd5d8cab0867967f279f" translate="yes" xml:space="preserve">
          <source>Using scopes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45033ebb3b7fa97c894640ecf6ad822ee4476e86" translate="yes" xml:space="preserve">
          <source>Using styles in output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc93624c64dededdc1d964db4063a39e7b9dbf68" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;templates&lt;/code&gt; option you can redefine the tag HtmlHelper will use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8f0faa0be5bf0606bf44fafea89dbf8bba340c" translate="yes" xml:space="preserve">
          <source>Using the builder interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f6bb147513b0eaddf87d1918a76e4f8d9b2ebac" translate="yes" xml:space="preserve">
          <source>Using the built-in exception handling, you can log all the exceptions that are dealt with by ErrorHandler by setting &lt;code&gt;log&lt;/code&gt; option to true in your config/error.php. Enabling this will log every exception to Log and the configured loggers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03961b063614bec4f36710eabac9996da9597ef" translate="yes" xml:space="preserve">
          <source>Using the class name without 'Authenticate' as the key, you can pass in an array of config for each authentication object. Additionally you can define config that should be set to all authentications objects using the 'all' key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8037216ec4e5db8ea44562a764e81330b97c2a4" translate="yes" xml:space="preserve">
          <source>Using the class name without 'Authorize' as the key, you can pass in an array of config for each authorization object. Additionally you can define config that should be set to all authorization objects using the AuthComponent::ALL key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab7942e305e711d1b697d2617e2db8346d04103" translate="yes" xml:space="preserve">
          <source>Using the data in the builder, create a view instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ccb56a9d5b850912d82b637bce03603870d25f6" translate="yes" xml:space="preserve">
          <source>Using the first and last options you can create links to the beginning and end of the page set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d82f9d8c8e7f4d471c288a2ab85c4232f3486a" translate="yes" xml:space="preserve">
          <source>Using the following data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c014f27ccb9c6a6818002099667bcb48b9609b" translate="yes" xml:space="preserve">
          <source>Using the options array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89189507b2a074e98b2e877227343a6e1f27b3ab" translate="yes" xml:space="preserve">
          <source>Utility</source>
          <target state="translated">Utility</target>
        </trans-unit>
        <trans-unit id="27e14c19eb361a931172d3a82949e3641fe894e9" translate="yes" xml:space="preserve">
          <source>Utility class used to determine the plural number to be used for a variable base on the locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b649dc114dd63688ecb4efd8588286980d8423" translate="yes" xml:space="preserve">
          <source>Utility method for decorating any callable so that if it returns false, the correct property in the entity is marked as invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec041941b406ce2fbb880b2364e401ec8af864d8" translate="yes" xml:space="preserve">
          <source>UuidType</source>
          <target state="translated">UuidType</target>
        </trans-unit>
        <trans-unit id="d834e2ed37383f4fe61f37d2e8c8146adf5183cc" translate="yes" xml:space="preserve">
          <source>UuidType (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f6016b4eed5a4ab33e129ca4f41b51b3278c2d4" translate="yes" xml:space="preserve">
          <source>UuidType::marshal()</source>
          <target state="translated">UuidType::marshal()</target>
        </trans-unit>
        <trans-unit id="6ea240d1c4230dd9fdf472a9c3b4d2400fa428bf" translate="yes" xml:space="preserve">
          <source>UuidType::newId()</source>
          <target state="translated">UuidType::newId()</target>
        </trans-unit>
        <trans-unit id="66b25bda7c92d0505ad672182b6fe1f798223d5d" translate="yes" xml:space="preserve">
          <source>UuidType::toDatabase()</source>
          <target state="translated">UuidType::toDatabase()</target>
        </trans-unit>
        <trans-unit id="5226ece9ac04d3c9c01367927065c4058e546dd2" translate="yes" xml:space="preserve">
          <source>Valid Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ec0ba4a137b6a33befe30c0fe5767ceda7acdd" translate="yes" xml:space="preserve">
          <source>Valid Places:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd32b1ac9207dc061480185a8607b4e88ca566f" translate="yes" xml:space="preserve">
          <source>Valid callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf46ece11e394d45d8afe880e4943efc051f9bbe" translate="yes" xml:space="preserve">
          <source>Valid choices for this option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e639476017d6c4c3240b175b5e257a9a930dee2" translate="yes" xml:space="preserve">
          <source>Valid cipher names for encrypted cookies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6541b37e9a053294e7ad52698fb95efd05c146eb" translate="yes" xml:space="preserve">
          <source>Valid column length that can be used with text type columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4712de23b869c9e50dd0b2f7f4df192fffe44f0" translate="yes" xml:space="preserve">
          <source>Valid strategies for this association. Subclasses can narrow this down.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc0a4a1ab17820535efc26c3db26b80a19a555a" translate="yes" xml:space="preserve">
          <source>Valid strategies for this type of association</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21bac12b43007837da23b7f117ef1317d216bbc" translate="yes" xml:space="preserve">
          <source>Valid time string or \DateTime instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f3fd942e42fd94349887ac6877cf9ffd4d128f" translate="yes" xml:space="preserve">
          <source>Valid time string or \DateTimeInterface instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32eb36b1f157a9bfa92d5432d89e38590b9a36a0" translate="yes" xml:space="preserve">
          <source>Valid values are &lt;code&gt;'context'&lt;/code&gt;, &lt;code&gt;'data'&lt;/code&gt; and &lt;code&gt;'query'&lt;/code&gt;. You need to supply one valid context or multiple, as a list of strings. Order sets priority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6c1131d5eed9ff76d5567dabe7af749c3bfdd8" translate="yes" xml:space="preserve">
          <source>Valid values are true, false, 'create', 'update' or a callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccab557d07ae4d302cd65b55c1e848adb723a778" translate="yes" xml:space="preserve">
          <source>Valid values are true, false, 'create', 'update'. If a callable is passed then the field will be required only when the callback returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880f31456a7575b3803b687b03fafde0268c37e3" translate="yes" xml:space="preserve">
          <source>ValidCount</source>
          <target state="translated">ValidCount</target>
        </trans-unit>
        <trans-unit id="a850875bf96bf18de4055bb89032f7decaccfe0b" translate="yes" xml:space="preserve">
          <source>ValidCount (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf62c65b69eda5c61a4f69f017b0987767b003c" translate="yes" xml:space="preserve">
          <source>ValidCount::$_field</source>
          <target state="translated">ValidCount::$_field</target>
        </trans-unit>
        <trans-unit id="ebcc56a4f767ad070681004b34514110a0fa6c1e" translate="yes" xml:space="preserve">
          <source>ValidCount::__construct()</source>
          <target state="translated">ValidCount::__construct()</target>
        </trans-unit>
        <trans-unit id="6e2cc806410f1983ee781c465e1e31a276dd27ee" translate="yes" xml:space="preserve">
          <source>ValidCount::__invoke()</source>
          <target state="translated">ValidCount::__invoke()</target>
        </trans-unit>
        <trans-unit id="f87af7230e0aa8152457830f6e63b939eabe70b4" translate="yes" xml:space="preserve">
          <source>ValidatableInterface</source>
          <target state="translated">ValidatableInterface</target>
        </trans-unit>
        <trans-unit id="e519c3c9432121a987155e55c011fda62ec1cc4d" translate="yes" xml:space="preserve">
          <source>ValidatableInterface (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f80d874a6b8e668aa725afbfcb8529c5dc26ad3" translate="yes" xml:space="preserve">
          <source>ValidatableInterface::validate()</source>
          <target state="translated">ValidatableInterface::validate()</target>
        </trans-unit>
        <trans-unit id="be7e434ed803abf247936d7d2166ac1a28327680" translate="yes" xml:space="preserve">
          <source>Validate a file path is a valid response body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40778023422e04c25c1c33770e6f637cffdc941" translate="yes" xml:space="preserve">
          <source>Validate an uploaded file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e15d9d1782cf56b6f7964550449b0bb184c8a1" translate="yes" xml:space="preserve">
          <source>Validate email address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44864a92585a685b2ef7c30a9787055dcef59c12" translate="yes" xml:space="preserve">
          <source>Validate submitted form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ee2467704f6bfcc9e073c7d3254771578dfd4a" translate="yes" xml:space="preserve">
          <source>Validate that an argument is a boolean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74adacc5000510cfd119e3bde451059918cc73d9" translate="yes" xml:space="preserve">
          <source>Validate that an argument is a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07cb07f3f384cba83679fe221fe74111437da1a4" translate="yes" xml:space="preserve">
          <source>Validate that the desired sorting can be performed on the $object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171448190dc8bc1fa64406fda74a585ab00a2f12" translate="yes" xml:space="preserve">
          <source>Validate the request data against the cookie token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c54526cc7fb9889a9888a13f52964808cbf919f" translate="yes" xml:space="preserve">
          <source>Validates a datetime value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0beac283bcfd44fc04dbe79d6b3b652d004bcf08" translate="yes" xml:space="preserve">
          <source>Validates a geographic coordinate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06629cc4766c0460027e83b0b25ff1fc75bcbd5" translate="yes" xml:space="preserve">
          <source>Validates a multiple select. Comparison is case sensitive by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="904f081e754c48f9482f13b3a34a7764b0449fc9" translate="yes" xml:space="preserve">
          <source>Validates an iso8601 datetime format ISO8601 recognize datetime like 2019 as a valid date. To validate and check date integrity, use @see \Cake\Validation\Validation::datetime()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b559580bb8baac92095625c88494ab11425fbbbe" translate="yes" xml:space="preserve">
          <source>Validates for an email address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30142dba6c35496c2aa150f8da7ed4d4484d550d" translate="yes" xml:space="preserve">
          <source>Validates if given value is falsey.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e751bae753d9cac5ca73fbc7256c1293d7607d93" translate="yes" xml:space="preserve">
          <source>Validates if given value is truthy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38281e1883b7636451543eb18b59b5b553f0103" translate="yes" xml:space="preserve">
          <source>Validates if passed value is boolean-like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e92cdb267ce361b21f5adb028316be01f5d81e" translate="yes" xml:space="preserve">
          <source>Validates that a number is in specified range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd33a200e106482cd107a1494798fe60be2673d" translate="yes" xml:space="preserve">
          <source>Validates the CSRF token for POST data. If the request is a GET request, and the cookie value is absent a cookie will be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e1adb3918792aa41e4f450b8b857a924395b33" translate="yes" xml:space="preserve">
          <source>Validates the cookie name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bce6bb78dc3102827c7a152f812eee9062eb8c6" translate="yes" xml:space="preserve">
          <source>Validates the count of associated records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf4b0732ac58c1c3c6db87d7bd95953525db817" translate="yes" xml:space="preserve">
          <source>Validates the image width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a6d2254815641a2e268bfea73575680c942937" translate="yes" xml:space="preserve">
          <source>Validates the internal properties using a validator object and returns any validation errors found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f044916f87084f93d290b796d717afbb74474c1a" translate="yes" xml:space="preserve">
          <source>Validates the size of an uploaded image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd74d182c641e4c78502d863b44d0aeff1575e54" translate="yes" xml:space="preserve">
          <source>Validation</source>
          <target state="translated">Validation</target>
        </trans-unit>
        <trans-unit id="dbde78fa1ab2bbe56819f2a8821ddf37bd21ae77" translate="yes" xml:space="preserve">
          <source>Validation Class. Used for validation of model data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155811ed56ecdc84e01612fe9529fc470a5433cd" translate="yes" xml:space="preserve">
          <source>Validation method name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e062cd0a309b98d3ad5ec233d0932b09f8635928" translate="yes" xml:space="preserve">
          <source>Validation of an IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4904838a3bdec0a48ea7507ec55d6c1ed2c8868" translate="yes" xml:space="preserve">
          <source>Validation of credit card numbers. Returns true if $check is in the proper credit card format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a5c7506ec83852b9992c2c718348bbbce955cc8" translate="yes" xml:space="preserve">
          <source>Validation::cc()</source>
          <target state="translated">Validation::cc()</target>
        </trans-unit>
        <trans-unit id="961a9c15f5af276e328623ce800d80daf5ce7e30" translate="yes" xml:space="preserve">
          <source>Validation::ip()</source>
          <target state="translated">Validation::ip()</target>
        </trans-unit>
        <trans-unit id="e6991fed4186fc223a1873ed81496cbde07b149b" translate="yes" xml:space="preserve">
          <source>Validation::url()</source>
          <target state="translated">Validation::url()</target>
        </trans-unit>
        <trans-unit id="32e9d4261ce2398cb704bff7645cfdd660473644" translate="yes" xml:space="preserve">
          <source>ValidationRule</source>
          <target state="translated">ValidationRule</target>
        </trans-unit>
        <trans-unit id="e778e1f22a61ed4acf64cef0b8396b043d80c6f3" translate="yes" xml:space="preserve">
          <source>ValidationRule object. Represents a validation method, error message and rules for applying such method to a field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6e46ad871688d83ec9010a0ee0a8273839301f" translate="yes" xml:space="preserve">
          <source>ValidationSet</source>
          <target state="translated">ValidationSet</target>
        </trans-unit>
        <trans-unit id="3150e9dbcb2e5aa53d08a7cb810e2cdd9b02230b" translate="yes" xml:space="preserve">
          <source>ValidationSet object. Holds all validation rules for a field and exposes methods to dynamically add or remove validation rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5b7a60980482ab39ae77b25489457b817517cd" translate="yes" xml:space="preserve">
          <source>Validator</source>
          <target state="translated">Validator</target>
        </trans-unit>
        <trans-unit id="9b1b1c16bd76d31a933725616a60fe69295bc145" translate="yes" xml:space="preserve">
          <source>Validator (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690bdeef6aef876ee21ac687e966bab3192a793b" translate="yes" xml:space="preserve">
          <source>Validator class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea4c3e563ae28c28bea815278f157fae19ac096" translate="yes" xml:space="preserve">
          <source>Validator method used to check the uniqueness of a value for a column. This is meant to be used with the validation API and not to be called directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef1db913429ad314f52ff6579b0765591541173" translate="yes" xml:space="preserve">
          <source>Validator name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1ddc89a6a02c3c98edc354146de7ab5e38334d" translate="yes" xml:space="preserve">
          <source>Validator object encapsulates all methods related to data validations for a model It also provides an API to dynamically change validation rules for each model field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eedbb5e11f11ae1e7bd56f5f63d93c80530ad50" translate="yes" xml:space="preserve">
          <source>Validator object to be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be188653f3187b61844e1d6f45c4e43b06d09390" translate="yes" xml:space="preserve">
          <source>Validator::$_allowEmptyFlags</source>
          <target state="translated">Validator::$_allowEmptyFlags</target>
        </trans-unit>
        <trans-unit id="1349f92785a30178f7e8ad017a5c930f818e3d2f" translate="yes" xml:space="preserve">
          <source>Validator::$_allowEmptyMessages</source>
          <target state="translated">Validator::$_allowEmptyMessages</target>
        </trans-unit>
        <trans-unit id="225bf8c0c30081ec5088c87beb2e4c2159863ca7" translate="yes" xml:space="preserve">
          <source>Validator::$_defaultProviders</source>
          <target state="translated">Validator::$_defaultProviders</target>
        </trans-unit>
        <trans-unit id="29f9dbd9a21c5abaa0006d78a5cc12a15487fed3" translate="yes" xml:space="preserve">
          <source>Validator::$_fields</source>
          <target state="translated">Validator::$_fields</target>
        </trans-unit>
        <trans-unit id="a9ad1eaa0561d79770df386bbbdb402688aa6a21" translate="yes" xml:space="preserve">
          <source>Validator::$_presenceMessages</source>
          <target state="translated">Validator::$_presenceMessages</target>
        </trans-unit>
        <trans-unit id="5e117e4ba1160d1794973672709caff1c015163a" translate="yes" xml:space="preserve">
          <source>Validator::$_providers</source>
          <target state="translated">Validator::$_providers</target>
        </trans-unit>
        <trans-unit id="38ddc8f118b080fbf6a2f51dfb9ae460ccbd465f" translate="yes" xml:space="preserve">
          <source>Validator::$_useI18n</source>
          <target state="translated">Validator::$_useI18n</target>
        </trans-unit>
        <trans-unit id="9bde66161ccef1cb590c46e57ac88ac2533bad14" translate="yes" xml:space="preserve">
          <source>Validator::__construct()</source>
          <target state="translated">Validator::__construct()</target>
        </trans-unit>
        <trans-unit id="13b710753a19bfedbef7a38800fb0bc65bf1f4ac" translate="yes" xml:space="preserve">
          <source>Validator::__debugInfo()</source>
          <target state="translated">Validator::__debugInfo()</target>
        </trans-unit>
        <trans-unit id="eed304764018e9ae62b69d7bd4948633552fb4b6" translate="yes" xml:space="preserve">
          <source>Validator::_canBeEmpty()</source>
          <target state="translated">Validator::_canBeEmpty()</target>
        </trans-unit>
        <trans-unit id="0b65265b35ad85846cfe2bfd6caa17eac3dc8003" translate="yes" xml:space="preserve">
          <source>Validator::_checkPresence()</source>
          <target state="translated">Validator::_checkPresence()</target>
        </trans-unit>
        <trans-unit id="594bd0e0372c7ab0d073b13ff79089b6ccfe4930" translate="yes" xml:space="preserve">
          <source>Validator::_convertValidatorToArray()</source>
          <target state="translated">Validator::_convertValidatorToArray()</target>
        </trans-unit>
        <trans-unit id="207d276b1b696800475a04c9d9132fd04ff603c9" translate="yes" xml:space="preserve">
          <source>Validator::_fieldIsEmpty()</source>
          <target state="translated">Validator::_fieldIsEmpty()</target>
        </trans-unit>
        <trans-unit id="8e83d58a6c92935ee49dc554cc186ff14452c280" translate="yes" xml:space="preserve">
          <source>Validator::_processRules()</source>
          <target state="translated">Validator::_processRules()</target>
        </trans-unit>
        <trans-unit id="d9f616d492edfb678be965af89e7accd8ee34a35" translate="yes" xml:space="preserve">
          <source>Validator::add()</source>
          <target state="translated">Validator::add()</target>
        </trans-unit>
        <trans-unit id="e82a1616c5d5b732d77fd293118a1355957e66f4" translate="yes" xml:space="preserve">
          <source>Validator::addDefaultProvider()</source>
          <target state="translated">Validator::addDefaultProvider()</target>
        </trans-unit>
        <trans-unit id="534d5985717653822f0b5e29178e60a4af689c6d" translate="yes" xml:space="preserve">
          <source>Validator::addNested()</source>
          <target state="translated">Validator::addNested()</target>
        </trans-unit>
        <trans-unit id="7a5d98cd5ea40fc77b6fdcbadcb16369a51f5fb3" translate="yes" xml:space="preserve">
          <source>Validator::addNestedMany()</source>
          <target state="translated">Validator::addNestedMany()</target>
        </trans-unit>
        <trans-unit id="20f3b237bda5906ad394f73e47d4e49136105430" translate="yes" xml:space="preserve">
          <source>Validator::allowEmpty()</source>
          <target state="translated">Validator::allowEmpty()</target>
        </trans-unit>
        <trans-unit id="2ff8cc389d38a74fa8c94a3b1edf71f49fb566ae" translate="yes" xml:space="preserve">
          <source>Validator::allowEmptyArray()</source>
          <target state="translated">Validator::allowEmptyArray()</target>
        </trans-unit>
        <trans-unit id="c4edf47bad27e86aa988215acf8f3e2a7c7d80ce" translate="yes" xml:space="preserve">
          <source>Validator::allowEmptyDate()</source>
          <target state="translated">Validator::allowEmptyDate()</target>
        </trans-unit>
        <trans-unit id="110c3c0d862103fa85adf9db83e19d55ec3c30b1" translate="yes" xml:space="preserve">
          <source>Validator::allowEmptyDateTime()</source>
          <target state="translated">Validator::allowEmptyDateTime()</target>
        </trans-unit>
        <trans-unit id="4c25558340fc649cc08b45b006b75788e5ff8e73" translate="yes" xml:space="preserve">
          <source>Validator::allowEmptyFile()</source>
          <target state="translated">Validator::allowEmptyFile()</target>
        </trans-unit>
        <trans-unit id="aaea6cdb282abfc0281c0059695dc2a6c66ec4c6" translate="yes" xml:space="preserve">
          <source>Validator::allowEmptyFor()</source>
          <target state="translated">Validator::allowEmptyFor()</target>
        </trans-unit>
        <trans-unit id="0751c472ed2b9e7735d333e1dc943e2bcdc52596" translate="yes" xml:space="preserve">
          <source>Validator::allowEmptyString()</source>
          <target state="translated">Validator::allowEmptyString()</target>
        </trans-unit>
        <trans-unit id="9d10d8386f5b8b85551f89ae7748cd3c7a171128" translate="yes" xml:space="preserve">
          <source>Validator::allowEmptyTime()</source>
          <target state="translated">Validator::allowEmptyTime()</target>
        </trans-unit>
        <trans-unit id="b54717ac39f122a9edcb15f7dacbdc01de31a2bf" translate="yes" xml:space="preserve">
          <source>Validator::alphaNumeric()</source>
          <target state="translated">Validator::alphaNumeric()</target>
        </trans-unit>
        <trans-unit id="b438a105a8b07fbeadd7a8207f88353c49bbfe6d" translate="yes" xml:space="preserve">
          <source>Validator::ascii()</source>
          <target state="translated">Validator::ascii()</target>
        </trans-unit>
        <trans-unit id="9c20fa3fda797a8e8590273fb643519ea843c49d" translate="yes" xml:space="preserve">
          <source>Validator::boolean()</source>
          <target state="translated">Validator::boolean()</target>
        </trans-unit>
        <trans-unit id="162f1487b9a6f4d03e987a5fd94c96688572b414" translate="yes" xml:space="preserve">
          <source>Validator::containsNonAlphaNumeric()</source>
          <target state="translated">Validator::containsNonAlphaNumeric()</target>
        </trans-unit>
        <trans-unit id="ef956e4c505885de1165a9f9afab939b726b903b" translate="yes" xml:space="preserve">
          <source>Validator::count()</source>
          <target state="translated">Validator::count()</target>
        </trans-unit>
        <trans-unit id="8753d7fae92cba07b2681daca4cd8c648994ba9d" translate="yes" xml:space="preserve">
          <source>Validator::creditCard()</source>
          <target state="translated">Validator::creditCard()</target>
        </trans-unit>
        <trans-unit id="d95a44b99fd96dab07dc72f0d320710be8de9189" translate="yes" xml:space="preserve">
          <source>Validator::date()</source>
          <target state="translated">Validator::date()</target>
        </trans-unit>
        <trans-unit id="31f7501af5f55aa70b28f6e1810366cb19741ec7" translate="yes" xml:space="preserve">
          <source>Validator::dateTime()</source>
          <target state="translated">Validator::dateTime()</target>
        </trans-unit>
        <trans-unit id="745c84bf93be4c5af7080c1c5aac821b083be4e7" translate="yes" xml:space="preserve">
          <source>Validator::decimal()</source>
          <target state="translated">Validator::decimal()</target>
        </trans-unit>
        <trans-unit id="c206e2448ade853b08da2fde0c7651276379f7b8" translate="yes" xml:space="preserve">
          <source>Validator::email()</source>
          <target state="translated">Validator::email()</target>
        </trans-unit>
        <trans-unit id="31fc3becc60c8ac52a6f70db294a628ba742842e" translate="yes" xml:space="preserve">
          <source>Validator::equalToField()</source>
          <target state="translated">Validator::equalToField()</target>
        </trans-unit>
        <trans-unit id="845e4987ddc83d2a54aeede89fff4169fee46ce1" translate="yes" xml:space="preserve">
          <source>Validator::equals()</source>
          <target state="translated">Validator::equals()</target>
        </trans-unit>
        <trans-unit id="88882a126316707bfc806bd1b5fcde47feea3519" translate="yes" xml:space="preserve">
          <source>Validator::errors()</source>
          <target state="translated">Validator::errors()</target>
        </trans-unit>
        <trans-unit id="4a5a462ee5800d819c2da216387e7104521244a6" translate="yes" xml:space="preserve">
          <source>Validator::field()</source>
          <target state="translated">Validator::field()</target>
        </trans-unit>
        <trans-unit id="941d58efe909efea8bdfdd0e9d10f6d140a9029f" translate="yes" xml:space="preserve">
          <source>Validator::getDefaultProvider()</source>
          <target state="translated">Validator::getDefaultProvider()</target>
        </trans-unit>
        <trans-unit id="1c8c4a338282146b3b902e4eeb117acb97120e22" translate="yes" xml:space="preserve">
          <source>Validator::getDefaultProviders()</source>
          <target state="translated">Validator::getDefaultProviders()</target>
        </trans-unit>
        <trans-unit id="23fe9abc359323278068d2352ed557df16bd499d" translate="yes" xml:space="preserve">
          <source>Validator::getIterator()</source>
          <target state="translated">Validator::getIterator()</target>
        </trans-unit>
        <trans-unit id="3e5e0931e6e3f9a496b4461bf0bff04a305c51fe" translate="yes" xml:space="preserve">
          <source>Validator::getNotEmptyMessage()</source>
          <target state="translated">Validator::getNotEmptyMessage()</target>
        </trans-unit>
        <trans-unit id="51e9d43c52785ab7fad93b99a712ea440076c49b" translate="yes" xml:space="preserve">
          <source>Validator::getProvider()</source>
          <target state="translated">Validator::getProvider()</target>
        </trans-unit>
        <trans-unit id="0b36d113c9215f911d0eb785879f689efc55971e" translate="yes" xml:space="preserve">
          <source>Validator::getRequiredMessage()</source>
          <target state="translated">Validator::getRequiredMessage()</target>
        </trans-unit>
        <trans-unit id="293e6d4363e4b7ac758c7fb67f52a33780dfa627" translate="yes" xml:space="preserve">
          <source>Validator::greaterThan()</source>
          <target state="translated">Validator::greaterThan()</target>
        </trans-unit>
        <trans-unit id="d4aad2d72063a0e78a6c64340789550073c67613" translate="yes" xml:space="preserve">
          <source>Validator::greaterThanField()</source>
          <target state="translated">Validator::greaterThanField()</target>
        </trans-unit>
        <trans-unit id="5374d946fbf546de4935dd355386a234d98ba869" translate="yes" xml:space="preserve">
          <source>Validator::greaterThanOrEqual()</source>
          <target state="translated">Validator::greaterThanOrEqual()</target>
        </trans-unit>
        <trans-unit id="204f145ed1bd2267cd1a5f010a14d31f63225764" translate="yes" xml:space="preserve">
          <source>Validator::greaterThanOrEqualToField()</source>
          <target state="translated">Validator::greaterThanOrEqualToField()</target>
        </trans-unit>
        <trans-unit id="1c10bea4de00ecb519ac416b3494695bba6e5eda" translate="yes" xml:space="preserve">
          <source>Validator::hasAtLeast()</source>
          <target state="translated">Validator::hasAtLeast()</target>
        </trans-unit>
        <trans-unit id="bc4ba0adcc5f45cea862416612e2f2ed4533ac82" translate="yes" xml:space="preserve">
          <source>Validator::hasAtMost()</source>
          <target state="translated">Validator::hasAtMost()</target>
        </trans-unit>
        <trans-unit id="25b2d5ebc70d8bee44c788418154d403ad65885e" translate="yes" xml:space="preserve">
          <source>Validator::hasField()</source>
          <target state="translated">Validator::hasField()</target>
        </trans-unit>
        <trans-unit id="e11cd2c39735c869ce28cbb41d54c2040755d717" translate="yes" xml:space="preserve">
          <source>Validator::hexColor()</source>
          <target state="translated">Validator::hexColor()</target>
        </trans-unit>
        <trans-unit id="2639ac194d33f91a31d8885c006859eb2d7f82a4" translate="yes" xml:space="preserve">
          <source>Validator::inList()</source>
          <target state="translated">Validator::inList()</target>
        </trans-unit>
        <trans-unit id="61b46ddc6dacff8b1c5a57fcca1bff0da0f16f89" translate="yes" xml:space="preserve">
          <source>Validator::integer()</source>
          <target state="translated">Validator::integer()</target>
        </trans-unit>
        <trans-unit id="fdcd2f5587c33b437fe0ab8a9673439ab8a30855" translate="yes" xml:space="preserve">
          <source>Validator::invertWhenClause()</source>
          <target state="translated">Validator::invertWhenClause()</target>
        </trans-unit>
        <trans-unit id="97b0f38f4c6d75055958435a9518f617f3b4623a" translate="yes" xml:space="preserve">
          <source>Validator::ip()</source>
          <target state="translated">Validator::ip()</target>
        </trans-unit>
        <trans-unit id="fb7f954da4bb840bea8969de04d02bd0e63f6611" translate="yes" xml:space="preserve">
          <source>Validator::ipv4()</source>
          <target state="translated">Validator::ipv4()</target>
        </trans-unit>
        <trans-unit id="7b54563c5f6b843c9f518a0c358ee8fe9b475a60" translate="yes" xml:space="preserve">
          <source>Validator::ipv6()</source>
          <target state="translated">Validator::ipv6()</target>
        </trans-unit>
        <trans-unit id="554831524190982470ba0a56043fe6bd0241f38a" translate="yes" xml:space="preserve">
          <source>Validator::isArray()</source>
          <target state="translated">Validator::isArray()</target>
        </trans-unit>
        <trans-unit id="7d5b279dc62f05b9a7727132234e4fd8280f920a" translate="yes" xml:space="preserve">
          <source>Validator::isEmpty()</source>
          <target state="translated">Validator::isEmpty()</target>
        </trans-unit>
        <trans-unit id="34313d0bab512110d22375ed0b51026996b8ee93" translate="yes" xml:space="preserve">
          <source>Validator::isEmptyAllowed()</source>
          <target state="translated">Validator::isEmptyAllowed()</target>
        </trans-unit>
        <trans-unit id="5295861bad3e457cdb2ea4b647965c0ea5310e21" translate="yes" xml:space="preserve">
          <source>Validator::isPresenceRequired()</source>
          <target state="translated">Validator::isPresenceRequired()</target>
        </trans-unit>
        <trans-unit id="770db84723434d81b61a605d86cecd3dff075460" translate="yes" xml:space="preserve">
          <source>Validator::latLong()</source>
          <target state="translated">Validator::latLong()</target>
        </trans-unit>
        <trans-unit id="656c42856991b4a93558a100f52f0c0ef971d7c0" translate="yes" xml:space="preserve">
          <source>Validator::latitude()</source>
          <target state="translated">Validator::latitude()</target>
        </trans-unit>
        <trans-unit id="2eb06eaabf2dda2c67925c1995928735c2600524" translate="yes" xml:space="preserve">
          <source>Validator::lengthBetween()</source>
          <target state="translated">Validator::lengthBetween()</target>
        </trans-unit>
        <trans-unit id="099fd199d77707270ccaa2aac3ac69960d88dda0" translate="yes" xml:space="preserve">
          <source>Validator::lessThan()</source>
          <target state="translated">Validator::lessThan()</target>
        </trans-unit>
        <trans-unit id="8b5bac041dc3a883e08b95751654ca44b25f84fd" translate="yes" xml:space="preserve">
          <source>Validator::lessThanField()</source>
          <target state="translated">Validator::lessThanField()</target>
        </trans-unit>
        <trans-unit id="38ec7bb5ff63958884e29dbcc7eb692e87c4698a" translate="yes" xml:space="preserve">
          <source>Validator::lessThanOrEqual()</source>
          <target state="translated">Validator::lessThanOrEqual()</target>
        </trans-unit>
        <trans-unit id="6eb2dcb9cd3a9eaf5e650b42cc615e52d6948a8b" translate="yes" xml:space="preserve">
          <source>Validator::lessThanOrEqualToField()</source>
          <target state="translated">Validator::lessThanOrEqualToField()</target>
        </trans-unit>
        <trans-unit id="7886970f4f6924533a5e2d5084aad886f73116d1" translate="yes" xml:space="preserve">
          <source>Validator::localizedTime()</source>
          <target state="translated">Validator::localizedTime()</target>
        </trans-unit>
        <trans-unit id="13013c184eb7057c0711e7dbc219c540f2eabcda" translate="yes" xml:space="preserve">
          <source>Validator::longitude()</source>
          <target state="translated">Validator::longitude()</target>
        </trans-unit>
        <trans-unit id="8a849ab95a3e3908891a5cd26bda2509ca4695ac" translate="yes" xml:space="preserve">
          <source>Validator::maxLength()</source>
          <target state="translated">Validator::maxLength()</target>
        </trans-unit>
        <trans-unit id="e77f81824eb550cd955b82c94cbf11dcb84c50e9" translate="yes" xml:space="preserve">
          <source>Validator::maxLengthBytes()</source>
          <target state="translated">Validator::maxLengthBytes()</target>
        </trans-unit>
        <trans-unit id="21840916d79ff4e26df6180527e64bb5d976213e" translate="yes" xml:space="preserve">
          <source>Validator::minLength()</source>
          <target state="translated">Validator::minLength()</target>
        </trans-unit>
        <trans-unit id="5ccb527c569bd6c4bad9e0f523ea06ee7a2d0886" translate="yes" xml:space="preserve">
          <source>Validator::minLengthBytes()</source>
          <target state="translated">Validator::minLengthBytes()</target>
        </trans-unit>
        <trans-unit id="4fbf0f321128f71f1eec11e5225f43b00d2686a8" translate="yes" xml:space="preserve">
          <source>Validator::multipleOptions()</source>
          <target state="translated">Validator::multipleOptions()</target>
        </trans-unit>
        <trans-unit id="895eefc0d09253d7e119a2ef0b226b7d25b57c3f" translate="yes" xml:space="preserve">
          <source>Validator::naturalNumber()</source>
          <target state="translated">Validator::naturalNumber()</target>
        </trans-unit>
        <trans-unit id="5753eb52f38395b0164ac3155a1bcbc8bcce71dc" translate="yes" xml:space="preserve">
          <source>Validator::nonNegativeInteger()</source>
          <target state="translated">Validator::nonNegativeInteger()</target>
        </trans-unit>
        <trans-unit id="639c3f735820dfaeab8afe65eb9643013bbdccb5" translate="yes" xml:space="preserve">
          <source>Validator::notBlank()</source>
          <target state="translated">Validator::notBlank()</target>
        </trans-unit>
        <trans-unit id="7e22e0d2b3e493e4bb74ff131889f753229ed7fb" translate="yes" xml:space="preserve">
          <source>Validator::notEmpty()</source>
          <target state="translated">Validator::notEmpty()</target>
        </trans-unit>
        <trans-unit id="37bfd0421677091a83fe999aa035beb700aa36ce" translate="yes" xml:space="preserve">
          <source>Validator::notEmptyArray()</source>
          <target state="translated">Validator::notEmptyArray()</target>
        </trans-unit>
        <trans-unit id="1f23f351c2cd0e360179d368b69cdf03499542a1" translate="yes" xml:space="preserve">
          <source>Validator::notEmptyDate()</source>
          <target state="translated">Validator::notEmptyDate()</target>
        </trans-unit>
        <trans-unit id="a4831c0ecffa8064a8a8f6a9c35583eeecae8901" translate="yes" xml:space="preserve">
          <source>Validator::notEmptyDateTime()</source>
          <target state="translated">Validator::notEmptyDateTime()</target>
        </trans-unit>
        <trans-unit id="d46f0aefff2712549d46c9a764cb95c8d11c7e2f" translate="yes" xml:space="preserve">
          <source>Validator::notEmptyFile()</source>
          <target state="translated">Validator::notEmptyFile()</target>
        </trans-unit>
        <trans-unit id="1329db6eaf3acef95f69a8203e31161a729e3097" translate="yes" xml:space="preserve">
          <source>Validator::notEmptyString()</source>
          <target state="translated">Validator::notEmptyString()</target>
        </trans-unit>
        <trans-unit id="1f061c2b80a31c0dcbe95350e1c5b4d69dfabe0f" translate="yes" xml:space="preserve">
          <source>Validator::notEmptyTime()</source>
          <target state="translated">Validator::notEmptyTime()</target>
        </trans-unit>
        <trans-unit id="d6a01b273c8c100a20f32f443480c12504d1450c" translate="yes" xml:space="preserve">
          <source>Validator::notEqualToField()</source>
          <target state="translated">Validator::notEqualToField()</target>
        </trans-unit>
        <trans-unit id="fe551992d119b42bb7694330557025ed93e0ee70" translate="yes" xml:space="preserve">
          <source>Validator::notEquals()</source>
          <target state="translated">Validator::notEquals()</target>
        </trans-unit>
        <trans-unit id="251b81b8da526404c5d9357747b0e987e3590fa0" translate="yes" xml:space="preserve">
          <source>Validator::notSameAs()</source>
          <target state="translated">Validator::notSameAs()</target>
        </trans-unit>
        <trans-unit id="066254a7240dc45fa67b0a21da2f33c9e0670ac3" translate="yes" xml:space="preserve">
          <source>Validator::numeric()</source>
          <target state="translated">Validator::numeric()</target>
        </trans-unit>
        <trans-unit id="779df345d22af8f92dc8dc0756ed71aac5582dd3" translate="yes" xml:space="preserve">
          <source>Validator::offsetExists()</source>
          <target state="translated">Validator::offsetExists()</target>
        </trans-unit>
        <trans-unit id="fd491a73b62317f7941aebe8ca9d9cf43585c162" translate="yes" xml:space="preserve">
          <source>Validator::offsetGet()</source>
          <target state="translated">Validator::offsetGet()</target>
        </trans-unit>
        <trans-unit id="c056179211d974054c71e1d9ed697cad81f63b58" translate="yes" xml:space="preserve">
          <source>Validator::offsetSet()</source>
          <target state="translated">Validator::offsetSet()</target>
        </trans-unit>
        <trans-unit id="59a3d05c62fee90fddf8fdf41626dadd13aab316" translate="yes" xml:space="preserve">
          <source>Validator::offsetUnset()</source>
          <target state="translated">Validator::offsetUnset()</target>
        </trans-unit>
        <trans-unit id="47986af778d54b6abaa32f14b8956f7fefe74b03" translate="yes" xml:space="preserve">
          <source>Validator::provider()</source>
          <target state="translated">Validator::provider()</target>
        </trans-unit>
        <trans-unit id="35949323664a8c7fd36a937e9f2a6e04d1f61644" translate="yes" xml:space="preserve">
          <source>Validator::providers()</source>
          <target state="translated">Validator::providers()</target>
        </trans-unit>
        <trans-unit id="9034d60b11e388d5739a747ad7c266bf99055915" translate="yes" xml:space="preserve">
          <source>Validator::range()</source>
          <target state="translated">Validator::range()</target>
        </trans-unit>
        <trans-unit id="52b75f7d5b309aed4534ec9ea2476c1bf979df74" translate="yes" xml:space="preserve">
          <source>Validator::regex()</source>
          <target state="translated">Validator::regex()</target>
        </trans-unit>
        <trans-unit id="bdd4a95daaa26e920d71f969df5b0b01a5263231" translate="yes" xml:space="preserve">
          <source>Validator::remove()</source>
          <target state="translated">Validator::remove()</target>
        </trans-unit>
        <trans-unit id="96117768df993d305b27ab2fe160ac3cedee7563" translate="yes" xml:space="preserve">
          <source>Validator::requirePresence()</source>
          <target state="translated">Validator::requirePresence()</target>
        </trans-unit>
        <trans-unit id="6c0a176381e87baf99a4e423674b422609a37e2e" translate="yes" xml:space="preserve">
          <source>Validator::sameAs()</source>
          <target state="translated">Validator::sameAs()</target>
        </trans-unit>
        <trans-unit id="3afdf857b4e2ba0e9151a50430f68c149c609617" translate="yes" xml:space="preserve">
          <source>Validator::scalar()</source>
          <target state="translated">Validator::scalar()</target>
        </trans-unit>
        <trans-unit id="d3ab689e424e5d024ca2c8e8d5fb910005bce73d" translate="yes" xml:space="preserve">
          <source>Validator::setProvider()</source>
          <target state="translated">Validator::setProvider()</target>
        </trans-unit>
        <trans-unit id="c0a1f8df43908c640b0225f9395446247d46cba8" translate="yes" xml:space="preserve">
          <source>Validator::sortMessageAndWhen()</source>
          <target state="translated">Validator::sortMessageAndWhen()</target>
        </trans-unit>
        <trans-unit id="77bd4ac4b10dafabeddec2ce0b6d6d9546f034c6" translate="yes" xml:space="preserve">
          <source>Validator::time()</source>
          <target state="translated">Validator::time()</target>
        </trans-unit>
        <trans-unit id="0d00d169f5260fca23abba7c5d42a609fd3d2298" translate="yes" xml:space="preserve">
          <source>Validator::uploadedFile()</source>
          <target state="translated">Validator::uploadedFile()</target>
        </trans-unit>
        <trans-unit id="634dc5dc8822481fc77fa381d097e4ca8c3f8100" translate="yes" xml:space="preserve">
          <source>Validator::url()</source>
          <target state="translated">Validator::url()</target>
        </trans-unit>
        <trans-unit id="18facb4875e6d38fe236f3f805e75281f85d5de1" translate="yes" xml:space="preserve">
          <source>Validator::urlWithProtocol()</source>
          <target state="translated">Validator::urlWithProtocol()</target>
        </trans-unit>
        <trans-unit id="920b312c564d4580b3c71b22df3c7ad48b6909f7" translate="yes" xml:space="preserve">
          <source>Validator::utf8()</source>
          <target state="translated">Validator::utf8()</target>
        </trans-unit>
        <trans-unit id="456f0e819a97c7f13cd034ff7ebdc7b95675271d" translate="yes" xml:space="preserve">
          <source>Validator::utf8Extended()</source>
          <target state="translated">Validator::utf8Extended()</target>
        </trans-unit>
        <trans-unit id="4a1f575f5af516ed6ebeebcf72b722e924f47ba7" translate="yes" xml:space="preserve">
          <source>Validator::uuid()</source>
          <target state="translated">Validator::uuid()</target>
        </trans-unit>
        <trans-unit id="c92325b474228dcae57859f051e6021ecb719978" translate="yes" xml:space="preserve">
          <source>ValidatorAwareInterface</source>
          <target state="translated">ValidatorAwareInterface</target>
        </trans-unit>
        <trans-unit id="9985e44a2825808e308a1808af78ff11ce3f9f86" translate="yes" xml:space="preserve">
          <source>ValidatorAwareInterface (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b8bf1bf24ef059a260cb2b89ac9ac503602112" translate="yes" xml:space="preserve">
          <source>ValidatorAwareInterface::getValidator()</source>
          <target state="translated">ValidatorAwareInterface::getValidator()</target>
        </trans-unit>
        <trans-unit id="993b5d023be44a02ddecaad7dbdd939d267e5373" translate="yes" xml:space="preserve">
          <source>ValidatorAwareInterface::hasValidator()</source>
          <target state="translated">ValidatorAwareInterface::hasValidator()</target>
        </trans-unit>
        <trans-unit id="946186b1aeec5964be359d5c3923ab4139ca1677" translate="yes" xml:space="preserve">
          <source>ValidatorAwareInterface::setValidator()</source>
          <target state="translated">ValidatorAwareInterface::setValidator()</target>
        </trans-unit>
        <trans-unit id="cf3eda33760acea7f8b01e195b561f8f6355dcdd" translate="yes" xml:space="preserve">
          <source>ValidatorAwareTrait</source>
          <target state="translated">ValidatorAwareTrait</target>
        </trans-unit>
        <trans-unit id="c4b988a73140ac84b5e8d8598e55b31df0b14112" translate="yes" xml:space="preserve">
          <source>ValidatorAwareTrait (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e7bf9e25a847802fe6e236093005be7cb47121" translate="yes" xml:space="preserve">
          <source>ValidatorAwareTrait::$_validatorClass</source>
          <target state="translated">ValidatorAwareTrait::$_validatorClass</target>
        </trans-unit>
        <trans-unit id="741cbddd9361bea1ce3780764725702ddecf36c1" translate="yes" xml:space="preserve">
          <source>ValidatorAwareTrait::$_validators</source>
          <target state="translated">ValidatorAwareTrait::$_validators</target>
        </trans-unit>
        <trans-unit id="129f5a87e2f6e31f573dc3cbcffdc987570c930a" translate="yes" xml:space="preserve">
          <source>ValidatorAwareTrait::createValidator()</source>
          <target state="translated">ValidatorAwareTrait::createValidator()</target>
        </trans-unit>
        <trans-unit id="5c528f7c51a1e27c2d27d26e779255dc07cd3ed5" translate="yes" xml:space="preserve">
          <source>ValidatorAwareTrait::getValidator()</source>
          <target state="translated">ValidatorAwareTrait::getValidator()</target>
        </trans-unit>
        <trans-unit id="61abb420c98dde091759452d716f2ec42cfa7cb1" translate="yes" xml:space="preserve">
          <source>ValidatorAwareTrait::hasValidator()</source>
          <target state="translated">ValidatorAwareTrait::hasValidator()</target>
        </trans-unit>
        <trans-unit id="35c55b5f62af5377394a52743eb78ea44043ca8a" translate="yes" xml:space="preserve">
          <source>ValidatorAwareTrait::setValidator()</source>
          <target state="translated">ValidatorAwareTrait::setValidator()</target>
        </trans-unit>
        <trans-unit id="b70faf9d8413d1ef5e14492680dd03685875cb91" translate="yes" xml:space="preserve">
          <source>ValidatorAwareTrait::validationDefault()</source>
          <target state="translated">ValidatorAwareTrait::validationDefault()</target>
        </trans-unit>
        <trans-unit id="62bca248340182648a0ac7b7af3a68553798fda5" translate="yes" xml:space="preserve">
          <source>ValidatorAwareTrait::validationMethodExists()</source>
          <target state="translated">ValidatorAwareTrait::validationMethodExists()</target>
        </trans-unit>
        <trans-unit id="d384da5796f0f03e1e796408585f5ed4cf2b519a" translate="yes" xml:space="preserve">
          <source>ValidatorAwareTrait::validator()</source>
          <target state="translated">ValidatorAwareTrait::validator()</target>
        </trans-unit>
        <trans-unit id="8dce170de238b1feda2ecd9674ea3ca0d068fbcb" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>
        </trans-unit>
        <trans-unit id="f99d52573d4105c101aa2fb9f47fd2263097ee5a" translate="yes" xml:space="preserve">
          <source>Value for cookie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4b7b9ca28a8023b1e4144d49a66c9be07bce79" translate="yes" xml:space="preserve">
          <source>Value for property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b33d7e0405dcccd426afc5399009e490decb89" translate="yes" xml:space="preserve">
          <source>Value in case $name is a string (which then works as the key). Unused if $name is an associative array, otherwise serves as the values to $name's keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657d37ad2fbe9019ca9d6e894cdad33b527d9073" translate="yes" xml:space="preserve">
          <source>Value of the cookie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b644611311ed9e5542b54cb918b8e6dea7f865" translate="yes" xml:space="preserve">
          <source>Value of the cookie to set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491303c0ebd2ed4624804b91771fe2930cfe49dc" translate="yes" xml:space="preserve">
          <source>Value of this-&amp;gt;_name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f9f9b8b81b8b56cad3c464a92974882250b3064" translate="yes" xml:space="preserve">
          <source>Value of this-&amp;gt;_short.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80932d7f12753125e90f12c71b278c665d223533" translate="yes" xml:space="preserve">
          <source>Value stored in configure, or null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702dc9beefc6709175df1119a405cb1a7a3cacb9" translate="yes" xml:space="preserve">
          <source>Value stored in configure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d7c00610ad134e186b08217e86963d27e865ed" translate="yes" xml:space="preserve">
          <source>Value to be added. Use negative to subtract.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5480ba8ff4db4a6b27dc5221d3e7704c78300306" translate="yes" xml:space="preserve">
          <source>Value to be converted to PDO statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d79e11e28b78dd49d390a662c365625c2245b9" translate="yes" xml:space="preserve">
          <source>Value to be converted to PHP equivalent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f6ef7e9a243487c150f25552800570186a558de" translate="yes" xml:space="preserve">
          <source>Value to be converted to a database equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6afd2d5f53b1e9cedec5f81bda2b227b31887732" translate="yes" xml:space="preserve">
          <source>Value to be returned when invalid size was used, for example 'Unknown type'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5af47a4e8db382eb87f1b723066c65949f3780" translate="yes" xml:space="preserve">
          <source>Value to be used for joining conditions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be14131853236ba27c50f2138155fd536ac6b2f7" translate="yes" xml:space="preserve">
          <source>Value to check</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f029b71dd999ba4f35c1745297e99a1815e9a8d2" translate="yes" xml:space="preserve">
          <source>Value to check against the $regex expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b39363a9acb05b43656430efc94938844a6c272" translate="yes" xml:space="preserve">
          <source>Value to check against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="debb1d078848e38e17d2ef15a988eedeb229a751" translate="yes" xml:space="preserve">
          <source>Value to check for length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4dac4d340683484fde8c5d00c6af1bdb0a3b15d" translate="yes" xml:space="preserve">
          <source>Value to check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8dce41bba6f1ace4b32a392aac6115f1fee54f4" translate="yes" xml:space="preserve">
          <source>Value to compare</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7865662b369f4d84796dade65aec1e91a33c1805" translate="yes" xml:space="preserve">
          <source>Value to deconstruct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148f4c06fbfa76176e03f4dccec3fa78431ac0e0" translate="yes" xml:space="preserve">
          <source>Value to encode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac8b9aee785833c895b86c4bcdda284d578b69a" translate="yes" xml:space="preserve">
          <source>Value to encrypt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba024cf203720a061e9bb9b72131a25d472dd9e1" translate="yes" xml:space="preserve">
          <source>Value to export.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715dcdd8f6ff522d4658e491027e9aae31a8b5e6" translate="yes" xml:space="preserve">
          <source>Value to format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e91bc97eaca5e4154995903bb9c803eec76d57f" translate="yes" xml:space="preserve">
          <source>Value to set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d6e84c6c2cf9a639b3b3cbe73f43018692615a" translate="yes" xml:space="preserve">
          <source>Value to set for var</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f64f6d40d459ad3799668b18de8c8361f2dc1dcb" translate="yes" xml:space="preserve">
          <source>Value to set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792671d1f0ce6892939da4f2741ab6cec63e90c5" translate="yes" xml:space="preserve">
          <source>Value to set. Default null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d00c06d1fc60b2309b20a82b324f120aacf8308" translate="yes" xml:space="preserve">
          <source>Value to write</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b27b07773edfc1979c6528bd5d993af769863d" translate="yes" xml:space="preserve">
          <source>Value to write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a77adc1be812ee3d16dee6cfa05d71725de029d" translate="yes" xml:space="preserve">
          <source>Value.</source>
          <target state="translated">Value.</target>
        </trans-unit>
        <trans-unit id="f1b1252b35ffdd4f25a75a1201c1335640abd9ca" translate="yes" xml:space="preserve">
          <source>Value. Will return null if it doesn't exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34b17fe9fc9dd700d3d0dd540c0a868af9459f5" translate="yes" xml:space="preserve">
          <source>Values are sorted by name and then value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f6be3bb69233e8f7f1e1eacefcf529f46756c4" translate="yes" xml:space="preserve">
          <source>Values belonging to a parent row based on their parent_id value will be recursively nested inside the parent row values using the &lt;code&gt;children&lt;/code&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7721af8edfa21a7f7333fb94ade9a15eb4701379" translate="yes" xml:space="preserve">
          <source>Values from the session vars</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2564e6487e5ce3b71254885dac6a20f4bcbd822c" translate="yes" xml:space="preserve">
          <source>Values stored in the cookie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3344f8e243fc638180283d89ebf37ed68b496068" translate="yes" xml:space="preserve">
          <source>Values that are associated with the conditions in the $_conditions array. Each value represents the 'true' value for the condition with the corresponding key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad4d1448c3baad94d83e3fc0e7cd5127e38fc64" translate="yes" xml:space="preserve">
          <source>Values to be exploded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ea159e35174409987b14a3713b881d28e4953d" translate="yes" xml:space="preserve">
          <source>Values to decrypt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112c11ad95b73245195cb3ff33aafb63a5754230" translate="yes" xml:space="preserve">
          <source>ValuesExpression</source>
          <target state="translated">ValuesExpression</target>
        </trans-unit>
        <trans-unit id="5fd7625922775d25ce77dcd43e55587b509531a0" translate="yes" xml:space="preserve">
          <source>ValuesExpression (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c752e557cce1ded813ac5ab498e07f9fbb7af1b" translate="yes" xml:space="preserve">
          <source>ValuesExpression::$_castedExpressions</source>
          <target state="translated">ValuesExpression::$_castedExpressions</target>
        </trans-unit>
        <trans-unit id="1d1281cb1ee73a82ad20a7789d22be5398ddf4cc" translate="yes" xml:space="preserve">
          <source>ValuesExpression::$_columns</source>
          <target state="translated">ValuesExpression::$_columns</target>
        </trans-unit>
        <trans-unit id="73a7d542baaefb69da7170493ebace5a62d0ecb5" translate="yes" xml:space="preserve">
          <source>ValuesExpression::$_query</source>
          <target state="translated">ValuesExpression::$_query</target>
        </trans-unit>
        <trans-unit id="c3523dfb5078f0e600e55f3a22ac339c8a4a7e5d" translate="yes" xml:space="preserve">
          <source>ValuesExpression::$_values</source>
          <target state="translated">ValuesExpression::$_values</target>
        </trans-unit>
        <trans-unit id="34a57c9b7a0c2f1979a25b62e32459ee4bdcf0c1" translate="yes" xml:space="preserve">
          <source>ValuesExpression::__construct()</source>
          <target state="translated">ValuesExpression::__construct()</target>
        </trans-unit>
        <trans-unit id="c98ab59ce04339eabf367e51b5d76ebd38bdcb39" translate="yes" xml:space="preserve">
          <source>ValuesExpression::_columnNames()</source>
          <target state="translated">ValuesExpression::_columnNames()</target>
        </trans-unit>
        <trans-unit id="e5f0c2bff792010349a42a38a8585bd30463aa30" translate="yes" xml:space="preserve">
          <source>ValuesExpression::_processExpressions()</source>
          <target state="translated">ValuesExpression::_processExpressions()</target>
        </trans-unit>
        <trans-unit id="177f81f6bf80b2e616a7e6e7ab3582afba19e9e2" translate="yes" xml:space="preserve">
          <source>ValuesExpression::add()</source>
          <target state="translated">ValuesExpression::add()</target>
        </trans-unit>
        <trans-unit id="209654ade41358eb8ea7a53097b604a54209f336" translate="yes" xml:space="preserve">
          <source>ValuesExpression::columns()</source>
          <target state="translated">ValuesExpression::columns()</target>
        </trans-unit>
        <trans-unit id="dbb0bd9d1bb2649084574a5855a80e3346a6cfbb" translate="yes" xml:space="preserve">
          <source>ValuesExpression::getColumns()</source>
          <target state="translated">ValuesExpression::getColumns()</target>
        </trans-unit>
        <trans-unit id="4b7b8d91ac06da02aa623a6add453c7a85a8c2cb" translate="yes" xml:space="preserve">
          <source>ValuesExpression::getQuery()</source>
          <target state="translated">ValuesExpression::getQuery()</target>
        </trans-unit>
        <trans-unit id="27ae95be65082b22fd6b7acc0ad699814f197e89" translate="yes" xml:space="preserve">
          <source>ValuesExpression::getValues()</source>
          <target state="translated">ValuesExpression::getValues()</target>
        </trans-unit>
        <trans-unit id="aa150a0e4baadcd99caf23c84e6a9695aeb731bf" translate="yes" xml:space="preserve">
          <source>ValuesExpression::query()</source>
          <target state="translated">ValuesExpression::query()</target>
        </trans-unit>
        <trans-unit id="e1a06ab4ac29b1b2cd7e1ef400dac7d10106d47e" translate="yes" xml:space="preserve">
          <source>ValuesExpression::setColumns()</source>
          <target state="translated">ValuesExpression::setColumns()</target>
        </trans-unit>
        <trans-unit id="ed3571c10c834d1891bdb644ae37b4657eca3f06" translate="yes" xml:space="preserve">
          <source>ValuesExpression::setQuery()</source>
          <target state="translated">ValuesExpression::setQuery()</target>
        </trans-unit>
        <trans-unit id="d1e91f270abf43e3458d779824668504617402f8" translate="yes" xml:space="preserve">
          <source>ValuesExpression::setValues()</source>
          <target state="translated">ValuesExpression::setValues()</target>
        </trans-unit>
        <trans-unit id="65733ddf7005e36da6ddb4af42db83247d2fcf8d" translate="yes" xml:space="preserve">
          <source>ValuesExpression::sql()</source>
          <target state="translated">ValuesExpression::sql()</target>
        </trans-unit>
        <trans-unit id="fb4c2b80dd2dfacf77bc65ba65cfcd3d05d29053" translate="yes" xml:space="preserve">
          <source>ValuesExpression::traverse()</source>
          <target state="translated">ValuesExpression::traverse()</target>
        </trans-unit>
        <trans-unit id="7471b67869e0d819f1e7d1eb396140f427ad7cd7" translate="yes" xml:space="preserve">
          <source>ValuesExpression::values()</source>
          <target state="translated">ValuesExpression::values()</target>
        </trans-unit>
        <trans-unit id="05cb73b348bb3a9d3f98fdcbe63bc0fa00526f8e" translate="yes" xml:space="preserve">
          <source>Var name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eaa9b4078031248a153e4ab5ff475eefbdbac8e" translate="yes" xml:space="preserve">
          <source>Variable as a formatted string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39179cd35bae6acb4335b9b9e003594af804dab0" translate="yes" xml:space="preserve">
          <source>Variable name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19d3a17c50b368876e4f76d530a93523dda2110" translate="yes" xml:space="preserve">
          <source>Variable name or hash of view variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf6b6d36ac69923e79d16b717a3106ef2ee2d38" translate="yes" xml:space="preserve">
          <source>Variable name to check for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b126b11210188cbe56466128adf2650a840a19a5" translate="yes" xml:space="preserve">
          <source>Variable or content to log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6570bb1147c818e8bf4c338f62afce0cae0dc06" translate="yes" xml:space="preserve">
          <source>Variable to check</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ac02348362c00554a8a8e06934a4ddeeeb0ad3" translate="yes" xml:space="preserve">
          <source>Variable to consume. Use '.' to access array elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0988ab2c4600f1e7d44c3f32dfbd4bb5c72201ed" translate="yes" xml:space="preserve">
          <source>Variable to convert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e94061b0973387dc802611706ad48c76ac09fd2" translate="yes" xml:space="preserve">
          <source>Variable to obtain. Use '.' to access array elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61419a49f69ba0b80f12372c28101146c51943d" translate="yes" xml:space="preserve">
          <source>Variable to print out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f061e9f96c1d426def28b9b008ac59921a507ac6" translate="yes" xml:space="preserve">
          <source>Variable to show debug information for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa52d44125607042768ededc21b9a97cc1f62c5" translate="yes" xml:space="preserve">
          <source>Variables for the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="072f487fdf334c1af2444f01c1301ae818c465bb" translate="yes" xml:space="preserve">
          <source>Variables to be set on render</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09fea2d25dbec3f5830a68289316fd912e00d34e" translate="yes" xml:space="preserve">
          <source>Variables to set for view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb09412534ea237020c62748559b91b72af5f3f" translate="yes" xml:space="preserve">
          <source>VarsTrait (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d96a7bd282eb4f9064bb32bb96d6721763aa227" translate="yes" xml:space="preserve">
          <source>VarsTrait::$_validViewOptions</source>
          <target state="translated">VarsTrait::$_validViewOptions</target>
        </trans-unit>
        <trans-unit id="56f717513383a253859650375020dccab3416ccd" translate="yes" xml:space="preserve">
          <source>VarsTrait::$_viewBuilder</source>
          <target state="translated">VarsTrait::$_viewBuilder</target>
        </trans-unit>
        <trans-unit id="cae8676619ce9ab2d250ae9b9365728365db0ac3" translate="yes" xml:space="preserve">
          <source>VarsTrait::$viewClass</source>
          <target state="translated">VarsTrait::$viewClass</target>
        </trans-unit>
        <trans-unit id="ee38d627fe21a0695e291219cf2f61c27970fa3b" translate="yes" xml:space="preserve">
          <source>VarsTrait::$viewVars</source>
          <target state="translated">VarsTrait::$viewVars</target>
        </trans-unit>
        <trans-unit id="d4b3a4d626033c693ff96d2dc3e93ec63b9e219f" translate="yes" xml:space="preserve">
          <source>VarsTrait::createView()</source>
          <target state="translated">VarsTrait::createView()</target>
        </trans-unit>
        <trans-unit id="b69813f7c29615cf0ddea1505406128991ce26f9" translate="yes" xml:space="preserve">
          <source>VarsTrait::set()</source>
          <target state="translated">VarsTrait::set()</target>
        </trans-unit>
        <trans-unit id="24ca9c88b40b66f779337bf736300dab0c7417e3" translate="yes" xml:space="preserve">
          <source>VarsTrait::viewBuilder()</source>
          <target state="translated">VarsTrait::viewBuilder()</target>
        </trans-unit>
        <trans-unit id="41ad2e62cda286d0746c637a401275db870904e7" translate="yes" xml:space="preserve">
          <source>VarsTrait::viewOptions()</source>
          <target state="translated">VarsTrait::viewOptions()</target>
        </trans-unit>
        <trans-unit id="5b8563fa89883cbabe9a45fa7987671205de88b4" translate="yes" xml:space="preserve">
          <source>Verifies that the application's salt and cipher seed value has been changed from the default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce1e6edcbd39be1370b2c6830733d8a1161055f" translate="yes" xml:space="preserve">
          <source>Verifies that the provided password corresponds to its hashed version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3355b5dc28b815703d76bccd598653200963e624" translate="yes" xml:space="preserve">
          <source>VersionCommand</source>
          <target state="translated">VersionCommand</target>
        </trans-unit>
        <trans-unit id="a55106c04a28f157edb4ef7b74ca579ebbf61147" translate="yes" xml:space="preserve">
          <source>VersionCommand (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40575c05a85768d1fc41626d8c031373b810e293" translate="yes" xml:space="preserve">
          <source>VersionCommand::execute()</source>
          <target state="translated">VersionCommand::execute()</target>
        </trans-unit>
        <trans-unit id="69bd4ef9fbd0894a22759c3766b859defbdedbc8" translate="yes" xml:space="preserve">
          <source>View</source>
          <target state="translated">View</target>
        </trans-unit>
        <trans-unit id="0db73f48f642f086e44c9564d490ea5024e67588" translate="yes" xml:space="preserve">
          <source>View builder configuration array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1fa191b352d37b8307cf48ec9cbe343d75cbf8" translate="yes" xml:space="preserve">
          <source>View class for render</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfe4b303d1b04dca122fef3dc4b514f66ceafb1" translate="yes" xml:space="preserve">
          <source>View class name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78e94e120b63f1dce63577e6612270c7f4f0e28" translate="yes" xml:space="preserve">
          <source>View class supports using plugins as themes. You can set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b71adf0666b79366d68964e1429a52a6da93d9" translate="yes" xml:space="preserve">
          <source>View file name to set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ccdc72571c048d50b260eace0088774f61ee67d" translate="yes" xml:space="preserve">
          <source>View file name to set. If null returns current name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547b9adacc8a1d21f5b02ebef6ce38dd88aa0ef0" translate="yes" xml:space="preserve">
          <source>View object to use when making helpers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a5340d7d77000ecac73deb3aa8ade6bbf5732e" translate="yes" xml:space="preserve">
          <source>View object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aaac38b34bfb7e5ed33104134759a1b32dc90c3" translate="yes" xml:space="preserve">
          <source>View options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57321f34d205dbba96ac0a35e5f013f42e768fc" translate="yes" xml:space="preserve">
          <source>View options. See View::$_passedVars for list of options which get set as class properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eee9fa209d41ed94bde86018d21d86d0a1df73b" translate="yes" xml:space="preserve">
          <source>View to use for rendering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1bae1d2ae4d7634ecd7a6d85de281515a157837" translate="yes" xml:space="preserve">
          <source>View var key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4823d4ccd743b0f71d845a205c49f52d2a79a54" translate="yes" xml:space="preserve">
          <source>View variable value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39881bbf96b26591e36c8a8c1a951f4efba5b2f" translate="yes" xml:space="preserve">
          <source>View vars</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac6ca4b26c76bb2ff95dae3c4eda1807cb7e9b8" translate="yes" xml:space="preserve">
          <source>View, the V in the MVC triad. View interacts with Helpers and view variables passed in from the controller to render the results of the controller action. Often this is HTML, but can also take the form of JSON, XML, PDF's or streaming files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016ab785f96fd753d5f6e8618fd478f34225a348" translate="yes" xml:space="preserve">
          <source>View.afterLayout $this, [$layoutFileName]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99ca41a39db1ab43ddd2b2e99764918304da8cd" translate="yes" xml:space="preserve">
          <source>View.afterRender $this, [$file, $element]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6aadc79794e507455217e9b3f6d8e02352f2fb" translate="yes" xml:space="preserve">
          <source>View.afterRender $this, [$viewFileName]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7deea9e701d481b68271e2b401f538c5ba086cd" translate="yes" xml:space="preserve">
          <source>View.afterRenderFile $this, [$viewFile, $content]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a6b4b9012c57e375d6f1cf146bfb1c5357eb6a" translate="yes" xml:space="preserve">
          <source>View.beforeLayout $this, [$layoutFileName]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522f6614e33e4a3719a74354955a0284704eda79" translate="yes" xml:space="preserve">
          <source>View.beforeRender $this, [$file]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e940c74e8373875387d74d2f3672f2457c4da65f" translate="yes" xml:space="preserve">
          <source>View.beforeRender $this, [$viewFileName]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac006f92adf81095b5f38b4174485898700ca76" translate="yes" xml:space="preserve">
          <source>View.beforeRenderFile $this, [$viewFile]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca94a8c44d0a79c36cffaac98b16e34714fb06d" translate="yes" xml:space="preserve">
          <source>View::$Form</source>
          <target state="translated">View::$Form</target>
        </trans-unit>
        <trans-unit id="70a4d0820c7e94066307fcb6f25fff2da84c51e5" translate="yes" xml:space="preserve">
          <source>View::$Html</source>
          <target state="translated">View::$Html</target>
        </trans-unit>
        <trans-unit id="bcc086250093544deca072dcc07e959631919516" translate="yes" xml:space="preserve">
          <source>View::$Rss</source>
          <target state="translated">View::$Rss</target>
        </trans-unit>
        <trans-unit id="a23c4fc4423692c0c82bc7f446794af56be44ad0" translate="yes" xml:space="preserve">
          <source>View::$Text</source>
          <target state="translated">View::$Text</target>
        </trans-unit>
        <trans-unit id="07129fa95b9922dcc68f2502e3489e33e2d32d72" translate="yes" xml:space="preserve">
          <source>View::$Time</source>
          <target state="translated">View::$Time</target>
        </trans-unit>
        <trans-unit id="179bd8c805d65521a15db591ac24e7f055691870" translate="yes" xml:space="preserve">
          <source>View::$Url</source>
          <target state="translated">View::$Url</target>
        </trans-unit>
        <trans-unit id="d497fdd1f7d108b3acd8c592ca0e5ddb7b5c5180" translate="yes" xml:space="preserve">
          <source>View::$_ext</source>
          <target state="translated">View::$_ext</target>
        </trans-unit>
        <trans-unit id="924007673765c0cdaa28d869c4f2182ede5c83cf" translate="yes" xml:space="preserve">
          <source>View::$name</source>
          <target state="translated">View::$name</target>
        </trans-unit>
        <trans-unit id="f529b5c692d8b004ef9d2b20f6486ac82137ddd0" translate="yes" xml:space="preserve">
          <source>View::$view</source>
          <target state="translated">View::$view</target>
        </trans-unit>
        <trans-unit id="d3e56b6525fe324c76eed59114eb8b4775882d64" translate="yes" xml:space="preserve">
          <source>View::end()</source>
          <target state="translated">View::end()</target>
        </trans-unit>
        <trans-unit id="1f5f09f4f8256e7e390fab3ba3fecd49203aca6d" translate="yes" xml:space="preserve">
          <source>View::get()</source>
          <target state="translated">View::get()</target>
        </trans-unit>
        <trans-unit id="572eb1816d68fa672c7aa226195c58712595168e" translate="yes" xml:space="preserve">
          <source>ViewBlock</source>
          <target state="translated">ViewBlock</target>
        </trans-unit>
        <trans-unit id="33974e94b7dc8bbfa98e0ad7ae7cda94c9a34200" translate="yes" xml:space="preserve">
          <source>ViewBlock class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005e166cd7e609a4ada0e89cdfeca4f7164bced7" translate="yes" xml:space="preserve">
          <source>ViewBlock implements the concept of Blocks or Slots in the View layer. Slots or blocks are combined with extending views and layouts to afford slots of content that are present in a layout or parent view, but are defined by the child view or elements used in the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20018045ed00b66d2d5969ec8263434ce121e95e" translate="yes" xml:space="preserve">
          <source>ViewBlock instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35780d6b782aea804290ffe17fd7b00c06e97e27" translate="yes" xml:space="preserve">
          <source>ViewBuilder</source>
          <target state="translated">ViewBuilder</target>
        </trans-unit>
        <trans-unit id="2c2a46ecfc5af450f449e29e0fa33a73168d511e" translate="yes" xml:space="preserve">
          <source>ViewVarsTrait</source>
          <target state="translated">ViewVarsTrait</target>
        </trans-unit>
        <trans-unit id="46282c704cacb22db9be84a19e09e60cd714dbff" translate="yes" xml:space="preserve">
          <source>View\Form</source>
          <target state="translated">View\Form</target>
        </trans-unit>
        <trans-unit id="d5701dc4d27e7c10b2a446166e4d47ca23a2259b" translate="yes" xml:space="preserve">
          <source>View\Helper</source>
          <target state="translated">View\Helper</target>
        </trans-unit>
        <trans-unit id="10fda21c219a72fbbd3362d93b27698274b16ae2" translate="yes" xml:space="preserve">
          <source>View\Widget</source>
          <target state="translated">View\Widget</target>
        </trans-unit>
        <trans-unit id="c07ec44ed7c7c12105929adc7842d7938752526a" translate="yes" xml:space="preserve">
          <source>WARNINGS:</source>
          <target state="translated">WARNINGS:</target>
        </trans-unit>
        <trans-unit id="fc18baafcb0d6c30fa8d2d08bd893ef03a942d9a" translate="yes" xml:space="preserve">
          <source>Warn if CsrfComponent is used together with CsrfProtectionMiddleware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8797727633d411feee01e05aca4c1266fc2e9b9" translate="yes" xml:space="preserve">
          <source>Warning: This method should not be used as a random seed for any cryptographic operations. Instead you should use the openssl or mcrypt extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2abba8dfb43643860fbb46648d267647e834811" translate="yes" xml:space="preserve">
          <source>Was this instance already initialized?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c156ed3ffca13d7c55caa2dd6030117763f5a02d" translate="yes" xml:space="preserve">
          <source>We are intentionally not supporting deletes with joins as they have even poorer support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cfeaa0f971152874be8935a6cc23f27a73504f8" translate="yes" xml:space="preserve">
          <source>We are not endorsed by or affiliated with CakePHP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7153edbdf4eef9b92abb199f2368ef9c4cb3ec4" translate="yes" xml:space="preserve">
          <source>We don't accept ['class', 'method'] style callbacks, as they often contain user input and arrays of strings are easy to sneak in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48978873d3eb49a4f54a2420d109d9128710670f" translate="yes" xml:space="preserve">
          <source>We perform here some strictness analysis so that the iterator logic is bypassed entirely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe7704650c3b8021df903c66f6cae19b8a7c90b" translate="yes" xml:space="preserve">
          <source>WeakPasswordHasher</source>
          <target state="translated">WeakPasswordHasher</target>
        </trans-unit>
        <trans-unit id="dec2d790035450b91f5022c278d0cacd17d24cea" translate="yes" xml:space="preserve">
          <source>WeakPasswordHasher (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80afbe82c7faa1a2a16d333e540905ba7ebb9d47" translate="yes" xml:space="preserve">
          <source>WeakPasswordHasher::$_defaultConfig</source>
          <target state="translated">WeakPasswordHasher::$_defaultConfig</target>
        </trans-unit>
        <trans-unit id="800d5bfdf86f18a28eee0f27f4425dcc52c6820d" translate="yes" xml:space="preserve">
          <source>WeakPasswordHasher::__construct()</source>
          <target state="translated">WeakPasswordHasher::__construct()</target>
        </trans-unit>
        <trans-unit id="096c9fa465d135ffe8312e42cd761e8be1d3b21d" translate="yes" xml:space="preserve">
          <source>WeakPasswordHasher::check()</source>
          <target state="translated">WeakPasswordHasher::check()</target>
        </trans-unit>
        <trans-unit id="9df5a97bca949973864158c50dfdd4defa4d0b59" translate="yes" xml:space="preserve">
          <source>WeakPasswordHasher::hash()</source>
          <target state="translated">WeakPasswordHasher::hash()</target>
        </trans-unit>
        <trans-unit id="c7744af21a100579e584fab7f50ab6fed7de3545" translate="yes" xml:space="preserve">
          <source>Web accessible path to file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51323129173392ba0b6e7049f94724aba35b092e" translate="yes" xml:space="preserve">
          <source>What format should the email be sent in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb9aab851d0e77596c5f964d1b13dd01ad79283" translate="yes" xml:space="preserve">
          <source>Whatever is returned by called method, or false on failure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a3c03687936d5bcccbbcca1eceb7b00a3f9119" translate="yes" xml:space="preserve">
          <source>When $callback is a string it should be a property name to extract or a dot separated path of properties that should be followed to get the last one in the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc67affce7618ba95dc9c77bccd42ca3087c329" translate="yes" xml:space="preserve">
          <source>When $name is neither a string nor an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b84c490eb14ffc7ec1e889d0c1eaa13b7c46a19" translate="yes" xml:space="preserve">
          <source>When $options is lacking a 'key' option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ea713732bea834c61631b2c960cfd6ee774c9a" translate="yes" xml:space="preserve">
          <source>When $primaryKey has an incorrect number of elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405326c05a2c88eaf1df0a2229c6929c764854d7" translate="yes" xml:space="preserve">
          <source>When 'when' conditions are not callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8496d7d04af1103fa7631e1662f51d655c556905" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;q&lt;/code&gt; is given as an answer to whether or not a file should be overwritten.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f68186915714f50b10bd5e332db113fef9a738" translate="yes" xml:space="preserve">
          <source>When ErrorHandler is used for handling errors, you can enable error logging by setting the &lt;code&gt;log&lt;/code&gt; option to true. This will log all errors to the configured log handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd5c01e24efeca059767f44d9c42853eeab3b6c" translate="yes" xml:space="preserve">
          <source>When a MissingTemplateException is raised during rendering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ef131424e34f678ab636387fb503483aed4eb1" translate="yes" xml:space="preserve">
          <source>When a block is left open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79ee3b3586eb2dd8ab2c791a69bb3ffc2e630cc" translate="yes" xml:space="preserve">
          <source>When a cache engine cannot be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ad673cb9b2edca00d528a18f78d60447182d53" translate="yes" xml:space="preserve">
          <source>When a driver class is missing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29908bad220348e25ba3bc36836eb0d1b30e49b" translate="yes" xml:space="preserve">
          <source>When a driver's PHP extension is missing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526df44e449273cdbd73f8e18db024735ae70d44" translate="yes" xml:space="preserve">
          <source>When a duplicate is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61698675633e98f882fec94661f679770688db0" translate="yes" xml:space="preserve">
          <source>When a helper could not be found. App helpers are searched, and then plugin helpers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748a03f05c4bd8e3a748bd908759fc2ac8ea1e3b" translate="yes" xml:space="preserve">
          <source>When a route cannot be handled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210e410885d8022847762ce44815ed4359436558" translate="yes" xml:space="preserve">
          <source>When a table object cannot be located/inferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a2becd6d0b94d3c60a8d2669a76a6307924545" translate="yes" xml:space="preserve">
          <source>When a the blackholeCallback is not callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78263285befe9ed6725fcac1cc7b972e75c48ab3" translate="yes" xml:space="preserve">
          <source>When a tranport cannot be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="135fc2a5004a61c265d54725a9c9452acde934f3" translate="yes" xml:space="preserve">
          <source>When a view var object can not be properly serialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab77c1f2be66fe7e18bbd1f7b9ae5c82836e2e37" translate="yes" xml:space="preserve">
          <source>When alias is not a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3722ee8bb6e4725713f6350929201d71e0c9faa1" translate="yes" xml:space="preserve">
          <source>When aliasing a connection that does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb0e4e7d13cb3bc137e6e233e1c737d603e1d24" translate="yes" xml:space="preserve">
          <source>When an element is missing and &lt;code&gt;ignoreMissing&lt;/code&gt; is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca9cc290444e9c19ac3177c77adafc837eb6645" translate="yes" xml:space="preserve">
          <source>When an entity is missing some of the primary keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42db4242986c7a1d561c1d76ff224d4f84364c9b" translate="yes" xml:space="preserve">
          <source>When an invalid callable is provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de459991ee9474c4710ef1b1f641f741163f57bc" translate="yes" xml:space="preserve">
          <source>When an invalid cipher is provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07177f14d8d7cf2320d7db132c061816f18b455b" translate="yes" xml:space="preserve">
          <source>When an invalid content-type or alias is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a6abb0679e7653788c49a8afa413f5a95a06ff" translate="yes" xml:space="preserve">
          <source>When an invalid encryption scheme is chosen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc272d364cb9148b77834f5dc971d954cd485ff5" translate="yes" xml:space="preserve">
          <source>When an invalid parameter is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ec50e30d5a72f0d422046c0ba90dbd4b9883d9" translate="yes" xml:space="preserve">
          <source>When an invalid strategy is provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b05ef34debc30aab2de05edd6fc33ed7c4b502" translate="yes" xml:space="preserve">
          <source>When an unknown alias is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2fb9edfcf9c5a19e519d7bae30b4e69c6f9de04" translate="yes" xml:space="preserve">
          <source>When an unknown status code is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ed31cfb86a6981a7577181b16661b5b70a5223" translate="yes" xml:space="preserve">
          <source>When an unknown type alias is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa18720a6ff81446c05d6218755115002fa44f2b" translate="yes" xml:space="preserve">
          <source>When asset not found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50448dc861d0cd34d885a1e8a6ef0a9631ff4c5d" translate="yes" xml:space="preserve">
          <source>When associations do not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ffffd775d819bcf6d766e831fbfb982cce35ae" translate="yes" xml:space="preserve">
          <source>When attempting to decode gzip content without gzinflate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de276f8e317bd64acb8edceaad26859ca663923" translate="yes" xml:space="preserve">
          <source>When attempting to enable SSL/TLS fails</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d75bb254811a68c2a59a118149b86d76be0f3399" translate="yes" xml:space="preserve">
          <source>When building XML from an array ensure that there is only one top level element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eddc86626e9089fa6950df0cda7ac99083231ca9" translate="yes" xml:space="preserve">
          <source>When caching is disabled a null engine will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fd386cd9e5a419db28680781acf6bed710ec7f" translate="yes" xml:space="preserve">
          <source>When called if the $key is not set in $config, the $callable function will be invoked. The results will then be stored into the cache config at key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db9984e97fe1b0f5b34bc7e33a6f9814b5d01a4" translate="yes" xml:space="preserve">
          <source>When called with a Table argument, the default table object will be set and this query object will be returned for chaining.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4dfdfd73506ee92ec68de93ff11573cccb5f108" translate="yes" xml:space="preserve">
          <source>When called with no arguments it will return the currently configure locale as stored in the &lt;code&gt;intl.default_locale&lt;/code&gt; PHP setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a9db4f2ceb3ba53dddbd5b1e1f482c1614941d" translate="yes" xml:space="preserve">
          <source>When called with no arguments it will return whether or not there are any dirty property in the entity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53945babc8209ca258683acd8cb4cfab46a9abfa" translate="yes" xml:space="preserve">
          <source>When called with no arguments, the current TypeMap object is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09376eab6fa83c51860024527ae13575ad86e7f9" translate="yes" xml:space="preserve">
          <source>When called without the second param it will return whether or not the property can be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9382ecf9ad8f52a66d6b38a277334d33839966eb" translate="yes" xml:space="preserve">
          <source>When calling &lt;code&gt;paginate()&lt;/code&gt; you can use the $settings parameter to pass in pagination settings. These settings are used to build the queries made and control other pagination settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0bc8e03c40cf64d97462a34f18f848f44bbd93d" translate="yes" xml:space="preserve">
          <source>When calling paginate() these settings will be merged with the configuration you provide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665cb005bd899b1909516864d3f58ca898ec77bf" translate="yes" xml:space="preserve">
          <source>When calling this finder, the fields passed are used to determine what should be used as the array key, value and optionally what to group the results by. By default the primary key for the model is used for the key, and the display field as value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79c419d881ccaeef4086e69384ed44378f18eed" translate="yes" xml:space="preserve">
          <source>When checking multiple properties. All properties must not be null in order for true to be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d576b2b09b6f874bbef06e8d4f871f2ec371f574" translate="yes" xml:space="preserve">
          <source>When choosing a format that doesn't exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8584c8a5cf6761a5bb225b47098eb9270207d530" translate="yes" xml:space="preserve">
          <source>When class does not implement WidgetInterface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e72e57b87bd730a4be5d9d7231bbb8913b3c91" translate="yes" xml:space="preserve">
          <source>When column type cannot be parsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa50b53094358e8732ed48729ba496348fb4c594" translate="yes" xml:space="preserve">
          <source>When config data is missing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35bf623929ed91f8abc6594c3ed7e7ac08f5bebc" translate="yes" xml:space="preserve">
          <source>When configuring FormAuthenticate you can pass in config to which fields, model and finder are used. See &lt;code&gt;BaseAuthenticate::$_defaultConfig&lt;/code&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67054d7be9b44a586a23c2a8614b75846304d74b" translate="yes" xml:space="preserve">
          <source>When configuring loggers you can configure the scopes a particular logger will handle. When using scopes, you must ensure that the level of the message, and the scope of the message intersect with the defined levels &amp;amp; scopes for a logger.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c35f9fe2f7e3d20c4a0b4ce882998cde87327853" translate="yes" xml:space="preserve">
          <source>When configuring loggers you can define the active scopes the logger is for. If defined, only the listed scopes will be handled by the logger. If you don't define any scopes an adapter will catch all scopes that match the handled levels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2647aac54812ffbc8731de1422b984dfe7df0778" translate="yes" xml:space="preserve">
          <source>When configuring loggers, you can set which levels a logger will handle. This allows you to disable debug messages in production for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412131ff0607f30c435abef7915cdac3e7c398f6" translate="yes" xml:space="preserve">
          <source>When containing associations, it is important to include foreign key columns. Failing to do so will trigger exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6596516ea747a10e7c8e1cc5273fb23c3d9ea2f" translate="yes" xml:space="preserve">
          <source>When containments refer to associations that do not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1997fc862ff86e167b874de7bf6d84785d704b5" translate="yes" xml:space="preserve">
          <source>When creating aliased joins using the array notation, you can override previous join definitions by using the same alias in consequent calls to this function or you can replace all previously defined joins with another list if the third parameter for this function is set to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1f37bb5e12d029828f30669086c5b7bc1188b2" translate="yes" xml:space="preserve">
          <source>When debug &amp;lt; 1 a CakeException will render 404 or 500 errors. If an uncaught exception is thrown and it is a type that ErrorHandler does not know about it will be treated as a 500 error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae388148f043143d326a2dd75df30fda8b54d788" translate="yes" xml:space="preserve">
          <source>When disabled all cache operations will return null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba49f7de4723de9a83dd7da051ded3d0b32785f" translate="yes" xml:space="preserve">
          <source>When disabled it will consume less memory as fetched results are not remembered for future iterations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f2fbce487be3e55755498f480503bcfd8581cd" translate="yes" xml:space="preserve">
          <source>When enabled the results returned by this Query will be buffered. This enables you to iterate a result set multiple times, or both cache and iterate it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f7dfc99fea1cca7d59addc21e9fcf06ec2b0f3" translate="yes" xml:space="preserve">
          <source>When event key is missing or callable is not an instance of Cake\Event\EventListenerInterface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14715b8c211073d71eb228eba6818ec9313e8d7f" translate="yes" xml:space="preserve">
          <source>When fetching records, the behavior will include the content for the locale set via this method, and likewise when saving data, it will save the data in that locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7568d31c547035965470a1d800d14a053f349513" translate="yes" xml:space="preserve">
          <source>When files don't exist or when files contain '..' (as this could lead to abusive reads) or when there is an error parsing the JSON string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bdf401603fca4757b3bff371956ca7ffbaf431e" translate="yes" xml:space="preserve">
          <source>When files don't exist or when files contain '..' as this could lead to abusive reads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3a24e0feb0e8b37fa9aec853322b64279f403d" translate="yes" xml:space="preserve">
          <source>When filters cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ffaedabcfeaed1cf5dd82e5852da7d213e11d48" translate="yes" xml:space="preserve">
          <source>When fixture records cannot be inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531762cff03215a83eb8b0e05ac4767efba9c37e" translate="yes" xml:space="preserve">
          <source>When foreign key definition is not valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a52a987bc22b26bec5e84d2f3fa5c8d4a16e76a" translate="yes" xml:space="preserve">
          <source>When importing from a table that does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e3555ad41204799cb3f4a4c6ca04a0d69a82c3" translate="yes" xml:space="preserve">
          <source>When key length is not 256 bit/32 bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ab3f3a0ee5fbd0e40f734e63621e4f6ba8f150" translate="yes" xml:space="preserve">
          <source>When keys and values count is unequal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="178ef07e469ee77278985a6d388531a61e22033d" translate="yes" xml:space="preserve">
          <source>When logging messages and configuring log adapters, you can specify 'scopes' that the logger will handle. You can think of scopes as subsystems in your application that may require different logging setups. For example in an e-commerce application you may want to handle logged errors in the cart and ordering subsystems differently than the rest of the application. By using scopes you can control logging for each part of your application and also use standard log levels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4081c03ee0b424269a24bb7a51ca48f1e6cab05" translate="yes" xml:space="preserve">
          <source>When merging HasMany or BelongsToMany associations, all the entities in the &lt;code&gt;$data&lt;/code&gt; array will appear, those that can be matched by primary key will get the data merged, but those that cannot, will be discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c50760a86347e1e5bb0daf098131c0ed7abaf02" translate="yes" xml:space="preserve">
          <source>When merging HasMany or BelongsToMany associations, all the entities in the &lt;code&gt;$data&lt;/code&gt; array will appear, those that can be matched by primary key will get the data merged, but those that cannot, will be discarded. &lt;code&gt;ids&lt;/code&gt; option can be used to determine whether the association must use the &lt;code&gt;_ids&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9fa81a1dfd764a05d8cba2bfeece472b3a83f71" translate="yes" xml:space="preserve">
          <source>When mixing array + Query data types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96a9446289fd81ad48836b28583b6bcf43ff040c" translate="yes" xml:space="preserve">
          <source>When modifying an existing configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b205b48b8b96ad2e8509fadd52b641695513407" translate="yes" xml:space="preserve">
          <source>When no $format is provided, the &lt;code&gt;toString&lt;/code&gt; format will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f176faebb4b0b87a377da84eff16c8f574879707" translate="yes" xml:space="preserve">
          <source>When no $format is provided, the &lt;code&gt;wordFormat&lt;/code&gt; format will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48150300a817e30bbd98ebb49d491a31d2320700" translate="yes" xml:space="preserve">
          <source>When no $format is provided, the IntlDateFormatter::SHORT format will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757934beef1d3d175fb16d09e1a32a278bfc7999" translate="yes" xml:space="preserve">
          <source>When no compatible crypto extension is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3180eaefd97a6987b5897806fa3ff20d2a567b4c" translate="yes" xml:space="preserve">
          <source>When no compatible table object can be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399989eb6e2fc7815bbea42bd9e149b4682d8795" translate="yes" xml:space="preserve">
          <source>When no join type is specified an &lt;code&gt;INNER JOIN&lt;/code&gt; is used by default: &lt;code&gt;$query-&amp;gt;join(['authors'])&lt;/code&gt; will produce &lt;code&gt;INNER JOIN authors ON 1 = 1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e282a5162df00a6a83517b26c2767f81ab8214" translate="yes" xml:space="preserve">
          <source>When node was not found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a955d38358e84d9a191af9c37046639c942df1" translate="yes" xml:space="preserve">
          <source>When option data is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82bbd6846910322c3d5c17c8654fbab9b9999b3" translate="yes" xml:space="preserve">
          <source>When parameter is an incorrect type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d825d05418747b1b1e415527ed220b134d99abd" translate="yes" xml:space="preserve">
          <source>When patching scalar values (null/booleans/string/integer/float), if the property presently has an identical value, the setter will not be called, and the property will not be marked as dirty. This is an optimization to prevent unnecessary field updates when persisting entities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afb4a398cd828846d156ed04a24301c2abbbca9" translate="yes" xml:space="preserve">
          <source>When primary key data is missing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08692d41a1c5c8cf851470feb02e941dfba1094e" translate="yes" xml:space="preserve">
          <source>When properties cannot be read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1bccb2887532103e005f55ab49dd7b63d4367e" translate="yes" xml:space="preserve">
          <source>When providing invalid data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da4af000919ba2a0c339528119b7e12fa0b118c" translate="yes" xml:space="preserve">
          <source>When reading values you will get &lt;code&gt;null&lt;/code&gt; for keys/values that do not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a8098714f665dc848456e39870fedbc2e5f5d4" translate="yes" xml:space="preserve">
          <source>When renderer class not found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515830523aea2b08150d81a063b5a714174dba01" translate="yes" xml:space="preserve">
          <source>When saving, this method will trigger four events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5891739f8a6d2c1f98e3901328279d7b82213252" translate="yes" xml:space="preserve">
          <source>When sending request bodies you can use the &lt;code&gt;type&lt;/code&gt; option to set the Content-Type for the request:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a09b95eb1789a497f8a86f3b9a5b36c30a01f9cf" translate="yes" xml:space="preserve">
          <source>When set, count query execution will be bypassed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ca72202e282bbf99d5ba24ae6526de3e69f3c8" translate="yes" xml:space="preserve">
          <source>When set, query execution will be bypassed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f3da426e73a0c9b6480c4c2e41f4ee8eded79c" translate="yes" xml:space="preserve">
          <source>When setting the location null will be returned. When reading the location a string of the current location header value (if any) will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45cbb93bf01a213ab6f36747fa2d48553bb3b2c" translate="yes" xml:space="preserve">
          <source>When setting the transport you can either use the name of a configured transport or supply a constructed transport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96dae28749565b2425d6246413a07372c352300c" translate="yes" xml:space="preserve">
          <source>When specific options are omitted, this class will take its defaults from the configuration values from the &lt;code&gt;session.*&lt;/code&gt; directives in php.ini. This class will also alter such directives when configuration values are provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb597c11e5a37370ee86463ea95c2d721e75e97" translate="yes" xml:space="preserve">
          <source>When starting a block twice</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9623dcdcbdc89018700567a2147415827ae3d68f" translate="yes" xml:space="preserve">
          <source>When the 'for' key is not passed in $options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e586261ce28a40080734633b259abd00c9b0a41b" translate="yes" xml:space="preserve">
          <source>When the CSRF token is invalid or missing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78078b8a97702f2fda5f9ae75017336952d61824" translate="yes" xml:space="preserve">
          <source>When the Memcached extension is not built with the desired serializer engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896fe674a97279db49091a6be156a90fecc3b4a5" translate="yes" xml:space="preserve">
          <source>When the above filter is connected to a dispatcher it will only fire its &lt;code&gt;beforeDispatch&lt;/code&gt; and &lt;code&gt;afterDispatch&lt;/code&gt; methods on requests that start with &lt;code&gt;/blog&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b60475e23063cef782686b61ef56228eda72bc82" translate="yes" xml:space="preserve">
          <source>When the application does not make a response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb56b1dc5d0db75eb54f4a0221711ba0ae0756f" translate="yes" xml:space="preserve">
          <source>When the cached data is stale/missing the result set will be cached as the query is executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd968ef461d6ff160d2af1bbed86b07fe1fd14a" translate="yes" xml:space="preserve">
          <source>When the chosen exception renderer is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d97c6598a1a3c1f5c666cfddc7682dbaa52138e" translate="yes" xml:space="preserve">
          <source>When the chosen transport lacks a send method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1426b19d3d529c391088c489873be443963d67e2" translate="yes" xml:space="preserve">
          <source>When the controller did not get created in the Dispatcher.beforeDispatch event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5c537ef42d866f731878de79fdb79158799fd4" translate="yes" xml:space="preserve">
          <source>When the date cannot be parsed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b82abadfe2672d762e51d7d7ed3425d10b2ab2" translate="yes" xml:space="preserve">
          <source>When the engine class could not be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb79f214e7d5002aeca770e2b0682104ab3612d5" translate="yes" xml:space="preserve">
          <source>When the entity couldn't be saved</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55268454382288db22e91c6bef347f31ee00e7b" translate="yes" xml:space="preserve">
          <source>When the given &lt;code&gt;$path&lt;/code&gt; argument is not an absolute path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd67e0e857a288dcf0c4f08d364185f01410863" translate="yes" xml:space="preserve">
          <source>When the hour picker is in 24hr mode (null or format=24) the meridian picker will be omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20d7404b250f8482bd4de75ea7911fd25128774" translate="yes" xml:space="preserve">
          <source>When the key is not valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="847a1fda4ad6f7606cbfdd79c315f2462ad7c6a5" translate="yes" xml:space="preserve">
          <source>When the keys are not valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4bad4f4122dad8589336d0373a87562db53cd66" translate="yes" xml:space="preserve">
          <source>When the method is unknown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1d96ab40bc4e5cb73c3dd80b9872c793fb0e27" translate="yes" xml:space="preserve">
          <source>When the named clause does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b145b6d0e64ab6b9469f59cd70508eadd9181e" translate="yes" xml:space="preserve">
          <source>When the parser is invalid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d3ac69765527336adf11afb1ee77b75ff9c176" translate="yes" xml:space="preserve">
          <source>When the plugin does not have a routes file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d69824cd5b977add4281defce9afc8c142479d" translate="yes" xml:space="preserve">
          <source>When the plugin has not been loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e86a37d7c1e0654f7380ef5bc64432f81ad6f33" translate="yes" xml:space="preserve">
          <source>When the renderer class cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94e6cf77d9b090657b78c324ed1a532fa9ff6e1" translate="yes" xml:space="preserve">
          <source>When the route name is not found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c568e12c983581c5a3983155843c24c4b141255" translate="yes" xml:space="preserve">
          <source>When the rule refers to an undefined association.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6e5a821fa65140b8f9580a86269575a2607cf9" translate="yes" xml:space="preserve">
          <source>When the value for an event is not 'always', 'new' or 'existing'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b7d3a485e72d659357e11442a2fc568dbf7a7a" translate="yes" xml:space="preserve">
          <source>When the view is rendered, the &lt;code&gt;$posts&lt;/code&gt; view variable will be serialized into JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44757112aa035fc237e4d5795a3d0ec91a600ce" translate="yes" xml:space="preserve">
          <source>When the view is rendered, the &lt;code&gt;$posts&lt;/code&gt; view variable will be serialized into XML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba99837b5c7e6c0d8ed81308ec50ad15c0f4c04" translate="yes" xml:space="preserve">
          <source>When there are 0 columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a50a86c36c0f5c9e1e384312eabe2c64f2f8e1" translate="yes" xml:space="preserve">
          <source>When there are errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ffed0eb0b97aa5b18a183e072acde0cbe233fe1" translate="yes" xml:space="preserve">
          <source>When there are no params for the method call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88f358f04330dfefb990e14345a9daea094900c8" translate="yes" xml:space="preserve">
          <source>When there is no first record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1f8c23c48cab8df89239e045c086c1f8807051" translate="yes" xml:space="preserve">
          <source>When trying to modify an existing config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5f661eeed01db5252541227b6023343888d855" translate="yes" xml:space="preserve">
          <source>When trying to set a key that is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1156d6da9ee9eabe5433fe3cff52cba887886425" translate="yes" xml:space="preserve">
          <source>When trying to store an invalid structured config array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d961657488c74e99ab7b80f1a091dd85b64ff330" translate="yes" xml:space="preserve">
          <source>When unknown short options are encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7358b75d64a0b575aa722a27fb0e350bbf84f9" translate="yes" xml:space="preserve">
          <source>When used as a setter, this method will return this entity instance for method chaining.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c377546938aaec718514ab0d0c4a25ca013fea13" translate="yes" xml:space="preserve">
          <source>When using $queryBuilder with an array of $associations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="182228c0174d477abf97fb987951b85a9e889bd3" translate="yes" xml:space="preserve">
          <source>When using a &lt;code&gt;groupField&lt;/code&gt; results will be returned in this format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e3f89d3f61fc1eee9df2fbe17f87c20af6dd95" translate="yes" xml:space="preserve">
          <source>When using a configuration that doesn't exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c100774999fb64d2aeaad5f1bca70ae800ff57" translate="yes" xml:space="preserve">
          <source>When using a lambda function you can return &lt;code&gt;false&lt;/code&gt; to disable updating the counter value for the current operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f1df6f24d42e63c681c6522c276e53ccdbcd44" translate="yes" xml:space="preserve">
          <source>When using a type that has not been registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c9d0b0ae1b6112111a696b3254747ff650c7f7" translate="yes" xml:space="preserve">
          <source>When using an array for defining conditions, creating constraints form each array entry will use the same logic as with the &lt;code&gt;where()&lt;/code&gt; function. This means that each array entry will be joined to the other using the AND operator, unless you nest the conditions in the array using other operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff33f015f9b99ade5bd95adf2cd19e39da2fb06c" translate="yes" xml:space="preserve">
          <source>When using an array for defining conditions, creating constraints form each array entry will use the same logic as with the &lt;code&gt;where()&lt;/code&gt; function. This means that each array entry will be joined to the other using the OR operator, unless you nest the conditions in the array using other operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac9135b94b38eeca67cc7513f08c6154f912906" translate="yes" xml:space="preserve">
          <source>When using an array of configuration data a new transport will be constructed for each message sent. When using a Closure, the closure will be evaluated for each message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ad3887225483fc88061451c44cb9bf3e9ed518" translate="yes" xml:space="preserve">
          <source>When using arrays for expressing conditions, it is often desirable to convert the literal values to the correct database representation. This is achieved using the second parameter of this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07fb5956316bf9bb77958613230f10b1580bb1ed" translate="yes" xml:space="preserve">
          <source>When using arrays, each entry will be joined to the rest of the conditions using an &lt;code&gt;AND&lt;/code&gt; operator. Consecutive calls to this function will also join the new conditions specified using the AND operator. Additionally, values can be expressed using expression objects which can include other query objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e076c021a4d32f69dfaba2f95389ab4b152caf" translate="yes" xml:space="preserve">
          <source>When using arrays, each entry will be joined to the rest of the conditions using an AND operator. Consecutive calls to this function will also join the new conditions specified using the AND operator. Additionally, values can be expressed using expression objects which can include other query objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43a18d43a3692bb03aab0599698fa122322c716" translate="yes" xml:space="preserve">
          <source>When using the 'append' strategy, this function will only create new links between each side of this association. It will not destroy existing ones even though they may not be present in the array of entities to be saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5514f9086ce46276e23596a3bcde9dc2a8dc0af" translate="yes" xml:space="preserve">
          <source>When using the 'replace' strategy, existing links will be removed and new links will be created in the joint table. If there exists links in the database to some of the entities intended to be saved by this method, they will be updated, not deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99fc1ccf8eba62e1e34756125afedf605bedaea2" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;for&lt;/code&gt; or &lt;code&gt;when&lt;/code&gt; matchers, conditions will be re-checked on the before and after callback as the conditions could change during the dispatch cycle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9823e597409d9dcee24236c80f43d4c13c680272" translate="yes" xml:space="preserve">
          <source>When using the array form, &lt;code&gt;type&lt;/code&gt; defaults to 'regular'. The &lt;code&gt;ignoreCase&lt;/code&gt; option defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85fe7fff40111fade996b3624de17c5d7b79eaa" translate="yes" xml:space="preserve">
          <source>When using this method, all entities in &lt;code&gt;$targetEntities&lt;/code&gt; will be appended to the source entity's property corresponding to this association object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ab0f9e2490b6444b1b66363a7d2f88d3b2d534" translate="yes" xml:space="preserve">
          <source>When writing a log message you can define one or many scopes for the message. This allows you to handle messages differently based on application section/feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b53bb08300cca0b1f22460a3725b2fe5700aebf" translate="yes" xml:space="preserve">
          <source>When you attempt to cache a non-select query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b8ff5b875be19398e5c0c18737a4c65e50ea74" translate="yes" xml:space="preserve">
          <source>When you attempt to configure an existing table instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00cb6863f15d2f3dc84cdde82630596fdac3822a" translate="yes" xml:space="preserve">
          <source>When you try to configure an alias that already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad0a54a90bfa3e6f9dab66172e0b2861cfa72ae" translate="yes" xml:space="preserve">
          <source>When you try use authentication without Memcached compiled with SASL support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9582a7cf871baaf2e01465263c3dba53999054" translate="yes" xml:space="preserve">
          <source>Where $data is an array of strings that use Text::insert() variable replacement. The template vars should be in a &lt;code&gt;{:id}&lt;/code&gt; style. An error formatter can have the following keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be8821368ef4e7003500e7d059e37296b55207c4" translate="yes" xml:space="preserve">
          <source>Where symbol is located (left/right)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68646aeaf4aebc5d3c0dc32b0877e7abe0765df" translate="yes" xml:space="preserve">
          <source>Where to place the operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d18750d8b5c74333a3bf6f863d81b2c755023d" translate="yes" xml:space="preserve">
          <source>Where to put the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b15945c97f136618dc7313360b4ce503ad5603c" translate="yes" xml:space="preserve">
          <source>Whether a offset exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0bb6d4c8ddda22f14cf6f44fffd27c3ce46c60" translate="yes" xml:space="preserve">
          <source>Whether a transaction is active in this connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="776e754feb96b71c7f437118b2edb68aaea5401a" translate="yes" xml:space="preserve">
          <source>Whether dates should be parsed using a locale aware parser when marshalling string inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486747771db6f583ddfdd953cc4eea4260407540" translate="yes" xml:space="preserve">
          <source>Whether it is a new entity or one to be updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25bf65d9a1c894dfcdeaf8d77ecca1d4bcbc0dc3" translate="yes" xml:space="preserve">
          <source>Whether model has $page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc7f1d8c17c0ff283c9e275edee3a3f14dbbd628" translate="yes" xml:space="preserve">
          <source>Whether numbers should be parsed using a locale aware parser when marshalling string inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba17f053924e082a914ed078a209ef878fb4cdfb" translate="yes" xml:space="preserve">
          <source>Whether or not a JSON value has been expanded into an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3eea67906845ece489de99c7e2b4721f671f578" translate="yes" xml:space="preserve">
          <source>Whether or not autoLayout should be enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c68fcea67c33f27977f6c2d151b37abd9911c8" translate="yes" xml:space="preserve">
          <source>Whether or not cascaded deletes should also fire callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c043e36d622d03826acc5be5211f2741f30218" translate="yes" xml:space="preserve">
          <source>Whether or not files should be overwritten</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f451d735c73751ebe357c21d99149ae6f433319b" translate="yes" xml:space="preserve">
          <source>Whether or not fixture debug mode is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d604c99742500f08e5860dd59b2077ba691f73" translate="yes" xml:space="preserve">
          <source>Whether or not it is OK to retry the action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef92567ee78d4772c07f6523f0997a5aa460fb30" translate="yes" xml:space="preserve">
          <source>Whether or not it is allowed for this method to overwrite the 'type' key in options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0619b28276129f84bd647bd1f9e64ae722d15d" translate="yes" xml:space="preserve">
          <source>Whether or not it is an association loaded through &lt;code&gt;matching()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bed2243291e012c57e2494889a94a214d68f017" translate="yes" xml:space="preserve">
          <source>Whether or not more verbose output should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bcce7db71d0e84136d2e7b3b546f40d90b2c4ae" translate="yes" xml:space="preserve">
          <source>Whether or not save points should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f4efd63073bce512a88a88a7d3e2179b354b5e" translate="yes" xml:space="preserve">
          <source>Whether or not tables should be dropped and re-created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5529ad905859aba93fffe84ac1a527cf5607ad59" translate="yes" xml:space="preserve">
          <source>Whether or not the app is in debug mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115007a9c263dc3951b3cedbfafab836a38508b9" translate="yes" xml:space="preserve">
          <source>Whether or not the association exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a963a5a3362eedf0639bf64a8545ca2b409165" translate="yes" xml:space="preserve">
          <source>Whether or not the behavior exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9c52e44009ff824f611c16388ece80043317c5" translate="yes" xml:space="preserve">
          <source>Whether or not the current platform is Big Endian</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c81d0b1b03f41fa3c223637b8687a6dd661d22" translate="yes" xml:space="preserve">
          <source>Whether or not the data is valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98aff002ec62303517b54b1dbb76d46b4b9f29e" translate="yes" xml:space="preserve">
          <source>Whether or not the enabled/disabled version should be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e12b58d2f95db6e099af7fe6bcbeabf5e606d625" translate="yes" xml:space="preserve">
          <source>Whether or not the entity has been persisted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16bd0879147ded588be8ce6a0c3d5a4ebac5edcd" translate="yes" xml:space="preserve">
          <source>Whether or not the field is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88c99332561a65276417b102f75da7b7e730d7d" translate="yes" xml:space="preserve">
          <source>Whether or not the field is nullable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af451e101dc42763caeba8028b1650737fbdbda" translate="yes" xml:space="preserve">
          <source>Whether or not the field was whitelisted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed40e98d1c645592370bf5541f7d25c4cffa793f" translate="yes" xml:space="preserve">
          <source>Whether or not the file should be overwritten. If true, no question will be asked about whether or not to overwrite existing files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c6d96e1c1195309d62500d6a0951f8741a5ac7e" translate="yes" xml:space="preserve">
          <source>Whether or not the header is defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="933a54b40eaecfb655d8ba67729b48b02afd5694" translate="yes" xml:space="preserve">
          <source>Whether or not the host matches any conditions set in for this route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117695fb9b2fc9d5759b5eba908925074f4c61dc" translate="yes" xml:space="preserve">
          <source>Whether or not the host should be retained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62547924b975e22613a6f159a08a61620a4f95a5" translate="yes" xml:space="preserve">
          <source>Whether or not the internal iterator has reached its end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29a98c00586afef2c5adb03306c7d01c19f9e35" translate="yes" xml:space="preserve">
          <source>Whether or not the internal iterator's rewind method was already called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191f5fad9ec82e04f53c0d520e335ed446526f09" translate="yes" xml:space="preserve">
          <source>Whether or not the merging should be done in associative mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9528ed4acbaff60c8a119d38617d42c3efdcd9a" translate="yes" xml:space="preserve">
          <source>Whether or not the method is accessible from a URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="259b5dedbf4ffa65d46e6a67516bb4d19d147561" translate="yes" xml:space="preserve">
          <source>Whether or not the payload is multipart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e28664d27557d7b7054078ac2e1bf96a1fdaadb" translate="yes" xml:space="preserve">
          <source>Whether or not the request is the type you are checking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de66f17a1708bc4863948e590981ea49589dbd77" translate="yes" xml:space="preserve">
          <source>Whether or not the request was over SSL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9dd9c28c8d9f008f8e90df952dd3248508df345" translate="yes" xml:space="preserve">
          <source>Whether or not the row is a result of a direct join with this association</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c18650426c021b571550ecbd6da6667970f5bfd" translate="yes" xml:space="preserve">
          <source>Whether or not the search should be case-sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0114e5d229e29a07607cde7ea81cd7209c447a8d" translate="yes" xml:space="preserve">
          <source>Whether or not the server supports native JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b853262fb557485aad600427829455b1dffac5dc" translate="yes" xml:space="preserve">
          <source>Whether or not the style block should be displayed on one line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8836e0c2c03d5444fe362ef1490d9041bbc3603c" translate="yes" xml:space="preserve">
          <source>Whether or not the table is temporary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b5df9f770645d6a7828e14a9da1c74cb6aceb5" translate="yes" xml:space="preserve">
          <source>Whether or not the table is to be temporary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1520a5869727ed32611f60507cbe09385359b68c" translate="yes" xml:space="preserve">
          <source>Whether or not the test should be skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af567e0c79e1078d0ebb16700473b23a7fd61d0d" translate="yes" xml:space="preserve">
          <source>Whether or not the transaction should be rolled back to the beginning of it. Defaults to false if using savepoints, or true if not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f0f7d2a6c5005bfc630e6e5208198dc4c503db3" translate="yes" xml:space="preserve">
          <source>Whether or not the user authenticated by this class requires their password to be rehashed with another algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536991047c528b46cdaae020baa1c30b915dc20e" translate="yes" xml:space="preserve">
          <source>Whether or not the value in this expression is a traversable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3876f55f54d491f5bafaee467da51fd6a0f7dac3" translate="yes" xml:space="preserve">
          <source>Whether or not there is a file in this payload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1950b1516eef88e5880b51394cdeb41db74f7827" translate="yes" xml:space="preserve">
          <source>Whether or not this formdata object has a complex part.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c115f0da428aebd8c374c50f01277666c0d13b57" translate="yes" xml:space="preserve">
          <source>Whether or not this formdata object has attached files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeea6495ef950540bd0a4c0f6cc0ce0fef58cee5" translate="yes" xml:space="preserve">
          <source>Whether or not this join results should be treated as a 'matching' association.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4d902fc7d56a2dfbdbf8b283f7fe9e8da5f5af" translate="yes" xml:space="preserve">
          <source>Whether or not this should append or replace all existing decorators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="292b394da73426a15272982f5560bc81fa61fd66" translate="yes" xml:space="preserve">
          <source>Whether or not this statement has already been executed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6f5782b9bfdbaed325a63873d6c9d06953f50b" translate="yes" xml:space="preserve">
          <source>Whether or not to HTML escape the label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3752edbcfc807202aa50cb77b661eb149cb16b2" translate="yes" xml:space="preserve">
          <source>Whether or not to allow multiple nulls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8471706e8d51e35b707d5433a40dd0988fe0c82" translate="yes" xml:space="preserve">
          <source>Whether or not to buffer results fetched from the statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64cf0550a1656438e08db19683ac682bdd11cea4" translate="yes" xml:space="preserve">
          <source>Whether or not to check the MX records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b17e92e00ac841e677af2dcecdb59cb52e1973b" translate="yes" xml:space="preserve">
          <source>Whether or not to eager load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0c94cb659ed18a962a02724c910d4df2a76028" translate="yes" xml:space="preserve">
          <source>Whether or not to enable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959c7a22c6ee064f210d2450ba8dd4413533e89a" translate="yes" xml:space="preserve">
          <source>Whether or not to enable buffering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7095a1ea8fa0ae41b090639a12f1d0b5e1382493" translate="yes" xml:space="preserve">
          <source>Whether or not to enable caching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303701ed4578c3598ae9f6f5ccb2510c8b2ecf55" translate="yes" xml:space="preserve">
          <source>Whether or not to fallback to the last found table when a non-existent field/property is being encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62aa49635a58f3667e17b34b4a763c2524f0995" translate="yes" xml:space="preserve">
          <source>Whether or not to merge existing data with the new data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19016c9a875e5c6bade858e9dee2067cc4cd5a8" translate="yes" xml:space="preserve">
          <source>Whether or not to overwrite pre-existing errors for $field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e72b1737379a09797033b54be81fe58d986f85b" translate="yes" xml:space="preserve">
          <source>Whether or not to overwrite pre-existing errors for $fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f8ee6877986551400efcc054255a1c1489d0eb" translate="yes" xml:space="preserve">
          <source>Whether or not to overwrite pre-existing values for $field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6681bd620980d1cc5347baaa8ca48b915c4ae8fd" translate="yes" xml:space="preserve">
          <source>Whether or not to overwrite, append or prepend the formatter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0f4bd80a891d2227f218a67119c6f7b80ef545" translate="yes" xml:space="preserve">
          <source>Whether or not to reset the order clauses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4339cb889cd7c176cc1af23ea2cf8e5667c3c9c6" translate="yes" xml:space="preserve">
          <source>Whether or not to sort subcommands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="178ebca325122c45adeab6c2a0f07fd85031697a" translate="yes" xml:space="preserve">
          <source>Whether or not to trust HTTP_X headers set by most load balancers. Only set to true if your application runs behind load balancers/proxies that you control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83cbdd22b52d7a2c36f1f107917db69e7e542ab0" translate="yes" xml:space="preserve">
          <source>Whether or not to use I18n functions for translating default error messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65dd56f8a3b1404517f58253c341ddc0929f0155" translate="yes" xml:space="preserve">
          <source>Whether or not to use the CommandRunner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8072e0e2cdf919358cee0dc51e09a8862bd05d" translate="yes" xml:space="preserve">
          <source>Whether or not values have been casted to expressions already.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d707b32b6e0804dd739c001834cda36260500c5" translate="yes" xml:space="preserve">
          <source>Whether or not we want to override the time of the converted Time objects so it points to the start of the day.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0c384c912eb932f3d373858482410c81163a5d" translate="yes" xml:space="preserve">
          <source>Whether results should be sorted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c28dc5812e1751ccec17e9e46f136e7d84c4a68" translate="yes" xml:space="preserve">
          <source>Whether the Map-Reduce routine has been executed already on the data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743ac7ad65a8ba26b37c9dea32ec1ae55710b473" translate="yes" xml:space="preserve">
          <source>Whether the config property has already been configured with defaults</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c5b474779bdf03711ebad258b71e865a2845ee" translate="yes" xml:space="preserve">
          <source>Whether the data to be validated is new or to be updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a4c1cdaeaa8d4dd579c31ddad0661f551603dc" translate="yes" xml:space="preserve">
          <source>Whether the end tag of the element should be printed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c489935c90ca338cdc24e0f2ee2bb3f54705e7c" translate="yes" xml:space="preserve">
          <source>Whether the key should be created if it doesn't exists, or not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706021aa6b3875a2f99752b49523664408fc75e4" translate="yes" xml:space="preserve">
          <source>Whether the logger connection is open or not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40aac39ead8fd6bdff5a1b9cdf99c8cb6646f599" translate="yes" xml:space="preserve">
          <source>Whether the property was changed or not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f410bcb72b346b37e438e67540ad3a51d22fc21" translate="yes" xml:space="preserve">
          <source>Whether the query is standalone or the product of an eager load operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3998daf31f2403374cdd8829e11612204237a579" translate="yes" xml:space="preserve">
          <source>Whether the records on the joint table should be removed when a record on the source table is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4037d06de6dae12ed23fba074f9fd02bc3d347ca" translate="yes" xml:space="preserve">
          <source>Whether the records on the target table are dependent on the source table, often used to indicate that records should be removed if the owning record in the source table is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c256efd9cf07a91e54820a636d68b26b1ed145cb" translate="yes" xml:space="preserve">
          <source>Whether the response is semantically the same as other with the same hash or not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c517af7d9616df1e634f102a51dd25c771935c" translate="yes" xml:space="preserve">
          <source>Whether the response is semantically the same as other with the same hash or not. Defaults to false</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00328a46afa198e0d61ffca6c087b7132e6e6174" translate="yes" xml:space="preserve">
          <source>Whether the response was marked as not modified or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199720c3e9459789d2b75e7b0d19c5b391c777f3" translate="yes" xml:space="preserve">
          <source>Whether the user select any fields before being executed, this is used to determined if any fields should be automatically be selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05743c14c7eaa1b13972f05113081aec0bb5065" translate="yes" xml:space="preserve">
          <source>Whether there are more results to be fetched from the iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b05cdf9d7465b52c64ee7101ba581a635084cf" translate="yes" xml:space="preserve">
          <source>Whether there is any table in this connection to SQLite containing sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923faff6fee4bb1d247167f39e12574180a9ccc3" translate="yes" xml:space="preserve">
          <source>Whether this argument is required. Missing required args will trigger exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457c956e819dbed413492e43ddd85c80efe50d5a" translate="yes" xml:space="preserve">
          <source>Whether this association can be expressed directly in a query join</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a3d25cbe7df6f8dee04f1655f77fbaac180e06" translate="yes" xml:space="preserve">
          <source>Whether this connection can and should use savepoints for nested transactions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f689ae5ee6925bd612af52132f0d811621c5ae69" translate="yes" xml:space="preserve">
          <source>Whether this field should be part of the validation or excluded as part of the unlockedFields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27ba0a08cbe85b6f6122e68df2661a5b359443c" translate="yes" xml:space="preserve">
          <source>Whether this option can accept multiple value definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76b68495cd2bfc41228771ae052104da5914348" translate="yes" xml:space="preserve">
          <source>Whether this option is a boolean option. Boolean options don't consume extra tokens</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c54fc6dc236b0d1f828de94e3795c09d285c50f7" translate="yes" xml:space="preserve">
          <source>Whether this session is running under a CLI environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93283172cba7118705da461e7fef7d593a73ea1f" translate="yes" xml:space="preserve">
          <source>Whether to check if file exists. Defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbbaf73a05c63280da4a70a68475915579ceee0d" translate="yes" xml:space="preserve">
          <source>Whether to enable auto quoting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54cab6c6cc841fb3494b153f95888d5bfabf3df" translate="yes" xml:space="preserve">
          <source>Whether to execute the worker inside a database transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d86922bf2771658aceaf812b32b2bdb58ae82c" translate="yes" xml:space="preserve">
          <source>Whether to generate month keys with leading zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe9b6c04932c6537331fb772df007e6e18fa9e3" translate="yes" xml:space="preserve">
          <source>Whether to hydrate results into entity objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fcdc22fa8fdcb6e0c9dce2f4d3cd4dda9a84b48" translate="yes" xml:space="preserve">
          <source>Whether to hydrate results into objects or not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93615283e56bd521209d5406f871f86ad746f91a" translate="yes" xml:space="preserve">
          <source>Whether to ignore include error for missing files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe9baa47edb9839165f63986654165a266b0dca" translate="yes" xml:space="preserve">
          <source>Whether to log queries generated during this connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba8070d1f8a54db1ad9c8563def745a29e295c4" translate="yes" xml:space="preserve">
          <source>Whether to merge with existing vars, default true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0190cefc0b95aa4e0c114e3738b22731f87c3c8" translate="yes" xml:space="preserve">
          <source>Whether to merge with or override existing extensions. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df456fdeec71f2ba12947ff693abece188bbefd" translate="yes" xml:space="preserve">
          <source>Whether to merge with or override existing valid View options. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f24bea52a22e94bfdaf0af9ec58e83cc70e430" translate="yes" xml:space="preserve">
          <source>Whether to prepend or append to the list of arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c74eb9bee704a8776ebb7f651712e2b5d23ddc6" translate="yes" xml:space="preserve">
          <source>Whether to recursively merge or overwrite existing config, defaults to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7b83d7f70fc73566dd9b9080760bc815458409" translate="yes" xml:space="preserve">
          <source>Whether to refresh timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ece731bd4b877f397d1de40076ca8f7086db11a" translate="yes" xml:space="preserve">
          <source>Whether to reset/remove previous selected fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b2e0ac3e153d7d6d0fe33c653e0c21c74a7cca" translate="yes" xml:space="preserve">
          <source>Whether to return the full path or only the directory name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589cb80a019cf3eac6bc28736330e1a9648f751e" translate="yes" xml:space="preserve">
          <source>Whether you want the results sorted, set this and the sort property to false to get unsorted results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00638612770cdba1013b250fc5e7922e37dcc5c" translate="yes" xml:space="preserve">
          <source>Whether you want the verbose and quiet options set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0332e334b761f4467c9ba14256b51133f94b678f" translate="yes" xml:space="preserve">
          <source>Whether you want the verbose and quiet options set. Setting this to false will prevent the addition of &lt;code&gt;--verbose&lt;/code&gt; &amp;amp; &lt;code&gt;--quiet&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c2bc0859b93906c0ff22035bce6e7c665f7fd9" translate="yes" xml:space="preserve">
          <source>Which model to paginate on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b8c4d3768777a940451147e33f9c226f1dcf99" translate="yes" xml:space="preserve">
          <source>Which property was set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2366cab53ae97782820189545115827a3fc45387" translate="yes" xml:space="preserve">
          <source>While a nested options array will create optgroups with options inside them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40c9a2e888821aef423c2c69d8bb0636c7186d8" translate="yes" xml:space="preserve">
          <source>While header names are not case-sensitive, getHeaders() will normalize the headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f431bc236ab2674dc99b9b08b8d693f68e92c311" translate="yes" xml:space="preserve">
          <source>While its implementation supported nested iteration it does not support using &lt;code&gt;continue&lt;/code&gt; or &lt;code&gt;break&lt;/code&gt; inside loops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88098768aade82c4db42ccdae1437d57f78e5002" translate="yes" xml:space="preserve">
          <source>While the controller is not an explicit argument for the callback methods it is the subject of each event and can be fetched using Event::getSubject().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7f0f16d89194aef307afcdb0dfd2db19200fc3" translate="yes" xml:space="preserve">
          <source>Whitelist headers that can be sent in CORS requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c21afe9d7638e9d9a7e45cfae15b05ed826c72" translate="yes" xml:space="preserve">
          <source>Whitelist of URIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3d5ac039eebb226077267ec01b47e690cbafc9" translate="yes" xml:space="preserve">
          <source>Widget arrays can either be descriptions or instances. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df40e909c10694da9b64401b1e4f1e9c9d54f63" translate="yes" xml:space="preserve">
          <source>Widget files should define a &lt;code&gt;$config&lt;/code&gt; variable containing all the widgets to load. Loaded widgets will be merged with existing widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c425ce9036635179da26dbb76b24da3bf85fc1c1" translate="yes" xml:space="preserve">
          <source>WidgetInterface</source>
          <target state="translated">WidgetInterface</target>
        </trans-unit>
        <trans-unit id="467e95d067262c2f8bec2e789dfd4fab26f10cbe" translate="yes" xml:space="preserve">
          <source>WidgetInterface (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d6faff6cab03fc90e7421cabe37d5aab67c0b4" translate="yes" xml:space="preserve">
          <source>WidgetInterface::render()</source>
          <target state="translated">WidgetInterface::render()</target>
        </trans-unit>
        <trans-unit id="5bfba53ed8824b1369b753ad0db31d756ebfcebb" translate="yes" xml:space="preserve">
          <source>WidgetInterface::secureFields()</source>
          <target state="translated">WidgetInterface::secureFields()</target>
        </trans-unit>
        <trans-unit id="7c937f2cf4a61bcbc77d241bcbb6a3dec00d3e12" translate="yes" xml:space="preserve">
          <source>WidgetLocator</source>
          <target state="translated">WidgetLocator</target>
        </trans-unit>
        <trans-unit id="291158e33ec0fd274e32afbcf6ccc020c4a20820" translate="yes" xml:space="preserve">
          <source>WidgetLocator (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127ff87caf6c1337e8c3b29d6df8ebe48390f276" translate="yes" xml:space="preserve">
          <source>WidgetLocator::$_templates</source>
          <target state="translated">WidgetLocator::$_templates</target>
        </trans-unit>
        <trans-unit id="536f31956ec8ee17e2d402a68df923af7c0227dd" translate="yes" xml:space="preserve">
          <source>WidgetLocator::$_widgets</source>
          <target state="translated">WidgetLocator::$_widgets</target>
        </trans-unit>
        <trans-unit id="7a0ca597dd77bf69e3b4e59d9cc8144fe6eaa821" translate="yes" xml:space="preserve">
          <source>WidgetLocator::__construct()</source>
          <target state="translated">WidgetLocator::__construct()</target>
        </trans-unit>
        <trans-unit id="2ee2f42b040551d4b1a06cb441e5bb838e2e22d7" translate="yes" xml:space="preserve">
          <source>WidgetLocator::_resolveWidget()</source>
          <target state="translated">WidgetLocator::_resolveWidget()</target>
        </trans-unit>
        <trans-unit id="b1eada4c2f02a44f0dec9b35ecd73faba3a5b5c3" translate="yes" xml:space="preserve">
          <source>WidgetLocator::add()</source>
          <target state="translated">WidgetLocator::add()</target>
        </trans-unit>
        <trans-unit id="9d9320c4e95df1ac13e8ba9acc166dcbe9c7dc1a" translate="yes" xml:space="preserve">
          <source>WidgetLocator::clear()</source>
          <target state="translated">WidgetLocator::clear()</target>
        </trans-unit>
        <trans-unit id="eff7ba163ed1665bc900f4483487d0873f3df58b" translate="yes" xml:space="preserve">
          <source>WidgetLocator::get()</source>
          <target state="translated">WidgetLocator::get()</target>
        </trans-unit>
        <trans-unit id="9dd495accdfb864ad717081ed8788d6a2369d1fa" translate="yes" xml:space="preserve">
          <source>WidgetLocator::load()</source>
          <target state="translated">WidgetLocator::load()</target>
        </trans-unit>
        <trans-unit id="a4059193c789ab7b4f650ac0d22ff85fc105609a" translate="yes" xml:space="preserve">
          <source>Widgets can ask for the current view by using the &lt;code&gt;_view&lt;/code&gt; widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a39bdbc476c736eb62e6007b18029e72b04b9bb" translate="yes" xml:space="preserve">
          <source>Width of the line, defaults to 63</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a3bdf3e7af8ceaa7a3d91a9abebf03b9d8d4c3" translate="yes" xml:space="preserve">
          <source>Width of the line, defaults to 79</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1dfdd9bb61c6d1765dcc172280e40485f3d959b" translate="yes" xml:space="preserve">
          <source>Will accept either a Cake\Http\ServerRequest object or an array of arrays. Support for accepting arrays may be removed in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4486a0a82044bd646234f9a1ac2017c881206ee9" translate="yes" xml:space="preserve">
          <source>Will append the output of the meta function to the named block - if true is passed the &quot;meta&quot; block is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d053be71fc01e76567e22957c658049680b78136" translate="yes" xml:space="preserve">
          <source>Will automatically generate a &lt;code&gt;for&lt;/code&gt; attribute if one is not provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac6d9646522fe48ad32b3fffb2a4692cff0ee0f" translate="yes" xml:space="preserve">
          <source>Will become:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ff09aac112449717c4222627e5480d11ec0c04" translate="yes" xml:space="preserve">
          <source>Will both become:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f97ae378bd04a96b7af7198e4727f989fe2a73" translate="yes" xml:space="preserve">
          <source>Will change the current position of the iterator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b859ac4a7f231a48dd2b28baa63523c3fd8ed4cc" translate="yes" xml:space="preserve">
          <source>Will check the filesize of files/UploadedFileInterface instances by checking the filesize() on disk and not relying on the length reported by the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba914dbc2315ba26c3d28c1fd0a97b48b0b913fc" translate="yes" xml:space="preserve">
          <source>Will check the mimetype of files/UploadedFileInterface instances by checking the using finfo on the file, not relying on the content-type sent by the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84db6b00701049ce147b88c1d70412d6b3d5901" translate="yes" xml:space="preserve">
          <source>Will clone all of the expression objects used in each of the clauses, as well as the valueBinder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7079fd41b33037fa3ccdcd884ffed43381efb3" translate="yes" xml:space="preserve">
          <source>Will convert string true/false into booleans.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8208d41e8e2b74009be423d052c8ddaa693c3c45" translate="yes" xml:space="preserve">
          <source>Will convert values into strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26338c48a82d74ce93e5b336ed969287a6a004c9" translate="yes" xml:space="preserve">
          <source>Will create links for the first 3 pages, once you get to the third or greater page. Prior to that nothing will be output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b319df834f96ac6c165d1d7db4dadd66acf816" translate="yes" xml:space="preserve">
          <source>Will create links for the last 3 pages. Once you enter the page range, no output will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a21b9150c7848e3f4f4e062591bdc228ddad3b" translate="yes" xml:space="preserve">
          <source>Will delete the entity provided. Will remove rows from any dependent associations, and clear out join tables for BelongsToMany associations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f6f8943686ad841148782c52b239bd62e37720c" translate="yes" xml:space="preserve">
          <source>Will either fetch an already created widget, or create a new instance if the widget has been defined. If the widget is undefined an instance of the &lt;code&gt;_default&lt;/code&gt; widget will be returned. An exception will be thrown if the &lt;code&gt;_default&lt;/code&gt; widget is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a71a015f20d8c0ae6d6453dafbe31157bce9ce" translate="yes" xml:space="preserve">
          <source>Will generate routes like &lt;code&gt;/payment-types&lt;/code&gt; instead of &lt;code&gt;/payment_types&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49659e5a07d9ec9ddbc5ea2cded9dfed86235252" translate="yes" xml:space="preserve">
          <source>Will generate:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534210d1a57945f56b8c6444ec326a71b5ade290" translate="yes" xml:space="preserve">
          <source>Will get the realm and other tokens by performing another request without authentication to get authentication challenge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20efab98efac6533815835c73ef0790f8f2038d1" translate="yes" xml:space="preserve">
          <source>Will iterate over every specified part. Traversing functions can aggregate results using variables in the closure or instance variables. This function is commonly used as a way for traversing all query parts that are going to be used for constructing a query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da523b3fe4d87208223d33090461ad476ffbdd35" translate="yes" xml:space="preserve">
          <source>Will load all the plugins located in the default plugin folder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32bbec4e86639555b13bb05e47f2efa10c28930d" translate="yes" xml:space="preserve">
          <source>Will load bootstrap file for both plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1bedc95147a4d10204853641de9470e45af63f8" translate="yes" xml:space="preserve">
          <source>Will load plugin from &lt;code&gt;plugins/FOC/Authenticate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2b72230eb0509e5fe9c50e0d07b5a9d435b2508" translate="yes" xml:space="preserve">
          <source>Will load routes.php file but not bootstrap.php</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afdb141f8818d14cc563d5de2b16c09f1cd362e" translate="yes" xml:space="preserve">
          <source>Will load the DebugKit and ApiGenerator plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493a52cabfa04fb31a440268118f264037ff1cb1" translate="yes" xml:space="preserve">
          <source>Will load the DebugKit plugin and will not load any bootstrap nor route files. However, the plugin will be part of the framework default routes, and have its CLI tools (if any) available for use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a545562d41b92a4e3d44ca5ed199d615e52915" translate="yes" xml:space="preserve">
          <source>Will load the bootstrap.php and routes.php files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92fa765bc3168ac25e24dd0f70acb212c67c93db" translate="yes" xml:space="preserve">
          <source>Will load the referenced Table object, and have the PaginatorComponent paginate the query using the request date and settings defined in &lt;code&gt;$this-&amp;gt;paginate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c6ef347057f302b98c1d04a628e2eb29ed8f2e0" translate="yes" xml:space="preserve">
          <source>Will make an input like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ede2775bd41fc7de2e0fbe04ab21535fd1d4258" translate="yes" xml:space="preserve">
          <source>Will modify the request adding a parsed body if the content-type is known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250546c5975fd814b3fca5db2b42d52f27dee22e" translate="yes" xml:space="preserve">
          <source>Will not trigger more than once, and only for select queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cda9de4e6e35f09409483a738dc340b208982a8" translate="yes" xml:space="preserve">
          <source>Will only load the bootstrap for ApiGenerator and only the routes for DebugKit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608bd87141c952d97927cc531c6b7c7fb7876d82" translate="yes" xml:space="preserve">
          <source>Will prefer helpers defined in Command\Helper over those defined in Shell\Helper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc1c381b1a7fd531efe33b40066948ac32c9cc9" translate="yes" xml:space="preserve">
          <source>Will produce &lt;code&gt;CONCAT(name, ' rules')&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af1dddd6c2192a020edaa51d45191a8693034d0" translate="yes" xml:space="preserve">
          <source>Will produce:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f31d5cf4f2f4871897b60aec22036bb8bc4d166" translate="yes" xml:space="preserve">
          <source>Will re-throw any exception raised in $callback after rolling back the transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a0b9fa3661c755c49809071d4089f44b53df16" translate="yes" xml:space="preserve">
          <source>Will read the Content-Type header. You can get all set headers using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad58b2230423fc58bd5ec563dd65da4399942bdc" translate="yes" xml:space="preserve">
          <source>Will recursively call itself when option groups are in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea54c93d8575db201deab7a19d8215d049f0a85" translate="yes" xml:space="preserve">
          <source>Will result in a &lt;code&gt;Toolbar&lt;/code&gt; property being set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f8982aaec9adccda00d3029b1ee89a9dc2d681" translate="yes" xml:space="preserve">
          <source>Will return either the results set through setResult(), or execute this query and return the ResultSetDecorator object ready for streaming of results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b01720244e78cf2040d12d7c144bb51f5b7981" translate="yes" xml:space="preserve">
          <source>Will return the configured paths for plugins. This is a simpler way to access the &lt;code&gt;App.paths.plugins&lt;/code&gt; configure variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2a0bfd2842204eb19852ad2733c12d17aa5690" translate="yes" xml:space="preserve">
          <source>Will return the currently configure locale as stored in the &lt;code&gt;intl.default_locale&lt;/code&gt; PHP setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c5b27511b47fb6e8492671c4e8e0cd383784f0f" translate="yes" xml:space="preserve">
          <source>Will return the errors from the last call to &lt;code&gt;validate()&lt;/code&gt; or &lt;code&gt;execute()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe41614be925e5ece21469c97977a476bb8d92f4" translate="yes" xml:space="preserve">
          <source>Will return the full path to the cache engines package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa3ba5f24cae240185d88c23d8f3bce1ba5b310" translate="yes" xml:space="preserve">
          <source>Will return the instance in the registry if it already exists. If a subclass provides event support, you can use &lt;code&gt;$config['enabled'] = false&lt;/code&gt; to exclude constructed objects from being registered for events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7573d1908eb3583164d60141c7c0b87c03df1d2" translate="yes" xml:space="preserve">
          <source>Will return the path for datasources under the 'MyPlugin' plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5020fd06939a12635d763c5c4b2221404043d9" translate="yes" xml:space="preserve">
          <source>Will return true if any behavior provides a public method with the chosen name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08f70a041a501f3269a3b25b1255856f2728916" translate="yes" xml:space="preserve">
          <source>Will return true if any behavior provides a public non-finder method with the chosen name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043e2843f11a50c9edb787b55dfe87322805734d" translate="yes" xml:space="preserve">
          <source>Will strip the base path off and replace any double /'s. It will not unify the casing and underscoring of the input value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da412b4d678b2081670767779885fdafdb00f1fb" translate="yes" xml:space="preserve">
          <source>Will use the provided timezone, or default output timezone if defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8740dc6cb80013cc7cb9f7283cb1a2c6788f22" translate="yes" xml:space="preserve">
          <source>Wincache storage engine for cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c14a847d1efef0ba21251f06101d4508961944" translate="yes" xml:space="preserve">
          <source>WincacheEngine</source>
          <target state="translated">WincacheEngine</target>
        </trans-unit>
        <trans-unit id="920ecfac9264ef4a616de70764ad3f7edbcbdb17" translate="yes" xml:space="preserve">
          <source>WincacheEngine (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5d5c51c5d775bff41151012b20384d3e75d9c1" translate="yes" xml:space="preserve">
          <source>WincacheEngine::$_compiledGroupNames</source>
          <target state="translated">WincacheEngine::$_compiledGroupNames</target>
        </trans-unit>
        <trans-unit id="925e18b50c9e84a5233fe88e5ef59c96bbaa3d2d" translate="yes" xml:space="preserve">
          <source>WincacheEngine::clear()</source>
          <target state="translated">WincacheEngine::clear()</target>
        </trans-unit>
        <trans-unit id="24a81424113a0ba002c97112814ccfc64938a681" translate="yes" xml:space="preserve">
          <source>WincacheEngine::clearGroup()</source>
          <target state="translated">WincacheEngine::clearGroup()</target>
        </trans-unit>
        <trans-unit id="d382aaa19cc4444f6e20d7595ca9caea67fdea72" translate="yes" xml:space="preserve">
          <source>WincacheEngine::decrement()</source>
          <target state="translated">WincacheEngine::decrement()</target>
        </trans-unit>
        <trans-unit id="0591473e3208c8fcdda81d8f888ca55e26db3ac2" translate="yes" xml:space="preserve">
          <source>WincacheEngine::delete()</source>
          <target state="translated">WincacheEngine::delete()</target>
        </trans-unit>
        <trans-unit id="85b9658c54f0deb9931522d9640e70bcc903dce3" translate="yes" xml:space="preserve">
          <source>WincacheEngine::groups()</source>
          <target state="translated">WincacheEngine::groups()</target>
        </trans-unit>
        <trans-unit id="b3e740fd0eea2ea6a5b259e60739169508183172" translate="yes" xml:space="preserve">
          <source>WincacheEngine::increment()</source>
          <target state="translated">WincacheEngine::increment()</target>
        </trans-unit>
        <trans-unit id="c8601386d3628fe0eb4a2af38da1730410a7e359" translate="yes" xml:space="preserve">
          <source>WincacheEngine::init()</source>
          <target state="translated">WincacheEngine::init()</target>
        </trans-unit>
        <trans-unit id="7ac8662298f9bddb1b62a17b8e163074253fdb12" translate="yes" xml:space="preserve">
          <source>WincacheEngine::read()</source>
          <target state="translated">WincacheEngine::read()</target>
        </trans-unit>
        <trans-unit id="cfef876c5737cfcb6d571ec8121eac2fdafb963a" translate="yes" xml:space="preserve">
          <source>WincacheEngine::write()</source>
          <target state="translated">WincacheEngine::write()</target>
        </trans-unit>
        <trans-unit id="bd967f79c79f65acef7b3274b34922e6e86a972c" translate="yes" xml:space="preserve">
          <source>Wipes clean the entire cache's keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d1c18e9dbe49d84d9fc4289caf98edd22f3358" translate="yes" xml:space="preserve">
          <source>With a string command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e8ceafef67043b939f3dcc94dc20c2827dd285" translate="yes" xml:space="preserve">
          <source>With an array command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ded267a097e9ad4c2536883141d9e457bb20532" translate="yes" xml:space="preserve">
          <source>With an array having two key / value pairs: - &lt;code&gt;command&lt;/code&gt; can accept either a string or an array. Represents the command to dispatch - &lt;code&gt;extra&lt;/code&gt; can accept an array of extra parameters to pass on to the dispatcher. This parameters will be available in the &lt;code&gt;param&lt;/code&gt; property of the called &lt;code&gt;Shell&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce4076e3b614c60bb73f0c5232dd4f377307c71" translate="yes" xml:space="preserve">
          <source>With the above example, a call to &lt;code&gt;$Table-&amp;gt;find('this')&lt;/code&gt; will call &lt;code&gt;$Behavior-&amp;gt;findThis()&lt;/code&gt; and a call to &lt;code&gt;$Table-&amp;gt;find('alias')&lt;/code&gt; will call &lt;code&gt;$Behavior-&amp;gt;findMethodName()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5480cd539f580e37c63d5cf7235e58b301e80da" translate="yes" xml:space="preserve">
          <source>With the above example, a call to &lt;code&gt;$Table-&amp;gt;method()&lt;/code&gt; will call &lt;code&gt;$Behavior-&amp;gt;method()&lt;/code&gt; and a call to &lt;code&gt;$Table-&amp;gt;aliasedmethod()&lt;/code&gt; will call &lt;code&gt;$Behavior-&amp;gt;somethingElse()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65c098e940dbc93f0d07574872dc9cf5af625a9" translate="yes" xml:space="preserve">
          <source>Word in plural</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f131ce33eb9870613ba9a03f6de3c81ac86cb5d7" translate="yes" xml:space="preserve">
          <source>Word in singular</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8959a8393caf237a9465aaf56bca716117c60dc" translate="yes" xml:space="preserve">
          <source>Words that should not be inflected</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3add4d3555a6bcb7d834ceb74bb902aa14ca8322" translate="yes" xml:space="preserve">
          <source>Worker for the public is() function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34741f02685b416daf1c4d16cc6148c874d2ef36" translate="yes" xml:space="preserve">
          <source>Works similarly to Router::url(), but since parsed URL's contain additional 'pass' as well as 'url.url' keys. Those keys need to be specially handled in order to reverse a params array into a string URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cda74727744a2a4684cb614da171ee060799b64" translate="yes" xml:space="preserve">
          <source>Would be called like &lt;code&gt;$table-&amp;gt;doSomething($arg1, $arg2);&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ba35e74491d8945f02bc1f8681d56a34e9d701" translate="yes" xml:space="preserve">
          <source>Would enable handling for all non Notice errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d47c1cec3d9ad25243f7cabfa2b7e503b77614ca" translate="yes" xml:space="preserve">
          <source>Would invoke the &lt;code&gt;findPublished&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3375c77554cbae47cca62168c8baa94981d93595" translate="yes" xml:space="preserve">
          <source>Would load the 'user' config file using the default config engine. You can load app config files by giving the name of the resource you want loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee76fd9761676af972b8b166701f686934cfb4f2" translate="yes" xml:space="preserve">
          <source>Would paginate using the &lt;code&gt;find('popular')&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68042e66e97b54268178bcdf8dcc3d429ab7727d" translate="yes" xml:space="preserve">
          <source>Would result in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da94a30c4c28fdc3a40efb1f23e87af05b7f9717" translate="yes" xml:space="preserve">
          <source>Wrap $script in a script tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3d142465577e02f689991b420d3f39eca1c75d" translate="yes" xml:space="preserve">
          <source>Wrap a block of text. Allows you to set the width, and indenting on a block of text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e0c07cd27bba7c110b9374abc6b2d87b5e538d" translate="yes" xml:space="preserve">
          <source>Wrap a set of inputs in a fieldset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9213021158ed3e9603cfa955fb52d18ae87d4a24" translate="yes" xml:space="preserve">
          <source>Wrap the message to follow the RFC 2822 - 2.1.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19460805c9af77a49214d9a206a89d71d8352cf8" translate="yes" xml:space="preserve">
          <source>Wrap the remaining middleware with error handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b517e30964c97f6092a9c72245054ba1876a1c" translate="yes" xml:space="preserve">
          <source>Wrapped / indented text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50d53795cbee5d842ceded38c64ca7460a14138" translate="yes" xml:space="preserve">
          <source>Wrapped message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc2173c12a53da05f2222c79ca36f1e96e764b8" translate="yes" xml:space="preserve">
          <source>Wrapper for Cake engines that allow them to support the PSR16 Simple Cache Interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6347e554ed42e55cb05e61fab40d2bd666cafa26" translate="yes" xml:space="preserve">
          <source>Wrapper for creating and dispatching events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202694d7b4846ba3c60ec88fc149291a5d3c7199" translate="yes" xml:space="preserve">
          <source>Wrapper for creating table instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee13de83fb0cfab8396a09711b9d3855813d8101" translate="yes" xml:space="preserve">
          <source>Wrapper method to create a new request from PHP superglobals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46784d1b9df696012d9be0ed78882b02b10f6aa8" translate="yes" xml:space="preserve">
          <source>Wraps a PHP 7 Error object inside a normal Exception so it can be handled correctly by the rest of the error handling system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f4ea15cca614ba5e71294008421c09f01de270" translate="yes" xml:space="preserve">
          <source>Wraps a complete block of text to a specific width, can optionally wrap at word breaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18a9d9de6c4d48996ea7c301476559a02e904cf" translate="yes" xml:space="preserve">
          <source>Wraps a message with a given message type, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e8477ab3a31a8cdb31960139eec25da3fb994a" translate="yes" xml:space="preserve">
          <source>Wraps a statement in a callback that allows row results to be modified when being fetched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ae262f80ffcc31265f72c9e5f4f4fd545dbf51" translate="yes" xml:space="preserve">
          <source>Wraps internal function mail() and throws exception instead of errors if anything goes wrong</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17389acb9af30f668941906b0ef0818ee5665a41" translate="yes" xml:space="preserve">
          <source>Wraps multiple message loaders calling them one after another until one of them returns a non-empty package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c0c344ce9a7a683a3aced89ddfc15a258ffbb7" translate="yes" xml:space="preserve">
          <source>Wraps text to a specific width, can optionally wrap at word breaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baed3b460b358f1eea7361e01dc5b489e7e10251" translate="yes" xml:space="preserve">
          <source>Wraps the highlight_string function in case the server API does not implement the function as it is the case of the HipHop interpreter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6654e142c47bffa750feb466ada59e19168a84" translate="yes" xml:space="preserve">
          <source>Wraps the passed Error class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b788f4a40f55747e2e7a212ddfc21e6414061762" translate="yes" xml:space="preserve">
          <source>Wraps this iterator around the passed items so when iterated they are returned in order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ed31d01c4781c66358bec56d04e2de470551c1" translate="yes" xml:space="preserve">
          <source>Write a 'warning' message to the logs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148d19d1a3e4dedd795793000091054cfbf5a02f" translate="yes" xml:space="preserve">
          <source>Write a value to the response cookies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1bae403b78db5dfb752ae934aa17611d8e041c" translate="yes" xml:space="preserve">
          <source>Write data and close the session</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ae546119c4dfa7b4dc7a7d327e1a7a168be9f3" translate="yes" xml:space="preserve">
          <source>Write data for key into a cache engine if it doesn't exist already.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1243ba0ef741be4fddb6a7bfecd874e35e322322" translate="yes" xml:space="preserve">
          <source>Write data for key into cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa02e8d7c88fc6a3a14ebd00df45e709d80accc9" translate="yes" xml:space="preserve">
          <source>Write data for key into cache if it doesn't exist already. If it already exists, it fails and returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50575e865b03417176791e505499ed26e5f742e" translate="yes" xml:space="preserve">
          <source>Write data for key into cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfbea06698cf8038401a3625fcd09b39e6251c93" translate="yes" xml:space="preserve">
          <source>Write data for key into cache. When using memcached as your cache engine remember that the Memcached pecl extension does not support cache expiry times greater than 30 days in the future. Any duration greater than 30 days will be treated as never expiring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c0b8ca357174c6791e18ad7a252135cc2c4f3e" translate="yes" xml:space="preserve">
          <source>Write data for many keys into cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd393bd9743a0a8e44cb1e7355b58d5fc1ce8e40" translate="yes" xml:space="preserve">
          <source>Write data for many keys into cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="159fe7416d9a3c7e8da650dda3c114709f2d7264" translate="yes" xml:space="preserve">
          <source>Write data to the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eafe00c01c5a94bff933c499eee16abbc0d3698" translate="yes" xml:space="preserve">
          <source>Write given data to this file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b68a6a50790c4653b56f4e3b4338b799533629b" translate="yes" xml:space="preserve">
          <source>Write many cache entries to the cache at once</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1146d1b14aba2c04a183972588145149bebef51" translate="yes" xml:space="preserve">
          <source>Write output to the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257079ec195442a134e41779ea110b4d49799737" translate="yes" xml:space="preserve">
          <source>Write the files that need to be stored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7748e6b794c1a3bed88c196fc698251e5ef79c3" translate="yes" xml:space="preserve">
          <source>Write user record to session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b2fa10825a603db0088eb660276bcf2df8a028" translate="yes" xml:space="preserve">
          <source>Write user record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f29eaf935c6165fbd97187d296fc5bb25e3dda" translate="yes" xml:space="preserve">
          <source>Write value for a key into cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c194e5f8612a7c7e7dcb1249e62ea794d28115ab" translate="yes" xml:space="preserve">
          <source>Writes a config key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21581b15f186ecdd93081bd40370e9aa7ab9f554" translate="yes" xml:space="preserve">
          <source>Writes a message to syslog</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99454c3c6047a735d5fa95519402382a8c7be427" translate="yes" xml:space="preserve">
          <source>Writes a message to the output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a35c04b6b148422ccf6e1f91f1025181317f685" translate="yes" xml:space="preserve">
          <source>Writes the given message and type to all of the configured log adapters. Configured adapters are passed both the $level and $message variables. $level is one of the following strings/values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3924de0fd7e463fc7870c8e082284ae28f0f9d8" translate="yes" xml:space="preserve">
          <source>Writes value to given session variable name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311d7222d75c2833645d576edee31a1976635d36" translate="yes" xml:space="preserve">
          <source>Writing to a specific cache config:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6feb49167f038a74761c9ad967c3c1d0fa476b5" translate="yes" xml:space="preserve">
          <source>Writing to the active cache config:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c973f134989dd7f2e80748cd9ab2b179810bd19" translate="yes" xml:space="preserve">
          <source>Writing to the log</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c905b3a15537f2e55289384eada2f2d47b2939" translate="yes" xml:space="preserve">
          <source>Writing values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d3f473c48021046e7ba3468f5cf21e1b0e7ddd" translate="yes" xml:space="preserve">
          <source>X-Content-Type-Options</source>
          <target state="translated">X-Content-Type-Options</target>
        </trans-unit>
        <trans-unit id="6f8307aaaaf2848671f8bd74f75b19dc46e2adf1" translate="yes" xml:space="preserve">
          <source>X-Download-Options</source>
          <target state="translated">X-Download-Options</target>
        </trans-unit>
        <trans-unit id="06d18ff7a6daa0422e0cad3f72e863617cee9d06" translate="yes" xml:space="preserve">
          <source>X-Frame-Options</source>
          <target state="translated">X-Frame-Options</target>
        </trans-unit>
        <trans-unit id="ea8e289f1baa7d7114aa250480c146138a6b6346" translate="yes" xml:space="preserve">
          <source>X-Permitted-Cross-Domain-Policies</source>
          <target state="translated">X-Permitted-Cross-Domain-Policies</target>
        </trans-unit>
        <trans-unit id="c7215a317b6dd9b4629392c1b06074727d0d0713" translate="yes" xml:space="preserve">
          <source>X-XSS-Protection</source>
          <target state="translated">X-XSS-Protection</target>
        </trans-unit>
        <trans-unit id="c0aa9ef764d832b80428d756a731a94251b0e3a1" translate="yes" xml:space="preserve">
          <source>XML</source>
          <target state="translated">XML</target>
        </trans-unit>
        <trans-unit id="660ad81fb841c987701b346e2364c634a3aaf3f4" translate="yes" xml:space="preserve">
          <source>XML element content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c3e37e00b87cc54a1e48174dc7f5ec2038fff52" translate="yes" xml:space="preserve">
          <source>XML handling for CakePHP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cfab22e3de401650fe5061f4e4a2aebe60d19ed" translate="yes" xml:space="preserve">
          <source>XML layouts are located in the xml sub directory of &lt;code&gt;Layouts/&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9413a39c8828ea4a2e7b157bddaea02f3b08e9" translate="yes" xml:space="preserve">
          <source>XML string, a path to a file, a URL or an array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c800a306f7e3d546e6d9d98cc20645587dd5d8" translate="yes" xml:space="preserve">
          <source>XML string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2beec180eb1f663c98bd0cb89d36daee59ae575f" translate="yes" xml:space="preserve">
          <source>XML views are located in the 'xml' sub directory for controllers' views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020cc950c31856a465555603a91da884414f6646" translate="yes" xml:space="preserve">
          <source>Xcache storage engine for cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c30b8cf189173b633f16a0d408139cb32d8af9e" translate="yes" xml:space="preserve">
          <source>XcacheEngine</source>
          <target state="translated">XcacheEngine</target>
        </trans-unit>
        <trans-unit id="a6b8581fdef3af7833fe0ba91709c92f16d2802b" translate="yes" xml:space="preserve">
          <source>XcacheEngine (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a42e41ed7a4fb43c81d6b8c923026aa20a7f88" translate="yes" xml:space="preserve">
          <source>XcacheEngine::$_defaultConfig</source>
          <target state="translated">XcacheEngine::$_defaultConfig</target>
        </trans-unit>
        <trans-unit id="5e5e168a4415ed680ec5815c8eacc643158a01c0" translate="yes" xml:space="preserve">
          <source>XcacheEngine::_auth()</source>
          <target state="translated">XcacheEngine::_auth()</target>
        </trans-unit>
        <trans-unit id="5c628aaf0d39bd69fbb5736eed2dc7a359ee91e0" translate="yes" xml:space="preserve">
          <source>XcacheEngine::clear()</source>
          <target state="translated">XcacheEngine::clear()</target>
        </trans-unit>
        <trans-unit id="eda7baf2d0b3be352192c097f65f7b482255a682" translate="yes" xml:space="preserve">
          <source>XcacheEngine::clearGroup()</source>
          <target state="translated">XcacheEngine::clearGroup()</target>
        </trans-unit>
        <trans-unit id="aaa2a4cd40d0945ede8df2b2c1b4e420cfa2df3e" translate="yes" xml:space="preserve">
          <source>XcacheEngine::decrement()</source>
          <target state="translated">XcacheEngine::decrement()</target>
        </trans-unit>
        <trans-unit id="55c2fd38eb602f680ca5ee4891bfb4c31fbdcd13" translate="yes" xml:space="preserve">
          <source>XcacheEngine::delete()</source>
          <target state="translated">XcacheEngine::delete()</target>
        </trans-unit>
        <trans-unit id="1f0c82e4ea545a18162a972b2a53699cb2bd02ff" translate="yes" xml:space="preserve">
          <source>XcacheEngine::groups()</source>
          <target state="translated">XcacheEngine::groups()</target>
        </trans-unit>
        <trans-unit id="ba8ec55c129e9738be6f3188dd24242c68562c80" translate="yes" xml:space="preserve">
          <source>XcacheEngine::increment()</source>
          <target state="translated">XcacheEngine::increment()</target>
        </trans-unit>
        <trans-unit id="297e93839e5656d04c68098713255e2b1001d36b" translate="yes" xml:space="preserve">
          <source>XcacheEngine::init()</source>
          <target state="translated">XcacheEngine::init()</target>
        </trans-unit>
        <trans-unit id="026e2f88ce79adb2505436f1b86e7286df8283f4" translate="yes" xml:space="preserve">
          <source>XcacheEngine::read()</source>
          <target state="translated">XcacheEngine::read()</target>
        </trans-unit>
        <trans-unit id="07535bfd261e49c0728295b58c5012675d0affee" translate="yes" xml:space="preserve">
          <source>XcacheEngine::write()</source>
          <target state="translated">XcacheEngine::write()</target>
        </trans-unit>
        <trans-unit id="3d8a993ceb8c1707c00289c58d54eb50df175cee" translate="yes" xml:space="preserve">
          <source>Xml</source>
          <target state="translated">Xml</target>
        </trans-unit>
        <trans-unit id="96099a8b04685e02dfbf870b3f483fcd926d6a13" translate="yes" xml:space="preserve">
          <source>Xml (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b71a33af5e1316fc376528cafa49f2d46f64531" translate="yes" xml:space="preserve">
          <source>Xml array data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb164ea3f5d68ab6157fa4c77e27af126ed80e10" translate="yes" xml:space="preserve">
          <source>Xml output is useful for integration with other tools like IDE's or other build tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0a2e2e5b6e596a38c0f1ecb5e19713b362b5fa" translate="yes" xml:space="preserve">
          <source>Xml::_createChild()</source>
          <target state="translated">Xml::_createChild()</target>
        </trans-unit>
        <trans-unit id="3ab8c37448168cc0dfa46a4d94aaf89e317be532" translate="yes" xml:space="preserve">
          <source>Xml::_fromArray()</source>
          <target state="translated">Xml::_fromArray()</target>
        </trans-unit>
        <trans-unit id="ed943c4f95915e000b0690261a2d622082a2d8f5" translate="yes" xml:space="preserve">
          <source>Xml::_loadXml()</source>
          <target state="translated">Xml::_loadXml()</target>
        </trans-unit>
        <trans-unit id="d96801dc75706293c14feb94775170c9107ab7b6" translate="yes" xml:space="preserve">
          <source>Xml::_toArray()</source>
          <target state="translated">Xml::_toArray()</target>
        </trans-unit>
        <trans-unit id="2cd893799ab3ad2b229377d7e8570bbb6c2060df" translate="yes" xml:space="preserve">
          <source>Xml::build()</source>
          <target state="translated">Xml::build()</target>
        </trans-unit>
        <trans-unit id="3a47e402122e4479f57a0cc78f4b279b8c9e62b5" translate="yes" xml:space="preserve">
          <source>Xml::fromArray()</source>
          <target state="translated">Xml::fromArray()</target>
        </trans-unit>
        <trans-unit id="1d3e00e311ad6ffa2c2ea486396a0759bf6e9203" translate="yes" xml:space="preserve">
          <source>Xml::loadHtml()</source>
          <target state="translated">Xml::loadHtml()</target>
        </trans-unit>
        <trans-unit id="ac446de5851c587a79e96ff42fc9212b38470c76" translate="yes" xml:space="preserve">
          <source>Xml::toArray()</source>
          <target state="translated">Xml::toArray()</target>
        </trans-unit>
        <trans-unit id="8240601d5f4e9cf1185bc6b61b5b136dc4d194cf" translate="yes" xml:space="preserve">
          <source>XmlException</source>
          <target state="translated">XmlException</target>
        </trans-unit>
        <trans-unit id="37fe13bd56239ba02e7eb9e1cd4962441b816ba8" translate="yes" xml:space="preserve">
          <source>XmlException (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070667333140b9269efc4f8d652a5d90a13a64b8" translate="yes" xml:space="preserve">
          <source>XmlView</source>
          <target state="translated">XmlView</target>
        </trans-unit>
        <trans-unit id="d15a27956a5fe5fbe3a4c9d29aeab8e404522da1" translate="yes" xml:space="preserve">
          <source>XmlView (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1c259ca5f3219ef6444b5e0ff32ca47a35a5af" translate="yes" xml:space="preserve">
          <source>XmlView::$_responseType</source>
          <target state="translated">XmlView::$_responseType</target>
        </trans-unit>
        <trans-unit id="6d29531ead7c384c35399cc33d3db4012567f7a7" translate="yes" xml:space="preserve">
          <source>XmlView::$_specialVars</source>
          <target state="translated">XmlView::$_specialVars</target>
        </trans-unit>
        <trans-unit id="20e7028f98b3d04f489bca66377c1bfce65006a7" translate="yes" xml:space="preserve">
          <source>XmlView::$layoutPath</source>
          <target state="translated">XmlView::$layoutPath</target>
        </trans-unit>
        <trans-unit id="03eb9a42307bdf63e78d9c40a195e95a83a9f8c9" translate="yes" xml:space="preserve">
          <source>XmlView::$subDir</source>
          <target state="translated">XmlView::$subDir</target>
        </trans-unit>
        <trans-unit id="a5d02daec2049653d35bd5c209266deacae890be" translate="yes" xml:space="preserve">
          <source>XmlView::_serialize()</source>
          <target state="translated">XmlView::_serialize()</target>
        </trans-unit>
        <trans-unit id="1d4093103c19d4603cd8925937409fcd976537b7" translate="yes" xml:space="preserve">
          <source>Years are valid from 1800 to 2999.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d54c1d5c459d4455cd7666e2754828d65022e0" translate="yes" xml:space="preserve">
          <source>You are free to mix each of the forms in the same option set, and nest complex types as required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35af29b7a75768462fb7fd424acd5345c2067690" translate="yes" xml:space="preserve">
          <source>You can access request parameters, using &lt;code&gt;$this-&amp;gt;request&lt;/code&gt;. The request object contains all the POST, GET and FILES that were part of the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c001b3bc691a3f6d7f5799e433ba7be86dad756" translate="yes" xml:space="preserve">
          <source>You can access the response body stream using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb9dfcaed24138544fb1ce5c6327553bb7a3923" translate="yes" xml:space="preserve">
          <source>You can access the response status code using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086f9c29f18d289e6b340eed24c5e2768e842019" translate="yes" xml:space="preserve">
          <source>You can also add your own request body parsers using the &lt;code&gt;addParser()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6572a6c06af664478984d7e3de7589d6d637f2b0" translate="yes" xml:space="preserve">
          <source>You can also assemble the package object yourself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7d6dd157bb4bde6246a3686ce75467583e5642" translate="yes" xml:space="preserve">
          <source>You can also call this method with an array of properties, in which case they will each take the accessibility value specified in the second argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa9778d4e1cd981b65721fb0d8111af6c974953" translate="yes" xml:space="preserve">
          <source>You can also chose a custom function to zip the elements together, such as doing a sum by index:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486205c6f926f9dbc5799489b3b37c472a481470" translate="yes" xml:space="preserve">
          <source>You can also combine conditions on multiple fields using either &lt;code&gt;Or&lt;/code&gt; or &lt;code&gt;And&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82614b14ccbf4d99127fc5001f94d4234f7dc29b" translate="yes" xml:space="preserve">
          <source>You can also customize the conditions passed to the LEFT JOIN:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a3f2c9356f1e2aa5d68f3ecf2517858d35b064" translate="yes" xml:space="preserve">
          <source>You can also define &lt;code&gt;'_serialize'&lt;/code&gt; as an array. This will create an additional top level element named &lt;code&gt;&amp;lt;response&amp;gt;&lt;/code&gt; containing all the named view variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f1d2d506072f399d3c441a2d98656f34171491" translate="yes" xml:space="preserve">
          <source>You can also define the validation and schema by chaining method calls off of &lt;code&gt;$form-&amp;gt;schema()&lt;/code&gt; and &lt;code&gt;$form-&amp;gt;validator()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe46bad90b1342db7bfe0dbcdd7081aceb84e8f" translate="yes" xml:space="preserve">
          <source>You can also enable JSONP support by setting parameter &lt;code&gt;_jsonp&lt;/code&gt; to true or a string to specify custom query string parameter name which will contain the callback function name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55281ab9b27e11795a1acd3dcc6c3c1524ae70a" translate="yes" xml:space="preserve">
          <source>You can also load associations for multiple entities at once</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67041e16b8b1607fb794193551853156e287aaa7" translate="yes" xml:space="preserve">
          <source>You can also make compare against multiple values using the &lt;code&gt;options&lt;/code&gt; key. This is useful when you want to check if a request value is in a list of options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb3d6ed7fc2dbc32cf24da5c8cdda2a9793c4bb" translate="yes" xml:space="preserve">
          <source>You can also pass an already created instance of a query to this method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a068061b0d6faceeb259fa0b2b050013abb8c03" translate="yes" xml:space="preserve">
          <source>You can also pass the URL as an array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e446d5ca2110956f14f7f2137052cdcec95284" translate="yes" xml:space="preserve">
          <source>You can also pass the name of the validator to use in the &lt;code&gt;validate&lt;/code&gt; option. If &lt;code&gt;null&lt;/code&gt; is passed to the first param of this function, no validation will be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f18cbc4786e04b91663e8e063ebcc124fbe559" translate="yes" xml:space="preserve">
          <source>You can also set &lt;code&gt;'_serialize'&lt;/code&gt; to a string or array to serialize only the specified view variables.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
