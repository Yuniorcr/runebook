<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="">
    <body>
      <group id="">
        <trans-unit id="a64590d0ca5cd57303474a653ad6423469fa430f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Browsers that support the two value syntax, on finding the inner value only, such as when &lt;code&gt;display: flex&lt;/code&gt; or &lt;code&gt;display: grid&lt;/code&gt; is specified, will set their outer value to &lt;code&gt;block&lt;/code&gt;. This will result in expected behavior; for example if you specify an element to be &lt;code&gt;display: grid&lt;/code&gt;, you would expect that the box created on the grid container would be a block level box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6a4669095b304cdec2c19c1937996120177327" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Browsers that support the two value syntax, on finding the outer value only, such as when &lt;code&gt;display: block&lt;/code&gt; or &lt;code&gt;display: inline&lt;/code&gt; is specified, will set the inner value to &lt;code&gt;flow&lt;/code&gt;. This will result in expected behavior; for example if you specify an element to be block, you would expect that the children of that element would participate in block and inline normal flow layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc030ba0a30f19ac1516ae46a046350a7714b88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: CSS versions 1 and 2 were a single monolithic specification where all of CSS was defined in one large document. As CSS became a more feature rich language, maintaining one huge specification became problematic, with different parts of CSS moving on at different speeds. CSS was therefore modularised, and the various CSS Specifications are different modules that make up CSS today. These modules relate to each other, and are at different stages of development.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4e6172c978316ac4f7cfdf7a826151b06d82c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Developers tend to use &lt;code&gt;:-moz-focusring&lt;/code&gt; to differentiate between the &lt;code&gt;focus&lt;/code&gt; state when the user focuses an element via a &lt;strong&gt;mouse &lt;/strong&gt;&lt;strong&gt;click&lt;/strong&gt; versus &lt;strong&gt;keyboard tabbing&lt;/strong&gt;. It is also potentially useful if you are creating a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements&quot;&gt;custom element&lt;/a&gt; and you want to change its style based on its behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548919bbb879e5773ef20ba7dfb2bfa13d343809" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Early versions of the spec called this property &lt;code&gt;motion-path&lt;/code&gt;. It was changed to &lt;code&gt;offset-path&lt;/code&gt; because the property describe static positions, not motion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d2cc8bfeaa5cb6f5c584f4efae87ea4c45b49e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: For some years Firefox had a bug whereby it would attempt to follow the visual order and not the source order, making it behave differently to other browsers. This has now been fixed. You should always take the source order as the logical order of the document as all up-to-date user agents will be following the specification and doing so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a340576c04e43821af940d2dea69faf8de17a27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: In browsers that support the two-value syntax, if no inner value is specified it will default to &lt;code&gt;flow&lt;/code&gt;. If no outer value is specified, the principal box will have an outer display type of &lt;code&gt;block&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb878bbb15a88cc957e09fbe4e5110f8d8031e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: In the case of this property, markers are only appropriate when drawing SVG shapes involving the use of the &lt;code&gt;marker-*&lt;/code&gt; properties (e.g. &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/marker-start&quot;&gt;marker-start&lt;/a&gt;&lt;/code&gt;) and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/marker&quot;&gt;&amp;lt;marker&amp;gt;&lt;/a&gt;&lt;/code&gt; element. They do not apply to HTML text, so in that case, you can only determine the order of &lt;code&gt;stroke&lt;/code&gt; and &lt;code&gt;fill&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90c70c11daf388aea83b182926900d243fa52e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Multi-column Layout predates the Box Alignment specification. and the properties listed here, while specified for Multicol, may not be supported in browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26982d7759665b81a01ef41b987fe1c2ee80f4fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Not all browsers have implemented the full syntax for font format, so test carefully. All browsers that support variable fonts will still render them if you set the format to just the file format, rather than format-variations (i.e. &lt;code&gt;woff2&lt;/code&gt; instead of &lt;code&gt;woff2-variations&lt;/code&gt;), but it&amp;rsquo;s best to use the proper syntax if possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc63533f56ddc9f7a0cad1982fad454f48836897" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Prior to Firefox 63 this property was implemented as offset-block-end. &lt;a href=&quot;https://www.fxsitecompat.com/en-CA/docs/2018/offset-logical-properties-have-been-renamed-to-inset/&quot;&gt;Firefox 63 updated the name of this property&lt;/a&gt; to match a change to the specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abae723f36242985518469823afc01de6a5fa88a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Prior to Firefox 63 this property was implemented as offset-block-start. &lt;a href=&quot;https://www.fxsitecompat.com/en-CA/docs/2018/offset-logical-properties-have-been-renamed-to-inset/&quot;&gt;Firefox 63 updated the name of this property&lt;/a&gt; to match a change to the specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c069039e60e6a55509a8dc61a8b7beba691548" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Prior to Firefox 63 this property was implemented as offset-inline-end. &lt;a href=&quot;https://www.fxsitecompat.com/en-CA/docs/2018/offset-logical-properties-have-been-renamed-to-inset/&quot;&gt;Firefox 63 updated the name of this property&lt;/a&gt; to match a change to the specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af8be5ecaa556b0286b81db98c2298d825454974" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Prior to Firefox 63 this property was implemented as offset-inline-start. &lt;a href=&quot;https://www.fxsitecompat.com/en-CA/docs/2018/offset-logical-properties-have-been-renamed-to-inset/&quot;&gt;Firefox 63 updated the name of this property&lt;/a&gt; to match a change to the specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1604f6702fb5a97e8c7dd54c834f8d1eaa9cf30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Registered axis tags are identified using lower-case tags, whereas custom axes should be given upper-case tags. Note that font designers aren't forced follow this practice in any way, and some won't. The important takeaway here is that axis tags are case-sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcae2fefcfa5c6d75c864b6ead92b70b58658d0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: See &lt;a href=&quot;overscroll-behavior&quot;&gt;&lt;code&gt;overscroll-behavior&lt;/code&gt;&lt;/a&gt; for a full explanation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1670e562b34d1e5dd8b65c60c998188e9ae54118" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Since &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/58&quot;&gt;Firefox 58&lt;/a&gt;, this media feature is no longer available to web content &amp;mdash; it is only available internally (e.g. to XUL / chrome code). See &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1396066&quot;&gt;bug 1396066&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98863252e294afe64b01b013d33b9d1b4951a842" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Subgrids are not yet implemented in any browsers, and the specification is subject to change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07258a8c4beaf99f8af993381907a9cb121b165" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Supplying value ranges for &lt;code&gt;font-weight&lt;/code&gt;, &lt;code&gt;font-stretch&lt;/code&gt;, and &lt;code&gt;font-style&lt;/code&gt; will keep the browser from attempting to render an axis outside that range if you are using the appropriate attribute (i.e. &lt;code&gt;font-weight&lt;/code&gt; or &lt;code&gt;font-stretch&lt;/code&gt;), but will not block you from supplying an invalid value via &lt;code&gt;font-variation-settings&lt;/code&gt;, so use with care.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82eeec2f46e5e05829c97ba434e12f7fd2dcb14f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The % symbol is not used when utilizing &lt;code&gt;font-variation-settings&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8130bee341a5cc10b7df3cf5091eab8ed250fa2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;:hover&lt;/code&gt; pseudo-class is problematic on touchscreens. Depending on the browser, the &lt;code&gt;:hover&lt;/code&gt; pseudo-class might never match, match only for a moment after touching an element, or continue to match even after the user has stopped touching and until the user touches another element. Web developers should make sure that content is accessible on devices with limited or non-existent hovering capabilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec3e70d55e9c0aa8878da4095b5cf02e48d4a11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;deg&lt;/code&gt; keyword is not used when utilizing &lt;code&gt;font-variation-settings&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dbd55b556814fa7c82ad7d659f3595f5f3a00b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;text-emphasis-position&lt;/code&gt; cannot be set, and therefore are not reset either, using the &lt;a href=&quot;text-emphasis&quot;&gt;&lt;code&gt;text-emphasis&lt;/code&gt;&lt;/a&gt; shorthand property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102ad9f1d392c75f44f06a06abd628d30adf8e5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;transitionend&lt;/code&gt; event doesn't fire if the transition is aborted before the transition is completed because either the element is made &lt;a href=&quot;../display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt;&lt;code&gt;: none&lt;/code&gt; or the animating property's value is changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2340239b36ef6d558d3c4723d75b87d69095a854" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The CSS Working Group are currently trying to decide what to do about the four-value shorthands for logical properties, for example the equivalents to setting four physical properties at once, like margins with the &lt;a href=&quot;../margin&quot;&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/a&gt; property. We would need some kind of modifier if we were to reuse &lt;code&gt;margin&lt;/code&gt; for flow-relative properties. If you would like to read the suggestions or comment on them the relevant GitHub issue is &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/1282&quot;&gt;#1282&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3133fff4bd6259cbf6d92570abad96b253ac60c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop&quot;&gt;&lt;code&gt;Element.scrollTop&lt;/code&gt;&lt;/a&gt; property may be used to scroll an HTML element even when &lt;code&gt;overflow&lt;/code&gt; is set to &lt;code&gt;hidden&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b207f63d2ec665588cab2a407b1056f98c517968" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The alignment properties in Flexbox have been placed into their own specification &amp;mdash; &lt;a href=&quot;https://www.w3.org/TR/css-align-3/&quot;&gt;CSS Box Alignment Level 3&lt;/a&gt;. It is expected that this spec will ultimately supersede the properties as defined in Flexbox Level One.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69884f60eda533f23d1311e4aab5d01924534826" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The browsers that have implemented the Logical Properties specification have so far implemented the direct mappings and not the new shorthands. Look to the browser compatibility data section on each property page reference for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bbccac87c1833c5cee97b363f3f25a4e10004a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The documentation for each layout method will detail how Box Alignment is applied there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec753bcd1c4f37bc5348dd8df94752d9d70b359" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The examples below show the properties and some example combinations, along with the lower-level syntax equivalents. They may not match exactly due to browser implementation inconsistencies, but in many cases the first example will match the second. The typefaces shown are Playfair Display, Source Serif Pro, IBM Plex Serif, Dancing Script, and Kokoro (all available and free to use, most are on Google Fonts and other services).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c7f007e7c7e1d992bd6ff1985bc0d81d1a26c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The font referenced above &amp;mdash; which includes optical sizing and is freely-licensed &amp;mdash; is good for testing. You can &lt;a href=&quot;https://github.com/TypeNetwork/Amstelvar/releases&quot;&gt;download it on GitHub&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0399659e1983a282d860b233787e82307afd05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The name of the &lt;code&gt;frames()&lt;/code&gt; timing function is &lt;a href=&quot;https://github.com/w3c/csswg-drafts/issues/1301&quot;&gt;currently under discussion&lt;/a&gt;, so it is currently disabled in browser release versions until a final decision is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae00870e28a69a07fb9fa18de43e8347ff10d64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The optical size variation axis is represented by &lt;code&gt;opsz&lt;/code&gt; in &lt;a href=&quot;font-variation-settings&quot;&gt;&lt;code&gt;font-variation-settings&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81749a7608e35840039db1e88eb0c53e34f6f2b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The previous version of this module was called Scroll Snap Points, this is now deprecated. CSS Scroll Snap is current.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e8eea798bba68c343fce6d7ed215fb77cbde77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The syntax of the fallback, like that of &lt;a href=&quot;https://www.w3.org/TR/css-variables/#custom-property&quot;&gt;custom properties&lt;/a&gt;, allows commas. For example, &lt;code&gt;var(--foo, red, blue)&lt;/code&gt; defines a fallback of &lt;code&gt;red, blue&lt;/code&gt; &amp;mdash; anything between the first comma and the end of the function is considered a fallback value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c24aad6d1b489a9e3875cb9862f0f57499b547" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: There is a -moz-prefixed version of this property &amp;mdash; &lt;code&gt;@-moz-document&lt;/code&gt;. This has been limited to use only in user and UA sheets in Firefox 59 in Nightly and Beta &amp;mdash; an experiment designed to mitigate potential CSS injection attacks (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1035091&quot;&gt;bug 1035091&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106b832b1e21626905f3345a1ac8d80538745f3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This feature is available since Firefox 55, but is only currently supported with SVG images loaded via &lt;code&gt;chrome://&lt;/code&gt; or &lt;code&gt;resource://&lt;/code&gt; URLs. To experiment with the feature in SVG on the Web it is necessary to set the &lt;code&gt;svg.context-properties.content.enabled&lt;/code&gt; pref to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1759633ae723bda7baf354a39b90bfe3c868eb99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This has no effect when used outside a shadow DOM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc07cc45ed4a37631690cb83ce6fe863a05887ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This media feature is also implemented by Webkit and by &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ie/dn760733(v=vs.85).aspx&quot;&gt;IE 11 for Windows Phone 8.1&lt;/a&gt; as &lt;code&gt;-webkit-device-pixel-ratio&lt;/code&gt;. The min and max prefixes as implemented by Gecko are named &lt;code&gt;min--moz-device-pixel-ratio&lt;/code&gt; and &lt;code&gt;max--moz-device-pixel-ratio&lt;/code&gt;; but the same prefixes as implemented by Webkit are named &lt;code&gt;-webkit-min-device-pixel-ratio&lt;/code&gt; and &lt;code&gt;-webkit-max-device-pixel-ratio&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c72ec0da0ed90144e06581361c57887695b230" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This property is a low-level mechanism designed to set variable font features where no other way to enable or access those features exist. You should only use it when no basic properties exist to set those features (e.g. &lt;a href=&quot;font-weight&quot;&gt;&lt;code&gt;font-weight&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-style&quot;&gt;&lt;code&gt;font-style&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e79a372a8552031de3fc440bbe1fe96d79f3637" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This selector doesn't just select &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt;s with &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-readonly&quot;&gt;readonly&lt;/a&gt;&lt;/code&gt; set on them; it will select &lt;em&gt;any&lt;/em&gt; element that cannot be edited by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8186e5db091f9c691df2a28c82c03aa48a72398" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This selector doesn't just select text &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt;s; it will select &lt;em&gt;any&lt;/em&gt; element that can be edited by the user, such as a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/a&gt; element with &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-contenteditable&quot;&gt;contenteditable&lt;/a&gt;&lt;/code&gt; set on it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26160db1ffca11ef65b00acebe970829dff265fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Use Firefox for the below two examples as Chrome and Safari treat collapse as hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565827f209691aa19293fc09d8240d8a920ba45c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: User Agents must apply any &lt;code&gt;scrollbar-color&lt;/code&gt; value set on the root element to the viewport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d731fb06d4836fdb4a16d15a27c3ead5204ad8bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: User Agents must apply any &lt;code&gt;scrollbar-width&lt;/code&gt; value set on the root element to the viewport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3353f146f6a9d0b05db0d9c48adcf8a2fcb553" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: WebKit precisely applies the specified value, but Gecko treats the value the same as &lt;code&gt;optimizeLegibility&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b33d09e183c51332e36df93448513918c2324b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When using both &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;or&lt;/code&gt; operators, the parentheses must be used to define the order in which they apply. Otherwise, the condition is invalid and the whole rule is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438e4a75d8a3ffcd4a2f80ed8020baace9001db3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When you specify multiple comma-separated values on an &lt;code&gt;animation-*&lt;/code&gt; property, they will be assigned to the animations specified in the &lt;a href=&quot;animation-name&quot;&gt;&lt;code&gt;animation-name&lt;/code&gt;&lt;/a&gt; property in different ways depending on how many there are. For more information, see &lt;a href=&quot;css_animations/using_css_animations#Setting_multiple_animation_property_values&quot;&gt;Setting multiple animation property values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b58498ac2557cd373f6a38fddb349279dad42f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When you specify multiple values on an &lt;code&gt;animation-*&lt;/code&gt; property, they will be assigned to the animations specified in the &lt;a href=&quot;animation-name&quot;&gt;&lt;code&gt;animation-name&lt;/code&gt;&lt;/a&gt; property in different ways depending on how many there are. For more information, see &lt;a href=&quot;css_animations/using_css_animations#Setting_multiple_animation_property_values&quot;&gt;Setting multiple animation property values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d547f02ba12f0c486d9969b9a172a378bf990d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: While a syntax error in a CSS property / value pair will lead to the line being ignored, using a cascaded value, invalid substitution -- using a custom property value that is invalid -- is not ignored, leading to the value to be inherited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a57e731774aca854bce1eb3db7eb82ae16e448f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: You can find a &lt;a href=&quot;https://mdn.github.io/css-examples/moz-context-properties/&quot;&gt;working example on Github&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4857e6224b9e0841aa3562bb786bb522848f933d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: You can find more details out at the &lt;a href=&quot;../animation&quot;&gt;&lt;code&gt;animation&lt;/code&gt;&lt;/a&gt; reference page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7aa59e60102aea43aaee7d7bf3c49eb1d52e2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: You can see a &lt;a href=&quot;https://mdn.github.io/css-examples/animation-frames-timing-function/index-transitions.html&quot;&gt;working transition example using the frames() function&lt;/a&gt; in our GitHub.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ef43a31d70f07a51ab71a3af0dd6fc6f7a6e95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: as yet no browser has implemented the shorthand properties &lt;code&gt;margin-inline&lt;/code&gt; and &lt;code&gt;margin-block&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79aa8e1b018e03bcb2f180311bcce20c7f536286" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: as yet no browser has implemented the shorthand properties &lt;code&gt;padding-inline&lt;/code&gt; and &lt;code&gt;padding-block&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a9fa1447f78ccc03795195889bcd4753a20793" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: font characteristics set using &lt;code&gt;font-variation-settings&lt;/code&gt; will always override those set using the corresponding basic font properties, e.g. &lt;code&gt;font-weight&lt;/code&gt;, no matter where they appear in the cascade.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7b9722dbbf3dd6e30e5c4d32b1234f8cccaab7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: the value &lt;code&gt;space-evenly&lt;/code&gt; is not defined in the flexbox specification and is a later addition to the Box Alignment specification. Browser support for this value is not as good as that of the values defined in the flexbox spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d731749ba8f261309a4725dd5e5b7eaeb23f63d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: these glyphs were copied out of a font sample and are not intended as prose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef467570dcaa2def5cf8c9db8c9982e63c423d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: these two value shorthands have not yet been implemented by any browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef937726101d6bbf1ea792d981c362dd127505c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notes:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Notes:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="51feb95f0dc3d2ea6e1c8baab65e20e0ddcb6ba5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Numerals&lt;/strong&gt; within paragraphs of text set as 'oldstyle' sit more comfortably between lower-case letters, and likewise setting them as 'tabular numbers' will make them line up better when setting a list of costs in a table say. 'lining' figures on the other hand sit more uniformly on their own or in front of capitalized words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21dd6f61f12f7506dfc452440b7892181fc55521" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;One-value syntax&lt;/strong&gt;: the value must be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c8e5df743d2ede07303ccbe1ee47dcc3bceb39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;One-value&lt;/strong&gt; syntax uses any one of the keyword values in the list below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4dd2f13e55e75cc832b4f7d29f58e0f08ad48b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Only&lt;/strong&gt; use &lt;code&gt;!important&lt;/code&gt; on page-specific CSS that overrides foreign CSS (from external libraries, like Bootstrap or normalize.css).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e20caa67f79568e182b0a21bd1dc34022ac546" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Positional alignment&lt;/strong&gt;: specifying the position of an alignment subject with relation to its alignment container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1505fdd109649be7e144799e0c627ee2643968" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related Tool: &lt;/strong&gt;&lt;a href=&quot;https://cssgenerator.org/box-shadow-css-generator.html&quot;&gt;Box Shadow CSS Generator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d128a624743e2f0a142ea51104871088ef3baab0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Result&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Result&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="015157283ae80ce04490f80d35dd55fa129928ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Rulesets&lt;/strong&gt; (or &lt;em&gt;rules&lt;/em&gt;) that, as seen, associate a collection of CSS declarations to a condition described by a selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02495b1a1e2958ad92d161a5bd4a1032a3f4ba2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt; A complete &lt;a href=&quot;https://www.w3.org/TR/selectors/#selectors&quot;&gt;list of selectors&lt;/a&gt; in the Selectors Level 3 specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8463fca9486b2051f4e750807120ce2627c60d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Single value&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d625a846d9a8c764a2dc7ba8f524923520da1869" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Some rules of thumb:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f944eaece3a3e1cd9e5ff7ec0f09b70d632bfff7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specificity&lt;/strong&gt; is the means by which browsers decide which CSS property values are the most relevant to an element and, therefore, will be applied. Specificity is based on the matching rules which are composed of different sorts of &lt;a href=&quot;css_reference#Selectors&quot;&gt;CSS selectors&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f004b0f6f47eb80740d2d074d920d5ea6c985e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;code&gt;#&lt;var&gt;idname&lt;/var&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;code&gt;#&lt;var&gt;idname&lt;/var&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="86aa4a1345644e850f162fa2cc71e126261b91c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;code&gt;*&lt;/code&gt;&lt;code&gt;ns|*&lt;/code&gt;&lt;code&gt;*|*&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;code&gt;*&lt;/code&gt;&lt;code&gt;ns|*&lt;/code&gt;&lt;code&gt;*|*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f3d25faedba574a473c6485b63842bbc94c0922" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;code&gt;.&lt;var&gt;classname&lt;/var&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;code&gt;.&lt;var&gt;classname&lt;/var&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb23dd42cd63ee8f1ea0427b55cb21011ed6c36b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;code&gt;&lt;var&gt;A&lt;/var&gt; &amp;gt; &lt;var&gt;B&lt;/var&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3018a73d0a9fc779e3b3b4a6279961cc7c7a08b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;code&gt;&lt;var&gt;A&lt;/var&gt; + &lt;var&gt;B&lt;/var&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35bed954297cb0561dc9665117d367fc4a92341e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;code&gt;&lt;var&gt;A&lt;/var&gt; ~ &lt;var&gt;B&lt;/var&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f8e70a68b321edc512cb76e02a3496117bd9c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;code&gt;&lt;var&gt;eltname&lt;/var&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;code&gt;&lt;var&gt;eltname&lt;/var&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="031800a9810e3f8b7e53107858179e9c14aba551" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;code&gt;A || B&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d39d0a3fe8b60e41bab38d1bc4b36577657ea7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;code&gt;A&amp;nbsp;B&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;code&gt;A&amp;nbsp;B&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="69ec659c30baf93068ac67dc79207505015a2a3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;code&gt;[attr]&lt;/code&gt;&lt;code&gt;[attr=value]&lt;/code&gt;&lt;code&gt;[attr~=value]&lt;/code&gt;&lt;code&gt;[attr|=value]&lt;/code&gt;&lt;code&gt;[attr^=value]&lt;/code&gt;&lt;code&gt;[attr$=value]&lt;/code&gt;&lt;code&gt;[attr*=value]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;code&gt;[attr]&lt;/code&gt;&lt;code&gt;[attr=value]&lt;/code&gt;&lt;code&gt;[attr~=value]&lt;/code&gt;&lt;code&gt;[attr|=value]&lt;/code&gt;&lt;code&gt;[attr^=value]&lt;/code&gt;&lt;code&gt;[attr$=value]&lt;/code&gt;&lt;code&gt;[attr*=value]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9833331fd9a6aef6d0b22322f7e75ecf6f7892ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/MDN/Contribute/Guidelines/Conventions_definitions#Experimental&quot;&gt;experimental technology&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a38fbcbf85e20f577b756cdb2a0fd0bce561254" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Three-value syntax:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddce023fe1a4ed98c43986b9f1979729f6c2414e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Three-value&lt;/strong&gt; syntax uses one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e982f18bed1e371438193401bdac018be23c4f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Two-value equivalent&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f99ec66f2d97e78bc1661c93d6c8148df0e4c8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Two-value syntax&lt;/strong&gt;: the first value must be a unitless &lt;a href=&quot;number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; and it is interpreted as &lt;code&gt;&lt;a href=&quot;#&amp;lt;'flex-grow'&amp;gt;&quot;&gt;&amp;lt;flex-grow&amp;gt;&lt;/a&gt;&lt;/code&gt;. The second value must be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b75547f51577baf7b1952e66e5198d10ba6ee3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Two-value&lt;/strong&gt; syntax uses one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133b0ae4d43368b70af29c08d8151e0d07e4d06c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;URI or URL?&lt;/strong&gt; There is a difference between a &lt;a href=&quot;http://en.wikipedia.org/wiki/Uniform_Resource_Identifier&quot;&gt;URI&lt;/a&gt; and a &lt;a href=&quot;http://en.wikipedia.org/wiki/Uniform_Resource_Locator&quot;&gt;URL&lt;/a&gt;. A URI simply identifies a resource. A URL is a type of URI, and describes the &lt;em&gt;location&lt;/em&gt; of a resource. A URI can be either a URL or a name (&lt;a href=&quot;http://en.wikipedia.org/wiki/Uniform_Resource_Name&quot;&gt;URN&lt;/a&gt;) of a resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00914ccc9c6084009e576290c09f320c93272440" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User CSS:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10970b0a9299e7b04ed7ac087561e34ff8eab8cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User-agent CSS:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca56931db56b43f29a2abf1c5e057fd800ec09d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Variable fonts&lt;/strong&gt; are an evolution of the OpenType font specification that enables many different variations of a typeface to be incorporated into a single file, rather than having a separate font file for every width, weight, or style. They let you access all the variations contained in a given font file via CSS and a single &lt;a href=&quot;../@font-face&quot;&gt;&lt;code&gt;@font-face&lt;/code&gt;&lt;/a&gt; reference. This article will give you all you need to know to get you started using variable fonts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b048017872d45c96e118f5a9e1aa834251fbdfd4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Variable fonts&lt;/strong&gt; are an evolution of the OpenType font specification that enables many different variations of a typeface to be incorporated into a single file, rather than having a separate font file for every width, weight, or style. This article will give you all you need to know to get you started using variable fonts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a90a703f60d37b2efdc826e437f130b65e5d0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Not to be confused with the standard &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt; property, as the two are fundamentally incompatible with each other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0fa44199f5c3348169447dd62afe72631f477ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; This property is deprecated. Use &lt;a href=&quot;clip-path&quot;&gt;&lt;code&gt;clip-path&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d333862aadc6564b8b67defd8acbb1035194f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; This property is likely to be deprecated in the near future, with its functionality moved into properties on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture&quot;&gt;&lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt;&lt;/a&gt; elements, with the possible exception of &lt;code&gt;from-image&lt;/code&gt;. The &lt;code&gt;flip&lt;/code&gt; and &lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt; values were made obsolete as of FF63.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167eb2773aef17753f4439c01c4b730d59db2e0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: In order to use variable fonts on your operating system, you need to make sure that it is up to date. For example Linux OSes need the latest Linux Freetype version, and macOS prior to 10.13 does not support variable fonts. If your operating system is not up to date, you will not be able to use variable fonts in web pages or the Firefox Developer Tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde17c0f3052df83d7cbe1735ad9c067abfc9238" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: Use of &lt;code&gt;display: contents&lt;/code&gt; will also remove the element from the accessibility tree &amp;ndash; screen readers will not see what's inside, just the same as if you used &lt;code&gt;display: none&lt;/code&gt;. Use of &lt;code&gt;contents&lt;/code&gt; should only be for presentational, not content, elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978b53bb32d6497ab9725bae52aa195c094f3a9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;You should use it when:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd388c0d90be591d3e4c7c38fbe73e99105f986" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;iOS and macOS only&lt;/strong&gt;. Available on the web starting in iOS 10.1 and macOS 10.12.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792048d8ea6c1ecf99dbaebf37a135c838bb75fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;touch-action &lt;/strong&gt;is also often used to completely disable the delay of &lt;strong&gt;click &lt;/strong&gt;events caused by support for the double-tap to zoom gesture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bab61eb53176449e25c2c82f172b82cb13ffb9d" translate="yes" xml:space="preserve">
          <source>?</source>
          <target state="translated">?</target>
        </trans-unit>
        <trans-unit id="a8965868de494922d6406e55edabcb8dff7247e0" translate="yes" xml:space="preserve">
          <source>? &amp;mdash; 19</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d847614b9e3aecec6110a04521f2e197a2ccf05e" translate="yes" xml:space="preserve">
          <source>? &amp;mdash; 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5ecc5704d562a5beb3f1f7620fe29d6f579cc9" translate="yes" xml:space="preserve">
          <source>? &amp;mdash; 32</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d398dc62c9b837a9828ff9690905bd9ad349801b" translate="yes" xml:space="preserve">
          <source>? &amp;mdash; 4.4.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0da296b8f78956a4ef6b42e46f963efd99d55f6" translate="yes" xml:space="preserve">
          <source>? &amp;mdash; 52</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d785c7c24efe33420326b4467e75c5b142b4b334" translate="yes" xml:space="preserve">
          <source>? &amp;mdash; 60</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b6bcc85e9b593f143910dd97a6ff06280a437b2" translate="yes" xml:space="preserve">
          <source>? &amp;mdash; 62</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310c8fbb47a858485e939f7a2d2aaeb6f0d82a40" translate="yes" xml:space="preserve">
          <source>? &amp;mdash; 64</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e46e93c7f8b2f24bdcff6b3bf7127ac064bdae13" translate="yes" xml:space="preserve">
          <source>? &amp;mdash; 7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3dc1cc647278fb281bbe64bab2832626a42dfb" translate="yes" xml:space="preserve">
          <source>? &amp;mdash; 8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e64e047b2e84cce788434100b11bb0d2318822" translate="yes" xml:space="preserve">
          <source>@charset</source>
          <target state="translated">@charset</target>
        </trans-unit>
        <trans-unit id="5547df693110cb93018c34f0489a35948768c0b5" translate="yes" xml:space="preserve">
          <source>@counter-style</source>
          <target state="translated">@counter-style</target>
        </trans-unit>
        <trans-unit id="734ba0348de8b7547fdfc429e85f1bb4dcd51091" translate="yes" xml:space="preserve">
          <source>@counter-style.additive-symbols</source>
          <target state="translated">@counter-style.additive-symbols</target>
        </trans-unit>
        <trans-unit id="d380fdf0b443d0d95b6cb9eb9a6d95362c8f853c" translate="yes" xml:space="preserve">
          <source>@counter-style.fallback</source>
          <target state="translated">@counter-style.fallback</target>
        </trans-unit>
        <trans-unit id="0ea3c3b17246e268ebf05d107262e33a6b66827b" translate="yes" xml:space="preserve">
          <source>@counter-style.negative</source>
          <target state="translated">@counter-style.negative</target>
        </trans-unit>
        <trans-unit id="10949483a282cdf4ab3202e79d79b3fd31c07f3f" translate="yes" xml:space="preserve">
          <source>@counter-style.pad</source>
          <target state="translated">@counter-style.pad</target>
        </trans-unit>
        <trans-unit id="90cdc92dbf8863daf846b8352426c5124c1372b1" translate="yes" xml:space="preserve">
          <source>@counter-style.prefix</source>
          <target state="translated">@counter-style.prefix</target>
        </trans-unit>
        <trans-unit id="e41858fe9cbd0628046f346fd535e7b1f4dd9231" translate="yes" xml:space="preserve">
          <source>@counter-style.range</source>
          <target state="translated">@counter-style.range</target>
        </trans-unit>
        <trans-unit id="eba0534feb57bf3f91891c7ac61ed750963d6b16" translate="yes" xml:space="preserve">
          <source>@counter-style.speak-as</source>
          <target state="translated">@counter-style.speak-as</target>
        </trans-unit>
        <trans-unit id="570d8695f95019c6ab3f2a159b8ac02e6c600cad" translate="yes" xml:space="preserve">
          <source>@counter-style.suffix</source>
          <target state="translated">@counter-style.suffix</target>
        </trans-unit>
        <trans-unit id="a246697aa290987b2630eb8848fad72a11f315f6" translate="yes" xml:space="preserve">
          <source>@counter-style.symbols</source>
          <target state="translated">@counter-style.symbols</target>
        </trans-unit>
        <trans-unit id="666cb7f34603c69835d43d6e01eaadb94b187ac6" translate="yes" xml:space="preserve">
          <source>@counter-style.system</source>
          <target state="translated">@counter-style.system</target>
        </trans-unit>
        <trans-unit id="92667e5320ba04a62d2232b78cbc2ec18276c5d0" translate="yes" xml:space="preserve">
          <source>@document</source>
          <target state="translated">@document</target>
        </trans-unit>
        <trans-unit id="24c26c8ab840c72b99fde066270772a033d9f7ee" translate="yes" xml:space="preserve">
          <source>@font-face</source>
          <target state="translated">@font-face</target>
        </trans-unit>
        <trans-unit id="2374a8f4cfd50669a00ea13356182025949ef3d7" translate="yes" xml:space="preserve">
          <source>@font-face.font-family</source>
          <target state="translated">@font-face.font-family</target>
        </trans-unit>
        <trans-unit id="18c98075f01a5c708b8a4cec2fd83d7b68a6abf3" translate="yes" xml:space="preserve">
          <source>@font-face.font-style</source>
          <target state="translated">@font-face.font-style</target>
        </trans-unit>
        <trans-unit id="31740826da2fcf7e3012a0ea4dfe689ca7aaaff0" translate="yes" xml:space="preserve">
          <source>@font-face.font-variation-settings</source>
          <target state="translated">@font-face.font-variation-settings</target>
        </trans-unit>
        <trans-unit id="5ae913854f36d0f219510ffd1f7518b4ee420958" translate="yes" xml:space="preserve">
          <source>@font-face.src</source>
          <target state="translated">@font-face.src</target>
        </trans-unit>
        <trans-unit id="e2f23452ddd990243219a9cfa205fb7f25bbc07a" translate="yes" xml:space="preserve">
          <source>@font-face.unicode-range</source>
          <target state="translated">@font-face.unicode-range</target>
        </trans-unit>
        <trans-unit id="2c736864ac6cdcaa49cd6f4bec0a58645417b167" translate="yes" xml:space="preserve">
          <source>@font-feature-values</source>
          <target state="translated">@font-feature-values</target>
        </trans-unit>
        <trans-unit id="685fc8fae398db6142746f337f47d2c9b98facef" translate="yes" xml:space="preserve">
          <source>@import</source>
          <target state="translated">@import</target>
        </trans-unit>
        <trans-unit id="ee941fd2ce718e599faf3eba170a6cdfce208c0a" translate="yes" xml:space="preserve">
          <source>@keyframes</source>
          <target state="translated">@keyframes</target>
        </trans-unit>
        <trans-unit id="26e7f449aa5500e350b4c089e62efadfeb0ec524" translate="yes" xml:space="preserve">
          <source>@media</source>
          <target state="translated">@media</target>
        </trans-unit>
        <trans-unit id="840943172e9c8e1b70073b5502f852334f93a7f7" translate="yes" xml:space="preserve">
          <source>@media rule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02429614214688df5926f0f3576bd3206f766fb" translate="yes" xml:space="preserve">
          <source>@media.-moz-device-pixel-ratio</source>
          <target state="translated">@media.-moz-device-pixel-ratio</target>
        </trans-unit>
        <trans-unit id="a2241a663e39f2716a4aa0fc7a60907cef65648e" translate="yes" xml:space="preserve">
          <source>@media.-moz-mac-graphite-theme</source>
          <target state="translated">@media.-moz-mac-graphite-theme</target>
        </trans-unit>
        <trans-unit id="602cd5445f163a630eac05975c0eece361b99b14" translate="yes" xml:space="preserve">
          <source>@media.-moz-maemo-classic</source>
          <target state="translated">@media.-moz-maemo-classic</target>
        </trans-unit>
        <trans-unit id="36013f2adcba61a2dcd4bc105ea0c1755071b879" translate="yes" xml:space="preserve">
          <source>@media.-moz-os-version</source>
          <target state="translated">@media.-moz-os-version</target>
        </trans-unit>
        <trans-unit id="29495f280f1aa614fa8ffd3ec7ca11b8c64012eb" translate="yes" xml:space="preserve">
          <source>@media.-moz-scrollbar-end-backward</source>
          <target state="translated">@media.-moz-scrollbar-end-backward</target>
        </trans-unit>
        <trans-unit id="2684a3280dc2e634c988df2637dd8a8abe55bd6a" translate="yes" xml:space="preserve">
          <source>@media.-moz-scrollbar-end-forward</source>
          <target state="translated">@media.-moz-scrollbar-end-forward</target>
        </trans-unit>
        <trans-unit id="5eb2ae58031a14894e7f820f2fd49467b465ddf9" translate="yes" xml:space="preserve">
          <source>@media.-moz-scrollbar-start-backward</source>
          <target state="translated">@media.-moz-scrollbar-start-backward</target>
        </trans-unit>
        <trans-unit id="2b4ddaa8db4b1025cfc3b43421a264e8b419454f" translate="yes" xml:space="preserve">
          <source>@media.-moz-scrollbar-start-forward</source>
          <target state="translated">@media.-moz-scrollbar-start-forward</target>
        </trans-unit>
        <trans-unit id="b35de4a1d861c5c841692a63614cd2573ad0469c" translate="yes" xml:space="preserve">
          <source>@media.-moz-scrollbar-thumb-proportional</source>
          <target state="translated">@media.-moz-scrollbar-thumb-proportional</target>
        </trans-unit>
        <trans-unit id="f296bb950a7c6fdebba426ee21c712ffa768f165" translate="yes" xml:space="preserve">
          <source>@media.-moz-touch-enabled</source>
          <target state="translated">@media.-moz-touch-enabled</target>
        </trans-unit>
        <trans-unit id="aa24e99bd3824cb39ced54ecae6a0ae7c0260ed5" translate="yes" xml:space="preserve">
          <source>@media.-moz-windows-accent-color-in-titlebar</source>
          <target state="translated">@media.-moz-windows-accent-color-in-titlebar</target>
        </trans-unit>
        <trans-unit id="57f7e7ca928321b738b1907ea1750ca224555095" translate="yes" xml:space="preserve">
          <source>@media.-moz-windows-classic</source>
          <target state="translated">@media.-moz-windows-classic</target>
        </trans-unit>
        <trans-unit id="2cf5187a763b7653d2c0fe9add176dce19f1bc90" translate="yes" xml:space="preserve">
          <source>@media.-moz-windows-compositor</source>
          <target state="translated">@media.-moz-windows-compositor</target>
        </trans-unit>
        <trans-unit id="eb08d51bc2c2c3081f92eb727f2a6b210b1a957a" translate="yes" xml:space="preserve">
          <source>@media.-moz-windows-default-theme</source>
          <target state="translated">@media.-moz-windows-default-theme</target>
        </trans-unit>
        <trans-unit id="62eeec3b8ea957461fc58554cb00a3c472cfffa5" translate="yes" xml:space="preserve">
          <source>@media.-moz-windows-glass</source>
          <target state="translated">@media.-moz-windows-glass</target>
        </trans-unit>
        <trans-unit id="41f2c3917ca9087f8fd3a3f114777cb3b9770ae1" translate="yes" xml:space="preserve">
          <source>@media.-moz-windows-theme</source>
          <target state="translated">@media.-moz-windows-theme</target>
        </trans-unit>
        <trans-unit id="85c60322bc56d8ff403b639ac5ed85b617e9b62c" translate="yes" xml:space="preserve">
          <source>@media.-ms-high-contrast</source>
          <target state="translated">@media.-ms-high-contrast</target>
        </trans-unit>
        <trans-unit id="784934281fb6c6be5c980e1e12250689e03652df" translate="yes" xml:space="preserve">
          <source>@media.any-hover</source>
          <target state="translated">@media.any-hover</target>
        </trans-unit>
        <trans-unit id="6d20476594da4d1968674665908bacbd7159b70e" translate="yes" xml:space="preserve">
          <source>@media.any-pointer</source>
          <target state="translated">@media.any-pointer</target>
        </trans-unit>
        <trans-unit id="900c203a4132d34e959498acfeb7ed2112ee7e40" translate="yes" xml:space="preserve">
          <source>@media.aspect-ratio</source>
          <target state="translated">@media.aspect-ratio</target>
        </trans-unit>
        <trans-unit id="0de99f288122a1d606967495d2c55aa7f55137bc" translate="yes" xml:space="preserve">
          <source>@media.color</source>
          <target state="translated">@media.color</target>
        </trans-unit>
        <trans-unit id="2040f64cc1b65bd49afd6db7073bf27673fa3ae0" translate="yes" xml:space="preserve">
          <source>@media.color-gamut</source>
          <target state="translated">@media.color-gamut</target>
        </trans-unit>
        <trans-unit id="0267f034e6ff7bc15d18a75595c230e5ae2d9a37" translate="yes" xml:space="preserve">
          <source>@media.color-index</source>
          <target state="translated">@media.color-index</target>
        </trans-unit>
        <trans-unit id="36a0ec9a146462392e29ff9e3ea5254224eb468b" translate="yes" xml:space="preserve">
          <source>@media.device-aspect-ratio</source>
          <target state="translated">@media.device-aspect-ratio</target>
        </trans-unit>
        <trans-unit id="9ae69f7df10677ca60fbfe83ee3fe193e44a7f22" translate="yes" xml:space="preserve">
          <source>@media.device-height</source>
          <target state="translated">@media.device-height</target>
        </trans-unit>
        <trans-unit id="317cb7ee7f7d1f17e6f091f10158f1978141117b" translate="yes" xml:space="preserve">
          <source>@media.device-width</source>
          <target state="translated">@media.device-width</target>
        </trans-unit>
        <trans-unit id="fe59517fbdd9b1667a29ed90e6bf6473c85aa89d" translate="yes" xml:space="preserve">
          <source>@media.display-mode</source>
          <target state="translated">@media.display-mode</target>
        </trans-unit>
        <trans-unit id="347b923ee94027a2e9963baf1c361448f85d99cb" translate="yes" xml:space="preserve">
          <source>@media.grid</source>
          <target state="translated">@media.grid</target>
        </trans-unit>
        <trans-unit id="b8ad94adfc7afefac703c5dab32b408a6aa75bdf" translate="yes" xml:space="preserve">
          <source>@media.height</source>
          <target state="translated">@media.height</target>
        </trans-unit>
        <trans-unit id="f80854fe5aaf1eb9c7238579900b82f9b786468b" translate="yes" xml:space="preserve">
          <source>@media.hover</source>
          <target state="translated">@media.hover</target>
        </trans-unit>
        <trans-unit id="872e56a4243d8399cd143d9e98a022180a538ec4" translate="yes" xml:space="preserve">
          <source>@media.inverted-colors</source>
          <target state="translated">@media.inverted-colors</target>
        </trans-unit>
        <trans-unit id="777cce26ef969df764d287233d7eeef1dc986966" translate="yes" xml:space="preserve">
          <source>@media.light-level</source>
          <target state="translated">@media.light-level</target>
        </trans-unit>
        <trans-unit id="a399ba721c30bafad759de1c1733d1a30139e257" translate="yes" xml:space="preserve">
          <source>@media.monochrome</source>
          <target state="translated">@media.monochrome</target>
        </trans-unit>
        <trans-unit id="1ecc1d0abbe1adb82a736b11cce87ed88d8fcb80" translate="yes" xml:space="preserve">
          <source>@media.orientation</source>
          <target state="translated">@media.orientation</target>
        </trans-unit>
        <trans-unit id="4a2525b5a7901682b15896e675de2d19483d1237" translate="yes" xml:space="preserve">
          <source>@media.overflow-block</source>
          <target state="translated">@media.overflow-block</target>
        </trans-unit>
        <trans-unit id="3735324d5a192c0813f11814083f7fed984ae44a" translate="yes" xml:space="preserve">
          <source>@media.overflow-inline</source>
          <target state="translated">@media.overflow-inline</target>
        </trans-unit>
        <trans-unit id="fb6a9615c02199aefccdf6b43baa7ecfbdea1579" translate="yes" xml:space="preserve">
          <source>@media.pointer</source>
          <target state="translated">@media.pointer</target>
        </trans-unit>
        <trans-unit id="34255b51ad973c3df66325fba97318f37d7f89ef" translate="yes" xml:space="preserve">
          <source>@media.prefers-reduced-motion</source>
          <target state="translated">@media.prefers-reduced-motion</target>
        </trans-unit>
        <trans-unit id="72a4e5fa012cf9b640e5af282a8f0ceec9f81d9e" translate="yes" xml:space="preserve">
          <source>@media.resolution</source>
          <target state="translated">@media.resolution</target>
        </trans-unit>
        <trans-unit id="8122eea903a6e4e8bf745708f39295be59a6b756" translate="yes" xml:space="preserve">
          <source>@media.scan</source>
          <target state="translated">@media.scan</target>
        </trans-unit>
        <trans-unit id="d8769a6817add2e011c8e83f300c7343b5aa0e4c" translate="yes" xml:space="preserve">
          <source>@media.scripting</source>
          <target state="translated">@media.scripting</target>
        </trans-unit>
        <trans-unit id="faccce5edf67d9d9183d22d4c1feccb0cd307c56" translate="yes" xml:space="preserve">
          <source>@media.update-frequency</source>
          <target state="translated">@media.update-frequency</target>
        </trans-unit>
        <trans-unit id="4a7e3dba615f423d3f57ba952abe02413b8d7c73" translate="yes" xml:space="preserve">
          <source>@media.width</source>
          <target state="translated">@media.width</target>
        </trans-unit>
        <trans-unit id="ad73b83d17653b81be058b2768f4b994c15c9b7e" translate="yes" xml:space="preserve">
          <source>@namespace</source>
          <target state="translated">@namespace</target>
        </trans-unit>
        <trans-unit id="74fbaab062bb228ed1ab09c5ff8d6ed2417320e2" translate="yes" xml:space="preserve">
          <source>@page</source>
          <target state="translated">@page</target>
        </trans-unit>
        <trans-unit id="c5edcb995a1d20798c5cbdec48000085536b8a27" translate="yes" xml:space="preserve">
          <source>@page.bleed</source>
          <target state="translated">@page.bleed</target>
        </trans-unit>
        <trans-unit id="b20254db7d585c935a121509d940d237726eb94d" translate="yes" xml:space="preserve">
          <source>@page.marks</source>
          <target state="translated">@page.marks</target>
        </trans-unit>
        <trans-unit id="6cb7b60b796b10e1a2314ad5ef5c82dbc05ac430" translate="yes" xml:space="preserve">
          <source>@page.size</source>
          <target state="translated">@page.size</target>
        </trans-unit>
        <trans-unit id="aafa17723cfb866d1a1000506a1fc66a0fe2e2bb" translate="yes" xml:space="preserve">
          <source>@supports</source>
          <target state="translated">@supports</target>
        </trans-unit>
        <trans-unit id="7d807e2fcfd50d26c710c8371591dcb8eb584c74" translate="yes" xml:space="preserve">
          <source>@viewport</source>
          <target state="translated">@viewport</target>
        </trans-unit>
        <trans-unit id="3cd31ea205eabc295417386824ae558457495bd9" translate="yes" xml:space="preserve">
          <source>@viewport CSS at-rule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b3be498eb3ede472ecc1d7b9e45ea83b2341c5b" translate="yes" xml:space="preserve">
          <source>@viewport.height</source>
          <target state="translated">@viewport.height</target>
        </trans-unit>
        <trans-unit id="1e44214189e904e3eb9b6429df286231db3fb201" translate="yes" xml:space="preserve">
          <source>@viewport.max-height</source>
          <target state="translated">@viewport.max-height</target>
        </trans-unit>
        <trans-unit id="4e357800d0896e07a11e7b56e5d5592f0fec290b" translate="yes" xml:space="preserve">
          <source>@viewport.max-width</source>
          <target state="translated">@viewport.max-width</target>
        </trans-unit>
        <trans-unit id="0e7ac32b15d2a3d86949f6aeaab01d588b57f223" translate="yes" xml:space="preserve">
          <source>@viewport.max-zoom</source>
          <target state="translated">@viewport.max-zoom</target>
        </trans-unit>
        <trans-unit id="9746aaf346fd04976e5ec94d88154bfefbdc8e40" translate="yes" xml:space="preserve">
          <source>@viewport.min-height</source>
          <target state="translated">@viewport.min-height</target>
        </trans-unit>
        <trans-unit id="c7e8ca154020c0850ec39422b6fd6d0d33ab5239" translate="yes" xml:space="preserve">
          <source>@viewport.min-width</source>
          <target state="translated">@viewport.min-width</target>
        </trans-unit>
        <trans-unit id="73ae49920686603dc34b7aef4d689fbe20cccc2f" translate="yes" xml:space="preserve">
          <source>@viewport.min-zoom</source>
          <target state="translated">@viewport.min-zoom</target>
        </trans-unit>
        <trans-unit id="63154bb3d74027fc6dc5f9508ed37ae9e1e21fc8" translate="yes" xml:space="preserve">
          <source>@viewport.orientation</source>
          <target state="translated">@viewport.orientation</target>
        </trans-unit>
        <trans-unit id="8a1218aea7ed46a1f679f3c88e0cf0ca5c5f141a" translate="yes" xml:space="preserve">
          <source>@viewport.user-zoom</source>
          <target state="translated">@viewport.user-zoom</target>
        </trans-unit>
        <trans-unit id="e679e4327d2d1db6849fb0d3997d30585cff541a" translate="yes" xml:space="preserve">
          <source>@viewport.width</source>
          <target state="translated">@viewport.width</target>
        </trans-unit>
        <trans-unit id="82835cfd850752ad5aa2ae3840d7d6d535ec27e7" translate="yes" xml:space="preserve">
          <source>@viewport.zoom</source>
          <target state="translated">@viewport.zoom</target>
        </trans-unit>
        <trans-unit id="6dcd4ce23d88e2ee9568ba546c007c63d9131c1b" translate="yes" xml:space="preserve">
          <source>A</source>
          <target state="translated">A</target>
        </trans-unit>
        <trans-unit id="dd5b9cdf2844c9d37fe1bbc419477b19a486d6a1" translate="yes" xml:space="preserve">
          <source>A 300px &amp;times; 150px rectangle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e3f357dbef719965f010e75d97a4709a32cb49" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the z-component of the translating vector. A positive value moves the element towards the viewer, and a negative value farther away.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e927735c4a34538e072403be9f2fafd74548554" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the abscissa of the scaling vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0d0bfb7270c113d5768b7896587d66419de391" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the ordinate of the scaling vector. If not defined, its default value is &lt;code&gt;sx&lt;/code&gt;, resulting in a uniform scaling that preserves the element's aspect ratio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4a3101c0e1a83fd5e53471a39f26ce969e64d5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;border-radius&quot;&gt;&lt;code&gt;&amp;lt;border-radius&amp;gt;&lt;/code&gt;&lt;/a&gt; value in &lt;code&gt;inset()&lt;/code&gt; is computed as an expanded list of all eight &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; or percentage values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609ea712c70803f4de5c24c7bb796d658bf30c98" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;color%20value&quot;&gt;&lt;code&gt;&amp;lt;color value&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43854ada9f5f838a5614c9e4664abf0b49815fdf" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt; value other than &lt;code&gt;none&lt;/code&gt; or a &lt;code&gt;will-change&lt;/code&gt; value of &lt;code&gt;filter&lt;/code&gt; (only works on Firefox).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b22805be2cf30b59df865c228d527b358829d7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;font-stretch&quot;&gt;&lt;code&gt;font-stretch&lt;/code&gt;&lt;/a&gt; value. Since Firefox 61 (and in other modern browsers) this also accepts two values to specify a range that is supported by a font-face, for example &lt;code&gt;font-stretch: 50% 200%;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b187bfdc2c03859e32681cf9a067f01f5978d02" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;font-style&quot;&gt;&lt;code&gt;font-style&lt;/code&gt;&lt;/a&gt; value. Since Firefox 61 (and in other modern browsers) this also accepts two values to specify a range that is supported by a font-face, for example &lt;code&gt;font-style: oblique 20deg 50deg;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07cf9f60c759e54ead9659c069f3ae7c87041e0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;font-variant&quot;&gt;&lt;code&gt;font-variant&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6cf1e5601165c567c84c28f276e0a7c7a33cc68" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;font-weight&quot;&gt;&lt;code&gt;font-weight&lt;/code&gt;&lt;/a&gt; value. Since Firefox 61 (and in other modern browsers) this also accepts two values to specify a range that is supported by a font-face, for example &lt;code&gt;font-weight: 100 400;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa89b5893dd66a3993bd849206288df2e93372c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;gradient&quot;&gt;&lt;code&gt;&amp;lt;gradient&amp;gt;&lt;/code&gt;&lt;/a&gt; data type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3820e942f6db1a2906a65ff5b627c981c7d74591" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt;&lt;strong&gt;&lt;dfn&gt;pseudo-class&lt;/dfn&gt;&lt;/strong&gt; is a keyword added to a selector that specifies a special state of the selected element(s). For example, &lt;a href=&quot;:hover&quot;&gt;&lt;code&gt;:hover&lt;/code&gt;&lt;/a&gt; can be used to change a button's color when the user's pointer hovers over it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab76e57c7668610bde7189b7af4736c666b3ed2b" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt;&lt;strong&gt;layout mode&lt;/strong&gt;, sometimes simply called &lt;em&gt;layout&lt;/em&gt;, is an algorithm that determines the position and size of boxes based on the way they interact with their sibling and ancestor boxes. There are several of them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="941bfe2a1386f12f9432bf0c09ac574130c9ba56" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_transitions#Which_CSS_properties_are_animatable&quot;&gt;description of which properties are animatable&lt;/a&gt; is available; it's worth noting that this description is also valid for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Using_CSS_transitions&quot;&gt;CSS transitions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22957135c964abaafa688180b82fff88244477d7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; giving the distance from the user to the z=0 plane. It is used to apply a perspective transform to the element and its content. If the value is &lt;code&gt;0&lt;/code&gt; or a negative number, no perspective transform is applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1902be1a4645e1b5b2d64cf5878be3b25aa877b" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt;. If the other value is &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt;, then this value defines Y, relative to the top edge. If the other value is &lt;code&gt;top&lt;/code&gt; or &lt;code&gt;bottom&lt;/code&gt;, then this value defines X, relative to the left edge. If both values are &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; values, then the first defines X and the second Y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cbdbe6ad1ff1082d06a5fa836a8cb0780395287" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt;. This specifies the X coordinate relative to the left edge, with the Y coordinate set to 50%.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9bf24de406be8a42921758ad60b187b446dac0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; in the range &lt;code&gt;0.0&lt;/code&gt; to &lt;code&gt;1.0&lt;/code&gt;, inclusive, representing the opacity of the channel (that is, the value of its alpha channel). Any value outside the interval, though valid, is clamped to the nearest limit in the range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f28b36c540a5281eea390d6ae163b8d613164445" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; specifying a scale factor to make the affected element scale by the same factor along both the X and Y axes. Equivalent to a &lt;code&gt;scale()&lt;/code&gt; (2D scaling) function with a single value specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e7f658c2f062a88dd36ca7b88e5f3a7e7af5bf" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; value between 1 and 1000, inclusive. Higher numbers represent weights that are bolder than (or as bold as) lower numbers. Certain commonly used values correspond to common weight names, as described in the &lt;a href=&quot;#Common_weight_name_mapping&quot;&gt;Common weight name mapping&lt;/a&gt; section below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f133e035eb7410812f79b8019fd56f6db760aa" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; of the containing block's height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac450e806935df83de9bc03116fe17fb1fbd762" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; of the containing block's width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13cea23c4c93636ef803203de9a3007a22d3de3" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; value scales the mask image in the corresponding dimension to the specified percentage of the mask positioning area, which is determined by the value of &lt;a href=&quot;mask-origin&quot;&gt;&lt;code&gt;mask-origin&lt;/code&gt;&lt;/a&gt;. The mask positioning area is, by default, the area containing the content of the box and its padding; the area may also be changed to just the content or to the area containing borders, padding and content. Negative percentages are not allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce411dbeccc3343c3a7018d984817da1c6bc7dc" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; value. Negative values are not allowed for this property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87826cc7db29f3c0d053c917698946e15d41645" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt;; see &lt;a href=&quot;border-radius&quot;&gt;&lt;code&gt;border-radius&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c0a5a8e2e6c3056302eb528c09e5858e53f0a1" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;position_value&quot;&gt;&lt;code&gt;&amp;lt;position&amp;gt;&lt;/code&gt;&lt;/a&gt; value in &lt;code&gt;circle()&lt;/code&gt; or &lt;code&gt;ellipse()&lt;/code&gt; is computed as a pair of offsets (horizontal then vertical) from the top left origin, each given as a combination of an absolute length and a percentage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e67167b7474bb49f0e34b9289aca77c21530ee" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;position_value&quot;&gt;&lt;code&gt;&amp;lt;position&amp;gt;&lt;/code&gt;&lt;/a&gt;. A position defines an x/y coordinate, to place an item relative to the edges of an element's box. It can be defined using one or two values. If two values are used, the first value represents the horizontal position and the second represents the vertical position. If only one value is specified, the second value is assumed to be &lt;code&gt;center&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886c3bbc1d9c878a9e930a042e63f496563fe282" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;string&quot;&gt;&lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the language you want to target. Acceptable values are specified in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML&quot;&gt;HTML&lt;/a&gt; spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6697adbf54f199989264595da54445d7df661975" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;perspective&quot;&gt;&lt;code&gt;perspective&lt;/code&gt;&lt;/a&gt;value other than &lt;code&gt;none&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2723c313faa3630758c5b1ff85655c2a8049014" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;url&quot;&gt;&lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt;&lt;/a&gt; reference to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/mask&quot;&gt;&lt;code&gt;&amp;lt;mask&amp;gt;&lt;/code&gt;&lt;/a&gt; or to a CSS image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49feb44128f609f112d80dd5a7a036e18063d038" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;url&quot;&gt;&lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt;&lt;/a&gt; referencing an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG&quot;&gt;SVG&lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/clipPath&quot;&gt;&lt;code&gt;&amp;lt;clipPath&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091d98b7117e4e3b4f658316caaf9fd5cc6ccf4d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;will-change&quot;&gt;&lt;code&gt;will-change&lt;/code&gt;&lt;/a&gt; value of &lt;code&gt;transform&lt;/code&gt; or &lt;code&gt;perspective&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7c2980385d79b46e23c066c5ea14286550a109" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;lt;bg-size&amp;gt;&lt;/code&gt; can be specified in one of three ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddcb6b1eaee152c7bcf51c4e6a5d755bd5612dd4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;lt;color&amp;gt;&lt;/code&gt; can be defined in any of the following ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7ef2b6681381ce0daa72ee83bce7e1370433d1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;lt;custom-ident&amp;gt;&lt;/code&gt; must not be placed between single or double quotes as this would be identical to a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt;&lt;/a&gt;. Moreover, the first character must not be a decimal digit, nor a hyphen (&lt;code&gt;-&lt;/code&gt;) followed by a decimal digit or another hyphen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538690909f9cabc0ee2f1813d8590bfc1fd80120" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;lt;custom-ident&amp;gt;&lt;/code&gt; naming the counter, followed optionally by an &lt;code&gt;&amp;lt;integer&amp;gt;&lt;/code&gt;. You may specify as many counters to increment as you want, with each name or name-number pair separated by a space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e9a71022afd77b61a9f6fbd9eb5bed5f030d54" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;lt;custom-ident&amp;gt;&lt;/code&gt; naming the counter, followed optionally by an &lt;code&gt;&amp;lt;integer&amp;gt;&lt;/code&gt;. You may specify as many counters to reset as you want, with each name or name-number pair separated by a space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4575f5f3350047c952ca282c48afb3f04df72a3e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; value scales the mask image to the specified length in the corresponding dimension. Negative lengths are not allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2c211aabcc4de98979a95a36558e505ac18a40" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;url(&amp;hellip;)&lt;/code&gt; or a comma separated list &lt;code&gt;url(&amp;hellip;), url(&amp;hellip;), &amp;hellip;&lt;/code&gt;, pointing to an image file. More than one &lt;a href=&quot;url&quot;&gt;&lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt;&lt;/a&gt; may be provided as fallbacks, in case some cursor image types are not supported. A non-URL fallback (one or more of the keyword values) &lt;em&gt;must&lt;/em&gt; be at the end of the fallback list. See &lt;a href=&quot;using_url_values_for_the_cursor_property&quot;&gt;Using URL values for the cursor property&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7557878d0f7110f5d2d3f7d4be4e4ba5dd964b9" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;floating element&lt;/em&gt; is one where the computed value of &lt;code&gt;float&lt;/code&gt; is not &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="667af690b8350f6e2978b50340e31c0009daeb7a" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;grid cell&lt;/em&gt; is the smallest unit on a grid. Conceptually it is like a table cell. As we saw in our earlier examples, once a grid is defined as a parent the child items will lay themselves out in one cell each of the defined grid. In the below image, I have highlighted the first cell of the grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c9b001af088b7b85af82bf337eb226973e0cfe" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;quantity query&lt;/em&gt; styles elements depending on how many of them there are. In this example, list items turn red when there are at least three of them in a given list. This is accomplished by combining the capabilities of the &lt;code&gt;nth-last-child&lt;/code&gt; pseudo-class and the &lt;a href=&quot;general_sibling_selectors&quot;&gt;general sibling combinator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e7231240d5d163f9c34bf92f417c599c404c17" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;zoom factor&lt;/em&gt; of &lt;code&gt;1.0&lt;/code&gt; or &lt;code&gt;100%&lt;/code&gt; corresponds to no zooming. Larger values are zoomed in. Smaller values are zoomed out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831fca65dbaa872a720e35ab167afd2e9e289844" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;zoom factor&lt;/em&gt; of &lt;code&gt;1.0&lt;/code&gt; or &lt;code&gt;100%&lt;/code&gt; corresponds to no zooming. Larger values zoom in. Smaller values zoom out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc5ae175f1bd03c8f5c49872474e4c217e361ae" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;positioned element&lt;/strong&gt; is an element whose &lt;a href=&quot;computed_value&quot;&gt;computed&lt;/a&gt;&lt;code&gt;position&lt;/code&gt; value is either &lt;code&gt;relative&lt;/code&gt;, &lt;code&gt;absolute&lt;/code&gt;, &lt;code&gt;fixed&lt;/code&gt;, or &lt;code&gt;sticky&lt;/code&gt;. (In other words, it's anything except &lt;code&gt;static&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df00502e61e91be1de06b9d7ec4225bbbdf5d63" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;relatively positioned element&lt;/strong&gt; is an element whose &lt;a href=&quot;computed_value&quot;&gt;computed&lt;/a&gt;&lt;code&gt;position&lt;/code&gt; value is &lt;code&gt;relative&lt;/code&gt;. The &lt;a href=&quot;top&quot;&gt;&lt;code&gt;top&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;bottom&quot;&gt;&lt;code&gt;bottom&lt;/code&gt;&lt;/a&gt; properties specify the vertical offset from its normal position; the &lt;a href=&quot;left&quot;&gt;&lt;code&gt;left&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;right&quot;&gt;&lt;code&gt;right&lt;/code&gt;&lt;/a&gt; properties specify the horizontal offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe8dfee30e17f4e8ebc338d97a2982ab060643d" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;statement&lt;/strong&gt; is a building block that begins with any non-space characters and ends at the first closing brace or semi-colon (outside a string, non-escaped and not included into another {}, () or [] pair).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d7282c278223f92496ae2cc2eec550b2e0c6ac" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;stickily positioned element&lt;/strong&gt; is an element whose &lt;a href=&quot;computed_value&quot;&gt;computed&lt;/a&gt;&lt;code&gt;position&lt;/code&gt; value is &lt;code&gt;sticky&lt;/code&gt;. It's treated as relatively positioned until its &lt;a href=&quot;all_about_the_containing_block&quot;&gt;containing block&lt;/a&gt; crosses a specified threshold (such as setting &lt;a href=&quot;top&quot;&gt;&lt;code&gt;top&lt;/code&gt;&lt;/a&gt; to value other than auto) within its flow root (or the container it scrolls within), at which point it is treated as &quot;stuck&quot; until meeting the opposite edge of its &lt;a href=&quot;all_about_the_containing_block&quot;&gt;containing block&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c625955032f8e82b1832efda5fba017bee3ef44e" translate="yes" xml:space="preserve">
          <source>A CSS &lt;strong&gt;comment&lt;/strong&gt; is used to add explanatory notes to the code or to prevent the browser from interpreting specific parts of the style sheet. By design, comments have no effect on the layout of a document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31cd5f810266ad99b479ec638a7c736e3b0a7fb2" translate="yes" xml:space="preserve">
          <source>A CSS &lt;strong&gt;pseudo-element&lt;/strong&gt; is a keyword added to a selector that lets you style a specific part of the selected element(s). For example, &lt;a href=&quot;::first-line&quot;&gt;&lt;code&gt;::first-line&lt;/code&gt;&lt;/a&gt; can be used to change the font of the first line of a paragraph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719ab1047ee849c6b1631d9731b036f551bc2c7b" translate="yes" xml:space="preserve">
          <source>A CSS counter can be especially useful for making outlined lists, because a new instance of the counter is automatically created in child elements. Using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/counters()&quot;&gt;&lt;code&gt;counters()&lt;/code&gt;&lt;/a&gt; function, separating text can be inserted between different levels of nested counters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931329dcacdb7aa0e13e440df0701f56f39ee620" translate="yes" xml:space="preserve">
          <source>A CSS gradient has &lt;a href=&quot;image#no_intrinsic&quot;&gt;no intrinsic dimensions&lt;/a&gt;; i.e., it has no natural or preferred size, nor a preferred ratio. Its concrete size will match the size of the element to which it applies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9587ec694a687cd46899e9ea01f68e332838008f" translate="yes" xml:space="preserve">
          <source>A Complete Guide to Flexbox | CSS-Tricks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28dc164d5b6440a8a004ad0675175dc37bdcf2c" translate="yes" xml:space="preserve">
          <source>A URL that designates an external resource (such as an image). If the resource can't be displayed, it is either ignored or a placeholder is shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3e8150a1ac6cd3a96015728f669de9c41f5b27" translate="yes" xml:space="preserve">
          <source>A background position can be added either as two x, y values after the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/url()&quot;&gt;&lt;code&gt;url()&lt;/code&gt;&lt;/a&gt; in the background, or as &lt;a href=&quot;../background-position&quot;&gt;&lt;code&gt;background-position&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f5a1e760e2a39a0b02c5b98af37c374b8e5836" translate="yes" xml:space="preserve">
          <source>A background with the following properties ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3245cc37b94712c7ab8cf743ce1afd9cc270f9" translate="yes" xml:space="preserve">
          <source>A background, being an image or a color, is clipped at the border, even a rounded one; the exact location of the clipping is defined by the value of the &lt;a href=&quot;background-clip&quot;&gt;&lt;code&gt;background-clip&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69fedec792d5936d002bc53e5a5794a9fe6d4b33" translate="yes" xml:space="preserve">
          <source>A balanced set of columns is where all columns have approximately the same amount of content. Filling and balancing comes into play when the amount of content does not match the amount of space provided, such as when a height is declared on the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc24770c94125e3eea533d29f62a33f6fca11b44" translate="yes" xml:space="preserve">
          <source>A basic example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bffd92bc407e70b50739fc90ca36e3f60aae80f4" translate="yes" xml:space="preserve">
          <source>A basic linear gradient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da51eddc3700972ab8bbc0092786c8dc5ec77381" translate="yes" xml:space="preserve">
          <source>A basic radial gradient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c9f1a9b34022c504fe26a6ac83de0399f95669" translate="yes" xml:space="preserve">
          <source>A bitmap image (such as JPG) always has intrinsic dimensions and proportions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9259952d3b93ec88f877a5c5d8a4790354a45ee8" translate="yes" xml:space="preserve">
          <source>A black foreground leads to no change. A foreground with the inverse color of the backdrop leads to a fully lit color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ddc69183397c5c603de2e8c2cc5594ba29b7b0" translate="yes" xml:space="preserve">
          <source>A black layer has no effect, while a white layer inverts the other layer's color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ac720394533b96289e24edd6020d84d58c76c3" translate="yes" xml:space="preserve">
          <source>A black layer leads to a black final layer, and a white layer leads to no change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89cf2f6fbed38a009da1c577a2e0b4df2682ef6" translate="yes" xml:space="preserve">
          <source>A black layer leads to no change, and a white layer leads to a white final layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8770cc54ae9f33b267ed6ba571f395fb26c71a5e" translate="yes" xml:space="preserve">
          <source>A block element with similar styles as above and no fragmentation results in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a49b3cfbeb354637435618a5b5b4b540bd16e35" translate="yes" xml:space="preserve">
          <source>A block-level box may also be a block container box. A &lt;em&gt;block container box&lt;/em&gt; is a box that contains only other block-level boxes, or creates an &lt;a href=&quot;inline_formatting_context&quot;&gt;inline formatting context&lt;/a&gt;, thus containing only inline boxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82634ba612f7cb7a76ec3cd0c45b0594d6afb354" translate="yes" xml:space="preserve">
          <source>A block-level box will establish a new block formatting context, meaning that if its inner display type would be &lt;code&gt;flow&lt;/code&gt;, it will get a computed display type of &lt;code&gt;flow-root&lt;/code&gt;. This is shown in the next example where the box which displays as &lt;code&gt;horizontal-tb&lt;/code&gt; contains a float which is contained due to its parent establishing a new BFC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4fd814550e33b60fddfba4c4eedd78570aa66a" translate="yes" xml:space="preserve">
          <source>A bounce effect is shown when the user hits a scroll limit during any manipulation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f64f9f6c47399dd9ac49c374a15f98a4bf4d1e" translate="yes" xml:space="preserve">
          <source>A closing bracket or quote at the end of the last formatted line of an element hangs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57a173f0e484c658d515de04e5f1fa55ba5ae8c" translate="yes" xml:space="preserve">
          <source>A collapsed track is treated as having a fixed track sizing function of &lt;code&gt;0px&lt;/code&gt;, and the gutters on either side of it collapse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774b99e93965b54b34a2720865f7df5efbd4f4c9" translate="yes" xml:space="preserve">
          <source>A color-stop's &lt;a href=&quot;color_value&quot;&gt;&lt;code&gt;&amp;lt;color&amp;gt;&lt;/code&gt;&lt;/a&gt; value, followed by an optional stop position (either a &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; along the gradient's axis).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866fdc3cdfd0bb91039d97a8aad3bc6dd55378fe" translate="yes" xml:space="preserve">
          <source>A color-stop's &lt;a href=&quot;color_value&quot;&gt;&lt;code&gt;&amp;lt;color&amp;gt;&lt;/code&gt;&lt;/a&gt; value, followed by an optional stop position (either a &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; along the gradient's axis). A percentage of &lt;code&gt;0%&lt;/code&gt;, or a length of &lt;code&gt;0&lt;/code&gt;, represents the center of the gradient; the value &lt;code&gt;100%&lt;/code&gt; represents the intersection of the ending shape with the virtual gradient ray. Percentage values in between are linearly positioned on the gradient ray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd7177e0555cae3c880af5ab22a589df5f99db3" translate="yes" xml:space="preserve">
          <source>A colorful table of browser engines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d35f16ea953a0561de47b4911174df67b48fab79" translate="yes" xml:space="preserve">
          <source>A column box can contain other markup and there are many places where a break would not be ideal. For example, we would generally prefer that the figcaption of an image not be separated into a new column away from the image it refers to and ending a column with a heading looks strange. The fragmentation properties give us ways to exercise some control over this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e91ff0a46ce0c85cb3d81a0ef6b472fa691de38" translate="yes" xml:space="preserve">
          <source>A combination of the &lt;a href=&quot;::before&quot;&gt;&lt;code&gt;::before&lt;/code&gt;&lt;/a&gt; pseudo-element and the &lt;a href=&quot;content&quot;&gt;&lt;code&gt;content&lt;/code&gt;&lt;/a&gt; property may inject some text at the beginning of the element. In that case, &lt;code&gt;::first-letter&lt;/code&gt; will match the first letter of this generated content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574e5fd702d20871bbbb5fb9012b7f84f7b529dd" translate="yes" xml:space="preserve">
          <source>A common pattern for navigation is to have a list of items displayed as a horizontal bar. This pattern, as basic as it seems, was difficult to achieve before flexbox. It forms the most simple of flexbox examples, and could be considered the ideal flexbox use case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bdbf7fca88a021e6afa8ae726c2120c583eee75" translate="yes" xml:space="preserve">
          <source>A common pattern is a navigation bar where some key items are aligned to the right, with the main group on the left. You might think that this should be a use case for a &lt;code&gt;justify-self&lt;/code&gt; property, however consider the image below. I have three items on one side and two on the other. If I were able to use &lt;code&gt;justify-self&lt;/code&gt; on item &lt;em&gt;d&lt;/em&gt;, it would also change the alignment of item &lt;em&gt;e&lt;/em&gt; that follows, which may or may not be my intention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73acc4ad5bc2c9fd02e15a2a9db8b6019b60ab55" translate="yes" xml:space="preserve">
          <source>A common question is to ask what the difference is between Flexbox and CSS Grid Layout &amp;mdash; why do we have two specifications that sometimes appear to be doing the same thing?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795d865c00880d140544f799e188920038ea6e8d" translate="yes" xml:space="preserve">
          <source>A common question then is how to make those items line up. This is where you want a two-dimensional layout method: You want to control the alignment by row and column, and this is where grid comes in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71025c14fca35cbdb354f7aa824a58318367451" translate="yes" xml:space="preserve">
          <source>A common use for sticky positioning is for the headings in an alphabetized list. The &quot;B&quot; heading will appear just below the items that begin with &quot;A&quot; until they are scrolled offscreen. Rather than sliding offscreen with the rest of the content, the &quot;B&quot; heading will then remain fixed to the top of the viewport until all the &quot;B&quot; items have scrolled offscreen, at which point it will be covered up by the &quot;C&quot; heading, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83df3284cbfa8a3b45b0c5f9459a803c4dce1f8f" translate="yes" xml:space="preserve">
          <source>A common use of CSS is to highlight items in a menu as the user hovers the mouse cursor over them. It's easy to use transitions to make the effect even more attractive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1c5dec316e5e438cb243159703a7a93b48c9e3" translate="yes" xml:space="preserve">
          <source>A context menu is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1149a85452c38489bc070c7dff90fcb2332edbc" translate="yes" xml:space="preserve">
          <source>A couple of scenarios where a fallback style will be used are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef60836e9327c4bfd6a202215bc745a792c83066" translate="yes" xml:space="preserve">
          <source>A cross-browser 2D &lt;a href=&quot;https://louisremi.github.io/jquery.transform.js/&quot;&gt;transform plugin for jQuery&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b658e5fc149fe0d8f0c55e2a0135977e51d038f6" translate="yes" xml:space="preserve">
          <source>A cubic B&amp;eacute;zier curve is defined by four points P&lt;sub&gt;0&lt;/sub&gt;, P&lt;sub&gt;1&lt;/sub&gt;, P&lt;sub&gt;2&lt;/sub&gt;, and P&lt;sub&gt;3&lt;/sub&gt;. P&lt;sub&gt;0&lt;/sub&gt; and P&lt;sub&gt;3&lt;/sub&gt; are the start and the end of the curve and, in CSS these points are fixed as the coordinates are ratios (the abscissa the ratio of time, the ordinate the ratio of the output range). P&lt;sub&gt;0&lt;/sub&gt; is &lt;code&gt;(0, 0)&lt;/code&gt; and represents the initial time and the initial state, P&lt;sub&gt;3&lt;/sub&gt; is &lt;code&gt;(1, 1)&lt;/code&gt; and represents the final time and the final state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a726dfa65758bc17a1e3a0949b6d57661a8da1b1" translate="yes" xml:space="preserve">
          <source>A custom control, such as a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/User:Andreas_Wuest/Custom_Elements&quot;&gt;custom element&lt;/a&gt; button, can use &lt;code&gt;:focus-visible&lt;/code&gt; to selectively apply a focus indicator only on keyboard-focus. This matches the native focus behavior for controls like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daef05c613c05d3e3ae8271b29ae1c339f068dfe" translate="yes" xml:space="preserve">
          <source>A custom element &amp;mdash; &lt;code&gt;&amp;lt;person-details&amp;gt;&lt;/code&gt; &amp;mdash; is defined like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c5def368c53bddf6632e53b42e43eae9b99f0c" translate="yes" xml:space="preserve">
          <source>A custom property&amp;rsquo;s name represented by an identifier that starts with two dashes. Custom properties are solely for use by authors and users; CSS will never give them a meaning beyond what is presented here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c6e232286e7c0ede6e4dfc9fb348dbcae0cda2" translate="yes" xml:space="preserve">
          <source>A declaration of &lt;code&gt;touch action: none;&lt;/code&gt; may inhibit operating a browser's zooming capabilities. This will prevent people experiencing low vision conditions from being able to read and understand page content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a2f4d61aad52201adfc4c05a0384b1329ff334" translate="yes" xml:space="preserve">
          <source>A different pattern for navigation would be to distribute the available space within the items themselves, rather than create space between them. In this case we would use the &lt;a href=&quot;../flex&quot;&gt;&lt;code&gt;flex&lt;/code&gt;&lt;/a&gt; properties to allow items to grow and shrink in proportion to one another as described in &lt;a href=&quot;controlling_ratios_of_flex_items_along_the_main_ax&quot;&gt;Controlling ratios of flex items along the main axis&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f78d596b8ab87d9da4a264ac75f0e1b177f98c3" translate="yes" xml:space="preserve">
          <source>A drop shadow is effectively a blurred, offset version of the input image's alpha mask, drawn in a specific color and composited below the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3506581a452291caccfdced2d3cdf495ca78d51b" translate="yes" xml:space="preserve">
          <source>A few more predefined types are provided by Mozilla (Firefox), Blink (Chrome and Opera) and WebKit (Safari) to support list types in other languages. See the compatibility table to check which browsers supports which extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759650f8f8dc51dacdd44ca17695d0c7ae64cbeb" translate="yes" xml:space="preserve">
          <source>A filled circle (default value)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43156bfc7619901db9c5e4982641da5feaa2c658" translate="yes" xml:space="preserve">
          <source>A filled square</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c497113c97d177a215945b61ce55955b523f30f4" translate="yes" xml:space="preserve">
          <source>A final interaction with another layout specification that is worth noting is the interaction between CSS Grid Layout and &lt;code&gt;display: contents&lt;/code&gt;. The &lt;code&gt;contents&lt;/code&gt; value of the display property is a new value that is described in the &lt;a href=&quot;https://drafts.csswg.org/css-display/#box-generation&quot;&gt;Display specification&lt;/a&gt; as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef73733d08ce92558a7c0e047b5de8ff1c2c86c" translate="yes" xml:space="preserve">
          <source>A first look</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e7356326c16b8bfd42089d12dcf26c7bf31e0f2" translate="yes" xml:space="preserve">
          <source>A flat angle: &lt;code&gt;180deg = 200grad = 0.5turn &amp;asymp; 3.1416rad&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd440f6a3e40eb398739a89309d6b5b2707f2ac" translate="yes" xml:space="preserve">
          <source>A flexible 12-column layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f444cf95f918e2c84fbba35372febd0409fc2ca" translate="yes" xml:space="preserve">
          <source>A flexible number of tracks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75659f33808c99233d6751f15411c42fde9743fc" translate="yes" xml:space="preserve">
          <source>A float indicating the number of seconds the transition had been running at the time the event fired. This value isn't affected by the value of &lt;a href=&quot;../transition-delay&quot;&gt;&lt;code&gt;transition-delay&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e0de7326c3a201cea84ce2fa7b9c87411f59e2" translate="yes" xml:space="preserve">
          <source>A floating-point number, followed by a relative units designator, that indicates the width of the hyphenation zone. For more information about supported length units, see &lt;a href=&quot;css_types&quot;&gt;CSS basic data types&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9416feee42657cde434855c3840ccc425456ca6e" translate="yes" xml:space="preserve">
          <source>A function accepting a &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; or a &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; as an argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ae73ef300f9b03180d4a3c15b97278fc7a660f" translate="yes" xml:space="preserve">
          <source>A function taking two parameters, &lt;em&gt;min&lt;/em&gt; and &lt;em&gt;max&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0200b960b9fb50d11797f8ea4d050af3af5f8915" translate="yes" xml:space="preserve">
          <source>A further bug means that animations using em units are not affected by changes to the &lt;a href=&quot;font-size&quot;&gt;&lt;code&gt;font-size&lt;/code&gt;&lt;/a&gt; on the animated element's parent, whereas they should be (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1254424&quot;&gt;bug 1254424&lt;/a&gt;). Quantum CSS fixes this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6175b799e979d765dbe2cc4c7a704dfe15d90f61" translate="yes" xml:space="preserve">
          <source>A generic 3D &lt;a href=&quot;https://en.wikipedia.org/wiki/Affine_transformation&quot;&gt;affine transformation&lt;/a&gt; can't be represented using a Cartesian-coordinate matrix, as translations are not linear transformations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49eb16f2d742df6177431e099e616d9a3e1632b0" translate="yes" xml:space="preserve">
          <source>A grid can contain a mixture of items. Some of the items may have a position on the grid, but others may be auto-placed. This can be helpful, if you have a document order that reflects the order in which items sit on the grid you may not need to write CSS rules to place absolutely everything. The specification contains a long section detailing the &lt;a href=&quot;https://drafts.csswg.org/css-grid/#auto-placement-algo&quot;&gt;Grid item placement algorithm&lt;/a&gt;, however for most of us we just need to remember a few simple rules for our items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d55d6f8b1bbb69fd36317e43590d9da319e3989a" translate="yes" xml:space="preserve">
          <source>A grid container as containing block</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b53209ec4fb941155fe743d9c2d5f550073945d" translate="yes" xml:space="preserve">
          <source>A grid container as parent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2156b30d7d34d6e080e77aaf28c6b00f6e1f5d" translate="yes" xml:space="preserve">
          <source>A grid is an intersecting set of horizontal and vertical lines &amp;ndash; one set defining columns and the other rows. Elements can be placed onto the grid, respecting these column and row lines. CSS grid layout has the following features:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e71d496e4cd7afa3e5e282a30e16c0ee8c3a18" translate="yes" xml:space="preserve">
          <source>A grid item can become a grid container. In the following example, I have the three-column grid that I created earlier, with our two positioned items. In this case the first item has some sub-items. As these items are not direct children of the grid they do not participate in grid layout and so display in a normal document flow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d037e69fbb7824bc5b9d752f3fab6e3beb7cc6" translate="yes" xml:space="preserve">
          <source>A grid layout should mean we do not need to change our document source in order to get the layout that we want. Therefore the starting point of your page should be a well structured and accessible source document. As is noted in the CSS Grid Layout specification, this is quite often going to give you a good structure for &lt;em&gt;your smallest screen devices too&lt;/em&gt;. If a user is scrolling through a long document on mobile, the priorities for that user quite often map to what should be a priority in the source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54bdeb5abbf803a2bfca817ccdf174a3503d84b3" translate="yes" xml:space="preserve">
          <source>A guide to the coordinate systems used to specify the position of a location in a display context, whether that context is a window on a monitor, a viewport on a mobile device, or a position on a sheet of paper when printing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1058381597838ce71aaaf5820c2a8cdea2020d71" translate="yes" xml:space="preserve">
          <source>A guide to using CSS to apply color to a variety of types of content. All color-related CSS properties are touched upon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52bf32e63190bed70c137d65cddeba6c10dd731e" translate="yes" xml:space="preserve">
          <source>A heading with emphasis shape and color</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed80b02ff77beb2d64b80c441e0ce77d4ded50d" translate="yes" xml:space="preserve">
          <source>A hollow circle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652238bf298144e369c15c5b11d59d6e207fe0fa" translate="yes" xml:space="preserve">
          <source>A identifier matching the value of a &lt;a href=&quot;@counter-style&quot;&gt;&lt;code&gt;@counter-style&lt;/code&gt;&lt;/a&gt; or one of the predefined styles:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc84b723cd17e34176fc14044b19485670af91b" translate="yes" xml:space="preserve">
          <source>A key concept of working with flow relative properties and values is the two dimensions of block and inline. As we saw above, newer CSS layout methods such as Flexbox and Grid Layout use the concepts of &lt;code&gt;block&lt;/code&gt; and &lt;code&gt;inline&lt;/code&gt; rather than &lt;code&gt;right&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt;/&lt;code&gt;top&lt;/code&gt; and &lt;code&gt;bottom&lt;/code&gt; when aligning items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fccebdc3e64a115e6da85cec643fa6375f5ec86" translate="yes" xml:space="preserve">
          <source>A key feature of flexbox is the ability to align and justify items on the main- and cross-axes, and to distribute space between flex items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd4190e1e40d6ae7eef91b64071252bec23fe42" translate="yes" xml:space="preserve">
          <source>A keyframe's timing function is applied on a property-by-property basis from the keyframe on which it is specified until the next keyframe specifying that property, or until the end of the animation if there is no subsequent keyframe specifying that property. As a result, an &lt;code&gt;&lt;strong&gt;animation-timing-function&lt;/strong&gt;&lt;/code&gt; specified on the &lt;code&gt;&lt;strong&gt;100%&lt;/strong&gt;&lt;/code&gt; or &lt;code&gt;&lt;strong&gt;to&lt;/strong&gt;&lt;/code&gt; keyframe will never be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9adb2be894a369e10a99b40fca62b65e164e57d" translate="yes" xml:space="preserve">
          <source>A keyword describing how big the ending shape must be. The possible keywords are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd682d23c3ae96614217cc2e34f6670a73ab5d33" translate="yes" xml:space="preserve">
          <source>A keyword describing how big the ending shape must be. The possible values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa17697ef0aa0ac1309c43706567d0e497d4ee0c" translate="yes" xml:space="preserve">
          <source>A keyword indicating that the property contributes nothing to the grid item&amp;rsquo;s placement, indicating auto-placement, an automatic span, or a default span of &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4a62f2aef36f4f1b7db41e58cb6fa972b27ea5" translate="yes" xml:space="preserve">
          <source>A keyword that is the inverse of &lt;code&gt;contain&lt;/code&gt;. Scales the image as large as possible and maintains image aspect ratio (image doesn't get squished). The image &quot;covers&quot; the entire width or height of the container. When the image and container have different dimensions, &lt;em&gt;the image is clipped&lt;/em&gt; either on left/right or at top/bottom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ccf79151e95fd5760342a6fa752226266f44f27" translate="yes" xml:space="preserve">
          <source>A keyword that scales the image as large as possible and maintains image aspect ratio (image doesn't get squished). The image is &lt;em&gt;letterboxed&lt;/em&gt; within the container. The image is automatically centered unless over-ridden by another property such as &lt;a href=&quot;mask-position&quot;&gt;&lt;code&gt;mask-position&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1310e9e1fb7f50a2bb170d4f9df3011a92641a00" translate="yes" xml:space="preserve">
          <source>A keyword that scales the mask image in the corresponding directions in order to maintain its intrinsic proportion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a776a93c29d974eb0afc88af956d8f1160ebc9" translate="yes" xml:space="preserve">
          <source>A keyword with a predefined meaning appears literally, without quotation marks. For example: &lt;code&gt;auto&lt;/code&gt;, &lt;code&gt;smaller&lt;/code&gt; or &lt;code&gt;ease-in&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b9022efd1bec45de7c4a870ec57481398ac9da" translate="yes" xml:space="preserve">
          <source>A large positive or negative &lt;code&gt;letter-spacing&lt;/code&gt; value will make the word(s) the styling is applied to unreadable. For text styled with a very large positive value, the letters will be so far apart that the word(s) will appear like a series of individual, unconnected letters. For text styled with a very large negative value, the letters will overlap each other to the point where the word(s) may be unrecognizable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3aa37a79732a087171de8b1363f590374e50db" translate="yes" xml:space="preserve">
          <source>A large positive or negative &lt;code&gt;word-spacing&lt;/code&gt; value will make the sentences the styling is applied to unreadable. For text styled with a very large positive value, the words will be so far apart that it will no longer appear to be a sentence. For text styled with a large negative value, the words will overlap each other to the point where the the beginning and end of each word is unrecognizable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15066cccd5203e609e01e0f23abc4f116c34b547" translate="yes" xml:space="preserve">
          <source>A length or percentage that specifies a 2D translation, with the same translation along both the X and Y axes. Equivalent to a &lt;code&gt;translate()&lt;/code&gt; (2D translation) function with a single value specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00847fd1be07c6ec613465275e6d9a5ce52aa91" translate="yes" xml:space="preserve">
          <source>A linear gradient creates a band of colors that progress in a straight line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be85a583b30e7290944a1ef8e6fd99a1cd42317a" translate="yes" xml:space="preserve">
          <source>A linear gradient is defined by an axis&amp;mdash;the &lt;em&gt;gradient line&lt;/em&gt;&amp;mdash;and two or more &lt;em&gt;color-stop points&lt;/em&gt;. Each point on the axis is a distinct color; to create a smooth gradient, the &lt;code&gt;linear-gradient()&lt;/code&gt; function draws a series of colored lines perpendicular to the gradient line, each one matching the color of the point where it intersects the gradient line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b056635a11e235983351c5b696d01bbc431a215" translate="yes" xml:space="preserve">
          <source>A list example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0674c653634cbb1cbf45167c3e2f599201780ad3" translate="yes" xml:space="preserve">
          <source>A list of OpenType features on Wikipedia</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb16b4356c1fa31da2edef5b02ac8292901bcdd6" translate="yes" xml:space="preserve">
          <source>A list, each item consisting of: an offset given as a combination of an absolute length and a percentage, plus an origin keyword</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63646d9fee57b84624f7a3be43638c851da57aff" translate="yes" xml:space="preserve">
          <source>A media query computes to true when the media type (if specified) matches the device on which a document is being displayed &lt;em&gt;and&lt;/em&gt; all media feature expressions compute as true. Queries involving unknown media types are always false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b144083326db67c320d5ad1c49451d5fd47a2d61" translate="yes" xml:space="preserve">
          <source>A media query is composed of an optional &lt;em&gt;media type&lt;/em&gt; and any number of &lt;em&gt;media feature&lt;/em&gt; expressions. Multiple queries can be combined in various ways by using &lt;em&gt;logical operators&lt;/em&gt;. Media queries are case-insensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad3df1161f47cb4e102317bcadd7f222ba9412f" translate="yes" xml:space="preserve">
          <source>A medium border</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba79530e6d443bb2a68f8a1dc057d139d5a2795" translate="yes" xml:space="preserve">
          <source>A mix of values and lengths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac32f6576aa4ee7291c7c4050deec6deb728503c" translate="yes" xml:space="preserve">
          <source>A multiplier is a sign that indicate how many times a preceding entity can be repeated. Without a multiplier, an entity must appear exactly one time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234512d3e9bfc55a8add35f9c5fbecbff306a926" translate="yes" xml:space="preserve">
          <source>A name identifying the animation. This identifier is composed of a combination of case-insensitive letters &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;z&lt;/code&gt;, numbers &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;9&lt;/code&gt;, underscores (&lt;code&gt;_&lt;/code&gt;), and/or dashes (&lt;code&gt;-&lt;/code&gt;). The first non-dash character must be a letter. Also, two dashes are forbidden at the beginning of the identifier. Furthermore, the identifier can't be &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;unset&lt;/code&gt;, &lt;code&gt;initial&lt;/code&gt;, or &lt;code&gt;inherit&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3a8e9759b50e0d051b9b8a8f67e518986d7fc4" translate="yes" xml:space="preserve">
          <source>A name identifying the keyframe list. This must match the identifier production in CSS syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76c05ea88f40d21f4cebc717bcd1041e5fe3031" translate="yes" xml:space="preserve">
          <source>A negative value causes the animation to begin immediately, but partway through its cycle. For example, if you specify &lt;code&gt;-1s&lt;/code&gt; as the animation delay time, the animation will begin immediately but will start 1 second into the animation sequence. If you specify a negative value for the animation delay, but the starting value is implicit, the starting value is taken from the moment the animation is applied to the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f969b94ea737a0ac3c29141ddcad3352973201" translate="yes" xml:space="preserve">
          <source>A negative value will begin the transition effect immediately, and partway through the effect. In other words, the effect will be animated as if it had already been running for the given length of time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f019f32e2e616111af4513ae740dd861b8b6ba9" translate="yes" xml:space="preserve">
          <source>A negative, null, or positive &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; that represents:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd255b08d61281a65b78e93e7d48eb1124ce5d47" translate="yes" xml:space="preserve">
          <source>A new stacking context is created only if one of the properties applied to the element requires it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c95d2644ecaaa795103c11d7e217e14ce43beaf" translate="yes" xml:space="preserve">
          <source>A new stacking context must be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e2e901c5eb99739f8dfe3d951c227fa8ba27050" translate="yes" xml:space="preserve">
          <source>A newer value of &lt;code&gt;display&lt;/code&gt; gives us the ability to create a new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ddc0d5542a02e4062f7e83a8de09f252da99ef" translate="yes" xml:space="preserve">
          <source>A non-negative absolute or relative length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d608906fdbdc90329e0eaaa733ee0f58985a0d84" translate="yes" xml:space="preserve">
          <source>A non-negative dimension with the unit &lt;code&gt;fr&lt;/code&gt; specifying the track&amp;rsquo;s flex factor. Each &lt;code&gt;&amp;lt;flex&amp;gt;&lt;/code&gt;-sized track takes a share of the remaining space in proportion to its flex factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39cca1cf38389f7557f9587feb864dc6e5b4e121" translate="yes" xml:space="preserve">
          <source>A non-negative length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f072d60a9cf517c20b1a1dc9d76b9b93582e5e" translate="yes" xml:space="preserve">
          <source>A non-negative number limiting the maximum value of the zoom factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d67fefc85cfc5ed0de41560404c9788d63d1ab" translate="yes" xml:space="preserve">
          <source>A non-negative number limiting the minimum value of the zoom factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e3da334538fc7cda231fa91853b6fdf5e28a18" translate="yes" xml:space="preserve">
          <source>A non-negative number used as the zoom factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67f09620dc931c11b9f595e5596cf36b98974e5" translate="yes" xml:space="preserve">
          <source>A non-negative percentage limiting the maximum value of the zoom factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c969cd4186a9fd5524ea6123af553c78a1005180" translate="yes" xml:space="preserve">
          <source>A non-negative percentage limiting the minimum value of the zoom factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6098c8142216318a21473bc28bb60f6dd5ed49" translate="yes" xml:space="preserve">
          <source>A non-negative percentage relative to the inline size of the grid container in column grid tracks, and the block size of the grid container in row grid tracks. If the size of the grid container depends on the size of its tracks, then the &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; must be treated as &lt;code&gt;auto&lt;/code&gt;. The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; may adjust the intrinsic size contributions of the track to the size of the grid container and increase the final size of the track by the minimum amount that would result in honoring the percentage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8bd3de44e22d9e3d8e121bb67ac3556fe406ba" translate="yes" xml:space="preserve">
          <source>A non-negative percentage relative to the inline size of the grid container in column grid tracks, and the block size of the grid container in row grid tracks. If the size of the grid container depends on the size of its tracks, then the &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; must be treated as &lt;code&gt;auto&lt;/code&gt;. The user-agent may adjust the intrinsic size contributions of the track to the size of the grid container and increase the final size of the track by the minimum amount that would result in honoring the percentage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6d06603b7bbc482f6e111db6cf0fe714834d67" translate="yes" xml:space="preserve">
          <source>A non-negative percentage value used as the zoom factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8577c9445cdd35823b5cf2bb34d0063c4fe03b" translate="yes" xml:space="preserve">
          <source>A note about font families, weights, and variants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d29c53968f8514c6358dac50923478ed58651ed6" translate="yes" xml:space="preserve">
          <source>A null angle: &lt;code&gt;0 = 0deg = 0grad = 0turn = 0rad&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2fcc7ee44b30e908690102de3539f4e64e9b45" translate="yes" xml:space="preserve">
          <source>A pair of insets in either dimension that add up to more than the used dimension (such as left and right insets of 75% apiece) define a shape enclosing no area. For this specification, this results in an empty float area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c8988052258be8ab63c84cc600e271d7ec6f97" translate="yes" xml:space="preserve">
          <source>A part of the webpage, defined by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/element()&quot;&gt;&lt;code&gt;element()&lt;/code&gt;&lt;/a&gt; function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f78ca92c47c8813f2796ca77dfd33a8ef71aed3" translate="yes" xml:space="preserve">
          <source>A particularly useful scenario for using this would be to render an image in an HTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element, then use that as a background.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e10f45405e6bcb03fc4add5981aa942fc4a1fb" translate="yes" xml:space="preserve">
          <source>A path string defined with SVG coordinate syntax. Currently the only supported value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8574b54cc33b4dba81807cc0c72e587e40f49d" translate="yes" xml:space="preserve">
          <source>A percentage of the time through the animation sequence at which the specified keyframe should occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fddba6bf1d71522c424794da7689a8b7f1e235e8" translate="yes" xml:space="preserve">
          <source>A percentage relative to the available space in the given axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c363139398bb9a6239414a109bf6cfe0ed206d5" translate="yes" xml:space="preserve">
          <source>A percentage value relative to the height of the initial viewport at zoom factor 1.0 for vertical lengths. Must be non-negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90ad2dc69c9d48352ddfad23abcf854ae26bd94" translate="yes" xml:space="preserve">
          <source>A percentage value relative to the width of the initial viewport at zoom factor 1.0 for horizontal lengths. Must be non-negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf35216b7b1626c8b905fae2ce3160f6e648b93f" translate="yes" xml:space="preserve">
          <source>A percentage value relative to the width or height of the initial viewport at zoom factor 1.0, for horizontal and vertical lengths respectively. Must be non-negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79140fad57629af1f855115966321c6982df0a03" translate="yes" xml:space="preserve">
          <source>A phrase or an audio cue defined by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; for representing an unordered list item will be read out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9ba94332bb503f56cc9b3efa264d441a8241f5" translate="yes" xml:space="preserve">
          <source>A positive &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; value. For most font-relative units (such as &lt;code&gt;em&lt;/code&gt; and &lt;code&gt;ex&lt;/code&gt;), the font size is relative to the parent element's font size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afca277458755a4ac82ced39dfaab4025a71d0b5" translate="yes" xml:space="preserve">
          <source>A positive &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; value, relative to the parent element's font size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d166cbd0de4b123603552f2d4a03b6fa05ddd9" translate="yes" xml:space="preserve">
          <source>A positive value indicates that the animation should begin after the specified amount of time has elapsed. A value of &lt;code&gt;0s&lt;/code&gt;, which is the default, indicates that the animation should begin as soon as it's applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536706bf5b43eabe8c43de8f392b90a16df1dbe5" translate="yes" xml:space="preserve">
          <source>A positive value will delay the start of the transition effect for the given length of time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93af0c3d36dea4573769587999abbac7068cc64f" translate="yes" xml:space="preserve">
          <source>A previous version of this interface reached the &lt;em&gt;Candidate Recommendation&lt;/em&gt; status. As some not-listed-at-risk features needed to be removed, the spec was demoted to the &lt;em&gt;Working Draft&lt;/em&gt; level, explaining why browsers implemented this property unprefixed, though not at the CR state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b9918d7982cda8183a66b5c0f4e5a02cd0ecb5" translate="yes" xml:space="preserve">
          <source>A product listing with auto-placement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b961de8fc7c99a7d780b842d31f82f9927c55a47" translate="yes" xml:space="preserve">
          <source>A progress bar using the style above would look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc646c19988d219ad73ef6f45d9ffcc1092754f" translate="yes" xml:space="preserve">
          <source>A progress bar using this style might look something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b28b8f7f263fb7796481b871e0db733a702cb8f" translate="yes" xml:space="preserve">
          <source>A pure gray backdrop, having no saturation, will have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7977c63631280c7534c253dd1ef2b3b68801f8b" translate="yes" xml:space="preserve">
          <source>A radial gradient is defined by a &lt;em&gt;center point&lt;/em&gt;, an &lt;em&gt;ending shape&lt;/em&gt;, and two or more &lt;em&gt;color-stop points&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26aa131b81f78cf1bffb7e2a6d8c43309f8ce086" translate="yes" xml:space="preserve">
          <source>A range of Unicode code points containing wildcard characters, that is using the &lt;code&gt;'?'&lt;/code&gt; character, so for example &lt;code&gt;U+4??&lt;/code&gt; means &lt;em&gt;include all characters in the range &lt;code&gt;U+400&lt;/code&gt; to &lt;code&gt;U+4FF&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348fa993630eb6ddd988126aeb74b65ab700d251" translate="yes" xml:space="preserve">
          <source>A range of Unicode code points. So for example, &lt;code&gt;U+0025-00FF&lt;/code&gt; means &lt;em&gt;include all characters in the range &lt;code&gt;U+0025&lt;/code&gt; to &lt;code&gt;U+00FF&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e0bce7012bb04b86915dd716501c151bbccd0e" translate="yes" xml:space="preserve">
          <source>A recent addition to the Box Alignment specification has been the &lt;a href=&quot;../row-gap&quot;&gt;&lt;code&gt;row-gap&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../column-gap&quot;&gt;&lt;code&gt;column-gap&lt;/code&gt;&lt;/a&gt; properties, along with the shorthand &lt;a href=&quot;../gap&quot;&gt;&lt;code&gt;gap&lt;/code&gt;&lt;/a&gt;. These properties were initially defined in the CSS Grid specification and named &lt;code&gt;grid-row-gap&lt;/code&gt;, &lt;code&gt;grid-column-gap&lt;/code&gt; and &lt;code&gt;grid-gap&lt;/code&gt;. They have been renamed and moved to Box Alignment in order that they can be used in all layout methods &amp;mdash; this will ultimately include flexbox. Until browsers implement the &lt;code&gt;gap&lt;/code&gt; properties for flexbox, &lt;a href=&quot;../margin&quot;&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/a&gt;s have to be used to create gaps between items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b15f77165c077974eab9f1a75cd0eceb3f799cc" translate="yes" xml:space="preserve">
          <source>A rectangular &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;shape&amp;gt;()&amp;gt;&lt;/code&gt;&lt;/a&gt; of the form &lt;code&gt;rect(&amp;lt;top&amp;gt;, &amp;lt;right&amp;gt;, &amp;lt;bottom&amp;gt;, &amp;lt;left&amp;gt;)&lt;/code&gt; or &lt;code&gt;rect(&amp;lt;top&amp;gt; &amp;lt;right&amp;gt; &amp;lt;bottom&amp;gt; &amp;lt;left&amp;gt;)&lt;/code&gt; (which is a more backwards-compatible syntax). The &lt;code&gt;&amp;lt;top&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;bottom&amp;gt;&lt;/code&gt; values specify offsets from the &lt;em&gt;inside top border edge&lt;/em&gt; of the box, while &lt;code&gt;&amp;lt;right&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;left&amp;gt;&lt;/code&gt; specify offsets from the &lt;em&gt;inside left border edge&lt;/em&gt; of the box &amp;mdash; that is, the extent of the padding box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e7c7114d8392b199d05b9e883a95ee67b776f4" translate="yes" xml:space="preserve">
          <source>A reference to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; inside the inner box which contains the paragraphs that will show the coordinate information is fetched into &lt;code&gt;log&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39df454e918a2b88e267363e4d2fdbfa55006c09" translate="yes" xml:space="preserve">
          <source>A responsive layout with 1 to 3 fluid columns using &lt;code&gt;grid-template-areas&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd71304ac4417f686458ef32a7de54382fb5949f" translate="yes" xml:space="preserve">
          <source>A right angle (counterclockwise): &lt;code&gt;-90deg = -100grad = -0.25turn &amp;asymp; -1.5708rad&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474a4939fc540c9a3e89b3f541d5a9a861bad948" translate="yes" xml:space="preserve">
          <source>A right angle: &lt;code&gt;90deg = 100grad = 0.25turn &amp;asymp; 1.5708rad&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630ddd0530f12b5eeeda8e634b67d4c4aeb0f159" translate="yes" xml:space="preserve">
          <source>A row is created for every separate string listed, and a column is created for each cell in the string. Multiple named cell tokens within and between rows create a single named grid area that spans the corresponding grid cells. Unless those cells form a rectangle, the declaration is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90e4e18d9655128b4b6618abc6be7adfa4e092e" translate="yes" xml:space="preserve">
          <source>A shape defining the part of the image to use. The &lt;code&gt;rect()&lt;/code&gt; function defines a rectangle to use as shape. Its parameters define the top, right, bottom, and left offsets of the edges of the image, in this order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dffd49e4274a35362c5f555ff6c6b9881c3886ae" translate="yes" xml:space="preserve">
          <source>A shape whose size and position is defined by the &lt;code&gt;&amp;lt;geometry-box&amp;gt;&lt;/code&gt; value. If no geometry box is specified, the &lt;code&gt;border-box&lt;/code&gt; will be used as the reference box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f433f71b8a3dd114d748b6727ef3e0ef7f19b52" translate="yes" xml:space="preserve">
          <source>A shorthand descriptor for setting both &lt;code&gt;min-height&lt;/code&gt; and &lt;code&gt;max-height&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc59fc9c9e78e3f202930711f418ecfe5e2a877" translate="yes" xml:space="preserve">
          <source>A shorthand descriptor for setting both &lt;code&gt;min-width&lt;/code&gt; and &lt;code&gt;max-width&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd5521177b9e5fb297d9413b32a919d0e79252b" translate="yes" xml:space="preserve">
          <source>A simple div with a border</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0a01d934c51bb420253dcc64eca881df99dd0e" translate="yes" xml:space="preserve">
          <source>A simple example can demonstrate the difference between one- and two-dimensional layouts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3892260963af39063ee4c79a4c6f5fc7f079e501" translate="yes" xml:space="preserve">
          <source>A simple example follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ab8d0914c456c6bd69eb718638c6e284aab23e" translate="yes" xml:space="preserve">
          <source>A simple question to ask yourself when deciding between grid or flexbox is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72f4b82e49b97a709b2a4f81613aaafb3401e71" translate="yes" xml:space="preserve">
          <source>A simple shape from an image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fae5fa862c8ae2292b7ef12e4f8e317d53cda3e" translate="yes" xml:space="preserve">
          <source>A single Unicode character code point, for example &lt;code&gt;U+26&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944ba2c8f444a17896e5ce250f9a3c7fc97a2f87" translate="yes" xml:space="preserve">
          <source>A single value of &lt;code&gt;list-item&lt;/code&gt; will cause the element to behave like a list item. This can be used together with &lt;a href=&quot;list-style-type&quot;&gt;&lt;code&gt;list-style-type&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;list-style-position&quot;&gt;&lt;code&gt;list-style-position&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea3ac132a3ae8d2fbec4d54aed4231b4b2c6eef" translate="yes" xml:space="preserve">
          <source>A somewhat more bizarre example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11d3a7500433f9c8920bf567a722cdea8aeb36a" translate="yes" xml:space="preserve">
          <source>A somewhat realistic example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231433176f5f9d03f5affcd8b4adefa70b2015f4" translate="yes" xml:space="preserve">
          <source>A space-separated list of &lt;a href=&quot;filter-function&quot;&gt;&lt;code&gt;&amp;lt;filter-function&amp;gt;&lt;/code&gt;&lt;/a&gt;s or an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/filter&quot;&gt;SVG filter&lt;/a&gt; that will be applied to the backdrop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48fe875428a346e9bd85eabfc5f51d4c7fd78e4" translate="yes" xml:space="preserve">
          <source>A special keyword denoting no keyframes. It can be used to deactivate an animation without changing the ordering of the other identifiers, or to deactivate animations coming from the cascade.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94aa91e8b569fb5b2e4e1f696ea7b098056a87f8" translate="yes" xml:space="preserve">
          <source>A stacking context is formed, anywhere in the document, by any element in the following scenarios:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55883ecaa7b2947a6b6056a669516d9a665b3615" translate="yes" xml:space="preserve">
          <source>A starting offset of &lt;code&gt;0%&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4e6f9b1284903180090a977f7a0aaaf4d527e2" translate="yes" xml:space="preserve">
          <source>A stop or comma at the end of a line hangs if it does not otherwise fit prior to justification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272a801846bfb61aa377e1157da6c65168695c26" translate="yes" xml:space="preserve">
          <source>A stop or comma at the end of a line hangs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ae0ee9cb8731174702bd4bfba6ef9f988054b3" translate="yes" xml:space="preserve">
          <source>A straightforward way to create a shape is to use a value from the CSS Box Model. This article explains how to do this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689a4f1daf3c3cef78e72758d5194b8758825ed4" translate="yes" xml:space="preserve">
          <source>A string identifying the property to which a transition effect should be applied when its value changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa36578065333489deaa7ddb1d694ad9a1160bb" translate="yes" xml:space="preserve">
          <source>A string indicating the name of the CSS property whose transition completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10fc31421fcc66a6b3424af8b07b11bafacb66f7" translate="yes" xml:space="preserve">
          <source>A synonym of &lt;code&gt;auto&lt;/code&gt;, which should be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e99d70aa13436cb1a72cb1fdc596907ac7ab3fc" translate="yes" xml:space="preserve">
          <source>A table of contents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030c373df86d2391631b78ef1f6b87cbb8e9fd7b" translate="yes" xml:space="preserve">
          <source>A thick border</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41cfe72c4001223480b5fd241a71092e41e80fd" translate="yes" xml:space="preserve">
          <source>A thin border</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a401f566dfca20fa2f199434b849df9203859ab0" translate="yes" xml:space="preserve">
          <source>A thin scrollbar width variant on platforms that provide that option, or a thinner scrollbar than the default platform scrollbar width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93306b85620c65531f0753518c014b05f5e0091d" translate="yes" xml:space="preserve">
          <source>A translation is not a linear transformation in ℝ&lt;sup&gt;2&lt;/sup&gt; and can't be represented using a Cartesian-coordinate matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4123a0e092d6cc78a80286f8af145401e3845e63" translate="yes" xml:space="preserve">
          <source>A translation is not a linear transformation in ℝ&lt;sup&gt;3&lt;/sup&gt; and can't be represented using a Cartesian-coordinate matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c89838e698ea187b6c8fc44523246e935f4d65" translate="yes" xml:space="preserve">
          <source>A typical example of a non-inherited property is the &lt;a href=&quot;border&quot;&gt;&lt;code&gt;border&lt;/code&gt;&lt;/a&gt; property. Given the style rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d68b803942616d99126199d6ac084ae17341198" translate="yes" xml:space="preserve">
          <source>A typical example of an inherited property is the &lt;a href=&quot;color&quot;&gt;&lt;code&gt;color&lt;/code&gt;&lt;/a&gt; property. Given the style rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da278239c3c5f5928dfc72a7d23cb5aa8e5cd27" translate="yes" xml:space="preserve">
          <source>A typical use of this is with a descendant selector expression &amp;mdash; for example &lt;code&gt;h1&lt;/code&gt; &amp;mdash; to select only instances of the custom element that are inside an &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3be2e5195163b6253e541f4d3d3dedfba96264" translate="yes" xml:space="preserve">
          <source>A value of &lt;code&gt;0s&lt;/code&gt; (or &lt;code&gt;0ms&lt;/code&gt;) will begin the transition effect immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31227359546bdbd4cd2b9bd9ed15dfa937c39359" translate="yes" xml:space="preserve">
          <source>A value of &lt;code&gt;1&lt;/code&gt; means that the broken image icon is shown even if the image has an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-alt&quot;&gt;&lt;code&gt;alt&lt;/code&gt;&lt;/a&gt; attribute. When the value &lt;code&gt;0&lt;/code&gt; is used the image will act as usual and only display the &lt;code&gt;alt&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb5d11f6782786fe164e600d115c39fe89c66a4" translate="yes" xml:space="preserve">
          <source>A value which is not specified is set to its initial value. That sounds anecdotal, but it really means that it &lt;strong&gt;overrides&lt;/strong&gt; previously set values. Therefore:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2e9a5509755fde9318b6acb7b46ea9ca16b5a5" translate="yes" xml:space="preserve">
          <source>A vector image (such as SVG) does not necessarily have intrinsic dimensions. If it has both horizontal and vertical intrinsic dimensions, it also has intrinsic proportions. If it has no dimensions or only one dimension, it may or may not have proportions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89b6a90ed534bd1e223ac1b535f101e059eb7fc" translate="yes" xml:space="preserve">
          <source>A very simple introduction to the CSS cascade</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031b329434f5887db9d3db8bdb554adab0bf25eb" translate="yes" xml:space="preserve">
          <source>A viewport represents the area in computer graphics that is currently being viewed. In web browser terms, it is generally the same as the browser window: the part of the document you're viewing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc5ca3e0ad6c9577ba1715d40278f3018c913a4d" translate="yes" xml:space="preserve">
          <source>A white foreground leads to no change. A foreground with the inverse color of the backdrop leads to a black final image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1684a762cb064ea7bebc0034f0195ca8c8570ddc" translate="yes" xml:space="preserve">
          <source>A width-based media query within the iframe document is relative to the iframe's viewport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7c2f39917e0f5d8158f5a7751ad75d20ee58b3" translate="yes" xml:space="preserve">
          <source>A word is considered for hyphenation only if it begins at or outside of the logical left limit of the hyphenation zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c88cdfe02ec8a4545828565602d0ab8c14358d" translate="yes" xml:space="preserve">
          <source>A write-up of the differences between the IE/Edge (&amp;le;15) Grid implementation and the modern implementation, also covering &lt;em&gt;autoprefixer&lt;/em&gt; support, take a look at: &lt;em&gt;&lt;a href=&quot;https://rachelandrew.co.uk/archives/2016/11/26/should-i-try-to-use-the-ie-implementation-of-css-grid-layout/&quot;&gt;Should I try to use the IE implementation of CSS Grid Layout?&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e1aa842eb541226a44791e651c9f1e9453edbb" translate="yes" xml:space="preserve">
          <source>A) Scenario one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b60cbac810d3243827f7f015f7b10cc1d3f1e119" translate="yes" xml:space="preserve">
          <source>A) Simply add another CSS rule with &lt;code&gt;!important&lt;/code&gt;, and either give the selector a higher specificity (adding a tag, id or class to the selector), or add a CSS rule with the same selector at a later point than the existing one. This works because in a specificity tie, the last rule defined wins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842f4ac15c5e237ca4c7a77d13e8756cefaf9898" translate="yes" xml:space="preserve">
          <source>A3</source>
          <target state="translated">A3</target>
        </trans-unit>
        <trans-unit id="de69a629f9c30af3f481110f0f42a7c0c5efacfb" translate="yes" xml:space="preserve">
          <source>A4</source>
          <target state="translated">A4</target>
        </trans-unit>
        <trans-unit id="c40e0e23516f1d6a0739aeebb738bbc8495a5e08" translate="yes" xml:space="preserve">
          <source>A5</source>
          <target state="translated">A5</target>
        </trans-unit>
        <trans-unit id="94f0e5f9ba11da3ab050e014ca215c2ea9e39356" translate="yes" xml:space="preserve">
          <source>About WOFF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f1380dc35160ef7c7da4ebc167470b6a877807c" translate="yes" xml:space="preserve">
          <source>Above, we define the parameter as &lt;code&gt;evt&lt;/code&gt; &amp;mdash; an event object. This makes sense because &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList#Browser_compatibility&quot;&gt;newer implementations of &lt;code&gt;MediaQueryList&lt;/code&gt;&lt;/a&gt; handle event listeners in a standard way. They no longer use the unusual &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryListListener&quot;&gt;&lt;code&gt;MediaQueryListListener&lt;/code&gt;&lt;/a&gt; mechanism, but a standard event listener setup, passing an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Event&quot;&gt;event object&lt;/a&gt; of type &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryListEvent&quot;&gt;&lt;code&gt;MediaQueryListEvent&lt;/code&gt;&lt;/a&gt; as the argument to the callback function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb768ca7c53a413b22867a751ecbcee725c79e9" translate="yes" xml:space="preserve">
          <source>Absolute Positioning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba848bf99ced91198ce9fd19c5eb262a9c56ccba" translate="yes" xml:space="preserve">
          <source>Absolute length units</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce11449d05500ce26e7a3d8a8e2c0a0ef10c93f" translate="yes" xml:space="preserve">
          <source>Absolute length units represent a physical measurement when the physical properties of the output medium are known, such as for print layout. This is done by anchoring one of the units to a physical unit, and then defining the others relative to it. The anchor is done differently for low-resolution devices, such as screens, versus high-resolution devices, such as printers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6163616ab203b1211969bd7945a4b6d60293877" translate="yes" xml:space="preserve">
          <source>Absolute positioning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ded319eccec93a58591f9c13cf831d3200b0972" translate="yes" xml:space="preserve">
          <source>Absolute-size keywords, based on the user's default font size (which is &lt;code&gt;medium&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6bf01decde2d1bab93a2b489a9afc6c889e9d42" translate="yes" xml:space="preserve">
          <source>Absolutely positioned elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2baed96aaa2e20a578a2336695235effb7405f34" translate="yes" xml:space="preserve">
          <source>Absolutely positioned layout mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5aff1ef0e17ee7efac7caff0cde39585719ab7" translate="yes" xml:space="preserve">
          <source>Absolutely-positioned flex children</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fefc5ae1557555eed5317049d05bab9ddc3a98c6" translate="yes" xml:space="preserve">
          <source>Accepted only in &lt;code&gt;-webkit-linear-gradient()&lt;/code&gt; and &lt;code&gt;-moz-linear-gradient()&lt;/code&gt;, not &lt;code&gt;linear-gradient()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133a7665c15afa0bc8dfecd74d838336f444af44" translate="yes" xml:space="preserve">
          <source>Accepted only in &lt;code&gt;-webkit-repeating-linear-gradient()&lt;/code&gt; and &lt;code&gt;-moz-repeating-linear-gradient()&lt;/code&gt;, not &lt;code&gt;repeating-linear-gradient()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd7035e33c608f38809e8601ab0fb3fa47af145" translate="yes" xml:space="preserve">
          <source>Accepted only in &lt;code&gt;-webkit-repeating-linear-gradient()&lt;/code&gt; and &lt;code&gt;-moz-repeating-linear-gradient()&lt;code&gt;, not &lt;code&gt;repeating-linear-gradient()&lt;/code&gt;.&lt;/code&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1175f7168eea5d4da3b40c2929f85a97e191f94" translate="yes" xml:space="preserve">
          <source>Accepts a white-space separated list of color values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f917c2b26aa1884db8a0ae089094c6530d1e7fcd" translate="yes" xml:space="preserve">
          <source>Accepts the &lt;code&gt;inherit&lt;/code&gt; keyword. Also accepts &lt;code&gt;transparent&lt;/code&gt; as a valid color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b66bcd614d1e9fd0f63b1b5cc206eb965bf58d" translate="yes" xml:space="preserve">
          <source>Accessibility Concerns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7228cbcab4c7f68c6285e144cc0c0667f70e08" translate="yes" xml:space="preserve">
          <source>Accessibility concerns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca2aa5830badf13feb1528bf346b6d20ea5341a" translate="yes" xml:space="preserve">
          <source>Accessibility considerations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d972bcf5785ae38001e6c79d8175a090df6097" translate="yes" xml:space="preserve">
          <source>Accessibility support for CSS generated content &amp;ndash; Tink</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584113d6eb2d74b31e7dd9d0049560703f02a6cb" translate="yes" xml:space="preserve">
          <source>Accessible Visual Focus Indicators: &lt;a href=&quot;https://www.deque.com/blog/give-site-focus-tips-designing-usable-focus-indicators/&quot;&gt;Give Your Site Some Focus! Tips for Designing Useful and Usable Focus Indicators&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d0ddb592431a44bba54fb2f9d926485d7a3c3b9" translate="yes" xml:space="preserve">
          <source>According to CSS3 Box, this is a synonym of &lt;code&gt;min-content&lt;/code&gt;. CSS3 Sizing defines a more complex algorithm, but no browser implements it, even in an experimental way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c40b1dbdea0cd14f5404e1b233d7b5d9f6525dd" translate="yes" xml:space="preserve">
          <source>According to the spec, outlines don't have to be rectangular, although they usually are.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0f96539d94bc71508651510545d5621c5f869b" translate="yes" xml:space="preserve">
          <source>According to the specification you can either supply just the 4-character feature code or supply a 1 following the code (for enabling that feature) or a 0 (zero) to disable it. This is helpful if you have a feature like ligatures enabled by default but you would like to turn them off, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64183261f1d36f4c001d7624bc7c883e70e2dc15" translate="yes" xml:space="preserve">
          <source>Activated by the &lt;code&gt;properties&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177b10f25bf97ed2b1eefbc0def984d4e4846206" translate="yes" xml:space="preserve">
          <source>Activates subscript alternate glyphs. If, in a given run, one such glyph is not available for a character, all the characters in the run are rendered using synthesized glyphs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c08b88977ee7733233a0c57c3582c8ba78d3d81" translate="yes" xml:space="preserve">
          <source>Activates superscript alternate glyphs. If, in a given run, one such glyph is not available for a character, all the characters in the run are rendered using synthesized glyphs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa0b5147f340cfb65c38dbadcacaef7f5ad2f451" translate="yes" xml:space="preserve">
          <source>Active form elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9760cb060b35287ac3da92c6105d6737d09a0fb" translate="yes" xml:space="preserve">
          <source>Active links</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b90432404fd503b8d76f69a2ac819c4a82ce06f" translate="yes" xml:space="preserve">
          <source>Active window border.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a4c3ba038ffe5c57ebadc8ac501c8f6c9a585d" translate="yes" xml:space="preserve">
          <source>Active window caption. Should be used with &lt;code&gt;CaptionText&lt;/code&gt; as foreground color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8f19e175083244b2b44ce0869fbe0915114b22" translate="yes" xml:space="preserve">
          <source>ActiveBorder</source>
          <target state="translated">ActiveBorder</target>
        </trans-unit>
        <trans-unit id="b3663a5f661aa1beaffcbf84f6520d5275e0c5ae" translate="yes" xml:space="preserve">
          <source>ActiveCaption</source>
          <target state="translated">ActiveCaption</target>
        </trans-unit>
        <trans-unit id="82f2b886f7c6b5ea37384936a18f7f2efd1c6237" translate="yes" xml:space="preserve">
          <source>Actual value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9afb465841a0ed8f7a095e27074f37938ad3ba61" translate="yes" xml:space="preserve">
          <source>Actually now deferred to CSS4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e3e94518629143cc440a173bfa0bc2584fee0d" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;pseudo-classes&quot;&gt;pseudo-classes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd587a1749eb456af0e2b67304418ec62cddce2" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;pseudo-elements&quot;&gt;pseudo-elements&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afacb0645761d9cafc52952603b4c6435b509215" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;digits&lt;/code&gt; value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c9926361c6969e3c99ed4dd409203b8a1f0928" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;sideways-lr&lt;/code&gt; and &lt;code&gt;sideways-rl&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cd8dd82722769d7dadf2815db1b5175f513dd0" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;text&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7104b922ebf5d87ec9da209d2d094319879b331" translate="yes" xml:space="preserve">
          <source>Add the specificity adjustment selector &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:where&quot;&gt;&lt;code&gt;:where()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b357d2f4d02f8376fefa2186e77e41b1bcdfb6a0" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;css_grid_layout/basic_concepts_of_grid_layout#Subgrid&quot;&gt;subgrids&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8275daf972938bfba4be084a415036784a9ae89" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/image-resolution&quot;&gt;&lt;code&gt;image-resolution&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8628d213937b5c9ca627a434ad357f50b7470a7" translate="yes" xml:space="preserve">
          <source>Added &lt;a href=&quot;image-orientation&quot;&gt;&lt;code&gt;image-orientation&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;image-rendering&quot;&gt;&lt;code&gt;image-rendering&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;object-fit&quot;&gt;&lt;code&gt;object-fit&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;object-position&quot;&gt;&lt;code&gt;object-position&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7fb5b8fad76e0df2d3d6ff9b08d244a95b43fa6" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;auto&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea0958f43336d68fbf99f7ccb4723089eb8949e" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;margin-trim&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f7a55281073941a5780e8b01f246d445388cc8" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;pan-left&lt;/code&gt;, &lt;code&gt;pan-right&lt;/code&gt;, &lt;code&gt;pan-up&lt;/code&gt;, &lt;code&gt;pan-down&lt;/code&gt; property values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39389fa348fe6876ff7c96609adc3c87137f469e" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;pinch-zoom&lt;/code&gt; property value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21fe5b71e35234eaf517671a6d1f3c63d954f76b" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;plaintext&lt;/code&gt;, &lt;code&gt;isolate&lt;/code&gt;, and &lt;code&gt;isolate-override&lt;/code&gt; keywords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e61674d4e1b15b69f37b60416ce8bcb44eb402" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;ruby&lt;/code&gt;, &lt;code&gt;ruby-base&lt;/code&gt;, &lt;code&gt;ruby-text&lt;/code&gt;, &lt;code&gt;ruby-base-container&lt;/code&gt;, and &lt;code&gt;ruby-text-container&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72ddbe18647a0888dfb6339303c0bbf89d15c1e" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;run-in&lt;/code&gt;, &lt;code&gt;flow&lt;/code&gt;, &lt;code&gt;flow-root&lt;/code&gt;, &lt;code&gt;contents&lt;/code&gt; and multi-keyword values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f7b79035f794fd6e3f4c1cb365758350ea7dc3" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;run-in&lt;/code&gt;, &lt;code&gt;flow&lt;/code&gt;, &lt;code&gt;flow-root&lt;/code&gt;, &lt;code&gt;contents&lt;/code&gt;, and multi-keyword values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9712f4644f8c1a3e4e3cf7be262228652602987a" translate="yes" xml:space="preserve">
          <source>Added in Media Queries Level 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c52289372683b4415065fafeb190a9520816094" translate="yes" xml:space="preserve">
          <source>Added in Media Queries Level 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05fd123f7a1ff6aa4c6e79bddd164cc445ceeb2" translate="yes" xml:space="preserve">
          <source>Added support for &lt;a href=&quot;string&quot;&gt;&lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt;&lt;/a&gt; to denote the url of a stylesheet,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e46b50e54b920b4e7c14bdfa03270d92589e21" translate="yes" xml:space="preserve">
          <source>Added support for &lt;code&gt;font-stretch&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412ed81ec099daa7bddf261b8bf80458c12cdc2a" translate="yes" xml:space="preserve">
          <source>Added support for keywords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb49c35d47a0d3db35edfc11bdb8f85c97c75372" translate="yes" xml:space="preserve">
          <source>Added the &lt;a href=&quot;revert&quot;&gt;&lt;code&gt;revert&lt;/code&gt;&lt;/a&gt; keyword, which allows rolling a property back a cascade level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3cf4f78d473c57f1ac7458fdaf7679d6f08e437" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f469affaac8d669fa661e2b55bb1a1ebfbedaa" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;logical&lt;/code&gt; keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52cc01dab52bd42514b9c1b51c9b1a07b160dde9" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;max-content&lt;/code&gt;, &lt;code&gt;min-content&lt;/code&gt;, &lt;code&gt;available&lt;/code&gt;, &lt;code&gt;fit-content&lt;/code&gt;, &lt;code&gt;border-box&lt;/code&gt;, &lt;code&gt;content-box&lt;/code&gt; keywords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7fa81dd1ad3a00a6865cf0ad05cc99c1a9c2abd" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;revert&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8062ba65f0fb4fec8e3b78f2f13131ec9b9b483" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;, and &lt;code&gt;match-parent&lt;/code&gt; values. Changed the unnamed initial value to &lt;code&gt;start&lt;/code&gt; (which it was).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29936c9bddcd2a5fcb12c598fe6f87f62fbdfaf" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;||&lt;/code&gt; column combinator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0403dfb15fb4a8efe1a641e17feb8c3bfb0e343d" translate="yes" xml:space="preserve">
          <source>Added the constraint that values' meaning must be constant inside a document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb9c890399f41cb96bec9bb5ba6e07b096c687f" translate="yes" xml:space="preserve">
          <source>Added the flexible box model values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f93097916633633ffed3bcdbde2a6999724ded" translate="yes" xml:space="preserve">
          <source>Added the grid box model values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e56b0156d8d8219358ca88c956956cd19f081c08" translate="yes" xml:space="preserve">
          <source>Added the table model values and &lt;code&gt;inline-block&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95415603d48cecc9d1ec3bc31f46398e61b1217" translate="yes" xml:space="preserve">
          <source>Added the table model values and &lt;code&gt;inline-block&lt;em&gt;.&lt;/em&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d8158ebd4ded52a4c8081fe9e5d2f67a19d808" translate="yes" xml:space="preserve">
          <source>Added the values &lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt; and &lt;code&gt;fade&lt;/code&gt; and the &lt;code&gt;fade()&lt;/code&gt; function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67cff8c43d6a3224a8fd6afda93728a28158ab6" translate="yes" xml:space="preserve">
          <source>Added two optional parameters; can be used on all properties; may return other values than &lt;a href=&quot;string&quot;&gt;&lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt;&lt;/a&gt;. These changes are experimental and may be dropped during the CR phase if browser support is too small.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc54a91c9097d7b1ce8f6968c9ac5e0f5c72c5b1" translate="yes" xml:space="preserve">
          <source>Adding &lt;code&gt;box-decoration-break: clone&lt;/code&gt; to the above styles:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b8eb048c34af938234ab88d2e28afe2cba211e" translate="yes" xml:space="preserve">
          <source>Adding an &lt;code&gt;i&lt;/code&gt; (or &lt;code&gt;I&lt;/code&gt;) before the closing bracket causes the value to be compared case-insensitively (for characters within the ASCII range).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7492ba19f0af053f0041af9b0dbc8e0ef417fb7" translate="yes" xml:space="preserve">
          <source>Adding an &lt;code&gt;s&lt;/code&gt; (or &lt;code&gt;S&lt;/code&gt;) before the closing bracket causes the value to be compared case-sensitively (for characters within the ASCII range).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d7fd1b91d7df605690d03c6210542024e59e97" translate="yes" xml:space="preserve">
          <source>Adding another keyframe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88290d57f320987938048b227ed9e0170ae021a6" translate="yes" xml:space="preserve">
          <source>Adding quotation marks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99eca333668e2efab5455e207e091db640eab15" translate="yes" xml:space="preserve">
          <source>Adding the &lt;a href=&quot;../flex-direction&quot;&gt;&lt;code&gt;flex-direction&lt;/code&gt;&lt;/a&gt; property to the flex container allows us to change the direction in which our flex items display. Setting &lt;code&gt;flex-direction: row-reverse&lt;/code&gt; will keep the items displaying along the row, however the start and end lines are switched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88de402208ae9aa1e35ceb94f0d64fbed88575f" translate="yes" xml:space="preserve">
          <source>Adding the CSS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9efe98537453deed728ab9eb73823d5e49361d6" translate="yes" xml:space="preserve">
          <source>Adding the animation event listeners</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78cf4a5b6b97e3096f49b86d5b88d012a829dcc" translate="yes" xml:space="preserve">
          <source>Addition of several keywords and the positioning syntax for &lt;code&gt;url()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e372ea45fd570b0859356c6972474a58f8da3b86" translate="yes" xml:space="preserve">
          <source>Addition.</source>
          <target state="translated">Addition.</target>
        </trans-unit>
        <trans-unit id="cc8a38b830190f14499e2a8e45ecad918b5bbd46" translate="yes" xml:space="preserve">
          <source>Additionally, if a spanning element appears later in the content it can cause unexpected or unwanted behaviour when there is not enough content to create columns after the spanner. Use spanning carefully and test at various breakpoints to make sure you get the intended effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9934f73cf1e10daff68bab3e9ff9036590cce8" translate="yes" xml:space="preserve">
          <source>Additive example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21376b029abf73128c19847c42ca8406cdeff4a5" translate="yes" xml:space="preserve">
          <source>Addressing each item individually we can place all four items spanning row and column tracks. Note that we can leave cells empty if we wish. One of the very nice things about Grid Layout is this ability to have white space in our designs without having to push things around using margins to prevent floats from rising up into the space we have left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd47398fc2841716f64e4acb158ea81054471208" translate="yes" xml:space="preserve">
          <source>Adds 3D transform functions to the CSS Transforms standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b5c79a34311529c3f6a03166461b3772bca168" translate="yes" xml:space="preserve">
          <source>Adds 3D transform functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074efb98ea8afc6b6691125d16ef35536369320a" translate="yes" xml:space="preserve">
          <source>Adds 4- and 8-digit hex color values, where the last digit(s) represents the alpha value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fde74986d758f7e15ab51d5b9e7da6d4399f18" translate="yes" xml:space="preserve">
          <source>Adds &lt;a href=&quot;element()&quot;&gt;&lt;code&gt;element()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/image()&quot;&gt;&lt;code&gt;image()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/conic-gradient()&quot;&gt;&lt;code&gt;conic-gradient()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/repeating-conic-gradient()&quot;&gt;&lt;code&gt;repeating-conic-gradient()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/image-resolution&quot;&gt;&lt;code&gt;image-resolution&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920900775c5004629fd683381e79aebc1203f840" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;font-feature-settings&lt;/code&gt; (and related higher-level properties)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8bac5788f86d3ce2845d286b1d2b33971e6922f" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;font-variation-settings&lt;/code&gt; (and related higher-level properties) and &lt;code&gt;font-optical-sizing&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab99306f1dc364dfd7044a0dca673537342c94e1" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;hidden&lt;/code&gt; keyword value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d720c4668d18015506d6cb312809094e536ae311" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;hwb()&lt;/code&gt;, &lt;code&gt;device-cmyk()&lt;/code&gt;, and &lt;code&gt;color()&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a82e45565f5e420442ad08b77de2a6d9470faaf2" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;of &amp;lt;selector&amp;gt;&lt;/code&gt; syntax and specifies that matching elements are not required to have a parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ab35855189c53226bb283fc23c14a7c1a63440" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;prefers-reduced-motion&lt;/code&gt;, &lt;code&gt;prefers-reduced-transparency&lt;/code&gt;, &lt;code&gt;prefers-contrast&lt;/code&gt;, and &lt;code&gt;prefers-color-scheme&lt;/code&gt; media features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37598243ddd70a84efd734259a505f183368d59b" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;rebeccapurple&lt;/code&gt;, four- (&lt;code&gt;#RGBA&lt;/code&gt;) and eight-digit (&lt;code&gt;#RRGGBBAA&lt;/code&gt;) hexadecimal notations, &lt;code&gt;rgba()&lt;/code&gt; and &lt;code&gt;hsla()&lt;/code&gt; as aliases of &lt;code&gt;rgb()&lt;/code&gt; and &lt;code&gt;hsl()&lt;/code&gt; (both with identical parameter syntax), space-separated function parameters as an alternative to commas, percentages for alpha values, and angles for the hue component in &lt;code&gt;hsl()&lt;/code&gt; colors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c3c281d83de3b089386d614398c686b51723da" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;scripting&lt;/code&gt;, &lt;code&gt;pointer&lt;/code&gt;, &lt;code&gt;hover&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;overflow-block&lt;/code&gt;, and &lt;code&gt;overflow-inline&lt;/code&gt; media features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d2d0f82abd98a11f92b4045ad309b0f3fd3861" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;sticky&lt;/code&gt; property value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b834caf9d2a43753ba0d17820d48e15ea06417b7" translate="yes" xml:space="preserve">
          <source>Adds behavior for sticky positioning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1364c309dc80dc4b2f7d6e53c143f382b3c40d40" translate="yes" xml:space="preserve">
          <source>Adds color keyword &lt;code&gt;rebeccapurple&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867c61cb515cdc58c95108fadfed606ef8f3dd41" translate="yes" xml:space="preserve">
          <source>Adds commaless syntaxes for the &lt;code&gt;rgb()&lt;/code&gt;, &lt;code&gt;rgba()&lt;/code&gt;, &lt;code&gt;hsl()&lt;/code&gt;, and &lt;code&gt;hsla()&lt;/code&gt; functions. Allows alpha values in &lt;code&gt;rgb()&lt;/code&gt; and &lt;code&gt;hsl()&lt;/code&gt;, turning &lt;code&gt;rgba()&lt;/code&gt; and &lt;code&gt;hsla()&lt;/code&gt; into (deprecated) aliases for them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade4536cacd51c9fa0dbb2a2d3a8bdfccc4fea8f" translate="yes" xml:space="preserve">
          <source>Adds conic-gradient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931f6aa16fc734127b52f375a22d274ef12db700" translate="yes" xml:space="preserve">
          <source>Adds crop and/or registration marks to the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4765ba1436bab008f404cbc8260b489024347b3b" translate="yes" xml:space="preserve">
          <source>Adds interpolation hints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8732d65a6c59619b97f61925e0f58f5d662fe6a" translate="yes" xml:space="preserve">
          <source>Adds intrinsic sizes via the keywords &lt;code&gt;min-content&lt;/code&gt;, &lt;code&gt;max-content&lt;/code&gt;, &lt;code&gt;fill-available&lt;/code&gt;, and &lt;code&gt;fit-content&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaab284449ff547b9f984ec82884ca7c23425aae" translate="yes" xml:space="preserve">
          <source>Adds modifier for ASCII case-sensitive and case-insensitive attribute value selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b00436b6684a1093225913a0caa93e48c5bba9ec" translate="yes" xml:space="preserve">
          <source>Adds new generic font families, specifically: &lt;code&gt;system-ui&lt;/code&gt;, &lt;code&gt;emoji&lt;/code&gt;, &lt;code&gt;math&lt;/code&gt;, and &lt;code&gt;fangsong&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39cad353d9c2243f8bb29ddb06e81ed5eaebdb6e" translate="yes" xml:space="preserve">
          <source>Adds new sizing keywords for width and height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1980863e3027422a25a7eb84be3381b15d1d6fff" translate="yes" xml:space="preserve">
          <source>Adds oblique keyword with angle value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f4fd34facdde2db02d14af3e638ddc74abdba2c" translate="yes" xml:space="preserve">
          <source>Adds support for multiple background images, the two-value syntax allowing distinct repetition behavior for the horizontal and vertical directions, the &lt;code&gt;space&lt;/code&gt; and &lt;code&gt;round&lt;/code&gt; keywords, and for backgrounds on inline-level elements by precisely defining the background painting area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171f68928327d3c7cee74a8581471c6b04e7752b" translate="yes" xml:space="preserve">
          <source>Adds support for multiple backgrounds and the four-value syntax. Modifies the percentage definition to match implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d307bad75eecf729886e57753e2bc0e360e6de" translate="yes" xml:space="preserve">
          <source>Adds support for the &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; values and precises on which element it applies to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4437e3dbb49727c828414ff3589bf4e8e4e86e" translate="yes" xml:space="preserve">
          <source>Adds the &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; value and allows it to be applied to elements with a &lt;a href=&quot;display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; type of &lt;code&gt;table-cell&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5408355a4b1e84e22b1efe1778313a810dc2e65d" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; syntax for variable fonts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05917bfdcc50dbb90b30c6d568a1d5738d2374d1" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;:recto&lt;/code&gt; and &lt;code&gt;:verso&lt;/code&gt; page selectors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca9f90258ded46a530266dcb6a80bc4a0287728f" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;auto&lt;/code&gt; keyword and uses it as the initial value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77cae0dc8ca4a9497963fd6781c006248f13fab8" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;ch&lt;/code&gt;, &lt;code&gt;rem&lt;/code&gt;, &lt;code&gt;vw&lt;/code&gt;, &lt;code&gt;vh&lt;/code&gt;, &lt;code&gt;vmin&lt;/code&gt;, &lt;code&gt;vmax&lt;/code&gt;, and &lt;code&gt;Q&lt;/code&gt; units.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3246cf6160cf6e0ae7cf07ce32d82026ae160af6" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;dppx&lt;/code&gt; unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2d30de1a4066eab2e07082da8fec97fe29449b" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;hanging&lt;/code&gt; and &lt;code&gt;each-line&lt;/code&gt; keywords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0462f73439aa3f8ef3bf9f3565940617e0366bf6" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;max-content&lt;/code&gt;, &lt;code&gt;min-content&lt;/code&gt;, &lt;code&gt;fit-content&lt;/code&gt;, and &lt;code&gt;fill-available&lt;/code&gt; keywords. (Both CSS3 Box and CSS3 Writing Modes drafts used to define these keywords, but are superseded by this spec.&lt;em&gt;)&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d8bb07af6ff619921dca27f5e93cc5fbec8c61" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;max-content&lt;/code&gt;, &lt;code&gt;min-content&lt;/code&gt;, &lt;code&gt;fit-content&lt;/code&gt;, and &lt;code&gt;fill-available&lt;/code&gt; keywords.(Both CSS3 Box and CSS3 Writing Modes drafts used to define these keywords, but are superseded by this spec.&lt;em&gt;)&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986446d07d40bf19d5cd50d7ce73e521432273bc" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;orange&lt;/code&gt; color and the system colors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6e63023b15649545d6dcc5612fbbee83fafb92" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;orange&lt;/code&gt; keyword and system colors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebe87cbb314369d780b77625c2da684d1b240a9" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;recto&lt;/code&gt; and &lt;code&gt;verso&lt;/code&gt; keywords. Changes the media type of this property from &lt;code&gt;paged&lt;/code&gt; to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Media/Visual&quot;&gt;&lt;code&gt;visual&lt;/code&gt;&lt;/a&gt;. Defines the breaking algorithm with different kinds of breaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccaeeb90e080535dc4c58e465357ea85a4cd5498" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;selector()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d910f9fbe8673e5b03962dac67a0fc7b0c445ab" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;vi&lt;/code&gt;, &lt;code&gt;vb&lt;/code&gt;, &lt;code&gt;ic&lt;/code&gt;, &lt;code&gt;lh&lt;/code&gt;, and &lt;code&gt;rlh&lt;/code&gt; units.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ecad26183608bdf8f9941c8e7179e517c9da22" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;x&lt;/code&gt; unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1e2ed079a6da7ec76587389a1b60538d13bfb3" translate="yes" xml:space="preserve">
          <source>Adds the [ first | last ]? baseline, self-start, self-end, start, end, left, right, unsafe | safe values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e6a4cc291fa56a7e8ae06a0145860db16273df" translate="yes" xml:space="preserve">
          <source>Adds the [ first | last ]? baseline, start, end, left, right, unsafe | safe values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a2a9e1cdf51e77b4fb3d3ea34780f890f25354" translate="yes" xml:space="preserve">
          <source>Adds the ability to specify an angle after &lt;code&gt;oblique&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574443948fbb065d26cd22c749903db366000195" translate="yes" xml:space="preserve">
          <source>Adds the double ampersand combinator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013f136f8795f8d63080736f8c807f2cf9b25376" translate="yes" xml:space="preserve">
          <source>Adds the hash mark multiplier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37296a4298fc6e0f186dd2e6714344ae79fbcd6" translate="yes" xml:space="preserve">
          <source>Adds the values &lt;code&gt;block&lt;/code&gt; and &lt;code&gt;inline&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79dfe976d8f9d498362eb7657d3ed6e8e18694e8" translate="yes" xml:space="preserve">
          <source>Adds the values &lt;code&gt;inline-start&lt;/code&gt; and &lt;code&gt;inline-end&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0a042faf5d0c93b9e9bcc1fa1239b2601071ae" translate="yes" xml:space="preserve">
          <source>Adds the values &lt;code&gt;inline-start&lt;/code&gt; and &lt;code&gt;inline-end&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82b6fec3925f05f43967438e0855a5a38c0c01c" translate="yes" xml:space="preserve">
          <source>Adds the values &lt;code&gt;recto&lt;/code&gt; and &lt;code&gt;verso&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20c20688016a2b7d7ebf040d3446c9d0c0fcf07" translate="yes" xml:space="preserve">
          <source>Adds wildcard language matching and comma-separated list of languages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34b505e7f5f072e35f0356faf0d850885d3c90a" translate="yes" xml:space="preserve">
          <source>Adjacent cells have distinct borders (the separated-border table rendering model).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f62a5c124c787df9134b4fb10710e7d9beb114" translate="yes" xml:space="preserve">
          <source>Adjacent cells have shared borders (the collapsed-border table rendering model).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0674b988ea9177c623b6f231d35c113ecb0fd50f" translate="yes" xml:space="preserve">
          <source>Adjacent sibling combinator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f0c44ac72c30dd4532ece6925cbf7a3c630477" translate="yes" xml:space="preserve">
          <source>Adjacent sibling selectors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c337633fa1eb4af9d32d12cce15a4b5408f5d7" translate="yes" xml:space="preserve">
          <source>Adjacent siblings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64766bfbe66b8eeb711310f976f3acd245b3be0d" translate="yes" xml:space="preserve">
          <source>Adjusts the contrast of the input. A value of &lt;code&gt;0%&lt;/code&gt; will create an image that is completely gray. A value of &lt;code&gt;100%&lt;/code&gt; leaves the input unchanged. Values of amount over &lt;code&gt;100%&lt;/code&gt; are allowed, providing results with more contrast. The lacuna value for interpolation is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c137d821a766732ae98e3950160b346be5177e" translate="yes" xml:space="preserve">
          <source>Adobe's Syntax for OpenType features in CSS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f2ba7887c52b905360ff0ace5a93e2ca7123a0" translate="yes" xml:space="preserve">
          <source>After Firefox 3.6, the &lt;code&gt;overflow&lt;/code&gt; property is correctly applied to table group elements (&lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;tfoot&amp;gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee06c74dc2d5d023babb7526c7ece0d06367bec" translate="yes" xml:space="preserve">
          <source>After a while, thinking about start and end rather than left and right becomes natural, and will be useful to you when dealing with other layout methods such as CSS Grid Layout which follow the same patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e5c3198b587d6c99d31fa38d36d94fd4752fde" translate="yes" xml:space="preserve">
          <source>After all variables are expanded, &lt;code&gt;widthC&lt;/code&gt;'s value will be &lt;code&gt;calc( calc( 100px / 2) / 2)&lt;/code&gt;, then when it's assigned to &lt;code&gt;.foo&lt;/code&gt;'s width property, all inner &lt;code&gt;calc()&lt;/code&gt;s (no matter how deeply nested) will be flattened to just parentheses, so the &lt;code&gt;width&lt;/code&gt; property's value will be eventually &lt;code&gt;calc( ( 100px / 2) / 2)&lt;/code&gt;, i.e. &lt;code&gt;25px&lt;/code&gt;. In short: a &lt;code&gt;calc()&lt;/code&gt; inside of a &lt;code&gt;calc()&lt;/code&gt; is identical to just parentheses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7420c84765cb6084f9595db38a4a772d2871d58f" translate="yes" xml:space="preserve">
          <source>After reading this article you should have an understanding of the basic features of Flexbox. In the next article we will look at &lt;a href=&quot;relationship_of_flexbox_to_other_layout_methods&quot;&gt;how this specification relates to other parts of CSS&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1f663e134f64b3e75db8481edee18a5e1a5c9d" translate="yes" xml:space="preserve">
          <source>After setting up a mobile layout we will get this single column at all screen sizes, we can now add a &lt;a href=&quot;../media_queries&quot;&gt;media query&lt;/a&gt; and redefine our layout for the circumstance of having enough screen real estate to show two columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa0e671e10b8313ff5d91129e6771a9b95c74d65" translate="yes" xml:space="preserve">
          <source>After that come the classes &lt;code&gt;&quot;horizontal&quot;&lt;/code&gt; and &lt;code&gt;&quot;vertical&quot;&lt;/code&gt;, which add the &lt;a href=&quot;writing-mode&quot;&gt;&lt;code&gt;writing-mode&lt;/code&gt;&lt;/a&gt; property to the box, with the value set to &lt;code&gt;horizontal-tb&lt;/code&gt; or &lt;code&gt;vertical-rl&lt;/code&gt; depending on which class is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344b9d97436f3f2d2f3ec1a5972c5ce9a479bc3a" translate="yes" xml:space="preserve">
          <source>After the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; has finished its calculations, every CSS property has a used value. The used values of dimensions (e.g., &lt;a href=&quot;width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;line-height&quot;&gt;&lt;code&gt;line-height&lt;/code&gt;&lt;/a&gt;) are in pixels. The used values of shorthand properties (e.g., &lt;a href=&quot;background&quot;&gt;&lt;code&gt;background&lt;/code&gt;&lt;/a&gt;) are consistent with those of their component properties (e.g., &lt;a href=&quot;background-color&quot;&gt;&lt;code&gt;background-color&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;background-size&quot;&gt;&lt;code&gt;background-size&lt;/code&gt;&lt;/a&gt;) and with &lt;a href=&quot;position&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a80103bb502cb47c7ee4ce71dfed10a72a4584" translate="yes" xml:space="preserve">
          <source>After your content has finished altering styles, it may find itself in a situation where it needs to restore them to a known state. This may happen in cases of animations, theme changes, and so forth. The CSS property &lt;a href=&quot;all&quot;&gt;&lt;code&gt;all&lt;/code&gt;&lt;/a&gt; lets you quickly set (almost) everything in CSS back to a known state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8657524302662f6e643524af5d1e522dec99f7c" translate="yes" xml:space="preserve">
          <source>Again like linear gradients, you can position each radial color stop with a percentage or absolute length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b05035c358b8e697fe4a14016faa1e627b10d33" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;dppx&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a875556f7659f54950490c283f708000edcc41f" translate="yes" xml:space="preserve">
          <source>Aligning Items in a Flex Container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52cc0dac7621a9bb6207255a1381145beda88469" translate="yes" xml:space="preserve">
          <source>Aligning content on the cross axis &amp;mdash; the align-content property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612dc30a96f91fab47a7516ce6e1385b9dd12a8e" translate="yes" xml:space="preserve">
          <source>Aligning content on the main axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca32b2b6a25bb8b6f2121af80efeaf22ac1f2249" translate="yes" xml:space="preserve">
          <source>Aligning in these layout methods today</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de8c16f39b029ddf538662adc2ccfa05f91dc20" translate="yes" xml:space="preserve">
          <source>Aligning items in a flex container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893050e2e25748a2ca3bb18f8fafcc202804e8a0" translate="yes" xml:space="preserve">
          <source>Aligning items on the Block Axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822d7b2e21dfbf14f1d09b2bbc7d2accecfc6b7b" translate="yes" xml:space="preserve">
          <source>Aligning one item with &lt;code&gt;align-self&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473351f396c448197dafbbb67115165169058774" translate="yes" xml:space="preserve">
          <source>Aligning the grid tracks on the block axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a202f40f5681d283c8a929988c5005c4d92d7cc" translate="yes" xml:space="preserve">
          <source>Alignment Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460e7c758e828e64e8b0196e225a90995fc63dfe" translate="yes" xml:space="preserve">
          <source>Alignment and Writing Modes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71155dec78874a126293f18f903bae03eb83ef0" translate="yes" xml:space="preserve">
          <source>Alignment and auto margins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f4154a396cead7896dab1e0ce2f0a31d99da67" translate="yes" xml:space="preserve">
          <source>Alignment and flex-direction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f587e6f10cb17a6dd83f73eea7c891530759b2ce" translate="yes" xml:space="preserve">
          <source>Alignment container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03740dde3a9f1948f7f6b56b394886fc189b8ab9" translate="yes" xml:space="preserve">
          <source>Alignment control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121293f773f237d2438b77e9e9ea01f28ec67763" translate="yes" xml:space="preserve">
          <source>Alignment in CSS Grids</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170b62ebea42e875a434b49d5a128a9a88e67a44" translate="yes" xml:space="preserve">
          <source>Alignment in flexbox</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36184497a23f6a18cbb40eff95f86fe404b46112" translate="yes" xml:space="preserve">
          <source>Alignment in grid layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da80bb5b31eb2a9fa64c261e12b4c4c06418e58" translate="yes" xml:space="preserve">
          <source>Alignment is linked to writing modes in that when we align an item we do not consider whether we are aligning it to the physical dimensions of top, right, bottom and left. Instead we describe alignment in terms of the start and end of the particular dimension we are working with. This ensures that alignment works in the same way whichever writing mode the document has.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59a3824b4cbcd0e3d3a4bca960f27e954aeb624" translate="yes" xml:space="preserve">
          <source>Alignment of blocks horizontally prior to flexbox was typically achieved by way of setting auto margins on the block. A &lt;a href=&quot;../margin&quot;&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;auto&lt;/code&gt; will absorb all available space in that dimension, therefore setting a left and right margin of auto, you can push a block into the center:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8636343b2ba3c555f39890d3ede762ef4efa965c" translate="yes" xml:space="preserve">
          <source>Alignment subject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c7fbeca16d1823a438fb3b0a4810e2cbb145e9" translate="yes" xml:space="preserve">
          <source>Alignment, justification and distribution of free space between items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64e08b6b2713e647cf9c351f2236154f3ef4af0" translate="yes" xml:space="preserve">
          <source>Aligns the baseline of the cell with the baseline of all other cells in the row that are baseline-aligned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753fffef303e0799e7c9cb6e0c32aab8b84242aa" translate="yes" xml:space="preserve">
          <source>Aligns the baseline of the element to the given length above the baseline of its parent. A negative value is allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93bf9c9a5d90d4ee252076c006d6cef0d012a6fa" translate="yes" xml:space="preserve">
          <source>Aligns the baseline of the element to the given percentage above the baseline of its parent, with the value being a percentage of the &lt;a href=&quot;line-height&quot;&gt;&lt;code&gt;line-height&lt;/code&gt;&lt;/a&gt; property. A negative value is allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef14c5e05c63df27d3ee5e609109658f7058ad94" translate="yes" xml:space="preserve">
          <source>Aligns the baseline of the element with the baseline of its parent. The baseline of some &lt;a href=&quot;replaced_element&quot;&gt;replaced elements&lt;/a&gt;, like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea&quot;&gt;&lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;&lt;/a&gt;, is not specified by the HTML specification, meaning that their behavior with this keyword may vary between browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3dd30c9af30ec6ec924c8b679fb87fd06d24f0d" translate="yes" xml:space="preserve">
          <source>Aligns the baseline of the element with the subscript-baseline of its parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154914fa99c26a7518b63a32889d723df457d4c5" translate="yes" xml:space="preserve">
          <source>Aligns the baseline of the element with the superscript-baseline of its parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d62057fc39a667386c05a5f1cf35c5a4ee1384" translate="yes" xml:space="preserve">
          <source>Aligns the bottom edge of the background image with the bottom edge of the background position layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a79392b538b2479c0272282c109a927eae5390" translate="yes" xml:space="preserve">
          <source>Aligns the bottom of the element and its descendants with the bottom of the entire line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720142255d66740edf21ea75986c1581b10e9dc9" translate="yes" xml:space="preserve">
          <source>Aligns the bottom of the element with the bottom of the parent element's font.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48f1484f0af7624f7ad3dbb1077119c67222f83" translate="yes" xml:space="preserve">
          <source>Aligns the bottom padding edge of the cell with the bottom of the row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368e4b473dff003f0212b0da74ad908f9dbeab08" translate="yes" xml:space="preserve">
          <source>Aligns the center of the background image with the center of the background position layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7223a34b65e8c205a59a71769251d5a81c1e7d4d" translate="yes" xml:space="preserve">
          <source>Aligns the items to be flush with the edge of the alignment container corresponding to the item's end side in the cross axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad77d2dc83bd84e6342c267d9089aa49ab82cbef" translate="yes" xml:space="preserve">
          <source>Aligns the items to be flush with the edge of the alignment container corresponding to the item's start side in the cross axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748acef2163c20f7ed28606ddb221da5669bc451" translate="yes" xml:space="preserve">
          <source>Aligns the left edge of the background image with the left edge of the background position layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282be5d4ff56bea130c4537691e1465a6874b813" translate="yes" xml:space="preserve">
          <source>Aligns the middle of the element with the baseline plus half the x-height of the parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5522a857ebc558e11d9ca2ca6e1195ca962b5e04" translate="yes" xml:space="preserve">
          <source>Aligns the right edge of the background image with the right edge of the background position layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9c5084e65ce2bcbf8e0aa13311b1388507a584" translate="yes" xml:space="preserve">
          <source>Aligns the top edge of the background image with the top edge of the background position layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa14dd26a263c90ee34001674a5a4fc90c9f1032" translate="yes" xml:space="preserve">
          <source>Aligns the top of the element and its descendants with the top of the entire line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0829fc8e262f02b88513eff3ff9df6c8d0e6faf9" translate="yes" xml:space="preserve">
          <source>Aligns the top of the element with the top of the parent element's font.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab7c984a45256d695755f0c77d65cb9e39bf34e" translate="yes" xml:space="preserve">
          <source>Aligns the top padding edge of the cell with the top of the row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe0841ed51294bd07776fec6c8cb185332dbf85a" translate="yes" xml:space="preserve">
          <source>Aligns the vertical center of the background image with the vertical center of the background position layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12402508d25c4b8e41ad00679959dddb92022de4" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;css_fonts&quot;&gt;font properties&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5cf9bee62e3d9e48fd62f6dad45ee05a71d510f" translate="yes" xml:space="preserve">
          <source>All About The Containing Block</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227fa9837299aa87ea6a6bba8efd488b148a3351" translate="yes" xml:space="preserve">
          <source>All CSS properties accept the keywords &lt;code&gt;inherit&lt;/code&gt;, &lt;code&gt;initial&lt;/code&gt; and &lt;code&gt;unset&lt;/code&gt;, that are defined throughout CSS. They are not shown in the value definition, and are implicitly defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b25f175a2054e1ebcb696375de34b0ec057b67" translate="yes" xml:space="preserve">
          <source>All allowable properties except &lt;a href=&quot;animation-name&quot;&gt;&lt;code&gt;animation-name&lt;/code&gt;&lt;/a&gt; apply to a determinate progress bar. Only &lt;code&gt;animation-name&lt;/code&gt; applies to an indeterminate one. (A progress bar is determinate if it has a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress#attr-value&quot;&gt;value&lt;/a&gt;&lt;/code&gt; attribute set; otherwise it is indeterminate. An indeterminate progress bar can be selected with the &lt;a href=&quot;:indeterminate&quot;&gt;&lt;code&gt;:indeterminate&lt;/code&gt;&lt;/a&gt; pseudo-class.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf9413bbbf65021253975ffaa60cf733ca26527" translate="yes" xml:space="preserve">
          <source>All background properties : &lt;a href=&quot;background&quot;&gt;&lt;code&gt;background&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;background-color&quot;&gt;&lt;code&gt;background-color&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;background-image&quot;&gt;&lt;code&gt;background-image&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;background-clip&quot;&gt;&lt;code&gt;background-clip&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;background-origin&quot;&gt;&lt;code&gt;background-origin&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;background-position&quot;&gt;&lt;code&gt;background-position&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;background-repeat&quot;&gt;&lt;code&gt;background-repeat&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;background-size&quot;&gt;&lt;code&gt;background-size&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;background-attachment&quot;&gt;&lt;code&gt;background-attachment&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;background-blend-mode&quot;&gt;&lt;code&gt;background-blend-mode&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735daabc79a77b0c991703c67d1c33740417baf9" translate="yes" xml:space="preserve">
          <source>All background-related properties: &lt;a href=&quot;background-color&quot;&gt;&lt;code&gt;background-color&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;background-clip&quot;&gt;&lt;code&gt;background-clip&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;background-image&quot;&gt;&lt;code&gt;background-image&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;background-origin&quot;&gt;&lt;code&gt;background-origin&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;background-position&quot;&gt;&lt;code&gt;background-position&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;background-repeat&quot;&gt;&lt;code&gt;background-repeat&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;background-size&quot;&gt;&lt;code&gt;background-size&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;background-attachment&quot;&gt;&lt;code&gt;background-attachment&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;background-blend-mode&quot;&gt;&lt;code&gt;background-blend-mode&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3647c2a0c41e5fcc1ea2bcda0c3510044e84dc" translate="yes" xml:space="preserve">
          <source>All border properties: the shorthands &lt;a href=&quot;border&quot;&gt;&lt;code&gt;border&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-style&quot;&gt;&lt;code&gt;border-style&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-color&quot;&gt;&lt;code&gt;border-color&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-width&quot;&gt;&lt;code&gt;border-width&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-radius&quot;&gt;&lt;code&gt;border-radius&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-image&quot;&gt;&lt;code&gt;border-image&lt;/code&gt;&lt;/a&gt;, and the longhands properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52da5c465ee92d8512240d35bde8f17959f8d452" translate="yes" xml:space="preserve">
          <source>All elements are in-flow apart from:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c99329994595a1f1f5879fa4ac37d21ece0a2e4" translate="yes" xml:space="preserve">
          <source>All elements support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca9a19ea96531b3bc68a77046ea76da58859b32" translate="yes" xml:space="preserve">
          <source>All elements. In SVG, it applies to container elements, graphics elements, and graphics referencing elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6fd1bc27f0853c4688a47047d147c881b5bee0d" translate="yes" xml:space="preserve">
          <source>All elements. In SVG, it applies to container elements, graphics elements, and graphics referencing elements.. It also applies to &lt;a href=&quot;::first-letter&quot;&gt;&lt;code&gt;::first-letter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;::first-line&quot;&gt;&lt;code&gt;::first-line&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696453ba5c77c72b82643e0d53bb2509d58efda0" translate="yes" xml:space="preserve">
          <source>All flex items are aligned such that their &lt;a href=&quot;https://drafts.csswg.org/css-flexbox-1/#flex-baselines&quot;&gt;flex container baselines&lt;/a&gt; align. The item with the largest distance between its cross-start margin edge and its baseline is flushed with the cross-start edge of the line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f40d3b23d20065f69c2f3a4ed5b33e4314b7d9c" translate="yes" xml:space="preserve">
          <source>All font properties : &lt;a href=&quot;font&quot;&gt;&lt;code&gt;font&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-style&quot;&gt;&lt;code&gt;font-style&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-feature-settings&quot;&gt;&lt;code&gt;font-feature-settings&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-kerning&quot;&gt;&lt;code&gt;font-kerning&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-language-override&quot;&gt;&lt;code&gt;font-language-override&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-stretch&quot;&gt;&lt;code&gt;font-stretch&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-synthesis&quot;&gt;&lt;code&gt;font-synthesis&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-variant&quot;&gt;&lt;code&gt;font-variant&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-variant-alternates&quot;&gt;&lt;code&gt;font-variant-alternates&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-variant-caps&quot;&gt;&lt;code&gt;font-variant-caps&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-variant-east-asian&quot;&gt;&lt;code&gt;font-variant-east-asian&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-variant-ligatures&quot;&gt;&lt;code&gt;font-variant-ligatures&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-variant-numeric&quot;&gt;&lt;code&gt;font-variant-numeric&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-variant-position&quot;&gt;&lt;code&gt;font-variant-position&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-weight&quot;&gt;&lt;code&gt;font-weight&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-size&quot;&gt;&lt;code&gt;font-size&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-size-adjust&quot;&gt;&lt;code&gt;font-size-adjust&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;line-height&quot;&gt;&lt;code&gt;line-height&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;font-family&quot;&gt;&lt;code&gt;font-family&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9c68a8105d770d1dc885ce0d429eed8f5bbc0e" translate="yes" xml:space="preserve">
          <source>All font-related properties: &lt;a href=&quot;font&quot;&gt;&lt;code&gt;font&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-kerning&quot;&gt;&lt;code&gt;font-kerning&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-style&quot;&gt;&lt;code&gt;font-style&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-variant&quot;&gt;&lt;code&gt;font-variant&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-variant-numeric&quot;&gt;&lt;code&gt;font-variant-numeric&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-variant-position&quot;&gt;&lt;code&gt;font-variant-position&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-variant-east-asian&quot;&gt;&lt;code&gt;font-variant-east-asian&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-variant-caps&quot;&gt;&lt;code&gt;font-variant-caps&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-variant-alternates&quot;&gt;&lt;code&gt;font-variant-alternates&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-variant-ligatures&quot;&gt;&lt;code&gt;font-variant-ligatures&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-synthesis&quot;&gt;&lt;code&gt;font-synthesis&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-feature-settings&quot;&gt;&lt;code&gt;font-feature-settings&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-language-override&quot;&gt;&lt;code&gt;font-language-override&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-weight&quot;&gt;&lt;code&gt;font-weight&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-size&quot;&gt;&lt;code&gt;font-size&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-size-adjust&quot;&gt;&lt;code&gt;font-size-adjust&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-stretch&quot;&gt;&lt;code&gt;font-stretch&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;font-family&quot;&gt;&lt;code&gt;font-family&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f46135dee98618f2d758576628b895605827589" translate="yes" xml:space="preserve">
          <source>All full-screen elements are placed in a last-in/first out (LIFO) stack in the top layer, which is a special layer in the viewport which is always rendered last (and therefore on top) before drawing the viewport's contents to the screen. The &lt;code&gt;::backdrop&lt;/code&gt; pseudo-element makes it possible to obscure, style, or completely hide everything located below the element when it's the topmost one in the top layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb48c5ea43d016c946b782d883075e6aedd2779e" translate="yes" xml:space="preserve">
          <source>All glyphs have the same fixed width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf52b10d9a6caf339d85527d2e598e165a331d5b" translate="yes" xml:space="preserve">
          <source>All image formats supported by Gecko can be used. This means that you can use PNG, GIF, JPG, BMP, CUR, etc. images. ANI is not supported. An animated PNG or GIF will not create an animated cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3045468ba2e56c8f02d9e28a8bc25e874b26fac0" translate="yes" xml:space="preserve">
          <source>All margin properties: &lt;a href=&quot;margin&quot;&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;margin-top&quot;&gt;&lt;code&gt;margin-top&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;margin-right&quot;&gt;&lt;code&gt;margin-right&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;margin-bottom&quot;&gt;&lt;code&gt;margin-bottom&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;margin-left&quot;&gt;&lt;code&gt;margin-left&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b7b4f0867b71601ece6dcc35532bd8332c62d6" translate="yes" xml:space="preserve">
          <source>All of the available display area is used and no user agent &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/chrome&quot;&gt;chrome&lt;/a&gt; is shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f53c79c5c5556858d9a19cb4868c40e9b2f1055" translate="yes" xml:space="preserve">
          <source>All of the elements can be said to be in flow. Appearing on the page in the order that they are in the source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e2feef824162ebec2aecbba25f876d8bc89dda" translate="yes" xml:space="preserve">
          <source>All other &lt;code&gt;grid&lt;/code&gt; sub-properties are reset to their initial values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2b86964ed2274e3ccb81be3984ded782fdab2f" translate="yes" xml:space="preserve">
          <source>All padding properties: &lt;a href=&quot;padding&quot;&gt;&lt;code&gt;padding&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;padding-top&quot;&gt;&lt;code&gt;padding-top&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;padding-right&quot;&gt;&lt;code&gt;padding-right&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;padding-bottom&quot;&gt;&lt;code&gt;padding-bottom&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;padding-left&quot;&gt;&lt;code&gt;padding-left&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3eadd79daf7ff8a8b260e6911d57d9448f1035" translate="yes" xml:space="preserve">
          <source>All pixels within the displayed area have been inverted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d834436fd87db94d9040a6e5eedebf978366dd56" translate="yes" xml:space="preserve">
          <source>All properties that can transition will.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938990ac2f7e442212c40a478ad9bcb323236648" translate="yes" xml:space="preserve">
          <source>All spacing is skipped: all &lt;a href=&quot;https://www.unicode.org/reports/tr44/#White_Space&quot;&gt;Unicode white space characters&lt;/a&gt; and all word separators, plus any adjacent &lt;a href=&quot;letter-spacing&quot;&gt;&lt;code&gt;letter-spacing&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;word-spacing&quot;&gt;&lt;code&gt;word-spacing&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="496fac9407b8c78b3ab60d48315af8560a7c5e91" translate="yes" xml:space="preserve">
          <source>All the direct children are now grid items. In a web browser, you won&amp;rsquo;t see any difference to how these items are displayed before turning them into a grid, as grid has created a single column grid for the items. At this point, you may find it useful to work with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Page_Inspector/How_to/Examine_grid_layouts&quot;&gt;Grid Inspector&lt;/a&gt;, available as part of Firefox's Developer Tools. If you view this example in Firefox and inspect the grid, you will see a small icon next to the value &lt;code&gt;grid&lt;/code&gt;. Click this and then the grid on this element will be overlaid in the browser window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e78f99d6bd1eb53de54f9694648f2b30c2ba2e" translate="yes" xml:space="preserve">
          <source>Allow floats in &lt;code&gt;rgb()&lt;/code&gt; and &lt;code&gt;rgba()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ab78ce9c12baf69d38def1be065922b711ebef" translate="yes" xml:space="preserve">
          <source>Allowable CSS properties are &lt;a href=&quot;color&quot;&gt;&lt;code&gt;color&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;background-color&quot;&gt;&lt;code&gt;background-color&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-color&quot;&gt;&lt;code&gt;border-color&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-bottom-color&quot;&gt;&lt;code&gt;border-bottom-color&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-left-color&quot;&gt;&lt;code&gt;border-left-color&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-right-color&quot;&gt;&lt;code&gt;border-right-color&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-top-color&quot;&gt;&lt;code&gt;border-top-color&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;column-rule-color&quot;&gt;&lt;code&gt;column-rule-color&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;outline-color&quot;&gt;&lt;code&gt;outline-color&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200f9f9bc8bbbddc82a31c33b85ba108c9c1a21a" translate="yes" xml:space="preserve">
          <source>Allowable Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a7021247a9ded5adf940bb63f9bc358a43ea34" translate="yes" xml:space="preserve">
          <source>Allowable SVG attributes are &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/fill&quot;&gt;fill&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke&quot;&gt;stroke&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d299997f0f115d4d45a87e68605da86384b5d8c4" translate="yes" xml:space="preserve">
          <source>Allowable properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4412292925461a4b371cd162830f25380196a7" translate="yes" xml:space="preserve">
          <source>Allows &lt;code&gt;:hover&lt;/code&gt; to be applied to any pseudo-element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8512c019eb36f5ae74f71c593d0ae88eb430419f" translate="yes" xml:space="preserve">
          <source>Allows animations on properties defined on pseudo-elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4005569fc19e0e4bf26948f7527991fc4accb82d" translate="yes" xml:space="preserve">
          <source>Allows authors to use the algorithm of another counter style, but alter its other aspects. If a counter style rule is using the &lt;code&gt;extends&lt;/code&gt; system, any unspecified descriptors, and their values will be taken from the extended counter style specified. If the specified counter style name in extends, is not a currently defined counter style name, it will instead extend from the decimal counter style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe6363cdbf73bc79a293706d1ba12d6a2ed4e66" translate="yes" xml:space="preserve">
          <source>Allows combination of a keyword with a &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524417c743cc035ff283b9d2f84480a15758e633" translate="yes" xml:space="preserve">
          <source>Allows control over advanced typographic features in OpenType fonts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3109a8e75565b3ce8b3427d3b90ff9e79bb7b8" translate="yes" xml:space="preserve">
          <source>Allows for keyword values and &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; values to be mixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f53e289e6b982cd5d24f9b09c82f50fd5873e5bc" translate="yes" xml:space="preserve">
          <source>Allows low-level control over OpenType or TrueType font variations, by specifying the four letter axis names of the features to vary, along with their variation values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521c5eb98eb407bc7ea25f9f683a21513d237c99" translate="yes" xml:space="preserve">
          <source>Allows the use of &lt;a href=&quot;text-shadow&quot;&gt;&lt;code&gt;text-shadow&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;::first-letter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f01d31092b7645c68aa395d9dd07fddfd34476" translate="yes" xml:space="preserve">
          <source>Allows this property on more elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d842f6b1114339596d6143973c188c69d7b81f" translate="yes" xml:space="preserve">
          <source>Allows transitions on properties defined on pseudo-elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c3a4be9daa6744fcb677f1cba112db5f0f4775" translate="yes" xml:space="preserve">
          <source>Allows typing in the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce091e74a905604e5ab3260909c5ab306deabd27" translate="yes" xml:space="preserve">
          <source>Allows, but does not force, any break (page, column, or region) to be be inserted within the principle box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d1fe422af3a5246c55d0fd9a160a240dd18ab0" translate="yes" xml:space="preserve">
          <source>Allows, but does not force, any break (page, column, or region) to be inserted right after the principal box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036136d7cab3465660c8d1e2858e427f80cf664a" translate="yes" xml:space="preserve">
          <source>Allows, but does not force, any break (page, column, or region) to be inserted right before the principal box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89df071850879609fad8ae3ad3a4e1fa31141e0" translate="yes" xml:space="preserve">
          <source>Along with CSS Shapes support in the browser, Firefox are shipping a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Page_Inspector/How_to/Edit_CSS_shapes&quot;&gt;Shape Path Editor&lt;/a&gt; in the Firefox DevTools. This tool means that you can inspect any shapes on your page, and even change the values in the live page. If your polygon isn&amp;rsquo;t quite right you can use the Shapes Editor to tweak it, then copy the new value back into your CSS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58061aa544398a798e33181a443b15b7746fab16" translate="yes" xml:space="preserve">
          <source>Alpha</source>
          <target state="translated">Alpha</target>
        </trans-unit>
        <trans-unit id="963c271486e0cc4b3fea394191986e145cdd4eb6" translate="yes" xml:space="preserve">
          <source>Alpha channel for hex values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed2d894dedcdb9b61936d1dea1537a85e9f5333" translate="yes" xml:space="preserve">
          <source>Alpha color values (&lt;code&gt;rgba()&lt;/code&gt;, &lt;code&gt;hsla()&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1265072893315d52c772bc726af4116664793bb" translate="yes" xml:space="preserve">
          <source>AlphaImageLoader</source>
          <target state="translated">AlphaImageLoader</target>
        </trans-unit>
        <trans-unit id="5eae87ccb46eb1640fb14aed56106a47956fed0b" translate="yes" xml:space="preserve">
          <source>Alphabetic example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529f2c11ffe0f3c923cd4499a0f96c8c6ab28a12" translate="yes" xml:space="preserve">
          <source>Also consider using Level 4 media queries to improve the user's experience. For example, &lt;code&gt;prefers-reduced-motion&lt;/code&gt; to &lt;a href=&quot;@media/prefers-reduced-motion&quot;&gt;detect if the user has requested that the system minimize the amount of animation&lt;/a&gt; or motion it uses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87efee1cbcb149416893876325a5dd36b2725381" translate="yes" xml:space="preserve">
          <source>Also in this example we are using margins on the flex items to create a gap between items, and a negative margin on the container in order that the items still remain flush with the right and left edges. Until the &lt;code&gt;gap&lt;/code&gt; properties from the Box Alignment specification are implemented in flexbox, we have to use margins in this way if we want to create a gutter between items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76670564ec30dcf5501fd31be7c05636cb2dabf" translate="yes" xml:space="preserve">
          <source>Also note that values within &lt;code&gt;@keyframes&lt;/code&gt; at-rules overwrite all normal values but are overwritten by &lt;code&gt;!important&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58603d81b4d9b42fa210bf4b9b8bf8cf84814d47" translate="yes" xml:space="preserve">
          <source>Also, be aware that other things may increase the visual gap displayed, for example using the space distribution keywords or adding margins to items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d1e41005a3861665ed9e963ddc8a5c3ac539f3" translate="yes" xml:space="preserve">
          <source>Also, having removed the box you cannot then use it to &amp;mdash; for example &amp;mdash; add a background colour behind the nested sub children. If you remove &lt;code&gt;display: contents&lt;/code&gt; in this live example you will see that the direct child we are removing has an orange background colour. This also disappears when the box disappears.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c310db97ff3f303ede430b5b5093d4f041c27c8" translate="yes" xml:space="preserve">
          <source>Also, remember that items on the grid can overlap each other when you place them explicitly like this. That can create some nice effects, however you can also end up with things overlapping incorrectly if you specify the wrong start or end line. The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Page_Inspector/How_to/Examine_grid_layouts&quot;&gt;Firefox Grid Highlighter&lt;/a&gt; can be very useful as you learn, especially if your grid is quite complicated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="433a37118128d064d5e00f25aba68e924961c8bc" translate="yes" xml:space="preserve">
          <source>Also, this method of switching animation off according to the user's preference can also benefit users with low battery or low-end phones or computers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30eff925100b7c3e119ed678e39009e962455b0" translate="yes" xml:space="preserve">
          <source>Alt</source>
          <target state="translated">Alt</target>
        </trans-unit>
        <trans-unit id="8479087cf58b189c66cdf81afaedd25a3e1e5851" translate="yes" xml:space="preserve">
          <source>Alternates (&lt;a href=&quot;../font-variant-alternates&quot;&gt;&lt;code&gt;font-variant-alternates&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71737b6d4b6f75d23ecf39f0789f1d1c02ecbbec" translate="yes" xml:space="preserve">
          <source>Although the positioning fixes in Firefox 3.5 do not allow content to be generated as a separate previous sibling (as per the &lt;a href=&quot;http://www.w3.org/TR/CSS21/generate.html#before-after-content&quot;&gt;CSS spec&lt;/a&gt; stating &quot;The :before and :after pseudo-elements elements interact with other boxes... as if they were real elements inserted just inside their associated element.&quot;), they can be used to provide a slight improvement on tableless layouts (e.g., to achieve centering) in that, as long as the content to be centered is wrapped in a further child, a column before and after the content can be introduced without adding a previous or following sibling (i.e., it is perhaps more semantically correct to add an additional span as below, than it would to add an empty &amp;lt;div/&amp;gt; before and after). (And always remember to add a width to a float, since, otherwise, it will not float!)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ac15881f92a34a1448dc8e32e80518adca18c9" translate="yes" xml:space="preserve">
          <source>Although these styles can be change the appearance of colors to the end user, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle&quot;&gt;&lt;code&gt;window.getComputedStyle&lt;/code&gt;&lt;/a&gt; method will lie and always return the value of the non-&lt;code&gt;:visited&lt;/code&gt; color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6bfba93d3aec68b8167e700d3a2b79e8746df0e" translate="yes" xml:space="preserve">
          <source>Although various colors not in the specification (mostly adapted from the X11 colors list) were supported by early browsers, it wasn't until SVG 1.0 and CSS Colors Level 3 that they were formally defined. They are called the &lt;em&gt;extended color keywords&lt;/em&gt;, the &lt;em&gt;X11 colors&lt;/em&gt;, or the &lt;em&gt;SVG colors&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1592e0b245728d35b330422fbd70191b4560ce27" translate="yes" xml:space="preserve">
          <source>Always force page breaks after the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3621ee8c4cb40f04b83ae947856ea53bfedf5855" translate="yes" xml:space="preserve">
          <source>Always force page breaks before the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be8808e6694068c0e676b10122ebcadb971eee7" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;angle&quot;&gt;&lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt;&lt;/a&gt; specifying the angle to rotate the affected element through, around the Z axis. Equivalent to a &lt;code&gt;rotate()&lt;/code&gt; (2D rotation) function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5404ebe35e676e72c8803fbcbb3b1ff99706d181" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;image&quot;&gt;&lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt;&lt;/a&gt;, denoted by the &lt;a href=&quot;url&quot;&gt;&lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;gradient&quot;&gt;&lt;code&gt;&amp;lt;gradient&amp;gt;&lt;/code&gt;&lt;/a&gt; data type, or part of the webpage, defined by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/element()&quot;&gt;&lt;code&gt;element()&lt;/code&gt;&lt;/a&gt; function, denoting the content to display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696ef4e3059a3be4a5a23e906599b2914f954632" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;integer&quot;&gt;&lt;code&gt;&amp;lt;integer&amp;gt;&lt;/code&gt;&lt;/a&gt; value of &lt;code&gt;0&lt;/code&gt; is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579501c15ca9ca87cebe0e5886d10fc70e85c382" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;@document&lt;/code&gt; rule can specify one or more matching functions. If any of the functions apply to a given URL, the rule will take effect on that URL. The functions available are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b27fe9678921e734bbc0cf659a01daad6acc70" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;absolutely positioned element&lt;/strong&gt; is an element whose &lt;a href=&quot;computed_value&quot;&gt;computed&lt;/a&gt;&lt;code&gt;position&lt;/code&gt; value is &lt;code&gt;absolute&lt;/code&gt; or &lt;code&gt;fixed&lt;/code&gt;. The &lt;a href=&quot;top&quot;&gt;&lt;code&gt;top&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;right&quot;&gt;&lt;code&gt;right&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;bottom&quot;&gt;&lt;code&gt;bottom&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;left&quot;&gt;&lt;code&gt;left&lt;/code&gt;&lt;/a&gt; properties specify offsets from the edges of the element's &lt;a href=&quot;all_about_the_containing_block&quot;&gt;containing block&lt;/a&gt;. (The containing block is the ancestor relative to which the element is positioned.) If the element has margins, they are added to the offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44dc69054f391fe33ba6ffa057d95b9f9fa0a3b5" translate="yes" xml:space="preserve">
          <source>An &lt;strong&gt;at-rule&lt;/strong&gt; is a &lt;a href=&quot;syntax#CSS_statements&quot;&gt;CSS statement&lt;/a&gt; that instructs CSS how to behave. They begin with an at sign, '&lt;code&gt;@&lt;/code&gt;' (&lt;code&gt;U+0040 COMMERCIAL AT&lt;/code&gt;), followed by an identifier and includes everything up to the next semicolon, '&lt;code&gt;;&lt;/code&gt;' (&lt;code&gt;U+003B SEMICOLON&lt;/code&gt;), or the next &lt;a href=&quot;syntax#CSS_declarations_blocks&quot;&gt;CSS block&lt;/a&gt;, whichever comes first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0447d4a734e3bc62154b754347fa66f638d6f5" translate="yes" xml:space="preserve">
          <source>An Introduction to the Reduced Motion Media Query | CSS-Tricks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd61b45f1bfcfb5061df8058926cd1daf418098" translate="yes" xml:space="preserve">
          <source>An absolute &lt;a href=&quot;length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt; of the parent flex container's main size property, or the keyword &lt;code&gt;auto&lt;/code&gt;. Negative values are invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46fa69d288df387cffc4d1a3da9755c86f200b2" translate="yes" xml:space="preserve">
          <source>An absolute length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc472604c12317461a143b34b46d584c091c8b6c" translate="yes" xml:space="preserve">
          <source>An access key is a single character used as a keyboard shortcut for selecting an object. The user presses the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abaa23e73736ef7c372a4674c6e4e6989e61626f" translate="yes" xml:space="preserve">
          <source>An additional descriptor called &lt;code&gt;additive-symbols&lt;/code&gt; must be specified with at least one &lt;em&gt;additive tuple&lt;/em&gt;, or else the counter style rule will not be valid. An additive tuple is similar to a composite counter symbol, which is made up of two parts: a normal counter symbol and a non-negative integer weight. The additive tuples must be specified in the descending order of their weights or the system is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532b74a255b49035db49f0738542901ab582d0eb" translate="yes" xml:space="preserve">
          <source>An alias or shortcut is to be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9563c5d3869e83f0a41d19a18cc767fa326a363f" translate="yes" xml:space="preserve">
          <source>An alias to &lt;code&gt;sideways&lt;/code&gt; that is kept for compatibility purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa6debff31a38762ed1d78773da1477fab5807e" translate="yes" xml:space="preserve">
          <source>An alternate approach to providing placeholder information is to include it outside of the input in close visual proximity, then use &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-describedby_attribute&quot;&gt;aria-describedby&lt;/a&gt;&lt;/code&gt; to programmatically associate the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; with its hint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6145cdea833cbbc35daf10d0f8a956d46e1b9ea" translate="yes" xml:space="preserve">
          <source>An arc of circle is used as the border</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9a87706e58dd06b87379495afbe0db7d45e5cc" translate="yes" xml:space="preserve">
          <source>An arc of ellipse is used as the border</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab1c126e30802e8dc741b3bece86d993db30691" translate="yes" xml:space="preserve">
          <source>An area of a document laid out using flexbox is called a &lt;strong&gt;flex container&lt;/strong&gt;. To create a flex container, we set the value of the area's container's &lt;a href=&quot;../display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; property to &lt;code&gt;flex&lt;/code&gt; or &lt;code&gt;inline-flex&lt;/code&gt;. As soon as we do this the direct children of that container become &lt;strong&gt;flex items&lt;/strong&gt;. As with all properties in CSS, some initial values are defined, so when creating a flex container all of the contained flex items will behave in the following way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8cd4476bdf3a1880a02d52f8088e37f50453653" translate="yes" xml:space="preserve">
          <source>An earlier version of the specification was implemented, prefixed, in Firefox versions prior to 15.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150b0f14f62706bd109eb2acb9bc2033b0b341fc" translate="yes" xml:space="preserve">
          <source>An easy way to figure out the &lt;em&gt;rendering order&lt;/em&gt; of stacked elements along the Z axis is to think of it as a &quot;version number&quot; of sorts, where child elements are minor version numbers underneath their parent's major version numbers. This way we can easily see how an element with a z-index of 1 (DIV #5) is stacked above an element with a z-index of 2 (DIV #2), and how an element with a z-index of 6 (DIV #4) is stacked below an element with a z-index of 5 (DIV #1). In our example (sorted according to the final rendering order):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e54f1ce2ac00aa7e5d077cebbd2235d9566f11" translate="yes" xml:space="preserve">
          <source>An element is absolutely positioned if the &lt;a href=&quot;position&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;absolute&lt;/code&gt; or &lt;code&gt;fixed&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0d9a244c8f8774cb2cd5c90e9f1f459f22b04b" translate="yes" xml:space="preserve">
          <source>An element is said to be &lt;em&gt;block-level&lt;/em&gt; when the calculated value of its &lt;a href=&quot;display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; CSS property is: &lt;code&gt;block&lt;/code&gt;, &lt;code&gt;list-item&lt;/code&gt;, or &lt;code&gt;table&lt;/code&gt;. A block-level element is visually formatted as a block (e.g., paragraph), intended to be vertically stacked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26807a91a1920ad68c3081341ec04368421ddeff" translate="yes" xml:space="preserve">
          <source>An element is said to be &lt;em&gt;inline-level&lt;/em&gt; when the calculated value of its &lt;a href=&quot;display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; CSS property is: &lt;code&gt;inline&lt;/code&gt;, &lt;code&gt;inline-block&lt;/code&gt; or &lt;code&gt;inline-table&lt;/code&gt;. Visually, it doesn't constitute blocks of contents, but is distributed in lines with other inline-level content. Typically, the content of a paragraph with different formatting, like emphasis or images, is made from inline-level elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9867257d73e09be7c7895b497b4e44cc37ba8ef" translate="yes" xml:space="preserve">
          <source>An element set to &lt;code&gt;display: flex&lt;/code&gt; behaves in most ways like any other block level container that establishes a containing block. Floats will not intrude, and the containers' margins will not collapse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ea6483e1bdf04b1b2701ef2d3d262a3d1ed60d" translate="yes" xml:space="preserve">
          <source>An element that spans more than one column is called a &lt;em&gt;spanning element&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7234cbecf45ba14e89b8dd1058659dabbabf7a" translate="yes" xml:space="preserve">
          <source>An element's back face is a mirror image of its front face. Though invisible in 2D, the back face can become visible when a transformation causes the element to be rotated in 3D space. (This property has no effect on 2D transforms, which have no perspective.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9944a5797fc97c1e7413b72ddbe123ca8022f4" translate="yes" xml:space="preserve">
          <source>An element's padding area is the space between its content and its border.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce750616b7e1bc3c4f66324a7fd6c140096ad19" translate="yes" xml:space="preserve">
          <source>An ellipse is essentially a squashed circle and so &lt;code&gt;ellipse()&lt;/code&gt; acts in a very similar way to &lt;code&gt;circle()&lt;/code&gt; except that we have to specify two radii x and y in that order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faafc392c23cc231cc70ea60d8255316aec49a9d" translate="yes" xml:space="preserve">
          <source>An empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2433156d57d5dfe6c9c25e580e52914f0b313645" translate="yes" xml:space="preserve">
          <source>An ending offset of &lt;code&gt;100%&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb39406e24131854bb6be838d91da25d1891991" translate="yes" xml:space="preserve">
          <source>An example of why these mappings might be needed is as follows. I have a Layout using CSS Grid, the grid container has a width applied and I am using the &lt;a href=&quot;../align-self&quot;&gt;&lt;code&gt;align-self&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../justify-self&quot;&gt;&lt;code&gt;justify-self&lt;/code&gt;&lt;/a&gt; properties to align the items. These properties are flow relative &amp;mdash; &lt;code&gt;justify-self: start&lt;/code&gt; aligns the item to the start on the inline dimension, &lt;code&gt;align-self: start&lt;/code&gt; does the same on the block dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0464490444bf496cdc7fa4d0d9bac643b8208096" translate="yes" xml:space="preserve">
          <source>An experimental unit that attempts to render at exactly one millimeter regardless of the size or resolution of the display. This is rarely actually what you want, but may be useful in particular for mobile devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ef60212564883bd82e4ce374e82a71899842ea" translate="yes" xml:space="preserve">
          <source>An ideograph is a character in an Asian writing system that represents a concept or an idea, but not a particular word or pronunciation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc47c461d861ae9c874b97f0d0fe4822ce5e0e62" translate="yes" xml:space="preserve">
          <source>An image denoted by the &lt;a href=&quot;url&quot;&gt;&lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt;&lt;/a&gt; data type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15bcd25443d6669d0384419c62c469d0e002801" translate="yes" xml:space="preserve">
          <source>An image value used as mask image layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f755551583717ae4209d97dee3690d24d5250ccc" translate="yes" xml:space="preserve">
          <source>An inline element that contains line breaks styled with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3b4d56d046e87143e34974d5c726b20ef9f474" translate="yes" xml:space="preserve">
          <source>An inline formatting context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f908ffd9c44a6113e05f669421249191c34eca5b" translate="yes" xml:space="preserve">
          <source>An integer followed by a percent sign (%), which specifies the width of the hyphenation zone, calculated with respect to the line box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462d029e037cbab640aac437390728da5437861d" translate="yes" xml:space="preserve">
          <source>An interesting way to generate your path is to use an image with an alpha channel &amp;mdash; the text will then wrap around the non-transparent parts of the image. This allows the overlay of wrapped content around an image, or the use of an image which is never displayed on the page purely as a method of creating a complex shape without needing to carefully map a polygon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d2fadff90ebf5061a1f290a60e7037bd1adbdb" translate="yes" xml:space="preserve">
          <source>An introduction to the reduced motion media query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c065df3a3d94f180a2b3dff755ae97ab2b380590" translate="yes" xml:space="preserve">
          <source>An invisible, &quot;soft&quot; hyphen. This character is not rendered visibly; instead, it marks a place where the browser should break the word if hyphenation is necessary. In HTML, you can use &lt;code&gt;&amp;amp;shy;&lt;/code&gt; to insert a soft hyphen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca203aba353ace8b853f3c1898d71bc9729e9a4" translate="yes" xml:space="preserve">
          <source>An inwards offset from the block end edge of the scrollport, as a valid length or a percentage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b631f9952794d6f84b193dd3f65cdb7be4cf7c" translate="yes" xml:space="preserve">
          <source>An inwards offset from the block start edge of the scrollport, as a valid length or a percentage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071abb36f343bd8e902d80d924e37742c898277e" translate="yes" xml:space="preserve">
          <source>An inwards offset from the corresponding edge of the scrollport, as a valid length or a percentage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32746e27696d7571f0f500e55bad7114b7f26bd6" translate="yes" xml:space="preserve">
          <source>An inwards offset from the inline end edge of the scrollport, as a valid length or a percentage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3731ff5f19cc382a44df4939ddc40d0039b8a50d" translate="yes" xml:space="preserve">
          <source>An inwards offset from the inline start edge of the scrollport, as a valid length or a percentage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b0ba1be1b1c041a97b8a0d6df6dd473899e259" translate="yes" xml:space="preserve">
          <source>An inwards offset from the top edge of the scrollport, as a valid length or a percentage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702204c94b1193335cb389b2c628191d395dd84a" translate="yes" xml:space="preserve">
          <source>An item may not be dropped at the current location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43afdd74d3f24176c3d6f70062fcdb599374c61" translate="yes" xml:space="preserve">
          <source>An object must have layout for the filter to render. A simple way to accomplish this is to give the element a specified &lt;a href=&quot;height&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt;, or both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab1f31acedbcbc49edbc934c74e58c7f90c2a8a" translate="yes" xml:space="preserve">
          <source>An opening bracket or quote at the start of the first formatted line of an element hangs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115be85d3c61c28c30b6eb21311c56e725aa2b35" translate="yes" xml:space="preserve">
          <source>An outline is a line that is drawn around an element, outside the &lt;a href=&quot;border&quot;&gt;&lt;code&gt;border&lt;/code&gt;&lt;/a&gt;. Unlike the element's border, the outline is drawn outside the element's frame, and may overlap other content. The border, on the other hand, will actually alter the page's layout to ensure that it fits without overlapping anything else (unless you explicitly set it to overlap).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def0ee7c02dda8273413bcf70b1ef7c13b39a115" translate="yes" xml:space="preserve">
          <source>An outline is a line that is drawn around an element, outside the border edge. The space between an element and its outline is transparent. In other words, it is the same as the parent element's background.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a562836c7b9c86fcb56467937590b0cc579494" translate="yes" xml:space="preserve">
          <source>An outset from the block end edge of the scroll container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25cc97be81684f838923fefd214729e59f5b126a" translate="yes" xml:space="preserve">
          <source>An outset from the block start edge of the scroll container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d020f1563bf3769570c80988b47219263030b19" translate="yes" xml:space="preserve">
          <source>An outset from the bottom edge of the scroll container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc73a558e1837c9645d2bb9715f577f5734ff86" translate="yes" xml:space="preserve">
          <source>An outset from the corresponding edge of the scroll container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cdbbb769df8ca691db962159bd6bfb3249411c6" translate="yes" xml:space="preserve">
          <source>An outset from the inline end edge of the scroll container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b07b96b2a3466e9e27380f71f681b6f4a60b8c" translate="yes" xml:space="preserve">
          <source>An outset from the inline start edge of the scroll container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ebe3ffbba6405058624a622feff7591a34edaf" translate="yes" xml:space="preserve">
          <source>An outset from the left edge of the scroll container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721bb5b2500f3780998ea39f8229c427c55689d1" translate="yes" xml:space="preserve">
          <source>An outset from the right edge of the scroll container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="450df8d963d497d204c0afb63489b407a9c50cdf" translate="yes" xml:space="preserve">
          <source>An outset from the top edge of the scroll container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562c5052260f120f918ea536bddd328186e94484" translate="yes" xml:space="preserve">
          <source>An overflow situation happens when an item's size is larger than the column box. For example, the situation could happen when an image in a column is wider than the &lt;code&gt;column-width&lt;/code&gt; value or the width of the column based on the number of columns declared with &lt;code&gt;column-count&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="943149fb149025d57fa3208dffc8f8f5f0f00213" translate="yes" xml:space="preserve">
          <source>An overview of how CSS color can be used in HTML, including for borders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c3ac58892762427405ca5fabce7eb65f03b4e8" translate="yes" xml:space="preserve">
          <source>An overview of the Multiple-column Layout specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314fca2a525476b19ff93e4196b67e88ed87d1ae" translate="yes" xml:space="preserve">
          <source>An overview of the features of flexbox</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4f091084006b6ce3f7f279dee69fae1eb6207a" translate="yes" xml:space="preserve">
          <source>Android 2.3 has a bug where input forms will &quot;jump&quot; when typing, if any container element has a &lt;code&gt;-webkit-transform&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b93109d2910f83b46a8f8b84565a2b90f04e8f" translate="yes" xml:space="preserve">
          <source>Android webview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c47aef285b6d74c697066089ac93f83f15191b2" translate="yes" xml:space="preserve">
          <source>Angle value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22051e5460043efcae710f529a6c4fb21e0d70c" translate="yes" xml:space="preserve">
          <source>Animatable</source>
          <target state="translated">Animatable</target>
        </trans-unit>
        <trans-unit id="dea12ba4676f0934a508fdf78f0a44c6540b25b0" translate="yes" xml:space="preserve">
          <source>Animated polygon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="080a57f6ad6634b99fff37db5fe7d77da416ca9f" translate="yes" xml:space="preserve">
          <source>Animating using the correct syntax for different browsers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62afd21e88769f01ba1c9330803baad57564d6e9" translate="yes" xml:space="preserve">
          <source>Animation</source>
          <target state="translated">Animation</target>
        </trans-unit>
        <trans-unit id="20a7d19c4b233d01d41f9bd020f3bf84b094260f" translate="yes" xml:space="preserve">
          <source>Animation and transition support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0784ea86489673f30135340e936e86c97d5960b9" translate="yes" xml:space="preserve">
          <source>Animation type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c77dcdedc0f40e8dac08a08c8bef7255abb90e75" translate="yes" xml:space="preserve">
          <source>Animations</source>
          <target state="translated">Animations</target>
        </trans-unit>
        <trans-unit id="735f8911779a25089e5791905074ffbe2c8f74eb" translate="yes" xml:space="preserve">
          <source>Animations &amp;amp; Transitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22fc39eb2c372c2ce7dcb2fc802468ce2c1dbf6b" translate="yes" xml:space="preserve">
          <source>Animations that involve transitioning between two states are often called &lt;em&gt;implicit transitions&lt;/em&gt; as the states in between the start and final states are implicitly defined by the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5a3ddd7f4eb3bdd77c17412e4d976077dd585c" translate="yes" xml:space="preserve">
          <source>Anonymous block boxes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902a5411fcd816becfd45769e2a69712d0cd1f31" translate="yes" xml:space="preserve">
          <source>Anonymous grid items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38983ce730c7e7c10f78b19130221107bf341a92" translate="yes" xml:space="preserve">
          <source>Anonymous inline boxes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc9313e8f6622ac3f525c91f784267a89929396" translate="yes" xml:space="preserve">
          <source>Anonymous items are always auto-placed because there is no way to target them. Therefore if you have some unwrapped text for some reason in your grid, be aware that it might show up somewhere unexpected as it will be auto-placed according to the auto-placement rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1959737a3889338a9ddecf96910e5cbd4198ec" translate="yes" xml:space="preserve">
          <source>Another Gecko bug means that &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details&quot;&gt;&lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt;&lt;/a&gt; elements can't be made open by default using the &lt;code&gt;open&lt;/code&gt; attribute if they have an animation active on them (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1382124&quot;&gt;bug 1382124&lt;/a&gt;). Quantum CSS fixes this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48df268bea02549e97704760ed7812e7f84cb77" translate="yes" xml:space="preserve">
          <source>Another case that leads to the creation of anonymous block boxes, is an inline box that contains one or several block boxes. In that case, the box containing the block box is split into two inline boxes: one before, and one after the block box. All the inline boxes before the block box are then enclosed in an &lt;em&gt;anonymous block box&lt;/em&gt;, so are the inline boxes following the block box. Therefore, the block box becomes the sibling of the two anonymous block boxes containing the inline elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fd87558529c0f37044f38da64aa4b25911c9b4" translate="yes" xml:space="preserve">
          <source>Another common pattern is that of an image carousel which uses pointer events to handle horizontal panning, but doesn't want to interfere with vertical scrolling or zooming of the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609265960e1f759f6f6841a44c85fa955bd37443" translate="yes" xml:space="preserve">
          <source>Another issue to be aware of in CSS Grid Layout and to a lesser extent in CSS Flexbox, is the temptation to &lt;em&gt;flatten&lt;/em&gt; markup. As we have discovered, for an item to become a grid item it needs to be a direct child of the grid container. Therefore, where you have a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul&quot;&gt;&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;&lt;/a&gt; element inside a grid container, &lt;em&gt;that&lt;/em&gt;&lt;code&gt;ul&lt;/code&gt; becomes a grid item &amp;ndash; the child &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li&quot;&gt;&lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;&lt;/a&gt; elements do not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7746486c2a8d142cd425b982abd6198736fc7ac1" translate="yes" xml:space="preserve">
          <source>Another place you might see physical keywords in use, is when using &lt;code&gt;text-align: right&lt;/code&gt; to align text to the right. There are also physical &lt;strong&gt;properties&lt;/strong&gt; in CSS. We add margins, padding, and borders using these physical properties of &lt;a href=&quot;../margin-left&quot;&gt;&lt;code&gt;margin-left&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../padding-left&quot;&gt;&lt;code&gt;padding-left&lt;/code&gt;&lt;/a&gt;, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c372ef92dc10c13fec149ebfbc0c95837a8cb3" translate="yes" xml:space="preserve">
          <source>Another use case for &lt;code&gt;calc()&lt;/code&gt; is to help ensure that form fields fit in the available space, without extruding past the edge of their container, while maintaining an appropriate margin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17f65b058c58f18c3232c4ae70493dadd46a8f1" translate="yes" xml:space="preserve">
          <source>Another use case for CSS functions is allow a font size to grow while ensuring it is at least a mimum size, enabling responsive font sizes while ensuring legibility, and providing a maximum size so it doesn't grow too huge..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7e9b1de1fc746527d7ff5c12b4cd37ccc4cfb2" translate="yes" xml:space="preserve">
          <source>Another use case for CSS functions is allow a font size to grow while ensuring it is at least a mimum size, enabling responsive font sizes while ensuring legibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e100dff27dff51797b7aa193e91a08a817a58a" translate="yes" xml:space="preserve">
          <source>Another use case for CSS functions is to set a maximum size on responsive form controls: enabling the width of labels and inputs to shrink as the width of the form shrinks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fc7edc1380f2ff74aecb9125f2f71854d906b0" translate="yes" xml:space="preserve">
          <source>Another useful resource is &lt;a href=&quot;http://bennettfeely.com/clippy/&quot;&gt;Clippy&lt;/a&gt; - a tool for creating shapes for &lt;code&gt;clip-path&lt;/code&gt;, as the values for Basic Shapes are the same as those used for &lt;code&gt;clip-path&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df9ec1c21ab0e892aaf5c32d8c55f7be0258dc7" translate="yes" xml:space="preserve">
          <source>Another vital area of understanding is how flexbox makes no assumption about the writing mode of the document. In the past, CSS was heavily weighted towards horizontal and left-to-right writing modes. Modern layout methods encompass the range of writing modes and so we no longer assume that a line of text will start at the top left of a document and run towards the right hand side, with new lines appearing one under the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e91488cd241bce34be41b62fa1490095b84648" translate="yes" xml:space="preserve">
          <source>Another way of setting the font size is with &lt;code&gt;em&lt;/code&gt; values. The size of an &lt;code&gt;em&lt;/code&gt; value is dynamic. When defining the &lt;code&gt;font-size&lt;/code&gt; property, an em is equal to the size of the font that applies to the parent of the element in question. If you haven't set the font size anywhere on the page, then it is the browser default, which is often 16px. So, by default 1em = 16px, and 2em = 32px. If you set a &lt;code&gt;font-size&lt;/code&gt; of 20px on the body element, then 1em = 20px and 2em = 40px. Note that the value 2 is essentially a multiplier of the current em size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a597d7153c72e5e20147ddb16f3ca07aec1f1c91" translate="yes" xml:space="preserve">
          <source>Another way to align items inside their area, is to use auto margins. If you have ever centered your layout in the viewport, by setting the right and left margin of the container block to &lt;code&gt;auto&lt;/code&gt;, you know that an auto margin absorbs all of the available space. By setting the margin to &lt;code&gt;auto&lt;/code&gt; on both sides, it pushes the block into the middle as both margins attempt to take all of the space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5417171253409edf7527161ccab5acc0ee9ec9f1" translate="yes" xml:space="preserve">
          <source>Another way to align items on the main axis is to use auto margins. This enables the design pattern of a navigation bar where one group of items are aligned left and another group aligned right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7500e90b09944617dfc02c2160aa80e7fc8aae" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; strictly between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2179ca3a786040df1d0a4c6c059db0aa0666b36" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt; value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ae22262340e6598b1c5444e8bb72dfbc95c402" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;@namespace&lt;/code&gt; rules must follow all &lt;a href=&quot;@charset&quot;&gt;@charset&lt;/a&gt; and &lt;a href=&quot;@import&quot;&gt;@import&lt;/a&gt; rules, and precede all other at-rules and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration&quot;&gt;style declarations&lt;/a&gt; in a style sheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aadaaaac23b7b5e5a906e3a2e73aa8d5ee60f3d" translate="yes" xml:space="preserve">
          <source>Any descendant element of the multicol container may become a &lt;em&gt;spanner&lt;/em&gt; including both direct and indirect children. For example, a heading nested directly inside the container could become a spanner, as could a heading nested inside a section nested inside the multicol container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946768dc640185fd2cdb8b7276a12aa1b366415c" translate="yes" xml:space="preserve">
          <source>Any element that can have an image applied to it, for example as a &lt;a href=&quot;background-image&quot;&gt;&lt;code&gt;background-image&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;border-image&quot;&gt;&lt;code&gt;border-image&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;list-style-image&quot;&gt;&lt;code&gt;list-style-image&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6765f14bb27245bfff46dce187d9d2286663985f" translate="yes" xml:space="preserve">
          <source>Any length value (see &lt;a href=&quot;../length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt;). The first value corresponds to the width of the page box and the second one corresponds to its height. If only one value is provided, it is used for both width and height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ae173ca1fc87ad5e2003fe2b971fac9720092b" translate="yes" xml:space="preserve">
          <source>Any number of text characters. Non-Latin characters must be encoded using their Unicode escape sequences: for example, &lt;code&gt;\000A9&lt;/code&gt; represents the copyright symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85878bf04ad8fe2ba483fff01cab44e2c7da527a" translate="yes" xml:space="preserve">
          <source>Any options the user agent offers the user to allow them to control the use of color and images will take priority over the value of &lt;code&gt;color-adjust&lt;/code&gt;. In other words, there isn't any guarantee that &lt;code&gt;color-adjust&lt;/code&gt; will do anything. Not only can the user override the behavior, but each user agent is allowed to decide for itself how to handle &lt;code&gt;color-adjust&lt;/code&gt; in any given situation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c40127d97c3f5ac20ffcbd529bcc375e64682a" translate="yes" xml:space="preserve">
          <source>Any pixels whose alpha component's value is greater than the threshold are considered to be part of the shape for the purposes of determining its boundaries. For example, a value of &lt;code&gt;0.5&lt;/code&gt; means that the shape will enclose all the pixels that are more than 50% opaque.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73726495dc97b70f8560c8bdf0994d8fa9cbcb72" translate="yes" xml:space="preserve">
          <source>Any space used by gaps will be accounted for before space is assigned to the flexible length &lt;code&gt;fr&lt;/code&gt; tracks, and gaps act for sizing purposes like a regular grid track, however you cannot place anything into a gap. In terms of line-based positioning, the gap acts like a fat line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efcef92d7eb8f200685af9819e216eebdc728bd1" translate="yes" xml:space="preserve">
          <source>Any statement which isn't a ruleset or an at-rule is invalid and ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4b222fcd4dd241850c65e1fa3858e1ebe1b98b" translate="yes" xml:space="preserve">
          <source>Any time you reorder things with grid layout &amp;ndash; or with flexbox &amp;ndash; you only perform &lt;em&gt;visual reordering&lt;/em&gt;. The underlying source is what controls things like text to speech, and the tab order of the document. You can see how this works with a very simple example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f08eb48017703f0b41c0fe7d078d8b051a76be" translate="yes" xml:space="preserve">
          <source>Any time you would normally use &lt;code&gt;max-height&lt;/code&gt; or &lt;code&gt;max-width&lt;/code&gt;, you should instead use &lt;code&gt;max-block-size&lt;/code&gt; to set the maximum &quot;height&quot; of the content (even though this may not be a vertical value) and &lt;code&gt;max-inline-size&lt;/code&gt; to set the maximum &quot;width&quot; of the content (although this may instead be vertical rather than horizontal). See the &lt;a href=&quot;writing-mode#Example&quot;&gt;Example&lt;/a&gt; in &lt;a href=&quot;writing-mode&quot;&gt;writing-mode&lt;/a&gt;, which shows the different writing modes in action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58aac1f3a7a8092828664c092f2b688de88207ac" translate="yes" xml:space="preserve">
          <source>AppWorkspace</source>
          <target state="translated">AppWorkspace</target>
        </trans-unit>
        <trans-unit id="a705b70ec5d834c2963b4f98e285a0072fcff211" translate="yes" xml:space="preserve">
          <source>Apple has a &lt;a href=&quot;https://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariCSSRef/Articles/StandardCSSProperties.html#//apple_ref/doc/uid/TP30001266-_webkit_touch_callout&quot;&gt;description in the Safari CSS Reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124577a6908ad8042f985c8f595b73ed668cbbd9" translate="yes" xml:space="preserve">
          <source>Apple's documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8189c67e85cbb6542bf644fe90c6c98f633b47c5" translate="yes" xml:space="preserve">
          <source>Applies a Gaussian blur to the input image. The value of &lt;code&gt;radius&lt;/code&gt; defines the value of the standard deviation to the Gaussian function, or how many pixels on the screen blend into each other, so a larger value will create more blur. The lacuna value for interpolation is &lt;code&gt;0&lt;/code&gt;. The parameter is specified as a CSS length, but does not accept percentage values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80149565b0727a59b85fb27adcb9ee5a6a5689a" translate="yes" xml:space="preserve">
          <source>Applies a drop shadow behind the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7f634d6a73aca2b1dca39a78fc515bded2a28d" translate="yes" xml:space="preserve">
          <source>Applies a drop shadow effect to the input image. A drop shadow is effectively a blurred, offset version of the input image's alpha mask drawn in a particular color, composited below the image. The function accepts a parameter of type &lt;code&gt;&amp;lt;shadow&amp;gt;&lt;/code&gt; (defined in CSS3 Backgrounds), with the exception that the &lt;code&gt;inset&lt;/code&gt; keyword is not allowed. This function is similar to the more established &lt;a href=&quot;box-shadow&quot;&gt;&lt;code&gt;box-shadow&lt;/code&gt;&lt;/a&gt; property; the difference is that with filters, some browsers provide hardware acceleration for better performance. The parameters of the &lt;code&gt;&amp;lt;shadow&amp;gt;&lt;/code&gt; parameter are as follows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80cf472a8445ef0343d428690a2409c2bad70861" translate="yes" xml:space="preserve">
          <source>Applies a hue rotation on the input image. The value of &lt;code&gt;angle&lt;/code&gt; defines the number of degrees around the color circle the input samples will be adjusted. A value of &lt;code&gt;0deg &lt;/code&gt;leaves the input unchanged. The lacuna value for interpolation is &lt;code&gt;0&lt;/code&gt;. Though there is no maximum value, the effect of values above &lt;code&gt;360deg&lt;/code&gt; wraps around.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09480e1fbdb17492f6d99adda76a1f04ef4fa7db" translate="yes" xml:space="preserve">
          <source>Applies a linear multiplier to input image, making it appear more or less bright. A value of &lt;code&gt;0%&lt;/code&gt; will create an image that is completely black. A value of &lt;code&gt;100%&lt;/code&gt; leaves the input unchanged. Other values are linear multipliers on the effect. Values of an amount over &lt;code&gt;100%&lt;/code&gt; are allowed, providing brighter results. The lacuna value for interpolation is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d7c0a17bac4445066ddeb3718c8a9a12f67546" translate="yes" xml:space="preserve">
          <source>Applies the first color to the scrollbar thumb, the second to the scrollbar track.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9d314d2bc393e3f1f05e8d542e041cf9231697" translate="yes" xml:space="preserve">
          <source>Applies to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87fb25a15e2e3bb74b371e83a1ded7c2c82ad14d" translate="yes" xml:space="preserve">
          <source>Applies to &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/form&quot;&gt;&amp;lt;form&amp;gt;&lt;/a&gt; elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbdd49dec6ad3b3221ce1ad049b5ffeb65357110" translate="yes" xml:space="preserve">
          <source>Applies to HTML elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449730a58d4320bf652e785e633eced2b0243d42" translate="yes" xml:space="preserve">
          <source>Applies to grid and flexbox</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7021c58045298fdfda2cee7b135d0121727b8baa" translate="yes" xml:space="preserve">
          <source>Applies transparency to the samples in the input image. The value of &lt;code&gt;amount&lt;/code&gt; defines the proportion of the conversion. A value of &lt;code&gt;0%&lt;/code&gt; is completely transparent. A value of &lt;code&gt;100%&lt;/code&gt; leaves the input unchanged. Values between &lt;code&gt;0%&lt;/code&gt; and &lt;code&gt;100%&lt;/code&gt; are linear multipliers on the effect. This is equivalent to multiplying the input image samples by amount. The lacuna value for interpolation is &lt;code&gt;1&lt;/code&gt;. This function is similar to the more established &lt;a href=&quot;opacity&quot;&gt;&lt;code&gt;opacity&lt;/code&gt;&lt;/a&gt; property; the difference is that with filters, some browsers provide hardware acceleration for better performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038bb51183eeff6b752b98aca52656bd83fc1c64" translate="yes" xml:space="preserve">
          <source>Applying SVG effects to HTML content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d1c5fbad28021ca145e48d1420e5ff55146ddd" translate="yes" xml:space="preserve">
          <source>Applying color to HTML elements using CSS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba80fa57df775fafea67d8e9f863cb38293d8af" translate="yes" xml:space="preserve">
          <source>Applying the color property within the &lt;code&gt;::-ms-track&lt;/code&gt; selector affects the tick marks inside the track area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e2c2d11b580d6d0832355037b3f2f085a3f9c85" translate="yes" xml:space="preserve">
          <source>Approximate range of colors that are supported by the user agent and output device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99adc6f1132fbb72240c21958867e373a2d9a88f" translate="yes" xml:space="preserve">
          <source>Are &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt;s describing the linear transformation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75c352117931e310a7faeaae16dae31e488c236" translate="yes" xml:space="preserve">
          <source>Are &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt;s describing the translation to apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a797d91537cdeeee415b7eb639699ff7e70c3f2" translate="yes" xml:space="preserve">
          <source>Are &lt;a href=&quot;number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; values representing the abscissas, and ordinates of the P&lt;sub&gt;1&lt;/sub&gt; and P&lt;sub&gt;2&lt;/sub&gt; points defining the cubic B&amp;eacute;zier curve. x&lt;sub&gt;1&lt;/sub&gt; and x&lt;sub&gt;2&lt;/sub&gt; must be in the range [0, 1] or the value is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c58abcdedd9810307f186cd4cf0829690680f2b" translate="yes" xml:space="preserve">
          <source>Are keywords indicating in which direction the reflection is to happen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0448181c7577ab30e593a8c67641c8c924776daf" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;../align-items&quot;&gt;&lt;code&gt;align-items&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../align-self&quot;&gt;&lt;code&gt;align-self&lt;/code&gt;&lt;/a&gt; deal with the alignment of items on the block axis, &lt;a href=&quot;../justify-items&quot;&gt;&lt;code&gt;justify-items&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../justify-self&quot;&gt;&lt;code&gt;justify-self&lt;/code&gt;&lt;/a&gt; do the same job on the inline axis. The values you can choose from are the same as for &lt;code&gt;align-self&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6762e02ed09120496f87ba53e0ea2572abde1d0e" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;float&lt;/code&gt; implies the use of the block layout, it modifies the computed value of the &lt;a href=&quot;display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; values, in some cases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fce38fc2952d98b44e4f4114df86144f19e2e65" translate="yes" xml:space="preserve">
          <source>As a &lt;a href=&quot;../css_images/using_css_gradients&quot;&gt;CSS gradient&lt;/a&gt; is treated as an image, you can use a gradient to generate your shape, by having transparent or semi-transparent areas as part of the gradient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab134231307bf6ad23df831ec975fc2f23a8f19" translate="yes" xml:space="preserve">
          <source>As a &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; or a &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;, relative to the parent element's font size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0806047a63228b26b11c5c7ec1d4485db589cd16" translate="yes" xml:space="preserve">
          <source>As a concession for older browsers, I have set a &lt;a href=&quot;../min-height&quot;&gt;&lt;code&gt;min-height&lt;/code&gt;&lt;/a&gt; on the items, and hope that my content editors won&amp;rsquo;t add too much content and make a mess of the layout!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c977fbadee94ee85f0b5b967f7ac6675bf1769" translate="yes" xml:space="preserve">
          <source>As a float it is first laid out according to where it would be in normal flow, then taken out of flow and moved to the left as far as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ee10e1202fb7532c4912a5018a91ec7b91a856" translate="yes" xml:space="preserve">
          <source>As a maximum, identical to &lt;code&gt;max-content&lt;/code&gt;. As a minimum it represents the largest minimum size (as specified by &lt;a href=&quot;min-width&quot;&gt;&lt;code&gt;min-width&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;min-height&quot;&gt;&lt;code&gt;min-height&lt;/code&gt;&lt;/a&gt;) of the grid items occupying the grid track.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faeaabf766d6deb5e148ee93d001647fe97a4a67" translate="yes" xml:space="preserve">
          <source>As a nonsense special case for (2), duplicate simple selectors to increase specificity when you have nothing more to specify.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf6feda61dc2169ced0f36806783820bfd01830" translate="yes" xml:space="preserve">
          <source>As a rule of thumb, if you are adding widths to flex items in order to make items in one row of a wrapped flex container line up with the items above them you really want two-dimensional layout. In this case it is likely that the component would be better laid out using CSS Grid Layout. It isn't the case that you should use flexbox for small components and grid layout for larger ones; a tiny component can be two dimensional, and a large layout can be represented better with layout in one dimension. Try things out &amp;mdash; we have a choice in layout method for the first time, so take advantage of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9153c2a87aa9438b4476878f250b7110eccf313b" translate="yes" xml:space="preserve">
          <source>As a simple example, I have an image of a star with a solid red area and an area which is fully transparent. I use the path to the image file as the value of the &lt;a href=&quot;../shape-outside&quot;&gt;&lt;code&gt;shape-outside&lt;/code&gt;&lt;/a&gt; property. The content now wraps around the star shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01c2c44f338ad8b554af71c1cb4a7ffa5c89416" translate="yes" xml:space="preserve">
          <source>As a two-dimensional layout method, when working with grid layout we always have two axes on which to align our items. We have access to all of the box alignment properties to help us achieve this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70a033cc4c0c01b5ed9531a731565c306465a63" translate="yes" xml:space="preserve">
          <source>As a very simple example we can create a &amp;ldquo;media object&amp;rdquo;. This is a component with space for an image or other media on one side and content on the other. The image might be displayed on the right or left of the box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c35ae66059dcc67c185029f6f0a8b2ec48caff64" translate="yes" xml:space="preserve">
          <source>As a very simple example we can take a grid with 3 column tracks and 3 row tracks. This gives us 4 lines in each dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f5ad55f268bd71e131ecb3da7551a8045c49cc" translate="yes" xml:space="preserve">
          <source>As a way to start thinking about these issues, as you use CSS Grid Layout I would suggest reading &lt;em&gt;&lt;a href=&quot;http://tink.uk/flexbox-the-keyboard-navigation-disconnect/&quot;&gt;Flexbox &amp;amp; the Keyboard Navigation Disconnect&lt;/a&gt;&lt;/em&gt; from L&amp;eacute;onie Watson. Also &lt;a href=&quot;https://www.youtube.com/watch?v=spxT2CmHoPk&quot;&gt;the video of L&amp;eacute;onie&amp;rsquo;s presentation from ffconf&lt;/a&gt; is helpful to understand more about how screen readers work with the visual representation of things in CSS. Adrian Roselli has also posted regarding &lt;a href=&quot;http://adrianroselli.com/2015/10/html-source-order-vs-css-display-order.html&quot;&gt;tab order in various browsers&lt;/a&gt; &amp;ndash; although this was prior to grid support being fully implemented in Firefox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11bf216b91d01c08e7c28de47ced0dd1d0074cb9" translate="yes" xml:space="preserve">
          <source>As an additional example, if you use the keywords &lt;code&gt;top left&lt;/code&gt; for position, you can make a quarter circle shape in the top left corner of the page. The example below uses generated content to create a quarter circle shape for text to flow around.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98375d056a229bddbf86f1f75c33f9507fd5f715" translate="yes" xml:space="preserve">
          <source>As an element of the page may be matched by several selectors, and therefore by several rules potentially containing a given property several times, with different values, the CSS standard defines which one has precedence over the other and must be applied: this is called the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Cascade_and_inheritance&quot;&gt;cascade&lt;/a&gt; algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3bcac34ad41e41b16e38769ddcb6dd47871017" translate="yes" xml:space="preserve">
          <source>As an example, I have 5 flex items, and assign &lt;code&gt;order&lt;/code&gt; values as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff42dbe58ce46db69661b16f2363f6023250fa1" translate="yes" xml:space="preserve">
          <source>As an example, consider the garamond font family, in its normal form, we get the following result:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede3cd3f482e826ff76e19d9496a1cbd66742388" translate="yes" xml:space="preserve">
          <source>As another example, the following media query:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17134bc2562dc6fa9d06d15ee1ced329c0206cd6" translate="yes" xml:space="preserve">
          <source>As column boxes created inside multicol containers are anonymous boxes, there is little we can do to style them. However, we do have a few things that we can do. This guide explains how to change the gap and style rules between columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ec753624e63804268578d920b788831e240a78" translate="yes" xml:space="preserve">
          <source>As defined in the specification, the margins between two block boxes are what creates separation between the elements. We see this with a very simple layout of two paragraphs, to which I have added a border. The default browser stylesheet adds spacing between the paragraphs by way of adding a margin to the top and bottom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e156b1f063029d8130fa20710752ed988898f2c" translate="yes" xml:space="preserve">
          <source>As defined in the specification, there are two kinds of axes: &lt;strong&gt;registered&lt;/strong&gt; and &lt;strong&gt;custom&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c668b172251afbb123050492132d7fcb26077ab" translate="yes" xml:space="preserve">
          <source>As described in the &lt;a href=&quot;layout_using_named_grid_lines&quot;&gt;guide to named lines&lt;/a&gt;, we are using the named line to place our item. As we have 12 lines all with the same name we use the name, and then the index of the line. You could also use the line index itself if you prefer and avoid using named lines at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a28921381bfb4a97a6b20b11f11fb92f7d4dc3" translate="yes" xml:space="preserve">
          <source>As expected, the browser substitutes the value of &lt;code&gt;--text-color&lt;/code&gt; in place of &lt;code&gt;var(--text-color)&lt;/code&gt;, but &lt;code&gt;16px&lt;/code&gt; is not a valid property value for &lt;a href=&quot;color&quot;&gt;&lt;code&gt;color&lt;/code&gt;&lt;/a&gt;. After substitution, the property doesn&amp;rsquo;t make any sense. The browser handles this situation in two steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dacc3eeda87711ab79455b019c323bf4a528aea6" translate="yes" xml:space="preserve">
          <source>As for block boxes, there are a few cases where inline boxes are created automatically by the CSS engine. These inline boxes are also anonymous as they cannot be named by selectors; they inherit the value of all inheritable properties, setting it to &lt;code&gt;initial&lt;/code&gt; for all others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f05826b2f812c5fedad5415fdbfab75ad82f081" translate="yes" xml:space="preserve">
          <source>As in this level of the specification an element has to be floated in order to apply &lt;code&gt;&amp;lt;basic-shape&amp;gt;&lt;/code&gt; to it; this has the side-effect of creating a simple fallback for many cases. If you do not have Shapes support in the browser, the user will see content flowing around the sides of a rectangular box as before. If they do have Shapes support then the visual display is enhanced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd2a65db414509e138cd8542a989f56814d66da" translate="yes" xml:space="preserve">
          <source>As it turns out, nobody seems to have used the first option. The second option was taken by Internet Explorer for Windows and Macintosh, and Opera. The third was adopted by Gecko, and by extension all the browsers that embed it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="901e9ce7a0a77e18938224c05b8b922999c4e724" translate="yes" xml:space="preserve">
          <source>As mentioned above, when an element is floated, it is taken out of the normal flow of the document (though still remaining part of it). It is shifted to the left, or right, until it touches the edge of its containing box, &lt;em&gt;or another floated element&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3029ef39c564c2caba477108cecf8b45f9bf7c31" translate="yes" xml:space="preserve">
          <source>As noted above, when certain properties are given a percentage value, the computed value depends on the element's containing block. The properties that work this way are &lt;strong&gt;box model properties&lt;/strong&gt; and &lt;strong&gt;offset properties&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b441c782fa40457a8c93935417b1ee63dfce110" translate="yes" xml:space="preserve">
          <source>As of Microsoft Edge, &lt;code&gt;-ms-high-contrast: none&lt;/code&gt; is no longer supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7835c8846bc7e5feadd47268d2ea511c2dc8d939" translate="yes" xml:space="preserve">
          <source>As of Safari for iOS 7.1.2, tapping a &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Events/click#Safari_Mobile&quot;&gt;clickable element&lt;/a&gt; causes the element to enter the &lt;code&gt;:hover&lt;/code&gt; state. The element will remain in the &lt;code&gt;:hover&lt;/code&gt; state until a different element has entered the &lt;code&gt;:hover&lt;/code&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94203bcd17fbf0f9cbf4574a6f2254d8c23e2ed4" translate="yes" xml:space="preserve">
          <source>As one of the &lt;a href=&quot;#absolute-size&quot;&gt;absolute-size&lt;/a&gt; or &lt;a href=&quot;#relative-size&quot;&gt;relative-size&lt;/a&gt; keywords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7d1c87a78dbfff243c0841a758408a8db09f91" translate="yes" xml:space="preserve">
          <source>As our layout is now contained in one part of the CSS, this makes it very easy to make changes at different breakpoints. You can do this by redefining the grid, the position of items on the grid, or both at once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfccae53aeba8596aaf9139aafd0214f47dfb3f" translate="yes" xml:space="preserve">
          <source>As shown in the following example, if digits from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;9&lt;/code&gt; are specified as symbols, this counter style will render symbols same as the decimal counter style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a127da6ff1394d33ea9fea3fd2fafa6fac03a49e" translate="yes" xml:space="preserve">
          <source>As soon as I add this CSS, the items start to lay out as a grid. If I make the window smaller or wider the number of column tracks changes &amp;ndash; without me needing to add breakpoints using media queries and redefine the grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87b83328c7ba38817bac5f3f8ca58a1d30c456a8" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;color&lt;/code&gt; property is naturally inherited, all child elements of body will have the same green color. It's worth noting that browsers set the color of links to blue by default instead of allowing the natural inheritance of the color property, so the first link in our list is blue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28dea7e2073f9ef9802dbf9114ef8dd7acd28248" translate="yes" xml:space="preserve">
          <source>As the CSS box alignment properties are implemented differently depending on the specification they interact with, refer to the following pages for each layout type for details of how to use the alignment properties with it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf199e23a94a89ddabbb6217edfeef44af1321f" translate="yes" xml:space="preserve">
          <source>As the allowed space increases in size, the repeated images will stretch (leaving no gaps) until there is room (space left &amp;gt;= half of the image width) for another one to be added. When the next image is added, all of the current ones compress to allow room. Example: An image with an original width of 260px, repeated three times, might stretch until each repetition is 300px wide, and then another image will be added. They will then compress to 225px.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4aec4d65ba5a518a944af3bfa7991e5b76f6aa" translate="yes" xml:space="preserve">
          <source>As the allowed space increases in size, the repeated images will stretch (leaving no gaps) until there is room for another one to be added. When the next image is added, all of the current ones compress to allow room. Example: An image with an original width of 260px, repeated three times, might stretch until each repetition is 300px wide, and then another image will be added. They will then compress to 225px.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728160ecd75bb6ebef95bb8e735e779d7692f769" translate="yes" xml:space="preserve">
          <source>As the structure of at-rules varies widely, please see &lt;a href=&quot;at-rule&quot;&gt;At-rule&lt;/a&gt; to find the syntax of the specific one you want.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8149744cb7fd973fa81f48ef29b813d9c8cf6d0" translate="yes" xml:space="preserve">
          <source>As there are several ways to define the character encoding of a style sheet, the browser will try the following methods in the following order (and stop as soon as one yields a result) :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d43270df517aac7ffd7d1d2df5081c25b283721" translate="yes" xml:space="preserve">
          <source>As this behavior is detailed in the specification, you are safe to rely on using these overrides in your support for older browsers. Nothing that I am describing here should be seen as a &quot;hack&quot;, we are taking advantage of the fact that the grid specification details the interaction between different layout methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa1c2af2cbed4450bba43e447e15f8504e592e3" translate="yes" xml:space="preserve">
          <source>As this page aims to detail things which are specific to CSS Grid Layout and Box Alignment, it should be read in conjunction with the main &lt;a href=&quot;../css_box_alignment&quot;&gt;Box Alignment&lt;/a&gt; page which details the common features of box alignment across layout methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423c3ee0f73b13486f5817469e2a173ad0f3c5d4" translate="yes" xml:space="preserve">
          <source>As this property is not inherited, it must be set for all non-leaf descendants of the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977ad5260bc5ebc7359a57795a3086207e0497ae" translate="yes" xml:space="preserve">
          <source>As usual, you can use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener&quot;&gt;&lt;code&gt;addEventListener()&lt;/code&gt;&lt;/a&gt; method to monitor for this event:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37320ec705ec867a1f08d8ae982258ea40f95a3a" translate="yes" xml:space="preserve">
          <source>As we are using &lt;a href=&quot;../grid-template-areas&quot;&gt;&lt;code&gt;grid-template-areas&lt;/code&gt;&lt;/a&gt; to create the layout. Outside of any media queries I need to name the areas. We name areas using the &lt;a href=&quot;../grid-area&quot;&gt;&lt;code&gt;grid-area&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c7c6e321215b7ea12e1a7e9dd42679eecbca2b" translate="yes" xml:space="preserve">
          <source>As we can now target both sides of a box &amp;mdash; either both inline sides or both block sides &amp;mdash; there are new shorthands available, &lt;a href=&quot;../margin-inline&quot;&gt;&lt;code&gt;margin-inline&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../margin-block&quot;&gt;&lt;code&gt;margin-block&lt;/code&gt;&lt;/a&gt;, which accept two values. The first value will apply to the start of that dimension, the second to the end. If you only use one value it is applied to both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763217bb70aa14ebfc2a00674941ed057bba547b" translate="yes" xml:space="preserve">
          <source>As we can see, the markers remain attached to the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements, no matter where they are. The difference is entirely in how the &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; is styled. We can only see the difference if we try to set a background or border on the &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f13e0cddaabacdec27c3ae895d8b63b0084736e2" translate="yes" xml:space="preserve">
          <source>As we do not currently have browser support for box alignment in block layout, your options for alignment are either to use one of the existing alignment methods or, to make even a single item inside a container a flex item in order to use the alignment properties as specified in flexbox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89faac6a09492ba6fed27b01a7ffcf6f0356f1c4" translate="yes" xml:space="preserve">
          <source>As we have already learned, using any of these values, other than the default of &lt;code&gt;visible,&lt;/code&gt; will create a new Block Formatting Context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d9680a5175fbbc62947daf48aba282fa7b4f5f" translate="yes" xml:space="preserve">
          <source>As we have already seen, &lt;a href=&quot;../float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; and also &lt;a href=&quot;../clear&quot;&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/a&gt; have no effect on a grid item. Therefore you do not need to explicitly set items to &lt;code&gt;float: none&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c361c94b391407a255e7225b973de735baee58c8" translate="yes" xml:space="preserve">
          <source>As we have seen from the above examples if our items are allowed to grow and shrink, when there are fewer items in the last row or column then those items grow to fill the available space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f4580f33d167ac0a0b2bdea3f6de6e627e9dc2" translate="yes" xml:space="preserve">
          <source>As we'll see in the HTML, the inner box (the one we're watching for events on) contains several paragraphs; one for each of the four coordinate systems we'll be reporting on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67d9be21dce4ee083637fc2e42032da4049f532" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;../align-self&quot;&gt;&lt;code&gt;align-self&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../align-items&quot;&gt;&lt;code&gt;align-items&lt;/code&gt;&lt;/a&gt;, you can apply &lt;a href=&quot;../justify-items&quot;&gt;&lt;code&gt;justify-items&lt;/code&gt;&lt;/a&gt; to the grid container, to set the &lt;a href=&quot;../justify-self&quot;&gt;&lt;code&gt;justify-self&lt;/code&gt;&lt;/a&gt; value for all items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31df1517d13bfead77efbced4a56c78d589eb60" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;difference&lt;/code&gt;, a black layer has no effect, while a white layer inverts the other layer's color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec9dcba22aaefcc819e2c92147c0e4250e95b56" translate="yes" xml:space="preserve">
          <source>As with all CSS specifications the Flexbox specification went through a large number of changes before it became the Candidate Recommendation that we have today. As a Candidate Recommendation we should not see large changes at this point to the spec, however this has not been the case with past flexbox iterations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6fc9db5440a68dce8fcf245bc7b69f56fb5ff45" translate="yes" xml:space="preserve">
          <source>As with all shorthand properties, &lt;code&gt;border-bottom&lt;/code&gt; always sets the values of all of the properties that it can set, even if they are not specified. It sets those that are not specified to their default values. This means that ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1360756229dbf578c5e0534f9fd314ab91d04f0c" translate="yes" xml:space="preserve">
          <source>As with all shorthand properties, &lt;code&gt;border-left&lt;/code&gt; always sets the values of all of the properties that it can set, even if they are not specified. It sets those that are not specified to their default values. This means that ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ee7a2d62c2213f282f1e8f7ce6aeed12085cdd" translate="yes" xml:space="preserve">
          <source>As with all shorthand properties, &lt;code&gt;border-right&lt;/code&gt; always sets the values of all of the properties that it can set, even if they are not specified. It sets those that are not specified to their default values. This means that ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6006390ae3c36be15e9919492ff7c1b8d3495319" translate="yes" xml:space="preserve">
          <source>As with all shorthand properties, &lt;code&gt;border-top&lt;/code&gt; always sets the values of all of the properties that it can set, even if they are not specified. It sets those that are not specified to their default values. This means that ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8152b79ceeb97d520cb18af418aa83a769449e77" translate="yes" xml:space="preserve">
          <source>As with all shorthand properties, any omitted sub-values will be set to their &lt;a href=&quot;initial_value&quot;&gt;initial value&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df470e80fba3d4ea35a3fd37867749d1df8c153" translate="yes" xml:space="preserve">
          <source>As with all shorthand properties, any omitted sub-values will be set to their &lt;a href=&quot;initial_value&quot;&gt;initial value&lt;/a&gt;. Importantly, &lt;code&gt;border&lt;/code&gt; cannot be used to specify a custom value for &lt;a href=&quot;border-image&quot;&gt;&lt;code&gt;border-image&lt;/code&gt;&lt;/a&gt;, but instead sets it to its initial value, i.e., &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc4b9e5255fca27c8716db1fab0383893f68b7b" translate="yes" xml:space="preserve">
          <source>As with any front-end technology choice, the decision to use CSS Grid Layout will come down to the browsers your site visitors are typically using. If they tend to use up-to-date versions of Firefox, Chrome, Opera, and Safari, then it would make sense to start using CSS grids once those browsers update. If your site serves a market sector that is tied to older browsers, however, it may not make sense yet. However, my suggestion is not to make assumptions based on how new specifications have been rolled out in browsers in the past. CSS Grid Layout is very different, in terms of the amount of time it has been in development, and the work of the various browser vendors to ensure that what ships works in the same way for everyone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72948f848eea1f78fd1fa15d1372b90596ba4e2e" translate="yes" xml:space="preserve">
          <source>As with any gradient, a linear gradient has &lt;a href=&quot;image#no_intrinsic&quot;&gt;no intrinsic dimensions&lt;/a&gt;; i.e., it has no natural or preferred size, nor a preferred ratio. Its concrete size will match the size of the element it applies to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef7ef52e73803d7a39176dc8df0522610b2935c" translate="yes" xml:space="preserve">
          <source>As with any gradient, a radial gradient has &lt;a href=&quot;image#no_intrinsic&quot;&gt;no intrinsic dimensions&lt;/a&gt;; i.e., it has no natural or preferred size, nor a preferred ratio. Its concrete size will match the size of the element it applies to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10025ceaec0c5962a0f5ca9ad113f97ea0be0132" translate="yes" xml:space="preserve">
          <source>As with any gradient, a repeating linear gradient has &lt;a href=&quot;image#no_intrinsic&quot;&gt;no intrinsic dimensions&lt;/a&gt;; i.e., it has no natural or preferred size, nor a preferred ratio. Its concrete size will match the size of the element it applies to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e9f996e752270da7f880934b241ba33132fae0" translate="yes" xml:space="preserve">
          <source>As with any gradient, a repeating radial gradient has &lt;a href=&quot;image#no_intrinsic&quot;&gt;no intrinsic dimensions&lt;/a&gt;; i.e., it has no natural or preferred size, nor a preferred ratio. Its concrete size will match the size of the element it applies to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1caa7e6093d5cd6077e6c6e6324a32930aff7ca" translate="yes" xml:space="preserve">
          <source>As with any interpolation involving colors, gradients are calculated in the alpha-premultiplied color space. This prevents unexpected shades of gray from appearing when both the color and the opacity are changing. (Be aware that older browsers may not use this behavior when using the &lt;a href=&quot;color_value#transparent_keyword&quot;&gt;transparent keyword&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74303828d11716a2679bc851c986923993f4f1c" translate="yes" xml:space="preserve">
          <source>As with any operator, the &lt;code&gt;not&lt;/code&gt; operator can be applied to a declaration of any complexity. The following examples are both valid:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb7b394b427ab13792c8a68a7d007ea5aa8e0989" translate="yes" xml:space="preserve">
          <source>As with any shorthand property, any individual value that is not specified is set to its corresponding initial value (possibly overriding values previously set using non-shorthand properties). Though not directly settable by &lt;code&gt;font&lt;/code&gt;, the longhands &lt;a href=&quot;font-stretch&quot;&gt;&lt;code&gt;font-stretch&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;font-size-adjust&quot;&gt;&lt;code&gt;font-size-adjust&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;font-kerning&quot;&gt;&lt;code&gt;font-kerning&lt;/code&gt;&lt;/a&gt; are also reset to their initial values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75697177f37090bbfb703515656613f7a36a5a3b" translate="yes" xml:space="preserve">
          <source>As with linear gradients, all you need to create a radial gradient are two colors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49debced3650de6c5bdf1df52fae02c5e8e01803" translate="yes" xml:space="preserve">
          <source>As with margin, there are two-value shorthands for padding &amp;mdash; &lt;a href=&quot;../padding-inline&quot;&gt;&lt;code&gt;padding-inline&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../padding-block&quot;&gt;&lt;code&gt;padding-block&lt;/code&gt;&lt;/a&gt; &amp;mdash; which allow you to set the padding of the two inline, and two block dimensions, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a15c32017657ea5e393f91cbe0fc777416e7f7" translate="yes" xml:space="preserve">
          <source>As with other URLs in CSS, the URL may be relative, in which case it is resolved relative to the location of the style sheet containing the &lt;code&gt;@font-face&lt;/code&gt; rule. In the case of SVG fonts, the URL points to an element within a document containing SVG font definitions. If the element reference is omitted, a reference to the first defined font is implied. Similarly, font container formats that can contain more than one font load only one of the fonts for a given &lt;code&gt;@font-face&lt;/code&gt; rule. Fragment identifiers are used to indicate which font to load. If a container format lacks a defined fragment identifier scheme, a simple 1-based indexing scheme (e.g., &quot;font-collection#1&quot; for the first font, &quot;font-collection#2&quot; for the second font, etc.) is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11bbe01554e7e2819b34dcfe10c3118ef82dc86f" translate="yes" xml:space="preserve">
          <source>As with other properties in the specification we have some new shorthand properties, which give the ability to set two or four values at once. These do not have a direct mapping to physical equivalents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c97632c1e448c2645664201475a4c197ff0fb05" translate="yes" xml:space="preserve">
          <source>As you adjust the parameters that define the color, it gets displayed in all three standard Web CSS formats. In addition, based on the currently-selected color, a palette for HSL and HSV, as well as alpha, is generated. The &quot;eyedropper&quot; style color picker box can be toggled between HSL or HSV format. You can also test colors and how they overlap one another by dragging them into the box at the bottom of the tool and moving them over one another. Adjust their relative Z index values to move them forward and behind one another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab0d2e90d8730ef26f3bf0d972cc286c9f83f2a7" translate="yes" xml:space="preserve">
          <source>As you can see from this guide, CSS Grid Layout is just one part of your toolkit. Don&amp;rsquo;t be afraid to mix it with other methods of doing layout to get the different effects you need.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36dbd81d856ade7267fabf135029d66966b0858" translate="yes" xml:space="preserve">
          <source>As you can see here, the Firefox logo (listed first within &lt;a href=&quot;../background-image&quot;&gt;&lt;code&gt;background-image&lt;/code&gt;&lt;/a&gt;) is on top, directly above the bubbles graphic, followed by the gradient (listed last) sitting underneath all previous 'images'. Each subsequent sub-property (&lt;a href=&quot;../background-repeat&quot;&gt;&lt;code&gt;background-repeat&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../background-position&quot;&gt;&lt;code&gt;background-position&lt;/code&gt;&lt;/a&gt;) applies to the corresponding backgrounds. So the first listed value for &lt;a href=&quot;../background-repeat&quot;&gt;&lt;code&gt;background-repeat&lt;/code&gt;&lt;/a&gt; applies to the first (frontmost) background, and so forth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaabfffedfdaaaf81871536e62c52d2315690c88" translate="yes" xml:space="preserve">
          <source>As you can see with the above example, if you create a grid all child items will lay themselves out one into each grid cell. The default flow is to arrange items by row. Grid will lay an item out into each cell of row 1. If you have created additional rows using the &lt;code&gt;grid-template-rows&lt;/code&gt; property then grid will continue placing items in these rows. If the grid does not have enough rows in the explicit grid to place all of the items new &lt;em&gt;implicit&lt;/em&gt; rows will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975262f0e0a9342ecbc5cc0616eb0cad88755f64" translate="yes" xml:space="preserve">
          <source>As you can see, the CSS is actually essentially identical, save the name of the image file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a229ae7ad339bd92a365b74a084fb598aea93227" translate="yes" xml:space="preserve">
          <source>As you learn and then work with the CSS Grid Layout this tool will give you a better idea of what is happening with your grids visually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81ab788fc1ed6c4c4896205fd1fdc203059d125" translate="yes" xml:space="preserve">
          <source>As you position some items, other items on the grid will continue to be laid out using the auto-placement rules. We will take a proper look at how these work in a later guide but you can see as you work that grid is laying out un-placed items into empty cells of the grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a659dc58d3e2fee62b4a0e5218e09db4aa919bed" translate="yes" xml:space="preserve">
          <source>Assigning &lt;code&gt;outline&lt;/code&gt; a value of &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;none&lt;/code&gt; will remove the browser's default focus style. If an element can be interacted with, it must have a visible focus indicator. Provide obvious focus styling if the default focus style is removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc89491762d2641f3677812d703fe613f1476975" translate="yes" xml:space="preserve">
          <source>Assistive technology cannot parse background images. If the image contains information critical to understanding the page's overall purpose, it is better to describe it semantically in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e89a45048c379dce131c2a37e22605d2d212e1" translate="yes" xml:space="preserve">
          <source>Assistive technology cannot parse border images. If the image contains information critical to understanding the page's overall purpose, it is better to describe it semantically in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af885eb65ddd3ce75e13d7c8dd188534ba9c876" translate="yes" xml:space="preserve">
          <source>Assistive technology such as screen readers cannot parse interactive content that is empty. All interactive content must have an accessible name, which is created by providing a text value for the interactive control's parent element (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;anchors&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;buttons&lt;/a&gt;, etc.). Accessible names expose the interactive control to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/Accessibility/What_is_accessibility#Accessibility_APIs&quot;&gt;accessibility tree&lt;/a&gt;, an API that communicates information useful for assistive technologies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3871f4be945f095e259f2589f5d3a7dc6ab86f7b" translate="yes" xml:space="preserve">
          <source>Assistive technology support is very limited for the &lt;code&gt;speak-as&lt;/code&gt; property. Do not rely on it to convey information critical to understanding the page's purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824d49848b714b48aaf9a3390b71424eae098b9b" translate="yes" xml:space="preserve">
          <source>Associated Elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc564f28d82274d9d0f6b7ea4fb4c21abf9e1cf9" translate="yes" xml:space="preserve">
          <source>Associated elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e38edd1189350f9257d94c1b4516b9229339de" translate="yes" xml:space="preserve">
          <source>Associated type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da2b414345c56b967f0f85c739159d688c3ae45" translate="yes" xml:space="preserve">
          <source>Assume that the document is UTF-8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839b24901b9e4e2fbe5d09a0fa908973103856da" translate="yes" xml:space="preserve">
          <source>Assuming that the browser's default &lt;code&gt;font-size&lt;/code&gt; is 16px, the words &amp;ldquo;outer&amp;rdquo; would be rendered at 16px, but the word &amp;ldquo;inner&amp;rdquo; would be rendered at 25.6px. This is because the inner span's &lt;code&gt;font-size&lt;/code&gt; is 1.6 em which is relative to its parent's &lt;code&gt;font-size&lt;/code&gt;, which is in turn relative to its parent's &lt;code&gt;font-size&lt;/code&gt;. This is often called &lt;strong&gt;compounding&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f329190d0fd15344dac730aabc63c032720e1284" translate="yes" xml:space="preserve">
          <source>Asterisk</source>
          <target state="translated">Asterisk</target>
        </trans-unit>
        <trans-unit id="582dd10cbb2698a4857d90c7a10afa7715fe7bdc" translate="yes" xml:space="preserve">
          <source>Asterisk (*)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52af258576c7131d5b66b6db2b6ebf7f12530f17" translate="yes" xml:space="preserve">
          <source>At least &lt;code&gt;A&lt;/code&gt; times, at most &lt;code&gt;B&lt;/code&gt; times</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e1019e198736e50a02adf1bb75c74186dbfd03" translate="yes" xml:space="preserve">
          <source>At least one input mechanism includes a pointing device of limited accuracy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ba70bd7430da49136810d7c588ef88acea6c37" translate="yes" xml:space="preserve">
          <source>At least one input mechanism includes an accurate pointing device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4dbb0a3826c5207d1df966db15918d4db44a87" translate="yes" xml:space="preserve">
          <source>At least one of the components must be present, and they may appear in any order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9bf396421e0c67511af924f02a27b34ffdd528" translate="yes" xml:space="preserve">
          <source>At least two counter symbols must be specified in the &lt;code&gt;symbols&lt;/code&gt; descriptor or the counter style is not valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d1ffed372e278015dfbe9fe6faa96926b92f05" translate="yes" xml:space="preserve">
          <source>At present only Microsoft Edge supports the unprefixed properties, therefore to use the gap properties in grid layout you should use the &lt;code&gt;grid-row-gap&lt;/code&gt;, &lt;code&gt;grid-column-gap&lt;/code&gt; and &lt;code&gt;grid-gap&lt;/code&gt; versions to ensure full compatibility. You could double up the properties and use both as you would for vendor prefixes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb2e631be9752c938a8e60b4db7bd9bdf032e10" translate="yes" xml:space="preserve">
          <source>At the beginning of this article I explained that the alignment properties currently contained in the Level 1 flexbox specification are also included in Box Alignment Level 3, which may well extend these properties and values in the future. We have already seen one place where this has happened, with the introduction of the &lt;code&gt;space-evenly&lt;/code&gt; value for &lt;code&gt;align-content&lt;/code&gt; and &lt;code&gt;justify-content&lt;/code&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b61309f68e5fb3a59f733fcf55cbdefe79fbabd" translate="yes" xml:space="preserve">
          <source>At the next breakpoint we want to move to a two-column layout. Our header and navigation still span the full grid, so we do not need to specify any positioning for them. The sidebar is starting on the first column line named col-start, spanning 3 lines. It goes after row line 3, as the header and navigation are in the first two row tracks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38806110d7e56d2193cf2edd08916ca8b053f757" translate="yes" xml:space="preserve">
          <source>At-rule</source>
          <target state="translated">At-rule</target>
        </trans-unit>
        <trans-unit id="f9afd920e1c862e7b6102304ef0ed6ec2f44ac59" translate="yes" xml:space="preserve">
          <source>At-rule syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98325eb40fe2abd7e3215984dce046fc3d88906" translate="yes" xml:space="preserve">
          <source>At-rules</source>
          <target state="translated">At-rules</target>
        </trans-unit>
        <trans-unit id="06af6e7ff624a4a1108323cc71bb6526397c6c42" translate="yes" xml:space="preserve">
          <source>Atomic inline boxes cannot be split into several lines in an inline formatting context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8424348d870231b17ee8df52065d603ae3b5c66a" translate="yes" xml:space="preserve">
          <source>Attempts to display a sequence of consecutive ASCII digits (U+0030&amp;ndash;U+0039) that has as many or fewer characters than the specified integer, such that it takes up the space of a single character within the vertical line box. If the integer is omitted, it computes to 2. Integers outside the range of 2-4 are invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170cad46f1a1b8199e5ae22cfded375de7a8244c" translate="yes" xml:space="preserve">
          <source>Attempts to typeset all consecutive characters within the box horizontally, such that they take up the space of a single character within the vertical line of the box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9ede2fd26800b2b0a33f7caddc3f2fa10aa28e" translate="yes" xml:space="preserve">
          <source>Attribute selector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68eda33d5b90439f5e2632898733b1c82ce06ec4" translate="yes" xml:space="preserve">
          <source>Attribute selectors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87cf58243a89656c12f650a1a2bd41fbc529be0" translate="yes" xml:space="preserve">
          <source>Author origin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7fcfa9127559cd09631456504a4bdcf32b1ee97" translate="yes" xml:space="preserve">
          <source>Author stylesheets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2ca86523a9e8652f29d9d03160a6d430d53520" translate="yes" xml:space="preserve">
          <source>Author(s): Eric A. Meyer, Netscape Communications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a209493cd97429d9cfd06e3ed0cdf5baedd06e7e" translate="yes" xml:space="preserve">
          <source>Author(s): Eric Meyer, Standards Evangelist, Netscape Communications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f895760c4ecf095d559095b93822a03e0130d92b" translate="yes" xml:space="preserve">
          <source>Author(s): Paolo Lombardi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e37e00048120c0773ef19e2f9b48ce29c009b98" translate="yes" xml:space="preserve">
          <source>Authors can set values for the longhand properties: &lt;a href=&quot;grid-template-rows&quot;&gt;&lt;code&gt;grid-template-rows&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;grid-template-columns&quot;&gt;&lt;code&gt;grid-template-columns&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;grid-template-areas&quot;&gt;&lt;code&gt;grid-template-areas&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf8feef4429016e754d35b0b0d369c6e42ebece" translate="yes" xml:space="preserve">
          <source>Authors must use order and the grid-placement properties only for visual, not logical, reordering of content. Style sheets that use these features to perform logical reordering are non-conforming.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ea854803fec721d87ce3fe7a0f251f0c3be254" translate="yes" xml:space="preserve">
          <source>Authors should not expect &lt;code&gt;capitalize&lt;/code&gt; to follow language-specific title casing conventions (such as skipping articles in English).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217b8af2ebcf626b4ad56af3d0f0ef3a23985fdc" translate="yes" xml:space="preserve">
          <source>Auto-filling grid tracks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e393dc3b0a011ba2d59eee57950803be2da1584" translate="yes" xml:space="preserve">
          <source>Auto-hiding scrollbars are used if the element's content overflows. Auto-hiding scrollbars are displayed during scrolling or shortly after the pointer interacts with the page, and are hidden shortly after scrolling and pointer interaction stops. When they are visible, auto-hiding scrollbars overlap the element's content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f72de507b54e257f51049e15207c07d99e238a" translate="yes" xml:space="preserve">
          <source>Auto-placement and Writing Modes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a95771ce2ace568450638cf30d1d17b1e9dc87cb" translate="yes" xml:space="preserve">
          <source>Auto-placement by column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85059b608a61ecc02bcdb4f172b6b12a984859ad" translate="yes" xml:space="preserve">
          <source>Auto-placement can also help you lay out interface items which do have logical order. An example is the definition list in this next example. Definition lists are an interesting challenge to style as they are flat, there is nothing wrapping the groups of &lt;code&gt;dt&lt;/code&gt; and &lt;code&gt;dd&lt;/code&gt; items. In my example I am allowing auto-placement to place the items, however I have classes that start a &lt;code&gt;dt&lt;/code&gt; in column 1, and &lt;code&gt;dd&lt;/code&gt; in column 2, this ensure that terms go on one side and definitions on the other - no matter how many of each we have.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdef7a1f62713d4fdd52c0cb275ca6e4c7aa1e6c" translate="yes" xml:space="preserve">
          <source>Auto-placement in CSS Grid Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa6d7714817b38bc2b19ec4337b9997401d54de8" translate="yes" xml:space="preserve">
          <source>Auto-placement in grid layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ef9a24c9838b0865aae322e89b3355c912e487" translate="yes" xml:space="preserve">
          <source>Auto-placement is useful whenever you have a collection of items. That could be items that do not have a logical order such as a gallery of photos, or product listing. In that case you might choose to use the dense packing mode to fill in any holes in your grid. In my image gallery example I have some landscape and some portrait images. I have set landscape images &amp;ndash; with a class of &lt;code&gt;landscape&lt;/code&gt; to span two column tracks. I then use &lt;code&gt;grid-auto-flow: dense&lt;/code&gt; to create a densely packed grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd513a95c05dcf44ac3b8b33cb0277352f95376" translate="yes" xml:space="preserve">
          <source>Automatic application of optimizeLegibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be471b6301359657c7190d07410c1394454ba816" translate="yes" xml:space="preserve">
          <source>Automatic hyphenation only works for languages with hyphenation dictionaries that are integrated into Firefox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4cc19972db0c8257ba57703b4fb59ee3beb905" translate="yes" xml:space="preserve">
          <source>Automatic hyphenation only works for languages with hyphenation dictionaries that are integrated into Internet Explorer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372eb8a43ea880c98582bbcc1ab50c3a6f312a88" translate="yes" xml:space="preserve">
          <source>Automatic sizing using &quot;auto&quot; for both dimensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c693df48aada2abcad1a75e58d19fec3f88c2ee" translate="yes" xml:space="preserve">
          <source>Automatically defines the region of the image to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a13bc117b4ff25903c93e8bcb87d85a04b317b" translate="yes" xml:space="preserve">
          <source>Automatically sizing form fields to fit their container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4c677b1ad9dc71d11b3ede7bc36b283a7d183a" translate="yes" xml:space="preserve">
          <source>Autoprefixer grid layout support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece1a6033ce6ddb7ce5e7311976d9a1d1806ad9c" translate="yes" xml:space="preserve">
          <source>Avoid page breaks after the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b997a9d2ddd92d3cce19431514674bf0edba209" translate="yes" xml:space="preserve">
          <source>Avoid page breaks before the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13319fbc4b3b7287878e1d50fae9715d248f4853" translate="yes" xml:space="preserve">
          <source>Avoid page breaks inside the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca6acc933d9ea2c56e684ba15568b3acd1ba19d" translate="yes" xml:space="preserve">
          <source>Avoiding using &lt;code&gt;-webkit-isolate&lt;/code&gt;. It can lock up older versions of Safari (up to version 9) and Chrome (up to version 47).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ccf95c876f9a1a8e12d4b01cce8199c3f9d5baf" translate="yes" xml:space="preserve">
          <source>Avoids any break (page, column, or region) from being inserted right after the principal box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce3962f902691dc3ae2c60c0d350e52bc30ad86" translate="yes" xml:space="preserve">
          <source>Avoids any break (page, column, or region) from being inserted right before the principal box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c2c937f67d147c8b23c7248534f7e51694228b" translate="yes" xml:space="preserve">
          <source>Avoids any break (page, column, or region) from being inserted within the principal box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca0b5d81974d861b6da10fd37dc867f3be676ab" translate="yes" xml:space="preserve">
          <source>Avoids any column break right after the principal box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08544d2ec8cd09f12ffc4148f6ada827430dc59" translate="yes" xml:space="preserve">
          <source>Avoids any column break right before the principal box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc7c625efe2e0af958d9cc2b4b005776b550134" translate="yes" xml:space="preserve">
          <source>Avoids any column break within the principle box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d25c0d0416f815ea872ef12d6d0b722c31ce7fe" translate="yes" xml:space="preserve">
          <source>Avoids any page break right after the principal box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a07589cc260adc04fe86d0a360524b2f8b715d1" translate="yes" xml:space="preserve">
          <source>Avoids any page break right before the principal box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d26e36159c2031e7e62550a8d3d51586c03c61" translate="yes" xml:space="preserve">
          <source>Avoids any page break within the principle box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f248c4adb479bcb79eed25ed546f24ac7246c13a" translate="yes" xml:space="preserve">
          <source>Avoids any region break right after the principal box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa09d3f069530a894806f33fc2868abe89edab06" translate="yes" xml:space="preserve">
          <source>Avoids any region break right before the principal box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b850969beef07d3de044b7a3b5c0e2ff16d3f5" translate="yes" xml:space="preserve">
          <source>Avoids any region break within the principle box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cfd2f32292184dd4825b5fa86c0edef970100b8" translate="yes" xml:space="preserve">
          <source>Axis Praxis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701c1926b397ee46c79863d8b6ab2572523d3aec" translate="yes" xml:space="preserve">
          <source>Axis Tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="308609cf476af7a2a724e5403d4f3aef035510c8" translate="yes" xml:space="preserve">
          <source>B) Another scenario</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9498fecd968f6697c0b8eed7350e8e4f472bb2" translate="yes" xml:space="preserve">
          <source>B) Or add the same selector after the existing one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6400eaec160a4a41543edfea959e655d8e35d9f" translate="yes" xml:space="preserve">
          <source>B4</source>
          <target state="translated">B4</target>
        </trans-unit>
        <trans-unit id="6952d23be8231427a9994cf117ac904e19922eea" translate="yes" xml:space="preserve">
          <source>B5</source>
          <target state="translated">B5</target>
        </trans-unit>
        <trans-unit id="8e54083372ddc35f10afb0cd76656d33b0afafba" translate="yes" xml:space="preserve">
          <source>BCP 47 - Tags for Identifying Languages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403216f7b5992a1ca7b0b5712f1bfa5502ae6986" translate="yes" xml:space="preserve">
          <source>BFC</source>
          <target state="translated">BFC</target>
        </trans-unit>
        <trans-unit id="64dd60fe1a049fe6db3eb1369dec2e42bf428e21" translate="yes" xml:space="preserve">
          <source>Background</source>
          <target state="translated">Background</target>
        </trans-unit>
        <trans-unit id="42e2c6ecd46618a7d23824c444eafe6c2618edf1" translate="yes" xml:space="preserve">
          <source>Background color for combo-boxes. Should be used with the &lt;code&gt;-moz-ComboboxText&lt;/code&gt; foreground color. In versions prior to 1.9.2, use &lt;code&gt;-moz-Field&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8daa12208f85a777471de229b6eda4216e9e687" translate="yes" xml:space="preserve">
          <source>Background color for dialog boxes. Should be used with the &lt;code&gt;-moz-DialogText&lt;/code&gt; foreground color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ff11b763b18a143e27fc700e72b8664cf0b3aa" translate="yes" xml:space="preserve">
          <source>Background color for even-numbered rows in a tree. Should be used with the &lt;code&gt;-moz-FieldText&lt;/code&gt; foreground color. In Gecko versions prior to 1.9, use &lt;code&gt;-moz-Field&lt;/code&gt;. See also &lt;code&gt;-moz-OddTreeRow&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8bc2f1f65a3b381cdf398175e34745d146ed3f" translate="yes" xml:space="preserve">
          <source>Background color for highlighted item in HTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt;s. Should be used with the &lt;code&gt;-moz-html-CellHighlightText&lt;/code&gt; foreground color. Prior to Gecko 1.9, use &lt;code&gt;-moz-CellHighlight&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ec53b4635a401bc8636f32ba9a0416ababa01d" translate="yes" xml:space="preserve">
          <source>Background color for hovered menu items. Often similar to &lt;code&gt;Highlight&lt;/code&gt;. Should be used with the &lt;code&gt;-moz-MenuHoverText&lt;/code&gt; or &lt;code&gt;-moz-MenuBarHoverText&lt;/code&gt; foreground color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f101bae04aa5503350996b115683c36796e135" translate="yes" xml:space="preserve">
          <source>Background color for odd-numbered rows in a tree. Should be used with the &lt;code&gt;-moz-FieldText&lt;/code&gt; foreground color. In Gecko versions prior to 1.9, use &lt;code&gt;-moz-Field&lt;/code&gt;. See also &lt;code&gt;-moz-EvenTreeRow&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb34540365d685eadef11e583ec8bd0283518dfa" translate="yes" xml:space="preserve">
          <source>Background color for selected item in a tree widget. Should be used with the &lt;code&gt;-moz-CellHighlightText&lt;/code&gt; foreground color. See also &lt;code&gt;-moz-html-CellHighlight&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a3f7d19d93c8ccbfc7d9ea7a0f8db91cfb6e9c" translate="yes" xml:space="preserve">
          <source>Background color for tooltip controls. Should be used with the &lt;code&gt;InfoText&lt;/code&gt; foreground color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d501f75b8de7fa24afd9aaf754e4a335e24d70d9" translate="yes" xml:space="preserve">
          <source>Background color of multiple document interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d7495d9dc165afdf38b71b31bd7f1279be45a2" translate="yes" xml:space="preserve">
          <source>Background color of scroll bars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76a114770f934cac18028fc68ac1be829880e50" translate="yes" xml:space="preserve">
          <source>Background images created with the &lt;a href=&quot;element()&quot;&gt;&lt;code&gt;element()&lt;/code&gt;&lt;/a&gt; function use the intrinsic dimensions and proportions of the generating element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc0b7d5600c1796be7990eaa50114ce81801368" translate="yes" xml:space="preserve">
          <source>Background properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b63f34c49519c44ac29a3b84dbf758545f6b72" translate="yes" xml:space="preserve">
          <source>Background properties: &lt;a href=&quot;background&quot;&gt;&lt;code&gt;background&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;background-color&quot;&gt;&lt;code&gt;background-color&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;background-image&quot;&gt;&lt;code&gt;background-image&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee35c6b809510e253378d782477598ae6ba5de85" translate="yes" xml:space="preserve">
          <source>Backgrounds &amp;amp; Borders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc42c6454125537cf2c329f6d0709580e2363d1" translate="yes" xml:space="preserve">
          <source>Backwards Compatibility of Flexbox</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57b2c95bfa686e39661c8ce37acc3bbd6511978" translate="yes" xml:space="preserve">
          <source>Backwards compatibility of Flexbox</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
