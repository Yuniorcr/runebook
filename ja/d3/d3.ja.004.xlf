<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="d3">
    <body>
      <group id="d3">
        <trans-unit id="1199760a40028de7aa5e48fc3a5f5acb6e21837c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;x&lt;/em&gt; is specified, sets the x0 accessor to the specified function or number and returns this area generator. If &lt;em&gt;x&lt;/em&gt; is not specified, returns the current x0 accessor, which defaults to:</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt;が指定されている場合、x0アクセサーを指定された関数または番号に設定し、このエリアジェネレーターを返します。&lt;em&gt;x&lt;/em&gt;が指定されていない場合、現在のx0アクセサーを返します。デフォルトは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="5bdb4edec8eb76229c43067f30e9535b8297b073" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;x&lt;/em&gt; is specified, sets the x1 accessor to the specified function or number and returns this area generator. If &lt;em&gt;x&lt;/em&gt; is not specified, returns the current x1 accessor, which defaults to null, indicating that the previously-computed &lt;a href=&quot;#area_x0&quot;&gt;x0&lt;/a&gt; value should be reused for the x1 value.</source>
          <target state="translated">&lt;em&gt;x&lt;/em&gt;が指定されている場合、x1アクセサーを指定された関数または番号に設定し、このエリアジェネレーターを返します。&lt;em&gt;x&lt;/em&gt;が指定されていない場合、現在のx1アクセサーを返します。デフォルトはnullで、以前に計算された&lt;a href=&quot;#area_x0&quot;&gt;x0&lt;/a&gt;値をx1値に再利用する必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="fc94ac1d8c4d78c1d52ad2b56f5fb5eb6d474264" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;y&lt;/em&gt; is specified, sets &lt;a href=&quot;#area_y0&quot;&gt;y0&lt;/a&gt; to &lt;em&gt;y&lt;/em&gt; and &lt;a href=&quot;#area_y1&quot;&gt;y1&lt;/a&gt; to null and returns this area generator. If &lt;em&gt;y&lt;/em&gt; is not specified, returns the current y0 accessor.</source>
          <target state="translated">&lt;em&gt;y&lt;/em&gt;が指定されている場合、&lt;a href=&quot;#area_y0&quot;&gt;y0&lt;/a&gt;を&lt;em&gt;yに&lt;/em&gt;、&lt;a href=&quot;#area_y1&quot;&gt;y1&lt;/a&gt;をnullに設定し、このエリアジェネレータを返します。&lt;em&gt;y&lt;/em&gt;が指定されていない場合は、現在のy0アクセサーを返します。</target>
        </trans-unit>
        <trans-unit id="4c93d7375ba9fb7b2b18d8f26f775d5a39e6c3f6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;y&lt;/em&gt; is specified, sets the &lt;em&gt;y&lt;/em&gt;-accessor to the specified function or number and returns this link generator. If &lt;em&gt;y&lt;/em&gt; is not specified, returns the current &lt;em&gt;y&lt;/em&gt;-accessor, which defaults to:</source>
          <target state="translated">&lt;em&gt;y&lt;/em&gt;が指定されている場合、&lt;em&gt;y&lt;/em&gt; -accessorを指定された関数または番号に設定し、このリンクジェネレーターを返します。&lt;em&gt;y&lt;/em&gt;が指定されていない場合、現在の&lt;em&gt;y&lt;/em&gt; -accessorを返します。デフォルトは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="cfec72e8930ff60271c5eb110cb51cad99ad0f2f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;y&lt;/em&gt; is specified, sets the &lt;em&gt;y&lt;/em&gt;-coordinate accessor to the specified number or function, re-evaluates the &lt;em&gt;y&lt;/em&gt;-accessor for each node, and returns this force. If &lt;em&gt;y&lt;/em&gt; is not specified, returns the current &lt;em&gt;y&lt;/em&gt;-accessor, which defaults to:</source>
          <target state="translated">場合&lt;em&gt;Yが&lt;/em&gt;指定され、セット&lt;em&gt;Y&lt;/em&gt;指定された数または機能に-座標アクセッサを再評価し&lt;em&gt;、Y&lt;/em&gt;の各ノードの-accessorを、この力を返します。&lt;em&gt;y&lt;/em&gt;が指定されていない場合、現在の&lt;em&gt;y&lt;/em&gt; -accessorを返します。デフォルトは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="9c4b3579df4ccc5e63fedf050df5b6c07a65a299" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;y&lt;/em&gt; is specified, sets the &lt;em&gt;y&lt;/em&gt;-coordinate accessor. If &lt;em&gt;y&lt;/em&gt; is not specified, returns the current &lt;em&gt;y&lt;/em&gt;-coordinate accessor, which defaults to:</source>
          <target state="translated">場合は&lt;em&gt;Yが&lt;/em&gt;指定され、セット&lt;em&gt;Y&lt;/em&gt; -座標アクセサを。&lt;em&gt;y&lt;/em&gt;が指定されていない場合、現在の&lt;em&gt;y&lt;/em&gt;座標アクセサーを返します。デフォルトは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="32004d42e280383cf1f9b630f5613b9eef97528c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;y&lt;/em&gt; is specified, sets the &lt;em&gt;y&lt;/em&gt;-coordinate of the centering position to the specified number and returns this force. If &lt;em&gt;y&lt;/em&gt; is not specified, returns the current &lt;em&gt;y&lt;/em&gt;-coordinate, which defaults to zero.</source>
          <target state="translated">&lt;em&gt;y&lt;/em&gt;が指定されている場合、センタリング位置の&lt;em&gt;y&lt;/em&gt;座標を指定された数に設定し、この力を返します。&lt;em&gt;y&lt;/em&gt;が指定されていない場合は、現在の&lt;em&gt;y&lt;/em&gt;座標を返します。デフォルトはゼロです。</target>
        </trans-unit>
        <trans-unit id="fea4281f566b9633213ae52c53d6f463cfac0d70" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;y&lt;/em&gt; is specified, sets the &lt;em&gt;y&lt;/em&gt;-coordinate of the circle center to the specified number and returns this force. If &lt;em&gt;y&lt;/em&gt; is not specified, returns the current &lt;em&gt;y&lt;/em&gt;-coordinate of the center, which defaults to zero.</source>
          <target state="translated">&lt;em&gt;y&lt;/em&gt;が指定されている場合、円の中心の&lt;em&gt;y&lt;/em&gt;座標を指定された数に設定し、この力を返します。&lt;em&gt;y&lt;/em&gt;が指定されていない場合、中心の現在の&lt;em&gt;y&lt;/em&gt;座標を返します。デフォルトはゼロです。</target>
        </trans-unit>
        <trans-unit id="d5a2fcf48c4ca81c726bd6f21bbb699a45134ab5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;y&lt;/em&gt; is specified, sets the current &lt;em&gt;y&lt;/em&gt;-coordinate accessor and returns the quadtree. If &lt;em&gt;y&lt;/em&gt; is not specified, returns the current &lt;em&gt;y&lt;/em&gt;-accessor, which defaults to:</source>
          <target state="translated">&lt;em&gt;y&lt;/em&gt;が指定されている場合、現在の&lt;em&gt;y&lt;/em&gt;座標アクセサーを設定し、四分木を返します。&lt;em&gt;y&lt;/em&gt;が指定されていない場合、現在の&lt;em&gt;y&lt;/em&gt; -accessorを返します。デフォルトは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="8c4ef7b0f745fbfd34f108e1b20761d6bf8c2bc3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;y&lt;/em&gt; is specified, sets the y accessor to the specified function or number and returns this line generator. If &lt;em&gt;y&lt;/em&gt; is not specified, returns the current y accessor, which defaults to:</source>
          <target state="translated">&lt;em&gt;y&lt;/em&gt;が指定されている場合、yアクセサーを指定された関数または数値に設定し、この行ジェネレーターを返します。&lt;em&gt;y&lt;/em&gt;が指定されていない場合、現在のyアクセサーを返します。デフォルトは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="087f7498998c92f09e5a5f9cf137cd838145289d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;y&lt;/em&gt; is specified, sets the y0 accessor to the specified function or number and returns this area generator. If &lt;em&gt;y&lt;/em&gt; is not specified, returns the current y0 accessor, which defaults to:</source>
          <target state="translated">&lt;em&gt;y&lt;/em&gt;が指定されている場合、y0アクセサーを指定された関数または数値に設定し、このエリアジェネレーターを返します。&lt;em&gt;y&lt;/em&gt;が指定されていない場合、現在のy0アクセサーを返します。デフォルトは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="f95e31d5bd6a21a1cbd9986b0489ef4eebb7648d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;y&lt;/em&gt; is specified, sets the y1 accessor to the specified function or number and returns this area generator. If &lt;em&gt;y&lt;/em&gt; is not specified, returns the current y1 accessor, which defaults to:</source>
          <target state="translated">&lt;em&gt;y&lt;/em&gt;が指定されている場合、y1アクセサーを指定された関数または数値に設定し、このエリアジェネレーターを返します。&lt;em&gt;y&lt;/em&gt;が指定されていない場合、現在のy1アクセサーを返します。デフォルトは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="ea638198e5d85da769fe85f15c7fcdce2b26821d" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;http://www.w3.org/TR/CSP/&quot;&gt;content security policy&lt;/a&gt; is in place, note that &lt;a href=&quot;#dsv_parse&quot;&gt;&lt;em&gt;dsv&lt;/em&gt;.parse&lt;/a&gt; requires &lt;code&gt;unsafe-eval&lt;/code&gt; in the &lt;code&gt;script-src&lt;/code&gt; directive, due to the (safe) use of dynamic code generation for fast parsing. (See &lt;a href=&quot;https://github.com/d3/d3-dsv/blob/master/src/dsv.js&quot;&gt;source&lt;/a&gt;.) Alternatively, use &lt;a href=&quot;#dsv_parseRows&quot;&gt;&lt;em&gt;dsv&lt;/em&gt;.parseRows&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/CSP/&quot;&gt;コンテンツセキュリティポリシー&lt;/a&gt;が適用されている場合、高速解析のための動的コード生成を（安全に）使用するため、&lt;a href=&quot;#dsv_parse&quot;&gt;&lt;em&gt;dsv&lt;/em&gt; .parse&lt;/a&gt;は &lt;code&gt;script-src&lt;/code&gt; ディレクティブで &lt;code&gt;unsafe-eval&lt;/code&gt; を必要とすることに注意してください。（&lt;a href=&quot;https://github.com/d3/d3-dsv/blob/master/src/dsv.js&quot;&gt;ソースを&lt;/a&gt;参照してください。）または、&lt;a href=&quot;#dsv_parseRows&quot;&gt;&lt;em&gt;dsv&lt;/em&gt;&lt;/a&gt; .parseRowsを使用します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eb66108cf3e239e827799b9671ab8679ff72e814" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;callback&lt;/em&gt; is specified, a &lt;a href=&quot;#request_get&quot;&gt;GET&lt;/a&gt; request is sent, making it equivalent to:</source>
          <target state="translated">場合は&lt;em&gt;、コールバックが&lt;/em&gt;指定され、&lt;a href=&quot;#request_get&quot;&gt;GETの&lt;/a&gt;要求はにそれが同等作り、送信されます。</target>
        </trans-unit>
        <trans-unit id="9e51491d81f37f7c5526d11c7046a973a57ad802" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;context&lt;/em&gt; is not specified, returns the current render context which defaults to null.</source>
          <target state="translated">&lt;em&gt;コンテキスト&lt;/em&gt;が指定されていない場合は、現在のレンダリングコンテキストを返します。デフォルトはnullです。</target>
        </trans-unit>
        <trans-unit id="7a7140dd799575a0ec520f778f9aad09f0d75bab" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;count&lt;/em&gt; is specified instead of an array of &lt;em&gt;thresholds&lt;/em&gt;, then approximately &lt;em&gt;count&lt;/em&gt; uniformly-spaced nicely-rounded thresholds will be generated; see &lt;a href=&quot;d3-array#ticks&quot;&gt;d3.ticks&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;しきい値の&lt;/em&gt;配列の代わりに&lt;em&gt;カウント&lt;/em&gt;が指定されている場合は、均一な間隔で適切に丸められたしきい値がおよそ&lt;em&gt;カウント&lt;/em&gt;されます。&lt;a href=&quot;d3-array#ticks&quot;&gt;d3.ticksを&lt;/a&gt;参照してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d39a76a502698e82bb734273f3576b78f716cf94" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;count&lt;/em&gt; is specified instead of an array of &lt;em&gt;thresholds&lt;/em&gt;, then the &lt;a href=&quot;#histogram_domain&quot;&gt;domain&lt;/a&gt; will be uniformly divided into approximately &lt;em&gt;count&lt;/em&gt; bins; see &lt;a href=&quot;#ticks&quot;&gt;ticks&lt;/a&gt;.</source>
          <target state="translated">場合&lt;em&gt;カウント&lt;/em&gt;のアレイの代わりに、指定され&lt;em&gt;たしきい値&lt;/em&gt;は、&lt;a href=&quot;#histogram_domain&quot;&gt;ドメインが&lt;/a&gt;一様に約に分割される&lt;em&gt;カウント&lt;/em&gt;ビンを、&lt;a href=&quot;#ticks&quot;&gt;目盛りを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cbdbacaeea5f84594572257000a5122923204654" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;count&lt;/em&gt; is specified instead of an array of &lt;em&gt;thresholds&lt;/em&gt;, then the input values&amp;rsquo; &lt;a href=&quot;d3-array#extent&quot;&gt;extent&lt;/a&gt; will be uniformly divided into approximately &lt;em&gt;count&lt;/em&gt; bins; see &lt;a href=&quot;d3-array#ticks&quot;&gt;d3.ticks&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;しきい値の&lt;/em&gt;配列の代わりに&lt;em&gt;カウント&lt;/em&gt;が指定されている場合、入力値の&lt;a href=&quot;d3-array#extent&quot;&gt;範囲&lt;/a&gt;はほぼ&lt;em&gt;カウント&lt;/em&gt;ビンに均一に分割されます。&lt;a href=&quot;d3-array#ticks&quot;&gt;d3.ticksを&lt;/a&gt;参照してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="405ff701c00d1d2aac5995a20227a8d807be8dd3" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;key&lt;/em&gt; function is not specified, then the first datum in &lt;em&gt;data&lt;/em&gt; is assigned to the first selected element, the second datum to the second selected element, and so on. A &lt;em&gt;key&lt;/em&gt; function may be specified to control which datum is assigned to which element, replacing the default join-by-index, by computing a string identifier for each datum and element. This key function is evaluated for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element (&lt;em&gt;nodes&lt;/em&gt;[&lt;em&gt;i&lt;/em&gt;]); the returned string is the element&amp;rsquo;s key. The key function is then also evaluated for each new datum in &lt;em&gt;data&lt;/em&gt;, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the group&amp;rsquo;s new &lt;em&gt;data&lt;/em&gt;, with &lt;em&gt;this&lt;/em&gt; as the group&amp;rsquo;s parent DOM element; the returned string is the datum&amp;rsquo;s key. The datum for a given key is assigned to the element with the matching key. If multiple elements have the same key, the duplicate elements are put into the exit selection; if multiple data have the same key, the duplicate data are put into the enter selection.</source>
          <target state="translated">場合&lt;em&gt;キー&lt;/em&gt;機能が指定されていない、その後の最初の基準&lt;em&gt;データは、&lt;/em&gt;最初に選択された要素、第2の選択された要素に第2のデータに割り当てられ、というようにされています。各データムと要素の文字列識別子を計算することにより、デフォルトのjoin-by-indexに代わって、どのデータムがどの要素に割り当てられるかを制御する&lt;em&gt;キー&lt;/em&gt;関数を指定できます。このキーの機能は、現在の基準（渡されて、順番に、選択された各要素について評価される&lt;em&gt;D&lt;/em&gt;）、現在のインデックス（&lt;em&gt;I&lt;/em&gt;）、および現在のグループ（&lt;em&gt;ノード&lt;/em&gt;と、）&lt;em&gt;この&lt;/em&gt;現在のDOM要素（AS &lt;em&gt;ノード&lt;/em&gt; [ &lt;em&gt;I&lt;/em&gt;]）;返される文字列は要素のキーです。キーの機能は、その後も各新しいデータのために評価される&lt;em&gt;データ&lt;/em&gt;電流基準（渡され、&lt;em&gt;D&lt;/em&gt;）、現在のインデックス（&lt;em&gt;I&lt;/em&gt;）、およびグループの新たな&lt;em&gt;データを&lt;/em&gt;用いて、&lt;em&gt;この&lt;/em&gt;グループの親DOM要素として、返される文字列はデータのキーです。指定されたキーのデータは、一致するキーを持つ要素に割り当てられます。複数の要素が同じキーを持っている場合、重複する要素は出口選択に入れられます。複数のデータが同じキーを持っている場合、重複したデータが入力選択に入れられます。</target>
        </trans-unit>
        <trans-unit id="d2742089a86d03918c6d723fbaae48bee1c3f9fb" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;listener&lt;/em&gt; is not specified, returns the currently-assigned listener for the specified event &lt;em&gt;typename&lt;/em&gt; on the first (non-null) selected element, if any. If multiple typenames are specified, the first matching listener is returned.</source>
          <target state="translated">場合&lt;em&gt;リスナーが&lt;/em&gt;指定されていない場合、指定されたイベントのために現在割り当てられているリスナーを返し&lt;em&gt;型名&lt;/em&gt;があれば、最初の（非ヌル）選択された要素に。複数のタイプ名が指定されている場合、最初に一致したリスナーが返されます。</target>
        </trans-unit>
        <trans-unit id="6359a542485e1e35263315a15f40f32e2e049b3e" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;projection&lt;/em&gt; is specified, sets the current projection to the specified projection. If &lt;em&gt;projection&lt;/em&gt; is not specified, returns the current projection, which defaults to null. The null projection represents the identity transformation: the input geometry is not projected and is instead rendered directly in raw coordinates. This can be useful for fast rendering of &lt;a href=&quot;https://bl.ocks.org/mbostock/5557726&quot;&gt;pre-projected geometry&lt;/a&gt;, or for fast rendering of the equirectangular projection.</source>
          <target state="translated">&lt;em&gt;プロジェクション&lt;/em&gt;が指定されている場合、現在のプロジェクションを指定されたプロジェクションに設定します。&lt;em&gt;プロジェクション&lt;/em&gt;が指定されていない場合、現在のプロジェクションを返します。デフォルトはnullです。null投影は恒等変換を表します。入力ジオメトリは投影されず、代わりに未加工の座標で直接レンダリングされます。これは、&lt;a href=&quot;https://bl.ocks.org/mbostock/5557726&quot;&gt;事前に投影されたジオメトリの&lt;/a&gt;高速レンダリング、または正距円筒投影の高速レンダリングに役立ちます。</target>
        </trans-unit>
        <trans-unit id="ee45a0d10ed7b8df0e3a8bc0281ffb2561d9cd09" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;row&lt;/em&gt; conversion function is not specified, field values are strings. For safety, there is no automatic conversion to numbers, dates, or other types. In some cases, JavaScript may coerce strings to numbers for you automatically (for example, using the &lt;code&gt;+&lt;/code&gt; operator), but better is to specify a &lt;em&gt;row&lt;/em&gt; conversion function.</source>
          <target state="translated">&lt;em&gt;行&lt;/em&gt;変換関数が指定されていない場合、フィールド値は文字列です。安全のため、数値、日付、その他のタイプへの自動変換はありません。場合によっては、JavaScriptは文字列を自動的に数値に変換することがあります（たとえば、 &lt;code&gt;+&lt;/code&gt; 演算子を使用）。ただし、&lt;em&gt;行&lt;/em&gt;変換関数を指定する方が適切です。</target>
        </trans-unit>
        <trans-unit id="37759387fde3768a6e22d7233ea7f9fb1e257b26" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;row&lt;/em&gt; conversion function is specified, the specified function is invoked for each row, being passed an array representing the current row (&lt;code&gt;d&lt;/code&gt;), the index (&lt;code&gt;i&lt;/code&gt;) starting at zero for the first row, and the array of column names. If the returned value is null or undefined, the row is skipped and will be omitted from the array returned by &lt;em&gt;dsv&lt;/em&gt;.parse; otherwise, the returned value defines the corresponding row object. For example:</source>
          <target state="translated">場合&lt;em&gt;行&lt;/em&gt;変換関数が指定され、指定された関数は、行ごとに呼び出され、現在の行（表す配列渡される &lt;code&gt;d&lt;/code&gt; ）、インデックス（ &lt;code&gt;i&lt;/code&gt; 最初の行の0から始まる）、およびカラム名の配列。戻り値がnullまたは未定義の場合、行はスキップされ、&lt;em&gt;dsv&lt;/em&gt; .parse によって返される配列から除外されます。それ以外の場合、戻り値は対応する行オブジェクトを定義します。例えば：</target>
        </trans-unit>
        <trans-unit id="66b7ca97d22160775483d71556bf932fc0a763e5" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;row&lt;/em&gt; conversion function is specified, the specified function is invoked for each row, being passed an object representing the current row (&lt;code&gt;d&lt;/code&gt;), the index (&lt;code&gt;i&lt;/code&gt;) starting at zero for the first non-header row, and the array of column names. If the returned value is null or undefined, the row is skipped and will be omitted from the array returned by &lt;em&gt;dsv&lt;/em&gt;.parse; otherwise, the returned value defines the corresponding row object. For example:</source>
          <target state="translated">場合&lt;em&gt;行&lt;/em&gt;変換関数が指定され、指定された関数は、現在の行（表すオブジェクト渡され、行ごとに呼び出され &lt;code&gt;d&lt;/code&gt; ）、インデックス（ &lt;code&gt;i&lt;/code&gt; 第一非ヘッダ行の0から始まる）を、カラムのアレイを名前。戻り値がnullまたは未定義の場合、行はスキップされ、&lt;em&gt;dsv&lt;/em&gt; .parse によって返される配列から除外されます。それ以外の場合、戻り値は対応する行オブジェクトを定義します。例えば：</target>
        </trans-unit>
        <trans-unit id="bfe847839d296797c8f52f5770e7affc0535613a" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;value&lt;/em&gt; is not specified, returns the bound datum for the first (non-null) element in the selection. This is generally useful only if you know the selection contains exactly one element.</source>
          <target state="translated">&lt;em&gt;値&lt;/em&gt;が指定されていない場合、選択範囲の最初の（null以外の）要素のバインドされたデータを返します。これは通常、選択範囲に要素が1つだけ含まれていることがわかっている場合にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="d04673b96a93601f09d513856360d92aeaca4a12" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;value&lt;/em&gt; is not specified, returns the current easing function for the first (non-null) element in the transition. This is generally useful only if you know that the transition contains exactly one element.</source>
          <target state="translated">&lt;em&gt;値&lt;/em&gt;が指定されていない場合、遷移の最初の（null以外の）要素の現在のイージング関数を返します。これは通常、遷移に要素が1つだけ含まれていることがわかっている場合にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="9013088b076d90da47353c4725d1ffd0b0db42ce" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;value&lt;/em&gt; is not specified, returns the current value of the delay for the first (non-null) element in the transition. This is generally useful only if you know that the transition contains exactly one element.</source>
          <target state="translated">&lt;em&gt;値&lt;/em&gt;が指定されていない場合、遷移の最初の（nullでない）要素の遅延の現在の値を返します。これは通常、遷移に要素が1つだけ含まれていることがわかっている場合にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="ab8105d7392f8163157c99c4ea9e01d62a6d649d" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;value&lt;/em&gt; is not specified, returns the current value of the duration for the first (non-null) element in the transition. This is generally useful only if you know that the transition contains exactly one element.</source>
          <target state="translated">&lt;em&gt;値&lt;/em&gt;が指定されていない場合、遷移の最初の（null以外の）要素の継続時間の現在の値を返します。これは通常、遷移に要素が1つだけ含まれていることがわかっている場合にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="26e15a1f3d118bf737a2cc4be7bdde92d2ac0364" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;value&lt;/em&gt; is not specified, returns the current value of the specified attribute for the first (non-null) element in the selection. This is generally useful only if you know that the selection contains exactly one element.</source>
          <target state="translated">&lt;em&gt;値&lt;/em&gt;が指定されていない場合、選択範囲の最初の（null以外の）要素の指定された属性の現在の値を返します。これは一般に、選択範囲に要素が1つだけ含まれていることがわかっている場合にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="2e47ee302bed99838c7f4fa86e259d87ee9dcf9f" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;value&lt;/em&gt; is not specified, returns the current value of the specified style property for the first (non-null) element in the selection. The current value is defined as the element&amp;rsquo;s inline value, if present, and otherwise its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/computed_value&quot;&gt;computed value&lt;/a&gt;. Accessing the current style value is generally useful only if you know the selection contains exactly one element.</source>
          <target state="translated">&lt;em&gt;値&lt;/em&gt;が指定されていない場合、選択範囲の最初の（null以外の）要素に指定されたスタイルプロパティの現在の値を返します。現在の値は、存在する場合は要素のインライン値として定義され、それ以外の場合はその&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/computed_value&quot;&gt;計算値&lt;/a&gt;として定義されます。現在のスタイル値へのアクセスは、選択範囲に要素が1つだけ含まれていることがわかっている場合にのみ、一般的に役立ちます。</target>
        </trans-unit>
        <trans-unit id="c1fbb7c524fa7054e22bf7eb8ae4cba57f342f2d" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;value&lt;/em&gt; is not specified, returns the inner HTML for the first (non-null) element in the selection. This is generally useful only if you know the selection contains exactly one element.</source>
          <target state="translated">&lt;em&gt;値&lt;/em&gt;が指定されていない場合、選択範囲の最初の（null以外の）要素の内部HTMLを返します。これは通常、選択範囲に要素が1つだけ含まれていることがわかっている場合にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="06c77a21af91715ec4e3025d129a2ec91350ad0d" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;value&lt;/em&gt; is not specified, returns the text content for the first (non-null) element in the selection. This is generally useful only if you know the selection contains exactly one element.</source>
          <target state="translated">&lt;em&gt;値&lt;/em&gt;が指定されていない場合、選択範囲の最初の（null以外の）要素のテキストコンテンツを返します。これは通常、選択範囲に要素が1つだけ含まれていることがわかっている場合にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="3cd8487f5502a0495eaf146724c39b35ce0c90c9" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;value&lt;/em&gt; is not specified, returns the value of the specified property for the first (non-null) element in the selection. This is generally useful only if you know the selection contains exactly one element.</source>
          <target state="translated">&lt;em&gt;値&lt;/em&gt;が指定されていない場合、選択範囲の最初の（null以外の）要素の指定されたプロパティの値を返します。これは通常、選択範囲に要素が1つだけ含まれていることがわかっている場合にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="2151aeaf48714083c497b959894511fd273a0689" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;value&lt;/em&gt; is not specified, returns true if and only if the first (non-null) selected element has the specified &lt;em&gt;classes&lt;/em&gt;. This is generally useful only if you know the selection contains exactly one element.</source>
          <target state="translated">場合&lt;em&gt;値が&lt;/em&gt;指定されていない、第一（非ヌル）選択された要素を指定している場合にのみ真を返す&lt;em&gt;クラスを&lt;/em&gt;。これは通常、選択範囲に要素が1つだけ含まれていることがわかっている場合にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="7c112e354469703d7c364625d2d31d3ecd0a430b" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;value&lt;/em&gt; is specified, assigns or unassigns the specified CSS class &lt;em&gt;names&lt;/em&gt; on the selected elements by setting the &lt;code&gt;class&lt;/code&gt; attribute or modifying the &lt;code&gt;classList&lt;/code&gt; property and returns this selection. The specified &lt;em&gt;names&lt;/em&gt; is a string of space-separated class names. For example, to assign the classes &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; to the selected elements:</source>
          <target state="translated">&lt;em&gt;値&lt;/em&gt;が指定されている場合、 &lt;code&gt;class&lt;/code&gt; 属性を設定するか、 &lt;code&gt;classList&lt;/code&gt; プロパティを変更して、選択された要素に指定されたCSSクラス&lt;em&gt;名&lt;/em&gt;を割り当てまたは割り当て解除し、この選択を返します。指定された&lt;em&gt;名前&lt;/em&gt;は、スペースで区切られたクラス名の文字列です。たとえば、選択した要素にクラス &lt;code&gt;foo&lt;/code&gt; と &lt;code&gt;bar&lt;/code&gt; を割り当てるには、次のようにします。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8b1c25f0b03568f673701ca058c307c551a82892" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;value&lt;/em&gt; is specified, sets the &lt;a href=&quot;http://dev.w3.org/html5/spec-LC/apis-in-html-documents.html#innerhtml&quot;&gt;inner HTML&lt;/a&gt; to the specified value on all selected elements, replacing any existing child elements. If the &lt;em&gt;value&lt;/em&gt; is a constant, then all elements are given the same inner HTML; otherwise, if the &lt;em&gt;value&lt;/em&gt; is a function, it is evaluated for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element (&lt;em&gt;nodes&lt;/em&gt;[&lt;em&gt;i&lt;/em&gt;]). The function&amp;rsquo;s return value is then used to set each element&amp;rsquo;s inner HTML. A null value will clear the content.</source>
          <target state="translated">&lt;em&gt;値&lt;/em&gt;が指定されている場合、選択したすべての要素の&lt;a href=&quot;http://dev.w3.org/html5/spec-LC/apis-in-html-documents.html#innerhtml&quot;&gt;内部HTML&lt;/a&gt;を指定した値に設定し、既存の子要素を置き換えます。場合&lt;em&gt;値が&lt;/em&gt;一定で、すべての要素が同じ内部HTMLを与えられています。そうでない場合、&lt;em&gt;値は&lt;/em&gt;関数であり、それは選択された各要素に対して評価され、順番に、現在の基準（渡される&lt;em&gt;D&lt;/em&gt;）、現在のインデックス（&lt;em&gt;I&lt;/em&gt;）、および現在のグループ（&lt;em&gt;ノード&lt;/em&gt;と）、&lt;em&gt;この&lt;/em&gt;現在のDOMなどを要素（&lt;em&gt;ノード&lt;/em&gt; [ &lt;em&gt;i&lt;/em&gt; ]）。次に、関数の戻り値を使用して、各要素の内部HTMLを設定します。 null値はコンテンツをクリアします。</target>
        </trans-unit>
        <trans-unit id="ca566fef01ff9f45da6072e4d47101c5e2340ddf" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;value&lt;/em&gt; is specified, sets the &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-textContent&quot;&gt;text content&lt;/a&gt; to the specified value on all selected elements, replacing any existing child elements. If the &lt;em&gt;value&lt;/em&gt; is a constant, then all elements are given the same text content; otherwise, if the &lt;em&gt;value&lt;/em&gt; is a function, it is evaluated for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element (&lt;em&gt;nodes&lt;/em&gt;[&lt;em&gt;i&lt;/em&gt;]). The function&amp;rsquo;s return value is then used to set each element&amp;rsquo;s text content. A null value will clear the content.</source>
          <target state="translated">&lt;em&gt;値&lt;/em&gt;が指定されている場合、選択したすべての要素の&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-textContent&quot;&gt;テキストコンテンツ&lt;/a&gt;を指定した値に設定し、既存の子要素を置き換えます。場合&lt;em&gt;値が&lt;/em&gt;一定で、すべての要素が同じテキストの内容が与えられます。そうでない場合、&lt;em&gt;値は&lt;/em&gt;関数であり、それは選択された各要素に対して評価され、順番に、現在の基準（渡される&lt;em&gt;D&lt;/em&gt;）、現在のインデックス（&lt;em&gt;I&lt;/em&gt;）、および現在のグループ（&lt;em&gt;ノード&lt;/em&gt;と）、&lt;em&gt;この&lt;/em&gt;現在のDOMなどを要素（&lt;em&gt;ノード&lt;/em&gt; [ &lt;em&gt;i&lt;/em&gt; ]）。次に、関数の戻り値を使用して、各要素のテキストコンテンツを設定します。 null値はコンテンツをクリアします。</target>
        </trans-unit>
        <trans-unit id="81354cf315fea3b5e6e293cd7b7770482850d042" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;value&lt;/em&gt; is specified, sets the attribute with the specified &lt;em&gt;name&lt;/em&gt; to the specified value on the selected elements and returns this selection. If the &lt;em&gt;value&lt;/em&gt; is a constant, all elements are given the same attribute value; otherwise, if the &lt;em&gt;value&lt;/em&gt; is a function, it is evaluated for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element (&lt;em&gt;nodes&lt;/em&gt;[&lt;em&gt;i&lt;/em&gt;]). The function&amp;rsquo;s return value is then used to set each element&amp;rsquo;s attribute. A null value will remove the specified attribute.</source>
          <target state="translated">&lt;em&gt;値&lt;/em&gt;が指定されている場合、指定された&lt;em&gt;名前の&lt;/em&gt;属性を選択された要素の指定された値に設定し、この選択を返します。場合は&lt;em&gt;値が&lt;/em&gt;一定で、すべての要素が同じ属性値を与えています。そうでない場合、&lt;em&gt;値は&lt;/em&gt;関数であり、それは選択された各要素に対して評価され、順番に、現在の基準（渡される&lt;em&gt;D&lt;/em&gt;）、現在のインデックス（&lt;em&gt;I&lt;/em&gt;）、および現在のグループ（&lt;em&gt;ノード&lt;/em&gt;と）、&lt;em&gt;この&lt;/em&gt;現在のDOMなどを要素（&lt;em&gt;ノード&lt;/em&gt; [ &lt;em&gt;i&lt;/em&gt; ]）。次に、関数の戻り値を使用して、各要素の属性を設定します。 null値は、指定された属性を削除します。</target>
        </trans-unit>
        <trans-unit id="f47dd1702350e2ff44960d8d8ab08427a0ec1a2b" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;value&lt;/em&gt; is specified, sets the element&amp;rsquo;s bound data to the specified value on all selected elements. If the &lt;em&gt;value&lt;/em&gt; is a constant, all elements are given the same datum; otherwise, if the &lt;em&gt;value&lt;/em&gt; is a function, it is evaluated for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element (&lt;em&gt;nodes&lt;/em&gt;[&lt;em&gt;i&lt;/em&gt;]). The function is then used to set each element&amp;rsquo;s new data. A null value will delete the bound data.</source>
          <target state="translated">&lt;em&gt;値&lt;/em&gt;が指定されている場合、要素のバインドされたデータを、選択されたすべての要素の指定された値に設定します。場合&lt;em&gt;値が&lt;/em&gt;一定である、全ての構成要素は同一のデータを与えられています。そうでない場合、&lt;em&gt;値は&lt;/em&gt;関数であり、それは選択された各要素に対して評価され、順番に、現在の基準（渡される&lt;em&gt;D&lt;/em&gt;）、現在のインデックス（&lt;em&gt;I&lt;/em&gt;）、および現在のグループ（&lt;em&gt;ノード&lt;/em&gt;と）、&lt;em&gt;この&lt;/em&gt;現在のDOMなどを要素（&lt;em&gt;ノード&lt;/em&gt; [ &lt;em&gt;i&lt;/em&gt; ]）。次に、この関数を使用して、各要素の新しいデータを設定します。 null値はバインドされたデータを削除します。</target>
        </trans-unit>
        <trans-unit id="66a419b2e30977357bcb1c95855d777054c0e724" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;value&lt;/em&gt; is specified, sets the property with the specified &lt;em&gt;name&lt;/em&gt; to the specified value on selected elements. If the &lt;em&gt;value&lt;/em&gt; is a constant, then all elements are given the same property value; otherwise, if the &lt;em&gt;value&lt;/em&gt; is a function, it is evaluated for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element (&lt;em&gt;nodes&lt;/em&gt;[&lt;em&gt;i&lt;/em&gt;]). The function&amp;rsquo;s return value is then used to set each element&amp;rsquo;s property. A null value will delete the specified property.</source>
          <target state="translated">&lt;em&gt;値&lt;/em&gt;が指定されている場合、指定された&lt;em&gt;名前の&lt;/em&gt;プロパティを、選択された要素の指定された値に設定します。場合&lt;em&gt;値が&lt;/em&gt;一定で、すべての要素は同じプロパティ値を与えられています。そうでない場合、&lt;em&gt;値は&lt;/em&gt;関数であり、それは選択された各要素に対して評価され、順番に、現在の基準（渡される&lt;em&gt;D&lt;/em&gt;）、現在のインデックス（&lt;em&gt;I&lt;/em&gt;）、および現在のグループ（&lt;em&gt;ノード&lt;/em&gt;と）、&lt;em&gt;この&lt;/em&gt;現在のDOMなどを要素（&lt;em&gt;ノード&lt;/em&gt; [ &lt;em&gt;i&lt;/em&gt; ]）。次に、関数の戻り値を使用して、各要素のプロパティを設定します。 null値は、指定されたプロパティを削除します。</target>
        </trans-unit>
        <trans-unit id="bf7dc7a9b16648f9a8e3089fc22a70eb0388285a" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;value&lt;/em&gt; is specified, sets the style property with the specified &lt;em&gt;name&lt;/em&gt; to the specified value on the selected elements and returns this selection. If the &lt;em&gt;value&lt;/em&gt; is a constant, then all elements are given the same style property value; otherwise, if the &lt;em&gt;value&lt;/em&gt; is a function, it is evaluated for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element (&lt;em&gt;nodes&lt;/em&gt;[&lt;em&gt;i&lt;/em&gt;]). The function&amp;rsquo;s return value is then used to set each element&amp;rsquo;s style property. A null value will remove the style property. An optional &lt;em&gt;priority&lt;/em&gt; may also be specified, either as null or the string &lt;code&gt;important&lt;/code&gt; (without the exclamation point).</source>
          <target state="translated">&lt;em&gt;値&lt;/em&gt;が指定されている場合、指定された&lt;em&gt;名前の&lt;/em&gt;スタイルプロパティを選択された要素の指定された値に設定し、この選択を返します。場合は&lt;em&gt;値が&lt;/em&gt;一定で、すべての要素が同じスタイルプロパティの値を与えています。そうでない場合、&lt;em&gt;値は&lt;/em&gt;関数であり、それは選択された各要素に対して評価され、順番に、現在の基準（渡される&lt;em&gt;D&lt;/em&gt;）、現在のインデックス（&lt;em&gt;I&lt;/em&gt;）、および現在のグループ（&lt;em&gt;ノード&lt;/em&gt;と）、&lt;em&gt;この&lt;/em&gt;現在のDOMなどを要素（&lt;em&gt;ノード&lt;/em&gt; [ &lt;em&gt;i&lt;/em&gt;]）。次に、関数の戻り値を使用して、各要素のスタイルプロパティを設定します。null値はスタイルプロパティを削除します。オプションの&lt;em&gt;優先順位&lt;/em&gt;をnullまたは &lt;code&gt;important&lt;/code&gt; 文字列（感嘆符なし）として指定することもできます。</target>
        </trans-unit>
        <trans-unit id="18fc4bd2bce8beba0783d8f3bbbd90d471cbf5d5" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;values&lt;/em&gt; array is specified, the specified values are used for ticks rather than using the scale&amp;rsquo;s automatic tick generator. If &lt;em&gt;values&lt;/em&gt; is null, clears any previously-set explicit tick values and reverts back to the scale&amp;rsquo;s tick generator. If &lt;em&gt;values&lt;/em&gt; is not specified, returns the current tick values, which defaults to null. For example, to generate ticks at specific values:</source>
          <target state="translated">場合&lt;em&gt;値&lt;/em&gt;配列が指定され、指定された値は、ティックではなく規模の自動ティック・ジェネレータを使用するために使用されます。&lt;em&gt;値&lt;/em&gt;がnullの場合、以前に設定された明示的な目盛り値をクリアし、スケールの目盛りジェネレータに戻ります。&lt;em&gt;値&lt;/em&gt;が指定されていない場合、現在のティック値を返します。デフォルトはnullです。たとえば、特定の値でティックを生成するには：</target>
        </trans-unit>
        <trans-unit id="894363f95dec78477284280c2697e67425d7c3a1" translate="yes" xml:space="preserve">
          <source>If a precision is not specified, the formatting behavior has changed: there is now a default precision of 6 for all directives except &lt;em&gt;none&lt;/em&gt;, which defaults to 12. In 3.x, if you did not specify a precision, the number was formatted using its shortest unique representation (per &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toString&quot;&gt;&lt;em&gt;number&lt;/em&gt;.toString&lt;/a&gt;); this could lead to unexpected digits due to &lt;a href=&quot;http://0.30000000000000004.com/&quot;&gt;floating point math&lt;/a&gt;. The new default precision in 4.0 produces more consistent results:</source>
          <target state="translated">精度が指定されていない場合、書式設定動作が変更されました：以外のすべてのディレクティブのための6のデフォルトの精度今そこにある&lt;em&gt;なし&lt;/em&gt;あなたが精度を指定しなかった場合は、番号が使用してフォーマットされた3.xの12.デフォルトは、最短の一意の表現（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toString&quot;&gt;&lt;em&gt;数値&lt;/em&gt; .toString&lt;/a&gt;ごと）。これにより、&lt;a href=&quot;http://0.30000000000000004.com/&quot;&gt;浮動小数点演算&lt;/a&gt;により予期しない数字が発生する可能性があります。 4.0の新しいデフォルトの精度により、より一貫した結果が得られます。</target>
        </trans-unit>
        <trans-unit id="c6df589ccec5f52f59203b3d3e086cbb3a889fb0" translate="yes" xml:space="preserve">
          <source>If a value is a constant, all elements are given the same attribute value; otherwise, if a value is a function, the function is evaluated for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element. The function&amp;rsquo;s return value is then used to set each element&amp;rsquo;s attribute. A null value will remove the specified attribute.</source>
          <target state="translated">値が定数の場合、すべての要素に同じ属性値が与えられます。それ以外の場合、値が関数である場合、関数は、現在のデータ（&lt;em&gt;d&lt;/em&gt;）、現在のインデックス（&lt;em&gt;i&lt;/em&gt;）、および現在のグループ（&lt;em&gt;nodes&lt;/em&gt;）を渡された順に、選択された要素ごとに評価され、&lt;em&gt;これ&lt;/em&gt;が現在のものになります。 DOM要素。次に、関数の戻り値を使用して、各要素の属性を設定します。 null値は、指定された属性を削除します。</target>
        </trans-unit>
        <trans-unit id="3ace3815d01fda5698c14caa60ccd3482c6ebaeb" translate="yes" xml:space="preserve">
          <source>If a value is a constant, all elements are given the same property value; otherwise, if a value is a function, the function is evaluated for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element. The function&amp;rsquo;s return value is then used to set each element&amp;rsquo;s properties. A null value will remove the specified properties.</source>
          <target state="translated">値が定数の場合、すべての要素に同じプロパティ値が与えられます。それ以外の場合、値が関数である場合、関数は、現在のデータ（&lt;em&gt;d&lt;/em&gt;）、現在のインデックス（&lt;em&gt;i&lt;/em&gt;）、および現在のグループ（&lt;em&gt;nodes&lt;/em&gt;）を渡された順に、選択された要素ごとに評価され、&lt;em&gt;これ&lt;/em&gt;が現在のものになります。 DOM要素。次に、関数の戻り値を使用して、各要素のプロパティを設定します。 null値は、指定されたプロパティを削除します。</target>
        </trans-unit>
        <trans-unit id="4c5e87b69f31b2efe02e58c445502018afec2a79" translate="yes" xml:space="preserve">
          <source>If a value is a constant, all elements are given the same style property value; otherwise, if a value is a function, the function is evaluated for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element. The function&amp;rsquo;s return value is then used to set each element&amp;rsquo;s style properties. A null value will remove the specified style properties.</source>
          <target state="translated">値が定数の場合、すべての要素に同じスタイルプロパティ値が与えられます。それ以外の場合、値が関数である場合、関数は、現在のデータ（&lt;em&gt;d&lt;/em&gt;）、現在のインデックス（&lt;em&gt;i&lt;/em&gt;）、および現在のグループ（&lt;em&gt;nodes&lt;/em&gt;）を渡された順に、選択された要素ごとに評価され、&lt;em&gt;これ&lt;/em&gt;が現在のものになります。 DOM要素。次に、関数の戻り値を使用して、各要素のスタイルプロパティを設定します。 null値は、指定されたスタイルプロパティを削除します。</target>
        </trans-unit>
        <trans-unit id="b533454550a8f41211baf5f275d9a200ee9e1522" translate="yes" xml:space="preserve">
          <source>If all &lt;a href=&quot;#queue_defer&quot;&gt;deferred&lt;/a&gt; tasks have already completed, the callback will be invoked immediately. This method may only be called once, after any tasks have been deferred. If this method is called multiple times, or if it is called after &lt;a href=&quot;#queue_await&quot;&gt;&lt;em&gt;queue&lt;/em&gt;.await&lt;/a&gt;, an error is thrown. If the &lt;em&gt;callback&lt;/em&gt; is not a function, an error is thrown.</source>
          <target state="translated">すべての&lt;a href=&quot;#queue_defer&quot;&gt;遅延&lt;/a&gt;タスクがすでに完了している場合、コールバックはすぐに呼び出されます。このメソッドは、タスクが延期された後に一度だけ呼び出すことができます。このメソッドが複数回呼び出された場合、または&lt;a href=&quot;#queue_await&quot;&gt;&lt;em&gt;queue&lt;/em&gt; .awaitの&lt;/a&gt;後に呼び出された場合、エラーがスローされます。&lt;em&gt;コールバック&lt;/em&gt;が関数でない場合、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="59f6d70d3381aa3a2d85e7571eacbb461ef49495" translate="yes" xml:space="preserve">
          <source>If all &lt;a href=&quot;#queue_defer&quot;&gt;deferred&lt;/a&gt; tasks have already completed, the callback will be invoked immediately. This method may only be called once, after any tasks have been deferred. If this method is called multiple times, or if it is called after &lt;a href=&quot;#queue_awaitAll&quot;&gt;&lt;em&gt;queue&lt;/em&gt;.awaitAll&lt;/a&gt;, an error is thrown. If the &lt;em&gt;callback&lt;/em&gt; is not a function, an error is thrown.</source>
          <target state="translated">すべての&lt;a href=&quot;#queue_defer&quot;&gt;遅延&lt;/a&gt;タスクがすでに完了している場合、コールバックはすぐに呼び出されます。このメソッドは、タスクが延期された後に一度だけ呼び出すことができます。このメソッドが複数回呼び出された場合、または&lt;a href=&quot;#queue_awaitAll&quot;&gt;&lt;em&gt;queue&lt;/em&gt; .awaitAllの&lt;/a&gt;後に呼び出された場合、エラーがスローされます。&lt;em&gt;コールバック&lt;/em&gt;が関数でない場合、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="e617aa3a5379baf08ce2592e2dab29bfb619b758" translate="yes" xml:space="preserve">
          <source>If an error occurs, the corresponding &lt;a href=&quot;https://xhr.spec.whatwg.org/#interface-progressevent&quot;&gt;ProgressEvent&lt;/a&gt; of type &amp;ldquo;error&amp;rdquo; is now passed to the error listener, rather than the &lt;a href=&quot;https://xhr.spec.whatwg.org/#interface-xmlhttprequest&quot;&gt;XMLHttpRequest&lt;/a&gt;. Likewise, the ProgressEvent is passed to progress event listeners, rather than using &lt;a href=&quot;../../../d3-selection#event&quot;&gt;d3.event&lt;/a&gt;. If &lt;a href=&quot;../../../d3-request#xml&quot;&gt;d3.xml&lt;/a&gt; encounters an error parsing XML, this error is now reported to error listeners rather than returning a null response.</source>
          <target state="translated">エラーが発生した場合、「Http」タイプの対応する&lt;a href=&quot;https://xhr.spec.whatwg.org/#interface-progressevent&quot;&gt;ProgressEvent&lt;/a&gt;が&lt;a href=&quot;https://xhr.spec.whatwg.org/#interface-xmlhttprequest&quot;&gt;XMLHttpRequest&lt;/a&gt;ではなくエラーリスナーに渡されるようになりました。同様に、ProgressEventは、&lt;a href=&quot;../../../d3-selection#event&quot;&gt;d3.event&lt;/a&gt;を使用するのではなく、進行状況イベントリスナーに渡されます。&lt;a href=&quot;../../../d3-request#xml&quot;&gt;d3.xml&lt;/a&gt;がXMLの解析中にエラーを検出した場合、このエラーはnull応答を返すのではなく、エラーリスナーに報告されるようになりました。</target>
        </trans-unit>
        <trans-unit id="963d8cefa030a0c5fb14ae7c331a7da34a898b82" translate="yes" xml:space="preserve">
          <source>If an event listener was previously registered for the same &lt;em&gt;typename&lt;/em&gt; on a selected element, the old listener is removed before the new listener is added. To remove a listener, pass null as the &lt;em&gt;listener&lt;/em&gt;. To remove all listeners for a given name, pass null as the &lt;em&gt;listener&lt;/em&gt; and &lt;code&gt;.foo&lt;/code&gt; as the &lt;em&gt;typename&lt;/em&gt;, where &lt;code&gt;foo&lt;/code&gt; is the name; to remove all listeners with no name, specify &lt;code&gt;.&lt;/code&gt; as the &lt;em&gt;typename&lt;/em&gt;.</source>
          <target state="translated">選択した要素の同じ&lt;em&gt;タイプ名&lt;/em&gt;に対してイベントリスナーが以前に登録されている場合、新しいリスナーが追加される前に古いリスナーが削除されます。リスナーを削除するには、としてnullを渡し&lt;em&gt;リスナー&lt;/em&gt;。 nullを渡し、指定された名前のすべてのリスナーを削除するには、&lt;em&gt;リスナー&lt;/em&gt;と &lt;code&gt;.foo&lt;/code&gt; というよう&lt;em&gt;型名&lt;/em&gt;、 &lt;code&gt;foo&lt;/code&gt; が名前です。名前のないすべてのリスナーを削除するには、を指定します &lt;code&gt;.&lt;/code&gt; &lt;em&gt;タイプ名&lt;/em&gt;として。</target>
        </trans-unit>
        <trans-unit id="59a5d5520db69d2fc061600f799a57bdcd1a8002" translate="yes" xml:space="preserve">
          <source>If both the data comparator and the value comparator are null, then arcs are positioned in the original input order. Otherwise, the data is sorted according to the data comparator, and the resulting order is used. Setting the value comparator implicitly sets the &lt;a href=&quot;#pie_sort&quot;&gt;data comparator&lt;/a&gt; to null.</source>
          <target state="translated">データコンパレータと値コンパレータの両方がnullの場合、アークは元の入力順に配置されます。それ以外の場合、データはデータコンパレータに従って並べ替えられ、結果の順序が使用されます。値コンパレータを設定すると、暗黙的に&lt;a href=&quot;#pie_sort&quot;&gt;データコンパレータ&lt;/a&gt;がnullに設定されます。</target>
        </trans-unit>
        <trans-unit id="b76f5df8bd568dd235f7212724d4cb89f5dd4b1a" translate="yes" xml:space="preserve">
          <source>If no &lt;em&gt;callback&lt;/em&gt; is specified, then &quot;load&quot; and &quot;error&quot; listeners should be registered via &lt;a href=&quot;#request_on&quot;&gt;&lt;em&gt;request&lt;/em&gt;.on&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;コールバック&lt;/em&gt;が指定されていない場合、「ロード」および「エラー」リスナーは&lt;a href=&quot;#request_on&quot;&gt;&lt;em&gt;request&lt;/em&gt; .on&lt;/a&gt;を介して登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="ed8deab1ecb28d57ff22e29fa9d4bdcace286a69" translate="yes" xml:space="preserve">
          <source>If no padding modifier is specified, the default is &lt;code&gt;0&lt;/code&gt; for all directives except &lt;code&gt;%e&lt;/code&gt;, which defaults to &lt;code&gt;_&lt;/code&gt;. (In some implementations of strftime and strptime, a directive may include an optional field width or precision; this feature is not yet implemented.)</source>
          <target state="translated">パディング修飾子が指定されていない場合、デフォルトは &lt;code&gt;0&lt;/code&gt; 以外のすべてのディレクティブの &lt;code&gt;%e&lt;/code&gt; は、デフォルト &lt;code&gt;_&lt;/code&gt; 。（strftimeとstrptimeの一部の実装では、ディレクティブにオプションのフィールド幅または精度が含まれる場合があります。この機能はまだ実装されていません。）</target>
        </trans-unit>
        <trans-unit id="a5d312bee2ffc82065887268c06b395a26738993" translate="yes" xml:space="preserve">
          <source>If only one of &lt;em&gt;init&lt;/em&gt; and &lt;em&gt;row&lt;/em&gt; is specified, it is interpreted as the &lt;em&gt;row&lt;/em&gt; conversion function if it is a function, and otherwise an &lt;em&gt;init&lt;/em&gt; object.</source>
          <target state="translated">&lt;em&gt;init&lt;/em&gt;と&lt;em&gt;rowの&lt;/em&gt;どちらか一方のみを指定した場合、それが関数であれば&lt;em&gt;行&lt;/em&gt;変換関数として解釈され、それ以外の場合は&lt;em&gt;init&lt;/em&gt;オブジェクトとして解釈されます。</target>
        </trans-unit>
        <trans-unit id="5ce83ee28c28e1397ef8275179e068cab31e99d6" translate="yes" xml:space="preserve">
          <source>If such code runs in the background for hours, thousands of queued transitions will try to run simultaneously when the page is foregrounded. D3 4.0 avoids this hang by freezing time in the background: when a page is in the background, time does not advance, and so no queue of timers accumulates to run when the page returns to the foreground. Use d3.timer instead of transitions to schedule a long-running animation, or use &lt;a href=&quot;../../../d3-timer#timeout&quot;&gt;d3.timeout&lt;/a&gt; and &lt;a href=&quot;../../../d3-timer#interval&quot;&gt;d3.interval&lt;/a&gt; in place of setTimeout and setInterval to prevent transitions from being queued in the background:</source>
          <target state="translated">そのようなコードがバックグラウンドで何時間も実行されると、ページがフォアグラウンドになると、キューに入れられた何千ものトランジションが同時に実行されます。D3 4.0は、時間をバックグラウンドで凍結することでこのハングを回避します。ページがバックグラウンドにある場合、時間は進まないため、ページがフォアグラウンドに戻ったときに実行するタイマーのキューが蓄積されません。トランジションの代わりにd3.timerを使用して長時間のアニメーションをスケジュールするか、setTimeoutとsetIntervalの代わりに&lt;a href=&quot;../../../d3-timer#timeout&quot;&gt;d3.timeout&lt;/a&gt;と&lt;a href=&quot;../../../d3-timer#interval&quot;&gt;d3.interval&lt;/a&gt;を使用して、トランジションがバックグラウンドでキューに入れられないようにします。</target>
        </trans-unit>
        <trans-unit id="2feabd1f28e4e0ac25d4d6b065c606355485f4ec" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#arc_innerRadius&quot;&gt;inner radius&lt;/a&gt; or angular span is small relative to the pad angle, it may not be possible to maintain parallel edges between adjacent arcs. In this case, the inner edge of the arc may collapse to a point, similar to a circular sector. For this reason, padding is typically only applied to annular sectors (&lt;em&gt;i.e.&lt;/em&gt;, when innerRadius is positive), as shown in this diagram:</source>
          <target state="translated">&lt;a href=&quot;#arc_innerRadius&quot;&gt;内半径&lt;/a&gt;または角度スパンがパッド角度に比べて小さい場合、隣接する円弧間の平行エッジを維持できない場合があります。この場合、円弧の内側のエッジは、扇形と同様に、ある点まで崩壊する可能性があります。このため、次の図に示すように、パディングは通常、環状セクターにのみ適用されます（&lt;em&gt;つまり&lt;/em&gt;、innerRadiusが正の場合）。</target>
        </trans-unit>
        <trans-unit id="f8f7ba354ac08cf4b29825ac97b769bc75accb6d" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;callback&lt;/em&gt; returns true for a given node, then the children of that node are not visited; otherwise, all child nodes are visited. This can be used to quickly visit only parts of the tree, for example when using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Barnes%E2%80%93Hut_simulation&quot;&gt;Barnes&amp;ndash;Hut approximation&lt;/a&gt;. Note, however, that child quadrants are always visited in sibling order: top-left, top-right, bottom-left, bottom-right. In cases such as &lt;a href=&quot;#quadtree_find&quot;&gt;search&lt;/a&gt;, visiting siblings in a specific order may be faster.</source>
          <target state="translated">特定のノードに対して&lt;em&gt;コールバック&lt;/em&gt;がtrueを返す場合、そのノードの子は訪問されません。それ以外の場合、すべての子ノードが訪問されます。これは、たとえば&lt;a href=&quot;https://en.wikipedia.org/wiki/Barnes%E2%80%93Hut_simulation&quot;&gt;バーンズ・ハット近似&lt;/a&gt;を使用する場合など、ツリーの一部のみをすばやく訪問するために使用できます。ただし、子象限は常に兄弟順にアクセスされることに注意してください：左上、右上、左下、右下。&lt;a href=&quot;#quadtree_find&quot;&gt;search&lt;/a&gt;などの場合、兄弟を特定の順序で訪問する方が速い場合があります。</target>
        </trans-unit>
        <trans-unit id="03cb4d52a56d4bcecc18945e89b14ae0cf59c350" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;name&lt;/em&gt; is a &lt;a href=&quot;#transition&quot;&gt;transition&lt;/a&gt; instance, the returned transition has the same id and name as the specified transition. If a transition with the same id already exists on a selected element, the existing transition is returned for that element. Otherwise, the timing of the returned transition is inherited from the existing transition of the same id on the nearest ancestor of each selected element. Thus, this method can be used to synchronize a transition across multiple selections, or to re-select a transition for specific elements and modify its configuration. For example:</source>
          <target state="translated">場合&lt;em&gt;名前が&lt;/em&gt;ある&lt;a href=&quot;#transition&quot;&gt;遷移&lt;/a&gt;インスタンスは、返された遷移は、指定された遷移と同じIDと名前を有しています。選択した要素に同じIDの遷移がすでに存在する場合、その要素の既存の遷移が返されます。それ以外の場合、返される遷移のタイミングは、選択された各要素の最も近い祖先にある同じIDの既存の遷移から継承されます。したがって、このメソッドを使用して、複数の選択間で遷移を同期するか、特定の要素の遷移を再選択してその構成を変更できます。例えば：</target>
        </trans-unit>
        <trans-unit id="5532f36a1276f2ba4c2bbc119447501103dba193" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;project&lt;/em&gt; function exposes an &lt;em&gt;invert&lt;/em&gt; method, the returned projection will also expose &lt;a href=&quot;#projection_invert&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.invert&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;プロジェクト&lt;/em&gt;関数が&lt;em&gt;invert&lt;/em&gt;メソッドを公開している場合、返されたプロジェクションも&lt;a href=&quot;#projection_invert&quot;&gt;&lt;em&gt;プロジェクション&lt;/em&gt; .invertを公開し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="3a9b2b36739ddd5d3c6064392184f86c360d32c1" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;selector&lt;/em&gt; is a function, it is evaluated for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element (&lt;em&gt;nodes&lt;/em&gt;[&lt;em&gt;i&lt;/em&gt;]). It must return an array of elements (or a pseudo-array, such as a NodeList), or the empty array if there are no matching elements. For example, to select the previous and next siblings of each paragraph:</source>
          <target state="translated">&lt;em&gt;セレクター&lt;/em&gt;が関数の場合、現在のデータ（&lt;em&gt;d&lt;/em&gt;）、現在のインデックス（&lt;em&gt;i&lt;/em&gt;）、現在のグループ（&lt;em&gt;nodes&lt;/em&gt;）が渡され、選択された要素ごとに評価されます。&lt;em&gt;これ&lt;/em&gt;が現在のDOM要素（&lt;em&gt;ノード&lt;/em&gt; [ &lt;em&gt;i&lt;/em&gt; ]）。要素の配列（またはNodeListなどの疑似配列）を返すか、一致する要素がない場合は空の配列を返す必要があります。たとえば、各段落の前の兄弟と次の兄弟を選択するには：</target>
        </trans-unit>
        <trans-unit id="4992037aeafdf08044b206e58389c83c2315fad6" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;selector&lt;/em&gt; is a function, it is evaluated for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element (&lt;em&gt;nodes&lt;/em&gt;[&lt;em&gt;i&lt;/em&gt;]). It must return an element, or null if there is no matching element. For example, to select the previous sibling of each paragraph:</source>
          <target state="translated">&lt;em&gt;セレクター&lt;/em&gt;が関数の場合、現在のデータ（&lt;em&gt;d&lt;/em&gt;）、現在のインデックス（&lt;em&gt;i&lt;/em&gt;）、現在のグループ（&lt;em&gt;nodes&lt;/em&gt;）が渡され、選択された要素ごとに評価されます。&lt;em&gt;これ&lt;/em&gt;が現在のDOM要素（&lt;em&gt;ノード&lt;/em&gt; [ &lt;em&gt;i&lt;/em&gt; ]）。要素を返す必要があります。一致する要素がない場合はnullを返す必要があります。たとえば、各段落の前の兄弟を選択するには：</target>
        </trans-unit>
        <trans-unit id="65ea19f3162f75af3fa4df0d0875a4dbc309e192" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;selector&lt;/em&gt; is not a string, instead selects the specified array of nodes; this is useful if you already have a reference to nodes, such as &lt;code&gt;this.childNodes&lt;/code&gt; within an event listener or a global such as &lt;code&gt;document.links&lt;/code&gt;. The nodes may instead be a pseudo-array such as a &lt;code&gt;NodeList&lt;/code&gt; or &lt;code&gt;arguments&lt;/code&gt;. For example, to color all links red:</source>
          <target state="translated">&lt;em&gt;セレクタ&lt;/em&gt;が文字列でない場合は、代わりに指定されたノードの配列を選択します。これは、イベントリスナー内の &lt;code&gt;this.childNodes&lt;/code&gt; などのノードへの参照、または &lt;code&gt;document.links&lt;/code&gt; などのグローバルがある場合に便利です。代わりに、ノードは &lt;code&gt;NodeList&lt;/code&gt; や &lt;code&gt;arguments&lt;/code&gt; などの疑似配列である場合があります。たとえば、すべてのリンクを赤くするには：</target>
        </trans-unit>
        <trans-unit id="235806de487fea5bb2f55f73213365a0bde3a199" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;selector&lt;/em&gt; is not a string, instead selects the specified node; this is useful if you already have a reference to a node, such as &lt;code&gt;this&lt;/code&gt; within an event listener or a global such as &lt;code&gt;document.body&lt;/code&gt;. For example, to make a clicked paragraph red:</source>
          <target state="translated">&lt;em&gt;セレクタ&lt;/em&gt;が文字列でない場合は、代わりに指定されたノードを選択します。これは、イベントリスナー内の &lt;code&gt;this&lt;/code&gt; や &lt;code&gt;document.body&lt;/code&gt; などのグローバルなど、ノードへの参照がすでにある場合に役立ちます。たとえば、クリックした段落を赤くするには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="22798cbe0c11ac48432eb3c983240843c7c3c1a0" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;value&lt;/em&gt; is truthy, then all elements are assigned the specified classes; otherwise, the classes are unassigned. If the &lt;em&gt;value&lt;/em&gt; is a function, it is evaluated for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element (&lt;em&gt;nodes&lt;/em&gt;[&lt;em&gt;i&lt;/em&gt;]). The function&amp;rsquo;s return value is then used to assign or unassign classes on each element. For example, to randomly associate the class &lt;em&gt;foo&lt;/em&gt; with on average half the selected elements:</source>
          <target state="translated">&lt;em&gt;値&lt;/em&gt;が真の場合、すべての要素に指定されたクラスが割り当てられます。それ以外の場合、クラスは割り当てられません。場合&lt;em&gt;値は&lt;/em&gt;関数であり、それは選択された各要素に対して評価され、順番に、現在の基準（渡される&lt;em&gt;D&lt;/em&gt;）、現在のインデックス（&lt;em&gt;I&lt;/em&gt;）、および現在のグループ（&lt;em&gt;ノード&lt;/em&gt;と）、&lt;em&gt;この&lt;/em&gt;現在のDOM要素としての（&lt;em&gt;ノード&lt;/em&gt; [ &lt;em&gt;i&lt;/em&gt; ]）。次に、関数の戻り値を使用して、各要素のクラスを割り当てまたは割り当て解除します。たとえば、クラス&lt;em&gt;foo&lt;/em&gt;を選択した要素の平均半分にランダムに関連付けるには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="0d86efd80e3fe79076c4055c0212df509810917e" translate="yes" xml:space="preserve">
          <source>If the BOM is not removed, the first character of the text is a zero-width non-breaking space. So if a CSV file with a BOM is parsed by &lt;a href=&quot;#csvParse&quot;&gt;d3.csvParse&lt;/a&gt;, the first column&amp;rsquo;s name will begin with a zero-width non-breaking space. This can be hard to spot since this character is usually invisible when printed.</source>
          <target state="translated">BOMが削除されない場合、テキストの最初の文字は、幅がゼロの改行しないスペースです。したがって、BOMを含むCSVファイルが&lt;a href=&quot;#csvParse&quot;&gt;d3.csvParse&lt;/a&gt;によって解析される場合、最初の列の名前は、ゼロ幅の改行しないスペースで始まります。通常、この文字は印刷時に表示されないため、これを見つけるのは困難です。</target>
        </trans-unit>
        <trans-unit id="edc55eaa9b8a015ca2fa660dee93e705ddc21ee1" translate="yes" xml:space="preserve">
          <source>If the arc generator has a &lt;a href=&quot;#arc_context&quot;&gt;context&lt;/a&gt;, then the arc is rendered to this context as a sequence of &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;path method&lt;/a&gt; calls and this function returns void. Otherwise, a &lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathData&quot;&gt;path data&lt;/a&gt; string is returned.</source>
          <target state="translated">アークジェネレーターに&lt;a href=&quot;#arc_context&quot;&gt;コンテキスト&lt;/a&gt;がある場合、一連の&lt;a href=&quot;http://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;パスメソッド&lt;/a&gt;呼び出しとしてアークはこのコンテキストにレンダリングされ、この関数はvoidを返します。それ以外の場合は、&lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathData&quot;&gt;パスデータ&lt;/a&gt;文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="383cad7b51637c4c83d33a73d1a68263e231a1b8" translate="yes" xml:space="preserve">
          <source>If the body is initially empty, the above code will create six new DIV elements, append them to the body in-order, and assign their text content as the associated (string-coerced) number:</source>
          <target state="translated">ボディが最初は空の場合、上記のコードは、6つの新しいDIV要素を作成し、それらを順番にボディに追加し、それらのテキストコンテンツを関連付けられた(文字列強制的な)番号として割り当てます。</target>
        </trans-unit>
        <trans-unit id="9b94d199db4c5a92695d20bb693d789d2f636ca1" translate="yes" xml:space="preserve">
          <source>If the corner radius is greater than zero, the corners of the arc are rounded using circles of the given radius. For a circular sector, the two outer corners are rounded; for an annular sector, all four corners are rounded. The corner circles are shown in this diagram:</source>
          <target state="translated">角の半径が0より大きい場合、円弧の角は指定された半径の円を使用して丸められます。円形のセクターの場合、外側の2つの角は丸められ、環状のセクターの場合、4つの角はすべて丸められます。この図に角丸を示します。</target>
        </trans-unit>
        <trans-unit id="77ddfb317003a4ca7bae8fb18888fcce8cfdcd30" translate="yes" xml:space="preserve">
          <source>If the feature has an id, the path element will have a corresponding id attribute. If the feature has a &lt;em&gt;title&lt;/em&gt; property, the path element will have a title element with the corresponding value. For an example of per-feature attributes, see this &lt;a href=&quot;https://bl.ocks.org/mbostock/fb6c1e5ff700f9713a9dc2f0fd392c35&quot;&gt;California population density map&lt;/a&gt;.</source>
          <target state="translated">機能にIDがある場合、パス要素には対応するID属性があります。機能に&lt;em&gt;タイトル&lt;/em&gt;プロパティがある場合、パス要素には対応する値を持つタイトル要素があります。機能ごとの属性の例については、この&lt;a href=&quot;https://bl.ocks.org/mbostock/fb6c1e5ff700f9713a9dc2f0fd392c35&quot;&gt;カリフォルニアの人口密度マップを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a34006e1c64d9213468556d3372ea65052afa76d" translate="yes" xml:space="preserve">
          <source>If the filter returns falsey, the initiating event is ignored and no brush gesture is started. Thus, the filter determines which input events are ignored. The default filter ignores mousedown events on secondary buttons, since those buttons are typically intended for other purposes, such as the context menu.</source>
          <target state="translated">このフィルタが falsey を返した場合は開始イベントは無視され、 ブラシジェスチャは開始されません。このようにしてフィルタはどの入力イベントを無視するかを決定します。デフォルトのフィルタはセカンダリボタンのマウスダウンイベントを無視します。</target>
        </trans-unit>
        <trans-unit id="dd4c0f2fdb1c9d09823a8938b8836a0ba3069b9e" translate="yes" xml:space="preserve">
          <source>If the filter returns falsey, the initiating event is ignored and no drag gestures are started. Thus, the filter determines which input events are ignored; the default filter ignores mousedown events on secondary buttons, since those buttons are typically intended for other purposes, such as the context menu.</source>
          <target state="translated">このフィルタが falsey を返した場合は開始イベントは無視され、 ドラッグジェスチャは開始されません。デフォルトのフィルタはセカンダリボタンのマウスダウンイベントを無視します。</target>
        </trans-unit>
        <trans-unit id="db7d56bd7fb4530408c56f340599be350dd88f10" translate="yes" xml:space="preserve">
          <source>If the filter returns falsey, the initiating event is ignored and no zoom gestures are started. Thus, the filter determines which input events are ignored. The default filter ignores mousedown events on secondary buttons, since those buttons are typically intended for other purposes, such as the context menu.</source>
          <target state="translated">このフィルタが falsey を返すと、 開始イベントは無視され、 ズームジェスチャは開始されません。このようにしてフィルタはどの入力イベントを無視するかを決定します。デフォルトのフィルタはセカンダリボタンのマウスダウンイベントを無視します。</target>
        </trans-unit>
        <trans-unit id="3291b940b2aecbb5ad8d72d76a9d24f7aacc2cac" translate="yes" xml:space="preserve">
          <source>If the given &lt;em&gt;value&lt;/em&gt; is outside the range, and &lt;a href=&quot;#continuous_clamp&quot;&gt;clamping&lt;/a&gt; is not enabled, the mapping may be extrapolated such that the returned value is outside the domain. This method is only supported if the range is numeric. If the range is not numeric, returns NaN.</source>
          <target state="translated">指定された&lt;em&gt;値&lt;/em&gt;が範囲外であり、&lt;a href=&quot;#continuous_clamp&quot;&gt;クランプ&lt;/a&gt;が有効になっていない場合、戻り値がドメインの外になるようにマッピングが推定される場合があります。このメソッドは、範囲が数値の場合にのみサポートされます。範囲が数値でない場合は、NaNを返します。</target>
        </trans-unit>
        <trans-unit id="d072e661246b13a9be2268d1e3c5dcd89588b76f" translate="yes" xml:space="preserve">
          <source>If the map has an entry for the specified &lt;em&gt;key&lt;/em&gt; string, removes the entry and returns true. Otherwise, this method does nothing and returns false.</source>
          <target state="translated">指定された&lt;em&gt;キー&lt;/em&gt;文字列のエントリがマップにある場合、エントリを削除してtrueを返します。それ以外の場合、このメソッドは何もせず、falseを返します。</target>
        </trans-unit>
        <trans-unit id="0ad3cdad21c5fbdbb624b44d7e2fbb3a02c0e1c7" translate="yes" xml:space="preserve">
          <source>If the name does not contain a colon, this function merely returns the input name.</source>
          <target state="translated">名前にコロンが含まれていない場合、この関数は単に入力名を返します。</target>
        </trans-unit>
        <trans-unit id="fbfffcbdddd0a3bf730e3a25f0fbaad08185f97d" translate="yes" xml:space="preserve">
          <source>If the radii and angles are instead defined as constants, you can generate an arc without any arguments:</source>
          <target state="translated">代わりに半径と角度を定数として定義すれば、引数なしで円弧を生成することができます。</target>
        </trans-unit>
        <trans-unit id="b2e4a6e9042d61c5ab87357fb196f8d9806a1d89" translate="yes" xml:space="preserve">
          <source>If the ribbon generator has a context, then the ribbon is rendered to this context as a sequence of path method calls and this function returns void. Otherwise, a path data string is returned.</source>
          <target state="translated">リボンジェネレータがコンテキストを持っている場合、リボンはパスメソッド呼び出しのシーケンスとしてこのコンテキストにレンダリングされ、この関数は void を返します。そうでない場合は、パスデータ文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="58d43b19e06b1213cb3dc5e17e1764507de99a75" translate="yes" xml:space="preserve">
          <source>If the set contains the specified &lt;em&gt;value&lt;/em&gt; string, removes it and returns true. Otherwise, this method does nothing and returns false.</source>
          <target state="translated">セットに指定された&lt;em&gt;値の&lt;/em&gt;文字列が含まれている&lt;em&gt;場合&lt;/em&gt;、それを削除してtrueを返します。それ以外の場合、このメソッドは何もせず、falseを返します。</target>
        </trans-unit>
        <trans-unit id="f3d683cd6ce70a9043c8b08fe2c9568aab0e5b49" translate="yes" xml:space="preserve">
          <source>If the specified &lt;em&gt;factory&lt;/em&gt; is null, removes the previously-assigned attribute tween of the specified &lt;em&gt;name&lt;/em&gt;, if any. If &lt;em&gt;factory&lt;/em&gt; is not specified, returns the current interpolator factory for attribute with the specified &lt;em&gt;name&lt;/em&gt;, or undefined if no such tween exists.</source>
          <target state="translated">指定された&lt;em&gt;ファクトリ&lt;/em&gt;がnullの場合、指定された&lt;em&gt;name&lt;/em&gt;の以前に割り当てられた属性tweenがあれば削除します。&lt;em&gt;factory&lt;/em&gt;が指定されていない場合、指定された&lt;em&gt;nameを&lt;/em&gt;持つ属性の現在の補間ファクトリーを返すか、そのようなトゥイーンが存在しない場合はundefinedを返します。</target>
        </trans-unit>
        <trans-unit id="ccd828e476297a673430a67ef45a98b3cffe6578" translate="yes" xml:space="preserve">
          <source>If the specified &lt;em&gt;factory&lt;/em&gt; is null, removes the previously-assigned style tween of the specified &lt;em&gt;name&lt;/em&gt;, if any. If &lt;em&gt;factory&lt;/em&gt; is not specified, returns the current interpolator factory for style with the specified &lt;em&gt;name&lt;/em&gt;, or undefined if no such tween exists.</source>
          <target state="translated">指定された&lt;em&gt;ファクトリ&lt;/em&gt;がnullの場合、指定された&lt;em&gt;name&lt;/em&gt;の以前に割り当てられたスタイルトゥイーンがあれば削除します。&lt;em&gt;ファクトリ&lt;/em&gt;が指定されていない場合、指定された&lt;em&gt;名前の&lt;/em&gt;スタイルの現在の補間ファクトリーを返すか、そのようなトゥイーンが存在しない場合は未定義を返します。</target>
        </trans-unit>
        <trans-unit id="f8b49aef4b944b4fbf942d816fc2261749fa5fc7" translate="yes" xml:space="preserve">
          <source>If the specified &lt;em&gt;node&lt;/em&gt; has odd depth, delegates to &lt;a href=&quot;#treemapSlice&quot;&gt;treemapSlice&lt;/a&gt;; otherwise delegates to &lt;a href=&quot;#treemapDice&quot;&gt;treemapDice&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;em&gt;ノードの&lt;/em&gt;深さが奇数の場合は、&lt;a href=&quot;#treemapSlice&quot;&gt;treemapSlice&lt;/a&gt;に委任します。それ以外の場合は、&lt;a href=&quot;#treemapDice&quot;&gt;treemapDiceに&lt;/a&gt;委任します。</target>
        </trans-unit>
        <trans-unit id="977eedda0b5633209c2099549a8f175c2f80e20e" translate="yes" xml:space="preserve">
          <source>If the specified &lt;em&gt;transition&lt;/em&gt; is not found on a selected node or its ancestors (such as if the transition &lt;a href=&quot;#the-life-of-a-transition&quot;&gt;already ended&lt;/a&gt;), the default timing parameters are used; however, in a future release, this will likely be changed to throw an error. See &lt;a href=&quot;https://github.com/d3/d3-transition/issues/59&quot;&gt;#59&lt;/a&gt;.</source>
          <target state="translated">指定した&lt;em&gt;遷移&lt;/em&gt;が選択したノードまたはその祖先で見つからない場合（遷移が&lt;a href=&quot;#the-life-of-a-transition&quot;&gt;既に終了し&lt;/a&gt;ている場合など）、デフォルトのタイミングパラメータが使用されます。ただし、将来のリリースでは、エラーがスローされるように変更される可能性があります。&lt;a href=&quot;https://github.com/d3/d3-transition/issues/59&quot;&gt;＃59を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="02c27e512a7d71bdd06dcf9d7943c9b303a99233" translate="yes" xml:space="preserve">
          <source>If the specified &lt;em&gt;type&lt;/em&gt; is a function, it is evaluated for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element (&lt;em&gt;nodes&lt;/em&gt;[&lt;em&gt;i&lt;/em&gt;]). This function should return an element to be appended. (The function typically creates a new element, but it may instead return an existing element.) For example, to append a DIV element to each paragraph:</source>
          <target state="translated">指定された&lt;em&gt;タイプ&lt;/em&gt;が関数の場合、現在のデータ（&lt;em&gt;d&lt;/em&gt;）、現在のインデックス（&lt;em&gt;i&lt;/em&gt;）、および現在のグループ（&lt;em&gt;nodes&lt;/em&gt;）が渡されて、&lt;em&gt;これ&lt;/em&gt;が現在のDOM要素として、選択された要素ごとに順番に評価されます（&lt;em&gt;ノード&lt;/em&gt; [ &lt;em&gt;i&lt;/em&gt; ]）。この関数は、追加する要素を返す必要があります。 （関数は通常、新しい要素を作成しますが、代わりに既存の要素を返す場合があります。）たとえば、DIV要素を各段落に追加するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="587f1a74c9ba57f48c3ca7259a07493aff437517" translate="yes" xml:space="preserve">
          <source>If the specified &lt;em&gt;type&lt;/em&gt; is a string, appends a new element of this type (tag name) as the last child of each selected element, or before the next following sibling in the update selection if this is an &lt;a href=&quot;#selection_enter&quot;&gt;enter selection&lt;/a&gt;. The latter behavior for enter selections allows you to insert elements into the DOM in an order consistent with the new bound data; however, note that &lt;a href=&quot;#selection_order&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.order&lt;/a&gt; may still be required if updating elements change order (&lt;em&gt;i.e.&lt;/em&gt;, if the order of new data is inconsistent with old data).</source>
          <target state="translated">指定した&lt;em&gt;タイプ&lt;/em&gt;が文字列の場合、選択した各要素の最後の子としてこのタイプの新しい要素（タグ名）を追加します。これが&lt;a href=&quot;#selection_enter&quot;&gt;入力選択の&lt;/a&gt;場合は、更新選択の次の兄弟の前に追加します。 Enter選択の後者の動作では、新しいバインドされたデータと一致する順序で要素をDOMに挿入できます。しかし、なお、&lt;a href=&quot;#selection_order&quot;&gt;&lt;em&gt;選択&lt;/em&gt; .ORDERが&lt;/a&gt;まだ必要な場合があります要素の変更命令を更新する場合（&lt;em&gt;つまり&lt;/em&gt;、新しいデータの順序が古いデータと矛盾している場合）。</target>
        </trans-unit>
        <trans-unit id="3cce06423dde4472b177174960e4e62f5339114b" translate="yes" xml:space="preserve">
          <source>If the specified &lt;em&gt;type&lt;/em&gt; is a string, inserts a new element of this type (tag name) before the first element matching the specified &lt;em&gt;before&lt;/em&gt; selector for each selected element. For example, a &lt;em&gt;before&lt;/em&gt; selector &lt;code&gt;:first-child&lt;/code&gt; will prepend nodes before the first child. If &lt;em&gt;before&lt;/em&gt; is not specified, it defaults to null. (To append elements in an order consistent with &lt;a href=&quot;#joining-data&quot;&gt;bound data&lt;/a&gt;, use &lt;a href=&quot;#selection_append&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.append&lt;/a&gt;.)</source>
          <target state="translated">指定された&lt;em&gt;タイプ&lt;/em&gt;が文字列である場合、選択された各エレメントの指定された&lt;em&gt;before&lt;/em&gt;セレクターに一致する最初のエレメントの前に、このタイプの新しいエレメント（タグ名）を挿入します。たとえば、&lt;em&gt;before&lt;/em&gt;セレクタ &lt;code&gt;:first-child&lt;/code&gt; は最初の子の前にノードを追加します。&lt;em&gt;before&lt;/em&gt;が指定されていない場合、デフォルトはnullです。 （&lt;a href=&quot;#joining-data&quot;&gt;バインドされたデータ&lt;/a&gt;と一致する順序で要素を追加するには、&lt;a href=&quot;#selection_append&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .appendを&lt;/a&gt;使用します。）</target>
        </trans-unit>
        <trans-unit id="d0dc9e89924b5bc1f6de5343f72b3e3b1e5b5ba0" translate="yes" xml:space="preserve">
          <source>If the specified &lt;em&gt;values&lt;/em&gt; is a function, the function is evaluated for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element. The function&amp;rsquo;s return value must be an object with string values, which are then used to set attributes on the current element. For example:</source>
          <target state="translated">指定された&lt;em&gt;値&lt;/em&gt;が関数である場合、関数は、現在のデータ（&lt;em&gt;d&lt;/em&gt;）、現在のインデックス（&lt;em&gt;i&lt;/em&gt;）、現在のグループ（&lt;em&gt;nodes&lt;/em&gt;）が渡されて、選択された要素ごとに評価され、&lt;em&gt;これ&lt;/em&gt;が現在のDOMになります。素子。関数の戻り値は、現在の要素に属性を設定するために使用される文字列値を持つオブジェクトである必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="779f46ce4c29fe778d73c238342281c44db8bfed" translate="yes" xml:space="preserve">
          <source>If the specified &lt;em&gt;values&lt;/em&gt; is a function, the function is evaluated for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element. The function&amp;rsquo;s return value must be an object with string values, which are then used to set properties on the current element. For example:</source>
          <target state="translated">指定された&lt;em&gt;値&lt;/em&gt;が関数である場合、関数は、現在のデータ（&lt;em&gt;d&lt;/em&gt;）、現在のインデックス（&lt;em&gt;i&lt;/em&gt;）、現在のグループ（&lt;em&gt;nodes&lt;/em&gt;）が渡されて、選択された要素ごとに評価され、&lt;em&gt;これ&lt;/em&gt;が現在のDOMになります。素子。関数の戻り値は、現在の要素のプロパティを設定するために使用される文字列値を持つオブジェクトである必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="36fdeae14c171a20ffb0aa79fc3fff09bf2dc3f8" translate="yes" xml:space="preserve">
          <source>If the specified &lt;em&gt;values&lt;/em&gt; is a function, the function is evaluated for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element. The function&amp;rsquo;s return value must be an object with string values, which are then used to set style properties on the current element. For example:</source>
          <target state="translated">指定された&lt;em&gt;値&lt;/em&gt;が関数の場合、関数は、現在のデータ（&lt;em&gt;d&lt;/em&gt;）、現在のインデックス（&lt;em&gt;i&lt;/em&gt;）、および現在のグループ（&lt;em&gt;nodes&lt;/em&gt;）を渡された順に、選択された各要素に対して評価され、&lt;em&gt;これ&lt;/em&gt;が現在のDOMになります。素子。関数の戻り値は、文字列値を持つオブジェクトである必要があります。これは、現在の要素にスタイルプロパティを設定するために使用されます。例えば：</target>
        </trans-unit>
        <trans-unit id="87ccf189c6db330ac42a976cb6d79cf83a043ec5" translate="yes" xml:space="preserve">
          <source>If the specified array has fewer than two elements, returns the empty array.</source>
          <target state="translated">指定した配列の要素が2つ以下の場合は、空の配列を返します。</target>
        </trans-unit>
        <trans-unit id="08ed17c98bfb90d12e4c000fabd6cdb7db3fb3f1" translate="yes" xml:space="preserve">
          <source>If the specified array of &lt;em&gt;links&lt;/em&gt; is modified, such as when links are added to or removed from the simulation, this method must be called again with the new (or changed) array to notify the force of the change; the force does not make a defensive copy of the specified array.</source>
          <target state="translated">リンクがシミュレーションに追加またはシミュレーションから削除されたときなど、指定された&lt;em&gt;リンクの&lt;/em&gt;配列が変更された場合、変更の強制を通知するために、新しい（または変更された）配列を使用してこのメ​​ソッドを再度呼び出す必要があります。フォースは、指定された配列の防御コピーを作成しません。</target>
        </trans-unit>
        <trans-unit id="bf7c308a05e624a87182283bc6658967de76c84e" translate="yes" xml:space="preserve">
          <source>If the specified array of &lt;em&gt;nodes&lt;/em&gt; is modified, such as when nodes are added to or removed from the simulation, this method must be called again with the new (or changed) array to notify the simulation and bound forces of the change; the simulation does not make a defensive copy of the specified array.</source>
          <target state="translated">シミュレーションにノードが追加または削除されたときなど、指定された&lt;em&gt;ノードの&lt;/em&gt;配列が変更された場合は、新しい（または変更された）配列を使用してこのメ​​ソッドを再度呼び出し、シミュレーションと結合力に変更を通知する必要があります。シミュレーションでは、指定された配列の防御的なコピーは作成されません。</target>
        </trans-unit>
        <trans-unit id="56e8a72b6884b8ed5b13449eddf2b97799c44025" translate="yes" xml:space="preserve">
          <source>If the target value is null, the attribute is removed when the transition starts. Otherwise, an interpolator is chosen based on the type of the target value, using the following algorithm:</source>
          <target state="translated">ターゲット値がヌルである場合、遷移が開始されたときに属性は削除されます。そうでない場合は、以下のアルゴリズムを使用して、ターゲット値のタイプに基づいて補間器が選択されます。</target>
        </trans-unit>
        <trans-unit id="bcd6a1faeeb3e9d57a89df416fe7a7bd5d1bd4f0" translate="yes" xml:space="preserve">
          <source>If the target value is null, the style is removed when the transition starts. Otherwise, an interpolator is chosen based on the type of the target value, using the following algorithm:</source>
          <target state="translated">ターゲット値がnullの場合、スタイルは遷移の開始時に削除されます。それ以外の場合は、以下のアルゴリズムを使用して、ターゲット値の型に基づいて補間器が選択されます。</target>
        </trans-unit>
        <trans-unit id="6320c1c99ac91af5e64c4b5c3d89517fd27145ee" translate="yes" xml:space="preserve">
          <source>If the task calls back with an error, any tasks that were scheduled &lt;em&gt;but not yet started&lt;/em&gt; will not run. For a serial queue (of &lt;em&gt;concurrency&lt;/em&gt; 1), this means that a task will only run if all previous tasks succeed. For a queue with higher concurrency, only the first error that occurs is reported to the await callback, and tasks that were started before the error occurred will continue to run; note, however, that their results will not be reported to the await callback.</source>
          <target state="translated">タスクがエラーでコールバックした場合、スケジュールされた&lt;em&gt;がまだ開始&lt;/em&gt;されて&lt;em&gt;いない&lt;/em&gt;タスクは実行され&lt;em&gt;ません&lt;/em&gt;。（&lt;em&gt;並行性&lt;/em&gt; 1の）シリアルキューの場合、これは、以前のすべてのタスクが成功した場合にのみタスクが実行されることを意味します。同時実行性が高いキューの場合、最初に発生したエラーのみがawaitコールバックに報告され、エラーが発生する前に開始されたタスクは引き続き実行されます。ただし、それらの結果はawaitコールバックに報告されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="9e09e2114dbe27ef0a9907a77344cc2a1dcfee49" translate="yes" xml:space="preserve">
          <source>If the user tries to zoom by wheeling when already at the corresponding limit of the scale extent, the wheel events will be ignored and not initiate a zoom gesture. This allows the user to scroll down past a zoomable area after zooming in, or to scroll up after zooming out. If you would prefer to always prevent scrolling on wheel input regardless of the scale extent, register a wheel event listener to prevent the browser default behavior:</source>
          <target state="translated">スケールエクステントの対応する限界に達しているときにユーザーがホイールを使ってズームしようとすると、ホイールイベントは無視され、ズームジェスチャは開始されません。これにより、ユーザはズームインした後にズーム可能な領域を下にスクロールしたり、ズームアウトした後に上にスクロールしたりすることができます。スケールエクステントに関係なく、常にホイール入力でのスクロールを防止したい場合は、ブラウザのデフォルト動作を防止するためにホイールイベントリスナーを登録してください。</target>
        </trans-unit>
        <trans-unit id="c856b4b795df141d58532f912c484c94aa063dd4" translate="yes" xml:space="preserve">
          <source>If you are just setting a single variable, consider using &lt;a href=&quot;#selection_property&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.property&lt;/a&gt;:</source>
          <target state="translated">単一の変数を設定するだけの場合は、&lt;a href=&quot;#selection_property&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .propertyの&lt;/a&gt;使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="6c1ec7153ea691655f1e21b4c80e501624a7f27b" translate="yes" xml:space="preserve">
          <source>If you didn&amp;rsquo;t, you saw this:</source>
          <target state="translated">あなたがしなかった場合、あなたはこれを見ました：</target>
        </trans-unit>
        <trans-unit id="61698bd57da9da3e70eaf79cab3c4b74fe42a8e6" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t care about modularity, you can mostly ignore this change and keep using the default bundle. However, there is one unavoidable consequence of adopting ES6 modules: every symbol in D3 4.0 now shares a flat namespace rather than the nested one of D3 3.x. For example, d3.scale.linear is now d3.scaleLinear, and d3.layout.treemap is now d3.treemap. The adoption of ES6 modules also means that D3 is now written exclusively in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;strict mode&lt;/a&gt; and has better readability. And there have been many other significant improvements to D3&amp;rsquo;s features! (Nearly all of the code from D3 3.x has been rewritten.) These changes are covered below.</source>
          <target state="translated">モジュール性を気にしない場合は、この変更をほとんど無視して、デフォルトのバンドルを使い続けることができます。ただし、ES6モジュールを採用した場合、避けられない結果が1つあります。D34.0のすべてのシンボルが、D3 3.xのネストされた名前空間ではなく、フラットな名前空間を共有するようになりました。たとえば、d3.scale.linearはd3.scaleLinearになり、d3.layout.treemapはd3.treemapになりました。ES6モジュールの採用は、D3が&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;ストリクトモードで&lt;/a&gt;排他的に記述され、読みやすさが向上したことも意味します。また、D3の機能には他にも多くの重要な改善が加えられています。（D3 3.xのほぼすべてのコードが書き直されました。）これらの変更については、以下で説明します。</target>
        </trans-unit>
        <trans-unit id="fd99599ac0396735f9fc4e7334d3347f73ddf84b" translate="yes" xml:space="preserve">
          <source>If you like, you can also &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt;&lt;em&gt;array&lt;/em&gt;.concat&lt;/a&gt; this result with an array of column names to generate the first row:</source>
          <target state="translated">あなたのような場合は、することができ&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat&quot;&gt;&lt;em&gt;、アレイは&lt;/em&gt; .concat&lt;/a&gt;最初の行を生成するために、列名の配列にこの結果を：</target>
        </trans-unit>
        <trans-unit id="2bbc738f8bd7512cb3c5357d1383f7d44b54e014" translate="yes" xml:space="preserve">
          <source>If you use Babel, Webpack, or another ES6-to-ES5 bundler, be aware that the value of d3.event changes during an event! An import of d3.event must be a &lt;a href=&quot;http://www.2ality.com/2015/07/es6-module-exports.html&quot;&gt;live binding&lt;/a&gt;, so you may need to configure the bundler to import from D3&amp;rsquo;s ES6 modules rather than from the generated UMD bundle; not all bundlers observe &lt;a href=&quot;https://github.com/rollup/rollup/wiki/jsnext:main&quot;&gt;jsnext:main&lt;/a&gt;. Also beware of conflicts with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/event&quot;&gt;&lt;em&gt;window&lt;/em&gt;.event&lt;/a&gt; global.</source>
          <target state="translated">Babel、Webpack、または別のES6からES5へのバンドルを使用する場合、d3.eventの値がイベント中に変化することに注意してください！d3.eventのインポートは&lt;a href=&quot;http://www.2ality.com/2015/07/es6-module-exports.html&quot;&gt;ライブバインディング&lt;/a&gt;である必要があるため、生成されたUMDバンドルからではなく、D3のES6モジュールからインポートするようにバンドラーを構成する必要がある場合があります。すべてのバンドルが&lt;a href=&quot;https://github.com/rollup/rollup/wiki/jsnext:main&quot;&gt;jsnext：mainを&lt;/a&gt;監視するわけではありません。また、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/event&quot;&gt;&lt;em&gt;ウィンドウの&lt;/em&gt; .event&lt;/a&gt;グローバルとの競合にも注意してください。</target>
        </trans-unit>
        <trans-unit id="b443bcb1a18e49aabd25560b2044c147e142aec5" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-array&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-array/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-array.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-array&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-array/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-array.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。 AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="123e99459bcc51107a6ba2b419b1ccfae24baa49" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-axis&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-axis/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-axis.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. (To be useful, you&amp;rsquo;ll also want to use &lt;a href=&quot;d3-scale&quot;&gt;d3-scale&lt;/a&gt; and &lt;a href=&quot;d3-selection&quot;&gt;d3-selection&lt;/a&gt;, but these are soft dependencies.) AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-axis&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-axis/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-axis.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。 （役立つために、&lt;a href=&quot;d3-scale&quot;&gt;d3-scale&lt;/a&gt;および&lt;a href=&quot;d3-selection&quot;&gt;d3-selection&lt;/a&gt;も使用する必要がありますが、これらはソフトな依存関係です。）AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="a09b81609599dfc12f2fb5eeb49d44edc8b4bc52" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-brush&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-brush/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-brush.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-brush&lt;/code&gt; ます。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-brush/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-brush.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="eb8e4fc43a7edfb9c9069f4aa190e2983e0e9e6f" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-chord&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-chord/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-chord.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-chord&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-chord/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-chord.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="038b9ea4cbb74baac90f8ae3bcf75f92709a4c1c" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-collection&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-collection/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-collection.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-collection&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-collection/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-collection.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="6a5898e2f76aab9441617659c83f4a3cf4e807a8" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-color&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-color/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-color.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-color&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-color/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-color.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="104ca3da577074421c88f801978d4e3cd7839e3f" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-contour&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-contour/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-contour.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-contour&lt;/code&gt; ます。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-contour/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-contour.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="850d7c8fe04492cf64ff4b2ab084d2479c9563cd" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-dispatch&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-dispatch/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-dispatch.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-dispatch&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-dispatch/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-dispatch.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="9e991487ed78af23f53881cf98aef8d8b7424d4d" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-drag&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-drag/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-drag.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-drag&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-drag/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-drag.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="0766d09cbbd567448b1a3cb54c9cfea49a75e93b" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-dsv&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-dsv/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-dsv.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-dsv&lt;/code&gt; ます。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-dsv/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-dsv.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="8d7cdbbc59de9a689aa928213981ee3900985675" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-ease&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-ease/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-ease.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合は、 &lt;code&gt;npm install d3-ease&lt;/code&gt; を使用します。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-ease/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-ease.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="6a483003f9d3575200fb62e1dcabe6186394e8ff" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-fetch&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-fetch/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt; as a &lt;a href=&quot;https://d3js.org/d3-fetch.v1.min.js&quot;&gt;standalone library&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-fetch&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-fetch/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-fetch.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="208eee711a74f4442c323b5d6673dfbac811ad4e" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-force&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-force/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-force.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3_force&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-force&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-force/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-force.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3_force&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="9675f5b7f8a5211acf489cc782a3b72675846ea0" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-format&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-format/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-format.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-format&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-format/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-format.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="f7f5569709cd1e3f6792451620f5b38d313b02af" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-geo-polygon&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-geo-polygon/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://unpkg.com/d3-geo-polygon/&quot;&gt;unpkg&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合は、 &lt;code&gt;npm install d3-geo-polygon&lt;/code&gt; を使用してください。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-geo-polygon/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://unpkg.com/d3-geo-polygon/&quot;&gt;unpkg&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="581f34b7a176b466e51d8a0e4bcf3ecade07ecc9" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-geo-projection&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-geo-projection/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt; as a &lt;a href=&quot;https://d3js.org/d3-geo-projection.v2.min.js&quot;&gt;standalone library&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-geo-projection&lt;/code&gt; ます。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-geo-projection/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-geo-projection.v2.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="4831bda29183992a9672188c2e013b066108b9a1" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-geo&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-geo/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-geo.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-geo&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-geo/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-geo.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="ad643ce50c79ecac4616412f06612c211bcec0f4" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-hcg&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-hcg/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt; as a &lt;a href=&quot;https://d3js.org/d3-hcg.v0.0.min.js&quot;&gt;standalone library&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-hcg&lt;/code&gt; ます。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-hcg/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-hcg.v0.0.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="5f1ee1dd30acccba41d3b32428b78d5dd9246630" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-hierarchy&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-hierarchy/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-hierarchy.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合は、 &lt;code&gt;npm install d3-hierarchy&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-hierarchy/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-hierarchy.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="59d2de0b4b5684b1a6de4ded5172f1b3a86164d3" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-hsv&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-hsv/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt; as a &lt;a href=&quot;https://d3js.org/d3-hsv.v0.1.min.js&quot;&gt;standalone library&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-hsv&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-hsv/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-hsv.v0.1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="f0db1e2d057da1703fca8758d3a8e1490bffecc8" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-interpolate&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-interpolate/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-interpolate.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-interpolate&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-interpolate/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-interpolate.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="aefe9169d886056b1aa0e42050ae03df1f967cf1" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-path&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-path/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-path.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-path&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-path/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-path.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="75bcc18f536cbcbcd34f993f54fd5a0be17fb762" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-polygon&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-polygon/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-polygon.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-polygon&lt;/code&gt; ます。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-polygon/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-polygon.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="96863105f3d206673b3dff123032e54c1f3d5f4e" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-quadtree&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-quadtree/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-quadtree.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-quadtree&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-quadtree/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-quadtree.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="0804c07e2f77a8f3cb9b3a4e2473adbc3b8095f6" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-queue&lt;/code&gt;. If you use Bower, &lt;code&gt;bower install d3-queue&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-queue/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-queue.v3.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-queue&lt;/code&gt; 。 Bowerを使用する場合は、 &lt;code&gt;bower install d3-queue&lt;/code&gt; を使用してください。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-queue/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-queue.v3.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。 AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="102241519dc1e505ac06735cb6c379c360e9f1fc" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-random&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-random/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-random.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-random&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-random/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-random.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="a0ce788d38dfb0208c56cc16a2db834115bb4abd" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-request&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-request/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-request.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-request&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-request/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-request.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="6ae686dfaff6a4edc17561799f968a24c406bbde" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-scale-chromatic&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-scale-chromatic/releases/latest&quot;&gt;latest release&lt;/a&gt; or load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt; as a &lt;a href=&quot;https://d3js.org/d3-scale-chromatic.v1.min.js&quot;&gt;standalone library&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-scale-chromatic&lt;/code&gt; ます。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-scale-chromatic/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードするか、&lt;a href=&quot;https://d3js.org/d3-scale-chromatic.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードします。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="b5b01b7555731a1ceb808778ea3b24f5ee5637fd" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-scale&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-scale/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-scale.v2.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合は、 &lt;code&gt;npm install d3-scale&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-scale/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-scale.v2.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="fb4ba0fd344d2ad88cb65dcb613f817f4ca06f3a" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-selection-multi&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-selection-multi/releases/latest&quot;&gt;latest release&lt;/a&gt; or load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt; as a &lt;a href=&quot;https://d3js.org/d3-selection-multi.v1.min.js&quot;&gt;standalone library&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-selection-multi&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-selection-multi/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードするか、&lt;a href=&quot;https://d3js.org/d3-selection-multi.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードします。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="695889df00a2e3c69fe0e0c020238b98e24675cc" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-selection&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-selection/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-selection.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-selection&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-selection/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-selection.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="c2a67bb33632c3bb221759444df5a9dfc3fc1d5e" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-shape&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-shape/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-shape.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合は、 &lt;code&gt;npm install d3-shape&lt;/code&gt; です。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-shape/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-shape.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="4457f20354e9a63d50cdad7e6daa67408b003ffd" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-tile&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-tile/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://unpkg.com&quot;&gt;unpkg.com&lt;/a&gt; as a &lt;a href=&quot;https://unpkg.com/d3-tile@0.0&quot;&gt;standalone library&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-tile&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-tile/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://unpkg.com&quot;&gt;unpkg.com&lt;/a&gt;から&lt;a href=&quot;https://unpkg.com/d3-tile@0.0&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="ad29807bf3f13cc8fdd061f44296dac35f3d4cbe" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-time-format&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-time-format/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-time-format.v2.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-time-format&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-time-format/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-time-format.v2.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="82c7e79ff4350e2ff887655986af8080a17139c5" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-time&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-time/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-time.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-time&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-time/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-time.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="86265d188b0d1b70e46ba87fb72be7c4e1267143" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-timer&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-timer/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-timer.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-timer&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-timer/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-timer.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="8ea6a76c25a42524e98828372e7e86146fecf98c" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-transition&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-transition/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-transition.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-transition&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-transition/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-transition.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="0aac84b49c5eab15a46406757b21950cfcb1918c" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-voronoi&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-voronoi/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-voronoi.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-voronoi&lt;/code&gt; ます。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-voronoi/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-voronoi.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="7fd6a765c59e6d63cb2f3b6982a7fd2113a0713b" translate="yes" xml:space="preserve">
          <source>If you use NPM, &lt;code&gt;npm install d3-zoom&lt;/code&gt;. Otherwise, download the &lt;a href=&quot;https://github.com/d3/d3-zoom/releases/latest&quot;&gt;latest release&lt;/a&gt;. You can also load directly from &lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;, either as a &lt;a href=&quot;https://d3js.org/d3-zoom.v1.min.js&quot;&gt;standalone library&lt;/a&gt; or as part of &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0&lt;/a&gt;. AMD, CommonJS, and vanilla environments are supported. In vanilla, a &lt;code&gt;d3&lt;/code&gt; global is exported:</source>
          <target state="translated">NPMを使用する場合、 &lt;code&gt;npm install d3-zoom&lt;/code&gt; 。それ以外の場合は、&lt;a href=&quot;https://github.com/d3/d3-zoom/releases/latest&quot;&gt;最新のリリースを&lt;/a&gt;ダウンロードしてください。&lt;a href=&quot;https://d3js.org/d3-zoom.v1.min.js&quot;&gt;スタンドアロンライブラリ&lt;/a&gt;として、または&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 4.0の&lt;/a&gt;一部として、&lt;a href=&quot;https://d3js.org&quot;&gt;d3js.org&lt;/a&gt;から直接ロードすることもできます。AMD、CommonJS、およびバニラ環境がサポートされています。バニラでは、 &lt;code&gt;d3&lt;/code&gt; グローバルがエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="529bff52753e4714e8739afe548f32025efe8f2f" translate="yes" xml:space="preserve">
          <source>If you want a filtered view of a time interval (say to guarantee that two overlapping ranges are consistent, such as when generating &lt;a href=&quot;../../../d3-scale#time_ticks&quot;&gt;time scale ticks&lt;/a&gt;), you can use the new &lt;a href=&quot;../../../d3-time#interval_every&quot;&gt;&lt;em&gt;interval&lt;/em&gt;.every&lt;/a&gt; method or its more general cousin &lt;a href=&quot;../../../d3-time#interval_filter&quot;&gt;&lt;em&gt;interval&lt;/em&gt;.filter&lt;/a&gt;:</source>
          <target state="translated">時間間隔のフィルタービューが必要な場合（たとえば、&lt;a href=&quot;../../../d3-scale#time_ticks&quot;&gt;タイムスケールティックを&lt;/a&gt;生成する場合など、2つの重複する範囲が一貫していることを保証するため）、新しい&lt;a href=&quot;../../../d3-time#interval_every&quot;&gt;&lt;em&gt;interval&lt;/em&gt; .every&lt;/a&gt;メソッドまたはより一般的ないとこ&lt;a href=&quot;../../../d3-time#interval_filter&quot;&gt;&lt;em&gt;間隔&lt;/em&gt; .filter&lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="ce2eef12300ae0867004b4735f0a550e01933924" translate="yes" xml:space="preserve">
          <source>If you wish to specify a request header or a mime type, you must &lt;em&gt;not&lt;/em&gt; specify a callback to the constructor. Use &lt;a href=&quot;#request_header&quot;&gt;&lt;em&gt;request&lt;/em&gt;.header&lt;/a&gt; or &lt;a href=&quot;#request_mimeType&quot;&gt;&lt;em&gt;request&lt;/em&gt;.mimeType&lt;/a&gt; followed by &lt;a href=&quot;#request_get&quot;&gt;&lt;em&gt;request&lt;/em&gt;.get&lt;/a&gt; instead. See &lt;a href=&quot;#json&quot;&gt;d3.json&lt;/a&gt;, &lt;a href=&quot;#csv&quot;&gt;d3.csv&lt;/a&gt;, &lt;a href=&quot;#tsv&quot;&gt;d3.tsv&lt;/a&gt;, &lt;a href=&quot;#html&quot;&gt;d3.html&lt;/a&gt; and &lt;a href=&quot;#xml&quot;&gt;d3.xml&lt;/a&gt; for content-specific convenience constructors.</source>
          <target state="translated">リクエストヘッダーまたはMIMEタイプを指定する場合は、コンストラクターへのコールバックを指定し&lt;em&gt;ない&lt;/em&gt;でください。使用&lt;a href=&quot;#request_header&quot;&gt;&lt;em&gt;要求&lt;/em&gt; .header&lt;/a&gt;または&lt;a href=&quot;#request_mimeType&quot;&gt;&lt;em&gt;要求&lt;/em&gt; .mimeTypeが&lt;/a&gt;続く&lt;a href=&quot;#request_get&quot;&gt;&lt;em&gt;リクエスト&lt;/em&gt;に.get&lt;/a&gt;代わりに。コンテンツ固有の便利なコンストラクターについては、&lt;a href=&quot;#json&quot;&gt;d3.json&lt;/a&gt;、&lt;a href=&quot;#csv&quot;&gt;d3.csv&lt;/a&gt;、&lt;a href=&quot;#tsv&quot;&gt;d3.tsv&lt;/a&gt;、&lt;a href=&quot;#html&quot;&gt;d3.html&lt;/a&gt;、および&lt;a href=&quot;#xml&quot;&gt;d3.xml&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2fb25321172708fa1cc84ad28ef50230edc7361a" translate="yes" xml:space="preserve">
          <source>Immediately after creating a transition, such as by &lt;a href=&quot;#selection_transition&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.transition&lt;/a&gt; or &lt;a href=&quot;#transition_transition&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.transition&lt;/a&gt;, you may configure the transition using methods such as &lt;a href=&quot;#transition_delay&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.delay&lt;/a&gt;, &lt;a href=&quot;#transition_duration&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.duration&lt;/a&gt;, &lt;a href=&quot;#transition_attr&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.attr&lt;/a&gt; and &lt;a href=&quot;#transition_style&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.style&lt;/a&gt;. Methods that specify target values (such as &lt;em&gt;transition&lt;/em&gt;.attr) are evaluated synchronously; however, methods that require the starting value for interpolation, such as &lt;a href=&quot;#transition_attrTween&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.attrTween&lt;/a&gt; and &lt;a href=&quot;#transition_styleTween&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.styleTween&lt;/a&gt;, must be deferred until the transition starts.</source>
          <target state="translated">直ちにこのようなことにより、遷移、作成後に&lt;a href=&quot;#selection_transition&quot;&gt;&lt;em&gt;選択&lt;/em&gt; .transition&lt;/a&gt;又は&lt;a href=&quot;#transition_transition&quot;&gt;&lt;em&gt;遷移&lt;/em&gt; .transitionを&lt;/a&gt;、次のような方法を用いて遷移を構成することができる&lt;a href=&quot;#transition_delay&quot;&gt;&lt;em&gt;遷移&lt;/em&gt; .delay&lt;/a&gt;、&lt;a href=&quot;#transition_duration&quot;&gt;&lt;em&gt;遷移&lt;/em&gt; .duration&lt;/a&gt;、&lt;a href=&quot;#transition_attr&quot;&gt;&lt;em&gt;遷移&lt;/em&gt; .ATTR&lt;/a&gt;と&lt;a href=&quot;#transition_style&quot;&gt;&lt;em&gt;遷移&lt;/em&gt; .styleを&lt;/a&gt;。ターゲット値を指定するメソッド（&lt;em&gt;transition&lt;/em&gt; .attr など）は同期的に評価されます。ただし、&lt;a href=&quot;#transition_attrTween&quot;&gt;&lt;em&gt;transition&lt;/em&gt; .attrTween&lt;/a&gt;や&lt;a href=&quot;#transition_styleTween&quot;&gt;&lt;em&gt;transition&lt;/em&gt; .styleTween&lt;/a&gt;など、補間の開始値を必要とするメソッドは、遷移が開始するまで延期する必要があります。</target>
        </trans-unit>
        <trans-unit id="2732d5fe83ebc6978d77822e88468d5856c0563c" translate="yes" xml:space="preserve">
          <source>Immediately invoke any eligible timer callbacks. Note that zero-delay timers are normally first executed after one frame (~17ms). This can cause a brief flicker because the browser renders the page twice: once at the end of the first event loop, then again immediately on the first timer callback. By flushing the timer queue at the end of the first event loop, you can run any zero-delay timers immediately and avoid the flicker.</source>
          <target state="translated">対象となるタイマーコールバックを即座に呼び出します。ゼロ遅延タイマーは通常、1フレーム(~17ms)後に最初に実行されることに注意してください。これは、ブラウザがページを2回レンダリングするため、短いフリッカーを引き起こす可能性があります:1回目は最初のイベントループの終了時に、2回目は最初のタイマーコールバック時に再びレンダリングします。最初のイベントループの最後にタイマーキューをフラッシュすることで、ゼロ遅延タイマーをすぐに実行してフリッカーを回避することができます。</target>
        </trans-unit>
        <trans-unit id="812ab480f0f96cc7289e2d73812775606861b845" translate="yes" xml:space="preserve">
          <source>Implements the &lt;a href=&quot;https://www.win.tue.nl/%7Evanwijk/stm.pdf&quot;&gt;squarified treemap&lt;/a&gt; algorithm by Bruls &lt;em&gt;et al.&lt;/em&gt;, which seeks to produce rectangles of a given &lt;a href=&quot;#squarify_ratio&quot;&gt;aspect ratio&lt;/a&gt;.</source>
          <target state="translated">Bruls &lt;em&gt;ら&lt;/em&gt;による四角化された&lt;a href=&quot;https://www.win.tue.nl/%7Evanwijk/stm.pdf&quot;&gt;ツリーマップ&lt;/a&gt;アルゴリズムを実装し&lt;em&gt;ます。&lt;/em&gt;、指定された&lt;a href=&quot;#squarify_ratio&quot;&gt;アスペクト比の&lt;/a&gt;長方形を作成しようとします。</target>
        </trans-unit>
        <trans-unit id="13b616b3947006e35d8109409b4db598bc7547dd" translate="yes" xml:space="preserve">
          <source>In 3.x, &lt;a href=&quot;../../../d3-selection#selection_append&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.append&lt;/a&gt; would always append the new element as the last child of its parent. A little-known trick was to use &lt;a href=&quot;../../../d3-selection#selection_insert&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.insert&lt;/a&gt; without specifying a &lt;em&gt;before&lt;/em&gt; selector when entering nodes, causing the entering nodes to be inserted before the following element in the update selection. In 4.0, this is now the default behavior of &lt;em&gt;selection&lt;/em&gt;.append; if you do not specify a &lt;em&gt;before&lt;/em&gt; selector to &lt;em&gt;selection&lt;/em&gt;.insert, the inserted element is appended as the last child. This change makes the general update pattern preserve the relative order of elements and data. For example, given the following DOM:</source>
          <target state="translated">3.xでは、&lt;a href=&quot;../../../d3-selection#selection_append&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .append&lt;/a&gt;は常に新しい要素をその親の最後の子として追加します。あまり知られていないトリックは、ノードを入力するときに&lt;em&gt;before&lt;/em&gt;セレクターを指定せずに&lt;a href=&quot;../../../d3-selection#selection_insert&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .insert&lt;/a&gt;を使用することでした。これにより、更新選択の次の要素の前に入力ノードが挿入されます。 4.0では、これが&lt;em&gt;selection&lt;/em&gt; .appendのデフォルトの動作になりました。&lt;em&gt;before&lt;/em&gt;セレクターを&lt;em&gt;selection&lt;/em&gt; .insertに指定しない場合、挿入された要素は最後の子として追加されます。この変更により、一般的な更新パターンで要素とデータの相対的な順序が保持されます。たとえば、次のDOMがあるとします。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b662fac78314708f66a068a81c50cbc6d61bac5c" translate="yes" xml:space="preserve">
          <source>In 3.x, the &lt;a href=&quot;../../../d3-selection#selection_enter&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.enter&lt;/a&gt; and &lt;a href=&quot;../../../d3-selection#selection_exit&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.exit&lt;/a&gt; methods were undefined until you called &lt;em&gt;selection&lt;/em&gt;.data, resulting in a TypeError if you attempted to access them. In 4.0, now they simply return the empty selection if the selection has not been joined to data.</source>
          <target state="translated">3.xでは、&lt;a href=&quot;../../../d3-selection#selection_enter&quot;&gt;&lt;em&gt;選択&lt;/em&gt; .enter&lt;/a&gt;と&lt;a href=&quot;../../../d3-selection#selection_exit&quot;&gt;&lt;em&gt;選択&lt;/em&gt; .exitの&lt;/a&gt;あなたが呼ばれるまでの方法は、未定義た&lt;em&gt;選択&lt;/em&gt;あなたがそれらにアクセスしようとした場合にはTypeErrorが得られ、.DATAを。4.0では、選択がデータに結合されていない場合、単に空の選択を返すようになりました。</target>
        </trans-unit>
        <trans-unit id="751488403c75d9cef313eadff07a1721146f5a55" translate="yes" xml:space="preserve">
          <source>In 4.0, use &lt;a href=&quot;../../../d3-timer#timer_stop&quot;&gt;&lt;em&gt;timer&lt;/em&gt;.stop&lt;/a&gt; instead:</source>
          <target state="translated">4.0では、代わりに&lt;a href=&quot;../../../d3-timer#timer_stop&quot;&gt;&lt;em&gt;timer&lt;/em&gt; .stop&lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="c7595d0eb6be5ea741fd2ee8edd25e2f11e99bb3" translate="yes" xml:space="preserve">
          <source>In D3 3.x, the only way to stop a timer was for its callback to return true. For example, this timer stops after one second:</source>
          <target state="translated">D3 3.xでは、タイマーを停止する唯一の方法は、そのコールバックがtrueを返すことでした。例えば、このタイマーは1秒後に停止します。</target>
        </trans-unit>
        <trans-unit id="dde36c9002dbaf5d2506e254b09a7f49f0486be2" translate="yes" xml:space="preserve">
          <source>In addition to the ubiquitous and machine-friendly &lt;a href=&quot;#rgb&quot;&gt;RGB&lt;/a&gt; and &lt;a href=&quot;#hsl&quot;&gt;HSL&lt;/a&gt; color space, d3-color supports two color spaces that are designed for humans:</source>
          <target state="translated">ユビキタスでマシンに優しい&lt;a href=&quot;#rgb&quot;&gt;RGB&lt;/a&gt;および&lt;a href=&quot;#hsl&quot;&gt;HSL&lt;/a&gt;色空間に加えて、d3-colorは人間向けに設計された2つの色空間をサポートしています。</target>
        </trans-unit>
        <trans-unit id="e8a6d59fdff5e54124a496a1788c500f9b2e8483" translate="yes" xml:space="preserve">
          <source>In both cases, this method returns a new selection containing the appended elements. Each new element inherits the data of the current elements, if any, in the same manner as &lt;a href=&quot;#selection_select&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.select&lt;/a&gt;.</source>
          <target state="translated">どちらの場合も、このメソッドは追加された要素を含む新しい選択を返します。それぞれの新しい要素は、&lt;a href=&quot;#selection_select&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .select&lt;/a&gt;と同じ方法で現在の要素があれば、そのデータを継承します。</target>
        </trans-unit>
        <trans-unit id="1c1844cdd82cbf04f56684cdb2ad7662d8b3a9da" translate="yes" xml:space="preserve">
          <source>In effect, &lt;em&gt;row&lt;/em&gt; is similar to applying a &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/map&quot;&gt;map&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/filter&quot;&gt;filter&lt;/a&gt; operator to the returned rows.</source>
          <target state="translated">実際には、&lt;em&gt;行&lt;/em&gt;は、返された行に&lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/map&quot;&gt;マップ&lt;/a&gt;および&lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/filter&quot;&gt;フィルター&lt;/a&gt;演算子を適用するのと同じです。</target>
        </trans-unit>
        <trans-unit id="729c4c8f588cb1b6825b261ee1760deee01ac39c" translate="yes" xml:space="preserve">
          <source>In lieu of a &lt;em&gt;count&lt;/em&gt;, a &lt;a href=&quot;d3-time#intervals&quot;&gt;time &lt;em&gt;interval&lt;/em&gt;&lt;/a&gt; may be explicitly specified. To prune the generated ticks for a given time &lt;em&gt;interval&lt;/em&gt;, use &lt;a href=&quot;d3-time#interval_every&quot;&gt;&lt;em&gt;interval&lt;/em&gt;.every&lt;/a&gt;. For example, to generate ticks at 15-&lt;a href=&quot;d3-time#minute&quot;&gt;minute&lt;/a&gt; intervals:</source>
          <target state="translated">代わりに&lt;em&gt;、カウント&lt;/em&gt;、&lt;a href=&quot;d3-time#intervals&quot;&gt;時間&lt;em&gt;間隔を&lt;/em&gt;&lt;/a&gt;明示的に指定することができます。特定の時間&lt;em&gt;間隔&lt;/em&gt;で生成されたティックを&lt;a href=&quot;d3-time#interval_every&quot;&gt;削除&lt;/a&gt;するには、&lt;em&gt;interval&lt;/em&gt; .everyを使用し&lt;em&gt;ます&lt;/em&gt;。たとえば、15 &lt;a href=&quot;d3-time#minute&quot;&gt;分&lt;/a&gt;間隔でティックを生成するには：</target>
        </trans-unit>
        <trans-unit id="0596a78a5025789981fff288e0ff12a77189a1de" translate="yes" xml:space="preserve">
          <source>In the context of an &lt;a href=&quot;d3-selection#selection_on&quot;&gt;event listener&lt;/a&gt;, the &lt;em&gt;node&lt;/em&gt; is typically the element that received the input event (which should be equal to &lt;a href=&quot;#zoom-events&quot;&gt;&lt;em&gt;event&lt;/em&gt;.transform&lt;/a&gt;), &lt;em&gt;this&lt;/em&gt;:</source>
          <target state="translated">文脈では&lt;a href=&quot;d3-selection#selection_on&quot;&gt;、イベントリスナー&lt;/a&gt;、&lt;em&gt;ノードが&lt;/em&gt;（に等しくなければならない入力イベント受信素子典型的には&lt;a href=&quot;#zoom-events&quot;&gt;&lt;em&gt;、イベント&lt;/em&gt; .transformは&lt;/a&gt;）、&lt;em&gt;この&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="3fefc999dcd475064b15c76bf7b771086f89d568" translate="yes" xml:space="preserve">
          <source>In the domain of information visualization, physical simulations are useful for studying &lt;a href=&quot;http://bl.ocks.org/mbostock/ad70335eeef6d167bc36fd3c04378048&quot;&gt;networks&lt;/a&gt; and &lt;a href=&quot;http://bl.ocks.org/mbostock/95aa92e2f4e8345aaa55a4a94d41ce37&quot;&gt;hierarchies&lt;/a&gt;!</source>
          <target state="translated">情報の視覚化の領域では、物理シミュレーションは&lt;a href=&quot;http://bl.ocks.org/mbostock/ad70335eeef6d167bc36fd3c04378048&quot;&gt;ネットワーク&lt;/a&gt;と&lt;a href=&quot;http://bl.ocks.org/mbostock/95aa92e2f4e8345aaa55a4a94d41ce37&quot;&gt;階層の&lt;/a&gt;研究に役立ちます。</target>
        </trans-unit>
        <trans-unit id="677f6c0e37c5ac06f28e8b724ca9be12958d4de4" translate="yes" xml:space="preserve">
          <source>In this example the &lt;em&gt;data&lt;/em&gt; function is the identity function: for each table row, it returns the corresponding row from the data matrix.</source>
          <target state="translated">この例では、&lt;em&gt;データ&lt;/em&gt;関数は恒等関数です。テーブルの行ごとに、データ行列から対応する行を返します。</target>
        </trans-unit>
        <trans-unit id="bc11cd3daaf51a545e7edab7a088db22caf6b0fc" translate="yes" xml:space="preserve">
          <source>In this system, weeks start on a Monday, and are numbered from 01, for the first week, up to 52 or 53, for the last week. Week 1 is the first week where four or more days fall within the new year (or, synonymously, week 01 is: the first week of the year that contains a Thursday; or, the week that has 4 January in it).</source>
          <target state="translated">このシステムでは、週は月曜日から始まり、最初の週は01から、最後の週は52または53までの番号が付けられます。第1週は、4日以上の日が新年内に入る最初の週です(または、同義では、第01週は:木曜日が含まれている年の最初の週、または、それに1月4日が含まれている週)。</target>
        </trans-unit>
        <trans-unit id="9f4ad53d9823082158d5899c048202ab3606dc58" translate="yes" xml:space="preserve">
          <source>In v5, using promises:</source>
          <target state="translated">v5では、プロミスを使って</target>
        </trans-unit>
        <trans-unit id="69a836337eface110371a0be4a9a8b164d476932" translate="yes" xml:space="preserve">
          <source>Increments the current &lt;a href=&quot;#simulation_alpha&quot;&gt;&lt;em&gt;alpha&lt;/em&gt;&lt;/a&gt; by (&lt;a href=&quot;#simulation_alphaTarget&quot;&gt;&lt;em&gt;alphaTarget&lt;/em&gt;&lt;/a&gt; - &lt;em&gt;alpha&lt;/em&gt;) &amp;times; &lt;a href=&quot;#simulation_alphaDecay&quot;&gt;&lt;em&gt;alphaDecay&lt;/em&gt;&lt;/a&gt;; then invokes each registered &lt;a href=&quot;#simulation_force&quot;&gt;force&lt;/a&gt;, passing the new &lt;em&gt;alpha&lt;/em&gt;; then decrements each &lt;a href=&quot;#simulation_nodes&quot;&gt;node&lt;/a&gt;&amp;rsquo;s velocity by &lt;em&gt;velocity&lt;/em&gt; &amp;times; &lt;a href=&quot;#simulation_velocityDecay&quot;&gt;&lt;em&gt;velocityDecay&lt;/em&gt;&lt;/a&gt;; lastly increments each node&amp;rsquo;s position by &lt;em&gt;velocity&lt;/em&gt;.</source>
          <target state="translated">増分電流&lt;a href=&quot;#simulation_alpha&quot;&gt;&lt;em&gt;アルファ&lt;/em&gt;&lt;/a&gt;によって（&lt;a href=&quot;#simulation_alphaTarget&quot;&gt;&lt;em&gt;alphaTarget&lt;/em&gt;&lt;/a&gt; - &lt;em&gt;アルファ&lt;/em&gt;）&amp;times; &lt;a href=&quot;#simulation_alphaDecay&quot;&gt;&lt;em&gt;alphaDecay&lt;/em&gt;&lt;/a&gt;。次に、登録されている各&lt;a href=&quot;#simulation_force&quot;&gt;フォースを&lt;/a&gt;呼び出し、新しい&lt;em&gt;アルファ&lt;/em&gt;を渡します。次に、各&lt;a href=&quot;#simulation_nodes&quot;&gt;ノード&lt;/a&gt;の速度を&lt;em&gt;velocity&lt;/em&gt; &amp;times; &lt;a href=&quot;#simulation_velocityDecay&quot;&gt;&lt;em&gt;velocityDecayで&lt;/em&gt;&lt;/a&gt;デクリメントします。最後に、各ノードの位置を&lt;em&gt;速度だけ&lt;/em&gt;増分します。</target>
        </trans-unit>
        <trans-unit id="3348f60c0b48ea493512321d7afadc0aa7d3b16d" translate="yes" xml:space="preserve">
          <source>Indicates a new point in the current line segment with the given &lt;em&gt;x&lt;/em&gt;- and &lt;em&gt;y&lt;/em&gt;-values.</source>
          <target state="translated">指定された&lt;em&gt;x&lt;/em&gt;値と&lt;em&gt;y&lt;/em&gt;値を持つ現在のラインセグメントの新しいポイントを示します。</target>
        </trans-unit>
        <trans-unit id="e16334db5bf860db23343e9f0e1adb95b5a09caa" translate="yes" xml:space="preserve">
          <source>Indicates a point with the specified coordinates &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; (and optionally &lt;em&gt;z&lt;/em&gt;). The coordinate system is unspecified and implementation-dependent; for example, &lt;a href=&quot;d3-geo-projection&quot;&gt;projection streams&lt;/a&gt; require spherical coordinates in degrees as input. Outside the context of a polygon or line, a point indicates a point geometry object (&lt;a href=&quot;http://www.geojson.org/geojson-spec.html#point&quot;&gt;Point&lt;/a&gt; or &lt;a href=&quot;http://www.geojson.org/geojson-spec.html#multipoint&quot;&gt;MultiPoint&lt;/a&gt;). Within a line or polygon ring, the point indicates a control point.</source>
          <target state="translated">指定された座標&lt;em&gt;x&lt;/em&gt;および&lt;em&gt;y&lt;/em&gt;（およびオプションで&lt;em&gt;z&lt;/em&gt;）を持つポイントを示します。座標系は指定されておらず、実装に依存しています。たとえば、&lt;a href=&quot;d3-geo-projection&quot;&gt;投影ストリームに&lt;/a&gt;は、入力として球面座標が度単位で必要です。ポリゴンまたはラインのコンテキストの外では、ポイントはポイントジオメトリオブジェクト（&lt;a href=&quot;http://www.geojson.org/geojson-spec.html#point&quot;&gt;Point&lt;/a&gt;または&lt;a href=&quot;http://www.geojson.org/geojson-spec.html#multipoint&quot;&gt;MultiPoint&lt;/a&gt;）を示します。ラインまたはポリゴンリング内のポイントは、コントロールポイントを示します。</target>
        </trans-unit>
        <trans-unit id="1f0d5d1b61d0c14edacaf61e239f8ffd73b03a61" translate="yes" xml:space="preserve">
          <source>Indicates the end of a line or ring. Within a polygon, indicates the end of a ring. Unlike GeoJSON, the redundant closing coordinate of a ring is &lt;em&gt;not&lt;/em&gt; indicated via &lt;a href=&quot;#point&quot;&gt;point&lt;/a&gt;, and instead is implied via lineEnd within a polygon. Thus, the given polygon input:</source>
          <target state="translated">回線またはリングの終わりを示します。ポリゴン内で、リングの終わりを示します。GeoJSONとは異なり、リングの冗長な終了座標は&lt;a href=&quot;#point&quot;&gt;point&lt;/a&gt;を介して示されるのでは&lt;em&gt;なく&lt;/em&gt;、ポリゴン内のlineEndを介して暗示されます。したがって、指定されたポリゴン入力：</target>
        </trans-unit>
        <trans-unit id="7c184c47f73da072f30516e0c04362b367ba2678" translate="yes" xml:space="preserve">
          <source>Indicates the end of a polygon.</source>
          <target state="translated">多角形の終わりを示します。</target>
        </trans-unit>
        <trans-unit id="3a42982e1d73bafb5f1f05271158e36bb85294a4" translate="yes" xml:space="preserve">
          <source>Indicates the end of the current area segment.</source>
          <target state="translated">現在のエリアセグメントの終了を示します。</target>
        </trans-unit>
        <trans-unit id="91470173dd05c4f1502fa45479f6a254ab0d6e08" translate="yes" xml:space="preserve">
          <source>Indicates the end of the current line segment.</source>
          <target state="translated">現在のラインセグメントの終わりを示します。</target>
        </trans-unit>
        <trans-unit id="c5e38d12c5be316db6d1f9ddc67f09952d9f2232" translate="yes" xml:space="preserve">
          <source>Indicates the sphere (the globe; the unit sphere centered at ⟨0,0,0⟩).</source>
          <target state="translated">球体(地球儀;⟨0,0,0⟩を中心とした単位球体)を示す。</target>
        </trans-unit>
        <trans-unit id="877955a37ae5d05fefb5441393c5ea75d3aaa442" translate="yes" xml:space="preserve">
          <source>Indicates the start of a line or ring. Within a polygon, indicates the start of a ring. The first ring of a polygon is the exterior ring, and is typically clockwise. Any subsequent rings indicate holes in the polygon, and are typically counterclockwise.</source>
          <target state="translated">線またはリングの開始点を示します。多角形内では、リングの開始を示す。多角形の最初のリングは外側のリングであり、通常は時計回りである。それ以降のリングは多角形の穴を示し、通常は反時計回りである。</target>
        </trans-unit>
        <trans-unit id="fc1cb12f887bc43eb45322516ab03d1008adbc32" translate="yes" xml:space="preserve">
          <source>Indicates the start of a new area segment. Each area segment consists of exactly two &lt;a href=&quot;#curve_lineStart&quot;&gt;line segments&lt;/a&gt;: the topline, followed by the baseline, with the baseline points in reverse order.</source>
          <target state="translated">新しいエリアセグメントの開始を示します。各エリアセグメントは、正確に2つの&lt;a href=&quot;#curve_lineStart&quot;&gt;ライン&lt;/a&gt;セグメントで構成されています。</target>
        </trans-unit>
        <trans-unit id="42d8ce976aee8970e8ae1ea0c7b478dae188511e" translate="yes" xml:space="preserve">
          <source>Indicates the start of a new line segment. Zero or more &lt;a href=&quot;#curve_point&quot;&gt;points&lt;/a&gt; will follow.</source>
          <target state="translated">新しいラインセグメントの開始を示します。ゼロ以上の&lt;a href=&quot;#curve_point&quot;&gt;ポイント&lt;/a&gt;が続きます。</target>
        </trans-unit>
        <trans-unit id="a40dcc33abb589cdad1d84c91706ad4889f250af" translate="yes" xml:space="preserve">
          <source>Indicates the start of a polygon. The first line of a polygon indicates the exterior ring, and any subsequent lines indicate interior holes.</source>
          <target state="translated">ポリゴンの開始位置を示す。ポリゴンの最初の行は外側のリングを示し、それ以降の行は内側の穴を示す。</target>
        </trans-unit>
        <trans-unit id="40e6bb8c36120b372da989d9edf6e2619b2cf41a" translate="yes" xml:space="preserve">
          <source>Inserts clones of the selected elements immediately following the selected elements and returns a selection of the newly added clones. If &lt;em&gt;deep&lt;/em&gt; is truthy, the descendant nodes of the selected elements will be cloned as well. Otherwise, only the elements themselves will be cloned. Equivalent to:</source>
          <target state="translated">選択した要素の直後に選択した要素のクローンを挿入し、新しく追加したクローンの選択を返します。&lt;em&gt;deep&lt;/em&gt;がtrueの場合、選択した要素の子孫ノードも複製されます。それ以外の場合は、要素自体のみが複製されます。に相当：</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">Installing</target>
        </trans-unit>
        <trans-unit id="c4f66fbc9fdee56828b560d18eb46b5d80426e74" translate="yes" xml:space="preserve">
          <source>Internal nodes of the quadtree are represented as four-element arrays in left-to-right, top-to-bottom order:</source>
          <target state="translated">クワッドツリーの内部ノードは,左から右,上から下の順に4つの要素の配列で表されます.</target>
        </trans-unit>
        <trans-unit id="83c2338cadbca83b618a38905286ee5e57520b4f" translate="yes" xml:space="preserve">
          <source>Internally, a piecewise scale performs a &lt;a href=&quot;d3-array#bisect&quot;&gt;binary search&lt;/a&gt; for the range interpolator corresponding to the given domain value. Thus, the domain must be in ascending or descending order. If the domain and range have different lengths &lt;em&gt;N&lt;/em&gt; and &lt;em&gt;M&lt;/em&gt;, only the first &lt;em&gt;min(N,M)&lt;/em&gt; elements in each are observed.</source>
          <target state="translated">内部的には、区分的スケールは、指定されたドメイン値に対応する範囲補間器の&lt;a href=&quot;d3-array#bisect&quot;&gt;バイナリ検索&lt;/a&gt;を実行します。したがって、ドメインは昇順または降順である必要があります。ドメインと範囲の長さが&lt;em&gt;N&lt;/em&gt;と&lt;em&gt;M&lt;/em&gt;で異なる場合、それぞれの最初の&lt;em&gt;min（N、M）&lt;/em&gt;要素のみが観察されます。</target>
        </trans-unit>
        <trans-unit id="c476043913c097e91f23539dc6c1dd6e09f683c5" translate="yes" xml:space="preserve">
          <source>Internally, an element&amp;rsquo;s transform is stored as &lt;em&gt;element&lt;/em&gt;.__zoom; however, you should use this method rather than accessing it directly. If the given &lt;em&gt;node&lt;/em&gt; has no defined transform, returns the &lt;a href=&quot;#zoomIdentity&quot;&gt;identity transformation&lt;/a&gt;. The returned transform represents a two-dimensional &lt;a href=&quot;https://en.wikipedia.org/wiki/Transformation_matrix#Affine_transformations&quot;&gt;transformation matrix&lt;/a&gt; of the form:</source>
          <target state="translated">内部的には、要素の変換は&lt;em&gt;要素&lt;/em&gt; .__ zoom として保存されます。ただし、直接アクセスするのではなく、このメソッドを使用する必要があります。指定された&lt;em&gt;ノードに&lt;/em&gt;変換が定義されていない場合は、&lt;a href=&quot;#zoomIdentity&quot;&gt;恒等変換を&lt;/a&gt;返します。返される変換は、次の形式の2次元&lt;a href=&quot;https://en.wikipedia.org/wiki/Transformation_matrix#Affine_transformations&quot;&gt;変換行列&lt;/a&gt;を表します。</target>
        </trans-unit>
        <trans-unit id="e614f2d9e2e590f36d444144efa52772d94e29e4" translate="yes" xml:space="preserve">
          <source>Internally, the brush uses &lt;a href=&quot;d3-selection#selection_on&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.on&lt;/a&gt; to bind the necessary event listeners for dragging. The listeners use the name &lt;code&gt;.brush&lt;/code&gt;, so you can subsequently unbind the brush event listeners as follows:</source>
          <target state="translated">Internally, the brush uses &lt;a href=&quot;d3-selection#selection_on&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.on&lt;/a&gt; to bind the necessary event listeners for dragging. The listeners use the name &lt;code&gt;.brush&lt;/code&gt; , so you can subsequently unbind the brush event listeners as follows:</target>
        </trans-unit>
        <trans-unit id="547c6a9e5c9af2fac76e4cfbafbfb8cc4baffdfa" translate="yes" xml:space="preserve">
          <source>Internally, the drag behavior uses &lt;a href=&quot;d3-selection#selection_on&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.on&lt;/a&gt; to bind the necessary event listeners for dragging. The listeners use the name &lt;code&gt;.drag&lt;/code&gt;, so you can subsequently unbind the drag behavior as follows:</source>
          <target state="translated">Internally, the drag behavior uses &lt;a href=&quot;d3-selection#selection_on&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.on&lt;/a&gt; to bind the necessary event listeners for dragging. The listeners use the name &lt;code&gt;.drag&lt;/code&gt; , so you can subsequently unbind the drag behavior as follows:</target>
        </trans-unit>
        <trans-unit id="8822f4fb8d2d43d5544c6d9e07a3a95d79a83569" translate="yes" xml:space="preserve">
          <source>Internally, the zoom behavior uses &lt;a href=&quot;d3-selection#selection_on&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.on&lt;/a&gt; to bind the necessary event listeners for zooming. The listeners use the name &lt;code&gt;.zoom&lt;/code&gt;, so you can subsequently unbind the zoom behavior as follows:</source>
          <target state="translated">Internally, the zoom behavior uses &lt;a href=&quot;d3-selection#selection_on&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.on&lt;/a&gt; to bind the necessary event listeners for zooming. The listeners use the name &lt;code&gt;.zoom&lt;/code&gt; , so you can subsequently unbind the zoom behavior as follows:</target>
        </trans-unit>
        <trans-unit id="653edb0bfdb6bd20dfe7affb5776bc7d271237c7" translate="yes" xml:space="preserve">
          <source>Internals</source>
          <target state="translated">Internals</target>
        </trans-unit>
        <trans-unit id="93a4539264087e705d6edd915d6e25bcfb1ce613" translate="yes" xml:space="preserve">
          <source>Interpolate</source>
          <target state="translated">Interpolate</target>
        </trans-unit>
        <trans-unit id="45f9b2c1ca45ee3d1b8fc44ba78d31f9e5cacfa1" translate="yes" xml:space="preserve">
          <source>Interpolate between points to produce a continuous shape.</source>
          <target state="translated">点間を補間して連続した形状にします。</target>
        </trans-unit>
        <trans-unit id="ef02141a25acfe2aeb7cca89f98ee683bb8d284c" translate="yes" xml:space="preserve">
          <source>Interpolate numbers, colors, strings, arrays, objects, whatever!</source>
          <target state="translated">数値、色、文字列、配列、オブジェクトなど、何でも補間しましょう!</target>
        </trans-unit>
        <trans-unit id="376bf557f5a9a82971032bac2b14d97d4a631789" translate="yes" xml:space="preserve">
          <source>Interpolators</source>
          <target state="translated">Interpolators</target>
        </trans-unit>
        <trans-unit id="41124b1306d7e23d310ff8e721df1f3aa2bad979" translate="yes" xml:space="preserve">
          <source>Interpolators (d3-interpolate)</source>
          <target state="translated">補間器 (d3-補間)</target>
        </trans-unit>
        <trans-unit id="dd7637d58f7fb42c6b7096fea95adfb60a351d2a" translate="yes" xml:space="preserve">
          <source>Interrupted Projections</source>
          <target state="translated">中断された投影</target>
        </trans-unit>
        <trans-unit id="4af1a92675c26e079284c79d308d827c2827ce60" translate="yes" xml:space="preserve">
          <source>Interrupting a transition on an element has no effect on any transitions on any descendant elements. For example, an &lt;a href=&quot;d3-axis&quot;&gt;axis transition&lt;/a&gt; consists of multiple independent, synchronized transitions on the descendants of the axis &lt;a href=&quot;https://www.w3.org/TR/SVG/struct.html#Groups&quot;&gt;G element&lt;/a&gt; (the tick lines, the tick labels, the domain path, &lt;em&gt;etc.&lt;/em&gt;). To interrupt the axis transition, you must therefore interrupt the descendants:</source>
          <target state="translated">要素の遷移を中断しても、子孫要素の遷移には影響しません。たとえば、&lt;a href=&quot;d3-axis&quot;&gt;軸遷移&lt;/a&gt;は、軸&lt;a href=&quot;https://www.w3.org/TR/SVG/struct.html#Groups&quot;&gt;G要素の&lt;/a&gt;子孫上の複数の独立した同期遷移（目盛り線、目盛りラベル、ドメインパス&lt;em&gt;など&lt;/em&gt;）で構成されます。したがって、軸の遷移を中断するには、子孫を中断する必要があります。</target>
        </trans-unit>
        <trans-unit id="40a9e2c6221bf500c2276a6d9a09928ebe1cf26d" translate="yes" xml:space="preserve">
          <source>Interrupts the active transition of the specified &lt;em&gt;name&lt;/em&gt; on the selected elements, and cancels any pending transitions with the specified &lt;em&gt;name&lt;/em&gt;, if any. If a name is not specified, null is used.</source>
          <target state="translated">割り込み指定のアクティブ遷移&lt;em&gt;名&lt;/em&gt;選択された要素に、指定し持つ保留中の遷移キャンセル&lt;em&gt;名を&lt;/em&gt;、もしあれば。名前が指定されていない場合は、nullが使用されます。</target>
        </trans-unit>
        <trans-unit id="4c5416f5ca5b47c78583147e62b0ef5139e48608" translate="yes" xml:space="preserve">
          <source>Interrupts the active transition of the specified &lt;em&gt;name&lt;/em&gt; on the specified &lt;em&gt;node&lt;/em&gt;, and cancels any pending transitions with the specified &lt;em&gt;name&lt;/em&gt;, if any. If a name is not specified, null is used. See also &lt;a href=&quot;#selection_interrupt&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.interrupt&lt;/a&gt;.</source>
          <target state="translated">割り込み指定のアクティブ遷移&lt;em&gt;名&lt;/em&gt;指定上の&lt;em&gt;ノード&lt;/em&gt;、及び指定と保留中の遷移キャンセル&lt;em&gt;名を&lt;/em&gt;、もしあれば。名前が指定されていない場合は、nullが使用されます。&lt;a href=&quot;#selection_interrupt&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .interrupt&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="99267cc8937fb84d59bd60cc8326f8d752393db1" translate="yes" xml:space="preserve">
          <source>Intervals</source>
          <target state="translated">Intervals</target>
        </trans-unit>
        <trans-unit id="708f933ebb9f6dcbd83dc7e3d86809ac48ccb8ff" translate="yes" xml:space="preserve">
          <source>Introduced by &lt;a href=&quot;http://www.cs.umd.edu/hcil/treemap-history/&quot;&gt;Ben Shneiderman&lt;/a&gt; in 1991, a &lt;strong&gt;treemap&lt;/strong&gt; recursively subdivides area into rectangles according to each node&amp;rsquo;s associated value. D3&amp;rsquo;s treemap implementation supports an extensible &lt;a href=&quot;#treemap_tile&quot;&gt;tiling method&lt;/a&gt;: the default &lt;a href=&quot;#treemapSquarify&quot;&gt;squarified&lt;/a&gt; method seeks to generate rectangles with a &lt;a href=&quot;https://en.wikipedia.org/wiki/Golden_ratio&quot;&gt;golden&lt;/a&gt; aspect ratio; this offers better readability and size estimation than &lt;a href=&quot;#treemapSliceDice&quot;&gt;slice-and-dice&lt;/a&gt;, which simply alternates between horizontal and vertical subdivision by depth.</source>
          <target state="translated">1991年に&lt;a href=&quot;http://www.cs.umd.edu/hcil/treemap-history/&quot;&gt;ベンシュナイダーマン&lt;/a&gt;によって導入された&lt;strong&gt;ツリーマップ&lt;/strong&gt;は、各ノードの関連付けられた値に従って、領域を再帰的に長方形に細分割します。 D3のツリーマップ実装は、拡張可能な&lt;a href=&quot;#treemap_tile&quot;&gt;タイリングメソッドを&lt;/a&gt;サポートします。デフォルトの&lt;a href=&quot;#treemapSquarify&quot;&gt;正方形化された&lt;/a&gt;メソッドは、&lt;a href=&quot;https://en.wikipedia.org/wiki/Golden_ratio&quot;&gt;黄金の&lt;/a&gt;アスペクト比の長方形を生成しようとします。これは、深度によって水平サブディビジョンと垂直サブディビジョンを単に&lt;a href=&quot;#treemapSliceDice&quot;&gt;切り替えるスライスアンドダイス&lt;/a&gt;よりも、読みやすさとサイズの見積もりが向上します。</target>
        </trans-unit>
        <trans-unit id="1097cd190c3b0438274dd244e85d383854e721e6" translate="yes" xml:space="preserve">
          <source>Invokes the specified &lt;em&gt;function&lt;/em&gt; exactly once, passing in this selection along with any optional &lt;em&gt;arguments&lt;/em&gt;. Returns this selection. This is equivalent to invoking the function by hand but facilitates method chaining. For example, to set several styles in a reusable function:</source>
          <target state="translated">指定された&lt;em&gt;関数を&lt;/em&gt; 1回だけ呼び出し、この選択をオプションの&lt;em&gt;引数&lt;/em&gt;とともに渡し&lt;em&gt;ます&lt;/em&gt;。この選択を返します。これは、関数を手動で呼び出すのと同じですが、メソッドチェーンを容易にします。たとえば、再利用可能な関数にいくつかのスタイルを設定するには：</target>
        </trans-unit>
        <trans-unit id="0e7101aa210bd7587370e63a1bf369fa939213a7" translate="yes" xml:space="preserve">
          <source>Invokes the specified &lt;em&gt;function&lt;/em&gt; exactly once, passing in this transition along with any optional &lt;em&gt;arguments&lt;/em&gt;. Returns this transition. This is equivalent to invoking the function by hand but facilitates method chaining. For example, to set several attributes in a reusable function:</source>
          <target state="translated">指定された&lt;em&gt;関数を&lt;/em&gt; 1回だけ呼び出し、この遷移をオプションの&lt;em&gt;引数&lt;/em&gt;とともに渡し&lt;em&gt;ます&lt;/em&gt;。この遷移を返します。これは、関数を手動で呼び出すのと同じですが、メソッドチェーンを容易にします。たとえば、再利用可能な関数にいくつかの属性を設定するには：</target>
        </trans-unit>
        <trans-unit id="065a04299f06094673d22e85432c6940726f12f8" translate="yes" xml:space="preserve">
          <source>Invokes the specified &lt;em&gt;function&lt;/em&gt; for &lt;em&gt;node&lt;/em&gt; and each descendant in &lt;a href=&quot;https://en.wikipedia.org/wiki/Breadth-first_search&quot;&gt;breadth-first order&lt;/a&gt;, such that a given &lt;em&gt;node&lt;/em&gt; is only visited if all nodes of lesser depth have already been visited, as well as all preceding nodes of the same depth. The specified function is passed the current &lt;em&gt;node&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;ノード&lt;/em&gt;および各子孫に指定された&lt;em&gt;関数&lt;/em&gt;を&lt;a href=&quot;https://en.wikipedia.org/wiki/Breadth-first_search&quot;&gt;幅優先順&lt;/a&gt;で呼び出します。これにより、指定された&lt;em&gt;ノード&lt;/em&gt;は、深さが浅いすべてのノード、および同じ深さの先行するすべてのノードが既に訪問されている場合にのみ訪問されます。指定された関数に現在の&lt;em&gt;ノード&lt;/em&gt;が渡され&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c60a53fe26f532623be2df3a2a87d1d477735325" translate="yes" xml:space="preserve">
          <source>Invokes the specified &lt;em&gt;function&lt;/em&gt; for &lt;em&gt;node&lt;/em&gt; and each descendant in &lt;a href=&quot;https://en.wikipedia.org/wiki/Tree_traversal#Post-order&quot;&gt;post-order traversal&lt;/a&gt;, such that a given &lt;em&gt;node&lt;/em&gt; is only visited after all of its descendants have already been visited. The specified function is passed the current &lt;em&gt;node&lt;/em&gt;.</source>
          <target state="translated">指定された呼び出し&lt;em&gt;機能を&lt;/em&gt;するために&lt;em&gt;ノード&lt;/em&gt;との各子孫&lt;a href=&quot;https://en.wikipedia.org/wiki/Tree_traversal#Post-order&quot;&gt;帰りがけ順&lt;/a&gt;与えられたような、&lt;em&gt;ノードが&lt;/em&gt;その子孫のすべてが既に訪問された後にのみ訪問しています。指定された関数に現在の&lt;em&gt;ノード&lt;/em&gt;が渡され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="5ea6c174085a94cdbb29f8784cbdc96219917dd0" translate="yes" xml:space="preserve">
          <source>Invokes the specified &lt;em&gt;function&lt;/em&gt; for &lt;em&gt;node&lt;/em&gt; and each descendant in &lt;a href=&quot;https://en.wikipedia.org/wiki/Tree_traversal#Pre-order&quot;&gt;pre-order traversal&lt;/a&gt;, such that a given &lt;em&gt;node&lt;/em&gt; is only visited after all of its ancestors have already been visited. The specified function is passed the current &lt;em&gt;node&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;ノード&lt;/em&gt;と各子孫に指定された&lt;em&gt;関数&lt;/em&gt;を&lt;a href=&quot;https://en.wikipedia.org/wiki/Tree_traversal#Pre-order&quot;&gt;pre-order traversal&lt;/a&gt;で呼び出します。これにより、指定された&lt;em&gt;ノード&lt;/em&gt;は、すべての祖先が既に訪問された後にのみ訪問されます。指定された関数に現在の&lt;em&gt;ノード&lt;/em&gt;が渡され&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="46bdf2e9a0e02abcdea02c95d8db74fc3c8a6674" translate="yes" xml:space="preserve">
          <source>Invokes the specified &lt;em&gt;function&lt;/em&gt; for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element (&lt;em&gt;nodes&lt;/em&gt;[&lt;em&gt;i&lt;/em&gt;]). This method can be used to invoke arbitrary code for each selected element, and is useful for creating a context to access parent and child data simultaneously, such as:</source>
          <target state="translated">現在のデータ（&lt;em&gt;d&lt;/em&gt;）、現在のインデックス（&lt;em&gt;i&lt;/em&gt;）、現在のグループ（&lt;em&gt;nodes&lt;/em&gt;）を渡された順に、選択された各要素に対して指定された&lt;em&gt;関数&lt;/em&gt;を呼び出し、&lt;em&gt;これ&lt;/em&gt;を現在のDOM要素（&lt;em&gt;nodes&lt;/em&gt; [ &lt;em&gt;i&lt;/em&gt; ]）として使用します。このメソッドを使用して、選択した要素ごとに任意のコードを呼び出すことができます。次のように、親と子のデータに同時にアクセスするためのコンテキストを作成する場合に便利です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="badb84f47f741915e8acc76c401fde58899eecd5" translate="yes" xml:space="preserve">
          <source>Invokes the specified &lt;em&gt;function&lt;/em&gt; for each selected element, passing in the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context of the current DOM element. This method can be used to invoke arbitrary code for each selected element, and is useful for creating a context to access parent and child data simultaneously. Equivalent to &lt;a href=&quot;d3-selection#selection_each&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.each&lt;/a&gt;.</source>
          <target state="translated">指定された呼び出し&lt;em&gt;関数を&lt;/em&gt;現在の基準を渡し、選択された各要素について &lt;code&gt;d&lt;/code&gt; 、インデックス &lt;code&gt;i&lt;/code&gt; がで、 &lt;code&gt;this&lt;/code&gt; 現在のDOM要素の文脈。このメソッドを使用して、選択した要素ごとに任意のコードを呼び出すことができ、親データと子データに同時にアクセスするコンテキストを作成するのに役立ちます。同等の&lt;a href=&quot;d3-selection#selection_each&quot;&gt;&lt;em&gt;選択&lt;/em&gt; .each&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f6a0e53bdde7694b67b00bd95590399361f8c9cd" translate="yes" xml:space="preserve">
          <source>Invokes the specified &lt;em&gt;listener&lt;/em&gt;, using the specified &lt;em&gt;that&lt;/em&gt;&lt;code&gt;this&lt;/code&gt; context and passing the specified &lt;em&gt;arguments&lt;/em&gt;, if any. During the invocation, &lt;a href=&quot;#event&quot;&gt;d3.event&lt;/a&gt; is set to the specified &lt;em&gt;event&lt;/em&gt;; after the listener returns (or throws an error), d3.event is restored to its previous value. In addition, sets &lt;em&gt;event&lt;/em&gt;.sourceEvent to the prior value of d3.event, allowing custom events to retain a reference to the originating native event. Returns the value returned by the &lt;em&gt;listener&lt;/em&gt;.</source>
          <target state="translated">指定され&lt;em&gt;た&lt;/em&gt; &lt;code&gt;this&lt;/code&gt; コンテキストを使用し、指定された&lt;em&gt;引数&lt;/em&gt;があればそれを渡して、指定された&lt;em&gt;リスナーを&lt;/em&gt;呼び出します。呼び出し中、&lt;a href=&quot;#event&quot;&gt;d3.event&lt;/a&gt;は指定された&lt;em&gt;イベントに&lt;/em&gt;設定されます。リスナーが戻った（またはエラーをスローした）後、d3.eventは以前の値に復元されます。さらに、&lt;em&gt;イベント&lt;/em&gt; .sourceEventを以前の値d3.eventに設定し、カスタムイベントが元のネイティブイベントへの参照を保持できるようにします。&lt;em&gt;リスナーから&lt;/em&gt;返された値を返します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c04fba48fa9a844320c6d6e12eadc0f1287c4c97" translate="yes" xml:space="preserve">
          <source>Is equivalent to this in 4.0:</source>
          <target state="translated">4.0ではこれに相当します。</target>
        </trans-unit>
        <trans-unit id="fc5e351d7926b8909c420cc2806fd47bf2741f92" translate="yes" xml:space="preserve">
          <source>Is equivalent to this:</source>
          <target state="translated">これと同等です。</target>
        </trans-unit>
        <trans-unit id="b0eda3fd7457c0fb4308b75d0bf6df3d4719aced" translate="yes" xml:space="preserve">
          <source>Is equivalent to:</source>
          <target state="translated">と同等です。</target>
        </trans-unit>
        <trans-unit id="5dd95217d656375fe6bfa28adaafc2b8ec097110" translate="yes" xml:space="preserve">
          <source>Issues this request using the specified &lt;em&gt;method&lt;/em&gt; (such as &lt;code&gt;GET&lt;/code&gt; or &lt;code&gt;POST&lt;/code&gt;), optionally posting the specified &lt;em&gt;data&lt;/em&gt; in the request body, and returns this request instance. If a &lt;em&gt;callback&lt;/em&gt; is specified, the callback will be invoked asynchronously when the request succeeds or fails. The callback is invoked with two arguments: the error, if any, and the &lt;a href=&quot;#request_response&quot;&gt;response value&lt;/a&gt;. The response value is undefined if an error occurs. This is equivalent to:</source>
          <target state="translated">指定された&lt;em&gt;メソッド&lt;/em&gt;（ &lt;code&gt;GET&lt;/code&gt; や &lt;code&gt;POST&lt;/code&gt; など）を使用してこのリクエストを発行し、オプションで指定された&lt;em&gt;データ&lt;/em&gt;をリクエスト本文にポストして、このリクエストインスタンスを返します。&lt;em&gt;コールバック&lt;/em&gt;が指定されている場合、&lt;em&gt;コールバック&lt;/em&gt;は、リクエストが成功または失敗したときに非同期に呼び出されます。コールバックは2つの引数で呼び出されます。エラーがある場合はそれと&lt;a href=&quot;#request_response&quot;&gt;応答値&lt;/a&gt;です。エラーが発生した場合の応答値は未定義です。これは次と同等です。</target>
        </trans-unit>
        <trans-unit id="c939e40d7302df0baaf51d4918ae8ed04ffcdee2" translate="yes" xml:space="preserve">
          <source>Jacques Bertin&amp;rsquo;s 1953 projection.</source>
          <target state="translated">ジャックベルタンの1953年の予測。</target>
        </trans-unit>
        <trans-unit id="406d46ccd83c0622c386f18286db3e67b0cc58e1" translate="yes" xml:space="preserve">
          <source>JavaScript includes &lt;strong&gt;mutation methods&lt;/strong&gt; that modify the array:</source>
          <target state="translated">JavaScriptには、配列を変更する&lt;strong&gt;ミューテーションメソッド&lt;/strong&gt;が含まれています。</target>
        </trans-unit>
        <trans-unit id="c59bfad42935c6840951768499e86a7b173cf7dd" translate="yes" xml:space="preserve">
          <source>John Muir&amp;rsquo;s Times projection.</source>
          <target state="translated">ジョン・ミュアのタイムズ図法。</target>
        </trans-unit>
        <trans-unit id="9bc5bdd762a161ee1e2c145ce6923cf9852320e8" translate="yes" xml:space="preserve">
          <source>Joining Data</source>
          <target state="translated">データの結合</target>
        </trans-unit>
        <trans-unit id="729f8de458bfb42dc67405c39b7ff21c24ec2025" translate="yes" xml:space="preserve">
          <source>Joins the specified array of &lt;em&gt;data&lt;/em&gt; with the selected elements, returning a new selection that represents the &lt;em&gt;update&lt;/em&gt; selection: the elements successfully bound to data. Also defines the &lt;a href=&quot;#selection_enter&quot;&gt;enter&lt;/a&gt; and &lt;a href=&quot;#selection_exit&quot;&gt;exit&lt;/a&gt; selections on the returned selection, which can be used to add or remove elements to correspond to the new data. The specified &lt;em&gt;data&lt;/em&gt; is an array of arbitrary values (&lt;em&gt;e.g.&lt;/em&gt;, numbers or objects), or a function that returns an array of values for each group. When data is assigned to an element, it is stored in the property &lt;code&gt;__data__&lt;/code&gt;, thus making the data &amp;ldquo;sticky&amp;rdquo; and available on re-selection.</source>
          <target state="translated">指定した&lt;em&gt;データの&lt;/em&gt;配列を選択した要素と結合し、&lt;em&gt;更新&lt;/em&gt;選択を表す新しい選択を返します。要素はデータに正常にバインドされました。また、返された選択の&lt;a href=&quot;#selection_enter&quot;&gt;開始&lt;/a&gt;および&lt;a href=&quot;#selection_exit&quot;&gt;終了&lt;/a&gt;選択を定義します。これを使用して、新しいデータに対応する要素を追加または削除できます。指定された&lt;em&gt;データ&lt;/em&gt;は、任意の値の配列（&lt;em&gt;たとえば&lt;/em&gt;、数値またはオブジェクト）、または各グループの値の配列を返す関数です。データが要素に割り当てられると、そのデータはプロパティ &lt;code&gt;__data__&lt;/code&gt; に格納されるため、データは「固定」され、再選択時に利用できます。</target>
        </trans-unit>
        <trans-unit id="a7ee38bb7be4fc44198cb2685d9601dcf2b9f569" translate="yes" xml:space="preserve">
          <source>K</source>
          <target state="translated">K</target>
        </trans-unit>
        <trans-unit id="b3f85c8b7615ecabeedebe8da52fec09b1a9f7aa" translate="yes" xml:space="preserve">
          <source>Keys are coerced to strings.</source>
          <target state="translated">鍵は弦に強制されている。</target>
        </trans-unit>
        <trans-unit id="6c69f2518e4b9abe16c87aff616822ba9dc398c8" translate="yes" xml:space="preserve">
          <source>Lastly, 4.0 overhauls the stack layout API, replacing d3.layout.stack with &lt;a href=&quot;../../../d3-shape#stacks&quot;&gt;d3.stack&lt;/a&gt;. The stack generator no longer needs an &lt;em&gt;x&lt;/em&gt;-accessor. In addition, the API has been simplified: the &lt;em&gt;stack&lt;/em&gt; generator now accepts tabular input, such as this array of objects:</source>
          <target state="translated">最後に、4.0はd3.layout.stackを&lt;a href=&quot;../../../d3-shape#stacks&quot;&gt;d3.stack&lt;/a&gt;に置き換えて、スタックレイアウトAPIをオーバーホールします。スタックジェネレータには、&lt;em&gt;x&lt;/em&gt;アクセサは必要ありません。さらに、APIが簡素化されました。&lt;em&gt;スタック&lt;/em&gt;ジェネレーターは、次のオブジェクト配列などの表形式の入力を受け入れるようになりました。</target>
        </trans-unit>
        <trans-unit id="e2cbc576f6a11697f35d0865a0718c7afeefdd3c" translate="yes" xml:space="preserve">
          <source>Lastly, D3&amp;rsquo;s &lt;a href=&quot;https://github.com/d3/d3/blob/master/package.json&quot;&gt;package.json&lt;/a&gt; no longer pins exact versions of the dependent D3 modules. This fixes an issue with &lt;a href=&quot;https://github.com/d3/d3/issues/3256&quot;&gt;duplicate installs&lt;/a&gt; of D3 modules.</source>
          <target state="translated">最後に、D3の&lt;a href=&quot;https://github.com/d3/d3/blob/master/package.json&quot;&gt;package.json&lt;/a&gt;は依存するD3モジュールの正確なバージョンをピン留めしなくなりました。これにより、D3モジュールの&lt;a href=&quot;https://github.com/d3/d3/issues/3256&quot;&gt;重複インストール&lt;/a&gt;に関する問題が修正されます。</target>
        </trans-unit>
        <trans-unit id="cbb3a79513898416677a58964984047ac87795eb" translate="yes" xml:space="preserve">
          <source>Layout algorithms for visualizing hierarchical data.</source>
          <target state="translated">階層データを可視化するためのレイアウトアルゴリズム。</target>
        </trans-unit>
        <trans-unit id="4ac1a9ebaa3d0776c90850a45b40459aa5eba7c2" translate="yes" xml:space="preserve">
          <source>Lays out the specified &lt;em&gt;root&lt;/em&gt;&lt;a href=&quot;#hierarchy&quot;&gt;hierarchy&lt;/a&gt;, assigning the following properties on &lt;em&gt;root&lt;/em&gt; and its descendants:</source>
          <target state="translated">指定した&lt;em&gt;ルート&lt;/em&gt;&lt;a href=&quot;#hierarchy&quot;&gt;階層を&lt;/a&gt;レイアウトし、&lt;em&gt;ルート&lt;/em&gt;とその子孫に次のプロパティを割り当てます。</target>
        </trans-unit>
        <trans-unit id="2ca7e4a52e022b996cbd76b75fbfb06c157efda5" translate="yes" xml:space="preserve">
          <source>Leaf nodes are represented as objects with the following properties:</source>
          <target state="translated">リーフノードは、以下のプロパティを持つオブジェクトとして表現されます。</target>
        </trans-unit>
        <trans-unit id="dbfdaca5a6fa711654e5ef3f0ae1d6f8cf539f2e" translate="yes" xml:space="preserve">
          <source>Lee&amp;rsquo;s tetrahedral conformal projection.</source>
          <target state="translated">リーの四面体正角図法。</target>
        </trans-unit>
        <trans-unit id="c1b38368fd8364acd89b2027b6584a28ed0f0569" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try converting it to HSL:</source>
          <target state="translated">HSLに変換してみましょう。</target>
        </trans-unit>
        <trans-unit id="cc5b2a062f05dd148b4ef24c76639416ebcc59f3" translate="yes" xml:space="preserve">
          <source>Licensed under the BSD License.</source>
          <target state="translated">BSDライセンスの下でライセンスされています。</target>
        </trans-unit>
        <trans-unit id="08704a2562c8498eb7541637b2cacef4b4bb2b1d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#continuous_nice&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.nice&lt;/a&gt;, except extends the domain to integer powers of &lt;a href=&quot;#log_base&quot;&gt;base&lt;/a&gt;. For example, for a domain of [0.201479&amp;hellip;, 0.996679&amp;hellip;], and base 10, the nice domain is [0.1, 1]. If the domain has more than two values, nicing the domain only affects the first and last value.</source>
          <target state="translated">&lt;a href=&quot;#continuous_nice&quot;&gt;&lt;em&gt;連続&lt;/em&gt; .nice&lt;/a&gt;と同様ですが、ドメインを&lt;a href=&quot;#log_base&quot;&gt;baseの&lt;/a&gt;整数乗に拡張します。たとえば、[0.201479&amp;hellip;、0.996679&amp;hellip;]、base 10のドメインの場合、適切なドメインは[0.1、1]です。ドメインに3つ以上の値がある場合、ドメインのnicは最初と最後の値にのみ影響します。</target>
        </trans-unit>
        <trans-unit id="13922ccb600f02f7e7abda3f45fe061fca8f42fe" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#continuous_tickFormat&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.tickFormat&lt;/a&gt;, but customized for a log scale. The specified &lt;em&gt;count&lt;/em&gt; typically has the same value as the count that is used to generate the &lt;a href=&quot;#continuous_ticks&quot;&gt;tick values&lt;/a&gt;. If there are too many ticks, the formatter may return the empty string for some of the tick labels; however, note that the ticks are still shown. To disable filtering, specify a &lt;em&gt;count&lt;/em&gt; of Infinity. When specifying a count, you may also provide a format &lt;em&gt;specifier&lt;/em&gt; or format function. For example, to get a tick formatter that will display 20 ticks of a currency, say &lt;code&gt;log.tickFormat(20, &quot;$,f&quot;)&lt;/code&gt;. If the specifier does not have a defined precision, the precision will be set automatically by the scale, returning the appropriate format. This provides a convenient way of specifying a format whose precision will be automatically set by the scale.</source>
          <target state="translated">&lt;a href=&quot;#continuous_tickFormat&quot;&gt;&lt;em&gt;Continuous&lt;/em&gt; .tickFormat&lt;/a&gt;と似ていますが、対数スケールに合わせてカスタマイズされています。指定された&lt;em&gt;カウント&lt;/em&gt;は通常、&lt;a href=&quot;#continuous_ticks&quot;&gt;ティック値の&lt;/a&gt;生成に使用されるカウントと同じ値を持ちます。ティックが多すぎる場合、フォーマッタは一部のティックラベルに空の文字列を返すことがあります。ただし、目盛りはまだ表示されていることに注意してください。フィルタリングを無効にするには、無限の&lt;em&gt;数&lt;/em&gt;を指定します。カウントを指定する場合、フォーマット&lt;em&gt;指定子&lt;/em&gt;またはフォーマット関数を&lt;em&gt;指定&lt;/em&gt;することもできます。たとえば、20ティックの通貨を表示するティックフォーマッタを取得するには、 &lt;code&gt;log.tickFormat(20, &quot;$,f&quot;)&lt;/code&gt; 。指定子に精度が定義されていない場合、精度はスケールによって自動的に設定され、適切な形式を返します。これは、スケールによって精度が自動的に設定されるフォーマットを指定する便利な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="677161fe15bbaf71c8a81786adf5db850159c68f" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#continuous_ticks&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.ticks&lt;/a&gt;, but customized for a log scale. If the &lt;a href=&quot;#log_base&quot;&gt;base&lt;/a&gt; is an integer, the returned ticks are uniformly spaced within each integer power of base; otherwise, one tick per power of base is returned. The returned ticks are guaranteed to be within the extent of the domain. If the orders of magnitude in the &lt;a href=&quot;#log_domain&quot;&gt;domain&lt;/a&gt; is greater than &lt;em&gt;count&lt;/em&gt;, then at most one tick per power is returned. Otherwise, the tick values are unfiltered, but note that you can use &lt;a href=&quot;#log_tickFormat&quot;&gt;&lt;em&gt;log&lt;/em&gt;.tickFormat&lt;/a&gt; to filter the display of tick labels. If &lt;em&gt;count&lt;/em&gt; is not specified, it defaults to 10.</source>
          <target state="translated">&lt;a href=&quot;#continuous_ticks&quot;&gt;&lt;em&gt;連続&lt;/em&gt; .ticks&lt;/a&gt;と同様ですが、対数スケールに合わせてカスタマイズされています。場合&lt;a href=&quot;#log_base&quot;&gt;塩基は&lt;/a&gt;整数であり、返されるダニが均一ベースの各整数乗内離間されています。それ以外の場合、ベースのパワーごとに1ティックが返されます。返されるティックは、ドメインの範囲内にあることが保証されています。&lt;a href=&quot;#log_domain&quot;&gt;ドメイン内&lt;/a&gt;の桁が&lt;em&gt;count&lt;/em&gt;より大きい場合、電力ごとに最大で1ティックが返されます。それ以外の場合、目盛りの値はフィルターされませんが、目盛りラベルの表示をフィルターするために&lt;a href=&quot;#log_tickFormat&quot;&gt;&lt;em&gt;log&lt;/em&gt; .tickFormat&lt;/a&gt;を使用できることに注意してください。&lt;em&gt;count&lt;/em&gt;が指定されていない場合、デフォルトは10です。</target>
        </trans-unit>
        <trans-unit id="31455ad957fcef1f4f1e0b993d556e1b09854f00" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#interpolateCubehelix&quot;&gt;interpolateCubehelix&lt;/a&gt;, but does not use the shortest path between hues.</source>
          <target state="translated">&lt;a href=&quot;#interpolateCubehelix&quot;&gt;interpolateCubehelix&lt;/a&gt;と同様ですが、色相間の最短経路を使用しません。</target>
        </trans-unit>
        <trans-unit id="3a499b09349f8126780b65299ebc6d0be41860ba" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#interpolateHcl&quot;&gt;interpolateHcl&lt;/a&gt;, but does not use the shortest path between hues.</source>
          <target state="translated">&lt;a href=&quot;#interpolateHcl&quot;&gt;interpolateHcl&lt;/a&gt;と同様ですが、色相間の最短経路を使用しません。</target>
        </trans-unit>
        <trans-unit id="08dc9e0120eab0acc4a233a5a1e0472c624ca9f7" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#interpolateHsl&quot;&gt;interpolateHsl&lt;/a&gt;, but does not use the shortest path between hues.</source>
          <target state="translated">&lt;a href=&quot;#interpolateHsl&quot;&gt;interpolateHsl&lt;/a&gt;と似ていますが、色相間の最短経路を使用しません。</target>
        </trans-unit>
        <trans-unit id="5d834bc032ec9b697613736a1e90e25414f4b6af" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#interpolateHsv&quot;&gt;interpolateHsv&lt;/a&gt;, but does not use the shortest path between hues.</source>
          <target state="translated">&lt;a href=&quot;#interpolateHsv&quot;&gt;interpolateHsv&lt;/a&gt;と同様ですが、色相間の最短経路を使用しません。</target>
        </trans-unit>
        <trans-unit id="fe166d29e40ea2cbc3a52e4146b4482ecfb9ef55" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#selection_attrs&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.attrs&lt;/a&gt;, but for &lt;a href=&quot;d3-transition#transition_attr&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.attr&lt;/a&gt;.</source>
          <target state="translated">同様に&lt;a href=&quot;#selection_attrs&quot;&gt;&lt;em&gt;選択&lt;/em&gt; .attrs&lt;/a&gt;、しかしための&lt;a href=&quot;d3-transition#transition_attr&quot;&gt;&lt;em&gt;遷移&lt;/em&gt; .ATTR&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="032d81f813982cdccdb222392c631b40484dfd37" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#selection_styles&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.styles&lt;/a&gt;, but for &lt;a href=&quot;d3-transition#transition_style&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.style&lt;/a&gt;.</source>
          <target state="translated">同様に&lt;a href=&quot;#selection_styles&quot;&gt;&lt;em&gt;選択&lt;/em&gt; .styles&lt;/a&gt;、しかしための&lt;a href=&quot;d3-transition#transition_style&quot;&gt;&lt;em&gt;遷移&lt;/em&gt; .style&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="489dbf461447d32c487811110a0a156aaba63a8d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#tickStep&quot;&gt;d3.tickStep&lt;/a&gt;, except requires that &lt;em&gt;start&lt;/em&gt; is always less than or equal to &lt;em&gt;step&lt;/em&gt;, and if the tick step for the given &lt;em&gt;start&lt;/em&gt;, &lt;em&gt;stop&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; would be less than one, returns the negative inverse tick step instead. This method is always guaranteed to return an integer, and is used by &lt;a href=&quot;#ticks&quot;&gt;d3.ticks&lt;/a&gt; to guarantee that the returned tick values are represented as precisely as possible in IEEE 754 floating point.</source>
          <target state="translated">&lt;a href=&quot;#tickStep&quot;&gt;d3.tickStep&lt;/a&gt;と同様ですが、&lt;em&gt;start&lt;/em&gt;が常に&lt;em&gt;step&lt;/em&gt;以下である必要があり、指定された&lt;em&gt;start&lt;/em&gt;、&lt;em&gt;stop&lt;/em&gt;および&lt;em&gt;countの&lt;/em&gt;ティックステップが1未満の場合は、代わりに負の逆ティックステップを返します。このメソッドは常に整数を返すことが保証されており、返されたティック値がIEEE 754浮動小数点で可能な限り正確に表されることを保証するために&lt;a href=&quot;#ticks&quot;&gt;d3.ticks&lt;/a&gt;によって使用されます。</target>
        </trans-unit>
        <trans-unit id="681fe945b37a4fcdfafa39b4d7041faf5613ccef" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#timer&quot;&gt;timer&lt;/a&gt;, except the &lt;em&gt;callback&lt;/em&gt; is invoked only every &lt;em&gt;delay&lt;/em&gt; milliseconds; if &lt;em&gt;delay&lt;/em&gt; is not specified, this is equivalent to &lt;a href=&quot;#timer&quot;&gt;timer&lt;/a&gt;. A suitable replacement for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval&quot;&gt;setInterval&lt;/a&gt; that is guaranteed to not run in the background. The &lt;em&gt;callback&lt;/em&gt; is passed the elapsed time.</source>
          <target state="translated">&lt;a href=&quot;#timer&quot;&gt;timer&lt;/a&gt;と同様ですが、&lt;em&gt;コールバック&lt;/em&gt;は&lt;em&gt;遅延&lt;/em&gt;ミリ秒ごとにのみ呼び出されます。&lt;em&gt;delay&lt;/em&gt;が指定されていない場合、これは&lt;a href=&quot;#timer&quot;&gt;timer&lt;/a&gt;と同等です。バックグラウンドで実行されないことが保証されている&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval&quot;&gt;setIntervalの&lt;/a&gt;適切な置き換え。&lt;em&gt;コールバックは&lt;/em&gt;、経過時間を経過しています。</target>
        </trans-unit>
        <trans-unit id="1d634295a6db6fe1a6a0167ec5a286adbabc8122" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#timer&quot;&gt;timer&lt;/a&gt;, except the timer automatically &lt;a href=&quot;#timer_stop&quot;&gt;stops&lt;/a&gt; on its first callback. A suitable replacement for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout&quot;&gt;setTimeout&lt;/a&gt; that is guaranteed to not run in the background. The &lt;em&gt;callback&lt;/em&gt; is passed the elapsed time.</source>
          <target state="translated">&lt;a href=&quot;#timer&quot;&gt;timer&lt;/a&gt;と同様ですが、タイマーは最初のコールバックで自動的に&lt;a href=&quot;#timer_stop&quot;&gt;停止&lt;/a&gt;します。バックグラウンドで実行されないことが保証されている&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout&quot;&gt;setTimeoutの&lt;/a&gt;適切な代替。&lt;em&gt;コールバックは&lt;/em&gt;、経過時間を経過しています。</target>
        </trans-unit>
        <trans-unit id="06cd8feda73dc8a0525c63f77ad53b727b898cdc" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#treemapSquarify&quot;&gt;d3.treemapSquarify&lt;/a&gt;, except preserves the topology (node adjacencies) of the previous layout computed by d3.treemapResquarify, if there is one and it used the same &lt;a href=&quot;#squarify_ratio&quot;&gt;target aspect ratio&lt;/a&gt;. This tiling method is good for animating changes to treemaps because it only changes node sizes and not their relative positions, thus avoiding distracting shuffling and occlusion. The downside of a stable update, however, is a suboptimal layout for subsequent updates: only the first layout uses the Bruls &lt;em&gt;et al.&lt;/em&gt; squarified algorithm.</source>
          <target state="translated">&lt;a href=&quot;#treemapSquarify&quot;&gt;d3.treemapSquarify&lt;/a&gt;と同じですが、d3.treemapResquarifyによって計算された以前のレイアウトのトポロジ（ノードの隣接関係）が保持され、同じ&lt;a href=&quot;#squarify_ratio&quot;&gt;ターゲットアスペクト比が&lt;/a&gt;使用されている場合は保持されます。このタイリング方法は、ノードサイズのみを変更し、相対的な位置は変更しないため、ツリーマップへの変更をアニメーション化するのに適しています。これにより、シャッフルやオクルージョンの邪魔にならないようにします。ただし、安定した更新の欠点は、後続の更新のレイアウトが最適ではないことです。最初のレイアウトのみがBruls &lt;em&gt;らを&lt;/em&gt;使用し&lt;em&gt;ます。&lt;/em&gt;二乗アルゴリズム。</target>
        </trans-unit>
        <trans-unit id="490d88da6c062fb0026c9b461033f2dd19abeafb" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;d3-selection#selection_attr&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.attr&lt;/a&gt;, the values in the multi-value object can be functions of data:</source>
          <target state="translated">&lt;a href=&quot;d3-selection#selection_attr&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .attr&lt;/a&gt;と同様に、複数値オブジェクトの値はデータの関数にすることができます。</target>
        </trans-unit>
        <trans-unit id="10a708b6e79d586d3694e39a9a6d9e87a52fde65" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call&quot;&gt;&lt;em&gt;function&lt;/em&gt;.apply&lt;/a&gt;, invokes each registered callback for the specified &lt;em&gt;type&lt;/em&gt;, passing the callback the specified &lt;em&gt;arguments&lt;/em&gt;, with &lt;em&gt;that&lt;/em&gt; as the &lt;code&gt;this&lt;/code&gt; context. For example, if you wanted to dispatch your &lt;em&gt;custom&lt;/em&gt; callbacks after handling a native &lt;em&gt;click&lt;/em&gt; event, while preserving the current &lt;code&gt;this&lt;/code&gt; context and arguments, you could say:</source>
          <target state="translated">ように&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call&quot;&gt;&lt;em&gt;機能&lt;/em&gt; .apply&lt;/a&gt;、指定された各登録されたコールバック呼び出し&lt;em&gt;の種類を&lt;/em&gt;指定したコールバックを渡し、&lt;em&gt;引数&lt;/em&gt;で、&lt;em&gt;その&lt;/em&gt;ような &lt;code&gt;this&lt;/code&gt; 文脈。たとえば、現在の &lt;code&gt;this&lt;/code&gt; コンテキストと引数を保持しながら、ネイティブ&lt;em&gt;クリック&lt;/em&gt;イベントを処理した後に&lt;em&gt;カスタム&lt;/em&gt;コールバックをディスパッチしたい場合は、次のように言うことができます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d15933ea78a54f1d514bcbf52010a147d250d4a3" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call&quot;&gt;&lt;em&gt;function&lt;/em&gt;.call&lt;/a&gt;, invokes each registered callback for the specified &lt;em&gt;type&lt;/em&gt;, passing the callback the specified &lt;em&gt;arguments&lt;/em&gt;, with &lt;em&gt;that&lt;/em&gt; as the &lt;code&gt;this&lt;/code&gt; context. See &lt;a href=&quot;#dispatch_apply&quot;&gt;&lt;em&gt;dispatch&lt;/em&gt;.apply&lt;/a&gt; for more information.</source>
          <target state="translated">ような&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call&quot;&gt;&lt;em&gt;機能&lt;/em&gt;は.call&lt;/a&gt;、指定された各登録されたコールバック呼び出し&lt;em&gt;の種類を&lt;/em&gt;指定したコールバックを渡し、&lt;em&gt;引数&lt;/em&gt;で、&lt;em&gt;その&lt;/em&gt;ような &lt;code&gt;this&lt;/code&gt; 文脈。詳細については、&lt;a href=&quot;#dispatch_apply&quot;&gt;&lt;em&gt;dispatch&lt;/em&gt; .apply&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="54b6147dbee88303a94f7d001bacf6c4b4bdcb03" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot;&gt;ES6 Maps&lt;/a&gt;, but with a few differences:</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot;&gt;ES6 Maps&lt;/a&gt;と似ていますが、いくつかの違いがあります。</target>
        </trans-unit>
        <trans-unit id="3a7d0d0737324a924ac1f46b83ce059620dbd07e" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;ES6 Sets&lt;/a&gt;, but with a few differences:</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;ES6セット&lt;/a&gt;と似ていますが、いくつかの違いがあります。</target>
        </trans-unit>
        <trans-unit id="586411fb5dca6579efe8ec3e37eda4a2c46e6458" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;var&lt;/code&gt;, each local is a distinct symbolic reference; unlike &lt;code&gt;var&lt;/code&gt;, the value of each local is also scoped by the DOM.</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; と同様に、各ローカルは個別のシンボリック参照です。 &lt;code&gt;var&lt;/code&gt; とは異なり、各ローカルの値はDOMによってスコープされます。</target>
        </trans-unit>
        <trans-unit id="28c67048c930c100ac25a7a4438f90ccfc0f2d19" translate="yes" xml:space="preserve">
          <source>Like &lt;em&gt;function&lt;/em&gt;.call, you may also specify the &lt;code&gt;this&lt;/code&gt; context and any arguments:</source>
          <target state="translated">&lt;em&gt;関数&lt;/em&gt; .call と同様に、 &lt;code&gt;this&lt;/code&gt; コンテキストと引数も指定できます。</target>
        </trans-unit>
        <trans-unit id="c47bef27c1bb49bc6cf4ab548c0bda176f4ba5bd" translate="yes" xml:space="preserve">
          <source>Like ES6 Map, but with string keys and a few other differences.</source>
          <target state="translated">ES6 Mapと似ていますが、文字列キーがあり、他にもいくつかの違いがあります。</target>
        </trans-unit>
        <trans-unit id="3401fe045c53d065754cf440b4002aa7c668136b" translate="yes" xml:space="preserve">
          <source>Like ES6 Set, but with string keys and a few other differences.</source>
          <target state="translated">ES6セットと似ていますが、文字列キーがあり、他にもいくつかの違いがあります。</target>
        </trans-unit>
        <trans-unit id="cf7b7049dac8c9ab434a94948c8fcccd8d07333f" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;#pies&quot;&gt;pie generator&lt;/a&gt;, the stack generator does not produce a shape directly. Instead it computes positions which you can then pass to an &lt;a href=&quot;#areas&quot;&gt;area generator&lt;/a&gt; or use directly, say to position bars.</source>
          <target state="translated">&lt;a href=&quot;#pies&quot;&gt;パイジェネレータ&lt;/a&gt;と同様に、スタックジェネレータは形状を直接生成しません。代わりに、&lt;a href=&quot;#areas&quot;&gt;エリアジェネレーターに&lt;/a&gt;渡したり、バーを配置するなどの直接使用できる位置を計算します。</target>
        </trans-unit>
        <trans-unit id="0b70792cc23edbc80b1206db3765a8f63e50c6a9" translate="yes" xml:space="preserve">
          <source>Likewise, if the returned array should have a specific length, consider using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map&quot;&gt;array.map&lt;/a&gt; on an integer range. For example:</source>
          <target state="translated">同様に、返される配列が特定の長さを持つ必要がある場合は、整数の範囲で&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map&quot;&gt;array.map&lt;/a&gt;を使用することを検討してください。例えば：</target>
        </trans-unit>
        <trans-unit id="3ebf2f21ed1da8b38e0b981cd7be6965d4177f4c" translate="yes" xml:space="preserve">
          <source>Likewise, in place of 3.x&amp;rsquo;s d3.time.weekOfYear, in 4.0 you would say:</source>
          <target state="translated">同様に、3.xのd3.time.weekOfYearの代わりに、4.0では次のようにします。</target>
        </trans-unit>
        <trans-unit id="c1bca3de1438cbdb27ee93945ccbec3357c29dfe" translate="yes" xml:space="preserve">
          <source>Likewise, to compute the current zero-based week-of-year number for weeks that start on Sunday:</source>
          <target state="translated">同様に、日曜日から始まる週の現在のゼロベースの年号を計算します。</target>
        </trans-unit>
        <trans-unit id="1b7ed82d11245a9064ce7328e35792399299bbd5" translate="yes" xml:space="preserve">
          <source>Likewise, to convert a string back to a date, create a &lt;a href=&quot;#locale_parse&quot;&gt;parser&lt;/a&gt;:</source>
          <target state="translated">同様に、文字列を日付に変換するには、&lt;a href=&quot;#locale_parse&quot;&gt;パーサーを&lt;/a&gt;作成します。</target>
        </trans-unit>
        <trans-unit id="2055630c59c4fb2ddd6f87022a510f85d727292e" translate="yes" xml:space="preserve">
          <source>Likewise, to remove the exiting elements [15, 23, 42]:</source>
          <target state="translated">同様に、除外要素を除去するために[15,23,42]。</target>
        </trans-unit>
        <trans-unit id="1a727039c0fac582b342140c471505c239cd6a1d" translate="yes" xml:space="preserve">
          <source>LineString - an array of positions forming a continuous line.</source>
          <target state="translated">LineString-連続した直線を形成する位置の配列.</target>
        </trans-unit>
        <trans-unit id="d20cf9921f583444705b3b70e6b98815b6426bf2" translate="yes" xml:space="preserve">
          <source>Linear Scales</source>
          <target state="translated">リニアスケール</target>
        </trans-unit>
        <trans-unit id="f1a69b0143c9044ad0be8cff2ae9165472d82f44" translate="yes" xml:space="preserve">
          <source>Linear easing; the identity function; &lt;em&gt;linear&lt;/em&gt;(&lt;em&gt;t&lt;/em&gt;) returns &lt;em&gt;t&lt;/em&gt;.</source>
          <target state="translated">線形イージング; 識別関数; &lt;em&gt;linear&lt;/em&gt;（&lt;em&gt;t&lt;/em&gt;）は&lt;em&gt;tを&lt;/em&gt;返します。</target>
        </trans-unit>
        <trans-unit id="c6fd3870c86e7422a0146e1e2a052437fb8e51e2" translate="yes" xml:space="preserve">
          <source>Lines</source>
          <target state="translated">Lines</target>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="200b9c96957402fa561297164212254d3f070d99" translate="yes" xml:space="preserve">
          <source>Listening Element</source>
          <target state="translated">リスニング要素</target>
        </trans-unit>
        <trans-unit id="ff5148d6cff2251fbb44fa24ac71e87831f6949a" translate="yes" xml:space="preserve">
          <source>Local Variables</source>
          <target state="translated">局所変数</target>
        </trans-unit>
        <trans-unit id="ea4338693e4facad5ae391ae15c0301d3cc298d5" translate="yes" xml:space="preserve">
          <source>Locale files are hosted on &lt;a href=&quot;https://unpkg.com/&quot;&gt;unpkg&lt;/a&gt; and can be loaded using &lt;a href=&quot;d3-request#json&quot;&gt;d3.json&lt;/a&gt;. For example, to set Russian as the default locale:</source>
          <target state="translated">ロケールファイルは上でホストされている&lt;a href=&quot;https://unpkg.com/&quot;&gt;unpkg&lt;/a&gt;と使用してロードすることができ&lt;a href=&quot;d3-request#json&quot;&gt;d3.jsonを&lt;/a&gt;。たとえば、ロシア語をデフォルトのロケールとして設定するには：</target>
        </trans-unit>
        <trans-unit id="a222060e32289bf6910ac4a07a10733be500bd99" translate="yes" xml:space="preserve">
          <source>Locales</source>
          <target state="translated">Locales</target>
        </trans-unit>
        <trans-unit id="fe1cbbd6879356bbd801376dd1942fa3b51884ec" translate="yes" xml:space="preserve">
          <source>Log Scales</source>
          <target state="translated">ログスケール</target>
        </trans-unit>
        <trans-unit id="b6a8b014a6013ad5ea1e70ac0ff7540b5f81cb3c" translate="yes" xml:space="preserve">
          <source>Log scales are similar to &lt;a href=&quot;#linear-scales&quot;&gt;linear scales&lt;/a&gt;, except a logarithmic transform is applied to the input domain value before the output range value is computed. The mapping to the range value &lt;em&gt;y&lt;/em&gt; can be expressed as a function of the domain value &lt;em&gt;x&lt;/em&gt;: &lt;em&gt;y&lt;/em&gt; = &lt;em&gt;m&lt;/em&gt; log(</source>
          <target state="translated">対数スケールは、出力範囲値が計算される前に入力ドメイン値に対数変換が適用されることを除いて、&lt;a href=&quot;#linear-scales&quot;&gt;線形スケール&lt;/a&gt;に似ています。範囲値&lt;em&gt;y&lt;/em&gt;へのマッピングは、ドメイン値&lt;em&gt;xの&lt;/em&gt;関数として表すことができます：&lt;em&gt;y&lt;/em&gt; = &lt;em&gt;m&lt;/em&gt; log（</target>
        </trans-unit>
        <trans-unit id="b7be46cf3986257332509d4a087d422d933eca61" translate="yes" xml:space="preserve">
          <source>Many datasets are intrinsically hierarchical. Consider &lt;a href=&quot;https://www.census.gov/geo/reference/hierarchy.html&quot;&gt;geographic entities&lt;/a&gt;, such as census blocks, census tracts, counties and states; the command structure of businesses and governments; file systems and software packages. And even non-hierarchical data may be arranged empirically into a hierarchy, as with &lt;a href=&quot;https://en.wikipedia.org/wiki/K-means_clustering&quot;&gt;&lt;em&gt;k&lt;/em&gt;-means clustering&lt;/a&gt; or &lt;a href=&quot;https://bl.ocks.org/mbostock/c034d66572fd6bd6815a&quot;&gt;phylogenetic trees&lt;/a&gt;.</source>
          <target state="translated">多くのデータセットは本質的に階層的です。国勢調査区、国勢調査区、郡、州などの&lt;a href=&quot;https://www.census.gov/geo/reference/hierarchy.html&quot;&gt;地理的エンティティを&lt;/a&gt;検討します。企業と政府の指揮体系;ファイルシステムとソフトウェアパッケージ。さらには非階層データを有するように、階層に経験的に配置されていてもよい&lt;a href=&quot;https://en.wikipedia.org/wiki/K-means_clustering&quot;&gt;&lt;em&gt;、K&lt;/em&gt;平均クラスタリング&lt;/a&gt;または&lt;a href=&quot;https://bl.ocks.org/mbostock/c034d66572fd6bd6815a&quot;&gt;系統樹&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bfb246dfbb6dbd4ebdd3a30634b148b7e66e316f" translate="yes" xml:space="preserve">
          <source>Many of the easing functions have been optimized for performance and accuracy. Several bugs have been fixed, as well, such as the interpretation of the overshoot parameter for back easing, and the period parameter for elastic easing. Also, &lt;a href=&quot;#transitions-d3-transition&quot;&gt;d3-transition&lt;/a&gt; now explicitly guarantees that the last tick of the transition happens at exactly &lt;em&gt;t&lt;/em&gt; = 1, avoiding floating point errors in some easing functions.</source>
          <target state="translated">イージング関数の多くは、パフォーマンスと精度が最適化されています。同様に、バックイージングのオーバーシュートパラメーターの解釈やエラスティックイージングの期間パラメーターなど、いくつかのバグが修正されました。また、&lt;a href=&quot;#transitions-d3-transition&quot;&gt;d3-transition&lt;/a&gt;は、遷移の最後の目盛りが正確に&lt;em&gt;t&lt;/em&gt; = 1で発生することを明示的に保証し、一部のイージング関数での浮動小数点エラーを回避します。</target>
        </trans-unit>
        <trans-unit id="4f83ca8d98f539449439bd79db1f540ff7bb9d51" translate="yes" xml:space="preserve">
          <source>Many-Body</source>
          <target state="translated">Many-Body</target>
        </trans-unit>
        <trans-unit id="f673aa24a6cef36c2a3f47c85c2fdfc67259b875" translate="yes" xml:space="preserve">
          <source>Map a continuous, quantitative domain to a continuous range.</source>
          <target state="translated">連続的で定量的な領域を連続的な範囲にマッピングします。</target>
        </trans-unit>
        <trans-unit id="777ffd595fae137146f380a6240ec9c1f4de502c" translate="yes" xml:space="preserve">
          <source>Map a continuous, quantitative domain to a continuous, fixed interpolator.</source>
          <target state="translated">連続的で定量的な領域を、連続的で固定的な補間器にマッピングします。</target>
        </trans-unit>
        <trans-unit id="20e4fc12a921a8ae1a99431f93ace8f33b34daf8" translate="yes" xml:space="preserve">
          <source>Map a continuous, quantitative domain to a discrete range.</source>
          <target state="translated">連続的で定量的な領域を離散的な範囲にマッピングします。</target>
        </trans-unit>
        <trans-unit id="e04e175ee7ce06ffa2ea6c52e4c16189856bef68" translate="yes" xml:space="preserve">
          <source>Map a discrete domain to a discrete range.</source>
          <target state="translated">離散領域を離散範囲にマッピングします。</target>
        </trans-unit>
        <trans-unit id="79c7ed3f9e272e9f43efed105344518fb0923df7" translate="yes" xml:space="preserve">
          <source>Map projections are sometimes implemented as point transformations. For instance, spherical Mercator:</source>
          <target state="translated">地図投影は点変換として実装されることもあります。例えば、球状のメルカトル。</target>
        </trans-unit>
        <trans-unit id="80071cd75107cd5c4afdb2571725ea6733631038" translate="yes" xml:space="preserve">
          <source>Maps</source>
          <target state="translated">Maps</target>
        </trans-unit>
        <trans-unit id="1ffe4c0ebe1888c58693680eac167f45e146b353" translate="yes" xml:space="preserve">
          <source>Merges the specified &lt;em&gt;arrays&lt;/em&gt; into a single array. This method is similar to the built-in array concat method; the only difference is that it is more convenient when you have an array of arrays.</source>
          <target state="translated">指定された&lt;em&gt;配列&lt;/em&gt;を単一の配列にマージします。このメソッドは、組み込みの配列concatメソッドに似ています。唯一の違いは、配列の配列がある場合に便利です。</target>
        </trans-unit>
        <trans-unit id="34119d9e8c348fdce9d495aed2a4036562e8accb" translate="yes" xml:space="preserve">
          <source>Methods for computing basic summary statistics.</source>
          <target state="translated">基本的な要約統計量の計算方法</target>
        </trans-unit>
        <trans-unit id="cc96d6720e4a85ffa6d81769d1636c8d73ae9fff" translate="yes" xml:space="preserve">
          <source>Methods for converting associative arrays (objects) to arrays.</source>
          <target state="translated">連想配列(オブジェクト)を配列に変換するためのメソッドです。</target>
        </trans-unit>
        <trans-unit id="9abc6e7e98e8a91acc6f3bacbb66cf771e89e65d" translate="yes" xml:space="preserve">
          <source>Methods for searching arrays for a specific element.</source>
          <target state="translated">特定の要素の配列を検索するためのメソッドです。</target>
        </trans-unit>
        <trans-unit id="8a53bb3b86784ad97e68dddf8974b4c6a25ee13c" translate="yes" xml:space="preserve">
          <source>Methods for transforming arrays and for generating new arrays.</source>
          <target state="translated">配列を変換するためのメソッドと,新しい配列を生成するためのメソッド.</target>
        </trans-unit>
        <trans-unit id="8ab0d74d8ec76d1aa28d932e2f75c1cf58c6843e" translate="yes" xml:space="preserve">
          <source>Milliseconds; the shortest available time unit.</source>
          <target state="translated">ミリ秒(Milliseconds):利用可能な最短の時間単位。</target>
        </trans-unit>
        <trans-unit id="dc121955cdf44e6d47a215fd4c5de8ccc6dd6993" translate="yes" xml:space="preserve">
          <source>Minutes (e.g., 01:02:00 AM); 60 seconds. Note that ECMAScript &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.1&quot;&gt;ignores leap seconds&lt;/a&gt;.</source>
          <target state="translated">分（例​​：01:02:00 AM）; 60秒。ECMAScript &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.1&quot;&gt;はうるう秒を無視する&lt;/a&gt;ことに注意してください。</target>
        </trans-unit>
        <trans-unit id="184a0eb9006edd9c970fe37cd9a50215215adf44" translate="yes" xml:space="preserve">
          <source>Modifying Elements</source>
          <target state="translated">要素の修正</target>
        </trans-unit>
        <trans-unit id="f7daa15136bf642b3b202d2356c2bbe5ffe365c4" translate="yes" xml:space="preserve">
          <source>Monday-based weeks (e.g., February 6, 2012 at 12:00 AM).</source>
          <target state="translated">月曜日を基準とした週(例:2012年2月6日午前12時)。</target>
        </trans-unit>
        <trans-unit id="082bc378cd60e17a38d99898b21955299c5b60c8" translate="yes" xml:space="preserve">
          <source>Month</source>
          <target state="translated">Month</target>
        </trans-unit>
        <trans-unit id="ddc1f8336b27c49e80f5840d0bf02e1470394318" translate="yes" xml:space="preserve">
          <source>Months (e.g., February 1, 2012 at 12:00 AM); ranges from 28 to 31 days.</source>
          <target state="translated">月(例:2012年2月1日午前12時);28日から31日までの範囲。</target>
        </trans-unit>
        <trans-unit id="be34d98354f2746f80a913a140d0e36034df30be" translate="yes" xml:space="preserve">
          <source>More commonly, a format specifier is passed to &lt;a href=&quot;#axis_ticks&quot;&gt;&lt;em&gt;axis&lt;/em&gt;.ticks&lt;/a&gt;:</source>
          <target state="translated">より一般的には、フォーマット指定子が&lt;a href=&quot;#axis_ticks&quot;&gt;&lt;em&gt;axis&lt;/em&gt; .ticksに&lt;/a&gt;渡され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b558853cba48e8d003cd92c20543ffd356796647" translate="yes" xml:space="preserve">
          <source>Move to the specified point ⟨&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;⟩. Equivalent to &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#dom-context-2d-moveto&quot;&gt;&lt;em&gt;context&lt;/em&gt;.moveTo&lt;/a&gt; and SVG&amp;rsquo;s &lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathDataMovetoCommands&quot;&gt;&amp;ldquo;moveto&amp;rdquo; command&lt;/a&gt;.</source>
          <target state="translated">指定されたポイント⟨に移動する&lt;em&gt;X&lt;/em&gt;、&lt;em&gt;Y&lt;/em&gt; ⟩。&lt;a href=&quot;http://www.w3.org/TR/2dcontext/#dom-context-2d-moveto&quot;&gt;&lt;em&gt;context&lt;/em&gt; .moveTo&lt;/a&gt;およびSVGの&lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathDataMovetoCommands&quot;&gt;「moveto」コマンド&lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="4b5370185a46b46a5daa4c3b659a64784974d394" translate="yes" xml:space="preserve">
          <source>MultiLineString - an array of arrays of positions forming several lines.</source>
          <target state="translated">MultiLineString-複数の行を形成する位置の配列.</target>
        </trans-unit>
        <trans-unit id="767e2b7abd7fbbc8bd130a1031a9cc93f81deeee" translate="yes" xml:space="preserve">
          <source>MultiPoint - an array of positions.</source>
          <target state="translated">MultiPoint-位置の配列.</target>
        </trans-unit>
        <trans-unit id="8c4541c6f825db95e6145d3e7cf44e28110ff7cc" translate="yes" xml:space="preserve">
          <source>MultiPolygon - a multidimensional array of positions forming multiple polygons.</source>
          <target state="translated">MultiPolygon-複数の多角形を形成する位置の多次元配列。</target>
        </trans-unit>
        <trans-unit id="63d0095991c80f4faa9daee6a5949bac3a6ddc67" translate="yes" xml:space="preserve">
          <source>Multiple modules can be required by repeating this option.</source>
          <target state="translated">このオプションを繰り返すことで、複数のモジュールを必要とすることができます。</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="be09a63bd1995e99cd22064cdc39a4bae464033d" translate="yes" xml:space="preserve">
          <source>Namespaces</source>
          <target state="translated">Namespaces</target>
        </trans-unit>
        <trans-unit id="5de1fa0d7bfa8b0be982138262114f48be5e5aa2" translate="yes" xml:space="preserve">
          <source>Nesting allows elements in an array to be grouped into a hierarchical tree structure; think of it like the GROUP BY operator in SQL, except you can have multiple levels of grouping, and the resulting output is a tree rather than a flat table. The levels in the tree are specified by key functions. The leaf nodes of the tree can be sorted by value, while the internal nodes can be sorted by key. An optional rollup function will collapse the elements in each leaf node using a summary function. The nest operator (the object returned by &lt;a href=&quot;#nest&quot;&gt;nest&lt;/a&gt;) is reusable, and does not retain any references to the data that is nested.</source>
          <target state="translated">ネストにより、配列の要素を階層ツリー構造にグループ化できます。SQLのGROUP BY演算子のように考えてください。ただし、複数レベルのグループ化が可能で、結果の出力はフラットテーブルではなくツリーになります。ツリーのレベルは、主要な機能によって指定されます。ツリーのリーフノードは値でソートでき、内部ノードはキーでソートできます。オプションのロールアップ関数は、集計関数を使用して各リーフノードの要素を折りたたみます。ネスト演算子（によって返されたオブジェクト&lt;a href=&quot;#nest&quot;&gt;巣は&lt;/a&gt;）再使用可能であり、ネストされたデータへの参照を保持しません。</target>
        </trans-unit>
        <trans-unit id="fe9355f0b2fa6887b863c9009139e0c32b0d16dd" translate="yes" xml:space="preserve">
          <source>Nests</source>
          <target state="translated">Nests</target>
        </trans-unit>
        <trans-unit id="1cc57c044e0e3dbfbca10bc63f3530bf56dd8290" translate="yes" xml:space="preserve">
          <source>New circles are &lt;a href=&quot;#selection_append&quot;&gt;appended&lt;/a&gt; for any new data that do &lt;em&gt;not&lt;/em&gt; match any existing circle: the &lt;em&gt;enter&lt;/em&gt; selection.</source>
          <target state="translated">新丸がされている&lt;a href=&quot;#selection_append&quot;&gt;付加し&lt;/a&gt;ない新しいデータのため&lt;em&gt;ではない&lt;/em&gt;既存のサークルにマッチ：&lt;em&gt;入力&lt;/em&gt;選択を。</target>
        </trans-unit>
        <trans-unit id="40cfa0187a5860f603c9d967426bacc76d6c88d2" translate="yes" xml:space="preserve">
          <source>New projections are introduced:</source>
          <target state="translated">新たな予測を導入しました。</target>
        </trans-unit>
        <trans-unit id="622eaeebedb93797015f98d258bb5c308bfa2568" translate="yes" xml:space="preserve">
          <source>Nicing a scale only modifies the current domain; it does not automatically nice domains that are subsequently set using &lt;a href=&quot;#continuous_domain&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.domain&lt;/a&gt;. You must re-nice the scale after setting the new domain, if desired.</source>
          <target state="translated">スケールのニシングは現在のドメインのみを変更します。&lt;a href=&quot;#continuous_domain&quot;&gt;&lt;em&gt;継続的な&lt;/em&gt; .domain&lt;/a&gt;を使用して後で設定される、適切なドメインは自動的には作成されません。必要に応じて、新しいドメインを設定した後、スケールを再度ナイスにする必要があります。</target>
        </trans-unit>
        <trans-unit id="a0d617f75a7b1fb8e21ac39759ae3d213f874c8a" translate="yes" xml:space="preserve">
          <source>Nicing is useful if the domain is computed from data, say using &lt;a href=&quot;d3-array#extent&quot;&gt;extent&lt;/a&gt;, and may be irregular. For example, for a domain of [2009-07-13T00:02, 2009-07-13T23:48], the nice domain is [2009-07-13, 2009-07-14]. If the domain has more than two values, nicing the domain only affects the first and last value.</source>
          <target state="translated">ニシングは、ドメインがデータから計算される場合、たとえば、&lt;a href=&quot;d3-array#extent&quot;&gt;extent&lt;/a&gt;を使用して計算され、不規則である場合に役立ちます。たとえば、[2009-07-13T00：02、2009-07-13T23：48]のドメインの場合、適切なドメインは[2009-07-13、2009-07-14]です。ドメインに3つ以上の値がある場合、ドメインのnicは最初と最後の値にのみ影響します。</target>
        </trans-unit>
        <trans-unit id="b445ebb9e707ffdb34621fa8744f94e08d56682e" translate="yes" xml:space="preserve">
          <source>Noam</source>
          <target state="translated">Noam</target>
        </trans-unit>
        <trans-unit id="9e325452c6548fc2449564842660d75ef3b1eb73" translate="yes" xml:space="preserve">
          <source>Nodes</source>
          <target state="translated">Nodes</target>
        </trans-unit>
        <trans-unit id="14f71227837bc274babde9fd5795c5146fbb9bfe" translate="yes" xml:space="preserve">
          <source>Nordisk V&amp;auml;rlds Atlas</source>
          <target state="translated">NordiskV&amp;auml;rldsAtlas</target>
        </trans-unit>
        <trans-unit id="869aac1f23555458fbcd7ae2f6bd33d4ef6a290f" translate="yes" xml:space="preserve">
          <source>Note that &lt;em&gt;tick&lt;/em&gt; events are not dispatched when &lt;a href=&quot;#simulation_tick&quot;&gt;&lt;em&gt;simulation&lt;/em&gt;.tick&lt;/a&gt; is called manually; events are only dispatched by the internal timer and are intended for interactive rendering of the simulation. To affect the simulation, register &lt;a href=&quot;#simulation_force&quot;&gt;forces&lt;/a&gt; instead of modifying nodes&amp;rsquo; positions or velocities inside a tick event listener.</source>
          <target state="translated">&lt;a href=&quot;#simulation_tick&quot;&gt;&lt;em&gt;シミュレーション&lt;/em&gt;&lt;/a&gt; .tickが手動で呼び出された場合、&lt;em&gt;ティック&lt;/em&gt;イベントは送出されないことに注意してください。イベントは内部タイマーによってのみ送出され、シミュレーションのインタラクティブなレンダリングを目的としています。シミュレーションに影響を与えるには、ティックイベントリスナー内のノードの位置または速度を変更する代わりに、&lt;a href=&quot;#simulation_force&quot;&gt;力&lt;/a&gt;を登録します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ff8b7a90a08d46686abb11c8db235f0b601b742d" translate="yes" xml:space="preserve">
          <source>Note that for some intervals, the resulting dates may not be uniformly-spaced; &lt;a href=&quot;#timeDay&quot;&gt;d3.timeDay&lt;/a&gt;&amp;rsquo;s parent interval is &lt;a href=&quot;#timeMonth&quot;&gt;d3.timeMonth&lt;/a&gt;, and thus the interval number resets at the start of each month. If &lt;em&gt;step&lt;/em&gt; is not valid, returns null. If &lt;em&gt;step&lt;/em&gt; is one, returns this interval.</source>
          <target state="translated">間隔によっては、結果の日付が等間隔にならない場合があります。&lt;a href=&quot;#timeDay&quot;&gt;d3.timeDay&lt;/a&gt;の親の間隔は&lt;a href=&quot;#timeMonth&quot;&gt;d3.timeMonth&lt;/a&gt;であるため、間隔番号は各月の初めにリセットされます。場合は&lt;em&gt;ステップが&lt;/em&gt;有効でない、はNULLを返します。&lt;em&gt;ステップ&lt;/em&gt;が1の場合、この間隔を返します。</target>
        </trans-unit>
        <trans-unit id="28b83611a384a6c0a952fae6065c87457bda4cf3" translate="yes" xml:space="preserve">
          <source>Note that if a line segment consists of only a single point, it may appear invisible unless rendered with rounded or square &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap&quot;&gt;line caps&lt;/a&gt;. In addition, some curves such as &lt;a href=&quot;#curveCardinalOpen&quot;&gt;curveCardinalOpen&lt;/a&gt; only render a visible segment if it contains multiple points.</source>
          <target state="translated">ラインセグメントが単一のポイントのみで構成されている場合、丸い&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap&quot;&gt;ラインキャップ&lt;/a&gt;または正方形のラインキャップでレンダリングしない限り、ラインセグメントが見えない場合があることに注意してください。さらに、&lt;a href=&quot;#curveCardinalOpen&quot;&gt;curveCardinalOpen&lt;/a&gt;などの一部のカーブは、複数のポイントが含まれている場合にのみ可視セグメントをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="14af729418ddc9a1cbee002d3ff58fa618f5c3e9" translate="yes" xml:space="preserve">
          <source>Note that if an area segment consists of only a single point, it may appear invisible unless rendered with rounded or square &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap&quot;&gt;line caps&lt;/a&gt;. In addition, some curves such as &lt;a href=&quot;#curveCardinalOpen&quot;&gt;curveCardinalOpen&lt;/a&gt; only render a visible segment if it contains multiple points.</source>
          <target state="translated">エリアセグメントが単一のポイントのみで構成されている場合、丸い&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap&quot;&gt;ラインキャップ&lt;/a&gt;または正方形のラインキャップでレンダリングしない限り、そのセグメントが非表示になることがあります。さらに、&lt;a href=&quot;#curveCardinalOpen&quot;&gt;curveCardinalOpen&lt;/a&gt;などの一部のカーブは、複数のポイントが含まれている場合にのみ可視セグメントをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="f8bd2b5d17262f127fd460f1ffcfc2eb369bc554" translate="yes" xml:space="preserve">
          <source>Note that if no comparator function is specified to the built-in sort method, the default order is lexicographic (alphabetical), not natural! This can lead to surprising behavior when sorting an array of numbers.</source>
          <target state="translated">組み込みのソートメソッドにコンパレータ関数が指定されていない場合、デフォルトの順序は自然な順序ではなく、辞書的な順序(アルファベット順)になることに注意してください。これは、数値の配列をソートするときに驚くような動作をする可能性があります。</target>
        </trans-unit>
        <trans-unit id="308736e036bc1463e7e31ebe46782b2c650b6916" translate="yes" xml:space="preserve">
          <source>Note that sorting is not guaranteed to be stable; however, it is guaranteed to have the same behavior as your browser&amp;rsquo;s built-in &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/sort&quot;&gt;sort&lt;/a&gt; method on arrays.</source>
          <target state="translated">ソートが安定しているとは限らないことに注意してください。ただし、配列に対するブラウザの組み込み&lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/sort&quot;&gt;sort&lt;/a&gt;メソッドと同じ動作をすることが保証されています。</target>
        </trans-unit>
        <trans-unit id="ebbcf452eea826ac282ff7483aae859d54468230" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;:nth-child&lt;/code&gt; pseudo-class is a one-based index rather than a zero-based index. Also, the above filter functions do not have precisely the same meaning as &lt;code&gt;:nth-child&lt;/code&gt;; they rely on the selection index rather than the number of preceding sibling elements in the DOM.</source>
          <target state="translated">&lt;code&gt;:nth-child&lt;/code&gt; 擬似クラスは、ゼロベースのインデックスではなく、1ベースのインデックスであることに注意してください。また、上記のフィルター関数は &lt;code&gt;:nth-child&lt;/code&gt; とまったく同じ意味ではありません。それらは、DOM内の先行する兄弟要素の数ではなく、選択インデックスに依存します。</target>
        </trans-unit>
        <trans-unit id="c280307a793de7d319375615153afa4ee18b35c9" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;===&lt;/code&gt; operators do not compare by value with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&quot;&gt;Date&lt;/a&gt; objects, and thus you cannot use them to tell whether the specified &lt;em&gt;date&lt;/em&gt; has already been floored. Instead, coerce to a number and then compare:</source>
          <target state="translated">ことを注意 &lt;code&gt;==&lt;/code&gt; と &lt;code&gt;===&lt;/code&gt; 演算子はとの値で比較しない&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&quot;&gt;日付&lt;/a&gt;オブジェクト、ひいてはあなたが指定したかどうかを伝えるためにそれらを使用することはできません&lt;em&gt;日付が&lt;/em&gt;すでに床のされています。代わりに、数値に強制変換してから比較します。</target>
        </trans-unit>
        <trans-unit id="8b1fe974f6cf9048c4bbf01e904f035d9437566a" translate="yes" xml:space="preserve">
          <source>Note that the &lt;em&gt;thousands&lt;/em&gt; property is a misnomer, as the grouping definition allows groups other than thousands.</source>
          <target state="translated">ことに留意されたい&lt;em&gt;千の&lt;/em&gt;グループ定義は数千以外の基を可能にするようにプロパティは、誤った名称です。</target>
        </trans-unit>
        <trans-unit id="9c1d657bd849f986da89454f6305654c4bc05b5d" translate="yes" xml:space="preserve">
          <source>Note that the domain accessor is invoked on the materialized array of &lt;a href=&quot;#histogram_value&quot;&gt;values&lt;/a&gt;, not on the input data array.</source>
          <target state="translated">ドメインアクセサーは、入力データ配列ではなく、マテリアライズされた&lt;a href=&quot;#histogram_value&quot;&gt;値の&lt;/a&gt;配列で呼び出されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a1e9743ca439643f2c6ce59ddcb22d3f9bf2f863" translate="yes" xml:space="preserve">
          <source>Note that the generic value interpolator detects not only nested objects and arrays, but also color strings and numbers embedded in strings!</source>
          <target state="translated">汎用値補間器は、入れ子になったオブジェクトや配列だけでなく、文字列に埋め込まれた色の文字列や数字も検出することに注意してください!</target>
        </trans-unit>
        <trans-unit id="bd528cfe00d6f7bd24920db992eafbfe77aecd9e" translate="yes" xml:space="preserve">
          <source>Note that the order of transformations matters! The translate must be applied before the scale.</source>
          <target state="translated">変換の順番が重要であることに注意してください。翻訳はスケールの前に適用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="95bbfcf788f66e70c7398adc107209db6bac2ae9" translate="yes" xml:space="preserve">
          <source>Note that the returned array is in the same order as the data, even though this pie chart is &lt;a href=&quot;#pie_sortValues&quot;&gt;sorted&lt;/a&gt; by descending value, starting with the arc for the last datum (value 21) at 12 o&amp;rsquo;clock.</source>
          <target state="translated">この円グラフは、12時の最後のデータ（値21）の円弧で始まる降順で&lt;a href=&quot;#pie_sortValues&quot;&gt;並べ替え&lt;/a&gt;られていますが、返される配列はデータと同じ順序であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="99d92011557ef90a7ce24b65173201b12959e651" translate="yes" xml:space="preserve">
          <source>Note that this is &lt;strong&gt;not the geometric center&lt;/strong&gt; of the arc, which may be outside the arc; this method is merely a convenience for positioning labels.</source>
          <target state="translated">これは弧の&lt;strong&gt;幾何学的中心&lt;/strong&gt;では&lt;strong&gt;なく&lt;/strong&gt;、弧の外側にある場合があることに注意してください。このメソッドは、ラベルを配置するのに便利です。</target>
        </trans-unit>
        <trans-unit id="091e2db29e8e167640be676955dd52e880ad37be" translate="yes" xml:space="preserve">
          <source>Note that this only affects the result of &lt;a href=&quot;#nest_entries&quot;&gt;&lt;em&gt;nest&lt;/em&gt;.entries&lt;/a&gt;; the order of keys returned by &lt;a href=&quot;#nest_map&quot;&gt;&lt;em&gt;nest&lt;/em&gt;.map&lt;/a&gt; and &lt;a href=&quot;#nest_object&quot;&gt;&lt;em&gt;nest&lt;/em&gt;.object&lt;/a&gt; is always undefined, regardless of comparator.</source>
          <target state="translated">これは&lt;a href=&quot;#nest_entries&quot;&gt;&lt;em&gt;nest&lt;/em&gt; .entries&lt;/a&gt;の結果にのみ影響することに注意してください。&lt;a href=&quot;#nest_map&quot;&gt;&lt;em&gt;nest&lt;/em&gt; .map&lt;/a&gt;および&lt;a href=&quot;#nest_object&quot;&gt;&lt;em&gt;nest&lt;/em&gt; .object&lt;/a&gt;によって返されるキーの順序は、コンパレーターに関係なく、常に未定義です。</target>
        </trans-unit>
        <trans-unit id="c2c4f68fd3f22959066005ed6351b893de2936b9" translate="yes" xml:space="preserve">
          <source>Note that you can also use the built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/random&quot;&gt;Math.random&lt;/a&gt; to generate uniform distributions directly. For example, to generate a random integer between 0 and 99 (inclusive), you can say &lt;code&gt;Math.random() * 100 | 0&lt;/code&gt;.</source>
          <target state="translated">組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/random&quot;&gt;Math.random&lt;/a&gt;を使用して、一様分布を直接生成することもできます。たとえば、0〜99（両端を含む）のランダムな整数を生成するには、 &lt;code&gt;Math.random() * 100 | 0&lt;/code&gt; と言います。0。</target>
        </trans-unit>
        <trans-unit id="03c26373fab30be5fadd2cd3a8e6c805cad264fa" translate="yes" xml:space="preserve">
          <source>Note that you don&amp;rsquo;t need to rethrow the error&amp;mdash;the promise will reject automatically, and you can &lt;em&gt;promise&lt;/em&gt;.catch if desired. Using await, the code is even simpler:</source>
          <target state="translated">エラーを再スローする必要はありません。プロミスは自動的に拒否され、必要に応じて.catch を&lt;em&gt;プロミス&lt;/em&gt;することができます。awaitを使用すると、コードはさらに単純になります。</target>
        </trans-unit>
        <trans-unit id="b365d1699aab5295b8394ee8000fabde1a6dcea4" translate="yes" xml:space="preserve">
          <source>Note the returned array of dates does not start on the &lt;em&gt;start&lt;/em&gt; date because May 28 is even. Also note that May 31 and June 1 are one day apart, not two! The behavior of d3.timeDays in 4.0 is probably closer to what you expect:</source>
          <target state="translated">5月28日は偶数であるため、返された日付の配列は&lt;em&gt;開始&lt;/em&gt;日に開始されないことに注意してください。また、5月31日と6月1日は2日ではなく1日間隔であることに注意してください。4.0でのd3.timeDaysの動作は、おそらく予想に近いものです。</target>
        </trans-unit>
        <trans-unit id="56fd9e3f95de903d6f1ee29310e39d807da33f88" translate="yes" xml:space="preserve">
          <source>Note: &lt;strong&gt;no defensive copy&lt;/strong&gt; of the returned date is created; the same Date instance is returned for every evaluation of the interpolator. No copy is made for performance reasons; interpolators are often part of the inner loop of &lt;a href=&quot;d3-transition&quot;&gt;animated transitions&lt;/a&gt;.</source>
          <target state="translated">注：返された日付の&lt;strong&gt;防御的なコピー&lt;/strong&gt;は作成されません。補間のすべての評価に対して同じDateインスタンスが返されます。パフォーマンス上の理由でコピーは作成されません。補間は、多くの場合、&lt;a href=&quot;d3-transition&quot;&gt;アニメーション化された遷移の&lt;/a&gt;内部ループの一部です。</target>
        </trans-unit>
        <trans-unit id="e81475ca6f3370b5ab50fbb8e5bc2cf2de4219db" translate="yes" xml:space="preserve">
          <source>Note: &lt;strong&gt;no defensive copy&lt;/strong&gt; of the template array is created; modifications of the returned array may adversely affect subsequent evaluation of the interpolator. No copy is made for performance reasons; interpolators are often part of the inner loop of &lt;a href=&quot;d3-transition&quot;&gt;animated transitions&lt;/a&gt;.</source>
          <target state="translated">注：テンプレート配列の&lt;strong&gt;防御的なコピー&lt;/strong&gt;は作成されません。返された配列の変更は、補間器のその後の評価に悪影響を与える可能性があります。パフォーマンス上の理由でコピーは作成されません。補間は、多くの場合、&lt;a href=&quot;d3-transition&quot;&gt;アニメーション化された遷移の&lt;/a&gt;内部ループの一部です。</target>
        </trans-unit>
        <trans-unit id="d3bf3d64d5a140b18dc401c31e729c9bd51bfaf9" translate="yes" xml:space="preserve">
          <source>Note: &lt;strong&gt;no defensive copy&lt;/strong&gt; of the template object is created; modifications of the returned object may adversely affect subsequent evaluation of the interpolator. No copy is made for performance reasons; interpolators are often part of the inner loop of &lt;a href=&quot;d3-transition&quot;&gt;animated transitions&lt;/a&gt;.</source>
          <target state="translated">注：テンプレートオブジェクトの&lt;strong&gt;防御的なコピー&lt;/strong&gt;は作成されません。返されたオブジェクトの変更は、補間器のその後の評価に悪影響を与える可能性があります。パフォーマンス上の理由でコピーは作成されません。補間は、多くの場合、&lt;a href=&quot;d3-transition&quot;&gt;アニメーション化された遷移の&lt;/a&gt;内部ループの一部です。</target>
        </trans-unit>
        <trans-unit id="6f3f9aebc8c76bbbc9f6a16c08a67798ac84352a" translate="yes" xml:space="preserve">
          <source>Note: for the &lt;code&gt;%&lt;/code&gt; format type, subtract two:</source>
          <target state="translated">注： &lt;code&gt;%&lt;/code&gt; フォーマットタイプの場合は、2を減算します。</target>
        </trans-unit>
        <trans-unit id="ad5698e5eeb2aa982d5fc5aecf503b8a649ea908" translate="yes" xml:space="preserve">
          <source>Note: for the &lt;code&gt;e&lt;/code&gt; format type, subtract one:</source>
          <target state="translated">注： &lt;code&gt;e&lt;/code&gt; フォーマットタイプの場合は、1を引きます。</target>
        </trans-unit>
        <trans-unit id="cd1a788405271f56fef4557faaac77787146169c" translate="yes" xml:space="preserve">
          <source>Note: in some cases, such as with day ticks, specifying a &lt;em&gt;step&lt;/em&gt; can result in irregular spacing of ticks because time intervals have varying length.</source>
          <target state="translated">注：日の目盛りなどの場合、時間間隔の長さが変化するため、&lt;em&gt;ステップ&lt;/em&gt;を指定すると目盛りの間隔が不規則になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="82d3fefdd17aab476d5f8226b4d048cdeb9d518a" translate="yes" xml:space="preserve">
          <source>Note: interrupted projections typically require clipping to the sphere.</source>
          <target state="translated">注意:中断された突起は、通常、球体にクリッピングする必要があります。</target>
        </trans-unit>
        <trans-unit id="4d87deb08150a4c3266908881273309c67a645fa" translate="yes" xml:space="preserve">
          <source>Note: per-feature attributes are most useful in conjunction with &lt;a href=&quot;#geo2svg_newline_delimited&quot;&gt;newline-delimited&lt;/a&gt; input, as otherwise the generated SVG only has a single path element. To set these properties dynamically, pass the input through &lt;a href=&quot;https://github.com/mbostock/ndjson-cli#map&quot;&gt;ndjson-map&lt;/a&gt;.</source>
          <target state="translated">注：機能ごとの属性は、&lt;a href=&quot;#geo2svg_newline_delimited&quot;&gt;改行で区切られた&lt;/a&gt;入力と組み合わせて使用​​すると最も便利です。それ以外の場合、生成されるSVGには単一のパス要素しかありません。これらのプロパティを動的に設定するには、&lt;a href=&quot;https://github.com/mbostock/ndjson-cli#map&quot;&gt;ndjson-mapを&lt;/a&gt;介して入力を渡します。</target>
        </trans-unit>
        <trans-unit id="1b90d4e04281318db5a2969b963f583f4b72cb57" translate="yes" xml:space="preserve">
          <source>Note: projections tagged [d3-geo] are exported by &lt;a href=&quot;d3-geo&quot;&gt;d3-geo&lt;/a&gt;, not d3-geo-projection. These commonly-used projections are also included in the &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;d3&lt;/a&gt; default bundle.</source>
          <target state="translated">注：突起が[D3-GEO]は、によってエクスポートされたタグ付けされた&lt;a href=&quot;d3-geo&quot;&gt;D3-GEO&lt;/a&gt;なく、D3-地理投影。これらの一般的に使用されるプロジェクションは、&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;d3&lt;/a&gt;デフォルトバンドルにも含まれています。</target>
        </trans-unit>
        <trans-unit id="0eb3f2686101ed2119c34133557676de623199fc" translate="yes" xml:space="preserve">
          <source>Note: the &lt;a href=&quot;d3-interpolate#interpolate&quot;&gt;default interpolator&lt;/a&gt;&lt;strong&gt;may reuse return values&lt;/strong&gt;. For example, if the range values are objects, then the value interpolator always returns the same object, modifying it in-place. If the scale is used to set an attribute or style, this is typically acceptable (and desirable for performance); however, if you need to store the scale&amp;rsquo;s return value, you must specify your own interpolator or make a copy as appropriate.</source>
          <target state="translated">注：&lt;a href=&quot;d3-interpolate#interpolate&quot;&gt;デフォルトの補間で&lt;/a&gt;&lt;strong&gt;は、戻り値が再利用される場合があります&lt;/strong&gt;。たとえば、範囲値がオブジェクトの場合、値補間器は常に同じオブジェクトを返し、インプレースで変更します。属性またはスタイルを設定するためにスケールが使用されている場合、これは通常は許容可能です（パフォーマンスにとって望ましい）。ただし、スケールの戻り値を保存する必要がある場合は、独自の補間器を指定するか、必要に応じてコピーを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="8b1a3266feb92747306f3a8f74ce762c234299dd" translate="yes" xml:space="preserve">
          <source>Note: this function may also be used with &lt;code&gt;instanceof&lt;/code&gt; to test if an object is a color instance. The same is true of color subclasses, allowing you to test whether a color is in a particular color space.</source>
          <target state="translated">注：この関数を &lt;code&gt;instanceof&lt;/code&gt; とともに使用して、オブジェクトがカラーインスタンスかどうかをテストすることもできます。同じことがカラーサブクラスにも当てはまり、カラーが特定のカラースペースにあるかどうかをテストできます。</target>
        </trans-unit>
        <trans-unit id="3ba22d78fcfe2b60871e2a05da4162dec722b617" translate="yes" xml:space="preserve">
          <source>Note: this library does not set the X-Requested-With header to &lt;code&gt;XMLHttpRequest&lt;/code&gt; by default. Some servers require this header to mitigate unwanted requests, but the presence of the header triggers CORS preflight checks; if necessary, set this header before sending the request.</source>
          <target state="translated">注：このライブラリは、デフォルトではX-Requested-Withヘッダーを &lt;code&gt;XMLHttpRequest&lt;/code&gt; に設定しません。一部のサーバーでは、不要な要求を軽減するためにこのヘッダーが必要ですが、ヘッダーが存在するとCORSプリフライトチェックがトリガーされます。必要に応じて、リクエストを送信する前にこのヘッダーを設定してください。</target>
        </trans-unit>
        <trans-unit id="086403d0a230e6f0fb7912bf801d0d58e1bbeed0" translate="yes" xml:space="preserve">
          <source>Note: this method is unsafe if any of the keys conflict with built-in JavaScript properties, such as &lt;code&gt;__proto__&lt;/code&gt;. If you cannot guarantee that the keys will be safe, you should use &lt;a href=&quot;#nest_map&quot;&gt;nest.map&lt;/a&gt; instead.</source>
          <target state="translated">注：キーのいずれかが &lt;code&gt;__proto__&lt;/code&gt; などの組み込みのJavaScriptプロパティと競合する場合、このメソッドは安全ではありません。キーの安全性を保証できない場合は、代わりに&lt;a href=&quot;#nest_map&quot;&gt;nest.map&lt;/a&gt;を使用してください。</target>
        </trans-unit>
        <trans-unit id="bceb07ad7815b15b0cd7a9c5d17751640338aaa8" translate="yes" xml:space="preserve">
          <source>Note: using &lt;code&gt;+&lt;/code&gt; rather than &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt&quot;&gt;parseInt&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseFloat&quot;&gt;parseFloat&lt;/a&gt; is typically faster, though more restrictive. For example, &lt;code&gt;&quot;30px&quot;&lt;/code&gt; when coerced using &lt;code&gt;+&lt;/code&gt; returns &lt;code&gt;NaN&lt;/code&gt;, while parseInt and parseFloat return &lt;code&gt;30&lt;/code&gt;.</source>
          <target state="translated">注：&lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt&quot;&gt;parseInt&lt;/a&gt;または&lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseFloat&quot;&gt;parseFloat&lt;/a&gt;ではなく &lt;code&gt;+&lt;/code&gt; を使用すると、制限が厳しくなりますが、通常は高速になります。たとえば、 &lt;code&gt;+&lt;/code&gt; を使用して強制すると &lt;code&gt;&quot;30px&quot;&lt;/code&gt; は &lt;code&gt;NaN&lt;/code&gt; を返し、parseIntとparseFloatは &lt;code&gt;30&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0c4f0651ebabc089d7c8928af4e7247378d85086" translate="yes" xml:space="preserve">
          <source>Now code you write once can be used with both Canvas (for performance) and SVG (for convenience). For a practical example, see &lt;a href=&quot;d3-shape&quot;&gt;d3-shape&lt;/a&gt;.</source>
          <target state="translated">これで、一度作成したコードをCanvas（パフォーマンス）とSVG（便宜）の両方で使用できます。実用的な例については、&lt;a href=&quot;d3-shape&quot;&gt;d3-shapeを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="72f5b032eb55c260979775f01887e868f43e04ae" translate="yes" xml:space="preserve">
          <source>Now consider a different id accessor that returns a string:</source>
          <target state="translated">次に、文字列を返す別の id アクセサを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="80bf05ac9118a202701dfee654c88434ade6ebec" translate="yes" xml:space="preserve">
          <source>Now rotate the hue by 90&amp;deg;, bump up the saturation, and format as a string for CSS:</source>
          <target state="translated">次に、色相を90&amp;deg;回転させ、彩度を上げ、CSSの文字列としてフォーマットします。</target>
        </trans-unit>
        <trans-unit id="c10f2dac597fc2f2bebbfe01fdb42b02ff144a56" translate="yes" xml:space="preserve">
          <source>Now say:</source>
          <target state="translated">今すぐ言ってくれ</target>
        </trans-unit>
        <trans-unit id="c8a26587f6391aa969782245b9ed42024f286225" translate="yes" xml:space="preserve">
          <source>Now the document body looks like this:</source>
          <target state="translated">これで、ドキュメント本体は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="60fcdf32b376bd0345d80dd3e918432cf0c18411" translate="yes" xml:space="preserve">
          <source>Now you get this:</source>
          <target state="translated">今、これを手に入れた。</target>
        </trans-unit>
        <trans-unit id="31b8a99a64ee349be0013630cc4e355a185ce9bf" translate="yes" xml:space="preserve">
          <source>Number Formats</source>
          <target state="translated">数字のフォーマット</target>
        </trans-unit>
        <trans-unit id="91eea461ac0b8ac090198b6a03031fdf02630b60" translate="yes" xml:space="preserve">
          <source>Number Formats (d3-format)</source>
          <target state="translated">数値フォーマット (d3フォーマット)</target>
        </trans-unit>
        <trans-unit id="1e0af7d1aa21f4aea96daf14fc462522f52f0aa4" translate="yes" xml:space="preserve">
          <source>Object interpolation is particularly useful for &lt;em&gt;dataspace interpolation&lt;/em&gt;, where data is interpolated rather than attribute values. For example, you can interpolate an object which describes an arc in a pie chart, and then use d3.svg.arc to compute the new SVG path data.</source>
          <target state="translated">オブジェクト補間は、属性値ではなくデータが補間されるデータ&lt;em&gt;スペース補間に&lt;/em&gt;特に役立ちます。たとえば、円グラフで円弧を表すオブジェクトを補間し、d3.svg.arcを使用して新しいSVGパスデータを計算できます。</target>
        </trans-unit>
        <trans-unit id="72a83add2c5ede877c10d23f302d3e17accbadab" translate="yes" xml:space="preserve">
          <source>Objects</source>
          <target state="translated">Objects</target>
        </trans-unit>
        <trans-unit id="f784b5df30291fc91739001f7217e7a15d3b1b9b" translate="yes" xml:space="preserve">
          <source>Of course, you can also compute the delay as a function of the data, or &lt;a href=&quot;d3-selection#selection_sort&quot;&gt;sort the selection&lt;/a&gt; before computed an index-based delay.</source>
          <target state="translated">もちろん、データの関数として遅延を計算したり、インデックスベースの遅延を計算する前&lt;a href=&quot;d3-selection#selection_sort&quot;&gt;に選択範囲を並べ替え&lt;/a&gt;たりすることもできます。</target>
        </trans-unit>
        <trans-unit id="f44870947c3d3303a32db54839e66065dcf6bcd1" translate="yes" xml:space="preserve">
          <source>Of course, you can also use a &lt;code&gt;for&lt;/code&gt; loop to defer many tasks:</source>
          <target state="translated">もちろん、 &lt;code&gt;for&lt;/code&gt; ループを使用して多くのタスクを延期することもできます。</target>
        </trans-unit>
        <trans-unit id="ee22b36836bba08678a559bcf3053069d6b0be9e" translate="yes" xml:space="preserve">
          <source>Often, the pad angle is not set directly on the arc generator, but is instead computed by the &lt;a href=&quot;#pies&quot;&gt;pie generator&lt;/a&gt; so as to ensure that the area of padded arcs is proportional to their value; see &lt;a href=&quot;#pie_padAngle&quot;&gt;&lt;em&gt;pie&lt;/em&gt;.padAngle&lt;/a&gt;. See the &lt;a href=&quot;http://bl.ocks.org/mbostock/3e961b4c97a1b543fff2&quot;&gt;pie padding animation&lt;/a&gt; for illustration. If you apply a constant pad angle to the arc generator directly, it tends to subtract disproportionately from smaller arcs, introducing distortion.</source>
          <target state="translated">多くの場合、パッドアングルはアークジェネレーターに直接設定されませんが、代わりに&lt;a href=&quot;#pies&quot;&gt;パイジェネレーター&lt;/a&gt;によって計算され、パッドを入れられたアークの面積がそれらの値に比例するようにします。&lt;a href=&quot;#pie_padAngle&quot;&gt;&lt;em&gt;pie&lt;/em&gt; .padAngleを&lt;/a&gt;参照してください。実例は&lt;a href=&quot;http://bl.ocks.org/mbostock/3e961b4c97a1b543fff2&quot;&gt;パイパディングのアニメーション&lt;/a&gt;をご覧ください。一定のパッド角度をアークジェネレーターに直接適用すると、小さいアークから不均衡に差し引かれ、歪みが生じます。</target>
        </trans-unit>
        <trans-unit id="aadce7a9130ba1bb4c40f111acfd06b1971942d5" translate="yes" xml:space="preserve">
          <source>Or dividing the domain into three equally-sized parts with different range values to compute an appropriate stroke width:</source>
          <target state="translated">あるいは、領域を異なる範囲の値を持つ3つの等身大の部分に分割して、適切なストローク幅を計算することもできます。</target>
        </trans-unit>
        <trans-unit id="668b2ae1bd66054ff8919d346f2abee840031d60" translate="yes" xml:space="preserve">
          <source>Or equivalently if the radius is instead defined as a constant:</source>
          <target state="translated">または同等に、半径が定数として定義されている場合。</target>
        </trans-unit>
        <trans-unit id="6285f41922b23760729e06297c111b7760b38ad3" translate="yes" xml:space="preserve">
          <source>Or for &lt;a href=&quot;d3-interpolate#interpolateCubehelix&quot;&gt;Cubehelix&lt;/a&gt; with a custom gamma:</source>
          <target state="translated">または、カスタムガンマを持つ&lt;a href=&quot;d3-interpolate#interpolateCubehelix&quot;&gt;Cubehelixの場合&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="6bca5fb2db47f71f01e1088a008556bf9671ab12" translate="yes" xml:space="preserve">
          <source>Or more simply, taking advantage of &lt;a href=&quot;#transform_toString&quot;&gt;&lt;em&gt;transform&lt;/em&gt;.toString&lt;/a&gt;:</source>
          <target state="translated">またはもっと簡単に、&lt;a href=&quot;#transform_toString&quot;&gt;&lt;em&gt;transform&lt;/em&gt; .toString&lt;/a&gt;を利用し&lt;em&gt;ます&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="454b8635a53c02497b29780cbb056fce23ef1e73" translate="yes" xml:space="preserve">
          <source>Or to apply a color encoding:</source>
          <target state="translated">または、カラーエンコードを適用します。</target>
        </trans-unit>
        <trans-unit id="753011f336d40120b9812bf4715a4720fea16f7a" translate="yes" xml:space="preserve">
          <source>Or to apply a custom rainbow interpolator:</source>
          <target state="translated">カスタムのレインボー補間を適用することもできます。</target>
        </trans-unit>
        <trans-unit id="e5991d40f78ecb5eacd8903af356b5eeb7b15142" translate="yes" xml:space="preserve">
          <source>Or to convert CSV to a newline-delimited JSON stream:</source>
          <target state="translated">または、CSVを改行で区切られたJSONストリームに変換します。</target>
        </trans-unit>
        <trans-unit id="f9843b3420dd0c5f4fb5e404392e6a1bc87916a2" translate="yes" xml:space="preserve">
          <source>Or to convert a newline-delimited JSON stream to CSV:</source>
          <target state="translated">または、改行で区切られたJSONストリームをCSVに変換します。</target>
        </trans-unit>
        <trans-unit id="88bcba4348c8a584c5277a018123b333e5687db1" translate="yes" xml:space="preserve">
          <source>Or to define an affine matrix transformation:</source>
          <target state="translated">または,アフィン行列変換を定義する.</target>
        </trans-unit>
        <trans-unit id="09820fa285a0bcb927dd718f74fad81b2d1003f5" translate="yes" xml:space="preserve">
          <source>Or to format:</source>
          <target state="translated">またはフォーマットすること。</target>
        </trans-unit>
        <trans-unit id="1f82eadb8b8422a3d70a1297a62defc272d58429" translate="yes" xml:space="preserve">
          <source>Or to interpolate from the current fill to blue, like &lt;a href=&quot;#transition_attr&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.attr&lt;/a&gt;:</source>
          <target state="translated">あるいは、現在の塗りつぶしから青に補間するには、&lt;a href=&quot;#transition_attr&quot;&gt;&lt;em&gt;transition&lt;/em&gt; .attrの&lt;/a&gt;ように：</target>
        </trans-unit>
        <trans-unit id="f070a928d1212479eb11ad28a4bdbd2fe2d3985b" translate="yes" xml:space="preserve">
          <source>Or to interpolate from the current fill to blue, like &lt;a href=&quot;#transition_style&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.style&lt;/a&gt;:</source>
          <target state="translated">または、現在の塗りつぶしから青に補間するには、&lt;a href=&quot;#transition_style&quot;&gt;&lt;em&gt;transition&lt;/em&gt; .styleの&lt;/a&gt;ように：</target>
        </trans-unit>
        <trans-unit id="73f6d3f80bc55d8f7486ae304a09a7f233b48bd4" translate="yes" xml:space="preserve">
          <source>Or use multiple path elements:</source>
          <target state="translated">または複数のパス要素を使用します。</target>
        </trans-unit>
        <trans-unit id="4ac384784cc2ba2b2bca348d207cb80953981382" translate="yes" xml:space="preserve">
          <source>Or using &lt;a href=&quot;#selection_select&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.select&lt;/a&gt;:</source>
          <target state="translated">または&lt;a href=&quot;#selection_select&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .select&lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="2617d08f3f1c717d17051b60a985d0141eb0e4c3" translate="yes" xml:space="preserve">
          <source>Or you can have the brush recenter when you click outside the current selection:</source>
          <target state="translated">あるいは現在の選択範囲の外側をクリックしたときにブラシを再配置することもできます。</target>
        </trans-unit>
        <trans-unit id="160a0a21ce7579aced7618f11600517c43540fe0" translate="yes" xml:space="preserve">
          <source>Or you can use it to render to a Canvas 2D context:</source>
          <target state="translated">または、Canvasの2Dコンテキストにレンダリングするために使用することもできます。</target>
        </trans-unit>
        <trans-unit id="b1665088e09641fbb908e524de8af697cd49c05a" translate="yes" xml:space="preserve">
          <source>Or, as part of the &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 default bundle&lt;/a&gt;:</source>
          <target state="translated">または、&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3デフォルトバンドルの&lt;/a&gt;一部として：</target>
        </trans-unit>
        <trans-unit id="2bab9deadea4500d72fcabf8fb68f269d7e595e9" translate="yes" xml:space="preserve">
          <source>Or, in combination with the &lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3 default bundle&lt;/a&gt;:</source>
          <target state="translated">または、&lt;a href=&quot;https://github.com/d3/d3&quot;&gt;D3デフォルトバンドル&lt;/a&gt;と組み合わせて：</target>
        </trans-unit>
        <trans-unit id="e4ddb916ff0cd9177f12c28d88210af32687dbee" translate="yes" xml:space="preserve">
          <source>Or, with a &lt;a href=&quot;#interpolate_gamma&quot;&gt;gamma&lt;/a&gt; of 3.0 to emphasize high-intensity values:</source>
          <target state="translated">または、高輝度値を強調するために&lt;a href=&quot;#interpolate_gamma&quot;&gt;ガンマ&lt;/a&gt; 3.0を使用します。</target>
        </trans-unit>
        <trans-unit id="eaae226817c111ba03f2d0e95f62be44ac921c53" translate="yes" xml:space="preserve">
          <source>Or, with a corrected &lt;a href=&quot;#interpolate_gamma&quot;&gt;gamma&lt;/a&gt; of 2.2:</source>
          <target state="translated">または、修正された&lt;a href=&quot;#interpolate_gamma&quot;&gt;ガンマ&lt;/a&gt; 2.2の場合：</target>
        </trans-unit>
        <trans-unit id="281a60b1860f88368a82ceb615b539e9872a8b5f" translate="yes" xml:space="preserve">
          <source>Ordinal Scales</source>
          <target state="translated">序数スケール</target>
        </trans-unit>
        <trans-unit id="4f400ec04d626627f25c404e3d60b96c4b4db7c2" translate="yes" xml:space="preserve">
          <source>Other Global Changes</source>
          <target state="translated">その他のグローバルな変化</target>
        </trans-unit>
        <trans-unit id="4f1782f6622180433b86d5a3904a20b8b713c02e" translate="yes" xml:space="preserve">
          <source>Output &lt;a href=&quot;https://github.com/mbostock/ndjson-cli&quot;&gt;newline-delimited JSON&lt;/a&gt; instead of a single JSON array.</source>
          <target state="translated">単一のJSON配列の代わりに&lt;a href=&quot;https://github.com/mbostock/ndjson-cli&quot;&gt;改行区切りのJSONを&lt;/a&gt;出力します。</target>
        </trans-unit>
        <trans-unit id="9f6d65eab9b4317d4e935910ccc8d85f5018da77" translate="yes" xml:space="preserve">
          <source>Output the version number.</source>
          <target state="translated">バージョン番号を出力します。</target>
        </trans-unit>
        <trans-unit id="e45cc616c410c0ff50a42de9abbec71fa4ca00f9" translate="yes" xml:space="preserve">
          <source>Output usage information.</source>
          <target state="translated">使用情報を出力します。</target>
        </trans-unit>
        <trans-unit id="4ee6a5c4bbadcc2186ae08a814ad367bd29f5d25" translate="yes" xml:space="preserve">
          <source>Overlapping nodes are resolved through iterative relaxation. For each node, the other nodes that are anticipated to overlap at the next tick (using the anticipated positions ⟨&lt;em&gt;x&lt;/em&gt; + &lt;em&gt;vx&lt;/em&gt;,&lt;em&gt;y&lt;/em&gt; + &lt;em&gt;vy&lt;/em&gt;⟩) are determined; the node&amp;rsquo;s velocity is then modified to push the node out of each overlapping node. The change in velocity is dampened by the force&amp;rsquo;s strength such that the resolution of simultaneous overlaps can be blended together to find a stable solution.</source>
          <target state="translated">重複するノードは、反復緩和によって解決されます。各ノードについて、次ティック（予想される位置を用い⟨でオーバーラップすることが予想されている他のノード&lt;em&gt;X&lt;/em&gt; + &lt;em&gt;VX&lt;/em&gt;、&lt;em&gt;Y&lt;/em&gt; + &lt;em&gt;VY&lt;/em&gt; ⟩）が決定されます。次に、ノードの速度を変更して、ノードを各重なり合うノードから押し出します。速度の変化は力の強さによって弱められ、同時オーバーラップの解像度をブレンドして安定した解を見つけることができます。</target>
        </trans-unit>
        <trans-unit id="511993d3c99719e38a6779073019dacd7178ddb9" translate="yes" xml:space="preserve">
          <source>P</source>
          <target state="translated">P</target>
        </trans-unit>
        <trans-unit id="152a5035bf6b0ed4e89698b9833e019df9581216" translate="yes" xml:space="preserve">
          <source>Pack</source>
          <target state="translated">Pack</target>
        </trans-unit>
        <trans-unit id="e9e18810fdf9003672d54de0115d28f144d7c736" translate="yes" xml:space="preserve">
          <source>Packs the specified array of &lt;em&gt;circles&lt;/em&gt;, each of which must have a &lt;em&gt;circle&lt;/em&gt;.r property specifying the circle&amp;rsquo;s radius. Assigns the following properties to each circle:</source>
          <target state="translated">指定された&lt;em&gt;円の&lt;/em&gt;配列をパックします。各&lt;em&gt;円&lt;/em&gt;には、円の半径を指定する&lt;em&gt;circle&lt;/em&gt; .rプロパティが必要です。各円に次のプロパティを割り当てます。</target>
        </trans-unit>
        <trans-unit id="1e5e920a37b3ef26faac9bacfb7b1ab92aa15585" translate="yes" xml:space="preserve">
          <source>Pan and zoom SVG, HTML or Canvas using mouse or touch input.</source>
          <target state="translated">マウスやタッチ入力を使ってSVG、HTML、Canvasをパン、ズームします。</target>
        </trans-unit>
        <trans-unit id="06167685d372c2ceb600a4c5018f0d021daf37b2" translate="yes" xml:space="preserve">
          <source>Panning and zooming are popular interaction techniques which let the user focus on a region of interest by restricting the view. It is easy to learn due to direct manipulation: click-and-drag to pan (translate), spin the wheel to zoom (scale), or use touch. Panning and zooming are widely used in web-based mapping, but can also be used with visualizations such as time-series and scatterplots.</source>
          <target state="translated">パンやズームは、ビューを制限して興味のある領域にフォーカスさせる人気のインタラクション技術です。クリック&amp;ドラッグでパン(移動)したり、ホイールを回転させてズーム(拡大縮小)したり、タッチで操作することができます。パンやズームはWebベースのマッピングで広く使われていますが、時系列や散布図などのビジュアライゼーションでも使用できます。</target>
        </trans-unit>
        <trans-unit id="23d692f07a3fb646a8e54fcd2dc724f4ea2ed2c6" translate="yes" xml:space="preserve">
          <source>Parent</source>
          <target state="translated">Parent</target>
        </trans-unit>
        <trans-unit id="069d90636cfc5351c6fd426bc655789176cf5968" translate="yes" xml:space="preserve">
          <source>Parse and format delimiter-separated values, most commonly CSV and TSV.</source>
          <target state="translated">区切り文字で区切られた値を解析してフォーマットします。</target>
        </trans-unit>
        <trans-unit id="24f1b31bfc081f63b775dba8cb77206d49eba34d" translate="yes" xml:space="preserve">
          <source>Parse and format times, inspired by strptime and strftime.</source>
          <target state="translated">strptimeとstrftimeに触発された構文解析と書式設定を行います。</target>
        </trans-unit>
        <trans-unit id="6a977c409d8ae9c54fa05e37d86d5c1019311e0d" translate="yes" xml:space="preserve">
          <source>Parses the specified &lt;a href=&quot;http://www.w3.org/TR/css3-color/#colorunits&quot;&gt;CSS Color Module Level 3&lt;/a&gt;&lt;em&gt;specifier&lt;/em&gt; string, returning an &lt;a href=&quot;#rgb&quot;&gt;RGB&lt;/a&gt; or &lt;a href=&quot;#hsl&quot;&gt;HSL&lt;/a&gt; color. If the specifier was not valid, null is returned. Some examples:</source>
          <target state="translated">指定された&lt;a href=&quot;http://www.w3.org/TR/css3-color/#colorunits&quot;&gt;CSSカラーモジュールレベル3 &lt;/a&gt;&lt;em&gt;指定子&lt;/em&gt;文字列を解析し、&lt;a href=&quot;#rgb&quot;&gt;RGB&lt;/a&gt;または&lt;a href=&quot;#hsl&quot;&gt;HSL&lt;/a&gt;カラーを返します。指定子が有効でない場合、nullが返されます。いくつかの例：</target>
        </trans-unit>
        <trans-unit id="14fec6dbf9f034c852cdfbdf7c38811d0eeeec78" translate="yes" xml:space="preserve">
          <source>Parses the specified &lt;em&gt;specifier&lt;/em&gt;, returning an object with exposed fields that correspond to the &lt;a href=&quot;#locale_format&quot;&gt;format specification mini-language&lt;/a&gt; and a toString method that reconstructs the specifier. For example, &lt;code&gt;formatSpecifier(&quot;s&quot;)&lt;/code&gt; returns:</source>
          <target state="translated">指定さ&lt;em&gt;れ&lt;/em&gt;た指定&lt;em&gt;子を&lt;/em&gt;解析し、&lt;a href=&quot;#locale_format&quot;&gt;形式仕様のミニ言語に&lt;/a&gt;対応する公開フィールドを持つオブジェクトと、指定子を再構築するtoStringメソッドを返します。たとえば、 &lt;code&gt;formatSpecifier(&quot;s&quot;)&lt;/code&gt; は次を返します。</target>
        </trans-unit>
        <trans-unit id="3a80f1dc42fd47a32188cb4677fa9bd287b0aa60" translate="yes" xml:space="preserve">
          <source>Parses the specified &lt;em&gt;string&lt;/em&gt;, which must be in the delimiter-separated values format with the appropriate delimiter, returning an array of arrays representing the parsed rows.</source>
          <target state="translated">指定された&lt;em&gt;stringを&lt;/em&gt;解析します。これは、適切な区切り文字を使用した区切り記号で区切られた値の形式である必要があり、解析された行を表す配列の配列を返します。</target>
        </trans-unit>
        <trans-unit id="341b199ef311eb689f7ab2c8dade6a7d720e66e0" translate="yes" xml:space="preserve">
          <source>Parses the specified &lt;em&gt;string&lt;/em&gt;, which must be in the delimiter-separated values format with the appropriate delimiter, returning an array of objects representing the parsed rows.</source>
          <target state="translated">指定された&lt;em&gt;stringを&lt;/em&gt;解析します。これは、適切な区切り文字を使用した区切り記号で区切られた値の形式である必要があり、解析された行を表すオブジェクトの配列を返します。</target>
        </trans-unit>
        <trans-unit id="943df06a52fbfe34ca375a62898de53e7d01f42f" translate="yes" xml:space="preserve">
          <source>Partition</source>
          <target state="translated">Partition</target>
        </trans-unit>
        <trans-unit id="84462ffa84d5c522de4e5707bd2a436cffc32ce9" translate="yes" xml:space="preserve">
          <source>Passing a function to &lt;em&gt;selection&lt;/em&gt;.attrs is convenient for sharing some computational effort or state across multiple attributes, or for specifying dynamically which attributes to set.</source>
          <target state="translated">関数を&lt;em&gt;selection&lt;/em&gt; .attrsに渡すと、複数の属性間で計算の労力や状態を共有したり、設定する属性を動的に指定したりするのに便利です。</target>
        </trans-unit>
        <trans-unit id="0523c4007844b00b7d728907d2618655377db439" translate="yes" xml:space="preserve">
          <source>Passing a function to &lt;em&gt;selection&lt;/em&gt;.properties is convenient for sharing some computational effort or state across multiple properties, or for specifying dynamically which properties to set.</source>
          <target state="translated">関数を&lt;em&gt;selection&lt;/em&gt; .propertiesに渡すと、複数のプロパティ間で計算の労力や状態を共有したり、設定するプロパティを動的に指定したりするのに便利です。</target>
        </trans-unit>
        <trans-unit id="8ff06d18de5329fc23b27a050bebe5ee9c160aa7" translate="yes" xml:space="preserve">
          <source>Passing a function to &lt;em&gt;selection&lt;/em&gt;.styles is convenient for sharing some computational effort or state across multiple style properties, or for specifying dynamically which style properties to set.</source>
          <target state="translated">関数を&lt;em&gt;selection&lt;/em&gt; .stylesに渡すと、複数のスタイルプロパティ間で計算の労力や状態を共有したり、設定するスタイルプロパティを動的に指定したりするのに便利です。</target>
        </trans-unit>
        <trans-unit id="519e39132bb98418cc0483cc446ccf5f3c8dcffe" translate="yes" xml:space="preserve">
          <source>Path</source>
          <target state="translated">Path</target>
        </trans-unit>
        <trans-unit id="13e7e11722f7d8309c367ea7823bd6cd32011ced" translate="yes" xml:space="preserve">
          <source>Paths</source>
          <target state="translated">Paths</target>
        </trans-unit>
        <trans-unit id="d2e38d19da2ab7f10e0c07cc661fecf2e78a136b" translate="yes" xml:space="preserve">
          <source>Paths (d3-path)</source>
          <target state="translated">パス (d3-path)</target>
        </trans-unit>
        <trans-unit id="cc41265ef4250bd1d92f5220ee5e4c12d63561f9" translate="yes" xml:space="preserve">
          <source>Performs a linear scan of the specified &lt;em&gt;array&lt;/em&gt;, returning the index of the least element according to the specified &lt;em&gt;comparator&lt;/em&gt;. If the given &lt;em&gt;array&lt;/em&gt; contains no comparable elements (&lt;em&gt;i.e.&lt;/em&gt;, the comparator returns NaN when comparing each element to itself), returns undefined. If &lt;em&gt;comparator&lt;/em&gt; is not specified, it defaults to &lt;a href=&quot;#ascending&quot;&gt;ascending&lt;/a&gt;. For example:</source>
          <target state="translated">指定された&lt;em&gt;配列の&lt;/em&gt;線形スキャンを実行し、指定された&lt;em&gt;コンパレータ&lt;/em&gt;に従って最小要素のインデックスを返します。指定された&lt;em&gt;配列&lt;/em&gt;に比較可能な要素が含まれていない場合（&lt;em&gt;つまり&lt;/em&gt;、各要素をそれ自体と比較すると、コンパレーターはNaNを返します）、未定義を返します。&lt;em&gt;コンパレーター&lt;/em&gt;が指定されていない場合、デフォルトで&lt;a href=&quot;#ascending&quot;&gt;昇順になり&lt;/a&gt;ます。例えば：</target>
        </trans-unit>
        <trans-unit id="14d37bd3fab3edb2b53444db11b2876647e74f72" translate="yes" xml:space="preserve">
          <source>Phoebe Bright&amp;rsquo;s &lt;a href=&quot;http://bl.ocks.org/phoebebright/raw/3176159/&quot;&gt;D3 Nest Tutorial and examples&lt;/a&gt;</source>
          <target state="translated">Phoebe Brightの&lt;a href=&quot;http://bl.ocks.org/phoebebright/raw/3176159/&quot;&gt;D3 Nestチュートリアルと例&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65074d6485feda092789da1d0e6cf89a321054ab" translate="yes" xml:space="preserve">
          <source>Piecewise</source>
          <target state="translated">Piecewise</target>
        </trans-unit>
        <trans-unit id="7489b5107e5e32276cc45145ed4f076366e98011" translate="yes" xml:space="preserve">
          <source>Pies</source>
          <target state="translated">Pies</target>
        </trans-unit>
        <trans-unit id="e15b57c2b5edd8a37422e896ba25cd4e51618728" translate="yes" xml:space="preserve">
          <source>Point - a single position.</source>
          <target state="translated">ポイント-単一の位置。</target>
        </trans-unit>
        <trans-unit id="1f584ddd5bd967bb968c2ff8e2e1e8f264d3d87c" translate="yes" xml:space="preserve">
          <source>Point Scales</source>
          <target state="translated">ポイントスケール</target>
        </trans-unit>
        <trans-unit id="88b81483c173584fa78e84d4253b5f5f8b800c9f" translate="yes" xml:space="preserve">
          <source>Point scales are a variant of &lt;a href=&quot;#band-scales&quot;&gt;band scales&lt;/a&gt; with the bandwidth fixed to zero. Point scales are typically used for scatterplots with an ordinal or categorical dimension. The &lt;a href=&quot;#ordinal_unknown&quot;&gt;unknown value&lt;/a&gt; of a point scale is always undefined: they do not allow implicit domain construction.</source>
          <target state="translated">ポイントスケールは、帯域幅がゼロに固定された&lt;a href=&quot;#band-scales&quot;&gt;バンドスケールの&lt;/a&gt;バリアントです。ポイントスケールは通常、順序次元またはカテゴリカル次元の散布図に使用されます。ポイントスケールの&lt;a href=&quot;#ordinal_unknown&quot;&gt;不明な値&lt;/a&gt;は常に未定義です。暗黙のドメイン構築は許可されません。</target>
        </trans-unit>
        <trans-unit id="85066b2ca9c0c34813c402aa864fd724b6ea940f" translate="yes" xml:space="preserve">
          <source>Polygon</source>
          <target state="translated">Polygon</target>
        </trans-unit>
        <trans-unit id="322fb1949c16ec62e96a987d399142b26369e849" translate="yes" xml:space="preserve">
          <source>Polygon - an array of arrays of positions forming a polygon (possibly with holes).</source>
          <target state="translated">多角形-多角形を形成する位置の配列(穴がある場合もあります).</target>
        </trans-unit>
        <trans-unit id="733b829430dbc62007d148d5c97b0928e8e17a10" translate="yes" xml:space="preserve">
          <source>Polygons</source>
          <target state="translated">Polygons</target>
        </trans-unit>
        <trans-unit id="ff83c25e971f9b908c5b3c3138c1d4d4eab8cc00" translate="yes" xml:space="preserve">
          <source>Polygons (d3-polygon)</source>
          <target state="translated">ポリゴン (d3-ポリゴン)</target>
        </trans-unit>
        <trans-unit id="096356b6a29733d9c8c7b531a23af383a9d41f27" translate="yes" xml:space="preserve">
          <source>Polyhedral Projections</source>
          <target state="translated">多面体投射</target>
        </trans-unit>
        <trans-unit id="09d5f213b0343075b7ca3944117c7a8541491fdc" translate="yes" xml:space="preserve">
          <source>Polynomial easing; raises &lt;em&gt;t&lt;/em&gt; to the specified &lt;a href=&quot;#poly_exponent&quot;&gt;exponent&lt;/a&gt;. If the exponent is not specified, it defaults to 3, equivalent to &lt;a href=&quot;#easeCubicIn&quot;&gt;cubicIn&lt;/a&gt;.</source>
          <target state="translated">多項式緩和; 提起&lt;em&gt;トンを&lt;/em&gt;、指定し&lt;a href=&quot;#poly_exponent&quot;&gt;た指数&lt;/a&gt;。指数が指定されていない場合、デフォルトは3で、&lt;a href=&quot;#easeCubicIn&quot;&gt;cubicIn&lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="86ba514122e17b32a635c456e65393d5e7dd0078" translate="yes" xml:space="preserve">
          <source>Positioning</source>
          <target state="translated">Positioning</target>
        </trans-unit>
        <trans-unit id="af0ec28cddff380f5a876a1afe1390d214100f34" translate="yes" xml:space="preserve">
          <source>Positive values are stacked above zero, while negative values are &lt;a href=&quot;https://bl.ocks.org/mbostock/b5935342c6d21928111928401e2c8608&quot;&gt;stacked below zero&lt;/a&gt;.</source>
          <target state="translated">正の値はゼロより上に積み上げられ、負の値は&lt;a href=&quot;https://bl.ocks.org/mbostock/b5935342c6d21928111928401e2c8608&quot;&gt;ゼロより下に積み上げられます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f760c9069643d305c26d818cfeb1c816085f714a" translate="yes" xml:space="preserve">
          <source>Post-clipping occurs on the plane, when a projection is bounded to a certain extent such as a rectangle.</source>
          <target state="translated">ポストクリッピングは、平面上で、長方形などの一定の範囲に射影が拘束されている場合に発生します。</target>
        </trans-unit>
        <trans-unit id="efcbb01ed5222cf96109123f4b62facada72510e" translate="yes" xml:space="preserve">
          <source>Power Scales</source>
          <target state="translated">パワースケール</target>
        </trans-unit>
        <trans-unit id="ace21480755104b492b3060db99fdb6cb736cc73" translate="yes" xml:space="preserve">
          <source>Power scales are similar to &lt;a href=&quot;#linear-scales&quot;&gt;linear scales&lt;/a&gt;, except an exponential transform is applied to the input domain value before the output range value is computed. Each range value &lt;em&gt;y&lt;/em&gt; can be expressed as a function of the domain value &lt;em&gt;x&lt;/em&gt;: &lt;em&gt;y&lt;/em&gt; = &lt;em&gt;mx^k&lt;/em&gt; + &lt;em&gt;b&lt;/em&gt;, where &lt;em&gt;k&lt;/em&gt; is the &lt;a href=&quot;#pow_exponent&quot;&gt;exponent&lt;/a&gt; value. Power scales also support negative domain values, in which case the input value and the resulting output value are multiplied by -1.</source>
          <target state="translated">パワースケールは、出力範囲値が計算される前に入力ドメイン値に指数変換が適用されることを除いて、&lt;a href=&quot;#linear-scales&quot;&gt;線形スケール&lt;/a&gt;に似ています。各範囲値&lt;em&gt;y&lt;/em&gt;は、ドメイン値&lt;em&gt;x&lt;/em&gt;：&lt;em&gt;y&lt;/em&gt; = &lt;em&gt;mx ^ k&lt;/em&gt; + &lt;em&gt;bの&lt;/em&gt;関数として表すことができます。ここで、&lt;em&gt;k&lt;/em&gt;は&lt;a href=&quot;#pow_exponent&quot;&gt;指数&lt;/a&gt;値です。パワースケールは負のドメイン値もサポートします。この場合、入力値と結果の出力値は-1で乗算されます。</target>
        </trans-unit>
        <trans-unit id="f87b7ccd0099c264cf7e6f88fe9117b758f46740" translate="yes" xml:space="preserve">
          <source>Pre-clipping occurs in geographic coordinates. Cutting along the antimeridian line, or clipping along a small circle are the most common strategies.</source>
          <target state="translated">プリクリッピングは地理的座標で行われます。反円線に沿ってカットするか、小さな円に沿ってクリッピングするのが最も一般的な戦略です。</target>
        </trans-unit>
        <trans-unit id="12036f8332fa50761fee5c8a5f8538c2e988a85c" translate="yes" xml:space="preserve">
          <source>Prevents native drag-and-drop and text selection on the specified &lt;em&gt;window&lt;/em&gt;. As an alternative to preventing the default action of mousedown events (see &lt;a href=&quot;https://github.com/d3/d3-drag/issues/9&quot;&gt;#9&lt;/a&gt;), this method prevents undesirable default actions following mousedown. In supported browsers, this means capturing dragstart and selectstart events, preventing the associated default actions, and immediately stopping their propagation. In browsers that do not support selection events, the user-select CSS property is set to none on the document element. This method is intended to be called on mousedown, followed by &lt;a href=&quot;#dragEnable&quot;&gt;d3.dragEnable&lt;/a&gt; on mouseup.</source>
          <target state="translated">指定された&lt;em&gt;ウィンドウでの&lt;/em&gt;ネイティブのドラッグアンドドロップとテキスト選択を禁止し&lt;em&gt;ます&lt;/em&gt;。マウスダウンイベントのデフォルトアクション（&lt;a href=&quot;https://github.com/d3/d3-drag/issues/9&quot;&gt;＃9を&lt;/a&gt;参照）を防止する代わりに、このメソッドはマウスダウンに続く望ましくないデフォルトアクションを防止します。サポートされているブラウザでは、これはdragstartイベントとselectstartイベントをキャプチャし、関連するデフォルトアクションを防止し、それらの伝播を直ちに停止することを意味します。選択イベントをサポートしていないブラウザーでは、ドキュメント要素のuser-select CSSプロパティがnoneに設定されています。この方法は、続いてマウスダウンに呼び出されることを意図している&lt;a href=&quot;#dragEnable&quot;&gt;d3.dragEnable&lt;/a&gt;のmouseupに。</target>
        </trans-unit>
        <trans-unit id="54e90d82bbc18d400b6a16af2a6929da79dfb46a" translate="yes" xml:space="preserve">
          <source>Produces a &lt;a href=&quot;https://en.wikipedia.org/wiki/Spline_interpolation&quot;&gt;natural&lt;/a&gt;&lt;a href=&quot;http://mathworld.wolfram.com/CubicSpline.html&quot;&gt;cubic spline&lt;/a&gt; with the second derivative of the spline set to zero at the endpoints.</source>
          <target state="translated">端点でスプラインの2次導関数がゼロに設定された&lt;a href=&quot;https://en.wikipedia.org/wiki/Spline_interpolation&quot;&gt;自然な&lt;/a&gt;&lt;a href=&quot;http://mathworld.wolfram.com/CubicSpline.html&quot;&gt;3次スプライン&lt;/a&gt;を生成します。</target>
        </trans-unit>
        <trans-unit id="4dd86817dfd4e52c051e312b78c9c4565bf34c81" translate="yes" xml:space="preserve">
          <source>Produces a closed cubic &lt;a href=&quot;https://en.wikipedia.org/wiki/B-spline&quot;&gt;basis spline&lt;/a&gt; using the specified control points. When a line segment ends, the first three control points are repeated, producing a closed loop with C2 continuity.</source>
          <target state="translated">指定された制御点を使用して、閉じた3次&lt;a href=&quot;https://en.wikipedia.org/wiki/B-spline&quot;&gt;基底スプライン&lt;/a&gt;を作成します。線分が終了すると、最初の3つの制御点が繰り返され、C2連続性を持つ閉ループが生成されます。</target>
        </trans-unit>
        <trans-unit id="ac4b757652f11555adc23df458afd129a26ecb1e" translate="yes" xml:space="preserve">
          <source>Produces a closed cubic &lt;a href=&quot;https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Cardinal_spline&quot;&gt;cardinal spline&lt;/a&gt; using the specified control points. When a line segment ends, the first three control points are repeated, producing a closed loop. The default &lt;a href=&quot;#curveCardinal_tension&quot;&gt;tension&lt;/a&gt; is 0.</source>
          <target state="translated">指定された制御点を使用して、閉じた3次&lt;a href=&quot;https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Cardinal_spline&quot;&gt;カーディナルスプライン&lt;/a&gt;を作成します。線分が終了すると、最初の3つの制御点が繰り返され、閉ループが生成されます。デフォルトの&lt;a href=&quot;#curveCardinal_tension&quot;&gt;張力&lt;/a&gt;は0です。</target>
        </trans-unit>
        <trans-unit id="9094f0098a86094eaa2f40d1fddd4a2631ef5ae0" translate="yes" xml:space="preserve">
          <source>Produces a closed cubic Catmull&amp;ndash;Rom spline using the specified control points and the parameter &lt;a href=&quot;#catmullRom_alpha&quot;&gt;&lt;em&gt;alpha&lt;/em&gt;&lt;/a&gt;, which defaults to 0.5, as proposed by Yuksel et al. When a line segment ends, the first three control points are repeated, producing a closed loop.</source>
          <target state="translated">Yukselらによって提案されたように、指定された制御点とパラメーター&lt;a href=&quot;#catmullRom_alpha&quot;&gt;&lt;em&gt;alpha&lt;/em&gt;&lt;/a&gt;（デフォルトは0.5）を使用して、閉じた3次Catmull&amp;ndash;Romスプラインを生成します。線分が終了すると、最初の3つの制御点が繰り返され、閉ループが生成されます。</target>
        </trans-unit>
        <trans-unit id="e2bd8e470d1f117db1d0d1fc05d603fab1ac77aa" translate="yes" xml:space="preserve">
          <source>Produces a closed polyline through the specified points by repeating the first point when the line segment ends.</source>
          <target state="translated">線分の終了時に最初の点を繰り返すことで、指定された点を通る閉じたポリラインを生成します。</target>
        </trans-unit>
        <trans-unit id="ece991e6679bc32760b6852b8941ee931b4f19bc" translate="yes" xml:space="preserve">
          <source>Produces a cubic &lt;a href=&quot;https://en.wikipedia.org/wiki/B-spline&quot;&gt;basis spline&lt;/a&gt; using the specified control points. The first and last points are triplicated such that the spline starts at the first point and ends at the last point, and is tangent to the line between the first and second points, and to the line between the penultimate and last points.</source>
          <target state="translated">指定された制御点を使用して3次&lt;a href=&quot;https://en.wikipedia.org/wiki/B-spline&quot;&gt;基準スプライン&lt;/a&gt;を作成します。最初と最後の点は3つに分かれており、スプラインは最初の点から始まり最後の点で終わり、最初と2番目の点の間の線、および最後から2番目の点と最後の点の間の線に接しています。</target>
        </trans-unit>
        <trans-unit id="23553a9b2bffcf3cca0e46d4c1704776bcf8883d" translate="yes" xml:space="preserve">
          <source>Produces a cubic &lt;a href=&quot;https://en.wikipedia.org/wiki/B-spline&quot;&gt;basis spline&lt;/a&gt; using the specified control points. Unlike &lt;a href=&quot;#basis&quot;&gt;basis&lt;/a&gt;, the first and last points are not repeated, and thus the curve typically does not intersect these points.</source>
          <target state="translated">指定された制御点を使用して3次&lt;a href=&quot;https://en.wikipedia.org/wiki/B-spline&quot;&gt;基準スプライン&lt;/a&gt;を作成します。&lt;a href=&quot;#basis&quot;&gt;ベーシス&lt;/a&gt;とは異なり、最初と最後のポイントは繰り返されないため、通常、カーブはこれらのポイントと交差しません。</target>
        </trans-unit>
        <trans-unit id="a7d18d787d2bf56ef45dd3567991986ad9d70e6e" translate="yes" xml:space="preserve">
          <source>Produces a cubic &lt;a href=&quot;https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Cardinal_spline&quot;&gt;cardinal spline&lt;/a&gt; using the specified control points, with one-sided differences used for the first and last piece. The default &lt;a href=&quot;#curveCardinal_tension&quot;&gt;tension&lt;/a&gt; is 0.</source>
          <target state="translated">指定された制御点を使用して3次&lt;a href=&quot;https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Cardinal_spline&quot;&gt;カーディナルスプライン&lt;/a&gt;を作成します。最初と最後のピースには片側差分が使用されます。デフォルトの&lt;a href=&quot;#curveCardinal_tension&quot;&gt;張力&lt;/a&gt;は0です。</target>
        </trans-unit>
        <trans-unit id="f3e562e63d893edcde1631b7a4cbe8309343ee36" translate="yes" xml:space="preserve">
          <source>Produces a cubic &lt;a href=&quot;https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Cardinal_spline&quot;&gt;cardinal spline&lt;/a&gt; using the specified control points. Unlike &lt;a href=&quot;#curveCardinal&quot;&gt;curveCardinal&lt;/a&gt;, one-sided differences are not used for the first and last piece, and thus the curve starts at the second point and ends at the penultimate point. The default &lt;a href=&quot;#curveCardinal_tension&quot;&gt;tension&lt;/a&gt; is 0.</source>
          <target state="translated">指定された制御点を使用して、3次&lt;a href=&quot;https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Cardinal_spline&quot;&gt;カーディナルスプライン&lt;/a&gt;を作成します。&lt;a href=&quot;#curveCardinal&quot;&gt;curveCardinal&lt;/a&gt;とは異なり、片側差分は最初と最後のピースには使用されないため、カーブは2番目のポイントで始まり、最後から2番目のポイントで終わります。デフォルトの&lt;a href=&quot;#curveCardinal_tension&quot;&gt;張力&lt;/a&gt;は0です。</target>
        </trans-unit>
        <trans-unit id="81357407d43b48073a19512f86571b46640335c5" translate="yes" xml:space="preserve">
          <source>Produces a cubic Catmull&amp;ndash;Rom spline using the specified control points and the parameter &lt;a href=&quot;#catmullRom_alpha&quot;&gt;&lt;em&gt;alpha&lt;/em&gt;&lt;/a&gt;, which defaults to 0.5, as proposed by Yuksel et al. Unlike &lt;a href=&quot;#curveCatmullRom&quot;&gt;curveCatmullRom&lt;/a&gt;, one-sided differences are not used for the first and last piece, and thus the curve starts at the second point and ends at the penultimate point.</source>
          <target state="translated">Yuksel et al。によって提案されたように、指定された制御点とパラメーター&lt;a href=&quot;#catmullRom_alpha&quot;&gt;&lt;em&gt;alpha&lt;/em&gt;&lt;/a&gt;を使用して3次Catmull&amp;ndash;Romスプラインを生成します。パラメーター&lt;em&gt;alphaの&lt;/em&gt;デフォルトは0.5です。&lt;a href=&quot;#curveCatmullRom&quot;&gt;curveCatmullRom&lt;/a&gt;とは異なり、片側差分は最初と最後のピースには使用されないため、カーブは2番目のポイントで始まり、最後から2番目のポイントで終わります。</target>
        </trans-unit>
        <trans-unit id="828caace37a7fdb8e2ded8260167bed06e7c9b9f" translate="yes" xml:space="preserve">
          <source>Produces a cubic Catmull&amp;ndash;Rom spline using the specified control points and the parameter &lt;a href=&quot;#catmullRom_alpha&quot;&gt;&lt;em&gt;alpha&lt;/em&gt;&lt;/a&gt;, which defaults to 0.5, as proposed by Yuksel et al. in &lt;a href=&quot;http://www.cemyuksel.com/research/catmullrom_param/&quot;&gt;On the Parameterization of Catmull&amp;ndash;Rom Curves&lt;/a&gt;, with one-sided differences used for the first and last piece.</source>
          <target state="translated">Yuksel et al。によって提案されたように、指定された制御点とパラメーター&lt;a href=&quot;#catmullRom_alpha&quot;&gt;&lt;em&gt;alpha&lt;/em&gt;&lt;/a&gt;を使用して3次Catmull&amp;ndash;Romスプラインを生成します。パラメーター&lt;em&gt;alphaの&lt;/em&gt;デフォルトは0.5です。で&lt;a href=&quot;http://www.cemyuksel.com/research/catmullrom_param/&quot;&gt;キャットマル-Romの曲線のパラメータ化には&lt;/a&gt;、最初と最後のピースに使用一方的な違いを持ちます。</target>
        </trans-unit>
        <trans-unit id="c7a37bf54d05d17edd42c295a19536784a8211ba" translate="yes" xml:space="preserve">
          <source>Produces a cubic spline that &lt;a href=&quot;https://en.wikipedia.org/wiki/Monotone_cubic_interpolation&quot;&gt;preserves monotonicity&lt;/a&gt; in &lt;em&gt;x&lt;/em&gt;, assuming monotonicity in &lt;em&gt;y&lt;/em&gt;, as proposed by Steffen in &lt;a href=&quot;http://adsabs.harvard.edu/full/1990A%26A...239..443S&quot;&gt;A simple method for monotonic interpolation in one dimension&lt;/a&gt;: &amp;ldquo;a smooth curve with continuous first-order derivatives that passes through any given set of data points without spurious oscillations. Local extrema can occur only at grid points where they are given by the data, but not in between two adjacent grid points.&amp;rdquo;</source>
          <target state="translated">Steffen &lt;a href=&quot;http://adsabs.harvard.edu/full/1990A%26A...239..443S&quot;&gt;が1次元の単調補間の簡単な方法&lt;/a&gt;で提案したように、&lt;em&gt;yの&lt;/em&gt;単調性を仮定して、&lt;em&gt;xの&lt;/em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Monotone_cubic_interpolation&quot;&gt;単調性&lt;/a&gt;を維持する3次スプラインを生成します。スプリアス振動。ローカル極値は、データによって与えられるグリッドポイントでのみ発生し、2つの隣接するグリッドポイントの間では発生しません。」&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e9eb3340b3c94ec46ae4a5611d256e2bdd186038" translate="yes" xml:space="preserve">
          <source>Produces a cubic spline that &lt;a href=&quot;https://en.wikipedia.org/wiki/Monotone_cubic_interpolation&quot;&gt;preserves monotonicity&lt;/a&gt; in &lt;em&gt;y&lt;/em&gt;, assuming monotonicity in &lt;em&gt;x&lt;/em&gt;, as proposed by Steffen in &lt;a href=&quot;http://adsabs.harvard.edu/full/1990A%26A...239..443S&quot;&gt;A simple method for monotonic interpolation in one dimension&lt;/a&gt;: &amp;ldquo;a smooth curve with continuous first-order derivatives that passes through any given set of data points without spurious oscillations. Local extrema can occur only at grid points where they are given by the data, but not in between two adjacent grid points.&amp;rdquo;</source>
          <target state="translated">Steffen &lt;a href=&quot;http://adsabs.harvard.edu/full/1990A%26A...239..443S&quot;&gt;が1次元の単調補間の簡単な方法&lt;/a&gt;で提案したように、&lt;em&gt;xの&lt;/em&gt;単調性を仮定して、&lt;em&gt;yの&lt;/em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Monotone_cubic_interpolation&quot;&gt;単調性&lt;/a&gt;を維持する3次スプラインを生成します。スプリアス振動。ローカル極値は、データによって与えられるグリッドポイントでのみ発生し、2つの隣接するグリッドポイントの間では発生しません。」&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8ffd6fc926c164cf8140f21c12291fc982c9c966" translate="yes" xml:space="preserve">
          <source>Produces a piecewise constant function (a &lt;a href=&quot;https://en.wikipedia.org/wiki/Step_function&quot;&gt;step function&lt;/a&gt;) consisting of alternating horizontal and vertical lines. The &lt;em&gt;y&lt;/em&gt;-value changes after the &lt;em&gt;x&lt;/em&gt;-value.</source>
          <target state="translated">交互の水平線と垂直線で構成される区分定数関数（&lt;a href=&quot;https://en.wikipedia.org/wiki/Step_function&quot;&gt;ステップ関数&lt;/a&gt;）を生成します。&lt;em&gt;Y&lt;/em&gt;後-value変更&lt;em&gt;X&lt;/em&gt; -value。</target>
        </trans-unit>
        <trans-unit id="4d00d2d1233816a001057db6954643d83ff7ae0e" translate="yes" xml:space="preserve">
          <source>Produces a piecewise constant function (a &lt;a href=&quot;https://en.wikipedia.org/wiki/Step_function&quot;&gt;step function&lt;/a&gt;) consisting of alternating horizontal and vertical lines. The &lt;em&gt;y&lt;/em&gt;-value changes at the midpoint of each pair of adjacent &lt;em&gt;x&lt;/em&gt;-values.</source>
          <target state="translated">交互の水平線と垂直線で構成される区分定数関数（&lt;a href=&quot;https://en.wikipedia.org/wiki/Step_function&quot;&gt;ステップ関数&lt;/a&gt;）を生成します。&lt;em&gt;Y&lt;/em&gt;隣接する各対の中点に-value変更&lt;em&gt;のx&lt;/em&gt; -値。</target>
        </trans-unit>
        <trans-unit id="cda76189eb233934ffb66d360fc6240279fea541" translate="yes" xml:space="preserve">
          <source>Produces a piecewise constant function (a &lt;a href=&quot;https://en.wikipedia.org/wiki/Step_function&quot;&gt;step function&lt;/a&gt;) consisting of alternating horizontal and vertical lines. The &lt;em&gt;y&lt;/em&gt;-value changes before the &lt;em&gt;x&lt;/em&gt;-value.</source>
          <target state="translated">交互の水平線と垂直線で構成される区分定数関数（&lt;a href=&quot;https://en.wikipedia.org/wiki/Step_function&quot;&gt;ステップ関数&lt;/a&gt;）を生成します。&lt;em&gt;Y&lt;/em&gt;前-value変更&lt;em&gt;X&lt;/em&gt; -value。</target>
        </trans-unit>
        <trans-unit id="436f92b69a58fe503802c4253e3af4bc523b0958" translate="yes" xml:space="preserve">
          <source>Produces a polyline through the specified points.</source>
          <target state="translated">指定された点を通るポリラインを生成します。</target>
        </trans-unit>
        <trans-unit id="378d3e26a22abfd38cc3d67adf4560bcee0bf0ca" translate="yes" xml:space="preserve">
          <source>Produces a straightened cubic &lt;a href=&quot;https://en.wikipedia.org/wiki/B-spline&quot;&gt;basis spline&lt;/a&gt; using the specified control points, with the spline straightened according to the curve&amp;rsquo;s &lt;a href=&quot;#curveBundle_beta&quot;&gt;&lt;em&gt;beta&lt;/em&gt;&lt;/a&gt;, which defaults to 0.85. This curve is typically used in &lt;a href=&quot;http://bl.ocks.org/mbostock/7607999&quot;&gt;hierarchical edge bundling&lt;/a&gt; to disambiguate connections, as proposed by &lt;a href=&quot;https://www.win.tue.nl/vis1/home/dholten/&quot;&gt;Danny Holten&lt;/a&gt; in &lt;a href=&quot;https://www.win.tue.nl/vis1/home/dholten/papers/bundles_infovis.pdf&quot;&gt;Hierarchical Edge Bundles: Visualization of Adjacency Relations in Hierarchical Data&lt;/a&gt;. This curve does not implement &lt;a href=&quot;#curve_areaStart&quot;&gt;&lt;em&gt;curve&lt;/em&gt;.areaStart&lt;/a&gt; and &lt;a href=&quot;#curve_areaEnd&quot;&gt;&lt;em&gt;curve&lt;/em&gt;.areaEnd&lt;/a&gt;; it is intended to work with &lt;a href=&quot;#lines&quot;&gt;d3.line&lt;/a&gt;, not &lt;a href=&quot;#areas&quot;&gt;d3.area&lt;/a&gt;.</source>
          <target state="translated">指定された制御点を使用して直線化された3次&lt;a href=&quot;https://en.wikipedia.org/wiki/B-spline&quot;&gt;基底スプライン&lt;/a&gt;を生成します。スプラインは、曲線の&lt;a href=&quot;#curveBundle_beta&quot;&gt;&lt;em&gt;ベータ&lt;/em&gt;&lt;/a&gt;（デフォルトは0.85）に従って直線化されます。この曲線は通常、&lt;a href=&quot;http://bl.ocks.org/mbostock/7607999&quot;&gt;階層的エッジバンドルで&lt;/a&gt;使用され、接続を明確化します。これは、&lt;a href=&quot;https://www.win.tue.nl/vis1/home/dholten/&quot;&gt;Danny Holten&lt;/a&gt;が&lt;a href=&quot;https://www.win.tue.nl/vis1/home/dholten/papers/bundles_infovis.pdf&quot;&gt;Hierarchical Edge Bundles：Visualization of Adjacency Relations in Hierarchical Dataで&lt;/a&gt;提案しています。この曲線は、&lt;a href=&quot;#curve_areaStart&quot;&gt;&lt;em&gt;curve&lt;/em&gt; .areaStart&lt;/a&gt;および&lt;a href=&quot;#curve_areaEnd&quot;&gt;&lt;em&gt;curve&lt;/em&gt; .areaEndを&lt;/a&gt;実装していません。&lt;a href=&quot;#lines&quot;&gt;d3.area&lt;/a&gt;ではなく、d3.lineで動作するように意図されてい&lt;a href=&quot;#areas&quot;&gt;ます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c7bdffcad9553081275d03fe16c95b2280d8f21a" translate="yes" xml:space="preserve">
          <source>Projections</source>
          <target state="translated">Projections</target>
        </trans-unit>
        <trans-unit id="0d61814d99a55722060e38bf7cabf7b3ea66923f" translate="yes" xml:space="preserve">
          <source>Projections now have more appropriate defaults. For example, &lt;a href=&quot;../../../d3-geo#geoOrthographic&quot;&gt;d3.geoOrthographic&lt;/a&gt; has a 90&amp;deg; clip angle by default, showing only the front hemisphere, and &lt;a href=&quot;../../../d3-geo#geoGnomonic&quot;&gt;d3.geoGnomonic&lt;/a&gt; has a default 60&amp;deg; clip angle. The default &lt;a href=&quot;../../../d3-geo#path_projection&quot;&gt;projection&lt;/a&gt; for &lt;a href=&quot;../../../d3-geo#geoPath&quot;&gt;d3.geoPath&lt;/a&gt; is now null rather than &lt;a href=&quot;../../../d3-geo#geoAlbersUsa&quot;&gt;d3.geoAlbersUsa&lt;/a&gt;; a null projection is used with &lt;a href=&quot;https://bl.ocks.org/mbostock/5557726&quot;&gt;pre-projected geometry&lt;/a&gt; and is typically faster to render.</source>
          <target state="translated">投影は、より適切なデフォルトになりました。たとえば、&lt;a href=&quot;../../../d3-geo#geoOrthographic&quot;&gt;d3.geoOrthographicに&lt;/a&gt;はデフォルトで90&amp;deg;のクリップ角度があり、前半球のみが表示され、&lt;a href=&quot;../../../d3-geo#geoGnomonic&quot;&gt;d3.geoGnomonic&lt;/a&gt;にはデフォルトの60&amp;deg;のクリップ角度があります。デフォルトの&lt;a href=&quot;../../../d3-geo#path_projection&quot;&gt;投影&lt;/a&gt;用&lt;a href=&quot;../../../d3-geo#geoPath&quot;&gt;d3.geoPathは、&lt;/a&gt;今ではなく、nullです&lt;a href=&quot;../../../d3-geo#geoAlbersUsa&quot;&gt;d3.geoAlbersUsa&lt;/a&gt;。null投影は&lt;a href=&quot;https://bl.ocks.org/mbostock/5557726&quot;&gt;事前に投影されたジオメトリで&lt;/a&gt;使用され、通常はレンダリングが高速です。</target>
        </trans-unit>
        <trans-unit id="14b52b2440653685dd827e4875e13f5525764f6b" translate="yes" xml:space="preserve">
          <source>Projections perform cutting or clipping of geometries in two stages.</source>
          <target state="translated">プロジェクションは、2段階で幾何学的な形状のカットやクリッピングを行います。</target>
        </trans-unit>
        <trans-unit id="e812072e135cc5d86bd3fb851c7a178271b484fe" translate="yes" xml:space="preserve">
          <source>Projections transform spherical polygonal geometry to planar polygonal geometry. D3 provides implementations of several classes of standard projections:</source>
          <target state="translated">投影は、球面多角形ジオメトリを平面多角形ジオメトリに変換します。D3は、いくつかの標準的な投影のクラスの実装を提供しています。</target>
        </trans-unit>
        <trans-unit id="683cc0783f85cd2dca27f2bd138afd9c2a1f2053" translate="yes" xml:space="preserve">
          <source>Projects the GeoJSON object in the specified input &lt;em&gt;file&lt;/em&gt; using the specified &lt;em&gt;projection&lt;/em&gt;, outputting a new GeoJSON &lt;em&gt;object&lt;/em&gt; with projected coordinates. For example, to project standard &lt;a href=&quot;https://en.wikipedia.org/wiki/World_Geodetic_System#A_new_World_Geodetic_System:_WGS_84&quot;&gt;WGS 84&lt;/a&gt; input using &lt;a href=&quot;d3-geo#geoAlbersUsa&quot;&gt;d3.geoAlbersUsa&lt;/a&gt;:</source>
          <target state="translated">指定された&lt;em&gt;Projection&lt;/em&gt;を使用して、指定された入力&lt;em&gt;ファイルに&lt;/em&gt; GeoJSON &lt;em&gt;オブジェクト&lt;/em&gt;を投影し、投影された座標を持つ新しいGeoJSON &lt;em&gt;オブジェクト&lt;/em&gt;を出力し&lt;em&gt;ます&lt;/em&gt;。たとえば、&lt;a href=&quot;d3-geo#geoAlbersUsa&quot;&gt;d3.geoAlbersUsa&lt;/a&gt;を使用して標準の&lt;a href=&quot;https://en.wikipedia.org/wiki/World_Geodetic_System#A_new_World_Geodetic_System:_WGS_84&quot;&gt;WGS 84&lt;/a&gt;入力を投影するには：&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6ee4af64369f8a32f0fec74be71e3ae853d5b374" translate="yes" xml:space="preserve">
          <source>Projects the specified GeoJSON &lt;em&gt;object&lt;/em&gt; using the specified &lt;em&gt;projection&lt;/em&gt;, returning a shallow copy of the specified GeoJSON &lt;em&gt;object&lt;/em&gt; with projected coordinates. Typically, the input coordinates are spherical and the output coordinates are planar, but the &lt;em&gt;projection&lt;/em&gt; can also be an &lt;a href=&quot;d3-geo#transforms&quot;&gt;arbitrary geometric transformation&lt;/a&gt;.</source>
          <target state="translated">指定されたGeoJSON &lt;em&gt;オブジェクト&lt;/em&gt;を指定された&lt;em&gt;Projection&lt;/em&gt;を使用して&lt;em&gt;投影&lt;/em&gt;し、指定されたGeoJSON &lt;em&gt;オブジェクト&lt;/em&gt;の浅いコピーを投影された座標とともに返し&lt;em&gt;ます&lt;/em&gt;。通常、入力座標は球形で、出力座標は平面ですが、&lt;em&gt;投影&lt;/em&gt;は&lt;a href=&quot;d3-geo#transforms&quot;&gt;任意の幾何学的変換に&lt;/a&gt;することもできます。</target>
        </trans-unit>
        <trans-unit id="630fd46f52a8f3f3a1553c6caf37b8e41cbeccc3" translate="yes" xml:space="preserve">
          <source>Projects the specified point [</source>
          <target state="translated">指定された点を投影します。</target>
        </trans-unit>
        <trans-unit id="1a3fc72426021dd6d8bc181a6af67f915900967f" translate="yes" xml:space="preserve">
          <source>Pursuant to the great namespace flattening, the format constructors have new names:</source>
          <target state="translated">偉大な名前空間のフラット化により、フォーマットのコンストラクタは新しい名前を持つようになりました。</target>
        </trans-unit>
        <trans-unit id="4c9eafc7a238f0d811379e6e9d64224689bf8a04" translate="yes" xml:space="preserve">
          <source>Pursuant to the great namespace flattening, the local time intervals have been renamed:</source>
          <target state="translated">大規模な名前空間のフラット化に伴い、ローカル時間間隔の名前が変更されました。</target>
        </trans-unit>
        <trans-unit id="e8547993363e6d6ba5a1ac69283fc2996fed2dce" translate="yes" xml:space="preserve">
          <source>Pursuant to the great namespace flattening, the random number generators have new names:</source>
          <target state="translated">大規模な名前空間のフラット化により、乱数発生器は新しい名前を持つようになりました。</target>
        </trans-unit>
        <trans-unit id="146fbd25f994e8e637a27984f9331df79902741a" translate="yes" xml:space="preserve">
          <source>Pursuant to the great namespace flattening, various CSV and TSV methods have new names:</source>
          <target state="translated">偉大な名前空間のフラット化に伴い、様々なCSVおよびTSVメソッドに新しい名前が追加されました。</target>
        </trans-unit>
        <trans-unit id="5fa5e6b41f391e69295869915a07ec18bd6645d0" translate="yes" xml:space="preserve">
          <source>Pursuant to the great namespace flattening, various methods have new names:</source>
          <target state="translated">偉大な名前空間のフラット化により、様々なメソッドに新しい名前が付けられました。</target>
        </trans-unit>
        <trans-unit id="9d33a2d3ef4d993226c4cecff7b720e4a1895b14" translate="yes" xml:space="preserve">
          <source>Pursuant to the great namespace flattening:</source>
          <target state="translated">偉大な名前空間のフラット化に準拠しています。</target>
        </trans-unit>
        <trans-unit id="92db247779c78d6e55ec5bc66838b678e729a4c8" translate="yes" xml:space="preserve">
          <source>Quadratic easing; equivalent to &lt;a href=&quot;#easePolyIn&quot;&gt;polyIn&lt;/a&gt;.&lt;a href=&quot;#poly_exponent&quot;&gt;exponent&lt;/a&gt;(2).</source>
          <target state="translated">二次緩和; &lt;a href=&quot;#easePolyIn&quot;&gt;polyIn&lt;/a&gt;と同じです。&lt;a href=&quot;#poly_exponent&quot;&gt;指数&lt;/a&gt;（2）。</target>
        </trans-unit>
        <trans-unit id="18d30e095c4bf8f6a674bee456e55e715b4f8bd0" translate="yes" xml:space="preserve">
          <source>Quadtree</source>
          <target state="translated">Quadtree</target>
        </trans-unit>
        <trans-unit id="cb73a632ba5693d976a11b26e9f529ee9b493c2e" translate="yes" xml:space="preserve">
          <source>Quadtrees</source>
          <target state="translated">Quadtrees</target>
        </trans-unit>
        <trans-unit id="8e70ab31f16187d2402f0ddce0bc9f0b8b3fd8e2" translate="yes" xml:space="preserve">
          <source>Quadtrees (d3-quadtree)</source>
          <target state="translated">クワッドツリー(D3-quadtree</target>
        </trans-unit>
        <trans-unit id="32ffd792a1d99f241f148b92938c585eace38f03" translate="yes" xml:space="preserve">
          <source>Quadtrees support several new utility methods: &lt;a href=&quot;../../../d3-quadtree#quadtree_copy&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.copy&lt;/a&gt; returns a copy of the quadtree sharing the same data; &lt;a href=&quot;../../../d3-quadtree#quadtree_data&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.data&lt;/a&gt; generates an array of all data in the quadtree; &lt;a href=&quot;../../../d3-quadtree#quadtree_size&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.size&lt;/a&gt; returns the number of data points in the quadtree; and &lt;a href=&quot;../../../d3-quadtree#quadtree_root&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.root&lt;/a&gt; returns the root node, which is useful for manual traversal of the quadtree. The &lt;a href=&quot;../../../d3-quadtree#quadtree_find&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.find&lt;/a&gt; method now takes an optional search radius, which is useful for pointer-based selection in &lt;a href=&quot;https://bl.ocks.org/mbostock/ad70335eeef6d167bc36fd3c04378048&quot;&gt;force-directed graphs&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../d3-quadtree#quadtree_copy&quot;&gt;&lt;em&gt;クワッドツリー&lt;/em&gt;&lt;/a&gt;は、いくつかの新しいユーティリティメソッドをサポートしています。quadtree .copyは、同じデータを共有するクワッドツリーのコピーを返します。&lt;a href=&quot;../../../d3-quadtree#quadtree_data&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt; .data&lt;/a&gt;は、quadtree内のすべてのデータの配列を生成します。&lt;a href=&quot;../../../d3-quadtree#quadtree_size&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt; .size&lt;/a&gt;は、quadtree内のデータポイントの数を返します。そして&lt;a href=&quot;../../../d3-quadtree#quadtree_root&quot;&gt;&lt;em&gt;四分木&lt;/em&gt; .rootは、&lt;/a&gt;四分木の手動トラバーサルのために有用であるルートノードを返します。&lt;a href=&quot;../../../d3-quadtree#quadtree_find&quot;&gt;&lt;em&gt;四分木&lt;/em&gt; .find&lt;/a&gt;方法についてにおけるポインタベースの選択に有用である任意の検索半径、かかる&lt;a href=&quot;https://bl.ocks.org/mbostock/ad70335eeef6d167bc36fd3c04378048&quot;&gt;力指向グラフ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e3c506d87dfda671a37b4876c3bcf2370a5b4fcd" translate="yes" xml:space="preserve">
          <source>Qualifies the specified &lt;em&gt;name&lt;/em&gt;, which may or may not have a namespace prefix. If the name contains a colon (&lt;code&gt;:&lt;/code&gt;), the substring before the colon is interpreted as the namespace prefix, which must be registered in &lt;a href=&quot;#namespaces&quot;&gt;d3.namespaces&lt;/a&gt;. Returns an object &lt;code&gt;space&lt;/code&gt; and &lt;code&gt;local&lt;/code&gt; attributes describing the full namespace URL and the local name. For example:</source>
          <target state="translated">指定された&lt;em&gt;nameを&lt;/em&gt;修飾します。これには、ネームスペースプレフィックスがある場合とない場合があります。 （名前はコロンが含まれている場合 &lt;code&gt;:&lt;/code&gt; ）、コロンの前の部分文字列はに登録されなければならない名前空間接頭辞として解釈される&lt;a href=&quot;#namespaces&quot;&gt;d3.namespaces&lt;/a&gt;。完全な名前空間URLとローカル名を表すオブジェクト &lt;code&gt;space&lt;/code&gt; と &lt;code&gt;local&lt;/code&gt; 属性を返します。例えば：</target>
        </trans-unit>
        <trans-unit id="33ca8edc129102d67e323dd879141807a58d42d4" translate="yes" xml:space="preserve">
          <source>Quantile</source>
          <target state="translated">Quantile</target>
        </trans-unit>
        <trans-unit id="9421d26e6e05940883848664e927b2609acde5c1" translate="yes" xml:space="preserve">
          <source>Quantile Scales</source>
          <target state="translated">分位尺度</target>
        </trans-unit>
        <trans-unit id="b4e6b7f46047afe9f4b9f967b203ee0260a043db" translate="yes" xml:space="preserve">
          <source>Quantile scales map a sampled input domain to a discrete range. The domain is considered continuous and thus the scale will accept any reasonable input value; however, the domain is specified as a discrete set of sample values. The number of values in (the cardinality of) the output range determines the number of quantiles that will be computed from the domain. To compute the quantiles, the domain is sorted, and treated as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Quantile#Quantiles_of_a_population&quot;&gt;population of discrete values&lt;/a&gt;; see d3-array&amp;rsquo;s &lt;a href=&quot;d3-array#quantile&quot;&gt;quantile&lt;/a&gt;. See &lt;a href=&quot;http://bl.ocks.org/mbostock/8ca036b3505121279daf&quot;&gt;bl.ocks.org/8ca036b3505121279daf&lt;/a&gt; for an example.</source>
          <target state="translated">分位スケールは、サンプリングされた入力ドメインを離散範囲にマッピングします。ドメインは連続的と見なされるため、スケールは適切な入力値を受け入れます。ただし、ドメインはサンプル値の離散セットとして指定されます。出力範囲（のカーディナリティー）の値の数によって、ドメインから計算される変位値の数が決まります。変位値を計算するために、ドメインはソートされ、&lt;a href=&quot;https://en.wikipedia.org/wiki/Quantile#Quantiles_of_a_population&quot;&gt;離散値の母集団&lt;/a&gt;として扱われます。 d3-arrayの&lt;a href=&quot;d3-array#quantile&quot;&gt;変位値を&lt;/a&gt;参照してください。例については、&lt;a href=&quot;http://bl.ocks.org/mbostock/8ca036b3505121279daf&quot;&gt;bl.ocks.org / 8ca036b3505121279daf&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="18a85a5632065b99cfe45a2efad2f1ae99da1046" translate="yes" xml:space="preserve">
          <source>Quantize</source>
          <target state="translated">Quantize</target>
        </trans-unit>
        <trans-unit id="1515e56bc0d2016aa6eb9adb00011f15357de0c9" translate="yes" xml:space="preserve">
          <source>Quantize Scales</source>
          <target state="translated">量子化スケール</target>
        </trans-unit>
        <trans-unit id="792aae8667f1e94620d4d395c0cb00d0232f31e6" translate="yes" xml:space="preserve">
          <source>Quantize scales are similar to &lt;a href=&quot;#linear-scales&quot;&gt;linear scales&lt;/a&gt;, except they use a discrete rather than continuous range. The continuous input domain is divided into uniform segments based on the number of values in (&lt;em&gt;i.e.&lt;/em&gt;, the cardinality of) the output range. Each range value &lt;em&gt;y&lt;/em&gt; can be expressed as a quantized linear function of the domain value &lt;em&gt;x&lt;/em&gt;: &lt;em&gt;y&lt;/em&gt; = &lt;em&gt;m round(x)&lt;/em&gt; + &lt;em&gt;b&lt;/em&gt;. See &lt;a href=&quot;http://bl.ocks.org/mbostock/4060606&quot;&gt;bl.ocks.org/4060606&lt;/a&gt; for an example.</source>
          <target state="translated">量子化スケールは、連続範囲ではなく離散範囲を使用することを除いて、&lt;a href=&quot;#linear-scales&quot;&gt;線形スケール&lt;/a&gt;に似ています。連続入力ドメインは、出力範囲の値の数（&lt;em&gt;つまり&lt;/em&gt;、カーディナリティ）に基づいて均一なセグメントに分割されます。各範囲の値&lt;em&gt;yが&lt;/em&gt;ドメイン値の量子化された線形関数として表すことができ&lt;em&gt;、X&lt;/em&gt;：&lt;em&gt;Y&lt;/em&gt; =は&lt;em&gt;ラウンド（X）は、M&lt;/em&gt; + &lt;em&gt;Bを&lt;/em&gt;。例については、&lt;a href=&quot;http://bl.ocks.org/mbostock/4060606&quot;&gt;bl.ocks.org / 4060606&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d325fcd919384f395c02751e03d2cd0288b98cca" translate="yes" xml:space="preserve">
          <source>Queue</source>
          <target state="translated">Queue</target>
        </trans-unit>
        <trans-unit id="83dbc32040459c6d170231f099414d8cc8806687" translate="yes" xml:space="preserve">
          <source>Queues</source>
          <target state="translated">Queues</target>
        </trans-unit>
        <trans-unit id="c45b5081e8158198b2a8aa36e23f43d9348414cf" translate="yes" xml:space="preserve">
          <source>Queues (d3-queue)</source>
          <target state="translated">テール(D3テール</target>
        </trans-unit>
        <trans-unit id="fed0c9075703142bb5acf9fee208bc3f2f1c6743" translate="yes" xml:space="preserve">
          <source>Quincuncial Projections</source>
          <target state="translated">五分儀予想</target>
        </trans-unit>
        <trans-unit id="58d888c08aa561f370e38cee976121532a883d71" translate="yes" xml:space="preserve">
          <source>Random</source>
          <target state="translated">Random</target>
        </trans-unit>
        <trans-unit id="3061bd379d8f3565753f638c056b711fd4433107" translate="yes" xml:space="preserve">
          <source>Random Numbers</source>
          <target state="translated">乱数</target>
        </trans-unit>
        <trans-unit id="acfa68d52ed36262bec22f05ac97dcd1548c4aa6" translate="yes" xml:space="preserve">
          <source>Random Numbers (d3-random)</source>
          <target state="translated">乱数(d3-random)</target>
        </trans-unit>
        <trans-unit id="f1ffdd3cd4bdf2d6d176c1ef202d8a7444820234" translate="yes" xml:space="preserve">
          <source>Random jitter is still needed to resolve link, collision and many-body forces if there are coincident nodes, but at least in the common case, the force simulation (and the resulting force-directed graph layout) is now consistent across browsers and reloads. D3 no longer plays dice!</source>
          <target state="translated">リンク、衝突、多体力を解決するためにはランダムジッターが必要ですが、少なくとも一般的なケースでは、力のシミュレーション(および結果としての力方向グラフのレイアウト)は、ブラウザやリロードの間で一貫したものになりました。D3はもはやサイコロを振ることはありません!</target>
        </trans-unit>
        <trans-unit id="fe8565d806286beebff6e3435b62ae88672f769d" translate="yes" xml:space="preserve">
          <source>Randomizes the order of the specified &lt;em&gt;array&lt;/em&gt; in-place using the &lt;a href=&quot;https://bost.ocks.org/mike/shuffle/&quot;&gt;Fisher&amp;ndash;Yates shuffle&lt;/a&gt; and returns the &lt;em&gt;array&lt;/em&gt;. If &lt;em&gt;start&lt;/em&gt; is specified, it is the starting index (inclusive) of the &lt;em&gt;array&lt;/em&gt; to shuffle; if &lt;em&gt;start&lt;/em&gt; is not specified, it defaults to zero. If &lt;em&gt;stop&lt;/em&gt; is specified, it is the ending index (exclusive) of the &lt;em&gt;array&lt;/em&gt; to shuffle; if &lt;em&gt;stop&lt;/em&gt; is not specified, it defaults to &lt;em&gt;array&lt;/em&gt;.length. For example, to shuffle the first ten elements of the &lt;em&gt;array&lt;/em&gt;: shuffle(&lt;em&gt;array&lt;/em&gt;, 0, 10).</source>
          <target state="translated">&lt;a href=&quot;https://bost.ocks.org/mike/shuffle/&quot;&gt;Fisher&amp;ndash;Yatesシャッフル&lt;/a&gt;を使用して、指定された&lt;em&gt;配列の&lt;/em&gt;順序をインプレースでランダム化し、&lt;em&gt;配列&lt;/em&gt;を返します。&lt;em&gt;start&lt;/em&gt;が指定されている場合、シャッフルする&lt;em&gt;配列の&lt;/em&gt;開始インデックス（これを含む）です。&lt;em&gt;start&lt;/em&gt;を指定しない場合、デフォルトでゼロになります。&lt;em&gt;stop&lt;/em&gt;が指定されている場合、シャッフルする&lt;em&gt;配列の&lt;/em&gt;終了インデックス（これを含まない）です。&lt;em&gt;stop&lt;/em&gt;が指定されていない場合、デフォルトで&lt;em&gt;配列&lt;/em&gt; .lengthになります。たとえば、&lt;em&gt;配列の&lt;/em&gt;最初の10個の要素をシャッフルするには、shuffle（&lt;em&gt;array&lt;/em&gt;、0、10）と入力します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0d5fda95e3940bc09dc1ccc22666813c0b54f73d" translate="yes" xml:space="preserve">
          <source>Ranges</source>
          <target state="translated">Ranges</target>
        </trans-unit>
        <trans-unit id="4250cdce3a98d1e1134d7aed93b1bc7a67ce83be" translate="yes" xml:space="preserve">
          <source>Rather than decorating the &lt;em&gt;dispatch&lt;/em&gt; object with each event type, the dispatch object now exposes generic &lt;a href=&quot;../../../d3-dispatch#dispatch_call&quot;&gt;&lt;em&gt;dispatch&lt;/em&gt;.call&lt;/a&gt; and &lt;a href=&quot;../../../d3-dispatch#dispatch_apply&quot;&gt;&lt;em&gt;dispatch&lt;/em&gt;.apply&lt;/a&gt; methods which take the &lt;em&gt;type&lt;/em&gt; string as the first argument. For example, in D3 3.x, you might say:</source>
          <target state="translated">&lt;em&gt;ディスパッチ&lt;/em&gt;オブジェクトを各イベントタイプで装飾するのではなく、ディスパッチオブジェクトは、&lt;em&gt;タイプ&lt;/em&gt;文字列を最初の引数として取る一般的な&lt;a href=&quot;../../../d3-dispatch#dispatch_call&quot;&gt;&lt;em&gt;dispatch&lt;/em&gt; .call&lt;/a&gt;および&lt;a href=&quot;../../../d3-dispatch#dispatch_apply&quot;&gt;&lt;em&gt;dispatch&lt;/em&gt; .apply&lt;/a&gt;メソッドを公開します。たとえば、D3 3.xでは次のように言うことができます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="42aa240d047b807d5b75823c410e342470323528" translate="yes" xml:space="preserve">
          <source>Rather than hard-coding a set of built-in forces, the force simulation is now extensible: you specify which forces you want! The approach affords greater flexibility through composition. The new forces are more flexible, too: force parameters can typically be configured per-node or per-link. There are separate positioning forces for &lt;a href=&quot;../../../d3-force#forceX&quot;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/a&gt; and &lt;a href=&quot;../../../d3-force#forceY&quot;&gt;&lt;em&gt;y&lt;/em&gt;&lt;/a&gt; that replace &lt;em&gt;force&lt;/em&gt;.gravity; &lt;a href=&quot;../../../d3-force#x_x&quot;&gt;&lt;em&gt;x&lt;/em&gt;.x&lt;/a&gt; and &lt;a href=&quot;../../../d3-force#y_y&quot;&gt;&lt;em&gt;y&lt;/em&gt;.y&lt;/a&gt; replace &lt;em&gt;force&lt;/em&gt;.size. The new &lt;a href=&quot;../../../d3-force#forceLink&quot;&gt;link force&lt;/a&gt; replaces &lt;em&gt;force&lt;/em&gt;.linkStrength and employs better default heuristics to improve stability. The new &lt;a href=&quot;../../../d3-force#forceManyBody&quot;&gt;many-body force&lt;/a&gt; replaces &lt;em&gt;force&lt;/em&gt;.charge and supports a new &lt;a href=&quot;../../../d3-force#manyBody_distanceMin&quot;&gt;minimum-distance parameter&lt;/a&gt; and performance improvements thanks to 4.0&amp;rsquo;s &lt;a href=&quot;#quadtrees-d3-quadtree&quot;&gt;new quadtrees&lt;/a&gt;. There are also brand-new forces for &lt;a href=&quot;../../../d3-force#forceCenter&quot;&gt;centering nodes&lt;/a&gt; and &lt;a href=&quot;../../../d3-force#forceCollision&quot;&gt;collision resolution&lt;/a&gt;.</source>
          <target state="translated">組み込みの力のセットをハードコーディングするのではなく、力のシミュレーションが拡張可能になりました。必要な力を指定できます！このアプローチは、構成を通じて柔軟性を高めます。新しい力もより柔軟です。力パラメーターは通常、ノードごとまたはリンクごとに構成できます。&lt;em&gt;力の&lt;/em&gt;重力に取って代わる、&lt;a href=&quot;../../../d3-force#forceX&quot;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/a&gt;と&lt;a href=&quot;../../../d3-force#forceY&quot;&gt;&lt;em&gt;yの&lt;/em&gt;&lt;/a&gt;個別の位置決め力があります。&lt;a href=&quot;../../../d3-force#x_x&quot;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/a&gt; .xおよび&lt;a href=&quot;../../../d3-force#y_y&quot;&gt;&lt;em&gt;y&lt;/em&gt;&lt;/a&gt; .yは&lt;em&gt;force&lt;/em&gt; .sizeを置き換えます。新しい&lt;a href=&quot;../../../d3-force#forceLink&quot;&gt;リンクフォース&lt;/a&gt;は&lt;em&gt;force&lt;/em&gt; .linkStrengthに代わるものであり、安定性を向上させるためにデフォルトのヒューリスティックを採用しています。新しい&lt;a href=&quot;../../../d3-force#forceManyBody&quot;&gt;多体力の&lt;/a&gt;置き換えの&lt;em&gt;力&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;.chargeおよび4.0の&lt;a href=&quot;#quadtrees-d3-quadtree&quot;&gt;新しいquadtrees&lt;/a&gt;による新しい&lt;a href=&quot;../../../d3-force#manyBody_distanceMin&quot;&gt;最小距離パラメーター&lt;/a&gt;とパフォーマンスの改善をサポートします。&lt;a href=&quot;../../../d3-force#forceCenter&quot;&gt;ノードのセンタリング&lt;/a&gt;と&lt;a href=&quot;../../../d3-force#forceCollision&quot;&gt;衝突解決の&lt;/a&gt;ためのまったく新しい力もあります。</target>
        </trans-unit>
        <trans-unit id="d2b4b01ad1d758fe6f98a26c1214309ecbdb131d" translate="yes" xml:space="preserve">
          <source>Rather than pass optional arguments to d3.ease or &lt;em&gt;transition&lt;/em&gt;.ease, parameterizable easing functions now have named parameters: &lt;a href=&quot;../../../d3-ease#poly_exponent&quot;&gt;&lt;em&gt;poly&lt;/em&gt;.exponent&lt;/a&gt;, &lt;a href=&quot;../../../d3-ease#elastic_amplitude&quot;&gt;&lt;em&gt;elastic&lt;/em&gt;.amplitude&lt;/a&gt;, &lt;a href=&quot;../../../d3-ease#elastic_period&quot;&gt;&lt;em&gt;elastic&lt;/em&gt;.period&lt;/a&gt; and &lt;a href=&quot;../../../d3-ease#back_overshoot&quot;&gt;&lt;em&gt;back&lt;/em&gt;.overshoot&lt;/a&gt;. For example, in D3 3.x you might say:</source>
          <target state="translated">オプションの引数をd3.easeまたは&lt;em&gt;transition&lt;/em&gt; .easeに渡すのではなく、パラメーター化可能なイージング関数に名前付きパラメーターがあります：&lt;a href=&quot;../../../d3-ease#poly_exponent&quot;&gt;&lt;em&gt;poly&lt;/em&gt; .exponent&lt;/a&gt;、&lt;a href=&quot;../../../d3-ease#elastic_amplitude&quot;&gt;&lt;em&gt;elastic&lt;/em&gt; .amplitude&lt;/a&gt;、&lt;a href=&quot;../../../d3-ease#elastic_period&quot;&gt;&lt;em&gt;elastic&lt;/em&gt; .period&lt;/a&gt;および&lt;a href=&quot;../../../d3-ease#back_overshoot&quot;&gt;&lt;em&gt;back&lt;/em&gt; .overshoot&lt;/a&gt;。たとえば、D3 3.xでは次のように言うことができます。</target>
        </trans-unit>
        <trans-unit id="453e67d34c1baf281ba38edfa951d020ff199a16" translate="yes" xml:space="preserve">
          <source>Raw Projections</source>
          <target state="translated">生の予想</target>
        </trans-unit>
        <trans-unit id="d35988b9647a13581c154ed7e3f01ef3e4261b21" translate="yes" xml:space="preserve">
          <source>Raw projections are point transformation functions that are used to implement custom projections; they typically passed to &lt;a href=&quot;#geoProjection&quot;&gt;d3.geoProjection&lt;/a&gt; or &lt;a href=&quot;#geoProjectionMutator&quot;&gt;d3.geoProjectionMutator&lt;/a&gt;. They are exposed here to facilitate the derivation of related projections. Raw projections take spherical coordinates [&lt;em&gt;lambda&lt;/em&gt;, &lt;em&gt;phi&lt;/em&gt;] in radians (not degrees!) and return a point [&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;], typically in the unit square centered around the origin.</source>
          <target state="translated">生の投影は、カスタム投影を実装するために使用される点変換関数です。通常、これらは&lt;a href=&quot;#geoProjection&quot;&gt;d3.geoProjection&lt;/a&gt;または&lt;a href=&quot;#geoProjectionMutator&quot;&gt;d3.geoProjectionMutatorに&lt;/a&gt;渡されます。それらは、関連する予測の導出を容易にするために、ここで公開されています。生の投影は、ラジアン（度ではなく）の球面座標[ &lt;em&gt;lambda&lt;/em&gt;、&lt;em&gt;phi&lt;/em&gt; ]を取り、通常は原点を中心とする単位正方形の点[ &lt;em&gt;x&lt;/em&gt;、&lt;em&gt;y&lt;/em&gt; ] を返します。</target>
        </trans-unit>
        <trans-unit id="201fa0b05c6a28f4f2ac0e5d0e386ff0a9d5c5ef" translate="yes" xml:space="preserve">
          <source>Re-inserts each selected element, in order, as the first child of its parent. Equivalent to:</source>
          <target state="translated">選択された各要素を、その親の最初の子として順番に再挿入します。これに相当します。</target>
        </trans-unit>
        <trans-unit id="d3069a25c59839abc44f556f79225f80625a1cca" translate="yes" xml:space="preserve">
          <source>Re-inserts each selected element, in order, as the last child of its parent. Equivalent to:</source>
          <target state="translated">選択された各要素を、その親の最後の子として順番に再挿入します。これに相当します。</target>
        </trans-unit>
        <trans-unit id="177e7d85047ba88db46559353f1a6a4d4e11cc2b" translate="yes" xml:space="preserve">
          <source>Re-inserts elements into the document such that the document order of each group matches the selection order. This is equivalent to calling &lt;a href=&quot;#selection_sort&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.sort&lt;/a&gt; if the data is already sorted, but much faster.</source>
          <target state="translated">各グループのドキュメントの順序が選択の順序と一致するように、要素をドキュメントに再挿入します。これは、データがすでにソートされている場合に&lt;a href=&quot;#selection_sort&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .sort&lt;/a&gt;を呼び出すのと同じですが、はるかに高速です。</target>
        </trans-unit>
        <trans-unit id="e2ea03a8d80290b052b697f868e506f7078ddeeb" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;https://github.com/mbostock/ndjson-cli&quot;&gt;newline-delimited JSON&lt;/a&gt; instead of a single JSON array.</source>
          <target state="translated">単一のJSON配列の代わりに&lt;a href=&quot;https://github.com/mbostock/ndjson-cli&quot;&gt;改行区切りのJSON&lt;/a&gt;を読み取ります。</target>
        </trans-unit>
        <trans-unit id="6076cef2886bde9823a45d60fba3806320357a77" translate="yes" xml:space="preserve">
          <source>Reads the GeoJSON object from the specified input &lt;em&gt;file&lt;/em&gt; and outputs a new GeoJSON &lt;em&gt;object&lt;/em&gt; with coordinates reduced to &lt;em&gt;precision&lt;/em&gt;. Same options as &lt;a href=&quot;#geoproject&quot;&gt;geoproject&lt;/a&gt;.</source>
          <target state="translated">指定された入力&lt;em&gt;ファイル&lt;/em&gt;からGeoJSONオブジェクトを読み取り、座標を&lt;em&gt;精度を&lt;/em&gt;下げて新しいGeoJSON &lt;em&gt;オブジェクト&lt;/em&gt;を出力し&lt;em&gt;ます&lt;/em&gt;。&lt;a href=&quot;#geoproject&quot;&gt;geoprojectと&lt;/a&gt;同じオプション。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8dfdf76ffdd813135d125d41e8e535ea6b5714cf" translate="yes" xml:space="preserve">
          <source>Recursively partitions the specified &lt;em&gt;nodes&lt;/em&gt; into an approximately-balanced binary tree, choosing horizontal partitioning for wide rectangles and vertical partitioning for tall rectangles.</source>
          <target state="translated">指定された&lt;em&gt;ノード&lt;/em&gt;を再帰的にほぼバランスのとれた二分木に分割し、幅の広い長方形には水平分割を、高さのある長方形には垂直分割を選択します。</target>
        </trans-unit>
        <trans-unit id="b199b1da67746488db9eb5711ed4fab1c2c7036e" translate="yes" xml:space="preserve">
          <source>Reduce the precision for smaller output files. Defaults to six digits after the decimal point. See also &lt;a href=&quot;#geoQuantize&quot;&gt;d3.geoQuantize&lt;/a&gt;.</source>
          <target state="translated">より小さい出力ファイルの場合は精度を下げます。デフォルトは小数点以下6桁です。&lt;a href=&quot;#geoQuantize&quot;&gt;d3.geoQuantize&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="8c510b2c23394d2ccd0b74b6c3acd90e3452c824" translate="yes" xml:space="preserve">
          <source>Reduce the precision for smaller output files. See also &lt;a href=&quot;#geoQuantize&quot;&gt;d3.geoQuantize&lt;/a&gt;.</source>
          <target state="translated">より小さい出力ファイルの場合は精度を下げます。&lt;a href=&quot;#geoQuantize&quot;&gt;d3.geoQuantize&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="cc9a15595d8fc70fd35434a8552edf22b25cb579" translate="yes" xml:space="preserve">
          <source>Regardless of orientation, axes are always rendered at the origin. To change the position of the axis with respect to the chart, specify a &lt;a href=&quot;http://www.w3.org/TR/SVG/coords.html#TransformAttribute&quot;&gt;transform attribute&lt;/a&gt; on the containing element. For example:</source>
          <target state="translated">方向に関係なく、軸は常に原点にレンダリングされます。グラフに対する軸の位置を変更するには、含まれている要素の&lt;a href=&quot;http://www.w3.org/TR/SVG/coords.html#TransformAttribute&quot;&gt;変換属性&lt;/a&gt;を指定します。例えば：</target>
        </trans-unit>
        <trans-unit id="36bd6b8ca5bb83c5adb962ade488cd261995c43b" translate="yes" xml:space="preserve">
          <source>Registers a new &lt;em&gt;key&lt;/em&gt; function. The &lt;em&gt;key&lt;/em&gt; function will be invoked for each element in the input array and must return a string identifier to assign the element to its group. Most often, the function is a simple accessor, such as the year and variety accessors above. (Keys functions are &lt;em&gt;not&lt;/em&gt; passed the input array index.) Each time a key is registered, it is pushed onto the end of the internal array of keys, and the nest operator applies an additional level of nesting.</source>
          <target state="translated">新しい&lt;em&gt;キー&lt;/em&gt;機能を登録します。&lt;em&gt;キー&lt;/em&gt;の機能は、入力配列の各要素に対して呼び出されると、そのグループに要素を割り当てる文字列識別子を返す必要があります。ほとんどの場合、関数は上記の年およびさまざまなアクセサーなどの単純なアクセサーです。（キー関数には入力配列インデックスが渡され&lt;em&gt;ません&lt;/em&gt;。）キーが登録されるたびに、キーの内部配列の末尾にプッシュされ、ネスト演算子は追加レベルのネストを適用します。</target>
        </trans-unit>
        <trans-unit id="249a254bf240f2d2577ebabae1a012a94532eef8" translate="yes" xml:space="preserve">
          <source>Released June 28, 2016.</source>
          <target state="translated">2016年6月28日発売。</target>
        </trans-unit>
        <trans-unit id="0283dbd223b2101b91684f28821501419a1a5ea1" translate="yes" xml:space="preserve">
          <source>Released March 22, 2018.</source>
          <target state="translated">2018年3月22日発売。</target>
        </trans-unit>
        <trans-unit id="61d4f3e7b23ec1646097fef9be5d56c70d6d5a65" translate="yes" xml:space="preserve">
          <source>Removes all entries from this map.</source>
          <target state="translated">このマップからすべてのエントリを削除します。</target>
        </trans-unit>
        <trans-unit id="736965fe2a7c36400c5f049c151fe0b5c77ffdf2" translate="yes" xml:space="preserve">
          <source>Removes all values from this set.</source>
          <target state="translated">このセットからすべての値を削除します。</target>
        </trans-unit>
        <trans-unit id="735527eb44e3f737321acb2436c431ccb6d97630" translate="yes" xml:space="preserve">
          <source>Removes the selected elements from the document. Returns this selection (the removed elements) which are now detached from the DOM. There is not currently a dedicated API to add removed elements back to the document; however, you can pass a function to &lt;a href=&quot;#selection_append&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.append&lt;/a&gt; or &lt;a href=&quot;#selection_insert&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.insert&lt;/a&gt; to re-add elements.</source>
          <target state="translated">選択した要素をドキュメントから削除します。DOMから切り離されたこの選択（削除された要素）を返します。現在、削除された要素をドキュメントに追加するための専用のAPIはありません。ただし、関数を&lt;a href=&quot;#selection_append&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .append&lt;/a&gt;または&lt;a href=&quot;#selection_insert&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .insertに渡し&lt;/a&gt;て要素を再度追加できます。</target>
        </trans-unit>
        <trans-unit id="32b6fdec9d7bce01772a124c3041cc8852283e25" translate="yes" xml:space="preserve">
          <source>Removes the specified &lt;em&gt;datum&lt;/em&gt; to the quadtree, deriving its coordinates ⟨&lt;em&gt;x&lt;/em&gt;,&lt;em&gt;y&lt;/em&gt;⟩ using the current &lt;a href=&quot;#quadtree_x&quot;&gt;&lt;em&gt;x&lt;/em&gt;-&lt;/a&gt; and &lt;a href=&quot;#quadtree_y&quot;&gt;&lt;em&gt;y&lt;/em&gt;-&lt;/a&gt;accessors, and returns the quadtree. If the specified &lt;em&gt;datum&lt;/em&gt; does not exist in this quadtree, this method does nothing.</source>
          <target state="translated">指定された削除&lt;em&gt;基準を&lt;/em&gt;その座標⟨導出、四分木に&lt;em&gt;X&lt;/em&gt;、&lt;em&gt;Y&lt;/em&gt; ⟩現在使用して&lt;a href=&quot;#quadtree_x&quot;&gt;&lt;em&gt;Xを&lt;/em&gt; -&lt;/a&gt;と&lt;a href=&quot;#quadtree_y&quot;&gt;&lt;em&gt;yは&lt;/em&gt; -&lt;/a&gt;アクセサ、および四分木を返します。指定された&lt;em&gt;データ&lt;/em&gt;がこのクアッドツリーに存在しない場合、このメソッドは何もしません。</target>
        </trans-unit>
        <trans-unit id="d3b5491fff79682df423d57f7e11edaffaee0e52" translate="yes" xml:space="preserve">
          <source>Render the axis to the given &lt;em&gt;context&lt;/em&gt;, which may be either a &lt;a href=&quot;d3-selection&quot;&gt;selection&lt;/a&gt; of SVG containers (either SVG or G elements) or a corresponding &lt;a href=&quot;d3-transition&quot;&gt;transition&lt;/a&gt;.</source>
          <target state="translated">軸を特定の&lt;em&gt;コンテキスト&lt;/em&gt;にレンダリングし&lt;em&gt;ます&lt;/em&gt;。これは、SVGコンテナーの&lt;a href=&quot;d3-selection&quot;&gt;選択&lt;/a&gt;（SVGまたはG要素のいずれか）または対応する&lt;a href=&quot;d3-transition&quot;&gt;遷移の&lt;/a&gt;いずれかです。</target>
        </trans-unit>
        <trans-unit id="ad1a93d6660695c5436945f0483a8544819e2d28" translate="yes" xml:space="preserve">
          <source>Renders the cell with the specified index &lt;em&gt;i&lt;/em&gt; to the specified &lt;em&gt;context&lt;/em&gt;. The specified &lt;em&gt;context&lt;/em&gt; must implement the &lt;em&gt;context&lt;/em&gt;.moveTo , &lt;em&gt;context&lt;/em&gt;.lineTo and &lt;em&gt;context&lt;/em&gt;.closePath methods from the &lt;a href=&quot;https://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;CanvasPathMethods API&lt;/a&gt;. If a &lt;em&gt;context&lt;/em&gt; is not specified, an SVG path string is returned instead.</source>
          <target state="translated">指定されたインデックス&lt;em&gt;iの&lt;/em&gt;セルを指定された&lt;em&gt;コンテキストに&lt;/em&gt;レンダリングし&lt;em&gt;ます&lt;/em&gt;。指定された&lt;em&gt;コンテキスト&lt;/em&gt;は、&lt;a href=&quot;https://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;CanvasPathMethods API&lt;/a&gt;の&lt;em&gt;context&lt;/em&gt; .moveTo、&lt;em&gt;context&lt;/em&gt; .lineTo、&lt;em&gt;context&lt;/em&gt; .closePathメソッドを実装する必要があります。&lt;em&gt;コンテキスト&lt;/em&gt;が指定されていない場合は、代わりにSVGパス文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="7606cdad7d179b99bc9dd4ab3ac5de8dbc5be4cd" translate="yes" xml:space="preserve">
          <source>Renders the convex hull of the Delaunay triangulation to the specified &lt;em&gt;context&lt;/em&gt;. The specified &lt;em&gt;context&lt;/em&gt; must implement the &lt;em&gt;context&lt;/em&gt;.moveTo and &lt;em&gt;context&lt;/em&gt;.lineTo methods from the &lt;a href=&quot;https://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;CanvasPathMethods API&lt;/a&gt;. If a &lt;em&gt;context&lt;/em&gt; is not specified, an SVG path string is returned instead.</source>
          <target state="translated">Delaunay三角形分割の凸包を指定された&lt;em&gt;コンテキストに&lt;/em&gt;レンダリングし&lt;em&gt;ます&lt;/em&gt;。指定された&lt;em&gt;コンテキスト&lt;/em&gt;は、&lt;a href=&quot;https://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;CanvasPathMethods API&lt;/a&gt;の&lt;em&gt;context&lt;/em&gt; .moveToおよび&lt;em&gt;context&lt;/em&gt; .lineToメソッドを実装する必要があります。&lt;em&gt;コンテキスト&lt;/em&gt;が指定されていない場合は、代わりにSVGパス文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="780e49b14241c93ba2c61e1ab790d476fe18de76" translate="yes" xml:space="preserve">
          <source>Renders the edges of the Delaunay triangulation to the specified &lt;em&gt;context&lt;/em&gt;. The specified &lt;em&gt;context&lt;/em&gt; must implement the &lt;em&gt;context&lt;/em&gt;.moveTo and &lt;em&gt;context&lt;/em&gt;.lineTo methods from the &lt;a href=&quot;https://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;CanvasPathMethods API&lt;/a&gt;. If a &lt;em&gt;context&lt;/em&gt; is not specified, an SVG path string is returned instead.</source>
          <target state="translated">Delaunay三角形分割のエッジを指定された&lt;em&gt;コンテキストに&lt;/em&gt;レンダリングし&lt;em&gt;ます&lt;/em&gt;。指定された&lt;em&gt;コンテキスト&lt;/em&gt;は、&lt;a href=&quot;https://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;CanvasPathMethods API&lt;/a&gt;の&lt;em&gt;context&lt;/em&gt; .moveToおよび&lt;em&gt;context&lt;/em&gt; .lineToメソッドを実装する必要があります。&lt;em&gt;コンテキスト&lt;/em&gt;が指定されていない場合は、代わりにSVGパス文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="4d9f8333f13ea28f65cade6706e94ef3a0a89142" translate="yes" xml:space="preserve">
          <source>Renders the given &lt;em&gt;object&lt;/em&gt;, which may be any GeoJSON feature or geometry object:</source>
          <target state="translated">指定された&lt;em&gt;オブジェクトを&lt;/em&gt;レンダリングし&lt;em&gt;ます&lt;/em&gt;。これは、GeoJSONフィーチャーまたはジオメトリオブジェクトの場合があります。</target>
        </trans-unit>
        <trans-unit id="90683aa03372d997c28e2cee971dfb635101a912" translate="yes" xml:space="preserve">
          <source>Renders the input points of the Delaunay triangulation to the specified &lt;em&gt;context&lt;/em&gt; as circles with the specified &lt;em&gt;radius&lt;/em&gt;. If &lt;em&gt;radius&lt;/em&gt; is not specified, it defaults to 2. The specified &lt;em&gt;context&lt;/em&gt; must implement the &lt;em&gt;context&lt;/em&gt;.moveTo and &lt;em&gt;context&lt;/em&gt;.arc methods from the &lt;a href=&quot;https://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;CanvasPathMethods API&lt;/a&gt;. If a &lt;em&gt;context&lt;/em&gt; is not specified, an SVG path string is returned instead.</source>
          <target state="translated">Delaunay三角形分割の入力ポイントを、指定された&lt;em&gt;半径を&lt;/em&gt;持つ円として指定された&lt;em&gt;コンテキストに&lt;/em&gt;レンダリングします。&lt;em&gt;radius&lt;/em&gt;が指定されていない場合、デフォルトは2です。指定された&lt;em&gt;コンテキスト&lt;/em&gt;は、&lt;a href=&quot;https://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;CanvasPathMethods API&lt;/a&gt;の&lt;em&gt;context&lt;/em&gt; .moveToおよび&lt;em&gt;context&lt;/em&gt; .arcメソッドを実装する必要があります。&lt;em&gt;コンテキスト&lt;/em&gt;が指定されていない場合は、代わりにSVGパス文字列が返されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="709ebb32de7db87004aba4e2b729e45a7dd9810f" translate="yes" xml:space="preserve">
          <source>Renders the mesh of Voronoi cells to the specified &lt;em&gt;context&lt;/em&gt;. The specified &lt;em&gt;context&lt;/em&gt; must implement the &lt;em&gt;context&lt;/em&gt;.moveTo and &lt;em&gt;context&lt;/em&gt;.lineTo methods from the &lt;a href=&quot;https://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;CanvasPathMethods API&lt;/a&gt;. If a &lt;em&gt;context&lt;/em&gt; is not specified, an SVG path string is returned instead.</source>
          <target state="translated">Voronoiセルのメッシュを指定された&lt;em&gt;コンテキストに&lt;/em&gt;レンダリングし&lt;em&gt;ます&lt;/em&gt;。指定された&lt;em&gt;コンテキスト&lt;/em&gt;は、&lt;a href=&quot;https://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;CanvasPathMethods API&lt;/a&gt;の&lt;em&gt;context&lt;/em&gt; .moveToおよび&lt;em&gt;context&lt;/em&gt; .lineToメソッドを実装する必要があります。&lt;em&gt;コンテキスト&lt;/em&gt;が指定されていない場合は、代わりにSVGパス文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="4020be47562f719a17f14d9aadec9855471b561c" translate="yes" xml:space="preserve">
          <source>Renders the viewport extent to the specified &lt;em&gt;context&lt;/em&gt;. The specified &lt;em&gt;context&lt;/em&gt; must implement the &lt;em&gt;context&lt;/em&gt;.rect method from the &lt;a href=&quot;https://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;CanvasPathMethods API&lt;/a&gt;. Equivalent to &lt;em&gt;context&lt;/em&gt;.rect(&lt;em&gt;voronoi&lt;/em&gt;.xmin, &lt;em&gt;voronoi&lt;/em&gt;.ymin, &lt;em&gt;voronoi&lt;/em&gt;.xmax - &lt;em&gt;voronoi&lt;/em&gt;.xmin, &lt;em&gt;voronoi&lt;/em&gt;.ymax - &lt;em&gt;voronoi&lt;/em&gt;.ymin). If a &lt;em&gt;context&lt;/em&gt; is not specified, an SVG path string is returned instead.</source>
          <target state="translated">ビューポートの範囲を指定された&lt;em&gt;コンテキストに&lt;/em&gt;レンダリングし&lt;em&gt;ます&lt;/em&gt;。指定された&lt;em&gt;コンテキスト&lt;/em&gt;は、&lt;a href=&quot;https://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;CanvasPathMethods APIの&lt;/a&gt;&lt;em&gt;context&lt;/em&gt; .rectメソッドを実装する必要があります。同等の&lt;em&gt;コンテキスト&lt;/em&gt;（.rect &lt;em&gt;ボロノイ&lt;/em&gt; .xmin、&lt;em&gt;ボロノイ&lt;/em&gt; .ymin、&lt;em&gt;ボロノイ&lt;/em&gt; - .xmax &lt;em&gt;ボロノイ&lt;/em&gt; .xmin、&lt;em&gt;ボロノイ&lt;/em&gt; .ymax - &lt;em&gt;ボロノイ&lt;/em&gt; .ymin）。&lt;em&gt;コンテキスト&lt;/em&gt;が指定されていない場合は、代わりにSVGパス文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="03b690328a484a7420f9ec958796edde99bbfb7c" translate="yes" xml:space="preserve">
          <source>Renders this symbol type to the specified &lt;em&gt;context&lt;/em&gt; with the specified &lt;em&gt;size&lt;/em&gt; in square pixels. The &lt;em&gt;context&lt;/em&gt; implements the &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;CanvasPathMethods&lt;/a&gt; interface. (Note that this is a subset of the CanvasRenderingContext2D interface!)</source>
          <target state="translated">このシンボルタイプを、正方形ピクセルで指定&lt;em&gt;さ&lt;/em&gt;れた&lt;em&gt;サイズ&lt;/em&gt;の指定&lt;em&gt;さ&lt;/em&gt;れた&lt;em&gt;コンテキストに&lt;/em&gt;レンダリングします。&lt;em&gt;コンテキスト&lt;/em&gt;実装&lt;a href=&quot;http://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;CanvasPathMethodsは&lt;/a&gt;インターフェイス。（これはCanvasRenderingContext2Dインターフェースのサブセットであることに注意してください！）&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a313015541372af20e053cb374f2f9c9db89915d" translate="yes" xml:space="preserve">
          <source>Renders triangle &lt;em&gt;i&lt;/em&gt; of the Delaunay triangulation to the specified &lt;em&gt;context&lt;/em&gt;. The specified &lt;em&gt;context&lt;/em&gt; must implement the &lt;em&gt;context&lt;/em&gt;.moveTo, &lt;em&gt;context&lt;/em&gt;.lineTo and &lt;em&gt;context&lt;/em&gt;.closePath methods from the &lt;a href=&quot;https://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;CanvasPathMethods API&lt;/a&gt;. If a &lt;em&gt;context&lt;/em&gt; is not specified, an SVG path string is returned instead.</source>
          <target state="translated">Delaunay三角形分割の三角形&lt;em&gt;i&lt;/em&gt;を指定された&lt;em&gt;コンテキストに&lt;/em&gt;レンダリングし&lt;em&gt;ます&lt;/em&gt;。指定された&lt;em&gt;コンテキスト&lt;/em&gt;は、&lt;a href=&quot;https://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;CanvasPathMethods API&lt;/a&gt;の&lt;em&gt;context&lt;/em&gt; .moveTo、&lt;em&gt;context&lt;/em&gt; .lineTo、&lt;em&gt;context&lt;/em&gt; .closePathメソッドを実装する必要があります。&lt;em&gt;コンテキスト&lt;/em&gt;が指定されていない場合は、代わりにSVGパス文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="d5e13debaeaca38ab85687f37008af4cb16bad3e" translate="yes" xml:space="preserve">
          <source>Replacing d3.svg.brush, there are now three classes of brush for brushing along the &lt;em&gt;x&lt;/em&gt;-dimension, the &lt;em&gt;y&lt;/em&gt;-dimension, or both: &lt;a href=&quot;../../../d3-brush#brushX&quot;&gt;d3.brushX&lt;/a&gt;, &lt;a href=&quot;../../../d3-brush#brushY&quot;&gt;d3.brushY&lt;/a&gt;, &lt;a href=&quot;../../../d3-brush#brush&quot;&gt;d3.brush&lt;/a&gt;. Brushes are no longer dependent on &lt;a href=&quot;#scales-d3-scale&quot;&gt;scales&lt;/a&gt;; instead, each brush defines a selection in screen coordinates. This selection can be &lt;a href=&quot;../../../d3-scale#continuous_invert&quot;&gt;inverted&lt;/a&gt; if you want to compute the corresponding data domain. And rather than rely on the scales&amp;rsquo; ranges to determine the brushable area, there is now a &lt;a href=&quot;../../../d3-brush#brush_extent&quot;&gt;&lt;em&gt;brush&lt;/em&gt;.extent&lt;/a&gt; method for setting it. If you do not set the brush extent, it defaults to the full extent of the owner SVG element. The &lt;em&gt;brush&lt;/em&gt;.clamp method has also been eliminated; brushing is always restricted to the brushable area defined by the brush extent.</source>
          <target state="translated">d3.svg.brushの代わりに、&lt;em&gt;x&lt;/em&gt;次元、&lt;em&gt;y&lt;/em&gt;次元、またはその両方に沿ってブラシを&lt;em&gt;かける&lt;/em&gt;ための3つのクラスのブラシがあります：&lt;a href=&quot;../../../d3-brush#brushX&quot;&gt;d3.brushX&lt;/a&gt;、&lt;a href=&quot;../../../d3-brush#brushY&quot;&gt;d3.brushY&lt;/a&gt;、&lt;a href=&quot;../../../d3-brush#brush&quot;&gt;d3.brush&lt;/a&gt;。ブラシは&lt;a href=&quot;#scales-d3-scale&quot;&gt;スケールに&lt;/a&gt;依存しなくなりました。代わりに、各ブラシは画面座標の選択を定義します。対応するデータドメインを計算する場合は、この選択を&lt;a href=&quot;../../../d3-scale#continuous_invert&quot;&gt;逆に&lt;/a&gt;することができます。そして、&lt;a href=&quot;../../../d3-brush#brush_extent&quot;&gt;&lt;em&gt;ブラシ&lt;/em&gt;&lt;/a&gt;の領域を決定するためにスケールの範囲に依存するのではなく、&lt;em&gt;ブラシ&lt;/em&gt;を設定するための.extentメソッドがあります。ブラシの範囲を設定しない場合、デフォルトで所有者のSVG要素の範囲全体に設定されます。&lt;em&gt;ブラシ&lt;/em&gt;.clampメソッドも削除されました。ブラッシングは常に、ブラシ範囲によって定義されたブラッシング可能領域に制限されます。</target>
        </trans-unit>
        <trans-unit id="4aed03cac49d5e43da4e855a967286931a4d621a" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="translated">Request</target>
        </trans-unit>
        <trans-unit id="586b905f97b5d2ef7fee8270e844f5aef4ddf2bd" translate="yes" xml:space="preserve">
          <source>Request headers can only be modified before the request is &lt;a href=&quot;#request_send&quot;&gt;sent&lt;/a&gt;. Therefore, you cannot pass a callback to the &lt;a href=&quot;#request&quot;&gt;request constructor&lt;/a&gt; if you wish to specify a header; use &lt;a href=&quot;#request_get&quot;&gt;&lt;em&gt;request&lt;/em&gt;.get&lt;/a&gt; or similar instead. For example:</source>
          <target state="translated">リクエストヘッダーは、リクエストが&lt;a href=&quot;#request_send&quot;&gt;送信&lt;/a&gt;される前にのみ変更できます。したがって、ヘッダーを指定する場合、コールバックを&lt;a href=&quot;#request&quot;&gt;リクエストコンストラクターに&lt;/a&gt;渡すことはできません。代わりに&lt;a href=&quot;#request_get&quot;&gt;&lt;em&gt;request&lt;/em&gt; .get&lt;/a&gt;などを使用してください。例えば：</target>
        </trans-unit>
        <trans-unit id="f7194e6a0d0b838382b202853e7c198d693fbabc" translate="yes" xml:space="preserve">
          <source>Requests</source>
          <target state="translated">Requests</target>
        </trans-unit>
        <trans-unit id="74af1c1b991ab10ac4930a9e0dea202738ef3d93" translate="yes" xml:space="preserve">
          <source>Requests (d3-request)</source>
          <target state="translated">リクエスト(d3-リクエスト)</target>
        </trans-unit>
        <trans-unit id="2f970a95b626ed07573904fa6aa16459c0b3b7ab" translate="yes" xml:space="preserve">
          <source>Requires the specified &lt;em&gt;module&lt;/em&gt;, making it available for use in any expressions used by this command. The loaded module is available as the symbol &lt;em&gt;name&lt;/em&gt;. If &lt;em&gt;name&lt;/em&gt; is not specified, it defaults to &lt;em&gt;module&lt;/em&gt;. (If &lt;em&gt;module&lt;/em&gt; is not a valid identifier, you must specify a &lt;em&gt;name&lt;/em&gt;.) For example, to reproject the world on the &lt;a href=&quot;d3-geo-polygon#geoAirocean&quot;&gt;Airocean projection&lt;/a&gt;:</source>
          <target state="translated">指定された&lt;em&gt;モジュール&lt;/em&gt;が必要で、このコマンドで使用されるすべての式で使用できるようにします。ロードされたモジュールはシンボル&lt;em&gt;名&lt;/em&gt;として利用できます。&lt;em&gt;名前&lt;/em&gt;を指定しない場合、デフォルトで&lt;em&gt;module&lt;/em&gt;になり&lt;em&gt;ます&lt;/em&gt;。（&lt;em&gt;モジュール&lt;/em&gt;が有効な識別子でない場合は、&lt;em&gt;名前を&lt;/em&gt;指定する必要があります。）たとえば、&lt;a href=&quot;d3-geo-polygon#geoAirocean&quot;&gt;Airocean投影法で&lt;/a&gt;世界を再投影するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="02e49d62934f9e20b2e30244e65567328011dab4" translate="yes" xml:space="preserve">
          <source>Restart a timer with the specified &lt;em&gt;callback&lt;/em&gt; and optional &lt;em&gt;delay&lt;/em&gt; and &lt;em&gt;time&lt;/em&gt;. This is equivalent to stopping this timer and creating a new timer with the specified arguments, although this timer retains the original invocation priority.</source>
          <target state="translated">指定された&lt;em&gt;コールバック&lt;/em&gt;とオプションの&lt;em&gt;遅延&lt;/em&gt;と&lt;em&gt;時間で&lt;/em&gt;タイマーを再起動し&lt;em&gt;ます&lt;/em&gt;。これは、このタイマーを停止し、指定された引数で新しいタイマーを作成することと同じですが、このタイマーは元の呼び出し優先度を保持します。</target>
        </trans-unit>
        <trans-unit id="0cfc2911247483aa8fb2ece925bd4d900c266e6e" translate="yes" xml:space="preserve">
          <source>Restarts the simulation&amp;rsquo;s internal timer and returns the simulation. In conjunction with &lt;a href=&quot;#simulation_alphaTarget&quot;&gt;&lt;em&gt;simulation&lt;/em&gt;.alphaTarget&lt;/a&gt; or &lt;a href=&quot;#simulation_alpha&quot;&gt;&lt;em&gt;simulation&lt;/em&gt;.alpha&lt;/a&gt;, this method can be used to &amp;ldquo;reheat&amp;rdquo; the simulation during interaction, such as when dragging a node, or to resume the simulation after temporarily pausing it with &lt;a href=&quot;#simulation_stop&quot;&gt;&lt;em&gt;simulation&lt;/em&gt;.stop&lt;/a&gt;.</source>
          <target state="translated">シミュレーションの内部タイマーを再起動し、シミュレーションを返します。連動して&lt;a href=&quot;#simulation_alphaTarget&quot;&gt;&lt;em&gt;シミュレーション&lt;/em&gt; .alphaTarget&lt;/a&gt;や&lt;a href=&quot;#simulation_alpha&quot;&gt;&lt;em&gt;シミュレーション&lt;/em&gt;、&amp;alpha;&lt;/a&gt;、この方法は、このようなノードをドラッグするか、一時的にそれを一時停止した後、シミュレーションを再開するときのように、相互作用の間にシミュレーション「再加熱」するために使用することができる&lt;a href=&quot;#simulation_stop&quot;&gt;&lt;em&gt;シミュレーション&lt;/em&gt; .stop&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d3ce26a123c5a47acadcf097c5b63ea83ae35f36" translate="yes" xml:space="preserve">
          <source>Return a deep copy of the subtree starting at this &lt;em&gt;node&lt;/em&gt;. (The returned deep copy shares the same data, however.) The returned node is the root of a new tree; the returned node&amp;rsquo;s parent is always null and its depth is always zero.</source>
          <target state="translated">この&lt;em&gt;ノードで&lt;/em&gt;始まるサブツリーのディープコピーを返し&lt;em&gt;ます&lt;/em&gt;。（ただし、返されるディープコピーは同じデータを共有します。）返されるノードは新しいツリーのルートです。返されるノードの親は常にnullであり、その深さは常にゼロです。</target>
        </trans-unit>
        <trans-unit id="1bbfe86b2163cbd968fc02fd113ff9843a2e437b" translate="yes" xml:space="preserve">
          <source>Returns -1 if &lt;em&gt;a&lt;/em&gt; is greater than &lt;em&gt;b&lt;/em&gt;, or 1 if &lt;em&gt;a&lt;/em&gt; is less than &lt;em&gt;b&lt;/em&gt;, or 0. This is the comparator function for reverse natural order, and can be used in conjunction with the built-in array sort method to arrange elements in descending order. It is implemented as:</source>
          <target state="translated">-1を返した場合よりも大きい&lt;em&gt;B&lt;/em&gt;場合、または1 未満である&lt;em&gt;B&lt;/em&gt;、または0これは逆自然順序のための比較関数であり、の要素を配置する内蔵アレイソート方法と組み合わせて使用することができます降順。次のように実装されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="23df2b4054fed648d5ba808e520be1018ffa8bf7" translate="yes" xml:space="preserve">
          <source>Returns -1 if &lt;em&gt;a&lt;/em&gt; is less than &lt;em&gt;b&lt;/em&gt;, or 1 if &lt;em&gt;a&lt;/em&gt; is greater than &lt;em&gt;b&lt;/em&gt;, or 0. This is the comparator function for natural order, and can be used in conjunction with the built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort&quot;&gt;&lt;em&gt;array&lt;/em&gt;.sort&lt;/a&gt; method to arrange elements in ascending order. It is implemented as:</source>
          <target state="translated">-1を返した場合よりも小さい&lt;em&gt;B&lt;/em&gt;場合、または1 より大きい&lt;em&gt;B&lt;/em&gt;、または0これは自然な順序のための比較関数であり、ビルトインと組み合わせて使用することができる&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort&quot;&gt;&lt;em&gt;配列&lt;/em&gt;&lt;/a&gt; .sortの要素を配置する方法昇順。次のように実装されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fbe4ac9d99d02911788ae152d85afbda1123acd4" translate="yes" xml:space="preserve">
          <source>Returns &lt;em&gt;n&lt;/em&gt; uniformly-spaced samples from the specified &lt;em&gt;interpolator&lt;/em&gt;, where &lt;em&gt;n&lt;/em&gt; is an integer greater than one. The first sample is always at &lt;em&gt;t&lt;/em&gt; = 0, and the last sample is always at &lt;em&gt;t&lt;/em&gt; = 1. This can be useful in generating a fixed number of samples from a given interpolator, such as to derive the range of a &lt;a href=&quot;d3-scale#quantize-scales&quot;&gt;quantize scale&lt;/a&gt; from a &lt;a href=&quot;d3-scale#interpolateWarm&quot;&gt;continuous interpolator&lt;/a&gt;.</source>
          <target state="translated">戻り&lt;em&gt;N&lt;/em&gt;指定から均一に離間したサンプル&lt;em&gt;補間&lt;/em&gt;、&lt;em&gt;nは&lt;/em&gt; 1以上の整数大きいです。最初のサンプルは常に&lt;em&gt;t&lt;/em&gt; = 0にあり、最後のサンプルは常に&lt;em&gt;t&lt;/em&gt; = 1にあります。これは、&lt;a href=&quot;d3-scale#interpolateWarm&quot;&gt;連続&lt;/a&gt;から&lt;a href=&quot;d3-scale#quantize-scales&quot;&gt;量子化スケールの&lt;/a&gt;範囲を導出するなど、特定の補間から一定数のサンプルを生成するのに役立ちます。補間器。</target>
        </trans-unit>
        <trans-unit id="4a79298a8bd9ae0ff9091ac9a3a2ea38601b26e9" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#_rotation&quot;&gt;rotation function&lt;/a&gt; for the given &lt;em&gt;angles&lt;/em&gt;, which must be a two- or three-element array of numbers [&lt;em&gt;lambda&lt;/em&gt;, &lt;em&gt;phi&lt;/em&gt;, &lt;em&gt;gamma&lt;/em&gt;] specifying the rotation angles in degrees about &lt;a href=&quot;https://bl.ocks.org/mbostock/4282586&quot;&gt;each spherical axis&lt;/a&gt;. (These correspond to &lt;a href=&quot;http://en.wikipedia.org/wiki/Aircraft_principal_axes&quot;&gt;yaw, pitch and roll&lt;/a&gt;.) If the rotation angle &lt;em&gt;gamma&lt;/em&gt; is omitted, it defaults to 0. See also &lt;a href=&quot;#projection_rotate&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.rotate&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;em&gt;角度の&lt;/em&gt;&lt;a href=&quot;#_rotation&quot;&gt;回転関数&lt;/a&gt;を返します。これは、&lt;a href=&quot;https://bl.ocks.org/mbostock/4282586&quot;&gt;各球軸を中心と&lt;/a&gt;した回転角度を度数で指定する数値の2要素または3要素の配列[ &lt;em&gt;ラムダ&lt;/em&gt;、&lt;em&gt;ファイ&lt;/em&gt;、&lt;em&gt;ガンマ&lt;/em&gt; ] である必要があります。 （これらは、&lt;a href=&quot;http://en.wikipedia.org/wiki/Aircraft_principal_axes&quot;&gt;ヨー、ピッチ、ロールに&lt;/a&gt;対応します。）回転角&lt;em&gt;ガンマ&lt;/em&gt;を省略すると、デフォルトで0に&lt;a href=&quot;#projection_rotate&quot;&gt;なり&lt;/a&gt;ます。&lt;em&gt;プロジェクション&lt;/em&gt; .rotateも参照してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="681597c4cb5060210485b5abeb528924711274b4" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#interval_filter&quot;&gt;filtered&lt;/a&gt; view of this interval representing every &lt;em&gt;step&lt;/em&gt;th date. The meaning of &lt;em&gt;step&lt;/em&gt; is dependent on this interval&amp;rsquo;s parent interval as defined by the field function. For example, &lt;a href=&quot;#timeMinute&quot;&gt;d3.timeMinute&lt;/a&gt;.every(15) returns an interval representing every fifteen minutes, starting on the hour: :00, :15, :30, :45,</source>
          <target state="translated">すべての&lt;em&gt;ステップの&lt;/em&gt;日付を表すこの間隔の&lt;a href=&quot;#interval_filter&quot;&gt;フィルターされた&lt;/a&gt;ビューを返します。&lt;em&gt;ステップ&lt;/em&gt;の意味は、フィールド関数で定義されているこの間隔の親間隔によって異なります。たとえば、&lt;a href=&quot;#timeMinute&quot;&gt;d3.timeMinute&lt;/a&gt; .every（15）は、15分ごとを表す時間間隔を開始する間隔を返します：：00、：15、：30、：45、&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3793b4a0d29b5d8794fb749187d67a6331c382a6" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#streams&quot;&gt;projection stream&lt;/a&gt; for the specified output &lt;em&gt;stream&lt;/em&gt;. Any input geometry is projected before being streamed to the output stream. A typical projection involves several geometry transformations: the input geometry is first converted to radians, rotated on three axes, clipped to the small circle or cut along the antimeridian, and lastly projected to the plane with adaptive resampling, scale and translation.</source>
          <target state="translated">指定された出力&lt;em&gt;ストリームの&lt;/em&gt;&lt;a href=&quot;#streams&quot;&gt;投影ストリーム&lt;/a&gt;を返します。入力ジオメトリは、出力ストリームにストリーミングされる前に投影されます。典型的な投影には、いくつかのジオメトリ変換が含まれます。入力ジオメトリは最初にラジアンに変換され、3つの軸で回転され、小さな円にクリップされるか、時系列に沿ってカットされ、最後に、適応リサンプリング、スケール、および変換を使用して平面に投影されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="076f71157d7bdda20c7866be13bef862461239e9" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;d3-format&quot;&gt;number format&lt;/a&gt; function suitable for displaying a tick value, automatically computing the appropriate precision based on the fixed interval between tick values. The specified &lt;em&gt;count&lt;/em&gt; should have the same value as the count that is used to generate the &lt;a href=&quot;#continuous_ticks&quot;&gt;tick values&lt;/a&gt;.</source>
          <target state="translated">目盛り値の表示に適した&lt;a href=&quot;d3-format&quot;&gt;数値フォーマット&lt;/a&gt;関数を返し、目盛り値間の固定間隔に基づいて適切な精度を自動的に計算します。指定された&lt;em&gt;カウント&lt;/em&gt;は、&lt;a href=&quot;#continuous_ticks&quot;&gt;ティック値の&lt;/a&gt;生成に使用されるカウントと同じ値である必要があります。</target>
        </trans-unit>
        <trans-unit id="b11f4d95c6afa245b2bf3a2958e06c7f8fd7d75e" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;d3-scale#continuous_copy&quot;&gt;copy&lt;/a&gt; of the &lt;a href=&quot;d3-scale#continuous-scales&quot;&gt;continuous scale&lt;/a&gt;&lt;em&gt;x&lt;/em&gt; whose &lt;a href=&quot;d3-scale#continuous_domain&quot;&gt;domain&lt;/a&gt; is transformed. This is implemented by first applying the &lt;a href=&quot;#transform_invertX&quot;&gt;inverse &lt;em&gt;x&lt;/em&gt;-transform&lt;/a&gt; on the scale&amp;rsquo;s &lt;a href=&quot;d3-scale#continuous_range&quot;&gt;range&lt;/a&gt;, and then applying the &lt;a href=&quot;d3-scale#continuous_invert&quot;&gt;inverse scale&lt;/a&gt; to compute the corresponding domain:</source>
          <target state="translated">返し&lt;a href=&quot;d3-scale#continuous_copy&quot;&gt;コピー&lt;/a&gt;の&lt;a href=&quot;d3-scale#continuous-scales&quot;&gt;連続尺度&lt;/a&gt;&lt;em&gt;X &lt;/em&gt;&lt;a href=&quot;d3-scale#continuous_domain&quot;&gt;ドメイン&lt;/a&gt;変換されています。これは、最初にスケールの&lt;a href=&quot;d3-scale#continuous_range&quot;&gt;範囲&lt;/a&gt;に&lt;a href=&quot;#transform_invertX&quot;&gt;逆&lt;em&gt;x&lt;/em&gt;変換&lt;/a&gt;を適用し、次に&lt;a href=&quot;d3-scale#continuous_invert&quot;&gt;逆スケール&lt;/a&gt;を適用して対応するドメインを計算することによって実装されます。</target>
        </trans-unit>
        <trans-unit id="44a8f6e1af2fdc60f7285fd3963153a414ca1055" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;d3-scale#continuous_copy&quot;&gt;copy&lt;/a&gt; of the &lt;a href=&quot;d3-scale#continuous-scales&quot;&gt;continuous scale&lt;/a&gt;&lt;em&gt;y&lt;/em&gt; whose &lt;a href=&quot;d3-scale#continuous_domain&quot;&gt;domain&lt;/a&gt; is transformed. This is implemented by first applying the &lt;a href=&quot;#transform_invertY&quot;&gt;inverse &lt;em&gt;y&lt;/em&gt;-transform&lt;/a&gt; on the scale&amp;rsquo;s &lt;a href=&quot;d3-scale#continuous_range&quot;&gt;range&lt;/a&gt;, and then applying the &lt;a href=&quot;d3-scale#continuous_invert&quot;&gt;inverse scale&lt;/a&gt; to compute the corresponding domain:</source>
          <target state="translated">返し&lt;a href=&quot;d3-scale#continuous_copy&quot;&gt;コピー&lt;/a&gt;の&lt;a href=&quot;d3-scale#continuous-scales&quot;&gt;連続尺度の&lt;/a&gt;&lt;em&gt;Y &lt;/em&gt;&lt;a href=&quot;d3-scale#continuous_domain&quot;&gt;ドメイン&lt;/a&gt;変換されています。これは、最初にスケールの&lt;a href=&quot;d3-scale#continuous_range&quot;&gt;範囲&lt;/a&gt;に&lt;a href=&quot;#transform_invertY&quot;&gt;逆&lt;em&gt;y&lt;/em&gt;変換&lt;/a&gt;を適用し、次に&lt;a href=&quot;d3-scale#continuous_invert&quot;&gt;逆スケール&lt;/a&gt;を適用して対応するドメインを計算することによって実装されます。</target>
        </trans-unit>
        <trans-unit id="21a89640e015ca29f76d35289d9f0372135874d4" translate="yes" xml:space="preserve">
          <source>Returns a &lt;em&gt;locale&lt;/em&gt; object for the specified &lt;em&gt;definition&lt;/em&gt; with &lt;a href=&quot;#locale_format&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.format&lt;/a&gt; and &lt;a href=&quot;#locale_formatPrefix&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.formatPrefix&lt;/a&gt; methods. The &lt;em&gt;definition&lt;/em&gt; must include the following properties:</source>
          <target state="translated">&lt;a href=&quot;#locale_format&quot;&gt;&lt;em&gt;locale&lt;/em&gt;&lt;/a&gt; .formatおよび&lt;a href=&quot;#locale_formatPrefix&quot;&gt;&lt;em&gt;locale&lt;/em&gt;&lt;/a&gt; .formatPrefixメソッドを使用して、指定された&lt;em&gt;定義の&lt;/em&gt;&lt;em&gt;ロケール&lt;/em&gt;オブジェクトを返します。&lt;em&gt;定義は、&lt;/em&gt;以下のプロパティを含める必要があります。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e7afbf182a9a5bc63a668318cdd06b6e6bae8dca" translate="yes" xml:space="preserve">
          <source>Returns a &lt;em&gt;locale&lt;/em&gt; object for the specified &lt;em&gt;definition&lt;/em&gt; with &lt;a href=&quot;#locale_format&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.format&lt;/a&gt;, &lt;a href=&quot;#locale_parse&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.parse&lt;/a&gt;, &lt;a href=&quot;#locale_utcFormat&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.utcFormat&lt;/a&gt;, &lt;a href=&quot;#locale_utcParse&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.utcParse&lt;/a&gt; methods. The &lt;em&gt;definition&lt;/em&gt; must include the following properties:</source>
          <target state="translated">戻り値&lt;em&gt;ロケール&lt;/em&gt;指定のためのオブジェクト&lt;em&gt;定義&lt;/em&gt;と&lt;a href=&quot;#locale_format&quot;&gt;&lt;em&gt;ロケール&lt;/em&gt; .format&lt;/a&gt;、&lt;a href=&quot;#locale_parse&quot;&gt;&lt;em&gt;ロケール&lt;/em&gt; .parse&lt;/a&gt;、&lt;a href=&quot;#locale_utcFormat&quot;&gt;&lt;em&gt;ロケール&lt;/em&gt; .utcFormat&lt;/a&gt;、&lt;a href=&quot;#locale_utcParse&quot;&gt;&lt;em&gt;ロケール&lt;/em&gt; .utcParse&lt;/a&gt;方法。&lt;em&gt;定義は、&lt;/em&gt;以下のプロパティを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="407f4d476e052ff2e6b9d8c80f2defa99e1a4eab" translate="yes" xml:space="preserve">
          <source>Returns a Cubehelix color space interpolator between the two colors &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; using a configurable &lt;a href=&quot;#interpolate_gamma&quot;&gt;gamma&lt;/a&gt;. If the gamma is not specified, it defaults to 1.0. The colors &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; need not be in Cubehelix; they will be converted to Cubehelix using &lt;a href=&quot;d3-color#cubehelix&quot;&gt;d3.cubehelix&lt;/a&gt;. If either color&amp;rsquo;s hue or saturation is NaN, the opposing color&amp;rsquo;s channel value is used. The shortest path between hues is used. The return value of the interpolator is an RGB string.</source>
          <target state="translated">構成可能な&lt;a href=&quot;#interpolate_gamma&quot;&gt;ガンマ&lt;/a&gt;を使用して、2つの色&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;間のCubehelix色空間補間を返します。ガンマが指定されていない場合、デフォルトは1.0です。色&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;b&lt;/em&gt;はCubehelixである必要はありません。それらはd3.cubehelixを使用して&lt;a href=&quot;d3-color#cubehelix&quot;&gt;Cubehelixに&lt;/a&gt;変換されます。色の色相または彩度がNaNの場合、反対側の色のチャネル値が使用されます。色相間の最短経路が使用されます。補間器の戻り値はRGB文字列です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3780d9fef2e41b6f43d718438aa8f1ad5aa6d3e8" translate="yes" xml:space="preserve">
          <source>Returns a GeoJSON MultiLineString geometry object representing all meridians and parallels for this graticule.</source>
          <target state="translated">この格子のすべての子午線と平行線を表す GeoJSON MultiLineString ジオメトリオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="24eca11a07b5ef34721c4670a63408e8c6ae63d9" translate="yes" xml:space="preserve">
          <source>Returns a GeoJSON Polygon geometry object representing the outline of this graticule, i.e. along the meridians and parallels defining its extent.</source>
          <target state="translated">GeoJSONポリゴンジオメトリオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="25ff027cc197aafc47ab1b0af370e19121d483cd" translate="yes" xml:space="preserve">
          <source>Returns a Lab color space interpolator between the two colors &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. The colors &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; need not be in Lab; they will be converted to Lab using &lt;a href=&quot;d3-color#lab&quot;&gt;d3.lab&lt;/a&gt;. The return value of the interpolator is an RGB string.</source>
          <target state="translated">2つの色&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;間のLab色空間補間を返します。色&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;b&lt;/em&gt;はラボにある必要はありません。それらは&lt;a href=&quot;d3-color#lab&quot;&gt;d3.lab&lt;/a&gt;を使用してLabに変換されます。補間器の戻り値はRGB文字列です。</target>
        </trans-unit>
        <trans-unit id="6ff6d027fee2f5f40335e348c043569d3a99e329" translate="yes" xml:space="preserve">
          <source>Returns a brighter copy of this color. If &lt;em&gt;k&lt;/em&gt; is specified, it controls how much brighter the returned color should be. If &lt;em&gt;k&lt;/em&gt; is not specified, it defaults to 1. The behavior of this method is dependent on the implementing color space.</source>
          <target state="translated">この色の明るいコピーを返します。&lt;em&gt;k&lt;/em&gt;が指定されている場合は、返される色の明るさを制御します。&lt;em&gt;k&lt;/em&gt;が指定されていない場合、デフォルトは1です。このメソッドの動作は、実装する色空間に依存します。</target>
        </trans-unit>
        <trans-unit id="ccd9b9fe5cf913ac5e010b3c4b684781b280e19d" translate="yes" xml:space="preserve">
          <source>Returns a bundle curve with the specified &lt;em&gt;beta&lt;/em&gt; in the range [0, 1], representing the bundle strength. If &lt;em&gt;beta&lt;/em&gt; equals zero, a straight line between the first and last point is produced; if &lt;em&gt;beta&lt;/em&gt; equals one, a standard &lt;a href=&quot;#basis&quot;&gt;basis&lt;/a&gt; spline is produced. For example:</source>
          <target state="translated">バンドル強度を表す、範囲[0、1] の指定された&lt;em&gt;ベータ&lt;/em&gt;を持つバンドル曲線を返します。&lt;em&gt;ベータ&lt;/em&gt;がゼロの場合、最初の点と最後の点の間に直線が作成されます。場合&lt;em&gt;ベータ版は&lt;/em&gt; 1に等しく、標準&lt;a href=&quot;#basis&quot;&gt;基底&lt;/a&gt;スプラインが生成されます。例えば：</target>
        </trans-unit>
        <trans-unit id="b6c81840a9ee0eb78631f5637aa357cfbef72b8c" translate="yes" xml:space="preserve">
          <source>Returns a cardinal curve with the specified &lt;em&gt;tension&lt;/em&gt; in the range [0, 1]. The &lt;em&gt;tension&lt;/em&gt; determines the length of the tangents: a &lt;em&gt;tension&lt;/em&gt; of one yields all zero tangents, equivalent to &lt;a href=&quot;#curveLinear&quot;&gt;curveLinear&lt;/a&gt;; a &lt;em&gt;tension&lt;/em&gt; of zero produces a uniform &lt;a href=&quot;#curveCatmullRom&quot;&gt;Catmull&amp;ndash;Rom&lt;/a&gt; spline. For example:</source>
          <target state="translated">[0、1]の範囲で指定された&lt;em&gt;張力&lt;/em&gt;を持つ基数曲線を返します。&lt;em&gt;張力は、&lt;/em&gt;接線の長さを決定する：&lt;em&gt;張力&lt;/em&gt;に相当1つの歩留まり全てゼロ接線の、&lt;a href=&quot;#curveLinear&quot;&gt;curveLinearします&lt;/a&gt;。&lt;em&gt;張力&lt;/em&gt;ゼロのは、均一な生成&lt;a href=&quot;#curveCatmullRom&quot;&gt;キャットマル-Romの&lt;/a&gt;スプライン。例えば：</target>
        </trans-unit>
        <trans-unit id="de78b20eb103345c75882a7db057120205652d72" translate="yes" xml:space="preserve">
          <source>Returns a copy of the quadtree. All &lt;a href=&quot;#nodes&quot;&gt;nodes&lt;/a&gt; in the returned quadtree are identical copies of the corresponding node in the quadtree; however, any data in the quadtree is shared by reference and not copied.</source>
          <target state="translated">四分木のコピーを返します。返された四分木内のすべての&lt;a href=&quot;#nodes&quot;&gt;ノード&lt;/a&gt;は、四分木内の対応するノードの同一のコピーです。ただし、クワッドツリー内のデータは参照によって共有され、コピーされません。</target>
        </trans-unit>
        <trans-unit id="4439418f0dcdd2daae6853cbb10c100fa7a34a29" translate="yes" xml:space="preserve">
          <source>Returns a copy of this dispatch object. Changes to this dispatch do not affect the returned copy and</source>
          <target state="translated">このディスパッチオブジェクトのコピーを返します。このディスパッチへの変更は、返されたコピーには影響しません。</target>
        </trans-unit>
        <trans-unit id="753c31536fce0690209dd6fc42ed67eb559b9757" translate="yes" xml:space="preserve">
          <source>Returns a cubic Catmull&amp;ndash;Rom curve with the specified &lt;em&gt;alpha&lt;/em&gt; in the range [0, 1]. If &lt;em&gt;alpha&lt;/em&gt; is zero, produces a uniform spline, equivalent to &lt;a href=&quot;#curveCardinal&quot;&gt;curveCardinal&lt;/a&gt; with a tension of zero; if &lt;em&gt;alpha&lt;/em&gt; is one, produces a chordal spline; if &lt;em&gt;alpha&lt;/em&gt; is 0.5, produces a &lt;a href=&quot;https://en.wikipedia.org/wiki/Centripetal_Catmull%E2%80%93Rom_spline&quot;&gt;centripetal spline&lt;/a&gt;. Centripetal splines are recommended to avoid self-intersections and overshoot. For example:</source>
          <target state="translated">指定された&lt;em&gt;アルファ&lt;/em&gt;が[0、1]の範囲にある3次のCatmull&amp;ndash;Rom曲線を返します。&lt;em&gt;alpha&lt;/em&gt;がゼロの場合、テンションがゼロの&lt;a href=&quot;#curveCardinal&quot;&gt;curveCardinal&lt;/a&gt;と同等の均一なスプラインを生成します。&lt;em&gt;alpha&lt;/em&gt;が1の場合、弦スプラインを生成します。&lt;em&gt;alpha&lt;/em&gt;が0.5の場合、&lt;a href=&quot;https://en.wikipedia.org/wiki/Centripetal_Catmull%E2%80%93Rom_spline&quot;&gt;求心性スプラインを&lt;/a&gt;生成します。自己交差およびオーバーシュートを回避するために、求心スプラインが推奨されます。例えば：</target>
        </trans-unit>
        <trans-unit id="bca9ca1b1f8e299fc52eb2b719f2c62d4d419383" translate="yes" xml:space="preserve">
          <source>Returns a darker copy of this color. If &lt;em&gt;k&lt;/em&gt; is specified, it controls how much darker the returned color should be. If &lt;em&gt;k&lt;/em&gt; is not specified, it defaults to 1. The behavior of this method is dependent on the implementing color space.</source>
          <target state="translated">この色の暗い方のコピーを返します。&lt;em&gt;k&lt;/em&gt;が指定されている場合、返される色をどれだけ暗くするかを制御します。&lt;em&gt;k&lt;/em&gt;が指定されていない場合、デフォルトは1です。このメソッドの動作は、実装する色空間に依存します。</target>
        </trans-unit>
        <trans-unit id="8a1a22e57af56616ad360bf8f5fb452113331f20" translate="yes" xml:space="preserve">
          <source>Returns a discrete interpolator for the given array of &lt;em&gt;values&lt;/em&gt;. The returned interpolator maps &lt;em&gt;t&lt;/em&gt; in [0, 1 / &lt;em&gt;n&lt;/em&gt;) to &lt;em&gt;values&lt;/em&gt;[0], &lt;em&gt;t&lt;/em&gt; in [1 / &lt;em&gt;n&lt;/em&gt;, 2 / &lt;em&gt;n&lt;/em&gt;) to &lt;em&gt;values&lt;/em&gt;[1], and so on, where &lt;em&gt;n&lt;/em&gt; = &lt;em&gt;values&lt;/em&gt;.length. In effect, this is a lightweight &lt;a href=&quot;d3-scale#quantize-scales&quot;&gt;quantize scale&lt;/a&gt; with a fixed domain of [0, 1].</source>
          <target state="translated">指定された&lt;em&gt;値の&lt;/em&gt;配列の離散補間器を返します。返された内挿は、&lt;em&gt;t&lt;/em&gt; in [0、1 / &lt;em&gt;n&lt;/em&gt;）を&lt;em&gt;値&lt;/em&gt; [0]に、&lt;em&gt;t&lt;/em&gt; in [1 / &lt;em&gt;n&lt;/em&gt;、2 / &lt;em&gt;n&lt;/em&gt;）を&lt;em&gt;値&lt;/em&gt; [1]に、というようにマップします。ここで、&lt;em&gt;n&lt;/em&gt; = &lt;em&gt;値&lt;/em&gt; .lengthです。実際、これは[0、1]の固定ドメインを持つ軽量の&lt;a href=&quot;d3-scale#quantize-scales&quot;&gt;量子化スケール&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="afb2e62d90f948bd4a4b7c4d4ab7072001fba93c" translate="yes" xml:space="preserve">
          <source>Returns a function for generating random numbers with a &lt;a href=&quot;https://en.wikipedia.org/wiki/Bates_distribution&quot;&gt;Bates distribution&lt;/a&gt; with &lt;em&gt;n&lt;/em&gt; independent variables.</source>
          <target state="translated">&lt;em&gt;n個の&lt;/em&gt;独立変数を持つ&lt;a href=&quot;https://en.wikipedia.org/wiki/Bates_distribution&quot;&gt;ベイツ分布を&lt;/a&gt;持つ乱数を生成するための関数を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dfbb2d070ba3c39315ee6aacabf7af6e7b42c2ae" translate="yes" xml:space="preserve">
          <source>Returns a function for generating random numbers with a &lt;a href=&quot;https://en.wikipedia.org/wiki/Log-normal_distribution&quot;&gt;log-normal distribution&lt;/a&gt;. The expected value of the random variable&amp;rsquo;s natural logarithm is &lt;em&gt;mu&lt;/em&gt;, with the given standard deviation &lt;em&gt;sigma&lt;/em&gt;. If &lt;em&gt;mu&lt;/em&gt; is not specified, it defaults to 0; if &lt;em&gt;sigma&lt;/em&gt; is not specified, it defaults to 1.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Log-normal_distribution&quot;&gt;対数正規分布で&lt;/a&gt;乱数を生成する関数を返します。確率変数の自然対数の期待値は、与えられた標準偏差&lt;em&gt;sigmaで&lt;/em&gt;&lt;em&gt;mu&lt;/em&gt;です。&lt;em&gt;mu&lt;/em&gt;が指定されていない場合、デフォルトは0です。&lt;em&gt;sigma&lt;/em&gt;が指定されていない場合、デフォルトは1です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5ccb87dac539ab9daafb9e3abe965a3998b28efe" translate="yes" xml:space="preserve">
          <source>Returns a function for generating random numbers with a &lt;a href=&quot;https://en.wikipedia.org/wiki/Normal_distribution&quot;&gt;normal (Gaussian) distribution&lt;/a&gt;. The expected value of the generated numbers is &lt;em&gt;mu&lt;/em&gt;, with the given standard deviation &lt;em&gt;sigma&lt;/em&gt;. If &lt;em&gt;mu&lt;/em&gt; is not specified, it defaults to 0; if &lt;em&gt;sigma&lt;/em&gt; is not specified, it defaults to 1.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Normal_distribution&quot;&gt;正規（ガウス）分布の&lt;/a&gt;乱数を生成する関数を返します。生成された数値の期待値は、与えられた標準偏差&lt;em&gt;sigmaで&lt;/em&gt;&lt;em&gt;mu&lt;/em&gt;です。&lt;em&gt;mu&lt;/em&gt;が指定されていない場合、デフォルトは0です。&lt;em&gt;sigma&lt;/em&gt;が指定されていない場合、デフォルトは1です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2973864df26d6fa084f5e5650f569d4afb66a7ab" translate="yes" xml:space="preserve">
          <source>Returns a function for generating random numbers with a &lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_distribution_(continuous)&quot;&gt;uniform distribution&lt;/a&gt;. The minimum allowed value of a returned number is &lt;em&gt;min&lt;/em&gt;, and the maximum is &lt;em&gt;max&lt;/em&gt;. If &lt;em&gt;min&lt;/em&gt; is not specified, it defaults to 0; if &lt;em&gt;max&lt;/em&gt; is not specified, it defaults to 1. For example:</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_distribution_(continuous)&quot;&gt;一様分布の&lt;/a&gt;乱数を生成する関数を返します。返される数値の最小許容値は&lt;em&gt;min&lt;/em&gt;で、最大値は&lt;em&gt;max&lt;/em&gt;です。&lt;em&gt;min&lt;/em&gt;が指定されていない場合、デフォルトは0です。&lt;em&gt;max&lt;/em&gt;が指定されていない場合、デフォルトは1です。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="b0289342d7654e468ef10643e3be7f8ba4b8c377" translate="yes" xml:space="preserve">
          <source>Returns a function for generating random numbers with an &lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_distribution&quot;&gt;exponential distribution&lt;/a&gt; with the rate &lt;em&gt;lambda&lt;/em&gt;; equivalent to time between events in a &lt;a href=&quot;https://en.wikipedia.org/wiki/Poisson_point_process&quot;&gt;Poisson process&lt;/a&gt; with a mean of 1 / &lt;em&gt;lambda&lt;/em&gt;. For example, exponential(1/40) generates random times between events where, on average, one event occurs every 40 units of time.</source>
          <target state="translated">レートが&lt;em&gt;ラムダの&lt;/em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_distribution&quot;&gt;指数分布の&lt;/a&gt;乱数を生成する関数を返します。&lt;a href=&quot;https://en.wikipedia.org/wiki/Poisson_point_process&quot;&gt;ポアソンプロセスの&lt;/a&gt;イベント間の時間に相当し、平均は1 / &lt;em&gt;ラムダ&lt;/em&gt;です。たとえば、exponential（1/40）は、平均して40単位の時間ごとに1つのイベントが発生するイベント間にランダムな時間を生成します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e1222e31e60ed9e245bb6e11f59952a9dca80435" translate="yes" xml:space="preserve">
          <source>Returns a function for generating random numbers with an &lt;a href=&quot;https://en.wikipedia.org/wiki/Irwin%E2%80%93Hall_distribution&quot;&gt;Irwin&amp;ndash;Hall distribution&lt;/a&gt; with &lt;em&gt;n&lt;/em&gt; independent variables.</source>
          <target state="translated">&lt;em&gt;n個の&lt;/em&gt;独立変数を持つ&lt;a href=&quot;https://en.wikipedia.org/wiki/Irwin%E2%80%93Hall_distribution&quot;&gt;Irwin-Hall分布&lt;/a&gt;で乱数を生成する関数を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b0ddb3fa0cee7450124721eb1fb6a8366b091d6b" translate="yes" xml:space="preserve">
          <source>Returns a hexadecimal string representing this color in RGB space, such as &lt;code&gt;#f7eaba&lt;/code&gt;. If this color is not displayable, a suitable displayable color is returned instead. For example, RGB channel values greater than 255 are clamped to 255.</source>
          <target state="translated">&lt;code&gt;#f7eaba&lt;/code&gt; など、RGB空間でこの色を表す16進文字列を返します。この色が表示できない場合は、適切な表示可能な色が代わりに返されます。たとえば、255より大きいRGBチャネル値は255に固定されます。</target>
        </trans-unit>
        <trans-unit id="42dedb2fcdd180e91384ff3d20ebd78a4e6a3260" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;#_link&quot;&gt;link generator&lt;/a&gt; with horizontal tangents. For example, to visualize &lt;a href=&quot;d3-hierarchy#node_links&quot;&gt;links&lt;/a&gt; in a &lt;a href=&quot;d3-hierarchy#tree&quot;&gt;tree diagram&lt;/a&gt; rooted on the left edge of the display, you might say:</source>
          <target state="translated">水平接線を持つ新しい&lt;a href=&quot;#_link&quot;&gt;リンクジェネレーター&lt;/a&gt;を返します。たとえば、ディスプレイの左端をルートとする&lt;a href=&quot;d3-hierarchy#tree&quot;&gt;ツリーダイアグラムの&lt;/a&gt;&lt;a href=&quot;d3-hierarchy#node_links&quot;&gt;リンク&lt;/a&gt;を視覚化するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="fa49e704dbe636e9976a74a64ff5783562aeb7fe" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;#_link&quot;&gt;link generator&lt;/a&gt; with radial tangents. For example, to visualize &lt;a href=&quot;d3-hierarchy#node_links&quot;&gt;links&lt;/a&gt; in a &lt;a href=&quot;d3-hierarchy#tree&quot;&gt;tree diagram&lt;/a&gt; rooted in the center of the display, you might say:</source>
          <target state="translated">放射状の接線を持つ新しい&lt;a href=&quot;#_link&quot;&gt;リンクジェネレーター&lt;/a&gt;を返します。たとえば、ディスプレイの中央をルートとする&lt;a href=&quot;d3-hierarchy#tree&quot;&gt;ツリーダイアグラムの&lt;/a&gt;&lt;a href=&quot;d3-hierarchy#node_links&quot;&gt;リンク&lt;/a&gt;を視覚化するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="bc1ea9774e9ca47ce91d1f96f90f2abc2d3c4b6c" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;#_link&quot;&gt;link generator&lt;/a&gt; with vertical tangents. For example, to visualize &lt;a href=&quot;d3-hierarchy#node_links&quot;&gt;links&lt;/a&gt; in a &lt;a href=&quot;d3-hierarchy#tree&quot;&gt;tree diagram&lt;/a&gt; rooted on the top edge of the display, you might say:</source>
          <target state="translated">垂直接線を持つ新しい&lt;a href=&quot;#_link&quot;&gt;リンクジェネレータ&lt;/a&gt;を返します。たとえば、ディスプレイの上端をルートとする&lt;a href=&quot;d3-hierarchy#tree&quot;&gt;ツリーダイアグラムの&lt;/a&gt;&lt;a href=&quot;d3-hierarchy#node_links&quot;&gt;リンク&lt;/a&gt;を視覚化するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="0b8403fe75d3bebbd948744efcc07cd7e0bb7911" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;#lineRadial&quot;&gt;radial line generator&lt;/a&gt; that has this radial area generator&amp;rsquo;s current &lt;a href=&quot;#areaRadial_defined&quot;&gt;defined accessor&lt;/a&gt;, &lt;a href=&quot;#areaRadial_curve&quot;&gt;curve&lt;/a&gt; and &lt;a href=&quot;#areaRadial_context&quot;&gt;context&lt;/a&gt;. The line&amp;rsquo;s &lt;a href=&quot;#lineRadial_angle&quot;&gt;angle accessor&lt;/a&gt; is this area&amp;rsquo;s &lt;a href=&quot;#areaRadial_endAngle&quot;&gt;end angle accessor&lt;/a&gt;, and the line&amp;rsquo;s &lt;a href=&quot;#lineRadial_radius&quot;&gt;radius accessor&lt;/a&gt; is this area&amp;rsquo;s &lt;a href=&quot;#areaRadial_innerRadius&quot;&gt;inner radius accessor&lt;/a&gt;.</source>
          <target state="translated">このラジアルエリアジェネレーターの現在&lt;a href=&quot;#areaRadial_defined&quot;&gt;定義されているアクセサー&lt;/a&gt;、&lt;a href=&quot;#areaRadial_curve&quot;&gt;カーブ&lt;/a&gt;、&lt;a href=&quot;#areaRadial_context&quot;&gt;コンテキスト&lt;/a&gt;を持つ新しい&lt;a href=&quot;#lineRadial&quot;&gt;ラジアルラインジェネレーター&lt;/a&gt;を返します。ラインの&lt;a href=&quot;#lineRadial_angle&quot;&gt;角度アクセサー&lt;/a&gt;はこの領域の&lt;a href=&quot;#areaRadial_endAngle&quot;&gt;終了角度アクセサー&lt;/a&gt;であり、ラインの&lt;a href=&quot;#lineRadial_radius&quot;&gt;半径アクセサー&lt;/a&gt;はこの領域の&lt;a href=&quot;#areaRadial_innerRadius&quot;&gt;内側半径アクセサー&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="0b6c29815bcce9dedcea98f69adffc2a1d6ccc4b" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;#lineRadial&quot;&gt;radial line generator&lt;/a&gt; that has this radial area generator&amp;rsquo;s current &lt;a href=&quot;#areaRadial_defined&quot;&gt;defined accessor&lt;/a&gt;, &lt;a href=&quot;#areaRadial_curve&quot;&gt;curve&lt;/a&gt; and &lt;a href=&quot;#areaRadial_context&quot;&gt;context&lt;/a&gt;. The line&amp;rsquo;s &lt;a href=&quot;#lineRadial_angle&quot;&gt;angle accessor&lt;/a&gt; is this area&amp;rsquo;s &lt;a href=&quot;#areaRadial_startAngle&quot;&gt;start angle accessor&lt;/a&gt;, and the line&amp;rsquo;s &lt;a href=&quot;#lineRadial_radius&quot;&gt;radius accessor&lt;/a&gt; is this area&amp;rsquo;s &lt;a href=&quot;#areaRadial_innerRadius&quot;&gt;inner radius accessor&lt;/a&gt;.</source>
          <target state="translated">このラジアルエリアジェネレーターの現在&lt;a href=&quot;#areaRadial_defined&quot;&gt;定義されているアクセサー&lt;/a&gt;、&lt;a href=&quot;#areaRadial_curve&quot;&gt;カーブ&lt;/a&gt;、&lt;a href=&quot;#areaRadial_context&quot;&gt;コンテキスト&lt;/a&gt;を持つ新しい&lt;a href=&quot;#lineRadial&quot;&gt;ラジアルラインジェネレーター&lt;/a&gt;を返します。ラインの&lt;a href=&quot;#lineRadial_angle&quot;&gt;角度アクセサー&lt;/a&gt;はこの領域の&lt;a href=&quot;#areaRadial_startAngle&quot;&gt;開始角度アクセサー&lt;/a&gt;であり、ラインの&lt;a href=&quot;#lineRadial_radius&quot;&gt;半径アクセサー&lt;/a&gt;はこの領域の&lt;a href=&quot;#areaRadial_innerRadius&quot;&gt;内側半径アクセサー&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="62caa581c7076b6ab973f733c1b04f64eb775815" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;#lineRadial&quot;&gt;radial line generator&lt;/a&gt; that has this radial area generator&amp;rsquo;s current &lt;a href=&quot;#areaRadial_defined&quot;&gt;defined accessor&lt;/a&gt;, &lt;a href=&quot;#areaRadial_curve&quot;&gt;curve&lt;/a&gt; and &lt;a href=&quot;#areaRadial_context&quot;&gt;context&lt;/a&gt;. The line&amp;rsquo;s &lt;a href=&quot;#lineRadial_angle&quot;&gt;angle accessor&lt;/a&gt; is this area&amp;rsquo;s &lt;a href=&quot;#areaRadial_startAngle&quot;&gt;start angle accessor&lt;/a&gt;, and the line&amp;rsquo;s &lt;a href=&quot;#lineRadial_radius&quot;&gt;radius accessor&lt;/a&gt; is this area&amp;rsquo;s &lt;a href=&quot;#areaRadial_outerRadius&quot;&gt;outer radius accessor&lt;/a&gt;.</source>
          <target state="translated">このラジアルエリアジェネレーターの現在&lt;a href=&quot;#areaRadial_defined&quot;&gt;定義されているアクセサー&lt;/a&gt;、&lt;a href=&quot;#areaRadial_curve&quot;&gt;カーブ&lt;/a&gt;、&lt;a href=&quot;#areaRadial_context&quot;&gt;コンテキスト&lt;/a&gt;を持つ新しい&lt;a href=&quot;#lineRadial&quot;&gt;ラジアルラインジェネレーター&lt;/a&gt;を返します。ラインの&lt;a href=&quot;#lineRadial_angle&quot;&gt;角度アクセサー&lt;/a&gt;はこの領域の&lt;a href=&quot;#areaRadial_startAngle&quot;&gt;開始角度アクセサー&lt;/a&gt;であり、ラインの&lt;a href=&quot;#lineRadial_radius&quot;&gt;半径アクセサー&lt;/a&gt;はこの領域の&lt;a href=&quot;#areaRadial_outerRadius&quot;&gt;外側半径アクセサー&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="901268a421e4761f0bb069d87b35425ec7a0ad07" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;#lines&quot;&gt;line generator&lt;/a&gt; that has this area generator&amp;rsquo;s current &lt;a href=&quot;#area_defined&quot;&gt;defined accessor&lt;/a&gt;, &lt;a href=&quot;#area_curve&quot;&gt;curve&lt;/a&gt; and &lt;a href=&quot;#area_context&quot;&gt;context&lt;/a&gt;. The line&amp;rsquo;s &lt;a href=&quot;#line_x&quot;&gt;&lt;em&gt;x&lt;/em&gt;-accessor&lt;/a&gt; is this area&amp;rsquo;s &lt;a href=&quot;#area_x0&quot;&gt;&lt;em&gt;x0&lt;/em&gt;-accessor&lt;/a&gt;, and the line&amp;rsquo;s &lt;a href=&quot;#line_y&quot;&gt;&lt;em&gt;y&lt;/em&gt;-accessor&lt;/a&gt; is this area&amp;rsquo;s &lt;a href=&quot;#area_y0&quot;&gt;&lt;em&gt;y0&lt;/em&gt;-accessor&lt;/a&gt;.</source>
          <target state="translated">このエリアジェネレーターの現在&lt;a href=&quot;#area_defined&quot;&gt;定義されているアクセサー&lt;/a&gt;、&lt;a href=&quot;#area_curve&quot;&gt;曲線&lt;/a&gt;、および&lt;a href=&quot;#area_context&quot;&gt;コンテキスト&lt;/a&gt;を持つ新しい&lt;a href=&quot;#lines&quot;&gt;ラインジェネレーター&lt;/a&gt;を返します。行の&lt;a href=&quot;#line_x&quot;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/a&gt; -accessorはこの領域の&lt;a href=&quot;#area_x0&quot;&gt;&lt;em&gt;x0&lt;/em&gt;&lt;/a&gt; -accessorであり、行の&lt;a href=&quot;#line_y&quot;&gt;&lt;em&gt;y&lt;/em&gt;&lt;/a&gt; -accessorはこの領域の&lt;a href=&quot;#area_y0&quot;&gt;&lt;em&gt;y0&lt;/em&gt;&lt;/a&gt; -accessorです。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b8f37613358c1a1e293ed17175051adf863034d" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;#lines&quot;&gt;line generator&lt;/a&gt; that has this area generator&amp;rsquo;s current &lt;a href=&quot;#area_defined&quot;&gt;defined accessor&lt;/a&gt;, &lt;a href=&quot;#area_curve&quot;&gt;curve&lt;/a&gt; and &lt;a href=&quot;#area_context&quot;&gt;context&lt;/a&gt;. The line&amp;rsquo;s &lt;a href=&quot;#line_x&quot;&gt;&lt;em&gt;x&lt;/em&gt;-accessor&lt;/a&gt; is this area&amp;rsquo;s &lt;a href=&quot;#area_x0&quot;&gt;&lt;em&gt;x0&lt;/em&gt;-accessor&lt;/a&gt;, and the line&amp;rsquo;s &lt;a href=&quot;#line_y&quot;&gt;&lt;em&gt;y&lt;/em&gt;-accessor&lt;/a&gt; is this area&amp;rsquo;s &lt;a href=&quot;#area_y1&quot;&gt;&lt;em&gt;y1&lt;/em&gt;-accessor&lt;/a&gt;.</source>
          <target state="translated">このエリアジェネレーターの現在&lt;a href=&quot;#area_defined&quot;&gt;定義されているアクセサー&lt;/a&gt;、&lt;a href=&quot;#area_curve&quot;&gt;曲線&lt;/a&gt;、および&lt;a href=&quot;#area_context&quot;&gt;コンテキスト&lt;/a&gt;を持つ新しい&lt;a href=&quot;#lines&quot;&gt;ラインジェネレーター&lt;/a&gt;を返します。行の&lt;a href=&quot;#line_x&quot;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/a&gt; -accessorはこの領域の&lt;a href=&quot;#area_x0&quot;&gt;&lt;em&gt;x0&lt;/em&gt;&lt;/a&gt; -accessorであり、行の&lt;a href=&quot;#line_y&quot;&gt;&lt;em&gt;y&lt;/em&gt;&lt;/a&gt; -accessorはこの領域の&lt;a href=&quot;#area_y1&quot;&gt;&lt;em&gt;y1&lt;/em&gt;&lt;/a&gt; -accessorです。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ef56fc76b5e25e7c77e524039fb70fc9959a945c" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;#lines&quot;&gt;line generator&lt;/a&gt; that has this area generator&amp;rsquo;s current &lt;a href=&quot;#area_defined&quot;&gt;defined accessor&lt;/a&gt;, &lt;a href=&quot;#area_curve&quot;&gt;curve&lt;/a&gt; and &lt;a href=&quot;#area_context&quot;&gt;context&lt;/a&gt;. The line&amp;rsquo;s &lt;a href=&quot;#line_x&quot;&gt;&lt;em&gt;x&lt;/em&gt;-accessor&lt;/a&gt; is this area&amp;rsquo;s &lt;a href=&quot;#area_x1&quot;&gt;&lt;em&gt;x1&lt;/em&gt;-accessor&lt;/a&gt;, and the line&amp;rsquo;s &lt;a href=&quot;#line_y&quot;&gt;&lt;em&gt;y&lt;/em&gt;-accessor&lt;/a&gt; is this area&amp;rsquo;s &lt;a href=&quot;#area_y0&quot;&gt;&lt;em&gt;y0&lt;/em&gt;-accessor&lt;/a&gt;.</source>
          <target state="translated">このエリアジェネレーターの現在&lt;a href=&quot;#area_defined&quot;&gt;定義されているアクセサー&lt;/a&gt;、&lt;a href=&quot;#area_curve&quot;&gt;曲線&lt;/a&gt;、および&lt;a href=&quot;#area_context&quot;&gt;コンテキスト&lt;/a&gt;を持つ新しい&lt;a href=&quot;#lines&quot;&gt;ラインジェネレーター&lt;/a&gt;を返します。行の&lt;a href=&quot;#line_x&quot;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/a&gt; -accessorはこの領域の&lt;a href=&quot;#area_x1&quot;&gt;&lt;em&gt;x1&lt;/em&gt;&lt;/a&gt; -accessorであり、行の&lt;a href=&quot;#line_y&quot;&gt;&lt;em&gt;y&lt;/em&gt;&lt;/a&gt; -accessorはこの領域の&lt;a href=&quot;#area_y0&quot;&gt;&lt;em&gt;y0&lt;/em&gt;&lt;/a&gt; -accessorです。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e0de3a9211c6f72b2389c45b61a44069bb13958" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;#request&quot;&gt;&lt;em&gt;request&lt;/em&gt;&lt;/a&gt; for a &lt;a href=&quot;d3-dsv#tsvParse&quot;&gt;TSV&lt;/a&gt; file at the specified &lt;em&gt;url&lt;/em&gt; with the default mime type &lt;code&gt;text/tab-separated-values&lt;/code&gt;. If no &lt;em&gt;callback&lt;/em&gt; is specified, this is equivalent to:</source>
          <target state="translated">指定された&lt;em&gt;URLに&lt;/em&gt;ある&lt;a href=&quot;d3-dsv#tsvParse&quot;&gt;TSV&lt;/a&gt;ファイルの新しい&lt;a href=&quot;#request&quot;&gt;&lt;em&gt;リクエスト&lt;/em&gt;&lt;/a&gt;を、デフォルトのMIMEタイプ &lt;code&gt;text/tab-separated-values&lt;/code&gt; で返します。&lt;em&gt;コールバック&lt;/em&gt;が指定されていない場合、これは次と同等です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f1d32929bb45cea3b9607784bbd63e6a24bf44ca" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;#request&quot;&gt;&lt;em&gt;request&lt;/em&gt;&lt;/a&gt; for the &lt;a href=&quot;d3-dsv#csvParse&quot;&gt;CSV&lt;/a&gt; file at the specified &lt;em&gt;url&lt;/em&gt; with the default mime type &lt;code&gt;text/csv&lt;/code&gt;. If no &lt;em&gt;callback&lt;/em&gt; is specified, this is equivalent to:</source>
          <target state="translated">デフォルトのMIMEタイプ &lt;code&gt;text/csv&lt;/code&gt; を使用して、指定された&lt;em&gt;URLに&lt;/em&gt;ある&lt;a href=&quot;d3-dsv#csvParse&quot;&gt;CSV&lt;/a&gt;ファイルの新しい&lt;a href=&quot;#request&quot;&gt;&lt;em&gt;リクエスト&lt;/em&gt;&lt;/a&gt;を返します。&lt;em&gt;コールバック&lt;/em&gt;が指定されていない場合、これは次と同等です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6ca0a4a4afe6e7688ac15f8fca69cf8ef965bc1f" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;#request&quot;&gt;&lt;em&gt;request&lt;/em&gt;&lt;/a&gt; for the HTML file at the specified &lt;em&gt;url&lt;/em&gt; with the default mime type &lt;code&gt;text/html&lt;/code&gt;. The HTML file is returned as a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/range.createContextualFragment&quot;&gt;document fragment&lt;/a&gt;. If no &lt;em&gt;callback&lt;/em&gt; is specified, this is equivalent to:</source>
          <target state="translated">デフォルトのMIMEタイプ &lt;code&gt;text/html&lt;/code&gt; を使用して、指定された&lt;em&gt;URLに&lt;/em&gt;あるHTMLファイルの新しい&lt;a href=&quot;#request&quot;&gt;&lt;em&gt;リクエスト&lt;/em&gt;&lt;/a&gt;を返します。HTMLファイルは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/range.createContextualFragment&quot;&gt;ドキュメントフラグメント&lt;/a&gt;として返されます。&lt;em&gt;コールバック&lt;/em&gt;が指定されていない場合、これは次と同等です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3a4add9041ba29ab3212bac83633ebc8dd3f39b8" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;#request&quot;&gt;&lt;em&gt;request&lt;/em&gt;&lt;/a&gt; to &lt;a href=&quot;#request_get&quot;&gt;get&lt;/a&gt; the &lt;a href=&quot;http://json.org&quot;&gt;JSON&lt;/a&gt; file at the specified &lt;em&gt;url&lt;/em&gt; with the default mime type &lt;code&gt;application/json&lt;/code&gt;. If no &lt;em&gt;callback&lt;/em&gt; is specified, this is equivalent to:</source>
          <target state="translated">デフォルトのMIMEタイプ &lt;code&gt;application/json&lt;/code&gt; を使用して、指定された&lt;em&gt;URLに&lt;/em&gt;ある&lt;a href=&quot;http://json.org&quot;&gt;JSON&lt;/a&gt;ファイルを&lt;a href=&quot;#request_get&quot;&gt;取得&lt;/a&gt;するための新しい&lt;a href=&quot;#request&quot;&gt;&lt;em&gt;リクエスト&lt;/em&gt;&lt;/a&gt;を返します。&lt;em&gt;コールバック&lt;/em&gt;が指定されていない場合、これは次と同等です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="68681ad63385f29c9ec7e09a522e1e7f25e57d0c" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;#request&quot;&gt;&lt;em&gt;request&lt;/em&gt;&lt;/a&gt; to &lt;a href=&quot;#request_get&quot;&gt;get&lt;/a&gt; the XML file at the specified &lt;em&gt;url&lt;/em&gt; with the default mime type &lt;code&gt;application/xml&lt;/code&gt;. If no &lt;em&gt;callback&lt;/em&gt; is specified, this is equivalent to:</source>
          <target state="translated">デフォルトのMIMEタイプ &lt;code&gt;application/xml&lt;/code&gt; を使用して、指定された&lt;em&gt;URLに&lt;/em&gt;あるXMLファイルを&lt;a href=&quot;#request_get&quot;&gt;取得&lt;/a&gt;する新しい&lt;a href=&quot;#request&quot;&gt;&lt;em&gt;リクエスト&lt;/em&gt;&lt;/a&gt;を返します。&lt;em&gt;コールバック&lt;/em&gt;が指定されていない場合、これは次と同等です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f1cd77c3e4508d5fd5557314242a429845f72ba4" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;a href=&quot;#request&quot;&gt;&lt;em&gt;request&lt;/em&gt;&lt;/a&gt; to &lt;a href=&quot;#request_get&quot;&gt;get&lt;/a&gt; the text file at the specified &lt;em&gt;url&lt;/em&gt; with the default mime type &lt;code&gt;text/plain&lt;/code&gt;. If no &lt;em&gt;callback&lt;/em&gt; is specified, this is equivalent to:</source>
          <target state="translated">デフォルトのMIMEタイプ &lt;code&gt;text/plain&lt;/code&gt; で指定された&lt;em&gt;URLに&lt;/em&gt;あるテキストファイルを&lt;a href=&quot;#request_get&quot;&gt;取得&lt;/a&gt;するための新しい&lt;a href=&quot;#request&quot;&gt;&lt;em&gt;リクエスト&lt;/em&gt;&lt;/a&gt;を返します。&lt;em&gt;コールバック&lt;/em&gt;が指定されていない場合、これは次と同等です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c9d0a9ec18a509256a571b0865dd7a35d28dd680" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;em&gt;request&lt;/em&gt; for specified &lt;em&gt;url&lt;/em&gt;. If no &lt;em&gt;callback&lt;/em&gt; is specified, the returned &lt;em&gt;request&lt;/em&gt; is not yet &lt;a href=&quot;#request_send&quot;&gt;sent&lt;/a&gt; and can be further configured. If a &lt;em&gt;callback&lt;/em&gt; is specified, it is equivalent to calling &lt;a href=&quot;#request_get&quot;&gt;&lt;em&gt;request&lt;/em&gt;.get&lt;/a&gt; immediately after construction:</source>
          <target state="translated">指定された&lt;em&gt;urlの&lt;/em&gt;新しい&lt;em&gt;リクエスト&lt;/em&gt;を返します。&lt;em&gt;コールバック&lt;/em&gt;が指定されていない場合、返された&lt;em&gt;要求&lt;/em&gt;はまだ&lt;a href=&quot;#request_send&quot;&gt;送信されて&lt;/a&gt;おらず、さらに構成できます。&lt;em&gt;コールバック&lt;/em&gt;が指定されている場合は、構築直後に&lt;a href=&quot;#request_get&quot;&gt;&lt;em&gt;request&lt;/em&gt;&lt;/a&gt; .getを呼び出すのと同じです。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="985ca23aaac62cc204dc39b7c4644fcb53beed62" translate="yes" xml:space="preserve">
          <source>Returns a new GeoJSON geometry object of type &amp;ldquo;Polygon&amp;rdquo; approximating a circle on the surface of a sphere, with the current &lt;a href=&quot;#circle_center&quot;&gt;center&lt;/a&gt;, &lt;a href=&quot;#circle_radius&quot;&gt;radius&lt;/a&gt; and &lt;a href=&quot;#circle_precision&quot;&gt;precision&lt;/a&gt;. Any &lt;em&gt;arguments&lt;/em&gt; are passed to the accessors.</source>
          <target state="translated">現在の&lt;a href=&quot;#circle_center&quot;&gt;中心&lt;/a&gt;、&lt;a href=&quot;#circle_radius&quot;&gt;半径&lt;/a&gt;、&lt;a href=&quot;#circle_precision&quot;&gt;精度&lt;/a&gt;で、球の表面上の円を近似する「ポリゴン」タイプの新しいGeoJSONジオメトリオブジェクトを返します。&lt;em&gt;引数&lt;/em&gt;はすべてアクセサーに渡されます。</target>
        </trans-unit>
        <trans-unit id="651de283a7c1fd1ffb3de883d8bab31358ccf8c4" translate="yes" xml:space="preserve">
          <source>Returns a new array [&lt;em&gt;longitude&lt;/em&gt;, &lt;em&gt;latitude&lt;/em&gt;] in degrees representing the point of the given rotated &lt;em&gt;point&lt;/em&gt;; the inverse of &lt;a href=&quot;#_rotation&quot;&gt;&lt;em&gt;rotation&lt;/em&gt;&lt;/a&gt;. The point must be specified as a two-element array [&lt;em&gt;longitude&lt;/em&gt;, &lt;em&gt;latitude&lt;/em&gt;] in degrees.</source>
          <target state="translated">指定された回転した&lt;em&gt;ポイントの&lt;/em&gt;ポイントを表す新しい配列[ &lt;em&gt;経度&lt;/em&gt;、&lt;em&gt;緯度&lt;/em&gt; ]を度数で返します。&lt;a href=&quot;#_rotation&quot;&gt;&lt;em&gt;回転&lt;/em&gt;&lt;/a&gt;の逆。ポイントは、2要素の配列[ &lt;em&gt;経度&lt;/em&gt;、&lt;em&gt;緯度&lt;/em&gt; ]として度数で指定する必要があります。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e1d5ea393142a46903523c0c3f4ca3a4799fee1f" translate="yes" xml:space="preserve">
          <source>Returns a new array [&lt;em&gt;longitude&lt;/em&gt;, &lt;em&gt;latitude&lt;/em&gt;] in degrees representing the rotated point of the given &lt;em&gt;point&lt;/em&gt;. The point must be specified as a two-element array [&lt;em&gt;longitude&lt;/em&gt;, &lt;em&gt;latitude&lt;/em&gt;] in degrees.</source>
          <target state="translated">新しい配列[戻り&lt;em&gt;経度&lt;/em&gt;、&lt;em&gt;緯度&lt;/em&gt;所与の回転位置を表す度] &lt;em&gt;ポイント&lt;/em&gt;。ポイントは、2要素の配列[ &lt;em&gt;経度&lt;/em&gt;、&lt;em&gt;緯度&lt;/em&gt; ]として度数で指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="cca25779937edfd612a03062246f1a6508d28c09" translate="yes" xml:space="preserve">
          <source>Returns a new array [&lt;em&gt;longitude&lt;/em&gt;, &lt;em&gt;latitude&lt;/em&gt;] in degrees representing the unprojected point of the given projected &lt;em&gt;point&lt;/em&gt;. The point must be specified as a two-element array [&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;] (typically in pixels). May return null if the specified &lt;em&gt;point&lt;/em&gt; has no defined projected position, such as when the point is outside the clipping bounds of the projection.</source>
          <target state="translated">指定された投影&lt;em&gt;点の非&lt;/em&gt;投影&lt;em&gt;点&lt;/em&gt;を表す新しい配列[ &lt;em&gt;経度&lt;/em&gt;、&lt;em&gt;緯度&lt;/em&gt; ]を度数で返します。ポイントは、2要素の配列[ &lt;em&gt;x&lt;/em&gt;、&lt;em&gt;y&lt;/em&gt; ]（通常はピクセル単位）として指定する必要があります。指定された&lt;em&gt;点に&lt;/em&gt;投影位置が定義されていない場合（&lt;em&gt;点&lt;/em&gt;が投影のクリッピング境界の外側にある場合など）は、nullを返すことがあります。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ec2f8885b5ce97b9dd5c15add8db4a895c1ddd6f" translate="yes" xml:space="preserve">
          <source>Returns a new array [&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;] (typically in pixels) representing the projected point of the given &lt;em&gt;point&lt;/em&gt;. The point must be specified as a two-element array [&lt;em&gt;longitude&lt;/em&gt;, &lt;em&gt;latitude&lt;/em&gt;] in degrees. May return null if the specified &lt;em&gt;point&lt;/em&gt; has no defined projected position, such as when the point is outside the clipping bounds of the projection.</source>
          <target state="translated">指定された&lt;em&gt;ポイントの&lt;/em&gt;投影されたポイントを表す新しい配列[ &lt;em&gt;x&lt;/em&gt;、&lt;em&gt;y&lt;/em&gt; ]（通常はピクセル単位）を返します。ポイントは、2要素の配列[ &lt;em&gt;経度&lt;/em&gt;、&lt;em&gt;緯度&lt;/em&gt; ]として度数で指定する必要があります。指定された&lt;em&gt;点に&lt;/em&gt;投影位置が定義されていない場合（&lt;em&gt;点&lt;/em&gt;が投影のクリッピング境界の外側にある場合など）は、nullを返すことがあります。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b7f5e178cb5735960a35b9ab768783f8ede88c36" translate="yes" xml:space="preserve">
          <source>Returns a new back easing with the specified overshoot &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="translated">指定されたオーバーシュート&lt;em&gt;s&lt;/em&gt;で新しいバックイージングを返します。</target>
        </trans-unit>
        <trans-unit id="16bc737d260101ce995c46415384a537b8fab679" translate="yes" xml:space="preserve">
          <source>Returns a new bisector using the specified &lt;em&gt;accessor&lt;/em&gt; or &lt;em&gt;comparator&lt;/em&gt; function. This method can be used to bisect arrays of objects instead of being limited to simple arrays of primitives. For example, given the following array of objects:</source>
          <target state="translated">指定された&lt;em&gt;アクセサ&lt;/em&gt;または&lt;em&gt;コンパレータ&lt;/em&gt;関数を使用して、新しい二等分線を返します。このメソッドは、プリミティブの単純な配列に限定される代わりに、オブジェクトの配列を二分するために使用できます。たとえば、次のオブジェクトの配列があるとします。</target>
        </trans-unit>
        <trans-unit id="0989d75d3e460cc77a6131f1c94d8a827f277508" translate="yes" xml:space="preserve">
          <source>Returns a new circle generator.</source>
          <target state="translated">新しいサークルジェネレータを返します。</target>
        </trans-unit>
        <trans-unit id="b6ff0dd3fb26afe9350831c4cbed5b4537d23eba" translate="yes" xml:space="preserve">
          <source>Returns a new date equal to &lt;em&gt;date&lt;/em&gt; plus &lt;em&gt;step&lt;/em&gt; intervals. If &lt;em&gt;step&lt;/em&gt; is not specified it defaults to 1. If &lt;em&gt;step&lt;/em&gt; is negative, then the returned date will be before the specified &lt;em&gt;date&lt;/em&gt;; if &lt;em&gt;step&lt;/em&gt; is zero, then a copy of the specified &lt;em&gt;date&lt;/em&gt; is returned; if &lt;em&gt;step&lt;/em&gt; is not an integer, it is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor&quot;&gt;floored&lt;/a&gt;. This method does not round the specified &lt;em&gt;date&lt;/em&gt; to the interval. For example, if &lt;em&gt;date&lt;/em&gt; is today at 5:34 PM, then &lt;a href=&quot;#timeDay&quot;&gt;d3.timeDay&lt;/a&gt;.offset(&lt;em&gt;date&lt;/em&gt;, 1) returns 5:34 PM tomorrow (even if daylight saving changes!).</source>
          <target state="translated">&lt;em&gt;日付&lt;/em&gt;に&lt;em&gt;ステップ&lt;/em&gt;間隔を足したものに等しい新しい日付を返します。場合は&lt;em&gt;ステップが&lt;/em&gt; 1にそれをデフォルトに指定されていない場合は&lt;em&gt;ステップが&lt;/em&gt;否定され、その後、返された日付が指定された前になります&lt;em&gt;日付&lt;/em&gt;。&lt;em&gt;step&lt;/em&gt;がゼロの場合、指定された&lt;em&gt;日付の&lt;/em&gt;コピーが返されます。&lt;em&gt;step&lt;/em&gt;が整数でない場合は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor&quot;&gt;floorされ&lt;/a&gt;ます。このメソッドは、指定された&lt;em&gt;日付&lt;/em&gt;を間隔に丸めません。たとえば、&lt;em&gt;日付&lt;/em&gt;が今日の午後5時34分である場合、&lt;a href=&quot;#timeDay&quot;&gt;d3.timeDay&lt;/a&gt; .offset（&lt;em&gt;date&lt;/em&gt;、1）は明日午後5時34分を返します（夏時間が変更された場合でも）。</target>
        </trans-unit>
        <trans-unit id="5559524439b690aa9ba688506a84fe6e5c404bc5" translate="yes" xml:space="preserve">
          <source>Returns a new date representing the closest interval boundary date to &lt;em&gt;date&lt;/em&gt;. For example, &lt;a href=&quot;#timeDay&quot;&gt;d3.timeDay&lt;/a&gt;.round(&lt;em&gt;date&lt;/em&gt;) typically returns 12:00 AM local time on the given &lt;em&gt;date&lt;/em&gt; if it is on or before noon, and 12:00 AM of the following day if it is after noon.</source>
          <target state="translated">最も近い間隔境界日付表す新しい日付を返し&lt;em&gt;日付を&lt;/em&gt;。たとえば、&lt;a href=&quot;#timeDay&quot;&gt;d3.timeDay&lt;/a&gt; .round（&lt;em&gt;date&lt;/em&gt;）は通常、正午以前の場合は指定された&lt;em&gt;日の&lt;/em&gt;現地時間の午前12:00を返し、正午以降の場合は翌日の午前12:00を返します。</target>
        </trans-unit>
        <trans-unit id="8dfc429915ba999c06399df38dd0875f4960880b" translate="yes" xml:space="preserve">
          <source>Returns a new date representing the earliest interval boundary date after or equal to &lt;em&gt;date&lt;/em&gt;. For example, &lt;a href=&quot;#timeDay&quot;&gt;d3.timeDay&lt;/a&gt;.ceil(&lt;em&gt;date&lt;/em&gt;) typically returns 12:00 AM local time on the date following the given &lt;em&gt;date&lt;/em&gt;.</source>
          <target state="translated">後早い間隔境界日付を表す新しい日付を返すか等しい&lt;em&gt;日付&lt;/em&gt;。例えば、&lt;a href=&quot;#timeDay&quot;&gt;d3.timeDay&lt;/a&gt; .ceil（&lt;em&gt;日付&lt;/em&gt;）は、典型的には、与えられた次の日の午前12時のローカル時刻を返す&lt;em&gt;日付&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2e0155769dbd74b3fa348be369ad04d405a87a6a" translate="yes" xml:space="preserve">
          <source>Returns a new date representing the latest interval boundary date before or equal to &lt;em&gt;date&lt;/em&gt;. For example, &lt;a href=&quot;#timeDay&quot;&gt;d3.timeDay&lt;/a&gt;.floor(&lt;em&gt;date&lt;/em&gt;) typically returns 12:00 AM local time on the given &lt;em&gt;date&lt;/em&gt;.</source>
          <target state="translated">前に、最新の間隔境界日付を表す新しい日付を返すか等しい&lt;em&gt;日付&lt;/em&gt;。たとえば、&lt;a href=&quot;#timeDay&quot;&gt;d3.timeDay&lt;/a&gt; .floor（&lt;em&gt;date&lt;/em&gt;）は通常、指定された&lt;em&gt;日付の&lt;/em&gt;現地時間の午前12:00を返します。</target>
        </trans-unit>
        <trans-unit id="bf9d68834f21a66677ae9bf4b9085a5f94b440a7" translate="yes" xml:space="preserve">
          <source>Returns a new elastic easing with the specified amplitude &lt;em&gt;a&lt;/em&gt;.</source>
          <target state="translated">指定された振幅&lt;em&gt;a&lt;/em&gt;で新しい弾性イージングを返します。</target>
        </trans-unit>
        <trans-unit id="1fe856dd26a2ee59b58ad0ecf68b08f7ace48351" translate="yes" xml:space="preserve">
          <source>Returns a new elastic easing with the specified period &lt;em&gt;p&lt;/em&gt;.</source>
          <target state="translated">指定された期間&lt;em&gt;pの&lt;/em&gt;新しい弾性緩和を​​返します。</target>
        </trans-unit>
        <trans-unit id="8eee958320bb9b7de27d61ed223362ede1946f4d" translate="yes" xml:space="preserve">
          <source>Returns a new format function for the given string &lt;em&gt;specifier&lt;/em&gt;. The returned function takes a number as the only argument, and returns a string representing the formatted number. The general form of a specifier is:</source>
          <target state="translated">&lt;em&gt;指定され&lt;/em&gt;た文字列&lt;em&gt;指定子の&lt;/em&gt;新しいフォーマット関数を返します。返される関数は数値を唯一の引数として取り、フォーマットされた数値を表す文字列を返します。指定子の一般的な形式は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="c5f86b4d5969ed1192622654eafc5805fc510547" translate="yes" xml:space="preserve">
          <source>Returns a new formatter for the given string &lt;em&gt;specifier&lt;/em&gt;. The specifier string may contain the following directives:</source>
          <target state="translated">&lt;em&gt;指定され&lt;/em&gt;た文字列&lt;em&gt;指定子の&lt;/em&gt;新しいフォーマッタを返します。指定子文字列には、次のディレクティブを含めることができます。</target>
        </trans-unit>
        <trans-unit id="9307cca8de866da69e8832bfd3d3c690074c88ab" translate="yes" xml:space="preserve">
          <source>Returns a new interval that is a filtered subset of this interval using the specified &lt;em&gt;test&lt;/em&gt; function. The &lt;em&gt;test&lt;/em&gt; function is passed a date and should return true if and only if the specified date should be considered part of the interval. For example, to create an interval that returns the 1st, 11th, 21th and 31th (if it exists) of each month:</source>
          <target state="translated">指定された&lt;em&gt;テスト&lt;/em&gt;関数を使用して、この間隔のフィルタリングされたサブセットである新しい間隔を返します。&lt;em&gt;テスト&lt;/em&gt;機能は、日付を渡され、かつ指定された日付が区間の一部と見なされるべきである場合にのみ場合はtrueを返す必要があります。たとえば、各月の1日、11日、21日、31日（存在する場合）を返す間隔を作成するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="b5723d167cbd2ac80540e0bc9bdb51aaf4f5d9bf" translate="yes" xml:space="preserve">
          <source>Returns a new parser for the given string &lt;em&gt;specifier&lt;/em&gt;. The specifier string may contain the same directives as &lt;a href=&quot;#locale_format&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.format&lt;/a&gt;. The &lt;code&gt;%d&lt;/code&gt; and &lt;code&gt;%e&lt;/code&gt; directives are considered equivalent for parsing.</source>
          <target state="translated">&lt;em&gt;指定され&lt;/em&gt;た文字列&lt;em&gt;指定子の&lt;/em&gt;新しいパーサーを返します。指定子文字列には、&lt;a href=&quot;#locale_format&quot;&gt;&lt;em&gt;locale&lt;/em&gt; .format&lt;/a&gt;と同じディレクティブを含めることができます。 &lt;code&gt;%d&lt;/code&gt; のと &lt;code&gt;%e&lt;/code&gt; ディレクティブを解析するための等価であると考えられます。</target>
        </trans-unit>
        <trans-unit id="64cf6bd8a9cf57dfdb53e51b1fab634990bd1538" translate="yes" xml:space="preserve">
          <source>Returns a new polynomial easing with the specified exponent &lt;em&gt;e&lt;/em&gt;. For example, to create equivalents of &lt;a href=&quot;#easeLinear&quot;&gt;linear&lt;/a&gt;, &lt;a href=&quot;#easeQuad&quot;&gt;quad&lt;/a&gt;, and &lt;a href=&quot;#easeCubic&quot;&gt;cubic&lt;/a&gt;:</source>
          <target state="translated">指定された指数&lt;em&gt;e&lt;/em&gt;で新しい多項式イージングを返します。たとえば、&lt;a href=&quot;#easeLinear&quot;&gt;linear&lt;/a&gt;、&lt;a href=&quot;#easeQuad&quot;&gt;quad&lt;/a&gt;、および&lt;a href=&quot;#easeCubic&quot;&gt;cubicに&lt;/a&gt;相当するものを作成するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="64104a037d4e0166ebed4da6ec0c2d48c6d82d8e" translate="yes" xml:space="preserve">
          <source>Returns a new selection merging this selection with the specified &lt;em&gt;other&lt;/em&gt; selection. The returned selection has the same number of groups and the same parents as this selection. Any missing (null) elements in this selection are filled with the corresponding element, if present (not null), from the specified &lt;em&gt;selection&lt;/em&gt;. (If the &lt;em&gt;other&lt;/em&gt; selection has additional groups or parents, they are ignored.)</source>
          <target state="translated">この選択を指定された&lt;em&gt;他の&lt;/em&gt;選択とマージする新しい選択を返します。返される選択には、この選択と同じ数のグループと同じ親があります。この選択で欠落している（null）要素は、指定された&lt;em&gt;selection&lt;/em&gt;の対応する要素（存在する場合（nullではない））で埋められます。（&lt;em&gt;他の&lt;/em&gt;選択に追加のグループまたは親がある場合、それらは無視されます。）</target>
        </trans-unit>
        <trans-unit id="53055b8191791dfc41926faa4c869ff9c6d4c999" translate="yes" xml:space="preserve">
          <source>Returns a new selection that contains a copy of each group in this selection sorted according to the &lt;em&gt;compare&lt;/em&gt; function. After sorting, re-inserts elements to match the resulting order (per &lt;a href=&quot;#selection_order&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.order&lt;/a&gt;).</source>
          <target state="translated">&lt;em&gt;比較&lt;/em&gt;機能に従ってソートされた、この選択内の各グループのコピーを含む新しい選択を返します。ソート後、結果の順序と一致するように要素を再挿入します（&lt;a href=&quot;#selection_order&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .orderごと&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="56a938794461f6e1cd5865256513a982b90bda2c" translate="yes" xml:space="preserve">
          <source>Returns a new transition merging this transition with the specified &lt;em&gt;other&lt;/em&gt; transition, which must have the same id as this transition. The returned transition has the same number of groups, the same parents, the same name and the same id as this transition. Any missing (null) elements in this transition are filled with the corresponding element, if present (not null), from the &lt;em&gt;other&lt;/em&gt; transition.</source>
          <target state="translated">この遷移を、指定された&lt;em&gt;他の&lt;/em&gt;遷移とマージする新しい遷移を返します。これは、この遷移と同じIDを持つ必要があります。返される遷移には、この遷移と同じ数のグループ、同じ親、同じ名前、同じIDがあります。この遷移で欠落している（null）要素は、&lt;em&gt;他の&lt;/em&gt;遷移からの対応する要素（nullでない場合）で埋められます。</target>
        </trans-unit>
        <trans-unit id="9545ea5c5d6326a5ecaa96a8e716f4c2e5bcf512" translate="yes" xml:space="preserve">
          <source>Returns a new transition on the given &lt;em&gt;selection&lt;/em&gt; with the specified &lt;em&gt;name&lt;/em&gt;. If a &lt;em&gt;name&lt;/em&gt; is not specified, null is used. The new transition is only exclusive with other transitions of the same name.</source>
          <target state="translated">指定された&lt;em&gt;名前&lt;/em&gt;の指定された&lt;em&gt;選択範囲の&lt;/em&gt;新しい遷移を返します。&lt;em&gt;名前&lt;/em&gt;が指定されていない場合は、nullが使用されます。新しいトランジションは、同じ名前の他のトランジションとのみ排他的です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7f3b15c85af0a0dc49d3877128dfa30549fb7baf" translate="yes" xml:space="preserve">
          <source>Returns a new transition on the root element, &lt;code&gt;document.documentElement&lt;/code&gt;, with the specified &lt;em&gt;name&lt;/em&gt;. If a &lt;em&gt;name&lt;/em&gt; is not specified, null is used. The new transition is only exclusive with other transitions of the same name. The &lt;em&gt;name&lt;/em&gt; may also be a &lt;a href=&quot;#transition&quot;&gt;transition&lt;/a&gt; instance; see &lt;a href=&quot;#selection_transition&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.transition&lt;/a&gt;. This method is equivalent to:</source>
          <target state="translated">指定された&lt;em&gt;nameを&lt;/em&gt;持つルート要素 &lt;code&gt;document.documentElement&lt;/code&gt; の新しい遷移を返します。&lt;em&gt;名前&lt;/em&gt;が指定されていない場合は、nullが使用されます。新しいトランジションは、同じ名前の他のトランジションとのみ排他的です。&lt;em&gt;名前が&lt;/em&gt;あってもよい&lt;a href=&quot;#transition&quot;&gt;遷移&lt;/a&gt;インスタンス。参照&lt;a href=&quot;#selection_transition&quot;&gt;&lt;em&gt;選択&lt;/em&gt;&lt;/a&gt; .transitionを。このメソッドは以下と同等です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a11e683a43113df93a9e98472bff841848ad9296" translate="yes" xml:space="preserve">
          <source>Returns a new transition on the same selected elements as this transition, scheduled to start when this transition ends. The new transition inherits a reference time equal to this transition&amp;rsquo;s time plus its &lt;a href=&quot;#transition_delay&quot;&gt;delay&lt;/a&gt; and &lt;a href=&quot;#transition_duration&quot;&gt;duration&lt;/a&gt;. The new transition also inherits this transition&amp;rsquo;s name, duration, and &lt;a href=&quot;#transition_ease&quot;&gt;easing&lt;/a&gt;. This method can be used to schedule a sequence of chained transitions. For example:</source>
          <target state="translated">この遷移と同じ選択された要素の新しい遷移を返します。この遷移が終了したときに開始するようにスケジュールされています。新しい遷移は、この遷移の時間に&lt;a href=&quot;#transition_delay&quot;&gt;遅延&lt;/a&gt;と&lt;a href=&quot;#transition_duration&quot;&gt;継続&lt;/a&gt;時間を加えたものに等しい参照時間を継承します。新しいトランジションは、このトランジションの名前、継続時間、および&lt;a href=&quot;#transition_ease&quot;&gt;イージング&lt;/a&gt;も継承します。このメソッドは、連鎖遷移のシーケンスをスケジュールするために使用できます。例えば：</target>
        </trans-unit>
        <trans-unit id="67c593e9d1508afe24118f88683e9a8e3425b710" translate="yes" xml:space="preserve">
          <source>Returns a permutation of the specified &lt;em&gt;array&lt;/em&gt; using the specified array of &lt;em&gt;indexes&lt;/em&gt;. The returned array contains the corresponding element in array for each index in indexes, in order. For example, permute([&quot;a&quot;, &quot;b&quot;, &quot;c&quot;], [1, 2, 0]) returns [&quot;b&quot;, &quot;c&quot;, &quot;a&quot;]. It is acceptable for the array of indexes to be a different length from the array of elements, and for indexes to be duplicated or omitted.</source>
          <target state="translated">指定された&lt;em&gt;インデックスの&lt;/em&gt;&lt;em&gt;配列&lt;/em&gt;を使用して、指定された&lt;em&gt;配列の&lt;/em&gt;順列を返し&lt;em&gt;ます&lt;/em&gt;。返される配列には、インデックス内の各インデックスの配列内の対応する要素が順番に含まれています。たとえば、permute（[&quot;a&quot;、 &quot;b&quot;、 &quot;c&quot;]、[1、2、0]）は[&quot;b&quot;、 &quot;c&quot;、 &quot;a&quot;]を返します。インデックスの配列が要素の配列とは異なる長さであっても、インデックスが重複または省略されていても問題ありません。</target>
        </trans-unit>
        <trans-unit id="591511b855ba678aa3a272ebab318fb3c1888308" translate="yes" xml:space="preserve">
          <source>Returns a piecewise interpolator, composing interpolators for each adjacent pair of &lt;em&gt;values&lt;/em&gt;. The returned interpolator maps &lt;em&gt;t&lt;/em&gt; in [0, 1 / (&lt;em&gt;n&lt;/em&gt; - 1)] to &lt;em&gt;interpolate&lt;/em&gt;(&lt;em&gt;values&lt;/em&gt;[0], &lt;em&gt;values&lt;/em&gt;[1]), &lt;em&gt;t&lt;/em&gt; in [1 / (&lt;em&gt;n&lt;/em&gt; - 1), 2 / (&lt;em&gt;n&lt;/em&gt; - 1)] to &lt;em&gt;interpolate&lt;/em&gt;(&lt;em&gt;values&lt;/em&gt;[1], &lt;em&gt;values&lt;/em&gt;[2]), and so on, where &lt;em&gt;n&lt;/em&gt; = &lt;em&gt;values&lt;/em&gt;.length. In effect, this is a lightweight &lt;a href=&quot;d3-scale#linear-scales&quot;&gt;linear scale&lt;/a&gt;. For example, to blend through red, green and blue:</source>
          <target state="translated">隣接する&lt;em&gt;値の&lt;/em&gt;ペアごとに補間器を構成する区分的補間器を返します。返された補間は、マップ&lt;em&gt;Tは&lt;/em&gt; [0、1 /（IN &lt;em&gt;N&lt;/em&gt; - 1）]に&lt;em&gt;補間&lt;/em&gt;（&lt;em&gt;値&lt;/em&gt; [0]、&lt;em&gt;値&lt;/em&gt; [1]）、&lt;em&gt;T&lt;/em&gt; [1 /（&lt;em&gt;N&lt;/em&gt; - 1）、2 /（&lt;em&gt;N&lt;/em&gt; - 1）] &lt;em&gt;補間&lt;/em&gt;（&lt;em&gt;値&lt;/em&gt; [1]、&lt;em&gt;値&lt;/em&gt; [2]）など、&lt;em&gt;N&lt;/em&gt; = &lt;em&gt;値&lt;/em&gt; .LENGTH。実際、これは軽量の&lt;a href=&quot;d3-scale#linear-scales&quot;&gt;リニアスケール&lt;/a&gt;です。たとえば、赤、緑、青をブレンドするには：</target>
        </trans-unit>
        <trans-unit id="c574e21a2f7b09f0f80efb08a7715a57bcd1d246" translate="yes" xml:space="preserve">
          <source>Returns a polyhedral projection based on the &lt;em&gt;polygons&lt;/em&gt;, arranged in a tree according to the &lt;em&gt;parents&lt;/em&gt; list. &lt;em&gt;polygons&lt;/em&gt; are a GeoJSON FeatureCollection of geoVoronoi cells, which should indicate the corresponding sites (see &lt;a href=&quot;https://github.com/Fil/d3-geo-voronoi&quot;&gt;d3-geo-voronoi&lt;/a&gt;). An optional &lt;a href=&quot;#geoPolyhedral&quot;&gt;&lt;em&gt;faceProjection&lt;/em&gt;&lt;/a&gt; is passed to d3.geoPolyhedral() -- note that the gnomonic projection on the polygons&amp;rsquo; sites is the only faceProjection that works in the general case.</source>
          <target state="translated">&lt;em&gt;親&lt;/em&gt;リストに従ってツリーに配置された、&lt;em&gt;ポリゴン&lt;/em&gt;に基づく多面体投影を返します。&lt;em&gt;ポリゴン&lt;/em&gt;はgeoVoronoiセルのGeoJSON FeatureCollectionであり、対応するサイトを示します（&lt;a href=&quot;https://github.com/Fil/d3-geo-voronoi&quot;&gt;d3-geo-&lt;/a&gt; voronoiを参照）。オプションの&lt;a href=&quot;#geoPolyhedral&quot;&gt;&lt;em&gt;faceProjection&lt;/em&gt;&lt;/a&gt;がd3.geoPolyhedral（）に渡されます-ポリゴンのサイトでのノモニック投影が一般的なケースで機能する唯一のfaceProjectionであることに注意してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="202f8bf920c188340039779af39ffa7f7296e4a3" translate="yes" xml:space="preserve">
          <source>Returns a series order such that the larger series (according to the sum of values) are on the inside and the smaller series are on the outside. This order is recommended for streamgraphs in conjunction with the &lt;a href=&quot;#stackOffsetWiggle&quot;&gt;wiggle offset&lt;/a&gt;. See &lt;a href=&quot;http://leebyron.com/streamgraph/&quot;&gt;Stacked Graphs&amp;mdash;Geometry &amp;amp; Aesthetics&lt;/a&gt; by Byron &amp;amp; Wattenberg for more information.</source>
          <target state="translated">大きい系列（値の合計に基づく）が内側にあり、小さい系列が外側になるような系列順序を返します。この順序は、&lt;a href=&quot;#stackOffsetWiggle&quot;&gt;ウィグルオフセット&lt;/a&gt;と組み合わせたストリームグラフに推奨されます。詳細については、&lt;a href=&quot;http://leebyron.com/streamgraph/&quot;&gt;積み上げグラフ&lt;/a&gt; &amp;mdash;Byron＆Wattenbergによる幾何学と美学を参照してください。</target>
        </trans-unit>
        <trans-unit id="acf3437513b0ed2b5139db007ca2b5a329bc12a2" translate="yes" xml:space="preserve">
          <source>Returns a series order such that the largest series (according to the sum of values) is at the bottom.</source>
          <target state="translated">値の合計に応じて)最大の系列が一番下になるような系列の順序を返します。</target>
        </trans-unit>
        <trans-unit id="ece5f3aed86b12bb08509d9db1917568ae65b13f" translate="yes" xml:space="preserve">
          <source>Returns a series order such that the smallest series (according to the sum of values) is at the bottom.</source>
          <target state="translated">値の合計に応じて)一番小さい系列が一番下になるような系列順を返します。</target>
        </trans-unit>
        <trans-unit id="2dc56f956555ac8614ab62659bbd0050df5e14cb" translate="yes" xml:space="preserve">
          <source>Returns a shallow copy of the specified GeoJSON &lt;em&gt;object&lt;/em&gt;, removing antimeridian and polar cuts, and replacing straight Cartesian line segments with geodesic segments. The input &lt;em&gt;object&lt;/em&gt; must have coordinates in longitude and latitude in decimal degrees per &lt;a href=&quot;https://tools.ietf.org/html/rfc7946&quot;&gt;RFC 7946&lt;/a&gt;. &lt;a href=&quot;https://bl.ocks.org/mbostock/3788999&quot;&gt;Antimeridian cutting&lt;/a&gt;, if needed, can then be re-applied after rotating to the desired projection aspect.</source>
          <target state="translated">指定されたGeoJSON &lt;em&gt;オブジェクトの&lt;/em&gt;浅いコピーを返し、時限線と極座標のカットを削除し、直角のデカルト線セグメントを測地線セグメントに置き換えます。入力&lt;em&gt;オブジェクトに&lt;/em&gt;は、&lt;a href=&quot;https://tools.ietf.org/html/rfc7946&quot;&gt;RFC 7946に従って&lt;/a&gt;、経度と緯度の座標が10 進度である必要があります。必要に応じて、&lt;a href=&quot;https://bl.ocks.org/mbostock/3788999&quot;&gt;アンティメリディアンカット&lt;/a&gt;を回転させてから、目的の投影アスペクトに再適用できます。</target>
        </trans-unit>
        <trans-unit id="a7ac5fa2713324461f6f89ad7408bbcde970c4bb" translate="yes" xml:space="preserve">
          <source>Returns a shallow copy of the specified GeoJSON &lt;em&gt;object&lt;/em&gt;, rounding &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; coordinates according to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed&quot;&gt;&lt;em&gt;number&lt;/em&gt;.toFixed&lt;/a&gt;. Typically this is done &lt;em&gt;after&lt;/em&gt;&lt;a href=&quot;#geoProject&quot;&gt;projecting&lt;/a&gt;.</source>
          <target state="translated">指定されたGeoJSON &lt;em&gt;オブジェクトの&lt;/em&gt;浅いコピーを返し、&lt;em&gt;x&lt;/em&gt;座標と&lt;em&gt;y&lt;/em&gt;座標を&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed&quot;&gt;&lt;em&gt;数値&lt;/em&gt; .toFixed&lt;/a&gt;に従って丸め&lt;em&gt;ます&lt;/em&gt;。通常、これは&lt;a href=&quot;#geoProject&quot;&gt;投影&lt;/a&gt;&lt;em&gt;後に&lt;/em&gt;行われます。</target>
        </trans-unit>
        <trans-unit id="e6dab5dfb1275939cb677362aac6a1426767e5c3" translate="yes" xml:space="preserve">
          <source>Returns a sparse array of polygons clipped to the &lt;a href=&quot;#voronoi_extent&quot;&gt;&lt;em&gt;extent&lt;/em&gt;&lt;/a&gt;, one for each cell (each unique input point) in the diagram. Each polygon is represented as an array of points [&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;] where &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; are the point coordinates, and a &lt;code&gt;data&lt;/code&gt; field that refers to the corresponding element in &lt;em&gt;data&lt;/em&gt;. Polygons are open: they do not contain a closing point that duplicates the first point; a triangle, for example, is an array of three points. Polygons are also counterclockwise, assuming the origin ⟨0,0⟩ is in the top-left corner.</source>
          <target state="translated">図の各セル（各一意の入力ポイント）に1つずつ、&lt;a href=&quot;#voronoi_extent&quot;&gt;&lt;em&gt;範囲&lt;/em&gt;&lt;/a&gt;にクリップされたポリゴンのスパース配列を返します。各ポリゴンは、点の配列[として表される&lt;em&gt;X&lt;/em&gt;、&lt;em&gt;Y&lt;/em&gt; ] &lt;em&gt;のx&lt;/em&gt;及び&lt;em&gt;yは、&lt;/em&gt;点座標であり、 &lt;code&gt;data&lt;/code&gt; の対応する要素を指すフィールド&lt;em&gt;データ&lt;/em&gt;。ポリゴンは開いています。最初のポイントと重複する終了ポイントが含まれていません。たとえば、三角形は3つの点の配列です。原点⟨0,0⟩が左上隅にあると想定すると、ポリゴンも反時計回りになります。</target>
        </trans-unit>
        <trans-unit id="e4f3717276e27ed32f6475ccd92dffa069711e27" translate="yes" xml:space="preserve">
          <source>Returns a sparse array of polygons, one for each unique input point in the specified &lt;em&gt;data&lt;/em&gt; points, corresponding to the cells in the computed Voronoi diagram. Equivalent to:</source>
          <target state="translated">計算されたボロノイ図のセルに対応する、指定された&lt;em&gt;データ&lt;/em&gt;ポイント内の一意の入力ポイントごとに1つの、多角形のスパース配列を返します。に相当：</target>
        </trans-unit>
        <trans-unit id="89b7f61dcddb027ee70434c79477bdc18450bd57" translate="yes" xml:space="preserve">
          <source>Returns a string representing the &lt;a href=&quot;https://www.w3.org/TR/SVG/coords.html#TransformAttribute&quot;&gt;SVG transform&lt;/a&gt; corresponding to this transform. Implemented as:</source>
          <target state="translated">この変換に対応する&lt;a href=&quot;https://www.w3.org/TR/SVG/coords.html#TransformAttribute&quot;&gt;SVG変換を&lt;/a&gt;表す文字列を返します。として実装：</target>
        </trans-unit>
        <trans-unit id="5c635e6e0c4a49163dbad2627b59934ef8468d06" translate="yes" xml:space="preserve">
          <source>Returns a string representing this color according to the &lt;a href=&quot;https://drafts.csswg.org/cssom/#serialize-a-css-component-value&quot;&gt;CSS Object Model specification&lt;/a&gt;, such as &lt;code&gt;rgb(247, 234, 186)&lt;/code&gt; or &lt;code&gt;rgba(247, 234, 186, 0.2)&lt;/code&gt;. If this color is not displayable, a suitable displayable color is returned instead. For example, RGB channel values greater than 255 are clamped to 255.</source>
          <target state="translated">&lt;code&gt;rgb(247, 234, 186)&lt;/code&gt; &lt;code&gt;rgba(247, 234, 186, 0.2)&lt;/code&gt; ）やrgba（247、234、186、0.2 ）など、&lt;a href=&quot;https://drafts.csswg.org/cssom/#serialize-a-css-component-value&quot;&gt;CSSオブジェクトモデルの仕様&lt;/a&gt;に従ってこの色を表す文字列を返します。この色が表示できない場合は、適切な表示可能な色が代わりに返されます。たとえば、255より大きいRGBチャネル値は255に固定されます。</target>
        </trans-unit>
        <trans-unit id="c2846d0ebaadf490978675cc12d6a99ad63e1c5c" translate="yes" xml:space="preserve">
          <source>Returns a suggested decimal precision for fixed point notation given the specified numeric &lt;em&gt;step&lt;/em&gt; value. The &lt;em&gt;step&lt;/em&gt; represents the minimum absolute difference between values that will be formatted. (This assumes that the values to be formatted are also multiples of &lt;em&gt;step&lt;/em&gt;.) For example, given the numbers 1, 1.5, and 2, the &lt;em&gt;step&lt;/em&gt; should be 0.5 and the suggested precision is 1:</source>
          <target state="translated">指定された数値の&lt;em&gt;ステップ&lt;/em&gt;値を指定すると、固定小数点表記の推奨10進精度を返します。&lt;em&gt;ステップは、&lt;/em&gt;フォーマットされた値の間の最小絶対差を表します。 （これは、フォーマットされる値も&lt;em&gt;stepの&lt;/em&gt;倍数であると想定しています。）たとえば、1、1.5、および2の数値を指定すると、&lt;em&gt;step&lt;/em&gt;は0.5であり、推奨される精度は1です。</target>
        </trans-unit>
        <trans-unit id="d11850d07543b266b11c12527e73d5b9a7ee1bf4" translate="yes" xml:space="preserve">
          <source>Returns a suggested decimal precision for format types that round to significant digits given the specified numeric &lt;em&gt;step&lt;/em&gt; and &lt;em&gt;max&lt;/em&gt; values. The &lt;em&gt;step&lt;/em&gt; represents the minimum absolute difference between values that will be formatted, and the &lt;em&gt;max&lt;/em&gt; represents the largest absolute value that will be formatted. (This assumes that the values to be formatted are also multiples of &lt;em&gt;step&lt;/em&gt;.) For example, given the numbers 0.99, 1.0, and 1.01, the &lt;em&gt;step&lt;/em&gt; should be 0.01, the &lt;em&gt;max&lt;/em&gt; should be 1.01, and the suggested precision is 3:</source>
          <target state="translated">指定された数値&lt;em&gt;ステップ&lt;/em&gt;と&lt;em&gt;最大&lt;/em&gt;値を指定して、有効数字に丸めるフォーマットタイプの推奨10進精度を返します。&lt;em&gt;ステップは、&lt;/em&gt;フォーマットされた値の間の最小絶対差を表し、&lt;em&gt;maxは&lt;/em&gt;フォーマットされ、最大絶対値を表しています。 （これは、フォーマットされる値も&lt;em&gt;stepの&lt;/em&gt;倍数であることを前提としています。）たとえば、0.99、1.0、および1.01の数値の場合、&lt;em&gt;ステップ&lt;/em&gt;は0.01、&lt;em&gt;最大&lt;/em&gt;は1.01、推奨される精度は3です。</target>
        </trans-unit>
        <trans-unit id="868c45e905e7acaac57f545db0a471d57bca4f0a" translate="yes" xml:space="preserve">
          <source>Returns a suggested decimal precision for use with &lt;a href=&quot;#locale_formatPrefix&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.formatPrefix&lt;/a&gt; given the specified numeric &lt;em&gt;step&lt;/em&gt; and reference &lt;em&gt;value&lt;/em&gt;. The &lt;em&gt;step&lt;/em&gt; represents the minimum absolute difference between values that will be formatted, and &lt;em&gt;value&lt;/em&gt; determines which SI prefix will be used. (This assumes that the values to be formatted are also multiples of &lt;em&gt;step&lt;/em&gt;.) For example, given the numbers 1.1e6, 1.2e6, and 1.3e6, the &lt;em&gt;step&lt;/em&gt; should be 1e5, the &lt;em&gt;value&lt;/em&gt; could be 1.3e6, and the suggested precision is 1:</source>
          <target state="translated">指定された数値&lt;em&gt;ステップ&lt;/em&gt;と参照&lt;em&gt;値を&lt;/em&gt;指定して、&lt;a href=&quot;#locale_formatPrefix&quot;&gt;&lt;em&gt;ロケール&lt;/em&gt; .formatPrefix&lt;/a&gt;で使用するための推奨される10進精度を返します。&lt;em&gt;ステップは、&lt;/em&gt;フォーマットされた値との間の最小差分絶対表す&lt;em&gt;値&lt;/em&gt; SIプレフィックスが使用されるかを決定します。 （これは、フォーマットする値もの倍数であることを前提と&lt;em&gt;ステップ&lt;/em&gt;番号1.1e6、1.2e6所与、例えば。）、及び1.3e6は、&lt;em&gt;ステップは&lt;/em&gt;、1E5であるべき&lt;em&gt;値は&lt;/em&gt;、1.3e6かもしれないと示唆した精度であります1：&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="12544e6a578b187f75ddeb4d24c8b82f93f4fab9" translate="yes" xml:space="preserve">
          <source>Returns a time format function suitable for displaying &lt;a href=&quot;#time_ticks&quot;&gt;tick&lt;/a&gt; values. The specified &lt;em&gt;count&lt;/em&gt; or &lt;em&gt;interval&lt;/em&gt; is currently ignored, but is accepted for consistency with other scales such as &lt;a href=&quot;#continuous_tickFormat&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.tickFormat&lt;/a&gt;. If a format &lt;em&gt;specifier&lt;/em&gt; is specified, this method is equivalent to &lt;a href=&quot;d3-time-format#format&quot;&gt;format&lt;/a&gt;. If &lt;em&gt;specifier&lt;/em&gt; is not specified, the default time format is returned. The default multi-scale time format chooses a human-readable representation based on the specified date as follows:</source>
          <target state="translated">&lt;a href=&quot;#time_ticks&quot;&gt;目盛り&lt;/a&gt;値の表示に適した時間フォーマット関数を返します。現在、指定された&lt;em&gt;カウント&lt;/em&gt;または&lt;em&gt;間隔&lt;/em&gt;は無視され&lt;em&gt;ます&lt;/em&gt;が、&lt;a href=&quot;#continuous_tickFormat&quot;&gt;&lt;em&gt;連続&lt;/em&gt; .tickFormat&lt;/a&gt;などの他のスケールとの一貫性のために受け入れられます。フォーマット&lt;em&gt;指定子&lt;/em&gt;が指定&lt;em&gt;されて&lt;/em&gt;いる場合、このメソッドは&lt;a href=&quot;d3-time-format#format&quot;&gt;format&lt;/a&gt;と同等です。&lt;em&gt;指定子&lt;/em&gt;が&lt;em&gt;指定され&lt;/em&gt;ていない場合、デフォルトの時刻形式が返されます。デフォルトのマルチスケール時間形式は、指定された日付に基づいて、次のように人間が読める形式を選択します。</target>
        </trans-unit>
        <trans-unit id="63449f5798d6c04ae6778f29d452615c6322ef1f" translate="yes" xml:space="preserve">
          <source>Returns a transform whose scale &lt;em&gt;k₁&lt;/em&gt; is equal to &lt;em&gt;k₀k&lt;/em&gt;, where &lt;em&gt;k₀&lt;/em&gt; is this transform&amp;rsquo;s scale.</source>
          <target state="translated">スケール&lt;em&gt;k₁&lt;/em&gt;が&lt;em&gt;k₀k&lt;/em&gt;に等しい変換を返します。ここで、&lt;em&gt;k₀&lt;/em&gt;はこの変換のスケールです。</target>
        </trans-unit>
        <trans-unit id="e3f460f2b7f446e8f1c0000fa4906bbdfe98bc29" translate="yes" xml:space="preserve">
          <source>Returns a transform whose translation &lt;em&gt;t&lt;sub&gt;x1&lt;/sub&gt;&lt;/em&gt; and &lt;em&gt;t&lt;sub&gt;y1&lt;/sub&gt;&lt;/em&gt; is equal to &lt;em&gt;t&lt;sub&gt;x0&lt;/sub&gt;&lt;/em&gt; + &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;t&lt;sub&gt;y0&lt;/sub&gt;&lt;/em&gt; + &lt;em&gt;y&lt;/em&gt;, where &lt;em&gt;t&lt;sub&gt;x0&lt;/sub&gt;&lt;/em&gt; and &lt;em&gt;t&lt;sub&gt;y0&lt;/sub&gt;&lt;/em&gt; is this transform&amp;rsquo;s translation.</source>
          <target state="translated">変換&lt;em&gt;t &lt;sub&gt;x1&lt;/sub&gt;&lt;/em&gt;および&lt;em&gt;t &lt;sub&gt;y1&lt;/sub&gt;&lt;/em&gt;が&lt;em&gt;t &lt;sub&gt;x0&lt;/sub&gt;&lt;/em&gt; + &lt;em&gt;x&lt;/em&gt;および&lt;em&gt;t &lt;sub&gt;y0&lt;/sub&gt;&lt;/em&gt; + &lt;em&gt;y&lt;/em&gt;に等しい変換を返します。ここで、&lt;em&gt;t &lt;sub&gt;x0&lt;/sub&gt;&lt;/em&gt;および&lt;em&gt;t &lt;sub&gt;y0&lt;/sub&gt;&lt;/em&gt;はこの変換の変換です。</target>
        </trans-unit>
        <trans-unit id="50f00e06b45cdb355e7ccb99847103160b4f21fb" translate="yes" xml:space="preserve">
          <source>Returns a uniform nonrational B-spline interpolator through the specified array of &lt;em&gt;colors&lt;/em&gt;, which are converted to &lt;a href=&quot;d3-color#rgb&quot;&gt;RGB color space&lt;/a&gt;. Implicit control points are generated such that the interpolator returns &lt;em&gt;colors&lt;/em&gt;[0] at &lt;em&gt;t&lt;/em&gt; = 0 and &lt;em&gt;colors&lt;/em&gt;[&lt;em&gt;colors&lt;/em&gt;.length - 1] at &lt;em&gt;t&lt;/em&gt; = 1. Opacity interpolation is not currently supported. See also &lt;a href=&quot;#interpolateBasis&quot;&gt;d3.interpolateBasis&lt;/a&gt;, and see &lt;a href=&quot;d3-scale-chromatic&quot;&gt;d3-scale-chromatic&lt;/a&gt; for examples.</source>
          <target state="translated">&lt;a href=&quot;d3-color#rgb&quot;&gt;RGB色空間に&lt;/a&gt;変換された指定された&lt;em&gt;色の&lt;/em&gt;配列を介して、一様な非有理Bスプライン補間を返します。暗黙の制御点は、補間戻すこと生成される&lt;em&gt;色&lt;/em&gt;で[0] &lt;em&gt;T&lt;/em&gt; = 0と&lt;em&gt;色&lt;/em&gt; [ &lt;em&gt;色&lt;/em&gt; .LENGTH - 1]で&lt;em&gt;、T&lt;/em&gt; = 1の不透明度補間現在サポートされていません。&lt;a href=&quot;#interpolateBasis&quot;&gt;d3.interpolateBasis&lt;/a&gt;も参照してください。例については、&lt;a href=&quot;d3-scale-chromatic&quot;&gt;d3-scale-chromatic&lt;/a&gt;を参照してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6405766673d941bfa9a9da34bc5a76bfa299a5c9" translate="yes" xml:space="preserve">
          <source>Returns a uniform nonrational B-spline interpolator through the specified array of &lt;em&gt;colors&lt;/em&gt;, which are converted to &lt;a href=&quot;d3-color#rgb&quot;&gt;RGB color space&lt;/a&gt;. The control points are implicitly repeated such that the resulting spline has cyclical C&amp;sup2; continuity when repeated around &lt;em&gt;t&lt;/em&gt; in [0,1]; this is useful, for example, to create cyclical color scales. Opacity interpolation is not currently supported. See also &lt;a href=&quot;#interpolateBasisClosed&quot;&gt;d3.interpolateBasisClosed&lt;/a&gt;, and see &lt;a href=&quot;d3-scale-chromatic&quot;&gt;d3-scale-chromatic&lt;/a&gt; for examples.</source>
          <target state="translated">&lt;a href=&quot;d3-color#rgb&quot;&gt;RGB色空間に&lt;/a&gt;変換された指定された&lt;em&gt;色の&lt;/em&gt;配列を介して、一様な非有理Bスプライン補間を返します。制御点は暗黙的に繰り返されるため、[0,1]の&lt;em&gt;tの&lt;/em&gt;周りで繰り返されると、結果のスプラインは周期的なC&amp;sup2;連続性を持ちます。これは、たとえば、周期的なカラースケールを作成する場合に便利です。不透明度補間は現在サポートされていません。&lt;a href=&quot;#interpolateBasisClosed&quot;&gt;d3.interpolateBasisClosed&lt;/a&gt;も参照してください。例については、&lt;a href=&quot;d3-scale-chromatic&quot;&gt;d3-scale-chromatic&lt;/a&gt;を参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8eb0d946d06ef2af6429896bcf19bcc5e69a32b4" translate="yes" xml:space="preserve">
          <source>Returns a uniform nonrational B-spline interpolator through the specified array of &lt;em&gt;values&lt;/em&gt;, which must be numbers. Implicit control points are generated such that the interpolator returns &lt;em&gt;values&lt;/em&gt;[0] at &lt;em&gt;t&lt;/em&gt; = 0 and &lt;em&gt;values&lt;/em&gt;[&lt;em&gt;values&lt;/em&gt;.length - 1] at &lt;em&gt;t&lt;/em&gt; = 1. See also &lt;a href=&quot;d3-shape#curveBasis&quot;&gt;d3.curveBasis&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;数値&lt;/em&gt;でなければならない指定された&lt;em&gt;値の&lt;/em&gt;配列を介して、一様な非有理Bスプライン補間を返します。暗黙的な制御点が補間返すように生成され&lt;em&gt;た値&lt;/em&gt;に[0] &lt;em&gt;T&lt;/em&gt; = 0と&lt;em&gt;値が&lt;/em&gt; [ &lt;em&gt;値が&lt;/em&gt; .LENGTH - 1]における&lt;em&gt;T&lt;/em&gt; = 1も参照&lt;a href=&quot;d3-shape#curveBasis&quot;&gt;d3.curveBasis&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8122731ea706f83cca09adca84680f24f930bbdb" translate="yes" xml:space="preserve">
          <source>Returns a uniform nonrational B-spline interpolator through the specified array of &lt;em&gt;values&lt;/em&gt;, which must be numbers. The control points are implicitly repeated such that the resulting one-dimensional spline has cyclical C&amp;sup2; continuity when repeated around &lt;em&gt;t&lt;/em&gt; in [0,1]. See also &lt;a href=&quot;d3-shape#curveBasisClosed&quot;&gt;d3.curveBasisClosed&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;数値&lt;/em&gt;でなければならない指定された&lt;em&gt;値の&lt;/em&gt;配列を介して、一様な非有理Bスプライン補間を返します。制御点は暗黙的に繰り返されるため、[0,1]の&lt;em&gt;tの&lt;/em&gt;周りで繰り返されると、結果の1次元スプラインは周期的なC&amp;sup2;連続性を持ちます。&lt;a href=&quot;d3-shape#curveBasisClosed&quot;&gt;d3.curveBasisClosed&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="7e0b254c4e86a4d50ff943ed3baf7936751f6d78" translate="yes" xml:space="preserve">
          <source>Returns an &lt;a href=&quot;http://mathworld.wolfram.com/SampleVariance.html&quot;&gt;unbiased estimator of the population variance&lt;/a&gt; of the given &lt;em&gt;array&lt;/em&gt; of numbers. If the array has fewer than two values, returns undefined. An optional &lt;em&gt;accessor&lt;/em&gt; function may be specified, which is equivalent to calling &lt;em&gt;array&lt;/em&gt;.map(&lt;em&gt;accessor&lt;/em&gt;) before computing the variance. This method ignores undefined and NaN values; this is useful for ignoring missing data.</source>
          <target state="translated">指定された数値&lt;em&gt;配列の&lt;/em&gt;&lt;a href=&quot;http://mathworld.wolfram.com/SampleVariance.html&quot;&gt;母集団分散の不偏推定量を&lt;/a&gt;返します。配列の値が2つ未満の場合、未定義を返します。オプションの&lt;em&gt;アクセサ&lt;/em&gt;関数を指定できます。これは、分散を計算する前に&lt;em&gt;array&lt;/em&gt; .map（&lt;em&gt;accessor&lt;/em&gt;）を呼び出すのと同じです。このメソッドは、未定義およびNaN値を無視します。これは、欠落しているデータを無視するのに役立ちます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1df2bb75cd484ff2b1291332b9525c07a51472a4" translate="yes" xml:space="preserve">
          <source>Returns an HCL color space interpolator between the two colors &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. The colors &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; need not be in HCL; they will be converted to HCL using &lt;a href=&quot;d3-color#hcl&quot;&gt;d3.hcl&lt;/a&gt;. If either color&amp;rsquo;s hue or chroma is NaN, the opposing color&amp;rsquo;s channel value is used. The shortest path between hues is used. The return value of the interpolator is an RGB string.</source>
          <target state="translated">2つの色&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;間のHCL色空間補間を返します。色&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;b&lt;/em&gt;はHCLである必要はありません。それらは&lt;a href=&quot;d3-color#hcl&quot;&gt;d3.hcl&lt;/a&gt;を使用してHCLに変換されます。色の色相または彩度がNaNの場合、反対の色のチャネル値が使用されます。色相間の最短経路が使用されます。補間器の戻り値はRGB文字列です。</target>
        </trans-unit>
        <trans-unit id="4a99e0b1b340dcaaf00af73667fcf93fa0b424f8" translate="yes" xml:space="preserve">
          <source>Returns an HSL color space interpolator between the two colors &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. The colors &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; need not be in HSL; they will be converted to HSL using &lt;a href=&quot;d3-color#hsl&quot;&gt;d3.hsl&lt;/a&gt;. If either color&amp;rsquo;s hue or saturation is NaN, the opposing color&amp;rsquo;s channel value is used. The shortest path between hues is used. The return value of the interpolator is an RGB string.</source>
          <target state="translated">2つの色&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;間のHSL色空間補間を返します。色&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;b&lt;/em&gt;はHSLである必要はありません。それらは&lt;a href=&quot;d3-color#hsl&quot;&gt;d3.hsl&lt;/a&gt;を使用してHSLに変換されます。色の色相または彩度がNaNの場合、反対側の色のチャネル値が使用されます。色相間の最短経路が使用されます。補間器の戻り値はRGB文字列です。</target>
        </trans-unit>
        <trans-unit id="95ca9194067a59b5cff1457fb17f4a699cccb01f" translate="yes" xml:space="preserve">
          <source>Returns an HSV color space interpolator between the two colors &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. The colors &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; need not be in HSV; they will be converted to HSV using &lt;a href=&quot;#hsv&quot;&gt;d3.hsv&lt;/a&gt;. If either color&amp;rsquo;s hue or chroma is NaN, the opposing color&amp;rsquo;s channel value is used. The shortest path between hues is used. The return value of the interpolator is an RGB string.</source>
          <target state="translated">2つの色&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;間のHSV色空間補間を返します。色&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;b&lt;/em&gt;はHSVである必要はありません。それらは&lt;a href=&quot;#hsv&quot;&gt;d3.hsv&lt;/a&gt;を使用してHSVに変換されます。色の色相または彩度がNaNの場合、反対の色のチャネル値が使用されます。色相間の最短経路が使用されます。補間器の戻り値はRGB文字列です。</target>
        </trans-unit>
        <trans-unit id="157952615672ebf068d2040b007f6e32f8be4d9a" translate="yes" xml:space="preserve">
          <source>Returns an RGB color space interpolator between the two colors &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; with a configurable &lt;a href=&quot;#interpolate_gamma&quot;&gt;gamma&lt;/a&gt;. If the gamma is not specified, it defaults to 1.0. The colors &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; need not be in RGB; they will be converted to RGB using &lt;a href=&quot;d3-color#rgb&quot;&gt;d3.rgb&lt;/a&gt;. The return value of the interpolator is an RGB string.</source>
          <target state="translated">設定可能な&lt;a href=&quot;#interpolate_gamma&quot;&gt;ガンマ&lt;/a&gt;を使用し&lt;em&gt;て&lt;/em&gt;、2つの色&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;間のRGB色空間補間を返します。ガンマが指定されていない場合、デフォルトは1.0です。色&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;b&lt;/em&gt;はRGBである必要はありません。それらは&lt;a href=&quot;d3-color#rgb&quot;&gt;d3.rgb&lt;/a&gt;を使用してRGBに変換されます。補間器の戻り値はRGB文字列です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f6d9cd863980caa61188eeb83e58400e9d25d93a" translate="yes" xml:space="preserve">
          <source>Returns an array containing an arithmetic progression, similar to the Python built-in &lt;a href=&quot;http://docs.python.org/library/functions.html#range&quot;&gt;range&lt;/a&gt;. This method is often used to iterate over a sequence of uniformly-spaced numeric values, such as the indexes of an array or the ticks of a linear scale. (See also &lt;a href=&quot;#ticks&quot;&gt;d3.ticks&lt;/a&gt; for nicely-rounded values.)</source>
          <target state="translated">Pythonの組み込み&lt;a href=&quot;http://docs.python.org/library/functions.html#range&quot;&gt;範囲&lt;/a&gt;と同様に、算術の進行を含む配列を返します。このメソッドは、配列のインデックスや線形スケールの目盛りなど、等間隔の一連の数値を反復処理するためによく使用されます。（&lt;a href=&quot;#ticks&quot;&gt;適切&lt;/a&gt;に丸められた値については、d3.ticksも参照してください。）</target>
        </trans-unit>
        <trans-unit id="094a2fc3e87dac46423adf8ff8e103aba392bb8f" translate="yes" xml:space="preserve">
          <source>Returns an array containing the property keys and values of the specified object (an associative array). Each entry is an object with a key and value attribute, such as &lt;code&gt;{key: &quot;foo&quot;, value: 42}&lt;/code&gt;. The order of the returned array is undefined.</source>
          <target state="translated">指定されたオブジェクトのプロパティキーと値を含む配列（連想配列）を返します。各エントリは、 &lt;code&gt;{key: &quot;foo&quot;, value: 42}&lt;/code&gt; などのキーと値の属性を持つオブジェクトです。返される配列の順序は定義されていません。</target>
        </trans-unit>
        <trans-unit id="151d3cc0736c27533bee4b64fd301f65c522710b" translate="yes" xml:space="preserve">
          <source>Returns an array containing the property names of the specified object (an associative array). The order of the returned array is undefined.</source>
          <target state="translated">指定したオブジェクトのプロパティ名を含む配列(連想配列)を返します。返される配列の順序は未定義です。</target>
        </trans-unit>
        <trans-unit id="e304ce4b268863795da77a004ca83eb5027445c7" translate="yes" xml:space="preserve">
          <source>Returns an array containing the property values of the specified object (an associative array). The order of the returned array is undefined.</source>
          <target state="translated">指定したオブジェクトのプロパティ値を含む配列(連想配列)を返します。返される配列の順序は未定義です。</target>
        </trans-unit>
        <trans-unit id="bdd15c4accd76419b6e01791f9d4cec629a2e6fc" translate="yes" xml:space="preserve">
          <source>Returns an array of GeoJSON LineString geometry objects, one for each meridian or parallel for this graticule.</source>
          <target state="translated">GeoJSON LineStringジオメトリオブジェクトの配列を返します。</target>
        </trans-unit>
        <trans-unit id="27bb419fa5b9281fd7a8660d97cf61f3ac487f98" translate="yes" xml:space="preserve">
          <source>Returns an array of all (non-null) elements in this selection.</source>
          <target state="translated">この選択範囲内のすべての要素(非 null)の配列を返します。</target>
        </trans-unit>
        <trans-unit id="fcdf69853686c39730f01ab796cbd8413897d16d" translate="yes" xml:space="preserve">
          <source>Returns an array of all (non-null) elements in this transition. Equivalent to &lt;a href=&quot;d3-selection#selection_nodes&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.nodes&lt;/a&gt;.</source>
          <target state="translated">この遷移のすべての（非null）要素の配列を返します。同等の&lt;a href=&quot;d3-selection#selection_nodes&quot;&gt;&lt;em&gt;選択&lt;/em&gt; .nodes&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b512453e2e552f6adf89defd2016e6d7cd01fa2" translate="yes" xml:space="preserve">
          <source>Returns an array of all data in the quadtree.</source>
          <target state="translated">quadtree内のすべてのデータの配列を返します。</target>
        </trans-unit>
        <trans-unit id="ed5d028113eab4b1ce9481081fb461e3c3cb0c90" translate="yes" xml:space="preserve">
          <source>Returns an array of approximately &lt;em&gt;count&lt;/em&gt; + 1 uniformly-spaced, nicely-rounded values between &lt;em&gt;start&lt;/em&gt; and &lt;em&gt;stop&lt;/em&gt; (inclusive). Each value is a power of ten multiplied by 1, 2 or 5. See also &lt;a href=&quot;#tickIncrement&quot;&gt;d3.tickIncrement&lt;/a&gt;, &lt;a href=&quot;#tickStep&quot;&gt;d3.tickStep&lt;/a&gt; and &lt;a href=&quot;d3-scale#linear_ticks&quot;&gt;&lt;em&gt;linear&lt;/em&gt;.ticks&lt;/a&gt;.</source>
          <target state="translated">およそ&lt;em&gt;count&lt;/em&gt; + 1の配列を返します。&lt;em&gt;開始&lt;/em&gt;と&lt;em&gt;停止の&lt;/em&gt;間で、等間隔で適切に丸められた値が含まれます。各値は、10の累乗に1、2、または5を掛けたもの&lt;a href=&quot;#tickIncrement&quot;&gt;です。d3.tickIncrement&lt;/a&gt;、&lt;a href=&quot;#tickStep&quot;&gt;d3.tickStep&lt;/a&gt;および&lt;a href=&quot;d3-scale#linear_ticks&quot;&gt;&lt;em&gt;linear&lt;/em&gt; .ticks&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="cb2beefd7f1d5207e46dfb79d0b3e8489c5ebe02" translate="yes" xml:space="preserve">
          <source>Returns an array of arrays, where the &lt;em&gt;i&lt;/em&gt;th array contains the &lt;em&gt;i&lt;/em&gt;th element from each of the argument &lt;em&gt;arrays&lt;/em&gt;. The returned array is truncated in length to the shortest array in &lt;em&gt;arrays&lt;/em&gt;. If &lt;em&gt;arrays&lt;/em&gt; contains only a single array, the returned array contains one-element arrays. With no arguments, the returned array is empty.</source>
          <target state="translated">配列の配列を返します&lt;em&gt;。i&lt;/em&gt;番目の配列には、各引数&lt;em&gt;配列の&lt;/em&gt;&lt;em&gt;i&lt;/em&gt;番目の要素が含まれ&lt;em&gt;ます&lt;/em&gt;。返された配列の長さは、&lt;em&gt;arraysの&lt;/em&gt;最も短い配列に切り捨てられ&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;配列に&lt;/em&gt;含まれる配列が1つだけの場合、返される配列には1要素の配列が含まれます。引数がない場合、返される配列は空です。</target>
        </trans-unit>
        <trans-unit id="865db66509293b4d2b63e571f9c75f88958f0f2e" translate="yes" xml:space="preserve">
          <source>Returns an array of dates representing every interval boundary after or equal to &lt;em&gt;start&lt;/em&gt; (inclusive) and before &lt;em&gt;stop&lt;/em&gt; (exclusive). If &lt;em&gt;step&lt;/em&gt; is specified, then every &lt;em&gt;step&lt;/em&gt;th boundary will be returned; for example, for the &lt;a href=&quot;#timeDay&quot;&gt;d3.timeDay&lt;/a&gt; interval a &lt;em&gt;step&lt;/em&gt; of 2 will return every other day. If &lt;em&gt;step&lt;/em&gt; is not an integer, it is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor&quot;&gt;floored&lt;/a&gt;.</source>
          <target state="translated">復帰した後、すべての区間の境界を表す日付の配列またはそれに等しい&lt;em&gt;スタート&lt;/em&gt;（包括的）と前&lt;em&gt;ストップ&lt;/em&gt;（排他的）。場合は&lt;em&gt;ステップが&lt;/em&gt;指定され、その後、すべての&lt;em&gt;ステップ&lt;/em&gt;の境界番目が返されます。たとえば、&lt;a href=&quot;#timeDay&quot;&gt;d3.timeDay&lt;/a&gt;間隔の場合、&lt;em&gt;ステップ&lt;/em&gt; 2は1日おきに返されます。&lt;em&gt;step&lt;/em&gt;が整数でない場合は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/floor&quot;&gt;floorされ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="3ffe5e95bb634ccc5ca1fa1b10c8b60410b0e6d9" translate="yes" xml:space="preserve">
          <source>Returns an array of key-value objects for each entry in this map. The order of the returned entries is arbitrary. Each entry&amp;rsquo;s key is a string, but the value has arbitrary type.</source>
          <target state="translated">このマップの各エントリのKey-Valueオブジェクトの配列を返します。返されるエントリの順序は任意です。各エントリのキーは文字列ですが、値は任意のタイプです。</target>
        </trans-unit>
        <trans-unit id="e270a2f372e4d54cea95bc55e076fd4aeaa7833d" translate="yes" xml:space="preserve">
          <source>Returns an array of links for this &lt;em&gt;node&lt;/em&gt;, where each &lt;em&gt;link&lt;/em&gt; is an object that defines source and target properties. The source of each link is the parent node, and the target is a child node.</source>
          <target state="translated">この&lt;em&gt;ノード&lt;/em&gt;のリンクの配列を返します。各&lt;em&gt;リンク&lt;/em&gt;は、ソースプロパティとターゲットプロパティを定義するオブジェクトです。各リンクのソースは親ノードであり、ターゲットは子ノードです。</target>
        </trans-unit>
        <trans-unit id="7ed1f15209ce70daa7a5792ea55f48b2d3f08ab2" translate="yes" xml:space="preserve">
          <source>Returns an array of string keys for every entry in this map. The order of the returned keys is arbitrary.</source>
          <target state="translated">このマップ内の各エントリの文字列キーの配列を返します。返されるキーの順序は任意です。</target>
        </trans-unit>
        <trans-unit id="a107927de0c0f31bd6d2cfa85909e15e1d0afa3a" translate="yes" xml:space="preserve">
          <source>Returns an array of the string values in this set. The order of the returned values is arbitrary. Can be used as a convenient way of computing the unique values for a set of strings. For example:</source>
          <target state="translated">このセットに含まれる文字列の値の配列を返します。返される値の順序は任意です。これは、文字列の集合に対する一意の値を計算する便利な方法として使用することができます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="e89be0f09b1f54e25f6cf74643df5b921d3e9b83" translate="yes" xml:space="preserve">
          <source>Returns an array of values for every entry in this map. The order of the returned values is arbitrary.</source>
          <target state="translated">このマップ内の各エントリの値の配列を返します。返される値の順序は任意です。</target>
        </trans-unit>
        <trans-unit id="57796409f2467a26b75b5ec57408c8b50e0b8add" translate="yes" xml:space="preserve">
          <source>Returns an exact copy of this ordinal scale. Changes to this scale will not affect the returned scale, and vice versa.</source>
          <target state="translated">この順序スケールの正確なコピーを返します。このスケールに変更を加えても、返されたスケールには影響しません。</target>
        </trans-unit>
        <trans-unit id="f38762d303c9ee3cfa7339b8b26b5d6fd79ce903" translate="yes" xml:space="preserve">
          <source>Returns an exact copy of this scale. Changes to this scale will not affect the returned scale, and vice versa.</source>
          <target state="translated">このスケールの正確なコピーを返します。このスケールに変更を加えても、返されたスケールには影響しません。</target>
        </trans-unit>
        <trans-unit id="158264670354c088e2e49e5f3212a80fe395e8fe" translate="yes" xml:space="preserve">
          <source>Returns an interpolator between the two 2D CSS transforms represented by &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. Each transform is decomposed to a standard representation of translate, rotate, &lt;em&gt;x&lt;/em&gt;-skew and scale; these component transformations are then interpolated. This behavior is standardized by CSS: see &lt;a href=&quot;http://www.w3.org/TR/css3-2d-transforms/#matrix-decomposition&quot;&gt;matrix decomposition for animation&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt;および&lt;em&gt;bで&lt;/em&gt;表される2つの2D CSS変換間の補間を返します。各変換は、変換、回転、&lt;em&gt;x&lt;/em&gt;傾斜、およびスケールの標準表現に分解されます。次に、これらのコンポーネント変換が補間されます。この動作はCSSによって標準化されています。&lt;a href=&quot;http://www.w3.org/TR/css3-2d-transforms/#matrix-decomposition&quot;&gt;アニメーションのマトリックス分解を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fc0169503d90474fcf90b689115f24a600e2d5d3" translate="yes" xml:space="preserve">
          <source>Returns an interpolator between the two 2D SVG transforms represented by &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. Each transform is decomposed to a standard representation of translate, rotate, &lt;em&gt;x&lt;/em&gt;-skew and scale; these component transformations are then interpolated. This behavior is standardized by CSS: see &lt;a href=&quot;http://www.w3.org/TR/css3-2d-transforms/#matrix-decomposition&quot;&gt;matrix decomposition for animation&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt;および&lt;em&gt;bで&lt;/em&gt;表される2つの2D SVG変換間の補間を返します。各変換は、変換、回転、&lt;em&gt;x&lt;/em&gt;傾斜、およびスケールの標準表現に分解されます。次に、これらのコンポーネント変換が補間されます。この動作はCSSによって標準化されています。&lt;a href=&quot;http://www.w3.org/TR/css3-2d-transforms/#matrix-decomposition&quot;&gt;アニメーションのマトリックス分解を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="aa9bdbc19981529e087ec1b932ee08da0da88a2a" translate="yes" xml:space="preserve">
          <source>Returns an interpolator between the two &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&quot;&gt;dates&lt;/a&gt;&lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">2つの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&quot;&gt;日付&lt;/a&gt;&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;間の補間子を返します。</target>
        </trans-unit>
        <trans-unit id="2aadeb91c3c6af833ddb21ea543c4b70161ed979" translate="yes" xml:space="preserve">
          <source>Returns an interpolator between the two arbitrary values &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. The interpolator implementation is based on the type of the end value &lt;em&gt;b&lt;/em&gt;, using the following algorithm:</source>
          <target state="translated">2つの任意の値&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;間の補間子を返します。補間器の実装は、次のアルゴリズムを使用して、終了値&lt;em&gt;bの&lt;/em&gt;タイプに基づいています。</target>
        </trans-unit>
        <trans-unit id="f9ef1cc29a64094949d24456053c87cf57c13a0a" translate="yes" xml:space="preserve">
          <source>Returns an interpolator between the two arrays &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. Internally, an array template is created that is the same length in &lt;em&gt;b&lt;/em&gt;. For each element in &lt;em&gt;b&lt;/em&gt;, if there exists a corresponding element in &lt;em&gt;a&lt;/em&gt;, a generic interpolator is created for the two elements using &lt;a href=&quot;#interpolate&quot;&gt;interpolate&lt;/a&gt;. If there is no such element, the static value from &lt;em&gt;b&lt;/em&gt; is used in the template. Then, for the given parameter &lt;em&gt;t&lt;/em&gt;, the template&amp;rsquo;s embedded interpolators are evaluated. The updated array template is then returned.</source>
          <target state="translated">2つの配列&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;間の補間子を返します。内部的には、&lt;em&gt;b&lt;/em&gt;と同じ長さの配列テンプレートが作成されます。各要素のために&lt;em&gt;B&lt;/em&gt;に対応する要素が存在する場合、汎用補間を使用して二つの要素のために作成される&lt;a href=&quot;#interpolate&quot;&gt;補間を&lt;/a&gt;。そのような要素がない場合は、&lt;em&gt;b&lt;/em&gt;の静的な値がテンプレートで使用されます。次に、指定されたパラメーター&lt;em&gt;t&lt;/em&gt;について、テンプレートの組み込み補間が評価されます。その後、更新された配列テンプレートが返されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="95ab96f0b1ad6d5898b2749c45499d8661793938" translate="yes" xml:space="preserve">
          <source>Returns an interpolator between the two hue angles &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. If either hue is NaN, the opposing value is used. The shortest path between hues is used. The return value of the interpolator is a number in [0, 360).</source>
          <target state="translated">2つの色相角&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;間の補間子を返します。いずれかの色相がNaNの場合、反対の値が使用されます。色相間の最短経路が使用されます。補間器の戻り値は[0、360）の数値です。</target>
        </trans-unit>
        <trans-unit id="37a8b4e0a94cb857118679c65b97ae0cb607c5a5" translate="yes" xml:space="preserve">
          <source>Returns an interpolator between the two numbers &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. The returned interpolator is equivalent to:</source>
          <target state="translated">2つの数値&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;間の補間子を返します。返される補間関数は次のものと同等です。</target>
        </trans-unit>
        <trans-unit id="7419867dfa3c7c547c8e61e502e5fd8ca310a42d" translate="yes" xml:space="preserve">
          <source>Returns an interpolator between the two numbers &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;; the interpolator is similar to &lt;a href=&quot;#interpolateNumber&quot;&gt;interpolateNumber&lt;/a&gt;, except it will round the resulting value to the nearest integer.</source>
          <target state="translated">2つの数値&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;間の補間子を返します。内挿は、結果の値を最も近い整数に丸めることを除いて、interpolateNumberに似てい&lt;a href=&quot;#interpolateNumber&quot;&gt;ます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a8df0f63f323ad590f89bc53637d9bb988946b2b" translate="yes" xml:space="preserve">
          <source>Returns an interpolator between the two objects &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. Internally, an object template is created that has the same properties as &lt;em&gt;b&lt;/em&gt;. For each property in &lt;em&gt;b&lt;/em&gt;, if there exists a corresponding property in &lt;em&gt;a&lt;/em&gt;, a generic interpolator is created for the two elements using &lt;a href=&quot;#interpolate&quot;&gt;interpolate&lt;/a&gt;. If there is no such property, the static value from &lt;em&gt;b&lt;/em&gt; is used in the template. Then, for the given parameter &lt;em&gt;t&lt;/em&gt;, the template's embedded interpolators are evaluated and the updated object template is then returned.</source>
          <target state="translated">2つのオブジェクト&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;間の補間子を返します。内部的には、&lt;em&gt;b&lt;/em&gt;と同じプロパティを持つオブジェクトテンプレートが作成されます。各プロパティの&lt;em&gt;B&lt;/em&gt;に対応するプロパティが存在する場合、汎用補間を使用して二つの要素のために作成される&lt;a href=&quot;#interpolate&quot;&gt;補間を&lt;/a&gt;。そのようなプロパティがない場合、&lt;em&gt;b&lt;/em&gt;の静的な値がテンプレートで使用されます。次に、指定されたパラメーター&lt;em&gt;t&lt;/em&gt;について、テンプレートの組み込み補間が評価され、更新されたオブジェクトテンプレートが返されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0c47d80f2dc122109a659bab8cc1987d7a716a70" translate="yes" xml:space="preserve">
          <source>Returns an interpolator between the two strings &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. The string interpolator finds numbers embedded in &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;, where each number is of the form understood by JavaScript. A few examples of numbers that will be detected within a string: &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;42&lt;/code&gt;, &lt;code&gt;3.14159&lt;/code&gt;, and &lt;code&gt;6.0221413e+23&lt;/code&gt;.</source>
          <target state="translated">2つの文字列&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;間の補間子を返します。文字列補間は&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bに&lt;/em&gt;埋め込まれ&lt;em&gt;た&lt;/em&gt;数値を検出します。各数値はJavaScriptが理解できる形式です。ストリング内で検出される数字のいくつかの例： &lt;code&gt;-1&lt;/code&gt; 、 &lt;code&gt;42&lt;/code&gt; 、 &lt;code&gt;3.14159&lt;/code&gt; 、及び &lt;code&gt;6.0221413e+23&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ecf9cd1dc40264fd73c6dba5ad751c34cf8a3b71" translate="yes" xml:space="preserve">
          <source>Returns an interpolator between the two views &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; of a two-dimensional plane, based on &lt;a href=&quot;http://www.win.tue.nl/%7Evanwijk/zoompan.pdf&quot;&gt;&amp;ldquo;Smooth and efficient zooming and panning&amp;rdquo;&lt;/a&gt; by Jarke J. van Wijk and Wim A.A. Nuij. Each view is defined as an array of three numbers: &lt;em&gt;cx&lt;/em&gt;, &lt;em&gt;cy&lt;/em&gt; and &lt;em&gt;width&lt;/em&gt;. The first two coordinates &lt;em&gt;cx&lt;/em&gt;, &lt;em&gt;cy&lt;/em&gt; represent the center of the viewport; the last coordinate &lt;em&gt;width&lt;/em&gt; represents the size of the viewport.</source>
          <target state="translated">2次元平面の2つのビュー&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;b&lt;/em&gt;の間の補間子を返します。これは、Jarke J. van WijkとWim AA Nuijによる&lt;a href=&quot;http://www.win.tue.nl/%7Evanwijk/zoompan.pdf&quot;&gt;「スムーズで効率的なズームとパン」に&lt;/a&gt;基づいています。各ビューは、&lt;em&gt;cx&lt;/em&gt;、&lt;em&gt;cy&lt;/em&gt;、および&lt;em&gt;width&lt;/em&gt;の3つの数値の配列として定義されます。最初の2つの座標&lt;em&gt;cx&lt;/em&gt;、&lt;em&gt;cy&lt;/em&gt;はビューポートの中心を表します。最後の座標&lt;em&gt;幅&lt;/em&gt;はビューポートのサイズを表します。</target>
        </trans-unit>
        <trans-unit id="f9c6f29114289ee2f8fd871937cdcea60e727fb2" translate="yes" xml:space="preserve">
          <source>Returns an interpolator function given two points &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. Each point must be specified as a two-element array [&lt;em&gt;longitude&lt;/em&gt;, &lt;em&gt;latitude&lt;/em&gt;] in degrees. The returned interpolator function takes a single argument &lt;em&gt;t&lt;/em&gt;, where &lt;em&gt;t&lt;/em&gt; is a number ranging from 0 to 1; a value of 0 returns the point &lt;em&gt;a&lt;/em&gt;, while a value of 1 returns the point &lt;em&gt;b&lt;/em&gt;. Intermediate values interpolate from &lt;em&gt;a&lt;/em&gt; to &lt;em&gt;b&lt;/em&gt; along the great arc that passes through both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. If &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are antipodes, an arbitrary great arc is chosen.</source>
          <target state="translated">2つの点&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bを&lt;/em&gt;指定して、内挿関数を返します。各ポイントは、度数の2要素の配列[ &lt;em&gt;経度&lt;/em&gt;、&lt;em&gt;緯度&lt;/em&gt; ] として指定する必要があります。返される内挿関数は、単一の引数&lt;em&gt;tを&lt;/em&gt;取ります。ここで、&lt;em&gt;t&lt;/em&gt;は0〜1の範囲の数値です。 0リターンポイントの値&lt;em&gt;A&lt;/em&gt; 1つのリターンポイントの値一方、&lt;em&gt;B&lt;/em&gt;。中間値から補間する&lt;em&gt;bの&lt;/em&gt;両方を通過する大きな円弧に沿って&lt;em&gt;A&lt;/em&gt;と&lt;em&gt;B&lt;/em&gt;。場合及び&lt;em&gt;bは&lt;/em&gt;対掌体である、任意の大きな円弧が選択されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="937a92769d37b13c66d26c3d6b691bf61d23cc76" translate="yes" xml:space="preserve">
          <source>Returns an iterable over the &lt;a href=&quot;#delaunay_trianglePolygon&quot;&gt;polygons for each triangle&lt;/a&gt;, in order.</source>
          <target state="translated">&lt;a href=&quot;#delaunay_trianglePolygon&quot;&gt;各三角形&lt;/a&gt;のポリゴンの反復可能オブジェクトを順番に返します。</target>
        </trans-unit>
        <trans-unit id="651025f2b6ef0720399ccf24f93882c730d86565" translate="yes" xml:space="preserve">
          <source>Returns an iterable over the &lt;a href=&quot;#voronoi_cellPolygon&quot;&gt;polygons for each cell&lt;/a&gt;, in order.</source>
          <target state="translated">&lt;a href=&quot;#voronoi_cellPolygon&quot;&gt;各セル&lt;/a&gt;のポリゴンの反復可能オブジェクトを順番に返します。</target>
        </trans-unit>
        <trans-unit id="04c01d891c36199e89c75d7a75ec721962e4f7e1" translate="yes" xml:space="preserve">
          <source>Returns an iterable over the indexes of the neighboring points to the specified point &lt;em&gt;i&lt;/em&gt;. The iterable is empty if &lt;em&gt;i&lt;/em&gt; is a coincident point.</source>
          <target state="translated">指定された点&lt;em&gt;iに&lt;/em&gt;隣接する点のインデックスの反復可能オブジェクトを返します。&lt;em&gt;i&lt;/em&gt;が一致する場合、イテラブルは空です。</target>
        </trans-unit>
        <trans-unit id="2ea15225b8701223c4caf8e63119c3af9eed6795" translate="yes" xml:space="preserve">
          <source>Returns approximately &lt;em&gt;count&lt;/em&gt; representative values from the scale&amp;rsquo;s &lt;a href=&quot;#continuous_domain&quot;&gt;domain&lt;/a&gt;. If &lt;em&gt;count&lt;/em&gt; is not specified, it defaults to 10. The returned tick values are uniformly spaced, have human-readable values (such as multiples of powers of 10), and are guaranteed to be within the extent of the domain. Ticks are often used to display reference lines, or tick marks, in conjunction with the visualized data. The specified &lt;em&gt;count&lt;/em&gt; is only a hint; the scale may return more or fewer values depending on the domain. See also d3-array&amp;rsquo;s &lt;a href=&quot;d3-array#ticks&quot;&gt;ticks&lt;/a&gt;.</source>
          <target state="translated">スケールの&lt;a href=&quot;#continuous_domain&quot;&gt;ドメイン&lt;/a&gt;からの代表的な値のおおよその&lt;em&gt;数&lt;/em&gt;を返します。&lt;em&gt;count&lt;/em&gt;が指定されていない場合、デフォルトは10です。返されるティック値は等間隔で、人間が読める値（10の累乗など）を持ち、ドメインの範囲内にあることが保証されています。目盛りは、視覚化されたデータと共に参照線または目盛りを表示するためによく使用されます。指定された&lt;em&gt;カウント&lt;/em&gt;は単なるヒントです。スケールは、ドメインに応じてより多くのまたはより少ない値を返す場合があります。 d3-arrayの&lt;a href=&quot;d3-array#ticks&quot;&gt;ティック&lt;/a&gt;も参照してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b7aed3b12ae56c7d6b2e3910eb0ebeb9a8507110" translate="yes" xml:space="preserve">
          <source>Returns representative dates from the scale&amp;rsquo;s &lt;a href=&quot;#time_domain&quot;&gt;domain&lt;/a&gt;. The returned tick values are uniformly-spaced (mostly), have sensible values (such as every day at midnight), and are guaranteed to be within the extent of the domain. Ticks are often used to display reference lines, or tick marks, in conjunction with the visualized data.</source>
          <target state="translated">スケールの&lt;a href=&quot;#time_domain&quot;&gt;ドメイン&lt;/a&gt;から代表的な日付を返します。返されるティック値は、（ほとんど）等間隔で配置され、適切な値（毎日午前0時など）があり、ドメインの範囲内にあることが保証されています。目盛りは、視覚化されたデータと共に参照線または目盛りを表示するためによく使用されます。</target>
        </trans-unit>
        <trans-unit id="0dfbe76913ce31ed2a5615963157aa69e6eef2a0" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;#min&quot;&gt;minimum&lt;/a&gt; and &lt;a href=&quot;#max&quot;&gt;maximum&lt;/a&gt; value in the given &lt;em&gt;array&lt;/em&gt; using natural order. If the array is empty, returns [undefined, undefined]. An optional &lt;em&gt;accessor&lt;/em&gt; function may be specified, which is equivalent to calling &lt;em&gt;array&lt;/em&gt;.map(&lt;em&gt;accessor&lt;/em&gt;) before computing the extent.</source>
          <target state="translated">自然順序を使用して、指定された&lt;em&gt;配列&lt;/em&gt;の&lt;a href=&quot;#min&quot;&gt;最小値&lt;/a&gt;と&lt;a href=&quot;#max&quot;&gt;最大&lt;/a&gt;値を返します。配列が空の場合、[undefined、undefined]を返します。オプションの&lt;em&gt;アクセサ&lt;/em&gt;関数を指定できます。これは、エクステントを計算する前に&lt;em&gt;array&lt;/em&gt; .map（&lt;em&gt;accessor&lt;/em&gt;）を呼び出すのと同じです。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="298e00a62d9874c4ca1e6ac8bfa4e1bef1141cb3" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;#rgb&quot;&gt;RGB equivalent&lt;/a&gt; of this color. For RGB colors, that&amp;rsquo;s &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">この色に&lt;a href=&quot;#rgb&quot;&gt;相当&lt;/a&gt;するRGBを返します。RGBカラーの場合は、 &lt;code&gt;this&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="98a7878baa2e55b9b4a5a1fb3def41afa503795d" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;#voronoi&quot;&gt;Voronoi diagram&lt;/a&gt; for the associated &lt;a href=&quot;#delaunay_points&quot;&gt;points&lt;/a&gt;. When rendering, the diagram will be clipped to the specified &lt;em&gt;bounds&lt;/em&gt; = [&lt;em&gt;xmin&lt;/em&gt;, &lt;em&gt;ymin&lt;/em&gt;, &lt;em&gt;xmax&lt;/em&gt;, &lt;em&gt;ymax&lt;/em&gt;]. If &lt;em&gt;bounds&lt;/em&gt; is not specified, it defaults to [0, 0, 960, 500]. See &lt;a href=&quot;https://beta.observablehq.com/@mbostock/to-infinity-and-back-again&quot;&gt;To Infinity and Back Again&lt;/a&gt; for an interactive explanation of Voronoi cell clipping.</source>
          <target state="translated">関連する&lt;a href=&quot;#delaunay_points&quot;&gt;ポイントの&lt;/a&gt;&lt;a href=&quot;#voronoi&quot;&gt;ボロノイ図&lt;/a&gt;を返します。レンダリング時に、ダイアグラムは指定された&lt;em&gt;境界&lt;/em&gt; = [ &lt;em&gt;xmin&lt;/em&gt;、&lt;em&gt;ymin&lt;/em&gt;、&lt;em&gt;xmax&lt;/em&gt;、&lt;em&gt;ymax&lt;/em&gt; ]にクリップされます。&lt;em&gt;bounds&lt;/em&gt;が指定されていない場合、デフォルトは[0、0、960、500]です。ボロノイセルクリッピングのインタラクティブな説明については、&lt;a href=&quot;https://beta.observablehq.com/@mbostock/to-infinity-and-back-again&quot;&gt;「無限に戻る&lt;/a&gt;」を参照してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e3e74467c2442764dae0a80e469fe835f2fa47ca" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;d3-selection#selection&quot;&gt;selection&lt;/a&gt; corresponding to this transition.</source>
          <target state="translated">この遷移に対応する&lt;a href=&quot;d3-selection#selection&quot;&gt;選択を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="675f7ddefbe80194feca02b746149e127c0a77a7" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;https://en.wikipedia.org/wiki/Cartesian_product&quot;&gt;Cartesian product&lt;/a&gt; of the two arrays &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. For each element &lt;em&gt;i&lt;/em&gt; in the specified array &lt;em&gt;a&lt;/em&gt; and each element &lt;em&gt;j&lt;/em&gt; in the specified array &lt;em&gt;b&lt;/em&gt;, in order, invokes the specified &lt;em&gt;reducer&lt;/em&gt; function passing the element &lt;em&gt;i&lt;/em&gt; and element &lt;em&gt;j&lt;/em&gt;. If a &lt;em&gt;reducer&lt;/em&gt; is not specified, it defaults to a function which creates a two-element array for each pair:</source>
          <target state="translated">2つの配列&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;b&lt;/em&gt;の&lt;a href=&quot;https://en.wikipedia.org/wiki/Cartesian_product&quot;&gt;デカルト積&lt;/a&gt;を返します。指定された配列&lt;em&gt;aの&lt;/em&gt;各要素&lt;em&gt;i&lt;/em&gt;と指定された配列&lt;em&gt;bの&lt;/em&gt;各要素&lt;em&gt;j&lt;/em&gt;について、指定された&lt;em&gt;レデューサー&lt;/em&gt;関数を呼び出し、要素&lt;em&gt;i&lt;/em&gt;と要素&lt;em&gt;j&lt;/em&gt;を渡します。&lt;em&gt;レデューサー&lt;/em&gt;が指定されていない場合、デフォルトで、ペアごとに2要素の配列を作成する関数が使用されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ffd36bffb357bb628b08f574adb51a8549931d08" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;https://en.wikipedia.org/wiki/Centroid&quot;&gt;centroid&lt;/a&gt; of the specified &lt;em&gt;polygon&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;ポリゴンの&lt;/em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Centroid&quot;&gt;重心&lt;/a&gt;を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="de35f3f1325aa80e010f8f66297ba6f15dae07d7" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;https://en.wikipedia.org/wiki/Convex_hull&quot;&gt;convex hull&lt;/a&gt; of the specified &lt;em&gt;points&lt;/em&gt; using &lt;a href=&quot;http://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Convex_hull/Monotone_chain&quot;&gt;Andrew&amp;rsquo;s monotone chain algorithm&lt;/a&gt;. The returned hull is represented as an array containing a subset of the input &lt;em&gt;points&lt;/em&gt; arranged in counterclockwise order. Returns null if &lt;em&gt;points&lt;/em&gt; has fewer than three elements.</source>
          <target state="translated">&lt;a href=&quot;http://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Convex_hull/Monotone_chain&quot;&gt;アンドリューの単調連鎖アルゴリズム&lt;/a&gt;を使用して、指定された&lt;em&gt;点の&lt;/em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Convex_hull&quot;&gt;凸包&lt;/a&gt;を返します。返されるハルは、反時計回りに配置された入力&lt;em&gt;ポイントの&lt;/em&gt;サブセットを含む配列として表されます。&lt;em&gt;ポイントの&lt;/em&gt;要素が3つ未満の場合はnullを返します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d85d271f33461fde30c1ec06bb122ae23221461" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;https://www.jasondavies.com/maps/bounds/&quot;&gt;spherical bounding box&lt;/a&gt; for the specified GeoJSON &lt;em&gt;object&lt;/em&gt;. The bounding box is represented by a two-dimensional array: [[&lt;em&gt;left&lt;/em&gt;, &lt;em&gt;bottom&lt;/em&gt;], [&lt;em&gt;right&lt;/em&gt;, &lt;em&gt;top&lt;/em&gt;]], where &lt;em&gt;left&lt;/em&gt; is the minimum longitude, &lt;em&gt;bottom&lt;/em&gt; is the minimum latitude, &lt;em&gt;right&lt;/em&gt; is maximum longitude, and &lt;em&gt;top&lt;/em&gt; is the maximum latitude. All coordinates are given in degrees. (Note that in projected planar coordinates, the minimum latitude is typically the maximum &lt;em&gt;y&lt;/em&gt;-value, and the maximum latitude is typically the minimum &lt;em&gt;y&lt;/em&gt;-value.) This is the spherical equivalent of &lt;a href=&quot;#path_bounds&quot;&gt;&lt;em&gt;path&lt;/em&gt;.bounds&lt;/a&gt;.</source>
          <target state="translated">指定されたGeoJSON &lt;em&gt;オブジェクト&lt;/em&gt;の&lt;a href=&quot;https://www.jasondavies.com/maps/bounds/&quot;&gt;球形の境界ボックス&lt;/a&gt;を返します。境界ボックスは、2次元配列[[ &lt;em&gt;left&lt;/em&gt;、&lt;em&gt;bottom&lt;/em&gt; ]、[ &lt;em&gt;right&lt;/em&gt;、&lt;em&gt;top&lt;/em&gt; ]]で表されます。ここで、&lt;em&gt;left&lt;/em&gt;は最小経度、&lt;em&gt;bottom&lt;/em&gt;は最小緯度、&lt;em&gt;right&lt;/em&gt;は最大経度、&lt;em&gt;top&lt;/em&gt;は最大緯度です。すべての座標は度で示されます。（投影された平面座標では、最小緯度は通常、最大の&lt;em&gt;y&lt;/em&gt;値であり、最大緯度は通常、最小の&lt;em&gt;y&lt;/em&gt;値です。）これは、&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;#path_bounds&quot;&gt;&lt;em&gt;パス&lt;/em&gt;&lt;/a&gt;。境界。</target>
        </trans-unit>
        <trans-unit id="a27c670d28f205c35ee97200c6e9608ab988842f" translate="yes" xml:space="preserve">
          <source>Returns the &lt;em&gt;p&lt;/em&gt;-quantile of the given &lt;strong&gt;sorted&lt;/strong&gt;&lt;em&gt;array&lt;/em&gt; of numbers, where &lt;em&gt;p&lt;/em&gt; is a number in the range [0, 1]. For example, the median can be computed using &lt;em&gt;p&lt;/em&gt; = 0.5, the first quartile at &lt;em&gt;p&lt;/em&gt; = 0.25, and the third quartile at &lt;em&gt;p&lt;/em&gt; = 0.75. This particular implementation uses the &lt;a href=&quot;http://en.wikipedia.org/wiki/Quantile#Quantiles_of_a_population&quot;&gt;R-7 method&lt;/a&gt;, which is the default for the R programming language and Excel. For example:</source>
          <target state="translated">指定&lt;strong&gt;された&lt;/strong&gt;数値の&lt;em&gt;配列&lt;/em&gt;の&lt;em&gt;p&lt;/em&gt;変位値を返します&lt;em&gt;。p&lt;/em&gt;は[0、1]の範囲の数値です。たとえば、中央値は&lt;em&gt;p&lt;/em&gt; = 0.5、&lt;em&gt;p&lt;/em&gt; = 0.25の最初の四分位数、&lt;em&gt;p&lt;/em&gt; = 0.75の3番目の四分位数を使用して計算できます。この特定の実装では、Rプログラミング言語とExcelのデフォルトである&lt;a href=&quot;http://en.wikipedia.org/wiki/Quantile#Quantiles_of_a_population&quot;&gt;R-7メソッドを&lt;/a&gt;使用します。例えば：&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe2b3921c9688d3124ba9f0d48b36618238f4341" translate="yes" xml:space="preserve">
          <source>Returns the &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; coordinates of the &lt;a href=&quot;#event&quot;&gt;current event&lt;/a&gt; relative to the specified &lt;em&gt;container&lt;/em&gt;. The container may be an HTML or SVG container element, such as a &lt;a href=&quot;http://www.w3.org/TR/SVG/struct.html#Groups&quot;&gt;G element&lt;/a&gt; or an &lt;a href=&quot;http://www.w3.org/TR/SVG/struct.html#SVGElement&quot;&gt;SVG element&lt;/a&gt;. The coordinates are returned as a two-element array of numbers [&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;].</source>
          <target state="translated">指定された&lt;em&gt;コンテナを&lt;/em&gt;基準にした&lt;a href=&quot;#event&quot;&gt;現在のイベント&lt;/a&gt;の&lt;em&gt;x&lt;/em&gt;座標と&lt;em&gt;y&lt;/em&gt;座標を返します。コンテナは、&lt;a href=&quot;http://www.w3.org/TR/SVG/struct.html#Groups&quot;&gt;G要素&lt;/a&gt;や&lt;a href=&quot;http://www.w3.org/TR/SVG/struct.html#SVGElement&quot;&gt;SVG要素&lt;/a&gt;などのHTMLまたはSVGコンテナ要素にすることができます。座標は、数値の2要素配列[ &lt;em&gt;x&lt;/em&gt;、&lt;em&gt;y&lt;/em&gt; ] として返されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a8f31d847654aabdbce1f3c4440d8ae84683ba2e" translate="yes" xml:space="preserve">
          <source>Returns the &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; coordinates of the specified &lt;em&gt;event&lt;/em&gt; relative to the specified &lt;em&gt;container&lt;/em&gt;. (The &lt;em&gt;event&lt;/em&gt; may also be a &lt;a href=&quot;https://www.w3.org/TR/touch-events/#touch-interface&quot;&gt;touch&lt;/a&gt;.) The container may be an HTML or SVG container element, such as a &lt;a href=&quot;http://www.w3.org/TR/SVG/struct.html#Groups&quot;&gt;G element&lt;/a&gt; or an &lt;a href=&quot;http://www.w3.org/TR/SVG/struct.html#SVGElement&quot;&gt;SVG element&lt;/a&gt;. The coordinates are returned as a two-element array of numbers [&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;].</source>
          <target state="translated">指定された&lt;em&gt;コンテナを&lt;/em&gt;基準にして、指定された&lt;em&gt;イベント&lt;/em&gt;の&lt;em&gt;x&lt;/em&gt;座標と&lt;em&gt;y&lt;/em&gt;座標を返します。 （&lt;em&gt;イベント&lt;/em&gt;は&lt;a href=&quot;https://www.w3.org/TR/touch-events/#touch-interface&quot;&gt;touchの&lt;/a&gt;場合もあります。）コンテナは、&lt;a href=&quot;http://www.w3.org/TR/SVG/struct.html#Groups&quot;&gt;G要素&lt;/a&gt;や&lt;a href=&quot;http://www.w3.org/TR/SVG/struct.html#SVGElement&quot;&gt;SVG要素&lt;/a&gt;などのHTMLまたはSVGコンテナ要素である場合があります。座標は、数値の2要素配列[ &lt;em&gt;x&lt;/em&gt;、&lt;em&gt;y&lt;/em&gt; ] として返されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e03304b050e3c108d95c4366bc5cec8c1417523c" translate="yes" xml:space="preserve">
          <source>Returns the &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; coordinates of the touch with the specified &lt;em&gt;identifier&lt;/em&gt; associated with the &lt;a href=&quot;#event&quot;&gt;current event&lt;/a&gt; relative to the specified &lt;em&gt;container&lt;/em&gt;. The container may be an HTML or SVG container element, such as a &lt;a href=&quot;http://www.w3.org/TR/SVG/struct.html#Groups&quot;&gt;G element&lt;/a&gt; or an &lt;a href=&quot;http://www.w3.org/TR/SVG/struct.html#SVGElement&quot;&gt;SVG element&lt;/a&gt;. The coordinates are returned as a two-element array of numbers [&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;]. If there is no touch with the specified identifier in &lt;em&gt;touches&lt;/em&gt;, returns null; this can be useful for ignoring touchmove events where the only some touches have moved. If &lt;em&gt;touches&lt;/em&gt; is not specified, it defaults to the current event&amp;rsquo;s &lt;a href=&quot;http://developer.apple.com/library/safari/documentation/UserExperience/Reference/TouchEventClassReference/TouchEvent/TouchEvent.html#//apple_ref/javascript/instp/TouchEvent/changedTouches&quot;&gt;changedTouches&lt;/a&gt; property.</source>
          <target state="translated">指定された&lt;em&gt;コンテナに&lt;/em&gt;関連する&lt;a href=&quot;#event&quot;&gt;現在のイベントに&lt;/a&gt;関連付けられた指定された&lt;em&gt;識別子を&lt;/em&gt;持つタッチの&lt;em&gt;x&lt;/em&gt;座標と&lt;em&gt;y&lt;/em&gt;座標を返します。コンテナは、&lt;a href=&quot;http://www.w3.org/TR/SVG/struct.html#Groups&quot;&gt;G要素&lt;/a&gt;や&lt;a href=&quot;http://www.w3.org/TR/SVG/struct.html#SVGElement&quot;&gt;SVG要素&lt;/a&gt;などのHTMLまたはSVGコンテナ要素にすることができます。座標は、数値の2要素配列[ &lt;em&gt;x&lt;/em&gt;、&lt;em&gt;y&lt;/em&gt; ] として返されます。touchsに指定された識別子のタッチがない場合&lt;em&gt;は&lt;/em&gt;、nullを返します。これは、一部のタッチのみが移動したタッチムーブイベントを無視する場合に役立ちます。&lt;em&gt;touches&lt;/em&gt;が指定されていない場合、デフォルトで現在のイベントの&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;http://developer.apple.com/library/safari/documentation/UserExperience/Reference/TouchEventClassReference/TouchEvent/TouchEvent.html#//apple_ref/javascript/instp/TouchEvent/changedTouches&quot;&gt;changedTouches&lt;/a&gt;プロパティ。</target>
        </trans-unit>
        <trans-unit id="dee6df8be5de353c536c3216dfae69be0ae51094" translate="yes" xml:space="preserve">
          <source>Returns the &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; coordinates of the touches associated with the &lt;a href=&quot;#event&quot;&gt;current event&lt;/a&gt; relative to the specified &lt;em&gt;container&lt;/em&gt;. The container may be an HTML or SVG container element, such as a &lt;a href=&quot;http://www.w3.org/TR/SVG/struct.html#Groups&quot;&gt;G element&lt;/a&gt; or an &lt;a href=&quot;http://www.w3.org/TR/SVG/struct.html#SVGElement&quot;&gt;SVG element&lt;/a&gt;. The coordinates are returned as an array of two-element arrays of numbers [[&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;], [&lt;em&gt;x2&lt;/em&gt;, &lt;em&gt;y2&lt;/em&gt;], &amp;hellip;]. If &lt;em&gt;touches&lt;/em&gt; is not specified, it defaults to the current event&amp;rsquo;s &lt;a href=&quot;http://developer.apple.com/library/safari/documentation/UserExperience/Reference/TouchEventClassReference/TouchEvent/TouchEvent.html#//apple_ref/javascript/instp/TouchEvent/touches&quot;&gt;touches&lt;/a&gt; property.</source>
          <target state="translated">指定された&lt;em&gt;コンテナを&lt;/em&gt;基準にして、&lt;a href=&quot;#event&quot;&gt;現在のイベント&lt;/a&gt;に関連付けられたタッチの&lt;em&gt;x&lt;/em&gt;座標と&lt;em&gt;y&lt;/em&gt;座標を返します。コンテナは、&lt;a href=&quot;http://www.w3.org/TR/SVG/struct.html#Groups&quot;&gt;G要素&lt;/a&gt;や&lt;a href=&quot;http://www.w3.org/TR/SVG/struct.html#SVGElement&quot;&gt;SVG要素&lt;/a&gt;などのHTMLまたはSVGコンテナ要素にすることができます。座標は、数値[[ &lt;em&gt;x1&lt;/em&gt;、&lt;em&gt;y1&lt;/em&gt; ]、[ &lt;em&gt;x2&lt;/em&gt;、&lt;em&gt;y2&lt;/em&gt; ]、&amp;hellip;] の2要素配列の配列として返されます。&lt;em&gt;touches&lt;/em&gt;が指定されていない場合、デフォルトで現在のイベントの&lt;a href=&quot;http://developer.apple.com/library/safari/documentation/UserExperience/Reference/TouchEventClassReference/TouchEvent/TouchEvent.html#//apple_ref/javascript/instp/TouchEvent/touches&quot;&gt;touches&lt;/a&gt;プロパティが使用されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eef38eafafd88b995faceb3fbcfcc4844441558a" translate="yes" xml:space="preserve">
          <source>Returns the Delaunay triangulation for the given array or iterable of &lt;em&gt;points&lt;/em&gt;. If &lt;em&gt;fx&lt;/em&gt; and &lt;em&gt;fy&lt;/em&gt; are not specified, then &lt;em&gt;points&lt;/em&gt; is assumed to be an array of two-element arrays of numbers: [[&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;], [&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;], &amp;hellip;]. Otherwise, &lt;em&gt;fx&lt;/em&gt; and &lt;em&gt;fy&lt;/em&gt; are functions that are invoked for each element in the &lt;em&gt;points&lt;/em&gt; array in order, and must return the respective &lt;em&gt;x&lt;/em&gt;- and &lt;em&gt;y&lt;/em&gt;-coordinate for each point. If &lt;em&gt;that&lt;/em&gt; is specified, the functions &lt;em&gt;fx&lt;/em&gt; and &lt;em&gt;fy&lt;/em&gt; are invoked with &lt;em&gt;that&lt;/em&gt; as &lt;em&gt;this&lt;/em&gt;. (See &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;Array.from&lt;/a&gt; for reference.)</source>
          <target state="translated">指定された配列または反復可能な&lt;em&gt;点&lt;/em&gt;のDelaunay三角形分割を返します。&lt;em&gt;fx&lt;/em&gt;と&lt;em&gt;fy&lt;/em&gt;が指定されていない場合、&lt;em&gt;points&lt;/em&gt;は、[[ &lt;em&gt;x0&lt;/em&gt;、&lt;em&gt;y0&lt;/em&gt; ]、[ &lt;em&gt;x1&lt;/em&gt;、&lt;em&gt;y1&lt;/em&gt; ]、&amp;hellip;] の2要素配列の配列であると見なされます。それ以外の場合、&lt;em&gt;fx&lt;/em&gt;と&lt;em&gt;fy&lt;/em&gt;は、&lt;em&gt;points&lt;/em&gt;配列の各要素に対して順番に呼び出される関数であり、各&lt;em&gt;ポイント&lt;/em&gt;のそれぞれの&lt;em&gt;x座標&lt;/em&gt;と&lt;em&gt;y &lt;/em&gt;&lt;em&gt;座標を&lt;/em&gt;返す必要があります。場合は&lt;em&gt;それが&lt;/em&gt;指定され、機能が&lt;em&gt;FX&lt;/em&gt;と&lt;em&gt;FY&lt;/em&gt;で呼び出され&lt;em&gt;ている&lt;/em&gt;として&lt;em&gt;、この&lt;/em&gt;。（参考のために&lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/from&quot;&gt;Array.from&lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="86ba1640fbeee43808b0997ea1705f8c79ce9644" translate="yes" xml:space="preserve">
          <source>Returns the Delaunay triangulation for the given flat array [&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;, &lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;, &amp;hellip;] of &lt;em&gt;points&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;ポイント&lt;/em&gt;の指定されたフラット配列[ &lt;em&gt;x0&lt;/em&gt;、&lt;em&gt;y0&lt;/em&gt;、&lt;em&gt;x1&lt;/em&gt;、&lt;em&gt;y1&lt;/em&gt;、&amp;hellip;]のドローネ三角形分割を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ef53aa915ad7f0a280a2a25ec09e36b1c025b598" translate="yes" xml:space="preserve">
          <source>Returns the Delaunay triangulation of the specified &lt;em&gt;data&lt;/em&gt; array as an array of links, one for each edge in the mesh. Each link has the following attributes:</source>
          <target state="translated">指定された&lt;em&gt;データ&lt;/em&gt;配列のDelaunay三角形分割を、メッシュの各エッジに1つずつ、リンクの配列として返します。各リンクには次の属性があります。</target>
        </trans-unit>
        <trans-unit id="40aa6b7f73d0d878a29c2301d5ba7462587ebb63" translate="yes" xml:space="preserve">
          <source>Returns the Delaunay triangulation of the specified &lt;em&gt;data&lt;/em&gt; array as an array of links. Each link has &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;target&lt;/code&gt; attributes referring to elements in &lt;em&gt;data&lt;/em&gt;. Equivalent to:</source>
          <target state="translated">指定された&lt;em&gt;データ&lt;/em&gt;配列のDelaunay三角形分割をリンクの配列として返します。各リンクには、&lt;em&gt;データ&lt;/em&gt;内の要素を参照する &lt;code&gt;source&lt;/code&gt; 属性と &lt;code&gt;target&lt;/code&gt; 属性があり&lt;em&gt;ます&lt;/em&gt;。に相当：</target>
        </trans-unit>
        <trans-unit id="9fdbac89d0cccc5a14805372145de3f9c7d54ecb" translate="yes" xml:space="preserve">
          <source>Returns the Delaunay triangulation of the specified &lt;em&gt;data&lt;/em&gt; array as an array of triangles. Each triangle is a three-element array of elements from &lt;em&gt;data&lt;/em&gt;. Equivalent to:</source>
          <target state="translated">指定された&lt;em&gt;データ&lt;/em&gt;配列のDelaunay三角形分割を三角形の配列として返します。各三角形は、&lt;em&gt;data&lt;/em&gt;の要素の3要素配列です。に相当：</target>
        </trans-unit>
        <trans-unit id="0ae2c47bd77204edc36f5e47769987d3318cfc76" translate="yes" xml:space="preserve">
          <source>Returns the Delaunay triangulation of the specified &lt;em&gt;data&lt;/em&gt; array as an array of triangles. Each triangle is a three-element array of elements from &lt;em&gt;data&lt;/em&gt;. Since the triangulation is computed as the dual of the Voronoi diagram, and the Voronoi diagram is clipped by the &lt;a href=&quot;#voronoi_extent&quot;&gt;extent&lt;/a&gt;, a subset of the Delaunay triangulation is returned.</source>
          <target state="translated">指定された&lt;em&gt;データ&lt;/em&gt;配列のDelaunay三角形分割を三角形の配列として返します。各三角形は、&lt;em&gt;data&lt;/em&gt;の要素の3要素配列です。三角測量をボロノイ図のデュアルとして計算され、ボロノイ図がクリップされているので&lt;a href=&quot;#voronoi_extent&quot;&gt;程度&lt;/a&gt;、ドロネー三角形分割の部分集合が返されます。</target>
        </trans-unit>
        <trans-unit id="a96312123337ba522fb39a62ac87aec8667723ef" translate="yes" xml:space="preserve">
          <source>Returns the active transition on the specified &lt;em&gt;node&lt;/em&gt; with the specified &lt;em&gt;name&lt;/em&gt;, if any. If no &lt;em&gt;name&lt;/em&gt; is specified, null is used. Returns null if there is no such active transition on the specified node. This method is useful for creating chained transitions. For example, to initiate disco mode:</source>
          <target state="translated">指定された&lt;em&gt;nameを&lt;/em&gt;持つ指定された&lt;em&gt;ノードに&lt;/em&gt;アクティブな遷移がある場合はそれを返します。&lt;em&gt;名前&lt;/em&gt;が指定されていない場合は、nullが使用されます。指定されたノードにそのようなアクティブな遷移がない場合はnullを返します。このメソッドは、連鎖遷移を作成するのに役立ちます。たとえば、ディスコモードを開始するには：&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6825dc4e6d08cb8a33503a94b62d0fbbb2b8cebf" translate="yes" xml:space="preserve">
          <source>Returns the array of ancestors nodes, starting with this node, then followed by each parent up to the root.</source>
          <target state="translated">先祖ノードの配列を返します。このノードから始まり、その後にルートまでの各親の配列を返します。</target>
        </trans-unit>
        <trans-unit id="026ad396a9b69b4ee4237553e4477bc5dc59a464" translate="yes" xml:space="preserve">
          <source>Returns the array of descendant nodes, starting with this node, then followed by each child in topological order.</source>
          <target state="translated">子孫ノードの配列を返します。</target>
        </trans-unit>
        <trans-unit id="4cd64d28d2e15e59c0bd1f2418a797e7a6635e33" translate="yes" xml:space="preserve">
          <source>Returns the array of leaf nodes in traversal order; leaves are nodes with no children.</source>
          <target state="translated">リーフノードの配列を探索順に返します。</target>
        </trans-unit>
        <trans-unit id="a7081fbe0ec296bc21aed3f2bac55f60fb3cec21" translate="yes" xml:space="preserve">
          <source>Returns the automatically-generated identifier for this local. This is the name of the property that is used to store the local&amp;rsquo;s value on elements, and thus you can also set or get the local&amp;rsquo;s value using &lt;em&gt;element&lt;/em&gt;[&lt;em&gt;local&lt;/em&gt;] or by using &lt;a href=&quot;#selection_property&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.property&lt;/a&gt;.</source>
          <target state="translated">このローカルに対して自動的に生成された識別子を返します。これは、要素のローカルの値を格納するために使用されるプロパティの名前です。したがって、&lt;em&gt;要素&lt;/em&gt; [ &lt;em&gt;local&lt;/em&gt; ]を使用するか、&lt;a href=&quot;#selection_property&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .property&lt;/a&gt;を使用して、ローカルの値を設定または取得することもできます。</target>
        </trans-unit>
        <trans-unit id="accf50e3331f44674ca674b7d4684405b6b1f39a" translate="yes" xml:space="preserve">
          <source>Returns the closed polygon [[&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;], [&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;], &amp;hellip;, [&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;]] representing the convex hull.</source>
          <target state="translated">凸包を表す閉じた多角形[[ &lt;em&gt;x0&lt;/em&gt;、&lt;em&gt;y0&lt;/em&gt; ]、[ &lt;em&gt;x1&lt;/em&gt;、&lt;em&gt;y1&lt;/em&gt; ]、&amp;hellip;、[ &lt;em&gt;x0&lt;/em&gt;、&lt;em&gt;y0&lt;/em&gt; ]]を返します。</target>
        </trans-unit>
        <trans-unit id="45614777971f8f8fdb8516054b014610d6cb2f50" translate="yes" xml:space="preserve">
          <source>Returns the closed polygon [[&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;], [&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;], [&lt;em&gt;x2&lt;/em&gt;, &lt;em&gt;y2&lt;/em&gt;], [&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;]] representing the triangle &lt;em&gt;i&lt;/em&gt;.</source>
          <target state="translated">三角形&lt;em&gt;iを&lt;/em&gt;表す閉じた多角形[[ &lt;em&gt;x0&lt;/em&gt;、&lt;em&gt;y0&lt;/em&gt; ]、[ &lt;em&gt;x1&lt;/em&gt;、&lt;em&gt;y1&lt;/em&gt; ]、[ &lt;em&gt;x2&lt;/em&gt;、&lt;em&gt;y2&lt;/em&gt; ]、[ &lt;em&gt;x0&lt;/em&gt;、&lt;em&gt;y0&lt;/em&gt; ]]を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8b8d84ac1f960932f3b1bda0670b9fbb3092d604" translate="yes" xml:space="preserve">
          <source>Returns the convex, closed polygon [[&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;], [&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;], &amp;hellip;, [&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;]] representing the cell for the specified point &lt;em&gt;i&lt;/em&gt;.</source>
          <target state="translated">指定されたポイント&lt;em&gt;iの&lt;/em&gt;セルを表す凸型の閉じた多角形[[ &lt;em&gt;x0&lt;/em&gt;、&lt;em&gt;y0&lt;/em&gt; ]、[ &lt;em&gt;x1&lt;/em&gt;、&lt;em&gt;y1&lt;/em&gt; ]、&amp;hellip;、[ &lt;em&gt;x0&lt;/em&gt;、&lt;em&gt;y0&lt;/em&gt; ]]を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e9c71f47b84776f6808377393719a302182ef0ea" translate="yes" xml:space="preserve">
          <source>Returns the current brush selection for the specified &lt;em&gt;node&lt;/em&gt;. Internally, an element&amp;rsquo;s brush state is stored as &lt;em&gt;element&lt;/em&gt;.__brush; however, you should use this method rather than accessing it directly. If the given &lt;em&gt;node&lt;/em&gt; has no selection, returns null. Otherwise, the &lt;em&gt;selection&lt;/em&gt; is defined as an array of numbers. For a &lt;a href=&quot;#brush&quot;&gt;two-dimensional brush&lt;/a&gt;, it is [[&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;], [&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;]], where &lt;em&gt;x0&lt;/em&gt; is the minimum &lt;em&gt;x&lt;/em&gt;-value, &lt;em&gt;y0&lt;/em&gt; is the minimum &lt;em&gt;y&lt;/em&gt;-value, &lt;em&gt;x1&lt;/em&gt; is the maximum &lt;em&gt;x&lt;/em&gt;-value, and &lt;em&gt;y1&lt;/em&gt; is the maximum &lt;em&gt;y&lt;/em&gt;-value. For an &lt;a href=&quot;#brushX&quot;&gt;&lt;em&gt;x&lt;/em&gt;-brush&lt;/a&gt;, it is [&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;x1&lt;/em&gt;]; for a &lt;a href=&quot;#brushY&quot;&gt;&lt;em&gt;y&lt;/em&gt;-brush&lt;/a&gt;, it is [&lt;em&gt;y0&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;].</source>
          <target state="translated">指定された&lt;em&gt;ノード&lt;/em&gt;の現在のブラシ選択を返します。内部的には、要素のブラシの状態は&lt;em&gt;要素&lt;/em&gt; .__ brush として保存されます。ただし、直接アクセスするのではなく、このメソッドを使用する必要があります。指定された&lt;em&gt;ノード&lt;/em&gt;に選択がない場合、nullを返します。それ以外の場合、&lt;em&gt;選択&lt;/em&gt;は数値の配列として定義されます。以下のための&lt;a href=&quot;#brush&quot;&gt;二次元ブラシ&lt;/a&gt;、それは[[ &lt;em&gt;X0&lt;/em&gt;、&lt;em&gt;Y0&lt;/em&gt; ]、[ &lt;em&gt;X1&lt;/em&gt;、&lt;em&gt;Y1&lt;/em&gt; ]、ここで、&lt;em&gt;x0は&lt;/em&gt;最小であり&lt;em&gt;xは&lt;/em&gt; -value、&lt;em&gt;Y0が&lt;/em&gt;最小である&lt;em&gt;Y&lt;/em&gt; -value、&lt;em&gt;x1が&lt;/em&gt;最大となる&lt;em&gt;X&lt;/em&gt; -value、及び&lt;em&gt;y1&lt;/em&gt;は&lt;em&gt;y&lt;/em&gt;の最大値です。以下のため&lt;a href=&quot;#brushX&quot;&gt;&lt;em&gt;のX&lt;/em&gt; -brush&lt;/a&gt;、それがある[ &lt;em&gt;X0&lt;/em&gt;、&lt;em&gt;X1&lt;/em&gt; ]。以下のために&lt;a href=&quot;#brushY&quot;&gt;&lt;em&gt;Y&lt;/em&gt; -brush&lt;/a&gt;、それがある[ &lt;em&gt;Y0&lt;/em&gt;、&lt;em&gt;Y1&lt;/em&gt; ]。</target>
        </trans-unit>
        <trans-unit id="8dec8f92a2a1e12e1abb70276843caae581bdc4f" translate="yes" xml:space="preserve">
          <source>Returns the current time as defined by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Performance/now&quot;&gt;performance.now&lt;/a&gt; if available, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/now&quot;&gt;Date.now&lt;/a&gt; if not. The current time is updated at the start of a frame; it is thus consistent during the frame, and any timers scheduled during the same frame will be synchronized. If this method is called outside of a frame, such as in response to a user event, the current time is calculated and then fixed until the next frame, again ensuring consistent timing during event handling.</source>
          <target state="translated">利用可能な場合は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Performance/now&quot;&gt;performance.nowで&lt;/a&gt;定義された現在の時刻を返し、利用できない場合は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/now&quot;&gt;Date.nowを&lt;/a&gt;返します。現在時刻はフレームの開始時に更新されます。したがって、フレーム中は一貫しており、同じフレーム中にスケジュールされたタイマーは同期されます。このメソッドがユーザーイベントへの応答などでフレームの外で呼び出された場合、現在の時刻が計算され、次のフレームまで固定され、イベント処理中の一貫したタイミングが保証されます。</target>
        </trans-unit>
        <trans-unit id="d9af3b2c9b2c09e75eabe419081d59da96c93715" translate="yes" xml:space="preserve">
          <source>Returns the current transform for the specified &lt;em&gt;node&lt;/em&gt;. Note that &lt;em&gt;node&lt;/em&gt; should typically be a DOM element, not a &lt;em&gt;selection&lt;/em&gt;. (A selection may consist of multiple nodes, in different states, and this function only returns a single transform.) If you have a selection, call &lt;a href=&quot;d3-selection#selection_node&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.node&lt;/a&gt; first:</source>
          <target state="translated">指定された&lt;em&gt;ノードの&lt;/em&gt;現在の変換を返します。なお、&lt;em&gt;ノードは&lt;/em&gt;通常、DOM要素ではなく、あるべき&lt;em&gt;選択&lt;/em&gt;。（選択は、異なる状態の複数のノードで構成される場合があり、この関数は単一の変換のみを返します。）選択がある場合は、最初に&lt;a href=&quot;d3-selection#selection_node&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .nodeを&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="3b9e095e3356a65c3dc9739a700ca679cf3d141a" translate="yes" xml:space="preserve">
          <source>Returns the datum closest to the position ⟨&lt;em&gt;x&lt;/em&gt;,&lt;em&gt;y&lt;/em&gt;⟩ with the given search &lt;em&gt;radius&lt;/em&gt;. If &lt;em&gt;radius&lt;/em&gt; is not specified, it defaults to infinity. If there is no datum within the search area, returns undefined.</source>
          <target state="translated">戻り位置⟨に最も近い基準点&lt;em&gt;のx&lt;/em&gt;、&lt;em&gt;yの&lt;/em&gt;所定の探索と⟩ &lt;em&gt;半径&lt;/em&gt;。&lt;em&gt;半径&lt;/em&gt;が指定されていない場合、デフォルトで無限に設定されます。検索領域内にデータムがない場合は、undefinedを返します。</target>
        </trans-unit>
        <trans-unit id="bda45953beaf774f01eb44c35ed98f659cbb1fb0" translate="yes" xml:space="preserve">
          <source>Returns the difference between adjacent tick values if the same arguments were passed to &lt;a href=&quot;#ticks&quot;&gt;d3.ticks&lt;/a&gt;: a nicely-rounded value that is a power of ten multiplied by 1, 2 or 5. Note that due to the limited precision of IEEE 754 floating point, the returned value may not be exact decimals; use &lt;a href=&quot;d3-format&quot;&gt;d3-format&lt;/a&gt; to format numbers for human consumption.</source>
          <target state="translated">同じ引数が&lt;a href=&quot;#ticks&quot;&gt;d3.ticks&lt;/a&gt;に渡された場合、隣接する目盛り値の差を返します。10の累乗に 1、2、または5を掛けた、丸められた適切な値です。IEEE754浮動小数点の精度には制限があるため、戻り値は正確な小数ではない可能性があります。人間が使用できるように数値を&lt;a href=&quot;d3-format&quot;&gt;フォーマット&lt;/a&gt;するには、d3-formatを使用します。</target>
        </trans-unit>
        <trans-unit id="0bcc5062731616e44659131001a69b5d1be88557" translate="yes" xml:space="preserve">
          <source>Returns the distance between the starts of adjacent bands.</source>
          <target state="translated">隣接するバンドの開始点間の距離を返します。</target>
        </trans-unit>
        <trans-unit id="0d3e75d806a1a708d621dd449c00b8a6e1b16139" translate="yes" xml:space="preserve">
          <source>Returns the distance between the starts of adjacent points.</source>
          <target state="translated">隣接する点の開始点間の距離を返します。</target>
        </trans-unit>
        <trans-unit id="d7e3afb361b7e1f1f0a3e3bafd859292f66c4ba6" translate="yes" xml:space="preserve">
          <source>Returns the enter selection: placeholder nodes for each datum that had no corresponding DOM element in the selection. (The enter selection is empty for selections not returned by &lt;a href=&quot;#selection_data&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.data&lt;/a&gt;.)</source>
          <target state="translated">Enter selection：選択に対応するDOM要素がなかった各データのプレースホルダーノードを返します。（&lt;a href=&quot;#selection_data&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .data&lt;/a&gt;によって返されない選択の場合、Enter選択は空です。）</target>
        </trans-unit>
        <trans-unit id="bb97e27d5e7f30c27b123ec6591f64fff5f5cb77" translate="yes" xml:space="preserve">
          <source>Returns the exit selection: existing DOM elements in the selection for which no new datum was found. (The exit selection is empty for selections not returned by &lt;a href=&quot;#selection_data&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.data&lt;/a&gt;.)</source>
          <target state="translated">出口の選択を返します：新しいデータが見つからなかった選択内の既存のDOM要素。（&lt;a href=&quot;#selection_data&quot;&gt;&lt;em&gt;選択&lt;/em&gt; .data&lt;/a&gt;によって返されない選択の場合、終了選択は空です。）</target>
        </trans-unit>
        <trans-unit id="302de993e32d983bf0d0fb75ae0fab538bd924cd" translate="yes" xml:space="preserve">
          <source>Returns the extent of values in the &lt;a href=&quot;#quantile_domain&quot;&gt;domain&lt;/a&gt; [</source>
          <target state="translated">&lt;a href=&quot;#quantile_domain&quot;&gt;ドメイン内&lt;/a&gt;の値の範囲を返します[</target>
        </trans-unit>
        <trans-unit id="d91e18fc29ef25da222e65db1ddf7e7a72c87a0e" translate="yes" xml:space="preserve">
          <source>Returns the extent of values in the &lt;a href=&quot;#quantize_domain&quot;&gt;domain&lt;/a&gt; [</source>
          <target state="translated">&lt;a href=&quot;#quantize_domain&quot;&gt;ドメイン内&lt;/a&gt;の値の範囲を返します[</target>
        </trans-unit>
        <trans-unit id="8af2f731a5f44006b05ff185e197a48a07af81ed" translate="yes" xml:space="preserve">
          <source>Returns the extent of values in the &lt;a href=&quot;#threshold_domain&quot;&gt;domain&lt;/a&gt; [</source>
          <target state="translated">&lt;a href=&quot;#threshold_domain&quot;&gt;ドメイン内&lt;/a&gt;の値の範囲を返します[</target>
        </trans-unit>
        <trans-unit id="c3bc26f63361501b1d2eba266407dc5b68b32c6f" translate="yes" xml:space="preserve">
          <source>Returns the first (non-null) element in this selection. If the selection is empty, returns null.</source>
          <target state="translated">この選択範囲内の最初の要素 (非 null)を返します。選択範囲が空の場合は null を返します。</target>
        </trans-unit>
        <trans-unit id="e84c355eb391a235493a689a3cf212eea48e1aa2" translate="yes" xml:space="preserve">
          <source>Returns the first (non-null) element in this transition. If the transition is empty, returns null. Equivalent to &lt;a href=&quot;d3-selection#selection_node&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.node&lt;/a&gt;.</source>
          <target state="translated">この遷移の最初の（nullでない）要素を返します。遷移が空の場合、nullを返します。同等の&lt;a href=&quot;d3-selection#selection_node&quot;&gt;&lt;em&gt;選択&lt;/em&gt; .nodeファイル&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7fbfded6d885c15b42528d7b808905924050ed60" translate="yes" xml:space="preserve">
          <source>Returns the given series order [0, 1, &amp;hellip; &lt;em&gt;n&lt;/em&gt; - 1] where &lt;em&gt;n&lt;/em&gt; is the number of elements in &lt;em&gt;series&lt;/em&gt;. Thus, the stack order is given by the &lt;a href=&quot;#stack_keys&quot;&gt;key accessor&lt;/a&gt;.</source>
          <target state="translated">指定された系列の順序[0、1、&amp;hellip; &lt;em&gt;n&lt;/em&gt; -1]を返します。ここで、&lt;em&gt;n&lt;/em&gt;は&lt;em&gt;系列&lt;/em&gt;内の要素の数です。したがって、スタック順序は&lt;a href=&quot;#stack_keys&quot;&gt;キーアクセサ&lt;/a&gt;によって指定されます。</target>
        </trans-unit>
        <trans-unit id="9cf902dc2301fc9c6b881454321201c584bb199e" translate="yes" xml:space="preserve">
          <source>Returns the great-arc distance in &lt;a href=&quot;http://mathworld.wolfram.com/Radian.html&quot;&gt;radians&lt;/a&gt; between the two points &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. Each point must be specified as a two-element array [&lt;em&gt;longitude&lt;/em&gt;, &lt;em&gt;latitude&lt;/em&gt;] in degrees. This is the spherical equivalent of &lt;a href=&quot;#path_measure&quot;&gt;&lt;em&gt;path&lt;/em&gt;.measure&lt;/a&gt; given a LineString of two points.</source>
          <target state="translated">2つのポイント&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;間の大弧距離を&lt;a href=&quot;http://mathworld.wolfram.com/Radian.html&quot;&gt;ラジアンで&lt;/a&gt;返します。各ポイントは、度数の2要素の配列[ &lt;em&gt;経度&lt;/em&gt;、&lt;em&gt;緯度&lt;/em&gt; ] として指定する必要があります。これは、2点のLineStringが与えられた場合の&lt;a href=&quot;#path_measure&quot;&gt;&lt;em&gt;path&lt;/em&gt;&lt;/a&gt; .measureに相当する球面です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="295733a4b2420814dc5dfdfee8fa4d4477534cc4" translate="yes" xml:space="preserve">
          <source>Returns the great-arc length of the specified GeoJSON &lt;em&gt;object&lt;/em&gt; in &lt;a href=&quot;http://mathworld.wolfram.com/Radian.html&quot;&gt;radians&lt;/a&gt;. For polygons, returns the perimeter of the exterior ring plus that of any interior rings. This is the spherical equivalent of &lt;a href=&quot;#path_measure&quot;&gt;&lt;em&gt;path&lt;/em&gt;.measure&lt;/a&gt;.</source>
          <target state="translated">戻り値指定にGeoJSONのの偉大なアーク長&lt;em&gt;オブジェクト&lt;/em&gt;で&lt;a href=&quot;http://mathworld.wolfram.com/Radian.html&quot;&gt;ラジアン&lt;/a&gt;。ポリゴンの場合、外部リングの周囲に加えて、内部リングの周囲を返します。これは、&lt;a href=&quot;#path_measure&quot;&gt;&lt;em&gt;path&lt;/em&gt; .measure&lt;/a&gt;と同等の球です。</target>
        </trans-unit>
        <trans-unit id="0965ea1f694921a5550a86c21c92f74e8ca0ae1f" translate="yes" xml:space="preserve">
          <source>Returns the index of the input point that is closest to the specified point ⟨&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;⟩. The search is started at the specified point &lt;em&gt;i&lt;/em&gt;. If &lt;em&gt;i&lt;/em&gt; is not specified, it defaults to zero.</source>
          <target state="translated">戻り値指定された点に最も近い入力点の指標⟨ &lt;em&gt;X&lt;/em&gt;、&lt;em&gt;Y&lt;/em&gt; ⟩。検索は指定されたポイント&lt;em&gt;i&lt;/em&gt;で開始されます。&lt;em&gt;i&lt;/em&gt;が指定されていない場合、デフォルトでゼロになります。</target>
        </trans-unit>
        <trans-unit id="671991e234b19d1180ec3965f88f6b022c08da43" translate="yes" xml:space="preserve">
          <source>Returns the insertion point for &lt;em&gt;x&lt;/em&gt; in &lt;em&gt;array&lt;/em&gt; to maintain sorted order. The arguments &lt;em&gt;lo&lt;/em&gt; and &lt;em&gt;hi&lt;/em&gt; may be used to specify a subset of the array which should be considered; by default the entire array is used. If &lt;em&gt;x&lt;/em&gt; is already present in &lt;em&gt;array&lt;/em&gt;, the insertion point will be before (to the left of) any existing entries. The return value is suitable for use as the first argument to &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice&quot;&gt;splice&lt;/a&gt; assuming that &lt;em&gt;array&lt;/em&gt; is already sorted. The returned insertion point &lt;em&gt;i&lt;/em&gt; partitions the &lt;em&gt;array&lt;/em&gt; into two halves so that all &lt;em&gt;v&lt;/em&gt; &amp;lt; &lt;em&gt;x&lt;/em&gt; for &lt;em&gt;v&lt;/em&gt; in &lt;em&gt;array&lt;/em&gt;.slice(&lt;em&gt;lo&lt;/em&gt;, &lt;em&gt;i&lt;/em&gt;) for the left side and all &lt;em&gt;v&lt;/em&gt; &amp;gt;= &lt;em&gt;x&lt;/em&gt; for &lt;em&gt;v&lt;/em&gt; in &lt;em&gt;array&lt;/em&gt;.slice(&lt;em&gt;i&lt;/em&gt;, &lt;em&gt;hi&lt;/em&gt;) for the right side.</source>
          <target state="translated">以下のための挿入点を返し&lt;em&gt;X&lt;/em&gt;で&lt;em&gt;配列を&lt;/em&gt;ソートされた順序を維持します。引数&lt;em&gt;lo&lt;/em&gt;と&lt;em&gt;hi&lt;/em&gt;を使用して、考慮すべき配列のサブセットを指定できます。デフォルトでは、アレイ全体が使用されます。&lt;em&gt;x&lt;/em&gt;がすでに&lt;em&gt;array&lt;/em&gt;に存在する場合、挿入ポイントは既存のエントリの前（左側）になります。戻り値は、&lt;em&gt;配列&lt;/em&gt;がすでにソートされていると仮定して、&lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice&quot;&gt;スプライス&lt;/a&gt;の最初の引数として使用するのに適しています。返された挿入ポイント&lt;em&gt;iは&lt;/em&gt;分割&lt;em&gt;アレイを&lt;/em&gt;すべてように、2つの半分に&lt;em&gt;V&lt;/em&gt; &amp;lt; &lt;em&gt;X&lt;/em&gt;のための&lt;em&gt;V&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;左側は&lt;em&gt;配列&lt;/em&gt; .slice（&lt;em&gt;lo&lt;/em&gt;、&lt;em&gt;i&lt;/em&gt;）で、右側は&lt;em&gt;配列&lt;/em&gt; .slice（&lt;em&gt;i&lt;/em&gt;、&lt;em&gt;hi&lt;/em&gt;）の&lt;em&gt;v&lt;/em&gt;ですべて&lt;em&gt;v&lt;/em&gt; &amp;gt; = &lt;em&gt;x&lt;/em&gt;です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="83c1faf3dd7e28cfc39b4b69490b0b541a5b1a25" translate="yes" xml:space="preserve">
          <source>Returns the inverse transformation of the specified &lt;em&gt;point&lt;/em&gt; which is a two-element array of numbers [&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;]. The returned point is equal to [(&lt;em&gt;x&lt;/em&gt; - &lt;em&gt;t&lt;sub&gt;x&lt;/sub&gt;&lt;/em&gt;) / &lt;em&gt;k&lt;/em&gt;, (&lt;em&gt;y&lt;/em&gt; - &lt;em&gt;t&lt;sub&gt;y&lt;/sub&gt;&lt;/em&gt;) / &lt;em&gt;k&lt;/em&gt;].</source>
          <target state="translated">数値[ &lt;em&gt;x&lt;/em&gt;、&lt;em&gt;y&lt;/em&gt; ]の2要素配列である指定された&lt;em&gt;点&lt;/em&gt;の逆変換を返します。返されるポイントは[（&lt;em&gt;x&lt;/em&gt; - &lt;em&gt;t &lt;/em&gt;&lt;em&gt;&lt;sub&gt;x&lt;/sub&gt;&lt;/em&gt;）/ &lt;em&gt;k&lt;/em&gt;、（&lt;em&gt;y&lt;/em&gt; - &lt;em&gt;t &lt;/em&gt;&lt;em&gt;&lt;sub&gt;y&lt;/sub&gt;&lt;/em&gt;）/ &lt;em&gt;k&lt;/em&gt; ]に等しい。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c82e1a93ac9daf3451b0834878ffc475a2eea826" translate="yes" xml:space="preserve">
          <source>Returns the inverse transformation of the specified &lt;em&gt;x&lt;/em&gt;-coordinate, (&lt;em&gt;x&lt;/em&gt; - &lt;em&gt;t&lt;sub&gt;x&lt;/sub&gt;&lt;/em&gt;) / &lt;em&gt;k&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;x座標&lt;/em&gt;の逆変換（&lt;em&gt;x&lt;/em&gt; - &lt;em&gt;t &lt;sub&gt;x&lt;/sub&gt;&lt;/em&gt;）/ &lt;em&gt;kを&lt;/em&gt;返します。</target>
        </trans-unit>
        <trans-unit id="1104f024e2d43ef70dbc0ee3e1b781a173272848" translate="yes" xml:space="preserve">
          <source>Returns the inverse transformation of the specified &lt;em&gt;y&lt;/em&gt;-coordinate, (&lt;em&gt;y&lt;/em&gt; - &lt;em&gt;t&lt;sub&gt;y&lt;/sub&gt;&lt;/em&gt;) / &lt;em&gt;k&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;y&lt;/em&gt;座標の逆変換（&lt;em&gt;y&lt;/em&gt; - &lt;em&gt;t &lt;sub&gt;y&lt;/sub&gt;&lt;/em&gt;）/ &lt;em&gt;kを&lt;/em&gt;返します。</target>
        </trans-unit>
        <trans-unit id="92b4d8734f4353569a317623600b9f6e30bd8eac" translate="yes" xml:space="preserve">
          <source>Returns the length of the perimeter of the specified &lt;em&gt;polygon&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;ポリゴンの&lt;/em&gt;周囲の長さを返します。</target>
        </trans-unit>
        <trans-unit id="13c92537b7f0e100e2a81f5a147f5812e9151f56" translate="yes" xml:space="preserve">
          <source>Returns the maximum value in the given &lt;em&gt;array&lt;/em&gt; using natural order. If the array is empty, returns undefined. An optional &lt;em&gt;accessor&lt;/em&gt; function may be specified, which is equivalent to calling &lt;em&gt;array&lt;/em&gt;.map(&lt;em&gt;accessor&lt;/em&gt;) before computing the maximum value.</source>
          <target state="translated">自然順序を使用して、指定された&lt;em&gt;配列の&lt;/em&gt;最大値を返します。配列が空の場合、undefinedを返します。オプションの&lt;em&gt;アクセサ&lt;/em&gt;関数を指定できます。これは、最大値を計算する前に&lt;em&gt;array&lt;/em&gt; .map（&lt;em&gt;accessor&lt;/em&gt;）を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="ed7f61cfe5496cd780b0179aa5df1fa9eeabba96" translate="yes" xml:space="preserve">
          <source>Returns the mean of the given &lt;em&gt;array&lt;/em&gt; of numbers. If the array is empty, returns undefined. An optional &lt;em&gt;accessor&lt;/em&gt; function may be specified, which is equivalent to calling &lt;em&gt;array&lt;/em&gt;.map(&lt;em&gt;accessor&lt;/em&gt;) before computing the mean. This method ignores undefined and NaN values; this is useful for ignoring missing data.</source>
          <target state="translated">指定された数値の&lt;em&gt;配列の&lt;/em&gt;平均を返します。配列が空の場合、undefinedを返します。オプションの&lt;em&gt;アクセサー&lt;/em&gt;関数を指定できます。これは、平均を計算する前に&lt;em&gt;array&lt;/em&gt; .map（&lt;em&gt;accessor&lt;/em&gt;）を呼び出すことと同じです。このメソッドは、未定義およびNaN値を無視します。これは、欠落しているデータを無視するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="2145f266d4b9ce15c24239a77c50312d713cf3a7" translate="yes" xml:space="preserve">
          <source>Returns the median of the given &lt;em&gt;array&lt;/em&gt; of numbers using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Quantile#Estimating_quantiles_from_a_sample&quot;&gt;R-7 method&lt;/a&gt;. If the array is empty, returns undefined. An optional &lt;em&gt;accessor&lt;/em&gt; function may be specified, which is equivalent to calling &lt;em&gt;array&lt;/em&gt;.map(&lt;em&gt;accessor&lt;/em&gt;) before computing the median. This method ignores undefined and NaN values; this is useful for ignoring missing data.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Quantile#Estimating_quantiles_from_a_sample&quot;&gt;R-7メソッド&lt;/a&gt;を使用して、指定された数値の&lt;em&gt;配列の&lt;/em&gt;中央値を返します。配列が空の場合、undefinedを返します。オプションの&lt;em&gt;アクセサー&lt;/em&gt;関数を指定できます。これは、中央値を計算する前に&lt;em&gt;array&lt;/em&gt; .map（&lt;em&gt;accessor&lt;/em&gt;）を呼び出すのと同じです。このメソッドは、未定義およびNaN値を無視します。これは、欠落しているデータを無視するのに役立ちます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d76e54f8cdd0e913e96321bcf326ee8d32bdd9e3" translate="yes" xml:space="preserve">
          <source>Returns the minimum value in the given &lt;em&gt;array&lt;/em&gt; using natural order. If the array is empty, returns undefined. An optional &lt;em&gt;accessor&lt;/em&gt; function may be specified, which is equivalent to calling &lt;em&gt;array&lt;/em&gt;.map(&lt;em&gt;accessor&lt;/em&gt;) before computing the minimum value.</source>
          <target state="translated">自然順序を使用して、指定された&lt;em&gt;配列の&lt;/em&gt;最小値を返します。配列が空の場合、undefinedを返します。オプションの&lt;em&gt;アクセサ&lt;/em&gt;関数を指定できます。これは、最小値を計算する前に&lt;em&gt;array&lt;/em&gt; .map（&lt;em&gt;accessor&lt;/em&gt;）を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="8980f39480cc15cc449a2d24ca1e1cc457f6d551" translate="yes" xml:space="preserve">
          <source>Returns the nearest site to point [&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;]. If &lt;em&gt;radius&lt;/em&gt; is specified, only sites within &lt;em&gt;radius&lt;/em&gt; distance are considered.</source>
          <target state="translated">ポイント[ &lt;em&gt;x&lt;/em&gt;、&lt;em&gt;y&lt;/em&gt; ]に最も近いサイトを返します。&lt;em&gt;半径&lt;/em&gt;が指定されている場合、&lt;em&gt;半径&lt;/em&gt;距離内のサイトのみが考慮されます。</target>
        </trans-unit>
        <trans-unit id="16fa16e0c3a5b09d2d3f9c02026aa7ce5e46b80a" translate="yes" xml:space="preserve">
          <source>Returns the node closest to the position ⟨&lt;em&gt;x&lt;/em&gt;,&lt;em&gt;y&lt;/em&gt;⟩ with the given search &lt;em&gt;radius&lt;/em&gt;. If &lt;em&gt;radius&lt;/em&gt; is not specified, it defaults to infinity. If there is no node within the search area, returns undefined.</source>
          <target state="translated">戻り位置⟨に最も近いノード&lt;em&gt;のx&lt;/em&gt;、&lt;em&gt;yの&lt;/em&gt;所定の探索と⟩ &lt;em&gt;半径&lt;/em&gt;。&lt;em&gt;半径&lt;/em&gt;が指定されていない場合、デフォルトで無限に設定されます。検索領域内にノードがない場合は、undefinedを返します。</target>
        </trans-unit>
        <trans-unit id="9d70a2069b68f6781b5498fe01925ab0ed90c04a" translate="yes" xml:space="preserve">
          <source>Returns the number of bins according to &lt;a href=&quot;https://en.wikipedia.org/wiki/Histogram#Mathematical_definition&quot;&gt;Scott&amp;rsquo;s normal reference rule&lt;/a&gt;; the input &lt;em&gt;values&lt;/em&gt; must be numbers.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Histogram#Mathematical_definition&quot;&gt;スコットの通常の参照規則&lt;/a&gt;に従ってビンの数を返します。入力&lt;em&gt;値&lt;/em&gt;は&lt;em&gt;数値で&lt;/em&gt;なければなりません。</target>
        </trans-unit>
        <trans-unit id="b0cabdff5b3f0f6facf960943166949692f0f182" translate="yes" xml:space="preserve">
          <source>Returns the number of bins according to &lt;a href=&quot;https://en.wikipedia.org/wiki/Histogram#Mathematical_definition&quot;&gt;Sturges&amp;rsquo; formula&lt;/a&gt;; the input &lt;em&gt;values&lt;/em&gt; must be numbers.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Histogram#Mathematical_definition&quot;&gt;スタージの式&lt;/a&gt;に従ってビンの数を返します。入力&lt;em&gt;値&lt;/em&gt;は&lt;em&gt;数値で&lt;/em&gt;なければなりません。</target>
        </trans-unit>
        <trans-unit id="41a2d3e4f957d5d6d3d9a0e34a7125de5d7fb998" translate="yes" xml:space="preserve">
          <source>Returns the number of bins according to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Histogram#Mathematical_definition&quot;&gt;Freedman&amp;ndash;Diaconis rule&lt;/a&gt;; the input &lt;em&gt;values&lt;/em&gt; must be numbers.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Histogram#Mathematical_definition&quot;&gt;Freedman&amp;ndash;Diaconis規則&lt;/a&gt;に従ってビンの数を返します。入力&lt;em&gt;値&lt;/em&gt;は&lt;em&gt;数値で&lt;/em&gt;なければなりません。</target>
        </trans-unit>
        <trans-unit id="61d1a36e69ae92b5444ff4b856e146eab7196b8c" translate="yes" xml:space="preserve">
          <source>Returns the number of entries in this map.</source>
          <target state="translated">このマップのエントリ数を返します。</target>
        </trans-unit>
        <trans-unit id="b022861919231e01740236355495e63b0dfca677" translate="yes" xml:space="preserve">
          <source>Returns the number of interval boundaries after &lt;em&gt;start&lt;/em&gt; (exclusive) and before or equal to &lt;em&gt;end&lt;/em&gt; (inclusive). Note that this behavior is slightly different than &lt;a href=&quot;#interval_range&quot;&gt;&lt;em&gt;interval&lt;/em&gt;.range&lt;/a&gt; because its purpose is to return the zero-based number of the specified &lt;em&gt;end&lt;/em&gt; date relative to the specified &lt;em&gt;start&lt;/em&gt; date. For example, to compute the current zero-based day-of-year number:</source>
          <target state="translated">&lt;em&gt;開始&lt;/em&gt;（排他的）後、&lt;em&gt;終了&lt;/em&gt;（包括的）以前の間隔境界の数を返します。この目的は、指定された&lt;em&gt;開始&lt;/em&gt;日の相対的な指定された&lt;em&gt;終了&lt;/em&gt;日のゼロから&lt;a href=&quot;#interval_range&quot;&gt;始まる数値を返す&lt;/a&gt;ことであるため、この動作は&lt;em&gt;interval&lt;/em&gt; .rangeとは少し異なることに注意してください。たとえば、現在のゼロベースの年の数を計算するには、次のようにします。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="28a4154b439fdb61ae1c9b126d39d0454e86efa5" translate="yes" xml:space="preserve">
          <source>Returns the number of values in this set.</source>
          <target state="translated">このセットの値の数を返します。</target>
        </trans-unit>
        <trans-unit id="9d08de1480bf20ff9e5ca3d4aa7188684c0a4fd6" translate="yes" xml:space="preserve">
          <source>Returns the owner window for the specified &lt;em&gt;node&lt;/em&gt;. If &lt;em&gt;node&lt;/em&gt; is a node, returns the owner document&amp;rsquo;s default view; if &lt;em&gt;node&lt;/em&gt; is a document, returns its default view; otherwise returns the &lt;em&gt;node&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;ノードの&lt;/em&gt;オーナーウィンドウを返します。&lt;em&gt;ノード&lt;/em&gt;がノードの場合、オーナードキュメントのデフォルトビューを返します。&lt;em&gt;ノード&lt;/em&gt;がドキュメントの場合、デフォルトのビューを返します。それ以外の場合は&lt;em&gt;ノードを&lt;/em&gt;返し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="94d2a8286b4bd69f2b8894863306ef0b68df3c94" translate="yes" xml:space="preserve">
          <source>Returns the point [</source>
          <target state="translated">点[]を返します。</target>
        </trans-unit>
        <trans-unit id="22ffd9035cc7ddd85c469ac0d5af9e7c7fd7b774" translate="yes" xml:space="preserve">
          <source>Returns the projected planar area (typically in square pixels) for the specified GeoJSON &lt;em&gt;object&lt;/em&gt;. Point, MultiPoint, LineString and MultiLineString geometries have zero area. For Polygon and MultiPolygon geometries, this method first computes the area of the exterior ring, and then subtracts the area of any interior holes. This method observes any clipping performed by the &lt;a href=&quot;#path_projection&quot;&gt;projection&lt;/a&gt;; see &lt;a href=&quot;#projection_clipAngle&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.clipAngle&lt;/a&gt; and &lt;a href=&quot;#projection_clipExtent&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.clipExtent&lt;/a&gt;. This is the planar equivalent of &lt;a href=&quot;#geoArea&quot;&gt;d3.geoArea&lt;/a&gt;.</source>
          <target state="translated">指定されたGeoJSON &lt;em&gt;オブジェクト&lt;/em&gt;の投影された平面領域（通常は正方形ピクセル）を返します。ポイント、マルチポイント、ラインストリング、およびマルチラインストリングジオメトリの面積はゼロです。 PolygonおよびMultiPolygonジオメトリの場合、このメソッドは最初に外部リングの面積を計算してから、内部の穴の面積を差し引きます。このメソッドは、&lt;a href=&quot;#path_projection&quot;&gt;投影&lt;/a&gt;によって実行されるクリッピングを監視します。&lt;a href=&quot;#projection_clipAngle&quot;&gt;&lt;em&gt;Projection&lt;/em&gt; .clipAngle&lt;/a&gt;および&lt;a href=&quot;#projection_clipExtent&quot;&gt;&lt;em&gt;Projection&lt;/em&gt; .clipExtentを&lt;/a&gt;参照してください。これは、&lt;a href=&quot;#geoArea&quot;&gt;d3.geoArea&lt;/a&gt;と同等の平面です。</target>
        </trans-unit>
        <trans-unit id="7667cd4aa57ac31a67d90ee7ecddbd0caa74fc6c" translate="yes" xml:space="preserve">
          <source>Returns the projected planar bounding box (typically in pixels) for the specified GeoJSON &lt;em&gt;object&lt;/em&gt;. The bounding box is represented by a two-dimensional array: [[&lt;em&gt;x₀&lt;/em&gt;, &lt;em&gt;y₀&lt;/em&gt;], [&lt;em&gt;x₁&lt;/em&gt;, &lt;em&gt;y₁&lt;/em&gt;]], where &lt;em&gt;x₀&lt;/em&gt; is the minimum &lt;em&gt;x&lt;/em&gt;-coordinate, &lt;em&gt;y₀&lt;/em&gt; is the minimum &lt;em&gt;y&lt;/em&gt;-coordinate, &lt;em&gt;x₁&lt;/em&gt; is maximum &lt;em&gt;x&lt;/em&gt;-coordinate, and &lt;em&gt;y₁&lt;/em&gt; is the maximum &lt;em&gt;y&lt;/em&gt;-coordinate. This is handy for, say, zooming in to a particular feature. (Note that in projected planar coordinates, the minimum latitude is typically the maximum &lt;em&gt;y&lt;/em&gt;-value, and the maximum latitude is typically the minimum &lt;em&gt;y&lt;/em&gt;-value.) This method observes any clipping performed by the &lt;a href=&quot;#path_projection&quot;&gt;projection&lt;/a&gt;; see &lt;a href=&quot;#projection_clipAngle&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.clipAngle&lt;/a&gt; and &lt;a href=&quot;#projection_clipExtent&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.clipExtent&lt;/a&gt;. This is the planar equivalent of &lt;a href=&quot;#geoBounds&quot;&gt;d3.geoBounds&lt;/a&gt;.</source>
          <target state="translated">指定されたGeoJSON &lt;em&gt;オブジェクト&lt;/em&gt;の投影された平面境界ボックス（通常はピクセル単位）を返します。境界ボックスは、2次元配列[[ &lt;em&gt;x&lt;/em&gt;：、&lt;em&gt;y₀&lt;/em&gt; ]、[ &lt;em&gt;x₁&lt;/em&gt;、&lt;em&gt;y₁&lt;/em&gt; ]]で表されます。ここで、&lt;em&gt;x₀&lt;/em&gt;は最小の&lt;em&gt;x座標&lt;/em&gt;、&lt;em&gt;y₀&lt;/em&gt;は最小の&lt;em&gt;y &lt;/em&gt;&lt;em&gt;座標&lt;/em&gt;、&lt;em&gt;x₁&lt;/em&gt;は最大の&lt;em&gt;x座標です&lt;/em&gt;。そして&lt;em&gt;y₁は&lt;/em&gt;最大である&lt;em&gt;Y&lt;/em&gt; -座標。これは、特定の機能にズームインする場合などに便利です。 （投影された平面座標では、最小緯度は通常最大&lt;em&gt;y&lt;/em&gt;値であり、最大緯度は通常、&lt;em&gt;y&lt;/em&gt;の最小値です。）このメソッドは、&lt;a href=&quot;#path_projection&quot;&gt;投影&lt;/a&gt;によって実行されるクリッピングを監視します。&lt;a href=&quot;#projection_clipAngle&quot;&gt;&lt;em&gt;Projection&lt;/em&gt; .clipAngle&lt;/a&gt;および&lt;a href=&quot;#projection_clipExtent&quot;&gt;&lt;em&gt;Projection&lt;/em&gt; .clipExtentを&lt;/a&gt;参照してください。これは、&lt;a href=&quot;#geoBounds&quot;&gt;d3.geoBounds&lt;/a&gt;と同等の平面です。</target>
        </trans-unit>
        <trans-unit id="4ce35223028265040713616bc9080edf1d8c6050" translate="yes" xml:space="preserve">
          <source>Returns the projected planar centroid (typically in pixels) for the specified GeoJSON &lt;em&gt;object&lt;/em&gt;. This is handy for, say, labeling state or county boundaries, or displaying a symbol map. For example, a &lt;a href=&quot;https://bl.ocks.org/mbostock/4055908&quot;&gt;noncontiguous cartogram&lt;/a&gt; might scale each state around its centroid. This method observes any clipping performed by the &lt;a href=&quot;#path_projection&quot;&gt;projection&lt;/a&gt;; see &lt;a href=&quot;#projection_clipAngle&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.clipAngle&lt;/a&gt; and &lt;a href=&quot;#projection_clipExtent&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.clipExtent&lt;/a&gt;. This is the planar equivalent of &lt;a href=&quot;#geoCentroid&quot;&gt;d3.geoCentroid&lt;/a&gt;.</source>
          <target state="translated">指定されたGeoJSON &lt;em&gt;オブジェクト&lt;/em&gt;の投影された平面重心（通常はピクセル単位）を返します。これは、たとえば、州や郡の境界にラベルを付ける場合や、シンボルマップを表示する場合に便利です。たとえば、&lt;a href=&quot;https://bl.ocks.org/mbostock/4055908&quot;&gt;不連続なカートグラム&lt;/a&gt;は、重心を中心に各状態をスケーリングする場合があります。このメソッドは、&lt;a href=&quot;#path_projection&quot;&gt;投影&lt;/a&gt;によって実行されるクリッピングを監視します。&lt;a href=&quot;#projection_clipAngle&quot;&gt;&lt;em&gt;Projection&lt;/em&gt; .clipAngle&lt;/a&gt;および&lt;a href=&quot;#projection_clipExtent&quot;&gt;&lt;em&gt;Projection&lt;/em&gt; .clipExtentを&lt;/a&gt;参照してください。これは、&lt;a href=&quot;#geoCentroid&quot;&gt;d3.geoCentroid&lt;/a&gt;と同等の平面です。</target>
        </trans-unit>
        <trans-unit id="7d29aa9d85f17672903a25d1d6950917961a3807" translate="yes" xml:space="preserve">
          <source>Returns the projected planar length (typically in pixels) for the specified GeoJSON &lt;em&gt;object&lt;/em&gt;. Point and MultiPoint geometries have zero length. For Polygon and MultiPolygon geometries, this method computes the summed length of all rings. This method observes any clipping performed by the &lt;a href=&quot;#path_projection&quot;&gt;projection&lt;/a&gt;; see &lt;a href=&quot;#projection_clipAngle&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.clipAngle&lt;/a&gt; and &lt;a href=&quot;#projection_clipExtent&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.clipExtent&lt;/a&gt;. This is the planar equivalent of &lt;a href=&quot;#geoLength&quot;&gt;d3.geoLength&lt;/a&gt;.</source>
          <target state="translated">指定されたGeoJSON &lt;em&gt;オブジェクト&lt;/em&gt;の投影された平面の長さ（通常はピクセル単位）を返します。ポイントおよびマルチポイントジオメトリの長さがゼロです。 PolygonおよびMultiPolygonジオメトリの場合、このメソッドはすべてのリングの合計の長さを計算します。このメソッドは、&lt;a href=&quot;#path_projection&quot;&gt;投影&lt;/a&gt;によって実行されるクリッピングを監視します。&lt;a href=&quot;#projection_clipAngle&quot;&gt;&lt;em&gt;Projection&lt;/em&gt; .clipAngle&lt;/a&gt;および&lt;a href=&quot;#projection_clipExtent&quot;&gt;&lt;em&gt;Projection&lt;/em&gt; .clipExtentを&lt;/a&gt;参照してください。これは、&lt;a href=&quot;#geoLength&quot;&gt;d3.geoLength&lt;/a&gt;と同等の平面です。</target>
        </trans-unit>
        <trans-unit id="14af8460622178afcc4f73558fd10f215acbe5ec" translate="yes" xml:space="preserve">
          <source>Returns the quantile thresholds. If the &lt;a href=&quot;#quantile_range&quot;&gt;range&lt;/a&gt; contains &lt;em&gt;n&lt;/em&gt; discrete values, the returned array will contain &lt;em&gt;n&lt;/em&gt; - 1 thresholds. Values less than the first threshold are considered in the first quantile; values greater than or equal to the first threshold but less than the second threshold are in the second quantile, and so on. Internally, the thresholds array is used with &lt;a href=&quot;d3-array#bisect&quot;&gt;bisect&lt;/a&gt; to find the output quantile associated with the given input value.</source>
          <target state="translated">変位値のしきい値を返します。場合&lt;a href=&quot;#quantile_range&quot;&gt;範囲に&lt;/a&gt;含まれている&lt;em&gt;N個の&lt;/em&gt;離散的な値を、返される配列が含まれています&lt;em&gt;N&lt;/em&gt; - 1個のしきい値を。最初のしきい値よりも小さい値は、最初の変位値で考慮されます。1番目のしきい値以上で2番目のしきい値未満の値は、2番目の変位値にあり、以下同様です。内部的には、しきい値配列は&lt;a href=&quot;d3-array#bisect&quot;&gt;bisect&lt;/a&gt;と共に使用され、指定された入力値に関連付けられた出力分位点を検索します。</target>
        </trans-unit>
        <trans-unit id="99d8ba4cfc5e1aee66f51143cf07530021f8ac9f" translate="yes" xml:space="preserve">
          <source>Returns the reverse of the given series order [&lt;em&gt;n&lt;/em&gt; - 1, &lt;em&gt;n&lt;/em&gt; - 2, &amp;hellip; 0] where &lt;em&gt;n&lt;/em&gt; is the number of elements in &lt;em&gt;series&lt;/em&gt;. Thus, the stack order is given by the reverse of the &lt;a href=&quot;#stack_keys&quot;&gt;key accessor&lt;/a&gt;.</source>
          <target state="translated">指定された系列順[ &lt;em&gt;n&lt;/em&gt; -1、&lt;em&gt;n&lt;/em&gt; -2、&amp;hellip;0] の逆を返します。ここで、&lt;em&gt;n&lt;/em&gt;は&lt;em&gt;系列&lt;/em&gt;の要素数です。したがって、スタックの順序は、&lt;a href=&quot;#stack_keys&quot;&gt;キーアクセサの&lt;/a&gt;逆によって与えられます。</target>
        </trans-unit>
        <trans-unit id="ecc67a9f08f9f40aeb5cb6190bd4a94f04818a7f" translate="yes" xml:space="preserve">
          <source>Returns the root &lt;a href=&quot;#nodes&quot;&gt;node&lt;/a&gt; of the quadtree.</source>
          <target state="translated">四分木のルート&lt;a href=&quot;#nodes&quot;&gt;ノード&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="e77130c9738cb0335d5f18864c0fd916cb0862f2" translate="yes" xml:space="preserve">
          <source>Returns the same type of function for generating random numbers but where the given random number generator &lt;em&gt;source&lt;/em&gt; is used as the source of randomness instead of Math.random. The given random number generator must implement the same interface as Math.random and only return values in the range [0, 1). This is useful when a seeded random number generator is preferable to Math.random. For example:</source>
          <target state="translated">乱数を生成するために同じタイプの関数を返しますが、Math.randomの代わりに、指定された乱数ジェネレーターの&lt;em&gt;ソース&lt;/em&gt;が乱数の&lt;em&gt;ソース&lt;/em&gt;として使用されます。指定された乱数ジェネレータは、Math.randomと同じインターフェイスを実装し、[0、1）の範囲の値のみを返す必要があります。これは、シードされた乱数ジェネレータがMath.randomよりも望ましい場合に役立ちます。例えば：</target>
        </trans-unit>
        <trans-unit id="c027eae2c9c0b82647653b594a89de746f0fdb47" translate="yes" xml:space="preserve">
          <source>Returns the shortest path through the hierarchy from this &lt;em&gt;node&lt;/em&gt; to the specified &lt;em&gt;target&lt;/em&gt; node. The path starts at this &lt;em&gt;node&lt;/em&gt;, ascends to the least common ancestor of this &lt;em&gt;node&lt;/em&gt; and the &lt;em&gt;target&lt;/em&gt; node, and then descends to the &lt;em&gt;target&lt;/em&gt; node. This is particularly useful for &lt;a href=&quot;https://bl.ocks.org/mbostock/7607999&quot;&gt;hierarchical edge bundling&lt;/a&gt;.</source>
          <target state="translated">この&lt;em&gt;ノード&lt;/em&gt;から指定された&lt;em&gt;ターゲット&lt;/em&gt;ノードまでの階層を通る最短パスを返します。パスはこの&lt;em&gt;ノード&lt;/em&gt;から始まり、この&lt;em&gt;ノード&lt;/em&gt;と&lt;em&gt;ターゲット&lt;/em&gt;ノードの最も共通性の低い祖先に昇順してから、&lt;em&gt;ターゲット&lt;/em&gt;ノードに降順します。これは、&lt;a href=&quot;https://bl.ocks.org/mbostock/7607999&quot;&gt;階層的なエッジバンドリングに&lt;/a&gt;特に役立ちます。</target>
        </trans-unit>
        <trans-unit id="13f3896f3c4b72b54783a16ed3a9d4df0fd29a77" translate="yes" xml:space="preserve">
          <source>Returns the signed area of the specified &lt;em&gt;polygon&lt;/em&gt;. If the vertices of the polygon are in counterclockwise order (assuming a coordinate system where the origin ⟨0,0⟩ is in the top-left corner), the returned area is positive; otherwise it is negative, or zero.</source>
          <target state="translated">指定された&lt;em&gt;ポリゴンの&lt;/em&gt;符号付き領域を返します。多角形の頂点が反時計回りの順序になっている場合（原点「0,0」が左上隅にある座標系を想定）、返される領域は正です。それ以外の場合は、負またはゼロです。</target>
        </trans-unit>
        <trans-unit id="f31c9689212f33233351f84b3ff53741de512f8b" translate="yes" xml:space="preserve">
          <source>Returns the spherical area of the specified GeoJSON &lt;em&gt;object&lt;/em&gt; in &lt;a href=&quot;http://mathworld.wolfram.com/Steradian.html&quot;&gt;steradians&lt;/a&gt;. This is the spherical equivalent of &lt;a href=&quot;#path_area&quot;&gt;&lt;em&gt;path&lt;/em&gt;.area&lt;/a&gt;.</source>
          <target state="translated">戻り値指定にGeoJSONの球状のエリア&lt;em&gt;オブジェクト&lt;/em&gt;で&lt;a href=&quot;http://mathworld.wolfram.com/Steradian.html&quot;&gt;ステラジアン&lt;/a&gt;。これは、&lt;a href=&quot;#path_area&quot;&gt;&lt;em&gt;path&lt;/em&gt; .area&lt;/a&gt;と同等の球です。</target>
        </trans-unit>
        <trans-unit id="142aff38fffbb55212fa90dbc645bdef8c95007c" translate="yes" xml:space="preserve">
          <source>Returns the spherical centroid of the specified GeoJSON &lt;em&gt;object&lt;/em&gt;. This is the spherical equivalent of &lt;a href=&quot;#path_centroid&quot;&gt;&lt;em&gt;path&lt;/em&gt;.centroid&lt;/a&gt;.</source>
          <target state="translated">指定されたGeoJSON &lt;em&gt;オブジェクト&lt;/em&gt;の球の重心を返します。これは、&lt;a href=&quot;#path_centroid&quot;&gt;&lt;em&gt;path&lt;/em&gt; .centroid&lt;/a&gt;と同等の球です。</target>
        </trans-unit>
        <trans-unit id="148cfd82478b06460cf848e062f9812735850dd3" translate="yes" xml:space="preserve">
          <source>Returns the standard deviation, defined as the square root of the &lt;a href=&quot;#variance&quot;&gt;bias-corrected variance&lt;/a&gt;, of the given &lt;em&gt;array&lt;/em&gt; of numbers. If the array has fewer than two values, returns undefined. An optional &lt;em&gt;accessor&lt;/em&gt; function may be specified, which is equivalent to calling &lt;em&gt;array&lt;/em&gt;.map(&lt;em&gt;accessor&lt;/em&gt;) before computing the standard deviation. This method ignores undefined and NaN values; this is useful for ignoring missing data.</source>
          <target state="translated">平方根として定義される標準偏差、戻り&lt;a href=&quot;#variance&quot;&gt;バイアス補正分散&lt;/a&gt;所与の、&lt;em&gt;配列&lt;/em&gt;番号のを。配列の値が2つ未満の場合、undefinedを返します。オプションの&lt;em&gt;アクセサー&lt;/em&gt;関数を指定できます。これは、標準偏差を計算する前に&lt;em&gt;array&lt;/em&gt; .map（&lt;em&gt;accessor&lt;/em&gt;）を呼び出すのと同じです。このメソッドは、未定義およびNaN値を無視します。これは、欠落しているデータを無視するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="95c0df1d15917853d64389e5d42736512098a1e1" translate="yes" xml:space="preserve">
          <source>Returns the string representation of this &lt;em&gt;path&lt;/em&gt; according to SVG&amp;rsquo;s &lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathData&quot;&gt;path data specification&lt;/a&gt;.</source>
          <target state="translated">SVGの&lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathData&quot;&gt;パスデータ仕様&lt;/a&gt;に従って、この&lt;em&gt;パスの&lt;/em&gt;文字列表現を返します。</target>
        </trans-unit>
        <trans-unit id="1a6c93f1bcf162176762b9418993925aeb411fb8" translate="yes" xml:space="preserve">
          <source>Returns the sum of the given &lt;em&gt;array&lt;/em&gt; of numbers. If the array is empty, returns 0. An optional &lt;em&gt;accessor&lt;/em&gt; function may be specified, which is equivalent to calling &lt;em&gt;array&lt;/em&gt;.map(&lt;em&gt;accessor&lt;/em&gt;) before computing the sum. This method ignores undefined and NaN values; this is useful for ignoring missing data.</source>
          <target state="translated">指定された数値の&lt;em&gt;配列の&lt;/em&gt;合計を返します。配列が空の場合、0を返します。オプションの&lt;em&gt;アクセサ&lt;/em&gt;関数を指定できます。これは、合計を計算する前に&lt;em&gt;配列&lt;/em&gt; .map（&lt;em&gt;アクセサ&lt;/em&gt;）を呼び出すのと同じです。このメソッドは、未定義およびNaN値を無視します。これは、欠落しているデータを無視するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="151b7b84a8799c57684212787c8fbe783cb6787a" translate="yes" xml:space="preserve">
          <source>Returns the total number of data in the quadtree.</source>
          <target state="translated">quadtree内のデータの総数を返します。</target>
        </trans-unit>
        <trans-unit id="61af37f6d806e725c1835e6addfff125144eaffe" translate="yes" xml:space="preserve">
          <source>Returns the total number of elements in this selection.</source>
          <target state="translated">この選択範囲内の要素の総数を返します。</target>
        </trans-unit>
        <trans-unit id="c14bb0e93825e90f9f66561a6075110763d01d86" translate="yes" xml:space="preserve">
          <source>Returns the total number of elements in this transition. Equivalent to &lt;a href=&quot;d3-selection#selection_size&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.size&lt;/a&gt;.</source>
          <target state="translated">この遷移の要素の総数を返します。同等の&lt;a href=&quot;d3-selection#selection_size&quot;&gt;&lt;em&gt;選択&lt;/em&gt; .size&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ece130d983bd67f43c7ea83daef0a8842b852bf2" translate="yes" xml:space="preserve">
          <source>Returns the transformation of the specified &lt;em&gt;point&lt;/em&gt; which is a two-element array of numbers [&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;]. The returned point is equal to [&lt;em&gt;xk&lt;/em&gt; + &lt;em&gt;t&lt;sub&gt;x&lt;/sub&gt;&lt;/em&gt;, &lt;em&gt;yk&lt;/em&gt; + &lt;em&gt;t&lt;sub&gt;y&lt;/sub&gt;&lt;/em&gt;].</source>
          <target state="translated">数値の2要素配列[ &lt;em&gt;x&lt;/em&gt;、&lt;em&gt;y&lt;/em&gt; ] である指定された&lt;em&gt;点の&lt;/em&gt;変換を返します。返されるポイントは[ &lt;em&gt;xk&lt;/em&gt; + &lt;em&gt;t &lt;/em&gt;&lt;em&gt;&lt;sub&gt;x&lt;/sub&gt;&lt;/em&gt;、&lt;em&gt;yk&lt;/em&gt; + &lt;em&gt;t &lt;/em&gt;&lt;em&gt;&lt;sub&gt;y&lt;/sub&gt;&lt;/em&gt; ]に等しい。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7ed795add0a085b1989498028d5a48b41942c12" translate="yes" xml:space="preserve">
          <source>Returns the transformation of the specified &lt;em&gt;x&lt;/em&gt;-coordinate, &lt;em&gt;xk&lt;/em&gt; + &lt;em&gt;t&lt;sub&gt;x&lt;/sub&gt;&lt;/em&gt;.</source>
          <target state="translated">戻り値指定の変換&lt;em&gt;のx&lt;/em&gt; -座標、&lt;em&gt;XK&lt;/em&gt; + &lt;em&gt;T &lt;sub&gt;X&lt;/sub&gt;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1471c272924ab8febcfde6dcd17a3739e2db1449" translate="yes" xml:space="preserve">
          <source>Returns the transformation of the specified &lt;em&gt;y&lt;/em&gt;-coordinate, &lt;em&gt;yk&lt;/em&gt; + &lt;em&gt;t&lt;sub&gt;y&lt;/sub&gt;&lt;/em&gt;.</source>
          <target state="translated">指定された&lt;em&gt;y&lt;/em&gt;座標の変換、&lt;em&gt;yk&lt;/em&gt; + &lt;em&gt;t &lt;sub&gt;yを&lt;/sub&gt;&lt;/em&gt;返します。</target>
        </trans-unit>
        <trans-unit id="9d8d15552dda1b2d85c2f6e3df5d8181f777ee1f" translate="yes" xml:space="preserve">
          <source>Returns the value for the specified &lt;em&gt;key&lt;/em&gt; string. If the map does not have an entry for the specified &lt;em&gt;key&lt;/em&gt;, returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">指定された&lt;em&gt;キー&lt;/em&gt;文字列の値を返します。指定された&lt;em&gt;キーの&lt;/em&gt;エントリがマップにない場合、 &lt;code&gt;undefined&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2c1227acc7af6c3e163931d300fb1778870eb92d" translate="yes" xml:space="preserve">
          <source>Returns the value of the style property with the specified &lt;em&gt;name&lt;/em&gt; for the specified &lt;em&gt;node&lt;/em&gt;. If the &lt;em&gt;node&lt;/em&gt; has an inline style with the specified &lt;em&gt;name&lt;/em&gt;, its value is returned; otherwise, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/computed_value&quot;&gt;computed property value&lt;/a&gt; is returned. See also &lt;a href=&quot;#selection_style&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.style&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;em&gt;ノード&lt;/em&gt;の指定された&lt;em&gt;名前&lt;/em&gt;を持つスタイルプロパティの値を返します。&lt;em&gt;ノードに&lt;/em&gt;指定された&lt;em&gt;名前の&lt;/em&gt;インラインスタイルがある場合、その値が返されます。それ以外の場合は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/computed_value&quot;&gt;計算されたプロパティ値&lt;/a&gt;が返されます。&lt;a href=&quot;#selection_style&quot;&gt;&lt;em&gt;selection&lt;/em&gt;&lt;/a&gt; .styleも参照してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e32545ef8c1eb0343b066032389466d341ada721" translate="yes" xml:space="preserve">
          <source>Returns the value of this local on the specified &lt;em&gt;node&lt;/em&gt;. If the &lt;em&gt;node&lt;/em&gt; does not define this local, returns the value from the nearest ancestor that defines it. Returns undefined if no ancestor defines this local.</source>
          <target state="translated">指定された&lt;em&gt;ノードの&lt;/em&gt;このローカルの値を返します。&lt;em&gt;ノード&lt;/em&gt;がこのローカルを定義していない場合は、&lt;em&gt;ノードを&lt;/em&gt;定義する最も近い祖先から値を返します。祖先がこのローカルを定義していない場合は、undefinedを返します。</target>
        </trans-unit>
        <trans-unit id="1035f01ca7e3651baa5033f43130110fe910b176" translate="yes" xml:space="preserve">
          <source>Returns the width of each band.</source>
          <target state="translated">各バンドの幅を返します。</target>
        </trans-unit>
        <trans-unit id="b0ea1d910b3d6a3aca3180260c60338a2cf4f3e8" translate="yes" xml:space="preserve">
          <source>Returns true if and only if the color is displayable on standard hardware. For example, this returns false for an RGB color if any channel value is less than zero or greater than 255, or if the opacity is not in the range [0, 1].</source>
          <target state="translated">標準のハー ド ウ ェ ア上で表示可能な色の場合にのみ真を返します。例えば、チャンネル値のいずれかが 0 より小さいか 255 より大きい場合、または不透明度が [0,1]の範囲内にない場合、RGB カラーに対して false を返します。</target>
        </trans-unit>
        <trans-unit id="c8d836425d547a48df02779a60158f9b4ed625d8" translate="yes" xml:space="preserve">
          <source>Returns true if and only if the specified &lt;em&gt;point&lt;/em&gt; is &lt;a href=&quot;https://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html&quot;&gt;inside the specified &lt;em&gt;polygon&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;em&gt;ポイント&lt;/em&gt;が&lt;a href=&quot;https://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html&quot;&gt;指定された&lt;em&gt;ポリゴンの&lt;/em&gt;&lt;/a&gt;内側にある場合にのみtrueを返します。</target>
        </trans-unit>
        <trans-unit id="7d23d3171ffdf82cec8b0543ceaf6fa85c55af7d" translate="yes" xml:space="preserve">
          <source>Returns true if and only if the specified GeoJSON &lt;em&gt;object&lt;/em&gt; contains the specified &lt;em&gt;point&lt;/em&gt;, or false if the &lt;em&gt;object&lt;/em&gt; does not contain the &lt;em&gt;point&lt;/em&gt;. The point must be specified as a two-element array [&lt;em&gt;longitude&lt;/em&gt;, &lt;em&gt;latitude&lt;/em&gt;] in degrees. For Point and MultiPoint geometries, an exact test is used; for a Sphere, true is always returned; for other geometries, an epsilon threshold is applied.</source>
          <target state="translated">指定されたGeoJSON &lt;em&gt;オブジェクト&lt;/em&gt;に指定された&lt;em&gt;ポイント&lt;/em&gt;が含まれている場合にのみtrueを返し、&lt;em&gt;オブジェクト&lt;/em&gt;に&lt;em&gt;ポイント&lt;/em&gt;が含まれていない場合はfalseを返します。ポイントは、2要素の配列[ &lt;em&gt;経度&lt;/em&gt;、&lt;em&gt;緯度&lt;/em&gt; ]として度数で指定する必要があります。ポイントおよびマルチポイントジオメトリの場合、正確なテストが使用されます。球の場合、常にtrueが返されます。他の形状の場合、イプシロンしきい値が適用されます。</target>
        </trans-unit>
        <trans-unit id="749e8dee0169d32e40a3d11d7237e885f681d2fd" translate="yes" xml:space="preserve">
          <source>Returns true if and only if this map has an entry for the specified &lt;em&gt;key&lt;/em&gt; string. Note: the value may be &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">このマップに指定された&lt;em&gt;キー&lt;/em&gt;文字列のエントリがある場合にのみtrueを返します。注：値は &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;undefined&lt;/code&gt; の場合があります。</target>
        </trans-unit>
        <trans-unit id="8b2f7b92fd1bdf4e9a1299e4db81c10e002b3a9a" translate="yes" xml:space="preserve">
          <source>Returns true if and only if this map has zero entries.</source>
          <target state="translated">このマップのエントリがゼロの場合にのみ真を返します。</target>
        </trans-unit>
        <trans-unit id="050323b90cb3a52a71ba86498055d958c3f482db" translate="yes" xml:space="preserve">
          <source>Returns true if and only if this set has an entry for the specified &lt;em&gt;value&lt;/em&gt; string.</source>
          <target state="translated">このセットに指定された&lt;em&gt;値の&lt;/em&gt;文字列のエントリがある場合にのみtrueを返します。</target>
        </trans-unit>
        <trans-unit id="0224b8feb7da51534634ecfdc97869d1a9093e96" translate="yes" xml:space="preserve">
          <source>Returns true if and only if this set has zero values.</source>
          <target state="translated">このセットの値がゼロの場合にのみ真を返します。</target>
        </trans-unit>
        <trans-unit id="6b874b77be8465ddbe852186a26fad23469ecb93" translate="yes" xml:space="preserve">
          <source>Returns true if the cell with the specified index &lt;em&gt;i&lt;/em&gt; contains the specified point ⟨&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;⟩. (This method is not affected by the associated Voronoi diagram&amp;rsquo;s viewport &lt;a href=&quot;#voronoi_xmin&quot;&gt;bounds&lt;/a&gt;.)</source>
          <target state="translated">trueを返し指定されたインデックスを持つセルがあれば&lt;em&gt;、私は&lt;/em&gt;指定された点⟨含まれている&lt;em&gt;のx&lt;/em&gt;、&lt;em&gt;yの&lt;/em&gt; ⟩を。（このメソッドは、関連するボロノイ図のビューポート&lt;a href=&quot;#voronoi_xmin&quot;&gt;境界&lt;/a&gt;の影響を受けません。）</target>
        </trans-unit>
        <trans-unit id="e75d8da3c16195697105cadcdbcac9db6110f1a1" translate="yes" xml:space="preserve">
          <source>Returns true if this selection contains no (non-null) elements.</source>
          <target state="translated">この選択範囲に (非 null)要素が含まれていない場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="a100a51ddcdfc9dc2865abf15375b19b95ce851f" translate="yes" xml:space="preserve">
          <source>Returns true if this transition contains no (non-null) elements. Equivalent to &lt;a href=&quot;d3-selection#selection_empty&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.empty&lt;/a&gt;.</source>
          <target state="translated">この遷移に要素（null以外）が含まれていない場合はtrueを返します。同等の&lt;a href=&quot;d3-selection#selection_empty&quot;&gt;&lt;em&gt;選択&lt;/em&gt; .empty&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e780755f77f5641c6168f71723e96dc967eae74e" translate="yes" xml:space="preserve">
          <source>Returns zero.</source>
          <target state="translated">ゼロを返します。</target>
        </trans-unit>
        <trans-unit id="8c31fb40c27ea011811c499ead2124a50faf2bcb" translate="yes" xml:space="preserve">
          <source>Reverse anticipatory easing; equivalent to 1 - &lt;a href=&quot;#easeBackIn&quot;&gt;backIn&lt;/a&gt;(1 - &lt;em&gt;t&lt;/em&gt;).</source>
          <target state="translated">予期的緩和の逆転; 1- &lt;a href=&quot;#easeBackIn&quot;&gt;backIn&lt;/a&gt;（1- &lt;em&gt;t&lt;/em&gt;）と同じです。</target>
        </trans-unit>
        <trans-unit id="3932a8a8d7e413e3aa616eca917946461b0043a6" translate="yes" xml:space="preserve">
          <source>Reverse bounce easing; equivalent to 1 - &lt;a href=&quot;#easeBounceIn&quot;&gt;bounceIn&lt;/a&gt;(1 - &lt;em&gt;t&lt;/em&gt;).</source>
          <target state="translated">逆バウンス緩和; 1- &lt;a href=&quot;#easeBounceIn&quot;&gt;bounceIn&lt;/a&gt;（1- &lt;em&gt;t&lt;/em&gt;）と同じです。</target>
        </trans-unit>
        <trans-unit id="c0003fc07860d6462c1fe74ea6cef30693c7acf5" translate="yes" xml:space="preserve">
          <source>Reverse circular easing; equivalent to 1 - &lt;a href=&quot;#easeCircleIn&quot;&gt;circleIn&lt;/a&gt;(1 - &lt;em&gt;t&lt;/em&gt;).</source>
          <target state="translated">円のイージングを逆にします。1- &lt;a href=&quot;#easeCircleIn&quot;&gt;circleIn&lt;/a&gt;（1- &lt;em&gt;t&lt;/em&gt;）と同じです。</target>
        </trans-unit>
        <trans-unit id="0dd1ca1bd1196b24f27b1966db3acfcdcdbc6948" translate="yes" xml:space="preserve">
          <source>Reverse cubic easing; equivalent to 1 - &lt;a href=&quot;#easeCubicIn&quot;&gt;cubicIn&lt;/a&gt;(1 - &lt;em&gt;t&lt;/em&gt;). Also equivalent to &lt;a href=&quot;#easePolyOut&quot;&gt;polyOut&lt;/a&gt;.&lt;a href=&quot;#poly_exponent&quot;&gt;exponent&lt;/a&gt;(3).</source>
          <target state="translated">逆三次緩和; 1- &lt;a href=&quot;#easeCubicIn&quot;&gt;cubicIn&lt;/a&gt;（1- &lt;em&gt;t&lt;/em&gt;）と同じです。また、&lt;a href=&quot;#easePolyOut&quot;&gt;polyOut&lt;/a&gt;と同等です。&lt;a href=&quot;#poly_exponent&quot;&gt;指数&lt;/a&gt;（3）。</target>
        </trans-unit>
        <trans-unit id="8c5ffd27dbe59d1b62b2e2e87e5ebfd5129daa9c" translate="yes" xml:space="preserve">
          <source>Reverse elastic easing; equivalent to 1 - &lt;a href=&quot;#easeElasticIn&quot;&gt;elasticIn&lt;/a&gt;(1 - &lt;em&gt;t&lt;/em&gt;).</source>
          <target state="translated">弾性緩和の逆転; 1- &lt;a href=&quot;#easeElasticIn&quot;&gt;elasticIn&lt;/a&gt;（1- &lt;em&gt;t&lt;/em&gt;）と同等です。</target>
        </trans-unit>
        <trans-unit id="a72a8599f779480077618df4c8b5020e89e7e725" translate="yes" xml:space="preserve">
          <source>Reverse exponential easing; equivalent to 1 - &lt;a href=&quot;#easeExpIn&quot;&gt;expIn&lt;/a&gt;(1 - &lt;em&gt;t&lt;/em&gt;).</source>
          <target state="translated">逆指数緩和; 1- &lt;a href=&quot;#easeExpIn&quot;&gt;expIn&lt;/a&gt;（1- &lt;em&gt;t&lt;/em&gt;）と同じです。</target>
        </trans-unit>
        <trans-unit id="2a4d0792dac84b21e2cd1ffc87b860d0c01a0ca2" translate="yes" xml:space="preserve">
          <source>Reverse polynomial easing; equivalent to 1 - &lt;a href=&quot;#easePolyIn&quot;&gt;polyIn&lt;/a&gt;(1 - &lt;em&gt;t&lt;/em&gt;). If the &lt;a href=&quot;#poly_exponent&quot;&gt;exponent&lt;/a&gt; is not specified, it defaults to 3, equivalent to &lt;a href=&quot;#easeCubicOut&quot;&gt;cubicOut&lt;/a&gt;.</source>
          <target state="translated">多項式イージングを逆にします。1- &lt;a href=&quot;#easePolyIn&quot;&gt;polyIn&lt;/a&gt;（1- &lt;em&gt;t&lt;/em&gt;）と同じです。&lt;a href=&quot;#poly_exponent&quot;&gt;指数&lt;/a&gt;が指定されていない場合、デフォルトは3で、&lt;a href=&quot;#easeCubicOut&quot;&gt;cubicOut&lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="f79e730f8a78079ca94b5430e7c7a5a638b91d0b" translate="yes" xml:space="preserve">
          <source>Reverse quadratic easing; equivalent to 1 - &lt;a href=&quot;#easeQuadIn&quot;&gt;quadIn&lt;/a&gt;(1 - &lt;em&gt;t&lt;/em&gt;). Also equivalent to &lt;a href=&quot;#easePolyOut&quot;&gt;polyOut&lt;/a&gt;.&lt;a href=&quot;#poly_exponent&quot;&gt;exponent&lt;/a&gt;(2).</source>
          <target state="translated">逆二次緩和; 1- &lt;a href=&quot;#easeQuadIn&quot;&gt;quadIn&lt;/a&gt;（1- &lt;em&gt;t&lt;/em&gt;）と同じです。また、&lt;a href=&quot;#easePolyOut&quot;&gt;polyOut&lt;/a&gt;と同等です。&lt;a href=&quot;#poly_exponent&quot;&gt;指数&lt;/a&gt;（2）。</target>
        </trans-unit>
        <trans-unit id="2deaf5a4cad3ea323b038ecc21b03bf92dc2c8bf" translate="yes" xml:space="preserve">
          <source>Reverse sinusoidal easing; equivalent to 1 - &lt;a href=&quot;#easeSinIn&quot;&gt;sinIn&lt;/a&gt;(1 - &lt;em&gt;t&lt;/em&gt;).</source>
          <target state="translated">正弦波の緩和を逆にします。1- &lt;a href=&quot;#easeSinIn&quot;&gt;sinIn&lt;/a&gt;（1- &lt;em&gt;t&lt;/em&gt;）と同じです。</target>
        </trans-unit>
        <trans-unit id="e59443519c9025304026c800c637a0c8a04cd4e7" translate="yes" xml:space="preserve">
          <source>Root nodes can also be created from JSON data using &lt;a href=&quot;../../../d3-hierarchy#hierarchy&quot;&gt;d3.hierarchy&lt;/a&gt;. The hierarchy layouts now take these root nodes as input rather than operating directly on JSON data, which helps to provide a cleaner separation between the input data and the computed layout. (For example, use &lt;a href=&quot;../../../d3-hierarchy#node_copy&quot;&gt;&lt;em&gt;node&lt;/em&gt;.copy&lt;/a&gt; to isolate layout changes.) It also simplifies the API: rather than each hierarchy layout needing to implement value and sorting accessors, there are now generic &lt;a href=&quot;../../../d3-hierarchy#node_sum&quot;&gt;&lt;em&gt;node&lt;/em&gt;.sum&lt;/a&gt; and &lt;a href=&quot;../../../d3-hierarchy#node_sort&quot;&gt;&lt;em&gt;node&lt;/em&gt;.sort&lt;/a&gt; methods that work with any hierarchy layout.</source>
          <target state="translated">ルートノードは、&lt;a href=&quot;../../../d3-hierarchy#hierarchy&quot;&gt;d3.hierarchy&lt;/a&gt;を使用してJSONデータから作成することもできます。階層レイアウトは、JSONデータを直接操作するのではなく、これらのルートノードを入力として取得するようになりました。これにより、入力データと計算されたレイアウトを明確に分離できます。（例えば、使用&lt;a href=&quot;../../../d3-hierarchy#node_copy&quot;&gt;&lt;em&gt;ノード&lt;/em&gt; .copy&lt;/a&gt;。単離レイアウトの変更に）また、API簡素化：やや値とソートアクセサを実装するために必要とする各階層のレイアウトに比べを、一般的な今ある&lt;a href=&quot;../../../d3-hierarchy#node_sum&quot;&gt;&lt;em&gt;ノード&lt;/em&gt; .SUM&lt;/a&gt;と&lt;a href=&quot;../../../d3-hierarchy#node_sort&quot;&gt;&lt;em&gt;ノード&lt;/em&gt; .sortの&lt;/a&gt;方法は、任意の階層でその仕事レイアウト。</target>
        </trans-unit>
        <trans-unit id="7e77c5e6ae7a9a88298c25c1dc0e1894ff9fbe47" translate="yes" xml:space="preserve">
          <source>Rounding is sometimes useful for avoiding antialiasing artifacts, though also consider the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering&quot;&gt;shape-rendering&lt;/a&gt; &amp;ldquo;crispEdges&amp;rdquo; styles.</source>
          <target state="translated">丸めは、アンチエイリアスのアーティファクトを回避するのに役立つ場合がありますが、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering&quot;&gt;形状レンダリングの&lt;/a&gt;「クリスプエッジ」スタイルも考慮します。</target>
        </trans-unit>
        <trans-unit id="741d6c4833345e381d4c6ed22dde37b19759453d" translate="yes" xml:space="preserve">
          <source>Sampling</source>
          <target state="translated">Sampling</target>
        </trans-unit>
        <trans-unit id="7e325eabb7b4ff6d2862923fc1dce290890389d0" translate="yes" xml:space="preserve">
          <source>Saturday-based weeks (e.g., February 11, 2012 at 12:00 AM).</source>
          <target state="translated">土曜日を基準とした週(例:2012年2月11日午前12時)。</target>
        </trans-unit>
        <trans-unit id="ffa973433412e49449f4bca9beaa9c12a1fc6ba7" translate="yes" xml:space="preserve">
          <source>Say you have some code that draws to a 2D canvas:</source>
          <target state="translated">2Dキャンバスに描画するコードがあるとします。</target>
        </trans-unit>
        <trans-unit id="a29f0256272e79ca91a1c4e608f09a6264397d12" translate="yes" xml:space="preserve">
          <source>Scale</source>
          <target state="translated">Scale</target>
        </trans-unit>
        <trans-unit id="9534edf3eb5ae2171e1de462d930e2a450adb309" translate="yes" xml:space="preserve">
          <source>Scale Chromatic</source>
          <target state="translated">スケール クロマチック</target>
        </trans-unit>
        <trans-unit id="0b414bdcb7b98eddf425fb46c6be79a2318b8e8c" translate="yes" xml:space="preserve">
          <source>Scales</source>
          <target state="translated">Scales</target>
        </trans-unit>
        <trans-unit id="0a15094526441f17ade24944192e8ab77d66edfd" translate="yes" xml:space="preserve">
          <source>Scales (d3-scale)</source>
          <target state="translated">スケール(d3スケール)</target>
        </trans-unit>
        <trans-unit id="9d29eb7449ef0c1075b23aff6e64ede54629c626" translate="yes" xml:space="preserve">
          <source>Scales are a convenient abstraction for a fundamental task in visualization: mapping a dimension of abstract data to a visual representation. Although most often used for position-encoding quantitative data, such as mapping a measurement in meters to a position in pixels for dots in a scatterplot, scales can represent virtually any visual encoding, such as diverging colors, stroke widths, or symbol size. Scales can also be used with virtually any type of data, such as named categorical data or discrete data that requires sensible breaks.</source>
          <target state="translated">スケールは、抽象的なデータの次元を視覚的な表現にマッピングするという、可視化の基本的な作業のための便利な抽象化です。最もよく使用されるのは、メートル単位の測定値を散布図のドットのピクセル単位の位置にマッピングするような位置エンコーディングの定量データですが、スケールは、発散する色、ストローク幅、シンボルサイズなど、事実上あらゆる視覚的エンコーディングを表現することができます。また、スケールは、名前のついたカテゴリカルなデータや、区切りを必要とする離散データなど、事実上あらゆるタイプのデータにも使用できます。</target>
        </trans-unit>
        <trans-unit id="2d68e0ceccc2ce398c235cbfdecccca020381f39" translate="yes" xml:space="preserve">
          <source>Scales have no intrinsic visual representation. However, most scales can &lt;a href=&quot;#continuous_ticks&quot;&gt;generate&lt;/a&gt; and &lt;a href=&quot;#continuous_tickFormat&quot;&gt;format&lt;/a&gt; ticks for reference marks to aid in the construction of axes.</source>
          <target state="translated">スケールには固有の視覚表現はありません。ただし、ほとんどのスケールでは、軸の作成に役立つ参照マークの目盛りを&lt;a href=&quot;#continuous_ticks&quot;&gt;生成&lt;/a&gt;および&lt;a href=&quot;#continuous_tickFormat&quot;&gt;フォーマット&lt;/a&gt;できます。</target>
        </trans-unit>
        <trans-unit id="45d47c1b569249bce035042fe3cc9f14b34bf91e" translate="yes" xml:space="preserve">
          <source>Scales now generate ticks in the same order as the domain: if you have a descending domain, you now get descending ticks. This change affects the order of tick elements generated by &lt;a href=&quot;#axes-d3-axis&quot;&gt;axes&lt;/a&gt;. For example:</source>
          <target state="translated">スケールは、ドメインと同じ順序でティックを生成するようになりました。降順のドメインがある場合は、ティックが降順で取得されます。この変更は、&lt;a href=&quot;#axes-d3-axis&quot;&gt;Axes&lt;/a&gt;によって生成される目盛り要素の順序に影響します。例えば：</target>
        </trans-unit>
        <trans-unit id="27d89b0bf5ed3db36fe58d2e9c3819f97364323d" translate="yes" xml:space="preserve">
          <source>Schedules a new timer, invoking the specified &lt;em&gt;callback&lt;/em&gt; repeatedly until the timer is &lt;a href=&quot;#timer_stop&quot;&gt;stopped&lt;/a&gt;. An optional numeric &lt;em&gt;delay&lt;/em&gt; in milliseconds may be specified to invoke the given &lt;em&gt;callback&lt;/em&gt; after a delay; if &lt;em&gt;delay&lt;/em&gt; is not specified, it defaults to zero. The delay is relative to the specified &lt;em&gt;time&lt;/em&gt; in milliseconds; if &lt;em&gt;time&lt;/em&gt; is not specified, it defaults to &lt;a href=&quot;#now&quot;&gt;now&lt;/a&gt;.</source>
          <target state="translated">新しいタイマーをスケジュールし、タイマーが&lt;a href=&quot;#timer_stop&quot;&gt;停止する&lt;/a&gt;まで、指定された&lt;em&gt;コールバックを&lt;/em&gt;繰り返し呼び出します。ミリ秒単位のオプションの数値&lt;em&gt;遅延&lt;/em&gt;を指定して、遅延後に特定の&lt;em&gt;コールバック&lt;/em&gt;を呼び出すことができます。&lt;em&gt;delay&lt;/em&gt;が指定されていない場合、デフォルトはゼロです。遅延は、ミリ秒単位の指定された&lt;em&gt;時間に関連&lt;/em&gt;しています。&lt;em&gt;時間&lt;/em&gt;を指定しない場合、デフォルトで&lt;a href=&quot;#now&quot;&gt;nowになり&lt;/a&gt;ます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bce06414177f72ab70e6387b6af9f8ceef0d6049" translate="yes" xml:space="preserve">
          <source>Search</source>
          <target state="translated">Search</target>
        </trans-unit>
        <trans-unit id="2bcb4b1364616430b3b1dcebab111390c7ca2911" translate="yes" xml:space="preserve">
          <source>Seconds (e.g., 01:23:45.0000 AM); 1,000 milliseconds.</source>
          <target state="translated">秒(例:01:23:45.0000 AM)、1,000 ミリ秒。</target>
        </trans-unit>
        <trans-unit id="10174a6b9e9d73bea1a44a75faebf3712815f65a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#_continuous&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#_continuous&quot;&gt;&lt;em&gt;連続を&lt;/em&gt;&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1b33df1c539a78f0c38e9a6d55ac093d60932eff" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#continuous_clamp&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.clamp&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#continuous_clamp&quot;&gt;&lt;em&gt;連続&lt;/em&gt; .clampを&lt;/a&gt;参照&lt;em&gt;して&lt;/em&gt;ください。</target>
        </trans-unit>
        <trans-unit id="566af1ec027996d3b1304c045fd66eea4aa65225" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#continuous_copy&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.copy&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#continuous_copy&quot;&gt;&lt;em&gt;連続&lt;/em&gt; .copyを&lt;/a&gt;参照&lt;em&gt;して&lt;/em&gt;ください。</target>
        </trans-unit>
        <trans-unit id="49efa3bb3066fc154e29bee9a78d0c1e7b053b61" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#continuous_domain&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.domain&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#continuous_domain&quot;&gt;&lt;em&gt;連続&lt;/em&gt; .domainを&lt;/a&gt;参照&lt;em&gt;して&lt;/em&gt;ください。</target>
        </trans-unit>
        <trans-unit id="9d4fffe290f355060a242438c4f002e894dbe3fb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#continuous_domain&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.domain&lt;/a&gt;. Note that a diverging scale&amp;rsquo;s domain must be numeric and must contain exactly three values. The default domain is [0, 0.5, 1].</source>
          <target state="translated">&lt;a href=&quot;#continuous_domain&quot;&gt;&lt;em&gt;連続&lt;/em&gt; .domainを&lt;/a&gt;参照&lt;em&gt;して&lt;/em&gt;ください。発散スケールのドメインは数値でなければならず、正確に3つの値を含む必要があることに注意してください。デフォルトのドメインは[0、0.5、1]です。</target>
        </trans-unit>
        <trans-unit id="46fc13449217bda3f2bdf008dca03a3bb88a386b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#continuous_domain&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.domain&lt;/a&gt;. Note that a sequential scale&amp;rsquo;s domain must be numeric and must contain exactly two values.</source>
          <target state="translated">&lt;a href=&quot;#continuous_domain&quot;&gt;&lt;em&gt;連続&lt;/em&gt; .domainを&lt;/a&gt;参照&lt;em&gt;して&lt;/em&gt;ください。順次スケールのドメインは数値である必要があり、正確に2つの値を含む必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="8c8e753e9847cbc99b4bed5b841da73ff29396a7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#continuous_interpolate&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.interpolate&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#continuous_interpolate&quot;&gt;&lt;em&gt;連続的な&lt;/em&gt; .interpolateを&lt;/a&gt;参照&lt;em&gt;して&lt;/em&gt;ください。</target>
        </trans-unit>
        <trans-unit id="03e63c25b640f8aa8cdfc416d3fc4ebf3526f452" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#continuous_invert&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.invert&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#continuous_invert&quot;&gt;&lt;em&gt;連続&lt;/em&gt; .invertを&lt;/a&gt;参照&lt;em&gt;して&lt;/em&gt;ください。</target>
        </trans-unit>
        <trans-unit id="0096a54057aa03709c3e57db938116b504a4e38e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#continuous_nice&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.nice&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#continuous_nice&quot;&gt;&lt;em&gt;連続&lt;/em&gt; .niceを&lt;/a&gt;参照&lt;em&gt;して&lt;/em&gt;ください。</target>
        </trans-unit>
        <trans-unit id="6f0fb5035fa37fcffd43a6d4fdbf604e518c9d1d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#continuous_range&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.range&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#continuous_range&quot;&gt;&lt;em&gt;連続&lt;/em&gt; .rangeを&lt;/a&gt;参照&lt;em&gt;して&lt;/em&gt;ください。</target>
        </trans-unit>
        <trans-unit id="b1fdac5802956ff62fa279d1b7d8c96ce0173a0e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#continuous_rangeRound&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.rangeRound&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#continuous_rangeRound&quot;&gt;&lt;em&gt;連続的な&lt;/em&gt; .rangeRoundを&lt;/a&gt;参照&lt;em&gt;して&lt;/em&gt;ください。</target>
        </trans-unit>
        <trans-unit id="c349195753faaf2ed75b8ed6a29eb6300f7a702c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#continuous_tickFormat&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.tickFormat&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#continuous_tickFormat&quot;&gt;&lt;em&gt;Continuous&lt;/em&gt; .tickFormatを&lt;/a&gt;参照&lt;em&gt;して&lt;/em&gt;ください。</target>
        </trans-unit>
        <trans-unit id="155b38660117bee44c0fcd85085d8d9c0019f5b9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#continuous_ticks&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.ticks&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#continuous_ticks&quot;&gt;&lt;em&gt;連続&lt;/em&gt; .ticksを&lt;/a&gt;参照&lt;em&gt;して&lt;/em&gt;ください。</target>
        </trans-unit>
        <trans-unit id="8251fdc8fd4539e0dad8309b233a78c0a3599c70" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#diagram_links&quot;&gt;&lt;em&gt;diagram&lt;/em&gt;.links&lt;/a&gt; for more detail.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#diagram_links&quot;&gt;&lt;em&gt;図の&lt;/em&gt; .links&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="0da1b89b3c5c8e3fb9de322261aa1d8e558713c2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#diagram_polygons&quot;&gt;&lt;em&gt;diagram&lt;/em&gt;.polygons&lt;/a&gt; for more detail. Note: an &lt;a href=&quot;#voronoi_extent&quot;&gt;extent&lt;/a&gt; is required.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#diagram_polygons&quot;&gt;&lt;em&gt;図の&lt;/em&gt; .polygons&lt;/a&gt;を参照してください。注：&lt;a href=&quot;#voronoi_extent&quot;&gt;エクステント&lt;/a&gt;が必要です。</target>
        </trans-unit>
        <trans-unit id="9d774ad8fca8e17ee839c99e08536a5d8e9291c4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#diagram_triangles&quot;&gt;&lt;em&gt;diagram&lt;/em&gt;.triangles&lt;/a&gt; for more detail.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#diagram_triangles&quot;&gt;&lt;em&gt;図の&lt;/em&gt; .triangles&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7a8189d8145d57ad8af2683447506b4e62384203" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#geoproject&quot;&gt;geoproject&lt;/a&gt; for an example. See also &lt;a href=&quot;#geoStitch&quot;&gt;d3.geoStitch&lt;/a&gt;.</source>
          <target state="translated">例については、&lt;a href=&quot;#geoproject&quot;&gt;geoproject&lt;/a&gt;を参照してください。&lt;a href=&quot;#geoStitch&quot;&gt;d3.geoStitch&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="ab42a42fd8c20903907c9dc2437c42405b6c25ee" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#locale_format&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.format&lt;/a&gt; for a detailed specification, and try running &lt;a href=&quot;#formatSpecifier&quot;&gt;d3.formatSpecifier&lt;/a&gt; on the above formats to decode their meaning.</source>
          <target state="translated">詳細な仕様については、&lt;a href=&quot;#locale_format&quot;&gt;&lt;em&gt;locale&lt;/em&gt; .format&lt;/a&gt;を参照し、上記の形式で&lt;a href=&quot;#formatSpecifier&quot;&gt;d3.formatSpecifier&lt;/a&gt;を実行して、それらの意味をデコードしてください。</target>
        </trans-unit>
        <trans-unit id="d3fb39ac473e31ac1d01834d9dd056eb53653419" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#namespace&quot;&gt;namespace&lt;/a&gt; for details on supported namespace prefixes, such as for SVG elements.</source>
          <target state="translated">参照の&lt;a href=&quot;#namespace&quot;&gt;名前空間を&lt;/a&gt;、このようなSVG要素のための、サポートされている名前空間接頭辞、の詳細については。</target>
        </trans-unit>
        <trans-unit id="3e31092493bbbfcf9b23ef90aa8c3a9b16b6ff22" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#projection_postclip&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.postclip&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#projection_postclip&quot;&gt;&lt;em&gt;プロジェクション&lt;/em&gt; .postclipを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f9d7099576181c94fb9b357f8eb03ba65a8a4278" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#projection_preclip&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.preclip&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#projection_preclip&quot;&gt;&lt;em&gt;プロジェクション&lt;/em&gt; .preclipを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="382f84e754fd99299bc3b3a78b8e9ffd644ac70e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#selection_data&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.data&lt;/a&gt; for a more complete explanation of this code, which is known as the general update pattern.</source>
          <target state="translated">一般的な更新パターンと呼ばれるこのコードの詳細については、&lt;a href=&quot;#selection_data&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .data&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="1de8ab35b507ad7ab1aa52835957cd134a6bb9e7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#symbols&quot;&gt;symbols&lt;/a&gt; for the set of built-in symbol types. To implement a custom symbol type, pass an object that implements &lt;a href=&quot;#symbolType_draw&quot;&gt;&lt;em&gt;symbolType&lt;/em&gt;.draw&lt;/a&gt;.</source>
          <target state="translated">組み込みシンボルタイプのセットについては、&lt;a href=&quot;#symbols&quot;&gt;シンボル&lt;/a&gt;を参照してください。カスタムシンボルタイプを実装するには、&lt;a href=&quot;#symbolType_draw&quot;&gt;&lt;em&gt;symbolType&lt;/em&gt; .draw&lt;/a&gt;を実装するオブジェクトを渡します。</target>
        </trans-unit>
        <trans-unit id="f4dce46de9260b763e3236a6e3a34625f8ed7139" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#the-life-of-a-transition&quot;&gt;The Life of a Transition&lt;/a&gt; for more. Note that these are &lt;em&gt;not&lt;/em&gt; native DOM events as implemented by &lt;a href=&quot;d3-selection#selection_on&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.on&lt;/a&gt; and &lt;a href=&quot;d3-selection#selection_dispatch&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.dispatch&lt;/a&gt;, but transition events!</source>
          <target state="translated">詳細について&lt;a href=&quot;#the-life-of-a-transition&quot;&gt;は、移行の人生を&lt;/a&gt;ご覧ください。これらは、&lt;a href=&quot;d3-selection#selection_on&quot;&gt;&lt;em&gt;selection&lt;/em&gt;&lt;/a&gt; .onおよび&lt;a href=&quot;d3-selection#selection_dispatch&quot;&gt;&lt;em&gt;selection&lt;/em&gt;&lt;/a&gt; .dispatchによって実装されるネイティブDOMイベントでは&lt;em&gt;なく&lt;/em&gt;、遷移イベントであることに注意してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d71ef699b54e3a08155ff1a32bf09a4d3336f2c1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../../d3-shape#line_context&quot;&gt;&lt;em&gt;line&lt;/em&gt;.context&lt;/a&gt;, &lt;a href=&quot;../../../d3-shape#area_context&quot;&gt;&lt;em&gt;area&lt;/em&gt;.context&lt;/a&gt; and &lt;a href=&quot;../../../d3-shape#arc_context&quot;&gt;&lt;em&gt;arc&lt;/em&gt;.context&lt;/a&gt; for more. Under the hood, shapes use &lt;a href=&quot;#paths-d3-path&quot;&gt;d3-path&lt;/a&gt; to serialize canvas path methods to SVG path data when the context is null; thus, shapes are optimized for rendering to canvas. You can also now derive lines from areas. The line shares most of the same accessors, such as &lt;a href=&quot;../../../d3-shape#line_defined&quot;&gt;&lt;em&gt;line&lt;/em&gt;.defined&lt;/a&gt; and &lt;a href=&quot;../../../d3-shape#line_curve&quot;&gt;&lt;em&gt;line&lt;/em&gt;.curve&lt;/a&gt;, with the area from which it is derived. For example, to render the topline of an area, use &lt;a href=&quot;../../../d3-shape#area_lineY1&quot;&gt;&lt;em&gt;area&lt;/em&gt;.lineY1&lt;/a&gt;; for the baseline, use &lt;a href=&quot;../../../d3-shape#area_lineY0&quot;&gt;&lt;em&gt;area&lt;/em&gt;.lineY0&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;../../../d3-shape#line_context&quot;&gt;&lt;em&gt;line&lt;/em&gt; .context&lt;/a&gt;、&lt;a href=&quot;../../../d3-shape#area_context&quot;&gt;&lt;em&gt;area&lt;/em&gt; .context&lt;/a&gt;、および&lt;a href=&quot;../../../d3-shape#arc_context&quot;&gt;&lt;em&gt;arc&lt;/em&gt; .context&lt;/a&gt;を参照してください。内部では、シェイプは&lt;a href=&quot;#paths-d3-path&quot;&gt;d3-path&lt;/a&gt;を使用して、コンテキストがnullの場合にキャンバスパスメソッドをSVGパスデータにシリアル化します。したがって、シェイプはキャンバスへのレンダリング用に最適化されています。また、エリアからラインを派生させることもできます。この行は、&lt;a href=&quot;../../../d3-shape#line_defined&quot;&gt;&lt;em&gt;line&lt;/em&gt; .defined&lt;/a&gt;や&lt;a href=&quot;../../../d3-shape#line_curve&quot;&gt;&lt;em&gt;line&lt;/em&gt; .curve&lt;/a&gt;などのほとんどの同じアクセサーを、その派生元の領域と共有しています。たとえば、&lt;a href=&quot;../../../d3-shape#area_lineY1&quot;&gt;&lt;em&gt;エリアの&lt;/em&gt;トップライン&lt;/a&gt;をレンダリングするには、&lt;em&gt;area&lt;/em&gt; .lineY1を使用します。ベースラインには、&lt;a href=&quot;../../../d3-shape#area_lineY0&quot;&gt;&lt;em&gt;area&lt;/em&gt; .lineY0を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="4e6cdaee97c1abbebabd24318d30b9a4a0439482" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;d3-dispatch#dispatch_on&quot;&gt;&lt;em&gt;dispatch&lt;/em&gt;.on&lt;/a&gt; and &lt;a href=&quot;#brush-events&quot;&gt;Brush Events&lt;/a&gt; for more.</source>
          <target state="translated">詳細については、&lt;a href=&quot;d3-dispatch#dispatch_on&quot;&gt;&lt;em&gt;ディスパッチ&lt;/em&gt; .on&lt;/a&gt;および&lt;a href=&quot;#brush-events&quot;&gt;ブラシイベント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3b9b4635a60015ac5123b735fba60e0738086cdc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;d3-dispatch#dispatch_on&quot;&gt;&lt;em&gt;dispatch&lt;/em&gt;.on&lt;/a&gt; for details.</source>
          <target state="translated">詳細は&lt;a href=&quot;d3-dispatch#dispatch_on&quot;&gt;&lt;em&gt;ディスパッチ&lt;/em&gt;オン&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f318e23f016d7e25e7b5014ab7ba100764b29a6e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;d3-dispatch#dispatch_on&quot;&gt;&lt;em&gt;dispatch&lt;/em&gt;.on&lt;/a&gt; for more.</source>
          <target state="translated">詳しく&lt;a href=&quot;d3-dispatch#dispatch_on&quot;&gt;&lt;em&gt;は&lt;/em&gt;発送&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="1082b4a9b21ac51d8b64c89c16d8b3d3d0cc97fd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;d3-format&quot;&gt;d3-format&lt;/a&gt; and &lt;a href=&quot;d3-time-format&quot;&gt;d3-time-format&lt;/a&gt; for help creating formatters. For example, to display integers with comma-grouping for thousands:</source>
          <target state="translated">フォーマッタの作成については、&lt;a href=&quot;d3-format&quot;&gt;d3-format&lt;/a&gt;および&lt;a href=&quot;d3-time-format&quot;&gt;d3-time-format&lt;/a&gt;を参照してください。たとえば、数千のカンマグループ化で整数を表示するには：</target>
        </trans-unit>
        <trans-unit id="ff7017c697e0f5ebe9518f5b99b807aa629104ff" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://bl.ocks.org/mbostock/4c5fad723c87d2fd8273&quot;&gt;Sized Donut Multiples&lt;/a&gt; for an example.</source>
          <target state="translated">例については、&lt;a href=&quot;http://bl.ocks.org/mbostock/4c5fad723c87d2fd8273&quot;&gt;サイズ付きドーナツの倍数&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f6524e3450ec47859ca90de2f96443c1d02085ae" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://bl.ocks.org/mbostock/70d5541b547cc222aa02&quot;&gt;chained transitions&lt;/a&gt; for an example.</source>
          <target state="translated">例については、&lt;a href=&quot;http://bl.ocks.org/mbostock/70d5541b547cc222aa02&quot;&gt;遷移の連鎖を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="aa4d56aac1678f907c6688569efa8309e52b9b33" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://geoexamples.com/d3-composite-projections/&quot;&gt;d3-composite-projections&lt;/a&gt; for more examples.</source>
          <target state="translated">その他の例については、&lt;a href=&quot;http://geoexamples.com/d3-composite-projections/&quot;&gt;d3-composite-projections&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="fabad1f5eac02bcc3cf29a9de18f3aaeb1f87296" translate="yes" xml:space="preserve">
          <source>See Eric Brasseur&amp;rsquo;s article, &lt;a href=&quot;https://web.archive.org/web/20160112115812/http://www.4p8.com/eric.brasseur/gamma.html&quot;&gt;Gamma error in picture scaling&lt;/a&gt;, for more on gamma correction.</source>
          <target state="translated">ガンマ補正の詳細については、Eric Brasseurの記事「&lt;a href=&quot;https://web.archive.org/web/20160112115812/http://www.4p8.com/eric.brasseur/gamma.html&quot;&gt;画像のスケーリングにおけるガンマエラー&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="6f69a3c0d1e2c6d9abd438faee79cfebeecfad7d" translate="yes" xml:space="preserve">
          <source>See Philippe Rivi&amp;egrave;re&amp;rsquo;s &lt;a href=&quot;http://bl.ocks.org/Fil/1b7ddbcd71454d685d1259781968aefc&quot;&gt;bl.ocks.org/1b7ddbcd71454d685d1259781968aefc&lt;/a&gt; for an example.</source>
          <target state="translated">例については、PhilippeRivi&amp;egrave;reの&lt;a href=&quot;http://bl.ocks.org/Fil/1b7ddbcd71454d685d1259781968aefc&quot;&gt;bl.ocks.org/1b7ddbcd71454d685d1259781968aefc&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e05e28d2118084c81b8dae83851d13eb59ea6c24" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#axis_ticks&quot;&gt;&lt;em&gt;axis&lt;/em&gt;.ticks&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#axis_ticks&quot;&gt;&lt;em&gt;axis&lt;/em&gt; .ticks&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="4ecce8d59bcb2122a42ee06b6d10d80940430926" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#csv&quot;&gt;d3.csv&lt;/a&gt; and &lt;a href=&quot;#tsv&quot;&gt;d3.tsv&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#csv&quot;&gt;d3.csv&lt;/a&gt;および&lt;a href=&quot;#tsv&quot;&gt;d3.tsv&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="bc0132b25623d0ab3aaef18aa79a3f3e423f7500" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#delaunay_render&quot;&gt;&lt;em&gt;delaunay&lt;/em&gt;.render&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#delaunay_render&quot;&gt;&lt;em&gt;delaunay&lt;/em&gt; .render&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="38c14447aae63785e3453d67301597f186aa3f57" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#delaunay_renderHull&quot;&gt;&lt;em&gt;delaunay&lt;/em&gt;.renderHull&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#delaunay_renderHull&quot;&gt;&lt;em&gt;delaunay&lt;/em&gt; .renderHull&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="b75f557bbcfc364114ffc6108bbf8ffb34272d79" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#delaunay_renderTriangle&quot;&gt;&lt;em&gt;delaunay&lt;/em&gt;.renderTriangle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#delaunay_renderTriangle&quot;&gt;&lt;em&gt;delaunay&lt;/em&gt; .renderTriangle&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="e67f44316c405df4bbc114c1cebd3f0825e6027f" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#geoProject&quot;&gt;d3.geoProject&lt;/a&gt; and &lt;a href=&quot;d3-geo#geoIdentity&quot;&gt;d3.geoIdentity&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#geoProject&quot;&gt;d3.geoProject&lt;/a&gt;および&lt;a href=&quot;d3-geo#geoIdentity&quot;&gt;d3.geoIdentity&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="92807d0473d53fba846934dd52b373583bc4ea2d" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#geoproject&quot;&gt;geoproject&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#geoproject&quot;&gt;geoproject&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="71c118bfda6081e8ae4fb1d04978a1bc345d5e88" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#geoproject_precision&quot;&gt;geoproject --precision&lt;/a&gt; and &lt;a href=&quot;#geo2svg_precision&quot;&gt;geo2svg --precision&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#geoproject_precision&quot;&gt;geoproject --precision&lt;/a&gt;および&lt;a href=&quot;#geo2svg_precision&quot;&gt;geo2svg --precision&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="168d630dc14cbc8f2d3b169252403f092a9bd49d" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#geostitch&quot;&gt;geostitch&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#geostitch&quot;&gt;geostitch&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="67b1a76a49b5673b969ee67b2508854e6808b4ef" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#nests&quot;&gt;nests&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#nests&quot;&gt;巣&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="519f664133691da411898ce07f5d6a124c9af8d0" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#projection_postclip&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.postclip&lt;/a&gt;, &lt;a href=&quot;#geoClipRectangle&quot;&gt;d3.geoClipRectangle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#projection_postclip&quot;&gt;&lt;em&gt;Projection&lt;/em&gt; .postclip&lt;/a&gt;、&lt;a href=&quot;#geoClipRectangle&quot;&gt;d3.geoClipRectangle&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="ddbd5b15ff1b6e38142c8fbab3b8eaa6b8ae90d5" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#projection_preclip&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.preclip&lt;/a&gt;, &lt;a href=&quot;#geoClipAntimeridian&quot;&gt;d3.geoClipAntimeridian&lt;/a&gt;, &lt;a href=&quot;#geoClipCircle&quot;&gt;d3.geoClipCircle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#projection_preclip&quot;&gt;&lt;em&gt;Projection&lt;/em&gt; .preclip&lt;/a&gt;、&lt;a href=&quot;#geoClipAntimeridian&quot;&gt;d3.geoClipAntimeridian&lt;/a&gt;、&lt;a href=&quot;#geoClipCircle&quot;&gt;d3.geoClipCircle&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="b22e295c62d29df16397362ea642164ee96e9087" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#scan&quot;&gt;scan&lt;/a&gt; and &lt;a href=&quot;#extent&quot;&gt;extent&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#scan&quot;&gt;スキャン&lt;/a&gt;と&lt;a href=&quot;#extent&quot;&gt;エクステント&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="81097f6d1ed5c4e75a6cbc0352ba3ce46d1a12d0" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;d3-tile&quot;&gt;d3-tile&lt;/a&gt; for examples panning and zooming maps.</source>
          <target state="translated">マップのパンとズームの例については、&lt;a href=&quot;d3-tile&quot;&gt;d3-tile&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="72bb0f0cba6328c4462426ff0bd3265fb082423f" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;#pies&quot;&gt;pie generator&lt;/a&gt;, which computes the necessary angles to represent an array of data as a pie or donut chart; these angles can then be passed to an arc generator.</source>
          <target state="translated">データの配列を円グラフまたはドーナツグラフとして表すために必要な角度を計算する&lt;a href=&quot;#pies&quot;&gt;円ジェネレータ&lt;/a&gt;も参照してください。これらの角度は、アークジェネレーターに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="8e3ef4ef46bea469f1c0d5fde342799a603cccb8" translate="yes" xml:space="preserve">
          <source>Select a one- or two-dimensional region using the mouse or touch.</source>
          <target state="translated">マウスやタッチで一次元または二次元の領域を選択します。</target>
        </trans-unit>
        <trans-unit id="7bd81cf8431bbb2960e94aabeae184064fc0b96c" translate="yes" xml:space="preserve">
          <source>Selecting Elements</source>
          <target state="translated">要素の選択</target>
        </trans-unit>
        <trans-unit id="d1f8e5ea93b2f5a69528707c67d3952e9002539b" translate="yes" xml:space="preserve">
          <source>Selection</source>
          <target state="translated">Selection</target>
        </trans-unit>
        <trans-unit id="0d289e7930d1e16bb163ba3c9d39caca66702337" translate="yes" xml:space="preserve">
          <source>Selection Multi</source>
          <target state="translated">セレクションマルチ</target>
        </trans-unit>
        <trans-unit id="6d34df51f7b7dd605fba697db950d3db8db74296" translate="yes" xml:space="preserve">
          <source>Selection methods accept &lt;a href=&quot;http://www.w3.org/TR/selectors-api/&quot;&gt;W3C selector strings&lt;/a&gt; such as &lt;code&gt;.fancy&lt;/code&gt; to select elements with the class &lt;em&gt;fancy&lt;/em&gt;, or &lt;code&gt;div&lt;/code&gt; to select DIV elements. Selection methods come in two forms: select and selectAll: the former selects only the first matching element, while the latter selects all matching elements in document order. The top-level selection methods, &lt;a href=&quot;#select&quot;&gt;d3.select&lt;/a&gt; and &lt;a href=&quot;#selectAll&quot;&gt;d3.selectAll&lt;/a&gt;, query the entire document; the subselection methods, &lt;a href=&quot;#selection_select&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.select&lt;/a&gt; and &lt;a href=&quot;#selection_selectAll&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.selectAll&lt;/a&gt;, restrict selection to descendants of the selected elements.</source>
          <target state="translated">選択メソッドは、 &lt;code&gt;.fancy&lt;/code&gt; などの&lt;a href=&quot;http://www.w3.org/TR/selectors-api/&quot;&gt;W3Cセレクター文字列を&lt;/a&gt;受け入れて、クラス&lt;em&gt;fancyの&lt;/em&gt;要素を選択するか、 &lt;code&gt;div&lt;/code&gt; で DIV要素を選択します。選択メソッドには、selectとselectAllの2つの形式があります。前者は最初に一致する要素のみを選択し、後者は一致するすべての要素をドキュメント順に選択します。最上位の選択メソッド&lt;a href=&quot;#select&quot;&gt;d3.select&lt;/a&gt;および&lt;a href=&quot;#selectAll&quot;&gt;d3.selectAllは&lt;/a&gt;、ドキュメント全体をクエリします。副&lt;a href=&quot;#selection_select&quot;&gt;&lt;em&gt;選択&lt;/em&gt;&lt;/a&gt;メソッドである&lt;em&gt;selection&lt;/em&gt; .selectおよび&lt;a href=&quot;#selection_selectAll&quot;&gt;&lt;em&gt;selection&lt;/em&gt;&lt;/a&gt; .selectAllは、選択を選択した要素の子孫に制限します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c85f8f4ac171cc0f121a2429198d88d1cdeb17ad" translate="yes" xml:space="preserve">
          <source>Selection methods typically return the current selection, or a new selection, allowing the concise application of multiple operations on a given selection via method chaining. For example, to set the class and color style of all paragraph elements in the current document:</source>
          <target state="translated">選択範囲メソッドは通常、現在の選択範囲または新しい選択範囲を返すので、メソッドを連鎖させることで、与えられた選択範囲に対して複数の操作を簡潔に適用することができます。たとえば、現在のドキュメント内のすべての段落要素のクラスとカラースタイルを設定します。</target>
        </trans-unit>
        <trans-unit id="b299f87931b9593c6d8ec040d555f7dd65d03b07" translate="yes" xml:space="preserve">
          <source>Selections</source>
          <target state="translated">Selections</target>
        </trans-unit>
        <trans-unit id="4dee8f33df235d22f6514d319ddc94ab00a4170c" translate="yes" xml:space="preserve">
          <source>Selections (d3-selection)</source>
          <target state="translated">選択肢(d3-選択)</target>
        </trans-unit>
        <trans-unit id="c16f6e59c668b27f55da5abb04136a07fe5e54f4" translate="yes" xml:space="preserve">
          <source>Selections allow powerful data-driven transformation of the document object model (DOM): set &lt;a href=&quot;#selection_attr&quot;&gt;attributes&lt;/a&gt;, &lt;a href=&quot;#selection_style&quot;&gt;styles&lt;/a&gt;, &lt;a href=&quot;#selection_property&quot;&gt;properties&lt;/a&gt;, &lt;a href=&quot;#selection_html&quot;&gt;HTML&lt;/a&gt; or &lt;a href=&quot;#selection_text&quot;&gt;text&lt;/a&gt; content, and more. Using the &lt;a href=&quot;#joining-data&quot;&gt;data join&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;#selection_enter&quot;&gt;enter&lt;/a&gt; and &lt;a href=&quot;#selection_enter&quot;&gt;exit&lt;/a&gt; selections, you can also &lt;a href=&quot;#selection_append&quot;&gt;add&lt;/a&gt; or &lt;a href=&quot;#selection_remove&quot;&gt;remove&lt;/a&gt; elements to correspond to data.</source>
          <target state="translated">選択により、ドキュメントオブジェクトモデル（DOM）の強力なデータ駆動型変換が可能になり&lt;a href=&quot;#selection_attr&quot;&gt;ます。属性&lt;/a&gt;、&lt;a href=&quot;#selection_style&quot;&gt;スタイル&lt;/a&gt;、&lt;a href=&quot;#selection_property&quot;&gt;プロパティ&lt;/a&gt;、&lt;a href=&quot;#selection_html&quot;&gt;HTML&lt;/a&gt;または&lt;a href=&quot;#selection_text&quot;&gt;テキスト&lt;/a&gt;コンテンツなどを設定します。&lt;a href=&quot;#joining-data&quot;&gt;データ結合&lt;/a&gt;の&lt;a href=&quot;#selection_enter&quot;&gt;開始&lt;/a&gt;と&lt;a href=&quot;#selection_enter&quot;&gt;終了の&lt;/a&gt;選択を使用して、データに対応&lt;a href=&quot;#selection_remove&quot;&gt;する&lt;/a&gt;要素を&lt;a href=&quot;#selection_append&quot;&gt;追加&lt;/a&gt;または削除することもできます。</target>
        </trans-unit>
        <trans-unit id="0f0e44cc74c01d82f4e63afa12876d7a2f362f70" translate="yes" xml:space="preserve">
          <source>Selections are immutable. All selection methods that affect which elements are selected (or their order) return a new selection rather than modifying the current selection. However, note that elements are necessarily mutable, as selections drive transformations of the document!</source>
          <target state="translated">選択範囲は不変です。選択される要素 (あるいはその順序)に影響を与えるすべての選択メソッドは、現在の選択範囲を変更するのではなく、新しい選択範囲を返します。しかし、選択によって文書が変形されるため、要素は必ずしも変異可能であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="043992d6be6d2b5a8d67053cad39a1c46a50f378" translate="yes" xml:space="preserve">
          <source>Selections are now immutable: the elements and parents in a selection never change. (The elements&amp;rsquo; attributes and content will of course still be modified!) The &lt;a href=&quot;../../../d3-selection#selection_sort&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.sort&lt;/a&gt; and &lt;a href=&quot;../../../d3-selection#selection_data&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.data&lt;/a&gt; methods now return new selections rather than modifying the selection in-place. In addition, &lt;a href=&quot;../../../d3-selection#selection_append&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.append&lt;/a&gt; no longer merges entering nodes into the update selection; use &lt;a href=&quot;../../../d3-selection#selection_merge&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.merge&lt;/a&gt; to combine enter and update after a data join. For example, the following &lt;a href=&quot;https://bl.ocks.org/mbostock/a8a5baa4c4a470cda598&quot;&gt;general update pattern&lt;/a&gt; in 3.x:</source>
          <target state="translated">選択範囲は不変になりました。選択範囲の要素と親は変更されません。 （もちろん、要素の属性とコンテンツは引き続き変更されます！）&lt;a href=&quot;../../../d3-selection#selection_sort&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .sort&lt;/a&gt;および&lt;a href=&quot;../../../d3-selection#selection_data&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .data&lt;/a&gt;メソッドは、選択をインプレースで変更するのではなく、新しい選択を返すようになりました。さらに、&lt;a href=&quot;../../../d3-selection#selection_append&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .append&lt;/a&gt;は、入力ノードを更新選択にマージしなくなりました。&lt;a href=&quot;../../../d3-selection#selection_merge&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .merge&lt;/a&gt;を使用して、データ結合後にEnterとUpdateを組み合わせます。たとえば、3.xの次の&lt;a href=&quot;https://bl.ocks.org/mbostock/a8a5baa4c4a470cda598&quot;&gt;一般的な更新パターン&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="8eee0cea4216462ae0c510d5c995f570272cf665" translate="yes" xml:space="preserve">
          <source>Selections have several new methods! Use &lt;a href=&quot;../../../d3-selection#selection_raise&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.raise&lt;/a&gt; to move the selected elements to the front of their siblings, so that they are drawn on top; use &lt;a href=&quot;../../../d3-selection#selection_lower&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.lower&lt;/a&gt; to move them to the back. Use &lt;a href=&quot;../../../d3-selection#selection_dispatch&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.dispatch&lt;/a&gt; to dispatch a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent&quot;&gt;custom event&lt;/a&gt; to event listeners.</source>
          <target state="translated">セレクションにはいくつかの新しいメソッドがあります！&lt;a href=&quot;../../../d3-selection#selection_raise&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .raise&lt;/a&gt;を使用して、選択した要素を兄弟の前に移動し、上に描画されるようにします。それらを後ろに移動するには、&lt;a href=&quot;../../../d3-selection#selection_lower&quot;&gt;&lt;em&gt;選択&lt;/em&gt; .lower&lt;/a&gt;を使用します。&lt;a href=&quot;../../../d3-selection#selection_dispatch&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .dispatch&lt;/a&gt;を使用して、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent&quot;&gt;カスタムイベント&lt;/a&gt;をイベントリスナーにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="bb65ea8f317f92719404ceb25891058e77222aab" translate="yes" xml:space="preserve">
          <source>Selections no longer subclass Array using &lt;a href=&quot;http://perfectionkills.com/how-ecmascript-5-still-does-not-allow-to-subclass-an-array/#wrappers_prototype_chain_injection&quot;&gt;prototype chain injection&lt;/a&gt;; they are now plain objects, improving performance. The internal fields (&lt;em&gt;selection&lt;/em&gt;._groups, &lt;em&gt;selection&lt;/em&gt;._parents) are private; please use the documented public API to manipulate selections. The new &lt;a href=&quot;../../../d3-selection#selection_nodes&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.nodes&lt;/a&gt; method generates an array of all nodes in a selection.</source>
          <target state="translated">選択は&lt;a href=&quot;http://perfectionkills.com/how-ecmascript-5-still-does-not-allow-to-subclass-an-array/#wrappers_prototype_chain_injection&quot;&gt;プロトタイプチェーンインジェクション&lt;/a&gt;を使用してArrayをサブクラス化しなくなりました。現在はプレーンオブジェクトになり、パフォーマンスが向上しています。内部フィールド（&lt;em&gt;selection&lt;/em&gt; ._groups、&lt;em&gt;selection&lt;/em&gt; ._parents）はプライベートです。文書化されたパブリックAPIを使用して選択を操作してください。新しい&lt;a href=&quot;../../../d3-selection#selection_nodes&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .nodes&lt;/a&gt;メソッドは、&lt;em&gt;選択&lt;/em&gt;範囲内のすべてのノードの配列を生成します。</target>
        </trans-unit>
        <trans-unit id="f5b04e96c5e0ac8bda964dcd1315ee33dfccffa7" translate="yes" xml:space="preserve">
          <source>Selects all elements that match the specified &lt;em&gt;selector&lt;/em&gt; string. The elements will be selected in document order (top-to-bottom). If no elements in the document match the &lt;em&gt;selector&lt;/em&gt;, or if the &lt;em&gt;selector&lt;/em&gt; is null or undefined, returns an empty selection. For example, to select all paragraphs:</source>
          <target state="translated">指定された&lt;em&gt;セレクター&lt;/em&gt;文字列に一致するすべての要素を&lt;em&gt;選択し&lt;/em&gt;ます。要素はドキュメントの順序（上から下）で選択されます。ドキュメント内のどの要素も&lt;em&gt;selector&lt;/em&gt;と一致しない場合、または&lt;em&gt;selector&lt;/em&gt;がnullまたは未定義の場合は、空の選択を返します。たとえば、すべての段落を選択するには：</target>
        </trans-unit>
        <trans-unit id="90dc76078baee2a387ff50ee2d19f571d46d46f1" translate="yes" xml:space="preserve">
          <source>Selects the first element that matches the specified &lt;em&gt;selector&lt;/em&gt; string. If no elements match the &lt;em&gt;selector&lt;/em&gt;, returns an empty selection. If multiple elements match the &lt;em&gt;selector&lt;/em&gt;, only the first matching element (in document order) will be selected. For example, to select the first anchor element:</source>
          <target state="translated">指定された&lt;em&gt;セレクター&lt;/em&gt;文字列に一致する最初の要素を&lt;em&gt;選択し&lt;/em&gt;ます。&lt;em&gt;セレクタ&lt;/em&gt;に一致する要素がない場合は、空の選択を返します。複数の要素が&lt;em&gt;セレクター&lt;/em&gt;に一致する場合、最初に一致する要素（ドキュメント順）のみが選択されます。たとえば、最初のアンカー要素を選択するには：</target>
        </trans-unit>
        <trans-unit id="f7eae28574dc8d86c6bbcce93b6833d3f8468b24" translate="yes" xml:space="preserve">
          <source>Separate concerns using named callbacks.</source>
          <target state="translated">名前付きコールバックを使用して、懸念事項を分離します。</target>
        </trans-unit>
        <trans-unit id="96ee9970964e8d8bc8410054cfef41dcaba89cf5" translate="yes" xml:space="preserve">
          <source>Separate path elements are typically slower than a single path element. However, distinct path elements are useful for styling and interaction (e.g., click or mouseover). Canvas rendering (see &lt;a href=&quot;#path_context&quot;&gt;&lt;em&gt;path&lt;/em&gt;.context&lt;/a&gt;) is typically faster than SVG, but requires more effort to implement styling and interaction.</source>
          <target state="translated">通常、個別のパス要素は単一のパス要素よりも低速です。ただし、個別のパス要素は、スタイル設定や操作（クリックやマウスオーバーなど）に役立ちます。キャンバスのレンダリング（&lt;a href=&quot;#path_context&quot;&gt;&lt;em&gt;path&lt;/em&gt; .contextを&lt;/a&gt;参照）は、通常、SVGよりも高速ですが、スタイリングと対話を実装するためにより多くの労力が必要です。</target>
        </trans-unit>
        <trans-unit id="0edc0112db95758e96c3f9613104687a95e00afc" translate="yes" xml:space="preserve">
          <source>Sequential</source>
          <target state="translated">Sequential</target>
        </trans-unit>
        <trans-unit id="4216b63ad7a2b6eb3baa4016c009cde778578212" translate="yes" xml:space="preserve">
          <source>Sequential (Multi-Hue)</source>
          <target state="translated">シーケンシャル(マルチ色相</target>
        </trans-unit>
        <trans-unit id="4cf7b7f7d5b09358e95da7015bd735f1cb6dcd62" translate="yes" xml:space="preserve">
          <source>Sequential (Single Hue)</source>
          <target state="translated">シーケンシャル(単一色相</target>
        </trans-unit>
        <trans-unit id="afd48e59ce3328520b3f4d17fd584a93dcd6ffc8" translate="yes" xml:space="preserve">
          <source>Sequential Scales</source>
          <target state="translated">逐次スケール</target>
        </trans-unit>
        <trans-unit id="9039b0d4da901235974bd8a88a1edeaec95cfa42" translate="yes" xml:space="preserve">
          <source>Sequential scales, like &lt;a href=&quot;#diverging-scales&quot;&gt;diverging scales&lt;/a&gt;, are similar to &lt;a href=&quot;#continuous-scales&quot;&gt;continuous scales&lt;/a&gt; in that they map a continuous, numeric input domain to a continuous output range. However, unlike continuous scales, the output range of a sequential scale is fixed by its interpolator and not configurable. These scales do not expose &lt;a href=&quot;#continuous_invert&quot;&gt;invert&lt;/a&gt;, &lt;a href=&quot;#continuous_range&quot;&gt;range&lt;/a&gt;, &lt;a href=&quot;#continuous_rangeRound&quot;&gt;rangeRound&lt;/a&gt; and &lt;a href=&quot;#continuous_interpolate&quot;&gt;interpolate&lt;/a&gt; methods.</source>
          <target state="translated">シーケンシャルスケールは、&lt;a href=&quot;#diverging-scales&quot;&gt;分岐スケール&lt;/a&gt;と同様に、連続的な数値入力ドメインを連続的な出力範囲にマッピングするという点で、&lt;a href=&quot;#continuous-scales&quot;&gt;連続的なスケール&lt;/a&gt;に似ています。ただし、連続スケールとは異なり、順次スケールの出力範囲は補間器によって固定され、構成できません。これらのスケールは、&lt;a href=&quot;#continuous_invert&quot;&gt;invert&lt;/a&gt;、&lt;a href=&quot;#continuous_range&quot;&gt;range&lt;/a&gt;、&lt;a href=&quot;#continuous_rangeRound&quot;&gt;rangeRound&lt;/a&gt;および&lt;a href=&quot;#continuous_interpolate&quot;&gt;interpolate&lt;/a&gt;メソッドを公開しません。</target>
        </trans-unit>
        <trans-unit id="174f3856c68496cde9504b592e10fd9dce70ff21" translate="yes" xml:space="preserve">
          <source>Sequential, multi-hue color schemes are available as continuous interpolators (often used with &lt;a href=&quot;d3-scale#sequential-scales&quot;&gt;d3.scaleSequential&lt;/a&gt;) and as discrete schemes (often used with &lt;a href=&quot;d3-scale#ordinal-scales&quot;&gt;d3.scaleOrdinal&lt;/a&gt;). Each discrete scheme, such as &lt;a href=&quot;#schemeBuGn&quot;&gt;d3.schemeBuGn&lt;/a&gt;, is represented as an array of arrays of hexadecimal color strings. The &lt;em&gt;k&lt;/em&gt;th element of this array contains the color scheme of size &lt;em&gt;k&lt;/em&gt;; for example, &lt;code&gt;d3.schemeBuGn[9]&lt;/code&gt; contains an array of nine strings representing the nine colors of the blue-green sequential color scheme. Sequential, multi-hue color schemes support a size &lt;em&gt;k&lt;/em&gt; ranging from 3 to 9.</source>
          <target state="translated">順次、多色カラースキームは、連続補間（しばしばで使用されるように利用可能である&lt;a href=&quot;d3-scale#sequential-scales&quot;&gt;d3.scaleSequential&lt;/a&gt;）と離散スキーム（しばしばで使用されるような&lt;a href=&quot;d3-scale#ordinal-scales&quot;&gt;d3.scaleOrdinal&lt;/a&gt;）。&lt;a href=&quot;#schemeBuGn&quot;&gt;d3.schemeBuGn&lt;/a&gt;などの各離散スキームは、16進数のカラー文字列の配列の配列として表されます。この配列の&lt;em&gt;k&lt;/em&gt;番目の要素には、サイズ&lt;em&gt;kの&lt;/em&gt;配色が含まれます。たとえば、 &lt;code&gt;d3.schemeBuGn[9]&lt;/code&gt; には、青緑色の順次カラースキームの9色を表す9つの文字列の配列が含まれています。順次、複数の色相の配色は、3〜9の範囲のサイズ&lt;em&gt;kを&lt;/em&gt;サポートします。</target>
        </trans-unit>
        <trans-unit id="116f9c27be5ae014debb09d70ec07a94d0df97b4" translate="yes" xml:space="preserve">
          <source>Sequential, single-hue color schemes are available as continuous interpolators (often used with &lt;a href=&quot;d3-scale#sequential-scales&quot;&gt;d3.scaleSequential&lt;/a&gt;) and as discrete schemes (often used with &lt;a href=&quot;d3-scale#ordinal-scales&quot;&gt;d3.scaleOrdinal&lt;/a&gt;). Each discrete scheme, such as &lt;a href=&quot;#schemeBlues&quot;&gt;d3.schemeBlues&lt;/a&gt;, is represented as an array of arrays of hexadecimal color strings. The &lt;em&gt;k&lt;/em&gt;th element of this array contains the color scheme of size &lt;em&gt;k&lt;/em&gt;; for example, &lt;code&gt;d3.schemeBlues[9]&lt;/code&gt; contains an array of nine strings representing the nine colors of the blue sequential color scheme. Sequential, single-hue color schemes support a size &lt;em&gt;k&lt;/em&gt; ranging from 3 to 9.</source>
          <target state="translated">順次、単一色相のカラースキームは、連続補間（しばしばで使用されるように利用可能である&lt;a href=&quot;d3-scale#sequential-scales&quot;&gt;d3.scaleSequential&lt;/a&gt;）と離散スキーム（しばしばで使用されるような&lt;a href=&quot;d3-scale#ordinal-scales&quot;&gt;d3.scaleOrdinal&lt;/a&gt;）。&lt;a href=&quot;#schemeBlues&quot;&gt;d3.schemeBlues&lt;/a&gt;などの各離散スキームは、16進数のカラー文字列の配列の配列として表されます。この配列の&lt;em&gt;k&lt;/em&gt;番目の要素には、サイズ&lt;em&gt;kの&lt;/em&gt;配色が含まれます。たとえば、 &lt;code&gt;d3.schemeBlues[9]&lt;/code&gt; には、青の順次カラースキームの9色を表す9つの文字列の配列が含まれています。シーケンシャルな単一色の配色は、3〜9の範囲のサイズ&lt;em&gt;kを&lt;/em&gt;サポートします。</target>
        </trans-unit>
        <trans-unit id="7eeb43823dba177e739d2beb35f53545e1b86800" translate="yes" xml:space="preserve">
          <source>Serialize Canvas path commands to SVG.</source>
          <target state="translated">CanvasパスコマンドをSVGにシリアライズします。</target>
        </trans-unit>
        <trans-unit id="0c3aae570a54aebbfb2593834fcd1b45f852d1d2" translate="yes" xml:space="preserve">
          <source>Seth</source>
          <target state="translated">Seth</target>
        </trans-unit>
        <trans-unit id="2ab262f44dfc9e1ee8adf98c1aa64de34434fa83" translate="yes" xml:space="preserve">
          <source>Sets</source>
          <target state="translated">Sets</target>
        </trans-unit>
        <trans-unit id="aea6d2122db79d93fe64d9c1aaa6b7d22ce6615f" translate="yes" xml:space="preserve">
          <source>Sets the &lt;em&gt;arguments&lt;/em&gt; that will be passed to &lt;a href=&quot;d3-scale#continuous_ticks&quot;&gt;&lt;em&gt;scale&lt;/em&gt;.ticks&lt;/a&gt; and &lt;a href=&quot;d3-scale#continuous_tickFormat&quot;&gt;&lt;em&gt;scale&lt;/em&gt;.tickFormat&lt;/a&gt; when the axis is &lt;a href=&quot;#_axis&quot;&gt;rendered&lt;/a&gt;, and returns the axis generator. The meaning of the &lt;em&gt;arguments&lt;/em&gt; depends on the &lt;a href=&quot;#axis_scale&quot;&gt;axis&amp;rsquo; scale&lt;/a&gt; type: most commonly, the arguments are a suggested &lt;em&gt;count&lt;/em&gt; for the number of ticks (or a &lt;a href=&quot;d3-time&quot;&gt;time &lt;em&gt;interval&lt;/em&gt;&lt;/a&gt; for time scales), and an optional &lt;a href=&quot;d3-format&quot;&gt;format &lt;em&gt;specifier&lt;/em&gt;&lt;/a&gt; to customize how the tick values are formatted.</source>
          <target state="translated">軸が&lt;a href=&quot;#_axis&quot;&gt;レンダリングされる&lt;/a&gt;ときに&lt;a href=&quot;d3-scale#continuous_ticks&quot;&gt;&lt;em&gt;scale&lt;/em&gt;&lt;/a&gt; .ticksおよび&lt;a href=&quot;d3-scale#continuous_tickFormat&quot;&gt;&lt;em&gt;scale&lt;/em&gt;&lt;/a&gt; .tickFormatに渡される&lt;em&gt;引数&lt;/em&gt;を設定し、軸ジェネレーターを返します。&lt;em&gt;引数&lt;/em&gt;の意味は、&lt;a href=&quot;#axis_scale&quot;&gt;軸のスケール&lt;/a&gt;タイプによって異なります。最も一般的には、引数は、目盛りの数（または時間スケールの&lt;a href=&quot;d3-time&quot;&gt;時間&lt;/a&gt;&lt;em&gt;間隔&lt;/em&gt;）の推奨&lt;em&gt;カウント&lt;/em&gt;、および目盛り値のフォーマット方法をカスタマイズするオプションの&lt;a href=&quot;d3-format&quot;&gt;フォーマット&lt;/a&gt;&lt;em&gt;指定子&lt;/em&gt;です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fcf458771db25872130c20b1b1bd9df6b3e010ca" translate="yes" xml:space="preserve">
          <source>Sets the &lt;em&gt;callback&lt;/em&gt; to be invoked when all deferred tasks have finished. The first argument to the &lt;em&gt;callback&lt;/em&gt; is the first error that occurred, or null if no error occurred. If an error occurred, there are no additional arguments to the callback. Otherwise, the &lt;em&gt;callback&lt;/em&gt; is also passed an array of results as the second argument. For example:</source>
          <target state="translated">すべての遅延タスクが終了したときに呼び出されるように&lt;em&gt;コールバック&lt;/em&gt;を設定し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;コールバック&lt;/em&gt;の最初の引数は、発生した最初のエラーです。エラーが発生しなかった場合はnullです。エラーが発生した場合、コールバックへの追加の引数はありません。それ以外の場合、&lt;em&gt;コールバックに&lt;/em&gt;は2番目の引数として結果の配列も渡されます。例えば：</target>
        </trans-unit>
        <trans-unit id="d2861e81b3cf09e1dd01181b0c58d8772c8fc0ec" translate="yes" xml:space="preserve">
          <source>Sets the &lt;em&gt;callback&lt;/em&gt; to be invoked when all deferred tasks have finished. The first argument to the &lt;em&gt;callback&lt;/em&gt; is the first error that occurred, or null if no error occurred. If an error occurred, there are no additional arguments to the callback. Otherwise, the &lt;em&gt;callback&lt;/em&gt; is passed each result as an additional argument. For example:</source>
          <target state="translated">すべての遅延タスクが終了したときに呼び出されるように&lt;em&gt;コールバック&lt;/em&gt;を設定し&lt;em&gt;ます&lt;/em&gt;。&lt;em&gt;コールバック&lt;/em&gt;の最初の引数は、発生した最初のエラーです。エラーが発生しなかった場合はnullです。エラーが発生した場合、コールバックへの追加の引数はありません。それ以外の場合、&lt;em&gt;コールバック&lt;/em&gt;は追加の引数として各結果を渡します。例えば：</target>
        </trans-unit>
        <trans-unit id="b17d93fbefa260a049595c89079dc334ceafe8f5" translate="yes" xml:space="preserve">
          <source>Sets the &lt;em&gt;value&lt;/em&gt; for the specified &lt;em&gt;key&lt;/em&gt; string. If the map previously had an entry for the same &lt;em&gt;key&lt;/em&gt; string, the old entry is replaced with the new value. Returns the map, allowing chaining. For example:</source>
          <target state="translated">指定された&lt;em&gt;キー&lt;/em&gt;文字列の&lt;em&gt;値&lt;/em&gt;を設定し&lt;em&gt;ます&lt;/em&gt;。以前にマップに同じ&lt;em&gt;キー&lt;/em&gt;文字列のエントリがあった場合、古いエントリは新しい値に置き換えられます。マップを返し、連鎖を許可します。例えば：&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7d6e7cb78af92e5adfe83e2310ec738e7d3b7e6a" translate="yes" xml:space="preserve">
          <source>Sets the active &lt;em&gt;selection&lt;/em&gt; of the brush on the specified &lt;em&gt;group&lt;/em&gt;, which must be a &lt;a href=&quot;d3-selection&quot;&gt;selection&lt;/a&gt; or a &lt;a href=&quot;d3-transition&quot;&gt;transition&lt;/a&gt; of SVG &lt;a href=&quot;https://www.w3.org/TR/SVG/struct.html#Groups&quot;&gt;G elements&lt;/a&gt;. The &lt;em&gt;selection&lt;/em&gt; must be defined as an array of numbers, or null to clear the brush selection. For a &lt;a href=&quot;#brush&quot;&gt;two-dimensional brush&lt;/a&gt;, it must be defined as [[&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;], [&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;]], where &lt;em&gt;x0&lt;/em&gt; is the minimum &lt;em&gt;x&lt;/em&gt;-value, &lt;em&gt;y0&lt;/em&gt; is the minimum &lt;em&gt;y&lt;/em&gt;-value, &lt;em&gt;x1&lt;/em&gt; is the maximum &lt;em&gt;x&lt;/em&gt;-value, and &lt;em&gt;y1&lt;/em&gt; is the maximum &lt;em&gt;y&lt;/em&gt;-value. For an &lt;a href=&quot;#brushX&quot;&gt;&lt;em&gt;x&lt;/em&gt;-brush&lt;/a&gt;, it must be defined as [&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;x1&lt;/em&gt;]; for a &lt;a href=&quot;#brushY&quot;&gt;&lt;em&gt;y&lt;/em&gt;-brush&lt;/a&gt;, it must be defined as [&lt;em&gt;y0&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;]. The selection may also be specified as a function which returns such an array; if a function, it is invoked for each selected element, being passed the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element. The returned array defines the brush selection for that element.</source>
          <target state="translated">指定された&lt;em&gt;グループに&lt;/em&gt;ブラシのアクティブな&lt;em&gt;選択&lt;/em&gt;を設定します。これは、SVG &lt;a href=&quot;https://www.w3.org/TR/SVG/struct.html#Groups&quot;&gt;G要素の&lt;/a&gt;&lt;a href=&quot;d3-selection&quot;&gt;選択&lt;/a&gt;または&lt;a href=&quot;d3-transition&quot;&gt;遷移&lt;/a&gt;である必要があります。&lt;em&gt;選択は、&lt;/em&gt;ブラシの選択をクリアする数字の配列、またはnullとして定義されなければなりません。以下のために&lt;a href=&quot;#brush&quot;&gt;二次元ブラシ&lt;/a&gt;は、[ように定義されなければならない&lt;em&gt;X0&lt;/em&gt;、&lt;em&gt;Y0&lt;/em&gt; ]、[ &lt;em&gt;X1&lt;/em&gt;、&lt;em&gt;Y1&lt;/em&gt; ]、ここで、&lt;em&gt;x0は&lt;/em&gt;最小であり&lt;em&gt;xは&lt;/em&gt; -value、&lt;em&gt;Y0が&lt;/em&gt;最小である&lt;em&gt;Y&lt;/em&gt; -value、&lt;em&gt;x1が&lt;/em&gt;最大となる&lt;em&gt;X&lt;/em&gt; -value 、および&lt;em&gt;y1&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;y&lt;/em&gt;の最大値です。&lt;a href=&quot;#brushX&quot;&gt;&lt;em&gt;x&lt;/em&gt; -brushの&lt;/a&gt;場合、[ &lt;em&gt;x0&lt;/em&gt;、&lt;em&gt;x1&lt;/em&gt; ] として定義する必要があります。以下のために&lt;a href=&quot;#brushY&quot;&gt;&lt;em&gt;Y&lt;/em&gt; -brush&lt;/a&gt;、それは[として定義する必要があり&lt;em&gt;Y0&lt;/em&gt;、&lt;em&gt;Y1&lt;/em&gt; ]。選択は、そのような配列を返す関数として指定することもできます。関数の場合は、選択された要素ごとに呼び出され、現在のデータム &lt;code&gt;d&lt;/code&gt; とインデックス &lt;code&gt;i&lt;/code&gt; が渡され、 &lt;code&gt;this&lt;/code&gt; コンテキストが現在のDOM要素になります。返される配列は、その要素のブラシ選択を定義します。</target>
        </trans-unit>
        <trans-unit id="8a60d90f3fdb3a529e35a12cfabcdbedbdaf94c5" translate="yes" xml:space="preserve">
          <source>Sets the graticule&amp;rsquo;s &lt;a href=&quot;d3-geo#graticule_extent&quot;&gt;extent&lt;/a&gt;.</source>
          <target state="translated">経緯線の&lt;a href=&quot;d3-geo#graticule_extent&quot;&gt;範囲を&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="ef5fdc6cfa8cb8f720f191dacfbc481ef726209a" translate="yes" xml:space="preserve">
          <source>Sets the graticule&amp;rsquo;s &lt;a href=&quot;d3-geo#graticule_extentMajor&quot;&gt;major extent&lt;/a&gt;.</source>
          <target state="translated">経緯線の&lt;a href=&quot;d3-geo#graticule_extentMajor&quot;&gt;主範囲を&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="534e8ce9e177296718bd659d0e6aa69f72c46a83" translate="yes" xml:space="preserve">
          <source>Sets the graticule&amp;rsquo;s &lt;a href=&quot;d3-geo#graticule_extentMinor&quot;&gt;minor extent&lt;/a&gt;.</source>
          <target state="translated">経緯線の&lt;a href=&quot;d3-geo#graticule_extentMinor&quot;&gt;副範囲を&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="329d983f22243253742f01b607962846d98eb975" translate="yes" xml:space="preserve">
          <source>Sets the graticule&amp;rsquo;s &lt;a href=&quot;d3-geo#graticule_precision&quot;&gt;precision&lt;/a&gt;.</source>
          <target state="translated">経緯線の&lt;a href=&quot;d3-geo#graticule_precision&quot;&gt;精度を&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="75b50ec0b0730886a854d8016cb6174b547851c0" translate="yes" xml:space="preserve">
          <source>Sets the graticule&amp;rsquo;s &lt;a href=&quot;d3-geo#graticule_step&quot;&gt;step&lt;/a&gt;.</source>
          <target state="translated">経緯線の&lt;a href=&quot;d3-geo#graticule_step&quot;&gt;ステップを&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="84120cf16233791ec064a9e88a2e8e054a7dcfbc" translate="yes" xml:space="preserve">
          <source>Sets the graticule&amp;rsquo;s &lt;a href=&quot;d3-geo#graticule_stepMajor&quot;&gt;major setp&lt;/a&gt;.</source>
          <target state="translated">経緯線の&lt;a href=&quot;d3-geo#graticule_stepMajor&quot;&gt;主なsetpを&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="37760ca82050689d1ed48b5f647921ef5e02c67d" translate="yes" xml:space="preserve">
          <source>Sets the graticule&amp;rsquo;s &lt;a href=&quot;d3-geo#graticule_stepMinor&quot;&gt;minor step&lt;/a&gt;.</source>
          <target state="translated">経緯線の&lt;a href=&quot;d3-geo#graticule_stepMinor&quot;&gt;マイナーステップを&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="29e6f5768a9b60ff8dee0c1166b0cb4d5f870cd0" translate="yes" xml:space="preserve">
          <source>Sets the projection&amp;rsquo;s &lt;a href=&quot;#projection_scale&quot;&gt;scale&lt;/a&gt; and &lt;a href=&quot;#projection_translate&quot;&gt;translate&lt;/a&gt; to fit the specified GeoJSON &lt;em&gt;object&lt;/em&gt; in the center of the given &lt;em&gt;extent&lt;/em&gt;. The extent is specified as an array [[x₀, y₀], [x₁, y₁]], where x₀ is the left side of the bounding box, y₀ is the top, x₁ is the right and y₁ is the bottom. Returns the projection.</source>
          <target state="translated">指定された&lt;em&gt;範囲の&lt;/em&gt;中心に指定されたGeoJSON &lt;em&gt;オブジェクト&lt;/em&gt;が収まるように、投影の&lt;a href=&quot;#projection_scale&quot;&gt;スケール&lt;/a&gt;と&lt;a href=&quot;#projection_translate&quot;&gt;移動&lt;/a&gt;を設定し&lt;em&gt;ます&lt;/em&gt;。範囲は配列[[x₀、y₀]、[x₁、y₁]]として指定されます。ここで、x₀はバウンディングボックスの左側、y₀は上、x₁は右、y bottomは下です。投影を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a8c07472465bde783cd17828a243b8b72935d973" translate="yes" xml:space="preserve">
          <source>Sets the response value function to the specified function and returns this request instance. The response value function is used to map the response XMLHttpRequest object to a useful data value. See the convenience methods &lt;a href=&quot;#json&quot;&gt;json&lt;/a&gt; and &lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt; for examples.</source>
          <target state="translated">応答値関数を指定された関数に設定し、この要求インスタンスを返します。応答値関数は、応答XMLHttpRequestオブジェクトを有用なデータ値にマップするために使用されます。例については、便利なメソッド&lt;a href=&quot;#json&quot;&gt;json&lt;/a&gt;と&lt;a href=&quot;#text&quot;&gt;テキスト&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="70c5fcee6a797e998f3ec09aedc7e41cf17b7de7" translate="yes" xml:space="preserve">
          <source>Sets the scale&amp;rsquo;s &lt;a href=&quot;#band_range&quot;&gt;&lt;em&gt;range&lt;/em&gt;&lt;/a&gt; to the specified two-element array of numbers while also enabling &lt;a href=&quot;#band_round&quot;&gt;rounding&lt;/a&gt;. This is a convenience method equivalent to:</source>
          <target state="translated">スケールの&lt;a href=&quot;#band_range&quot;&gt;&lt;em&gt;範囲&lt;/em&gt;&lt;/a&gt;を指定された数値の2要素配列に設定し、&lt;a href=&quot;#band_round&quot;&gt;丸め&lt;/a&gt;も有効にします。これは、以下と同等の便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="7b63a84bad9b9064d0b9e3882254133590560920" translate="yes" xml:space="preserve">
          <source>Sets the scale&amp;rsquo;s &lt;a href=&quot;#continuous_range&quot;&gt;&lt;em&gt;range&lt;/em&gt;&lt;/a&gt; to the specified array of values while also setting the scale&amp;rsquo;s &lt;a href=&quot;#continuous_interpolate&quot;&gt;interpolator&lt;/a&gt; to &lt;a href=&quot;d3-interpolate#interpolateRound&quot;&gt;interpolateRound&lt;/a&gt;. This is a convenience method equivalent to:</source>
          <target state="translated">スケールの&lt;a href=&quot;#continuous_range&quot;&gt;&lt;em&gt;範囲&lt;/em&gt;&lt;/a&gt;を指定された値の配列に設定し、スケールの&lt;a href=&quot;#continuous_interpolate&quot;&gt;補間器&lt;/a&gt;を&lt;a href=&quot;d3-interpolate#interpolateRound&quot;&gt;interpolateRoundに&lt;/a&gt;設定します。これは、以下と同等の便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="366b1d1637817959bf1b312994f167234267b141" translate="yes" xml:space="preserve">
          <source>Sets the scale&amp;rsquo;s &lt;a href=&quot;#point_range&quot;&gt;&lt;em&gt;range&lt;/em&gt;&lt;/a&gt; to the specified two-element array of numbers while also enabling &lt;a href=&quot;#point_round&quot;&gt;rounding&lt;/a&gt;. This is a convenience method equivalent to:</source>
          <target state="translated">スケールの&lt;a href=&quot;#point_range&quot;&gt;&lt;em&gt;範囲&lt;/em&gt;&lt;/a&gt;を指定された数値の2要素配列に設定し、&lt;a href=&quot;#point_round&quot;&gt;丸め&lt;/a&gt;も有効にします。これは、以下と同等の便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="7105db2110f846bd8769b574bb712f0acd9d678a" translate="yes" xml:space="preserve">
          <source>Sets the value of this local on the specified &lt;em&gt;node&lt;/em&gt; to the &lt;em&gt;value&lt;/em&gt;, and returns the specified &lt;em&gt;value&lt;/em&gt;. This is often performed using &lt;a href=&quot;#selection_each&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.each&lt;/a&gt;:</source>
          <target state="translated">指定された&lt;em&gt;ノード&lt;/em&gt;のこのローカルの値をその値に設定し、指定された&lt;em&gt;値&lt;/em&gt;を返し&lt;em&gt;ます&lt;/em&gt;。これは、しばしば&lt;a href=&quot;#selection_each&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .each&lt;/a&gt;を使用して実行されます。</target>
        </trans-unit>
        <trans-unit id="69857eae543e90375f1a000e68e4e85dd716e133" translate="yes" xml:space="preserve">
          <source>Setting the delay to a multiple of the index &lt;code&gt;i&lt;/code&gt; is a convenient way to stagger transitions across a set of elements. For example:</source>
          <target state="translated">遅延をインデックス &lt;code&gt;i&lt;/code&gt; の倍数に設定すると、一連の要素間で遷移をずらすのに便利です。例えば：</target>
        </trans-unit>
        <trans-unit id="c293c944370c101134829c611a73f0726dabda55" translate="yes" xml:space="preserve">
          <source>Setting the domain on an ordinal scale is optional if the &lt;a href=&quot;#ordinal_unknown&quot;&gt;unknown value&lt;/a&gt; is &lt;a href=&quot;#scaleImplicit&quot;&gt;implicit&lt;/a&gt; (the default). In this case, the domain will be inferred implicitly from usage by assigning each unique value passed to the scale a new value from the range. Note that an explicit domain is recommended to ensure deterministic behavior, as inferring the domain from usage will be dependent on ordering.</source>
          <target state="translated">&lt;a href=&quot;#ordinal_unknown&quot;&gt;不明な値&lt;/a&gt;が&lt;a href=&quot;#scaleImplicit&quot;&gt;暗黙的で&lt;/a&gt;ある場合（デフォルト）、ドメインを序数スケールで設定することはオプションです。この場合、ドメインは、スケールに渡された各一意の値を範囲からの新しい値に割り当てることにより、使用法から暗黙的に推測されます。使用からドメインを推測することは順序に依存するため、確定的な動作を保証するために明示的なドメインが推奨されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="54908fe01e0f4c461c5f65221a0c175edd904f5c" translate="yes" xml:space="preserve">
          <source>Several built-in tiling methods are provided for use with &lt;a href=&quot;#treemap_tile&quot;&gt;&lt;em&gt;treemap&lt;/em&gt;.tile&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#treemap_tile&quot;&gt;&lt;em&gt;treemap&lt;/em&gt; .tile&lt;/a&gt;で使用するために、いくつかの組み込みタイリングメソッドが提供されています。</target>
        </trans-unit>
        <trans-unit id="80648d8c2d23edba0d492eeac901205eeec96516" translate="yes" xml:space="preserve">
          <source>Shan Carter&amp;rsquo;s &lt;a href=&quot;http://bl.ocks.org/shancarter/raw/4748131/&quot;&gt;Mister Nester&lt;/a&gt;</source>
          <target state="translated">シャンカーターの&lt;a href=&quot;http://bl.ocks.org/shancarter/raw/4748131/&quot;&gt;ミスターネスター&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea5c1a20b7cfcfec8a35fb4c6a419a1314233755" translate="yes" xml:space="preserve">
          <source>Shape</source>
          <target state="translated">Shape</target>
        </trans-unit>
        <trans-unit id="b1985e387405e4d4afb40d5dac9b2656f5d6f770" translate="yes" xml:space="preserve">
          <source>Shapes</source>
          <target state="translated">Shapes</target>
        </trans-unit>
        <trans-unit id="a4fc5225e16667066f833b53c77b1c07ef00ab9d" translate="yes" xml:space="preserve">
          <source>Shapes (d3-shape)</source>
          <target state="translated">形状(d3形状</target>
        </trans-unit>
        <trans-unit id="ca6ec7b5ece2714b32065e84bddf431c6cd45fa1" translate="yes" xml:space="preserve">
          <source>Shapes are no longer limited to SVG; they can now render to Canvas! Shape generators now support an optional &lt;em&gt;context&lt;/em&gt;: given a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D&quot;&gt;CanvasRenderingContext2D&lt;/a&gt;, you can render a shape as a canvas path to be filled or stroked. For example, a &lt;a href=&quot;https://bl.ocks.org/mbostock/8878e7fd82034f1d63cf&quot;&gt;canvas pie chart&lt;/a&gt; might use an arc generator:</source>
          <target state="translated">形状はSVGに限定されなくなりました。これでCanvasにレンダリングできます！シェイプジェネレーターがオプションの&lt;em&gt;コンテキストを&lt;/em&gt;サポートする&lt;em&gt;ようになり&lt;/em&gt;ました&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D&quot;&gt;。CanvasRenderingContext2Dを&lt;/a&gt;指定すると、塗りつぶしたりストロークしたりするキャンバスパスとしてシェイプをレンダリングできます。たとえば、&lt;a href=&quot;https://bl.ocks.org/mbostock/8878e7fd82034f1d63cf&quot;&gt;キャンバスの円グラフで&lt;/a&gt;は、アークジェネレーターを使用できます。</target>
        </trans-unit>
        <trans-unit id="17f770b127ca3aac5671da85b7b3d1662d3042ee" translate="yes" xml:space="preserve">
          <source>Shifts the baseline down such that the center of the streamgraph is always at zero.</source>
          <target state="translated">流線グラフの中心が常にゼロになるようにベースラインを下にシフトします。</target>
        </trans-unit>
        <trans-unit id="f1119f3d3b3ec827192b30b5332041dd11ef048e" translate="yes" xml:space="preserve">
          <source>Shifts the baseline so as to minimize the weighted wiggle of layers. This offset is recommended for streamgraphs in conjunction with the &lt;a href=&quot;#stackOrderInsideOut&quot;&gt;inside-out order&lt;/a&gt;. See &lt;a href=&quot;http://leebyron.com/streamgraph/&quot;&gt;Stacked Graphs&amp;mdash;Geometry &amp;amp; Aesthetics&lt;/a&gt; by Bryon &amp;amp; Wattenberg for more information.</source>
          <target state="translated">レイヤーの加重ウィグルを最小化するようにベースラインをシフトします。これと関連してstreamgraphsのために推奨されるオフセットは&lt;a href=&quot;#stackOrderInsideOut&quot;&gt;インサイドアウトオーダー&lt;/a&gt;。詳細については、&lt;a href=&quot;http://leebyron.com/streamgraph/&quot;&gt;Stacked Graphs&amp;mdash;&lt;/a&gt; Bryon＆WattenbergによるGeometry＆Aestheticsを参照してください。</target>
        </trans-unit>
        <trans-unit id="adc6c90c90e0f631933d6e1bbca4147cdf553aba" translate="yes" xml:space="preserve">
          <source>Shortly after creation, either at the end of the current frame or during the next frame, the transition is scheduled. At this point, the delay and &lt;code&gt;start&lt;/code&gt; event listeners may no longer be changed; attempting to do so throws an error with the message &amp;ldquo;too late: already scheduled&amp;rdquo; (or if the transition has ended, &amp;ldquo;transition not found&amp;rdquo;).</source>
          <target state="translated">作成直後、現在のフレームの最後または次のフレームで、トランジションがスケジュールされます。この時点で、遅延および &lt;code&gt;start&lt;/code&gt; イベントリスナーは変更されなくなります。これを行おうとすると、「遅すぎます：すでにスケジュールされています」というメッセージでエラーがスローされます（または、遷移が終了した場合は、「遷移が見つかりません」）。</target>
        </trans-unit>
        <trans-unit id="c961e7c061aec396a18608c5a0bb4c1757df19aa" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#bisectLeft&quot;&gt;bisectLeft&lt;/a&gt;, but returns an insertion point which comes after (to the right of) any existing entries of &lt;em&gt;x&lt;/em&gt; in &lt;em&gt;array&lt;/em&gt;. The returned insertion point &lt;em&gt;i&lt;/em&gt; partitions the &lt;em&gt;array&lt;/em&gt; into two halves so that all &lt;em&gt;v&lt;/em&gt; &amp;lt;= &lt;em&gt;x&lt;/em&gt; for &lt;em&gt;v&lt;/em&gt; in &lt;em&gt;array&lt;/em&gt;.slice(&lt;em&gt;lo&lt;/em&gt;, &lt;em&gt;i&lt;/em&gt;) for the left side and all &lt;em&gt;v&lt;/em&gt; &amp;gt; &lt;em&gt;x&lt;/em&gt; for &lt;em&gt;v&lt;/em&gt; in &lt;em&gt;array&lt;/em&gt;.slice(&lt;em&gt;i&lt;/em&gt;, &lt;em&gt;hi&lt;/em&gt;) for the right side.</source>
          <target state="translated">&lt;a href=&quot;#bisectLeft&quot;&gt;bisectLeft&lt;/a&gt;に似ていますが、&lt;em&gt;array&lt;/em&gt;内の&lt;em&gt;xの&lt;/em&gt;既存のエントリの後（右側）にある挿入ポイントを返します。返された挿入ポイントは、&lt;em&gt;iが&lt;/em&gt;分割&lt;em&gt;アレイ&lt;/em&gt;半分にするように、すべての&lt;em&gt;V&lt;/em&gt; &amp;lt;= &lt;em&gt;X&lt;/em&gt;のための&lt;em&gt;V&lt;/em&gt;における&lt;em&gt;アレイ&lt;/em&gt; .slice（&lt;em&gt;LO&lt;/em&gt;、&lt;em&gt;I&lt;/em&gt;左側用）およびすべての&lt;em&gt;V&lt;/em&gt; &amp;gt; &lt;em&gt;X&lt;/em&gt;のための&lt;em&gt;V&lt;/em&gt;における&lt;em&gt;アレイ&lt;/em&gt; .slice（&lt;em&gt;I&lt;/em&gt;、&lt;em&gt;HI&lt;/em&gt;）のために右側。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b022ea1644632372130063f65c74136611fb354d" translate="yes" xml:space="preserve">
          <source>Similarly, the &lt;em&gt;ordinal&lt;/em&gt;.rangePoints and &lt;em&gt;ordinal&lt;/em&gt;.rangeRoundPoints methods have been replaced with a new subclass of ordinal scale: &lt;a href=&quot;../../../d3-scale#point-scales&quot;&gt;point scales&lt;/a&gt;. The following code in 3.x:</source>
          <target state="translated">同様に、&lt;em&gt;序&lt;/em&gt;&lt;em&gt;数&lt;/em&gt; .rangePointsメソッドと&lt;em&gt;序数&lt;/em&gt; .rangeRoundPointsメソッドは、序数スケールの新しいサブクラスである&lt;a href=&quot;../../../d3-scale#point-scales&quot;&gt;ポイントスケールに&lt;/a&gt;置き換えられました。3.xの次のコード：</target>
        </trans-unit>
        <trans-unit id="9a9c3e8a2d64664258882d52ec82bc89bfd527f6" translate="yes" xml:space="preserve">
          <source>Similarly, to apply custom &lt;a href=&quot;#easeElastic&quot;&gt;elastic&lt;/a&gt; easing:</source>
          <target state="translated">同様に、カスタムの&lt;a href=&quot;#easeElastic&quot;&gt;弾性&lt;/a&gt;イージングを適用するには：</target>
        </trans-unit>
        <trans-unit id="9ae3fbab69a9e49db5f4bcedc15102b4da128c2d" translate="yes" xml:space="preserve">
          <source>Similarly, to apply the transformation to HTML elements via &lt;a href=&quot;https://www.w3.org/TR/css-transforms-1/&quot;&gt;CSS&lt;/a&gt;:</source>
          <target state="translated">同様に、&lt;a href=&quot;https://www.w3.org/TR/css-transforms-1/&quot;&gt;CSS&lt;/a&gt;を介してHTML要素に変換を適用するには：</target>
        </trans-unit>
        <trans-unit id="6e611cc0ae5415ff3ffd863e9906975e9fd3c9fb" translate="yes" xml:space="preserve">
          <source>Similarly, to sort nodes by descending height (greatest distance from any descendant leaf) and then descending value, as is recommended for &lt;a href=&quot;#treemap&quot;&gt;treemaps&lt;/a&gt; and &lt;a href=&quot;#partition&quot;&gt;icicles&lt;/a&gt;:</source>
          <target state="translated">同様に、&lt;a href=&quot;#treemap&quot;&gt;ツリーマップ&lt;/a&gt;と&lt;a href=&quot;#partition&quot;&gt;つららに&lt;/a&gt;推奨されるように、ノードを高さの降順（子孫の葉からの距離が最も大きいもの）から降順に並べ替えます。</target>
        </trans-unit>
        <trans-unit id="32fb7b9651d89ff38dbe874d9f238e0ade027923" translate="yes" xml:space="preserve">
          <source>Similarly, using a function:</source>
          <target state="translated">同様に、関数を使って</target>
        </trans-unit>
        <trans-unit id="8e34943c353e9ef451dbd919559281dff27ed399" translate="yes" xml:space="preserve">
          <source>Simulation</source>
          <target state="translated">Simulation</target>
        </trans-unit>
        <trans-unit id="3034fec63ae138088aa351bd8f108167ce736b6a" translate="yes" xml:space="preserve">
          <source>Simulations typically compose multiple forces as desired. This module provides several for your enjoyment:</source>
          <target state="translated">シミュレーションは通常、必要に応じて複数の力を構成します。このモジュールでは、あなたの楽しみのためにいくつかの力を提供します。</target>
        </trans-unit>
        <trans-unit id="577a1e60ba23005db63f1f298db3937ca6e6d49e" translate="yes" xml:space="preserve">
          <source>Since a key function was specified (as the identity function), and the new data contains the numbers [4, 8, 16] which match existing elements in the document, the update selection contains three DIV elements. Leaving those elements as-is, we can append new elements for [1, 2, 32] using the enter selection:</source>
          <target state="translated">キー関数が指定されており(同一性関数として)、新しいデータには文書内の既存の要素と一致する数字[4,8,16]が含まれているので、更新選択範囲には3つのDIV要素が含まれています。これらの要素をそのままにしておくと、Enter選択範囲を使って[1,2,32]に新しい要素を追加することができます。</target>
        </trans-unit>
        <trans-unit id="eef3c5227a59db6498187fef21aa0063e271391e" translate="yes" xml:space="preserve">
          <source>Since the contour polygons are GeoJSON, you can transform and display them using standard tools; see &lt;a href=&quot;d3-geo#geoPath&quot;&gt;d3.geoPath&lt;/a&gt;, &lt;a href=&quot;d3-geo-projection#geoProject&quot;&gt;d3.geoProject&lt;/a&gt; and &lt;a href=&quot;d3-geo-projection#geoStitch&quot;&gt;d3.geoStitch&lt;/a&gt;, for example. Here the above contours of surface temperature are displayed in the Natural Earth projection:</source>
          <target state="translated">等高線ポリゴンはGeoJSONであるため、標準ツールを使用してそれらを変換および表示できます。&lt;a href=&quot;d3-geo#geoPath&quot;&gt;たとえば&lt;/a&gt;、d3.geoPath、&lt;a href=&quot;d3-geo-projection#geoProject&quot;&gt;d3.geoProject&lt;/a&gt;および&lt;a href=&quot;d3-geo-projection#geoStitch&quot;&gt;d3.geoStitchを&lt;/a&gt;参照してください。ここでは、上記の表面温度の等高線が自然地球図法で表示されています。</target>
        </trans-unit>
        <trans-unit id="d5bc7373c9c1b1c9473bf582f11348dfc482d14b" translate="yes" xml:space="preserve">
          <source>Since the triangulation is computed as the dual of the Voronoi diagram, and the Voronoi diagram is clipped by the &lt;a href=&quot;#voronoi_extent&quot;&gt;extent&lt;/a&gt;, a subset of the Delaunay links is returned.</source>
          <target state="translated">三角測量をボロノイ図のデュアルとして計算され、ボロノイ図がクリップされているので&lt;a href=&quot;#voronoi_extent&quot;&gt;程度&lt;/a&gt;、ドロネーリンクのサブセットが返されます。</target>
        </trans-unit>
        <trans-unit id="fabbd3042cc389c5d870f8af34c848030f3370c8" translate="yes" xml:space="preserve">
          <source>Sinusoidal easing; returns sin(&lt;em&gt;t&lt;/em&gt;).</source>
          <target state="translated">正弦波緩和; sin（&lt;em&gt;t&lt;/em&gt;）を返します。</target>
        </trans-unit>
        <trans-unit id="8b15aae2d6bc47fd28985e9da5af32f9895685c2" translate="yes" xml:space="preserve">
          <source>Small circles do not follow great arcs and thus the generated polygon is only an approximation. Specifying a smaller precision angle improves the accuracy of the approximate polygon, but also increase the cost to generate and render it.</source>
          <target state="translated">小さな円は大きな円弧には追従しないため、生成されるポリゴンはあくまでも近似でしかありません。より小さな精度の角度を指定すると、近似ポリゴンの精度が向上しますが、生成とレンダリングにかかるコストも高くなります。</target>
        </trans-unit>
        <trans-unit id="e9f5399e034f283fa7935e1ce959e9c6f1191377" translate="yes" xml:space="preserve">
          <source>Small files are nice, but modularity is also about making D3 more &lt;em&gt;fun&lt;/em&gt;. Microlibraries are easier to understand, develop and test. They make it easier for new people to get involved and contribute. They reduce the distinction between a &amp;ldquo;core module&amp;rdquo; and a &amp;ldquo;plugin&amp;rdquo;, and increase the pace of development in D3 features.</source>
          <target state="translated">小さなファイルはいいですが、モジュール性はD3をもっと&lt;em&gt;楽しく&lt;/em&gt;することにも関係してい&lt;em&gt;ます&lt;/em&gt;。マイクロライブラリは理解、開発、テストが簡単です。新しい人々が参加し、貢献することを容易にします。これらは、「コアモジュール」と「プラグイン」の違いを減らし、D3機能の開発ペースを速めます。</target>
        </trans-unit>
        <trans-unit id="7deeaee64709451c53560d869471e5e4f63c97b9" translate="yes" xml:space="preserve">
          <source>Some HTML elements have special properties that are not addressable using attributes or styles, such as a form field&amp;rsquo;s text &lt;code&gt;value&lt;/code&gt; and a checkbox&amp;rsquo;s &lt;code&gt;checked&lt;/code&gt; boolean. Use this method to get or set these properties.</source>
          <target state="translated">一部のHTML要素には、フォームフィールドのテキスト &lt;code&gt;value&lt;/code&gt; やチェックボックスの &lt;code&gt;checked&lt;/code&gt; ブール値など、属性やスタイルを使用してアドレス指定できない特別なプロパティがあります。このメソッドを使用して、これらのプロパティを取得または設定します。</target>
        </trans-unit>
        <trans-unit id="318d3e5f427ce0d4b62e3ef7d06b588765c02728" translate="yes" xml:space="preserve">
          <source>Some shape types can be stacked, placing one shape adjacent to another. For example, a bar chart of monthly sales might be broken down into a multi-series bar chart by product category, stacking bars vertically. This is equivalent to subdividing a bar chart by an ordinal dimension (such as product category) and applying a color encoding.</source>
          <target state="translated">形状の種類によっては、ある形状を別の形状に隣接させて重ねることができます。例えば、月次売上高の棒グラフを製品カテゴリ別の複数系列の棒グラフに分解し、棒グラフを縦に重ねることができます。これは、棒グラフを序数(商品カテゴリなど)で細分化し、カラーエンコーディングを適用することに相当します。</target>
        </trans-unit>
        <trans-unit id="890f9a689c9dc4990def28a3980ca4fd181a80cf" translate="yes" xml:space="preserve">
          <source>Some usage patterns in D3 3.x could cause the browser to hang when a background page returned to the foreground. For example, the following code schedules a transition every second:</source>
          <target state="translated">D3 3.x の使用パターンによっては、バックグラウンドページがフォアグラウンドに戻るとブラウザがハングすることがあります。例えば、以下のコードは、1秒ごとに遷移をスケジュールしています。</target>
        </trans-unit>
        <trans-unit id="e87540097dc6befb661087758ab73cd8626ce5e8" translate="yes" xml:space="preserve">
          <source>Sorting does not affect the order of the &lt;a href=&quot;#_pie&quot;&gt;generated arc array&lt;/a&gt; which is always in the same order as the input data array; it merely affects the computed angles of each arc. The first arc starts at the &lt;a href=&quot;#pie_startAngle&quot;&gt;start angle&lt;/a&gt; and the last arc ends at the &lt;a href=&quot;#pie_endAngle&quot;&gt;end angle&lt;/a&gt;.</source>
          <target state="translated">ソートは、常に入力データ配列と同じ順序である&lt;a href=&quot;#_pie&quot;&gt;生成されたアーク配列の&lt;/a&gt;順序には影響しません。各弧の計算された角度に影響するだけです。最初の弧は&lt;a href=&quot;#pie_startAngle&quot;&gt;開始角度で&lt;/a&gt;始まり、最後の弧は&lt;a href=&quot;#pie_endAngle&quot;&gt;終了角度&lt;/a&gt;で終わります。</target>
        </trans-unit>
        <trans-unit id="7d8521461e96763b3c2455acba92f9e9ea36c800" translate="yes" xml:space="preserve">
          <source>Sorts key values for the &lt;a href=&quot;#nest_key&quot;&gt;current key&lt;/a&gt; using the specified &lt;em&gt;comparator&lt;/em&gt; function, such as &lt;a href=&quot;d3-array#ascending&quot;&gt;d3.ascending&lt;/a&gt; or &lt;a href=&quot;d3-array#descending&quot;&gt;d3.descending&lt;/a&gt;. If no comparator is specified for the current key, the order in which keys will be returned is undefined. For example, to sort years in ascending order and varieties in descending order:</source>
          <target state="translated">指定された&lt;em&gt;コンパレーター&lt;/em&gt;関数（&lt;a href=&quot;d3-array#ascending&quot;&gt;d3.ascending&lt;/a&gt;や&lt;a href=&quot;d3-array#descending&quot;&gt;d3.descending&lt;/a&gt;など）を使用して、&lt;a href=&quot;#nest_key&quot;&gt;現在のキーの&lt;/a&gt;キー値を並べ替えます。現在のキーにコンパレータが指定されていない場合、キーが返される順序は定義されていません。たとえば、年を昇順で並べ替え、種類を降順で並べ替えるには：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="41f3050df9d376742c527bca7645c2f75d9f8c4b" translate="yes" xml:space="preserve">
          <source>Sorts leaf elements using the specified &lt;em&gt;comparator&lt;/em&gt; function, such as &lt;a href=&quot;d3-array#ascending&quot;&gt;d3.ascending&lt;/a&gt; or &lt;a href=&quot;d3-array#descending&quot;&gt;d3.descending&lt;/a&gt;. This is roughly equivalent to sorting the input array before applying the nest operator; however it is typically more efficient as the size of each group is smaller. If no value comparator is specified, elements will be returned in the order they appeared in the input array. This applies to &lt;a href=&quot;#nest_map&quot;&gt;&lt;em&gt;nest&lt;/em&gt;.map&lt;/a&gt;, &lt;a href=&quot;#nest_entries&quot;&gt;&lt;em&gt;nest&lt;/em&gt;.entries&lt;/a&gt; and &lt;a href=&quot;#nest_object&quot;&gt;&lt;em&gt;nest&lt;/em&gt;.object&lt;/a&gt;.</source>
          <target state="translated">指定した&lt;em&gt;コンパレーター&lt;/em&gt;関数（&lt;a href=&quot;d3-array#ascending&quot;&gt;d3.ascending&lt;/a&gt;や&lt;a href=&quot;d3-array#descending&quot;&gt;d3.descending&lt;/a&gt;など）を使用してリーフ要素を並べ替えます。これは、ネスト演算子を適用する前に入力配列をソートすることとほぼ同じです。ただし、各グループのサイズが小さいほど、通常は効率的です。値コンパレータが指定されていない場合、要素は入力配列に出現した順序で返されます。これは、に適用される&lt;a href=&quot;#nest_map&quot;&gt;&lt;em&gt;ネスト&lt;/em&gt; .MAP&lt;/a&gt;、&lt;a href=&quot;#nest_entries&quot;&gt;&lt;em&gt;巣の&lt;/em&gt; .entries&lt;/a&gt;と&lt;a href=&quot;#nest_object&quot;&gt;&lt;em&gt;ネスト&lt;/em&gt; .object&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d171579260f59790a185e032bdd4b5e0e2b98cd1" translate="yes" xml:space="preserve">
          <source>Sorts the children of this &lt;em&gt;node&lt;/em&gt;, if any, and each of this &lt;em&gt;node&lt;/em&gt;&amp;rsquo;s descendants&amp;rsquo; children, in &lt;a href=&quot;#node_eachBefore&quot;&gt;pre-order traversal&lt;/a&gt; using the specified &lt;em&gt;compare&lt;/em&gt; function, and returns this &lt;em&gt;node&lt;/em&gt;. The specified function is passed two nodes &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; to compare. If &lt;em&gt;a&lt;/em&gt; should be before &lt;em&gt;b&lt;/em&gt;, the function must return a value less than zero; if &lt;em&gt;b&lt;/em&gt; should be before &lt;em&gt;a&lt;/em&gt;, the function must return a value greater than zero; otherwise, the relative order of &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are not specified. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort&quot;&gt;&lt;em&gt;array&lt;/em&gt;.sort&lt;/a&gt; for more.</source>
          <target state="translated">この&lt;em&gt;ノード&lt;/em&gt;の子（存在する場合）およびこの&lt;em&gt;ノード&lt;/em&gt;の子孫の&lt;a href=&quot;#node_eachBefore&quot;&gt;各子&lt;/a&gt;を、指定された&lt;em&gt;比較&lt;/em&gt;関数を使用して前順走査でソートし、この&lt;em&gt;ノード&lt;/em&gt;を返し&lt;em&gt;ます&lt;/em&gt;。指定された関数には、比較する2つのノード&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;b&lt;/em&gt;が渡されます。&lt;em&gt;aがbの&lt;/em&gt;前にある場合&lt;em&gt;、&lt;/em&gt;関数はゼロより小さい値を返す必要があります。場合&lt;em&gt;Bは&lt;/em&gt;前でなければならない、関数がゼロよりも大きい値を返さなければなりません。それ以外の場合、&lt;em&gt;a&lt;/em&gt;と&lt;em&gt;bの&lt;/em&gt;相対的な順序は指定されません。詳細については、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort&quot;&gt;&lt;em&gt;配列&lt;/em&gt;&lt;/a&gt; .sortを参照してください。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6da13addb000b67d42a6d66391713819e634149f" translate="yes" xml:space="preserve">
          <source>Source</source>
          <target state="translated">Source</target>
        </trans-unit>
        <trans-unit id="0ecddee97eef112c7cc960a0ca76db911dedc7d8" translate="yes" xml:space="preserve">
          <source>Specifies a rollup &lt;em&gt;function&lt;/em&gt; to be applied on each group of leaf elements. The return value of the rollup function will replace the array of leaf values in either the associative array returned by &lt;a href=&quot;#nest_map&quot;&gt;&lt;em&gt;nest&lt;/em&gt;.map&lt;/a&gt; or &lt;a href=&quot;#nest_object&quot;&gt;&lt;em&gt;nest&lt;/em&gt;.object&lt;/a&gt;; for &lt;a href=&quot;#nest_entries&quot;&gt;&lt;em&gt;nest&lt;/em&gt;.entries&lt;/a&gt;, it replaces the leaf &lt;em&gt;entry&lt;/em&gt;.values with &lt;em&gt;entry&lt;/em&gt;.value. If a &lt;a href=&quot;#nest_sortValues&quot;&gt;leaf comparator&lt;/a&gt; is specified, the leaf elements are sorted prior to invoking the rollup function.</source>
          <target state="translated">リーフ要素の各グループに適用されるロールアップ&lt;em&gt;関数&lt;/em&gt;を指定します。ロールアップ関数の戻り値は、&lt;a href=&quot;#nest_map&quot;&gt;&lt;em&gt;nest&lt;/em&gt; .map&lt;/a&gt;または&lt;a href=&quot;#nest_object&quot;&gt;&lt;em&gt;nest&lt;/em&gt; .object&lt;/a&gt;によって返された連想配列のリーフ値の配列を置き換えます。以下のための&lt;a href=&quot;#nest_entries&quot;&gt;&lt;em&gt;巣&lt;/em&gt; .entries&lt;/a&gt;、それは葉の置き換え&lt;em&gt;エントリー&lt;/em&gt;で.values &lt;em&gt;エントリ&lt;/em&gt; .VALUEを。場合は&lt;a href=&quot;#nest_sortValues&quot;&gt;葉のコンパレータが&lt;/a&gt;指定されている、リーフ要素は、集計関数を呼び出す前にソートされています。</target>
        </trans-unit>
        <trans-unit id="8248fd1fbb86d4b1ec21847f1d29fe37021c9a62" translate="yes" xml:space="preserve">
          <source>Specifies the desired aspect ratio of the generated rectangles. The &lt;em&gt;ratio&lt;/em&gt; must be specified as a number greater than or equal to one. Note that the orientation of the generated rectangles (tall or wide) is not implied by the ratio; for example, a ratio of two will attempt to produce a mixture of rectangles whose &lt;em&gt;width&lt;/em&gt;:&lt;em&gt;height&lt;/em&gt; ratio is either 2:1 or 1:2. (However, you can approximately achieve this result by generating a square treemap at different dimensions, and then &lt;a href=&quot;http://bl.ocks.org/mbostock/5c50a377e76a1974248bd628befdec95&quot;&gt;stretching the treemap&lt;/a&gt; to the desired aspect ratio.) Furthermore, the specified &lt;em&gt;ratio&lt;/em&gt; is merely a hint to the tiling algorithm; the rectangles are not guaranteed to have the specified aspect ratio. If not specified, the aspect ratio defaults to the golden ratio, &amp;phi; = (1 + sqrt(5)) / 2, per &lt;a href=&quot;http://vis.stanford.edu/papers/perception-treemaps&quot;&gt;Kong &lt;em&gt;et al.&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">生成された長方形の望ましいアスペクト比を指定します。&lt;em&gt;比率は、&lt;/em&gt;より多数の大きいように指定するか、または1に等しくなければなりません。生成された長方形（縦または横）の方向は、比率によって暗示されるわけではないことに注意してください。例えば、両者の比は、矩形の混合物を製造しようと&lt;em&gt;幅&lt;/em&gt;：&lt;em&gt;高さ&lt;/em&gt;の比のいずれか2：1又は1：2。 （ただし、異なる次元で正方形のツリーマップを生成し&lt;a href=&quot;http://bl.ocks.org/mbostock/5c50a377e76a1974248bd628befdec95&quot;&gt;、ツリーマップ&lt;/a&gt;を目的のアスペクト比に引き伸ばすことで、この結果をほぼ達成できます。）さらに、指定された&lt;em&gt;比率&lt;/em&gt;タイリングアルゴリズムのヒントにすぎません。長方形は、指定されたアスペクト比を持つことは保証されていません。指定しない場合、アスペクト比はデフォルトで黄金比、&amp;phi;=（1 + sqrt（5））/ 2、&lt;a href=&quot;http://vis.stanford.edu/papers/perception-treemaps&quot;&gt;Kong &lt;em&gt;et alに従います。&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4737f5673cb1ed2353af600495bfd75c188d469" translate="yes" xml:space="preserve">
          <source>Specifies the transition &lt;a href=&quot;d3-ease&quot;&gt;easing function&lt;/a&gt; for all selected elements. The &lt;em&gt;value&lt;/em&gt; must be specified as a function. The easing function is invoked for each frame of the animation, being passed the normalized time &lt;em&gt;t&lt;/em&gt; in the range [0, 1]; it must then return the eased time &lt;em&gt;tʹ&lt;/em&gt; which is typically also in the range [0, 1]. A good easing function should return 0 if &lt;em&gt;t&lt;/em&gt; = 0 and 1 if &lt;em&gt;t&lt;/em&gt; = 1. If an easing function is not specified, it defaults to &lt;a href=&quot;d3-ease#easeCubic&quot;&gt;d3.easeCubic&lt;/a&gt;.</source>
          <target state="translated">選択したすべての要素の遷移&lt;a href=&quot;d3-ease&quot;&gt;イージング関数&lt;/a&gt;を指定します。&lt;em&gt;値が&lt;/em&gt;関数として指定する必要があります。イージング関数は、アニメーションのフレームごとに呼び出され、範囲[0、1] の正規化された時間&lt;em&gt;t&lt;/em&gt;が渡されます。次に、通常は[0、1]の範囲でもある緩和時間&lt;em&gt;t typically&lt;/em&gt;を返す必要があります。優れたイージング関数は、&lt;em&gt;t&lt;/em&gt; = 0の場合は0を、&lt;em&gt;t&lt;/em&gt; = 1の場合は1を&lt;a href=&quot;d3-ease#easeCubic&quot;&gt;返し&lt;/a&gt;ます。イージング関数が指定されていない場合、デフォルトでd3.easeCubicになります。</target>
        </trans-unit>
        <trans-unit id="2c31a615f71ee2ace40c80b1710e22f2dbc82d9d" translate="yes" xml:space="preserve">
          <source>Specify the default output fill color. Defaults to none.</source>
          <target state="translated">デフォルトの出力塗りつぶし色を指定します。デフォルトは「なし」です。</target>
        </trans-unit>
        <trans-unit id="718fb14325086657783d17a1b58566d6522699b5" translate="yes" xml:space="preserve">
          <source>Specify the default output point radius. Defaults to 4.5.</source>
          <target state="translated">デフォルトの出力点半径を指定します。デフォルトは4.5です。</target>
        </trans-unit>
        <trans-unit id="4e6395dc802e5a21483c7481d0de0c5b5c5d9eab" translate="yes" xml:space="preserve">
          <source>Specify the default output stroke color. Defaults to black.</source>
          <target state="translated">デフォルトの出力ストロークの色を指定します。デフォルトは黒です。</target>
        </trans-unit>
        <trans-unit id="80ee1b3a29c338aa147e62c12ba5259042a53efd" translate="yes" xml:space="preserve">
          <source>Specify the input character encoding. Defaults to &amp;ldquo;utf8&amp;rdquo;.</source>
          <target state="translated">入力文字エンコーディングを指定します。デフォルトは「utf8」です。</target>
        </trans-unit>
        <trans-unit id="788bdfbf0030b666f7d679944edd4acfb296bb6a" translate="yes" xml:space="preserve">
          <source>Specify the input delimiter character. Defaults to &amp;ldquo;,&amp;rdquo; for reading CSV. (You can enter a tab on the command line by typing ⌃V.)</source>
          <target state="translated">入力区切り文字を指定してください。CSVを読み取る場合のデフォルトは「、」です。（⌃Vを入力すると、コマンドラインでタブを入力できます。）</target>
        </trans-unit>
        <trans-unit id="0c5f9df73ea4e984608693377f846b90a1e3f969" translate="yes" xml:space="preserve">
          <source>Specify the output character encoding. Defaults to &amp;ldquo;utf8&amp;rdquo;.</source>
          <target state="translated">出力文字エンコーディングを指定します。デフォルトは「utf8」です。</target>
        </trans-unit>
        <trans-unit id="3539cd7b0fb2b33a53e2a56a5d8b46ed88d1b77c" translate="yes" xml:space="preserve">
          <source>Specify the output delimiter character. Defaults to &amp;ldquo;,&amp;rdquo; for writing CSV. (You can enter a tab on the command line by typing ⌃V.)</source>
          <target state="translated">出力区切り文字を指定します。CSVを書き込む場合のデフォルトは「、」です。（⌃Vを入力すると、コマンドラインでタブを入力できます。）</target>
        </trans-unit>
        <trans-unit id="36c8260dc07fa7af996b119e95cda66bc3c3e0cc" translate="yes" xml:space="preserve">
          <source>Specify the output file name. Defaults to &amp;ldquo;-&amp;rdquo; for stdout.</source>
          <target state="translated">出力ファイル名を指定します。stdoutのデフォルトは「-」です。</target>
        </trans-unit>
        <trans-unit id="5a0f7541860d6e46f663ee4a37cc08885e3119a2" translate="yes" xml:space="preserve">
          <source>Specify the output height. Defaults to 500.</source>
          <target state="translated">出力の高さを指定します。デフォルトは500です。</target>
        </trans-unit>
        <trans-unit id="ddc7de68b7d623d5ba104fd0f8faee78bae1ee4d" translate="yes" xml:space="preserve">
          <source>Specify the output width. Defaults to 960.</source>
          <target state="translated">出力幅を指定します。デフォルトは960です。</target>
        </trans-unit>
        <trans-unit id="966fbc778e9ddf3ce5429269d59f981443aad878" translate="yes" xml:space="preserve">
          <source>Specifying the inner radius as a function is useful for constructing a stacked polar bar chart, often in conjunction with a &lt;a href=&quot;d3-scale#sqrt&quot;&gt;sqrt scale&lt;/a&gt;. More commonly, a constant inner radius is used for a donut or pie chart. If the outer radius is smaller than the inner radius, the inner and outer radii are swapped. A negative value is treated as zero.</source>
          <target state="translated">内側の半径を関数として指定することは、積み重ねられた極棒グラフを作成する場合に役立ちます。多くの場合、&lt;a href=&quot;d3-scale#sqrt&quot;&gt;sqrtスケール&lt;/a&gt;と組み合わせて使用​​します。より一般的には、ドーナツまたは円グラフには一定の内部半径が使用されます。外半径が内半径より小さい場合、内半径と外半径が入れ替わります。負の値はゼロとして扱われます。</target>
        </trans-unit>
        <trans-unit id="afcbb7edd08ddb27dc7029bcfb5d78a0e8cb29ef" translate="yes" xml:space="preserve">
          <source>Specifying the outer radius as a function is useful for constructing a coxcomb or polar bar chart, often in conjunction with a &lt;a href=&quot;d3-scale#sqrt&quot;&gt;sqrt scale&lt;/a&gt;. More commonly, a constant outer radius is used for a pie or donut chart. If the outer radius is smaller than the inner radius, the inner and outer radii are swapped. A negative value is treated as zero.</source>
          <target state="translated">関数として外半径を指定することは、しばしば&lt;a href=&quot;d3-scale#sqrt&quot;&gt;sqrtスケール&lt;/a&gt;と組み合わせて、コックスコームまたは極棒チャートを作成するのに役立ちます。より一般的には、一定の外半径が円グラフまたはドーナツグラフに使用されます。外半径が内半径より小さい場合、内半径と外半径が入れ替わります。負の値はゼロとして扱われます。</target>
        </trans-unit>
        <trans-unit id="c1afa17846aa6581820effecfc8b169f1855b943" translate="yes" xml:space="preserve">
          <source>Specifying the size as a function is useful for constructing a scatterplot with a size encoding. If you wish to scale the symbol to fit a given bounding box, rather than by area, try &lt;a href=&quot;http://bl.ocks.org/mbostock/3dd515e692504c92ab65&quot;&gt;SVG&amp;rsquo;s getBBox&lt;/a&gt;.</source>
          <target state="translated">関数としてサイズを指定することは、サイズエンコーディングで散布図を作成するのに役立ちます。領域ではなく特定の境界ボックスに合うようにシンボルをスケーリングする場合は、&lt;a href=&quot;http://bl.ocks.org/mbostock/3dd515e692504c92ab65&quot;&gt;SVGのgetBBoxを&lt;/a&gt;試してください。</target>
        </trans-unit>
        <trans-unit id="a9edf814669c4c2bf2c663d6d5339b81640568af" translate="yes" xml:space="preserve">
          <source>Spherical Math</source>
          <target state="translated">球形数学</target>
        </trans-unit>
        <trans-unit id="f09b327c6936077d5ea78da4c578d35e08278834" translate="yes" xml:space="preserve">
          <source>Spherical Shapes</source>
          <target state="translated">球形</target>
        </trans-unit>
        <trans-unit id="8eb2138ef73ffe354d9e82cf994488b043ae6392" translate="yes" xml:space="preserve">
          <source>Spherical polygons also require a &lt;a href=&quot;https://bl.ocks.org/mbostock/a7bdfeb041e850799a8d3dce4d8c50c8&quot;&gt;winding order convention&lt;/a&gt; to determine which side of the polygon is the inside: the exterior ring for polygons smaller than a hemisphere must be clockwise, while the exterior ring for polygons &lt;a href=&quot;https://bl.ocks.org/mbostock/6713736&quot;&gt;larger than a hemisphere&lt;/a&gt; must be anticlockwise. Interior rings representing holes must use the opposite winding order of their exterior ring. This winding order convention is also used by &lt;a href=&quot;https://github.com/topojson&quot;&gt;TopoJSON&lt;/a&gt; and &lt;a href=&quot;https://github.com/mbostock/shapefile&quot;&gt;ESRI shapefiles&lt;/a&gt;; however, it is the &lt;strong&gt;opposite&lt;/strong&gt; convention of GeoJSON&amp;rsquo;s &lt;a href=&quot;https://tools.ietf.org/html/rfc7946#section-3.1.6&quot;&gt;RFC 7946&lt;/a&gt;. (Also note that standard GeoJSON WGS84 uses planar equirectangular coordinates, not spherical coordinates, and thus may require &lt;a href=&quot;d3-geo-projection#geostitch&quot;&gt;stitching&lt;/a&gt; to remove antimeridian cuts.)</source>
          <target state="translated">球形のポリゴンでは、ポリゴンのどちら側が内側かを決定&lt;a href=&quot;https://bl.ocks.org/mbostock/a7bdfeb041e850799a8d3dce4d8c50c8&quot;&gt;するために曲がり順の規則&lt;/a&gt;も必要です。半球より小さいポリゴンの外部リングは時計回りでなければならず&lt;a href=&quot;https://bl.ocks.org/mbostock/6713736&quot;&gt;、半球より大きい&lt;/a&gt;ポリゴンの外部リングは反時計回りでなければなりません。穴を表す内部リングは、外部リングとは逆の巻き順を使用する必要があります。この巻き順の規則は、&lt;a href=&quot;https://github.com/topojson&quot;&gt;TopoJSON&lt;/a&gt;および&lt;a href=&quot;https://github.com/mbostock/shapefile&quot;&gt;ESRIシェープファイルで&lt;/a&gt;も使用されます。ただし、これはGeoJSONの&lt;a href=&quot;https://tools.ietf.org/html/rfc7946#section-3.1.6&quot;&gt;RFC 7946&lt;/a&gt;の&lt;strong&gt;反対の&lt;/strong&gt;規則です。（また、標準のGeoJSON WGS84は球面座標ではなく平面正四角形座標を使用するため、&lt;a href=&quot;d3-geo-projection#geostitch&quot;&gt;ステッチ&lt;/a&gt;が必要になる場合があることに注意してください antimeridianカットを削除します。）</target>
        </trans-unit>
        <trans-unit id="cfc57e9717bbbbd4d858c4d091664b6f227bc8e1" translate="yes" xml:space="preserve">
          <source>Splines</source>
          <target state="translated">Splines</target>
        </trans-unit>
        <trans-unit id="d4146c3df9a857b293d0f8abeedab1038e50db7c" translate="yes" xml:space="preserve">
          <source>Stack Offsets</source>
          <target state="translated">スタックオフセット</target>
        </trans-unit>
        <trans-unit id="ae7bab513d4f2f7a8946c51bc5ab9b987f926779" translate="yes" xml:space="preserve">
          <source>Stack Orders</source>
          <target state="translated">スタックオーダー</target>
        </trans-unit>
        <trans-unit id="9612380675e5488c6b6a4a99584a9ea7b8c9c98d" translate="yes" xml:space="preserve">
          <source>Stack offsets are typically not used directly, but are instead passed to &lt;a href=&quot;#stack_offset&quot;&gt;&lt;em&gt;stack&lt;/em&gt;.offset&lt;/a&gt;.</source>
          <target state="translated">通常、スタックオフセットは直接使用されませんが、代わりに&lt;a href=&quot;#stack_offset&quot;&gt;&lt;em&gt;stack&lt;/em&gt; .offset&lt;/a&gt;に渡され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3a15da4def2f826990a239721f210a72837e8241" translate="yes" xml:space="preserve">
          <source>Stack orders are typically not used directly, but are instead passed to &lt;a href=&quot;#stack_order&quot;&gt;&lt;em&gt;stack&lt;/em&gt;.order&lt;/a&gt;.</source>
          <target state="translated">通常、スタックの順序は直接使用されませんが、代わりに&lt;a href=&quot;#stack_order&quot;&gt;&lt;em&gt;stack&lt;/em&gt; .order&lt;/a&gt;に渡され&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="dbef7ced2c0b89fdc8deeb4405212d636ac3a5d4" translate="yes" xml:space="preserve">
          <source>Stack shapes, placing one adjacent to another, as in a stacked bar chart.</source>
          <target state="translated">積み上げられた棒グラフのように、1つの図形を隣接して配置します。</target>
        </trans-unit>
        <trans-unit id="61fb6ec51f4a7255a90fb1f5d7cf6ec8f6cc9784" translate="yes" xml:space="preserve">
          <source>Stacked charts can show overall value and per-category value simultaneously; however, it is typically harder to compare across categories, as only the bottom layer of the stack is aligned. So, chose the &lt;a href=&quot;#stack_order&quot;&gt;stack order&lt;/a&gt; carefully, and consider a &lt;a href=&quot;#stackOffsetWiggle&quot;&gt;streamgraph&lt;/a&gt;. (See also &lt;a href=&quot;http://bl.ocks.org/mbostock/3887051&quot;&gt;grouped charts&lt;/a&gt;.)</source>
          <target state="translated">積み上げグラフでは、全体的な値とカテゴリごとの値を同時に表示できます。ただし、スタックの最下層のみが整列しているため、通常、カテゴリ間で比較するのはより困難です。したがって、&lt;a href=&quot;#stack_order&quot;&gt;スタックの順序を&lt;/a&gt;慎重に選択し、&lt;a href=&quot;#stackOffsetWiggle&quot;&gt;ストリームグラフ&lt;/a&gt;を検討してください。（&lt;a href=&quot;http://bl.ocks.org/mbostock/3887051&quot;&gt;グループ化されたグラフ&lt;/a&gt;も参照してください。）</target>
        </trans-unit>
        <trans-unit id="249f056b552dcec0dec16b7eed3b2513cf1351f3" translate="yes" xml:space="preserve">
          <source>Stacks</source>
          <target state="translated">Stacks</target>
        </trans-unit>
        <trans-unit id="2086b21f8f49274138c38d476bee317a84a8aecc" translate="yes" xml:space="preserve">
          <source>Statistics</source>
          <target state="translated">Statistics</target>
        </trans-unit>
        <trans-unit id="c1731ae951f18169cfc01d8f1ee14a06bd643aec" translate="yes" xml:space="preserve">
          <source>Steve Waterman&amp;rsquo;s butterfly projection.</source>
          <target state="translated">スティーブウォーターマンのバタフライプロジェクション。</target>
        </trans-unit>
        <trans-unit id="1ee2c582e052f391acd6ce20d206beaa40c6847f" translate="yes" xml:space="preserve">
          <source>Stitches the GeoJSON object in the specified input &lt;em&gt;file&lt;/em&gt;, removing antimeridian and polar cuts, and replacing straight Cartesian line segments with geodesic segments. The input &lt;em&gt;object&lt;/em&gt; must have coordinates in longitude and latitude in decimal degrees per &lt;a href=&quot;https://tools.ietf.org/html/rfc7946&quot;&gt;RFC 7946&lt;/a&gt;. &lt;a href=&quot;https://bl.ocks.org/mbostock/3788999&quot;&gt;Antimeridian cutting&lt;/a&gt;, if needed, can then be re-applied after rotating to the desired projection aspect.</source>
          <target state="translated">指定された入力&lt;em&gt;ファイル&lt;/em&gt;内のGeoJSONオブジェクトをステッチし、時限線と極座標のカットを削除し、直角のデカルト線セグメントを測地線セグメントに置き換えます。入力&lt;em&gt;オブジェクトに&lt;/em&gt;は、&lt;a href=&quot;https://tools.ietf.org/html/rfc7946&quot;&gt;RFC 7946に従って&lt;/a&gt;、経度と緯度の座標が10 進度である必要があります。必要に応じて、&lt;a href=&quot;https://bl.ocks.org/mbostock/3788999&quot;&gt;アンティメリディアンカット&lt;/a&gt;を回転させてから、目的の投影アスペクトに再適用できます。</target>
        </trans-unit>
        <trans-unit id="9249fe8938b59ca112e8a35c43f12b5dd423e950" translate="yes" xml:space="preserve">
          <source>Stops the simulation&amp;rsquo;s internal timer, if it is running, and returns the simulation. If the timer is already stopped, this method does nothing. This method is useful for running the simulation manually; see &lt;a href=&quot;#simulation_tick&quot;&gt;&lt;em&gt;simulation&lt;/em&gt;.tick&lt;/a&gt;.</source>
          <target state="translated">シミュレーションが実行されている場合は、シミュレーションの内部タイマーを停止し、シミュレーションを返します。タイマーがすでに停止している場合、このメソッドは何もしません。この方法は、シミュレーションを手動で実行する場合に役立ちます。&lt;a href=&quot;#simulation_tick&quot;&gt;&lt;em&gt;シミュレーション&lt;/em&gt; .tickを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e6e87ccf1cff83572d0450eaa2bd7b37d985bc5e" translate="yes" xml:space="preserve">
          <source>Stops this timer, preventing subsequent callbacks. This method has no effect if the timer has already stopped.</source>
          <target state="translated">このタイマーを停止し、後続のコールバックを防ぎます。タイマーが既に停止している場合、このメソッドは何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="b2ee0459c534fceab53fe10d36c52047da63fc39" translate="yes" xml:space="preserve">
          <source>Stratify</source>
          <target state="translated">Stratify</target>
        </trans-unit>
        <trans-unit id="74985da267c6803b262f117de72af2d02e48029f" translate="yes" xml:space="preserve">
          <source>Streams</source>
          <target state="translated">Streams</target>
        </trans-unit>
        <trans-unit id="7739e62031bef139ed7eb91ef9d6d87a8f942aaf" translate="yes" xml:space="preserve">
          <source>Streams the specified &lt;a href=&quot;http://geojson.org&quot;&gt;GeoJSON&lt;/a&gt;&lt;em&gt;object&lt;/em&gt; to the specified &lt;a href=&quot;#projection-streams&quot;&gt;projection &lt;em&gt;stream&lt;/em&gt;&lt;/a&gt;. While both features and geometry objects are supported as input, the stream interface only describes the geometry, and thus additional feature properties are not visible to streams.</source>
          <target state="translated">指定された&lt;a href=&quot;http://geojson.org&quot;&gt;GeoJSON &lt;/a&gt;&lt;em&gt;オブジェクト&lt;/em&gt;を指定された&lt;a href=&quot;#projection-streams&quot;&gt;投影&lt;em&gt;ストリームにストリーミングします&lt;/em&gt;&lt;/a&gt;。フィーチャとジオメトリオブジェクトの両方が入力としてサポートされますが、ストリームインターフェイスはジオメトリのみを記述するため、追加のフィーチャプロパティはストリームに表示されません。</target>
        </trans-unit>
        <trans-unit id="84e6bd197205133da8a6c9d4af7ecebad7cb522b" translate="yes" xml:space="preserve">
          <source>Sunday-based weeks (e.g., February 5, 2012 at 12:00 AM).</source>
          <target state="translated">日曜日を基準とした週(例:2012年2月5日午前12時)。</target>
        </trans-unit>
        <trans-unit id="9597bf822946a53594da77bbde393cd2281ada16" translate="yes" xml:space="preserve">
          <source>Symbol types are typically not used directly, instead being passed to &lt;a href=&quot;#symbol_type&quot;&gt;&lt;em&gt;symbol&lt;/em&gt;.type&lt;/a&gt;. However, you can define your own symbol type implementation should none of the built-in types satisfy your needs using the following interface. You can also use this low-level interface with a built-in symbol type as an alternative to the symbol generator.</source>
          <target state="translated">通常、シンボルタイプは直接使用されず、代わりに&lt;a href=&quot;#symbol_type&quot;&gt;&lt;em&gt;シンボル&lt;/em&gt; .type&lt;/a&gt;に渡され&lt;em&gt;ます&lt;/em&gt;。ただし、次のインターフェイスを使用して、組み込み型がニーズを満たさない場合は、独自のシンボル型の実装を定義できます。シンボルジェネレーターの代わりに、組み込みのシンボルタイプを持つこの低レベルのインターフェイスを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="22ad664e9eb98b75a73333b2b2395fc4b52e6fc9" translate="yes" xml:space="preserve">
          <source>Symbols</source>
          <target state="translated">Symbols</target>
        </trans-unit>
        <trans-unit id="93dc2a9e65e27896d688b812492f140bfaedba5d" translate="yes" xml:space="preserve">
          <source>Symbols provide a categorical shape encoding as is commonly used in scatterplots. Symbols are always centered at ⟨0,0⟩; use a transform (see: &lt;a href=&quot;http://www.w3.org/TR/SVG/coords.html#TransformAttribute&quot;&gt;SVG&lt;/a&gt;, &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#transformations&quot;&gt;Canvas&lt;/a&gt;) to move the symbol to a different position.</source>
          <target state="translated">シンボルは、散布図で一般的に使用されているようなカテゴリカルな形状のエンコーディングを提供します。シンボルは常に「0,0」を中心とします。変換（&lt;a href=&quot;http://www.w3.org/TR/SVG/coords.html#TransformAttribute&quot;&gt;SVG&lt;/a&gt;、&lt;a href=&quot;http://www.w3.org/TR/2dcontext/#transformations&quot;&gt;Canvasを&lt;/a&gt;参照）を使用して、シンボルを別の位置に移動します。</target>
        </trans-unit>
        <trans-unit id="9fde1c9f7b06bd16e37e74280e871151adb7a415" translate="yes" xml:space="preserve">
          <source>Symmetric anticipatory easing; scales &lt;a href=&quot;#easeBackIn&quot;&gt;backIn&lt;/a&gt; for &lt;em&gt;t&lt;/em&gt; in [0, 0.5] and &lt;a href=&quot;#easeBackOut&quot;&gt;backOut&lt;/a&gt; for &lt;em&gt;t&lt;/em&gt; in [0.5, 1].</source>
          <target state="translated">対称的な先行緩和; スケール&lt;a href=&quot;#easeBackIn&quot;&gt;backIn&lt;/a&gt;用&lt;em&gt;T&lt;/em&gt; [0、0.5]および&lt;a href=&quot;#easeBackOut&quot;&gt;バックアウト&lt;/a&gt;のために&lt;em&gt;T&lt;/em&gt; [0.5、1]です。</target>
        </trans-unit>
        <trans-unit id="cbfa8c0fe9e3fb27ba092f923ef4abda272a828a" translate="yes" xml:space="preserve">
          <source>Symmetric bounce easing; scales &lt;a href=&quot;#easeBounceIn&quot;&gt;bounceIn&lt;/a&gt; for &lt;em&gt;t&lt;/em&gt; in [0, 0.5] and &lt;a href=&quot;#easeBounceOut&quot;&gt;bounceOut&lt;/a&gt; for &lt;em&gt;t&lt;/em&gt; in [0.5, 1].</source>
          <target state="translated">対称バウンス緩和; スケール&lt;a href=&quot;#easeBounceIn&quot;&gt;bounceIn&lt;/a&gt;用&lt;em&gt;T&lt;/em&gt; [0、0.5]および&lt;a href=&quot;#easeBounceOut&quot;&gt;bounceOut&lt;/a&gt;ため&lt;em&gt;T&lt;/em&gt; [0.5、1]です。</target>
        </trans-unit>
        <trans-unit id="9765349d718fdd905b42925aee7cf8023a907a90" translate="yes" xml:space="preserve">
          <source>Symmetric circular easing; scales &lt;a href=&quot;#easeCircleIn&quot;&gt;circleIn&lt;/a&gt; for &lt;em&gt;t&lt;/em&gt; in [0, 0.5] and &lt;a href=&quot;#easeCircleOut&quot;&gt;circleOut&lt;/a&gt; for &lt;em&gt;t&lt;/em&gt; in [0.5, 1].</source>
          <target state="translated">対称的な円形のイージング。スケール&lt;a href=&quot;#easeCircleIn&quot;&gt;circleIn&lt;/a&gt;用&lt;em&gt;T&lt;/em&gt; [0、0.5]および&lt;a href=&quot;#easeCircleOut&quot;&gt;circleOut&lt;/a&gt;ため&lt;em&gt;T&lt;/em&gt; [0.5、1]です。</target>
        </trans-unit>
        <trans-unit id="552cf56cc0c293d7f80e9dba954bcb4fd58bdf0d" translate="yes" xml:space="preserve">
          <source>Symmetric cubic easing; scales &lt;a href=&quot;#easeCubicIn&quot;&gt;cubicIn&lt;/a&gt; for &lt;em&gt;t&lt;/em&gt; in [0, 0.5] and &lt;a href=&quot;#easeCubicOut&quot;&gt;cubicOut&lt;/a&gt; for &lt;em&gt;t&lt;/em&gt; in [0.5, 1]. Also equivalent to &lt;a href=&quot;#easePoly&quot;&gt;poly&lt;/a&gt;.&lt;a href=&quot;#poly_exponent&quot;&gt;exponent&lt;/a&gt;(3).</source>
          <target state="translated">対称的なキュービックイージング。スケール&lt;a href=&quot;#easeCubicIn&quot;&gt;cubicIn&lt;/a&gt;用&lt;em&gt;T&lt;/em&gt; [0、0.5]および&lt;a href=&quot;#easeCubicOut&quot;&gt;cubicOut&lt;/a&gt;ため&lt;em&gt;T&lt;/em&gt; [0.5、1]です。また、&lt;a href=&quot;#easePoly&quot;&gt;poly&lt;/a&gt;と同等です。&lt;a href=&quot;#poly_exponent&quot;&gt;指数&lt;/a&gt;（3）。</target>
        </trans-unit>
        <trans-unit id="1b0ca48f53280e85875600391c1dcd48914f7107" translate="yes" xml:space="preserve">
          <source>Symmetric elastic easing; scales &lt;a href=&quot;#easeElasticIn&quot;&gt;elasticIn&lt;/a&gt; for &lt;em&gt;t&lt;/em&gt; in [0, 0.5] and &lt;a href=&quot;#easeElasticOut&quot;&gt;elasticOut&lt;/a&gt; for &lt;em&gt;t&lt;/em&gt; in [0.5, 1].</source>
          <target state="translated">対称弾性緩和; スケール&lt;a href=&quot;#easeElasticIn&quot;&gt;elasticIn&lt;/a&gt;用&lt;em&gt;T&lt;/em&gt; [0、0.5]および&lt;a href=&quot;#easeElasticOut&quot;&gt;elasticOut&lt;/a&gt;ため&lt;em&gt;T&lt;/em&gt; [0.5、1]です。</target>
        </trans-unit>
        <trans-unit id="9dfd6cc44d3598ea9def833ad8b5d1eeee357ee7" translate="yes" xml:space="preserve">
          <source>Symmetric exponential easing; scales &lt;a href=&quot;#easeExpIn&quot;&gt;expIn&lt;/a&gt; for &lt;em&gt;t&lt;/em&gt; in [0, 0.5] and &lt;a href=&quot;#easeExpOut&quot;&gt;expOut&lt;/a&gt; for &lt;em&gt;t&lt;/em&gt; in [0.5, 1].</source>
          <target state="translated">対称指数緩和; スケール&lt;a href=&quot;#easeExpIn&quot;&gt;EXPIN&lt;/a&gt;ため&lt;em&gt;T&lt;/em&gt; [0、0.5]および&lt;a href=&quot;#easeExpOut&quot;&gt;expOut&lt;/a&gt;ため&lt;em&gt;T&lt;/em&gt; [0.5、1]に。</target>
        </trans-unit>
        <trans-unit id="b4b7eda278fc443da2a548d08dd9f144174a58d0" translate="yes" xml:space="preserve">
          <source>Symmetric polynomial easing; scales &lt;a href=&quot;#easePolyIn&quot;&gt;polyIn&lt;/a&gt; for &lt;em&gt;t&lt;/em&gt; in [0, 0.5] and &lt;a href=&quot;#easePolyOut&quot;&gt;polyOut&lt;/a&gt; for &lt;em&gt;t&lt;/em&gt; in [0.5, 1]. If the &lt;a href=&quot;#poly_exponent&quot;&gt;exponent&lt;/a&gt; is not specified, it defaults to 3, equivalent to &lt;a href=&quot;#easeCubic&quot;&gt;cubic&lt;/a&gt;.</source>
          <target state="translated">対称多項式イージング。スケール&lt;a href=&quot;#easePolyIn&quot;&gt;polyIn&lt;/a&gt;用&lt;em&gt;T&lt;/em&gt; [0、0.5]および&lt;a href=&quot;#easePolyOut&quot;&gt;polyOut&lt;/a&gt;ため&lt;em&gt;T&lt;/em&gt; [0.5、1]です。&lt;a href=&quot;#poly_exponent&quot;&gt;指数&lt;/a&gt;が指定されていない場合、デフォルトは3で、&lt;a href=&quot;#easeCubic&quot;&gt;cubic&lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="3ada1244f49851dfdc0418315d523c6de62cc855" translate="yes" xml:space="preserve">
          <source>Symmetric quadratic easing; scales &lt;a href=&quot;#easeQuadIn&quot;&gt;quadIn&lt;/a&gt; for &lt;em&gt;t&lt;/em&gt; in [0, 0.5] and &lt;a href=&quot;#easeQuadOut&quot;&gt;quadOut&lt;/a&gt; for &lt;em&gt;t&lt;/em&gt; in [0.5, 1]. Also equivalent to &lt;a href=&quot;#easePoly&quot;&gt;poly&lt;/a&gt;.&lt;a href=&quot;#poly_exponent&quot;&gt;exponent&lt;/a&gt;(2).</source>
          <target state="translated">対称二次イージング。スケール&lt;a href=&quot;#easeQuadIn&quot;&gt;quadIn&lt;/a&gt;用&lt;em&gt;T&lt;/em&gt; [0、0.5]および&lt;a href=&quot;#easeQuadOut&quot;&gt;quadOut&lt;/a&gt;ため&lt;em&gt;T&lt;/em&gt; [0.5、1]です。また、&lt;a href=&quot;#easePoly&quot;&gt;poly&lt;/a&gt;と同等です。&lt;a href=&quot;#poly_exponent&quot;&gt;指数&lt;/a&gt;（2）。</target>
        </trans-unit>
        <trans-unit id="1888ea8fae24061a86251f5df2c486858c094b6f" translate="yes" xml:space="preserve">
          <source>Symmetric sinusoidal easing; scales &lt;a href=&quot;#easeSinIn&quot;&gt;sinIn&lt;/a&gt; for &lt;em&gt;t&lt;/em&gt; in [0, 0.5] and &lt;a href=&quot;#easeSinOut&quot;&gt;sinOut&lt;/a&gt; for &lt;em&gt;t&lt;/em&gt; in [0.5, 1].</source>
          <target state="translated">対称的な正弦波の緩和; スケール&lt;a href=&quot;#easeSinIn&quot;&gt;sinIn&lt;/a&gt;用&lt;em&gt;T&lt;/em&gt; [0、0.5]および&lt;a href=&quot;#easeSinOut&quot;&gt;sinOut&lt;/a&gt;ため&lt;em&gt;T&lt;/em&gt; [0.5、1]です。</target>
        </trans-unit>
        <trans-unit id="9730d4326a7b8a0d13c2be3b7fe29b80ad152bf6" translate="yes" xml:space="preserve">
          <source>Table of Contents</source>
          <target state="translated">目次</target>
        </trans-unit>
        <trans-unit id="38ecec38eab08bd65160093244b33f1d8e459242" translate="yes" xml:space="preserve">
          <source>Tasks can only be deferred before &lt;a href=&quot;#queue_await&quot;&gt;&lt;em&gt;queue&lt;/em&gt;.await&lt;/a&gt; or &lt;a href=&quot;#queue_awaitAll&quot;&gt;&lt;em&gt;queue&lt;/em&gt;.awaitAll&lt;/a&gt; is called. If a task is deferred after then, an error is thrown. If the &lt;em&gt;task&lt;/em&gt; is not a function, an error is thrown.</source>
          <target state="translated">タスクは、&lt;a href=&quot;#queue_await&quot;&gt;&lt;em&gt;queue&lt;/em&gt; .await&lt;/a&gt;または&lt;a href=&quot;#queue_awaitAll&quot;&gt;&lt;em&gt;queue&lt;/em&gt; .awaitAll&lt;/a&gt;が呼び出される前にのみ延期でき&lt;em&gt;ます&lt;/em&gt;。その後タスクが延期されると、エラーがスローされます。&lt;em&gt;タスク&lt;/em&gt;が関数でない場合、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="e6be30266b876412ff0d9cbe13d385b2127af4c4" translate="yes" xml:space="preserve">
          <source>Tasks can take optional arguments. For example, here&amp;rsquo;s how to configure the delay before hello and provide a name:</source>
          <target state="translated">タスクはオプションの引数を取ることができます。たとえば、こんにちはの前に遅延を構成して名前を指定する方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="de694c7bf2a3f2c47e5d77255eac9c5fbc86ad80" translate="yes" xml:space="preserve">
          <source>The .&lt;b&gt;parents&lt;/b&gt;([</source>
          <target state="translated">。&lt;b&gt;両親&lt;/b&gt;（[</target>
        </trans-unit>
        <trans-unit id="f01383dcbc11a4fbca34354d153fea8b9b0da4e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#day&quot;&gt;day&lt;/a&gt;&lt;a href=&quot;#api-reference&quot;&gt;interval&lt;/a&gt; is one of several provided by d3-time. Each interval represents a conventional unit of time&amp;mdash;&lt;a href=&quot;#timeHour&quot;&gt;hours&lt;/a&gt;, &lt;a href=&quot;#timeWeek&quot;&gt;weeks&lt;/a&gt;, &lt;a href=&quot;#timeMonth&quot;&gt;months&lt;/a&gt;, &lt;em&gt;etc.&lt;/em&gt;&amp;mdash;and has methods to calculate boundary dates. For example, &lt;a href=&quot;#timeDay&quot;&gt;d3.timeDay&lt;/a&gt; computes midnight (typically 12:00 AM local time) of the corresponding day. In addition to &lt;a href=&quot;#interval_round&quot;&gt;rounding&lt;/a&gt; and &lt;a href=&quot;#interval_count&quot;&gt;counting&lt;/a&gt;, intervals can also be used to generate arrays of boundary dates. For example, to compute each Sunday in the current month:</source>
          <target state="translated">&lt;a href=&quot;#day&quot;&gt;日の&lt;/a&gt;&lt;a href=&quot;#api-reference&quot;&gt;間隔は&lt;/a&gt; D3-時間によって提供されるいくつかの一つです。各区間は、時間の従来の単位表す&lt;a href=&quot;#timeHour&quot;&gt;時間&lt;/a&gt;、&lt;a href=&quot;#timeWeek&quot;&gt;数週間&lt;/a&gt;、&lt;a href=&quot;#timeMonth&quot;&gt;数ヶ月&lt;/a&gt;、&lt;em&gt;等&lt;/em&gt; -and境界日付を計算する方法を有しています。たとえば、&lt;a href=&quot;#timeDay&quot;&gt;d3.timeDay&lt;/a&gt;は、対応する日の午前0時（通常は現地時間の午前12:00）を計算します。&lt;a href=&quot;#interval_round&quot;&gt;丸め&lt;/a&gt;と&lt;a href=&quot;#interval_count&quot;&gt;カウントに&lt;/a&gt;加えて、間隔を使用して境界日付の配列を生成することもできます。たとえば、当月の各日曜日を計算するには：</target>
        </trans-unit>
        <trans-unit id="d1c0fda726ad9faee549e796aee7ba9b3673989c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#forceX&quot;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/a&gt;- and &lt;a href=&quot;#forceY&quot;&gt;&lt;em&gt;y&lt;/em&gt;&lt;/a&gt;-positioning forces push nodes towards a desired position along the given dimension with a configurable strength. The &lt;a href=&quot;#forceRadial&quot;&gt;&lt;em&gt;radial&lt;/em&gt;&lt;/a&gt; force is similar, except it pushes nodes towards the closest point on a given circle. The strength of the force is proportional to the one-dimensional distance between the node&amp;rsquo;s position and the target position. While these forces can be used to position individual nodes, they are intended primarily for global forces that apply to all (or most) nodes.</source>
          <target state="translated">&lt;a href=&quot;#forceX&quot;&gt;&lt;em&gt;X&lt;/em&gt;&lt;/a&gt; -および&lt;a href=&quot;#forceY&quot;&gt;&lt;em&gt;Y&lt;/em&gt;&lt;/a&gt; -positioning力が設定可能な強度を有する所定の寸法に沿って所望の位置に向かってノードを押します。&lt;a href=&quot;#forceRadial&quot;&gt;&lt;em&gt;半径方向の&lt;/em&gt;&lt;/a&gt;力は、それが所定の円上の最も近い点に向かってノードを押す以外は、同様です。力の強さは、ノードの位置とターゲットの位置の間の1次元の距離に比例します。これらの力は個々のノードを配置するために使用できますが、主にすべて（またはほとんど）のノードに適用されるグローバルな力を対象としています。</target>
        </trans-unit>
        <trans-unit id="5f3065d7f5e469835ace49c04f1db5a18c410499" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#geoMollweide&quot;&gt;Mollweide projection&lt;/a&gt; interrupted into two (equal-area) hemispheres.</source>
          <target state="translated">&lt;a href=&quot;#geoMollweide&quot;&gt;Mollweide突起が&lt;/a&gt; 2つ（同じ面積）半球に中断します。</target>
        </trans-unit>
        <trans-unit id="6a0daf6d77058ab9eaa470695c03d16adda903f1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#transition_ease&quot;&gt;easing&lt;/a&gt;, &lt;a href=&quot;#transition_delay&quot;&gt;delay&lt;/a&gt; and &lt;a href=&quot;#transition_duration&quot;&gt;duration&lt;/a&gt; of a transition is configurable. For example, a per-element delay can be used to &lt;a href=&quot;http://bl.ocks.org/mbostock/3885705&quot;&gt;stagger the reordering&lt;/a&gt; of elements, improving perception. See &lt;a href=&quot;http://vis.berkeley.edu/papers/animated_transitions/&quot;&gt;Animated Transitions in Statistical Data Graphics&lt;/a&gt; for recommendations.</source>
          <target state="translated">トランジションの&lt;a href=&quot;#transition_ease&quot;&gt;緩和&lt;/a&gt;、&lt;a href=&quot;#transition_delay&quot;&gt;遅延&lt;/a&gt;、&lt;a href=&quot;#transition_duration&quot;&gt;継続時間&lt;/a&gt;は構成可能です。たとえば、要素ごとの遅延を使用して、要素&lt;a href=&quot;http://bl.ocks.org/mbostock/3885705&quot;&gt;の並べ替え&lt;/a&gt;をずらし、認識を向上させることができます。推奨事項について&lt;a href=&quot;http://vis.berkeley.edu/papers/animated_transitions/&quot;&gt;は、統計データグラフィックのアニメーション化された遷移を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c20a4404db7ead4b26d3dad39adf289e642e1192" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../d3-array#range&quot;&gt;d3.range&lt;/a&gt; method no longer makes an elaborate attempt to avoid floating-point error when &lt;em&gt;step&lt;/em&gt; is not an integer. The returned values are strictly defined as &lt;em&gt;start&lt;/em&gt; + &lt;em&gt;i&lt;/em&gt; * &lt;em&gt;step&lt;/em&gt;, where &lt;em&gt;i&lt;/em&gt; is an integer. (Learn more about &lt;a href=&quot;http://0.30000000000000004.com/&quot;&gt;floating point math&lt;/a&gt;.) d3.range returns the empty array for infinite ranges, rather than throwing an error.</source>
          <target state="translated">&lt;a href=&quot;../../../d3-array#range&quot;&gt;d3.rangeの&lt;/a&gt;方法は、もはやとき、浮動小数点エラーを回避するために精巧な試み行うものではありません&lt;em&gt;ステップは&lt;/em&gt;整数ではありませんが。戻り値は厳密に&lt;em&gt;start&lt;/em&gt; + &lt;em&gt;i&lt;/em&gt; * &lt;em&gt;step&lt;/em&gt;として定義されます。ここで、&lt;em&gt;i&lt;/em&gt;は整数です。（&lt;a href=&quot;http://0.30000000000000004.com/&quot;&gt;浮動小数点演算の&lt;/a&gt;詳細については、こちらをご覧ください。）d3.rangeは、エラーをスローするのではなく、無限範囲の空の配列を返します。</target>
        </trans-unit>
        <trans-unit id="b2a6a2c76390b08243de8a2fb857530181ab292d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../d3-collection#map&quot;&gt;d3.map&lt;/a&gt; constructor also follows the standard array accessor argument pattern.</source>
          <target state="translated">&lt;a href=&quot;../../../d3-collection#map&quot;&gt;d3.mapの&lt;/a&gt;コンストラクタは、標準配列アクセサ引数のパターンに従います。</target>
        </trans-unit>
        <trans-unit id="28abe87669639e33392db408611c82937ed24258" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../d3-collection#nest_map&quot;&gt;&lt;em&gt;nest&lt;/em&gt;.map&lt;/a&gt; method now always returns a d3.map instance. For a plain object, use &lt;a href=&quot;../../../d3-collection#nest_object&quot;&gt;&lt;em&gt;nest&lt;/em&gt;.object&lt;/a&gt; instead. When used in conjunction with &lt;a href=&quot;../../../d3-collection#nest_rollup&quot;&gt;&lt;em&gt;nest&lt;/em&gt;.rollup&lt;/a&gt;, &lt;a href=&quot;../../../d3-collection#nest_entries&quot;&gt;&lt;em&gt;nest&lt;/em&gt;.entries&lt;/a&gt; now returns {key, value} objects for the leaf entries, instead of {key, values}. This makes &lt;em&gt;nest&lt;/em&gt;.rollup easier to use in conjunction with &lt;a href=&quot;#hierarchies-d3-hierarchy&quot;&gt;hierarchies&lt;/a&gt;, as in this &lt;a href=&quot;https://bl.ocks.org/mbostock/2838bf53e0e65f369f476afd653663a2&quot;&gt;Nest Treemap example&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../d3-collection#nest_map&quot;&gt;&lt;em&gt;巣&lt;/em&gt; .MAP&lt;/a&gt;方法について、常にd3.mapインスタンスを返します。プレーンオブジェクトの場合は、代わりに&lt;a href=&quot;../../../d3-collection#nest_object&quot;&gt;&lt;em&gt;nest&lt;/em&gt; .object&lt;/a&gt;を使用してください。場合と共に使用&lt;a href=&quot;../../../d3-collection#nest_rollup&quot;&gt;&lt;em&gt;ネスト&lt;/em&gt; .rollup&lt;/a&gt;、&lt;a href=&quot;../../../d3-collection#nest_entries&quot;&gt;&lt;em&gt;ネスト&lt;/em&gt; .entries&lt;/a&gt;代わり{キー、値}の今リターン{キー、値}リーフエントリのオブジェクトを、。これは作る&lt;em&gt;巣を&lt;/em&gt;と組み合わせて使用する方が簡単.rollup &lt;a href=&quot;#hierarchies-d3-hierarchy&quot;&gt;階層&lt;/a&gt;この中として、&lt;a href=&quot;https://bl.ocks.org/mbostock/2838bf53e0e65f369f476afd653663a2&quot;&gt;巣ツリーマップの例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58801b1503e024a258839d1b45a9a783f6c51307" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../d3-collection#set&quot;&gt;d3.set&lt;/a&gt; constructor now accepts an existing set for making a copy. If you pass an array to d3.set, you can also pass a value accessor. This accessor takes the standard arguments: the current element (&lt;em&gt;d&lt;/em&gt;), the index (&lt;em&gt;i&lt;/em&gt;), and the array (&lt;em&gt;data&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; undefined. For example:</source>
          <target state="translated">&lt;a href=&quot;../../../d3-collection#set&quot;&gt;d3.setの&lt;/a&gt;コンストラクタは、今のコピーを作成するための既存のセットを受け入れます。配列をd3.setに渡す場合、値アクセサーも渡すことができます。このアクセサーは、標準の引数（現在の要素（&lt;em&gt;d&lt;/em&gt;）、インデックス（&lt;em&gt;i&lt;/em&gt;）、および配列（&lt;em&gt;data&lt;/em&gt;））を取りますが、&lt;em&gt;これは&lt;/em&gt;未定義です。例えば：</target>
        </trans-unit>
        <trans-unit id="9dda0166848d312263eb3b6cf1679420ec09a256" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../d3-color#rgb_brighter&quot;&gt;&lt;em&gt;rgb&lt;/em&gt;.brighter&lt;/a&gt; method no longer special-cases black. This is a multiplicative operator, defining a new color &lt;em&gt;r&lt;/em&gt;&amp;prime;, &lt;em&gt;g&lt;/em&gt;&amp;prime;, &lt;em&gt;b&lt;/em&gt;&amp;prime; where &lt;em&gt;r&lt;/em&gt;&amp;prime; = &lt;em&gt;r&lt;/em&gt; &amp;times; &lt;em&gt;pow&lt;/em&gt;(0.7, &lt;em&gt;k&lt;/em&gt;), &lt;em&gt;g&lt;/em&gt;&amp;prime; = &lt;em&gt;g&lt;/em&gt; &amp;times; &lt;em&gt;pow&lt;/em&gt;(0.7, &lt;em&gt;k&lt;/em&gt;) and &lt;em&gt;b&lt;/em&gt;&amp;prime; = &lt;em&gt;b&lt;/em&gt; &amp;times; &lt;em&gt;pow&lt;/em&gt;(0.7, &lt;em&gt;k&lt;/em&gt;); a brighter black is still black.</source>
          <target state="translated">&lt;a href=&quot;../../../d3-color#rgb_brighter&quot;&gt;&lt;em&gt;RGB&lt;/em&gt; .brighterの&lt;/a&gt;ブラック法、もはや特別な場合。これは乗法演算子で、新しい色&lt;em&gt;r&lt;/em&gt; &amp;prime;、&lt;em&gt;g&lt;/em&gt; &amp;prime;、&lt;em&gt;bを&lt;/em&gt;定義します。ここで、&lt;em&gt;r&lt;/em&gt; &amp;prime;= &lt;em&gt;r&lt;/em&gt; &amp;times; &lt;em&gt;pow&lt;/em&gt;（0.7、&lt;em&gt;k&lt;/em&gt;）、&lt;em&gt;g&lt;/em&gt; &amp;prime; = &lt;em&gt;g&lt;/em&gt; &amp;times; &lt;em&gt;pow&lt;/em&gt;（0.7、&lt;em&gt;k&lt;/em&gt;）および&lt;em&gt;b&lt;/em&gt; &amp;prime;= &lt;em&gt;b&lt;/em&gt; &amp;times; &lt;em&gt;pow&lt;/em&gt;（ 0.7、&lt;em&gt;k&lt;/em&gt;）;明るい黒はまだ黒です。</target>
        </trans-unit>
        <trans-unit id="bbb3d63eef194d3f7b751d1d4459b99c9cb16bd6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../d3-dispatch#dispatch_on&quot;&gt;&lt;em&gt;dispatch&lt;/em&gt;.on&lt;/a&gt; method now accepts multiple typenames, allowing you to add or remove listeners for multiple events simultaneously. For example, to send both &lt;em&gt;foo&lt;/em&gt; and &lt;em&gt;bar&lt;/em&gt; events to the same listener:</source>
          <target state="translated">&lt;a href=&quot;../../../d3-dispatch#dispatch_on&quot;&gt;&lt;em&gt;派遣&lt;/em&gt; .on&lt;/a&gt;方法は、今あなたが同時に複数のイベントのリスナーを追加または削除することができ、複数の型名を受け入れます。たとえば、&lt;em&gt;foo&lt;/em&gt;イベントと&lt;em&gt;bar&lt;/em&gt;イベントの両方を同じリスナーに送信するには：</target>
        </trans-unit>
        <trans-unit id="e682edf588383b69c5a12a33669fb16331dab506" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../d3-dsv#dsv_parse&quot;&gt;&lt;em&gt;dsv&lt;/em&gt;.parse&lt;/a&gt; method now exposes the column names and their input order as &lt;em&gt;data&lt;/em&gt;.columns. For example:</source>
          <target state="translated">&lt;a href=&quot;../../../d3-dsv#dsv_parse&quot;&gt;&lt;em&gt;DSV&lt;/em&gt; .parse&lt;/a&gt;方法は、今のように、列名とその入力順公開する&lt;em&gt;データ&lt;/em&gt; .columnsを。例えば：</target>
        </trans-unit>
        <trans-unit id="5c5186979e99d4b627b2e6e16cae05af633f3080" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../d3-format#formatPrefix&quot;&gt;d3.formatPrefix&lt;/a&gt; method has been changed. Rather than returning an SI-prefix string, it returns an SI-prefix format function for a given &lt;em&gt;specifier&lt;/em&gt; and reference &lt;em&gt;value&lt;/em&gt;. For example, to format thousands:</source>
          <target state="translated">&lt;a href=&quot;../../../d3-format#formatPrefix&quot;&gt;d3.formatPrefixの&lt;/a&gt;方法が変更されました。SIプレフィックス文字列を返すのではなく、&lt;em&gt;指定された指定子&lt;/em&gt;と参照&lt;em&gt;値の&lt;/em&gt; SIプレフィックス形式関数を返し&lt;em&gt;ます&lt;/em&gt;。たとえば、数千をフォーマットするには：</target>
        </trans-unit>
        <trans-unit id="fd41e2eb80577383d63653e7f2bceccaac154dc8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../d3-interpolate#interpolate&quot;&gt;d3.interpolate&lt;/a&gt; method no longer delegates to d3.interpolators, which has been removed; its behavior is now defined by the library. It is now slightly faster in the common case that &lt;em&gt;b&lt;/em&gt; is a number. It only uses &lt;a href=&quot;../../../d3-interpolate#interpolateRgb&quot;&gt;d3.interpolateRgb&lt;/a&gt; if &lt;em&gt;b&lt;/em&gt; is a valid CSS color specifier (and not approximately one). And if the end value &lt;em&gt;b&lt;/em&gt; is null, undefined, true or false, d3.interpolate now returns a constant function which always returns &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../d3-interpolate#interpolate&quot;&gt;d3.interpolateの&lt;/a&gt;方法削除されたd3.interpolatorsにもはや委譲します。その動作は現在ライブラリによって定義されています。&lt;em&gt;b&lt;/em&gt;が数値である一般的なケースでは、わずかに高速になりました。&lt;em&gt;b&lt;/em&gt;が有効なCSSカラー指定子（およそ1ではない）である場合にのみ、&lt;a href=&quot;../../../d3-interpolate#interpolateRgb&quot;&gt;d3.interpolateRgbを&lt;/a&gt;使用します。また、終了値&lt;em&gt;b&lt;/em&gt;がnull、未定義、trueまたはfalseの場合、d3.interpolateは常に&lt;em&gt;bを&lt;/em&gt;返す定数関数を返すようになりました。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="79e43c1e5bae25524e4a1ba41326ba6e3a1ad13a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../d3-path#path&quot;&gt;d3.path&lt;/a&gt; serializer implements the &lt;a href=&quot;https://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;CanvasPathMethods API&lt;/a&gt;, allowing you to write code that can render to either Canvas or SVG. For example, given some code that draws to a canvas:</source>
          <target state="translated">&lt;a href=&quot;../../../d3-path#path&quot;&gt;d3.pathの&lt;/a&gt;シリアライザを実装&lt;a href=&quot;https://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;CanvasPathMethodsのAPI&lt;/a&gt;、あなたはキャンバスやSVGのいずれかにレンダリングすることができ、コードを記述することができます。たとえば、キャンバスに描画するコードがあるとします。</target>
        </trans-unit>
        <trans-unit id="27236fbd546ceca7093e09d332439ae3ce12ba63" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../d3-request#csv&quot;&gt;d3.csv&lt;/a&gt; and &lt;a href=&quot;../../../d3-request#tsv&quot;&gt;d3.tsv&lt;/a&gt; methods for loading files of the corresponding formats have not been renamed, however! Those are defined in &lt;a href=&quot;#requests-d3-request&quot;&gt;d3-request&lt;/a&gt;.There&amp;rsquo;s no longer a d3.dsv method, which served the triple purpose of defining a DSV formatter, a DSV parser and a DSV requestor; instead, there&amp;rsquo;s just &lt;a href=&quot;../../../d3-dsv#dsvFormat&quot;&gt;d3.dsvFormat&lt;/a&gt; which you can use to define a DSV formatter and parser. You can use &lt;a href=&quot;../../../d3-request#request_response&quot;&gt;&lt;em&gt;request&lt;/em&gt;.response&lt;/a&gt; to make a request and then parse the response body, or just use &lt;a href=&quot;../../../d3-request#text&quot;&gt;d3.text&lt;/a&gt;.</source>
          <target state="translated">ただし、対応する形式のファイルをロードするための&lt;a href=&quot;../../../d3-request#csv&quot;&gt;d3.csv&lt;/a&gt;および&lt;a href=&quot;../../../d3-request#tsv&quot;&gt;d3.tsv&lt;/a&gt;メソッドの名前は変更されていません。これらは&lt;a href=&quot;#requests-d3-request&quot;&gt;d3-requestで&lt;/a&gt;定義されます。DSVフォーマッター、DSVパーサー、DSVリクエスターを定義するという3つの目的を果たすd3.dsvメソッドはもうありません。代わりに、DSVフォーマッターとパーサーを定義するために使用できる&lt;a href=&quot;../../../d3-dsv#dsvFormat&quot;&gt;d3.dsvFormatが&lt;/a&gt;あります。&lt;a href=&quot;../../../d3-request#request_response&quot;&gt;&lt;em&gt;request&lt;/em&gt; .response&lt;/a&gt;を使用して&lt;em&gt;リクエスト&lt;/em&gt;を作成し、レスポンスボディを解析するか、単に&lt;a href=&quot;../../../d3-request#text&quot;&gt;d3.textを&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="c72cef420f7f127f3720773f2bc293aa457c4361" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../d3-request#request&quot;&gt;d3.request&lt;/a&gt;, &lt;a href=&quot;../../../d3-request#text&quot;&gt;d3.text&lt;/a&gt; and &lt;a href=&quot;../../../d3-request#xml&quot;&gt;d3.xml&lt;/a&gt; methods no longer take an optional mime type as the second argument; use &lt;a href=&quot;../../../d3-request#request_mimeType&quot;&gt;&lt;em&gt;request&lt;/em&gt;.mimeType&lt;/a&gt; instead. For example:</source>
          <target state="translated">&lt;a href=&quot;../../../d3-request#request&quot;&gt;d3.request&lt;/a&gt;、&lt;a href=&quot;../../../d3-request#text&quot;&gt;d3.text&lt;/a&gt;と&lt;a href=&quot;../../../d3-request#xml&quot;&gt;d3.xml&lt;/a&gt;方法はもはや2番目の引数としてオプションのMIMEタイプを取りません。代わりに&lt;a href=&quot;../../../d3-request#request_mimeType&quot;&gt;&lt;em&gt;request&lt;/em&gt; .mimeType&lt;/a&gt;を使用してください。例えば：</target>
        </trans-unit>
        <trans-unit id="f4a6b788a5ae3db6cc1d14d9da9aeae122f3033c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../d3-scale#ordinal-scales&quot;&gt;ordinal scale constructor&lt;/a&gt; now takes an optional &lt;em&gt;range&lt;/em&gt; for a shorter alternative to &lt;a href=&quot;../../../d3-scale#ordinal_range&quot;&gt;&lt;em&gt;ordinal&lt;/em&gt;.range&lt;/a&gt;. This is especially useful now that the categorical color scales have been changed to simple arrays of colors rather than specialized ordinal scale constructors:</source>
          <target state="translated">&lt;a href=&quot;../../../d3-scale#ordinal-scales&quot;&gt;順序尺度のコンストラクタは、&lt;/a&gt;オプションになりましかかる&lt;em&gt;範囲&lt;/em&gt;に短い代替のための&lt;a href=&quot;../../../d3-scale#ordinal_range&quot;&gt;&lt;em&gt;序&lt;/em&gt; .rangeを&lt;/a&gt;。これは、カテゴリカルカラースケールが、特殊な序数スケールコンストラクターではなく、単純な色の配列に変更されたため、特に便利です。</target>
        </trans-unit>
        <trans-unit id="01b4d1f3d22ed49aab75a1147afa5534dae052b5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../d3-selection#selection_data&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.data&lt;/a&gt; method has been changed slightly with respect to duplicate keys. In 3.x, if multiple data had the same key, the duplicate data would be ignored and not included in enter, update or exit; in 4.0 the duplicate data is always put in the enter selection. In both 3.x and 4.0, if multiple elements have the same key, the duplicate elements are put in the exit selection. Thus, 4.0&amp;rsquo;s behavior is now symmetric for enter and exit, and the general update pattern will now produce a DOM that matches the data even if there are duplicate keys.</source>
          <target state="translated">&lt;a href=&quot;../../../d3-selection#selection_data&quot;&gt;&lt;em&gt;選択&lt;/em&gt; .DATA&lt;/a&gt;方法は、重複キーに対してわずかに変更されています。 3.xでは、複数のデータに同じキーがある場合、重複するデータは無視され、Enter、Update、Exitに含まれませんでした。 4.0では、重複データは常に入力選択に入れられます。 3.xと4.0の両方で、複数の要素が同じキーを持っている場合、重複する要素は出口選択に配置されます。したがって、4.0の動作は現在、開始と終了で対称的であり、一般的な更新パターンは、重複するキーがある場合でも、データと一致するDOMを生成するようになりました。</target>
        </trans-unit>
        <trans-unit id="e2c063d397b5ff82cbaa2cb78d834bbdbe3f7ea3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../d3-transition#selection_interrupt&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.interrupt&lt;/a&gt; method now cancels all scheduled transitions on the selected elements, in addition to interrupting any active transition. When transitions are interrupted, any resources associated with the transition are now released immediately, rather than waiting until the transition starts, improving performance. (See also &lt;a href=&quot;../../../d3-timer#timer_stop&quot;&gt;&lt;em&gt;timer&lt;/em&gt;.stop&lt;/a&gt;.) The new &lt;a href=&quot;../../../d3-transition#interrupt&quot;&gt;d3.interrupt&lt;/a&gt; method is an alternative to &lt;a href=&quot;../../../d3-transition#selection_interrupt&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.interrupt&lt;/a&gt; for quickly interrupting a single node.</source>
          <target state="translated">&lt;a href=&quot;../../../d3-transition#selection_interrupt&quot;&gt;&lt;em&gt;選択&lt;/em&gt; .INTERRUPT&lt;/a&gt;方法は、現在アクティブな遷移を中断することに加えて、選択された要素のすべてのスケジュールされた遷移をキャンセルします。トランジションが中断されると、トランジションに関連するすべてのリソースがすぐに解放されるようになり、トランジションが開始されるまで待機せず、パフォーマンスが向上します。 （&lt;a href=&quot;../../../d3-timer#timer_stop&quot;&gt;&lt;em&gt;timer&lt;/em&gt; .stop&lt;/a&gt;も参照してください。）新しい&lt;a href=&quot;../../../d3-transition#interrupt&quot;&gt;d3.interrupt&lt;/a&gt;メソッドは、単一のノードをすばやく中断するための&lt;a href=&quot;../../../d3-transition#selection_interrupt&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .interruptの&lt;/a&gt;代替手段です。</target>
        </trans-unit>
        <trans-unit id="bbebf2a5d5cc85f99c99f9f7895a08bd7b89cc2d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../d3-transition#selection_transition&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.transition&lt;/a&gt; method now takes an optional &lt;em&gt;transition&lt;/em&gt; instance which can be used to synchronize a new transition with an existing transition. (This change is discussed further in &lt;a href=&quot;https://medium.com/@mbostock/what-makes-software-good-943557f8a488&quot;&gt;What Makes Software Good?&lt;/a&gt;) For example:</source>
          <target state="translated">&lt;a href=&quot;../../../d3-transition#selection_transition&quot;&gt;&lt;em&gt;選択&lt;/em&gt; .transitionの&lt;/a&gt;方法について任意かかる&lt;em&gt;遷移&lt;/em&gt;既存の遷移に新しい遷移を同期させるために使用することができるインスタンス。 （この変更については、&lt;a href=&quot;https://medium.com/@mbostock/what-makes-software-good-943557f8a488&quot;&gt;「ソフトウェアの優れ&lt;/a&gt;た点」でさらに説明されています）例：</target>
        </trans-unit>
        <trans-unit id="861a3fa1d345e87bbbe64a8d9823cf60ecd30ec2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../d3-transition#the-life-of-a-transition&quot;&gt;life cycle of a transition&lt;/a&gt; is now more formally defined and enforced. For example, attempting to change the duration of a running transition now throws an error rather than silently failing. The &lt;a href=&quot;../../../d3-transition#transition_remove&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.remove&lt;/a&gt; method has been fixed if multiple transition names are in use: the element is only removed if it has no scheduled transitions, regardless of name. The &lt;a href=&quot;../../../d3-transition#transition_ease&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.ease&lt;/a&gt; method now always takes an &lt;a href=&quot;#easings-d3-ease&quot;&gt;easing function&lt;/a&gt;, not a string. When a transition ends, the tweens are invoked one last time with &lt;em&gt;t&lt;/em&gt; equal to exactly 1, regardless of the associated easing function.</source>
          <target state="translated">&lt;a href=&quot;../../../d3-transition#the-life-of-a-transition&quot;&gt;トランジション&lt;/a&gt;のライフサイクルがより正式に定義され、実施されるようになりました。たとえば、実行中のトランジションの期間を変更しようとすると、警告なしに失敗するのではなく、エラーがスローされるようになりました。&lt;a href=&quot;../../../d3-transition#transition_remove&quot;&gt;&lt;em&gt;移行&lt;/em&gt; .remove&lt;/a&gt;それは予定の遷移を持っていない場合、要素のみを除去して、名前に関係なく：複数の遷移の名前が使用されている場合、このメソッドは修正されました。&lt;a href=&quot;../../../d3-transition#transition_ease&quot;&gt;&lt;em&gt;移行&lt;/em&gt; .ease&lt;/a&gt;方法について、常にかかる&lt;a href=&quot;#easings-d3-ease&quot;&gt;イージング関数&lt;/a&gt;ではなく、文字列を。トランジションが終了すると、関連するイージング関数に関係なく、&lt;em&gt;t&lt;/em&gt;が正確に1 であるトゥイーンが最後にもう一度呼び出されます。</target>
        </trans-unit>
        <trans-unit id="8751504f82b2747de33a103f14295cebdb4118ff" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../d3-voronoi#voronoi_polygons&quot;&gt;&lt;em&gt;voronoi&lt;/em&gt;.polygons&lt;/a&gt; and &lt;a href=&quot;../../../d3-voronoi#diagram_polygons&quot;&gt;&lt;em&gt;diagram&lt;/em&gt;.polygons&lt;/a&gt; now require an &lt;a href=&quot;../../../d3-voronoi#voronoi_extent&quot;&gt;extent&lt;/a&gt;; there is no longer an implicit extent of &amp;plusmn;1e6. The &lt;a href=&quot;../../../d3-voronoi#voronoi_links&quot;&gt;&lt;em&gt;voronoi&lt;/em&gt;.links&lt;/a&gt;, &lt;a href=&quot;../../../d3-voronoi#voronoi_triangles&quot;&gt;&lt;em&gt;voronoi&lt;/em&gt;.triangles&lt;/a&gt;, &lt;a href=&quot;../../../d3-voronoi#diagram_links&quot;&gt;&lt;em&gt;diagram&lt;/em&gt;.links&lt;/a&gt; and &lt;a href=&quot;../../../d3-voronoi#diagram_triangles&quot;&gt;&lt;em&gt;diagram&lt;/em&gt;.triangles&lt;/a&gt; are now affected by the clip extent: as the Delaunay is computed as the dual of the Voronoi, two sites are only linked if the clipped cells are touching. To compute the Delaunay triangulation without respect to clipping, set the extent to null.</source>
          <target state="translated">&lt;a href=&quot;../../../d3-voronoi#voronoi_polygons&quot;&gt;&lt;em&gt;ボロノイ&lt;/em&gt; .polygons&lt;/a&gt;及び&lt;a href=&quot;../../../d3-voronoi#diagram_polygons&quot;&gt;&lt;em&gt;図&lt;/em&gt; .polygonsが&lt;/a&gt;今必要とする&lt;a href=&quot;../../../d3-voronoi#voronoi_extent&quot;&gt;範囲を&lt;/a&gt;、 &amp;plusmn;1e6の暗黙的な範囲はなくなりました。&lt;a href=&quot;../../../d3-voronoi#voronoi_links&quot;&gt;&lt;em&gt;ボロノイ&lt;/em&gt; .linksは&lt;/a&gt;、&lt;a href=&quot;../../../d3-voronoi#voronoi_triangles&quot;&gt;&lt;em&gt;ボロノイ&lt;/em&gt; .triangles&lt;/a&gt;、&lt;a href=&quot;../../../d3-voronoi#diagram_links&quot;&gt;&lt;em&gt;図&lt;/em&gt; .links&lt;/a&gt;及び&lt;a href=&quot;../../../d3-voronoi#diagram_triangles&quot;&gt;&lt;em&gt;図&lt;/em&gt; .trianglesは&lt;/a&gt;今やクリップ程度によって影響される：ドロネーはボロノイのデュアルとして計算されるようにクリップされた細胞が接触している場合は、二つの部位にのみ連結されています。クリッピングを考慮せずにDelaunay三角形分割を計算するには、範囲をnullに設定します。</target>
        </trans-unit>
        <trans-unit id="585f8dd24eaf1ad5dc54ed5b01e08c78dd434437" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://cybergeo.revues.org/3977&quot;&gt;Bottomley projection&lt;/a&gt; &amp;ldquo;draws lines of latitude as concentric circular arcs, with arc lengths equal to their lengths on the globe, and placed symmetrically and equally spaced across the vertical central meridian.&amp;rdquo;</source>
          <target state="translated">&lt;a href=&quot;http://cybergeo.revues.org/3977&quot;&gt;Bottomley突起は&lt;/a&gt;「アーク長が地球上のそれらの長さに等しく、そして垂直中央経線を横切って対称に配置し、等間隔で、同心の円弧として緯度の線を描画します。」</target>
        </trans-unit>
        <trans-unit id="bbc4fe52aff74798a686f96d673d7258f2805082" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://mathworld.wolfram.com/Circumcenter.html&quot;&gt;circumcenters&lt;/a&gt; of the Delaunay triangles as a Float64Array [&lt;em&gt;cx0&lt;/em&gt;, &lt;em&gt;cy0&lt;/em&gt;, &lt;em&gt;cx1&lt;/em&gt;, &lt;em&gt;cy1&lt;/em&gt;, &amp;hellip;]. Each contiguous pair of coordinates &lt;em&gt;cx&lt;/em&gt;, &lt;em&gt;cy&lt;/em&gt; is the circumcenter for the corresponding triangle. These circumcenters form the coordinates of the Voronoi cell polygons.</source>
          <target state="translated">Float64Array [ &lt;em&gt;cx0&lt;/em&gt;、&lt;em&gt;cy0&lt;/em&gt;、&lt;em&gt;cx1&lt;/em&gt;、&lt;em&gt;cy1&lt;/em&gt;、&amp;hellip;] としてのDelaunay三角形の&lt;a href=&quot;http://mathworld.wolfram.com/Circumcenter.html&quot;&gt;外心&lt;/a&gt;。座標&lt;em&gt;cx&lt;/em&gt;、&lt;em&gt;cyの&lt;/em&gt;隣接する各ペアは、対応する三角形の外心です。これらの外心は、ボロノイセルポリゴンの座標を形成します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3cc4bd3209255d30ce76b383fb34b3ee79782a7a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.shadedrelief.com/NE2_proj/&quot;&gt;Natural Earth II&lt;/a&gt; projection. Compared to &lt;a href=&quot;#geoNaturalEarth&quot;&gt;Natural Earth&lt;/a&gt;, it is slightly taller and rounder.</source>
          <target state="translated">&lt;a href=&quot;http://www.shadedrelief.com/NE2_proj/&quot;&gt;自然地球IIの&lt;/a&gt;投影。&lt;a href=&quot;#geoNaturalEarth&quot;&gt;ナチュラルアース&lt;/a&gt;と比較して、わずかに高く丸みを帯びています。</target>
        </trans-unit>
        <trans-unit id="e06a51636a7d082d4974bc44a5156a0b3232d68e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.shadedrelief.com/NE_proj/&quot;&gt;Natural Earth projection&lt;/a&gt; is a pseudocylindrical projection designed by Tom Patterson. It is neither conformal nor equal-area, but appealing to the eye for small-scale maps of the whole world.</source>
          <target state="translated">&lt;a href=&quot;http://www.shadedrelief.com/NE_proj/&quot;&gt;自然地球の投影は、&lt;/a&gt;トム・パターソンによって設計pseudocylindrical投影です。これは、コンフォーマルでも面積でもありませんが、全世界の小規模なマップが目を引く魅力があります。</target>
        </trans-unit>
        <trans-unit id="75318db781e8bb1f62ec684216ff10c680729b9a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Universal_selectors&quot;&gt;universal selector&lt;/a&gt;, &lt;code&gt;*&lt;/code&gt;, selects all descendant elements. If you also want to interrupt the G element itself:</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Universal_selectors&quot;&gt;ユニバーサルセレクタは&lt;/a&gt;、 &lt;code&gt;*&lt;/code&gt; 、すべての子孫要素を選択します。G要素自体も中断したい場合：</target>
        </trans-unit>
        <trans-unit id="64a2106442b97b0eb2e1ec4831bba1fef0994a90" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://en.wikipedia.org/wiki/Loximuthal_projection&quot;&gt;loximuthal projection&lt;/a&gt; is &amp;ldquo;characterized by the fact that loxodromes (rhumb lines) from one chosen central point (the intersection of the central meridian and central latitude) are shown as straight lines, correct in azimuth from the center, and are &amp;lsquo;true to scale&amp;rsquo;&amp;hellip; It is neither an equal-area projection nor conformal.&amp;rdquo;</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Loximuthal_projection&quot;&gt;loximuthal投影は&lt;/a&gt;「一選択された中心点（中央経線及び中央緯度の交点）からloxodromes（航程線）を中心から方位角において、直線で正しい示され、「スケールに忠実されていることを特徴とします「&amp;hellip;これは、等面積投影でも正角図法でもありません。」</target>
        </trans-unit>
        <trans-unit id="a0ba3ec3d095bca3bce85cb0101ca67729c17e2b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://en.wikipedia.org/wiki/Map_projection#Conic&quot;&gt;two standard parallels&lt;/a&gt; that define the map layout in conic projections.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Map_projection#Conic&quot;&gt;2つの標準緯線&lt;/a&gt;円錐図法の地図レイアウトを定義します。</target>
        </trans-unit>
        <trans-unit id="fd748fe65ab85857ba2e47ebf178b7c3220e9971" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/maxogden/art-of-node#callbacks&quot;&gt;asynchronous callback pattern&lt;/a&gt; is very common in Node.js, so Queue works directly with many Node APIs. For example, to &lt;a href=&quot;https://nodejs.org/dist/latest/docs/api/fs.html#fs_fs_stat_path_callback&quot;&gt;stat two files&lt;/a&gt; concurrently:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/maxogden/art-of-node#callbacks&quot;&gt;非同期コールバックパターンは、&lt;/a&gt;キューが多くのノードのAPIと直接動作しますので、Node.jsの中で非常に一般的です。たとえば、&lt;a href=&quot;https://nodejs.org/dist/latest/docs/api/fs.html#fs_fs_stat_path_callback&quot;&gt;2つのファイルを&lt;/a&gt;同時にstatするには：</target>
        </trans-unit>
        <trans-unit id="b04a9cfafcf16fc3138578b2e4d733f6ed68f8f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;%&lt;/code&gt; sign indicating a directive may be immediately followed by a padding modifier:</source>
          <target state="translated">&lt;code&gt;%&lt;/code&gt; の指令を示す符号を直ちにパディング改質を行ってもよいです。</target>
        </trans-unit>
        <trans-unit id="b07d174a369393b82f2fddf32a54d5cadf7e5dfe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;o&lt;/code&gt;, &lt;code&gt;d&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt; directives now round to the nearest integer, rather than returning the empty string for non-integers:</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; 、 &lt;code&gt;o&lt;/code&gt; 、 &lt;code&gt;d&lt;/code&gt; 及び &lt;code&gt;x&lt;/code&gt; はなく、非整数の空の文字列を返すよりも、最も近い整数に今ラウンドディレクティブ：</target>
        </trans-unit>
        <trans-unit id="992f956b216386ea3fdf961a12fcf06ae9b67328" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;c&lt;/code&gt; directive is now for character data (&lt;em&gt;i.e.&lt;/em&gt;, literal strings), not for character codes. The is useful if you just want to apply padding and alignment and don&amp;rsquo;t care about formatting numbers. For example, the infamous &lt;a href=&quot;http://blog.npmjs.org/post/141577284765/kik-left-pad-and-npm&quot;&gt;left-pad&lt;/a&gt; (as well as center- and right-pad!) can be conveniently implemented as:</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; ディレクティブは、文字データ（のために今ある&lt;em&gt;、すなわち&lt;/em&gt;文字コードのため、リテラル文字列）、ではありません。これは、パディングと配置を適用するだけで、数値のフォーマットを気にしない場合に便利です。たとえば、悪名高い&lt;a href=&quot;http://blog.npmjs.org/post/141577284765/kik-left-pad-and-npm&quot;&gt;左パッド&lt;/a&gt;（および中央パッドと右パッド！）は、次のように便利に実装できます。</target>
        </trans-unit>
        <trans-unit id="0ac5ce4557f68fa61d39e54705c57697d92d6de4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;length&lt;/code&gt; property may be used to distinguish leaf nodes from internal nodes: it is undefined for leaf nodes, and 4 for internal nodes. For example, to iterate over all data in a leaf node:</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; プロパティは、内部ノードからリーフノードを区別するために使用することができる：それはリーフノード、及び内部ノード4のために定義されていません。たとえば、リーフノードのすべてのデータを反復処理するには：</target>
        </trans-unit>
        <trans-unit id="0b1595410da92aec0e502827feef6cf89b9dedff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;~&lt;/code&gt; option trims insignificant trailing zeros across all format types. This is most commonly used in conjunction with types &lt;code&gt;r&lt;/code&gt;, &lt;code&gt;e&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;%&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;~&lt;/code&gt; オプショントリムは、すべてのフォーマットタイプ間で後続のゼロを取るに足りません。これは、タイプ &lt;code&gt;r&lt;/code&gt; 、 &lt;code&gt;e&lt;/code&gt; 、 &lt;code&gt;s&lt;/code&gt; および &lt;code&gt;%&lt;/code&gt; と組み合わせて最も一般的に使用されます。例えば：</target>
        </trans-unit>
        <trans-unit id="0cca219c268f2f6055dc32061f2feee0433c9a3b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;angle&lt;/em&gt; is specified in radians, with 0 at -&lt;em&gt;y&lt;/em&gt; (12 o&amp;rsquo;clock) and positive angles proceeding clockwise.</source>
          <target state="translated">&lt;em&gt;角度&lt;/em&gt; -で0と、ラジアンで指定された&lt;em&gt;Y&lt;/em&gt;（12時）と正の角度が時計回りに進みます。</target>
        </trans-unit>
        <trans-unit id="2be90a0c290a952142abffeeedbe082d4b83b049" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;angle&lt;/em&gt; is specified in radians, with 0 at -&lt;em&gt;y&lt;/em&gt; (12 o&amp;rsquo;clock) and positive angles proceeding clockwise. If |endAngle - startAngle| &amp;ge; &amp;tau;, a complete circle or annulus is generated rather than a sector.</source>
          <target state="translated">&lt;em&gt;角度&lt;/em&gt; -で0と、ラジアンで指定された&lt;em&gt;Y&lt;/em&gt;（12時）と正の角度が時計回りに進みます。| endAngle-startAngle |の場合 &amp;ge;&amp;tau;、セクターではなく完全な円または環が生成されます。</target>
        </trans-unit>
        <trans-unit id="ebd90af7f2fc6aba17f093fe5e4cd898d3d92e73" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;callback&lt;/em&gt; is passed the (apparent) &lt;em&gt;elapsed&lt;/em&gt; time since the timer became active. For example:</source>
          <target state="translated">&lt;em&gt;コールバックは、&lt;/em&gt;（見かけの）渡され&lt;em&gt;た経過&lt;/em&gt;タイマーがアクティブになってからの時間を。例えば：</target>
        </trans-unit>
        <trans-unit id="97a4e71bb53420cb3cfbfb84df743f993bd112a8" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;chords&lt;/em&gt; array also defines a secondary array of length &lt;em&gt;n&lt;/em&gt;, &lt;em&gt;chords&lt;/em&gt;.groups, where each group represents the combined outflow for node &lt;em&gt;i&lt;/em&gt;, corresponding to the elements &lt;em&gt;matrix&lt;/em&gt;[&lt;em&gt;i&lt;/em&gt;][0 &amp;hellip; &lt;em&gt;n&lt;/em&gt; - 1], and is an object with the following properties:</source>
          <target state="translated">&lt;em&gt;和音の&lt;/em&gt;配列はまた、長さの二次配列を定義&lt;em&gt;N&lt;/em&gt;、&lt;em&gt;コードの&lt;/em&gt;各グループはノードの組み合わせの流出を表し.groups、&lt;em&gt;iは&lt;/em&gt;要素に対応し、&lt;em&gt;行列&lt;/em&gt; [ &lt;em&gt;I&lt;/em&gt; ] [0 ... &lt;em&gt;N&lt;/em&gt; - 1]、及び次持つオブジェクトでありますプロパティ：</target>
        </trans-unit>
        <trans-unit id="a46c1d76dd2cb2740a01b3b9eb8081f9d2d84684" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;compare&lt;/em&gt; function takes two arguments &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;, each elements from the input data array. If the arc for &lt;em&gt;a&lt;/em&gt; should be before the arc for &lt;em&gt;b&lt;/em&gt;, then the comparator must return a number less than zero; if the arc for &lt;em&gt;a&lt;/em&gt; should be after the arc for &lt;em&gt;b&lt;/em&gt;, then the comparator must return a number greater than zero; returning zero means that the relative order of &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; is unspecified. For example, to sort arcs by their associated name:</source>
          <target state="translated">&lt;em&gt;比較&lt;/em&gt;関数は2つの引数取り及び&lt;em&gt;B&lt;/em&gt;は、入力データ・アレイからの各要素。用アーク場合のために、アークの前にあるべきである&lt;em&gt;B&lt;/em&gt;、比較器は、ゼロ以上の数を返さなければなりません。用アーク場合のために、アークの後であるべきである&lt;em&gt;B&lt;/em&gt;、比較器はゼロより数の大きいを返さなければなりません。相対的な順序ことゼロ復帰手段と&lt;em&gt;bが&lt;/em&gt;指定されていないが。たとえば、関連する名前でアークを並べ替えるには：&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ef9ee285025c93a2084ef13ee6a933f7981cde3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;container&lt;/em&gt; of a drag gesture determines the coordinate system of subsequent &lt;a href=&quot;#drag-events&quot;&gt;drag events&lt;/a&gt;, affecting &lt;em&gt;event&lt;/em&gt;.x and &lt;em&gt;event&lt;/em&gt;.y. The element returned by the container accessor is subsequently passed to &lt;a href=&quot;d3-selection#mouse&quot;&gt;d3.mouse&lt;/a&gt; or &lt;a href=&quot;d3-selection#touch&quot;&gt;d3.touch&lt;/a&gt;, as appropriate, to determine the local coordinates of the pointer.</source>
          <target state="translated">ドラッグジェスチャの&lt;em&gt;コンテナ&lt;/em&gt;は、後続の&lt;a href=&quot;#drag-events&quot;&gt;ドラッグイベントの&lt;/a&gt;座標系を決定し、&lt;em&gt;イベント&lt;/em&gt; .xと&lt;em&gt;イベント&lt;/em&gt; .yに影響を与えます。コンテナーアクセサーによって返された要素は、その後、必要に応じて&lt;a href=&quot;d3-selection#mouse&quot;&gt;d3.mouse&lt;/a&gt;または&lt;a href=&quot;d3-selection#touch&quot;&gt;d3.touchに&lt;/a&gt;渡され、ポインターのローカル座標を決定します。</target>
        </trans-unit>
        <trans-unit id="3c29e1a93aa3725cd0a66345ce473c267d60c22c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;data&lt;/em&gt; is specified &lt;strong&gt;for each group&lt;/strong&gt; in the selection. If the selection has multiple groups (such as &lt;a href=&quot;#selectAll&quot;&gt;d3.selectAll&lt;/a&gt; followed by &lt;a href=&quot;#selection_selectAll&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.selectAll&lt;/a&gt;), then &lt;em&gt;data&lt;/em&gt; should typically be specified as a function. This function will be evaluated for each group in order, being passed the group&amp;rsquo;s parent datum (&lt;em&gt;d&lt;/em&gt;, which may be undefined), the group index (&lt;em&gt;i&lt;/em&gt;), and the selection&amp;rsquo;s parent nodes (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the group&amp;rsquo;s parent element. For example, to create an HTML table from a matrix of numbers:</source>
          <target state="translated">&lt;em&gt;データは&lt;/em&gt;指定された&lt;strong&gt;グループ毎に&lt;/strong&gt;選択します。選択に複数のグループ（&lt;a href=&quot;#selectAll&quot;&gt;d3.selectAllの&lt;/a&gt;後に&lt;a href=&quot;#selection_selectAll&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .selectAllが&lt;/a&gt;続くなど）がある場合、&lt;em&gt;データ&lt;/em&gt;は通常、関数として指定&lt;em&gt;する&lt;/em&gt;必要があります。この関数は、グループの親データム（渡され、順番に各グループのために評価される&lt;em&gt;D&lt;/em&gt;不定されてもよい）、グループインデックス（&lt;em&gt;I&lt;/em&gt;）、及び選択の親ノード（&lt;em&gt;ノードを&lt;/em&gt;用いて、）&lt;em&gt;この&lt;/em&gt;グループの親要素として。たとえば、数値のマトリックスからHTMLテーブルを作成するには：</target>
        </trans-unit>
        <trans-unit id="bb55f0f4ad11a522bc12966f004b1dcc42778f28" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;event&lt;/em&gt; object also exposes the &lt;a href=&quot;#event_on&quot;&gt;&lt;em&gt;event&lt;/em&gt;.on&lt;/a&gt; method.</source>
          <target state="translated">&lt;em&gt;イベント&lt;/em&gt;オブジェクトも公開して&lt;a href=&quot;#event_on&quot;&gt;&lt;em&gt;イベントを&lt;/em&gt; .on&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="145d3eca6273e3baf996690d90119e229ca07d44" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;event&lt;/em&gt;.active field is useful for detecting the first start event and the last end event in a sequence of concurrent drag gestures: it is zero when the first drag gesture starts, and zero when the last drag gesture ends.</source>
          <target state="translated">&lt;em&gt;イベント&lt;/em&gt; .activeフィールドは、最初の開始イベントと同時ドラッグジェスチャのシーケンスの最後の最後のイベントを検出するために有用である：それはゼロであるとき、最初のドラッグジェスチャが開始され、ゼロ最後のドラッグジェスチャーが終了します。</target>
        </trans-unit>
        <trans-unit id="2a1300a53ef835285a2f68491b9d7c33505d0556" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;fill&lt;/em&gt; can be any character. The presence of a fill character is signaled by the &lt;em&gt;align&lt;/em&gt; character following it, which must be one of the following:</source>
          <target state="translated">&lt;em&gt;塗りは&lt;/em&gt;、任意の文字を表します。フィル文字の存在は、それに続く&lt;em&gt;align&lt;/em&gt;文字によって通知されます。これは、次のいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="334c412f73fa0fd4d72573d2e1e1ffb50dc91811" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;floor&lt;/em&gt; function takes a single date as an argument and rounds it down to the nearest interval boundary.</source>
          <target state="translated">&lt;em&gt;フロア&lt;/em&gt;関数は、引数として単一の日付を取り、最寄りの間隔境界にそれを切り捨て。</target>
        </trans-unit>
        <trans-unit id="c4b2f06dc0c1132643ae1959203530246d94ec35" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;format&lt;/em&gt;.parse method has also been removed in favor of separate &lt;a href=&quot;../../../d3-time-format#timeParse&quot;&gt;d3.timeParse&lt;/a&gt;, &lt;a href=&quot;../../../d3-time-format#utcParse&quot;&gt;d3.utcParse&lt;/a&gt; and &lt;a href=&quot;../../../d3-time-format#isoParse&quot;&gt;d3.isoParse&lt;/a&gt; parser constructors. Thus, this code in 3.x:</source>
          <target state="translated">&lt;em&gt;フォーマット&lt;/em&gt;方法.parseはまた、別個に有利に除去された&lt;a href=&quot;../../../d3-time-format#timeParse&quot;&gt;d3.timeParse&lt;/a&gt;、&lt;a href=&quot;../../../d3-time-format#utcParse&quot;&gt;d3.utcParse&lt;/a&gt;と&lt;a href=&quot;../../../d3-time-format#isoParse&quot;&gt;d3.isoParse&lt;/a&gt;パーサーコンストラクタ。したがって、この3.xのコードは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="591889a8d8b45d30473a50f8316b96d8e886a52a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;histogram&lt;/em&gt;.range method has been renamed &lt;a href=&quot;../../../d3-array#histogram_domain&quot;&gt;&lt;em&gt;histogram&lt;/em&gt;.domain&lt;/a&gt; for consistency with scales. The &lt;em&gt;histogram&lt;/em&gt;.bins method has been renamed &lt;a href=&quot;../../../d3-array#histogram_thresholds&quot;&gt;&lt;em&gt;histogram&lt;/em&gt;.thresholds&lt;/a&gt;, and no longer accepts an upper value: &lt;em&gt;n&lt;/em&gt; thresholds will produce &lt;em&gt;n&lt;/em&gt; + 1 bins. If you specify a desired number of bins rather than thresholds, d3.histogram now uses &lt;a href=&quot;../../../d3-array#ticks&quot;&gt;d3.ticks&lt;/a&gt; to compute nice bin thresholds. In addition to the default Sturges&amp;rsquo; formula, D3 now implements the &lt;a href=&quot;../../../d3-array#thresholdFreedmanDiaconis&quot;&gt;Freedman-Diaconis rule&lt;/a&gt; and &lt;a href=&quot;../../../d3-array#thresholdScott&quot;&gt;Scott&amp;rsquo;s normal reference rule&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;ヒストグラム&lt;/em&gt; .range方法は、名前が変更された&lt;a href=&quot;../../../d3-array#histogram_domain&quot;&gt;&lt;em&gt;ヒストグラム&lt;/em&gt; .domainを&lt;/a&gt;尺度との一貫性を保つために。&lt;em&gt;ヒストグラム&lt;/em&gt; .bins方法は、名前が変更されていない&lt;a href=&quot;../../../d3-array#histogram_thresholds&quot;&gt;&lt;em&gt;ヒストグラム&lt;/em&gt; .thresholdsを&lt;/a&gt;、もはや上限値を受け入れ：&lt;em&gt;N&lt;/em&gt;閾値が生成される&lt;em&gt;N&lt;/em&gt; + 1個のビンを。しきい値ではなく希望のビン数を指定すると、d3.histogramは&lt;a href=&quot;../../../d3-array#ticks&quot;&gt;d3.ticks&lt;/a&gt;を使用して適切なビンのしきい値を計算するようになりました。デフォルトのスタージの式に加えて、D3は&lt;a href=&quot;../../../d3-array#thresholdFreedmanDiaconis&quot;&gt;Freedman-Diaconisルール&lt;/a&gt;と&lt;a href=&quot;../../../d3-array#thresholdScott&quot;&gt;Scottの通常の参照ルールを&lt;/a&gt;実装しています。</target>
        </trans-unit>
        <trans-unit id="b8be244756551267e7af334c2656f0681406272a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;map&lt;/em&gt;.forEach and &lt;em&gt;set&lt;/em&gt;.forEach methods have been renamed to &lt;a href=&quot;../../../d3-collection#map_each&quot;&gt;&lt;em&gt;map&lt;/em&gt;.each&lt;/a&gt; and &lt;a href=&quot;../../../d3-collection#set_each&quot;&gt;&lt;em&gt;set&lt;/em&gt;.each&lt;/a&gt; respectively. The order of arguments for &lt;em&gt;map&lt;/em&gt;.each has also been changed to &lt;em&gt;value&lt;/em&gt;, &lt;em&gt;key&lt;/em&gt; and &lt;em&gt;map&lt;/em&gt;, while the order of arguments for &lt;em&gt;set&lt;/em&gt;.each is now &lt;em&gt;value&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt; and &lt;em&gt;set&lt;/em&gt;. This is closer to ES6 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach&quot;&gt;&lt;em&gt;map&lt;/em&gt;.forEach&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/forEach&quot;&gt;&lt;em&gt;set&lt;/em&gt;.forEach&lt;/a&gt;. Also like ES6 Map and Set, &lt;em&gt;map&lt;/em&gt;.set and &lt;em&gt;set&lt;/em&gt;.add now return the current collection (rather than the added value) to facilitate method chaining. New &lt;a href=&quot;../../../d3-collection#map_clear&quot;&gt;&lt;em&gt;map&lt;/em&gt;.clear&lt;/a&gt; and &lt;a href=&quot;../../../d3-collection#set_clear&quot;&gt;&lt;em&gt;set&lt;/em&gt;.clear&lt;/a&gt; methods can be used to empty collections.</source>
          <target state="translated">&lt;em&gt;マップ&lt;/em&gt; .forEachと&lt;em&gt;セット&lt;/em&gt; .forEach方法が名前に変更されている&lt;a href=&quot;../../../d3-collection#map_each&quot;&gt;&lt;em&gt;マップ&lt;/em&gt; .each&lt;/a&gt;と&lt;a href=&quot;../../../d3-collection#set_each&quot;&gt;&lt;em&gt;設定&lt;/em&gt; .each&lt;/a&gt;それぞれ。&lt;em&gt;map&lt;/em&gt; .each の引数の順序も&lt;em&gt;value&lt;/em&gt;、&lt;em&gt;key&lt;/em&gt;、&lt;em&gt;map&lt;/em&gt;に変更さ&lt;em&gt;れ&lt;/em&gt;ましたが、&lt;em&gt;set&lt;/em&gt; .each の引数の順序は&lt;em&gt;value&lt;/em&gt;、&lt;em&gt;value&lt;/em&gt;、&lt;em&gt;setになりました&lt;/em&gt;。これはES6 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach&quot;&gt;&lt;em&gt;マップ&lt;/em&gt; .forEachに&lt;/a&gt;近く、.forEachを&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/forEach&quot;&gt;&lt;em&gt;設定し&lt;/em&gt;ます&lt;/a&gt;。 ES6のマップとセットと同様に、&lt;em&gt;マップ&lt;/em&gt; .setと&lt;em&gt;セット&lt;/em&gt;.addは、メソッドの連鎖を容易にするために（追加された値ではなく）現在のコレクションを返すようになりました。新しい&lt;a href=&quot;../../../d3-collection#map_clear&quot;&gt;&lt;em&gt;マップの&lt;/em&gt; .clear&lt;/a&gt;メソッドと&lt;a href=&quot;../../../d3-collection#set_clear&quot;&gt;&lt;em&gt;set&lt;/em&gt; .clear&lt;/a&gt;メソッドを使用して、コレクションを空にすることができます。</target>
        </trans-unit>
        <trans-unit id="67469b6d768c58e7b33ecba2569fd9985f5ba2f3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;offset&lt;/em&gt; function takes a date and an integer step as arguments and advances the specified date by the specified number of boundaries; the step may be positive, negative or zero.</source>
          <target state="translated">&lt;em&gt;オフセット&lt;/em&gt;関数は、引数として日付と整数ステップを取り、境界の指定された数で指定された日付を進めます。ステップは正、負、またはゼロです。</target>
        </trans-unit>
        <trans-unit id="30bb34d3f3877a48e4d0c229e4e86d44f491fba9" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;ordinal&lt;/em&gt;.rangeBands and &lt;em&gt;ordinal&lt;/em&gt;.rangeRoundBands methods have been replaced with a new subclass of ordinal scale: &lt;a href=&quot;../../../d3-scale#band-scales&quot;&gt;band scales&lt;/a&gt;. The following code in 3.x:</source>
          <target state="translated">&lt;em&gt;序&lt;/em&gt; .rangeBandsと&lt;em&gt;序&lt;/em&gt;：.rangeRoundBands方法は、順序尺度の新しいサブクラスに置き換えられている&lt;a href=&quot;../../../d3-scale#band-scales&quot;&gt;バンドのスケール&lt;/a&gt;。3.xの次のコード：</target>
        </trans-unit>
        <trans-unit id="9d7ab01e41770526ee249876c4f673d6ad5e4367" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;radius&lt;/em&gt; accessor is invoked for each &lt;a href=&quot;#simulation_nodes&quot;&gt;node&lt;/a&gt; in the simulation, being passed the &lt;em&gt;node&lt;/em&gt; and its zero-based &lt;em&gt;index&lt;/em&gt;. The resulting number is then stored internally, such that the target radius of each node is only recomputed when the force is initialized or when this method is called with a new &lt;em&gt;radius&lt;/em&gt;, and not on every application of the force.</source>
          <target state="translated">&lt;em&gt;半径&lt;/em&gt;アクセサはごとに呼び出され&lt;a href=&quot;#simulation_nodes&quot;&gt;、ノード&lt;/a&gt;、シミュレーションに渡される&lt;em&gt;ノード&lt;/em&gt;と、そのゼロベースの&lt;em&gt;インデックスを&lt;/em&gt;。結果の数値は内部に保存され、各ノードのターゲット半径は、フォースが初期化されたとき、またはこのメソッドが新しい&lt;em&gt;radius&lt;/em&gt;で呼び出されたときにのみ再計算され、フォースのすべての適用時ではありません。</target>
        </trans-unit>
        <trans-unit id="0b99e157d68b28ce6b5b3ba65b6b792688a8d78f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;sign&lt;/em&gt; can be:</source>
          <target state="translated">&lt;em&gt;記号は&lt;/em&gt;使用できます</target>
        </trans-unit>
        <trans-unit id="935aa7437bd0bfdee189581e67a87ee31aa560c5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;subject&lt;/em&gt; of a drag gesture represents &lt;em&gt;the thing being dragged&lt;/em&gt;. It is computed when an initiating input event is received, such as a mousedown or touchstart, immediately before the drag gesture starts. The subject is then exposed as &lt;em&gt;event&lt;/em&gt;.subject on subsequent &lt;a href=&quot;#drag-events&quot;&gt;drag events&lt;/a&gt; for this gesture.</source>
          <target state="translated">ドラッグジェスチャの&lt;em&gt;対象&lt;/em&gt;は、ドラッグ&lt;em&gt;されているものを&lt;/em&gt;表します。ドラッグジェスチャが開始する直前に、マウスダウンやタッチスタートなどの開始入力イベントを受け取ったときに計算されます。サブジェクトは、このジェスチャーの後続の&lt;a href=&quot;#drag-events&quot;&gt;ドラッグイベント&lt;/a&gt;で&lt;em&gt;event&lt;/em&gt; .subject として公開されます。</target>
        </trans-unit>
        <trans-unit id="dac90ac366ec0239b1a56bd240822e5f02deeb9b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;symbol&lt;/em&gt; can be:</source>
          <target state="translated">&lt;em&gt;記号は&lt;/em&gt;使用できます</target>
        </trans-unit>
        <trans-unit id="7039df0adc95d9026a65558dc49b6bd9d777486d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;typenames&lt;/em&gt; is a string containing one or more &lt;em&gt;typename&lt;/em&gt; separated by whitespace. Each &lt;em&gt;typename&lt;/em&gt; is a &lt;em&gt;type&lt;/em&gt;, optionally followed by a period (&lt;code&gt;.&lt;/code&gt;) and a &lt;em&gt;name&lt;/em&gt;, such as &lt;code&gt;brush.foo&lt;/code&gt; and &lt;code&gt;brush.bar&lt;/code&gt;; the name allows multiple listeners to be registered for the same &lt;em&gt;type&lt;/em&gt;. The &lt;em&gt;type&lt;/em&gt; must be one of the following:</source>
          <target state="translated">&lt;em&gt;型名は、&lt;/em&gt;一つ以上含む文字列である&lt;em&gt;型名&lt;/em&gt;空白で区切られています。各&lt;em&gt;typename&lt;/em&gt;は&lt;em&gt;タイプで&lt;/em&gt;、オプションでピリオド（ &lt;code&gt;.&lt;/code&gt; ）と&lt;em&gt;名前が&lt;/em&gt; &lt;code&gt;brush.bar&lt;/code&gt; ます（ &lt;code&gt;brush.foo&lt;/code&gt; やBrush.barなど）。名前により、同じ&lt;em&gt;タイプの&lt;/em&gt;複数のリスナーを登録できます。&lt;em&gt;タイプは、&lt;/em&gt;次のいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="4eb2c5935a84c8f64a1b01a2ad9dbdcf6dfd1446" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;typenames&lt;/em&gt; is a string containing one or more &lt;em&gt;typename&lt;/em&gt; separated by whitespace. Each &lt;em&gt;typename&lt;/em&gt; is a &lt;em&gt;type&lt;/em&gt;, optionally followed by a period (&lt;code&gt;.&lt;/code&gt;) and a &lt;em&gt;name&lt;/em&gt;, such as &lt;code&gt;drag.foo&lt;/code&gt; and &lt;code&gt;drag.bar&lt;/code&gt;; the name allows multiple listeners to be registered for the same &lt;em&gt;type&lt;/em&gt;. The &lt;em&gt;type&lt;/em&gt; must be one of the following:</source>
          <target state="translated">&lt;em&gt;型名は、&lt;/em&gt;一つ以上含む文字列である&lt;em&gt;型名&lt;/em&gt;空白で区切られています。各&lt;em&gt;typename&lt;/em&gt;は&lt;em&gt;タイプで&lt;/em&gt;、オプションでピリオド（ &lt;code&gt;.&lt;/code&gt; ）と&lt;em&gt;名前が&lt;/em&gt; &lt;code&gt;drag.bar&lt;/code&gt; ます（ &lt;code&gt;drag.foo&lt;/code&gt; やdrag.barなど）。名前により、同じ&lt;em&gt;タイプの&lt;/em&gt;複数のリスナーを登録できます。&lt;em&gt;タイプは、&lt;/em&gt;次のいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="3fa895c9acfbf903c31dddbc219f5899dc2750a1" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;typenames&lt;/em&gt; is a string containing one or more &lt;em&gt;typename&lt;/em&gt; separated by whitespace. Each &lt;em&gt;typename&lt;/em&gt; is a &lt;em&gt;type&lt;/em&gt;, optionally followed by a period (&lt;code&gt;.&lt;/code&gt;) and a &lt;em&gt;name&lt;/em&gt;, such as &lt;code&gt;tick.foo&lt;/code&gt; and &lt;code&gt;tick.bar&lt;/code&gt;; the name allows multiple listeners to be registered for the same &lt;em&gt;type&lt;/em&gt;. The &lt;em&gt;type&lt;/em&gt; must be one of the following:</source>
          <target state="translated">&lt;em&gt;型名は、&lt;/em&gt;一つ以上含む文字列である&lt;em&gt;型名&lt;/em&gt;空白で区切られています。各&lt;em&gt;typename&lt;/em&gt;は&lt;em&gt;タイプで&lt;/em&gt;、オプションでピリオド（ &lt;code&gt;.&lt;/code&gt; ）と&lt;em&gt;名前が&lt;/em&gt; &lt;code&gt;tick.bar&lt;/code&gt; ます（ &lt;code&gt;tick.foo&lt;/code&gt; やtick.barなど）。名前により、同じ&lt;em&gt;タイプの&lt;/em&gt;複数のリスナーを登録できます。&lt;em&gt;タイプは、&lt;/em&gt;次のいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="7a67ea0e027e9732a3444a4489af232e528c5c4c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;typenames&lt;/em&gt; is a string containing one or more &lt;em&gt;typename&lt;/em&gt; separated by whitespace. Each &lt;em&gt;typename&lt;/em&gt; is a &lt;em&gt;type&lt;/em&gt;, optionally followed by a period (&lt;code&gt;.&lt;/code&gt;) and a &lt;em&gt;name&lt;/em&gt;, such as &lt;code&gt;zoom.foo&lt;/code&gt; and &lt;code&gt;zoom.bar&lt;/code&gt;; the name allows multiple listeners to be registered for the same &lt;em&gt;type&lt;/em&gt;. The &lt;em&gt;type&lt;/em&gt; must be one of the following:</source>
          <target state="translated">&lt;em&gt;型名は、&lt;/em&gt;一つ以上含む文字列である&lt;em&gt;型名&lt;/em&gt;空白で区切られています。各&lt;em&gt;typename&lt;/em&gt;は&lt;em&gt;タイプで&lt;/em&gt;、オプションでピリオド（ &lt;code&gt;.&lt;/code&gt; ）と&lt;em&gt;名前が&lt;/em&gt; &lt;code&gt;zoom.bar&lt;/code&gt; ます（ &lt;code&gt;zoom.foo&lt;/code&gt; やzoom.barなど）。名前により、同じ&lt;em&gt;タイプの&lt;/em&gt;複数のリスナーを登録できます。&lt;em&gt;タイプは、&lt;/em&gt;次のいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="52ea53c989c8800b9d8e3752fd43d7a006eddb05" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;update&lt;/em&gt; and &lt;em&gt;enter&lt;/em&gt; selections are returned in data order, while the &lt;em&gt;exit&lt;/em&gt; selection preserves the selection order prior to the join. If a key function is specified, the order of elements in the selection may not match their order in the document; use &lt;a href=&quot;#order&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.order&lt;/a&gt; or &lt;a href=&quot;#sort&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.sort&lt;/a&gt; as needed. For more on how the key function affects the join, see &lt;a href=&quot;http://bost.ocks.org/mike/bar/2/&quot;&gt;A Bar Chart, Part 2&lt;/a&gt; and &lt;a href=&quot;http://bost.ocks.org/mike/constancy/&quot;&gt;Object Constancy&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;更新&lt;/em&gt;と&lt;em&gt;入力し&lt;/em&gt;ながら選択は、データの順序で返され&lt;em&gt;、出口の&lt;/em&gt;選択が参加する前に選択順序を保持します。キー関数が指定されている場合、選択範囲内の要素の順序はドキュメント内の要素の順序と一致しない場合があります。必要に応じて、&lt;a href=&quot;#order&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .order&lt;/a&gt;または&lt;a href=&quot;#sort&quot;&gt;&lt;em&gt;selection&lt;/em&gt; .sort&lt;/a&gt;を使用してください。キー関数が結合に与える影響の詳細については&lt;a href=&quot;http://bost.ocks.org/mike/bar/2/&quot;&gt;、棒グラフ、パート2&lt;/a&gt;、および&lt;a href=&quot;http://bost.ocks.org/mike/constancy/&quot;&gt;オブジェクトの恒常性を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3f8ace0700aa5cbeff3796b83ae58413299b4ab0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;x&lt;/em&gt;- and &lt;em&gt;y&lt;/em&gt;-coordinate for each data point are computed using &lt;a href=&quot;#density_x&quot;&gt;&lt;em&gt;density&lt;/em&gt;.x&lt;/a&gt; and &lt;a href=&quot;#density_y&quot;&gt;&lt;em&gt;density&lt;/em&gt;.y&lt;/a&gt;. In addition, &lt;a href=&quot;#density_weight&quot;&gt;&lt;em&gt;density&lt;/em&gt;.weight&lt;/a&gt; indicates the relative contribution of each data point (default 1). The generated contours are only accurate within the estimator&amp;rsquo;s &lt;a href=&quot;#density_size&quot;&gt;defined size&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;X&lt;/em&gt; -および&lt;em&gt;Yの&lt;/em&gt;各データポイントの-座標を使用して計算される&lt;a href=&quot;#density_x&quot;&gt;&lt;em&gt;濃度&lt;/em&gt; .X&lt;/a&gt;及び&lt;a href=&quot;#density_y&quot;&gt;&lt;em&gt;密度&lt;/em&gt; .Yを&lt;/a&gt;。さらに、&lt;a href=&quot;#density_weight&quot;&gt;&lt;em&gt;density&lt;/em&gt; .weight&lt;/a&gt;は、各データポイントの相対的な寄与度を示します（デフォルトは1）。生成されたコンターは、推定器の&lt;a href=&quot;#density_size&quot;&gt;定義されたサイズ&lt;/a&gt;内でのみ正確です。</target>
        </trans-unit>
        <trans-unit id="24ced3f821cbb6926fc16de7fe5dc1b424d4644b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;x&lt;/em&gt;-acccessor is used to derive the &lt;em&gt;x&lt;/em&gt;-coordinate of data when &lt;a href=&quot;#quadtree_add&quot;&gt;adding&lt;/a&gt; to and &lt;a href=&quot;#quadtree_remove&quot;&gt;removing&lt;/a&gt; from the tree. It is also used when &lt;a href=&quot;#quadtree_find&quot;&gt;finding&lt;/a&gt; to re-access the coordinates of data previously added to the tree; therefore, the &lt;em&gt;x&lt;/em&gt;- and &lt;em&gt;y&lt;/em&gt;-accessors must be consistent, returning the same value given the same input.</source>
          <target state="translated">&lt;em&gt;X&lt;/em&gt; -acccessorを導出するために使用される&lt;em&gt;Xの&lt;/em&gt;ときにデータの-座標を&lt;a href=&quot;#quadtree_add&quot;&gt;追加&lt;/a&gt;および&lt;a href=&quot;#quadtree_remove&quot;&gt;削除&lt;/a&gt;木から。以前にツリーに追加されたデータの座標に再度アクセスして&lt;a href=&quot;#quadtree_find&quot;&gt;検索&lt;/a&gt;する場合にも使用されます。したがって、&lt;em&gt;x&lt;/em&gt;アクセサーと&lt;em&gt;y&lt;/em&gt;アクセサーは一貫している必要があり、同じ入力が与えられると同じ値を返します。</target>
        </trans-unit>
        <trans-unit id="8fd909164877fe7e8f33e67562c9c33682bd0a44" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;x&lt;/em&gt;-accessor is invoked for each &lt;a href=&quot;#simulation_nodes&quot;&gt;node&lt;/a&gt; in the simulation, being passed the &lt;em&gt;node&lt;/em&gt; and its zero-based &lt;em&gt;index&lt;/em&gt;. The resulting number is then stored internally, such that the target &lt;em&gt;x&lt;/em&gt;-coordinate of each node is only recomputed when the force is initialized or when this method is called with a new &lt;em&gt;x&lt;/em&gt;, and not on every application of the force.</source>
          <target state="translated">&lt;em&gt;X&lt;/em&gt;ごとに呼び出され-accessor &lt;a href=&quot;#simulation_nodes&quot;&gt;ノード&lt;/a&gt;、シミュレーションでは、渡され&lt;em&gt;たノード&lt;/em&gt;とそのゼロベースの&lt;em&gt;インデックスを&lt;/em&gt;。結果の数値は内部に格納され、各ノードのターゲット&lt;em&gt;x座標&lt;/em&gt;は、フォースが初期化されたとき、またはこのメソッドが新しい&lt;em&gt;x&lt;/em&gt;で呼び出されたときにのみ再計算され、フォースのすべての適用時ではありません。</target>
        </trans-unit>
        <trans-unit id="bbf302004663b1436073f01155074b0d17ff91a7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;y&lt;/em&gt;-acccessor is used to derive the &lt;em&gt;y&lt;/em&gt;-coordinate of data when &lt;a href=&quot;#quadtree_add&quot;&gt;adding&lt;/a&gt; to and &lt;a href=&quot;#quadtree_remove&quot;&gt;removing&lt;/a&gt; from the tree. It is also used when &lt;a href=&quot;#quadtree_find&quot;&gt;finding&lt;/a&gt; to re-access the coordinates of data previously added to the tree; therefore, the &lt;em&gt;x&lt;/em&gt;- and &lt;em&gt;y&lt;/em&gt;-accessors must be consistent, returning the same value given the same input.</source>
          <target state="translated">&lt;em&gt;Y&lt;/em&gt; -acccessorを導出するために使用される&lt;em&gt;Y&lt;/em&gt;ときにデータの-座標を&lt;a href=&quot;#quadtree_add&quot;&gt;追加&lt;/a&gt;および&lt;a href=&quot;#quadtree_remove&quot;&gt;削除&lt;/a&gt;木から。以前にツリーに追加されたデータの座標に再度アクセスして&lt;a href=&quot;#quadtree_find&quot;&gt;検索&lt;/a&gt;する場合にも使用されます。したがって、&lt;em&gt;x&lt;/em&gt;アクセサーと&lt;em&gt;y&lt;/em&gt;アクセサーは一貫している必要があり、同じ入力が与えられると同じ値を返します。</target>
        </trans-unit>
        <trans-unit id="2f9a589d7ca4589d42071fd6ba695661ad364006" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;y&lt;/em&gt;-accessor is invoked for each &lt;a href=&quot;#simulation_nodes&quot;&gt;node&lt;/a&gt; in the simulation, being passed the &lt;em&gt;node&lt;/em&gt; and its zero-based &lt;em&gt;index&lt;/em&gt;. The resulting number is then stored internally, such that the target &lt;em&gt;y&lt;/em&gt;-coordinate of each node is only recomputed when the force is initialized or when this method is called with a new &lt;em&gt;y&lt;/em&gt;, and not on every application of the force.</source>
          <target state="translated">&lt;em&gt;Y&lt;/em&gt;ごとに呼び出され-accessor &lt;a href=&quot;#simulation_nodes&quot;&gt;ノード&lt;/a&gt;、シミュレーションでは、渡され&lt;em&gt;たノード&lt;/em&gt;とそのゼロベースの&lt;em&gt;インデックスを&lt;/em&gt;。結果の数値は内部に格納され、各ノードのターゲット&lt;em&gt;y&lt;/em&gt;座標は、フォースが初期化されたとき、またはこのメソッドが新しい&lt;em&gt;y&lt;/em&gt;で呼び出されたときにのみ再計算され、フォースのすべての適用時ではありません。</target>
        </trans-unit>
        <trans-unit id="8a3295051039b9de11683f9078bbc7a7a6bb1ea8" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;zero&lt;/em&gt; (&lt;code&gt;0&lt;/code&gt;) option enables zero-padding; this implicitly sets &lt;em&gt;fill&lt;/em&gt; to &lt;code&gt;0&lt;/code&gt; and &lt;em&gt;align&lt;/em&gt; to &lt;code&gt;=&lt;/code&gt;. The &lt;em&gt;width&lt;/em&gt; defines the minimum field width; if not specified, then the width will be determined by the content. The &lt;em&gt;comma&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;) option enables the use of a group separator, such as a comma for thousands.</source>
          <target state="translated">&lt;em&gt;ゼロ&lt;/em&gt;（ &lt;code&gt;0&lt;/code&gt; ）オプションは、ゼロパディングを可能にします。これにより、暗黙的に&lt;em&gt;fill&lt;/em&gt;が &lt;code&gt;0&lt;/code&gt; に、&lt;em&gt;align&lt;/em&gt;が &lt;code&gt;=&lt;/code&gt; に設定&lt;em&gt;さ&lt;/em&gt;れます。&lt;em&gt;幅は、&lt;/em&gt;最小のフィールド幅を規定します。指定しない場合、幅はコンテンツによって決まります。&lt;em&gt;カンマ&lt;/em&gt;（ &lt;code&gt;,&lt;/code&gt; ）オプションは、数千のためのコンマとして、グループ・セパレータの使用を可能にします。</target>
        </trans-unit>
        <trans-unit id="8e90b3e138d57771783f584abf26ceb9828f118d" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;cluster layout&lt;/strong&gt; produces &lt;a href=&quot;http://en.wikipedia.org/wiki/Dendrogram&quot;&gt;dendrograms&lt;/a&gt;: node-link diagrams that place leaf nodes of the tree at the same depth. Dendograms are typically less compact than &lt;a href=&quot;#tree&quot;&gt;tidy trees&lt;/a&gt;, but are useful when all the leaves should be at the same level, such as for hierarchical clustering or &lt;a href=&quot;http://bl.ocks.org/mbostock/c034d66572fd6bd6815a&quot;&gt;phylogenetic tree diagrams&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;クラスタレイアウトが&lt;/strong&gt;生成&lt;a href=&quot;http://en.wikipedia.org/wiki/Dendrogram&quot;&gt;系統樹&lt;/a&gt;ノードリンクダイアグラムことを同じ深さでツリーの代わりリーフノードは：。通常、デンドグラムは&lt;a href=&quot;#tree&quot;&gt;整頓されたツリー&lt;/a&gt;ほどコンパクトではありませんが、階層的クラスタリングや&lt;a href=&quot;http://bl.ocks.org/mbostock/c034d66572fd6bd6815a&quot;&gt;系統樹ダイアグラム&lt;/a&gt;など、すべての葉が同じレベルでなければならない場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="3b5a162f2575eaf67165b3bdc9a03bb852d64bfc" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;link&lt;/strong&gt; shape generates a smooth cubic B&amp;eacute;zier curve from a source point to a target point. The tangents of the curve at the start and end are either &lt;a href=&quot;#linkVertical&quot;&gt;vertical&lt;/a&gt;, &lt;a href=&quot;#linkHorizontal&quot;&gt;horizontal&lt;/a&gt; or &lt;a href=&quot;#linkRadial&quot;&gt;radial&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;リンクの&lt;/strong&gt;形状が目標点にソース点から平滑立方ベジェ曲線を生成します。始点と終点での曲線の接線は、&lt;a href=&quot;#linkVertical&quot;&gt;垂直&lt;/a&gt;、&lt;a href=&quot;#linkHorizontal&quot;&gt;水平、&lt;/a&gt;または&lt;a href=&quot;#linkRadial&quot;&gt;放射状&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="9e6ae88838fdc8b5bc46cacae72cceec114fb56e" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;partition layout&lt;/strong&gt; produces adjacency diagrams: a space-filling variant of a node-link tree diagram. Rather than drawing a link between parent and child in the hierarchy, nodes are drawn as solid areas (either arcs or rectangles), and their placement relative to other nodes reveals their position in the hierarchy. The size of the nodes encodes a quantitative dimension that would be difficult to show in a node-link diagram.</source>
          <target state="translated">&lt;strong&gt;パーティションレイアウトは、&lt;/strong&gt;隣接関係図を生成する：ノードリンクツリー図の空間充填変異体。階層内の親子間のリンクを描画するのではなく、ノードは塗りつぶされた領域（円弧または四角形）として描画され、他のノードに対するそれらの配置により、階層内の位置が明らかになります。ノードのサイズは、ノードリンクダイアグラムで表示するのが難しい量的次元をエンコードします。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
