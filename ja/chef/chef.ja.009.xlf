<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="chef">
    <body>
      <group id="chef">
        <trans-unit id="58a3ed6f2965252c6ac4957d95f7a3bdfca47101" translate="yes" xml:space="preserve">
          <source>nginx</source>
          <target state="translated">nginx</target>
        </trans-unit>
        <trans-unit id="11089b81e5430190dbde3ba16bdbefc2dc20ce06" translate="yes" xml:space="preserve">
          <source>nginx, access</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1286353570c5703799ba76999323b7c7447b06" translate="yes" xml:space="preserve">
          <source>no</source>
          <target state="translated">no</target>
        </trans-unit>
        <trans-unit id="55d8b775c8aa89c8338648de13d0f4befe68b64e" translate="yes" xml:space="preserve">
          <source>node from file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9a5e1d6cbfde4e520c4a4d6db1cd734e52207a" translate="yes" xml:space="preserve">
          <source>node list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869165c73270ebb0889d210cbfb33714a0586bbb" translate="yes" xml:space="preserve">
          <source>node run list add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a354989a0599710376d91894c78432a4b8fee8a8" translate="yes" xml:space="preserve">
          <source>node run list remove</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d292d05c5dd956251fbcfb000209263a7ead2e9b" translate="yes" xml:space="preserve">
          <source>node.run_state</source>
          <target state="translated">node.run_state</target>
        </trans-unit>
        <trans-unit id="785735235dff134ccae7359b33d47759ed14a62f" translate="yes" xml:space="preserve">
          <source>node.set</source>
          <target state="translated">node.set</target>
        </trans-unit>
        <trans-unit id="947b9e3d94b94445fab75f1469a3737cbebde55b" translate="yes" xml:space="preserve">
          <source>node[&amp;lsquo;foo&amp;rsquo;] #=&amp;gt; {&amp;lsquo;bar&amp;rsquo; =&amp;gt; {&amp;lsquo;c&amp;rsquo; =&amp;gt; &amp;lsquo;d&amp;rsquo;}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004550065a3e4fa677c0ecc73b2407854e7ce91d" translate="yes" xml:space="preserve">
          <source>nodes</source>
          <target state="translated">nodes</target>
        </trans-unit>
        <trans-unit id="8467f09ea1b6366e196d677301c54ac45ec5fa6e" translate="yes" xml:space="preserve">
          <source>not_if Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098d7caeaafd92f6dff049b8e5318fc225dcb22b" translate="yes" xml:space="preserve">
          <source>notifier_config</source>
          <target state="translated">notifier_config</target>
        </trans-unit>
        <trans-unit id="62cb4fc75a3fecb0af629c8454664355b2b6ec7f" translate="yes" xml:space="preserve">
          <source>oc-chef-pedant</source>
          <target state="translated">oc-chef-pedant</target>
        </trans-unit>
        <trans-unit id="6bd98aeeff7fd22390f3adfc23bdf020f0d4b236" translate="yes" xml:space="preserve">
          <source>oc-id</source>
          <target state="translated">oc-id</target>
        </trans-unit>
        <trans-unit id="c81ed086ccba9c42ac1513732aeb23fb3dc98594" translate="yes" xml:space="preserve">
          <source>oc_bifrost</source>
          <target state="translated">oc_bifrost</target>
        </trans-unit>
        <trans-unit id="08e68f9cb3081af55ccd4f9aba3391427f84734b" translate="yes" xml:space="preserve">
          <source>oc_chef_authz</source>
          <target state="translated">oc_chef_authz</target>
        </trans-unit>
        <trans-unit id="206d0d1dbc2c013303b27ac45d6288a7b4c9d1b9" translate="yes" xml:space="preserve">
          <source>of a High Availabilty installation):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca51952447d80bd35bf631bc21f06648798b7e0" translate="yes" xml:space="preserve">
          <source>ohai</source>
          <target state="translated">ohai</target>
        </trans-unit>
        <trans-unit id="e9db1208d12b3793ed7942401fc160be6d1e6da3" translate="yes" xml:space="preserve">
          <source>on Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1863835675e3970e15e5c22411ef60824eb55591" translate="yes" xml:space="preserve">
          <source>once</source>
          <target state="translated">once</target>
        </trans-unit>
        <trans-unit id="5eceab4481914384e93d30d256298b3727113fe1" translate="yes" xml:space="preserve">
          <source>only_if Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0091eb41c4d72deddd88efeb5f36cc402a32afa" translate="yes" xml:space="preserve">
          <source>openSUSE, SUSE Enterprise Linux Server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9403e1e0eda7a27c6f7ba644897b5aa8817f175b" translate="yes" xml:space="preserve">
          <source>openbsd_package</source>
          <target state="translated">openbsd_package</target>
        </trans-unit>
        <trans-unit id="8b6ebfb1c8a385802d9782fcaec7b693e797a0d4" translate="yes" xml:space="preserve">
          <source>opscode-account</source>
          <target state="translated">opscode-account</target>
        </trans-unit>
        <trans-unit id="e90f876cf9456ab6ec3e2d084234396b62d37688" translate="yes" xml:space="preserve">
          <source>opscode-authz</source>
          <target state="translated">opscode-authz</target>
        </trans-unit>
        <trans-unit id="8ae2339cb7dce04cd4f7eb2f3fa02c34e54dee2e" translate="yes" xml:space="preserve">
          <source>opscode-chef-mover</source>
          <target state="translated">opscode-chef-mover</target>
        </trans-unit>
        <trans-unit id="be2ea74d51b40c60f4575e2c0e44ff8f7222133b" translate="yes" xml:space="preserve">
          <source>opscode-erchef</source>
          <target state="translated">opscode-erchef</target>
        </trans-unit>
        <trans-unit id="47f31f172a36b1136cc8755e1f3f07ac3a559a3c" translate="yes" xml:space="preserve">
          <source>opscode-erchef, current</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283abb2c63cf43a979c32994ca73f2363238ea6e" translate="yes" xml:space="preserve">
          <source>opscode-erchef, erchef</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e173708b911c0a13724aee65df70487f97c4a7b" translate="yes" xml:space="preserve">
          <source>opscode-expander</source>
          <target state="translated">opscode-expander</target>
        </trans-unit>
        <trans-unit id="6d59b3712363bb17166f1622c07b5eb93a972558" translate="yes" xml:space="preserve">
          <source>opscode-expander-ctl</source>
          <target state="translated">opscode-expander-ctl</target>
        </trans-unit>
        <trans-unit id="bddb3fa7c7aeb4a09b29a10bbd474a082efe9c25" translate="yes" xml:space="preserve">
          <source>opscode-expander-ctl (executable)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce21693e8bd88847e4087b3e232798dd2b441e2" translate="yes" xml:space="preserve">
          <source>opscode-expander-reindexer</source>
          <target state="translated">opscode-expander-reindexer</target>
        </trans-unit>
        <trans-unit id="9f511c5209dea0c52e18f1a195527ba63cbb44ea" translate="yes" xml:space="preserve">
          <source>opscode-solr4</source>
          <target state="translated">opscode-solr4</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="d09371872b6dfcff2bc586a22de1a1c2dbef8bfb" translate="yes" xml:space="preserve">
          <source>or Upstart:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612f99e5322c2c61af95fe3e8b184f09bdb2f9b9" translate="yes" xml:space="preserve">
          <source>or a &lt;code&gt;case&lt;/code&gt; statement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21cedc4864d3e300ea24a322528ae3c983f625e9" translate="yes" xml:space="preserve">
          <source>or a single-quoted string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21824b12eabb8c0f8034bacff8a0bcd9609edb18" translate="yes" xml:space="preserve">
          <source>or add &lt;code&gt;Import-Module chef&lt;/code&gt; to the profile for Windows PowerShell located at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0cde48afb8087f0f703e79002b8b59d609f616" translate="yes" xml:space="preserve">
          <source>or by using the &lt;code&gt;--pattern&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80591f4f323594ebdc07b70f247bc5650c95ef07" translate="yes" xml:space="preserve">
          <source>or daemontools:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca28107282052387dfd9fbdedc0b1b8dd90b0d1" translate="yes" xml:space="preserve">
          <source>or download and save the private key locally:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84822ba71011ef5a4d8edad81efb542ddc8afd74" translate="yes" xml:space="preserve">
          <source>or from anywhere in the chef-repo, enter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1383c784ff2f7916938333c42a3d714806aa859" translate="yes" xml:space="preserve">
          <source>or from the &lt;code&gt;environments/&lt;/code&gt; directory, enter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08bf83bd60618beb6f44464860367fe8601223a9" translate="yes" xml:space="preserve">
          <source>or from the back end primary server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f633e45202960e60e5aaefa9876e9aee7496e280" translate="yes" xml:space="preserve">
          <source>or from the backend primary server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd500f4dcd52ae63e1f72a2e0dd10dc9069b001e" translate="yes" xml:space="preserve">
          <source>or may be enclosed in a double-quoted string with an extra backslash as an escape character:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8082dd7f154c3e8a6e50be408ae331f49f01d4" translate="yes" xml:space="preserve">
          <source>or send an alert on a configuration change:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312489e0818f6e6278075caff33b5ae24dc99893" translate="yes" xml:space="preserve">
          <source>or something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12dfc14feca177ad133ab58fd2c6249c10afedf1" translate="yes" xml:space="preserve">
          <source>or using &lt;code&gt;Hash.new&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087519cb0eebd8cf4a733462fef1efeb7a0e0de5" translate="yes" xml:space="preserve">
          <source>or will match cookbooks less than or equal to a specific version number:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca8500761fc6d466325cd1280228cec5895a37c" translate="yes" xml:space="preserve">
          <source>or without quotes and the backslash escaped:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157a5fe6a0bfdcc6b20be4630871c1ded564cd58" translate="yes" xml:space="preserve">
          <source>or, (if already in the &lt;code&gt;cookbooks/&lt;/code&gt; directory in the local chef-repo):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be12e88c1edafdeff95fffbac07922450bc4538" translate="yes" xml:space="preserve">
          <source>or, to set a dependency on the same cookbook, but only when the version is less than 1.0:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e1cd5145c6cd8b6c83dec263980084f4649754" translate="yes" xml:space="preserve">
          <source>or, to support only Ubuntu 14.10:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e16371e394775b4ae50f166e4050a84ae536c28" translate="yes" xml:space="preserve">
          <source>or, to support versions of Ubuntu greater than or equal to 12.04:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d9ad0addee82809659247e9008e6f9e82aa9000" translate="yes" xml:space="preserve">
          <source>or:</source>
          <target state="translated">or:</target>
        </trans-unit>
        <trans-unit id="d7cab01ca17ccc144d03cfedfc6292b1be23737c" translate="yes" xml:space="preserve">
          <source>org-create</source>
          <target state="translated">org-create</target>
        </trans-unit>
        <trans-unit id="5d63ec414788435b4efa0a7d11598a07f010b47a" translate="yes" xml:space="preserve">
          <source>org-delete</source>
          <target state="translated">org-delete</target>
        </trans-unit>
        <trans-unit id="b76dcfe71efba4d0fdc4ce4b0cb4cf4a19d09479" translate="yes" xml:space="preserve">
          <source>org-list</source>
          <target state="translated">org-list</target>
        </trans-unit>
        <trans-unit id="61b80c3237990da954746ba629f0e2f994c8d371" translate="yes" xml:space="preserve">
          <source>org-show</source>
          <target state="translated">org-show</target>
        </trans-unit>
        <trans-unit id="af20f3ad685e63200b9fd7f2d78a2e34be9207b1" translate="yes" xml:space="preserve">
          <source>org-user-add</source>
          <target state="translated">org-user-add</target>
        </trans-unit>
        <trans-unit id="4e301b85fecef8e9049dcc0297cf0c8703de704d" translate="yes" xml:space="preserve">
          <source>org-user-remove</source>
          <target state="translated">org-user-remove</target>
        </trans-unit>
        <trans-unit id="7cb06027e87e7d848d8576d8fef5f76256f41cee" translate="yes" xml:space="preserve">
          <source>organization</source>
          <target state="translated">organization</target>
        </trans-unit>
        <trans-unit id="3540e4baa7466cbe444557cca9fb84db00b6d1e4" translate="yes" xml:space="preserve">
          <source>osx_profile</source>
          <target state="translated">osx_profile</target>
        </trans-unit>
        <trans-unit id="1a95769f3608d94e2e3437861b788d1372b0d1cf" translate="yes" xml:space="preserve">
          <source>override</source>
          <target state="translated">override</target>
        </trans-unit>
        <trans-unit id="582681c2eae02b3f3d399c0c26d321560f6c567a" translate="yes" xml:space="preserve">
          <source>package</source>
          <target state="translated">package</target>
        </trans-unit>
        <trans-unit id="a0d3adce75a1b1a0c5d2e71aa286ae832e482a37" translate="yes" xml:space="preserve">
          <source>package Matcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c53f08aa1c3a63e70d4281861f4f625636927e" translate="yes" xml:space="preserve">
          <source>pacman_package</source>
          <target state="translated">pacman_package</target>
        </trans-unit>
        <trans-unit id="1cd3a1fd976041d8f8046af7a6d236b8c18024e1" translate="yes" xml:space="preserve">
          <source>paludis_package</source>
          <target state="translated">paludis_package</target>
        </trans-unit>
        <trans-unit id="5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8" translate="yes" xml:space="preserve">
          <source>password</source>
          <target state="translated">password</target>
        </trans-unit>
        <trans-unit id="15b94a66acd70379828a529996c8592a6535951b" translate="yes" xml:space="preserve">
          <source>perl</source>
          <target state="translated">perl</target>
        </trans-unit>
        <trans-unit id="30453a2f1433813e04ff8ba8451c40130decd936" translate="yes" xml:space="preserve">
          <source>platform?</source>
          <target state="translated">platform?</target>
        </trans-unit>
        <trans-unit id="7982722232ef3a1e2615b8b8dbddfcf087aafe5e" translate="yes" xml:space="preserve">
          <source>platform_family?</source>
          <target state="translated">platform_family?</target>
        </trans-unit>
        <trans-unit id="e757f5e64a2b87ba44d756bec784fbc3b9b25240" translate="yes" xml:space="preserve">
          <source>policies</source>
          <target state="translated">policies</target>
        </trans-unit>
        <trans-unit id="39dd63d7b0c3ce56bc7251725cee3396d6c695c2" translate="yes" xml:space="preserve">
          <source>policy_groups</source>
          <target state="translated">policy_groups</target>
        </trans-unit>
        <trans-unit id="85529238614c714f7471d84b696e0db950c11eb8" translate="yes" xml:space="preserve">
          <source>port Matcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4341ef6c505a5489495b61f91550b90adb22c663" translate="yes" xml:space="preserve">
          <source>portage_package</source>
          <target state="translated">portage_package</target>
        </trans-unit>
        <trans-unit id="519968cbed983352acd749e4faf1d4af401ef7ed" translate="yes" xml:space="preserve">
          <source>postgresql</source>
          <target state="translated">postgresql</target>
        </trans-unit>
        <trans-unit id="17315c664777eb7c16da778a382afb3fe87ed04c" translate="yes" xml:space="preserve">
          <source>powershell_script</source>
          <target state="translated">powershell_script</target>
        </trans-unit>
        <trans-unit id="269fe3733d17108a2c6f28ff0aaeaf65f4705adc" translate="yes" xml:space="preserve">
          <source>property</source>
          <target state="translated">property</target>
        </trans-unit>
        <trans-unit id="1a9fa5dafcb070b557f321b99a2f17c3b6b93f97" translate="yes" xml:space="preserve">
          <source>property_is_set?</source>
          <target state="translated">property_is_set?</target>
        </trans-unit>
        <trans-unit id="6bb5ff54d358ab4557833768eba7afc5164b7865" translate="yes" xml:space="preserve">
          <source>provides</source>
          <target state="translated">provides</target>
        </trans-unit>
        <trans-unit id="2488c86d82d9ef6ab550c969d214902a8c811a50" translate="yes" xml:space="preserve">
          <source>provides :resource_name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf3fa0ce294baf906721ced36d9390d39ce554d" translate="yes" xml:space="preserve">
          <source>provides :resource_name, os: &amp;lsquo;operating_system&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74fd13a9b2d040223efe3b49530c00888b1b389" translate="yes" xml:space="preserve">
          <source>provides :resource_name, platform: &amp;lsquo;platform_name&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249a9659bb0f6fa61c0859b8b2c38f087c02c503" translate="yes" xml:space="preserve">
          <source>provides :resource_name, platform_family: &amp;lsquo;platform_family&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f422a553682dc810557420d0138b538068c9ca" translate="yes" xml:space="preserve">
          <source>provides :resource_name, platform_version: &amp;lsquo;0.1.2&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fc1d1d0870b01a858879e8814227018682b420" translate="yes" xml:space="preserve">
          <source>ps_credential Helper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15fbbe3ec90e89c9a42166e95d352669a7d04728" translate="yes" xml:space="preserve">
          <source>psql</source>
          <target state="translated">psql</target>
        </trans-unit>
        <trans-unit id="6735f8e2fd944448427ae30092798c6a22f7267c" translate="yes" xml:space="preserve">
          <source>psql is the management tool for PostgreSQL. It can be used to obtain information about data stored in PostgreSQL. For more information about psql, see &lt;a href=&quot;http://www.postgresql.org/docs/manuals/&quot;&gt;http://www.postgresql.org/docs/manuals/&lt;/a&gt;, and then the doc set appropriate for the version of PostgreSQL being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47c95c4fcfaaef9c2226ef396a1c97c419be951" translate="yes" xml:space="preserve">
          <source>public_key_read_access</source>
          <target state="translated">public_key_read_access</target>
        </trans-unit>
        <trans-unit id="4235227b51436ad86d07c7cf5d69bda2644984de" translate="yes" xml:space="preserve">
          <source>python</source>
          <target state="translated">python</target>
        </trans-unit>
        <trans-unit id="d37a9628bc10a8816f3b679566d2505ab43b55a0" translate="yes" xml:space="preserve">
          <source>rabbitmq</source>
          <target state="translated">rabbitmq</target>
        </trans-unit>
        <trans-unit id="86fc040bc654624072b10fefd0ac61081c0f31cc" translate="yes" xml:space="preserve">
          <source>rabbitmqctl is the management tool for RabbitMQ. It can be used to obtain status information and to ensure that message queuing is running properly. For more information about rabbitmqctl, see &lt;a href=&quot;https://www.rabbitmq.com/man/rabbitmqctl.1.man.html&quot;&gt;https://www.rabbitmq.com/man/rabbitmqctl.1.man.html&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce15802a8c5e8e9db0ffaf10130ef265296e9ea4" translate="yes" xml:space="preserve">
          <source>raw</source>
          <target state="translated">raw</target>
        </trans-unit>
        <trans-unit id="531c9e1bfdff97ef3edce06874f68f294f7a1e0f" translate="yes" xml:space="preserve">
          <source>reboot</source>
          <target state="translated">reboot</target>
        </trans-unit>
        <trans-unit id="b1f1d9844b026b8b987eb6f27b67a38a51c5e7a1" translate="yes" xml:space="preserve">
          <source>reboot_pending?</source>
          <target state="translated">reboot_pending?</target>
        </trans-unit>
        <trans-unit id="5adf65aa5aa40f929e077c203df033227368133d" translate="yes" xml:space="preserve">
          <source>recipe: &lt;code&gt;foo::bar&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b490d0ac36eb4d537228888bfe84e4f28a34cc3" translate="yes" xml:space="preserve">
          <source>recipe_name</source>
          <target state="translated">recipe_name</target>
        </trans-unit>
        <trans-unit id="18e4219e36d374b7d69e86cf86e8cca7612ce602" translate="yes" xml:space="preserve">
          <source>reconfigure</source>
          <target state="translated">reconfigure</target>
        </trans-unit>
        <trans-unit id="b840fc02d524045429941cc15f59e41cb7be6c52" translate="yes" xml:space="preserve">
          <source>redis</source>
          <target state="translated">redis</target>
        </trans-unit>
        <trans-unit id="80fb62f747f599d954c33e768bc5a4874b114582" translate="yes" xml:space="preserve">
          <source>redis-lb</source>
          <target state="translated">redis-lb</target>
        </trans-unit>
        <trans-unit id="568573c9f050eb8dc32539ef0170d3eea9de594d" translate="yes" xml:space="preserve">
          <source>redis_lb</source>
          <target state="translated">redis_lb</target>
        </trans-unit>
        <trans-unit id="8085ee01a7338824e37085d292293321aba71271" translate="yes" xml:space="preserve">
          <source>registry_data_exists?</source>
          <target state="translated">registry_data_exists?</target>
        </trans-unit>
        <trans-unit id="ace781f49ca1f5c25c86937bdfbc78a41cf0b5b9" translate="yes" xml:space="preserve">
          <source>registry_get_subkeys</source>
          <target state="translated">registry_get_subkeys</target>
        </trans-unit>
        <trans-unit id="61ab214654d0c2c81eeed024cc6b3b720fecb604" translate="yes" xml:space="preserve">
          <source>registry_get_values</source>
          <target state="translated">registry_get_values</target>
        </trans-unit>
        <trans-unit id="33968d691c59674ccb941077c1d030ebdfc7ea0a" translate="yes" xml:space="preserve">
          <source>registry_has_subkeys?</source>
          <target state="translated">registry_has_subkeys?</target>
        </trans-unit>
        <trans-unit id="c7ee2f388e71af86681e72bbb26901dfa316cc7a" translate="yes" xml:space="preserve">
          <source>registry_key</source>
          <target state="translated">registry_key</target>
        </trans-unit>
        <trans-unit id="ce9e6d2b9a354b349931a9f5ef5cbf0939cf19be" translate="yes" xml:space="preserve">
          <source>registry_key_exists?</source>
          <target state="translated">registry_key_exists?</target>
        </trans-unit>
        <trans-unit id="3b5701cf09bfb635bf7c3e7dcca3b724c48fa120" translate="yes" xml:space="preserve">
          <source>registry_value_exists?</source>
          <target state="translated">registry_value_exists?</target>
        </trans-unit>
        <trans-unit id="797161eb5e14963d130101c6abdc7579e9e82ae9" translate="yes" xml:space="preserve">
          <source>reindex</source>
          <target state="translated">reindex</target>
        </trans-unit>
        <trans-unit id="d447a9c256736e6d3a7cf1e58ecf827177faf31f" translate="yes" xml:space="preserve">
          <source>remote_directory</source>
          <target state="translated">remote_directory</target>
        </trans-unit>
        <trans-unit id="b5d72b25e51a6571f14de94fe08508c19d0d7160" translate="yes" xml:space="preserve">
          <source>remote_file</source>
          <target state="translated">remote_file</target>
        </trans-unit>
        <trans-unit id="6a2b96f8f16bbdf09d80435f69766a442c487fe7" translate="yes" xml:space="preserve">
          <source>removes the old (existing) version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b017eab4accfa9b775ca5a85713d6c75eb477e40" translate="yes" xml:space="preserve">
          <source>render Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27297bde9732f2e73fbc06db2611764e3ad9855" translate="yes" xml:space="preserve">
          <source>report</source>
          <target state="translated">report</target>
        </trans-unit>
        <trans-unit id="433a811c8321d28f78d20ba733245c6101162ca9" translate="yes" xml:space="preserve">
          <source>report Interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b3d336639b3c157015c3a20334394252ebb2b1" translate="yes" xml:space="preserve">
          <source>require-credential-rotation</source>
          <target state="translated">require-credential-rotation</target>
        </trans-unit>
        <trans-unit id="5113502b51686025648d97b26fbbf6c1e0e2e31b" translate="yes" xml:space="preserve">
          <source>reregister</source>
          <target state="translated">reregister</target>
        </trans-unit>
        <trans-unit id="4a8e7c8885fab1ded78630988cf846e572fe65e9" translate="yes" xml:space="preserve">
          <source>reset_property</source>
          <target state="translated">reset_property</target>
        </trans-unit>
        <trans-unit id="c8ed18ff47475e2c4a7bf59daa0fed0ffd2970e4" translate="yes" xml:space="preserve">
          <source>resource_name</source>
          <target state="translated">resource_name</target>
        </trans-unit>
        <trans-unit id="0189424a5a60fed329fa868e83bf2760d97a4778" translate="yes" xml:space="preserve">
          <source>resources</source>
          <target state="translated">resources</target>
        </trans-unit>
        <trans-unit id="50b8b579f9962b25a7bc8974c8338afed4db7ba6" translate="yes" xml:space="preserve">
          <source>responds with an error similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f766f2f5d7ff50934fb25604a14e9fd4126771" translate="yes" xml:space="preserve">
          <source>restart</source>
          <target state="translated">restart</target>
        </trans-unit>
        <trans-unit id="e08e84916fb42ae1b61b75eb6fccf8a6eb98045e" translate="yes" xml:space="preserve">
          <source>restore</source>
          <target state="translated">restore</target>
        </trans-unit>
        <trans-unit id="b2d2f047be0a0b0d34ac56bec52230180491072d" translate="yes" xml:space="preserve">
          <source>return Keyword</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b8dabf0b7bfae1c2eecb47a6afcd8bc92cc94c" translate="yes" xml:space="preserve">
          <source>returns:</source>
          <target state="translated">returns:</target>
        </trans-unit>
        <trans-unit id="658aa13d48fcff0b256bea26c5b98faa26fca8ab" translate="yes" xml:space="preserve">
          <source>role create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b9f19564eb37d33ce97e2797d46b201f91e3d2" translate="yes" xml:space="preserve">
          <source>role from file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5b8147c3d70a34a8acdb922458a8f52073fbbf" translate="yes" xml:space="preserve">
          <source>role show</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4a76cac10946312bd5f7824fb5f7d21d3e2e19" translate="yes" xml:space="preserve">
          <source>role: &lt;code&gt;foo-bar&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037c883f00c362bc76dbfb07f6042d289ce6aa21" translate="yes" xml:space="preserve">
          <source>roles</source>
          <target state="translated">roles</target>
        </trans-unit>
        <trans-unit id="06115d3c2b9c80dce8f40abaa9fb3bfde7f27549" translate="yes" xml:space="preserve">
          <source>roles/</source>
          <target state="translated">roles/</target>
        </trans-unit>
        <trans-unit id="8ffd6abb7a45f5feb68ae5fccb5a144beef989bb" translate="yes" xml:space="preserve">
          <source>rotate-all-credentials</source>
          <target state="translated">rotate-all-credentials</target>
        </trans-unit>
        <trans-unit id="db68eaa8fe97abcfe0cbdd38a22f99a46fd774a1" translate="yes" xml:space="preserve">
          <source>rotate-credentials</source>
          <target state="translated">rotate-credentials</target>
        </trans-unit>
        <trans-unit id="3b68308b4455eaee007a6dfb2de96c96abbd5d4b" translate="yes" xml:space="preserve">
          <source>rotate-shared-secrets</source>
          <target state="translated">rotate-shared-secrets</target>
        </trans-unit>
        <trans-unit id="fc166eb81361ff31179cd3c83da3bfe088b851d3" translate="yes" xml:space="preserve">
          <source>route</source>
          <target state="translated">route</target>
        </trans-unit>
        <trans-unit id="0101f3e93fb39c823cefe8bbb9ffd559cceefa33" translate="yes" xml:space="preserve">
          <source>rpm_package</source>
          <target state="translated">rpm_package</target>
        </trans-unit>
        <trans-unit id="18e40e1401eef67e1ae69efab09afb71f87ffb81" translate="yes" xml:space="preserve">
          <source>ruby</source>
          <target state="translated">ruby</target>
        </trans-unit>
        <trans-unit id="52fce4da1645cc298450f919fe78b618a303c3b6" translate="yes" xml:space="preserve">
          <source>ruby_block</source>
          <target state="translated">ruby_block</target>
        </trans-unit>
        <trans-unit id="233013ddb8764ccc8ad5fd330af8405e370aa9a2" translate="yes" xml:space="preserve">
          <source>run once</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9a51a414d6d82e73345f7869dce8c8167ea4c3" translate="yes" xml:space="preserve">
          <source>run_action</source>
          <target state="translated">run_action</target>
        </trans-unit>
        <trans-unit id="3dfe5989592d9d2360f1b64379a33acc490a0f99" translate="yes" xml:space="preserve">
          <source>run_list add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c333389e52ab6670e0161e3a98ccf3b49d5c5e2" translate="yes" xml:space="preserve">
          <source>run_list remove</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787711e1aaffa70f5687a15672b3948cf234108c" translate="yes" xml:space="preserve">
          <source>run_list set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70dc33c13136bd5e7855a8eb392b823c869c25ed" translate="yes" xml:space="preserve">
          <source>run_report_safely</source>
          <target state="translated">run_report_safely</target>
        </trans-unit>
        <trans-unit id="00d4fa79d30af817f19858b94c86cf5353c93307" translate="yes" xml:space="preserve">
          <source>run_report_unsafe</source>
          <target state="translated">run_report_unsafe</target>
        </trans-unit>
        <trans-unit id="5ddd5f47a103e04c9f9fbe64b5a64aa68cf172e8" translate="yes" xml:space="preserve">
          <source>run_status Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4cda5615de6a1262388975258502d2af4e3953" translate="yes" xml:space="preserve">
          <source>sandboxes</source>
          <target state="translated">sandboxes</target>
        </trans-unit>
        <trans-unit id="cb5346a081dcf654061b7f897ea14d9b43140712" translate="yes" xml:space="preserve">
          <source>script</source>
          <target state="translated">script</target>
        </trans-unit>
        <trans-unit id="3559d7accf00360971961ca18989adc0614089c0" translate="yes" xml:space="preserve">
          <source>search</source>
          <target state="translated">search</target>
        </trans-unit>
        <trans-unit id="4cf5bc59bee9e1c44c6254b5f84e7f066bd8e5fe" translate="yes" xml:space="preserve">
          <source>service</source>
          <target state="translated">service</target>
        </trans-unit>
        <trans-unit id="a294112de62748c72eaecba16687094ed680598c" translate="yes" xml:space="preserve">
          <source>service Matcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80db80f755a535f87b43da97421db4021220f8b" translate="yes" xml:space="preserve">
          <source>service-list</source>
          <target state="translated">service-list</target>
        </trans-unit>
        <trans-unit id="aab90dfe8c6f152a4fb071f5f4f9df804626e6ab" translate="yes" xml:space="preserve">
          <source>share</source>
          <target state="translated">share</target>
        </trans-unit>
        <trans-unit id="ed829ae6bcf6723886a2fdce12fce80672c8d968" translate="yes" xml:space="preserve">
          <source>shell_out</source>
          <target state="translated">shell_out</target>
        </trans-unit>
        <trans-unit id="6160fb4b15abb2413a9317582daf45bf0ebce2da" translate="yes" xml:space="preserve">
          <source>shell_out!</source>
          <target state="translated">shell_out!</target>
        </trans-unit>
        <trans-unit id="c9722a39c5bdf40ba235f0ba4c927c9d06a5b8d3" translate="yes" xml:space="preserve">
          <source>shell_out_with_systems_locale</source>
          <target state="translated">shell_out_with_systems_locale</target>
        </trans-unit>
        <trans-unit id="f5fd1af899277a86fd836afd5dc753c695191b1a" translate="yes" xml:space="preserve">
          <source>should return nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb29051f2217270a7b253a39f820310d85a78f0" translate="yes" xml:space="preserve">
          <source>show</source>
          <target state="translated">show</target>
        </trans-unit>
        <trans-unit id="7d28f0cb8eb76d9559c959605d617b0f43bb21cc" translate="yes" xml:space="preserve">
          <source>show how to enable those handlers in a recipe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e3f563f39741ea59c5744c88c7de24a40e2b4d" translate="yes" xml:space="preserve">
          <source>show-config</source>
          <target state="translated">show-config</target>
        </trans-unit>
        <trans-unit id="6863ebc1b69291563a62d43e18a2a178c8929082" translate="yes" xml:space="preserve">
          <source>show-service-credentials</source>
          <target state="translated">show-service-credentials</target>
        </trans-unit>
        <trans-unit id="f3b091713d19fc98112e3b36ff75efe98d474205" translate="yes" xml:space="preserve">
          <source>shown as a list of key-value pairs, where (in the example above) &lt;code&gt;users&lt;/code&gt; and &lt;code&gt;applications&lt;/code&gt; are the names of data bags and &lt;code&gt;https://localhost/data/foo&lt;/code&gt; is the path to the data bag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d99e475380d78446158c15b8ff4552fadb77b3c" translate="yes" xml:space="preserve">
          <source>smart_os_package</source>
          <target state="translated">smart_os_package</target>
        </trans-unit>
        <trans-unit id="1ce170f7672e1586572e694235f50f176ebc2a33" translate="yes" xml:space="preserve">
          <source>smartos_package</source>
          <target state="translated">smartos_package</target>
        </trans-unit>
        <trans-unit id="cc5d17170137513b2263e3efccb71e8e314d32ea" translate="yes" xml:space="preserve">
          <source>solaris_package</source>
          <target state="translated">solaris_package</target>
        </trans-unit>
        <trans-unit id="cb8cb7f5225a1b3d39f4656023aaab8a9c40cbe1" translate="yes" xml:space="preserve">
          <source>solo.rb</source>
          <target state="translated">solo.rb</target>
        </trans-unit>
        <trans-unit id="e8b9f665f844bf5da8294a1282fd740a4b17d2a6" translate="yes" xml:space="preserve">
          <source>ssh</source>
          <target state="translated">ssh</target>
        </trans-unit>
        <trans-unit id="2b020927d3c6eb407223a1baa3d6ce3597a3f88d" translate="yes" xml:space="preserve">
          <source>start</source>
          <target state="translated">start</target>
        </trans-unit>
        <trans-unit id="42bf230d3625f9affa0c570b520e12afe6555ae7" translate="yes" xml:space="preserve">
          <source>start_handler.rb</source>
          <target state="translated">start_handler.rb</target>
        </trans-unit>
        <trans-unit id="48a3661d846478fa991a825ebd10b78671444b5b" translate="yes" xml:space="preserve">
          <source>status</source>
          <target state="translated">status</target>
        </trans-unit>
        <trans-unit id="1b480158e1f30e0b6cee7813e9ecf094bd6b3745" translate="yes" xml:space="preserve">
          <source>stop</source>
          <target state="translated">stop</target>
        </trans-unit>
        <trans-unit id="15f025dfd513726647fb3daafb62e1d404c440cc" translate="yes" xml:space="preserve">
          <source>subversion</source>
          <target state="translated">subversion</target>
        </trans-unit>
        <trans-unit id="6f21bfdc0a18a123f5857b355b0bb2e668ee06be" translate="yes" xml:space="preserve">
          <source>tag, tagged?, untag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf5f2a2875b3bb65b8e3b23e6cc01d58ca30447" translate="yes" xml:space="preserve">
          <source>tail</source>
          <target state="translated">tail</target>
        </trans-unit>
        <trans-unit id="59a61e71c908596ea667b9b5d151ad3dcc8cf134" translate="yes" xml:space="preserve">
          <source>tail Log Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3226ecbe650213a49cd03ae67140750e4f340083" translate="yes" xml:space="preserve">
          <source>template</source>
          <target state="translated">template</target>
        </trans-unit>
        <trans-unit id="d14532d1dae32240d15271c229235933882ec903" translate="yes" xml:space="preserve">
          <source>template, httpd.conf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b8d5f62a0dbacaa6d138b4989b8ad5d5f0d8c1" translate="yes" xml:space="preserve">
          <source>template, httpd.service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4c3b84009d0ba24c742a698f0adb23e6f1ea7c" translate="yes" xml:space="preserve">
          <source>term</source>
          <target state="translated">term</target>
        </trans-unit>
        <trans-unit id="a94a8fe5ccb19ba61c4c0873d391e987982fbbd3" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="translated">test</target>
        </trans-unit>
        <trans-unit id="6f6cdb3c21221255f9a0ff5a2898a0d18563da83" translate="yes" xml:space="preserve">
          <source>the (optional) &lt;code&gt;load_current_value&lt;/code&gt; block loads the current values for all specified properties, in this example there is just a single property: &lt;code&gt;homepage&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28f99aac7c9b0b8b0323544944ee01126717af5" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;:adapter&lt;/code&gt; variable property may also require an attribute to have been set on a role, which then determines the correct adapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591c6efb79be57fdf537d08917d93266db8a74d2" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;action&lt;/code&gt; block uses the built-in collection of resources to tell the chef-client how to install Apache, start the service, and then create the contents of the file located at &lt;code&gt;/var/www/html/index.html&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d638843b52a0bef9ad293745b06371682d7745" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;environments&lt;/code&gt; property in the first &lt;strong&gt;execute&lt;/strong&gt; resource is being used to define values that appear as variables in the OpenVPN configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ef7f527c2cce4f030a56f4febe9450060fbcf9" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;if&lt;/code&gt; statement checks to see if the &lt;code&gt;index.html&lt;/code&gt; file is already present on the node. If that file is already present, its contents are loaded &lt;strong&gt;instead&lt;/strong&gt; of the default value for &lt;code&gt;homepage&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612fa4b880c2721761fd2750c1c1cfcf55cbbfd1" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;if&lt;/code&gt; statement is used to ensure availability of the &lt;code&gt;/etc/sudoers.d&lt;/code&gt; directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e762223262655a9347d00341495d276fffc4e16d" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;search&lt;/code&gt; method in the Recipe DSL is used to find the first node that is the database master (of which there should only be one)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d346f4d5549c1e52c1523cc4788053c9030439" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;variables&lt;/code&gt; property is a hash that passes values to template files (that are located in the &lt;code&gt;templates/&lt;/code&gt; directory for the cookbook</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d7b850aebc9f2ff5a5899898125e7646e5443a" translate="yes" xml:space="preserve">
          <source>the &lt;strong&gt;execute&lt;/strong&gt; resource is used to install MySQL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b21306311f6df64c3c8d9ba57b41b2610f90ff" translate="yes" xml:space="preserve">
          <source>the &lt;strong&gt;mount&lt;/strong&gt; resource is used to mount the node and enable MySQL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0975168a8003e56048a5371d1f9696209df20757" translate="yes" xml:space="preserve">
          <source>the &lt;strong&gt;package&lt;/strong&gt; resource is used to install sudo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ab58061b051870520e9595e4d1b7df19c97986" translate="yes" xml:space="preserve">
          <source>the &lt;strong&gt;package&lt;/strong&gt; resource uses the &lt;code&gt;cron_package&lt;/code&gt; variable to determine how to install the crond application on various nodes (with various platforms)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4f37fdf66054e175e4948e8cd26b3215510171" translate="yes" xml:space="preserve">
          <source>the &lt;strong&gt;service&lt;/strong&gt; resource enables the crond application on nodes that have Red Hat, CentOS, Red Hat Enterprise Linux, Fedora, or Amazon Web Services (AWS), and the cron service on nodes that run Debian, Ubuntu, or openSUSE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e56385b9b3413d44f3a17e54246cd6ee742b7f7" translate="yes" xml:space="preserve">
          <source>the &lt;strong&gt;template&lt;/strong&gt; resource tells the chef-client where to find the &lt;code&gt;sudoers&lt;/code&gt; template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2977e851140b4a0d6f872afd0cf444b17723b9" translate="yes" xml:space="preserve">
          <source>the &lt;strong&gt;template&lt;/strong&gt; resource tells the chef-client which template to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93bfa61909da126b4b8969f7f0bd7bb641cef9a" translate="yes" xml:space="preserve">
          <source>the difference is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b80165240f40039a0a64c197554a6492a6ce82" translate="yes" xml:space="preserve">
          <source>the private key does not have a passphrase, as this will pause a chef-client run to wait for input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57ed6a95631dbe09128d4c462c77ccc9f14beae" translate="yes" xml:space="preserve">
          <source>the search will use both of the &lt;strong&gt;execute&lt;/strong&gt; resources, unless the condition specified by the &lt;code&gt;not_if&lt;/code&gt; commands are met</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4989946666d3dcb9302eb74b855516cc6969cfd" translate="yes" xml:space="preserve">
          <source>the setting in the knife.rb file would be similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec4e674f5af1a70cdcd583537d92ae5c04e4368" translate="yes" xml:space="preserve">
          <source>the two &lt;strong&gt;service&lt;/strong&gt; resources are used to stop, and then restart the MySQL service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddfa79e9c26c9e1e86a08e475ff786c9f1f64b96" translate="yes" xml:space="preserve">
          <source>then enter &lt;code&gt;q&lt;/code&gt;, and then hit &lt;code&gt;ENTER&lt;/code&gt; to exit the shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2f80b190663512311c372a57b5e2ff61edf414" translate="yes" xml:space="preserve">
          <source>then:</source>
          <target state="translated">then:</target>
        </trans-unit>
        <trans-unit id="152296cbfbd3604176844479076ad86e30a39497" translate="yes" xml:space="preserve">
          <source>this will create an encrypted JSON file in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7cd5fb8244043ddc8d23b1401b79446b3663ff" translate="yes" xml:space="preserve">
          <source>timestamped_deploy</source>
          <target state="translated">timestamped_deploy</target>
        </trans-unit>
        <trans-unit id="24b8648e7effa067b93d04b0c11f0b869523e49f" translate="yes" xml:space="preserve">
          <source>to ensure that those settings are not part of the reasons for incomplete indexing, and then update the following setting so that its value is greater than the expected node file sizes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88cb08805fecf92dd5167dad655addeb9c6fc048" translate="yes" xml:space="preserve">
          <source>to open the $EDITOR. Once opened, you can update the data before saving it to the Chef server. For example, by changing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ecfe5a04058e16cd0db216621b9a831a4553c01" translate="yes" xml:space="preserve">
          <source>to produce results like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f8b63399a02d2a7644d78c4a094521b3600c5f" translate="yes" xml:space="preserve">
          <source>to return &lt;code&gt;app1.example.com&lt;/code&gt; (and any other node that matches any of the string searches above).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45eff5d35509b0526ca249ad8ef4cfb265e0faa" translate="yes" xml:space="preserve">
          <source>to return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. &lt;code&gt;tagged?&lt;/code&gt; can also use an array as an argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba352dbc38b40fc2e67186032555ceb1de057ce2" translate="yes" xml:space="preserve">
          <source>to return a full JSON description of the node and to view the available keys with which any search query can be based.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4bce00beb656f360b2b7accf4021713336d3aa2" translate="yes" xml:space="preserve">
          <source>to return a list of clients (registered nodes and workstations) that have access to the Chef server. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15edcb9a1246f03efc0285914dd051e199ee4dd" translate="yes" xml:space="preserve">
          <source>to return a list similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084c11abc2523d7372a5257407513752f9ac8247" translate="yes" xml:space="preserve">
          <source>to return something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6721123603ad240d805b5baaef6783968fc0e7" translate="yes" xml:space="preserve">
          <source>to return something similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817df87d3c5321310f02b316f05b754f6edc5dc8" translate="yes" xml:space="preserve">
          <source>to return:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0260a72d97c0534126da8186fff76ba09ed7d3" translate="yes" xml:space="preserve">
          <source>to upload all cookbooks and data bags, plus all roles and enviroments that are stored as JSON data. (Roles and environments stored as Ruby data will not be uploaded.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7785af11d3cce6836dd32d7cc66d02e32c8e5cc7" translate="yes" xml:space="preserve">
          <source>to upload all enviroments that are stored as JSON data. (Environments stored as Ruby data will not be uploaded.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="554061333b61e3efc1d74c42f7d497fd1011c027" translate="yes" xml:space="preserve">
          <source>to upload all roles that are stored as JSON data. (Roles stored as Ruby data will not be uploaded.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2496c4cf375080b0d4f3690dfbd06121df74f278" translate="yes" xml:space="preserve">
          <source>to view an updated list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1cfdcd865f3b87bcc9595dd395087b084ac080" translate="yes" xml:space="preserve">
          <source>to:</source>
          <target state="translated">to:</target>
        </trans-unit>
        <trans-unit id="84bbfdf0d9e56680ca68c3d3a9f5fe25e912fe3b" translate="yes" xml:space="preserve">
          <source>uninstall</source>
          <target state="translated">uninstall</target>
        </trans-unit>
        <trans-unit id="db25d23045cc584af6f96e93d5ceaf6eaad70edf" translate="yes" xml:space="preserve">
          <source>unshare</source>
          <target state="translated">unshare</target>
        </trans-unit>
        <trans-unit id="7c5e83d7e7060a49636e0d40f38f1a7e6460c61d" translate="yes" xml:space="preserve">
          <source>upgrade</source>
          <target state="translated">upgrade</target>
        </trans-unit>
        <trans-unit id="cb1151a270198509a42691bee3a89141d67089c7" translate="yes" xml:space="preserve">
          <source>upgrades</source>
          <target state="translated">upgrades</target>
        </trans-unit>
        <trans-unit id="bb73aaafa1596e5425dc514a361ad4ef658f2758" translate="yes" xml:space="preserve">
          <source>upload</source>
          <target state="translated">upload</target>
        </trans-unit>
        <trans-unit id="12dea96fec20593566ab75692c9949596833adc9" translate="yes" xml:space="preserve">
          <source>user</source>
          <target state="translated">user</target>
        </trans-unit>
        <trans-unit id="76ea9bbfc3bb3d4f123e706e00ed9b21425c9fb6" translate="yes" xml:space="preserve">
          <source>user create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cf0bf0c3a9e00b7af3da476522f4df5aa00c8c" translate="yes" xml:space="preserve">
          <source>user reregister</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d09cbbe3e2fe36a92218231ef254fba617f8a39" translate="yes" xml:space="preserve">
          <source>user-create</source>
          <target state="translated">user-create</target>
        </trans-unit>
        <trans-unit id="605b1a7f9342a902efa214b6792be92754e72805" translate="yes" xml:space="preserve">
          <source>user-delete</source>
          <target state="translated">user-delete</target>
        </trans-unit>
        <trans-unit id="7286ecce30df5c327b1b69503422ef9497259559" translate="yes" xml:space="preserve">
          <source>user-edit</source>
          <target state="translated">user-edit</target>
        </trans-unit>
        <trans-unit id="07c4ed3e34c751e2a6de6b2203425abf35e17a04" translate="yes" xml:space="preserve">
          <source>user-list</source>
          <target state="translated">user-list</target>
        </trans-unit>
        <trans-unit id="3e8ce0511ae9b787e40d6b2cb45e9b9ad8e447b9" translate="yes" xml:space="preserve">
          <source>user-show</source>
          <target state="translated">user-show</target>
        </trans-unit>
        <trans-unit id="5b7dcd14a4faa2cdd54cf6eb8d4bc35da31914a1" translate="yes" xml:space="preserve">
          <source>users</source>
          <target state="translated">users</target>
        </trans-unit>
        <trans-unit id="bba08559d1654442964670ad8d5a0fc1c57ab7ea" translate="yes" xml:space="preserve">
          <source>using an if statement to check whether the plugins on a node are the latest versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf94d08437d35251b154f4f0068fc05de19d622a" translate="yes" xml:space="preserve">
          <source>using the &lt;code&gt;notifies&lt;/code&gt; property and a &lt;strong&gt;ruby_block&lt;/strong&gt; resource to trigger an update (if required) and to then reload the client.rb file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eceed719d922faba8befbd260fbdec0d3391c235" translate="yes" xml:space="preserve">
          <source>value_for_platform</source>
          <target state="translated">value_for_platform</target>
        </trans-unit>
        <trans-unit id="c68b058894a1136ce6387a9ce51f634965669d58" translate="yes" xml:space="preserve">
          <source>value_for_platform_family</source>
          <target state="translated">value_for_platform_family</target>
        </trans-unit>
        <trans-unit id="66c999bcea8ab30a006112c8893c8f695566c88d" translate="yes" xml:space="preserve">
          <source>variables Attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46148cc3b4d2b3ac8073f14b0cba7f25ffff54bd" translate="yes" xml:space="preserve">
          <source>where</source>
          <target state="translated">where</target>
        </trans-unit>
        <trans-unit id="a1fca3a1ca256edddbc4324556245a6aafa5601c" translate="yes" xml:space="preserve">
          <source>where (in the example above) &lt;code&gt;name&lt;/code&gt; is the key and &amp;ldquo;users&amp;rdquo; is the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68617a86fd889bacc8d59ee70ae25b3daa56fd2" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;'/usr/sbin/apachectl configtest'&lt;/code&gt; is a command that tests if the configuration files for Apache are valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38911ac78bf7fbcadd9eff6ac83fbf18d69d0733" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;'redhat', 'centos'&lt;/code&gt; will install Apache using the &lt;code&gt;httpd&lt;/code&gt; package and &lt;code&gt;'ubuntu', 'debian'&lt;/code&gt; will install it using the &lt;code&gt;apache2&lt;/code&gt; package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a2943ffa58c701fcdd0674fdd7b03fc5a85f17" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;-D&lt;/code&gt; enables debugging and &lt;code&gt;10&lt;/code&gt; creates output for each file that is processed during the upgrade. See the man pages for dpkg for more information about this option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300f6e7ac0f49eacf4023f1b6d593b1c05426394" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;-r&lt;/code&gt; corresponds to &lt;code&gt;recipe_url&lt;/code&gt; and &lt;code&gt;-j&lt;/code&gt; corresponds to &lt;code&gt;json_attribs&lt;/code&gt;, both of which are configuration options in solo.rb.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c6101f58992d31000ce6ee3fc0f559eb7edaf67" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;/dev/s01 .. /dev/s10&lt;/code&gt; represents 10 devices (01, 02, 03, and so on). This same command, when expressed as a recipe using the &lt;strong&gt;mdadm&lt;/strong&gt; resource, would be similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aaf558cee0fa39346331da92c93e12f4412a248" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;/path/to/&lt;/code&gt; represents the path to the location in which these three files were placed after they were downloaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4839612ced7d76854212294799718620c7e668bf" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;/path/to/file.json&lt;/code&gt; is similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fdef5dfe7a49352165bb70d9852b7aa9e9bc12" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;/qn&lt;/code&gt; is used to set the user interface level to &amp;ldquo;No UI&amp;rdquo;, &lt;code&gt;/i&lt;/code&gt; is used to define the location in which the chef-client is installed, and &lt;code&gt;&quot;%LOCAL_DESTINATION_MSI_PATH%&quot;&lt;/code&gt; is a variable defined in the default &lt;a href=&quot;https://github.com/chef/knife-windows/blob/master/lib/chef/knife/bootstrap/windows-chef-client-msi.erb&quot;&gt;windows-chef-client-msi.erb&lt;/a&gt; bootstrap template. See &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/aa367988%28v=vs.85%29.aspx&quot;&gt;http://msdn.microsoft.com/en-us/library/aa367988%28v=vs.85%29.aspx&lt;/a&gt; for more information about the options available to Msiexec.exe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05808f11b02db24a190ec0019e156328309811d" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;123.45.6.789&lt;/code&gt; is the IP address or the FQDN for the node. Use the &lt;code&gt;--distro&lt;/code&gt; option to specify a non-default distribution. For more information about the options available to the &lt;code&gt;knife bootstrap&lt;/code&gt; command for Ubuntu- and Linux-based platforms, see &lt;a href=&quot;knife_bootstrap&quot;&gt;knife bootstrap&lt;/a&gt;. For Microsoft Windows, the &lt;code&gt;knife windows&lt;/code&gt; plugin is required, see knife windows .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138c05eaf9c125448ed78feedcfaf9017b539011" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;192.168*&lt;/code&gt; is the network address for which the search will be run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07ee04a7468b75886b9805834758ce0913798ed" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;192.168.0.* TO 192.168.127.*&lt;/code&gt; defines the subnet range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e2396a667277a47c276a9d5b1e5dcba87ebc12" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;::default_recipe&lt;/code&gt; is implied (and does not need to be specified). On a node, these recipes can be assigned to a node&amp;rsquo;s run-list similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da107b5ebff32758f0a991736654a3a9e891a60" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;:create&lt;/code&gt; is a value that may be assigned to the &lt;code&gt;action&lt;/code&gt; property for when this resource is used in a recipe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d893e134abaaa3d708f3b853553c603eda7a22d4" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;:custom_name&lt;/code&gt; is the resource name as it may be used in a recipe. For example, a cookbook named &lt;code&gt;website&lt;/code&gt; and a custom resource file named &lt;code&gt;httpd&lt;/code&gt; is by default used in a recipe with &lt;code&gt;website_httpd&lt;/code&gt;. If &lt;code&gt;:custom_name&lt;/code&gt; is &lt;code&gt;web_httpd&lt;/code&gt; then it may be used like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f71eb5fdae65dbeb8c22d545a7d2e31f14bfd7" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;:name =&amp;gt; ''&lt;/code&gt; contains an empty string, which will set the name of the registry key to &lt;code&gt;(Default)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa28375642221275e4c7b1aa727a0c2be0a08fa7" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;:type&lt;/code&gt; may be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c9d14bff3e4491241abedfe556980ecb397744" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;@x.x.x&lt;/code&gt; represents a constraint for a cookbook version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8ef1f286f839aa7cc8178b6e19a7a877c99cab" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;ATTRIBUTE_NAME&lt;/code&gt; is something like &lt;code&gt;kernel&lt;/code&gt; and &lt;code&gt;NESTED_ATTRIBUTE_NAME&lt;/code&gt; is something like &lt;code&gt;machine&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff312132abc5bf280ca5f7c2ee62b398dd021ef" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;ATTRIBUTE_NAME&lt;/code&gt; is something like &lt;code&gt;kernel&lt;/code&gt; or &lt;code&gt;platform&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d135cde9f489cdd41bff10a0c7fb81759ba43ae6" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;COOKBOOK_NAME&lt;/code&gt; is the name of a cookbook on &lt;a href=&quot;https://supermarket.chef.io&quot;&gt;https://supermarket.chef.io&lt;/a&gt;. This will download the tar.gz file associated with the cookbook and will create a file named &lt;code&gt;COOKBOOK_NAME.tar.gz&lt;/code&gt; in the current directory (e.g., &lt;code&gt;~/chef-repo&lt;/code&gt;). Once downloaded, using a version source control system is recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cddf5c0034a559e081c36b74f0004881ab8e974" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;COOKBOOK_NAME&lt;/code&gt; is the name of a cookbook on &lt;a href=&quot;https://supermarket.chef.io&quot;&gt;https://supermarket.chef.io&lt;/a&gt;. This will start a process that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107696f4966a8d0fa7f230665e53daa7fb1cfb2c" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;COOKBOOK_NAME&lt;/code&gt; is the name of the cookbook that will be created. Any unneeded directory components can be left unused or deleted, if preferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc52e66fa7b7a2908f1cb24389b1513d8e932ec" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;INDEX&lt;/code&gt; is one of &lt;code&gt;client&lt;/code&gt;, &lt;code&gt;environment&lt;/code&gt;, &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;role&lt;/code&gt;, or the name of a data bag and &lt;code&gt;SEARCH_QUERY&lt;/code&gt; is the search query syntax for the query that will be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb79fe263d7874b01c7398eacbf23e6077f6078" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;NUM&lt;/code&gt; is the largest integer previously returned as an identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d90c368476f436a36a58a548326249e11c74dad" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;ORG_NAME&lt;/code&gt; is the name of the organization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c59f53434df242e32b5ee5444100cc5e74a423" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;SERVICENAME&lt;/code&gt; should be replaced with name of the service for which log files will be viewed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3563703f2927457a782dd8c5111302df3c67a54f" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;SERVICE_NAME&lt;/code&gt; represents the name of any service that is listed after running the &lt;code&gt;service-list&lt;/code&gt; subcommand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3bbca0824e4b9f5e37c315e9d4465efce005202" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;SERVICE_NAME&lt;/code&gt; represents the name of any service that is listed after running the &lt;code&gt;service-list&lt;/code&gt; subcommand. When a service is successfully restarted the output should be similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210de85f8910e328115350945658ade72db02580" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;SERVICE_NAME&lt;/code&gt; represents the name of any service that is listed after running the &lt;code&gt;service-list&lt;/code&gt; subcommand. When a service is successfully started the output should be similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1514494ffe411dfea090e839ddcc64d3e67e0be3" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;SERVICE_NAME&lt;/code&gt; represents the name of any service that is listed after running the &lt;code&gt;service-list&lt;/code&gt; subcommand. When a service is successfully stopped the output should be similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1e85f36309dab983440a739a11389b39c1108e" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;TO&lt;/code&gt; is required (and must be capitalized).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea2365e622c58b52ee2cd3a2b1e768b1d3fd1e7" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;USER_NAME&lt;/code&gt; is the user to add to the list of server administrators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d63ad40312ab89d9f6239727b2eae0c5dbb52b1" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;USER_NAME&lt;/code&gt; is the user to remove from the list of server administrators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b98de5349a49ea7ad8f3a16607febd1e0229ae8" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;VERSION&lt;/code&gt; can be &lt;code&gt;_latest&lt;/code&gt; in order to float to head.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a56d6ce39a99c2bda405f48df3278966a986f785" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;action&lt;/code&gt; is set to &lt;code&gt;:nothing&lt;/code&gt; to ensure the &lt;code&gt;run_action&lt;/code&gt; is run during the compile phase and not later during the execution phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7bbea6fad601e5873cd189908cfd90b04de547" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;admins&lt;/code&gt; is the name of the data bag and &lt;code&gt;Charlie the Unicorn&lt;/code&gt; is the string that will be used during the search. Something similar to the following will be returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d81866f5b83f7fe4f1807b4473d31cd4fd2dcb" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;admins&lt;/code&gt; is the name of the data bag and &lt;code&gt;charlie&lt;/code&gt; is the name of the data bag item. Something similar to the following will be returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0e7ab79802ccb4fd2dd0afd396a3892469640d" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;bash&lt;/code&gt; and &lt;code&gt;~/.bash_profile&lt;/code&gt; represents the name of the shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b90dda32cc87dda45931f9d1b68500a8567b8a" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;boo~&lt;/code&gt; defines the fuzzy search pattern. This will return something similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b4015df18391e40c884bade9c09f427c0320ee7" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;chef&lt;/code&gt; is the name of the non-root user. This would allow chef-solo to run any command on the node without requiring a password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3016eb536efe042552841a71791f40e8938a508" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;code&lt;/code&gt; contains the OpenSSL command to be run. The &lt;code&gt;not_if&lt;/code&gt; property tells the chef-client not to run the command if the file already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24903705ad6cf9d5e951ba420fee7c92c55054e2" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;command_args&lt;/code&gt; is the command that is run against the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdce171190c75ecd411b5375550802f70cdba929" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;command_args&lt;/code&gt; is the command that is run against the node. This method will return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd0a774a65a08c51d2a62b15f6dd1bd401399e6" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;condition&lt;/code&gt; defines when a &lt;code&gt;&quot;log_message&quot;&lt;/code&gt; and an &lt;code&gt;error_code&lt;/code&gt; are sent to the logger and &lt;code&gt;STDERR&lt;/code&gt;, after which the chef-client will exit. The &lt;code&gt;error_code&lt;/code&gt; itself is arbitrary and is assigned by the individual who writes the code that triggers the fatal message. Assigning an error code is optional, but they can be useful during log file analysis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd533a4a794a188b374449e1de0676ff7bb9f5c" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;configuration_file&lt;/code&gt; is the name of the configuration file for the specific command shell. For example, if Bash were the command shell and the configuration file were named &lt;code&gt;bash_profile&lt;/code&gt;, the command would look something like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c4db6f05e3d83ca8fea210aadc447999fc11ef" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;cwd new_resource.cwd&lt;/code&gt;, &lt;code&gt;environment new_resource.environment&lt;/code&gt;, &lt;code&gt;user new_resource.user&lt;/code&gt;, and &lt;code&gt;sensitive new_resource.sensitive&lt;/code&gt; correctly use the properties of the &lt;strong&gt;execute&lt;/strong&gt; resource and not the identically-named override properties of the custom resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f64b0b9ce91bda08f2587c787b084a76f790650" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;data_bag_item&lt;/code&gt; makes an HTTP request to the Chef server to get a data bag item named &lt;code&gt;flowers&lt;/code&gt;. If there is a problem, the request will return a &lt;code&gt;Net::HTTPServerException&lt;/code&gt;. The &lt;code&gt;rescue&lt;/code&gt; block can be used to try to retry or otherwise handle the situation. If the &lt;code&gt;rescue&lt;/code&gt; block is unable to handle the situation, then the &lt;code&gt;raise&lt;/code&gt; keyword is used to specify the message to be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18d201ef5f09c23154033e393faf62aa0e36815" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;dogs&lt;/code&gt; is the name of the data bag and &lt;code&gt;tibetanspaniel&lt;/code&gt; is the name of the data bag item. This will return something similar to the following in the knife editor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5fbe3878352c3ef32bdc261cdb76f90940e454d" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;e.run_action(:run)&lt;/code&gt; tells the chef-client to run the &lt;code&gt;apt-get update&lt;/code&gt; command during the compile phase. This example can be found in the &lt;code&gt;default.rb&lt;/code&gt; recipe of the &lt;a href=&quot;https://github.com/chef-cookbooks/apt&quot;&gt;apt cookbook&lt;/a&gt; that is maintained by Chef.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c874a2175a2d3b20229fd5606fe791b7fcbbe61d" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;encrypted_data_bag_secret&lt;/code&gt; is the name of the file which will contain the secret key. For example, to create a secret key named &amp;ldquo;my_secret_key&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6000f3c1506f1769f474d0c80d9302cf86e2b736" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;file.json&lt;/code&gt; is similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44285151e0f54eb30ea12e0890481cdfde2719c1" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;file&lt;/code&gt; is the type of resource, &lt;code&gt;/etc/hosts&lt;/code&gt; is the name, and &lt;code&gt;f.mode&lt;/code&gt; is used to set the &lt;code&gt;mode&lt;/code&gt; property on the &lt;strong&gt;file&lt;/strong&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59123543732f1d253c1d8d916d695768d3c990f5" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;foo&lt;/code&gt; is the name of the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0550a195b55512a4cd62ccbb4207adafa709a1dc" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;host&lt;/code&gt; is the private IP address of the database server. Use the following knife query to view information about the node:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d784be8f8dbc2991948c6a64aa163f759e3682f1" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;id&lt;/code&gt; is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509856f75cf339d5523c97935c22e3a9447727c7" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;key&lt;/code&gt; is a field name that is found in the JSON description of an indexable object on the Chef server (a role, node, client, environment, or data bag) and &lt;code&gt;search_pattern&lt;/code&gt; defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;search_pattern&lt;/code&gt; are case-sensitive; &lt;code&gt;key&lt;/code&gt; has limited support for multiple character wildcard matching using an asterisk (&amp;ldquo;*&amp;rdquo;) (and as long as it is not the first character).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a38c2c3a4a70272b6195e0c15fe76841f4664f" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;lazy&lt;/code&gt; is used to tell the chef-client to evaluate the contents of the code block later on in the resource evaluation process (instead of immediately) and &lt;code&gt;{ code_block }&lt;/code&gt; is arbitrary Ruby code that provides the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a20623d891ebb33def9efc76b0a545117b9e1e7" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;matching_node&lt;/code&gt; represents a type of node (like Nginx) and &lt;code&gt;site_proxy&lt;/code&gt; represents the type of proxy being used for that type of node (like Nexus).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f076e97fe91bb9eca47b9da17804b6051de8a28" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;matching_node&lt;/code&gt; represents a type of node. For example, if the &lt;code&gt;user_home&lt;/code&gt; variable specified &lt;code&gt;{node[:nginx]...}&lt;/code&gt;, a recipe might look similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e68e5d5d3d750bc18da2c275812caaf649c0e36" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;name&lt;/code&gt; is the name of the node. Other attributes are optional. The order of the &lt;code&gt;run_list&lt;/code&gt; attribute matters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e83d2050e4773565006289dc92da0b31c8825ab" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;name_of_API_client&lt;/code&gt; is the name of the API client to be created and &lt;code&gt;admin&lt;/code&gt; indicates whether the API client will be run as an admin API client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7791549435f83692a4d2cc0c5caea681b5494954" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;name_of_node&lt;/code&gt; is the name of the node that was just bootstrapped. The Chef server will return something similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92e338ea7db9e5662ec4f6753cc261da80cb6d4" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;name_of_premium_feature&lt;/code&gt; represents the command line value associated with the premium feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7280ade3704435d1abec999f01e7faa9ba946248" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;node['platform'] == 'windows'&lt;/code&gt; is the condition set on the &lt;code&gt;return&lt;/code&gt; keyword. When the condition is met, stop processing the recipe. This approach is useful when there is no need to continue processing, such as when a package cannot be installed. In this situation, it&amp;rsquo;s OK for a recipe to stop processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f7c1481bd9bd4507849ac15cf4ac5d509461f3" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;node['platform'] == 'windows'&lt;/code&gt; is the condition that will trigger the unhandled exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab835d29ce21f660b7cf0493d9f28944328de7e6" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;node[:platform]&lt;/code&gt; for each node is identified by Ohai during every chef-client run. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f421a2064174156df21bd1d1353938a7f5b986fd" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;partial_name&lt;/code&gt; is the name of the partial template file and &lt;code&gt;:option&lt;/code&gt; is one (or more) of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbbf198d8e377d27c24d0c254429aab307e9c3e1" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;private_key&lt;/code&gt; (when &lt;code&gt;true&lt;/code&gt;) will generate a new RSA private key for the API client. If &lt;code&gt;admin&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; the API client will be promoted to an admin API client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97cdbc17003bac1fb01301359c822ab25e3985b2" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;puts&lt;/code&gt; is the shorter version of the &lt;code&gt;$stdout.puts&lt;/code&gt; predefined variable in Ruby.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c88d864667adba3a313e4b2c29b8eae03efb200" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;recipe&lt;/code&gt; (singular!) indicates the top-level run-list. Variables can be interpolated into search strings using the Ruby alternate quoting syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb5eb2bd054e84efe549580b6f27d0a079eb607" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;recipes&lt;/code&gt; (plural!) indicates to search within an expanded run-list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09888fb7449908799d0b0eaaa1af94c5b4e9916f" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;role&lt;/code&gt; (singlular!) indicates the top-level run-list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3995a637aeb0402fed5649ca4a3503aa5c5347d" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;roles&lt;/code&gt; (plural!) indicates the expanded run-list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821783a046369bf01a8f673230ee7a12d96deb79" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;screen&lt;/code&gt; is one of the following values: &lt;code&gt;cssh&lt;/code&gt;, &lt;code&gt;interactive&lt;/code&gt;, &lt;code&gt;macterm&lt;/code&gt;, &lt;code&gt;screen&lt;/code&gt;, or &lt;code&gt;tmux&lt;/code&gt;. If the node does not have the shell type installed, knife will return an error similar to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d58608cef25db4b0717ee92c8d4bbcca22d98a" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;search_query&lt;/code&gt; is the string that will be used during the search and &lt;code&gt;edit_distance&lt;/code&gt; is the proximity. A tilde (&amp;ldquo;~&amp;rdquo;) is used to separate the edit distance from the search query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7abc415ffbe91bd0ddb677719ea8dd4522c0ed38" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;secret&lt;/code&gt; is the secret used to load an encrypted data bag. If &lt;code&gt;secret&lt;/code&gt; is not specified, the chef-client looks for a secret at the path specified by the &lt;code&gt;encrypted_data_bag_secret&lt;/code&gt; setting in the client.rb file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc6ac22caac852be893da42c422e8af419ce3e0" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;service_name&lt;/code&gt; is &lt;code&gt;bifrost&lt;/code&gt; or &lt;code&gt;erchef&lt;/code&gt;. This command will then open a shell that is connected to the Erchef processes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d5e202b81d604ad6a30edf6546107c5ec3dbbe" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;value&lt;/code&gt; may require quotation marks (&amp;lsquo; &amp;lsquo;) if that value is a string. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505f59d96df7e8233c5a64c2bb9103949cb4f91a" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;{+%Y-%m-%d-%H-%M-%S}&lt;/code&gt; is a format string for year, month, day, so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a55d0b220cfbefddf4edce0a9628a1d66f93ba82" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;|pkg|&lt;/code&gt; is used to define the name of the resource, but also to ensure that each item in the whitespace array has its own name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b0b2eebc2df1b99eb2b35917a707da72ee0e86" translate="yes" xml:space="preserve">
          <source>where a command for installing Python might look something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e9311ae25b939c1ae66f5121b63057c1c5491c" translate="yes" xml:space="preserve">
          <source>where by using the default &lt;code&gt;provider&lt;/code&gt; for the &lt;strong&gt;service&lt;/strong&gt;, the recipe is telling the chef-client to determine the specific provider to be used during the chef-client run based on the platform of the node on which the recipe will run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9475138445abcdb22d77bd26e587c8b4582709fd" translate="yes" xml:space="preserve">
          <source>where curly braces (&lt;code&gt;{ }&lt;/code&gt;) are used to define the range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="360a9745cfad8dd3693047fc89b376f9aa4c257e" translate="yes" xml:space="preserve">
          <source>where each of the partial template files can then be combined using normal Ruby template patterns within a template file, such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568667e05c6f91d56e0967a079eff57db24a8a79" translate="yes" xml:space="preserve">
          <source>where important fields in this log include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1533e1659dc0af513b715a939d4527d3faa1e32b" translate="yes" xml:space="preserve">
          <source>where in either approach &lt;code&gt;resource_type&lt;/code&gt; is the name of a resource and &lt;code&gt;resource_name&lt;/code&gt; is the name of a resource that can be configured by the chef-client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb3508abbe0a092b79ae9c6bf275ede44ef954a" translate="yes" xml:space="preserve">
          <source>where square brackets (&lt;code&gt;[ ]&lt;/code&gt;) are used to define the range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33bd1e2e289301472d4f9ed0e12be063dff55afb" translate="yes" xml:space="preserve">
          <source>where the &amp;ldquo;[0]&amp;rdquo; is the 0 (zero) index for the &lt;code&gt;db_server&lt;/code&gt; identifier. A single document is returned because the node is being searched on its unique name. The identifier &lt;code&gt;private_ip&lt;/code&gt; will now have the value of the private IP address of the database server (&lt;code&gt;10.40.64.202&lt;/code&gt;) and can then be used in templates as a variable, among other possible uses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37afd3320c0ca8ba79e27e9992a4350ad285517" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;branch_name&lt;/code&gt; variable is set to &lt;code&gt;staging&lt;/code&gt; or &lt;code&gt;master&lt;/code&gt;, depending on the environment of the node. Once this is determined, the &lt;code&gt;branch_name&lt;/code&gt; variable is used to set the revision for the repository. If the &lt;code&gt;git status&lt;/code&gt; command is used after running the example above, it will return the branch name as &lt;code&gt;deploy&lt;/code&gt;, as this is the default value. Run the chef-client in debug mode to verify that the correct branches are being checked out:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66fa72f868b4576b76672c96303d1ec5bde6de26" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;checksum&lt;/code&gt; values must have already been uploaded to the Chef server using the sandbox endpoint. Once a file with a particular checksum has been uploaded by the user, redundant uploads are not necessary. Unused &lt;code&gt;checksum&lt;/code&gt; values will be garbage collected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57121841095c31177a1114d7a1a910e747ed3498" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;command&lt;/code&gt; property for the &lt;strong&gt;execute&lt;/strong&gt; resource contains the command that is to be run and the &lt;code&gt;source&lt;/code&gt; property for the &lt;strong&gt;template&lt;/strong&gt; resource specifies which template to use. The &lt;code&gt;notifies&lt;/code&gt; property for the &lt;strong&gt;template&lt;/strong&gt; specifies that the &lt;code&gt;execute[forward_ipv4]&lt;/code&gt; (which is defined by the &lt;strong&gt;execute&lt;/strong&gt; resource) should be queued up and run at the end of the chef-client run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c505fff73263f5d6822fb814933bc3f8d2ceaa57" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;command&lt;/code&gt; property for the &lt;strong&gt;execute&lt;/strong&gt; resource contains the command that is to be run and the &lt;code&gt;source&lt;/code&gt; property for the &lt;strong&gt;template&lt;/strong&gt; resource specifies which template to use. The &lt;code&gt;notifies&lt;/code&gt; property for the &lt;strong&gt;template&lt;/strong&gt; specifies that the &lt;code&gt;execute[test_rule]&lt;/code&gt; (which is defined by the &lt;strong&gt;execute&lt;/strong&gt; resource) should be queued up and run at the end of the chef-client run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52805e335dce8ce50e70064e97e1177cd6e6c719" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;content&lt;/code&gt; attribute uses the Ruby &lt;code&gt;IO.read&lt;/code&gt; method to get the contents of the &lt;code&gt;/tmp/1.txt&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84262952873c2d9c73e46096ca5a65f3541e8a3" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;cookbook_copyright&lt;/code&gt; and &lt;code&gt;cookbook_email&lt;/code&gt; are specific to the organization and &lt;code&gt;cookbook_license&lt;/code&gt; is either &lt;code&gt;apachev2&lt;/code&gt; or &lt;code&gt;none&lt;/code&gt;. These settings will be used in the default recipe and in corresponding values in the metadata.rb file, but can be modified in those locations as well (if they should be different from the default values contained in the knife.rb file.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fac2662b74aad70486d8c86e0d3f4a1edcc49d5" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;hello_world&lt;/code&gt;, &lt;code&gt;app&lt;/code&gt;, and &lt;code&gt;app_conf(setting)&lt;/code&gt; methods comprise the module that extends a template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16b475dde9876bfaeac8a35273b00fcbd4fca7f" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;property :cwd&lt;/code&gt;, &lt;code&gt;property :environment&lt;/code&gt;, &lt;code&gt;property :user&lt;/code&gt;, and &lt;code&gt;property :sensitive&lt;/code&gt; are identical to properties in the &lt;strong&gt;execute&lt;/strong&gt; resource, embedded as part of the &lt;code&gt;action :run&lt;/code&gt; action. Because both the custom properties and the &lt;strong&gt;execute&lt;/strong&gt; properties are identical, this will result in an error message similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24874b4d8c2d1c4978783e3a5f9538b689d996d5" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;subscribes&lt;/code&gt; notification is used to reload the service using the template specified by the &lt;strong&gt;template&lt;/strong&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9544efdda049184cda4e53e89b97935edf5d1ca0" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;variables&lt;/code&gt; property tells the template to use the variables set at the beginning of the recipe and the &lt;code&gt;source&lt;/code&gt; property is used to call a template file located in the cookbook&amp;rsquo;s &lt;code&gt;/templates&lt;/code&gt; directory. The template file looks similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113735c4ce92bcad6bb3933f9b9a5b62fac8221f" translate="yes" xml:space="preserve">
          <source>where the &lt;strong&gt;remote_file&lt;/strong&gt; resource is first used to download the &lt;code&gt;DSCResourceKit620082014.zip&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dee3d6382fc8abb8c72f772682a9b0ae61fbb52" translate="yes" xml:space="preserve">
          <source>where the first &lt;code&gt;NAME&lt;/code&gt; is the name of the role and the second is the name of the environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40593f1564f2834ed76016136adb9ca892cdd52" translate="yes" xml:space="preserve">
          <source>where the first action listed is the default action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc66fca8b36b47bf54fd0c31fe82c61ebcc09026" translate="yes" xml:space="preserve">
          <source>where the first instance of &lt;code&gt;NAME&lt;/code&gt; is the name of the environment, and the second instance is the name of the cookbook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d428916bc8de5f259db67600931dc6a84b7399" translate="yes" xml:space="preserve">
          <source>where the first instance of &lt;code&gt;NAME&lt;/code&gt; is the name of the environment, and the second instance is the name of the recipe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55783951a4345d6802fcfb983f1bb1314100cb7" translate="yes" xml:space="preserve">
          <source>where the first instance of &lt;code&gt;NAME&lt;/code&gt; is the name of the environment, and the second instance is the name of the role.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d95c85d7510fd7b41df974c2f789dbcb93372c6" translate="yes" xml:space="preserve">
          <source>where the key-value pairs represent the last state of the data bag item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a4ebbfa6aada9c67ca26b2e7c6e65085d4de970" translate="yes" xml:space="preserve">
          <source>where the last attribute in the list is the one that is applied to the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fbc51f47cd25cfb77b733ef882ea0e6ce497020" translate="yes" xml:space="preserve">
          <source>where the name of each breakpoint is an arbitrary string. In the previous examples, the names are used to indicate if the breakpoint is before or after a resource, and then also to specify which resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152da6f78df929fc0d1f064beb109324adaa72ea" translate="yes" xml:space="preserve">
          <source>where the name of the file is the &lt;code&gt;ITEM_NAME&lt;/code&gt;, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8f388290aea179c9c8f51911b556af695b97642" translate="yes" xml:space="preserve">
          <source>where the query in the previous example will search all servers that have the &lt;code&gt;web&lt;/code&gt; role, but not on the server named &lt;code&gt;web03&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff0cd7ee17ec292d473e76b77425cb7d69ff48f" translate="yes" xml:space="preserve">
          <source>where the sequencing will be in the same order as the resources are listed in the recipe: &lt;code&gt;execute 'foo'&lt;/code&gt;, &lt;code&gt;template 'baz'&lt;/code&gt;, &lt;code&gt;execute [restart_baz]&lt;/code&gt;, &lt;code&gt;package 'bar'&lt;/code&gt;, and &lt;code&gt;execute 'final'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5834d4e35d0adba03512f4d0e290c6ef888a529c" translate="yes" xml:space="preserve">
          <source>where this shows lost communication with the secondary machine and &lt;code&gt;oos:&lt;/code&gt; at non-zero (and increasing). This connection state is not fatal, but does represent a degraded state for the cluster where the machines are no longer in sync and are building up a queue of unwritten writes on the originating side that must eventually be synchronized to the secondary machine after the network stabilizes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365862a50c0682caa8baa6f30edca76e3e5f81ed" translate="yes" xml:space="preserve">
          <source>where:</source>
          <target state="translated">where:</target>
        </trans-unit>
        <trans-unit id="b6972421531ff7b713a7726fc881834feecc6702" translate="yes" xml:space="preserve">
          <source>whereas the following will raise an exception:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43800b9fd731d39e4309cc45bdb86f28170d7974" translate="yes" xml:space="preserve">
          <source>which allows searches like the following to find data that is present in this node:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8675008fc700d7866a7ca0b3cf49f4139338832a" translate="yes" xml:space="preserve">
          <source>which creates a run-list similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875eef9bfaea877c192a66cd821ff427a38ed13c" translate="yes" xml:space="preserve">
          <source>which does the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b42160ce2d3fb09a30cbc743ac5fe3c84a84e44" translate="yes" xml:space="preserve">
          <source>which is then used in a recipe like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c855e784d70b9be1fd57da0b32e128ff73f612b" translate="yes" xml:space="preserve">
          <source>which now returns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2042d195928b7c4e88a5d39789135ae7fafb7c94" translate="yes" xml:space="preserve">
          <source>which returns &lt;code&gt;154516&lt;/code&gt;. Update the &lt;code&gt;opscode_solr4['max_field_length']&lt;/code&gt; setting to have a value greater than the returned value. For example: &lt;code&gt;180000&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78eea2492085ab251267ec391614481838520e3d" translate="yes" xml:space="preserve">
          <source>which returns a list of data bags on the server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96677daf56a2a9f436764067110122ef6cfcf6e" translate="yes" xml:space="preserve">
          <source>which returns something similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3735df0439fb9db60b07553850e736dfe8f4298" translate="yes" xml:space="preserve">
          <source>which should return something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a565a2446c16eb37c3f49347a67d68137d14d3" translate="yes" xml:space="preserve">
          <source>which shows something similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d671f27c523afda2e6ef719218488ff5ca7afaac" translate="yes" xml:space="preserve">
          <source>which will install Apache using all of the default options and the default action (&lt;code&gt;:install&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a826a09e3372a6580c39402a9de8903d2c2294" translate="yes" xml:space="preserve">
          <source>which will install the named package using all of the default options and the default action (&lt;code&gt;:install&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f36b8547f6073698d9c5d74bb0bf55af0202530" translate="yes" xml:space="preserve">
          <source>which will return something like &lt;code&gt;/usr/bin/ruby&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9dca4230dd778db9a90b1bde8210c5f2e82eaa" translate="yes" xml:space="preserve">
          <source>which will return something similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c640f69b85cf3caebd609239cdde8b68c401faa4" translate="yes" xml:space="preserve">
          <source>why-run mode is a way to see what the chef-client would have configured, had an actual chef-client run occurred. This approach is similar to the concept of &amp;ldquo;no-operation&amp;rdquo; (or &amp;ldquo;no-op&amp;rdquo;): decide what should be done, but then don&amp;rsquo;t actually do anything until it&amp;rsquo;s done right. This approach to configuration management can help identify where complexity exists in the system, where inter-dependencies may be located, and to verify that everything will be configured in the desired manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859b2870b305a6f4c135b8a1c53c242d42b97e0a" translate="yes" xml:space="preserve">
          <source>why-run mode is not a replacement for running cookbooks in a test environment that mirrors the production environment. Chef uses why-run mode to learn more about what is going on, but also Kitchen on developer systems, along with an internal OpenStack cloud and external cloud providers to test more thoroughly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a86a801f010f9796a4315b0b3236e67b7d9584" translate="yes" xml:space="preserve">
          <source>will be set to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ffc89ee5bad981a7b423bf982b83fdedd34b96" translate="yes" xml:space="preserve">
          <source>will create the following interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b19c0838a5cdb2f1b2391aeccb89b2621dfc459" translate="yes" xml:space="preserve">
          <source>will install the &lt;code&gt;monit&lt;/code&gt; package because the &lt;code&gt;:install&lt;/code&gt; action is the default action for the &lt;strong&gt;package&lt;/strong&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f1bfec91749f5aa1573d0dc13424466a062f11" translate="yes" xml:space="preserve">
          <source>will match cookbooks greater than or equal to 2.6.5, such as 2.6.5, 2.6.7 or 3.1.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab68c023ea80bf002f3bcc116aac55744a17926" translate="yes" xml:space="preserve">
          <source>will match cookbooks that are greater than or equal to version 2.6, but less than version 3.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f02cef32a505fb2fa25428c507105200498ab3c" translate="yes" xml:space="preserve">
          <source>will match cookbooks that are greater than or equal to version 2.6.5, but less than version 2.7.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b776e9cdb250404fa009b3fce2136ce7763747f0" translate="yes" xml:space="preserve">
          <source>will open up the text editor with data similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7699c99ecba78b3845bf399f44cbdd43e497cf71" translate="yes" xml:space="preserve">
          <source>will result in a node object similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f1b5e152acfa8c231a34a3f5bcda9036449453" translate="yes" xml:space="preserve">
          <source>will return something similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a838b6acb762a3b940bffb31476f9eddf67174" translate="yes" xml:space="preserve">
          <source>will return:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27818a992e9c90abb9278da59f72b3a43fda12d9" translate="yes" xml:space="preserve">
          <source>will start the Apache Tomcat service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c351af1d8a759f50ded0efd5e2eca5323c3a41" translate="yes" xml:space="preserve">
          <source>will update the interface from &lt;code&gt;static&lt;/code&gt; to &lt;code&gt;dhcp&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3232a867a6fef4beb32a420ede0796631f63942a" translate="yes" xml:space="preserve">
          <source>windows_package</source>
          <target state="translated">windows_package</target>
        </trans-unit>
        <trans-unit id="74e3734dbd3a4f08ae0bdc690ca426deb43b32e0" translate="yes" xml:space="preserve">
          <source>windows_service</source>
          <target state="translated">windows_service</target>
        </trans-unit>
        <trans-unit id="68e88603e69c6bbe0f6cd63fa155fabb2fba237f" translate="yes" xml:space="preserve">
          <source>with a request body similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a5404f9a3bb52a4bad0bb96d6ab12f3024f13c" translate="yes" xml:space="preserve">
          <source>with a request body that contains the key-value pair for the data bag and is similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a7f006dba70a64b8d9883027d25cffcfa786f8" translate="yes" xml:space="preserve">
          <source>with a request body that contains the updated JSON for the environment and is similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8ca541454e63acd912065734bc37dec2a97c2e" translate="yes" xml:space="preserve">
          <source>with a single default value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585ff272cc4d8fb2cd0f6d8106b56b25f9384bad" translate="yes" xml:space="preserve">
          <source>with_run_context</source>
          <target state="translated">with_run_context</target>
        </trans-unit>
        <trans-unit id="fd0c1c78c8f66b09ae32c836fc4f7a1e2ef8963b" translate="yes" xml:space="preserve">
          <source>xargs</source>
          <target state="translated">xargs</target>
        </trans-unit>
        <trans-unit id="fb360f9c09ac8c5edb2f18be5de4e80ea4c430d0" translate="yes" xml:space="preserve">
          <source>yes</source>
          <target state="translated">yes</target>
        </trans-unit>
        <trans-unit id="2cdac9b304f8c71de2080958798d0a30b837616a" translate="yes" xml:space="preserve">
          <source>yum_package</source>
          <target state="translated">yum_package</target>
        </trans-unit>
        <trans-unit id="cb672b411b8bb0368bf7cb18f2623121757a4dcd" translate="yes" xml:space="preserve">
          <source>~300GB of raw, unpartitioned disk space is available</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
