<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="bootstrap">
    <body>
      <group id="bootstrap">
        <trans-unit id="b70852b95d0194c4b7d664cdface00e35fa0b040" translate="yes" xml:space="preserve">
          <source>This event fires immediately when the show instance method is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3bc7fd4e52d83e2e29dc22f5ae340cddc5774f3" translate="yes" xml:space="preserve">
          <source>This event fires on tab show after a tab has been shown. Use &lt;code&gt;event.target&lt;/code&gt; and &lt;code&gt;event.relatedTarget&lt;/code&gt; to target the active tab and the previous active tab (if available) respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff26d9c8072a01d57724c32250a27d9ab3d1fcd7" translate="yes" xml:space="preserve">
          <source>This event fires on tab show, but before the new tab has been shown. Use &lt;code&gt;event.target&lt;/code&gt; and &lt;code&gt;event.relatedTarget&lt;/code&gt; to target the active tab and the previous active tab (if available) respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1024776ffa749b38f2cefb747402e0cb1725792" translate="yes" xml:space="preserve">
          <source>This event fires on the scroll element whenever a new item becomes activated by the scrollspy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465c19e43d60cf468a4b8d215924cdce63efd3d5" translate="yes" xml:space="preserve">
          <source>This event fires when a new tab is to be shown (and thus the previous active tab is to be hidden). Use &lt;code&gt;event.target&lt;/code&gt; and &lt;code&gt;event.relatedTarget&lt;/code&gt; to target the current active tab and the new soon-to-be-active tab, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b85c7f9d5d11881c4d4d286a34e4a1c0800cfa" translate="yes" xml:space="preserve">
          <source>This event is fired after the &lt;code&gt;show.bs.popover&lt;/code&gt; event when the popover template has been added to the DOM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7057015bedee747b6474d9f14f095570886dbd4" translate="yes" xml:space="preserve">
          <source>This event is fired after the &lt;code&gt;show.bs.tooltip&lt;/code&gt; event when the tooltip template has been added to the DOM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652a51444d087a3969237498f3e23085ccaf1743" translate="yes" xml:space="preserve">
          <source>This event is fired immediately when the &lt;code&gt;hide&lt;/code&gt; instance method has been called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84a1b2ba5a118dd8173ee0fecd3615d89c5e935" translate="yes" xml:space="preserve">
          <source>This event is fired immediately when the &lt;code&gt;hide&lt;/code&gt; method has been called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc37c8cb6cfcae83de4d149ee8aad233bb38465" translate="yes" xml:space="preserve">
          <source>This event is fired immediately when the hide instance method has been called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a378eb5777ff35547d5622330298c04e35825e7" translate="yes" xml:space="preserve">
          <source>This event is fired when a collapse element has been hidden from the user (will wait for CSS transitions to complete).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5dfb064f5d60dcfbdd761441bda8edbab82da9" translate="yes" xml:space="preserve">
          <source>This event is fired when a collapse element has been made visible to the user (will wait for CSS transitions to complete).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda3b375a6db86bdf16cfdd3414d5176088dcaa1" translate="yes" xml:space="preserve">
          <source>This event is fired when the alert has been closed (will wait for CSS transitions to complete).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d7332157c477c8510dab966c0e0085805e86a6" translate="yes" xml:space="preserve">
          <source>This event is fired when the carousel has completed its slide transition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92da93f662f4e4c0b9cee4b22abda67d5927e6bd" translate="yes" xml:space="preserve">
          <source>This event is fired when the dropdown has been made visible to the user (will wait for CSS transitions, to complete).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ccd3fd2ef9bda369f411853e5f5d6fe5266dc6a" translate="yes" xml:space="preserve">
          <source>This event is fired when the dropdown has finished being hidden from the user (will wait for CSS transitions, to complete).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516ca33048f4f9975b88ab2c8dafc086359236dc" translate="yes" xml:space="preserve">
          <source>This event is fired when the modal has been made visible to the user (will wait for CSS transitions to complete). If caused by a click, the clicked element is available as the &lt;code&gt;relatedTarget&lt;/code&gt; property of the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e5151d7e35ff138fad7a8e86bce5668466548d" translate="yes" xml:space="preserve">
          <source>This event is fired when the modal has finished being hidden from the user (will wait for CSS transitions to complete).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4edfea558f5b9a4033c7cd8869d78fd63fb823" translate="yes" xml:space="preserve">
          <source>This event is fired when the modal is shown, its backdrop is &lt;code&gt;static&lt;/code&gt; and a click outside the modal or an escape key press is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fbfa569c231ed4059b700eaf2c19df9f423ed09" translate="yes" xml:space="preserve">
          <source>This event is fired when the popover has been made visible to the user (will wait for CSS transitions to complete).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="560d4ffb20ef780f6bda09ff00d8d194876e673e" translate="yes" xml:space="preserve">
          <source>This event is fired when the popover has finished being hidden from the user (will wait for CSS transitions to complete).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc3f3789a428a284b0b1e616f58f3eda5b8d506" translate="yes" xml:space="preserve">
          <source>This event is fired when the toast has been made visible to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3c4d9c70d59ae8954c5eab1f06f17d2dedb59c" translate="yes" xml:space="preserve">
          <source>This event is fired when the toast has finished being hidden from the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf40d1f04b407c1a6b049c0d5c3e1a3fb0de05a" translate="yes" xml:space="preserve">
          <source>This event is fired when the tooltip has been made visible to the user (will wait for CSS transitions to complete).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="693b48620070a7065628d62377cf5dfb378e8bca" translate="yes" xml:space="preserve">
          <source>This event is fired when the tooltip has finished being hidden from the user (will wait for CSS transitions to complete).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a10322a32b76780ad80091427528b4654f80fee" translate="yes" xml:space="preserve">
          <source>This example uses &lt;a href=&quot;../../utilities/colors/index&quot;&gt;color&lt;/a&gt; (&lt;code&gt;bg-light&lt;/code&gt;) and &lt;a href=&quot;../../utilities/spacing/index&quot;&gt;spacing&lt;/a&gt; (&lt;code&gt;my-2&lt;/code&gt;, &lt;code&gt;my-lg-0&lt;/code&gt;, &lt;code&gt;mr-sm-0&lt;/code&gt;, &lt;code&gt;my-sm-0&lt;/code&gt;) utility classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2d5d52ba8c6c742f076b2de37f81ee7285b07f" translate="yes" xml:space="preserve">
          <source>This is the most basic form of Bootstrap: precompiled files for quick drop-in usage in nearly any web project. We provide compiled CSS and JS (&lt;code&gt;bootstrap.*&lt;/code&gt;), as well as compiled and minified CSS and JS (&lt;code&gt;bootstrap.min.*&lt;/code&gt;). &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/javascript/source-maps&quot;&gt;source maps&lt;/a&gt; (&lt;code&gt;bootstrap.*.map&lt;/code&gt;) are available for use with certain browsers&amp;rsquo; developer tools. Bundled JS files (&lt;code&gt;bootstrap.bundle.js&lt;/code&gt; and minified &lt;code&gt;bootstrap.bundle.min.js&lt;/code&gt;) include &lt;a href=&quot;https://popper.js.org/&quot;&gt;Popper&lt;/a&gt;, but not &lt;a href=&quot;https://jquery.com/&quot;&gt;jQuery&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7cf7bf6b545f1da61208efeba3a920febe22b8" translate="yes" xml:space="preserve">
          <source>This list highlights key changes by component between v3.x.x and v4.0.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caffe370a7afb9918af353dc3e1c96768b4ed29d" translate="yes" xml:space="preserve">
          <source>Throughout our v4 alpha and beta releases, we included incomplete and commented out code for opting into a media query shim that would disable hover styles in touch device browsers that emulate hovering. This work was never fully completed or enabled, but to avoid complete breakage, we&amp;rsquo;ve opted to deprecate &lt;a href=&quot;https://github.com/twbs/mq4-hover-shim&quot;&gt;this shim&lt;/a&gt; and keep the mixins as shortcuts for the pseudo-classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4d701e961a5bde8c963d13882804c80fcddb2a" translate="yes" xml:space="preserve">
          <source>Titles, text, and links</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93773e3dd20170f3c891dafdba6baeda66e7544" translate="yes" xml:space="preserve">
          <source>To add a new color to &lt;code&gt;$theme-colors&lt;/code&gt;, add the new key and value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267347668b7f13ca26a567c0f555c927237c8716" translate="yes" xml:space="preserve">
          <source>To add accordion-like group management to a collapsible area, add the data attribute &lt;code&gt;data-parent=&quot;#selector&quot;&lt;/code&gt;. Refer to the demo to see this in action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a1cb23e0ba8edfb803e12cc25c73ec0a8dc680" translate="yes" xml:space="preserve">
          <source>To align &lt;strong&gt;left&lt;/strong&gt; the dropdown menu with the given breakpoint or larger, add &lt;code&gt;.dropdown-menu-right&lt;/code&gt; and &lt;code&gt;.dropdown-menu{-sm|-md|-lg|-xl}-left&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac39ee541ef884eb8f4d0758ccfedaa1ca939b81" translate="yes" xml:space="preserve">
          <source>To align &lt;strong&gt;right&lt;/strong&gt; the dropdown menu with the given breakpoint or larger, add &lt;code&gt;.dropdown-menu{-sm|-md|-lg|-xl}-right&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0678b0e1954014c3f7781b0cf08d7aabdd0c49d" translate="yes" xml:space="preserve">
          <source>To allow keyboard users to activate your popovers, you should only add them to HTML elements that are traditionally keyboard-focusable and interactive (such as links or form controls). Although arbitrary HTML elements (such as &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;s) can be made focusable by adding the &lt;code&gt;tabindex=&quot;0&quot;&lt;/code&gt; attribute, this will add potentially annoying and confusing tab stops on non-interactive elements for keyboard users, and most assistive technologies currently do not announce the popover&amp;rsquo;s content in this situation. Additionally, do not rely solely on &lt;code&gt;hover&lt;/code&gt; as the trigger for your popovers, as this will make them impossible to trigger for keyboard users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae671211fb8e34c9bf3e32683c99d91efb217f2" translate="yes" xml:space="preserve">
          <source>To animate alerts when dismissing them, be sure to add the &lt;code&gt;.fade&lt;/code&gt; and &lt;code&gt;.show&lt;/code&gt; classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc9fc0eaa1b0f44761cf95c88b6a489baef1093" translate="yes" xml:space="preserve">
          <source>To change Bootstrap's default Popper.js config, see &lt;a href=&quot;https://popper.js.org/popper-documentation.html#Popper.Defaults&quot;&gt;Popper.js's configuration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36059ab1c09d7d5a0824ac4d073af836dfb85b8b" translate="yes" xml:space="preserve">
          <source>To easily add scrollspy behavior to your topbar navigation, add &lt;code&gt;data-spy=&quot;scroll&quot;&lt;/code&gt; to the element you want to spy on (most typically this would be the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;). Then add the &lt;code&gt;data-target&lt;/code&gt; attribute with the ID or class of the parent element of any Bootstrap &lt;code&gt;.nav&lt;/code&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e805010e47458dd60199d893804951f91f6d50a2" translate="yes" xml:space="preserve">
          <source>To encourage extensible and predictable toasts, we recommend a header and body. Toast headers use &lt;code&gt;display: flex&lt;/code&gt;, allowing easy alignment of content thanks to our margin and flexbox utilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b5fddad2b0b2d42e9d2d70bbe6aca15de37ccf" translate="yes" xml:space="preserve">
          <source>To enjoy the full potential of Bootstrap and customize it to your needs, use the source files as a part of your project&amp;rsquo;s bundling process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7fe43a6b7b1a7abbac93ef92d61dcbc8df761a8" translate="yes" xml:space="preserve">
          <source>To handle overlapping borders within components (e.g., buttons and inputs in input groups), we use low single digit &lt;code&gt;z-index&lt;/code&gt; values of &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, and &lt;code&gt;3&lt;/code&gt; for default, hover, and active states. On hover/focus/active, we bring a particular element to the forefront with a higher &lt;code&gt;z-index&lt;/code&gt; value to show their border over the sibling elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df38776b6eec3a4c5a571edb816322654cabd7e5" translate="yes" xml:space="preserve">
          <source>To help fit your needs, this works with &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;-based markup, as shown above, or with any arbitrary &amp;ldquo;roll your own&amp;rdquo; markup. Note that if you&amp;rsquo;re using &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;, you shouldn&amp;rsquo;t add &lt;code&gt;role=&quot;tablist&quot;&lt;/code&gt; directly to it, as this would override the element&amp;rsquo;s native role as a navigation landmark. Instead, switch to an alternative element (in the example below, a simple &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;) and wrap the &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; around it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="943d7fa3297f5fb1d8b5427ecc12b683daf891cd" translate="yes" xml:space="preserve">
          <source>To hide elements simply use the &lt;code&gt;.d-none&lt;/code&gt; class or one of the &lt;code&gt;.d-{sm,md,lg,xl}-none&lt;/code&gt; classes for any responsive screen variation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d006a55cc0b8359c60719c9d445b7b4e2b40bd" translate="yes" xml:space="preserve">
          <source>To make a custom check inline, add &lt;code&gt;.custom-control-inline&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83fd7c93cc932d13a698e94e6f3a2e32f0dd0069" translate="yes" xml:space="preserve">
          <source>To make tabs fade in, add &lt;code&gt;.fade&lt;/code&gt; to each &lt;code&gt;.tab-pane&lt;/code&gt;. The first tab pane must also have &lt;code&gt;.show&lt;/code&gt; to make the initial content visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77d87eb4fdf2fc686105caecd9d0616e33d6135" translate="yes" xml:space="preserve">
          <source>To make tabs panel fade in, add &lt;code&gt;.fade&lt;/code&gt; to each &lt;code&gt;.tab-pane&lt;/code&gt;. The first tab pane must also have &lt;code&gt;.show&lt;/code&gt; to make the initial content visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3d6d71a9540b8e8a6794396c5a10ff379f3543" translate="yes" xml:space="preserve">
          <source>To make the grid responsive, there are five grid breakpoints, one for each &lt;a href=&quot;../overview/index#responsive-breakpoints&quot;&gt;responsive breakpoint&lt;/a&gt;: all breakpoints (extra small), small, medium, large, and extra large.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0abb7c304b1c97ae0fa4e7002cc01f3f5ba98e2a" translate="yes" xml:space="preserve">
          <source>To make the jumbotron full width, and without rounded corners, add the &lt;code&gt;.jumbotron-fluid&lt;/code&gt; modifier class and add a &lt;code&gt;.container&lt;/code&gt; or &lt;code&gt;.container-fluid&lt;/code&gt; within.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e66c7a8004352550e94936eb369b957cd202a38" translate="yes" xml:space="preserve">
          <source>To merely toggle the visibility of an element, meaning its &lt;code&gt;display&lt;/code&gt; is not modified and the element can still affect the flow of the document, use &lt;a href=&quot;../../utilities/visibility/index&quot;&gt;the &lt;code&gt;.invisible&lt;/code&gt; class&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1821666c6fa4f39c785e87da7d30e8e19088a7" translate="yes" xml:space="preserve">
          <source>To modify an existing color in our &lt;code&gt;$theme-colors&lt;/code&gt; map, add the following to your custom Sass file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e024d0f82b7daf937b42486072e157c16c3facb6" translate="yes" xml:space="preserve">
          <source>To nest your content with the default grid, add a new &lt;code&gt;.row&lt;/code&gt; and set of &lt;code&gt;.col-sm-*&lt;/code&gt; columns within an existing &lt;code&gt;.col-sm-*&lt;/code&gt; column. Nested rows should include a set of columns that add up to 12 or fewer (it is not required that you use all 12 available columns).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fad8a624cac468f04c5fb56536a7d7276b459df" translate="yes" xml:space="preserve">
          <source>To remove colors from &lt;code&gt;$theme-colors&lt;/code&gt;, or any other map, use &lt;code&gt;map-remove&lt;/code&gt;. Be aware you must insert it between our requirements and options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9efdcc8cd49e101872b1658c060c29fdd018a39" translate="yes" xml:space="preserve">
          <source>To reset the appearance of the form (for instance, in the case of dynamic form submissions using AJAX), remove the &lt;code&gt;.was-validated&lt;/code&gt; class from the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; again after submission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76fafde178db8a94b1c3de21fb4833ac5774dae5" translate="yes" xml:space="preserve">
          <source>To show an element only on a given interval of screen sizes you can combine one &lt;code&gt;.d-*-none&lt;/code&gt; class with a &lt;code&gt;.d-*-*&lt;/code&gt; class, for example &lt;code&gt;.d-none .d-md-block .d-xl-none&lt;/code&gt; will hide the element for all screen sizes except on medium and large devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ab9efaac3f7a15bafc977a5dae2473a8be793a" translate="yes" xml:space="preserve">
          <source>To support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5afff1721b78134a22b0a39e2c1ff1a8663eae32" translate="yes" xml:space="preserve">
          <source>To use our build system and run our documentation locally, you&amp;rsquo;ll need a copy of Bootstrap&amp;rsquo;s source files and Node. Follow these steps and you should be ready to rock:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b021d5f7dac5820e7ee910c545826897f1d8708" translate="yes" xml:space="preserve">
          <source>Toasts</source>
          <target state="translated">Toasts</target>
        </trans-unit>
        <trans-unit id="8468678dd84899d3dcb9d43ca17b6a01cb415e7a" translate="yes" xml:space="preserve">
          <source>Toasts are as flexible as you need and have very little required markup. At a minimum, we require a single element to contain your &amp;ldquo;toasted&amp;rdquo; content and strongly encourage a dismiss button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b6edd648a3f9fc88f735ff10164444577c2493" translate="yes" xml:space="preserve">
          <source>Toasts are intended to be small interruptions to your visitors or users, so to help those with screen readers and similar assistive technologies, you should wrap your toasts in an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions&quot;&gt;&lt;code&gt;aria-live&lt;/code&gt; region&lt;/a&gt;. Changes to live regions (such as injecting/updating a toast component) are automatically announced by screen readers without needing to move the user&amp;rsquo;s focus or otherwise interrupt the user. Additionally, include &lt;code&gt;aria-atomic=&quot;true&quot;&lt;/code&gt; to ensure that the entire toast is always announced as a single (atomic) unit, rather than announcing what was changed (which could lead to problems if you only update part of the toast&amp;rsquo;s content, or if displaying the same toast content at a later point in time). If the information needed is important for the process, e.g. for a list of errors in a form, then use the &lt;a href=&quot;../alerts/index&quot;&gt;alert component&lt;/a&gt; instead of toast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517aaca6276b8ca88e6c15ff8cf98e80bcf9a23d" translate="yes" xml:space="preserve">
          <source>Toasts are lightweight notifications designed to mimic the push notifications that have been popularized by mobile and desktop operating systems. They&amp;rsquo;re built with flexbox, so they&amp;rsquo;re easy to align and position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda1640721f7bf735080dc020c4064397e4a41e8" translate="yes" xml:space="preserve">
          <source>Toasts are opt-in for performance reasons, so &lt;strong&gt;you must initialize them yourself&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246a73926d22a718c9ae003531709b0eab3f608a" translate="yes" xml:space="preserve">
          <source>Toasts are slightly translucent, too, so they blend over whatever they might appear over. For browsers that support the &lt;code&gt;backdrop-filter&lt;/code&gt; CSS property, we&amp;rsquo;ll also attempt to blur the elements under a toast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4c7e5e1eaa5c33c3c982fb69ebe7ffb09cc0e2" translate="yes" xml:space="preserve">
          <source>Toasts will automatically hide if you do not specify &lt;code&gt;autohide: false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c674aba7f8abaadee49f0e494143a8e324f0e01" translate="yes" xml:space="preserve">
          <source>Toasts: accessibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66bddeb88e2175a46d5e557add85ad378beec580" translate="yes" xml:space="preserve">
          <source>Toasts: animation (option)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d53125221eaaa53f1cb82214c75d250028b9550" translate="yes" xml:space="preserve">
          <source>Toasts: autohide (option)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355213dc4dda518f81477efc4093f08f254b69ce" translate="yes" xml:space="preserve">
          <source>Toasts: delay (option)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e572e6273938309139e4bdbb8596f523acc8ca" translate="yes" xml:space="preserve">
          <source>Toasts: dispose (method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2124f7f190472e5d5ded181bbeb3dabb1aeb032d" translate="yes" xml:space="preserve">
          <source>Toasts: events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21f57f08a998061ba155cc6ca6d0412313d21bf" translate="yes" xml:space="preserve">
          <source>Toasts: hidden.bs.toast (event)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fddf6de6eb23c39d4efcda7d9bc209e1766ebc02" translate="yes" xml:space="preserve">
          <source>Toasts: hide (method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603ee5684c7d7a7d03ba6223863c746652941634" translate="yes" xml:space="preserve">
          <source>Toasts: hide.bs.toast (event)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc324ba513720a1215959f5e7571b223ce42363" translate="yes" xml:space="preserve">
          <source>Toasts: methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed45e8aed9ac5843d4ea20d037cbeb2f6d9b051" translate="yes" xml:space="preserve">
          <source>Toasts: placement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4372cff260f890c6c90162f7dd6104346c9188f" translate="yes" xml:space="preserve">
          <source>Toasts: show (method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b0cfaa9ad0e8973f1d9d181fb14be2abd264e3" translate="yes" xml:space="preserve">
          <source>Toasts: show.bs.toast (event)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff1a91d7b75172f1f1b15cfa05abaa50176e7c9" translate="yes" xml:space="preserve">
          <source>Toasts: shown.bs.toast (event)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68ca732889cc34322dd803de34337191ae80320" translate="yes" xml:space="preserve">
          <source>Toggle &lt;code&gt;visibility&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105a4488d7261f3ff8ab123efc04e3402c4884d9" translate="yes" xml:space="preserve">
          <source>Toggle a float with a class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f701e499596287310a1718567e8d14ce1245f0fa" translate="yes" xml:space="preserve">
          <source>Toggle a working modal demo by clicking the button below. It will slide down and fade in from the top of the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576e20bc9058d1ea9ec853bbb0e790bdac1a0ec1" translate="yes" xml:space="preserve">
          <source>Toggle contextual overlays for displaying lists of links and more with the Bootstrap dropdown plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428670a9abdd30f7995f78868a255829fbefb146" translate="yes" xml:space="preserve">
          <source>Toggle floats on any element, across any breakpoint, using our responsive float utilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c10c734fa3c398aa05cf6dede2e12488da75704" translate="yes" xml:space="preserve">
          <source>Toggle states</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cfcafa6f8e09c7b5f887cdc2c6cee8ea56166d5" translate="yes" xml:space="preserve">
          <source>Toggle the visibility of content across your project with a few classes and our JavaScript plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283d0a98b38cdaa21b707773f67052e8ce3ed327" translate="yes" xml:space="preserve">
          <source>Toggler</source>
          <target state="translated">Toggler</target>
        </trans-unit>
        <trans-unit id="110cfc0c8b9f81b45bce615b546ac6c376cba114" translate="yes" xml:space="preserve">
          <source>Toggles a collapsible element to shown or hidden. &lt;strong&gt;Returns to the caller before the collapsible element has actually been shown or hidden&lt;/strong&gt; (i.e. before the &lt;code&gt;shown.bs.collapse&lt;/code&gt; or &lt;code&gt;hidden.bs.collapse&lt;/code&gt; event occurs).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="845ec56eafba8cfed9e128803a19b3ae371630d1" translate="yes" xml:space="preserve">
          <source>Toggles an element&amp;rsquo;s popover. &lt;strong&gt;Returns to the caller before the popover has actually been shown or hidden&lt;/strong&gt; (i.e. before the &lt;code&gt;shown.bs.popover&lt;/code&gt; or &lt;code&gt;hidden.bs.popover&lt;/code&gt; event occurs). This is considered a &amp;ldquo;manual&amp;rdquo; triggering of the popover.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6042856de5f537b104a90bff172818ab948fdf69" translate="yes" xml:space="preserve">
          <source>Toggles an element&amp;rsquo;s tooltip. &lt;strong&gt;Returns to the caller before the tooltip has actually been shown or hidden&lt;/strong&gt; (i.e. before the &lt;code&gt;shown.bs.tooltip&lt;/code&gt; or &lt;code&gt;hidden.bs.tooltip&lt;/code&gt; event occurs). This is considered a &amp;ldquo;manual&amp;rdquo; triggering of the tooltip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6bbb025b0e6aa784049eff4e86b49d135af6e59" translate="yes" xml:space="preserve">
          <source>Toggles push state. Gives the button the appearance that it has been activated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be52d13007eb0456e07a5dbf9c315d6b0d0e6dc5" translate="yes" xml:space="preserve">
          <source>Toggles the ability for an element&amp;rsquo;s popover to be shown or hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a123255f337b3be7e71f09ca8df69365c4924b" translate="yes" xml:space="preserve">
          <source>Toggles the ability for an element&amp;rsquo;s tooltip to be shown or hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca607747e0ad65c4fff34e4c442f7a06d54f87ab" translate="yes" xml:space="preserve">
          <source>Toggles the collapsible element on invocation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2373801a49e039a1a7094000dfa1a584ea05ded8" translate="yes" xml:space="preserve">
          <source>Toggles the dropdown menu of a given navbar or tabbed navigation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594654cdc580f0dbda054c560d2e405db07a1395" translate="yes" xml:space="preserve">
          <source>Tooling setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299e8596807396d47778dc4bab4b09c3eaba5b7f" translate="yes" xml:space="preserve">
          <source>Tooltip position attempts to automatically change when a parent container has &lt;code&gt;overflow: auto&lt;/code&gt; or &lt;code&gt;overflow: scroll&lt;/code&gt; like our &lt;code&gt;.table-responsive&lt;/code&gt;, but still keeps the original placement&amp;rsquo;s positioning. To resolve, set the &lt;code&gt;boundary&lt;/code&gt; option to anything other than default value, &lt;code&gt;'scrollParent'&lt;/code&gt;, such as &lt;code&gt;'window'&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a025dbf80367ecabf2143f1cd73cb481a93960" translate="yes" xml:space="preserve">
          <source>Tooltips</source>
          <target state="translated">Tooltips</target>
        </trans-unit>
        <trans-unit id="df6390fd662e0bf62225f29fac8464fdd6b15bb6" translate="yes" xml:space="preserve">
          <source>Tooltips and Popovers use our built-in sanitizer to sanitize options which accept HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0237a010ee422c35b3aa5de3464a96c58322599" translate="yes" xml:space="preserve">
          <source>Tooltips and popovers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1b4b45dc762c1136bdbf3e51c7108e20e1c915" translate="yes" xml:space="preserve">
          <source>Tooltips and popovers for displaying and positioning (also requires &lt;a href=&quot;https://popper.js.org/&quot;&gt;Popper.js&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e75e2ebd3ddaa7a226ef035c654d242b0b0312e" translate="yes" xml:space="preserve">
          <source>Tooltips are opt-in for performance reasons, so &lt;strong&gt;you must initialize them yourself&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d77a32ec59ab203968d2f001dbee57e7278c44" translate="yes" xml:space="preserve">
          <source>Tooltips can be triggered thanks to an element inside a shadow DOM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f65e2b4a29a671a5faca0b085593da5bbdcc115" translate="yes" xml:space="preserve">
          <source>Tooltips for &lt;code&gt;.disabled&lt;/code&gt; or &lt;code&gt;disabled&lt;/code&gt; elements must be triggered on a wrapper element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36853bd2bd49614b50867cce17dadee90ecb17da" translate="yes" xml:space="preserve">
          <source>Tooltips must be hidden before their corresponding elements have been removed from the DOM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7a80728e32137bc14c63536bd6a99098a5efa3" translate="yes" xml:space="preserve">
          <source>Tooltips rely on the 3rd party library &lt;a href=&quot;https://popper.js.org/&quot;&gt;Popper.js&lt;/a&gt; for positioning. You must include &lt;a href=&quot;https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js&quot;&gt;popper.min.js&lt;/a&gt; before bootstrap.js or use &lt;code&gt;bootstrap.bundle.min.js&lt;/code&gt; / &lt;code&gt;bootstrap.bundle.js&lt;/code&gt; which contains Popper.js in order for tooltips to work!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e642b74812583365b55a1fd6eb116487c8ca0c21" translate="yes" xml:space="preserve">
          <source>Tooltips with zero-length titles are never displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669cca52520d4a351173d6d0c1edc63c69277178" translate="yes" xml:space="preserve">
          <source>Tooltips: disable (method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc99629648c8f82e9633f1e542c6703b5604f93c" translate="yes" xml:space="preserve">
          <source>Tooltips: dispose (method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d15f93bd701614a06fd0d7c1403e75399cbd680" translate="yes" xml:space="preserve">
          <source>Tooltips: enable (method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0b1b28abb5ce2f61eb2906df84e6b4a9611d23" translate="yes" xml:space="preserve">
          <source>Tooltips: events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30accfa8b2650ae849c2b7ce3a53d38a75785fde" translate="yes" xml:space="preserve">
          <source>Tooltips: hidden.bs.tooltip (event)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a43c8d4c4848c8822bb3e3fc1b80d27a538e34d2" translate="yes" xml:space="preserve">
          <source>Tooltips: hide (method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3eeb4b3ffa951a2680530ead1346faeabc9a775" translate="yes" xml:space="preserve">
          <source>Tooltips: hide.bs.tooltip (event)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9f31017916743f015d60a151f691de7c48d665" translate="yes" xml:space="preserve">
          <source>Tooltips: inserted.bs.tooltip (event)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf53db7811a3312730ee760a6d282b77417791b" translate="yes" xml:space="preserve">
          <source>Tooltips: methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7f5f5e8cb0415d09f56a520d829c0530315f15" translate="yes" xml:space="preserve">
          <source>Tooltips: show (method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b4bced73b2e5ed830a7467d9fe6050fe716e92" translate="yes" xml:space="preserve">
          <source>Tooltips: show.bs.tooltip (event)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f304bcc536cfe11c914f3836efed3fe66fbfd25" translate="yes" xml:space="preserve">
          <source>Tooltips: shown.bs.tooltip (event)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c5700e27efd0dcec2c94e69e89676d64a6a5ec" translate="yes" xml:space="preserve">
          <source>Tooltips: toggle (method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999f072a5f7af73027b7a8c0e91c05276406c154" translate="yes" xml:space="preserve">
          <source>Tooltips: toggleEnabled (method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f9380093bd8224acc38a520ec48867c37dfd38" translate="yes" xml:space="preserve">
          <source>Tooltips: update (method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1690b91e23bf1ee30cbe04c98789fedbb4a0caf" translate="yes" xml:space="preserve">
          <source>Traditional heading elements are designed to work best in the meat of your page content. When you need a heading to stand out, consider using a &lt;strong&gt;display heading&lt;/strong&gt;&amp;mdash;a larger, slightly more opinionated heading style. Keep in mind these headings are not responsive by default, but it&amp;rsquo;s possible to enable &lt;a href=&quot;#responsive-font-sizes&quot;&gt;responsive font sizes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b292d06049dea81ec506d19232f23578a3ed3a5" translate="yes" xml:space="preserve">
          <source>Transform text in components with text capitalization classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e530a8a6b1c72d0aa7abc851f61f1bf1d268d586" translate="yes" xml:space="preserve">
          <source>Translating or customizing the strings with HTML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af45fd10e179f97938e5d37765585b9636dc6030" translate="yes" xml:space="preserve">
          <source>Translating or customizing the strings with SCSS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c60f9aa7df10ebdc639ea333e698e5b11adf31" translate="yes" xml:space="preserve">
          <source>Translucent</source>
          <target state="translated">Translucent</target>
        </trans-unit>
        <trans-unit id="afc10475cf69d0931a6df5a25cdfb6777cfb2efe" translate="yes" xml:space="preserve">
          <source>Trigger dropdown menus above elements by adding &lt;code&gt;.dropup&lt;/code&gt; to the parent element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e19b0f1cff75f786ae92b5e56104868e8038623" translate="yes" xml:space="preserve">
          <source>Trigger dropdown menus at the left of the elements by adding &lt;code&gt;.dropleft&lt;/code&gt; to the parent element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176d09d0b51a3f4e0b9d33a08c0ad13603777106" translate="yes" xml:space="preserve">
          <source>Trigger dropdown menus at the right of the elements by adding &lt;code&gt;.dropright&lt;/code&gt; to the parent element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fbbbb8c900477a9cf113d5c157da71eec394d63" translate="yes" xml:space="preserve">
          <source>Trigger the tooltip via JavaScript:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="849a261e60d252afaa9d7aa0db9bb6451147a505" translate="yes" xml:space="preserve">
          <source>Triggering popovers on hidden elements will not work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27e1e3cb5895ecda27d67c8635b1a4eb8b9e008" translate="yes" xml:space="preserve">
          <source>Triggering tooltips on hidden elements will not work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047708b21883d20fa96e13ada1ae6a3f040a4c1c" translate="yes" xml:space="preserve">
          <source>Triggers</source>
          <target state="translated">Triggers</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="5b3a18604d6f698043930ca24c89a324601af797" translate="yes" xml:space="preserve">
          <source>Turn an image into a card background and overlay your card&amp;rsquo;s text. Depending on the image, you may or may not need additional styles or utilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d00dbf97b947c6845c15bfa5b30892a0f1fb3f" translate="yes" xml:space="preserve">
          <source>Tweaked the Carousel example to include the new markup and styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="f4beb9af58f792082d8857ce30b4be1bdbe9b57a" translate="yes" xml:space="preserve">
          <source>Typography</source>
          <target state="translated">Typography</target>
        </trans-unit>
        <trans-unit id="d81fc9e54198214b7af44e7ed807a7f987d620cf" translate="yes" xml:space="preserve">
          <source>Typography: abbreviations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de5416edc5fce0b7eef9fa3237f20c8e85ab1d8" translate="yes" xml:space="preserve">
          <source>Typography: blockquotes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c354cb8d3c4db1fbd0f3924f71413576e49f4e" translate="yes" xml:space="preserve">
          <source>Typography: display headings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09eef6e280d022fe177f22c749b231bcec1ef5a" translate="yes" xml:space="preserve">
          <source>Typography: global settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfee35690d9883cc4763d1507b2584fdc8e3ef4" translate="yes" xml:space="preserve">
          <source>Typography: headings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="135b14aa68a6332ad3618d1ecbc9e20717a8f670" translate="yes" xml:space="preserve">
          <source>Typography: inline text elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1985b93f92e31454fbc346ad7d124032ef22e624" translate="yes" xml:space="preserve">
          <source>Typography: lead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300de8168d892d7377f689707c06b5a11141c227" translate="yes" xml:space="preserve">
          <source>Typography: lists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57b65c4f70688919fec82f4f466173312dc04ab" translate="yes" xml:space="preserve">
          <source>Typography: responsive font sizes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1610e0912d622f38803dd0c830a5781dbce663" translate="yes" xml:space="preserve">
          <source>Typography: text utilities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a7e0cb60138c28e4caf83e151cac4621dea6a4" translate="yes" xml:space="preserve">
          <source>Unless the context is clear (as with the &amp;ldquo;Notifications&amp;rdquo; example, where it is understood that the &amp;ldquo;4&amp;rdquo; is the number of notifications), consider including additional context with a visually hidden piece of additional text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa80dc2a6903236ea606e7f748aec387a204118" translate="yes" xml:space="preserve">
          <source>Unofficially, Bootstrap should look and behave well enough in Chromium and Chrome for Linux, Firefox for Linux, and Internet Explorer 9, though they are not officially supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99af82e09c866b31ce5b57c5e1a3ab45c4528f93" translate="yes" xml:space="preserve">
          <source>Unstyled</source>
          <target state="translated">Unstyled</target>
        </trans-unit>
        <trans-unit id="1f8c43fe4b5082fddc747219c36fbfc0d944da33" translate="yes" xml:space="preserve">
          <source>Update some browser default values to use &lt;code&gt;rem&lt;/code&gt;s instead of &lt;code&gt;em&lt;/code&gt;s for scalable component spacing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162eb6e8efa587589c2c624e9f1fba0910f4dddf" translate="yes" xml:space="preserve">
          <source>Updated grid mixins to utilize a &lt;code&gt;make-col-ready&lt;/code&gt; prep mixin and a &lt;code&gt;make-col&lt;/code&gt; to set the &lt;code&gt;flex&lt;/code&gt; and &lt;code&gt;max-width&lt;/code&gt; for individual column sizing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7894d124bd346057606b7d3edce839eb2ff32e8" translate="yes" xml:space="preserve">
          <source>Updated selector for input-based button groups. Instead of &lt;code&gt;[data-toggle=&quot;buttons&quot;] { }&lt;/code&gt; for style and behavior, we use the &lt;code&gt;data&lt;/code&gt; attribute just for JS behaviors and rely on a new &lt;code&gt;.btn-group-toggle&lt;/code&gt; class for styling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792f365a65213d828d3e1967e3c69351b485c214" translate="yes" xml:space="preserve">
          <source>Updates the position of an element&amp;rsquo;s dropdown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665aae6bba39f61647d807f38d3cfcd403eb4324" translate="yes" xml:space="preserve">
          <source>Updates the position of an element&amp;rsquo;s popover.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1354bed932af64ff0529fcda87cf7a6a396e0ea" translate="yes" xml:space="preserve">
          <source>Updates the position of an element&amp;rsquo;s tooltip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="367eeab340f801bc7d5e673db765d2f3cd1ef9ac" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../../utilities/borders/index&quot;&gt;border utilities&lt;/a&gt; to change just the &lt;code&gt;border-color&lt;/code&gt; of a card. Note that you can put &lt;code&gt;.text-{color}&lt;/code&gt; classes on the parent &lt;code&gt;.card&lt;/code&gt; or a subset of the card&amp;rsquo;s contents as shown below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf4bd4264166770e42d397db9d9fc2ad1f39a56" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../../utilities/colors/index&quot;&gt;text and background utilities&lt;/a&gt; to change the appearance of a card.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8383aa8c46c7c2ae4bbd1a7a9f830a3b2c8458" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../../utilities/flex/index&quot;&gt;flexbox utilities&lt;/a&gt;, &lt;a href=&quot;../../utilities/float/index&quot;&gt;float utilities&lt;/a&gt;, or &lt;a href=&quot;../../content/typography/index&quot;&gt;text alignment&lt;/a&gt; utilities to place spinners exactly where you need them in any situation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dcac740de4c077fe2193c3bbb69229780561cd8" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../../utilities/spacing/index&quot;&gt;margin utilities&lt;/a&gt; like &lt;code&gt;.m-5&lt;/code&gt; for easy spacing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cfc98f059381bc7764a034e1bfe09a4993c6447" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;$body-bg&lt;/code&gt; to set a &lt;code&gt;background-color&lt;/code&gt; on the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; (&lt;code&gt;#fff&lt;/code&gt; by default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82d24107e1f92452279d46373dd6542b3495938" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;s or &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;s to create &lt;em&gt;actionable&lt;/em&gt; list group items with hover, disabled, and active states by adding &lt;code&gt;.list-group-item-action&lt;/code&gt;. We separate these pseudo-classes to ensure list groups made of non-interactive elements (like &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;s or &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s) don&amp;rsquo;t provide a click or tap affordance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b2768161dcffdf67cc1794b328c81d74737172" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;s for multiple lines of code. Once again, be sure to escape any angle brackets in the code for proper rendering. You may optionally add the &lt;code&gt;.pre-scrollable&lt;/code&gt; class, which will set a max-height of 340px and provide a y-axis scrollbar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b980c1b7e422e9230b902cd487e4d2edb5189c0a" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;.container-fluid&lt;/code&gt; for a full width container, spanning the entire width of the viewport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b771ccd593601497bd828d173c8bcea2c58f6a08" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;.flex-column&lt;/code&gt; to set a vertical direction, or &lt;code&gt;.flex-column-reverse&lt;/code&gt; to start the vertical direction from the opposite side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6711f24024a05355c3f3da5ce4a6bcabf00265" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;.flex-grow-*&lt;/code&gt; utilities to toggle a flex item&amp;rsquo;s ability to grow to fill available space. In the example below, the &lt;code&gt;.flex-grow-1&lt;/code&gt; elements uses all available space it can, while allowing the remaining two flex items their necessary space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237042cd7707672839e6005ec3f5fec881eb07a6" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;.flex-row&lt;/code&gt; to set a horizontal direction (the browser default), or &lt;code&gt;.flex-row-reverse&lt;/code&gt; to start the horizontal direction from the opposite side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfab684e5ff812820763b2fb5f3690a328624369" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;.flex-shrink-*&lt;/code&gt; utilities to toggle a flex item&amp;rsquo;s ability to shrink if necessary. In the example below, the second flex item with &lt;code&gt;.flex-shrink-1&lt;/code&gt; is forced to wrap it&amp;rsquo;s contents to a new line, &amp;ldquo;shrinking&amp;rdquo; to allow more space for the previous flex item with &lt;code&gt;.w-100&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee349826fc4177ed3eaa04e7d7cdb3325b2b2ba" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;.order-&lt;/code&gt; classes for controlling the &lt;strong&gt;visual order&lt;/strong&gt; of your content. These classes are responsive, so you can set the &lt;code&gt;order&lt;/code&gt; by breakpoint (e.g., &lt;code&gt;.order-1.order-md-2&lt;/code&gt;). Includes support for &lt;code&gt;1&lt;/code&gt; through &lt;code&gt;12&lt;/code&gt; across all five grid tiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e23a84fdd7ef51b6dac397774d428e57438ab1" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;.rounded-lg&lt;/code&gt; or &lt;code&gt;.rounded-sm&lt;/code&gt; for larger or smaller border-radius.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d051e11fe19de2072f42cf8d2f4f56b7ec04a1" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;.table-responsive{-sm|-md|-lg|-xl}&lt;/code&gt; as needed to create responsive tables up to a particular breakpoint. From that breakpoint and up, the table will behave normally and not scroll horizontally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd74729bf2f6773c8241184cd7646cadedd2eb1" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;.table-striped&lt;/code&gt; to add zebra-striping to any table row within the &lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f040bdac25955ab9a769a8879ce12b7016713837" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;align-content&lt;/code&gt; utilities on flexbox containers to align flex items &lt;em&gt;together&lt;/em&gt; on the cross axis. Choose from &lt;code&gt;start&lt;/code&gt; (browser default), &lt;code&gt;end&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;between&lt;/code&gt;, &lt;code&gt;around&lt;/code&gt;, or &lt;code&gt;stretch&lt;/code&gt;. To demonstrate these utilities, we&amp;rsquo;ve enforced &lt;code&gt;flex-wrap: wrap&lt;/code&gt; and increased the number of flex items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab08165c72c9d16f6ec39ef9d7e6017d626e966" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;align-items&lt;/code&gt; utilities on flexbox containers to change the alignment of flex items on the cross axis (the y-axis to start, x-axis if &lt;code&gt;flex-direction: column&lt;/code&gt;). Choose from &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;baseline&lt;/code&gt;, or &lt;code&gt;stretch&lt;/code&gt; (browser default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0058f6528361a392ce02731b2327db9c7d8832" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;align-self&lt;/code&gt; utilities on flexbox items to individually change their alignment on the cross axis (the y-axis to start, x-axis if &lt;code&gt;flex-direction: column&lt;/code&gt;). Choose from the same options as &lt;code&gt;align-items&lt;/code&gt;: &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;baseline&lt;/code&gt;, or &lt;code&gt;stretch&lt;/code&gt; (browser default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff0d8121962bddc5e521a35e2345a297c3744cfc" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;col-{breakpoint}-auto&lt;/code&gt; classes to size columns based on the natural width of their content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7eaa5d506aa1b774b7bfaa29ba2053cea5db51" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;data-offset&lt;/code&gt; or &lt;code&gt;data-reference&lt;/code&gt; to change the location of the dropdown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b201309d05812ef107bcb91ac2f6f661037a87" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;justify-content&lt;/code&gt; utilities on flexbox containers to change the alignment of flex items on the main axis (the x-axis to start, y-axis if &lt;code&gt;flex-direction: column&lt;/code&gt;). Choose from &lt;code&gt;start&lt;/code&gt; (browser default), &lt;code&gt;end&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;between&lt;/code&gt;, or &lt;code&gt;around&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b220d91716443320461c22214501a3f89a9b5d7f" translate="yes" xml:space="preserve">
          <source>Use Bootstrap&amp;rsquo;s JavaScript modal plugin to add dialogs to your site for lightboxes, user notifications, or completely custom content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2dafeb4604e319590390877fd11a66c8fec18e7" translate="yes" xml:space="preserve">
          <source>Use Bootstrap&amp;rsquo;s custom button styles for actions in forms, dialogs, and more with support for multiple sizes, states, and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa26170b0d0a21bfdd62d9688aed0d916d217e0" translate="yes" xml:space="preserve">
          <source>Use a &lt;a href=&quot;../reboot/index#native-font-stack&quot;&gt;native font stack&lt;/a&gt; that selects the best &lt;code&gt;font-family&lt;/code&gt; for each OS and device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96cc78480b8f74c13791b7133f963cd9f46fcc0d" translate="yes" xml:space="preserve">
          <source>Use a generic close icon for dismissing content like modals and alerts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ea42a5587f434ba956eca095aa6a5d9debad2c" translate="yes" xml:space="preserve">
          <source>Use background utility classes to change the appearance of individual progress bars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b42be0fcbad447cfd7e3872853934a5e3697b6d" translate="yes" xml:space="preserve">
          <source>Use border utilities to add or remove an element&amp;rsquo;s borders. Choose from all borders or one at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839524944056022b07d070ad9684bc69cffbbc03" translate="yes" xml:space="preserve">
          <source>Use border utilities to quickly style the border and border-radius of an element. Great for images, buttons, or any other element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d95cecd87d390ad339e0e600f8f523a5f88e5e8" translate="yes" xml:space="preserve">
          <source>Use card groups to render cards as a single, attached element with equal width and height columns. Card groups use &lt;code&gt;display: flex;&lt;/code&gt; to achieve their uniform sizing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4336895a5d47a526c6ee204aa1f4032e1d4b57d3" translate="yes" xml:space="preserve">
          <source>Use contextual classes to color table rows or individual cells.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35c9cbcb84995e39ce8c72cc630b14557e8b23b" translate="yes" xml:space="preserve">
          <source>Use contextual classes to style list items with a stateful background and color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2495848c0e754525869e2d4528adb26c809c6df1" translate="yes" xml:space="preserve">
          <source>Use custom CSS in your stylesheets or as inline styles to set a width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbd21dfd2fbcf47ba373b28d772db513cfb3608" translate="yes" xml:space="preserve">
          <source>Use data attributes to easily control the position of the carousel. &lt;code&gt;data-slide&lt;/code&gt; accepts the keywords &lt;code&gt;prev&lt;/code&gt; or &lt;code&gt;next&lt;/code&gt;, which alters the slide position relative to its current position. Alternatively, use &lt;code&gt;data-slide-to&lt;/code&gt; to pass a raw slide index to the carousel &lt;code&gt;data-slide-to=&quot;2&quot;&lt;/code&gt;, which shifts the slide position to a particular index beginning with &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f17274bcd72b763eb3ec3a4a2160f2d12bcc652d" translate="yes" xml:space="preserve">
          <source>Use flexbox alignment utilities to vertically and horizontally align columns. &lt;strong&gt;Internet Explorer 10-11 do not support vertical alignment of flex items when the flex container has a &lt;code&gt;min-height&lt;/code&gt; as shown below.&lt;/strong&gt;&lt;a href=&quot;https://github.com/philipwalton/flexbugs#flexbug-3&quot;&gt;See Flexbugs #3 for more details.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648af0921c9531bc9f94879d75faed8328b3e3a8" translate="yes" xml:space="preserve">
          <source>Use our &lt;a href=&quot;../../utilities/display/index&quot;&gt;display utilities&lt;/a&gt; for responsively toggling common values of the &lt;code&gt;display&lt;/code&gt; property. Mix it with our grid system, content, or components to show or hide them across specific viewports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914116f98eeb4f540b5ca60b994ee580c487b8bc" translate="yes" xml:space="preserve">
          <source>Use our &lt;a href=&quot;../../utilities/position/index&quot;&gt;position utilities&lt;/a&gt; to place navbars in non-static positions. Choose from fixed to the top, fixed to the bottom, or stickied to the top (scrolls with the page until it reaches the top, then stays there). Fixed navbars use &lt;code&gt;position: fixed&lt;/code&gt;, meaning they&amp;rsquo;re pulled from the normal flow of the DOM and may require custom CSS (e.g., &lt;code&gt;padding-top&lt;/code&gt; on the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;) to prevent overlap with other elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438c48ed7b530bb3084ebdcefb426258c44fe51a" translate="yes" xml:space="preserve">
          <source>Use our &lt;a href=&quot;../../utilities/spacing/index&quot;&gt;spacing&lt;/a&gt; and &lt;a href=&quot;../../utilities/flex/index&quot;&gt;flex&lt;/a&gt; utility classes for controlling spacing and alignment within navbars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3dc6b236b82e1a26fcc87621a60a31de02aec6" translate="yes" xml:space="preserve">
          <source>Use our handful of &lt;a href=&quot;../../utilities/sizing/index&quot;&gt;available sizing utilities&lt;/a&gt; to quickly set a card&amp;rsquo;s width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ecb8a416e46b76e2e057193e7feae4927b1ea65" translate="yes" xml:space="preserve">
          <source>Use our powerful mobile-first flexbox grid to build layouts of all shapes and sizes thanks to a twelve column system, five default responsive tiers, Sass variables and mixins, and dozens of predefined classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f599fdd056bde99b275036126794676a06ae189" translate="yes" xml:space="preserve">
          <source>Use screen reader utilities to hide elements on all devices except screen readers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c27258242edeb049963924d73e6bf509bc43e0" translate="yes" xml:space="preserve">
          <source>Use spinners within buttons to indicate an action is currently processing or taking place. You may also swap the text out of the spinner element and utilize button text as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256f69a13f9d358d8756c7fd387fa9060b69859c" translate="yes" xml:space="preserve">
          <source>Use text if you're worried about XSS attacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400eef6b14d1ca9aa01f5b3f20dc032448c3324e" translate="yes" xml:space="preserve">
          <source>Use text utilities as needed to change the alignment of your blockquote.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ad6a5676d4d4aa38ead744cdf006c8d8464eb1" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;$font-family-base&lt;/code&gt;, &lt;code&gt;$font-size-base&lt;/code&gt;, and &lt;code&gt;$line-height-base&lt;/code&gt; attributes as our typographic base applied to the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab8190e55167f31be8f89bc621fdd8c129ee6a0" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&amp;lt;kbd&amp;gt;&lt;/code&gt; to indicate input that is typically entered via keyboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71eca985b3f7eaa318ca8ad97d738257db34f319" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;.alert-link&lt;/code&gt; utility class to quickly provide matching colored links within any alert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4856066c6541d186921c8d16fb3f930ead43899a" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;.badge-pill&lt;/code&gt; modifier class to make badges more rounded (with a larger &lt;code&gt;border-radius&lt;/code&gt; and additional horizontal &lt;code&gt;padding&lt;/code&gt;). Useful if you miss the badges from v3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e99c74df75f81ef0285cee64355ac9a5025346e" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;.flex-fill&lt;/code&gt; class on a series of sibling elements to force them into widths equal to their content (or equal widths if their content does not surpass their border-boxes) while taking up all available horizontal space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b353a4ac36bdc7c1d671d822dc88f3d0a31a391f" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;.form-inline&lt;/code&gt; class to display a series of labels, form controls, and buttons on a single horizontal row. Form controls within inline forms vary slightly from their default states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fffcc9786be7e501236af810779f5103785c46d" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;.text-hide&lt;/code&gt; class to maintain the accessibility and SEO benefits of heading tags, but want to utilize a &lt;code&gt;background-image&lt;/code&gt; instead of text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25eebad8802d32c687cbde8e5937b60941e9c819" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;focus&lt;/code&gt; trigger to dismiss popovers on the user&amp;rsquo;s next click of a different element than the toggle element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe2ffe653475cac72e0b1013cecaaec211a34eb" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;margin&lt;/code&gt; and &lt;code&gt;padding&lt;/code&gt;&lt;a href=&quot;../../utilities/spacing/index&quot;&gt;spacing utilities&lt;/a&gt; to control how elements and components are spaced and sized. Bootstrap 4 includes a five-level scale for spacing utilities, based on a &lt;code&gt;1rem&lt;/code&gt; value default &lt;code&gt;$spacer&lt;/code&gt; variable. Choose values for all viewports (e.g., &lt;code&gt;.mr-3&lt;/code&gt; for &lt;code&gt;margin-right: 1rem&lt;/code&gt;), or pick responsive variants to target specific viewports (e.g., &lt;code&gt;.mr-md-3&lt;/code&gt; for &lt;code&gt;margin-right: 1rem&lt;/code&gt; starting at the &lt;code&gt;md&lt;/code&gt; breakpoint).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852aace4243fddcf79360c1b3dc8da0b80ba4e22" translate="yes" xml:space="preserve">
          <source>Use the Bootstrap grid system and its &lt;a href=&quot;../../layout/grid/index#row-columns&quot;&gt;&lt;code&gt;.row-cols&lt;/code&gt; classes&lt;/a&gt; to control how many grid columns (wrapped around your cards) you show per row. For example, here&amp;rsquo;s &lt;code&gt;.row-cols-1&lt;/code&gt; laying out the cards on one column, and &lt;code&gt;.row-cols-md-2&lt;/code&gt; splitting four cards to equal width across multiple rows, from the medium breakpoint up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba6dd1cb7334414f081a9e425e1c70924829e2c" translate="yes" xml:space="preserve">
          <source>Use the border spinners for a lightweight loading indicator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="287ffe4597e5ace684b996b4b601d7da04707dd3" translate="yes" xml:space="preserve">
          <source>Use the included &lt;code&gt;.figure&lt;/code&gt; , &lt;code&gt;.figure-img&lt;/code&gt; and &lt;code&gt;.figure-caption&lt;/code&gt; classes to provide some baseline styles for the HTML5 &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt; elements. Images in figures have no explicit size, so be sure to add the &lt;code&gt;.img-fluid&lt;/code&gt; class to your &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; to make it responsive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc32d5a0bbaa3677a64cd0fd0d00d6c98bf7399" translate="yes" xml:space="preserve">
          <source>Use the included utility classes to recreate the small secondary heading text from Bootstrap 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ff29b74253fb90971b2196734c4cc523468650" translate="yes" xml:space="preserve">
          <source>Use the responsive &lt;code&gt;.row-cols-*&lt;/code&gt; classes to quickly set the number of columns that best render your content and layout. Whereas normal &lt;code&gt;.col-*&lt;/code&gt; classes apply to the individual columns (e.g., &lt;code&gt;.col-md-4&lt;/code&gt;), the row columns classes are set on the parent &lt;code&gt;.row&lt;/code&gt; as a shortcut.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968cbf81dd2a115f0f3811d1c9e4fac8d3b7c9b8" translate="yes" xml:space="preserve">
          <source>Use the tab JavaScript plugin&amp;mdash;include it individually or through the compiled &lt;code&gt;bootstrap.js&lt;/code&gt; file&amp;mdash;to extend our list group to create tabbable panes of local content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988074125bc997fa1f3e3ed53d9028b7bb381e13" translate="yes" xml:space="preserve">
          <source>Use the tab JavaScript plugin&amp;mdash;include it individually or through the compiled &lt;code&gt;bootstrap.js&lt;/code&gt; file&amp;mdash;to extend our navigational tabs and pills to create tabbable panes of local content, even via dropdown menus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27d69caa94ee3522436912cbe5435484d78a62b" translate="yes" xml:space="preserve">
          <source>Use these row columns classes to quickly create basic grid layouts or to control your card layouts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c48c0c0d13fb92e0855d346219c4085a7bb318" translate="yes" xml:space="preserve">
          <source>Use these shorthand utilities for quickly configuring how content overflows an element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69069ca7b1b6e2d86c14d877a2f2f24c7d44d4d" translate="yes" xml:space="preserve">
          <source>Use these shorthand utilities for quickly configuring the position of an element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09099af5b046928eebce82ffe20cae42387454fa" translate="yes" xml:space="preserve">
          <source>User input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46346e4e155be37ed4288fac4de482c2e4ebc31" translate="yes" xml:space="preserve">
          <source>Using Sass variables, you may customize the overflow utilities by changing the &lt;code&gt;$overflows&lt;/code&gt; variable in &lt;code&gt;_variables.scss&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7fcbeb296f4f5bff7d6ccf8f42c99985cd0d16" translate="yes" xml:space="preserve">
          <source>Using a combination of grid and utility classes, cards can be made horizontal in a mobile-friendly and responsive way. In the example below, we remove the grid gutters with &lt;code&gt;.no-gutters&lt;/code&gt; and use &lt;code&gt;.col-md-*&lt;/code&gt; classes to make the card horizontal at the &lt;code&gt;md&lt;/code&gt; breakpoint. Further adjustments may be needed depending on your card content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8b3028d11aaa5d41bf77ae5cb3c7cf27b733714" translate="yes" xml:space="preserve">
          <source>Using a single set of &lt;code&gt;.col-sm-*&lt;/code&gt; classes, you can create a basic grid system that starts out stacked and becomes horizontal at the small breakpoint (&lt;code&gt;sm&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4f86142bc9fa3fd4683adef3a6cde6f319dd43" translate="yes" xml:space="preserve">
          <source>Using color to add meaning only provides a visual indication, which will not be conveyed to users of assistive technologies &amp;ndash; such as screen readers. Ensure that information denoted by the color is either obvious from the content itself (e.g. the visible text), or is included through alternative means, such as additional text hidden with the &lt;code&gt;.sr-only&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d76a63efe2c422b7488c831d892aa909ff770327" translate="yes" xml:space="preserve">
          <source>Using custom CSS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aee0a990d340259174656749df36c5ddbcda4dc" translate="yes" xml:space="preserve">
          <source>Using data attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ab60d18b288cbac12f544f85724ba66c74f725" translate="yes" xml:space="preserve">
          <source>Using dropdowns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f11451593ff1d7247c96f389b2fafb3bd33a08" translate="yes" xml:space="preserve">
          <source>Using grid markup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983d22575ac37bd3281c3b53a75fa9c4a96d3fbc" translate="yes" xml:space="preserve">
          <source>Using npm scripts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517fce8df1c2688d824dd0e2d30c3fdbe2b2c16b" translate="yes" xml:space="preserve">
          <source>Using our built-in grid Sass variables and maps, it&amp;rsquo;s possible to completely customize the predefined grid classes. Change the number of tiers, the media query dimensions, and the container widths&amp;mdash;then recompile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea790b83ae4710023c881238695e498a78f91e5b" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;../card/index&quot;&gt;card&lt;/a&gt; component, you can extend the default collapse behavior to create an accordion. To properly achieve the accordion style, be sure to use &lt;code&gt;.accordion&lt;/code&gt; as a wrapper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e77d4a3cbf230c04b5ed166ea1205ec04f076c" translate="yes" xml:space="preserve">
          <source>Using the alert JavaScript plugin, it&amp;rsquo;s possible to dismiss any alert inline. Here&amp;rsquo;s how:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0279c6b3461d207e6c8378ada572375061e1a74f" translate="yes" xml:space="preserve">
          <source>Using the contextual &lt;code&gt;.badge-*&lt;/code&gt; classes on an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element quickly provide &lt;em&gt;actionable&lt;/em&gt; badges with hover and focus states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a42f409f92d087f42d202b9c1c8f0cdf8a806346" translate="yes" xml:space="preserve">
          <source>Using the grid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3fdd19e095fae6f1550d879b9bc038e1269ff57" translate="yes" xml:space="preserve">
          <source>Using the grid, wrap cards in columns and rows as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb0697f81b8dd88d9a1ae09347f0e6a7ef17eb1" translate="yes" xml:space="preserve">
          <source>Using the most basic table markup, here&amp;rsquo;s how &lt;code&gt;.table&lt;/code&gt;-based tables look in Bootstrap. &lt;strong&gt;All table styles are inherited in Bootstrap 4&lt;/strong&gt;, meaning any nested tables will be styled in the same manner as the parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15350fcc9713a941c538a574b8d685b382ac616a" translate="yes" xml:space="preserve">
          <source>Using utilities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c31156efed35ee7814650f8971c3698059440e3" translate="yes" xml:space="preserve">
          <source>Util</source>
          <target state="translated">Util</target>
        </trans-unit>
        <trans-unit id="18fdc5ee8b1f8fba8dabaa933373c0483ab7fad7" translate="yes" xml:space="preserve">
          <source>Utilities</source>
          <target state="translated">Utilities</target>
        </trans-unit>
        <trans-unit id="af6cd958d3f629ceed197209a8dfa2951bbb9161" translate="yes" xml:space="preserve">
          <source>Utilities for layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0b48fc03df2b79c0dbc07fa03e22c240dbfb1d" translate="yes" xml:space="preserve">
          <source>Utilities for layout: changing display</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1862d24cc7bda83f71f3a1053b078f67699fc1da" translate="yes" xml:space="preserve">
          <source>Utilities for layout: flexbox options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033db4502a19ca41f1cb5f7f93a6c0352f52290a" translate="yes" xml:space="preserve">
          <source>Utilities for layout: margin and padding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b88ed9acc70a4451c1c0e79f9f73e122693ec6" translate="yes" xml:space="preserve">
          <source>Utilities for layout: toggle visibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca83a39148d3c3208659c8275f609014a077a8a3" translate="yes" xml:space="preserve">
          <source>Utilize breakpoint-specific column classes for easy column sizing without an explicit numbered class like &lt;code&gt;.col-sm-6&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0fd5996aeb3bd964d7543896dabfbb52b58e1d" translate="yes" xml:space="preserve">
          <source>Utilize our source Sass files to take advantage of variables, maps, mixins, and more. In our build we&amp;rsquo;ve increased the Sass rounding precision to 6 (by default it&amp;rsquo;s 5) to prevent issues with browser rounding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168518f100d69d125c242ac555289e05554a0bd4" translate="yes" xml:space="preserve">
          <source>Utilize the &lt;code&gt;.text-hide&lt;/code&gt; class or mixin to help replace an element&amp;rsquo;s text content with a background image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a083f90d76fb9039d4648121ee11a42d9efa71d" translate="yes" xml:space="preserve">
          <source>Utilize the Bootstrap grid system within a modal by nesting &lt;code&gt;.container-fluid&lt;/code&gt; within the &lt;code&gt;.modal-body&lt;/code&gt;. Then, use the normal grid system classes as you would anywhere else.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd74d182c641e4c78502d863b44d0aeff1575e54" translate="yes" xml:space="preserve">
          <source>Validation</source>
          <target state="translated">Validation</target>
        </trans-unit>
        <trans-unit id="333b14c336c271a05458391d242a91586c0cce5a" translate="yes" xml:space="preserve">
          <source>Validation states can be customized via Sass with the &lt;code&gt;$form-validation-states&lt;/code&gt; map. Located in our &lt;code&gt;_variables.scss&lt;/code&gt; file, this Sass map is looped over to generate the default &lt;code&gt;valid&lt;/code&gt;/&lt;code&gt;invalid&lt;/code&gt; validation states. Included is a nested map for customizing each state&amp;rsquo;s color and icon. While no other states are supported by browsers, those using custom styles can easily add more complex form feedback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee9b876a74ada431a38a46bf6e1eae3434a51e6" translate="yes" xml:space="preserve">
          <source>Validation styles are available for the following form controls and components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792ded471601ed20cd226e41e03d9b5e030c73ef" translate="yes" xml:space="preserve">
          <source>Validation styles are now supported, as are multiple inputs (though you can only validate one input per group).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762f13c2259b5fbab6d8f1bdbab081fc48bc558f" translate="yes" xml:space="preserve">
          <source>Validators</source>
          <target state="translated">Validators</target>
        </trans-unit>
        <trans-unit id="b1564f6b1512cbfa3cfcebc9a5badb6b239954f1" translate="yes" xml:space="preserve">
          <source>Values</source>
          <target state="translated">Values</target>
        </trans-unit>
        <trans-unit id="19de69cb601f53a4ea7af22a65c71ae63251365c" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">Variable</target>
        </trans-unit>
        <trans-unit id="7f6588e6083a3a86c03989388fe829dd89b7c48d" translate="yes" xml:space="preserve">
          <source>Variable defaults</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c959da821222c6898603548fa5879d34851b8846" translate="yes" xml:space="preserve">
          <source>Variable overrides within the same Sass file can come before or after the default variables. However, when overriding across Sass files, your overrides must come before you import Bootstrap&amp;rsquo;s Sass files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa2d7cf07c63c365256fd10eed2692332873efc" translate="yes" xml:space="preserve">
          <source>Variable width content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="e1a20299ec24839409256a44bfa315d7e28e2b2f" translate="yes" xml:space="preserve">
          <source>Variables and maps determine the number of columns, the gutter width, and the media query point at which to begin floating columns. We use these to generate the predefined grid classes documented above, as well as for the custom mixins listed below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3b6204a1ccbb06f173c10b58a927eb9913c35d" translate="yes" xml:space="preserve">
          <source>Various buttons are supported as part of these navbar forms, too. This is also a great reminder that vertical alignment utilities can be used to align different sized elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946499492a1ec7b04b25e5158313d6477239d5d3" translate="yes" xml:space="preserve">
          <source>Various form elements have been rebooted for simpler base styles. Here are some of the most notable changes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db2189ed50d606b8d22558db3763057f6a33ed3" translate="yes" xml:space="preserve">
          <source>Varying modal content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d7b71aa32ec867d2c6aba73fcd64a6b49c1fce" translate="yes" xml:space="preserve">
          <source>Vendor prefix mixins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77beec37551695ed13cfaf90f074478c80e025da" translate="yes" xml:space="preserve">
          <source>Version numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b937cc841d82f8936cef1efb88708ab5b0f1ee5" translate="yes" xml:space="preserve">
          <source>Vertical</source>
          <target state="translated">Vertical</target>
        </trans-unit>
        <trans-unit id="eadf99ecb822466c31cdf097b1ceb1150025754a" translate="yes" xml:space="preserve">
          <source>Vertical alignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b9eaa7560ba0cc4e04267fdf92ed8ad8c35830" translate="yes" xml:space="preserve">
          <source>Vertical clipping/truncation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da3935ab3bccbd95a66bb359d6140211d8cd3fc" translate="yes" xml:space="preserve">
          <source>Vertical variation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa70b21a9f3f44f5e9b5c03500a1ce1a67f13b8" translate="yes" xml:space="preserve">
          <source>Vertically centered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7938d6c2108b8caa1eeef3acfaeb418e28773a5" translate="yes" xml:space="preserve">
          <source>Vertically move one flex item to the top or bottom of a container by mixing &lt;code&gt;align-items&lt;/code&gt;, &lt;code&gt;flex-direction: column&lt;/code&gt;, and &lt;code&gt;margin-top: auto&lt;/code&gt; or &lt;code&gt;margin-bottom: auto&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2fc4ff8f1dcbb3b02f0040aedd8f4c6cb555c74" translate="yes" xml:space="preserve">
          <source>Via JavaScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272645acffb462f409131166fec10bb9f828ad98" translate="yes" xml:space="preserve">
          <source>Via data attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c9ffbbbb68d41cb69b2fd0d36de2ed25141b8c" translate="yes" xml:space="preserve">
          <source>Via data attributes or JavaScript, the dropdown plugin toggles hidden content (dropdown menus) by toggling the &lt;code&gt;.show&lt;/code&gt; class on the parent list item. The &lt;code&gt;data-toggle=&quot;dropdown&quot;&lt;/code&gt; attribute is relied on for closing dropdown menus at an application level, so it&amp;rsquo;s a good idea to always use it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9ff4f0de398581c4640bcbb6e536c355a391be" translate="yes" xml:space="preserve">
          <source>Visibility</source>
          <target state="translated">Visibility</target>
        </trans-unit>
        <trans-unit id="cb9fb05c9d278936b3ff3665c324f0385d9c07b8" translate="yes" xml:space="preserve">
          <source>Visible on all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3180bab2c735bb962bb7bfd37e2c59aba0b5d924" translate="yes" xml:space="preserve">
          <source>Visible only on lg</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39d7af838a8f55b8bb061e568196f30cb40d569" translate="yes" xml:space="preserve">
          <source>Visible only on md</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d51b78c2f704cd59ac755f6538df14872da5a43" translate="yes" xml:space="preserve">
          <source>Visible only on sm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbfb4bcddfe851bf0d19e5eaba1e4263ab44ea62" translate="yes" xml:space="preserve">
          <source>Visible only on xl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0339cabf95021357e7724f2ca63d0b3305db2c3" translate="yes" xml:space="preserve">
          <source>Visible only on xs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a766d74ae07cef59585d9f835a019b6c4ba71990" translate="yes" xml:space="preserve">
          <source>Visually hidden content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236ab6e6e5bb619583b35918f060d7b90ff4a1a0" translate="yes" xml:space="preserve">
          <source>Want to see an example? &lt;a href=&quot;http://jsbin.com/OyaqoDO/2&quot;&gt;Check out this JS Bin demo&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="713d5935b9a8535a9c7efb11d3bccfce72f4b744" translate="yes" xml:space="preserve">
          <source>We also believe you should be able to use all Bootstrap plugins purely through the JavaScript API. All public APIs are single, chainable methods, and return the collection acted upon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcfddd9c2a91f424bdf287c645344a8b3f4c2c53" translate="yes" xml:space="preserve">
          <source>We also have another function for getting a particular &lt;em&gt;level&lt;/em&gt; of color from the &lt;code&gt;$theme-colors&lt;/code&gt; map. Negative level values will lighten the color, while higher levels will darken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d9487b50b4c03dfd379d0796dbf613c9fb669b" translate="yes" xml:space="preserve">
          <source>We currently recommend using custom validation styles, as native browser default validation messages are not consistently exposed to assistive technologies in all browsers (most notably, Chrome on desktop and mobile).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45937954d2d2580276f671b34197cdbafa280795" translate="yes" xml:space="preserve">
          <source>We don&amp;rsquo;t encourage customization of these individual values; should you change one, you likely need to change them all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd0e5fc3a5cec0a4d947e75e751e8491a79b2f2" translate="yes" xml:space="preserve">
          <source>We hide the default &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; with &lt;code&gt;opacity&lt;/code&gt; and use the &lt;code&gt;.custom-control-label&lt;/code&gt; to build a new custom form indicator in its place with &lt;code&gt;::before&lt;/code&gt; and &lt;code&gt;::after&lt;/code&gt;. Unfortunately we can&amp;rsquo;t build a custom one from just the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; because CSS&amp;rsquo;s &lt;code&gt;content&lt;/code&gt; doesn&amp;rsquo;t work on that element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8937286b8dfb9797ed4090463636114d8a8feca" translate="yes" xml:space="preserve">
          <source>We hide the default file &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; via &lt;code&gt;opacity&lt;/code&gt; and instead style the &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;. The button is generated and positioned with &lt;code&gt;::after&lt;/code&gt;. Lastly, we declare a &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; on the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; for proper spacing for surrounding content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37753f8e9d56490b1590bf634d1c9662d6384fcd" translate="yes" xml:space="preserve">
          <source>We maintain the list of browsers supported through Autoprefixer in a separate file within our GitHub repository. See &lt;a href=&quot;https://github.com/twbs/bootstrap/blob/v4.4.1/.browserslistrc&quot;&gt;.browserslistrc&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4634747e2eec9452d7c3a0896494b57405c43f6" translate="yes" xml:space="preserve">
          <source>We moved from regular CSS to SCSS to take full advantage of Bootstrap&amp;rsquo;s variables, mixins, and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e1a79a8b863f1d10ead4276051241c71985675" translate="yes" xml:space="preserve">
          <source>We occasionally use media queries that go in the other direction (the given screen size &lt;em&gt;or smaller&lt;/em&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b199bec4b96990b41b55225e135fa5b6ef6b2cf" translate="yes" xml:space="preserve">
          <source>We only set a &lt;code&gt;height&lt;/code&gt; value on the &lt;code&gt;.progress&lt;/code&gt;, so if you change that value the inner &lt;code&gt;.progress-bar&lt;/code&gt; will automatically resize accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968efecf9aa640b4152d5e3bd19a67491e5d6c19" translate="yes" xml:space="preserve">
          <source>We recommend using &lt;code&gt;position: sticky&lt;/code&gt; instead. &lt;a href=&quot;https://html5please.com/#sticky&quot;&gt;See the HTML5 Please entry&lt;/a&gt; for details and specific polyfill recommendations. One suggestion is to use an &lt;code&gt;@supports&lt;/code&gt; rule for implementing it (e.g., &lt;code&gt;@supports (position: sticky) { ... }&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3ec1659d3930d0e44348e89e0ff906dde14503" translate="yes" xml:space="preserve">
          <source>We recommend using client-side validation, but in case you require server-side validation, you can indicate invalid and valid form fields with &lt;code&gt;.is-invalid&lt;/code&gt; and &lt;code&gt;.is-valid&lt;/code&gt;. Note that &lt;code&gt;.invalid-feedback&lt;/code&gt; is also supported with these classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7d33ba98566131043774a9e937f437e7c06625" translate="yes" xml:space="preserve">
          <source>We use &lt;a href=&quot;https://blog.jquery.com/2016/06/09/jquery-3-0-final-released/&quot;&gt;jQuery&amp;rsquo;s slim build&lt;/a&gt;, but the full version is also supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b51861fb8c3c499f2fbb06e30a3cd16a6d218db" translate="yes" xml:space="preserve">
          <source>We use &lt;a href=&quot;https://github.com/postcss/autoprefixer&quot;&gt;Autoprefixer&lt;/a&gt; to handle intended browser support via CSS prefixes, which uses &lt;a href=&quot;https://github.com/browserslist/browserslist&quot;&gt;Browserslist&lt;/a&gt; to manage these browser versions. Consult their documentation for how to integrate these tools into your projects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d0eec279c1a1733ec47b4c8826218f8be338c2" translate="yes" xml:space="preserve">
          <source>We use a large block of connected links for our pagination, making links hard to miss and easily scalable&amp;mdash;all while providing large hit areas. Pagination is built with list HTML elements so screen readers can announce the number of available links. Use a wrapping &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; element to identify it as a navigation section to screen readers and other assistive technologies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2123e0e288acb9378db164fede902ee5315737" translate="yes" xml:space="preserve">
          <source>We use a subset of all colors to create a smaller color palette for generating color schemes, also available as Sass variables and a Sass map in Bootstrap&amp;rsquo;s &lt;code&gt;scss/_variables.scss&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32908e9ce79ad29884cc7f74ed7053cd3b07e01" translate="yes" xml:space="preserve">
          <source>We use the &lt;code&gt;.progress&lt;/code&gt; as a wrapper to indicate the max value of the progress bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c94183ae2f898133a520aa785004172ba6d0c5" translate="yes" xml:space="preserve">
          <source>We use the &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;subtract&lt;/code&gt; functions to wrap the CSS &lt;code&gt;calc&lt;/code&gt; function. The primary purpose of these functions is to avoid errors when a &amp;ldquo;unitless&amp;rdquo; &lt;code&gt;0&lt;/code&gt; value is passed into a &lt;code&gt;calc&lt;/code&gt; expression. Expressions like &lt;code&gt;calc(10px - 0)&lt;/code&gt; will return an error in all browsers, despite being mathematically correct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2278aa99acaed3788c6f9bdf2850468c80c49155" translate="yes" xml:space="preserve">
          <source>We use the &lt;code&gt;escape-svg&lt;/code&gt; function to escape the &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;#&lt;/code&gt; characters for SVG background images. These characters need to be escaped to properly render the background images in IE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf360f6d62545bd7a3a9847d039798bbda98c0b" translate="yes" xml:space="preserve">
          <source>We use the inner &lt;code&gt;.progress-bar&lt;/code&gt; to indicate the progress so far.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0733c650b3ba5edf96aa609fbb94cecbac4424" translate="yes" xml:space="preserve">
          <source>We use the sibling selector (&lt;code&gt;~&lt;/code&gt;) for all our &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; states&amp;mdash;like &lt;code&gt;:checked&lt;/code&gt;&amp;mdash;to properly style our custom form indicator. When combined with the &lt;code&gt;.custom-control-label&lt;/code&gt; class, we can also style the text for each item based on the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&amp;rsquo;s state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290380a9942b608c4ae55ed032835ef2be6b98ba" translate="yes" xml:space="preserve">
          <source>We use this extra class to reduce the horizontal &lt;code&gt;padding&lt;/code&gt; on either side of the caret by 25% and remove the &lt;code&gt;margin-left&lt;/code&gt; that&amp;rsquo;s added for regular button dropdowns. Those extra changes keep the caret centered in the split button and provide a more appropriately sized hit area next to the main button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8c33961e907acfb9f731802a5f1a05fd43a84f" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;re still using Jekyll, but we have plugins in the mix:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ccbb0445c1cb901e7c17ed759c9ed9876f5acc4" translate="yes" xml:space="preserve">
          <source>Web Content Accessibility Guidelines (WCAG) 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642803d03826095e048310e6f6fdb2336f081224" translate="yes" xml:space="preserve">
          <source>Webpack</source>
          <target state="translated">Webpack</target>
        </trans-unit>
        <trans-unit id="4d7378e5525b9fcc7461f765a8080e064cee8938" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;$enable-gradients&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; (default is &lt;code&gt;false&lt;/code&gt;), you can use &lt;code&gt;.bg-gradient-&lt;/code&gt; utility classes. &lt;a href=&quot;../../getting-started/theming/index#sass-options&quot;&gt;Learn about our Sass options&lt;/a&gt; to enable these classes and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc227becc0006dc0e880299341f548f54fe5937f" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;auto&lt;/code&gt; is specified, it will dynamically reorient the popover.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff873dc5c7e66d99975bb5a8a1a6ade10170eaf3" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;auto&lt;/code&gt; is specified, it will dynamically reorient the tooltip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2968818e6cf7937cc2f641f486b03ebd51f2fb" translate="yes" xml:space="preserve">
          <source>When a function is used to determine the offset, it is called with an object containing the offset data as its first argument. The function must return an object with the same structure. The triggering element DOM node is passed as the second argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866abf54806b21367305563bbb7a2d64cacfc7b4" translate="yes" xml:space="preserve">
          <source>When a function is used to determine the placement, it is called with the popover DOM node as its first argument and the triggering element DOM node as its second. The &lt;code&gt;this&lt;/code&gt; context is set to the popover instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b290c6097d203187851777d3b67e230830d8448" translate="yes" xml:space="preserve">
          <source>When a function is used to determine the placement, it is called with the tooltip DOM node as its first argument and the triggering element DOM node as its second. The &lt;code&gt;this&lt;/code&gt; context is set to the tooltip instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d567724c15dd986fedcc24e2d86697fd299d48" translate="yes" xml:space="preserve">
          <source>When backdrop is set to static, the modal will not close when clicking outside it. Click the button below to try it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ead445da9363b346ce74da0a2c261935ff4964" translate="yes" xml:space="preserve">
          <source>When completed, you&amp;rsquo;ll be able to run the various commands provided from the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830f5da2d97132860281cc5467b12943fa40e881" translate="yes" xml:space="preserve">
          <source>When making any changes to the Sass variables or maps, you&amp;rsquo;ll need to save your changes and recompile. Doing so will output a brand new set of predefined grid classes for column widths, offsets, and ordering. Responsive visibility utilities will also be updated to use the custom breakpoints. Make sure to set grid values in &lt;code&gt;px&lt;/code&gt; (not &lt;code&gt;rem&lt;/code&gt;, &lt;code&gt;em&lt;/code&gt;, or &lt;code&gt;%&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8793bd5f20661ee6d1add6583b5e67b2821b1c9b" translate="yes" xml:space="preserve">
          <source>When modals become too long for the user&amp;rsquo;s viewport or device, they scroll independent of the page itself. Try the demo below to see what we mean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc6ab437df12d6b7d9dd77498b16ebcae04c3f3" translate="yes" xml:space="preserve">
          <source>When showing a new tab, the events fire in the following order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f8ef57eed914b63eab0f3aa05fdf1195d9fe57" translate="yes" xml:space="preserve">
          <source>When spying on elements other than the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;, be sure to have a &lt;code&gt;height&lt;/code&gt; set and &lt;code&gt;overflow-y: scroll;&lt;/code&gt; applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e87ba73a6d24f6895f9db02581c3969b1ab1b6" translate="yes" xml:space="preserve">
          <source>When successfully implemented, your nav or list group will update accordingly, moving the &lt;code&gt;.active&lt;/code&gt; class from one item to the next based on their associated targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de6a73fb2991fd418121428f2d8bfa5cf798548" translate="yes" xml:space="preserve">
          <source>When the container is within your navbar, its horizontal padding is removed at breakpoints lower than your specified &lt;code&gt;.navbar-expand{-sm|-md|-lg|-xl}&lt;/code&gt; class. This ensures we&amp;rsquo;re not doubling up on padding unnecessarily on lower viewports when your navbar is collapsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4b40349a8ef4645140d9b15e00c4c4e819ac7f" translate="yes" xml:space="preserve">
          <source>When toggling &lt;code&gt;display&lt;/code&gt; isn&amp;rsquo;t needed, you can toggle the &lt;code&gt;visibility&lt;/code&gt; of an element with our &lt;a href=&quot;../../utilities/visibility/index&quot;&gt;visibility utilities&lt;/a&gt;. Invisible elements will still affect the layout of the page, but are visually hidden from visitors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf5c9587cc54b989b44489611c0808eb5e73b22" translate="yes" xml:space="preserve">
          <source>When triggered from anchors that wrap across multiple lines, popovers will be centered between the anchors&amp;rsquo; overall width. Use &lt;code&gt;.text-nowrap&lt;/code&gt; on your &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;s to avoid this behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0b51f660bcf6064708ec28b294d9bebabef859" translate="yes" xml:space="preserve">
          <source>When triggered from hyperlinks that span multiple lines, tooltips will be centered. Use &lt;code&gt;white-space: nowrap;&lt;/code&gt; on your &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;s to avoid this behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd04530f633ea4553e9457c4ea73c0e346dbdf36" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;autohide: false&lt;/code&gt;, you must add a close button to allow users to dismiss the toast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d52824af1ba6f7cb840dca6fef3d516fbe4e86" translate="yes" xml:space="preserve">
          <source>When using Bootstrap&amp;rsquo;s source Sass files, you have the option of using Sass variables and mixins to create custom, semantic, and responsive page layouts. Our predefined grid classes use these same variables and mixins to provide a whole suite of ready-to-use classes for fast responsive layouts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392b5dc9a3a4abd0245a93004f4562aae521f425" translate="yes" xml:space="preserve">
          <source>When using a &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt;-based navigation, be sure to include &lt;code&gt;.nav-item&lt;/code&gt; on the anchors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c5555ea77190d778feb829200d0f71751ed41d" translate="yes" xml:space="preserve">
          <source>When using button classes on &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; elements that are used to trigger in-page functionality (like collapsing content), rather than linking to new pages or sections within the current page, these links should be given a &lt;code&gt;role=&quot;button&quot;&lt;/code&gt; to appropriately convey their purpose to assistive technologies such as screen readers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58c0e02127eefff6c801252f417eb1b1f9f24a80" translate="yes" xml:space="preserve">
          <source>When using card groups with footers, their content will automatically line up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180812ea457b58499478962c3d1bfae2dd7a96e2" translate="yes" xml:space="preserve">
          <source>When using scrollspy in conjunction with adding or removing of elements from the DOM, you&amp;rsquo;ll need to call the refresh method like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c091722fa80650fafa1fae4aa1beaac155328bf9" translate="yes" xml:space="preserve">
          <source>When you have multiple toasts, we default to vertically stacking them in a readable manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40394ae4fe8d2e1136ba5b403bbc57386784a981" translate="yes" xml:space="preserve">
          <source>When you have some styles on a parent element that interfere with a popover, you&amp;rsquo;ll want to specify a custom &lt;code&gt;container&lt;/code&gt; so that the popover&amp;rsquo;s HTML appears within that element instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbdf6b1eaed7f805e93ebceb2a8fef155d0da92" translate="yes" xml:space="preserve">
          <source>When you need equal height, add &lt;code&gt;.h-100&lt;/code&gt; to the cards. If you want equal heights by default, you can set &lt;code&gt;$card-height: 100%&lt;/code&gt; in Sass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="350dbc4dc095b2b6e9391662e795f35b7dd21e35" translate="yes" xml:space="preserve">
          <source>Whenever possible, avoid modifying Bootstrap&amp;rsquo;s core files. For Sass, that means creating your own stylesheet that imports Bootstrap so you can modify and extend it. Assuming you&amp;rsquo;re using a package manager like npm, you&amp;rsquo;ll have a file structure that looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc7568aac53b7075d947b887efa98fc3623b1cf" translate="yes" xml:space="preserve">
          <source>Where &lt;em&gt;property&lt;/em&gt; is one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3485dd9fcc15bac23a20cd78ef7171235abe2662" translate="yes" xml:space="preserve">
          <source>Where &lt;em&gt;sides&lt;/em&gt; is one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d179476f57e53d09ab1e2a092cd464b9e9f2c8" translate="yes" xml:space="preserve">
          <source>Where &lt;em&gt;size&lt;/em&gt; is one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d696ffd54c8eaa6294caf3aaf4aa3c24faf84ea" translate="yes" xml:space="preserve">
          <source>Where &lt;em&gt;value&lt;/em&gt; is one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4bbae2ba7ba1e3f3aa13fc5110872e385acae99" translate="yes" xml:space="preserve">
          <source>Whether the carousel should cycle continuously or have hard stops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65a19eadced0598a9f7b364df093da4a5fc6ca6" translate="yes" xml:space="preserve">
          <source>Whether the carousel should react to keyboard events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231bb5f0423659c3db8dee7294b260503d1e7cf0" translate="yes" xml:space="preserve">
          <source>Whether the carousel should support left/right swipe interactions on touchscreen devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ea5a7802bbb08cfac51a4dec78a20c3b658c69" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;:hover&lt;/code&gt; isn&amp;rsquo;t possible on most touch devices, iOS emulates this behavior, resulting in &amp;ldquo;sticky&amp;rdquo; hover styles that persist after tapping one element. These hover styles are only removed when users tap another element. This behavior is considered largely undesirable and appears to not be an issue on Android or Windows devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088be9488740eacda2f46fa6346f0203d399ea7a" translate="yes" xml:space="preserve">
          <source>While Beta 2 saw the bulk of our breaking changes during the beta phase, but we still have a few that needed to be addressed in the Beta 3 release. These changes apply if you&amp;rsquo;re updating to Beta 3 from Beta 2 or any older version of Bootstrap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36653c2a317540dd8294edea1ee095b24600e531" translate="yes" xml:space="preserve">
          <source>While Bootstrap uses &lt;code&gt;em&lt;/code&gt;s or &lt;code&gt;rem&lt;/code&gt;s for defining most sizes, &lt;code&gt;px&lt;/code&gt;s are used for grid breakpoints and container widths. This is because the viewport width is in pixels and does not change with the &lt;a href=&quot;https://drafts.csswg.org/mediaqueries-3/#units&quot;&gt;font size&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd39874ac9a69be6caf489683e5750f86658ccc9" translate="yes" xml:space="preserve">
          <source>While Bootstrap will apply these styles in all browsers, Internet Explorer 11 and below don&amp;rsquo;t fully support the &lt;code&gt;disabled&lt;/code&gt; attribute on a &lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt;. Use custom JavaScript to disable the fieldset in these browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb85aedbe7db6551246cb57e7af85addb2659c4" translate="yes" xml:space="preserve">
          <source>While in beta, we aim to have no breaking changes. However, things don&amp;rsquo;t always go as planned. Below are the breaking changes to bear in mind when moving from Beta 1 to Beta 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3322414b33c370e9dfa5d74b8af1165eb7304f" translate="yes" xml:space="preserve">
          <source>While multiple &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;s are supported visually, validation styles are only available for input groups with a single &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec63c0115fc54878a8ab3c24c2e4b3166cc097d" translate="yes" xml:space="preserve">
          <source>While not shown above, feel free to use &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; in HTML5. &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; is meant to highlight words or phrases without conveying additional importance while &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; is mostly for voice, technical terms, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa7a4a6104760b7bc0d977a4041c0a9c03c71aa3" translate="yes" xml:space="preserve">
          <source>While shadows on components are disabled by default in Bootstrap and can be enabled via &lt;code&gt;$enable-shadows&lt;/code&gt;, you can also quickly add or remove a shadow with our &lt;code&gt;box-shadow&lt;/code&gt; utility classes. Includes support for &lt;code&gt;.shadow-none&lt;/code&gt; and three default sizes (which have associated variables to match).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca5a9186818e5ec16460ed3e937c026cf1c85eea" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;.disabled&lt;/code&gt; class uses &lt;code&gt;pointer-events: none&lt;/code&gt; to &lt;em&gt;try&lt;/em&gt; to disable the link functionality of &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;s, that CSS property is not yet standardized and doesn&amp;rsquo;t account for keyboard navigation. As such, you should always add &lt;code&gt;tabindex=&quot;-1&quot;&lt;/code&gt; on disabled links and use custom JavaScript to fully disable their functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c517e94fe33e4305a6eab0783cb63a9776e511f" translate="yes" xml:space="preserve">
          <source>While these feedback styles cannot be styled with CSS, you can still customize the feedback text through JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52dd55c76a67f72a2f8451bba9b077773d52d850" translate="yes" xml:space="preserve">
          <source>While we originally included breakpoints in our CSS variables (e.g., &lt;code&gt;--breakpoint-md&lt;/code&gt;), &lt;strong&gt;these are not supported in media queries&lt;/strong&gt;, but they can still be used &lt;em&gt;within&lt;/em&gt; rulesets in media queries. These breakpoint variables remain in the compiled CSS for backward compatibility given they can be utilized by JavaScript. &lt;a href=&quot;https://www.w3.org/TR/css-variables-1/#using-variables&quot;&gt;Learn more in the spec&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8ae74163d01e867cdc7ba54d1c5817a94885ba" translate="yes" xml:space="preserve">
          <source>While you can insert rich, structured HTML in popovers with the &lt;code&gt;html&lt;/code&gt; option, we strongly recommend that you avoid adding an excessive amount of content. The way popovers currently work is that, once displayed, their content is tied to the trigger element with the &lt;code&gt;aria-describedby&lt;/code&gt; attribute. As a result, the entirety of the popover&amp;rsquo;s content will be announced to assistive technology users as one long, uninterrupted stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0a035337e0964ba03e4a91c20cd82354f979d6" translate="yes" xml:space="preserve">
          <source>Width and height utilities are generated from the &lt;code&gt;$sizes&lt;/code&gt; Sass map in &lt;code&gt;_variables.scss&lt;/code&gt;. Includes support for &lt;code&gt;25%&lt;/code&gt;, &lt;code&gt;50%&lt;/code&gt;, &lt;code&gt;75%&lt;/code&gt;, &lt;code&gt;100%&lt;/code&gt;, and &lt;code&gt;auto&lt;/code&gt; by default. Modify those values as you need to generate different utilities here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="4db48ac648a42f512034fb991a7275e05d76ee88" translate="yes" xml:space="preserve">
          <source>Windows 10 Mobile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="826176e1dafeae627b969ecb4c8294c36af60631" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;s, you can also make use of the &lt;code&gt;disabled&lt;/code&gt; attribute instead of the &lt;code&gt;.disabled&lt;/code&gt; class. Sadly, &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;s don&amp;rsquo;t support the disabled attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e741594403057b813d4fcfe7fbb90213852e5679" translate="yes" xml:space="preserve">
          <source>With a brand name shown on the left and toggler on the right:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd7ce6b4d0f5cc125d85918d283beba56a96207" translate="yes" xml:space="preserve">
          <source>With a toggler on the left and brand name on the right:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97c28448b879a99cb961312778b24b476630d50" translate="yes" xml:space="preserve">
          <source>With align-items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82bbdbc7b95c24e693c673275fe32ee68166cc6" translate="yes" xml:space="preserve">
          <source>With badges</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c56f6282423cd64d1af3a19c6536676714180661" translate="yes" xml:space="preserve">
          <source>With captions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79db18d0410a94b97c9cc5e6c36793cd99bbf7b3" translate="yes" xml:space="preserve">
          <source>With controls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c762a522e6db81b363ff21a5b3c31c13360ff5" translate="yes" xml:space="preserve">
          <source>With indicators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8aaa3e51305750a8ca7515e364b5b620f94a26" translate="yes" xml:space="preserve">
          <source>With inline elements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32fa535a403cdf6c01da3d58b4356e34e1badf75" translate="yes" xml:space="preserve">
          <source>With no &lt;code&gt;.navbar-brand&lt;/code&gt; shown in lowest breakpoint:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1abac44a6bf976c1583b6c3fea0e047183c8163f" translate="yes" xml:space="preserve">
          <source>With table cells:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3aa25ca0c9e61475da80906ed2f373b2dddf971" translate="yes" xml:space="preserve">
          <source>With that in mind, consider the following demos for our custom form validation styles, optional server side classes, and browser defaults.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d729ed94b508b6a51f76234b25bedeb4d331c90" translate="yes" xml:space="preserve">
          <source>With that setup in place, you can begin to modify any of the Sass variables and maps in your &lt;code&gt;custom.scss&lt;/code&gt;. You can also start to add parts of Bootstrap under the &lt;code&gt;// Optional&lt;/code&gt; section as needed. We suggest using the full import stack from our &lt;code&gt;bootstrap.scss&lt;/code&gt; file as your starting point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d70962930d90d8ea968309976b303c4bc2a0c3c" translate="yes" xml:space="preserve">
          <source>With the above snippet, nested elements&amp;mdash;including generated content via &lt;code&gt;::before&lt;/code&gt; and &lt;code&gt;::after&lt;/code&gt;&amp;mdash;will all inherit the specified &lt;code&gt;box-sizing&lt;/code&gt; for that &lt;code&gt;.selector-for-some-widget&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad26f874fdebfa5fb392812a538598cb794d6ee" translate="yes" xml:space="preserve">
          <source>With the move to flexbox in v4, you can use margin utilities like &lt;code&gt;.mr-auto&lt;/code&gt; to force sibling columns away from one another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7238407307243a4ebdfd4982dac88e1b8b2b1f2" translate="yes" xml:space="preserve">
          <source>Within &lt;code&gt;_variables.scss&lt;/code&gt;, you can change the aspect ratios you want to use. Here&amp;rsquo;s an example of the &lt;code&gt;$embed-responsive-aspect-ratios&lt;/code&gt; list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf789a6d29071eeee4d9b5ae0c3d9184ea37b78" translate="yes" xml:space="preserve">
          <source>Within &lt;code&gt;scss/_variables.scss&lt;/code&gt;, you&amp;rsquo;ll find Bootstrap&amp;rsquo;s color variables and Sass map. Here&amp;rsquo;s an example of the &lt;code&gt;$colors&lt;/code&gt; Sass map:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8750da19e2040356e2c51932ace1dda5176c763c" translate="yes" xml:space="preserve">
          <source>Without labels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b11f1af07622831193dabcd2d3695ae97c78f805" translate="yes" xml:space="preserve">
          <source>Word break</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3638134dd9cff28e444455e93e47b183e08d0771" translate="yes" xml:space="preserve">
          <source>Working with flex utilities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0f409ac8ba079e8de47f3de3f0d9359290f08f" translate="yes" xml:space="preserve">
          <source>Working with icons</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3447e7954fa5698ae957a33210094d617b1dc00" translate="yes" xml:space="preserve">
          <source>Wrap</source>
          <target state="translated">Wrap</target>
        </trans-unit>
        <trans-unit id="8cfc56f9e4b42ba793778619ab5430a4e2aee3de" translate="yes" xml:space="preserve">
          <source>Wrap a series of buttons with &lt;code&gt;.btn&lt;/code&gt; in &lt;code&gt;.btn-group&lt;/code&gt;. Add on optional JavaScript radio and checkbox style behavior with &lt;a href=&quot;../buttons/index#button-plugin&quot;&gt;our buttons plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1bd734d18f2aa5c249591019f4cb0d160726e6b" translate="yes" xml:space="preserve">
          <source>Wrap any embed like an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; in a parent element with &lt;code&gt;.embed-responsive&lt;/code&gt; and an aspect ratio. The &lt;code&gt;.embed-responsive-item&lt;/code&gt; isn&amp;rsquo;t strictly required, but we encourage it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02fd4f144b04e70015389e3b9de57b3b7589b37" translate="yes" xml:space="preserve">
          <source>Wrap inline snippets of code with &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt;. Be sure to escape HTML angle brackets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef10858d504bdc2333a91f102ee10c50c8e4714" translate="yes" xml:space="preserve">
          <source>Wrap text with a &lt;code&gt;.text-wrap&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b400c41b058d5961f69d077009c65e8752322f32" translate="yes" xml:space="preserve">
          <source>Wrap the dropdown&amp;rsquo;s toggle (your button or link) and the dropdown menu within &lt;code&gt;.dropdown&lt;/code&gt;, or another element that declares &lt;code&gt;position: relative;&lt;/code&gt;. Dropdowns can be triggered from &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements to better fit your potential needs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef840afcddbb0c72a9932bf338567231c320f6c4" translate="yes" xml:space="preserve">
          <source>Wrapping</source>
          <target state="translated">Wrapping</target>
        </trans-unit>
        <trans-unit id="3526f607bcd4f51ad0bc05f814579a42c2c0ba57" translate="yes" xml:space="preserve">
          <source>Yellow</source>
          <target state="translated">Yellow</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="4786cbe576f45d93f552380cf3acc2625b46dbd3" translate="yes" xml:space="preserve">
          <source>You also need to adapt the &lt;code&gt;role&lt;/code&gt; and &lt;code&gt;aria-live&lt;/code&gt; level depending on the content. If it&amp;rsquo;s an important message like an error, use &lt;code&gt;role=&quot;alert&quot; aria-live=&quot;assertive&quot;&lt;/code&gt;, otherwise use &lt;code&gt;role=&quot;status&quot; aria-live=&quot;polite&quot;&lt;/code&gt; attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ddb23cc307e91ca9993c2384f1762b2edfd2cdb" translate="yes" xml:space="preserve">
          <source>You can activate a list group navigation without writing any JavaScript by simply specifying &lt;code&gt;data-toggle=&quot;list&quot;&lt;/code&gt; or on an element. Use these data attributes on &lt;code&gt;.list-group-item&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e6733b1644a187e0bfc31bf60676745d4d2989" translate="yes" xml:space="preserve">
          <source>You can activate a tab or pill navigation without writing any JavaScript by simply specifying &lt;code&gt;data-toggle=&quot;tab&quot;&lt;/code&gt; or &lt;code&gt;data-toggle=&quot;pill&quot;&lt;/code&gt; on an element. Use these data attributes on &lt;code&gt;.nav-tabs&lt;/code&gt; or &lt;code&gt;.nav-pills&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1af4307ee988c166eb178ab982ca4c13b9db3c" translate="yes" xml:space="preserve">
          <source>You can activate individual list item in several ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3002f471c2c42e3e4a64b5035b4148afb6d20938" translate="yes" xml:space="preserve">
          <source>You can activate individual tabs in several ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d7e63c133cd44f5c57d97d04b1c33e5beea3af0" translate="yes" xml:space="preserve">
          <source>You can also add the indicators to the carousel, alongside the controls, too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89eed49855b397fe3bf8b9061a41ea972e70622" translate="yes" xml:space="preserve">
          <source>You can also change the borders on the card header and footer as needed, and even remove their &lt;code&gt;background-color&lt;/code&gt; with &lt;code&gt;.bg-transparent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c63d056702b79248cdfe99e4b507e2355b64aec" translate="yes" xml:space="preserve">
          <source>You can also create a scrollable modal that allows scroll the modal body by adding &lt;code&gt;.modal-dialog-scrollable&lt;/code&gt; to &lt;code&gt;.modal-dialog&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa94d8ccbac612fde7660184a57235cfa42f32c" translate="yes" xml:space="preserve">
          <source>You can also create non-interactive dropdown items with &lt;code&gt;.dropdown-item-text&lt;/code&gt;. Feel free to style further with custom CSS or text utilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c679970cd04acebf51ee618abc7e148d633f01" translate="yes" xml:space="preserve">
          <source>You can also follow &lt;a href=&quot;https://twitter.com/getbootstrap&quot;&gt;@getbootstrap on Twitter&lt;/a&gt; for the latest gossip and awesome music videos.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d1d5732127f80eb9e88e099a76551d0553ccd6" translate="yes" xml:space="preserve">
          <source>You can also get fancy with flexbox utilities to align toasts horizontally and/or vertically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33107e57ce4a854175dc1aa25f0bb38bad3f338" translate="yes" xml:space="preserve">
          <source>You can also install and manage Bootstrap&amp;rsquo;s Sass and JavaScript using &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53afb736939981cf0c5f405c580dc4612c95a68c" translate="yes" xml:space="preserve">
          <source>You can also invert the colors&amp;mdash;with light text on dark backgrounds&amp;mdash;with &lt;code&gt;.table-dark&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32efb285fee1cde7a80f264b8d74ceab931bf71d" translate="yes" xml:space="preserve">
          <source>You can also specify a base color with our color map functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff57aa689ceb13f4e6670784ffb5ff425adb6fd4" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;max-width: 100%;&lt;/code&gt; and &lt;code&gt;max-height: 100%;&lt;/code&gt; utilities as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8ddb725c7a276f455da3859b4c374e28827e6c" translate="yes" xml:space="preserve">
          <source>You can also use the accompanying Sass mixin, &lt;code&gt;row-cols()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8b9aba1eae1afb3fc65d0cc7d555b8ea643524" translate="yes" xml:space="preserve">
          <source>You can also use utilities to set the width and height relative to the viewport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b366863c42933aad07dcbada15665e3dbbc5039" translate="yes" xml:space="preserve">
          <source>You can change the default settings for a plugin by modifying the plugin&amp;rsquo;s &lt;code&gt;Constructor.Default&lt;/code&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d4e07885c20d456cf92025e892ae1574472593" translate="yes" xml:space="preserve">
          <source>You can find and customize these variables for key global options in Bootstrap&amp;rsquo;s &lt;code&gt;scss/_variables.scss&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045648648d14e23b37a6cd9b4e7e48475868102d" translate="yes" xml:space="preserve">
          <source>You can find our supported range of browsers and their versions &lt;a href=&quot;https://github.com/twbs/bootstrap/blob/v4.4.1/.browserslistrc&quot;&gt;in our &lt;code&gt;.browserslistrc file&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21cdad2ddb2e28589c5a9750c6f9888ac3fd214c" translate="yes" xml:space="preserve">
          <source>You can modify the variables to your own custom values, or just use the mixins with their default values. Here&amp;rsquo;s an example of using the default settings to create a two-column layout with a gap between.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7942196f621cb437e3dcbe0336c155cdd1ecfbcd" translate="yes" xml:space="preserve">
          <source>You can offset grid columns in two ways: our responsive &lt;code&gt;.offset-&lt;/code&gt; grid classes and our &lt;a href=&quot;../../utilities/spacing/index&quot;&gt;margin utilities&lt;/a&gt;. Grid classes are sized to match columns while margins are more useful for quick layouts where the width of the offset is variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8adb2da80593bfeb483209e29cc3841587b2d242" translate="yes" xml:space="preserve">
          <source>You can optionally swap out active or disabled anchors for &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;, or omit the anchor in the case of the prev/next arrows, to remove click functionality and prevent keyboard focus while retaining intended styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012521f6bcd06a6df711665f004c3678058de58a" translate="yes" xml:space="preserve">
          <source>You can quickly change the text alignment of any card&amp;mdash;in its entirety or specific parts&amp;mdash;with our &lt;a href=&quot;../../utilities/text/index#text-alignment&quot;&gt;text align classes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8bb45160534a8f1b24bc6886ead1daec138bf2" translate="yes" xml:space="preserve">
          <source>You can see an example of this in action in the &lt;a href=&quot;#starter-template&quot;&gt;starter template&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a2b8318c96c5e9c9b1ff0d7105ed279f6e44fd" translate="yes" xml:space="preserve">
          <source>You can see this in action with a live demo:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e6c54955209c27edd5995c4852970234b5f8d7" translate="yes" xml:space="preserve">
          <source>You can then remix that once again with size-specific column classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4773519fdc7e6f1e14f0a050128804802a68c71" translate="yes" xml:space="preserve">
          <source>You can use a link with the &lt;code&gt;href&lt;/code&gt; attribute, or a button with the &lt;code&gt;data-target&lt;/code&gt; attribute. In both cases, the &lt;code&gt;data-toggle=&quot;collapse&quot;&lt;/code&gt; is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d86de082bd3164f65099f033658a44d08ac8e06e" translate="yes" xml:space="preserve">
          <source>You can use predefined grid classes (like &lt;code&gt;.col-4&lt;/code&gt;) or &lt;a href=&quot;#sass-mixins&quot;&gt;Sass mixins&lt;/a&gt; for more semantic markup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1069ac0384a11b614e69471fa1e5c7abac86d7" translate="yes" xml:space="preserve">
          <source>You may also apply this break at specific breakpoints with our &lt;a href=&quot;../../utilities/display/index&quot;&gt;responsive display utilities&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fec41e3ff5d4369b76caf5b16a8965819a33568" translate="yes" xml:space="preserve">
          <source>You may also choose from small and large custom selects to match our similarly sized text inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5f4bc7ba0d9f679609cc7f1f6b758260a59af6" translate="yes" xml:space="preserve">
          <source>You may also swap &lt;code&gt;.row&lt;/code&gt; for &lt;code&gt;.form-row&lt;/code&gt;, a variation of our standard grid row that overrides the default column gutters for tighter and more compact layouts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f22de6234777c231a91677921e55e82998a47e1" translate="yes" xml:space="preserve">
          <source>You may also utilize dropdowns in your navbar nav. Dropdown menus require a wrapping element for positioning, so be sure to use separate and nested elements for &lt;code&gt;.nav-item&lt;/code&gt; and &lt;code&gt;.nav-link&lt;/code&gt; as shown below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c862af8872ec6cc55dad34ae70bb0aac71d649cc" translate="yes" xml:space="preserve">
          <source>You may need to manually address the width and alignment of individual form controls with &lt;a href=&quot;../../utilities/spacing/index&quot;&gt;spacing utilities&lt;/a&gt; (as shown below). Lastly, be sure to always include a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; with each form control, even if you need to hide it from non-screenreader visitors with &lt;code&gt;.sr-only&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecdc46abc81c17ca9eb168de66cc52c0fc2cfe13" translate="yes" xml:space="preserve">
          <source>You may provide custom validity messages with &lt;code&gt;setCustomValidity&lt;/code&gt; in JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619dacc5da4638ca1edbb5d424cf376c96e3e63b" translate="yes" xml:space="preserve">
          <source>You should only add tooltips to HTML elements that are traditionally keyboard-focusable and interactive (such as links or form controls). Although arbitrary HTML elements (such as &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;s) can be made focusable by adding the &lt;code&gt;tabindex=&quot;0&quot;&lt;/code&gt; attribute, this will add potentially annoying and confusing tab stops on non-interactive elements for keyboard users, and most assistive technologies currently do not announce the tooltip in this situation. Additionally, do not rely solely on &lt;code&gt;hover&lt;/code&gt; as the trigger for your tooltip, as this will make your tooltips impossible to trigger for keyboard users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36a75b2aff2d9901d366a2867fcda4c10a94733" translate="yes" xml:space="preserve">
          <source>You will find the complete list of Bootstrap&amp;rsquo;s variables in &lt;code&gt;scss/_variables.scss&lt;/code&gt;. Some variables are set to &lt;code&gt;null&lt;/code&gt;, these variables don&amp;rsquo;t output the property unless they are overridden in your configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc7891d265d9b7a0de3480b904dbb3cfbb2cf841" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll need to set the language of your document (or subtree thereof) correctly in order for the correct text to be shown. This can be done using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/lang&quot;&gt;the &lt;code&gt;lang&lt;/code&gt; attribute&lt;/a&gt; on the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element or the &lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.12&quot;&gt;&lt;code&gt;Content-Language&lt;/code&gt; HTTP header&lt;/a&gt;, among other methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674904ca0e42422e8196ffd9652cece8fb2ef153" translate="yes" xml:space="preserve">
          <source>Z-index</source>
          <target state="translated">Z-index</target>
        </trans-unit>
        <trans-unit id="0e07f746978ae0c6ec2c6676a05839f8babefeb7" translate="yes" xml:space="preserve">
          <source>Zero-length &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;content&lt;/code&gt; values will never show a popover.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722e47d18ac8726bdb8c72c735f06133046db391" translate="yes" xml:space="preserve">
          <source>activate.bs.scrollspy</source>
          <target state="translated">activate.bs.scrollspy</target>
        </trans-unit>
        <trans-unit id="c37c8bf9cc6f6515ca708bdfbcc2c4b90224138b" translate="yes" xml:space="preserve">
          <source>and its configuration can be found on its &lt;a href=&quot;https://github.com/twbs/rfs/tree/v8.0.4&quot;&gt;GitHub repository&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b8b600c27ce95ddcf867cfc503564c89fe816a" translate="yes" xml:space="preserve">
          <source>animation</source>
          <target state="translated">animation</target>
        </trans-unit>
        <trans-unit id="3aca2b0d1f56dd5b8109c58303457636e9399f5a" translate="yes" xml:space="preserve">
          <source>as the quote.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d612c12d2ac33625bf3e0351b6f5e4f73829fa8" translate="yes" xml:space="preserve">
          <source>auto</source>
          <target state="translated">auto</target>
        </trans-unit>
        <trans-unit id="188f4f1392edfdadf5ed416a0eeffe7f98e6cfb7" translate="yes" xml:space="preserve">
          <source>autohide</source>
          <target state="translated">autohide</target>
        </trans-unit>
        <trans-unit id="8d488f4adac10fb787909c4412cdbfc805099ba9" translate="yes" xml:space="preserve">
          <source>backdrop</source>
          <target state="translated">backdrop</target>
        </trans-unit>
        <trans-unit id="814bde1d44ac2e024d7aceb3fc755f990320c667" translate="yes" xml:space="preserve">
          <source>blank - for classes that set a &lt;code&gt;margin&lt;/code&gt; or &lt;code&gt;padding&lt;/code&gt; on all 4 sides of the element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48647474b89fa8f56ed6bda0f8148a17b51b97bd" translate="yes" xml:space="preserve">
          <source>boolean</source>
          <target state="translated">boolean</target>
        </trans-unit>
        <trans-unit id="cbf13d89d3a3abfbbc4e11149190efcee8fa75cf" translate="yes" xml:space="preserve">
          <source>boolean or the string &lt;code&gt;'static'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db8c22f75474a58cd13fa2d3425017015d392ce" translate="yes" xml:space="preserve">
          <source>boundary</source>
          <target state="translated">boundary</target>
        </trans-unit>
        <trans-unit id="8d60ad9cd0965650bfea1298a593fc20d06a6b83" translate="yes" xml:space="preserve">
          <source>can be enabled by changing the &lt;code&gt;$enable-responsive-font-sizes&lt;/code&gt; Sass variable to &lt;code&gt;true&lt;/code&gt; and recompiling Bootstrap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255a762c36cdae2fe950e67e8b8a4efb260e7540" translate="yes" xml:space="preserve">
          <source>container</source>
          <target state="translated">container</target>
        </trans-unit>
        <trans-unit id="642b5cd982d48582ca759a01b28bd2ade45c3b8a" translate="yes" xml:space="preserve">
          <source>containers</source>
          <target state="translated">containers</target>
        </trans-unit>
        <trans-unit id="040f06fd774092478d450774f5ba30c5da78acc8" translate="yes" xml:space="preserve">
          <source>content</source>
          <target state="translated">content</target>
        </trans-unit>
        <trans-unit id="ab464f0252045aaf075411f0f1a6aed0797306c1" translate="yes" xml:space="preserve">
          <source>delay</source>
          <target state="translated">delay</target>
        </trans-unit>
        <trans-unit id="59b189070af751d4e93a749ccffb4ccfd2de7ab5" translate="yes" xml:space="preserve">
          <source>display</source>
          <target state="translated">display</target>
        </trans-unit>
        <trans-unit id="4190561a4f6935716dfcb9ed90de12d67ce7628e" translate="yes" xml:space="preserve">
          <source>fallbackPlacement</source>
          <target state="translated">fallbackPlacement</target>
        </trans-unit>
        <trans-unit id="7cb6efb98ba5972a9b5090dc2e517fe14d12cb04" translate="yes" xml:space="preserve">
          <source>false</source>
          <target state="translated">false</target>
        </trans-unit>
        <trans-unit id="40f924d802a754f24560958c585b751e7efea1f7" translate="yes" xml:space="preserve">
          <source>flip</source>
          <target state="translated">flip</target>
        </trans-unit>
        <trans-unit id="78918dcaf22c0486024b08caed8fe0c57e583a47" translate="yes" xml:space="preserve">
          <source>focus</source>
          <target state="translated">focus</target>
        </trans-unit>
        <trans-unit id="f95d355c5da0f63c506749bda37b3bee6136eacd" translate="yes" xml:space="preserve">
          <source>h1. Bootstrap heading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf223e78e2b80f75d845c20855c4146704a9bc4" translate="yes" xml:space="preserve">
          <source>h2. Bootstrap heading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5fc3a7a843b0c990f6e7ac388e0ebecbe3856c3" translate="yes" xml:space="preserve">
          <source>h3. Bootstrap heading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4b7b73bc14c84642ddce21442938e8487cc46d" translate="yes" xml:space="preserve">
          <source>h4. Bootstrap heading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="305cd1327746468d7f48165c4f77a7d80785e90e" translate="yes" xml:space="preserve">
          <source>h5. Bootstrap heading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a22bdab5651d9682f9c35cceb556b7f264257d" translate="yes" xml:space="preserve">
          <source>h6. Bootstrap heading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b20c59c780d3c9d5bfd86f2b41a5f8a72b169d" translate="yes" xml:space="preserve">
          <source>hidden.bs.collapse</source>
          <target state="translated">hidden.bs.collapse</target>
        </trans-unit>
        <trans-unit id="734a6ed3ba9fbea3aac2b109794cc9e397680bdb" translate="yes" xml:space="preserve">
          <source>hidden.bs.modal</source>
          <target state="translated">hidden.bs.modal</target>
        </trans-unit>
        <trans-unit id="3cf61d084287058cd482b66e0dbc2f16540aca39" translate="yes" xml:space="preserve">
          <source>hidden.bs.popover</source>
          <target state="translated">hidden.bs.popover</target>
        </trans-unit>
        <trans-unit id="1ed56c23d04ced8513d4b44d8da79955fb3a8a59" translate="yes" xml:space="preserve">
          <source>hidden.bs.tab</source>
          <target state="translated">hidden.bs.tab</target>
        </trans-unit>
        <trans-unit id="3336e0b74d027afeabbb66b45214b78bec6b44ca" translate="yes" xml:space="preserve">
          <source>hidden.bs.toast</source>
          <target state="translated">hidden.bs.toast</target>
        </trans-unit>
        <trans-unit id="d90e32cbff9c2fb8a63ecb3b3eb91f419cf2a2fa" translate="yes" xml:space="preserve">
          <source>hidden.bs.tooltip</source>
          <target state="translated">hidden.bs.tooltip</target>
        </trans-unit>
        <trans-unit id="88a169bbe4d08f4f20cc225773ede7603b1dfad2" translate="yes" xml:space="preserve">
          <source>hide.bs.collapse</source>
          <target state="translated">hide.bs.collapse</target>
        </trans-unit>
        <trans-unit id="5ab510ee8204530a28cfdddf321a0e48947ef5a4" translate="yes" xml:space="preserve">
          <source>hide.bs.modal</source>
          <target state="translated">hide.bs.modal</target>
        </trans-unit>
        <trans-unit id="a804dc35e447276e432e92cb29b6fc048a4c684c" translate="yes" xml:space="preserve">
          <source>hide.bs.popover</source>
          <target state="translated">hide.bs.popover</target>
        </trans-unit>
        <trans-unit id="535f08ab2eabb6d15f439ac0b6930829e0742f08" translate="yes" xml:space="preserve">
          <source>hide.bs.tab</source>
          <target state="translated">hide.bs.tab</target>
        </trans-unit>
        <trans-unit id="50b02d74a0a67506632f655cd0d8ff4c4eefdec5" translate="yes" xml:space="preserve">
          <source>hide.bs.toast</source>
          <target state="translated">hide.bs.toast</target>
        </trans-unit>
        <trans-unit id="538b5eefc117fb7ff678a4b5518451eb4fb82f02" translate="yes" xml:space="preserve">
          <source>hide.bs.tooltip</source>
          <target state="translated">hide.bs.tooltip</target>
        </trans-unit>
        <trans-unit id="e1def58b55a579e51f8ebc6fefd601eda599c6e8" translate="yes" xml:space="preserve">
          <source>hidePrevented.bs.modal</source>
          <target state="translated">hidePrevented.bs.modal</target>
        </trans-unit>
        <trans-unit id="950a39b6c2934bb72f2def76c71e88e9c035385f" translate="yes" xml:space="preserve">
          <source>html</source>
          <target state="translated">html</target>
        </trans-unit>
        <trans-unit id="6413e837d316aafcf260786cd21a849f88ae3069" translate="yes" xml:space="preserve">
          <source>iOS</source>
          <target state="translated">iOS</target>
        </trans-unit>
        <trans-unit id="7c6667cf69f23aed96e485d54e490dff8ed27641" translate="yes" xml:space="preserve">
          <source>iOS text fields and scrolling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72868f7d1fd481a68102b69634978d74f02f92d2" translate="yes" xml:space="preserve">
          <source>inserted.bs.popover</source>
          <target state="translated">inserted.bs.popover</target>
        </trans-unit>
        <trans-unit id="1b9bed4ad38f1f99e6b2b143f7fd8dc6780bb5fc" translate="yes" xml:space="preserve">
          <source>inserted.bs.tooltip</source>
          <target state="translated">inserted.bs.tooltip</target>
        </trans-unit>
        <trans-unit id="84f4675c98d93edd17ec2f6ed54e9f3ee1086612" translate="yes" xml:space="preserve">
          <source>interval</source>
          <target state="translated">interval</target>
        </trans-unit>
        <trans-unit id="00853d73f19844948fadbc48d500f997c46f7ee4" translate="yes" xml:space="preserve">
          <source>jQuery</source>
          <target state="translated">jQuery</target>
        </trans-unit>
        <trans-unit id="9df3d7c406210d7aede263360dd7347523265230" translate="yes" xml:space="preserve">
          <source>jQuery incompatibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f26320c343038d01b070c46deea8aa52d09d1d0" translate="yes" xml:space="preserve">
          <source>key.</source>
          <target state="translated">key.</target>
        </trans-unit>
        <trans-unit id="384a8a9f6c477b7be4999dd5118558c32a8ce1b8" translate="yes" xml:space="preserve">
          <source>keyboard</source>
          <target state="translated">keyboard</target>
        </trans-unit>
        <trans-unit id="b173870fa499a00119009d8a3c27fbc41011991a" translate="yes" xml:space="preserve">
          <source>menus can only contain menu items, checkbox menu items, radio button menu items, radio button groups, and sub-menus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b15cc264c773df494ae6a1969dc597a9a2dfaef" translate="yes" xml:space="preserve">
          <source>menus. Authors will have to include these more specific attributes themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbaf8b2d1cdf92bf83857fe1748c0f68de03d47" translate="yes" xml:space="preserve">
          <source>method</source>
          <target state="translated">method</target>
        </trans-unit>
        <trans-unit id="660051d15ac64cec704cfacca2c2eab008f657e8" translate="yes" xml:space="preserve">
          <source>npm</source>
          <target state="translated">npm</target>
        </trans-unit>
        <trans-unit id="2be88ca4242c76e8253ac62474851065032d6833" translate="yes" xml:space="preserve">
          <source>null</source>
          <target state="translated">null</target>
        </trans-unit>
        <trans-unit id="e15491f87c4f59835a09e4124d129982ef93b31b" translate="yes" xml:space="preserve">
          <source>null | function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51fe3d0696d2bbabd1783f87bc79ac52349e0b87" translate="yes" xml:space="preserve">
          <source>null | object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b0a1b2fadf4e040cdc2155a7340de24aca93cb" translate="yes" xml:space="preserve">
          <source>number</source>
          <target state="translated">number</target>
        </trans-unit>
        <trans-unit id="6bcd17a0895e4cb4c9505ca5f9b8a345845a242d" translate="yes" xml:space="preserve">
          <source>number | object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd73c70883bd1ea49217120c5567d39c7524cfe" translate="yes" xml:space="preserve">
          <source>number | string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eced586d338f1de410bb271ca7ad9c1227ed83f" translate="yes" xml:space="preserve">
          <source>number | string | function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1615307cc4523f183e777df67f168c86908e8007" translate="yes" xml:space="preserve">
          <source>object</source>
          <target state="translated">object</target>
        </trans-unit>
        <trans-unit id="53a610e925bbc0a175e365d31241ae75aeead651" translate="yes" xml:space="preserve">
          <source>offset</source>
          <target state="translated">offset</target>
        </trans-unit>
        <trans-unit id="d8fd39d0bbdd2dcf322d8b11390a4c5825b11495" translate="yes" xml:space="preserve">
          <source>parent</source>
          <target state="translated">parent</target>
        </trans-unit>
        <trans-unit id="ef8d29955a725c39916a4626f3921a0104242439" translate="yes" xml:space="preserve">
          <source>pause</source>
          <target state="translated">pause</target>
        </trans-unit>
        <trans-unit id="7843fc5bea024e9b274e26db43b7e680d8bc9356" translate="yes" xml:space="preserve">
          <source>placement</source>
          <target state="translated">placement</target>
        </trans-unit>
        <trans-unit id="e937bcc86221acce6244d28df0956bb2b07d7dbc" translate="yes" xml:space="preserve">
          <source>popperConfig</source>
          <target state="translated">popperConfig</target>
        </trans-unit>
        <trans-unit id="02ab610f42452d706ba305f258e0f91fd271be3b" translate="yes" xml:space="preserve">
          <source>reference</source>
          <target state="translated">reference</target>
        </trans-unit>
        <trans-unit id="503c807585a8a76b2d687a9f6f36b29777bfff82" translate="yes" xml:space="preserve">
          <source>responsive breakpoints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320ef6a3e22fceeda20d7ced2c8d63cbf48b7a6e" translate="yes" xml:space="preserve">
          <source>ride</source>
          <target state="translated">ride</target>
        </trans-unit>
        <trans-unit id="9ccdd2d74bd30f3197136e469a53527e75e3560a" translate="yes" xml:space="preserve">
          <source>roles and attributes, as well as JavaScript behavior, to more accurately convey the precise nature and functionality of their component. This is usually noted in the documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64c5f5ed148a5f6408863d88cbda685d8199377" translate="yes" xml:space="preserve">
          <source>sanitize</source>
          <target state="translated">sanitize</target>
        </trans-unit>
        <trans-unit id="bfac42527f5ba615a54679ee38479912ee537ddf" translate="yes" xml:space="preserve">
          <source>sanitizeFn</source>
          <target state="translated">sanitizeFn</target>
        </trans-unit>
        <trans-unit id="9e472ba184920adc07464fe7685f8c3b092dee68" translate="yes" xml:space="preserve">
          <source>selector</source>
          <target state="translated">selector</target>
        </trans-unit>
        <trans-unit id="838a8d2c2b02672a5eb6a5daaad8ad2db539f69e" translate="yes" xml:space="preserve">
          <source>selector | jQuery object | DOM element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb29051f2217270a7b253a39f820310d85a78f0" translate="yes" xml:space="preserve">
          <source>show</source>
          <target state="translated">show</target>
        </trans-unit>
        <trans-unit id="ddfb1df3edd24cacd1501f55121db4bde4c169c9" translate="yes" xml:space="preserve">
          <source>show.bs.collapse</source>
          <target state="translated">show.bs.collapse</target>
        </trans-unit>
        <trans-unit id="2f8f3332dffbfd4f4064ed8480f7056c1751f192" translate="yes" xml:space="preserve">
          <source>show.bs.modal</source>
          <target state="translated">show.bs.modal</target>
        </trans-unit>
        <trans-unit id="8828d71d912c6446bd21eedf27bb94fc79d4a929" translate="yes" xml:space="preserve">
          <source>show.bs.popover</source>
          <target state="translated">show.bs.popover</target>
        </trans-unit>
        <trans-unit id="69551c1f4597025d02555eb1bffb6e9cf1249108" translate="yes" xml:space="preserve">
          <source>show.bs.tab</source>
          <target state="translated">show.bs.tab</target>
        </trans-unit>
        <trans-unit id="8ede84d34eccbec309c65342d49ba8e560ebfe4b" translate="yes" xml:space="preserve">
          <source>show.bs.toast</source>
          <target state="translated">show.bs.toast</target>
        </trans-unit>
        <trans-unit id="915075e10725cb32a319ae44982bd4bc7a6aa69a" translate="yes" xml:space="preserve">
          <source>show.bs.tooltip</source>
          <target state="translated">show.bs.tooltip</target>
        </trans-unit>
        <trans-unit id="0052b6a9b2f1d0654de91327fd136986c11aa4af" translate="yes" xml:space="preserve">
          <source>shown.bs.collapse</source>
          <target state="translated">shown.bs.collapse</target>
        </trans-unit>
        <trans-unit id="c39d2360a2cb06677100b2b08139de13431a2fd0" translate="yes" xml:space="preserve">
          <source>shown.bs.modal</source>
          <target state="translated">shown.bs.modal</target>
        </trans-unit>
        <trans-unit id="fa0b9f6a72aced1e65142576a3958559d784c233" translate="yes" xml:space="preserve">
          <source>shown.bs.popover</source>
          <target state="translated">shown.bs.popover</target>
        </trans-unit>
        <trans-unit id="76c22b314f7c0149949eb1c4f9a0d4e73199ecdb" translate="yes" xml:space="preserve">
          <source>shown.bs.tab</source>
          <target state="translated">shown.bs.tab</target>
        </trans-unit>
        <trans-unit id="e073e9915f6f7ec60efa222da89a9041be91726a" translate="yes" xml:space="preserve">
          <source>shown.bs.toast</source>
          <target state="translated">shown.bs.toast</target>
        </trans-unit>
        <trans-unit id="6fb81f63a2e750cd705968b975653e7f29471679" translate="yes" xml:space="preserve">
          <source>shown.bs.tooltip</source>
          <target state="translated">shown.bs.tooltip</target>
        </trans-unit>
        <trans-unit id="1be3e0a98acf2c4c9204db145972aa5882fff621" translate="yes" xml:space="preserve">
          <source>slid.bs.carousel</source>
          <target state="translated">slid.bs.carousel</target>
        </trans-unit>
        <trans-unit id="0de8acd97f74570b0eee566c944c0fc5709248bd" translate="yes" xml:space="preserve">
          <source>slide.bs.carousel</source>
          <target state="translated">slide.bs.carousel</target>
        </trans-unit>
        <trans-unit id="ecb252044b5ea0f679ee78ec1a12904739e2904d" translate="yes" xml:space="preserve">
          <source>string</source>
          <target state="translated">string</target>
        </trans-unit>
        <trans-unit id="3b93cf5c1278489e155023721a6bdb1c9e3df19b" translate="yes" xml:space="preserve">
          <source>string | array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82fd5d2febff78c4b27c89531011e17f0efef583" translate="yes" xml:space="preserve">
          <source>string | boolean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd8f4193a5121a06ef31e55e847c07cbc936fc4" translate="yes" xml:space="preserve">
          <source>string | element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb43fda77c08d43cf0fb265f02002f43a5a907e" translate="yes" xml:space="preserve">
          <source>string | element | false</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed8059c4f72d968e353ac554ed2a592356d0e8a7" translate="yes" xml:space="preserve">
          <source>string | element | function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f97a4e71427f27a473d98159900c8be2cd7dcf5" translate="yes" xml:space="preserve">
          <source>string | false</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea966d78a8ba664abe0cd6107911190f9d113a0a" translate="yes" xml:space="preserve">
          <source>string | function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8a3ad980ec179856012b7eecf4327e99cd44cd" translate="yes" xml:space="preserve">
          <source>target</source>
          <target state="translated">target</target>
        </trans-unit>
        <trans-unit id="3226ecbe650213a49cd03ae67140750e4f340083" translate="yes" xml:space="preserve">
          <source>template</source>
          <target state="translated">template</target>
        </trans-unit>
        <trans-unit id="b33c83a1923485e77db7b4205bbde2fc5f3262b8" translate="yes" xml:space="preserve">
          <source>the upstream version of &lt;a href=&quot;https://www.glyphicons.com/&quot;&gt;Glyphicons&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6de1b7dd91465d437ef415f94f36afc1fbc8a8" translate="yes" xml:space="preserve">
          <source>title</source>
          <target state="translated">title</target>
        </trans-unit>
        <trans-unit id="f9c5942b1f55cb12b8f2b5fae21a9f1706f9d367" translate="yes" xml:space="preserve">
          <source>toggle</source>
          <target state="translated">toggle</target>
        </trans-unit>
        <trans-unit id="f4d1f0193879cba82d65c5752c4ba5cbb43a7188" translate="yes" xml:space="preserve">
          <source>touch</source>
          <target state="translated">touch</target>
        </trans-unit>
        <trans-unit id="63d62d4aee9a5d4fe8539e53a9e3d05ffc210c9b" translate="yes" xml:space="preserve">
          <source>trigger</source>
          <target state="translated">trigger</target>
        </trans-unit>
        <trans-unit id="5ffe533b830f08a0326348a9160afafc8ada44db" translate="yes" xml:space="preserve">
          <source>true</source>
          <target state="translated">true</target>
        </trans-unit>
        <trans-unit id="32af8e849e95f30978855de63d1bef56e23a42b3" translate="yes" xml:space="preserve">
          <source>whiteList</source>
          <target state="translated">whiteList</target>
        </trans-unit>
        <trans-unit id="c07041802b2353dfa0fc9a8d883948356cb5ff91" translate="yes" xml:space="preserve">
          <source>will move a keyboard user into the popover itself. In short, simply adding interactive controls to a popover is likely to make these controls unreachable/unusable for keyboard users and users of assistive technologies, or at the very least make for an illogical overall focus order. In these cases, consider using a modal dialog instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cad97953dfb126d32dc160dbb2bbc326d2ec8d" translate="yes" xml:space="preserve">
          <source>wrap</source>
          <target state="translated">wrap</target>
        </trans-unit>
        <trans-unit id="d19a2519b1c9fee4c6b5f01dc492350db888039a" translate="yes" xml:space="preserve">
          <source>yarn</source>
          <target state="translated">yarn</target>
        </trans-unit>
        <trans-unit id="dd3479166dd23293b76947efe03eed10d990402f" translate="yes" xml:space="preserve">
          <source>z-index</source>
          <target state="translated">z-index</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
