<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="cypress">
    <body>
      <group id="cypress">
        <trans-unit id="dd4ced4e9a7f501a1d4a421e58f7a96f07565df1" translate="yes" xml:space="preserve">
          <source>Though it may not look like much, this upgrade was a long time in the making. There were limitations in the way we were currently handling headless / CI builds which restricted our ability to make updates or fix bugs. Additionally CI runs would randomly crash for no good reason. We decided to split out the headless / CI process into its own independent Chromium application which is now independently controlled, and is much more reliable. This upgrade enables us to handle CI features coming down the pipe and was necessary for moving forward.</source>
          <target state="translated">大したことないように見えるかもしれませんが、このアップグレードには長い時間がかかっていました。現在のヘッドレスCIビルドの扱い方には制限があり、アップデートやバグ修正の能力を制限していました。さらに、CI の実行は意味もなくランダムにクラッシュすることがありました。そこで、ヘッドレスCIプロセスを独立したChromiumアプリケーションに分割することにしました。このアップグレードにより、今後出てくるCI機能を扱うことが可能になり、前進するために必要なものとなりました。</target>
        </trans-unit>
        <trans-unit id="05042fa7041f8b8530048a78d997204314cb21fa" translate="yes" xml:space="preserve">
          <source>Throw explicit error for &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, and &lt;code&gt;&quot;&quot;&lt;/code&gt; arguments to &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/24&quot;&gt;#24&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;への &lt;code&gt;null&lt;/code&gt; 、 &lt;code&gt;undefined&lt;/code&gt; 、および &lt;code&gt;&quot;&quot;&lt;/code&gt; 引数に対して明示的なエラーをスローします。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/24&quot;&gt;＃24を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="958bd43bc0312835eb96d1524baaf0627ec311d3" translate="yes" xml:space="preserve">
          <source>Throw on &lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt; when it cannot find a matching &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;. Also throw when &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; or a matching &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; is disabled. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/91&quot;&gt;#91&lt;/a&gt;.</source>
          <target state="translated">一致する &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; が見つからない場合は&lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; を&lt;/a&gt;スローします。また、 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; または対応する &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; が無効になっている場合もスローします。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/91&quot;&gt;＃91を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="a073142787a1c947c30eef810fce18423c0b95d1" translate="yes" xml:space="preserve">
          <source>Thus the Cypress &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get&lt;/code&gt;&lt;/a&gt; command has to be smarter and expect the application to potentially update. The &lt;code&gt;cy.get()&lt;/code&gt; queries the application&amp;rsquo;s DOM, finds the elements that match the selector, and then tries the assertion that follows it (in our case &lt;code&gt;should('have.length', 2)&lt;/code&gt;) against the list of found elements.</source>
          <target state="translated">したがって、サイプレスの&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get&lt;/code&gt; &lt;/a&gt;コマンドはよりスマートで、アプリケーションが更新される可能性があることを期待する必要があります。 &lt;code&gt;cy.get()&lt;/code&gt; は、アプリケーションのDOMを照会セレクタに一致する要素を見つけ、それを次の主張をしようとします（私たちの場合は &lt;code&gt;should('have.length', 2)&lt;/code&gt; 見つかった要素のリストに対して）。</target>
        </trans-unit>
        <trans-unit id="6c82e6dd86807ee3db07e3c82bec1ae1ce00b08b" translate="yes" xml:space="preserve">
          <source>Time</source>
          <target state="translated">Time</target>
        </trans-unit>
        <trans-unit id="fb377762792866dda43ce836874a2f28a7e96eac" translate="yes" xml:space="preserve">
          <source>Time Inputs</source>
          <target state="translated">時間入力</target>
        </trans-unit>
        <trans-unit id="88dc2535a499ed3b3baa756d368f078268ecf304" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.blur()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.blur()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e964b583c6245a8054356ca2602db72f45be6dee" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.check()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.check()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8714d68e6a41993a7a02e0d2ef5349b3e22bee97" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.children()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.children()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42766190d5f779a4954bcbb9d0224bd6fdb40b0d" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.clear()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.clear()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65268e932e8c9b1e866d2e17a080138ae6a60d70" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.click()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.click()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c7ab1a4adedb3f88bd7975a6d8cacf2ae95686c" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.closest()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.closest()&lt;/code&gt; を前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1304e9c7f6886fd442252d07b899ac84222857a9" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.contains()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.contains()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="420d4a0dfd4eb785a630b5557178281d091b5322" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.dblclick()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.dblclick()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e74f719ac6b1951693dfc64835b6fb3446d51a6" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.eq()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.eq()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a43fc4e1662ada497daff7acee2c0536b65e19f" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.filter()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.filter()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="388def00bf32877141ecfc44a3a2b9dc39a85f01" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.find()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.find()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a6b781cd6bef6b4d558024a0c641b2fc1c3d915" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.first()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.first()&lt;/code&gt; の前に解決するには&lt;a href=&quot;#Timeouts&quot;&gt;、タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db750ae3c2ed952c29a8422390030149b1cc6750" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.focus()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.focus()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="165f56b81fc569b196c1a161d610591ddce3b2e5" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.last()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.last()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5be1fbad6d7e9ad23221c675719e687049574f88" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.next()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.next()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ec5b908c2803245b687f0838f5eb4acc14c5078" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.nextAll()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.nextAll()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c4f6affa595413b128383e184ff26391c9d4d2c" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.nextUntil()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.nextUntil()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a054f442cd6beddb622e8e8b413cf8b37c68671" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.not()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.not()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5549ec7792821c25ef4654b7a284633c02aa8d96" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.parent()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.parent()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d618b75427451f917b68090a20cd882d8902c37" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.parents()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.parents()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49afe551ecca44d819db4bb4320d50434717f654" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.parentsUntil()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.parentsUntil()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2cfdb0e942557ddb11e9cca3de6cb6c7df1587fe" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.prev()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.prev()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="410a3e98bfe875fe057e50db80a7c80bb5f99cb9" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.prevAll()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.prevAll()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99f468fc82bed12efc1d6260bca2dbcccf0ad488" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.prevUntil()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.prevUntil()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b73a9bc8db50f3af07dc4c4cd94bb2474eeff58b" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.screenshot()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.screenshot()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="584ccb8fd673724e5045b7e6c5809fa6a7566382" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.scrollIntoView()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.scrollIntoView()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b09e275d45641fc6631c2bbbd2c89d02423a232" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.scrollTo()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.scrollTo()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de788277124c1cf9010adfd939cf84ed676c94ab" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.select()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.select()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65aa08d31a1e48f8a51ac5984a927546fd516295" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.siblings()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.siblings()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d3880cb58a04fb6b7a625660713643f33416ab4" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.spread()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.spread()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc89004ffc7de6417ea577a496ca395776e25bad" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.submit()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.submit()&lt;/code&gt; 前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4117b83b56d69fca2378861d045a33b6ce1b0ce" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.then()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.then()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0cf637f982bf1b2da1a81d816c3139428f1bf30" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.trigger()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.trigger()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b5c89f7a8fe1531f08b84d61ecc6842ed5158df" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.type()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.type()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd67bc722544edc6f172216ff8d9bd7c5826a064" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.uncheck()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;.uncheck()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2c5c4ec69581238a100de43d5af9dddf3d5563d" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.clearCookie()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.clearCookie()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4053ef4b697063b4748025fa77e497c4f331855" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.clearCookies()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.clearCookies()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3d6db5918d4f148887a0e3c95ce9f9b6ff011ce" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.document()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.document()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e75155a30f951accc30abc04aeedc4275825b60c" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.exec()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.exec()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="352b3ef87cfaf15c14d8a1c3e35bbbaf26b527b1" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.fixture()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.fixture()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0bf773b6fc1b29d34746ddda1de614cb59aa805d" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.focused()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.focused()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e3b71d0171d3d10899909459a165c2dc1af0e2f" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.get()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.get()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53b1fe4a9c07e99e385dcf0404d30fedf5854e01" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.getCookie()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.getCookie()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="505e9a66550a11fc305c7683ffd0c1c2b5b20521" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.getCookies()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.getCookies()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53ff75ff1641cbdbc2e36036c0dd13e1145beaa2" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.go()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.go()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8bd35228efe7bb55db2782771cd3032c54d12fc" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.hash()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.hash()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9eab7aa933d4d9be345ef1205e5b365b2e535fa8" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.location()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.location()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb4c680019f6d8740c8f5bb74deea7d37a9a6921" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.readFile()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.readFile()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aea5e14348cc5c6d94364feec8c429d8d62118cf" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.reload()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.reload()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6e78c691f4793cade51b7c754c1635dce547fef" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.request()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.request()&lt;/code&gt; を前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1eac61a26416247dab8c13a4179f97bf42e600f" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.root()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.root()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6784df3d3f8f434396c622aba69e10a5fe3178f" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.setCookie()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.setCookie()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63095a61eabe65c5fbfcd67ae7faf8c0177fa798" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.task()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.task()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a43ea5f07f0780bd49601af102865e8166ec4795" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.title()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.title()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b5e67ea51611f1769bfc9a11b1f4203b0706b07" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.url()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.url()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3fa63bd72e57894dc0b1ac8d09273c67d54a64f" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.visit()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.visit()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0cd89775a57ef2c3eca328667913bd52968cdf8b" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.wait()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.wait()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e7c4a53d839c7221e60163da8643405315c31ee4" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.window()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.window()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3525850b0ceddc318ca744537e813b31ef3ec47" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.wrap()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">待つ時間 &lt;code&gt;cy.wrap()&lt;/code&gt; の前に解決するために&lt;a href=&quot;#Timeouts&quot;&gt;タイムアウト&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="534f9712426325b6e244c8d63eebb857c08f63fa" translate="yes" xml:space="preserve">
          <source>Time travel</source>
          <target state="translated">タイムトラベル</target>
        </trans-unit>
        <trans-unit id="0d8585da73a6dab1f6352a0b062f08dc502b59da" translate="yes" xml:space="preserve">
          <source>Time traveling snapshots now preserve the styles of empty &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tags with programmatically inserted CSS rules. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1226&quot;&gt;#1226&lt;/a&gt;.</source>
          <target state="translated">タイムトラベルスナップショットは、プログラムで挿入されたCSSルールを使用して、空の &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; タグのスタイルを保持するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1226&quot;&gt;＃1226を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="95e7882d490e20f536a21a152bb7b88fca473d5c" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait for &lt;code&gt;page transition events&lt;/code&gt; or &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/go&quot;&gt;&lt;code&gt;cy.go()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/reload&quot;&gt;&lt;code&gt;cy.reload()&lt;/code&gt;&lt;/a&gt; commands to fire their page &lt;code&gt;load&lt;/code&gt; events. Network requests are limited by the underlying operating system, and may still time out if this value is increased.</source>
          <target state="translated">&lt;code&gt;page transition events&lt;/code&gt; または&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/go&quot;&gt; &lt;code&gt;cy.go()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/reload&quot;&gt; &lt;code&gt;cy.reload()&lt;/code&gt; &lt;/a&gt;コマンドがページ &lt;code&gt;load&lt;/code&gt; イベントを起動するのを待つ時間（ミリ秒単位）。ネットワーク要求は、基盤となるオペレーティングシステムによって制限され、この値が増加した場合でもタイムアウトする可能性があります。</target>
        </trans-unit>
        <trans-unit id="8e4546e794b872db0e7f830414bef8b6efa3d2ef" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait for a system command to finish executing during a &lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; command</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt;コマンドの実行中にシステムコマンドの実行が完了するのを待機する時間（ミリ秒）</target>
        </trans-unit>
        <trans-unit id="0344658b2d3334f23a6c04344746702ee05e7675" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait for a task to finish executing during a &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; command</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt;コマンドの実行中にタスクの実行が完了するまで待機する時間（ミリ秒）</target>
        </trans-unit>
        <trans-unit id="3c5906723e4f284c898154f299293697c6bfcd46" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait for an XHR request to go out in a &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; command</source>
          <target state="translated">XHRリクエストが&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;コマンドで送信されるのを待つ時間（ミリ秒）</target>
        </trans-unit>
        <trans-unit id="6d1f46641205758c830e1f2ce073f3383d3a8c2d" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait until a response in a &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/getcookie&quot;&gt;&lt;code&gt;cy.getCookie()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/getcookies&quot;&gt;&lt;code&gt;cy.getCookies()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/setcookie&quot;&gt;&lt;code&gt;cy.setCookie()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/clearcookie&quot;&gt;&lt;code&gt;cy.clearCookie()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/clearcookies&quot;&gt;&lt;code&gt;cy.clearCookies()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; commands</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/getcookie&quot;&gt; &lt;code&gt;cy.getCookie()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/getcookies&quot;&gt; &lt;code&gt;cy.getCookies()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/setcookie&quot;&gt; &lt;code&gt;cy.setCookie()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/clearcookie&quot;&gt; &lt;code&gt;cy.clearCookie()&lt;/code&gt; &lt;/a&gt;応答まで待機する時間（ミリ秒単位）。 clearCookie（）、&lt;a href=&quot;../../api/commands/clearcookies&quot;&gt; &lt;code&gt;cy.clearCookies()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt;コマンド</target>
        </trans-unit>
        <trans-unit id="bcb9984691d12ff5b389e5efd5cbdee4b151c661" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait until most DOM based commands are considered timed out</source>
          <target state="translated">ほとんどの DOM ベースのコマンドがタイムアウトしたとみなされるまでの待ち時間。</target>
        </trans-unit>
        <trans-unit id="4182206cc797a1bcb67e79ac48df54d729afa0e6" translate="yes" xml:space="preserve">
          <source>Timeline View</source>
          <target state="translated">タイムラインビュー</target>
        </trans-unit>
        <trans-unit id="27a4f2c5a6aa7d957af2668e0ec53e32944aba26" translate="yes" xml:space="preserve">
          <source>Timeouts</source>
          <target state="translated">Timeouts</target>
        </trans-unit>
        <trans-unit id="b76904852aa459926a2540777944b33a445df8b2" translate="yes" xml:space="preserve">
          <source>Timeouts can be modified per command and this will affect all default assertions and any assertions chained after that command.</source>
          <target state="translated">タイムアウトはコマンドごとに変更することができ、これはすべてのデフォルトのアサーションと、そのコマンドの後にチェーンされたアサーションに影響します。</target>
        </trans-unit>
        <trans-unit id="c04ed1238a14de2b02d7fd14a7e9605bb1b10b96" translate="yes" xml:space="preserve">
          <source>Timestamps</source>
          <target state="translated">Timestamps</target>
        </trans-unit>
        <trans-unit id="c1ed8235cc72d513556db585f63b8b50c409da7a" translate="yes" xml:space="preserve">
          <source>To a human - if something changes 10ms or 100ms from now, we may not even notice this change and assume the state was always the same.</source>
          <target state="translated">人間にとっては、今から10ミリ秒後、100ミリ秒後に何かが変化しても、その変化に気づかず、常に同じ状態だったと思い込んでしまうかもしれません。</target>
        </trans-unit>
        <trans-unit id="27f0ffae9421d91f5eb31f78f9c0b061bfa92cc4" translate="yes" xml:space="preserve">
          <source>To a robot - even 10ms represents billions+ of clock cycles. The timescale difference is incredible.</source>
          <target state="translated">ロボットにとっては、10msであっても数十億以上のクロックサイクルに相当します。タイムスケールの違いは信じられないほどです。</target>
        </trans-unit>
        <trans-unit id="f08c1bb201c73b8dba3c1484535bd11c4ea25af7" translate="yes" xml:space="preserve">
          <source>To access the fixtures nested within the &lt;code&gt;images&lt;/code&gt; folder, include the folder in your &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;code&gt;images&lt;/code&gt; フォルダー内にネストされているフィクスチャーにアクセスするには、&lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt;コマンドにフォルダーを含めます。</target>
        </trans-unit>
        <trans-unit id="c9fed4e71db24e7c4149b57d7906a94f0e8a9eb6" translate="yes" xml:space="preserve">
          <source>To access what each Cypress command yields you use &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">各サイプレスコマンドの結果にアクセスするには、&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="1d143bbc2b45230f9eef594ce36d97ec57c0ced7" translate="yes" xml:space="preserve">
          <source>To accomplish the same thing in Powershell:</source>
          <target state="translated">Powershellで同じことを達成するために。</target>
        </trans-unit>
        <trans-unit id="166e710ba165eea3de8ec85b1e7054e579c0d1f5" translate="yes" xml:space="preserve">
          <source>To alias something you&amp;rsquo;d like to share use the &lt;a href=&quot;../../api/commands/as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">共有したいものにエイリアスを付けるには、&lt;a href=&quot;../../api/commands/as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt;コマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="b849f57310aa9d236088e30496763d15362e20a2" translate="yes" xml:space="preserve">
          <source>To blacklist a host:</source>
          <target state="translated">ホストをブラックリストに載せること。</target>
        </trans-unit>
        <trans-unit id="ae6908980609de5de702a7e380fd9f74d9923708" translate="yes" xml:space="preserve">
          <source>To bypass the proxy for certain domains, a &lt;code&gt;NO_PROXY&lt;/code&gt; environment variable can be set to a comma-separated list of domain names to not proxy traffic for. By default, traffic to &lt;code&gt;localhost&lt;/code&gt; will not be proxied.</source>
          <target state="translated">特定のドメインのプロキシをバイパスするには、 &lt;code&gt;NO_PROXY&lt;/code&gt; 環境変数を、トラフィックをプロキシしないドメイン名のコンマ区切りリストに設定できます。デフォルトでは、 &lt;code&gt;localhost&lt;/code&gt; へのトラフィックはプロキシされません。</target>
        </trans-unit>
        <trans-unit id="323c865f1f1a3f1f1618192abd40f0f9dd096a76" translate="yes" xml:space="preserve">
          <source>To calculate whether an element is animating we check the current and previous positions of the element itself. If the distance exceeds the &lt;a href=&quot;../references/configuration#Animations&quot;&gt;&lt;code&gt;animationDistanceThreshold&lt;/code&gt;&lt;/a&gt;, then we consider the element to be animating.</source>
          <target state="translated">要素がアニメーション化しているかどうかを計算するには、要素自体の現在の位置と以前の位置を確認します。距離が&lt;a href=&quot;../references/configuration#Animations&quot;&gt; &lt;code&gt;animationDistanceThreshold&lt;/code&gt; &lt;/a&gt;を超える場合、要素はアニメーションであると見なされます。</target>
        </trans-unit>
        <trans-unit id="ac0e341c5c9460191beed1f6898bcc274484d0fe" translate="yes" xml:space="preserve">
          <source>To calculate whether an element is animating we take a sample of the last positions it was at and calculate the element&amp;rsquo;s slope. You might remember this from 8th grade algebra. 😉</source>
          <target state="translated">要素がアニメーション化しているかどうかを計算するには、要素があった最後の位置のサンプルを取り、要素の傾きを計算します。8年生の代数からこれを覚えているかもしれません。😉</target>
        </trans-unit>
        <trans-unit id="68b42cd41f72ca3ee00ee6ce82b38a9bb6118f00" translate="yes" xml:space="preserve">
          <source>To catch a single uncaught exception</source>
          <target state="translated">捕まえられない例外を1つキャッチするには</target>
        </trans-unit>
        <trans-unit id="bb659afe0807004757a7b576c8e20bda29a5fd70" translate="yes" xml:space="preserve">
          <source>To clear App Data</source>
          <target state="translated">アプリデータをクリアするには</target>
        </trans-unit>
        <trans-unit id="7825fc1e2b2f652c63c26c24c688acf9cc0e17cb" translate="yes" xml:space="preserve">
          <source>To confirm this, let&amp;rsquo;s remove the artificial delay to see what&amp;rsquo;s happening in the passing test.</source>
          <target state="translated">これを確認するために、人為的な遅延を削除して、合格したテストで何が起こっているかを確認します。</target>
        </trans-unit>
        <trans-unit id="0b6146f951a93d278cd3d940af0923b48d8c93c9" translate="yes" xml:space="preserve">
          <source>To disable parsing special characters sequences, set the &lt;code&gt;parseSpecialCharSequences&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">特殊文字シーケンスの解析を無効にするには、 &lt;code&gt;parseSpecialCharSequences&lt;/code&gt; オプションを &lt;code&gt;false&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="37eac453f8695de56c3215e3eaae120d0cf07f2b" translate="yes" xml:space="preserve">
          <source>To do this - you would need a background process outside of the browser to make the underlying WebSocket connection that you can then communicate with and control.</source>
          <target state="translated">これを行うには、ブラウザの外にバックグラウンドプロセスが必要で、通信して制御できるWebSocket接続を作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="6e06070a0e4d6d166551de0e62761dab42de8bea" translate="yes" xml:space="preserve">
          <source>To express this in Cypress you&amp;rsquo;d write:</source>
          <target state="translated">これをサイプレスで表現するには、次のように記述します。</target>
        </trans-unit>
        <trans-unit id="83049f38a853aca72cb58f3e189b3b2b3721623e" translate="yes" xml:space="preserve">
          <source>To express this with an assertion you&amp;rsquo;d write:</source>
          <target state="translated">これをアサーションで表現するには、次のように記述します。</target>
        </trans-unit>
        <trans-unit id="96b23fbe50516013b6e01e4b9a35c1256f514102" translate="yes" xml:space="preserve">
          <source>To find this element by its contents, we&amp;rsquo;ll use &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この要素をその内容で見つけるには、&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="149e9bbd69575b3273720fd628fbb128987d85a2" translate="yes" xml:space="preserve">
          <source>To fix this error, follow instructions on &lt;a href=&quot;../guides/continuous-integration#Caching&quot;&gt;caching the cypress binary in CI&lt;/a&gt;, then bump the version of your CI cache to ensure a clean build.</source>
          <target state="translated">このエラーを修正するに&lt;a href=&quot;../guides/continuous-integration#Caching&quot;&gt;は、サイプレスバイナリをCI&lt;/a&gt;にキャッシュする手順に従い、CIキャッシュのバージョンをバンプして、クリーンビルドを確実にします。</target>
        </trans-unit>
        <trans-unit id="7575ddba789b6b072835dcb92594fc7e2c7b843d" translate="yes" xml:space="preserve">
          <source>To get around these restrictions, Cypress implements some strategies involving JavaScript code, the browser&amp;rsquo;s internal APIs, and &lt;code&gt;network proxying&lt;/code&gt; to &lt;em&gt;play by the rules&lt;/em&gt; of &lt;code&gt;same-origin policy&lt;/code&gt;. It is our goal to fully automate the application under test without you needing to modify your application&amp;rsquo;s code - and we are &lt;em&gt;mostly&lt;/em&gt; able to do this.</source>
          <target state="translated">これらの制限を回避するために、サイプレスはJavaScriptコード、ブラウザーの内部API、および &lt;code&gt;same-origin policy&lt;/code&gt; &lt;em&gt;ルール&lt;/em&gt;で&lt;em&gt;再生する&lt;/em&gt; &lt;code&gt;network proxying&lt;/code&gt; を含むいくつかの戦略を実装しています。アプリケーションのコードを変更する必要なしに、テスト中のアプリケーションを完全に自動化することが私たちの目標です-そして私たちは&lt;em&gt;ほとんど&lt;/em&gt;これを行うこと&lt;em&gt;が&lt;/em&gt;できます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9aeb9503bd3439b8e356bd49941cec1a2eb97780" translate="yes" xml:space="preserve">
          <source>To get started, open up this file:</source>
          <target state="translated">始めるには、このファイルを開きます。</target>
        </trans-unit>
        <trans-unit id="fb9adb651d7d95d104ed2f1f7d71628ecf9bd8f2" translate="yes" xml:space="preserve">
          <source>To handle code coverage collected during each test, we created a &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;&lt;code&gt;@cypress/code-coverage&lt;/code&gt;&lt;/a&gt; Cypress plugin. It merges coverage from each test and saves the combined result. It also calls &lt;code&gt;nyc&lt;/code&gt; (its peer dependency) to generate static HTML reports for human consumption.</source>
          <target state="translated">各テスト中に収集されたコードカバレッジを処理するために、&lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt; &lt;code&gt;@cypress/code-coverage&lt;/code&gt; &lt;/a&gt;サイプレスプラグインを作成しました。各テストのカバレッジをマージし、組み合わせた結果を保存します。また、 &lt;code&gt;nyc&lt;/code&gt; （そのピア依存関係）を呼び出して、人間が使用する静的HTMLレポートを生成します。</target>
        </trans-unit>
        <trans-unit id="280f8c6479cffa347916d707a00e83bf7e38e0ae" translate="yes" xml:space="preserve">
          <source>To help with these common challenges, the Selector Playground automatically prefers certain &lt;code&gt;data-*&lt;/code&gt; attributes when determining a unique selector.</source>
          <target state="translated">これらの一般的な課題を解決するために、セレクタープレイグラウンドは、一意のセレクターを決定するときに、特定の &lt;code&gt;data-*&lt;/code&gt; 属性を自動的に優先します。</target>
        </trans-unit>
        <trans-unit id="1e93657473d313debb6683ed7ed730e3c3c28a66" translate="yes" xml:space="preserve">
          <source>To illustrate this, let&amp;rsquo;s revisit that list of actions and expose some of the hidden &lt;strong&gt;✨ magic ✨&lt;/strong&gt; Cypress does for us at each step:</source>
          <target state="translated">これを説明するために、そのアクションのリストに&lt;strong&gt;戻り、&lt;/strong&gt;サイプレスが各ステップで行う非表示の&lt;strong&gt;✨マジック✨の&lt;/strong&gt;一部を公開します。</target>
        </trans-unit>
        <trans-unit id="2203f011ae04f2af8d4f15c66e1819faf35fc910" translate="yes" xml:space="preserve">
          <source>To illustrate this, let&amp;rsquo;s take a very simple example of trying to conditionally test unstable state.</source>
          <target state="translated">これを説明するために、不安定な状態を条件付きでテストする非常に簡単な例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="b793cfab7761a6eace3a477332c312e87ac064ac" translate="yes" xml:space="preserve">
          <source>To include code before your test files, set the &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; path. By default, &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; is set to look for one of the following files:</source>
          <target state="translated">テストファイルの前にコードを含めるには、&lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; &lt;/a&gt;パスを設定します。デフォルトでは、&lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; &lt;/a&gt;は次のいずれかのファイルを検索するように設定されています。</target>
        </trans-unit>
        <trans-unit id="868c314890aef6646e5ee278ea0f8f20f34d6f59" translate="yes" xml:space="preserve">
          <source>To install this pre-release binary on Mac, you need to set the &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; environment variable to the shown &lt;code&gt;https://cdn.cypress.io/beta/binary/.../cypress.zip&lt;/code&gt; value and run &lt;code&gt;npm install https://cdn.cypress.io/beta/npm/3.3.2/.../cypress.tgz&lt;/code&gt;. The command in the terminal will be:</source>
          <target state="translated">このプレリリースバイナリをMacにインストールするには、 &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; 環境変数を表示されている &lt;code&gt;https://cdn.cypress.io/beta/binary/.../cypress.zip&lt;/code&gt; 値に設定し、 &lt;code&gt;npm install https://cdn.cypress.io/beta/npm/3.3.2/.../cypress.tgz&lt;/code&gt; を実行する必要があります。 /cdn.cypress.io/beta/npm/3.3.2/.../cypress.tgz。端末のコマンドは次のようになります。</target>
        </trans-unit>
        <trans-unit id="f3723db383e31a5a33ea33d689ddb173481ad5c9" translate="yes" xml:space="preserve">
          <source>To instrument the application code located in your &lt;code&gt;src&lt;/code&gt; folder and save it in an &lt;code&gt;instrumented&lt;/code&gt; folder use the following command:</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; フォルダーにあるアプリケーションコードをインストルメント化し、 &lt;code&gt;instrumented&lt;/code&gt; フォルダーに保存するには、次のコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="48e22197bbbb6bd1d59b8937f02a4c9bca6a8bea" translate="yes" xml:space="preserve">
          <source>To interact with a range input (slider), we need to set its value and</source>
          <target state="translated">範囲入力(スライダー)と対話するには、その値を設定して</target>
        </trans-unit>
        <trans-unit id="c74ecb884f3f0bba1023c924193577e2a3820fc9" translate="yes" xml:space="preserve">
          <source>To keep a modifier activated between commands, specify &lt;code&gt;{release: false}&lt;/code&gt; in the options.</source>
          <target state="translated">コマンド間で修飾子をアクティブにしておくには、オプションで &lt;code&gt;{release: false}&lt;/code&gt; 指定します。</target>
        </trans-unit>
        <trans-unit id="dfc215f81a144908f83ffd1f95ded8c2bbc16ce1" translate="yes" xml:space="preserve">
          <source>To make a browser installed at a different path be auto-detected, create a symbolic link using &lt;code&gt;mklink&lt;/code&gt; in the location that Cypress expects to find your browser.</source>
          <target state="translated">別のパスにインストールされたブラウザーを自動検出するには、サイプレスがブラウザーを検出することを期待している場所に &lt;code&gt;mklink&lt;/code&gt; を使用してシンボリックリンクを作成します。</target>
        </trans-unit>
        <trans-unit id="735f3bce713d52a0668f239c7df40905de18c181" translate="yes" xml:space="preserve">
          <source>To make these changes permanent, you can add these commands to your shell&amp;rsquo;s &lt;code&gt;~/.profile&lt;/code&gt; (&lt;code&gt;~/.zsh_profile&lt;/code&gt;, &lt;code&gt;~/.bash_profile&lt;/code&gt;, etc.) to run them on every login.</source>
          <target state="translated">これらの変更を永続的にするには、これらのコマンドをシェルの &lt;code&gt;~/.profile&lt;/code&gt; （ &lt;code&gt;~/.zsh_profile&lt;/code&gt; 、 &lt;code&gt;~/.bash_profile&lt;/code&gt; など）に追加して、ログインごとにそれらを実行します。</target>
        </trans-unit>
        <trans-unit id="9892449df8e876b379575308ba31dcb1d0760ee9" translate="yes" xml:space="preserve">
          <source>To make these changes permanent, you can add this command to your shell&amp;rsquo;s &lt;code&gt;~/.profile&lt;/code&gt; (&lt;code&gt;~/.zsh_profile&lt;/code&gt;, &lt;code&gt;~/.bash_profile&lt;/code&gt;, etc.) to run them on every login.</source>
          <target state="translated">これらの変更を永続的にするには、このコマンドをシェルの &lt;code&gt;~/.profile&lt;/code&gt; （ &lt;code&gt;~/.zsh_profile&lt;/code&gt; 、 &lt;code&gt;~/.bash_profile&lt;/code&gt; など）に追加して、ログインごとに変更を実行できます。</target>
        </trans-unit>
        <trans-unit id="fd116a294ad0316afe5fbd830ef0fa68c9d2bff9" translate="yes" xml:space="preserve">
          <source>To manually release modifiers within a test after using &lt;code&gt;{release: false}&lt;/code&gt;, use another &lt;code&gt;type&lt;/code&gt; command and the modifier will be released after it.</source>
          <target state="translated">&lt;code&gt;{release: false}&lt;/code&gt; を使用した後にテスト内で修飾子を手動で解放するには、別の &lt;code&gt;type&lt;/code&gt; コマンドを使用すると、修飾子が解放されます。</target>
        </trans-unit>
        <trans-unit id="33f0c635785475347603f7c31f0d76543d069e7e" translate="yes" xml:space="preserve">
          <source>To match the behavior of web applications, Cypress is asynchronous and relies on timeouts to know when to stop waiting on an app to get into the expected state. Timeouts can be configured globally, or on a per-command basis.</source>
          <target state="translated">ウェブアプリケーションの動作に合わせて、Cypress は非同期で、期待される状態になるまでアプリの待機を止めるタイミングを知るためにタイムアウトに依存しています。タイムアウトは、グローバルに設定することも、コマンドごとに設定することもできます。</target>
        </trans-unit>
        <trans-unit id="a66861b2e0d92465797b2993cbfce9943d8be040" translate="yes" xml:space="preserve">
          <source>To modify configuration, you return an object from your plugins file exported function.</source>
          <target state="translated">設定を変更するには、プラグインファイルのエクスポート関数からオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="25fefb4701fe7ec06e7a1368d6ea6b43a7bd6fdf" translate="yes" xml:space="preserve">
          <source>To open the Selector Playground, click the  button next to the URL at the top of the runner. Hover over elements in your app to preview a unique selector for that element in the tooltip.</source>
          <target state="translated">セレクタのプレイグラウンドを開くには、ランナーの上部にあるURLの横にあるボタンをクリックします。アプリ内の要素にカーソルを合わせると、ツールチップでその要素に固有のセレクタがプレビューされます。</target>
        </trans-unit>
        <trans-unit id="cec5c4340ac471856a673e1e2a1916fda7189d74" translate="yes" xml:space="preserve">
          <source>To opt out of sending exception data on Linux or macOS, run the following command in a terminal before installing Cypress:</source>
          <target state="translated">LinuxやmacOSで例外データの送信をオプトアウトするには、Cypressをインストールする前にターミナルで以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="794937b9722bc56091f0141e5ef3d4d8b91bd73c" translate="yes" xml:space="preserve">
          <source>To opt out of sending exception data on Windows, run the following command in the Command Prompt before installing Cypress:</source>
          <target state="translated">Windowsで例外データの送信をオプトアウトするには、Cypressをインストールする前にコマンドプロンプトで以下のコマンドを実行してください。</target>
        </trans-unit>
        <trans-unit id="a267658a2fbeafb0312a4118f59352ac79d90469" translate="yes" xml:space="preserve">
          <source>To override the default cache folder, set the environment variable &lt;code&gt;CYPRESS_CACHE_FOLDER&lt;/code&gt;.</source>
          <target state="translated">デフォルトのキャッシュフォルダーを上書きするには、環境変数 &lt;code&gt;CYPRESS_CACHE_FOLDER&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="7ae5e98dfbf01bb2181d836a5d6ceb509c86bd19" translate="yes" xml:space="preserve">
          <source>To override the element that is yielded we can pass &amp;lsquo;ul&amp;rsquo; as the selector.</source>
          <target state="translated">生成される要素をオーバーライドするには、セレクターとして 'ul'を渡します。</target>
        </trans-unit>
        <trans-unit id="e43dc7604ee983bf4ce996d64bb464513deece91" translate="yes" xml:space="preserve">
          <source>To prevent the Cypress Test Runner from exiting after running tests in a spec file, use &lt;code&gt;--no-exit&lt;/code&gt;.</source>
          <target state="translated">スペックファイルでテストを実行した後にサイプレステストランナーが終了しないようにするには、 &lt;code&gt;--no-exit&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="73ba966459bf9c759ae4852b9765ed45f475f18e" translate="yes" xml:space="preserve">
          <source>To record tests:</source>
          <target state="translated">テストを記録すること。</target>
        </trans-unit>
        <trans-unit id="eed145b63831c1f5dd69fcc09b00d2c83cc1ab51" translate="yes" xml:space="preserve">
          <source>To run a command, you&amp;rsquo;ll need to prefix each command in order to properly locate the cypress executable.</source>
          <target state="translated">コマンドを実行するには、サイプレスの実行可能ファイルを適切に見つけるために、各コマンドにプレフィックスを付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="013480901aab9a34c9246bf54a2a68fdb6b17044" translate="yes" xml:space="preserve">
          <source>To run a specified suite or test, append &lt;code&gt;.only&lt;/code&gt; to the function. All nested suites will also be executed. This gives us the ability to run one test at a time and is the recommended way to write a test suite.</source>
          <target state="translated">指定したスイートまたはテストを実行するには、関数に &lt;code&gt;.only&lt;/code&gt; を追加します。ネストされたすべてのスイートも実行されます。これにより、一度に1つのテストを実行でき、テストスイートを作成するための推奨方法です。</target>
        </trans-unit>
        <trans-unit id="a4a27f3ee030ba3bdf456be284f4b1d13fad99e9" translate="yes" xml:space="preserve">
          <source>To save the &lt;code&gt;CYPRESS_CRASH_REPORTS&lt;/code&gt; variable for use in all new shells, use &lt;code&gt;setx&lt;/code&gt;:</source>
          <target state="translated">保存するには &lt;code&gt;CYPRESS_CRASH_REPORTS&lt;/code&gt; のすべての新しいシェルで使用するための変数を、使用が &lt;code&gt;setx&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1515397953b9965da8ef352a2a18a8169cc62ebd" translate="yes" xml:space="preserve">
          <source>To save the &lt;code&gt;HTTP_PROXY&lt;/code&gt; variable and use your proxy for all new shells, use &lt;code&gt;setx&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;HTTP_PROXY&lt;/code&gt; 変数を保存し、すべての新しいシェルにプロキシを使用するには、 &lt;code&gt;setx&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="670b3a49d3d07d27dc07cc48f7d6f1c265d954e7" translate="yes" xml:space="preserve">
          <source>To see a working example of this please check out our &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Stubbing-and-spying&quot;&gt;Stubbing Google Analytics Recipe&lt;/a&gt;.</source>
          <target state="translated">これの実際の例を確認するには、&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Stubbing-and-spying&quot;&gt;GoogleのStubbing Google Analyticsレシピ&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="d587950df7426b25ea8703c4e89ffe22361a63ca" translate="yes" xml:space="preserve">
          <source>To see an example of every command used in Cypress, open the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink/blob/master/cypress/integration/examples&quot;&gt;&lt;code&gt;example&lt;/code&gt; folder&lt;/a&gt; within your &lt;code&gt;cypress/integration&lt;/code&gt; folder.</source>
          <target state="translated">サイプレスで使用されるすべてのコマンドの&lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink/blob/master/cypress/integration/examples&quot;&gt; &lt;code&gt;example&lt;/code&gt; 表示するに&lt;/a&gt;は、 &lt;code&gt;cypress/integration&lt;/code&gt; フォルダー内のサンプルフォルダーを開きます。</target>
        </trans-unit>
        <trans-unit id="53615b42ca9ca8d0e3552778d8ac61c80f14fc6e" translate="yes" xml:space="preserve">
          <source>To see debug logs from the browser launcher, run Cypress with the &lt;code&gt;DEBUG&lt;/code&gt; environment variable set to &lt;code&gt;cypress:launcher&lt;/code&gt;.</source>
          <target state="translated">ブラウザーランチャーからデバッグログを表示するには、 &lt;code&gt;DEBUG&lt;/code&gt; 環境変数を &lt;code&gt;cypress:launcher&lt;/code&gt; に設定してサイプレスを実行します。</target>
        </trans-unit>
        <trans-unit id="7472673057787f324c25909db2c45c497ecc45b4" translate="yes" xml:space="preserve">
          <source>To see the summary of the code coverage after tests run, run the command below.</source>
          <target state="translated">テスト実行後のコードカバレッジの概要を見るには、以下のコマンドを実行してください。</target>
        </trans-unit>
        <trans-unit id="7ab077afaa1dce1ee157f039e3720c1937173a77" translate="yes" xml:space="preserve">
          <source>To see this in action we&amp;rsquo;ve set up an &lt;a href=&quot;https://github.com/cypress-io/cypress-test-nested-projects&quot;&gt;example repo to demonstrate this here&lt;/a&gt;.</source>
          <target state="translated">この動作を確認するために、&lt;a href=&quot;https://github.com/cypress-io/cypress-test-nested-projects&quot;&gt;サンプルのリポジトリを&lt;/a&gt;設定して、これをここで説明します。</target>
        </trans-unit>
        <trans-unit id="6f94d09a60da89e04681d4276d5a0fe9d81dccec" translate="yes" xml:space="preserve">
          <source>To send a request that looks like a user submitting an HTML form, use a &lt;code&gt;POST&lt;/code&gt; method with a &lt;code&gt;body&lt;/code&gt; containing the form values:</source>
          <target state="translated">ユーザーがHTMLフォームを送信しているように見えるリクエストを送信するには、フォームの値を含む &lt;code&gt;body&lt;/code&gt; &lt;code&gt;POST&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="a68c9c42aa0347cffc49e0999f50ebb53cef1a08" translate="yes" xml:space="preserve">
          <source>To set up in &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; you can open &lt;code&gt;Preferences / Settings / User Settings&lt;/code&gt; and add the &lt;code&gt;json.schemas&lt;/code&gt; property.</source>
          <target state="translated">&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;で設定するには、 &lt;code&gt;Preferences / Settings / User Settings&lt;/code&gt; 開き、 &lt;code&gt;json.schemas&lt;/code&gt; プロパティを追加します。</target>
        </trans-unit>
        <trans-unit id="a077f5045361c256e6cac58d84b178fdec6d7fcc" translate="yes" xml:space="preserve">
          <source>To set up your project to record, you must use the &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;Test Runner&lt;/a&gt;.</source>
          <target state="translated">記録するプロジェクトを設定するには、&lt;a href=&quot;../core-concepts/test-runner&quot;&gt;テストランナーを&lt;/a&gt;使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="f50a8885dc2e7d8b7a13ff6b5b5613de43da6f1d" translate="yes" xml:space="preserve">
          <source>To set your proxy on Linux or macOS, run the following command in a terminal before running Cypress:</source>
          <target state="translated">LinuxやmacOSでプロキシを設定するには、Cypressを実行する前にターミナルで以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="87c301e7efe5feed906c58498d9b6084df2b4166" translate="yes" xml:space="preserve">
          <source>To show the retries, I increased the application&amp;rsquo;s artificial delay to 500ms. The test now always passes because the entire selector is retried. It finds 2 list elements when the second &amp;ldquo;todo B&amp;rdquo; is added to the DOM.</source>
          <target state="translated">再試行を示すために、アプリケーションの人為的な遅延を500ミリ秒に増やしました。セレクター全体が再試行されるため、テストは常に成功します。2番目の「todo B」がDOMに追加されると、2つのリスト要素が見つかります。</target>
        </trans-unit>
        <trans-unit id="4291d1c60d263d83cff416f4da4bcb1899282fde" translate="yes" xml:space="preserve">
          <source>To simulate drag and drop using jQuery UI sortable requires &lt;code&gt;pageX&lt;/code&gt; and &lt;code&gt;pageY&lt;/code&gt; properties along with &lt;code&gt;which:1&lt;/code&gt;.</source>
          <target state="translated">jQueryのUIのソートを使用してシミュレートドラッグアンドドロップする必要が &lt;code&gt;pageX&lt;/code&gt; と &lt;code&gt;pageY&lt;/code&gt; と共にプロパティを &lt;code&gt;which:1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eee01f6cf3dbba7396887d91677450fb2ea867e2" translate="yes" xml:space="preserve">
          <source>To skip a specified suite or test, append &lt;code&gt;.skip()&lt;/code&gt; to the function. All nested suites will also be skipped.</source>
          <target state="translated">指定したスイートまたはテストをスキップするには、関数に &lt;code&gt;.skip()&lt;/code&gt; を追加します。ネストされたすべてのスイートもスキップされます。</target>
        </trans-unit>
        <trans-unit id="b437c543bad4a122afe1beac2ea867ee06e88096" translate="yes" xml:space="preserve">
          <source>To specify the path to your custom reporter:</source>
          <target state="translated">カスタムレポーターのパスを指定するには</target>
        </trans-unit>
        <trans-unit id="88bd7ce63c929294df0132ff751a1d41b6d7921e" translate="yes" xml:space="preserve">
          <source>To start writing tests for your app, create a new file like &lt;code&gt;app_spec.js&lt;/code&gt; within your &lt;code&gt;cypress/integration&lt;/code&gt; folder. Refresh your tests list in the Cypress Test Runner and your new file should have appeared in the list.</source>
          <target state="translated">アプリのテストの記述を開始するには、 &lt;code&gt;cypress/integration&lt;/code&gt; フォルダー内に &lt;code&gt;app_spec.js&lt;/code&gt; のような新しいファイルを作成します。サイプレステストランナーのテストリストを更新すると、新しいファイルがリストに表示されます。</target>
        </trans-unit>
        <trans-unit id="950444ca57da47550b4f8b5832eb357a6c71df84" translate="yes" xml:space="preserve">
          <source>To start, you will need to understand that &lt;em&gt;not all browsers expose a way to turn off web security&lt;/em&gt;. Some do, some don&amp;rsquo;t. If you rely on disabling web security, you will not be able to run tests on browsers that do not support this feature.</source>
          <target state="translated">最初に、&lt;em&gt;すべてのブラウザがWebセキュリティをオフにする方法を公開して&lt;/em&gt;いる&lt;em&gt;わけではない&lt;/em&gt;ことを理解する必要があります。する人もいれば、しない人もいます。Webセキュリティの無効化に依存している場合、この機能をサポートしていないブラウザでテストを実行することはできません。</target>
        </trans-unit>
        <trans-unit id="13fafa856440c6a38ba04ec2d1e83bc95ec85618" translate="yes" xml:space="preserve">
          <source>To support the community, we provide the Open Source (OSS) plan for public projects to take advantage of our Dashboard Service with unlimited test runs. To qualify, your project needs just two things:</source>
          <target state="translated">コミュニティをサポートするために、公開プロジェクト向けにオープンソース (OSS)プランを提供しており、無制限のテスト実行が可能なダッシュボード サービスを利用することができます。参加資格を得るためには、プロジェクトに必要なものは次の2つだけです。</target>
        </trans-unit>
        <trans-unit id="45bf632c93a4737e0da49dc3f5a9bba5b07149fa" translate="yes" xml:space="preserve">
          <source>To support this, the &lt;code&gt;body&lt;/code&gt; can be used as the DOM element to type into (even though it&amp;rsquo;s &lt;em&gt;not&lt;/em&gt; a focusable element).</source>
          <target state="translated">これをサポートするために、 &lt;code&gt;body&lt;/code&gt; を入力するDOM要素として使用できます（フォーカス可能な要素で&lt;em&gt;はありません&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="5b1ba27a47b44c5b0970d6270a933ef60bef07c8" translate="yes" xml:space="preserve">
          <source>To take a manual screenshot you can use the &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">手動でスクリーンショットを撮るには、&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt;コマンドを使用できます。</target>
        </trans-unit>
        <trans-unit id="a317b2f5ec7ac14b97b3278ddbdc24bb957817e9" translate="yes" xml:space="preserve">
          <source>To take this a step further - we don&amp;rsquo;t believe there is any use case for testing the browser&amp;rsquo;s native behavior. You should ask yourself why you are testing that clicking an &lt;code&gt;&amp;lt;a href=&quot;/foo&quot; target=&quot;_blank&quot;&amp;gt;&lt;/code&gt; opens a new tab. You already know that is what the browser is designed to do and you already know that it is triggered by the &lt;code&gt;target=&quot;_blank&quot;&lt;/code&gt; attribute.</source>
          <target state="translated">これをさらに一歩進めるために、ブラウザのネイティブ動作をテストするためのユースケースがあるとは考えていません。 &lt;code&gt;&amp;lt;a href=&quot;/foo&quot; target=&quot;_blank&quot;&amp;gt;&lt;/code&gt; をクリックすると新しいタブが開くことをテストする理由を自問する必要があります。これがブラウザの設計通りであり、 &lt;code&gt;target=&quot;_blank&quot;&lt;/code&gt; 属性によってトリガーされることがわかっています。</target>
        </trans-unit>
        <trans-unit id="7a19951de334ac134fe08f987204f27ef2263a85" translate="yes" xml:space="preserve">
          <source>To talk to your database or server you need to use the &lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; commands. That means you will need to expose a way to seed and setup your database. This really is not that hard, but it might take a bit more elbow grease than other testing tools written in your back end language.</source>
          <target state="translated">データベースまたはサーバーと&lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt;するには、cy.exec（）、&lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;コマンドを使用する必要があります。つまり、データベースをシードおよびセットアップする方法を公開する必要があります。これはそれほど難しいことではありませんが、バックエンド言語で作成された他のテストツールより少し手間がかかるかもしれません。</target>
        </trans-unit>
        <trans-unit id="0d4baba6acc840253c65d24d441dbe76c2944328" translate="yes" xml:space="preserve">
          <source>To test the redirection behavior of a login without a session, &lt;code&gt;cy.request&lt;/code&gt; can be used to check the &lt;code&gt;status&lt;/code&gt; and &lt;code&gt;redirectedToUrl&lt;/code&gt; property.</source>
          <target state="translated">セッションなしのログインのリダイレクト動作をテストするには、 &lt;code&gt;cy.request&lt;/code&gt; を使用して &lt;code&gt;status&lt;/code&gt; と &lt;code&gt;redirectedToUrl&lt;/code&gt; プロパティを確認できます。</target>
        </trans-unit>
        <trans-unit id="d36e314e0eb02212c53038b4e245b6ed49a11a8d" translate="yes" xml:space="preserve">
          <source>To test various page states - like an empty view, or a pagination view, you&amp;rsquo;d need to seed the server so that this state can be tested.</source>
          <target state="translated">空のビューやページ分割ビューなど、さまざまなページの状態をテストするには、この状態をテストできるようにサーバーをシードする必要があります。</target>
        </trans-unit>
        <trans-unit id="50736a91fc453dc589d887cd11e0c7b8a3aab115" translate="yes" xml:space="preserve">
          <source>To turn off all uncaught exception handling</source>
          <target state="translated">すべての捕捉されない例外処理をオフにするには</target>
        </trans-unit>
        <trans-unit id="281bd7f6d566d3602e82f8a0f3cc772f4e78f484" translate="yes" xml:space="preserve">
          <source>To use a preprocessor, you should bind to the &lt;code&gt;file:preprocessor&lt;/code&gt; event in your &lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;&lt;code&gt;pluginsFile&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">プリプロセッサーを使用するには、&lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt; &lt;code&gt;pluginsFile&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;file:preprocessor&lt;/code&gt; イベントにバインドする必要があります。</target>
        </trans-unit>
        <trans-unit id="a4ece7dad91c95c2e7184bf139e1d409ddcb0e72" translate="yes" xml:space="preserve">
          <source>To use encoding with other options, have your options object be your third parameter and include encoding there. This is the same behavior as &lt;a href=&quot;https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback&quot;&gt;&lt;code&gt;fs.writeFile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">他のオプションでエンコーディングを使用するには、オプションオブジェクトを3番目のパラメータにして、そこにエンコーディングを含めます。これは、&lt;a href=&quot;https://nodejs.org/api/fs.html#fs_fs_writefile_file_data_options_callback&quot;&gt; &lt;code&gt;fs.writeFile&lt;/code&gt; &lt;/a&gt;と同じ動作です。</target>
        </trans-unit>
        <trans-unit id="ce52352b9dbcc39142d4432d7734eb3260f38151" translate="yes" xml:space="preserve">
          <source>To use this command in CI, you need to install the browser you want - or use one of our &lt;a href=&quot;https://docs.cypress.io/examples/examples/docker.html&quot;&gt;docker images&lt;/a&gt;.</source>
          <target state="translated">CIでこのコマンドを使用するには、必要なブラウザーをインストールするか、&lt;a href=&quot;https://docs.cypress.io/examples/examples/docker.html&quot;&gt;Dockerイメージの&lt;/a&gt; 1つを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="5f9529f061057246b4a98b5dbaf9e1fe0edd1152" translate="yes" xml:space="preserve">
          <source>To verify this, replace &lt;code&gt;type&lt;/code&gt; with something not on the page, like &lt;code&gt;hype&lt;/code&gt;. You&amp;rsquo;ll notice the test goes red, but only after about 4 seconds!</source>
          <target state="translated">これを確認するには、 &lt;code&gt;type&lt;/code&gt; を &lt;code&gt;hype&lt;/code&gt; など、ページ上にないものに置き換えます。テストが赤くなることに気づくでしょうが、それは約4秒後になります。</target>
        </trans-unit>
        <trans-unit id="8f18646acfa001e9e7ee0dfef78b93bb6d530155" translate="yes" xml:space="preserve">
          <source>To work around the need to reference elements, Cypress has a feature &lt;a href=&quot;variables-and-aliases&quot;&gt;known as aliasing&lt;/a&gt;. Aliasing helps you to &lt;strong&gt;store&lt;/strong&gt; and &lt;strong&gt;save&lt;/strong&gt; element references for future use.</source>
          <target state="translated">要素を参照する必要性を回避するために、サイプレスには&lt;a href=&quot;variables-and-aliases&quot;&gt;エイリアシングと呼ばれる&lt;/a&gt;機能があります。エイリアシングは、あなたがするのに役立ちます&lt;strong&gt;保存&lt;/strong&gt;して&lt;strong&gt;保存&lt;/strong&gt;将来の使用のための要素参照。</target>
        </trans-unit>
        <trans-unit id="b27bb6561636dca80e8a3177f0d54cdcb40ebc9a" translate="yes" xml:space="preserve">
          <source>Today, we&amp;rsquo;ll take a narrow view of these steps and map them cleanly to Cypress commands:</source>
          <target state="translated">今日は、これらのステップを狭く見て、サイプレスのコマンドに明確にマッピングします：</target>
        </trans-unit>
        <trans-unit id="4fc60ef5d69079c451ea67854c51808d9ec41c01" translate="yes" xml:space="preserve">
          <source>Tooling</source>
          <target state="translated">Tooling</target>
        </trans-unit>
        <trans-unit id="eb92f4e5f8131821cb53910eeae7fc572064c286" translate="yes" xml:space="preserve">
          <source>Track, test, and block code execution based on network state.</source>
          <target state="translated">ネットワークの状態に基づいてコードの実行を追跡、テスト、ブロックします。</target>
        </trans-unit>
        <trans-unit id="c29cf0b245d77db1fd043ce15327dc512a994321" translate="yes" xml:space="preserve">
          <source>Trade offs</source>
          <target state="translated">トレードオフ</target>
        </trans-unit>
        <trans-unit id="dad674e48704a92597b8a13244ba1d8ca29324b7" translate="yes" xml:space="preserve">
          <source>Trade-offs</source>
          <target state="translated">Trade-offs</target>
        </trans-unit>
        <trans-unit id="9a5db15110ecc94db73756562537d207d8374306" translate="yes" xml:space="preserve">
          <source>Traditionally when writing &lt;code&gt;e2e&lt;/code&gt; tests using Selenium, before you automate the browser you do some kind of &lt;strong&gt;set up and tear down&lt;/strong&gt; on the server.</source>
          <target state="translated">従来、Seleniumを使用して &lt;code&gt;e2e&lt;/code&gt; テストを作成する場合、ブラウザーを自動化する前に、サーバーでなんらかの&lt;strong&gt;設定と破棄を行い&lt;/strong&gt;ました。</target>
        </trans-unit>
        <trans-unit id="c223006ce43aa84d1d3db276c5e833f0caa454db" translate="yes" xml:space="preserve">
          <source>Trailing slashes are removed when serving initial files from the file system directly.</source>
          <target state="translated">ファイルシステムから直接初期ファイルを提供する場合、末尾のスラッシュは削除されます。</target>
        </trans-unit>
        <trans-unit id="a6819ec0f00b8ddaf34c3d20ea7b4cba68216e1c" translate="yes" xml:space="preserve">
          <source>Transfer ownership</source>
          <target state="translated">所有権の移転</target>
        </trans-unit>
        <trans-unit id="788472f686f25a13399c25250df5cfa53be3b1ce" translate="yes" xml:space="preserve">
          <source>Transfer ownership of projects</source>
          <target state="translated">プロジェクトの所有権を移転</target>
        </trans-unit>
        <trans-unit id="b63c8ddb3eaf7f29bdd7a2a8c39647223ecfdafd" translate="yes" xml:space="preserve">
          <source>Transfer project to another organization</source>
          <target state="translated">プロジェクトを他の組織に移す</target>
        </trans-unit>
        <trans-unit id="56ad33c25d453d36131563f162a0ef4dede67216" translate="yes" xml:space="preserve">
          <source>Transfer project to other user or organization</source>
          <target state="translated">プロジェクトを他のユーザーや組織に移管する</target>
        </trans-unit>
        <trans-unit id="4b11401cd7ebb0e868bea27a6693ab49a92e8e2a" translate="yes" xml:space="preserve">
          <source>Transfer projects</source>
          <target state="translated">移管事業</target>
        </trans-unit>
        <trans-unit id="326ef547b2412a24368c9d228d103cffe0c0a638" translate="yes" xml:space="preserve">
          <source>Transpiling TypeScript test files</source>
          <target state="translated">TypeScript のテストファイルをトランスパイリングする</target>
        </trans-unit>
        <trans-unit id="17494fcbb7c58458e21d01de03d619ec6f44c93f" translate="yes" xml:space="preserve">
          <source>Travel back in time to each command&amp;rsquo;s snapshot.</source>
          <target state="translated">各コマンドのスナップショットまで遡ります。</target>
        </trans-unit>
        <trans-unit id="65b1d49a926e976a79c18da5b033b2a79623592b" translate="yes" xml:space="preserve">
          <source>Traversal methods now correctly return their &lt;code&gt;$el&lt;/code&gt; even when &lt;code&gt;{log: false}&lt;/code&gt; option is passed.</source>
          <target state="translated">トラバーサルメソッドは、 &lt;code&gt;{log: false}&lt;/code&gt; オプションが渡された場合でも &lt;code&gt;$el&lt;/code&gt; 正しく返すようになりました。</target>
        </trans-unit>
        <trans-unit id="2229904b9097373bb2df71be5843857fc2fc1830" translate="yes" xml:space="preserve">
          <source>Travis</source>
          <target state="translated">Travis</target>
        </trans-unit>
        <trans-unit id="318d69ee32677736aa58edcba1771fdb587d930c" translate="yes" xml:space="preserve">
          <source>TravisCI</source>
          <target state="translated">TravisCI</target>
        </trans-unit>
        <trans-unit id="d3f06a581b2b66fa7a3965ddeb6fb307f7be20ba" translate="yes" xml:space="preserve">
          <source>Trigger</source>
          <target state="translated">Trigger</target>
        </trans-unit>
        <trans-unit id="e4f3fac63e5c8542ae1acc084586bfad88d046c7" translate="yes" xml:space="preserve">
          <source>Trigger a &lt;code&gt;mousedown&lt;/code&gt; on the top right of a button</source>
          <target state="translated">ボタンの右上で &lt;code&gt;mousedown&lt;/code&gt; をトリガーする</target>
        </trans-unit>
        <trans-unit id="02ee5efc9416f0d0e4dfd82837b8a3ac27028395" translate="yes" xml:space="preserve">
          <source>Trigger a &lt;code&gt;mouseover&lt;/code&gt; on the button</source>
          <target state="translated">ボタンの上に &lt;code&gt;mouseover&lt;/code&gt; をトリガーする</target>
        </trans-unit>
        <trans-unit id="8d5da4c470a017915e907dc90e64f99513be37f7" translate="yes" xml:space="preserve">
          <source>Trigger an event on a DOM element.</source>
          <target state="translated">DOM 要素のイベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="78c14b454d8798a0c7d794b4f290a8441bab8937" translate="yes" xml:space="preserve">
          <source>Triple slash directives</source>
          <target state="translated">トリプルスラッシュディレクティブ</target>
        </trans-unit>
        <trans-unit id="b74294751584129dab564719a026842e67d04dda" translate="yes" xml:space="preserve">
          <source>Troubleshooting Cypress</source>
          <target state="translated">サイプレスのトラブルシューティング</target>
        </trans-unit>
        <trans-unit id="ad6d75bb783ff33d23b28d69d529b51323e94ec3" translate="yes" xml:space="preserve">
          <source>Try not to overcomplicate things and create too many abstractions. When in doubt, just use a regular function for individual spec files.</source>
          <target state="translated">物事を複雑にしすぎず、抽象化しすぎないようにしてください。疑問がある場合は、個々の仕様ファイルに対して正規の関数を使用してください。</target>
        </trans-unit>
        <trans-unit id="755670cd606ea91ef0e6ed16c6f718bdfc43b06b" translate="yes" xml:space="preserve">
          <source>Try to add either zero or as few assertions as possible in your custom command. Those tend to shape your command into a much more rigid structure. Sometimes this is unavoidable, but a best practice is to let the calling code choose when and how to use assertions.</source>
          <target state="translated">カスタムコマンドでは、可能な限りアサーションをゼロにするか、最小限にするようにしてください。これらのアサーションは、コマンドをより硬直した構造にしてしまう傾向があります。これはやむを得ないこともありますが、アサーションをいつ、どのように使用するかは呼び出し側のコードに任せるのが最良の方法です。</target>
        </trans-unit>
        <trans-unit id="9967fb14155cc6a868f1dad7b39b55754ed2bcdd" translate="yes" xml:space="preserve">
          <source>Try using Chromium instead of Google Chrome for your tests, since it may be unaffected by GPO. You can &lt;a href=&quot;https://download-chromium.appspot.com/&quot;&gt;download the latest Chromium build here.&lt;/a&gt;</source>
          <target state="translated">GPOの影響を受けない可能性があるため、テストにはGoogle Chromeの代わりにChromiumを使用してみてください。&lt;a href=&quot;https://download-chromium.appspot.com/&quot;&gt;こちらから最新のChromiumビルドをダウンロード&lt;/a&gt;できます。</target>
        </trans-unit>
        <trans-unit id="5c4dedcbab2795d4ee121ef2123db7bb85b180be" translate="yes" xml:space="preserve">
          <source>Trying to change the &lt;code&gt;User-Agent&lt;/code&gt;? You can set the &lt;code&gt;userAgent&lt;/code&gt; as a &lt;a href=&quot;../../guides/references/configuration#Browser&quot;&gt;configuration value&lt;/a&gt; in your configuration file.</source>
          <target state="translated">&lt;code&gt;User-Agent&lt;/code&gt; を変更しようとしていますか？あなたは、設定できる &lt;code&gt;userAgent&lt;/code&gt; 通り&lt;a href=&quot;../../guides/references/configuration#Browser&quot;&gt;、設定値&lt;/a&gt;設定ファイルに。</target>
        </trans-unit>
        <trans-unit id="1fb1e8af1380807400fe3717f432a1919ab6e5bd" translate="yes" xml:space="preserve">
          <source>Trying to log in to Cypress no longer causes the app to crash. This area has had many more tests added. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1093&quot;&gt;#1093&lt;/a&gt;.</source>
          <target state="translated">サイプレスにログインしようとしても、アプリがクラッシュしなくなりました。この領域には、さらに多くのテストが追加されています。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1093&quot;&gt;＃1093を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="55ebf1a4bbab560e09635794fc9d62426401f667" translate="yes" xml:space="preserve">
          <source>Trying to start a web server from &lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; causes all kinds of problems because:</source>
          <target state="translated">以下の&lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt;により、&lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt;またはcy.task（）からWebサーバーを起動しようとすると、あらゆる種類の問題が発生します。</target>
        </trans-unit>
        <trans-unit id="286a6f97effd737bf6d89677d8d018a4f4853bd7" translate="yes" xml:space="preserve">
          <source>Trying to test hard to reach areas of your application? Don&amp;rsquo;t like the side effects an action creates? Tired of repeating the same repetitive and slow actions over and over again? You can skip them for most test cases.</source>
          <target state="translated">アプリケーションの特定の領域に到達するために一生懸命テストしてみませんか？アクションが作成する副作用が好きではありませんか？同じ繰り返しの遅いアクションを何度も繰り返すのにうんざりしていませんか？ほとんどのテストケースでは、これらをスキップできます。</target>
        </trans-unit>
        <trans-unit id="bd958f2709b5e5655bab34e285448c551c1fd477" translate="yes" xml:space="preserve">
          <source>Turn off the server after you&amp;rsquo;ve started it</source>
          <target state="translated">起動したらサーバーの電源を切ります</target>
        </trans-unit>
        <trans-unit id="5f464b81597b7aeaffcfe4347e8dcbbf6757ee98" translate="yes" xml:space="preserve">
          <source>Turn off verbose debugging output</source>
          <target state="translated">冗長なデバッグ出力をオフにする</target>
        </trans-unit>
        <trans-unit id="5d27e9fdc29a3152f4e0507bf7fe1a9c7afa81ea" translate="yes" xml:space="preserve">
          <source>Turning on parallelization</source>
          <target state="translated">並列化をオンにする</target>
        </trans-unit>
        <trans-unit id="2701a94c0eb55cbd958a87dff3e959673ff1bf53" translate="yes" xml:space="preserve">
          <source>Tutorial</source>
          <target state="translated">Tutorial</target>
        </trans-unit>
        <trans-unit id="464c2ce98375e0acdd376addbadff5eb8ba52911" translate="yes" xml:space="preserve">
          <source>Tweaked clicking algorithm to re-verify an elements visibility anytime the click retries its &lt;code&gt;retry&lt;/code&gt; logic. Previously this check only happened once at the beginning of the click.</source>
          <target state="translated">クリックのアルゴリズムを調整して、クリックが再 &lt;code&gt;retry&lt;/code&gt; ロジックを再試行するたびに要素の可視性を再検証しました。以前は、このチェックはクリックの開始時に一度だけ行われていました。</target>
        </trans-unit>
        <trans-unit id="028eb00e7e533e53cc8ccf47eebd4c13730b654c" translate="yes" xml:space="preserve">
          <source>Tweaked the label for displaying the number of elements a command resolved with (now displays 0 differently than &amp;gt; 1).</source>
          <target state="translated">コマンドが解決した要素の数を表示するためのラベルを微調整しました（現在、1とは異なる0を表示します）。</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="d133ab7b8f1a04faab40ebd7496d937f491c41bb" translate="yes" xml:space="preserve">
          <source>Type &amp;ldquo;Hello, world!&amp;rdquo; into it.</source>
          <target state="translated">「Hello、world！」と入力します その中に。</target>
        </trans-unit>
        <trans-unit id="c3f9a859f5a8d1d5f07dc308adb6cb22ea3a8efc" translate="yes" xml:space="preserve">
          <source>Type &amp;ldquo;My First Post&amp;rdquo; into it.</source>
          <target state="translated">「My First Post」と入力します。</target>
        </trans-unit>
        <trans-unit id="558418b619610ec242dda3f08b7f92a8d9187468" translate="yes" xml:space="preserve">
          <source>Type &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#f19197909a94b1949c90989ddf929e9c&quot;&gt;`fake@email.com&lt;/a&gt;` into the input</source>
          <target state="translated">入力に「&lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#f19197909a94b1949c90989ddf929e9c&quot;&gt;fake@email.com&lt;/a&gt;」と入力します</target>
        </trans-unit>
        <trans-unit id="a5a8e9a58a4c3023808abf93c272719bb5ea1a24" translate="yes" xml:space="preserve">
          <source>Type a key combination</source>
          <target state="translated">キーの組み合わせを入力します。</target>
        </trans-unit>
        <trans-unit id="6fb1b44ac2b1dc4d61fb6d919ae8c8e8699efda2" translate="yes" xml:space="preserve">
          <source>Type in text to see which element it matches. Note that &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; only yields the first element that matches the text, even if multiple elements on the page contain the text.</source>
          <target state="translated">テキストを入力して、一致する要素を確認します。ページ上の複数の要素にテキストが含まれている場合でも、&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;はテキストに一致する最初の要素のみを生成することに注意してください。</target>
        </trans-unit>
        <trans-unit id="b18448ec34349c60d1675d7cfcda9e2e699c17e0" translate="yes" xml:space="preserve">
          <source>Type into a DOM element.</source>
          <target state="translated">DOM 要素に入力します。</target>
        </trans-unit>
        <trans-unit id="f323835bb6b78af33814bff3996387faf43a89a4" translate="yes" xml:space="preserve">
          <source>Type into a login form</source>
          <target state="translated">ログインフォームに入力する</target>
        </trans-unit>
        <trans-unit id="a8f3a7704a3b025adbf2f3ce1564c26dda06faf6" translate="yes" xml:space="preserve">
          <source>Type into a non-input or non-textarea element with &lt;code&gt;tabindex&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;tabindex&lt;/code&gt; を使用して、非入力または非テキストエリア要素に入力します</target>
        </trans-unit>
        <trans-unit id="de203f0fcabfecc2b2152a6ebdc88a2cd63256a9" translate="yes" xml:space="preserve">
          <source>Type into a textarea.</source>
          <target state="translated">テキストエリアに入力します。</target>
        </trans-unit>
        <trans-unit id="c168aea84e477b974ea24fae168b089ccc48ba45" translate="yes" xml:space="preserve">
          <source>Type literal &lt;code&gt;{&lt;/code&gt; or &lt;code&gt;}&lt;/code&gt; characters</source>
          <target state="translated">リテラルの &lt;code&gt;{&lt;/code&gt; または &lt;code&gt;}&lt;/code&gt; 文字を入力してください</target>
        </trans-unit>
        <trans-unit id="d4a86cb946d4af4766f6a695502b64f3ea0cd58b" translate="yes" xml:space="preserve">
          <source>TypeScript</source>
          <target state="translated">TypeScript</target>
        </trans-unit>
        <trans-unit id="b36489ffb6df4e2f375e64befed4ef8510cdf5fd" translate="yes" xml:space="preserve">
          <source>TypeScript with Browserify</source>
          <target state="translated">TypeScript と Browserify</target>
        </trans-unit>
        <trans-unit id="2f368f75de3cee5e8611a9945d7ac3487e3d6a2c" translate="yes" xml:space="preserve">
          <source>TypeScript with Browserify Preprocessor</source>
          <target state="translated">TypeScript と Browserify プリプロセッサ</target>
        </trans-unit>
        <trans-unit id="a00910fce51dc9798f227abfa6d2d547bf45a7d8" translate="yes" xml:space="preserve">
          <source>TypeScript with WebPack</source>
          <target state="translated">WebPackを使ったTypeScript</target>
        </trans-unit>
        <trans-unit id="0f057997c8de71aa410436cb595f07aca985e4c8" translate="yes" xml:space="preserve">
          <source>TypeScript with webpack Preprocessor</source>
          <target state="translated">webpackプリプロセッサを使ったTypeScript</target>
        </trans-unit>
        <trans-unit id="907a3ec1ba98635b07503435bbe96a37be874449" translate="yes" xml:space="preserve">
          <source>Types for &lt;code&gt;cy.once()&lt;/code&gt; have been added. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4788&quot;&gt;#4788&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cy.once()&lt;/code&gt; のタイプが追加されました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4788&quot;&gt;＃4788で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="e0db862815d4ada5a93c245f7a836870272f86fa" translate="yes" xml:space="preserve">
          <source>Types for custom assertions</source>
          <target state="translated">カスタムアサーションの型</target>
        </trans-unit>
        <trans-unit id="aab861491c3d951942e51cd00cb9aea4ac1da8cd" translate="yes" xml:space="preserve">
          <source>Types for custom commands</source>
          <target state="translated">カスタムコマンドのタイプ</target>
        </trans-unit>
        <trans-unit id="a305f5232d1a1f71a92c2225d3280b74aef95353" translate="yes" xml:space="preserve">
          <source>Types the Enter key</source>
          <target state="translated">Enterキーを入力します。</target>
        </trans-unit>
        <trans-unit id="167330a9fd624fff167a21f329abf7b7524a9e70" translate="yes" xml:space="preserve">
          <source>Types the Escape key</source>
          <target state="translated">エスケープキーを入力する</target>
        </trans-unit>
        <trans-unit id="38deec1ab8bdd9373faebd22fdfdc0e1ca109485" translate="yes" xml:space="preserve">
          <source>Types the literal &lt;code&gt;{&lt;/code&gt; key</source>
          <target state="translated">リテラル &lt;code&gt;{&lt;/code&gt; キーを入力します</target>
        </trans-unit>
        <trans-unit id="f559d005200f37765ad0a9afe097823095dc221a" translate="yes" xml:space="preserve">
          <source>Typically in Cypress you hardly need to ever use &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, or &lt;code&gt;var&lt;/code&gt;. When using closures you&amp;rsquo;ll always have access to the objects that were yielded to you without assigning them.</source>
          <target state="translated">通常、サイプレスで &lt;code&gt;let&lt;/code&gt; 、 &lt;code&gt;const&lt;/code&gt; 、let、または &lt;code&gt;var&lt;/code&gt; を使用する必要はほとんどありません。クロージャーを使用するときは、割り当てられていないオブジェクトに常にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="088530296936d1025282c4399b277dfd62d273b0" translate="yes" xml:space="preserve">
          <source>Typically such plugins take an image snapshot of the entire application under test or a specific element, and then compare the image to a previously approved baseline image. If the images are the same (within a set pixel tolerance), it is determined that the web application looks the same to the user. If there are differences, then there has been some change to the DOM layout, fonts, colors or other visual properties that needs to be investigated.</source>
          <target state="translated">一般的に、このようなプラグインは、テスト中のアプリケーション全体または特定の要素の画像スナップショットを取り、以前に承認されたベースライン画像と画像を比較します。もし画像が同じであれば(設定されたピクセル許容範囲内で)、ウェブアプリケーションがユーザーに同じように見えると判断されます。もし違いがあれば、DOM レイアウト、フォント、色、またはその他の視覚的なプロパティに何らかの変更があったことになり、調査する必要があります。</target>
        </trans-unit>
        <trans-unit id="60b04c61d6dbffd11c0126f2ffc39ff6995727e7" translate="yes" xml:space="preserve">
          <source>Typically these days servers communicate with front end apps via JSON, but you could also be running a traditional server-side rendered HTML web application.</source>
          <target state="translated">通常、最近のサーバーはJSONを介してフロントエンドアプリと通信していますが、従来のサーバーサイドでレンダリングされたHTMLウェブアプリケーションを実行している可能性もあります。</target>
        </trans-unit>
        <trans-unit id="e0950205a42b057bef573b4c83ddbdc671855cdd" translate="yes" xml:space="preserve">
          <source>Typically this happens accidentally, like in the following situation.</source>
          <target state="translated">一般的には、次のような状況のように偶然に起こります。</target>
        </trans-unit>
        <trans-unit id="9e726ee25277be3cbb964835da44cd7235879604" translate="yes" xml:space="preserve">
          <source>Typically this pattern enables you to avoid making a secondary WebSocket connection and yet still fulfills the bidirectional browser and server contract. This means you could also test edge cases (disconnections, etc) without actually handling real connections.</source>
          <target state="translated">一般的にこのパターンでは、セカンダリ WebSocket 接続を行わずに、ブラウザとサーバの双方向の契約を満たすことができます。これは、実際の接続を処理せずにエッジケース (切断など)をテストすることもできることを意味します。</target>
        </trans-unit>
        <trans-unit id="6436e374d126d3f40cbd9f62f5536e7b5f7c8e70" translate="yes" xml:space="preserve">
          <source>Typically when you want to:</source>
          <target state="translated">典型的には、あなたがしたいとき。</target>
        </trans-unit>
        <trans-unit id="59427ec06b13b8108a420c12f5fad37f739f6bd3" translate="yes" xml:space="preserve">
          <source>Typically you will need to boot a local server prior to running Cypress. When you boot your web server, it runs as a &lt;strong&gt;long running process&lt;/strong&gt; that will never exit. Because of this, you&amp;rsquo;ll need it to run in the &lt;strong&gt;background&lt;/strong&gt; - else your CI provider will never move onto the next command.</source>
          <target state="translated">通常、サイプレスを実行する前にローカルサーバーを起動する必要があります。Webサーバーを起動すると、終了しない&lt;strong&gt;長期実行プロセス&lt;/strong&gt;として&lt;strong&gt;実行されます&lt;/strong&gt;。このため、&lt;strong&gt;バックグラウンドで&lt;/strong&gt;実行する必要があります。そうしないと、CIプロバイダーが次のコマンドに移動することはありません。</target>
        </trans-unit>
        <trans-unit id="cd96db2344a9907fd82448a8cac67a37278a161f" translate="yes" xml:space="preserve">
          <source>Typically you&amp;rsquo;d set this inside of your CI provider.</source>
          <target state="translated">通常、これはCIプロバイダーの内部で設定します。</target>
        </trans-unit>
        <trans-unit id="36b01b01668ac3095af3ef0ac9162c33012c176c" translate="yes" xml:space="preserve">
          <source>Typically, this is defined as an environment variable within your CI provider, defining a unique &amp;ldquo;build&amp;rdquo; or &amp;ldquo;run&amp;rdquo;.</source>
          <target state="translated">通常、これはCIプロバイダー内の環境変数として定義され、一意の「ビルド」または「実行」を定義します。</target>
        </trans-unit>
        <trans-unit id="34b179be3ff2d30f988157c2b1f9a9603974a2c9" translate="yes" xml:space="preserve">
          <source>Typically, when going through scenarios like user registration or forgotten passwords, your server schedules an email to be delivered.</source>
          <target state="translated">一般的に、ユーザー登録やパスワードを忘れた場合など、シナリオを進める際には、サーバーがメールを配信するようにスケジュールを立てます。</target>
        </trans-unit>
        <trans-unit id="03a58e2f856fa4f7c7fb70327a0fd9cd00c052e5" translate="yes" xml:space="preserve">
          <source>Typing &lt;code&gt;tab&lt;/code&gt; key does not work</source>
          <target state="translated">&lt;code&gt;tab&lt;/code&gt; 入力が機能しない</target>
        </trans-unit>
        <trans-unit id="e1dada927f0d8c34c6c1db0ed4ddb77462d28e48" translate="yes" xml:space="preserve">
          <source>Typing &lt;code&gt;{enter}&lt;/code&gt; now handles form submit logic as per the HTML spec.</source>
          <target state="translated">タイピング &lt;code&gt;{enter}&lt;/code&gt; 今ハンドルはHTMLの仕様に従ってロジックを提出形成します。</target>
        </trans-unit>
        <trans-unit id="3781c90cd4d2112c415dbd0bb7d0e4a4cabede0e" translate="yes" xml:space="preserve">
          <source>Typing into an &lt;code&gt;input[type=tel]&lt;/code&gt; now works. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/141&quot;&gt;#141&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;input[type=tel]&lt;/code&gt; への入力が機能するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/141&quot;&gt;＃141を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="71f707f6dcfe9881f9a0803bdf5b3f02731cdba9" translate="yes" xml:space="preserve">
          <source>URL changes from navigation events or hashchanges now display more accurately.</source>
          <target state="translated">ナビゲーションイベントやハッシュタグの変更によるURLの変更がより正確に表示されるようになりました。</target>
        </trans-unit>
        <trans-unit id="af6f4f3aacf2d89a48b35e7366501ecf00bc2a01" translate="yes" xml:space="preserve">
          <source>URL hash changes</source>
          <target state="translated">URLハッシュの変更</target>
        </trans-unit>
        <trans-unit id="8e57d554536d1e47623305c24ac37bdd125672cb" translate="yes" xml:space="preserve">
          <source>URL is an alias for &lt;code&gt;cy.location('href')&lt;/code&gt;</source>
          <target state="translated">URLは &lt;code&gt;cy.location('href')&lt;/code&gt; のエイリアスです</target>
        </trans-unit>
        <trans-unit id="d9a90444da2da0558a006e8e7ff99f9a770196fe" translate="yes" xml:space="preserve">
          <source>URL used as prefix for &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; command&amp;rsquo;s URL</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;コマンドのURLの接頭辞として使用されるURL</target>
        </trans-unit>
        <trans-unit id="bdb8d413fb03800982469ee3b059035fb43874fe" translate="yes" xml:space="preserve">
          <source>URL versus href</source>
          <target state="translated">URL 対 href</target>
        </trans-unit>
        <trans-unit id="ea9660420c0e298774e12ec9f590e6bcc79d0a02" translate="yes" xml:space="preserve">
          <source>URLs are no longer altered in any weird way.</source>
          <target state="translated">URLが変に変更されることもなくなりました。</target>
        </trans-unit>
        <trans-unit id="aa1d4fba6e32942f1cb829a466560d910ec4e413" translate="yes" xml:space="preserve">
          <source>URLs displayed in the Command Log during &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; are no longer arbitrarily truncated at a set width. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1995&quot;&gt;#1995&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; の実行&lt;/a&gt;中にコマンドログに表示されるURL が、設定された幅で任意に切り捨てられることがなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1995&quot;&gt;＃1995を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="41946fb8b645045cb8d02e8964df504fdf93ff77" translate="yes" xml:space="preserve">
          <source>URLs printed within the CLI will now display as the color blue. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2493&quot;&gt;#2493&lt;/a&gt;.</source>
          <target state="translated">CLI内で印刷されたURLが青色で表示されるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2493&quot;&gt;＃2493を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="7c72f8acabde4abfb6bd572b2be6665d721c4e2e" translate="yes" xml:space="preserve">
          <source>Ultimately you&amp;rsquo;ll not only be able to &lt;strong&gt;test and develop&lt;/strong&gt; at the same time, but you&amp;rsquo;ll actually be able to build your application &lt;strong&gt;faster&lt;/strong&gt; while getting tests &amp;ldquo;for free&amp;rdquo;.</source>
          <target state="translated">最終的には、&lt;strong&gt;テストと開発&lt;/strong&gt;を同時に実行できるだけでなく、実際にテストを「無料」で実行しながら、アプリケーションを&lt;strong&gt;より速く&lt;/strong&gt;構築できるようになります。</target>
        </trans-unit>
        <trans-unit id="2695fed22a3fab05b2aaf52de0d695a1cc298f42" translate="yes" xml:space="preserve">
          <source>Uncaught Exceptions</source>
          <target state="translated">捕まえられなかった例外</target>
        </trans-unit>
        <trans-unit id="611cdba5be4b948091cf62aae88260c3af47f293" translate="yes" xml:space="preserve">
          <source>Uncaught errors appearing in your spec files or support files are now properly caught, have the right exit code, and display correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/345&quot;&gt;#345&lt;/a&gt;</source>
          <target state="translated">スペックファイルまたはサポートファイルに表示されるキャッチされないエラーが適切にキャッチされ、適切な終了コードが表示され、正しく表示されるようになりました。修正&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/345&quot;&gt;＃345&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f7096aa09f675246b27a2cc393f5013515a118c" translate="yes" xml:space="preserve">
          <source>Uncaught exceptions from your application</source>
          <target state="translated">アプリケーションからの予期せぬ例外</target>
        </trans-unit>
        <trans-unit id="696f68740ce5379b063f54f4ee7d240c98ac1aa1" translate="yes" xml:space="preserve">
          <source>Uncaught exceptions originating from &lt;strong&gt;your&lt;/strong&gt; application code and/or test code are now &lt;strong&gt;distinctly&lt;/strong&gt; and &lt;strong&gt;clearly&lt;/strong&gt; indicated in the error message. We included a link to our docs to educate you on how you can optionally disable Cypress from catching these. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/825&quot;&gt;#825&lt;/a&gt;.</source>
          <target state="translated">発信キャッチされない例外は&lt;strong&gt;、あなたの&lt;/strong&gt;アプリケーションコードおよび/またはテストコードは今ある&lt;strong&gt;はっきり&lt;/strong&gt;と&lt;strong&gt;明確に&lt;/strong&gt;、エラーメッセージに示されています。サイプレスがこれらをキャッチするのをオプションで無効にする方法について説明するために、ドキュメントへのリンクを含めました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/825&quot;&gt;＃825を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="7cfbd26fd09deecf5609f2dfda18f6c7cbeb2fe3" translate="yes" xml:space="preserve">
          <source>Uncheck all checkboxes</source>
          <target state="translated">すべてのチェックボックスのチェックを外す</target>
        </trans-unit>
        <trans-unit id="656d33d96f552254cdec002e9c07552078ad319a" translate="yes" xml:space="preserve">
          <source>Uncheck checkbox(es).</source>
          <target state="translated">チェックボックスのチェックを外します。</target>
        </trans-unit>
        <trans-unit id="02cfc9c5049391437517ae2fa7543bff2b2ae791" translate="yes" xml:space="preserve">
          <source>Uncheck element with the id &amp;lsquo;saveUserName&amp;rsquo;</source>
          <target state="translated">ID 'saveUserName'の要素のチェックを外します</target>
        </trans-unit>
        <trans-unit id="1093729a141574a281a2c759189fd19ad0a50c23" translate="yes" xml:space="preserve">
          <source>Uncheck the checkbox with the value of &amp;lsquo;ga&amp;rsquo;</source>
          <target state="translated">「ga」の値のチェックボックスをオフにします</target>
        </trans-unit>
        <trans-unit id="86e81dfd6ee56cda62c71bf824a9e85c07f7d69e" translate="yes" xml:space="preserve">
          <source>Uncheck the checkboxes with the values &amp;lsquo;ga&amp;rsquo; and &amp;lsquo;ca&amp;rsquo;</source>
          <target state="translated">値「ga」と「ca」のチェックボックスをオフにします</target>
        </trans-unit>
        <trans-unit id="02f00450d092aa1c84fb35faa4a570924f83b123" translate="yes" xml:space="preserve">
          <source>Under some environment setups (e.g. &lt;code&gt;docker&lt;/code&gt;/&lt;code&gt;docker-compose&lt;/code&gt;) if the &lt;code&gt;.git&lt;/code&gt; directory is not available or mounted, you can pass all git related information under custom environment variables.</source>
          <target state="translated">一部の環境設定（例： &lt;code&gt;docker&lt;/code&gt; / &lt;code&gt;docker-compose&lt;/code&gt; ）では、 &lt;code&gt;.git&lt;/code&gt; ディレクトリが利用できない、またはマウントされていない場合、すべてのgit関連情報をカスタム環境変数で渡すことができます。</target>
        </trans-unit>
        <trans-unit id="59cdb1fc01a34c348d59bbe9b5261946a0536920" translate="yes" xml:space="preserve">
          <source>Under the hood - this means you don&amp;rsquo;t have to worry about commands accidentally running against a stale page, nor do you have to worry about running commands against a partially loaded page.</source>
          <target state="translated">内部的には、古いページに対して誤ってコマンドが実行されることを心配する必要がなく、部分的にロードされたページに対してコマンドを実行することを心配する必要もありません。</target>
        </trans-unit>
        <trans-unit id="1ac88320922c73272a66d9496289be3eb7c981d9" translate="yes" xml:space="preserve">
          <source>Under the hood &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; now sets an &lt;code&gt;Accept: text/html,*/*&lt;/code&gt; request header to prevent some web servers from sending back &lt;code&gt;404&lt;/code&gt; in the case where they required this header. Only a small % of servers would ever do this, but &lt;code&gt;webpack-dev-server&lt;/code&gt; was one of them. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/309&quot;&gt;#309&lt;/a&gt;.</source>
          <target state="translated">フードの下&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;今設定 &lt;code&gt;Accept: text/html,*/*&lt;/code&gt; リクエストヘッダを送り返すからいくつかのWebサーバーを防ぐために &lt;code&gt;404&lt;/code&gt; を、彼らはこのヘッダーを必要とする場合には。これを行うサーバーはごくわずかですが、 &lt;code&gt;webpack-dev-server&lt;/code&gt; はそのうちの1つでした。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/309&quot;&gt;＃309を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="8eb46cfb8c7cf0e4ea9fd89384c4c0c8db551e28" translate="yes" xml:space="preserve">
          <source>Under the hood Cypress uses &lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;minimatch&lt;/a&gt; to match glob patterns of &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;内部的&lt;/a&gt;には、サイプレスはミニマッチを使用して &lt;code&gt;url&lt;/code&gt; のグロブパターンを照合します。</target>
        </trans-unit>
        <trans-unit id="20f74af56f6eeae97142de5628da0ac63c9492cb" translate="yes" xml:space="preserve">
          <source>Under the hood Cypress:</source>
          <target state="translated">ボンネットの下のサイプレス。</target>
        </trans-unit>
        <trans-unit id="34fadb5251cb8493382111ca9a6c51a4c3cbdcb2" translate="yes" xml:space="preserve">
          <source>Under the hood, aliasing basic objects and primitives utilizes Mocha&amp;rsquo;s shared &lt;a href=&quot;https://github.com/mochajs/mocha/wiki/Shared-Behaviours&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; object: that is, aliases are available as &lt;code&gt;this.*&lt;/code&gt;.</source>
          <target state="translated">内部では、基本オブジェクトとプリミティブのエイリアスはMochaの共有&lt;a href=&quot;https://github.com/mochajs/mocha/wiki/Shared-Behaviours&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt;オブジェクトを利用します。つまり、エイリアスは &lt;code&gt;this.*&lt;/code&gt; として使用できます。</target>
        </trans-unit>
        <trans-unit id="cd791bcbf0a40b0f5be485c168f897d7874eccfc" translate="yes" xml:space="preserve">
          <source>Understand when your application re-renders</source>
          <target state="translated">アプリケーションの再レンダリングのタイミングを把握する</target>
        </trans-unit>
        <trans-unit id="06d97e8570539f23f119ef1f52902c8a8d8f03e5" translate="yes" xml:space="preserve">
          <source>Understanding stubbed vs regular XHR&amp;rsquo;s</source>
          <target state="translated">スタブ化されたXHRと通常のXHRを理解する</target>
        </trans-unit>
        <trans-unit id="1acce4d7702a32b7e2ff886fd027b059da89d6cb" translate="yes" xml:space="preserve">
          <source>Understanding when the screenshot is taken</source>
          <target state="translated">スクリーンショットの撮影時期を把握する</target>
        </trans-unit>
        <trans-unit id="e989fc691f9bf69b5890523461599dfb887dbfe2" translate="yes" xml:space="preserve">
          <source>Unfortunately, it is not possible for you to use the DOM to do conditional testing. To do this would require you to know with 100% guarantee that your application has finished all asynchronous rendering and that there are no pending network requests, setTimeouts, intervals, postMessage, or async/await code.</source>
          <target state="translated">残念ながら、DOMを使って条件付きテストを行うことはできません。これを行うには、アプリケーションがすべての非同期レンダリングを終了したこと、保留中のネットワークリクエスト、setTimeouts、インターバル、postMessage、またはasyncawaitコードがないことを100%の保証をもって知る必要があります。</target>
        </trans-unit>
        <trans-unit id="5b95860136f20ffb9f5886320c9303051c6491ef" translate="yes" xml:space="preserve">
          <source>Uninstalling the last used browser no longer causes the Test Runner to error and hang. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/371&quot;&gt;#371&lt;/a&gt;.</source>
          <target state="translated">最後に使用したブラウザをアンインストールしても、テストランナーでエラーが発生してハングすることがなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/371&quot;&gt;＃371を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="20eef9388f6440325c09a4192df3c3b42ae26855" translate="yes" xml:space="preserve">
          <source>Uniqueness</source>
          <target state="translated">Uniqueness</target>
        </trans-unit>
        <trans-unit id="5c69bfcdcf915e5df1a2597ce29d8e3074cad4fa" translate="yes" xml:space="preserve">
          <source>Unit test Angularjs code using Cypress Test Runner</source>
          <target state="translated">Cypress Test Runnerを使ったAngularjsコードのユニットテスト</target>
        </trans-unit>
        <trans-unit id="69c9113ad75da6e23f23a276dff26e75c7de4dc5" translate="yes" xml:space="preserve">
          <source>Unit tests</source>
          <target state="translated">ユニットテスト</target>
        </trans-unit>
        <trans-unit id="4147f041f63490440ebe7c1bc61648a5c7b2db23" translate="yes" xml:space="preserve">
          <source>Unlike most Cypress commands, &lt;code&gt;cy.spy()&lt;/code&gt; is &lt;em&gt;synchronous&lt;/em&gt; and returns a value (the spy) instead of a Promise-like chain-able object.</source>
          <target state="translated">ほとんどのサイプレスコマンドとは異なり、 &lt;code&gt;cy.spy()&lt;/code&gt; は&lt;em&gt;同期的で&lt;/em&gt;あり、Promiseのようなチェーン可能なオブジェクトの代わりに値（spy）を返します。</target>
        </trans-unit>
        <trans-unit id="1df42d720a761e3dc26e08857dda0ddedf0526a8" translate="yes" xml:space="preserve">
          <source>Unlike most Cypress commands, &lt;code&gt;cy.stub()&lt;/code&gt; is &lt;em&gt;synchronous&lt;/em&gt; and returns a value (the stub) instead of a Promise-like chain-able object.</source>
          <target state="translated">ほとんどのサイプレスコマンドとは異なり、 &lt;code&gt;cy.stub()&lt;/code&gt; は&lt;em&gt;同期的で&lt;/em&gt;あり、Promiseのようなチェーン可能なオブジェクトの代わりに値（スタブ）を返します。</target>
        </trans-unit>
        <trans-unit id="963297256250136e5a520b25794827578e763de8" translate="yes" xml:space="preserve">
          <source>Unnecessary Waiting</source>
          <target state="translated">不要な待ち時間</target>
        </trans-unit>
        <trans-unit id="ecae9e15062987b76f7b12c3b8025167c8ce8235" translate="yes" xml:space="preserve">
          <source>Unnecessary wait for &lt;code&gt;cy.get()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cy.get()&lt;/code&gt; を不必要に待つ</target>
        </trans-unit>
        <trans-unit id="167047a653cac448dda1827c0afcfa760554c8ed" translate="yes" xml:space="preserve">
          <source>Unnecessary wait for &lt;code&gt;cy.request()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cy.request()&lt;/code&gt; を不必要に待つ</target>
        </trans-unit>
        <trans-unit id="6cce05759c8abf05aa61f0ff7c7f25a02441e937" translate="yes" xml:space="preserve">
          <source>Unnecessary wait for &lt;code&gt;cy.visit()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cy.visit()&lt;/code&gt; を不必要に待つ</target>
        </trans-unit>
        <trans-unit id="3f452da2a719d5c974d5ec42c559c1d7f7164314" translate="yes" xml:space="preserve">
          <source>Unset an environment variable</source>
          <target state="translated">環境変数の設定を解除する</target>
        </trans-unit>
        <trans-unit id="9a60049fc3f3e72442b00e62eac402094bb06253" translate="yes" xml:space="preserve">
          <source>Unset an environment variable in the current session</source>
          <target state="translated">現在のセッションの環境変数の設定を解除する</target>
        </trans-unit>
        <trans-unit id="ef9f2d3ebd29c81b834973d6195e903e94bab18f" translate="yes" xml:space="preserve">
          <source>Unsupported Browsers</source>
          <target state="translated">サポートされていないブラウザ</target>
        </trans-unit>
        <trans-unit id="f6b0fdd4abc7494874e5bee0ec09c0d3e7eb4da4" translate="yes" xml:space="preserve">
          <source>Upcoming features</source>
          <target state="translated">今後の機能</target>
        </trans-unit>
        <trans-unit id="26ba82397d8d2e2b90f79f254b3fdb88a62263d8" translate="yes" xml:space="preserve">
          <source>Update &lt;a href=&quot;configuration#modifyObstructiveCode&quot;&gt;&lt;code&gt;modifyObstructiveCode&lt;/code&gt;&lt;/a&gt; to account for framebusting techniques that use &lt;code&gt;window.frameElement&lt;/code&gt;, so that Applications using this technique will run properly in Cypress. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2582&quot;&gt;#2582&lt;/a&gt;.</source>
          <target state="translated">アップデート&lt;a href=&quot;configuration#modifyObstructiveCode&quot;&gt; &lt;code&gt;modifyObstructiveCode&lt;/code&gt; &lt;/a&gt;使うテクニックframebustingのアカウントに &lt;code&gt;window.frameElement&lt;/code&gt; を、この技術を使用しているアプリケーションは、サイプレスで適切に実行されるように、。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2582&quot;&gt;＃2582を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="4138c8b5a6e795bc78b7ab84e6643644a2e81b31" translate="yes" xml:space="preserve">
          <source>Update &lt;code&gt;Command Line&lt;/code&gt; doc with new flags and alphabetized flags.</source>
          <target state="translated">&lt;code&gt;Command Line&lt;/code&gt; ドキュメントを新しいフラグとアルファベット順のフラグで更新します。</target>
        </trans-unit>
        <trans-unit id="6cbd3bd7e1253a3d87b6d3b45ffbbc7503955da2" translate="yes" xml:space="preserve">
          <source>Update &lt;code&gt;Dashboard Service&lt;/code&gt; doc with new screenshots and run sections.</source>
          <target state="translated">新しいスクリーンショットと実行セクションで &lt;code&gt;Dashboard Service&lt;/code&gt; ドキュメントを更新します。</target>
        </trans-unit>
        <trans-unit id="d108f1e7d0d2a6f3df68b09c070d747352e646b7" translate="yes" xml:space="preserve">
          <source>Update &lt;code&gt;Installing Cypress&lt;/code&gt; doc to include new options for Cypress binary caching</source>
          <target state="translated">サイプレスバイナリキャッシングの新しいオプションを含むように &lt;code&gt;Installing Cypress&lt;/code&gt; ドキュメントのインストールを更新</target>
        </trans-unit>
        <trans-unit id="6f773c65b25a65c500afd038369fd485eaee176e" translate="yes" xml:space="preserve">
          <source>Update &lt;code&gt;bluebird&lt;/code&gt; to &lt;code&gt;2.9.27&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bluebird&lt;/code&gt; を &lt;code&gt;2.9.27&lt;/code&gt; に更新します。</target>
        </trans-unit>
        <trans-unit id="d0288d84c972fe066888fd1d24416e053be35ffe" translate="yes" xml:space="preserve">
          <source>Update &lt;code&gt;cy.screenshot()&lt;/code&gt; doc to include new accepted usage and options</source>
          <target state="translated">&lt;code&gt;cy.screenshot()&lt;/code&gt; ドキュメントを更新して、新しい受け入れられた使用法とオプションを含める</target>
        </trans-unit>
        <trans-unit id="ee4fe327e803c9f5c1df89af1df70ec19b27ac3b" translate="yes" xml:space="preserve">
          <source>Update &lt;code&gt;cy.screenshot()&lt;/code&gt; doc to include new file naming behavior</source>
          <target state="translated">&lt;code&gt;cy.screenshot()&lt;/code&gt; ドキュメントを更新して、新しいファイル命名動作を含めます</target>
        </trans-unit>
        <trans-unit id="f79430d63774eca190616ff155c1a94e87c220c7" translate="yes" xml:space="preserve">
          <source>Update &lt;code&gt;glob&lt;/code&gt; to &lt;code&gt;5.0.10&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;glob&lt;/code&gt; を &lt;code&gt;5.0.10&lt;/code&gt; に更新します。</target>
        </trans-unit>
        <trans-unit id="4a7682f1e4a190e08d9f68bce8dd4b2b1a42fd7d" translate="yes" xml:space="preserve">
          <source>Update TypeScript definition for &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; to include screenshot specific options. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2654&quot;&gt;#2654&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; の&lt;/a&gt; TypeScript定義を更新して、スクリーンショット固有のオプションを含めます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2654&quot;&gt;＃2654を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="c99b862cd4f9fceba2def04774c2e34238d404b7" translate="yes" xml:space="preserve">
          <source>Update links to match new &lt;a href=&quot;https://docs.cypress.io/&quot;&gt;documentation&lt;/a&gt;</source>
          <target state="translated">新しい&lt;a href=&quot;https://docs.cypress.io/&quot;&gt;ドキュメント&lt;/a&gt;に合わせてリンクを更新する</target>
        </trans-unit>
        <trans-unit id="b3d4df2184795cc3e784d7ec4e4bd0a0a7fa7fae" translate="yes" xml:space="preserve">
          <source>Update type definitions for &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; to reflect new changes to command&amp;rsquo;s options. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1753&quot;&gt;#1753&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; の&lt;/a&gt;タイプ定義を更新して、コマンドのオプションへの新しい変更を反映します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1753&quot;&gt;＃1753を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="2bfde53f05033b8ae40a8748767736a8d8062c3d" translate="yes" xml:space="preserve">
          <source>Update your HTML or JavaScript code to not navigate to an insecure HTTP page and instead only use HTTPS. Additionally make sure that cookies have their &lt;code&gt;secure&lt;/code&gt; flag set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">安全でないHTTPページに移動しないようにHTMLまたはJavaScriptコードを更新し、代わりにHTTPSのみを使用します。さらに、Cookieの &lt;code&gt;secure&lt;/code&gt; フラグが &lt;code&gt;true&lt;/code&gt; に設定されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="46c2c851287f6ebba63c8b40467500a7326942ff" translate="yes" xml:space="preserve">
          <source>Updated $.simulate to 1.0.1.</source>
          <target state="translated">simulate を 1.0.1 に更新しました。</target>
        </trans-unit>
        <trans-unit id="e4952a8b019a7c3165a8d63275cea9de1c5bbb8b" translate="yes" xml:space="preserve">
          <source>Updated &amp;ldquo;Assertions&amp;rdquo;</source>
          <target state="translated">「アサーション」を更新</target>
        </trans-unit>
        <trans-unit id="5d1a18ed8c65519b8d94c888c1a940fcc91af5c3" translate="yes" xml:space="preserve">
          <source>Updated &amp;ldquo;Best Practices&amp;rdquo;</source>
          <target state="translated">「ベストプラクティス」の更新</target>
        </trans-unit>
        <trans-unit id="77d1aa5680aa3c08d90fa2b7fc005fea2580978d" translate="yes" xml:space="preserve">
          <source>Updated &amp;ldquo;Command Line&amp;rdquo;</source>
          <target state="translated">「コマンドライン」を更新</target>
        </trans-unit>
        <trans-unit id="521494adc76ab1b3c003f525772d56dc47779a56" translate="yes" xml:space="preserve">
          <source>Updated &amp;ldquo;Command Line&amp;rdquo; doc to include new cache commands</source>
          <target state="translated">新しいコマンドを含むように「コマンドライン」ドキュメントを更新</target>
        </trans-unit>
        <trans-unit id="b6b831f7b321c7f7175495f8eecc4eaf38e87032" translate="yes" xml:space="preserve">
          <source>Updated &amp;ldquo;Debugging&amp;rdquo;</source>
          <target state="translated">「デバッグ」を更新</target>
        </trans-unit>
        <trans-unit id="cf847e7e67584b7b1de7979bd1ba4ee9aa0a6f93" translate="yes" xml:space="preserve">
          <source>Updated &amp;ldquo;FAQ Usage&amp;rdquo;</source>
          <target state="translated">「FAQの使用法」を更新</target>
        </trans-unit>
        <trans-unit id="d3a71105c199baae4309bc104efae97052987901" translate="yes" xml:space="preserve">
          <source>Updated &amp;ldquo;Installing Cypress&amp;rdquo;</source>
          <target state="translated">「サイプレスのインストール」を更新</target>
        </trans-unit>
        <trans-unit id="5d31a26d3f3c9ac7d55789846d62243746bb2012" translate="yes" xml:space="preserve">
          <source>Updated &amp;ldquo;Interacting with Elements&amp;rdquo;</source>
          <target state="translated">「要素との相互作用」を更新</target>
        </trans-unit>
        <trans-unit id="c5cc7805d8f90dd0a07e41e279e612b7715de201" translate="yes" xml:space="preserve">
          <source>Updated &amp;ldquo;Testing Your App&amp;rdquo;</source>
          <target state="translated">「アプリのテスト」を更新</target>
        </trans-unit>
        <trans-unit id="b98ab5b59cc16584252c7f316e35f13c3362d951" translate="yes" xml:space="preserve">
          <source>Updated &amp;ldquo;Using Cypress FAQ&amp;rdquo;</source>
          <target state="translated">「サイプレスの使用に関するFAQ」を更新</target>
        </trans-unit>
        <trans-unit id="645eaa4d0e27f55a20c12aa9e326eb474d3d84e2" translate="yes" xml:space="preserve">
          <source>Updated &amp;ldquo;Writing Your First Test&amp;rdquo;</source>
          <target state="translated">「最初のテストの作成」を更新</target>
        </trans-unit>
        <trans-unit id="96a16541a8deb99ba30c4c7bceb926bb9d78507c" translate="yes" xml:space="preserve">
          <source>Updated &amp;ldquo;Writing your First Test&amp;rdquo;</source>
          <target state="translated">「最初のテストの作成」を更新</target>
        </trans-unit>
        <trans-unit id="b6132fd55e6b95827c2567852c5b3316ee3ba4cb" translate="yes" xml:space="preserve">
          <source>Updated &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; command to accept more position arguments. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/499&quot;&gt;#499&lt;/a&gt;.</source>
          <target state="translated">より多くの位置引数を受け付けるように&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;コマンドを更新しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/499&quot;&gt;＃499を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="68254b45d98e15a2e9274955ba57393a20107605" translate="yes" xml:space="preserve">
          <source>Updated &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt; docs to better explain how default assertions are handled. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1643&quot;&gt;#1643&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../api/commands/invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; の&lt;/a&gt;ドキュメントを更新して、デフォルトのアサーションの処理方法を詳しく説明しました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1643&quot;&gt;＃1643&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6132c74a724b857bd1f55a7b530cb5ee4f719ead" translate="yes" xml:space="preserve">
          <source>Updated &lt;a href=&quot;../../api/utilities/%24&quot;&gt;&lt;code&gt;jQuery&lt;/code&gt;&lt;/a&gt; from version &lt;code&gt;2.1.4&lt;/code&gt; to &lt;code&gt;2.2.4&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/utilities/%24&quot;&gt; &lt;code&gt;jQuery&lt;/code&gt; &lt;/a&gt;をバージョン &lt;code&gt;2.1.4&lt;/code&gt; から &lt;code&gt;2.2.4&lt;/code&gt; に更新しました。</target>
        </trans-unit>
        <trans-unit id="5cee053feacb2c9e8aff30cee939b7e06e8accfb" translate="yes" xml:space="preserve">
          <source>Updated &lt;a href=&quot;../../api/utilities/_&quot;&gt;&lt;code&gt;Cypress._&lt;/code&gt;&lt;/a&gt; to use &lt;a href=&quot;https://lodash.com/&quot;&gt;lodash&lt;/a&gt; instead of &lt;a href=&quot;http://underscorejs.org/&quot;&gt;Underscore&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/548&quot;&gt;#548&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://underscorejs.org/&quot;&gt;アンダースコアの&lt;/a&gt;代わりに&lt;a href=&quot;../../api/utilities/_&quot;&gt; &lt;code&gt;Cypress._&lt;/code&gt; &lt;/a&gt;を使用するように&lt;a href=&quot;https://lodash.com/&quot;&gt;Cypress._を&lt;/a&gt;更新しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/548&quot;&gt;＃548を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="5ee48845f48f49d502f6c5a7ba8518ef383e8660" translate="yes" xml:space="preserve">
          <source>Updated &lt;a href=&quot;../../api/utilities/promise&quot;&gt;&lt;code&gt;Cypress.Promise&lt;/code&gt;&lt;/a&gt; (which is Bluebird) from version &lt;code&gt;2.9.25&lt;/code&gt; to &lt;code&gt;3.5.0&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../../api/utilities/promise&quot;&gt; &lt;code&gt;Cypress.Promise&lt;/code&gt; &lt;/a&gt;（Bluebird）をバージョン &lt;code&gt;2.9.25&lt;/code&gt; から &lt;code&gt;3.5.0&lt;/code&gt; に更新しました</target>
        </trans-unit>
        <trans-unit id="fa2ca8c093cc86d4068d5c1ba39b45a6aaf2c678" translate="yes" xml:space="preserve">
          <source>Updated &lt;a href=&quot;../getting-started/installing-cypress#Download-URLs&quot;&gt;install instructions for Windows&lt;/a&gt; on how to target 64bit and 32bit infrastructures. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1568&quot;&gt;#1568&lt;/a&gt;.</source>
          <target state="translated">64ビットおよび32ビットのインフラストラクチャをターゲットにする方法&lt;a href=&quot;../getting-started/installing-cypress#Download-URLs&quot;&gt;に関するWindowsのインストール手順の&lt;/a&gt;更新。&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1568&quot;&gt;＃1568で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="f80c95ce1282b3ef144925a49441b46c076b2a73" translate="yes" xml:space="preserve">
          <source>Updated &lt;a href=&quot;../guides/launching-browsers&quot;&gt;docs&lt;/a&gt; on explain how to run Chrome and Chromium browsers &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1339&quot;&gt;#1339&lt;/a&gt;</source>
          <target state="translated">ChromeおよびChromiumブラウザーの実行方法を説明する更新された&lt;a href=&quot;../guides/launching-browsers&quot;&gt;ドキュメント&lt;/a&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1339&quot;&gt;＃1339&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a50f11fda66b68b940d418034c58a3cb1246b948" translate="yes" xml:space="preserve">
          <source>Updated &lt;a href=&quot;bundled-tools#Chai&quot;&gt;&lt;code&gt;chai&lt;/code&gt;&lt;/a&gt; from version &lt;code&gt;1.9.2&lt;/code&gt; to &lt;code&gt;3.5.0&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;bundled-tools#Chai&quot;&gt; &lt;code&gt;chai&lt;/code&gt; &lt;/a&gt;をバージョン &lt;code&gt;1.9.2&lt;/code&gt; から &lt;code&gt;3.5.0&lt;/code&gt; に更新しました</target>
        </trans-unit>
        <trans-unit id="dc176f0292d0989301e3164733be3e90372579f8" translate="yes" xml:space="preserve">
          <source>Updated &lt;a href=&quot;bundled-tools#Sinon&quot;&gt;&lt;code&gt;sinon&lt;/code&gt;&lt;/a&gt; from version &lt;code&gt;1.x&lt;/code&gt; to &lt;code&gt;3.2.0&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;bundled-tools#Sinon&quot;&gt; &lt;code&gt;sinon&lt;/code&gt; &lt;/a&gt;をバージョン &lt;code&gt;1.x&lt;/code&gt; から &lt;code&gt;3.2.0&lt;/code&gt; に更新しました</target>
        </trans-unit>
        <trans-unit id="a7f3459e808e5da8195215190b6879cd0b825232" translate="yes" xml:space="preserve">
          <source>Updated &lt;code&gt;--browser&lt;/code&gt; and &lt;code&gt;browser&lt;/code&gt; args to accept &lt;code&gt;path&lt;/code&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1419&quot;&gt;#1419&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1419&quot;&gt;＃1419&lt;/a&gt;を受け入れるように &lt;code&gt;--browser&lt;/code&gt; と &lt;code&gt;browser&lt;/code&gt; argsを更新</target>
        </trans-unit>
        <trans-unit id="cb4bf88839a7b189fb2c152b3b1ded471d7f06e4" translate="yes" xml:space="preserve">
          <source>Updated &lt;code&gt;Best Practices&lt;/code&gt;</source>
          <target state="translated">更新された &lt;code&gt;Best Practices&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05f4a76d22221c6d8d5a46f30f7d0cefe6a725d5" translate="yes" xml:space="preserve">
          <source>Updated &lt;code&gt;Configuration&lt;/code&gt;</source>
          <target state="translated">更新された &lt;code&gt;Configuration&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb7d7dd02fa056ae6400f3a7b492eacae47d31fe" translate="yes" xml:space="preserve">
          <source>Updated &lt;code&gt;Dashboard Service&lt;/code&gt;</source>
          <target state="translated">更新された &lt;code&gt;Dashboard Service&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="46144f5ead3b65f714853034bca8207a096d7882" translate="yes" xml:space="preserve">
          <source>Updated &lt;code&gt;Environment Variables&lt;/code&gt;</source>
          <target state="translated">更新された &lt;code&gt;Environment Variables&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f7e21eb003224a0ec5eac11d731177d57d9d025" translate="yes" xml:space="preserve">
          <source>Updated &lt;code&gt;FAQ&lt;/code&gt;</source>
          <target state="translated">更新された &lt;code&gt;FAQ&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ec349af1a3fc7e3d1132a85b8a63f999c95540c" translate="yes" xml:space="preserve">
          <source>Updated &lt;code&gt;Introduction to Cypress&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Introduction to Cypress&lt;/code&gt; 更新</target>
        </trans-unit>
        <trans-unit id="071caa723e54d1470735c2ba13359dbf249c47bb" translate="yes" xml:space="preserve">
          <source>Updated &lt;code&gt;Launching Browsers&lt;/code&gt; to include our disabling of device discovery notifications</source>
          <target state="translated">デバイス検出通知の無効化を含むように &lt;code&gt;Launching Browsers&lt;/code&gt; を更新しました</target>
        </trans-unit>
        <trans-unit id="5a00d76293b3aba76739f60ce6ae5951edcaac03" translate="yes" xml:space="preserve">
          <source>Updated &lt;code&gt;Plugins Guide&lt;/code&gt;</source>
          <target state="translated">更新された &lt;code&gt;Plugins Guide&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a47d43b0888659802a84f7ebb96c386704e271ed" translate="yes" xml:space="preserve">
          <source>Updated &lt;code&gt;Preprocessors&lt;/code&gt; to reflect all ways &lt;code&gt;close&lt;/code&gt; event could be triggered</source>
          <target state="translated">&lt;code&gt;close&lt;/code&gt; イベントがトリガーされるすべての方法を反映するように &lt;code&gt;Preprocessors&lt;/code&gt; を更新</target>
        </trans-unit>
        <trans-unit id="ba63f1ae14465b9d54352fe600eb5162a5bfa748" translate="yes" xml:space="preserve">
          <source>Updated &lt;code&gt;Using Cypress FAQ&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Using Cypress FAQ&lt;/code&gt; 更新</target>
        </trans-unit>
        <trans-unit id="a98a0434b43f22959b52f008434b421abef79de0" translate="yes" xml:space="preserve">
          <source>Updated &lt;code&gt;Writing a Plugin API&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Writing a Plugin API&lt;/code&gt; 更新</target>
        </trans-unit>
        <trans-unit id="1f554d07d3892230aa1cfa50a3d963406522cc8c" translate="yes" xml:space="preserve">
          <source>Updated &lt;code&gt;Writing and Organizing Tests&lt;/code&gt; to include newly seeded &lt;code&gt;examples&lt;/code&gt; folder</source>
          <target state="translated">新しくシードされた &lt;code&gt;examples&lt;/code&gt; フォルダーを含むように &lt;code&gt;Writing and Organizing Tests&lt;/code&gt; 更新</target>
        </trans-unit>
        <trans-unit id="dc33e063266106688918cf82987c6b24d76a22c5" translate="yes" xml:space="preserve">
          <source>Updated &lt;code&gt;bluebird&lt;/code&gt; to &lt;code&gt;2.9.14&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bluebird&lt;/code&gt; を &lt;code&gt;2.9.14&lt;/code&gt; に更新しました。</target>
        </trans-unit>
        <trans-unit id="b9eb6c05a7b0b559532313be17d23d2fba4931da" translate="yes" xml:space="preserve">
          <source>Updated &lt;code&gt;bluebird&lt;/code&gt; to &lt;code&gt;2.9.25&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bluebird&lt;/code&gt; を &lt;code&gt;2.9.25&lt;/code&gt; に更新しました。</target>
        </trans-unit>
        <trans-unit id="6e54a5468d74afcf91cb9e6fbccb419c71090a63" translate="yes" xml:space="preserve">
          <source>Updated &lt;code&gt;chokidar&lt;/code&gt; to &lt;code&gt;1.0.1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;chokidar&lt;/code&gt; を &lt;code&gt;1.0.1&lt;/code&gt; に更新しました。</target>
        </trans-unit>
        <trans-unit id="4b885c45cd1a53533260252c9ea0d4a6d3494800" translate="yes" xml:space="preserve">
          <source>Updated &lt;code&gt;cypress run&lt;/code&gt; spec args</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; 仕様引数を更新</target>
        </trans-unit>
        <trans-unit id="8bd76cc03a876ca669536d9fde7aca6759ff01ca" translate="yes" xml:space="preserve">
          <source>Updated &lt;code&gt;nw&lt;/code&gt; to &lt;code&gt;0.12.1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nw&lt;/code&gt; を &lt;code&gt;0.12.1&lt;/code&gt; に更新しました。</target>
        </trans-unit>
        <trans-unit id="31d5200a2a27f02e86be95e17bbd67313071dcc8" translate="yes" xml:space="preserve">
          <source>Updated &lt;code&gt;sinon&lt;/code&gt; to &lt;code&gt;1.14.1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sinon&lt;/code&gt; を &lt;code&gt;1.14.1&lt;/code&gt; に更新しました。</target>
        </trans-unit>
        <trans-unit id="7f42e807b0c8faadc0eb9e373cef6f4d7283a0bf" translate="yes" xml:space="preserve">
          <source>Updated TypeScript definitions to more accurately match the current Cypress API. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1050&quot;&gt;#1050&lt;/a&gt;. Also note that if you were extending Cypress in TypeScript the &lt;code&gt;Chainer&lt;/code&gt; interface changed. Please read &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1048#issuecomment-351891910&quot;&gt;#1048#issuecomment-351891910&lt;/a&gt; to understand what you will need to update.</source>
          <target state="translated">TypeScript定義を更新して、現在のサイプレスAPIとより正確に一致させます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1050&quot;&gt;＃1050を&lt;/a&gt;修正。TypeScriptでサイプレスを拡張していた場合、 &lt;code&gt;Chainer&lt;/code&gt; インターフェースが変更されたことにも注意してください。お読みください&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1048#issuecomment-351891910&quot;&gt;＃1048＃issuecomment-351891910を&lt;/a&gt;使用すると、更新する必要があります理解します。</target>
        </trans-unit>
        <trans-unit id="5ba13a78db8bf8a2912de964ac594e26e7b53664" translate="yes" xml:space="preserve">
          <source>Updated UI styles / tests list / run all.</source>
          <target state="translated">UIスタイルのテストリストをすべて実行するように更新しました。</target>
        </trans-unit>
        <trans-unit id="633fb7f5c69d280ea36ce0e249f1cd22e8f951e7" translate="yes" xml:space="preserve">
          <source>Updated a few things to more aggressively cause GC.</source>
          <target state="translated">より積極的にGCを引き起こすように、いくつかのものを更新しました。</target>
        </trans-unit>
        <trans-unit id="fa480dc2410e45e3d130b3b5a06b78d31666320b" translate="yes" xml:space="preserve">
          <source>Updated all of the repo names to be modular.</source>
          <target state="translated">すべてのレポ名をモジュール化しました。</target>
        </trans-unit>
        <trans-unit id="13239fbc277738ad92a266c59f7a4bb8a5946ff9" translate="yes" xml:space="preserve">
          <source>Updated build in example kitchen sink to &lt;code&gt;1.0.2&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2139&quot;&gt;#2139&lt;/a&gt;.</source>
          <target state="translated">サンプルキッチンシンクのビルドを &lt;code&gt;1.0.2&lt;/code&gt; に更新しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2139&quot;&gt;＃2139を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="e2b7e234f214b7641e3e0bab590ec569703c571f" translate="yes" xml:space="preserve">
          <source>Updated dependencies: &lt;code&gt;bluebird&lt;/code&gt;, &lt;code&gt;fs-extra&lt;/code&gt;, &lt;code&gt;sinon-as-promised&lt;/code&gt;.</source>
          <target state="translated">更新された依存関係： &lt;code&gt;bluebird&lt;/code&gt; 、 &lt;code&gt;fs-extra&lt;/code&gt; 、 &lt;code&gt;sinon-as-promised&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dad13ce08a208601190b57f5dee529cddeb7dcc6" translate="yes" xml:space="preserve">
          <source>Updated error messages to include single quotes when displaying written test code. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2684&quot;&gt;#2684&lt;/a&gt;</source>
          <target state="translated">書かれたテストコードを表示するときに一重引用符を含めるようにエラーメッセージを更新しました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2684&quot;&gt;＃2684&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee0c5d70ddcb72a7fff1fae2db69367d180f84da" translate="yes" xml:space="preserve">
          <source>Updated favicon + logo mark</source>
          <target state="translated">ファビコン+ロゴマークを更新</target>
        </trans-unit>
        <trans-unit id="c542d4e79c6c3ff77c9208622ba4db1a533f344e" translate="yes" xml:space="preserve">
          <source>Updated filenames allowed for screenshots to allow more characters that are valid. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3052&quot;&gt;#3052&lt;/a&gt;.</source>
          <target state="translated">スクリーンショットに使用できるファイル名を更新し、有効な文字を追加できるようにしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3052&quot;&gt;＃3052を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="bc8dcc71bd8b14b5e97ade86d5583936ab7c24c3" translate="yes" xml:space="preserve">
          <source>Updated instructions for adding types for custom commands in the &lt;a href=&quot;../tooling/typescript-support#Types-for-custom-commands&quot;&gt;TypeScript Support&lt;/a&gt; doc. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1901&quot;&gt;#1901&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../tooling/typescript-support#Types-for-custom-commands&quot;&gt;TypeScriptサポート&lt;/a&gt;ドキュメントでカスタムコマンドのタイプを追加する手順を更新しました。&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1901&quot;&gt;＃1901で&lt;/a&gt;対処</target>
        </trans-unit>
        <trans-unit id="d39d8f4e1290ed06cd1e58aeb035bd9cf2316ffb" translate="yes" xml:space="preserve">
          <source>Updated many error messages to be more consistent.</source>
          <target state="translated">多くのエラーメッセージをより一貫性のあるものに更新しました。</target>
        </trans-unit>
        <trans-unit id="99441f405fdcd6c0cbeeb0a1e5eae2a619e7e88b" translate="yes" xml:space="preserve">
          <source>Updated many error messages to be more explanatory and precise.</source>
          <target state="translated">多くのエラーメッセージを更新し、より説明的で正確なものにしました。</target>
        </trans-unit>
        <trans-unit id="a9ce301b6214b2d04c9edbda2e3629dfbf8f90ea" translate="yes" xml:space="preserve">
          <source>Updated our &lt;a href=&quot;roadmap&quot;&gt;Roadmap&lt;/a&gt; to more closely reflect the work we are doing. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1639&quot;&gt;#1567&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;roadmap&quot;&gt;ロードマップ&lt;/a&gt;を更新して、現在行っている作業をより厳密に反映しました。&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1639&quot;&gt;＃1567で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="085eac205024f4d9c12f8d998645da15f0b6973a" translate="yes" xml:space="preserve">
          <source>Updated remote application iframe styles.</source>
          <target state="translated">リモートアプリケーションのiframeスタイルを更新しました。</target>
        </trans-unit>
        <trans-unit id="e13788a49a8137ccc05f5e79bf6266a8b8bcd1a5" translate="yes" xml:space="preserve">
          <source>Updated the CLI to no longer silence important stdout from &lt;code&gt;cypress version&lt;/code&gt;, &lt;code&gt;cypress cache list&lt;/code&gt; etc commands. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2705&quot;&gt;#2705&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress version&lt;/code&gt; 、 &lt;code&gt;cypress cache list&lt;/code&gt; などのコマンドから重要なstdoutを黙らせないようにCLIを更新しました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2705&quot;&gt;＃2705&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ff408aab15c593414a8e564c647220bceadb29b" translate="yes" xml:space="preserve">
          <source>Updated the json-schema describing &lt;code&gt;videoCompression&lt;/code&gt;. Allowing it to be a boolean. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2140&quot;&gt;#2140&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;videoCompression&lt;/code&gt; を説明するjson-schemaを更新しました。ブール値にすることができます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2140&quot;&gt;＃2140を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="e75e975ee326dfea62a30d3ecf4b9844b6675629" translate="yes" xml:space="preserve">
          <source>Updated tooltip content so that it no longer flows outside of the tooltip in the Test Runner when displaying longer routes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2980&quot;&gt;#2980&lt;/a&gt;.</source>
          <target state="translated">より長いルートを表示するときにテストランナーのツールチップの外側に流れないように、ツールチップのコンテンツを更新しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2980&quot;&gt;＃2980を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="1822c3958d66d1bee32a1d819f7ce6d134350897" translate="yes" xml:space="preserve">
          <source>Updated types to support promises as arguments within &lt;a href=&quot;../../api/commands/wrap&quot;&gt;&lt;code&gt;cy.wrap&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2807&quot;&gt;#2807&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wrap&quot;&gt; &lt;code&gt;cy.wrap&lt;/code&gt; &lt;/a&gt;内の引数としてpromiseをサポートするように更新されたタイプ。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2807&quot;&gt;＃2807を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="7e042dfad4222ccf65fa215045dbc57901292629" translate="yes" xml:space="preserve">
          <source>Updated use of &amp;ldquo;running headlessly&amp;rdquo; to more accurate &amp;ldquo;during &lt;code&gt;cypress run&lt;/code&gt;&amp;ldquo;</source>
          <target state="translated">「中に、より正確に「headlesslyランニング」の更新使用 &lt;code&gt;cypress run&lt;/code&gt; 「</target>
        </trans-unit>
        <trans-unit id="6147fe292bb5be6e8f4fb061786e6dfa85101435" translate="yes" xml:space="preserve">
          <source>Updating in app now works again. Sorry about that. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/304&quot;&gt;#304&lt;/a&gt;.</source>
          <target state="translated">アプリでの更新が再び機能するようになりました。申し訳ありません。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/304&quot;&gt;＃304を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="0d2b5c12477e6009177d569b822b12d54d0a9a36" translate="yes" xml:space="preserve">
          <source>Updating through the Desktop App in &lt;strong&gt;Linux&lt;/strong&gt; does not work. To update please run &lt;a href=&quot;../guides/command-line&quot;&gt;&lt;code&gt;cypress install&lt;/code&gt;&lt;/a&gt; from the command line.</source>
          <target state="translated">&lt;strong&gt;Linux&lt;/strong&gt;のデスクトップアプリからのアップデートは機能しません。更新&lt;a href=&quot;../guides/command-line&quot;&gt; &lt;code&gt;cypress install&lt;/code&gt; &lt;/a&gt;は、コマンドラインからcypress installを実行してください。</target>
        </trans-unit>
        <trans-unit id="5ef1c5a8e6fefdf77d4af029f40064937261381f" translate="yes" xml:space="preserve">
          <source>Upgrade deps. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1174&quot;&gt;#1174&lt;/a&gt;.</source>
          <target state="translated">アップグレード担当者。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1174&quot;&gt;＃1174を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f15044d6210d7a7de568ecfaeae14c99783df7ed" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt; to automatically retry when the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; is disabled, its matching &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; is disabled, or when Cypress cannot find a matching &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;. This more correctly aligns with the behavior of other actions like &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt;, which automatically retry until the element is ready to receive the action.</source>
          <target state="translated">&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; が無効、対応する &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; が無効、またはサイプレスが一致する &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; を見つけられない場合に自動的に再試行するように&lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; &lt;/a&gt;をアップグレードしました。これは、&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;などの他のアクションの動作とより正確に一致します。これは、要素がアクションを受け取る準備ができるまで自動的に再試行します。</target>
        </trans-unit>
        <trans-unit id="08f78cc90b329d4e367fbd90024bc74e1d6adb11" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;@cypress/commit-info&lt;/code&gt; from &lt;code&gt;2.1.1&lt;/code&gt; to &lt;code&gt;2.1.2&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3327&quot;&gt;#3327&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@cypress/commit-info&lt;/code&gt; を &lt;code&gt;2.1.1&lt;/code&gt; から &lt;code&gt;2.1.2&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3327&quot;&gt;＃3327&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5fbc7f95686c94e059b8d198eab394b60d3b5049" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;@cypress/commit-info&lt;/code&gt; from &lt;code&gt;2.1.3&lt;/code&gt; to &lt;code&gt;2.1.4&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4597&quot;&gt;#4597&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@cypress/commit-info&lt;/code&gt; を &lt;code&gt;2.1.3&lt;/code&gt; から &lt;code&gt;2.1.4&lt;/code&gt; にアップグレードしました。で対処&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4597&quot;&gt;＃4597&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6df3575ba9ed3f428a09932221525a3a6c23f230" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;@cypress/react-tooltip&lt;/code&gt; from &lt;code&gt;0.4.0&lt;/code&gt; to &lt;code&gt;0.5.0&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4610&quot;&gt;#4610&lt;/a&gt;.</source>
          <target state="translated">アップグレードされた &lt;code&gt;@cypress/react-tooltip&lt;/code&gt; から &lt;code&gt;0.4.0&lt;/code&gt; に &lt;code&gt;0.5.0&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4610&quot;&gt;＃4610で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="6d8e326c21b2219de84b1c4a8dc86446a46be425" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;@cypress/xvfb&lt;/code&gt; from &lt;code&gt;1.2.3&lt;/code&gt; to &lt;code&gt;1.2.4&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3328&quot;&gt;#3328&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@cypress/xvfb&lt;/code&gt; を &lt;code&gt;1.2.3&lt;/code&gt; から &lt;code&gt;1.2.4&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3328&quot;&gt;＃3328&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e5048375f70cdd70af08939b7719b491930a884e" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;@ffmpeg-installer/ffmpeg&lt;/code&gt; from &lt;code&gt;1.0.15&lt;/code&gt; to &lt;code&gt;1.0.17&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3329&quot;&gt;#3329&lt;/a&gt;.</source>
          <target state="translated">アップグレード &lt;code&gt;@ffmpeg-installer/ffmpeg&lt;/code&gt; から &lt;code&gt;1.0.15&lt;/code&gt; に &lt;code&gt;1.0.17&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3329&quot;&gt;＃3329&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2f8715fbd06aa603b3b804d3ea0bc9969b727167" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;@ffmpeg-installer/ffmpeg&lt;/code&gt; from &lt;code&gt;1.0.17&lt;/code&gt; to &lt;code&gt;1.0.19&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4792&quot;&gt;#4792&lt;/a&gt;.</source>
          <target state="translated">アップグレード &lt;code&gt;@ffmpeg-installer/ffmpeg&lt;/code&gt; から &lt;code&gt;1.0.17&lt;/code&gt; に &lt;code&gt;1.0.19&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4792&quot;&gt;＃4792で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="95ccc30cf550717498f5ac9309497e632a58c751" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;Chromium&lt;/code&gt; for headless and CI runs from &lt;code&gt;41&lt;/code&gt; to &lt;code&gt;45&lt;/code&gt;.</source>
          <target state="translated">ヘッドレスおよびCIのアップグレードされた &lt;code&gt;Chromium&lt;/code&gt; は &lt;code&gt;41&lt;/code&gt; から &lt;code&gt;45&lt;/code&gt; に実行されます。</target>
        </trans-unit>
        <trans-unit id="f7e4bc129b30b085aaa141ce2e35f396a4a1c636" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;browserify&lt;/code&gt; from &lt;code&gt;13.3.0&lt;/code&gt; to &lt;code&gt;16.3.0&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4751&quot;&gt;#4751&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4825&quot;&gt;#4825&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4826&quot;&gt;#4826&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;browserify&lt;/code&gt; を &lt;code&gt;13.3.0&lt;/code&gt; から &lt;code&gt;16.3.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4751&quot;&gt;＃4751&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4825&quot;&gt;＃4825&lt;/a&gt;、および&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4826&quot;&gt;＃4826で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="b623baf18d2b383b2c4a8a979aaf4319892ec984" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;cachedir&lt;/code&gt; from &lt;code&gt;1.3.0&lt;/code&gt; to &lt;code&gt;2.1.0&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3660&quot;&gt;#3660&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cachedir&lt;/code&gt; を &lt;code&gt;1.3.0&lt;/code&gt; から &lt;code&gt;2.1.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3660&quot;&gt;＃3660&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f5712a830c9e25db78020d0b7d8d215b20f325b" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;chalk&lt;/code&gt; from &lt;code&gt;2.4.1&lt;/code&gt; to &lt;code&gt;2.4.2&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3362&quot;&gt;#3362&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;chalk&lt;/code&gt; を &lt;code&gt;2.4.1&lt;/code&gt; から &lt;code&gt;2.4.2&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3362&quot;&gt;＃3362&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="81f237fa625bedad0984d6b678fded100e812b7f" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;chokidar&lt;/code&gt; from &lt;code&gt;1.6.0&lt;/code&gt; to &lt;code&gt;1.7.0&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3363&quot;&gt;#3363&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;chokidar&lt;/code&gt; を &lt;code&gt;1.6.0&lt;/code&gt; から &lt;code&gt;1.7.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3363&quot;&gt;＃3363&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3448ae97d8480aa804da6f6b48766dbb58a4ac8c" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;chokidar&lt;/code&gt; from &lt;code&gt;1.7.0&lt;/code&gt; to &lt;code&gt;3.0.1&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4487&quot;&gt;#4487&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;chokidar&lt;/code&gt; を &lt;code&gt;1.7.0&lt;/code&gt; から &lt;code&gt;3.0.1&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4487&quot;&gt;＃4487で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="c3b6d94d85c97eb6b64e3a368341c04e5270aca6" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;coffee-script&lt;/code&gt; from &lt;code&gt;1.12.5&lt;/code&gt; to &lt;code&gt;1.12.7&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3365&quot;&gt;#3365&lt;/a&gt;.</source>
          <target state="translated">アップグレードされた &lt;code&gt;coffee-script&lt;/code&gt; から &lt;code&gt;1.12.5&lt;/code&gt; へ &lt;code&gt;1.12.7&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3365&quot;&gt;＃3365&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b14a3c3c945ec669371f23fc077f3e2e33d00ee6" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;commander&lt;/code&gt; from &lt;code&gt;2.11.0&lt;/code&gt; to &lt;code&gt;2.19.0&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3366&quot;&gt;#3366&lt;/a&gt;.</source>
          <target state="translated">アップグレードされた &lt;code&gt;commander&lt;/code&gt; から &lt;code&gt;2.11.0&lt;/code&gt; をする &lt;code&gt;2.19.0&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3366&quot;&gt;＃3366&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ded29b0a75ffa906f8bcdea42f6ea9ef202d557" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;commit-info&lt;/code&gt; from &lt;code&gt;2.0.0&lt;/code&gt; to &lt;code&gt;2.1.1&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2848&quot;&gt;#2848&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;commit-info&lt;/code&gt; を &lt;code&gt;2.0.0&lt;/code&gt; から &lt;code&gt;2.1.1&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2848&quot;&gt;＃2848を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="74dec6bd9e73fdda6f4f1252b4f771c608789792" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;commit-info&lt;/code&gt; from &lt;code&gt;2.1.2&lt;/code&gt; to &lt;code&gt;2.1.2&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4045&quot;&gt;#4045&lt;/a&gt;</source>
          <target state="translated">アップグレードには &lt;code&gt;commit-info&lt;/code&gt; から &lt;code&gt;2.1.2&lt;/code&gt; に &lt;code&gt;2.1.2&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4045&quot;&gt;＃4045で&lt;/a&gt;対処</target>
        </trans-unit>
        <trans-unit id="359c841c0ad0e9828abcb646e348dbc3e91723e5" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;common-tags&lt;/code&gt; from &lt;code&gt;1.4.0&lt;/code&gt; to &lt;code&gt;1.8.0&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3368&quot;&gt;#3368&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;common-tags&lt;/code&gt; を &lt;code&gt;1.4.0&lt;/code&gt; から &lt;code&gt;1.8.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3368&quot;&gt;＃3368&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b1195f61286351e13c991eb5d0bb092f7a01af12" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;compression&lt;/code&gt; from &lt;code&gt;1.7.2&lt;/code&gt; to &lt;code&gt;1.7.3&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3379&quot;&gt;#3379&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;1.7.2&lt;/code&gt; から &lt;code&gt;1.7.3&lt;/code&gt; に &lt;code&gt;compression&lt;/code&gt; をアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3379&quot;&gt;＃3379&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="11aaba133c6b1b8a421568699aaa661f36e098ef" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;cookie-parser&lt;/code&gt; from &lt;code&gt;1.4.3&lt;/code&gt; to &lt;code&gt;1.4.4&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3443&quot;&gt;#3443&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cookie-parser&lt;/code&gt; を &lt;code&gt;1.4.3&lt;/code&gt; から &lt;code&gt;1.4.4&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3443&quot;&gt;＃3443&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8cc405f23be25a6baa1af0add6b06e9e77adc27d" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;cookie&lt;/code&gt; from &lt;code&gt;0.2.4&lt;/code&gt; to &lt;code&gt;0.3.1&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3380&quot;&gt;#3380&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cookie&lt;/code&gt; を &lt;code&gt;0.2.4&lt;/code&gt; から &lt;code&gt;0.3.1&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3380&quot;&gt;＃3380&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e3ee8aefd03a7b76b865d18dc6faf1373cca39df" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;cookie&lt;/code&gt; from &lt;code&gt;0.3.1&lt;/code&gt; to &lt;code&gt;0.4.0&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4329&quot;&gt;#4329&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cookie&lt;/code&gt; を &lt;code&gt;0.3.1&lt;/code&gt; から &lt;code&gt;0.4.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4329&quot;&gt;＃4329で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="a76329b3c8faa15657ac9139b466e816fdd24d69" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;data-uri-to-buffer&lt;/code&gt; from &lt;code&gt;0.0.4&lt;/code&gt; to &lt;code&gt;1.2.0&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4152&quot;&gt;#4152&lt;/a&gt;.</source>
          <target state="translated">アップグレードされた &lt;code&gt;data-uri-to-buffer&lt;/code&gt; から &lt;code&gt;0.0.4&lt;/code&gt; に &lt;code&gt;1.2.0&lt;/code&gt; 。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4152&quot;&gt;＃4152&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="464e7c726325a0520212d727c70e8e9bdf96b6d6" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;data-uri-to-buffer&lt;/code&gt; from &lt;code&gt;1.2.0&lt;/code&gt; to &lt;code&gt;2.0.1&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4622&quot;&gt;#4622&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;data-uri-to-buffer&lt;/code&gt; を &lt;code&gt;1.2.0&lt;/code&gt; から &lt;code&gt;2.0.1&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4622&quot;&gt;＃4622で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="735427c18bd6b19424be064bbea77e1e0cf24aec" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;dependency-tree&lt;/code&gt; from &lt;code&gt;6.4.0&lt;/code&gt; to &lt;code&gt;6.5.0&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3381&quot;&gt;#3381&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;dependency-tree&lt;/code&gt; を &lt;code&gt;6.4.0&lt;/code&gt; から &lt;code&gt;6.5.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3381&quot;&gt;＃3381&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fb9d78e68d5fc841b5e3cfb78d010f16c6e8de3f" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;dependency-tree&lt;/code&gt; from &lt;code&gt;6.5.0&lt;/code&gt; to &lt;code&gt;7.0.2&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4364&quot;&gt;#4364&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;dependency-tree&lt;/code&gt; を &lt;code&gt;6.5.0&lt;/code&gt; から &lt;code&gt;7.0.2&lt;/code&gt; にアップグレードしました。で対処&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4364&quot;&gt;＃4364&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8f1e87f11b3ba94f2c260859b209c08147bd410a" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;duplexify&lt;/code&gt; from &lt;code&gt;4.0.0&lt;/code&gt; to &lt;code&gt;4.1.1&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4853&quot;&gt;#4853&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;duplexify&lt;/code&gt; を &lt;code&gt;4.0.0&lt;/code&gt; から &lt;code&gt;4.1.1&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4853&quot;&gt;＃4853で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="24d4d37900c6f09de727a54ca6c998b832f1921e" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;electron-context-menu&lt;/code&gt; from &lt;code&gt;0.8.0&lt;/code&gt; to &lt;code&gt;0.11.0&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3383&quot;&gt;#3383&lt;/a&gt;.</source>
          <target state="translated">アップグレードされた &lt;code&gt;electron-context-menu&lt;/code&gt; から &lt;code&gt;0.8.0&lt;/code&gt; へ &lt;code&gt;0.11.0&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3383&quot;&gt;＃3383&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="90e4607f8ce5bcc312bb3d1ea469c3085b8db47a" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;electron-packager&lt;/code&gt; from &lt;code&gt;9.0.1&lt;/code&gt; to &lt;code&gt;9.1.0&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3384&quot;&gt;#3384&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;electron-packager&lt;/code&gt; を &lt;code&gt;9.0.1&lt;/code&gt; から &lt;code&gt;9.1.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3384&quot;&gt;＃3384&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9e8839d24df241bbcff194fddac40edf44473cdc" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;electron-packager&lt;/code&gt; from &lt;code&gt;9.1.0&lt;/code&gt; to &lt;code&gt;13.1.1&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4155&quot;&gt;#4155&lt;/a&gt;.</source>
          <target state="translated">アップグレードされた &lt;code&gt;electron-packager&lt;/code&gt; から &lt;code&gt;9.1.0&lt;/code&gt; へ &lt;code&gt;13.1.1&lt;/code&gt; 。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4155&quot;&gt;＃4155&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f753821db2bf79abe7bbffc49a75bdb3f2f9d1c" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;electron-positioner&lt;/code&gt; from &lt;code&gt;3.0.0&lt;/code&gt; to &lt;code&gt;3.0.1&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3385&quot;&gt;#3385&lt;/a&gt;.</source>
          <target state="translated">アップグレードされた &lt;code&gt;electron-positioner&lt;/code&gt; から &lt;code&gt;3.0.0&lt;/code&gt; へ &lt;code&gt;3.0.1&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3385&quot;&gt;＃3385&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d545c39317be12e0bdc1921b72413d17da6a6c4" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;electron&lt;/code&gt; from &lt;code&gt;1.8.2&lt;/code&gt; to &lt;code&gt;2.0.18&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4000&quot;&gt;#4000&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;electron&lt;/code&gt; を &lt;code&gt;1.8.2&lt;/code&gt; から &lt;code&gt;2.0.18&lt;/code&gt; にアップグレードしました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4000&quot;&gt;＃4000&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a8262860178963c93eb0d33eb7bb96dc7748ce4f" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;errorhandler&lt;/code&gt; from &lt;code&gt;1.1.1&lt;/code&gt; to &lt;code&gt;1.5.0&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3386&quot;&gt;#3386&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;errorhandler&lt;/code&gt; を &lt;code&gt;1.1.1&lt;/code&gt; から &lt;code&gt;1.5.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3386&quot;&gt;＃3386&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="14ef0b96c77c620e6926f68140515f6a96f36c91" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;errorhandler&lt;/code&gt; from &lt;code&gt;1.5.0&lt;/code&gt; to &lt;code&gt;1.5.1&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4618&quot;&gt;#4618&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;errorhandler&lt;/code&gt; を &lt;code&gt;1.5.0&lt;/code&gt; から &lt;code&gt;1.5.1&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4618&quot;&gt;＃4618で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="cd9f3afec28824a27b9ba109767516d75466336b" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;express-handlebars&lt;/code&gt; from &lt;code&gt;3.0.0&lt;/code&gt; to &lt;code&gt;3.0.2&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4086&quot;&gt;#4086&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;express-handlebars&lt;/code&gt; を &lt;code&gt;3.0.0&lt;/code&gt; から &lt;code&gt;3.0.2&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4086&quot;&gt;＃4086で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="488e6341667cc12cd00b9bc26b0f770ffd2d77ce" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;express&lt;/code&gt; from &lt;code&gt;4.16.2&lt;/code&gt; to &lt;code&gt;4.16.4&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3409&quot;&gt;#3409&lt;/a&gt;.</source>
          <target state="translated">アップグレードされた &lt;code&gt;express&lt;/code&gt; から &lt;code&gt;4.16.2&lt;/code&gt; へ &lt;code&gt;4.16.4&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3409&quot;&gt;＃3409&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e666b37f527080ae481ebc6ed80f289b17ee715" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;extract-zip&lt;/code&gt; from &lt;code&gt;1.6.6&lt;/code&gt; to &lt;code&gt;1.6.7&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3410&quot;&gt;#3410&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;extract-zip&lt;/code&gt; を &lt;code&gt;1.6.6&lt;/code&gt; から &lt;code&gt;1.6.7&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3410&quot;&gt;＃3410&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="494549d93a00d385aa46efb65147fb0603f89af5" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;find-process&lt;/code&gt; from &lt;code&gt;1.2.1&lt;/code&gt; to &lt;code&gt;1.4.1&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4087&quot;&gt;#4087&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;find-process&lt;/code&gt; を &lt;code&gt;1.2.1&lt;/code&gt; から &lt;code&gt;1.4.1&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4087&quot;&gt;＃4087で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="0b8d06781ef115f8866e1827b2d89f989441eefc" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;fs-extra&lt;/code&gt; from &lt;code&gt;0.30.0&lt;/code&gt; to &lt;code&gt;8.0.1&lt;/code&gt;. Upgraded in CLI package only to &lt;code&gt;5.0.0&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4418&quot;&gt;#4418&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4419&quot;&gt;#4419&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4422&quot;&gt;#4422&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4437&quot;&gt;#4437&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4555&quot;&gt;#4555&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4559&quot;&gt;#4559&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4571&quot;&gt;#4571&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4581&quot;&gt;#4581&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fs-extra&lt;/code&gt; を &lt;code&gt;0.30.0&lt;/code&gt; から &lt;code&gt;8.0.1&lt;/code&gt; にアップグレードしました。CLIパッケージでのみ &lt;code&gt;5.0.0&lt;/code&gt; にアップグレードされました。で対処&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4418&quot;&gt;＃4418&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4419&quot;&gt;＃4419&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4422&quot;&gt;＃4422&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4437&quot;&gt;＃4437&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4555&quot;&gt;＃4555&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4559&quot;&gt;＃4559&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4571&quot;&gt;＃4571&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4581&quot;&gt;＃4581&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fd79c61476e92055472d53d4063df51b9f987845" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;fs-extra&lt;/code&gt; from &lt;code&gt;8.0.1&lt;/code&gt; to &lt;code&gt;8.1.0&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4620&quot;&gt;#4620&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fs-extra&lt;/code&gt; を &lt;code&gt;8.0.1&lt;/code&gt; から &lt;code&gt;8.1.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4620&quot;&gt;＃4620で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="269b4aab98947f8c8930bdbf4fa15ce7d53e2834" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;getos&lt;/code&gt; from &lt;code&gt;2.8.4&lt;/code&gt; to &lt;code&gt;3.1.1&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4222&quot;&gt;#4222&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;getos&lt;/code&gt; を &lt;code&gt;2.8.4&lt;/code&gt; から &lt;code&gt;3.1.1&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4222&quot;&gt;＃4222で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="3f0e5b2479552a602a32fe4df6e8359dc416ea28" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;glob&lt;/code&gt; from &lt;code&gt;7.1.2&lt;/code&gt; to &lt;code&gt;7.1.3&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3412&quot;&gt;#3412&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;glob&lt;/code&gt; を &lt;code&gt;7.1.2&lt;/code&gt; から &lt;code&gt;7.1.3&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3412&quot;&gt;＃3412&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bba67cd8a858038cb015d7cc732021e78704d89b" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;graceful-fs&lt;/code&gt; from &lt;code&gt;4.1.15&lt;/code&gt; to &lt;code&gt;4.2.0&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4818&quot;&gt;#4818&lt;/a&gt;.</source>
          <target state="translated">graceful &lt;code&gt;graceful-fs&lt;/code&gt; を &lt;code&gt;4.1.15&lt;/code&gt; から &lt;code&gt;4.2.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4818&quot;&gt;＃4818で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="2aabbff2688271c761a1339a8abbcdf67352d402" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;http-status-codes&lt;/code&gt; from &lt;code&gt;1.3.0&lt;/code&gt; to &lt;code&gt;1.3.2&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3949&quot;&gt;#3949&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;http-status-codes&lt;/code&gt; を &lt;code&gt;1.3.0&lt;/code&gt; から &lt;code&gt;1.3.2&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3949&quot;&gt;＃3949で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="00ef94b945f1335e9a0c59ed68fea5523a5b6da0" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;image-size&lt;/code&gt; from &lt;code&gt;0.5.5&lt;/code&gt; to &lt;code&gt;0.7.2&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3413&quot;&gt;#3413&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3500&quot;&gt;#3500&lt;/a&gt;.</source>
          <target state="translated">アップグレードされた &lt;code&gt;image-size&lt;/code&gt; から &lt;code&gt;0.5.5&lt;/code&gt; へ &lt;code&gt;0.7.2&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3413&quot;&gt;＃3413&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3500&quot;&gt;＃3500&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="40a8f3bf3c6d0c339f83f1c6a50a7ac3a9af23d4" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;is-ci&lt;/code&gt; from &lt;code&gt;1.0.10&lt;/code&gt; to &lt;code&gt;1.2.1&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3414&quot;&gt;#3414&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;is-ci&lt;/code&gt; を &lt;code&gt;1.0.10&lt;/code&gt; から &lt;code&gt;1.2.1&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3414&quot;&gt;＃3414&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="26ae52769cc1ea6bf2d725b4e411f0d6b871d128" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;jimp&lt;/code&gt; from &lt;code&gt;0.6.0&lt;/code&gt; to &lt;code&gt;0.6.4&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4097&quot;&gt;#4097&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;jimp&lt;/code&gt; を &lt;code&gt;0.6.0&lt;/code&gt; から &lt;code&gt;0.6.4&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4097&quot;&gt;＃4097で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="9b365fa0d40c85e95ba9c74a52d98dc759878502" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;lodash&lt;/code&gt; from &lt;code&gt;4.17.10&lt;/code&gt; to &lt;code&gt;4.17.11&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2929&quot;&gt;#2929&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;lodash&lt;/code&gt; を4.17.10から &lt;code&gt;4.17.10&lt;/code&gt; にアップグレードし &lt;code&gt;4.17.11&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2929&quot;&gt;＃2929を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="4eea13218e72639989f28ea5c33207f445e9fade" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;lodash&lt;/code&gt; from &lt;code&gt;4.17.11&lt;/code&gt; to &lt;code&gt;4.17.15&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4684&quot;&gt;#4684&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4709&quot;&gt;#4709&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4784&quot;&gt;#4784&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;lodash&lt;/code&gt; を4.17.11から &lt;code&gt;4.17.11&lt;/code&gt; にアップグレードし &lt;code&gt;4.17.15&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4684&quot;&gt;＃4684&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4709&quot;&gt;＃4709&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4784&quot;&gt;＃4784で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="a722e28d3065e4354423aba58465a01a5dac79fe" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;lodash&lt;/code&gt; from &lt;code&gt;4.17.4&lt;/code&gt; to &lt;code&gt;4.17.11&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3344&quot;&gt;#3344&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;lodash&lt;/code&gt; を4.17.4から &lt;code&gt;4.17.4&lt;/code&gt; にアップグレードし &lt;code&gt;4.17.11&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3344&quot;&gt;＃3344&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="656d9938a037592701b251f7a912442553183b16" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;mocha-junit-reporter&lt;/code&gt; from &lt;code&gt;1.17.0&lt;/code&gt; to &lt;code&gt;1.18.0&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3417&quot;&gt;#3417&lt;/a&gt;.</source>
          <target state="translated">アップグレードされた &lt;code&gt;mocha-junit-reporter&lt;/code&gt; から &lt;code&gt;1.17.0&lt;/code&gt; をする &lt;code&gt;1.18.0&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3417&quot;&gt;＃3417&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="779104bafe9eb09d51afe6037de1d8f0a716e57b" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;mocha-junit-reporter&lt;/code&gt; from &lt;code&gt;1.18.0&lt;/code&gt; to &lt;code&gt;1.23.0&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4417&quot;&gt;#4417&lt;/a&gt;.</source>
          <target state="translated">アップグレードされた &lt;code&gt;mocha-junit-reporter&lt;/code&gt; から &lt;code&gt;1.18.0&lt;/code&gt; をする &lt;code&gt;1.23.0&lt;/code&gt; 。で対処&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4417&quot;&gt;＃4417&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2600b2be341948e3add065e83dffd0e62ca45a69" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;mocha-junit-reporter&lt;/code&gt; from &lt;code&gt;1.23.0&lt;/code&gt; to &lt;code&gt;1.23.1&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4785&quot;&gt;#4785&lt;/a&gt;.</source>
          <target state="translated">アップグレードされた &lt;code&gt;mocha-junit-reporter&lt;/code&gt; から &lt;code&gt;1.23.0&lt;/code&gt; をする &lt;code&gt;1.23.1&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4785&quot;&gt;＃4785で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="b5e2133db465aefa2cda27dbd69d0ddfd9f4d0c4" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;moment&lt;/code&gt; from &lt;code&gt;2.23.0&lt;/code&gt; to &lt;code&gt;2.24.0&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3433&quot;&gt;#3433&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;moment&lt;/code&gt; を &lt;code&gt;2.23.0&lt;/code&gt; から2.24.0にアップグレードし &lt;code&gt;2.24.0&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3433&quot;&gt;＃3433&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="87cadb8c246fed84939d0cd87681e8553044164d" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;morgan&lt;/code&gt; from &lt;code&gt;1.3.0&lt;/code&gt; to &lt;code&gt;1.9.1&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3434&quot;&gt;#3434&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;morgan&lt;/code&gt; を &lt;code&gt;1.3.0&lt;/code&gt; から &lt;code&gt;1.9.1&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3434&quot;&gt;＃3434&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f4b62578deb6483517764801931242ad5d8da9f8" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;node-uuid&lt;/code&gt; from &lt;code&gt;1.4.1&lt;/code&gt; to &lt;code&gt;1.4.8&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3436&quot;&gt;#3436&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;node-uuid&lt;/code&gt; を &lt;code&gt;1.4.1&lt;/code&gt; から &lt;code&gt;1.4.8&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3436&quot;&gt;＃3436&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36c6c04f2313cce9dc2c0f6b17e68ec84fd3802c" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;node&lt;/code&gt; from &lt;code&gt;8.2.1&lt;/code&gt; to &lt;code&gt;8.9.3&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4001&quot;&gt;#4001&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; を &lt;code&gt;8.2.1&lt;/code&gt; から &lt;code&gt;8.9.3&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4001&quot;&gt;＃4001で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="ec210e8ac82f1ed8fef345ce2c37e1d5b6542236" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;p-queue&lt;/code&gt; from &lt;code&gt;1.2.0&lt;/code&gt; to &lt;code&gt;6.1.0&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4750&quot;&gt;#4750&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;p-queue&lt;/code&gt; を &lt;code&gt;1.2.0&lt;/code&gt; から &lt;code&gt;6.1.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4750&quot;&gt;＃4750で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="ae2783697168a2b21e971a09b01f6bc9a737810d" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;parse-domain&lt;/code&gt; from &lt;code&gt;2.0.0&lt;/code&gt; to &lt;code&gt;2.1.7&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3437&quot;&gt;#3437&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;parse-domain&lt;/code&gt; を &lt;code&gt;2.0.0&lt;/code&gt; から &lt;code&gt;2.1.7&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3437&quot;&gt;＃3437&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cdee8d1cea2cf44fd7dd3c468e0b8d1ed9bf2e2d" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;pluralize&lt;/code&gt; from &lt;code&gt;3.1.0&lt;/code&gt; to &lt;code&gt;7.0.0&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4205&quot;&gt;#4205&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4206&quot;&gt;#4206&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;pluralize&lt;/code&gt; を &lt;code&gt;3.1.0&lt;/code&gt; から &lt;code&gt;7.0.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4205&quot;&gt;＃4205&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4206&quot;&gt;＃4206で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="782d6c38d6ce2507bceae54189d24001e0bf296a" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;pluralize&lt;/code&gt; from &lt;code&gt;7.0.0&lt;/code&gt; to &lt;code&gt;8.0.0&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4438&quot;&gt;#4438&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;pluralize&lt;/code&gt; を &lt;code&gt;7.0.0&lt;/code&gt; から &lt;code&gt;8.0.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4438&quot;&gt;＃4438で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="2a49bd9bf5cf351ac6cdde050348babe2d5a1d3a" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;request-progress&lt;/code&gt; from &lt;code&gt;0.3.1&lt;/code&gt; to &lt;code&gt;0.4.0&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3445&quot;&gt;#3445&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;request-progress&lt;/code&gt; を &lt;code&gt;0.3.1&lt;/code&gt; から &lt;code&gt;0.4.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3445&quot;&gt;＃3445&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="522f213f8a6eb0b4a249b5866c7a715e3d702d29" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;request-progress&lt;/code&gt; from &lt;code&gt;0.4.0&lt;/code&gt; to &lt;code&gt;3.0.0&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4584&quot;&gt;#4584&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;request-progress&lt;/code&gt; を &lt;code&gt;0.4.0&lt;/code&gt; から &lt;code&gt;3.0.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4584&quot;&gt;＃4584で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="33285ab6dbdc63b9141eafc2d6a2169a47521c55" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;request-promise&lt;/code&gt; from &lt;code&gt;4.1.1&lt;/code&gt; to &lt;code&gt;4.2.4&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3446&quot;&gt;#3446&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3476&quot;&gt;#3476&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;request-promise&lt;/code&gt; を &lt;code&gt;4.1.1&lt;/code&gt; から &lt;code&gt;4.2.4&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3446&quot;&gt;＃3446&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3476&quot;&gt;＃3476&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b570cf64c79660d3b2fc64afdbbd2a7dcaf8773c" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;request&lt;/code&gt; from &lt;code&gt;2.87.0&lt;/code&gt; to &lt;code&gt;2.88.0&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3444&quot;&gt;#3444&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;request&lt;/code&gt; を &lt;code&gt;2.87.0&lt;/code&gt; から2.88.0にアップグレードし &lt;code&gt;2.88.0&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3444&quot;&gt;＃3444&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="97217a75128b4ee318a200baa94bd0a42981660b" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;return-deep-diff&lt;/code&gt; from &lt;code&gt;0.2.9&lt;/code&gt; to &lt;code&gt;0.3.0&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3447&quot;&gt;#3447&lt;/a&gt;.</source>
          <target state="translated">アップグレードされた &lt;code&gt;return-deep-diff&lt;/code&gt; から &lt;code&gt;0.2.9&lt;/code&gt; へ &lt;code&gt;0.3.0&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3447&quot;&gt;＃3447&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2bd56fb9a7fa6510de8ae8af0886604cd9d6bdf4" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;semver&lt;/code&gt; from &lt;code&gt;5.6.0&lt;/code&gt; to &lt;code&gt;5.7.0&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4112&quot;&gt;#4112&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;semver&lt;/code&gt; を &lt;code&gt;5.6.0&lt;/code&gt; から &lt;code&gt;5.7.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4112&quot;&gt;＃4112で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="05a561fd011399552fe09b0ba9e60b7ad38f3510" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;semver&lt;/code&gt; from &lt;code&gt;6.0.0&lt;/code&gt; to &lt;code&gt;6.3.0&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4797&quot;&gt;#4797&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;semver&lt;/code&gt; を &lt;code&gt;6.0.0&lt;/code&gt; から &lt;code&gt;6.3.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4797&quot;&gt;＃4797で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="5c71152f8383a654f7ad3bd0e035422c45771fc6" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;send&lt;/code&gt; from &lt;code&gt;0.14.2&lt;/code&gt; to &lt;code&gt;0.16.2&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3448&quot;&gt;#3448&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;send&lt;/code&gt; を &lt;code&gt;0.14.2&lt;/code&gt; から0.16.2にアップグレードし &lt;code&gt;0.16.2&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3448&quot;&gt;＃3448&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf0d7b3a1a730be42da50c0d94edfbcb95bdc255" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;send&lt;/code&gt; from &lt;code&gt;0.16.2&lt;/code&gt; to &lt;code&gt;0.17.0&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4134&quot;&gt;#4134&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;send&lt;/code&gt; を &lt;code&gt;0.16.2&lt;/code&gt; から0.17.0にアップグレードし &lt;code&gt;0.17.0&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4134&quot;&gt;＃4134で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="fe407eb167dd8f657e662f77fb8955f2d4f71669" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;shell-env&lt;/code&gt; from &lt;code&gt;0.3.0&lt;/code&gt; to &lt;code&gt;3.0.0&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4466&quot;&gt;#4466&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4467&quot;&gt;#4467&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4471&quot;&gt;#4471&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;shell-env&lt;/code&gt; を &lt;code&gt;0.3.0&lt;/code&gt; から &lt;code&gt;3.0.0&lt;/code&gt; にアップグレードしました。で対処&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4466&quot;&gt;＃4466&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4467&quot;&gt;＃4467&lt;/a&gt;、および&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4471&quot;&gt;＃4471&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7a8db591c1499fc719c25be6a589d3f75437ab5" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;sinon&lt;/code&gt; from &lt;code&gt;3.2.0&lt;/code&gt; to &lt;code&gt;3.3.0&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1328&quot;&gt;#1328&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;sinon&lt;/code&gt; を &lt;code&gt;3.2.0&lt;/code&gt; から &lt;code&gt;3.3.0&lt;/code&gt; にアップグレードしました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1328&quot;&gt;＃1328&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f546df1c90e6cf62fd3f42612e6819006010723c" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;ssl-root-cas&lt;/code&gt; from &lt;code&gt;1.2.5&lt;/code&gt; to &lt;code&gt;1.3.1&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3449&quot;&gt;#3449&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ssl-root-cas&lt;/code&gt; を &lt;code&gt;1.2.5&lt;/code&gt; から &lt;code&gt;1.3.1&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3449&quot;&gt;＃3449&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c6f41c7df0d268785735513e77a2b276c6a9afe4" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;supports-color&lt;/code&gt; from &lt;code&gt;5.1.0&lt;/code&gt; to &lt;code&gt;5.5.0&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3464&quot;&gt;#3464&lt;/a&gt;.</source>
          <target state="translated">アップグレードされた &lt;code&gt;5.5.0&lt;/code&gt; &lt;code&gt;supports-color&lt;/code&gt; が &lt;code&gt;5.1.0&lt;/code&gt; から5.5.0にアップグレードされました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3464&quot;&gt;＃3464&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c48249a48335bd2448de909de290204e7ee9a4d4" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;supports-color&lt;/code&gt; from &lt;code&gt;5.5.0&lt;/code&gt; to &lt;code&gt;6.1.0&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4150&quot;&gt;#4150&lt;/a&gt;.</source>
          <target state="translated">アップグレードされた &lt;code&gt;5.5.0&lt;/code&gt; &lt;code&gt;supports-color&lt;/code&gt; が5.5.0から6.1.0にアップグレードされ &lt;code&gt;6.1.0&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4150&quot;&gt;＃4150で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="7974835a1adf278e87e4a44c2e8308022c2eacf4" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;term-size&lt;/code&gt; from &lt;code&gt;1.2.0&lt;/code&gt; to &lt;code&gt;2.0.0&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4148&quot;&gt;#4148&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;term-size&lt;/code&gt; が &lt;code&gt;1.2.0&lt;/code&gt; から &lt;code&gt;2.0.0&lt;/code&gt; にアップグレードされました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4148&quot;&gt;＃4148で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="18718dc3433a43eba9b7c05dbd341b1b87b6c6cf" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;through&lt;/code&gt; from &lt;code&gt;2.3.6&lt;/code&gt; to &lt;code&gt;2.3.8&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3465&quot;&gt;#3465&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;2.3.6&lt;/code&gt; から &lt;code&gt;2.3.8&lt;/code&gt; にアップグレード &lt;code&gt;through&lt;/code&gt; れました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3465&quot;&gt;＃3465&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7362698e4d55bb11ff51e8f3baebd041ac416828" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;tmp&lt;/code&gt; from &lt;code&gt;0.0.31&lt;/code&gt; to &lt;code&gt;0.0.33&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3466&quot;&gt;#3466&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;tmp&lt;/code&gt; を &lt;code&gt;0.0.31&lt;/code&gt; から0.0.33にアップグレードし &lt;code&gt;0.0.33&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3466&quot;&gt;＃3466&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e1b715977ca6e2e9c69440554e4d3597d82121ef" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;tmp&lt;/code&gt; from &lt;code&gt;0.0.33&lt;/code&gt; to &lt;code&gt;0.1.0&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4111&quot;&gt;#4111&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;tmp&lt;/code&gt; を &lt;code&gt;0.0.33&lt;/code&gt; から &lt;code&gt;0.1.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4111&quot;&gt;＃4111で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="7927991b2f9f50ab3315df2ed31383e9222ed78f" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;tough-cookie&lt;/code&gt; from &lt;code&gt;2.4.3&lt;/code&gt; to &lt;code&gt;3.0.1&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3477&quot;&gt;#3477&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3659&quot;&gt;#3659&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;tough-cookie&lt;/code&gt; を &lt;code&gt;2.4.3&lt;/code&gt; から &lt;code&gt;3.0.1&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3477&quot;&gt;＃3477&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3659&quot;&gt;＃3659&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c844c6f392f4c9c6183e92354e443d47996593a" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;trash&lt;/code&gt; from &lt;code&gt;4.0.0&lt;/code&gt; to &lt;code&gt;4.3.0&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3478&quot;&gt;#3478&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;trash&lt;/code&gt; を &lt;code&gt;4.0.0&lt;/code&gt; から &lt;code&gt;4.3.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3478&quot;&gt;＃3478&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f3d993d30bcf08f9be419b40421484b8e5b2f7fe" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;trash&lt;/code&gt; from &lt;code&gt;4.3.0&lt;/code&gt; to &lt;code&gt;5.2.0&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4140&quot;&gt;#4140&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;trash&lt;/code&gt; を &lt;code&gt;4.3.0&lt;/code&gt; から &lt;code&gt;5.2.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4140&quot;&gt;＃4140で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="5b4a7129f966482663dedd8c55ab00fe52845f83" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;underscore.string&lt;/code&gt; from &lt;code&gt;3.3.4&lt;/code&gt; to &lt;code&gt;3.3.5&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3480&quot;&gt;#3480&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;underscore.string&lt;/code&gt; を &lt;code&gt;3.3.4&lt;/code&gt; から &lt;code&gt;3.3.5&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3480&quot;&gt;＃3480&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a2ed8c3e9b406565964f53cc0f025c7cffb7e695" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;url-parse&lt;/code&gt; from &lt;code&gt;1.4.4&lt;/code&gt; to &lt;code&gt;1.4.7&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4110&quot;&gt;#4110&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;url-parse&lt;/code&gt; を &lt;code&gt;1.4.4&lt;/code&gt; から &lt;code&gt;1.4.7&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4110&quot;&gt;＃4110で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="9fd3438bec71eb2dc06d53f0a916fdb856ef51d6" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;widest-line&lt;/code&gt; from &lt;code&gt;2.0.1&lt;/code&gt; to &lt;code&gt;3.1.0&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4139&quot;&gt;#4139&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;widest-line&lt;/code&gt; を &lt;code&gt;2.0.1&lt;/code&gt; から &lt;code&gt;3.1.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4139&quot;&gt;＃4139で&lt;/a&gt;対処。</target>
        </trans-unit>
        <trans-unit id="74d73024dc83bf7689dd4181a9b04ca8a515f744" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;winston&lt;/code&gt; from &lt;code&gt;0.9.0&lt;/code&gt; to &lt;code&gt;2.4.4&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4538&quot;&gt;#4538&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;winston&lt;/code&gt; を &lt;code&gt;0.9.0&lt;/code&gt; から &lt;code&gt;2.4.4&lt;/code&gt; にアップグレードしました。で対処&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4538&quot;&gt;＃4538&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6c9b0e68767a4d93f65f369707a8723a9e4d7249" translate="yes" xml:space="preserve">
          <source>Upgraded &lt;code&gt;yauzl&lt;/code&gt; from &lt;code&gt;2.8.0&lt;/code&gt; to &lt;code&gt;2.10.0&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3481&quot;&gt;#3481&lt;/a&gt;. Potentially fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3515&quot;&gt;#3515&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;yauzl&lt;/code&gt; を &lt;code&gt;2.8.0&lt;/code&gt; から &lt;code&gt;2.10.0&lt;/code&gt; にアップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3481&quot;&gt;＃3481&lt;/a&gt;。潜在的に&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3515&quot;&gt;＃3515を&lt;/a&gt;修正します。</target>
        </trans-unit>
        <trans-unit id="1d49d089e3f08901d1cf1be94ce2b9846f8281a5" translate="yes" xml:space="preserve">
          <source>Upgraded @cypress/browserify-preprocessor from &lt;code&gt;1.1.0&lt;/code&gt; to &lt;code&gt;1.1.1&lt;/code&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2513&quot;&gt;#2513&lt;/a&gt;</source>
          <target state="translated">@ cypress / browserify-preprocessorを &lt;code&gt;1.1.0&lt;/code&gt; から &lt;code&gt;1.1.1&lt;/code&gt; にアップグレードしました&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2513&quot;&gt;＃2513&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="925fb6441ff1118d9920ae4ec5315aeaa51550f4" translate="yes" xml:space="preserve">
          <source>Upgraded @types/jquery from &lt;code&gt;3.2.16&lt;/code&gt; to &lt;code&gt;3.3.6&lt;/code&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2363&quot;&gt;#2363&lt;/a&gt;</source>
          <target state="translated">@ types / jqueryを &lt;code&gt;3.2.16&lt;/code&gt; から &lt;code&gt;3.3.6&lt;/code&gt; にアップグレードしました&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2363&quot;&gt;＃2363&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4468b3f90f4c0d53f64ee758dc7221c71e3d2ca6" translate="yes" xml:space="preserve">
          <source>Upgraded common-tags from &lt;code&gt;^1.4.0&lt;/code&gt; to &lt;code&gt;^1.8.0&lt;/code&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2415&quot;&gt;#2415&lt;/a&gt;</source>
          <target state="translated">共通タグを &lt;code&gt;^1.4.0&lt;/code&gt; から &lt;code&gt;^1.8.0&lt;/code&gt; アップグレードしました&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2415&quot;&gt;＃2415&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a30cc23196ee6d03d3574b5b5dcc4b8d5826303" translate="yes" xml:space="preserve">
          <source>Upgraded logic to redirect back to the Cypress client app on manual URL changes.</source>
          <target state="translated">手動でURLを変更した場合にCypressクライアントアプリにリダイレクトするロジックをアップグレードしました。</target>
        </trans-unit>
        <trans-unit id="fb815703e709bb69682d8277cea89b899a095d30" translate="yes" xml:space="preserve">
          <source>Upgraded lolex from &lt;code&gt;^1.5.2&lt;/code&gt; to &lt;code&gt;^3.0.0&lt;/code&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2570&quot;&gt;#2570&lt;/a&gt;</source>
          <target state="translated">lolexを &lt;code&gt;^1.5.2&lt;/code&gt; から &lt;code&gt;^3.0.0&lt;/code&gt; アップグレードしました&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2570&quot;&gt;＃2570&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="753607e944a5d06e99c3600e0ede61a7108810be" translate="yes" xml:space="preserve">
          <source>Upgraded nodemon from &lt;code&gt;^1.8.1&lt;/code&gt; to &lt;code&gt;^1.8.7&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2864&quot;&gt;#2864&lt;/a&gt;.</source>
          <target state="translated">nodemonを &lt;code&gt;^1.8.1&lt;/code&gt; から &lt;code&gt;^1.8.7&lt;/code&gt; アップグレードしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2864&quot;&gt;＃2864を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="9f4f28c7d88c421b74ff142b2d5518aab5f8eaee" translate="yes" xml:space="preserve">
          <source>Upgraded request from &lt;code&gt;^2.27.0&lt;/code&gt; and &lt;code&gt;^2.28.0&lt;/code&gt; to &lt;code&gt;^4.0.0&lt;/code&gt;, Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2455&quot;&gt;#2455&lt;/a&gt;.</source>
          <target state="translated">リクエストを &lt;code&gt;^2.27.0&lt;/code&gt; および &lt;code&gt;^2.28.0&lt;/code&gt; から &lt;code&gt;^4.0.0&lt;/code&gt; にアップグレードし&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2455&quot;&gt;ました&lt;/a&gt;。修正＃2455。</target>
        </trans-unit>
        <trans-unit id="b5c6c0714dbc8459c151e8970500712bca5221cf" translate="yes" xml:space="preserve">
          <source>Upgraded the Chromium version running headlessly and in CI from &lt;code&gt;47&lt;/code&gt; to &lt;code&gt;49&lt;/code&gt;.</source>
          <target state="translated">ヘッドレスでCIで実行されているChromiumのバージョンを &lt;code&gt;47&lt;/code&gt; から &lt;code&gt;49&lt;/code&gt; にアップグレードしました。</target>
        </trans-unit>
        <trans-unit id="248f28e438b78565339f8c3df4a31ee0c400ea3f" translate="yes" xml:space="preserve">
          <source>Upgraded various CLI dependencies that were flagged for security warnings. There wasn&amp;rsquo;t an actual security problem - just static analyzers complaining. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1103&quot;&gt;#1103&lt;/a&gt;.</source>
          <target state="translated">セキュリティ警告のフラグが付いたさまざまなCLI依存関係をアップグレードしました。実際のセキュリティ問題はありませんでした-静的アナライザーが不平を言っています。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1103&quot;&gt;＃1103を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="8d8290bd27fd063bce98561442d9b0b5d7c843dc" translate="yes" xml:space="preserve">
          <source>Upgraded zunder from &lt;code&gt;5.6.5&lt;/code&gt; to &lt;code&gt;6.1.1&lt;/code&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2541&quot;&gt;#2541&lt;/a&gt;</source>
          <target state="translated">zunderを &lt;code&gt;5.6.5&lt;/code&gt; から &lt;code&gt;6.1.1&lt;/code&gt; にアップグレードしました&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2541&quot;&gt;＃2541&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17f70edccd3706ae662dc4731c0dab1f831b984b" translate="yes" xml:space="preserve">
          <source>Upon completion of all spec files, Cypress &lt;a href=&quot;#Run-completion-delay&quot;&gt;waits for a configurable amount of time&lt;/a&gt; before considering the test run as fully complete. This is done to better support &lt;a href=&quot;#Grouping-test-runs&quot;&gt;grouping of runs&lt;/a&gt;.</source>
          <target state="translated">すべてのスペックファイルが完了すると、サイプレス&lt;a href=&quot;#Run-completion-delay&quot;&gt;は構成可能な時間待機して&lt;/a&gt;から、テストの実行が完全に完了したと見なします。これは&lt;a href=&quot;#Grouping-test-runs&quot;&gt;、実行のグループ化&lt;/a&gt;をより適切にサポートするために行われます。</target>
        </trans-unit>
        <trans-unit id="09f1844a3497873e22ca7a6b613342587ca9d6dd" translate="yes" xml:space="preserve">
          <source>Upon receiving requests from a CI machines, Cypress calculates the estimated duration to test each spec file.</source>
          <target state="translated">CIマシンからリクエストを受け取ると、Cypressは各スペックファイルをテストするための推定期間を計算します。</target>
        </trans-unit>
        <trans-unit id="8b6a94277372172bcd87f914f01edd351a9225e0" translate="yes" xml:space="preserve">
          <source>Upon transferring, you can cancel the transfer at any time by visiting the organization&amp;rsquo;s projects and clicking &lt;strong&gt;Cancel Transfer&lt;/strong&gt;.</source>
          <target state="translated">転送時に、組織のプロジェクトにアクセスして[ &lt;strong&gt;転送のキャンセル&lt;/strong&gt; ]をクリックすると、いつでも転送をキャンセルできます。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="e396e5460c52f91564ef9686f81f8330c2b51809" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../../api/commands/debug&quot;&gt;&lt;code&gt;.debug()&lt;/code&gt;&lt;/a&gt; to quickly inspect any (or many!) part(s) of your application during the test. You can attach it to any Cypress chain of commands to have a look at the system&amp;rsquo;s state at that moment.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/debug&quot;&gt; &lt;code&gt;.debug()&lt;/code&gt; &lt;/a&gt;を使用して、テスト中にアプリケーションの任意の（または多くの！）部分をすばやく検査します。これをサイプレスのコマンドチェーンに添付して、その時点でのシステムの状態を確認できます。</target>
        </trans-unit>
        <trans-unit id="fed84418e829a7e6e39ed1a29a490392988d02dc" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;.invoke('show')&lt;/code&gt; and &lt;code&gt;.invoke('trigger')&lt;/code&gt;</source>
          <target state="translated">使用は &lt;code&gt;.invoke('show')&lt;/code&gt; と &lt;code&gt;.invoke('trigger')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c7c2242b9a1172babc3b05b97881f70051d358f5" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;.invoke()&lt;/code&gt; to test HTML content</source>
          <target state="translated">&lt;code&gt;.invoke()&lt;/code&gt; を使用してHTMLコンテンツをテストする</target>
        </trans-unit>
        <trans-unit id="4a50188ce050cbf0f856bb5daf18964551e477e0" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;.its()&lt;/code&gt; to test &lt;code&gt;window.fetch&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.its()&lt;/code&gt; を使用してwindow.fetchをテスト &lt;code&gt;window.fetch&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="03bcf6155d8620200263cfd4a803454ccb3f9506" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Cypress.Blob&lt;/code&gt; to convert &lt;code&gt;base64&lt;/code&gt; strings to Blob objects. Useful for testing uploads.</source>
          <target state="translated">&lt;code&gt;Cypress.Blob&lt;/code&gt; を使用して、 &lt;code&gt;base64&lt;/code&gt; 文字列をBlobオブジェクトに変換します。アップロードのテストに役立ちます。</target>
        </trans-unit>
        <trans-unit id="079f118d3454a0a70fae3a79c11297d35aa74d29" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Cypress.Promise&lt;/code&gt; to create promises. Cypress is promise aware so if you return a promise from inside of commands like &lt;a href=&quot;../commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt;, Cypress will not continue until those promises resolve.</source>
          <target state="translated">&lt;code&gt;Cypress.Promise&lt;/code&gt; を使用してpromiseを作成します。サイプレスはプロミス対応であるため、&lt;a href=&quot;../commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;などのコマンドの内部からプロミスを返す場合、それらのプロミスが解決されるまでサイプレスは続行しません。</target>
        </trans-unit>
        <trans-unit id="1796d8fc2c806e671573ad83f4de9acb8cfdf7f3" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Cypress.minimatch&lt;/code&gt; to test out glob patterns against strings.</source>
          <target state="translated">&lt;code&gt;Cypress.minimatch&lt;/code&gt; を使用して、文字列に対してグロブパターンをテストします。</target>
        </trans-unit>
        <trans-unit id="05b122f94f5c68d23bcc31e66c014f398fe08fe7" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Cypress.moment&lt;/code&gt; to help format or parse dates.</source>
          <target state="translated">日付のフォーマットまたは解析に役立つ &lt;code&gt;Cypress.moment&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="c8b3942af4b351e25aa730862398942fb5c31652" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;cy.invoke('removeAttr', 'target')&lt;/code&gt; to get around new tab</source>
          <target state="translated">新しいタブを回避するには、 &lt;code&gt;cy.invoke('removeAttr', 'target')&lt;/code&gt; を使用します</target>
        </trans-unit>
        <trans-unit id="725f88879fbbb62fa76f1873d2e2f7cec2d373dc" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;cy.route()&lt;/code&gt; to manage the behavior of network requests.</source>
          <target state="translated">&lt;code&gt;cy.route()&lt;/code&gt; を使用して、ネットワーク要求の動作を管理します。</target>
        </trans-unit>
        <trans-unit id="c5c0671a0be6041e5f1d3866fb7667e4202e512d" translate="yes" xml:space="preserve">
          <source>Use Cases</source>
          <target state="translated">使用事例</target>
        </trans-unit>
        <trans-unit id="974a0435fbdbec3ba5d3b9b900ca609b59340fab" translate="yes" xml:space="preserve">
          <source>Use Cookies to know ahead of time:</source>
          <target state="translated">事前に知るためにクッキーを使用しています。</target>
        </trans-unit>
        <trans-unit id="dbed4fac9f9db1558733ad4b7b1ffe929bfc8c91" translate="yes" xml:space="preserve">
          <source>Use URL query params:</source>
          <target state="translated">URL クエリのパラメータを使用します。</target>
        </trans-unit>
        <trans-unit id="d84dfef25f7289285659e912e05c590e064b9b1b" translate="yes" xml:space="preserve">
          <source>Use delays for responses</source>
          <target state="translated">応答に遅延を使用する</target>
        </trans-unit>
        <trans-unit id="a914a2d305583f8c92ee440f4d63c0f2d8f538c2" translate="yes" xml:space="preserve">
          <source>Use fake video for webcam testing</source>
          <target state="translated">ウェブカムテストのために偽のビデオを使用する</target>
        </trans-unit>
        <trans-unit id="1fae9e857fc4bb2aaee1f89d3487850426f04064" translate="yes" xml:space="preserve">
          <source>Use for the vast majority of tests</source>
          <target state="translated">大半のテストに使用</target>
        </trans-unit>
        <trans-unit id="8d2d9f99b67ffaf17e29f21560f6498e737dfe80" translate="yes" xml:space="preserve">
          <source>Use glob to match all segments</source>
          <target state="translated">すべてのセグメントをマッチさせるには glob を使用します。</target>
        </trans-unit>
        <trans-unit id="0621658036b6ae41efa5c6320f69aea1863dc4b0" translate="yes" xml:space="preserve">
          <source>Use keyboard shortcuts in body</source>
          <target state="translated">ボディ内でキーボードショートカットを使用する</target>
        </trans-unit>
        <trans-unit id="79b42fa1084b72e2c8ae949c183507968a3079ed" translate="yes" xml:space="preserve">
          <source>Use linear easing animation to scroll</source>
          <target state="translated">直線的なイージングアニメーションを使用してスクロール</target>
        </trans-unit>
        <trans-unit id="ce61d8234dba451ede6d97f53dd4a971cd2e11b4" translate="yes" xml:space="preserve">
          <source>Use modules for utility functions</source>
          <target state="translated">ユーティリティ機能にモジュールを使用する</target>
        </trans-unit>
        <trans-unit id="bd9a0ed0c90b4a41ce14133057c7e0520685ce39" translate="yes" xml:space="preserve">
          <source>Use multiple environments with their own configurations</source>
          <target state="translated">独自の構成で複数の環境を使用する</target>
        </trans-unit>
        <trans-unit id="7f28294d174cbba2fa8bf1ad905f23c5e6cdb8dc" translate="yes" xml:space="preserve">
          <source>Use session cookies:</source>
          <target state="translated">セッションクッキーを使用します。</target>
        </trans-unit>
        <trans-unit id="2e4662c69cf11402ec5d1d18957641f3ed86e011" translate="yes" xml:space="preserve">
          <source>Use sparingly</source>
          <target state="translated">惜しみなく使う</target>
        </trans-unit>
        <trans-unit id="6b935f3f185b3cab79fc612a23a14b9e0eb8c107" translate="yes" xml:space="preserve">
          <source>Use supportFile to load scripts before your test code</source>
          <target state="translated">テストコードの前にスクリプトをロードするために supportFile を使用します。</target>
        </trans-unit>
        <trans-unit id="b6266927f1b2416430f07013c0c83aa9eebc5bb0" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../../api/cypress-api/selector-playground-api&quot;&gt;&lt;code&gt;Cypress.SelectorPlayground&lt;/code&gt;&lt;/a&gt; API to control the selectors you want returned.</source>
          <target state="translated">&lt;a href=&quot;../../api/cypress-api/selector-playground-api&quot;&gt; &lt;code&gt;Cypress.SelectorPlayground&lt;/code&gt; &lt;/a&gt; APIを使用して、返されるセレクターを制御します。</target>
        </trans-unit>
        <trans-unit id="95967e43ebe51d4d812478938534e9a1366e46f7" translate="yes" xml:space="preserve">
          <source>Use the URL to control it:</source>
          <target state="translated">URLを使って制御します。</target>
        </trans-unit>
        <trans-unit id="288c0e7a93cdabd016015366d2837520b1200cd9" translate="yes" xml:space="preserve">
          <source>Use the built-in Electron browser for tests, since it is not affected by these policies. &lt;a href=&quot;../guides/launching-browsers#Electron-Browser&quot;&gt;See the guide to launching browsers for more information.&lt;/a&gt;</source>
          <target state="translated">これらのポリシーの影響を受けないため、組み込みのElectronブラウザーをテストに使用します。&lt;a href=&quot;../guides/launching-browsers#Electron-Browser&quot;&gt;詳細については、ブラウザの起動ガイドを参照してください。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="863b8d88fbea13fea534e1a7b5cf2bc4db467b64" translate="yes" xml:space="preserve">
          <source>Use the following npm keywords:</source>
          <target state="translated">以下のnpmキーワードを使用します。</target>
        </trans-unit>
        <trans-unit id="8d6753b0c1b3aa8e71091f87719d4443c917aa0e" translate="yes" xml:space="preserve">
          <source>Use the methodology above when working with any area of your system that requires the state to be set up elsewhere. Just remember - don&amp;rsquo;t use your UI!</source>
          <target state="translated">他の場所で状態を設定する必要があるシステムの領域を操作する場合は、上記の方法を使用してください。覚えておいてください-UIを使用しないでください！</target>
        </trans-unit>
        <trans-unit id="3c356378ef1325c383a20a90d460742016d40571" translate="yes" xml:space="preserve">
          <source>Use the server:</source>
          <target state="translated">サーバーを使用します。</target>
        </trans-unit>
        <trans-unit id="ae0fc7b2b77c62912b78aa45923b531f250e5eda" translate="yes" xml:space="preserve">
          <source>Use this approach to grab the value of an environment variable &lt;em&gt;once&lt;/em&gt; before any of the tests in your spec run.</source>
          <target state="translated">このアプローチを使用して、スペック内のテストを実行する前に、環境変数の値を&lt;em&gt;一度&lt;/em&gt;取得します。</target>
        </trans-unit>
        <trans-unit id="4c07e057706d439ee1e78f31877e13d96a7ebe49" translate="yes" xml:space="preserve">
          <source>Use wildcard &lt;code&gt;*&lt;/code&gt; patterns</source>
          <target state="translated">ワイルドカード &lt;code&gt;*&lt;/code&gt; パターンを使用する</target>
        </trans-unit>
        <trans-unit id="c11932316f15a900af3e022b72d86d0f46df60fb" translate="yes" xml:space="preserve">
          <source>Use your &lt;strong&gt;guards&lt;/strong&gt; to describe what your application should look like, and Cypress will automatically &lt;strong&gt;block, wait, and retry&lt;/strong&gt; until it reaches that state.</source>
          <target state="translated">&lt;strong&gt;ガード&lt;/strong&gt;を使用して、アプリケーションの外観を記述します。サイプレスは&lt;strong&gt;、&lt;/strong&gt;その状態になるまで自動的に&lt;strong&gt;ブロックし、待機し、再試行&lt;/strong&gt;します。</target>
        </trans-unit>
        <trans-unit id="5b8c969d48122fe2991d2eb36a992274d31b5643" translate="yes" xml:space="preserve">
          <source>Use your server or database:</source>
          <target state="translated">サーバーまたはデータベースを使用します。</target>
        </trans-unit>
        <trans-unit id="53fbda4f355cad1f964a481ff9e58263b6015349" translate="yes" xml:space="preserve">
          <source>Use your server to receive messages from the browser, and simulate &amp;ldquo;the other participant&amp;rdquo; by sending messages as that participant. This is certainly application specific, but generally you could insert records into the database or do whatever it takes for your server to act as if a message of one client needs to be sent back to the browser.</source>
          <target state="translated">サーバーを使用してブラウザからメッセージを受信し、その参加者としてメッセージを送信することで「他の参加者」をシミュレートします。これは確かにアプリケーション固有のものですが、一般的には、データベースにレコードを挿入するか、サーバーが1つのクライアントのメッセージをブラウザに送り返す必要があるかのように動作するために必要なことを何でも行うことができます。</target>
        </trans-unit>
        <trans-unit id="6fc7de86392419e7b3ce3263bc522f830750a831" translate="yes" xml:space="preserve">
          <source>Useful when writing your own &lt;a href=&quot;custom-commands&quot;&gt;custom commands&lt;/a&gt;.</source>
          <target state="translated">独自の&lt;a href=&quot;custom-commands&quot;&gt;カスタムコマンドを&lt;/a&gt;作成するときに役立ちます。</target>
        </trans-unit>
        <trans-unit id="dbcd80b33b37c1c825efcd508340071159da1133" translate="yes" xml:space="preserve">
          <source>User agent</source>
          <target state="translated">ユーザーエージェント</target>
        </trans-unit>
        <trans-unit id="9ee8db3d1a22107acec741d2729f19f5a396b430" translate="yes" xml:space="preserve">
          <source>User requests</source>
          <target state="translated">ユーザーリクエスト</target>
        </trans-unit>
        <trans-unit id="e600ddd56d137d954f72878bc2ae273eb483ce34" translate="yes" xml:space="preserve">
          <source>User roles</source>
          <target state="translated">ユーザーの役割</target>
        </trans-unit>
        <trans-unit id="cc648c60b9fe4e799f28b636faeb1194d203f7f4" translate="yes" xml:space="preserve">
          <source>User space solution for grepping Cypress tests to run</source>
          <target state="translated">Cypress テストを実行するためのユーザスペースソリューション</target>
        </trans-unit>
        <trans-unit id="5fd89cdcba6b0938d34972fdf97ad65e3a322325" translate="yes" xml:space="preserve">
          <source>Username taken</source>
          <target state="translated">取得したユーザー名</target>
        </trans-unit>
        <trans-unit id="57f2b181d0a5e79a147ea1cdf41457f58dbbb3c9" translate="yes" xml:space="preserve">
          <source>Users</source>
          <target state="translated">Users</target>
        </trans-unit>
        <trans-unit id="072aec5aec61ac82a439747f677efa79cf5d1240" translate="yes" xml:space="preserve">
          <source>Users can &amp;ldquo;request&amp;rdquo; access to a given organization. If a developer on your team has access to Cypress and your project&amp;rsquo;s source code - they can request to be given access to your organization. This means instead of you having to invite team members up front, they can request access and you can choose to accept or deny them access.</source>
          <target state="translated">ユーザーは特定の組織へのアクセスを「リクエスト」できます。チームの開発者がサイプレスとプロジェクトのソースコードにアクセスできる場合、組織へのアクセス権の付与を要求できます。つまり、チームメンバーを事前に招待する代わりに、チームメンバーがアクセスを要求し、アクセスを受け入れるか拒否するかを選択できます。</target>
        </trans-unit>
        <trans-unit id="3067c13cbf3999bcc8676ace09778ab255fa299f" translate="yes" xml:space="preserve">
          <source>Users can be assigned roles that affect their access to certain features of the &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard Service&lt;/a&gt;.</source>
          <target state="translated">ユーザーには、&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;ダッシュボードサービスの&lt;/a&gt;特定の機能へのアクセスに影響を与える役割を割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="2ad56a6e0d4d74a22932f52b0842bd25dfaa1f0a" translate="yes" xml:space="preserve">
          <source>Users can now log in to the Test Runner through the browser installed on their system. This also allows for login via GitHub with U2F keys. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3583&quot;&gt;#3583&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4337&quot;&gt;#4337&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1162&quot;&gt;#1162&lt;/a&gt;.</source>
          <target state="translated">これで、ユーザーは、システムにインストールされているブラウザーを介してテストランナーにログインできます。これにより、U2Fキーを使用してGitHub経由でログインすることもできます。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3583&quot;&gt;＃3583&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4337&quot;&gt;＃4337&lt;/a&gt;、および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1162&quot;&gt;＃1162&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4a2c8ec00d7b2685580ec982c582e016fb94c6c6" translate="yes" xml:space="preserve">
          <source>Users now see a specialized error message when Cypress could not serve static files from the file system.</source>
          <target state="translated">Cypress がファイルシステムから静的ファイルを提供できなかった場合、特別なエラーメッセージが表示されるようになりました。</target>
        </trans-unit>
        <trans-unit id="8b620fb71e862f6ba83cac375fae22204f1fcc93" translate="yes" xml:space="preserve">
          <source>Uses the browser&amp;rsquo;s internal APIs for network level traffic.</source>
          <target state="translated">ネットワークレベルのトラフィックにブラウザーの内部APIを使用します。</target>
        </trans-unit>
        <trans-unit id="a08d45c91a63407070e07c9ec23bf2e0080d568b" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; on an input with a &lt;code&gt;maxlength&lt;/code&gt; attribute now works. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1002&quot;&gt;#1002&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2056&quot;&gt;#2056&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;maxlength&lt;/code&gt; 属性のある入力で&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt;を使用すると機能するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1002&quot;&gt;＃1002&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2056&quot;&gt;＃2056を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="cee4869606a3afe899e37e626d431de11ccc31a1" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; on inputs of type &amp;lsquo;date&amp;rsquo; is now working. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2738&quot;&gt;#2738&lt;/a&gt;</source>
          <target state="translated">タイプ 'date'の入力で&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt;を使用することが機能するようになりました。修正&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2738&quot;&gt;＃2738&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f9840063b6a802021264662ad4d265d29ec57d58" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; with a RegExp argument is now properly escaped. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1322&quot;&gt;#1322&lt;/a&gt;.</source>
          <target state="translated">RegExp引数で&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;を使用すると、適切にエスケープされるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1322&quot;&gt;＃1322を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="33e1f4cdbf90e035f3af42da5f9e3c6bab7de976" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../../api/commands/debug&quot;&gt;&lt;code&gt;.debug()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/debug&quot;&gt; &lt;code&gt;.debug()&lt;/code&gt; の&lt;/a&gt;使用</target>
        </trans-unit>
        <trans-unit id="09dadd985942483d7bf737526c1a2c49f9a3b0e1" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../../api/commands/hover&quot;&gt;&lt;code&gt;.hover()&lt;/code&gt;&lt;/a&gt; will provide a detailed error message with a link for working around hover constraints. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/10&quot;&gt;#10&lt;/a&gt;</source>
          <target state="translated">使用&lt;a href=&quot;../../api/commands/hover&quot;&gt; &lt;code&gt;.hover()&lt;/code&gt; &lt;/a&gt;ホバー制約を中心に作業するためのリンクと詳細なエラーメッセージを提供します。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/10&quot;&gt;＃10&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0b08276a1193a51b217b5dee2402ce5ba854fca" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; on a function or &lt;a href=&quot;../../api/commands/invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt; on a property now logs a deprecation warning. In the next major release this will become a full error. It is valuable to make a distinction whether you&amp;rsquo;re operating on a property vs a function, and this change improves overall readability with less confusion.</source>
          <target state="translated">関数で&lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt;を使用するか、プロパティで&lt;a href=&quot;../../api/commands/invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; &lt;/a&gt;を使用すると、非推奨の警告がログに記録されるようになりました。次のメジャーリリースでは、これは完全なエラーになります。プロパティと関数のどちらを操作しているかを区別することは重要です。この変更により、全体的な読みやすさが向上し、混乱が少なくなります。</target>
        </trans-unit>
        <trans-unit id="8504b7aadf0bc74dec2b1a8f1e7c3d6f3bbef936" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; on a function will now allow you to access its properties instead of automatically calling a function. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/122&quot;&gt;#122&lt;/a&gt;.</source>
          <target state="translated">関数で&lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt;を使用すると、関数を自動的に呼び出す代わりに、そのプロパティにアクセスできるようになります。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/122&quot;&gt;＃122を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="2bc71e5bda1d0e6d0b86df22eb1608015940a803" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/and&quot;&gt;&lt;code&gt;.and()&lt;/code&gt;&lt;/a&gt; commands is the preferred way of making assertions in Cypress. These are typical Cypress commands, which means they apply to the currently yielded subject in the command chain.</source>
          <target state="translated">使用&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../api/commands/and&quot;&gt; &lt;code&gt;.and()&lt;/code&gt; &lt;/a&gt;コマンドはサイプレスでアサーションを製造する好ましい方法です。これらは典型的なサイプレスコマンドです。つまり、コマンドチェーンで現在生成されているサブジェクトに適用されます。</target>
        </trans-unit>
        <trans-unit id="84fcd309cba2c57266a69e02cf2e7bd074b4bccf" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; To Act On A Subject</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;を使用してサブジェクトに作用する</target>
        </trans-unit>
        <trans-unit id="04d2eedc67e0a0ed8988c54bf8583dce3c66d1c6" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../../api/commands/title&quot;&gt;&lt;code&gt;cy.title()&lt;/code&gt;&lt;/a&gt; would incorrectly search the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; for title elements, and is now restricted to only searching in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/title&quot;&gt; &lt;code&gt;cy.title()&lt;/code&gt; &lt;/a&gt;を使用すると、タイトル要素の &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; が誤って検索され、 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 内の検索のみに制限されるようになりました</target>
        </trans-unit>
        <trans-unit id="1122885cd4d01ffe0b0c63f28bbc3de587291b5e" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; in an &lt;code&gt;input[type=number]&lt;/code&gt; will no longer prepend the value. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/26&quot;&gt;#26&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;input[type=number]&lt;/code&gt; で&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;を使用しても、値の前に付加されなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/26&quot;&gt;＃26を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="0bac50ca3abcd3fb0d230bf110ab3c44ee5b7ab8" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; on an input of type &lt;code&gt;email&lt;/code&gt; or &lt;code&gt;number&lt;/code&gt; will no longer fire unnecessary additional &lt;code&gt;blur&lt;/code&gt; and &lt;code&gt;focus&lt;/code&gt; events. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2210&quot;&gt;#2210&lt;/a&gt;.</source>
          <target state="translated">タイプが &lt;code&gt;email&lt;/code&gt; または &lt;code&gt;number&lt;/code&gt; 入力で&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;を使用しても、不要な追加の &lt;code&gt;blur&lt;/code&gt; および &lt;code&gt;focus&lt;/code&gt; イベントが発生しなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2210&quot;&gt;＃2210を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="25e8eb57ec193de2f2d08c080addf29826e57fd1" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; is easy, we just pass it the URL we want to visit. Let&amp;rsquo;s replace our previous test with the one below that actually visits a page:</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; の&lt;/a&gt;使用は簡単です。アクセスしたいURLを渡すだけです。以前のテストを、実際にページにアクセスする以下のテストに置き換えます。</target>
        </trans-unit>
        <trans-unit id="a029d3570dbc2db1d2b958be6c30d23c2acf2d2e" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; now acts &lt;em&gt;exactly&lt;/em&gt; how modifying the URL in a real browser works. This means that if you visit a url with a hash in it, instead of forcing a full page refresh, it will now modify the hash route as if you had manually changed it. This more accurately reflects real user behavior. Previously this was impossible to do with Cypress other than manually altering &lt;code&gt;window.location.hash&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;を使用すると、実際のブラウザでURLを変更する方法が&lt;em&gt;正確に&lt;/em&gt;機能するようになりました。つまり、ハッシュを含むURLにアクセスすると、ページ全体を強制的に更新する代わりに、手動で変更したかのようにハッシュルートが変更されるようになります。これは、実際のユーザーの行動をより正確に反映しています。以前は、手動で &lt;code&gt;window.location.hash&lt;/code&gt; を変更する以外に、これをサイプレスで行うことは不可能でした。</target>
        </trans-unit>
        <trans-unit id="b7d51ac245d5cc9345e32a62cae5a471c34b4612" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; in OSX now works again.</source>
          <target state="translated">OSXでの&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; の&lt;/a&gt;使用が再び機能するようになりました。</target>
        </trans-unit>
        <trans-unit id="83c82299e30d8500348c47a15253b3803180701b" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;assertions#TDD-Assertions&quot;&gt;Chai.js&amp;rsquo;s &lt;code&gt;assert&lt;/code&gt; interface&lt;/a&gt; now works correctly in your specs.</source>
          <target state="translated">&lt;a href=&quot;assertions#TDD-Assertions&quot;&gt;Chai.jsの &lt;code&gt;assert&lt;/code&gt; インターフェース&lt;/a&gt;を使用すると、仕様で正しく動作するようになりました。</target>
        </trans-unit>
        <trans-unit id="5577529a7b903ee59fb75ff5ec85b62db89ccbc4" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;spread&quot;&gt;&lt;code&gt;.spread()&lt;/code&gt;&lt;/a&gt; to spread the array into multiple arguments.</source>
          <target state="translated">&lt;a href=&quot;spread&quot;&gt; &lt;code&gt;.spread()&lt;/code&gt; &lt;/a&gt;を使用して配列を複数の引数に分散します。</target>
        </trans-unit>
        <trans-unit id="207271fa1f807c985e8e7127453d4d9d5502a491" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;.then()&lt;/code&gt; allows you to use the yielded subject in a callback function and should be used when you need to manipulate some values or do some actions.</source>
          <target state="translated">使い方 &lt;code&gt;.then()&lt;/code&gt; あなたがコールバック関数で得られた対象を使用することができます、あなたはいくつかの値を操作したり、いくつかのアクションを行う必要があるときに使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="2b13b2ac99ca934f64fa7d9e9dfb49bd227dd0dd" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;.then()&lt;/code&gt; callback functions to access the previous command values is great&amp;mdash;but what happens when you&amp;rsquo;re running code in hooks like &lt;code&gt;before&lt;/code&gt; or &lt;code&gt;beforeEach&lt;/code&gt;?</source>
          <target state="translated">使用 &lt;code&gt;.then()&lt;/code&gt; 前のコマンドの値にアクセスするために、コールバック関数は素晴らしい、しかし、であるあなたのようなフックでコードを実行しているとき、何が起こる &lt;code&gt;before&lt;/code&gt; または &lt;code&gt;beforeEach&lt;/code&gt; ？</target>
        </trans-unit>
        <trans-unit id="1967f2cfd0b71f4c1307f139f1c497bddc2ebb1c" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;.then()&lt;/code&gt; functions is an excellent opportunity to use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/debugger&quot;&gt;&lt;code&gt;debugger&lt;/code&gt;&lt;/a&gt;. This can help you understand the order in which commands are run. This also enables you to inspect the objects that Cypress yields you in each command.</source>
          <target state="translated">&lt;code&gt;.then()&lt;/code&gt; 関数の使用は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/debugger&quot;&gt; &lt;code&gt;debugger&lt;/code&gt; &lt;/a&gt;を使用する絶好の機会です。これは、コマンドが実行される順序を理解するのに役立ちます。これにより、サイプレスが各コマンドで生成するオブジェクトを検査することもできます。</target>
        </trans-unit>
        <trans-unit id="8f36bb8781ee414ea054f80d2d01c697dad1768c" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;.then()&lt;/code&gt; to access fixture data</source>
          <target state="translated">使用 &lt;code&gt;.then()&lt;/code&gt; アクセス器具データに</target>
        </trans-unit>
        <trans-unit id="2f6da54b1b13e2588aa231bb85e576b74303ea88" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;.type()&lt;/code&gt; on a date input (&lt;code&gt;&amp;lt;input type=&quot;date&quot;&amp;gt;&lt;/code&gt;) requires specifying a valid date in the format:</source>
          <target state="translated">日付入力（ &lt;code&gt;&amp;lt;input type=&quot;date&quot;&amp;gt;&lt;/code&gt; ）で &lt;code&gt;.type()&lt;/code&gt; を使用するには、次の形式で有効な日付を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="e2e0cd77a2f02ec6375d75af5e5e8771e38befb4" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;.type()&lt;/code&gt; on a month input (&lt;code&gt;&amp;lt;input type=&quot;month&quot;&amp;gt;&lt;/code&gt;) requires specifying a valid month in the format:</source>
          <target state="translated">月の入力（ &lt;code&gt;&amp;lt;input type=&quot;month&quot;&amp;gt;&lt;/code&gt; ）で &lt;code&gt;.type()&lt;/code&gt; を使用するには、次の形式で有効な月を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="afa142187d86bdba3f8ed64e69dba3b292424cad" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;.type()&lt;/code&gt; on a time input (&lt;code&gt;&amp;lt;input type=&quot;time&quot;&amp;gt;&lt;/code&gt;) requires specifying a valid time in the format:</source>
          <target state="translated">時間入力（ &lt;code&gt;&amp;lt;input type=&quot;time&quot;&amp;gt;&lt;/code&gt; ）で &lt;code&gt;.type()&lt;/code&gt; を使用するには、次の形式で有効な時間を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="f4d8a5a57b0c88d87cbd3b7a2f4733076e546a01" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;.type()&lt;/code&gt; on a week input (&lt;code&gt;&amp;lt;input type=&quot;week&quot;&amp;gt;&lt;/code&gt;) requires specifying a valid week in the format:</source>
          <target state="translated">週の入力（ &lt;code&gt;&amp;lt;input type=&quot;week&quot;&amp;gt;&lt;/code&gt; ）で &lt;code&gt;.type()&lt;/code&gt; を使用するには、次の形式で有効な週を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="d6191ca65885b1d085ec0228109da551561f4b68" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;DEBUG=cypress:*&lt;/code&gt; now correctly outputs all debugging information on OSX and Linux. Previously output other then &lt;code&gt;cypress:cli&lt;/code&gt; was ignored due to the CLI ignoring &lt;code&gt;stderr&lt;/code&gt; from the binary. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/921&quot;&gt;#921&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DEBUG=cypress:*&lt;/code&gt; を使用すると、OSXおよびLinuxですべてのデバッグ情報が正しく出力されるようになりました。以前に出力された &lt;code&gt;cypress:cli&lt;/code&gt; 以外の出力は、CLI がバイナリからの &lt;code&gt;stderr&lt;/code&gt; を無視したために無視されました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/921&quot;&gt;＃921を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="94c8932f224cf569b5b04e6bd3e2604ea5c58fd7" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;after&lt;/code&gt; or &lt;code&gt;afterEach&lt;/code&gt; hooks</source>
          <target state="translated">&lt;code&gt;after&lt;/code&gt; または &lt;code&gt;afterEach&lt;/code&gt; フックの使用</target>
        </trans-unit>
        <trans-unit id="0df0517254d80f1b99a759e2c4d2266019ed17e7" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;cy.clock()&lt;/code&gt; with &lt;code&gt;cy.tick()&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;cy.clock()&lt;/code&gt; で &lt;code&gt;cy.tick()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="777f8fba4a41917c41dc102eedca0f86305ab145" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;cy.get('body').click()&lt;/code&gt; now correctly changes the &lt;code&gt;activeElement&lt;/code&gt; back to &lt;code&gt;body&lt;/code&gt; and causes the existing &lt;code&gt;activeElement&lt;/code&gt; to receive &lt;code&gt;blur&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2236&quot;&gt;#2236&lt;/a&gt;.</source>
          <target state="translated">使用 &lt;code&gt;cy.get('body').click()&lt;/code&gt; 正しく変更 &lt;code&gt;activeElement&lt;/code&gt; のに戻って &lt;code&gt;body&lt;/code&gt; 、既存の原因となる &lt;code&gt;activeElement&lt;/code&gt; を受け取るために &lt;code&gt;blur&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2236&quot;&gt;＃2236を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="a4777e21420835ac3db7bdb473817eb9f44e63d9" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;cy.getCookie()&lt;/code&gt; to test logging in</source>
          <target state="translated">&lt;code&gt;cy.getCookie()&lt;/code&gt; を使用してログインをテストする</target>
        </trans-unit>
        <trans-unit id="1e3aa2314959e1b03e79b560d8d6ffaa09a61f1e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;cy.request()&lt;/code&gt; for HTML Forms</source>
          <target state="translated">HTMLフォームでの &lt;code&gt;cy.request()&lt;/code&gt; の使用</target>
        </trans-unit>
        <trans-unit id="aae727cf3b4c2611387507fe10d0703a0154639b" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;cy.request()&lt;/code&gt;, we can bypass all of this because it automatically gets and sets cookies just as if the requests had come from the browser.</source>
          <target state="translated">&lt;code&gt;cy.request()&lt;/code&gt; を使用すると、まるでリクエストがブラウザから来たかのように自動的にクッキーを取得および設定するため、これらすべてをバイパスできます。</target>
        </trans-unit>
        <trans-unit id="fe46d8bc239b570f0e3008036222e0e0c69e8561" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;cy.type&lt;/code&gt; on Angular 2 apps now works. We&amp;rsquo;re now firing the &lt;code&gt;key&lt;/code&gt; property when typing. We&amp;rsquo;ve properly mapped all the special keys too.</source>
          <target state="translated">Angular 2アプリで &lt;code&gt;cy.type&lt;/code&gt; を使用できるようになりました。私たちは今、焼成している &lt;code&gt;key&lt;/code&gt; 入力するときに、プロパティを。すべての特殊キーも適切にマッピングしました。</target>
        </trans-unit>
        <trans-unit id="a03eb78bfa297f189639f169639992774f45a744" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;debugger&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;debugger&lt;/code&gt; 使用</target>
        </trans-unit>
        <trans-unit id="d4607d3d503e6b50f91c39d6f39fb1aa993fc12c" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;expect&lt;/code&gt; allows you to pass in a specific subject and make an assertion about it. This is probably how you&amp;rsquo;re used to seeing assertions written in unit tests:</source>
          <target state="translated">使用 &lt;code&gt;expect&lt;/code&gt; 、あなたは、特定の対象に渡し、それについての主張を行うことができます。これはおそらく、ユニットテストで記述されたアサーションの表示に慣れている方法です。</target>
        </trans-unit>
        <trans-unit id="b829e05e9902bfccf92e3a1bfacbbc29ef1c2fa7" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;fixture&lt;/code&gt; or &lt;code&gt;fx&lt;/code&gt; shortcuts</source>
          <target state="translated">&lt;code&gt;fixture&lt;/code&gt; または &lt;code&gt;fx&lt;/code&gt; ショートカットの使用</target>
        </trans-unit>
        <trans-unit id="ce708f8c381130dfb6a2932f82fc3569533a083a" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;history.back&lt;/code&gt;, &lt;code&gt;history.forward&lt;/code&gt;, or &lt;code&gt;history.go&lt;/code&gt; in CI or in headless mode now works again.</source>
          <target state="translated">CIまたはヘッドレスモードでの &lt;code&gt;history.back&lt;/code&gt; 、 &lt;code&gt;history.forward&lt;/code&gt; 、または &lt;code&gt;history.go&lt;/code&gt; の使用が再び機能するようになりました。</target>
        </trans-unit>
        <trans-unit id="46eb0f1616f1aa0654b14bc3c85c596dae528a9d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;querying&lt;/code&gt; or &lt;code&gt;traversal&lt;/code&gt; commands will no longer throw a 2nd command error when using improper sizzle selectors.</source>
          <target state="translated">使用して &lt;code&gt;querying&lt;/code&gt; または &lt;code&gt;traversal&lt;/code&gt; 不適切なシズルセレクタを使用した場合、コマンドはもはや第二コマンドエラーをスローしません。</target>
        </trans-unit>
        <trans-unit id="dfcc872406f67c40b3130af1c244f85426a76a6c" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;{force404: false}&lt;/code&gt; will now output a warning explaining this is now the default option and can be removed safely.</source>
          <target state="translated">&lt;code&gt;{force404: false}&lt;/code&gt; を使用すると、これがデフォルトのオプションであり、安全に削除できることを説明する警告が出力されるようになりました。</target>
        </trans-unit>
        <trans-unit id="e4582f18eb0b967ba9c31495072c3c3633041946" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;{uparrow}&lt;/code&gt; or &lt;code&gt;{downarrow}&lt;/code&gt; with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; now correctly moves the cursor on &lt;code&gt;textarea&lt;/code&gt; or &lt;code&gt;[contenteditable]&lt;/code&gt; elements. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2187&quot;&gt;#2187&lt;/a&gt;.</source>
          <target state="translated">用い &lt;code&gt;{uparrow}&lt;/code&gt; 又は &lt;code&gt;{downarrow}&lt;/code&gt; で&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;正しく上にカーソルを移動 &lt;code&gt;textarea&lt;/code&gt; 、または &lt;code&gt;[contenteditable]&lt;/code&gt; 要素。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2187&quot;&gt;＃2187を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="998873549f6d4a724222dc1424023dd5f27fd8fb" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;{uparrow}&lt;/code&gt; or &lt;code&gt;{downarrow}&lt;/code&gt; with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; on an &lt;code&gt;input[type=number]&lt;/code&gt; element now increments or decrements the number configured via the &lt;code&gt;step&lt;/code&gt; attribute. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2110&quot;&gt;#2110&lt;/a&gt;.</source>
          <target state="translated">用い &lt;code&gt;{uparrow}&lt;/code&gt; 又は &lt;code&gt;{downarrow}&lt;/code&gt; 付き&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;に &lt;code&gt;input[type=number]&lt;/code&gt; 要素今インクリメント又は介して設定された数だけデクリメント &lt;code&gt;step&lt;/code&gt; 属性。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2110&quot;&gt;＃2110を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="e459420697a477a82f8e947ffee5865894e469bb" translate="yes" xml:space="preserve">
          <source>Using Aliases to Refer to Previous Subjects</source>
          <target state="translated">前の主題を参照するための別名の使用</target>
        </trans-unit>
        <trans-unit id="6b679623b611c46680d1d4ee80ae2710f45fb377" translate="yes" xml:space="preserve">
          <source>Using Cypress as a file server and serving a file that&amp;rsquo;s part of a folder that has a name containing a space now works. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/113&quot;&gt;#113&lt;/a&gt;.</source>
          <target state="translated">サイプレスをファイルサーバーとして使用し、名前にスペースを含むフォルダの一部であるファイルを提供することが機能するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/113&quot;&gt;＃113を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="88ac59cb79fbf2da1dde48619f5bfe79b441f8ad" translate="yes" xml:space="preserve">
          <source>Using Cypress on nested projects now correctly works. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/635&quot;&gt;#635&lt;/a&gt;.</source>
          <target state="translated">ネストされたプロジェクトでサイプレスを使用すると、正しく機能するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/635&quot;&gt;＃635を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="5f74a8f221962f82b530a7a428cd0a6d7fe45854" translate="yes" xml:space="preserve">
          <source>Using a &lt;code&gt;debugger&lt;/code&gt; while running a test will no longer always cause the test to time out (yay!).</source>
          <target state="translated">テストの実行中に &lt;code&gt;debugger&lt;/code&gt; を使用しても、テストが常にタイムアウトになることはありません（そうです！）。</target>
        </trans-unit>
        <trans-unit id="d0bce2f640b97bd86377f6b349414f3781e31d99" translate="yes" xml:space="preserve">
          <source>Using a Kendo DropDown</source>
          <target state="translated">剣道のドロップダウンを使う</target>
        </trans-unit>
        <trans-unit id="356af88a1169f7db498c12b133fdad89c5baf8a6" translate="yes" xml:space="preserve">
          <source>Using a callback function &lt;a href=&quot;#Subjects&quot;&gt;will not change the subject&lt;/a&gt;</source>
          <target state="translated">コールバック関数&lt;a href=&quot;#Subjects&quot;&gt;を&lt;/a&gt;使用しても件名は変わりません</target>
        </trans-unit>
        <trans-unit id="d59e235f943e2fd097d2e25b376a04281b0b3142" translate="yes" xml:space="preserve">
          <source>Using a callback function will not change what is yielded</source>
          <target state="translated">コールバック関数を使用しても、生成されるものは変わりません。</target>
        </trans-unit>
        <trans-unit id="3e114f3d1245c437fe287ce87a7c3fcc8dfcd33a" translate="yes" xml:space="preserve">
          <source>Using a plugin</source>
          <target state="translated">プラグインを使う</target>
        </trans-unit>
        <trans-unit id="e9570c91e9be2fbf7375278d0e44bf6dee776e0f" translate="yes" xml:space="preserve">
          <source>Using a regular &lt;code&gt;http://&lt;/code&gt; URL now works when using the &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; flag to point the binary at an external location. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1001&quot;&gt;#1001&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; フラグを使用してバイナリを外部の場所にポイントするときに、通常の &lt;code&gt;http://&lt;/code&gt; URLを使用できるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1001&quot;&gt;＃1001を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="cdc4d9b0d0ca9eab07fbd19c0e5c513e09b6624e" translate="yes" xml:space="preserve">
          <source>Using a single space on: &lt;code&gt;cy.type(' ')&lt;/code&gt; now works. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/807&quot;&gt;#807&lt;/a&gt;. Contributed by &lt;a href=&quot;https://github.com/tejasbubane&quot;&gt;@tejasbubane&lt;/a&gt;.</source>
          <target state="translated">単一スペースの使用： &lt;code&gt;cy.type(' ')&lt;/code&gt; 機能するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/807&quot;&gt;＃807を&lt;/a&gt;修正。&lt;a href=&quot;https://github.com/tejasbubane&quot;&gt;@tejasbubane&lt;/a&gt;による寄稿。</target>
        </trans-unit>
        <trans-unit id="9af6d6ed91334351216e02e0f904609dff74517a" translate="yes" xml:space="preserve">
          <source>Using after or afterEach hooks</source>
          <target state="translated">アフターフックやアフターフックの使用</target>
        </trans-unit>
        <trans-unit id="ddd4825851a3b1ab8d376bdfb292dfa9b635c3c5" translate="yes" xml:space="preserve">
          <source>Using an alias provides the benefit of terseness and readability. It also makes it easier to access the data later in your tests.</source>
          <target state="translated">エイリアスを使用することで、簡潔さと可読性の利点が得られます。また、後からテストでデータにアクセスするのが簡単になります。</target>
        </trans-unit>
        <trans-unit id="a3509a21207bebf03ae7f30c9ec80a3467cb810d" translate="yes" xml:space="preserve">
          <source>Using an alias to access a fixture</source>
          <target state="translated">フィクスチャにアクセスするためのエイリアスの使用</target>
        </trans-unit>
        <trans-unit id="30805b0aecdbbb0ed42562f7831bcfdc62a3bedb" translate="yes" xml:space="preserve">
          <source>Using an array of the same alias in a &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; now yields you those XHR&amp;rsquo;s in the order they were requested. Previously it was based on when the responses were returned.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;で同じエイリアスの配列を使用すると、要求された順序でXHRが得られるようになりました。以前は、応答が返された時期に基づいていました。</target>
        </trans-unit>
        <trans-unit id="fb6446e8166faddd634d6936843ee860c5a95466" translate="yes" xml:space="preserve">
          <source>Using client side JavaScript that &lt;strong&gt;only&lt;/strong&gt; ever does synchronous rendering.</source>
          <target state="translated">同期レンダリング&lt;strong&gt;のみ&lt;/strong&gt;を行うクライアント側JavaScriptを使用します。</target>
        </trans-unit>
        <trans-unit id="5a1cea4357128f0b28850a37d897d57b4d7f57fc" translate="yes" xml:space="preserve">
          <source>Using fixtures to bootstrap data</source>
          <target state="translated">データをブートストラップするためにフィクスチャを使用する</target>
        </trans-unit>
        <trans-unit id="5bd213876cdccea52218cbfa647cf17f0a3dc2d3" translate="yes" xml:space="preserve">
          <source>Using mocha&amp;rsquo;s &lt;code&gt;done&lt;/code&gt; callback now works correctly. We&amp;rsquo;ve improved mocha&amp;rsquo;s handling of uncaught exceptions and properly associate them to test failures.</source>
          <target state="translated">モカの &lt;code&gt;done&lt;/code&gt; コールバックの使用が正しく機能するようになりました。モカのキャッチされない例外の処理を改善し、それらをテストの失敗に適切に関連付けました。</target>
        </trans-unit>
        <trans-unit id="e355eaff754b0b76e9786a66ed81d2b759f9e58a" translate="yes" xml:space="preserve">
          <source>Using mocha&amp;rsquo;s async &lt;code&gt;done&lt;/code&gt; callback now works properly.</source>
          <target state="translated">mochaの非同期 &lt;code&gt;done&lt;/code&gt; コールバックの使用が正しく機能するようになりました。</target>
        </trans-unit>
        <trans-unit id="f56679aca8af7c0403d8383269f932a4e9739eed" translate="yes" xml:space="preserve">
          <source>Using multiple &lt;code&gt;cy.visit&lt;/code&gt; back to back which only change the &lt;code&gt;hash&lt;/code&gt; now properly wait for the &lt;code&gt;hashchange&lt;/code&gt; event to occur before moving on. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/652&quot;&gt;#652&lt;/a&gt;.</source>
          <target state="translated">複数の &lt;code&gt;cy.visit&lt;/code&gt; を続けて使用して &lt;code&gt;hash&lt;/code&gt; 変更するだけで、 &lt;code&gt;hashchange&lt;/code&gt; イベントが発生するまで適切に待機してから次に進みます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/652&quot;&gt;＃652を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="65477e53fe4051ee3dd62d1637392fd889f42668" translate="yes" xml:space="preserve">
          <source>Using subsequent &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;&amp;lsquo;s &lt;em&gt;in the same test&lt;/em&gt; will not necessarily force a full page refresh. If all that changed was the hash of a url, then the hash changes will take affect &lt;strong&gt;without&lt;/strong&gt; a full page refresh. This matches the behavior of a real browser. Previously &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; always forced a full page refresh and this was not correct.</source>
          <target state="translated">その後の使用&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;さんが&lt;em&gt;、同じテストでは、&lt;/em&gt;必ずしも全ページの更新を強制されません。変更されたものがすべてURLのハッシュだった場合、ページ全体を更新し&lt;strong&gt;なくても&lt;/strong&gt;ハッシュの変更が有効になります。これは、実際のブラウザの動作と一致します。以前は&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; は&lt;/a&gt;常にページ全体を強制的に更新し、これは正しくありませんでした。</target>
        </trans-unit>
        <trans-unit id="669cda01fa6b8e77fb7fbb6fb75e2f9c0cb1d219" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;https://github.com/istanbuljs/nyc&quot;&gt;nyc&lt;/a&gt; module - a command-line interface for the &lt;a href=&quot;https://istanbul.js.org/&quot;&gt;Istanbul&lt;/a&gt; library</source>
          <target state="translated">&lt;a href=&quot;https://github.com/istanbuljs/nyc&quot;&gt;nyc&lt;/a&gt;モジュールの使用- &lt;a href=&quot;https://istanbul.js.org/&quot;&gt;イスタンブール&lt;/a&gt;ライブラリのコマンドラインインターフェイス</target>
        </trans-unit>
        <trans-unit id="174d329c4024b2f6d40d9e5746dcb999a949cf69" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;https://github.com/jeffbski/wait-on&quot;&gt;wait-on&lt;/a&gt; module, you can block the &lt;code&gt;cypress run&lt;/code&gt; command from executing until your server has booted.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/jeffbski/wait-on&quot;&gt;待機&lt;/a&gt;モジュールを使用すると、サーバーが起動するまで、 &lt;code&gt;cypress run&lt;/code&gt; コマンドの実行をブロックできます。</target>
        </trans-unit>
        <trans-unit id="4ee3860c39185d805062355359763bb619f7b52b" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; environment variable, you can control how Cypress is installed. To override what is installed, you set &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; alongside the &lt;code&gt;npm install&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; 環境変数を使用して、サイプレスのインストール方法を制御できます。インストールされているものを上書きするには、 &lt;code&gt;npm install&lt;/code&gt; コマンドと一緒に &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="86c2bd6b9fa3976113add1221c7c965c1e5196ae" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;length&lt;/code&gt; option in &lt;code&gt;querying&lt;/code&gt; or &lt;code&gt;traversal&lt;/code&gt; commands now logs out in the Command Log. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/40&quot;&gt;#40&lt;/a&gt;.</source>
          <target state="translated">コマンドの &lt;code&gt;querying&lt;/code&gt; または &lt;code&gt;traversal&lt;/code&gt; で &lt;code&gt;length&lt;/code&gt; オプションを使用すると、コマンドログにログアウトするようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/40&quot;&gt;＃40を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="a6e96ae7a0edaafd0de02f214749bc6d0b936137" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;length&lt;/code&gt; option in traversal commands works properly now. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/38&quot;&gt;#38&lt;/a&gt;.</source>
          <target state="translated">トラバーサルコマンドで &lt;code&gt;length&lt;/code&gt; オプションを使用すると、正しく動作するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/38&quot;&gt;＃38を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="5f4b0fbcad58d81185d1472a7a776fd4503560d0" translate="yes" xml:space="preserve">
          <source>Using the Developer Tools</source>
          <target state="translated">デベロッパーツールの使用</target>
        </trans-unit>
        <trans-unit id="e32dd8d7a4c71983293041dce5739bebb3693c3d" translate="yes" xml:space="preserve">
          <source>Using your &lt;a href=&quot;../../guides/tooling/plugins-guide&quot;&gt;&lt;code&gt;pluginsFile&lt;/code&gt;&lt;/a&gt; you can tap into the &lt;code&gt;after:screenshot&lt;/code&gt; event.</source>
          <target state="translated">&lt;a href=&quot;../../guides/tooling/plugins-guide&quot;&gt; &lt;code&gt;pluginsFile&lt;/code&gt; &lt;/a&gt;を使用して、 &lt;code&gt;after:screenshot&lt;/code&gt; イベントをタップできます。</target>
        </trans-unit>
        <trans-unit id="39b36978483b3d31b6c938f8e7558f095023a751" translate="yes" xml:space="preserve">
          <source>Using your &lt;a href=&quot;../../guides/tooling/plugins-guide&quot;&gt;&lt;code&gt;pluginsFile&lt;/code&gt;&lt;/a&gt; you can tap into the &lt;code&gt;before:browser:launch&lt;/code&gt; event and modify the arguments based on the browser that Cypress is launching.</source>
          <target state="translated">&lt;a href=&quot;../../guides/tooling/plugins-guide&quot;&gt; &lt;code&gt;pluginsFile&lt;/code&gt; &lt;/a&gt;を使用して、 &lt;code&gt;before:browser:launch&lt;/code&gt; イベントをタップし、サイプレスが起動しているブラウザーに基づいて引数を変更できます。</target>
        </trans-unit>
        <trans-unit id="794b3dbbbb88839b1da035983f13f6a75d59ae10" translate="yes" xml:space="preserve">
          <source>Using your UI to &lt;strong&gt;log in&lt;/strong&gt; is the &lt;em&gt;exact same scenario&lt;/em&gt; as what we just described above. Logging in is just a prerequisite of state that comes before all of your other tests.</source>
          <target state="translated">UIを使用した&lt;strong&gt;ログイン&lt;/strong&gt;は、上記で説明したのと&lt;em&gt;まったく同じシナリオ&lt;/em&gt;です。ログインは、他のすべてのテストの前にある状態の前提条件にすぎません。</target>
        </trans-unit>
        <trans-unit id="18fdc5ee8b1f8fba8dabaa933373c0483ab7fad7" translate="yes" xml:space="preserve">
          <source>Utilities</source>
          <target state="translated">Utilities</target>
        </trans-unit>
        <trans-unit id="c06c4a96cb424ae33a8285d4f7edfc01efc88b03" translate="yes" xml:space="preserve">
          <source>Utilizing &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; across multiple tests before a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; now works correctly. As a side effect now Cypress will rebind both the &lt;code&gt;server&lt;/code&gt; and all &lt;code&gt;routes&lt;/code&gt;&lt;strong&gt;whenever&lt;/strong&gt; the remote window is reloaded (for whatever reason) - even during a test itself. This means you can navigate between pages without ever having to restart the server or routes (they will automatically rebind) when the window loads. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/59&quot;&gt;#59&lt;/a&gt;.</source>
          <target state="translated">利用&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt;の前に複数のテスト全体を&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;正しく動作するようになりました。副作用として、サイプレスはリモートウィンドウがリロードさ&lt;strong&gt;れるたび&lt;/strong&gt;に（なんらかの理由で） &lt;code&gt;server&lt;/code&gt; とすべての &lt;code&gt;routes&lt;/code&gt; 両方を再バインドします -テスト自体の間でも。つまり、ウィンドウが読み込まれたときにサーバーやルートを再起動する必要なく（ページは自動的に再バインドされます）、ページ間を移動できます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/59&quot;&gt;＃59を&lt;/a&gt;修正。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45edfda064a74f49e8653caef0dc8e5c7cf1311b" translate="yes" xml:space="preserve">
          <source>Valid OTP token generation for Cypress</source>
          <target state="translated">Cypress の有効な OTP トークン生成</target>
        </trans-unit>
        <trans-unit id="dd74d182c641e4c78502d863b44d0aeff1575e54" translate="yes" xml:space="preserve">
          <source>Validation</source>
          <target state="translated">Validation</target>
        </trans-unit>
        <trans-unit id="6c259e54dcc7188e7cfe33403eca78cda53017fc" translate="yes" xml:space="preserve">
          <source>Validations</source>
          <target state="translated">Validations</target>
        </trans-unit>
        <trans-unit id="5d440caef1ddef24cf5f3f961d2c3d39751a5fdc" translate="yes" xml:space="preserve">
          <source>Validations always work as &amp;ldquo;or&amp;rdquo; not &amp;ldquo;and&amp;rdquo;.</source>
          <target state="translated">検証は常に「and」ではなく「or」として機能します。</target>
        </trans-unit>
        <trans-unit id="8dce170de238b1feda2ecd9674ea3ca0d068fbcb" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>
        </trans-unit>
        <trans-unit id="ebd636d9872b6ca5a3594431ffee9bb5d483e30a" translate="yes" xml:space="preserve">
          <source>Value of checkbox or radio that should be checked.</source>
          <target state="translated">チェックを入れるべきチェックボックスまたはラジオの値。</target>
        </trans-unit>
        <trans-unit id="2ee9ca38284785fe671256134526a7f9fca3ee20" translate="yes" xml:space="preserve">
          <source>Value of checkbox that should be unchecked.</source>
          <target state="translated">チェックを外すべきチェックボックスの値。</target>
        </trans-unit>
        <trans-unit id="bf26bd38c958cdb6e6e6b914e847859827dcd62f" translate="yes" xml:space="preserve">
          <source>Value to assert against chainer.</source>
          <target state="translated">チェイナーに対して主張する価値。</target>
        </trans-unit>
        <trans-unit id="b1564f6b1512cbfa3cfcebc9a5badb6b239954f1" translate="yes" xml:space="preserve">
          <source>Values</source>
          <target state="translated">Values</target>
        </trans-unit>
        <trans-unit id="939662b9f397b583e2739d2027d6beaff3c5e8e4" translate="yes" xml:space="preserve">
          <source>Values are different across developer machines.</source>
          <target state="translated">値は開発者のマシンによって異なります。</target>
        </trans-unit>
        <trans-unit id="07c5f387af4acbc0f7194ee8013e9226d9a8354b" translate="yes" xml:space="preserve">
          <source>Values are different across multiple environments: &lt;em&gt;(dev, staging, qa, prod)&lt;/em&gt;</source>
          <target state="translated">値は複数の環境で異なります：&lt;em&gt;（dev、staging、qa、prod）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c11b3b788ac8c7f16fb57d77323870b3972f52d7" translate="yes" xml:space="preserve">
          <source>Values can be different on each machine (if not checked into source control).</source>
          <target state="translated">値はマシンごとに異なる可能性があります(ソースコントロールにチェックされていない場合)。</target>
        </trans-unit>
        <trans-unit id="41ec6c6e8a9e5642edbbbddca6226c6207ababa2" translate="yes" xml:space="preserve">
          <source>Values change frequently and are highly dynamic.</source>
          <target state="translated">価値観は頻繁に変化し、非常にダイナミックです。</target>
        </trans-unit>
        <trans-unit id="0a4e902c02fbb17bcc67634c174e184756956cd1" translate="yes" xml:space="preserve">
          <source>Values here will overwrite all other conflicting environment variables.</source>
          <target state="translated">ここでの値は、他のすべての競合する環境変数を上書きします。</target>
        </trans-unit>
        <trans-unit id="6f7b1364c10fe4ab63e9101ef7dd5f1eb01d5a0e" translate="yes" xml:space="preserve">
          <source>Values of checkboxes or radios that should be checked.</source>
          <target state="translated">チェックを入れるべきチェックボックスまたはラジオの値。</target>
        </trans-unit>
        <trans-unit id="e6f61e7ddd8131e6b168a55fdc28facecb392156" translate="yes" xml:space="preserve">
          <source>Values of checkboxes that should be unchecked.</source>
          <target state="translated">チェックを外すべきチェックボックスの値。</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="82e541eddb1ac31063862483802b25d47ceb7e69" translate="yes" xml:space="preserve">
          <source>Variables and Aliases</source>
          <target state="translated">変数とエイリアス</target>
        </trans-unit>
        <trans-unit id="d162b53e81ad53915d9bd571b5eb1ef425c7af46" translate="yes" xml:space="preserve">
          <source>Variables beginning with &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;location&lt;/code&gt; in your application code are no longer modified when &lt;code&gt;modifyObstructiveCode&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4794&quot;&gt;#4794&lt;/a&gt;.</source>
          <target state="translated">アプリケーションコードの &lt;code&gt;top&lt;/code&gt; と &lt;code&gt;location&lt;/code&gt; で始まる変数は、 &lt;code&gt;modifyObstructiveCode&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合は変更されなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4794&quot;&gt;＃4794を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="03c305ac9bf14e7c33fa8d27e1931c8d722d94a6" translate="yes" xml:space="preserve">
          <source>Verify length, content, and classes from multiple &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;</source>
          <target state="translated">複数の &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; の長さ、コンテンツ、およびクラスを確認する</target>
        </trans-unit>
        <trans-unit id="5d25710c218379ce212a92f560b897e4e854d0bc" translate="yes" xml:space="preserve">
          <source>Verify that Cypress is installed correctly and is executable.</source>
          <target state="translated">Cypressが正しくインストールされ、実行可能であることを確認してください。</target>
        </trans-unit>
        <trans-unit id="eb1eca0a897bb4dfa0fa8e90b0e333babd4d4ec3" translate="yes" xml:space="preserve">
          <source>Verifying sent emails:</source>
          <target state="translated">送信されたメールを確認します。</target>
        </trans-unit>
        <trans-unit id="977f2cc376944c21765ab64bbd9a9c42480f38b0" translate="yes" xml:space="preserve">
          <source>Verifying your server updates a 3rd party server.</source>
          <target state="translated">サーバーがサードパーティのサーバーを更新していることを確認します。</target>
        </trans-unit>
        <trans-unit id="2da600bf9404843107a9531694f654e5662959e0" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">Version</target>
        </trans-unit>
        <trans-unit id="ed7fbca31cf707546daff9d64d8f66633e260536" translate="yes" xml:space="preserve">
          <source>Very rarely you may want to retry a command like &lt;code&gt;.click()&lt;/code&gt;. We describe one case like that where the event listeners are attached to a modal popup only after a delay, the causing default events fired during &lt;code&gt;.click()&lt;/code&gt; to not register. In this special case you may want to &amp;ldquo;keep clicking&amp;rdquo; until the event registers, and the dialog disappears. Read about it in the &lt;a href=&quot;https://www.cypress.io/blog/2019/01/22/when-can-the-test-click/&quot;&gt;When Can the Test Click?&lt;/a&gt; blog post.</source>
          <target state="translated">ごくまれに、 &lt;code&gt;.click()&lt;/code&gt; などのコマンドを再試行したい場合があります。イベントリスナーが遅延の後にのみモーダルポップアップにアタッチされ、 &lt;code&gt;.click()&lt;/code&gt; 中に発生したデフォルトのイベントが登録されない場合の1つのケースについて説明します。この特別なケースでは、イベントが登録されてダイアログが消えるまで「クリックし続ける」ことができます。&lt;a href=&quot;https://www.cypress.io/blog/2019/01/22/when-can-the-test-click/&quot;&gt;いつテストがクリックできるのか&lt;/a&gt;を読んでください。ブログ投稿。</target>
        </trans-unit>
        <trans-unit id="db6bae7d76016121ec532b321161b16d697df012" translate="yes" xml:space="preserve">
          <source>Video encoding</source>
          <target state="translated">ビデオエンコーディング</target>
        </trans-unit>
        <trans-unit id="f3e04acf6c9f06e873c7f3a12b03a429d17b79f9" translate="yes" xml:space="preserve">
          <source>Video recording can be turned off entirely by setting &lt;a href=&quot;../references/configuration#Videos&quot;&gt;&lt;code&gt;video&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt; from within your configuration.</source>
          <target state="translated">構成内から&lt;a href=&quot;../references/configuration#Videos&quot;&gt; &lt;code&gt;video&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;false&lt;/code&gt; に設定することにより、ビデオ録画を完全にオフにすることができます。</target>
        </trans-unit>
        <trans-unit id="c5730256d48be3beddab67735e5659140cdd3cf5" translate="yes" xml:space="preserve">
          <source>Video recording is currently only supported when running Cypress from the Electron browser. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1767&quot;&gt;See this issue&lt;/a&gt; for more information.</source>
          <target state="translated">現在、ビデオ録画は、エレクトロンブラウザーからサイプレスを実行している場合にのみサポートされています。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1767&quot;&gt;詳細については、この問題&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a510c35a64c024470295a880bc9c51ae7ce4fead" translate="yes" xml:space="preserve">
          <source>Video recordings now wait after all tests finish to ensure that the video captures the final rendered frames of the browser. This prevents the last few paints from being cut off. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2370&quot;&gt;#2370&lt;/a&gt;.</source>
          <target state="translated">ビデオの記録は、すべてのテストが終了した後、ビデオがブラウザーの最終レンダリングフレームを確実にキャプチャするようになるまで待機します。これにより、最後のいくつかの塗料がカットされるのを防ぎます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2370&quot;&gt;＃2370を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="56b71e89fb1079caaadefd0889e9a22e8b0560e3" translate="yes" xml:space="preserve">
          <source>Videos</source>
          <target state="translated">Videos</target>
        </trans-unit>
        <trans-unit id="a7d139c37d9ed5d92a9a83126f37549cf7afadb7" translate="yes" xml:space="preserve">
          <source>Videos are stored in the &lt;a href=&quot;../references/configuration#Videos&quot;&gt;&lt;code&gt;videosFolder&lt;/code&gt;&lt;/a&gt; which is set to &lt;code&gt;cypress/videos&lt;/code&gt; by default.</source>
          <target state="translated">ビデオは、デフォルトで &lt;code&gt;cypress/videos&lt;/code&gt; に設定されている&lt;a href=&quot;../references/configuration#Videos&quot;&gt; &lt;code&gt;videosFolder&lt;/code&gt; に&lt;/a&gt;保存されます。</target>
        </trans-unit>
        <trans-unit id="1a01b36ad2465dbcdb72b5a757341cd86297c9e1" translate="yes" xml:space="preserve">
          <source>Videos will now be saved locally with a filename named after the associated &lt;code&gt;spec&lt;/code&gt; file that it represents. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/980&quot;&gt;#980&lt;/a&gt;.</source>
          <target state="translated">ビデオは、それが表す関連 &lt;code&gt;spec&lt;/code&gt; ファイルにちなんで名付けられたファイル名でローカルに保存されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/980&quot;&gt;＃980を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="d2e92e12cb9c6109b5d47fbeccb104401e4f6474" translate="yes" xml:space="preserve">
          <source>View proxy settings in Cypress</source>
          <target state="translated">サイプレスのプロキシ設定を見る</target>
        </trans-unit>
        <trans-unit id="05dbc1e64525b958824c7ffcf521e78825a3a5a2" translate="yes" xml:space="preserve">
          <source>View screenshots taken when tests fail and when using &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">テストが失敗した場合と&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt;を使用した場合のスクリーンショットを表示します。</target>
        </trans-unit>
        <trans-unit id="892ec7c0ad4359473c4bc1a0eaf3e0017434803c" translate="yes" xml:space="preserve">
          <source>View screenshots taken when tests fail or when using &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">テストが失敗したとき、または&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt;を使用したときに撮ったスクリーンショットを表示します。</target>
        </trans-unit>
        <trans-unit id="7a8fa83831b7747b22e9d04292d49247915d65ea" translate="yes" xml:space="preserve">
          <source>View, unset, and set environment variables</source>
          <target state="translated">環境変数の表示、設定解除、設定</target>
        </trans-unit>
        <trans-unit id="35dd804a450fc60f1851e789a3a926f8ccb2223c" translate="yes" xml:space="preserve">
          <source>Viewing Screenshots</source>
          <target state="translated">スクリーンショットを見る</target>
        </trans-unit>
        <trans-unit id="09e594a52be3a0e6e14d1a2606f909f43c8b96d0" translate="yes" xml:space="preserve">
          <source>Viewport</source>
          <target state="translated">Viewport</target>
        </trans-unit>
        <trans-unit id="0433fc741e3a352393ff980fd6bf381c2cce43f4" translate="yes" xml:space="preserve">
          <source>Viewport is now properly restored to the default width / height on subsequent runs. Previously it would retain the last viewport size used until there was a new viewport command.</source>
          <target state="translated">ビューポートは、その後の実行でデフォルトの幅の高さに適切に復元されるようになりました。以前は、新しいビューポートコマンドが存在するまで、最後に使用されたビューポートサイズを保持していました。</target>
        </trans-unit>
        <trans-unit id="d4a4ed1cd6cc9189b8c6a768fa2513ca9bc38392" translate="yes" xml:space="preserve">
          <source>Viewport size maximum has been decreased from &lt;code&gt;3001px&lt;/code&gt; to &lt;code&gt;3000px&lt;/code&gt; and minimum has been increased from &lt;code&gt;199px&lt;/code&gt; to &lt;code&gt;200px&lt;/code&gt; to match error messages. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/189&quot;&gt;#189&lt;/a&gt;</source>
          <target state="translated">ビューポートのサイズの最大値から減少している &lt;code&gt;3001px&lt;/code&gt; に &lt;code&gt;3000px&lt;/code&gt; 、最小から増加している &lt;code&gt;199px&lt;/code&gt; に &lt;code&gt;200px&lt;/code&gt; のエラーメッセージと一致します。修正&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/189&quot;&gt;＃189&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d9ff4f0de398581c4640bcbb6e536c355a391be" translate="yes" xml:space="preserve">
          <source>Visibility</source>
          <target state="translated">Visibility</target>
        </trans-unit>
        <trans-unit id="10aa89ec25a02f1fd75d506064f2aabb1fbea591" translate="yes" xml:space="preserve">
          <source>Visit a URL</source>
          <target state="translated">URLを参照してください。</target>
        </trans-unit>
        <trans-unit id="81e9c4fb1d8f4bb309568ccb791dcd2efc2c72c0" translate="yes" xml:space="preserve">
          <source>Visit a URL.</source>
          <target state="translated">URLを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="a2f15c3beac8c4aab25d248f80a9954c3706cce3" translate="yes" xml:space="preserve">
          <source>Visit a local server running on &lt;code&gt;http://localhost:8000&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;http://localhost:8000&lt;/code&gt; で実行されているローカルサーバーにアクセスします。</target>
        </trans-unit>
        <trans-unit id="041931389088fe383aa7dc81dfd6a9c0ee31db10" translate="yes" xml:space="preserve">
          <source>Visit a project&amp;rsquo;s setting page, and scroll down to the GitHub Integration section.</source>
          <target state="translated">プロジェクトの設定ページにアクセスし、GitHub統合セクションまでスクロールします。</target>
        </trans-unit>
        <trans-unit id="559b8ccf190e1f08741885cf8e66719cb68f10ed" translate="yes" xml:space="preserve">
          <source>Visit a remote URL.</source>
          <target state="translated">遠隔地のURLにアクセスします。</target>
        </trans-unit>
        <trans-unit id="71545193b2db44201defc8a524103986ee536298" translate="yes" xml:space="preserve">
          <source>Visit a web page.</source>
          <target state="translated">Webページをご覧ください。</target>
        </trans-unit>
        <trans-unit id="b8f865bdc052d75c38f1d58a68dd4e8eb3ff0b59" translate="yes" xml:space="preserve">
          <source>Visit is automatically prefixed with &lt;code&gt;baseUrl&lt;/code&gt;.</source>
          <target state="translated">Visitには自動的に接頭辞 &lt;code&gt;baseUrl&lt;/code&gt; が付きます。</target>
        </trans-unit>
        <trans-unit id="62505f436fff777d4c1809ecfcd39db8ee7de40e" translate="yes" xml:space="preserve">
          <source>Visit the page at &lt;code&gt;/posts/new&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;/posts/new&lt;/code&gt; のページにアクセスします。</target>
        </trans-unit>
        <trans-unit id="4b581b24d8c4b376da2c2e9a621e6181724e6e15" translate="yes" xml:space="preserve">
          <source>Visit the selected organization&amp;rsquo;s &lt;strong&gt;Integrations&lt;/strong&gt; page via the side navigation.</source>
          <target state="translated">サイドナビゲーションから、選択した組織の&lt;strong&gt;統合&lt;/strong&gt;ページにアクセスします。</target>
        </trans-unit>
        <trans-unit id="d84e1d58c58e1c26ecff0f8273b8e57ad856867a" translate="yes" xml:space="preserve">
          <source>Visit will always yield the remote page&amp;rsquo;s &lt;code&gt;window&lt;/code&gt; object when it resolves</source>
          <target state="translated">Visitは解決時に常にリモートページの &lt;code&gt;window&lt;/code&gt; オブジェクトを生成します</target>
        </trans-unit>
        <trans-unit id="673ec2ff8a1f3ba9690e65e5c9bd8853dd788b99" translate="yes" xml:space="preserve">
          <source>Visit will automatically follow redirects</source>
          <target state="translated">訪問は自動的にリダイレクトに従います</target>
        </trans-unit>
        <trans-unit id="74182125c8d2eab1f6879c4b1b5b3b8ffbc3f801" translate="yes" xml:space="preserve">
          <source>Visit your project settings to see who has access to your project&amp;rsquo;s runs.</source>
          <target state="translated">プロジェクトの設定にアクセスして、プロジェクトの実行にアクセスできるユーザーを確認します。</target>
        </trans-unit>
        <trans-unit id="07fc169b48c9530826bd26eb6a041cc1a56c6c0a" translate="yes" xml:space="preserve">
          <source>Visit: &lt;code&gt;https://example.cypress.io&lt;/code&gt;</source>
          <target state="translated">訪問： &lt;code&gt;https://example.cypress.io&lt;/code&gt; : //example.cypress.io</target>
        </trans-unit>
        <trans-unit id="6aeb0bb22cc29487425db14bc8a0eea21b9bbb34" translate="yes" xml:space="preserve">
          <source>Visiting absolute paths in the iframe now displays the correct URL in the address bar again.</source>
          <target state="translated">iframe内の絶対パスを訪問すると、アドレスバーに正しいURLが再び表示されるようになりました。</target>
        </trans-unit>
        <trans-unit id="dd0e6e7c931ff4e51c2261e6f09f6ebc8325f028" translate="yes" xml:space="preserve">
          <source>Visiting external sites</source>
          <target state="translated">外部サイトの訪問</target>
        </trans-unit>
        <trans-unit id="7cc96b92f1bc6813d62e7e0b7db3d3367603c0ab" translate="yes" xml:space="preserve">
          <source>Visiting relative paths which are served from your file system works again.</source>
          <target state="translated">ファイルシステムから送られてきた相対パスを訪問しても、再び動作します。</target>
        </trans-unit>
        <trans-unit id="b21497ce2cfdfd24b6cd4237a6690da2b4134e80" translate="yes" xml:space="preserve">
          <source>Visual Regression Test / Screenshot Diffing</source>
          <target state="translated">視覚的回帰テストのスクリーンショットDiffing</target>
        </trans-unit>
        <trans-unit id="1cc9dc8b8044ef9ff73baa7ee32e06182c96aabd" translate="yes" xml:space="preserve">
          <source>Visual Testing</source>
          <target state="translated">ビジュアルテスト</target>
        </trans-unit>
        <trans-unit id="f6bf579e01140156fd308478cd96758cfca22244" translate="yes" xml:space="preserve">
          <source>Visual Testing Plugins</source>
          <target state="translated">ビジュアルテストプラグイン</target>
        </trans-unit>
        <trans-unit id="31598431b175614a29091577000cce19620f5f57" translate="yes" xml:space="preserve">
          <source>Visual diff elements</source>
          <target state="translated">視覚的な差分要素</target>
        </trans-unit>
        <trans-unit id="42c900e33eaaa69a89d75348133a5e471918a269" translate="yes" xml:space="preserve">
          <source>Visual regression testing for Cypress tests with Percy.</source>
          <target state="translated">CypressテストのためのPercyを使ったビジュアルリグレッションテスト。</target>
        </trans-unit>
        <trans-unit id="ed7e7c5aac79acad95bf7be95667b6216e54a320" translate="yes" xml:space="preserve">
          <source>Visualize when hidden or multiple elements are found.</source>
          <target state="translated">隠された要素や複数の要素が見つかったときに視覚化します。</target>
        </trans-unit>
        <trans-unit id="15ce8c8ec645b1813817f75d5ce96641df061936" translate="yes" xml:space="preserve">
          <source>Visualizing parallelization and groups in the Dashboard</source>
          <target state="translated">ダッシュボードでの並列化とグループの可視化</target>
        </trans-unit>
        <trans-unit id="cb7940d725dbd937d9de670c4768fc0ccd47788f" translate="yes" xml:space="preserve">
          <source>Vue CLI</source>
          <target state="translated">ビューCLI</target>
        </trans-unit>
        <trans-unit id="7dd320932129521cacba1e513b07facd68f07e08" translate="yes" xml:space="preserve">
          <source>Vue CLI allows you to scaffold an application with Cypress E2E fully configured</source>
          <target state="translated">Vue CLIを使用すると、Cypress E2Eが完全に構成されたアプリケーションを足場にすることができます。</target>
        </trans-unit>
        <trans-unit id="9058b876e3baa9625b56aa7eea6f173b34166e02" translate="yes" xml:space="preserve">
          <source>WIP. We&amp;rsquo;ll be adding more here soon.</source>
          <target state="translated">WIP。もうすぐここに追加します。</target>
        </trans-unit>
        <trans-unit id="fa6033ac0b8697115597a154951fb18ba8324b56" translate="yes" xml:space="preserve">
          <source>Wait automatically increments responses</source>
          <target state="translated">応答を自動的にインクリメントするのを待つ</target>
        </trans-unit>
        <trans-unit id="4e2cdeaebda2dc7359a5b861f8b734ce513edfc2" translate="yes" xml:space="preserve">
          <source>Wait for a number of milliseconds or wait for an aliased resource to resolve before moving on to the next command.</source>
          <target state="translated">次のコマンドに移る前に、ミリ秒数を待つか、エイリアスされたリソースが解決するのを待ちます。</target>
        </trans-unit>
        <trans-unit id="73622bcc6276956c74ab7ecbe5145993e5907ff7" translate="yes" xml:space="preserve">
          <source>Wait for a specific XHR to respond</source>
          <target state="translated">特定のXHRの応答を待つ</target>
        </trans-unit>
        <trans-unit id="b8db4e10909e8a84a6e8f017cab77890c66536c2" translate="yes" xml:space="preserve">
          <source>Wait for an arbitrary period of milliseconds:</source>
          <target state="translated">任意のミリ秒の時間を待ちます。</target>
        </trans-unit>
        <trans-unit id="b110c723f07007eb16b42cf89eda520f6732f70f" translate="yes" xml:space="preserve">
          <source>Wait for some propery to exist on &lt;code&gt;window&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;window&lt;/code&gt; プロパティが存在するのを待ちます</target>
        </trans-unit>
        <trans-unit id="57c80fbc1ed4ea3e044beb33ef4f466865989d58" translate="yes" xml:space="preserve">
          <source>Wait on &lt;code&gt;url&lt;/code&gt; matching glob</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 一致するグロブを待つ</target>
        </trans-unit>
        <trans-unit id="7813eba85c5d5f15a6e8286d8a590d6dac194419" translate="yes" xml:space="preserve">
          <source>Wait on XHR &lt;code&gt;GET&lt;/code&gt; request matching &lt;code&gt;url&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 一致するXHR &lt;code&gt;GET&lt;/code&gt; リクエストを待つ</target>
        </trans-unit>
        <trans-unit id="fcad28c454b05ab519af4fd94dcc76b35921d96c" translate="yes" xml:space="preserve">
          <source>Wait on XHR&amp;rsquo;s matching &lt;code&gt;method&lt;/code&gt; and &lt;code&gt;url&lt;/code&gt;</source>
          <target state="translated">XHRのマッチング &lt;code&gt;method&lt;/code&gt; と &lt;code&gt;url&lt;/code&gt; 待つ</target>
        </trans-unit>
        <trans-unit id="fb179bebfd1995dc65e9799270db5d4cfae22163" translate="yes" xml:space="preserve">
          <source>Wait until the assertions pass</source>
          <target state="translated">アサーションが通るまで待つ</target>
        </trans-unit>
        <trans-unit id="33d30632848d3fd0ed2340adbd7be3e3e8e61010" translate="yes" xml:space="preserve">
          <source>Waiting</source>
          <target state="translated">Waiting</target>
        </trans-unit>
        <trans-unit id="4c4033b9c6cc764061193a4793f479fc6374c8d6" translate="yes" xml:space="preserve">
          <source>Waiting for Promises</source>
          <target state="translated">約束を待つ</target>
        </trans-unit>
        <trans-unit id="aebb3a72368fb873c6de528a8d02db8911d46f4e" translate="yes" xml:space="preserve">
          <source>Waiting for a response to happen</source>
          <target state="translated">レスポンスが起こるのを待つ</target>
        </trans-unit>
        <trans-unit id="9ef34c0dc26889c7d2dd4a63d806584b9bd02bda" translate="yes" xml:space="preserve">
          <source>Waiting for the &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; below is unnecessary because &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; automatically retries until the table&amp;rsquo;s &lt;code&gt;tr&lt;/code&gt; has a length of 2.</source>
          <target state="translated">テーブルの &lt;code&gt;tr&lt;/code&gt; の長さが2になるまで&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; が&lt;/a&gt;自動的に再試行するため、以下の&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; を&lt;/a&gt;待つ必要はありません。</target>
        </trans-unit>
        <trans-unit id="edfe658efd480b611e9a75ea6eb667687ca0f804" translate="yes" xml:space="preserve">
          <source>Waiting for this is unnecessary because the &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; resolves once the page fires its &lt;code&gt;load&lt;/code&gt; event. By that time all of your assets have been loaded including javascript, stylesheets, and html.</source>
          <target state="translated">ページがその &lt;code&gt;load&lt;/code&gt; イベントを起動すると、&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; が&lt;/a&gt;解決するため、これを待つ必要はありません。その時までに、JavaScript、スタイルシート、HTMLを含むすべてのアセットが読み込まれます。</target>
        </trans-unit>
        <trans-unit id="0b22dc220d7388da9bd2ec604e8a6c77b56f85b0" translate="yes" xml:space="preserve">
          <source>Waiting here is unnecessary since the &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; command will not resolve until it receives a response from your server. Adding the wait here only adds 5 seconds after the &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; has already resolved.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;コマンドはサーバーから応答を受信するまで解決されないため、ここで待機する必要はありません。ここに待機を追加しても、&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;が解決されてから5秒しか追加されません。</target>
        </trans-unit>
        <trans-unit id="c00b7831a6035b0ede9d99c34d1d805d12a6092f" translate="yes" xml:space="preserve">
          <source>Waiting on an XHR</source>
          <target state="translated">XHRを待っている</target>
        </trans-unit>
        <trans-unit id="e0cf11a2961c88b55592ea89586e0e23323e51e1" translate="yes" xml:space="preserve">
          <source>Waiting on an aliased route has big advantages:</source>
          <target state="translated">偽装ルートで待つことには大きなメリットがあります。</target>
        </trans-unit>
        <trans-unit id="c3be6fe21b16b3f917714e80f551a135fdf8382c" translate="yes" xml:space="preserve">
          <source>Want to jump into the command flow and get your hands on the subject directly? No problem, add a &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; to your command chain. When the previous command resolves, it will call your callback function with the yielded subject as the first argument.</source>
          <target state="translated">コマンドフローにジャンプして、件名を直接取得したいですか？問題ありません。コマンドチェーンに&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;を追加してください。前のコマンドが解決すると、生成された件名を最初の引数としてコールバック関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="1a33e82095ea9b1384be5d253ee226c7f89113c6" translate="yes" xml:space="preserve">
          <source>Warnings are now displayed when recording in &lt;code&gt;cypress run&lt;/code&gt; to warn when a project is nearing its organization&amp;rsquo;s usage limit. They also clearly explain any consequences of going over a plan&amp;rsquo;s usage limit. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4530&quot;&gt;#4530&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; 記録するときに警告が表示され、プロジェクトが組織の使用制限に近づいているときに警告するようになりました。また、プランの使用制限を超えた場合の結果についても明確に説明しています。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4530&quot;&gt;＃4530&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d91ebf5887cf9ee3c9f843d1887a6d922dc78c46" translate="yes" xml:space="preserve">
          <source>Watch</source>
          <target state="translated">Watch</target>
        </trans-unit>
        <trans-unit id="fddab27c14d555062d198877f8ad0642232df96a" translate="yes" xml:space="preserve">
          <source>Watch Cypress reload in real time.</source>
          <target state="translated">サイプレスのリロードをリアルタイムで見る。</target>
        </trans-unit>
        <trans-unit id="09fd250f5cc83665b531cb062e8505cce7f393a8" translate="yes" xml:space="preserve">
          <source>Watch Cypress update our list of specs.</source>
          <target state="translated">サイプレスのスペック一覧を更新しています。</target>
        </trans-unit>
        <trans-unit id="8bb358f65484eb25cb468c615e5c5daaceb562d3" translate="yes" xml:space="preserve">
          <source>Watch Preprocessor</source>
          <target state="translated">プリプロセッサを見る</target>
        </trans-unit>
        <trans-unit id="98670539bee029258e8133ba8614fc64b3a85063" translate="yes" xml:space="preserve">
          <source>Watch a video of your entire test run or a clip at the point of test failure.</source>
          <target state="translated">テストラン全体のビデオやテスト失敗時のクリップをご覧ください。</target>
        </trans-unit>
        <trans-unit id="492ebf8cbc7e401674949c0ca5417b050ebb3b4d" translate="yes" xml:space="preserve">
          <source>Watch a video of your entire test run or a video clip at the point of test failure.</source>
          <target state="translated">テスト実行全体のビデオや、テスト失敗時のビデオクリップを見ることができます。</target>
        </trans-unit>
        <trans-unit id="d74b3f36e664c68aa3f5f5c13640b4b5d1dea9fb" translate="yes" xml:space="preserve">
          <source>Watches and bundles your spec files via browserify. This is the default preprocessor that's built into Cypress.</source>
          <target state="translated">browserify経由でspecファイルを監視し、バンドルします。これはCypressに組み込まれているデフォルトのプリプロセッサです。</target>
        </trans-unit>
        <trans-unit id="20f3eb39ebe87f075e117b4c4e5c337a02b9615e" translate="yes" xml:space="preserve">
          <source>Watches and bundles your spec files via webpack.</source>
          <target state="translated">webpack経由でスペックファイルをウォッチしてバンドルします。</target>
        </trans-unit>
        <trans-unit id="bbf0288c6159d90f97c455cbe7c14cfb82a9f92d" translate="yes" xml:space="preserve">
          <source>Watches your spec files and serves them as-is. Useful as an example reference or if you don't need transpiling/bundling.</source>
          <target state="translated">specファイルを監視し、そのまま提供します。リファレンスの例として、またはトランスパイリングバンドルが必要ない場合に便利です。</target>
        </trans-unit>
        <trans-unit id="7a2e02229dcfa2e126a38af836e9fb74526ed4d6" translate="yes" xml:space="preserve">
          <source>Watching and caching files</source>
          <target state="translated">ファイルの監視とキャッシング</target>
        </trans-unit>
        <trans-unit id="b6d0464d72e8937a30f652b849c433c973690b6c" translate="yes" xml:space="preserve">
          <source>Watching tests</source>
          <target state="translated">テストを見る</target>
        </trans-unit>
        <trans-unit id="f6c492c6cec455da59b2e1ba841721f58a2364a5" translate="yes" xml:space="preserve">
          <source>We added aliasing support to &lt;code&gt;stub&lt;/code&gt; and &lt;code&gt;spy&lt;/code&gt; APIs.</source>
          <target state="translated">&lt;code&gt;stub&lt;/code&gt; API と &lt;code&gt;spy&lt;/code&gt; APIにエイリアスのサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="432421965cca3df9334886ecfd8840a533ebaef4" translate="yes" xml:space="preserve">
          <source>We also display an error if your server is not running at the specified &lt;code&gt;baseUrl&lt;/code&gt; during &lt;code&gt;cypress run&lt;/code&gt; after several retries.</source>
          <target state="translated">数回の再試行後の &lt;code&gt;cypress run&lt;/code&gt; 中にサーバーが指定された &lt;code&gt;baseUrl&lt;/code&gt; で実行されていない場合も、エラーが表示されます。</target>
        </trans-unit>
        <trans-unit id="39103aeae7d752d31bd524b57ff8d22f933c3acc" translate="yes" xml:space="preserve">
          <source>We also ensure that the element we&amp;rsquo;re attempting to interact with isn&amp;rsquo;t covered by a parent element.</source>
          <target state="translated">また、操作しようとしている要素が親要素によってカバーされていないことも確認します。</target>
        </trans-unit>
        <trans-unit id="a5e6a0452e8d89a182e4a815300a51be916ebadb" translate="yes" xml:space="preserve">
          <source>We also have the power of Cypress parallelization with our groups. For the sake of demonstration, let&amp;rsquo;s run a group to test against Chrome with 2 machines, a group to test against Electron with 4 machines, and another group to test against Electron again, but only with one machine:</source>
          <target state="translated">また、グループとのサイプレス並列化の力もあります。デモのために、2台のマシンでChromeをテストするグループ、4台のマシンでElectronをテストするグループ、Electronをもう一度テストするグループを実行しますが、1台のマシンのみを使用します。</target>
        </trans-unit>
        <trans-unit id="badb3296390edad6c22746f03a2d31b176f8c045" translate="yes" xml:space="preserve">
          <source>We also integrated all of these APIs directly into the Command Log, so you can visually see what&amp;rsquo;s happening in your application.</source>
          <target state="translated">また、これらすべてのAPIを直接コマンドログに統合したため、アプリケーションで何が起こっているのかを視覚的に確認できます。</target>
        </trans-unit>
        <trans-unit id="6bd45b1b0a532bfa41c65dd1097ba9b9eb4819a0" translate="yes" xml:space="preserve">
          <source>We also support passing an absolute path to the reporter.</source>
          <target state="translated">また、レポーターに絶対パスを渡すこともサポートしています。</target>
        </trans-unit>
        <trans-unit id="3cf5a9be5f41e847b34d904ad656c78a5c72fc86" translate="yes" xml:space="preserve">
          <source>We also updated and removed some dependencies used for development.</source>
          <target state="translated">また、開発に使用していた依存関係の一部を更新し、削除しました。</target>
        </trans-unit>
        <trans-unit id="dec1e511c4e5776446494c2ea37d4880eb890521" translate="yes" xml:space="preserve">
          <source>We also updated many dependencies used for development and removed some unused dependencies.</source>
          <target state="translated">また、開発に使用されている多くの依存関係を更新し、使用されていない依存関係を削除しました。</target>
        </trans-unit>
        <trans-unit id="9649b2ab6bb7a2ae94bf138bddba3ec2e4b7a227" translate="yes" xml:space="preserve">
          <source>We are adding several other recipes to show examples of all the ways you can use &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; to improve your tests.</source>
          <target state="translated">テストを改善するために&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;を使用できるすべての方法の例を示すために、他のいくつかのレシピを追加しています。</target>
        </trans-unit>
        <trans-unit id="22b3ae269d9510abe31e8d81bd4fec7651266ba3" translate="yes" xml:space="preserve">
          <source>We are adding support for unit testing in the near future and decided that there needs to be a separation between &lt;code&gt;unit&lt;/code&gt; and &lt;code&gt;integration&lt;/code&gt; tests. The actual runner will handle these two sets of specs very differently. It&amp;rsquo;s important to make the change now so when we do add support for unit tests, you only have to create a &lt;code&gt;unit&lt;/code&gt; folder inside of your &lt;code&gt;cypress&lt;/code&gt; folder.</source>
          <target state="translated">近い将来に単体テストのサポートを追加する予定であり、 &lt;code&gt;unit&lt;/code&gt; と &lt;code&gt;integration&lt;/code&gt; テストを分離する必要があると判断しました。実際のランナーは、これら2つの仕様のセットを非常に異なって処理します。ユニットテストのサポートを追加するときは、 &lt;code&gt;cypress&lt;/code&gt; フォルダー内に &lt;code&gt;unit&lt;/code&gt; フォルダーを作成するだけでよいので、今すぐ変更を加えることが重要です。</target>
        </trans-unit>
        <trans-unit id="71c52e2d634c614c08235a718cf4a827ac8535fc" translate="yes" xml:space="preserve">
          <source>We are aware of issues running in CI with Linux builds, and are working through those issues.</source>
          <target state="translated">Linux ビルドの CI で実行されている問題を認識しており、それらの問題に取り組んでいます。</target>
        </trans-unit>
        <trans-unit id="e3a49d4d210efd4e17b3fa6398c3af9331e29442" translate="yes" xml:space="preserve">
          <source>We are cleaning up internal &lt;code&gt;__cypress&lt;/code&gt; cookies more so they won&amp;rsquo;t get in the way of testing your application.</source>
          <target state="translated">内部の &lt;code&gt;__cypress&lt;/code&gt; Cookieをさらにクリーンアップして、アプリケーションのテストの邪魔にならないようにします。</target>
        </trans-unit>
        <trans-unit id="91504f749d965a37b43ece7df42d59b7e57561a0" translate="yes" xml:space="preserve">
          <source>We are not limited to a single interaction and assertion in a given test. In fact, many interactions in an application may require multiple steps and are likely to change your application state in more than one way.</source>
          <target state="translated">私たちは、与えられたテストにおける単一のインタラクションやアサーションに限定されません。実際、アプリケーション内の多くのインタラクションは複数のステップを必要とし、複数の方法でアプリケーションの状態を変更する可能性があります。</target>
        </trans-unit>
        <trans-unit id="4d7b1031c8b4628f9c388a30edd9e057e5d64149" translate="yes" xml:space="preserve">
          <source>We are now aggressively turning on colors when running in CI. If you&amp;rsquo;re using Jenkins and &lt;strong&gt;do not&lt;/strong&gt; have an ANSI color plugin installed, you can turn off colors with the &lt;code&gt;NO_COLOR=1&lt;/code&gt; environment variable. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1747&quot;&gt;#1747&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1748&quot;&gt;#1748&lt;/a&gt;.</source>
          <target state="translated">CIで実行するときは、積極的に色をオンにします。Jenkinsを使用し&lt;strong&gt;てい&lt;/strong&gt;て、ANSIカラープラグインがインストールされて&lt;strong&gt;いない&lt;/strong&gt;場合は、 &lt;code&gt;NO_COLOR=1&lt;/code&gt; 環境変数を使用してカラーをオフにできます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1747&quot;&gt;＃1747&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1748&quot;&gt;＃1748を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ce7a680f1cdac4baa3d76ebf4446b9be8d5795da" translate="yes" xml:space="preserve">
          <source>We are now bundling our own &lt;code&gt;TypeScript&lt;/code&gt; definitions with the &lt;code&gt;cypress&lt;/code&gt; npm module. You no longer have to install &lt;code&gt;@types/cypress&lt;/code&gt; anymore. We&amp;rsquo;ll continue to keep these updated with API changes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/856&quot;&gt;#856&lt;/a&gt;.</source>
          <target state="translated">現在、独自の &lt;code&gt;TypeScript&lt;/code&gt; 定義を &lt;code&gt;cypress&lt;/code&gt; npmモジュールにバンドルしています。 &lt;code&gt;@types/cypress&lt;/code&gt; をインストールする必要はもうありません。APIの変更により、これらの情報は引き続き更新されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/856&quot;&gt;＃856を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="b65ef0eb2eb805d22ca5115a2b7ad4f96b2255c5" translate="yes" xml:space="preserve">
          <source>We are now capturing &lt;code&gt;stdout&lt;/code&gt; and several other properties for use + display in our Dashboard on &lt;code&gt;cypress ci&lt;/code&gt; runs.</source>
          <target state="translated">私たちは今、キャプチャされている &lt;code&gt;stdout&lt;/code&gt; +上の私たちのダッシュボードの表示の使用のために、いくつかの他のプロパティを &lt;code&gt;cypress ci&lt;/code&gt; の実行を。</target>
        </trans-unit>
        <trans-unit id="c841d3243d0f4c51b34c5713a3b91e72f2bfcced" translate="yes" xml:space="preserve">
          <source>We are now capturing Google Cloud build details when recording tests to the Cypress Dashboard. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3582&quot;&gt;#3582&lt;/a&gt;.</source>
          <target state="translated">サイプレスダッシュボードにテストを記録するときに、Google Cloudビルドの詳細をキャプチャしています。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3582&quot;&gt;＃3582&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5a09f3d0eb60282a4ab77de1ae8e1df721daaec0" translate="yes" xml:space="preserve">
          <source>We are now capturing the performance and timings data of every test when using &lt;code&gt;--record&lt;/code&gt; mode and are beginning to offer the first analytics and insights into the health of your tests on our Dashboard Service.</source>
          <target state="translated">&lt;code&gt;--record&lt;/code&gt; モードを使用する場合、すべてのテストのパフォーマンスとタイミングデータを取得し、ダッシュボードサービスでテストの正常性に関する最初の分析と洞察を提供し始めています。</target>
        </trans-unit>
        <trans-unit id="906a0da37e2c6398077c1933ead735fe5fbc5a4c" translate="yes" xml:space="preserve">
          <source>We are now clearing the browser&amp;rsquo;s disk cache each time it opens (before any tests run). This means that any files that have been cached from &lt;code&gt;Cache-Control&lt;/code&gt; headers will be cleaned and removed. In the future, we will expose a new &lt;code&gt;cy.clearCache()&lt;/code&gt; method to provide finer grained control of clearing the cache on a per test basis. But for now, this is an improvement. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1124&quot;&gt;#1124&lt;/a&gt;.</source>
          <target state="translated">これで、ブラウザーが開くたびに（テストを実行する前に）ブラウザーのディスクキャッシュがクリアされます。これは、 &lt;code&gt;Cache-Control&lt;/code&gt; ヘッダーからキャッシュされたすべてのファイルがクリーンアップされて削除されることを意味します。将来的には、新しい &lt;code&gt;cy.clearCache()&lt;/code&gt; メソッドを公開して、テストごとにキャッシュをクリアするよりきめ細かな制御を提供します。しかし、今のところ、これは改善です。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1124&quot;&gt;＃1124を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="18798eff12091e74f4655f502cc37bd8e923d06a" translate="yes" xml:space="preserve">
          <source>We are now collecting more environment variables from runs when run in Semaphore, GitLab, Bitbucket, Team Foundation Server, Codeship, and Shippable. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2460&quot;&gt;#2460&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2358&quot;&gt;#2358&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2343&quot;&gt;#2343&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2453&quot;&gt;#2453&lt;/a&gt;.</source>
          <target state="translated">Semaphore、GitLab、Bitbucket、Team Foundation Server、Codeship、およびShippableで実行すると、実行からより多くの環境変数が収集されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2460&quot;&gt;＃2460&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2358&quot;&gt;＃2358&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2343&quot;&gt;＃2343&lt;/a&gt;、および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2453&quot;&gt;＃2453を&lt;/a&gt;修正します。</target>
        </trans-unit>
        <trans-unit id="54590620f92b0dfb26af5881b15bb076991e0ad3" translate="yes" xml:space="preserve">
          <source>We are now counting and aggregating the stats at the end of test runs separately from Mocha. Cypress considers a test to be the &lt;code&gt;it&lt;/code&gt; and any accompanying &lt;code&gt;hooks&lt;/code&gt; that run before or after a test. Cypress will correctly associate failures in those hooks to the test itself. We believe this more accurately models and just &amp;ldquo;makes sense&amp;rdquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1163&quot;&gt;#1163&lt;/a&gt;.</source>
          <target state="translated">現在、モカとは別にテスト実行の最後に統計をカウントして集計しています。サイプレスは、テストを &lt;code&gt;it&lt;/code&gt; 、テストの前後に実行される付随する &lt;code&gt;hooks&lt;/code&gt; と見なします。サイプレスはこれらのフックの失敗をテスト自体に正しく関連付けます。これは、より正確にモデル化され、「理にかなっている」と信じています。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1163&quot;&gt;＃1163を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="7594ed959f21489a291546d5e66cd0760009cfbc" translate="yes" xml:space="preserve">
          <source>We are now detecting and automatically stripping code that obstructs Cypress from being able to test your application. Specifically, we are removing JavaScript code that tries to prevent &lt;strong&gt;clickjacking&lt;/strong&gt; and &lt;strong&gt;framebusting&lt;/strong&gt;. We have written very conservative rules that do their best to &lt;strong&gt;only&lt;/strong&gt; strip these specific JS snippets, but it is technically possible that it may unintentionally rewrite valid JS if they match the RegExp patterns. There is a new configuration option called &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;modifyObstructiveCode&lt;/code&gt;&lt;/a&gt; that is &lt;code&gt;true&lt;/code&gt; by default. If you are experiencing problems after upgrading, you can turn this off and this will disable modifying your JS code. If you were using Cypress and upon visiting your website you would experience seemingly &amp;ldquo;random&amp;rdquo; redirects - these problems should now be eliminated. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/886&quot;&gt;#886&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1245&quot;&gt;#1245&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1064&quot;&gt;#1064&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/992&quot;&gt;#992&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/692&quot;&gt;#692&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/352&quot;&gt;#352&lt;/a&gt;.</source>
          <target state="translated">サイプレスがアプリケーションをテストできないようにするコードを検出して自動的に除去しています。具体的には、予防しようとするJavaScriptコード削除する&lt;strong&gt;クリックジャッキング&lt;/strong&gt;と&lt;strong&gt;framebustingを&lt;/strong&gt;。これらの特定のJSスニペット&lt;strong&gt;のみを&lt;/strong&gt;削除するために最善を尽くす非常に保守的なルールを作成しましたが、RegExpパターンに一致する場合、有効なJSを意図せずに書き換える可能性があります。 &lt;code&gt;true&lt;/code&gt; である&lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;modifyObstructiveCode&lt;/code&gt; &lt;/a&gt;と呼ばれる新しい設定オプションがありますデフォルトでは。アップグレード後に問題が発生した場合は、これをオフにすると、JSコードの変更が無効になります。サイプレスを使用していて、Webサイトにアクセスすると、一見「ランダム」なリダイレクトが発生する可能性があります。これらの問題は解消されるはずです。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/886&quot;&gt;＃886&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1245&quot;&gt;＃1245&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1064&quot;&gt;＃1064&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/992&quot;&gt;＃992&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/692&quot;&gt;＃692&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/352&quot;&gt;＃352を&lt;/a&gt;修正します。</target>
        </trans-unit>
        <trans-unit id="ca79522ec838555ee93c9fba9f7fdac09171053c" translate="yes" xml:space="preserve">
          <source>We are now officially in the &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;Cypress Test Runner&lt;/a&gt;. This is where we will spend the majority of your time testing.</source>
          <target state="translated">現在、&lt;a href=&quot;../core-concepts/test-runner&quot;&gt;サイプレステストランナーに&lt;/a&gt;正式に参加しています。これは、テストの大部分を費やす場所です。</target>
        </trans-unit>
        <trans-unit id="aa1ee5cfaf9d1e8e11397357d7e8c76415a99bbb" translate="yes" xml:space="preserve">
          <source>We are now properly serializing nested object arguments when using the &lt;a href=&quot;../guides/module-api&quot;&gt;Module API&lt;/a&gt; via &lt;code&gt;cypress.open()&lt;/code&gt; or &lt;code&gt;cypress.run()&lt;/code&gt;. Passing nested objects in &lt;code&gt;reporterOptions&lt;/code&gt; now works correctly. This is especially useful when using &lt;code&gt;mocha-multi-reporters&lt;/code&gt;. In addition to fixing the &lt;a href=&quot;../guides/module-api&quot;&gt;Module API&lt;/a&gt;, we are now also properly handling nested arguments from the &lt;a href=&quot;../guides/command-line&quot;&gt;Command Line&lt;/a&gt;. In order to pass nested objects within CLI params you must pass stringified JSON. This is useful for properties such as &lt;code&gt;blacklistHosts&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1348&quot;&gt;#1348&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1357&quot;&gt;#1357&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2221&quot;&gt;#2221&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress.open()&lt;/code&gt; または &lt;code&gt;cypress.run()&lt;/code&gt; を介して&lt;a href=&quot;../guides/module-api&quot;&gt;モジュールAPI&lt;/a&gt;を使用するときに、ネストされたオブジェクト引数を適切にシリアル化するようになりました。 &lt;code&gt;reporterOptions&lt;/code&gt; でネストされたオブジェクトを渡すことが正しく機能するようになりました。これは、 &lt;code&gt;mocha-multi-reporters&lt;/code&gt; を使用する場合に特に便利です。&lt;a href=&quot;../guides/module-api&quot;&gt;モジュールAPIの&lt;/a&gt;修正に加えて、&lt;a href=&quot;../guides/command-line&quot;&gt;コマンドライン&lt;/a&gt;からのネストされた引数を適切に処理できるようになりました。 CLIパラメータ内でネストされたオブジェクトを渡すには、文字列化されたJSONを渡す必要があります。これは、 &lt;code&gt;blacklistHosts&lt;/code&gt; などのプロパティに役立ちます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1348&quot;&gt;＃1348&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1357&quot;&gt;＃1357&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2221&quot;&gt;＃2221を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="168a3df9089dea48484203ecc1c3f8d21d2d5834" translate="yes" xml:space="preserve">
          <source>We are now taking additional precautions to prevent Cypress from trashing the wrong folder during an upgrade (with an open project). This was actually fixed in &lt;code&gt;0.17.7&lt;/code&gt; but the problem was is that during an update, the new version (which was fixed) was still being passed the wrong arguments from the older (broken) application. We&amp;rsquo;ve now upgraded &lt;code&gt;0.17.8&lt;/code&gt; to detect this, and just use the expected default install location of Cypress. If you&amp;rsquo;re concerned, just &lt;em&gt;close&lt;/em&gt; your currently open project before updating. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/265&quot;&gt;#265&lt;/a&gt;.</source>
          <target state="translated">サイプレスがアップグレード中に（開いているプロジェクトを使用して）誤ったフォルダをゴミ箱に捨てないように、追加の予防策を講じています。これは実際には &lt;code&gt;0.17.7&lt;/code&gt; で修正されましたが、問題は更新中に新しいバージョン（修正された）が古い（壊れた）アプリケーションから間違った引数を渡されていたということでした。これを検出するために &lt;code&gt;0.17.8&lt;/code&gt; をアップグレードし、サイプレスの予想されるデフォルトのインストール場所を使用します。気になる場合は、更新する前に現在開いているプロジェクトを&lt;em&gt;閉じて&lt;/em&gt;ください。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/265&quot;&gt;＃265を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="78dde2504f3dd9b0661b4cd4e6dc079a9fa6eb9b" translate="yes" xml:space="preserve">
          <source>We are passing the &lt;code&gt;--compact=false&lt;/code&gt; flag to generate human-friendly output.</source>
          <target state="translated">人間に &lt;code&gt;--compact=false&lt;/code&gt; やすい出力を生成するために--compact = falseフラグを渡します。</target>
        </trans-unit>
        <trans-unit id="e340681f70c26aa7da9985f1f006badcf9d8ea92" translate="yes" xml:space="preserve">
          <source>We are still updating the docs to reflect all of these changes.</source>
          <target state="translated">これらの変更点をすべて反映させるために、現在もドキュメントを更新しています。</target>
        </trans-unit>
        <trans-unit id="de21896f1710a0a1f3caef2081add79413b14938" translate="yes" xml:space="preserve">
          <source>We are still updating the docs to reflect the &lt;code&gt;1.0.0&lt;/code&gt; release.</source>
          <target state="translated">&lt;code&gt;1.0.0&lt;/code&gt; リリースを反映するようにドキュメントを更新しています。</target>
        </trans-unit>
        <trans-unit id="479fc391829b079adc323a540c8cf6c5a2bb88c8" translate="yes" xml:space="preserve">
          <source>We automatically normalize both the key and the value. Cypress will &lt;em&gt;strip off&lt;/em&gt; the &lt;code&gt;CYPRESS_&lt;/code&gt;, camelcase any keys and automatically convert values into &lt;code&gt;Number&lt;/code&gt; or &lt;code&gt;Boolean&lt;/code&gt;. Make sure to prefix your environment variables with &lt;code&gt;CYPRESS_&lt;/code&gt; else they will be ignored.</source>
          <target state="translated">キーと値の両方を自動的に正規化します。サイプレスはなり&lt;em&gt;はがす&lt;/em&gt; &lt;code&gt;CYPRESS_&lt;/code&gt; 、キャメルケースの任意のキーをし、自動的に値を変換する &lt;code&gt;Number&lt;/code&gt; または &lt;code&gt;Boolean&lt;/code&gt; 。環境変数の前に必ず &lt;code&gt;CYPRESS_&lt;/code&gt; を付けてください。そうしないと無視されます。</target>
        </trans-unit>
        <trans-unit id="6658236efeaff5616f8569acc706d2e95e36a900" translate="yes" xml:space="preserve">
          <source>We automatically restore and tear down &lt;code&gt;stub&lt;/code&gt;, &lt;code&gt;spy&lt;/code&gt;, and &lt;code&gt;clock&lt;/code&gt; between tests.</source>
          <target state="translated">テスト間で &lt;code&gt;stub&lt;/code&gt; 、 &lt;code&gt;spy&lt;/code&gt; 、 &lt;code&gt;clock&lt;/code&gt; を自動的に復元して破棄します。</target>
        </trans-unit>
        <trans-unit id="fd87f1b6d78ddda8a660bad2f30e6d30c5ab2043" translate="yes" xml:space="preserve">
          <source>We automatically seed you an example support file, which has several commented out examples.</source>
          <target state="translated">コメントアウトされた例がいくつかあるサポートファイルの例を自動的にシードします。</target>
        </trans-unit>
        <trans-unit id="28d536cf889797e0529133ba54f1bf9a06e16ba5" translate="yes" xml:space="preserve">
          <source>We automatically spawn Chrome in a &lt;strong&gt;custom theme&lt;/strong&gt; so you can visually distinguish the difference between browser sessions spawned with Cypress vs your normal sessions. We know this may feel a little jarring because you&amp;rsquo;re used to running Cypress alongside your other tabs. You will now see 2 chrome icons in your dock and you&amp;rsquo;ll need to switch between them. We know this is problematic and confusing and we&amp;rsquo;re looking into &lt;strong&gt;changing the icon&lt;/strong&gt; of the Chrome running Cypress so it&amp;rsquo;s easier to tell the Chrome sessions apart.</source>
          <target state="translated">&lt;strong&gt;カスタムテーマで&lt;/strong&gt; Chromeを自動的に生成するため、サイプレスで生成されたブラウザセッションと通常のセッションの違いを視覚的に区別できます。他のタブと一緒にサイプレスを実行することに慣れているため、これは少し不快に感じるかもしれません。ドックに2つのクロムアイコンが表示されます。これらを切り替える必要があります。これは問題があり混乱を招くことがわかっているため、サイプレスを実行しているChrome &lt;strong&gt;のアイコン&lt;/strong&gt;を&lt;strong&gt;変更&lt;/strong&gt;して、Chromeセッションを区別しやすくします。</target>
        </trans-unit>
        <trans-unit id="a4a2e59edb44e852cc4e19d7da90328e406c1f2c" translate="yes" xml:space="preserve">
          <source>We began bulk converting some of our codebase from CoffeeScript to JavaScript. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2686&quot;&gt;#2686&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2687&quot;&gt;#2687&lt;/a&gt;.</source>
          <target state="translated">コードベースの一部をCoffeeScriptからJavaScriptに一括変換し始めました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2686&quot;&gt;＃2686&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2687&quot;&gt;＃2687を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="6a3137f7d0d0a9a0ae9269a3a499d9ecb9f8fdc2" translate="yes" xml:space="preserve">
          <source>We believe our documentation should be simple and approachable. This means enabling our readers to understand fully not just the &lt;strong&gt;what&lt;/strong&gt; but the &lt;strong&gt;why&lt;/strong&gt; as well.</source>
          <target state="translated">ドキュメントはシンプルで親しみやすいものである必要があります。これは、読者が&lt;strong&gt;何&lt;/strong&gt;だけでなく、その&lt;strong&gt;理由&lt;/strong&gt;も完全に理解できるようにすることを意味します。</target>
        </trans-unit>
        <trans-unit id="a6e3aed272d66767fddcddd05b8bbca80d8b7243" translate="yes" xml:space="preserve">
          <source>We believe testing needs a lot of  and we are here to build a tool, a service, and a community that everyone can learn and benefit from. We&amp;rsquo;re solving the hardest pain points shared by every developer working on the web. We believe in this mission and hope that you will join us to make Cypress a lasting ecosystem that helps everyone happy.</source>
          <target state="translated">私たちはテストには多くのことが必要であると信じており、誰もが学び、利益を得ることができるツール、サービス、コミュニティを構築するためにここにいます。私たちは、ウェブで作業するすべての開発者が共有する最も困難な問題を解決しています。私たちはこの使命を信じており、皆様が私たちに加わってサイプレスを永続的なエコシステムにして、皆を幸せにすることを願っています。</target>
        </trans-unit>
        <trans-unit id="0dffaa47b04283b86f6e1962740b9d84f40a5ca9" translate="yes" xml:space="preserve">
          <source>We build every commit in the &lt;a href=&quot;https://github.com/cypress-io/cypress/commits/develop&quot;&gt;&lt;code&gt;develop&lt;/code&gt;&lt;/a&gt; branch for each platform and test it against downstream projects. For example, in the image below the last commit has the short SHA &lt;code&gt;e5106d9&lt;/code&gt;.</source>
          <target state="translated">各プラットフォームの&lt;a href=&quot;https://github.com/cypress-io/cypress/commits/develop&quot;&gt; &lt;code&gt;develop&lt;/code&gt; &lt;/a&gt;ブランチですべてのコミットを構築し、下流のプロジェクトに対してテストします。たとえば、以下の画像では、最後のコミットに短いSHA &lt;code&gt;e5106d9&lt;/code&gt; が含まれています。</target>
        </trans-unit>
        <trans-unit id="f1b6b71c91d2beed989c1700e3f70731f2733053" translate="yes" xml:space="preserve">
          <source>We can continue the interactions and assertions in this test by adding another chain to interact with and verify the behavior of elements on this new page.</source>
          <target state="translated">このテストのインタラクションとアサーションを続けるには、この新しいページの要素とインタラクションし、その動作を検証するために別のチェーンを追加します。</target>
        </trans-unit>
        <trans-unit id="e7a3d910aa47319a66afbd90e705c35c560a966e" translate="yes" xml:space="preserve">
          <source>We can directly test this piece of code by importing the &lt;code&gt;getVisibleTodos&lt;/code&gt; function from the Cypress spec file. In essense we are using the Cypress Test Runner as a unit testing tool (find more unit testing recipes &lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes#unit-testing&quot;&gt;here&lt;/a&gt;).</source>
          <target state="translated">サイプレスのスペックファイルから &lt;code&gt;getVisibleTodos&lt;/code&gt; 関数をインポートすることで、このコードを直接テストできます。つまり、単体テストツールとしてサイプレステストランナーを使用しています（単体テストのレシピは&lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes#unit-testing&quot;&gt;こちらからご覧ください&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c4bab81fe538c21e3baa26f06c3cc9a0029b68dd" translate="yes" xml:space="preserve">
          <source>We can even expand what was returned and inspect each individual element or even right click and inspect them in the Elements panel!</source>
          <target state="translated">返されたものを展開して個々の要素を検査することもできますし、右クリックして要素パネルで検査することもできます。</target>
        </trans-unit>
        <trans-unit id="46c27a8936882a2c4c524b5309614f796d1ae03e" translate="yes" xml:space="preserve">
          <source>We can move this into an environment variable.</source>
          <target state="translated">これを環境変数に移すことができます。</target>
        </trans-unit>
        <trans-unit id="7bf8a3105a1875f4f9da9c5a278f1c756054efe5" translate="yes" xml:space="preserve">
          <source>We can now generate a combined HTML report from the &lt;code&gt;mochawesome.json&lt;/code&gt; file using the &lt;a href=&quot;https://github.com/adamgruber/mochawesome-report-generator&quot;&gt;https://github.com/adamgruber/mochawesome-report-generator&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/adamgruber/mochawesome-report-generator&quot;&gt;https://github.com/adamgruber/mochawesome-report-generator&lt;/a&gt;を使用して &lt;code&gt;mochawesome.json&lt;/code&gt; ファイルから結合されたHTMLレポートを生成できるようになりました。</target>
        </trans-unit>
        <trans-unit id="88dce05bd2a420678990e034f1c5bc499ef0371f" translate="yes" xml:space="preserve">
          <source>We can now handle multiple projects per server. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/512&quot;&gt;#512&lt;/a&gt;.</source>
          <target state="translated">サーバーごとに複数のプロジェクトを処理できるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/512&quot;&gt;＃512を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="082248262a03ccd5869fcb128620e834d5141691" translate="yes" xml:space="preserve">
          <source>We can now serve the application and get instrumented code without an intermediate folder, but the result is the same instrumented code loaded by the browser, with the same &lt;code&gt;window.__coverage__&lt;/code&gt; object keeping track of the original statements.</source>
          <target state="translated">これで、アプリケーションを提供し、中間フォルダーなしでインストルメント済みコードを取得できますが、結果は、元のステートメントを追跡する同じ &lt;code&gt;window.__coverage__&lt;/code&gt; オブジェクトを使用して、ブラウザーによって読み込まれた同じインストルメント済みコードになります。</target>
        </trans-unit>
        <trans-unit id="6e6b1b6123559d967e1a4931a13516ef88bac56f" translate="yes" xml:space="preserve">
          <source>We can now visit a relative path and omit the hostname and port.</source>
          <target state="translated">相対パスにアクセスしてホスト名とポートを省略できるようになりました。</target>
        </trans-unit>
        <trans-unit id="1d085a1f621dd3ca3c17a8149dc56b8728c8936d" translate="yes" xml:space="preserve">
          <source>We can prevent Cypress from throwing this error by rewriting our test code.</source>
          <target state="translated">テストコードを書き換えることで、Cypressがこのエラーを出さないようにすることができます。</target>
        </trans-unit>
        <trans-unit id="aa6db406c7892e2ac9d5e39b0b2d1c1a8b205e52" translate="yes" xml:space="preserve">
          <source>We can rewrite the previous example in a more terse way and add an assertion.</source>
          <target state="translated">先ほどの例をもっと簡潔に書き換えて、アサーションを追加すればいいのです。</target>
        </trans-unit>
        <trans-unit id="60e6eb6e0ac86515c44a0cc889982e7782248cc6" translate="yes" xml:space="preserve">
          <source>We can use &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; to select an element based on a CSS class. Then we can use the &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; command to enter text into the selected input. Finally, we can verify that the value of the input reflects the text that was typed with another &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;を使用して、CSSクラスに基づく要素を選択できます。次に、&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;コマンドを使用して、選択した入力にテキストを入力できます。最後に、入力の値が別の&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; で&lt;/a&gt;入力されたテキストを反映していることを確認できます。</target>
        </trans-unit>
        <trans-unit id="1315afea0ccb63ee8d9ea05058072ed2502b0d64" translate="yes" xml:space="preserve">
          <source>We can write more E2E tests.</source>
          <target state="translated">E2Eテストをもっと書けるようになりました。</target>
        </trans-unit>
        <trans-unit id="3cc9481cc7e32c0946098eaa43574309405b3c3b" translate="yes" xml:space="preserve">
          <source>We can yield the location object within a &lt;a href=&quot;should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; command and work with it directly.</source>
          <target state="translated">&lt;a href=&quot;should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;コマンド内でロケーションオブジェクトを生成し、それを直接操作できます。</target>
        </trans-unit>
        <trans-unit id="7c66fd09bf64e531c693a76bd4e778304f566a42" translate="yes" xml:space="preserve">
          <source>We changed Cypress&amp;rsquo;s implementation to no longer rely on internal XHR events when the browser navigates. This fixes a a bug in Chrome 71+ that could cause XHRs to pend forever. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3973&quot;&gt;#3973&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4130&quot;&gt;#4130&lt;/a&gt;</source>
          <target state="translated">ブラウザーのナビゲート時にサイプレスの実装を変更して、内部XHRイベントに依存しないようにしました。これにより、XHRが永久に保留になる可能性のあるChrome 71以降のバグが修正されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3973&quot;&gt;＃3973&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4130&quot;&gt;＃4130の&lt;/a&gt;修正</target>
        </trans-unit>
        <trans-unit id="f49cc84d681fd456a923959e72e39515b0bb00fb" translate="yes" xml:space="preserve">
          <source>We could make our code do some ugly backflips using &lt;code&gt;let&lt;/code&gt; to get access to it.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; を使用してコードにいくつかの醜いバク転をさせて、コードにアクセスさせることができます。</target>
        </trans-unit>
        <trans-unit id="8341bd4b64f4ef5fb4607b34eebac982e470d6f8" translate="yes" xml:space="preserve">
          <source>We could not determine a unique CI build ID</source>
          <target state="translated">固有の CI ビルド ID を判断できませんでした。</target>
        </trans-unit>
        <trans-unit id="45dd22c33826f62ce4e7356afca4e6adb2e4992a" translate="yes" xml:space="preserve">
          <source>We currently have the following downloads available:</source>
          <target state="translated">現在、以下のダウンロードが可能です。</target>
        </trans-unit>
        <trans-unit id="eb97e156eb284ac02be5a6f796bcbbb4c144f790" translate="yes" xml:space="preserve">
          <source>We did not write an automatic migration from &lt;code&gt;tests&lt;/code&gt; -&amp;gt; &lt;code&gt;cypress&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;tests&lt;/code&gt; からの自動移行は記述していません-&amp;gt; &lt;code&gt;cypress&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3afe4e565dea145e548f7936759ec8cffb719b99" translate="yes" xml:space="preserve">
          <source>We display errors coming from &lt;code&gt;babel&lt;/code&gt; with more helpful information now.</source>
          <target state="translated">&lt;code&gt;babel&lt;/code&gt; からのエラーをより役立つ情報とともに表示します。</target>
        </trans-unit>
        <trans-unit id="581e8dcac7bd62d497235692fa00839b55fa5430" translate="yes" xml:space="preserve">
          <source>We do NOT recommend trying to start your back end web server from within Cypress.</source>
          <target state="translated">Cypress内からバックエンドのWebサーバーを起動することはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="47c89582e4ac5d3aa2a9433e2b0a65ee75af5a4e" translate="yes" xml:space="preserve">
          <source>We do not recommend starting a web server using &lt;code&gt;cy.task()&lt;/code&gt;. Read about &lt;a href=&quot;../../guides/references/best-practices#Web-Servers&quot;&gt;best practices&lt;/a&gt; here.</source>
          <target state="translated">&lt;code&gt;cy.task()&lt;/code&gt; を使用してWebサーバーを起動することはお勧めしません。こちらで&lt;a href=&quot;../../guides/references/best-practices#Web-Servers&quot;&gt;ベストプラクティス&lt;/a&gt;についてお読みください。</target>
        </trans-unit>
        <trans-unit id="98248e51b97b02724d5574afd2531e155a392ee4" translate="yes" xml:space="preserve">
          <source>We expose &lt;a href=&quot;../utilities/minimatch&quot;&gt;&lt;code&gt;Cypress.minimatch&lt;/code&gt;&lt;/a&gt; as a function that you can use in your console to test routes.</source>
          <target state="translated">ルートをテストするためにコンソールで使用できる関数として&lt;a href=&quot;../utilities/minimatch&quot;&gt; &lt;code&gt;Cypress.minimatch&lt;/code&gt; &lt;/a&gt;を公​​開します。</target>
        </trans-unit>
        <trans-unit id="cbacc94aa8e2d79280711a6400b56270ebfec01c" translate="yes" xml:space="preserve">
          <source>We finally have &lt;em&gt;partial&lt;/em&gt; iframe support. You can at least now &lt;a href=&quot;../../api/commands/wrap&quot;&gt;&lt;code&gt;cy.wrap()&lt;/code&gt;&lt;/a&gt; iframe elements and interact with them using Cypress commands. More work needs to be done to &amp;ldquo;switch into&amp;rdquo; and back &amp;ldquo;out of&amp;rdquo; iframes. But we&amp;rsquo;re getting there.</source>
          <target state="translated">いよいよiframe が&lt;em&gt;部分的に&lt;/em&gt;サポートされました。少なくとも&lt;a href=&quot;../../api/commands/wrap&quot;&gt; &lt;code&gt;cy.wrap()&lt;/code&gt; &lt;/a&gt; iframe要素を使用して、Cypressコマンドを使用してそれらを操作できます。iframeを「切り替え」たり、「外」に戻したりするには、さらに作業が必要です。しかし、私たちはそこに到達しています。</target>
        </trans-unit>
        <trans-unit id="1d49b4bc3197f587f01f5fbcc7b923d2837d1601" translate="yes" xml:space="preserve">
          <source>We fixed a regression introduced in &lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0&lt;/a&gt; that was causing the Test Runner to do extremely unnecessary re-renders of the Command Log on any command change - leading to exponential performance degradation on any run. This was the root cause behind many users experiencing a reduction in performance when upgrading to &lt;code&gt;3.3.0&lt;/code&gt; or above. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4411&quot;&gt;#4411&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4313&quot;&gt;#4313&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0&lt;/a&gt;で導入されたリグレッションを修正しました。これにより、テストランナーはコマンドの変更時にコマンドログの非常に不要な再レンダリングを実行し、実行時に指数関数的なパフォーマンスの低下を引き起こしていました。これは、 &lt;code&gt;3.3.0&lt;/code&gt; 以降にアップグレードするときにパフォーマンスの低下を経験している多くのユーザーの背後にある根本的な原因でした。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4411&quot;&gt;＃4411&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4313&quot;&gt;＃4313を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="9f4c6c6b725dfb1a06043e17bf7094bb5963acd0" translate="yes" xml:space="preserve">
          <source>We fixed an issue involving timers after running &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2432&quot;&gt;#2432&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; を&lt;/a&gt;実行した後のタイマーに関する問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2432&quot;&gt;＃2432を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="9886dab8331d5171985b91568f894c0f54e140d8" translate="yes" xml:space="preserve">
          <source>We fixed an issue where the &lt;code&gt;ignoreTestFiles&lt;/code&gt; configuration was being filtered out when passed via a command line flag, so in effect being ignored. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1696&quot;&gt;#1696&lt;/a&gt;.</source>
          <target state="translated">コマンドラインフラグを介して渡されたときに &lt;code&gt;ignoreTestFiles&lt;/code&gt; 構成が除外されていたため、事実上無視されていた問題を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1696&quot;&gt;＃1696を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ee705debcec52b78487c1e1e489f921d9cbbf290" translate="yes" xml:space="preserve">
          <source>We fixed situations during a test failure where the Test Runner would throw &lt;code&gt;RangeError: Maximum call stack size exceeded&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1958&quot;&gt;#1958&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4346&quot;&gt;#4346&lt;/a&gt;.</source>
          <target state="translated">テストの実行中にテストランナーが &lt;code&gt;RangeError: Maximum call stack size exceeded&lt;/code&gt; しまう状況を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1958&quot;&gt;＃1958&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4346&quot;&gt;＃4346を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="5e5cf75d8c1585596268ec95d7b1ad00f48d86cf" translate="yes" xml:space="preserve">
          <source>We found an error preparing your test file</source>
          <target state="translated">テストファイルの準備にエラーが見つかりました</target>
        </trans-unit>
        <trans-unit id="617acbceca24aa64b8fda8abd1d4383fb0f97509" translate="yes" xml:space="preserve">
          <source>We greatly improved the speed of proxied requests through our network layer. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3192&quot;&gt;#3192&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1469&quot;&gt;#1469&lt;/a&gt;.</source>
          <target state="translated">ネットワークレイヤーを介してプロキシされたリクエストの速度を大幅に改善しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3192&quot;&gt;＃3192&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1469&quot;&gt;＃1469を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="6b9f67b5425428dee8e943207bbd78bd098842b8" translate="yes" xml:space="preserve">
          <source>We have &lt;a href=&quot;../guides/continuous-integration#Boot-your-server&quot;&gt;examples showing you how to start and stop your web server&lt;/a&gt;.</source>
          <target state="translated">私たちは持っている&lt;a href=&quot;../guides/continuous-integration#Boot-your-server&quot;&gt;どのようにWebサーバーを起動および停止するかを示す例を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ea6e7ec1f86ae909979ed278f00c3c4b342f01fd" translate="yes" xml:space="preserve">
          <source>We have &lt;a href=&quot;https://github.com/cypress-io/cypress-docker-images&quot;&gt;created&lt;/a&gt; an official &lt;a href=&quot;https://hub.docker.com/r/cypress/base/&quot;&gt;cypress/base&lt;/a&gt; container with all of the required dependencies installed. Just add Cypress and go! We are also adding images with browsers pre-installed under &lt;a href=&quot;https://hub.docker.com/r/cypress/browsers/&quot;&gt;cypress/browsers&lt;/a&gt; name. A typical Dockerfile would look like this:</source>
          <target state="translated">我々は&lt;a href=&quot;https://github.com/cypress-io/cypress-docker-images&quot;&gt;作成した&lt;/a&gt;公式の&lt;a href=&quot;https://hub.docker.com/r/cypress/base/&quot;&gt;ヒノキ/ベース&lt;/a&gt;インストールに必要なすべての依存関係を持つコンテナを。サイプレスを追加して実行してください！また、&lt;a href=&quot;https://hub.docker.com/r/cypress/browsers/&quot;&gt;cypress / browsers&lt;/a&gt;という名前でブラウザがプリインストールされた画像も追加しています。典型的なDockerfileは次のようになります。</target>
        </trans-unit>
        <trans-unit id="9b61c982c53295d9fb780370ec579741da96784e" translate="yes" xml:space="preserve">
          <source>We have &lt;a href=&quot;https://github.com/cypress-io/cypress/issues&quot;&gt;open issues&lt;/a&gt; where you can find a full list of things Cypress will eventually address, we wanted to highlight some of the more important &lt;em&gt;temporary&lt;/em&gt; restrictions that Cypress will eventually address. &lt;a href=&quot;https://on.cypress.io/contributing&quot;&gt;PRs are welcome ;-)&lt;/a&gt;</source>
          <target state="translated">我々は持っている&lt;a href=&quot;https://github.com/cypress-io/cypress/issues&quot;&gt;未解決の問題&lt;/a&gt;あなたは私たちがより重要なのいくつかのハイライトしたい、サイプレスは、最終的に取り組むことの完全なリストを見つけることができます&lt;em&gt;一時的&lt;/em&gt;サイプレスは、最終的にアドレスすることを制限します。&lt;a href=&quot;https://on.cypress.io/contributing&quot;&gt;PRは大歓迎です;-)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78d689ef6e62b79f03cebe630c829a88135c39e3" translate="yes" xml:space="preserve">
          <source>We have a &lt;a href=&quot;https://on.cypress.io/contributing&quot;&gt;Contributing Guideline&lt;/a&gt; to help contributors get started as well as &lt;a href=&quot;https://github.com/cypress-io/cypress/labels/first-timers-only&quot;&gt;issues labeled &lt;code&gt;first-timers-only&lt;/code&gt;&lt;/a&gt; for those wanting to contribute right away.</source>
          <target state="translated">私たちは、&lt;a href=&quot;https://on.cypress.io/contributing&quot;&gt;貢献&lt;/a&gt;者が始めるのを助けるための貢献ガイドラインと、すぐに貢献したい人のため&lt;a href=&quot;https://github.com/cypress-io/cypress/labels/first-timers-only&quot;&gt; &lt;code&gt;first-timers-only&lt;/code&gt; &lt;/a&gt;というラベルの付いた問題を持っています。</target>
        </trans-unit>
        <trans-unit id="41c37df28ab4d1f88bc1c29e0f46d6baba742bd7" translate="yes" xml:space="preserve">
          <source>We have a much more detailed and comprehensive guide on routing Network Requests.</source>
          <target state="translated">ネットワークリクエストのルーティングについて、より詳細で包括的なガイドをご用意しています。</target>
        </trans-unit>
        <trans-unit id="b3d353545e31b4bd73847cc293433195ccb3eb79" translate="yes" xml:space="preserve">
          <source>We have added better checks and reliability for detecting runs in Jenkins. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1990&quot;&gt;#1990&lt;/a&gt;.</source>
          <target state="translated">Jenkinsで実行を検出するためのチェックと信頼性が向上しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1990&quot;&gt;＃1990を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="0c841c9d4fde6ff9283d12cec264896b3fa8bf39" translate="yes" xml:space="preserve">
          <source>We have added support for more CI providers to automatically detect and show more relevant information in the Dashboard, instead of showing &amp;lsquo;Unknown&amp;rsquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2146&quot;&gt;#2146&lt;/a&gt;.</source>
          <target state="translated">「不明」を表示する代わりに、より多くのCIプロバイダーがダッシュボードでより関連性の高い情報を自動的に検出して表示するためのサポートを追加しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2146&quot;&gt;＃2146を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="471c0b121fd0cf59eaf8b8e652b2538994d3ea23" translate="yes" xml:space="preserve">
          <source>We have added the first Plugin API event called: &lt;a href=&quot;../../api/plugins/writing-a-plugin#List-of-events&quot;&gt;&lt;code&gt;file:preprocessor&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/580&quot;&gt;#580&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/581&quot;&gt;#581&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/plugins/writing-a-plugin#List-of-events&quot;&gt; &lt;code&gt;file:preprocessor&lt;/code&gt; &lt;/a&gt;という最初のプラグインAPIイベントを追加しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/580&quot;&gt;＃580&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/581&quot;&gt;＃581を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="fa1cc00d48c069b69107e1dffb76b90fd5930ff0" translate="yes" xml:space="preserve">
          <source>We have all new &lt;a href=&quot;https://docs.cypress.io/examples/examples/docker.html&quot;&gt;docker examples&lt;/a&gt; you can check out.</source>
          <target state="translated">確認できるすべての新しい&lt;a href=&quot;https://docs.cypress.io/examples/examples/docker.html&quot;&gt;Dockerサンプルがあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="689df455709e598120e8df3f40dd7822c968f288" translate="yes" xml:space="preserve">
          <source>We have begun to aggregate failures and other stats ourselves instead of relying on Mocha reporters. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1141&quot;&gt;#1141&lt;/a&gt;.</source>
          <target state="translated">モカのレポーターに頼るのではなく、失敗やその他の統計を自分で集計し始めました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1141&quot;&gt;＃1141を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="75b82e3761c6ff019d10fed647465f131d850c18" translate="yes" xml:space="preserve">
          <source>We have better error handling and messaging around Xvfb failures.</source>
          <target state="translated">Xvfb のエラー処理とメッセージングが改善されました。</target>
        </trans-unit>
        <trans-unit id="0a9e21e9e059ecccea861756058f84394f89ea9e" translate="yes" xml:space="preserve">
          <source>We have built Cypress to support this use case. In fact, Cypress &lt;strong&gt;does not&lt;/strong&gt; clean up its own internal state when the test ends. We &lt;strong&gt;want&lt;/strong&gt; you to have dangling state at the end of the test! Things like &lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;stubs&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/spy&quot;&gt;&lt;code&gt;spies&lt;/code&gt;&lt;/a&gt;, even &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;routes&lt;/code&gt;&lt;/a&gt; are &lt;strong&gt;not&lt;/strong&gt; removed at the end of the test. This means your application will behave identically while it is running Cypress commands or when you manually work with it after a test ends.</source>
          <target state="translated">このユースケースをサポートするためにサイプレスを構築しました。実際、テストが終了&lt;strong&gt;しても&lt;/strong&gt;、サイプレス&lt;strong&gt;は&lt;/strong&gt;自身の内部状態をクリーンアップ&lt;strong&gt;しません&lt;/strong&gt;。私たちは&lt;strong&gt;したい&lt;/strong&gt;あなたが試験終了時の状態をダングリングしているために！以下のようなもの&lt;a href=&quot;../../api/commands/stub&quot;&gt; &lt;code&gt;stubs&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/spy&quot;&gt; &lt;code&gt;spies&lt;/code&gt; &lt;/a&gt;、でも&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;routes&lt;/code&gt; &lt;/a&gt;され&lt;strong&gt;ていない&lt;/strong&gt;テストの終了時に削除されます。これは、サイプレスコマンドの実行中、またはテストの終了後に手動で操作した場合にも、アプリケーションは同じように動作することを意味します。</target>
        </trans-unit>
        <trans-unit id="8c0edc8038d16941038f4ef68c917d37670c8898" translate="yes" xml:space="preserve">
          <source>We have created a &lt;a href=&quot;https://github.com/cypress-io/cypress-webpack-preprocessor&quot;&gt;&lt;code&gt;@cypress/webpack-preprocessor&lt;/code&gt;&lt;/a&gt; preprocessor npm package for you webpack users (because we are nice ￰ﾟﾘﾉ). Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/676&quot;&gt;#676&lt;/a&gt;.</source>
          <target state="translated">私たちは、作成した&lt;a href=&quot;https://github.com/cypress-io/cypress-webpack-preprocessor&quot;&gt; &lt;code&gt;@cypress/webpack-preprocessor&lt;/code&gt; &lt;/a&gt;ユーザーをWebPACKのために（私たちはいいですので￰゚リノ）プリプロセッサNPMパッケージを。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/676&quot;&gt;＃676を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="e73ad01a3709a38be1dfa9ec78611bba65cf3bf1" translate="yes" xml:space="preserve">
          <source>We have currently added only &lt;a href=&quot;../../api/plugins/writing-a-plugin#List-of-events&quot;&gt;one event&lt;/a&gt; for modifying the test file preprocessor, but this paves the way for adding many more event types. You can now modify every aspect of how files are sent to the browser.</source>
          <target state="translated">現在、テストファイルプリプロセッサを変更するための&lt;a href=&quot;../../api/plugins/writing-a-plugin#List-of-events&quot;&gt;イベント&lt;/a&gt;を1つだけ追加していますが、これにより、さらに多くのイベントタイプを追加することができます。これで、ファイルがブラウザに送信される方法のあらゆる側面を変更できます。</target>
        </trans-unit>
        <trans-unit id="1828ee31d8a5c0b64a09779f7024232ca5ce74c3" translate="yes" xml:space="preserve">
          <source>We have done our very best to create as little breaking changes as possible.</source>
          <target state="translated">できる限りブレインの少ない変化を生み出すために、全力で取り組んできました。</target>
        </trans-unit>
        <trans-unit id="7095852d7818640eb132a04a6daa796fed5f0b0b" translate="yes" xml:space="preserve">
          <source>We have extracted the default Browserify preprocessor into its own package - &lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor&quot;&gt;&lt;code&gt;@cypress/browserify-preprocessor&lt;/code&gt;&lt;/a&gt;. This is bundled with Cypress, but it is extracted so it can be used / modified by you to change the default options we pass to Browserify. Additionally, you can swap out this preprocessor for something else entirely.</source>
          <target state="translated">デフォルトのBrowserifyプリプロセッサを独自のパッケージ- &lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor&quot;&gt; &lt;code&gt;@cypress/browserify-preprocessor&lt;/code&gt; &lt;/a&gt;抽出しました。これはサイプレスにバンドルされていますが、抽出されているため、ユーザーがBrowserifyに渡すデフォルトオプションを変更するために使用/変更できます。さらに、このプリプロセッサを完全に別のものに交換できます。</target>
        </trans-unit>
        <trans-unit id="f169108d4c2f4302eeaf6d4d3644cb4680ce82f2" translate="yes" xml:space="preserve">
          <source>We have launched a &amp;ldquo;CSS Selector Playground&amp;rdquo;, a new UI button in the Test Runner that enables you to highlight elements in your application and receive a unique selector. You can also find elements by their text content. These mimics &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; behavior. Additionally you can copy the generated Cypress command to your clipboard or output the generated selector to your console. This feature is in beta. It only works in Chrome (not in Electron). We are aware of some bugs in it, but it is good enough for use and feedback. Please check out issue &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/917&quot;&gt;#917&lt;/a&gt;, watch an animated gif demonstration, and leave any feedback you have there. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/917&quot;&gt;#917&lt;/a&gt;.</source>
          <target state="translated">テストランナーの新しいUIボタンである「CSSセレクタープレイグラウンド」をリリースしました。これにより、アプリケーションの要素を強調表示し、独自のセレクターを受け取ることができます。テキストコンテンツによって要素を見つけることもできます。これらは&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; の&lt;/a&gt;動作を模倣しています。さらに、生成されたサイプレスコマンドをクリップボードにコピーしたり、生成されたセレクターをコンソールに出力したりできます。この機能はベータ版です。 Chromeでのみ機能します（Electronでは機能しません）。いくつかのバグは認識していますが、使用およびフィードバックには十分です。問題&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/917&quot;&gt;＃917を&lt;/a&gt;確認し、アニメーションgifのデモを見て、フィードバックがあれば残してください。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/917&quot;&gt;＃917を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="b74d88c922efdcfe7ee3b465c529e04fb9e826ac" translate="yes" xml:space="preserve">
          <source>We have many more examples and use cases of &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;cy.then()&lt;/code&gt;&lt;/a&gt; in our &lt;a href=&quot;variables-and-aliases&quot;&gt;Core Concept Guide&lt;/a&gt; that teaches you how to properly deal with asynchronous code, when to use variables, and what aliasing is.</source>
          <target state="translated">私たちは、多くのより多くの例と使用例持つ&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;cy.then()&lt;/code&gt; &lt;/a&gt;私たちに&lt;a href=&quot;variables-and-aliases&quot;&gt;コアコンセプトガイド&lt;/a&gt;変数を使用する際に、適切に非同期コードに対処する方法を教えて、どのようなエイリアシングです。</target>
        </trans-unit>
        <trans-unit id="541e6dffb056472e42a6be52cea9e3c4e39ede43" translate="yes" xml:space="preserve">
          <source>We have many new plugin events &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/684&quot;&gt;we are adding&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/684&quot;&gt;追加する&lt;/a&gt;新しいプラグインイベントが多数あります。</target>
        </trans-unit>
        <trans-unit id="2b7736ab6713fe57256deaef1e260477839a6411" translate="yes" xml:space="preserve">
          <source>We have new instructions on how to set up &lt;a href=&quot;../dashboard/github-integration&quot;&gt;GitHub Integration&lt;/a&gt; with the Cypress Dashboard.</source>
          <target state="translated">サイプレスダッシュボードとの&lt;a href=&quot;../dashboard/github-integration&quot;&gt;GitHub統合の&lt;/a&gt;セットアップ方法に関する新しい指示があります。</target>
        </trans-unit>
        <trans-unit id="d891f89db48771c3275c48135cee8a4ae3349afe" translate="yes" xml:space="preserve">
          <source>We have now &lt;strong&gt;pinned&lt;/strong&gt; this snapshot. Hovering over other commands will not revert to them. This gives us a chance to manually inspect the DOM of our application under test at the time the snapshot was taken.</source>
          <target state="translated">私たちは、今持っている&lt;strong&gt;固定&lt;/strong&gt;このスナップショットを。他のコマンドにカーソルを合わせても元に戻りません。これにより、スナップショットが作成されたときにテスト中のアプリケーションのDOMを手動で検査する機会が与えられます。</target>
        </trans-unit>
        <trans-unit id="f7849a6950aa385b270d4655adaf291e40497bc9" translate="yes" xml:space="preserve">
          <source>We have officially implemented our &lt;a href=&quot;http://sinonjs.org/&quot;&gt;Sinon.JS&lt;/a&gt; integration: adding &lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/spy&quot;&gt;&lt;code&gt;cy.spy()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../api/commands/tick&quot;&gt;&lt;code&gt;cy.tick()&lt;/code&gt;&lt;/a&gt;. We&amp;rsquo;ve matched Sinon&amp;rsquo;s APIs and added &lt;code&gt;sinon-as-promised&lt;/code&gt; and &lt;code&gt;chai-sinon&lt;/code&gt;. In addition we&amp;rsquo;ve fixed Sinon performance issues, and improved the display of assertion passes and failures.</source>
          <target state="translated">&lt;a href=&quot;http://sinonjs.org/&quot;&gt;Sinon.JS&lt;/a&gt;統合を正式に実装しました：&lt;a href=&quot;../../api/commands/stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/spy&quot;&gt; &lt;code&gt;cy.spy()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../../api/commands/tick&quot;&gt; &lt;code&gt;cy.tick()&lt;/code&gt; &lt;/a&gt;を追加します。 SinonのAPIを一致させ &lt;code&gt;sinon-as-promised&lt;/code&gt; &lt;code&gt;chai-sinon&lt;/code&gt; とchai-sinonを追加しました。さらに、Sinonのパフォーマンスの問題を修正し、アサーションパスと失敗の表示を改善しました。</target>
        </trans-unit>
        <trans-unit id="d63cc1eceeac27fe0b07d589e6990a0374da280b" translate="yes" xml:space="preserve">
          <source>We have officially launched the new &lt;strong&gt;Plugins API&lt;/strong&gt; interface. This adds a &lt;code&gt;cypress/plugins/index.js&lt;/code&gt; file to new and existing projects. Using this file will enable you to modify the internals of Cypress running in the background &lt;code&gt;node&lt;/code&gt; process. This means you will be able to use &lt;code&gt;node&lt;/code&gt; APIs that are executed outside of the browser.</source>
          <target state="translated">新しい&lt;strong&gt;プラグインAPI&lt;/strong&gt;インターフェースを正式に&lt;strong&gt;リリースしました&lt;/strong&gt;。これにより、 &lt;code&gt;cypress/plugins/index.js&lt;/code&gt; ファイルが新規および既存のプロジェクトに追加されます。このファイルを使用すると、バックグラウンド &lt;code&gt;node&lt;/code&gt; プロセスで実行されているサイプレスの内部を変更できます。つまり、ブラウザの外部で実行される &lt;code&gt;node&lt;/code&gt; API を使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="8947651674da80dc1b1da99ce9297f4aeced8cda" translate="yes" xml:space="preserve">
          <source>We have officially released our &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard&lt;/a&gt; which is our service that will display recorded runs.</source>
          <target state="translated">記録されたランを表示するサービスである&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;ダッシュボード&lt;/a&gt;を正式にリリースしました。</target>
        </trans-unit>
        <trans-unit id="9daff652b052c9c5f4b90b1e26533e15a24805f6" translate="yes" xml:space="preserve">
          <source>We have published a utility npm module, &lt;a href=&quot;https://github.com/bahmutov/add-typescript-to-cypress&quot;&gt;add-typescript-to-cypress&lt;/a&gt;, that sets TypeScript test transpilation for you with a single command.</source>
          <target state="translated">単一のコマンドでTypeScriptテストの翻訳を設定するユーティリティnpmモジュール、&lt;a href=&quot;https://github.com/bahmutov/add-typescript-to-cypress&quot;&gt;add-typescript-to-cypressを&lt;/a&gt;公開しました。</target>
        </trans-unit>
        <trans-unit id="a26b9fd07564e1c44b0cbbfd53a1932c46c6cdd0" translate="yes" xml:space="preserve">
          <source>We have rewritten the entire proxy layer of the Cypress server to finally fix all the problems with CORS.</source>
          <target state="translated">サイプレスサーバーのプロキシ層全体を書き換えて、CORSの問題点を最終的にすべて解決しました。</target>
        </trans-unit>
        <trans-unit id="f46f42fc72a14c199dee654f1dfa7888a98f3bc6" translate="yes" xml:space="preserve">
          <source>We have several examples of doing this in our logging in recipes.</source>
          <target state="translated">レシピのロギングでやっている例がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="2a8cdedb57bfca7637a3d6463f14640e376b0e45" translate="yes" xml:space="preserve">
          <source>We have several more examples in our &lt;a href=&quot;../../guides/core-concepts/variables-and-aliases&quot;&gt;Core Concepts Guide&lt;/a&gt; which go into the various ways you can use &lt;code&gt;.then()&lt;/code&gt; to store, compare, and debug values.</source>
          <target state="translated">&lt;a href=&quot;../../guides/core-concepts/variables-and-aliases&quot;&gt;コアコンセプトガイド&lt;/a&gt;には、 &lt;code&gt;.then()&lt;/code&gt; を使用して値を保存、比較、デバッグするためのさまざまな方法の例がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="2b06e92abc275e45221c080b9e338377c01f317c" translate="yes" xml:space="preserve">
          <source>We have some newly translated documentation in &lt;a href=&quot;http://on.cypress.io/zh-cn&quot;&gt;Chinese&lt;/a&gt; and &lt;a href=&quot;http://on.cypress.io/ja&quot;&gt;Japanese&lt;/a&gt;. If you&amp;rsquo;d like to help in translating more, please open a pull request in our &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation&quot;&gt;documentation repo&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://on.cypress.io/zh-cn&quot;&gt;中国語&lt;/a&gt;と&lt;a href=&quot;http://on.cypress.io/ja&quot;&gt;日本語&lt;/a&gt;で新しく翻訳されたドキュメントがあります。さらに翻訳を手伝いたい場合は、&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation&quot;&gt;ドキュメントリポジトリ&lt;/a&gt;でプルリクエストを開いてください。</target>
        </trans-unit>
        <trans-unit id="6921be1e1e247d9f5773a6ac8c740a2837c828fd" translate="yes" xml:space="preserve">
          <source>We have updated all of the docs related to these changes. The &lt;a href=&quot;../guides/continuous-integration&quot;&gt;CI Docs&lt;/a&gt; got a much needed facelift.</source>
          <target state="translated">これらの変更に関連するすべてのドキュメントを更新しました。&lt;a href=&quot;../guides/continuous-integration&quot;&gt;CIドキュメントは、&lt;/a&gt;多くの必要な改築を得ました。</target>
        </trans-unit>
        <trans-unit id="a8789fe340cf8402aa47e5201714fa9625ee4018" translate="yes" xml:space="preserve">
          <source>We have upgraded the &lt;code&gt;Chromium&lt;/code&gt; that runs headlessly on &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; to version &lt;code&gt;51&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt;ヘッドレスで実行される &lt;code&gt;Chromium&lt;/code&gt; をバージョン &lt;code&gt;51&lt;/code&gt; にアップグレードしました。</target>
        </trans-unit>
        <trans-unit id="ad52caf3a024f61338a0bca5cbd0e2eb05060e58" translate="yes" xml:space="preserve">
          <source>We improved error logging and the user experience around &lt;a href=&quot;../guides/command-line#cypress-verify&quot;&gt;&lt;code&gt;cypress verify&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1984&quot;&gt;#1984&lt;/a&gt;.</source>
          <target state="translated">エラーログと&lt;a href=&quot;../guides/command-line#cypress-verify&quot;&gt; &lt;code&gt;cypress verify&lt;/code&gt; &lt;/a&gt;ユーザーエクスペリエンスを改善しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1984&quot;&gt;＃1984の&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="c409fe521e2e0238b2ce2f4550634f1655a6fe6c" translate="yes" xml:space="preserve">
          <source>We improved the &lt;code&gt;sinon-chai&lt;/code&gt; assertion output by changing what is displayed during a passing vs. failing test.</source>
          <target state="translated">テストの合格と不合格の間に表示される内容を変更することにより、 &lt;code&gt;sinon-chai&lt;/code&gt; アサーションの出力を改善しました。</target>
        </trans-unit>
        <trans-unit id="0129a2d1e931f82d1ccc16f5cbef871830d50d67" translate="yes" xml:space="preserve">
          <source>We improved the error message displayed when a record key is unrecognized during &lt;code&gt;cypress run&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1449&quot;&gt;#1449&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; 中にレコードキーが認識されない場合に表示されるエラーメッセージを改善しました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1449&quot;&gt;＃1449&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f9dd7c14ad43ab5351a2cab06cceecc68b6033e7" translate="yes" xml:space="preserve">
          <source>We improved the logic around when and if we scaffold files on a new project. We&amp;rsquo;re much smarter about this and not generating these forcibly every time. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/285&quot;&gt;#285&lt;/a&gt;.</source>
          <target state="translated">新しいプロジェクトでファイルをスキャフォールディングするタイミングとその前後のロジックを改善しました。これについてはずっと賢く、毎回強制的に生成するわけではありません。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/285&quot;&gt;＃285を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="d98acdaeae742c8e5b1d9f75708cb19e87bc7ccc" translate="yes" xml:space="preserve">
          <source>We improved the typings when using &lt;code&gt;Cypress.on&lt;/code&gt; to listen for &lt;code&gt;window.alert&lt;/code&gt; events to allow for &lt;code&gt;Sinon.stub&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3451&quot;&gt;#3451&lt;/a&gt;.</source>
          <target state="translated">使用しているとき私たちはタイピングを改善 &lt;code&gt;Cypress.on&lt;/code&gt; ををリッスンするため &lt;code&gt;window.alert&lt;/code&gt; を可能にするために、イベント &lt;code&gt;Sinon.stub&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3451&quot;&gt;＃3451を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="55f41a59be2794a4a6ed5b6175c823bfdd5027b3" translate="yes" xml:space="preserve">
          <source>We increased the cypress binary verification phase from 10 seconds to 30 seconds to accomodate underpowered or overwhelmed machines typically found in CI environments. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4624&quot;&gt;#4624&lt;/a&gt;.</source>
          <target state="translated">サイプレスのバイナリ検証フェーズを10秒から30秒に増やし、CI環境で一般的に見られるパワー不足または圧倒的なマシンに対応しました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4624&quot;&gt;＃4624&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="00e5824938ec1efdc3c58c22422f8eaad6f5ccc5" translate="yes" xml:space="preserve">
          <source>We know that in order for us to be successful we must enable, nurture, and foster an ecosystem that thrives on open source. Every line of test code is an investment in &lt;strong&gt;your codebase&lt;/strong&gt;, it will never be coupled to us as a paid service or company. Tests will be able to run and work independently, &lt;em&gt;always&lt;/em&gt;.</source>
          <target state="translated">私たちが成功するためには、オープンソースで繁栄するエコシステムを実現、育成、育成する必要があることを知っています。テストコードのすべての行は&lt;strong&gt;、コードベース&lt;/strong&gt;への投資で&lt;strong&gt;あり&lt;/strong&gt;、有料のサービスや会社として私たちに結び付けられることは決してありません。テストは、&lt;em&gt;常に&lt;/em&gt;独立して実行および機能できます。</target>
        </trans-unit>
        <trans-unit id="9371b4fe6ea24539b99fa8ced706b05e83dc43cc" translate="yes" xml:space="preserve">
          <source>We made some changes to internal references of &lt;code&gt;headed&lt;/code&gt; and &lt;code&gt;headless&lt;/code&gt; to be more specific and instead reference &lt;code&gt;run mode&lt;/code&gt; and &lt;code&gt;interactive mode&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1140&quot;&gt;#1140&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;headed&lt;/code&gt; と &lt;code&gt;headless&lt;/code&gt; の内部参照にいくつかの変更を加えて、より具体的にし、代わりに &lt;code&gt;run mode&lt;/code&gt; と &lt;code&gt;interactive mode&lt;/code&gt; 参照するようにしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1140&quot;&gt;＃1140を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="fd9f6c13414ff3f75e964671c63e2bfab14cea23" translate="yes" xml:space="preserve">
          <source>We make it simple to:</source>
          <target state="translated">私たちはそれをシンプルにします。</target>
        </trans-unit>
        <trans-unit id="75b7d26d8ab34dc1e221a21cfc76f8a55637834e" translate="yes" xml:space="preserve">
          <source>We make our best effort to synchronize taking a screenshot with our renderer, but the current state of your application under test could have changed in the meantime and not be an accurate representation of what you want to capture.</source>
          <target state="translated">スクリーンショットの撮影をレンダラーと同期させるために最善の努力をしていますが、テスト中のアプリケーションの現在の状態は、その間に変化しており、キャプチャしたいものを正確に表現できていない可能性があります。</target>
        </trans-unit>
        <trans-unit id="54047a934cffd6f6a00a773dea79607eea0d0ba7" translate="yes" xml:space="preserve">
          <source>We mentioned previously that Cypress waited &lt;strong&gt;4 seconds&lt;/strong&gt; before timing out finding a DOM element - but in this case, when Cypress detects a &lt;code&gt;page transition event&lt;/code&gt; it automatically increases the timeout to &lt;strong&gt;60 seconds&lt;/strong&gt; for the single &lt;code&gt;PAGE LOAD&lt;/code&gt; event.</source>
          <target state="translated">サイプレスはDOM要素の検索がタイムアウトするまで&lt;strong&gt;4秒&lt;/strong&gt;待機したことを前述しましたが、この場合、サイプレスが &lt;code&gt;page transition event&lt;/code&gt; 検出すると、単一の &lt;code&gt;PAGE LOAD&lt;/code&gt; イベントのタイムアウトを自動的に&lt;strong&gt;60秒に&lt;/strong&gt;増やします。</target>
        </trans-unit>
        <trans-unit id="bdbe4a4ff1cd2f31e6c1df8b35114b9fd840870e" translate="yes" xml:space="preserve">
          <source>We most often see test code that like this:</source>
          <target state="translated">私たちは、このようなテストコードをよく目にします。</target>
        </trans-unit>
        <trans-unit id="c1743e548068e2a114e2f4642e8bef70657f7559" translate="yes" xml:space="preserve">
          <source>We moved the location of the browser&amp;rsquo;s disk cache. That means that if you&amp;rsquo;ve been using Cypress for a really long time - you may have built up quite a large existing cache (in the hundreds of &lt;code&gt;mb&lt;/code&gt;). Before upgrading, you should open the browser and then manually clear the Cache. Or - if you have already upgraded to &lt;code&gt;2.0.0&lt;/code&gt; delete the following folders:</source>
          <target state="translated">ブラウザのディスクキャッシュの場所を移動しました。つまり、サイプレスを非常に長い間使用していた場合、非常に大きな既存のキャッシュ（数百 &lt;code&gt;mb&lt;/code&gt; 単位）が構築されている可能性があります。アップグレードする前に、ブラウザを開き、手動でキャッシュをクリアする必要があります。または、すでに &lt;code&gt;2.0.0&lt;/code&gt; にアップグレードしている場合は、次のフォルダーを削除します。</target>
        </trans-unit>
        <trans-unit id="a48181586b5c42a442110e212fd17c18021e9a6c" translate="yes" xml:space="preserve">
          <source>We need to configure the reporter in &lt;code&gt;cypress.json&lt;/code&gt; to skip the HTML report generation and save each individual JSON file in the &lt;code&gt;cypress/results&lt;/code&gt; folder.</source>
          <target state="translated">HTMLレポートの生成をスキップし、個々のJSONファイルを &lt;code&gt;cypress/results&lt;/code&gt; フォルダーに保存するには、 &lt;code&gt;cypress.json&lt;/code&gt; でレポーターを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="2158ad4e19d8cfaf4dc209882204d3908857639d" translate="yes" xml:space="preserve">
          <source>We need to install additional dependencies including Mocha itself.</source>
          <target state="translated">Mocha自体を含めて、追加の依存関係をインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="b6dc33152134938c5593acca3e0cd5f5ce529379" translate="yes" xml:space="preserve">
          <source>We need to install several dependencies.</source>
          <target state="translated">いくつかの依存関係をインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="f13cb6a79134631d901632b203dcd267bd002050" translate="yes" xml:space="preserve">
          <source>We no longer abort XHR request during the page&amp;rsquo;s &lt;code&gt;unload&lt;/code&gt; event and allow the browser to handle natively calling abort. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2968&quot;&gt;#2968&lt;/a&gt;.</source>
          <target state="translated">ページの &lt;code&gt;unload&lt;/code&gt; イベント中にXHRリクエストを中止せず、ブラウザーがネイティブに中止を処理できるようにしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2968&quot;&gt;＃2968を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="220a30bad1704fe1dd2c2348db8d4fbaf5b395da" translate="yes" xml:space="preserve">
          <source>We no longer artificially restrict the environment &lt;code&gt;cypress ci&lt;/code&gt; can run in. It can now run &lt;em&gt;anywhere&lt;/em&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/296&quot;&gt;#296&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress ci&lt;/code&gt; が実行できる環境を人為的に制限することはもうありません。今では&lt;em&gt;どこでも&lt;/em&gt;実行でき&lt;em&gt;ます&lt;/em&gt;。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/296&quot;&gt;＃296を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="dc9ab0af8aa29b6edea06b1164b7dd5fe7e2e3b2" translate="yes" xml:space="preserve">
          <source>We no longer delay proxied responses with no body with status codes 1xx, 204, 304. This fixes a regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; where responses with these status codes were delayed when using a proxy. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4298&quot;&gt;#4298&lt;/a&gt;.</source>
          <target state="translated">ステータスコード1xx、204、304のボディのないプロキシ応答を遅延させなくなりました。これにより、プロキシを使用するときにこれらのステータスコードの応答が遅延する&lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt;で導入されたリグレッションが修正されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4298&quot;&gt;＃4298を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="5252f677a87c59dd88965da0225a3c183efe4945" translate="yes" xml:space="preserve">
          <source>We no longer format fixtures in any capacity. This fixes a bug with improperly formatting fixtures in Windows. You should handle formatting fixtures yourself. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/884&quot;&gt;#884&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/902&quot;&gt;#902&lt;/a&gt;.</source>
          <target state="translated">フィクスチャをフォーマットすることはできなくなりました。これにより、Windowsのフィクスチャが正しくフォーマットされないバグが修正されます。書式フィクスチャは自分で処理する必要があります。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/884&quot;&gt;＃884&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/902&quot;&gt;＃902を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="d2e78bce994a98e1a5aa7d043260ed2ed684fccd" translate="yes" xml:space="preserve">
          <source>We no longer log the &lt;code&gt;skipping install&lt;/code&gt; message if the Cypress binary is already installed locally. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1985&quot;&gt;#1985&lt;/a&gt;.</source>
          <target state="translated">Cypressバイナリがすでにローカルにインストールされている場合、 &lt;code&gt;skipping install&lt;/code&gt; のスキップメッセージをログに記録しなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1985&quot;&gt;＃1985を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="247f4263508ccc9430e99a19e25004911d777c83" translate="yes" xml:space="preserve">
          <source>We no longer package non-Windows FFmpeg builds with Windows builds, resulting in a 35-40% reduction in zipped size and a 36-43% reduction in unzipped size of download. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3888&quot;&gt;#3888&lt;/a&gt;.</source>
          <target state="translated">Windows以外のFFmpegビルドとWindowsビルドをパッケージ化しなくなったため、zip圧縮サイズが35〜40％削減され、unzip圧縮されたダウンロードサイズが36〜43％削減されました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3888&quot;&gt;＃3888&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9ef45c205e9496a39fe16022cb42a9afaa0ae575" translate="yes" xml:space="preserve">
          <source>We no longer send Sinon to the remote application under test. In other words, you&amp;rsquo;ll no longer see &lt;code&gt;sinon.js&lt;/code&gt; being sent as a network request.</source>
          <target state="translated">テスト中のリモートアプリケーションにSinonを送信しなくなりました。つまり、 &lt;code&gt;sinon.js&lt;/code&gt; がネットワークリクエストとして送信されていることを確認できなくなります。</target>
        </trans-unit>
        <trans-unit id="31924376ed2953fb494092017222991227e54f50" translate="yes" xml:space="preserve">
          <source>We no longer trash the wrong folder on OSX in-app updates (when a project is open). Sorry about this! Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/260&quot;&gt;#260&lt;/a&gt;.</source>
          <target state="translated">OSXアプリ内アップデート（プロジェクトが開いているとき）で間違ったフォルダーをゴミ箱に移動しなくなりました。これにつきましては申し訳ございません！&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/260&quot;&gt;＃260を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="68d28bc45b17f7ec9b9cd32e39ab664d25082392" translate="yes" xml:space="preserve">
          <source>We no longer watch the &lt;code&gt;supportFile&lt;/code&gt; while running &lt;code&gt;cypress run&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/329&quot;&gt;#329&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; の実行中に &lt;code&gt;supportFile&lt;/code&gt; を監視しなくなりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/329&quot;&gt;＃329を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="2466b620bec78e74051fd2af5af7aba67787cd4b" translate="yes" xml:space="preserve">
          <source>We no longer write the chrome extension within &lt;code&gt;node_modules&lt;/code&gt;, and instead write this to the proper OS specific &lt;code&gt;appData&lt;/code&gt; folder. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/245&quot;&gt;#245&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/290&quot;&gt;#290&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;node_modules&lt;/code&gt; 内にchrome拡張機能を書き込むのではなく、これを適切なOS固有の &lt;code&gt;appData&lt;/code&gt; フォルダーに書き込みます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/245&quot;&gt;＃245&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/290&quot;&gt;＃290を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="0512ed3616a8ad1be3272d033093eb0512a96521" translate="yes" xml:space="preserve">
          <source>We now append &lt;code&gt;(failed)&lt;/code&gt; to the screenshot filename of screenshots taken automatically during test failure. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1923&quot;&gt;#1923&lt;/a&gt;.</source>
          <target state="translated">テスト失敗時に自動的に取得されたスクリーンショットのスクリーンショットファイル名に &lt;code&gt;(failed)&lt;/code&gt; を追加します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1923&quot;&gt;＃1923を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="909ad3907791c3dc279210009a3dc650d29ae0ee" translate="yes" xml:space="preserve">
          <source>We now automatically drop frames that the CPU cannot keep up with while video recording during &lt;code&gt;cypress run&lt;/code&gt;. Previously we would buffer all frames in memory and it was possible to exhaust all memory due to the way that streaming backpressure works. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/302&quot;&gt;#302&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; 中のビデオ録画中にCPUが追いつけないフレームを自動的にドロップするようになりました。以前は、メモリ内のすべてのフレームをバッファリングしていましたが、ストリーミングバックプレッシャが機能する方法が原因で、すべてのメモリを使い果たすことができました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/302&quot;&gt;＃302を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="2595d47a8bf95dc08c4575e989ba8f382e66da0c" translate="yes" xml:space="preserve">
          <source>We now better support capturing environment variables within Azure DevOps. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3657&quot;&gt;#3657&lt;/a&gt;.</source>
          <target state="translated">Azure DevOps内の環境変数のキャプチャをより適切にサポートするようになりました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3657&quot;&gt;＃3657&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c1f2227831c2bddb34a6fdad244b387cc3eef724" translate="yes" xml:space="preserve">
          <source>We now capture &lt;code&gt;cross origin&lt;/code&gt; errors correctly instead of these showing as &lt;code&gt;Uncaught DOMExceptions&lt;/code&gt; in the console. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/261&quot;&gt;#261&lt;/a&gt;.</source>
          <target state="translated">コンソールで &lt;code&gt;Uncaught DOMExceptions&lt;/code&gt; として表示される代わりに、 &lt;code&gt;cross origin&lt;/code&gt; エラーを正しくキャプチャできるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/261&quot;&gt;＃261を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="15430701d67880d7d5e9f7280f4c96e012e3ed4a" translate="yes" xml:space="preserve">
          <source>We now capture environment variables set from Concourse CI when recording tests to the Dashboard. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4376&quot;&gt;#4376&lt;/a&gt;.</source>
          <target state="translated">テストをダッシュ​​ボードに記録するときに、Concourse CIから設定された環境変数をキャプチャします。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4376&quot;&gt;＃4376を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="c31551c6362d9ec93b6cee864535192eba9d2280" translate="yes" xml:space="preserve">
          <source>We now capture synchronous errors from XHR &lt;code&gt;onreadystatechange&lt;/code&gt; handlers.</source>
          <target state="translated">XHR &lt;code&gt;onreadystatechange&lt;/code&gt; ハンドラーからの同期エラーをキャプチャします。</target>
        </trans-unit>
        <trans-unit id="94e2fb86ad0a5459835f2d5c98d731be44cd3594" translate="yes" xml:space="preserve">
          <source>We now collect &amp;ldquo;global&amp;rdquo; errors that may prevent any tests from running. We will be displaying these in our future CI platform.</source>
          <target state="translated">現在、テストの実行を妨げる可能性のある「グローバル」エラーを収集しています。これらは、今後のCIプラットフォームで表示されます。</target>
        </trans-unit>
        <trans-unit id="9afa82567e5fc7ba18b6e1197688be041912b75d" translate="yes" xml:space="preserve">
          <source>We now collect Semaphore CI params and provide URL&amp;rsquo;s to click into the builds from the Dashboard. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1785&quot;&gt;#1785&lt;/a&gt;.</source>
          <target state="translated">セマフォCIパラメータを収集し、ダッシュボードからビルドにクリックするためのURLを提供します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1785&quot;&gt;＃1785を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="745d6c6712805976bcd284a41de496a7fddf8841" translate="yes" xml:space="preserve">
          <source>We now correctly handle form submission when using &lt;code&gt;.type('{enter}')&lt;/code&gt; on a form containing a button of type &lt;code&gt;reset&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3909&quot;&gt;#3909&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;reset&lt;/code&gt; タイプのボタンを含むフォームで &lt;code&gt;.type('{enter}')&lt;/code&gt; を使用する場合、フォーム送信を正しく処理するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3909&quot;&gt;＃3909を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="55dced6040e527b78a0e674c792c2e26744631b3" translate="yes" xml:space="preserve">
          <source>We now correctly store local data in each operating system&amp;rsquo;s correct &lt;code&gt;Application Data&lt;/code&gt; area. This will be more resilient to upgrades in the future.</source>
          <target state="translated">ローカルデータを各オペレーティングシステムの適切な &lt;code&gt;Application Data&lt;/code&gt; 領域に正しく保存するようになりました。これは、将来のアップグレードに対してより回復力があります。</target>
        </trans-unit>
        <trans-unit id="6c80f472b3b201485dfdfbb4b7da2b207d8033ec" translate="yes" xml:space="preserve">
          <source>We now display a keyboard &amp;lsquo;modifiers&amp;rsquo; column when clicking on a &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; in the Command Log.</source>
          <target state="translated">コマンドログで&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; を&lt;/a&gt;クリックすると、キーボードの「修飾子」列が表示されるようになりました。</target>
        </trans-unit>
        <trans-unit id="52bb1591a99d2989b80e6d4102aa299763941b14" translate="yes" xml:space="preserve">
          <source>We now display a warning in the console when returning a promise from a test and also invoking a Promise or cy commands. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/464&quot;&gt;#464&lt;/a&gt;.</source>
          <target state="translated">テストからpromiseを返し、Promiseまたはcyコマンドを呼び出すと、コンソールに警告が表示されるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/464&quot;&gt;＃464を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="beaa530fd5362d5b1ddfe98d4db1e1f3fd9e6e75" translate="yes" xml:space="preserve">
          <source>We now display a warning when passing an argument to &lt;code&gt;--spec&lt;/code&gt; that is not surrounded by quotes &lt;code&gt;&quot;&quot;&lt;/code&gt; recommending that the argument instead be surrounded by quotes. In some cases, not providing quotes can cause the arguments to be read in a way that is likely not its intended use. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3318&quot;&gt;#3318&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2298&quot;&gt;#2298&lt;/a&gt;.</source>
          <target state="translated">引数を渡すときに私たちは今、警告を表示 &lt;code&gt;--spec&lt;/code&gt; 引用符で囲まれていないこと &lt;code&gt;&quot;&quot;&lt;/code&gt; 引数ではなく、引用符で囲まれていることを推奨します。場合によっては、引用符を提供しないと、引数が意図した用途とは異なる方法で読み取られる可能性があります。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3318&quot;&gt;＃3318&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2298&quot;&gt;＃2298&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e4bdddc93b9a5d95d9ac7141d1651411a8d7e571" translate="yes" xml:space="preserve">
          <source>We now display better error messages in the CLI when runs exceed billing limits. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1689&quot;&gt;#1689&lt;/a&gt;.</source>
          <target state="translated">実行が請求の制限を超えたときに、CLIでより適切なエラーメッセージを表示するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1689&quot;&gt;＃1689を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f20320465c19f803dd975a5680bc753dc697d80e" translate="yes" xml:space="preserve">
          <source>We now ensure we are shipping with production versions of dependencies such as &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;mobx&lt;/code&gt;, etc. This should help to prevent conflicts with Developer Tools extensions and increase performance by reducing memory, heap allocation, and overall JS bundle size. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4844&quot;&gt;#4844&lt;/a&gt;.</source>
          <target state="translated">これで、 &lt;code&gt;react&lt;/code&gt; 、 &lt;code&gt;mobx&lt;/code&gt; などの依存関係の製品バージョンが出荷されていることを確認します。これにより、デベロッパーツール拡張機能との競合を防ぎ、メモリ、ヒープ割り当て、およびJSバンドルサイズ全体を削減することでパフォーマンスを向上させることができます。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4844&quot;&gt;＃4844&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0df2ff6220a4767ab404e981b8efb93e2db3a05b" translate="yes" xml:space="preserve">
          <source>We now exit correctly (with status of 1) in the case of headless renderer crashes. Additionally we capture these errors properly, explain what happened, and link to external error document to suggest fixes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/270&quot;&gt;#270&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/348&quot;&gt;#348&lt;/a&gt;.</source>
          <target state="translated">ヘッドレスレンダラーがクラッシュした場合に、正常に終了します（ステータスは1）。さらに、これらのエラーを適切にキャプチャし、何が起こったかを説明し、修正を提案するために外部エラードキュメントにリンクします。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/270&quot;&gt;＃270&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/348&quot;&gt;＃348を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f03b9a2db3189136b327fcd89142f64b82bf7ce6" translate="yes" xml:space="preserve">
          <source>We now expose a downloadable binary for each commit made into the &lt;a href=&quot;https://github.com/cypress-io/cypress/commits/develop&quot;&gt;develop branch&lt;/a&gt; of the &lt;a href=&quot;https://github.com/cypress-io/cypress&quot;&gt;cypress&lt;/a&gt; repository so that pre-released versions can be installed. See &lt;a href=&quot;https://github.com/cypress-io/cypress/commit/52ca8ed8399c5ef467efbee7a2d00fe0863e7f36#commitcomment-34237047&quot;&gt;this commit&lt;/a&gt; for an example. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4525&quot;&gt;#4525&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress&quot;&gt;サイプレス&lt;/a&gt;リポジトリの&lt;a href=&quot;https://github.com/cypress-io/cypress/commits/develop&quot;&gt;開発ブランチ&lt;/a&gt;に行われた各コミットのダウンロード可能なバイナリを公開し、プレリリースバージョンをインストールできるようにしました。例については、&lt;a href=&quot;https://github.com/cypress-io/cypress/commit/52ca8ed8399c5ef467efbee7a2d00fe0863e7f36#commitcomment-34237047&quot;&gt;このコミット&lt;/a&gt;を参照してください。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4525&quot;&gt;＃4525&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8b9d8832cc4b08b7c243d81fab5b88195045cd7" translate="yes" xml:space="preserve">
          <source>We now expose all jQuery methods and values onto &lt;a href=&quot;../../api/utilities/%24&quot;&gt;&lt;code&gt;Cypress.$&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2830&quot;&gt;#2830&lt;/a&gt;.</source>
          <target state="translated">すべてのjQueryメソッドと値を&lt;a href=&quot;../../api/utilities/%24&quot;&gt; &lt;code&gt;Cypress.$&lt;/code&gt; &lt;/a&gt;公開します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2830&quot;&gt;＃2830を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="1aa1252ac4312a7d6bf026e35791c3466f7f25fd" translate="yes" xml:space="preserve">
          <source>We now get the absolute paths of styles to use when displaying snapshots. This will fix situations where some stylesheets were improperly referenced during the snapshot, so did not display styles correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/525&quot;&gt;#525&lt;/a&gt;.</source>
          <target state="translated">スナップショットを表示するときに使用するスタイルの絶対パスを取得します。これにより、一部のスタイルシートがスナップショット中に不適切に参照され、スタイルが正しく表示されなかった状況が修正されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/525&quot;&gt;＃525を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="3e1f5a1f6e210ebd67a9a8c953b38b7b950d7d72" translate="yes" xml:space="preserve">
          <source>We now handle HTTP request errors much better. Previously if your web server sent us back a &lt;code&gt;4xx&lt;/code&gt; or &lt;code&gt;5xx&lt;/code&gt; response we would automatically send back a &lt;code&gt;500&lt;/code&gt;. Now we transparently pass these through.</source>
          <target state="translated">HTTPリクエストエラーをより適切に処理できるようになりました。以前は、Webサーバーから &lt;code&gt;4xx&lt;/code&gt; または &lt;code&gt;5xx&lt;/code&gt; の応答が返された場合、自動的に &lt;code&gt;500&lt;/code&gt; が返されていました。これらを透過的に通過させます。</target>
        </trans-unit>
        <trans-unit id="d5b09051bb1c8e5931c2a9e72bf40d61a94961a0" translate="yes" xml:space="preserve">
          <source>We now handle Xvfb exiting with a non zero status code and display that error to you. This should help with situations where Xvfb is misconfigured on the system. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1113&quot;&gt;#1113&lt;/a&gt;.</source>
          <target state="translated">Xvfbの終了をゼロ以外のステータスコードで処理し、そのエラーを表示します。これは、システムでXvfbが正しく構成されていない状況で役立ちます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1113&quot;&gt;＃1113を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="bae3ff88b711baabf35fd1efbbee34605ac85d66" translate="yes" xml:space="preserve">
          <source>We now have full blown subdomain support. This means you can now navigate to a subdomain either directly via a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; or by navigating in your application naturally (such as clicking an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">これで、完全なサブドメインがサポートされました。これは、&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;を介して直接、または自然にアプリケーション内を移動することによって（ &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; をクリックするなど）、サブドメインに移動できるようになったことを意味します。</target>
        </trans-unit>
        <trans-unit id="9be58d8a72acc861d33f9e1342e5112168b5ac9d" translate="yes" xml:space="preserve">
          <source>We now ignore watching &lt;code&gt;node_modules&lt;/code&gt;, &lt;code&gt;bower_components&lt;/code&gt; and a few other folders to reduce the number of watched files. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/437&quot;&gt;#437&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;node_modules&lt;/code&gt; 、 &lt;code&gt;bower_components&lt;/code&gt; および他のいくつかのフォルダーの監視を無視して、監視されるファイルの数を減らしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/437&quot;&gt;＃437を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="931fe37db6ab67543c11847d1f0974c77ab4fe33" translate="yes" xml:space="preserve">
          <source>We now indicate which XHRs match which alias in the Command Log on &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;.wait()&lt;/code&gt;&lt;/a&gt; when they match an alias multiple times. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/477&quot;&gt;#477&lt;/a&gt;.</source>
          <target state="translated">エイリアスに複数回一致する場合、&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;.wait()&lt;/code&gt; の&lt;/a&gt;コマンドログでどのXHRがどのエイリアスに一致するかを示します。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/477&quot;&gt;＃477&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="01a05daf7f35f99da133149c992d630916c0e37e" translate="yes" xml:space="preserve">
          <source>We now launch Chrome with &lt;code&gt;--no-sandbox&lt;/code&gt; and &lt;code&gt;--disable-gpu&lt;/code&gt; options in Linux. We will soon release a new plugin event that enables you to modify the browser arguments we use by default. This &lt;em&gt;shouldn&amp;rsquo;t&lt;/em&gt; cause issues with existing Linux users, and instead it should fix many CI setups that were using our Docker containers or your own home grown installed Chrome setup. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1021&quot;&gt;#1021&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1020&quot;&gt;#1020&lt;/a&gt;.</source>
          <target state="translated">Linuxでは、 &lt;code&gt;--disable-gpu&lt;/code&gt; &lt;code&gt;--no-sandbox&lt;/code&gt; および--disable-gpuオプションを使用してChromeを起動します。デフォルトで使用するブラウザ引数を変更できる新しいプラグインイベントを間もなくリリースします。これにより既存のLinuxユーザーに問題が発生すること&lt;em&gt;はありません。&lt;/em&gt;代わりに、Dockerコンテナーを使用していた多くのCIセットアップまたは独自にインストールしたChromeセットアップを修正する必要があります。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1021&quot;&gt;＃1021&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1020&quot;&gt;＃1020を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="da8b1100b618ab74755497f7ad21eb778aae523f" translate="yes" xml:space="preserve">
          <source>We now launch Cypress tests directly to the &lt;code&gt;baseUrl&lt;/code&gt; to avoid an initial page refresh when encountering the first &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; command. This should help tests run faster. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/382&quot;&gt;#382&lt;/a&gt;.</source>
          <target state="translated">サイプレステストを &lt;code&gt;baseUrl&lt;/code&gt; に直接起動して、最初の&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;コマンドに遭遇したときの最初のページの更新を回避します。これにより、テストの実行が速くなります。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/382&quot;&gt;＃382を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="3f0c7d673e0890ef27773ef2a09737d4a8cc2d85" translate="yes" xml:space="preserve">
          <source>We now list all of the recorded runs directly in the Test Runner under a new &lt;code&gt;Runs&lt;/code&gt; tab. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/236&quot;&gt;#236&lt;/a&gt;.</source>
          <target state="translated">これで、記録されたすべての実行が、テストランナーの新しい[ &lt;code&gt;Runs&lt;/code&gt; ]タブに直接一覧表示されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/236&quot;&gt;＃236を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="c22a3d7eb28937f14b917dc31acc566043704660" translate="yes" xml:space="preserve">
          <source>We now no longer abort XHR&amp;rsquo;s which have their &lt;code&gt;.abort()&lt;/code&gt; method called but are already complete. This fixes an edge case where complete XHR&amp;rsquo;s were having their &lt;code&gt;disposer&lt;/code&gt; function called in frameworks like &lt;code&gt;rxJS&lt;/code&gt; which lead to Cypress accidentally re-aborting the XHR&amp;rsquo;s after they were complete. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/761&quot;&gt;#761&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.abort()&lt;/code&gt; メソッドが呼び出されたXHRを中止しなくなりましたが、すでに完了しています。これにより、 &lt;code&gt;rxJS&lt;/code&gt; などのフレームワークで完全なXHRの &lt;code&gt;disposer&lt;/code&gt; 関数が呼び出されていたため、サイプレスがXHRを完了した後に誤って再中止する原因となっていました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/761&quot;&gt;＃761を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ddecfa1ab26fb1cae2f28fea8e9e78ebdff2ce61" translate="yes" xml:space="preserve">
          <source>We now no longer remove spies, stubs, or routes at the end of the very last test. This enables you to continue to manually use your app and have Cypress continue to instrument it.</source>
          <target state="translated">最後のテストの最後にスパイ、スタブ、ルートを削除しなくなりました。これにより、アプリを手動で使用し続け、Cypress に計測を継続してもらうことができます。</target>
        </trans-unit>
        <trans-unit id="a901f156656858314c7ebea7b1b5d1492ceb8193" translate="yes" xml:space="preserve">
          <source>We now offer a separate 32bit and 64bit build for Windows. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/716&quot;&gt;#716&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/787&quot;&gt;#787&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2095&quot;&gt;#2095&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/706&quot;&gt;#706&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3706&quot;&gt;#3706&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4016&quot;&gt;#4016&lt;/a&gt;.</source>
          <target state="translated">現在、Windows用に32ビットと64ビットの個別のビルドを提供しています。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/716&quot;&gt;＃716&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/787&quot;&gt;＃787&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2095&quot;&gt;＃2095&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/706&quot;&gt;＃706&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3706&quot;&gt;＃3706&lt;/a&gt;、および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4016&quot;&gt;＃4016&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="596bbb882f6ad7e4fc1f05139ec788d129095c8d" translate="yes" xml:space="preserve">
          <source>We now only mount internal servers on &lt;code&gt;loopback&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3712&quot;&gt;#3712&lt;/a&gt;.</source>
          <target state="translated">現在、 &lt;code&gt;loopback&lt;/code&gt; のみ内部サーバーをマウントしています。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3712&quot;&gt;＃3712&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="395c5ecab83e1b86c5bc1b8a38a7653d6180cec3" translate="yes" xml:space="preserve">
          <source>We now opt into &lt;code&gt;gzip&lt;/code&gt; handling instead of forcing requests to omit it.</source>
          <target state="translated">リクエストを強制的に省略する代わりに、 &lt;code&gt;gzip&lt;/code&gt; 処理を選択します。</target>
        </trans-unit>
        <trans-unit id="455f3ef002534c80bc47d3ee449663a1d424e370" translate="yes" xml:space="preserve">
          <source>We now pass any reporter errors along and provide a stack if a custom reporter you&amp;rsquo;ve provided does not exist. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1192&quot;&gt;#1192&lt;/a&gt;.</source>
          <target state="translated">ここで、レポーターエラーを渡し、指定したカスタムレポーターが存在しない場合はスタックを提供します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1192&quot;&gt;＃1192を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="9d674deab281c11b7ac7ce480a2b5d324cafb18c" translate="yes" xml:space="preserve">
          <source>We now pass the &lt;code&gt;--disable-device-discovery-notifications&lt;/code&gt; flag automatically. This should prevent Chromium browser from automatically trying to communicate with devices in your network, such as printers, while running tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1600&quot;&gt;#1600&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;--disable-device-discovery-notifications&lt;/code&gt; フラグを自動的に渡します。これにより、テストの実行中にChromiumブラウザーがプリンターなどのネットワーク内のデバイスと自動的に通信しようとするのを防ぐことができます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1600&quot;&gt;＃1600を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="54f63a8c8d213085671e47a1e2e3d9a58ebc9805" translate="yes" xml:space="preserve">
          <source>We now pass the Chromium command line switches &lt;code&gt;--use-fake-ui-for-media-stream&lt;/code&gt; and &lt;code&gt;--use-fake-device-for-media-stream&lt;/code&gt; to Chrome by default in order to better support testing webcam functionality. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2704&quot;&gt;#2704&lt;/a&gt;.</source>
          <target state="translated">ウェブカメラ機能のテストをより適切にサポートするために、Chromiumコマンドラインスイッチ &lt;code&gt;--use-fake-ui-for-media-stream&lt;/code&gt; および &lt;code&gt;--use-fake-device-for-media-stream&lt;/code&gt; をデフォルトでChromeに渡します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2704&quot;&gt;＃2704を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="0057b656f304946702d68459936cdbe2aa520fba" translate="yes" xml:space="preserve">
          <source>We now preserve the Test Runner&amp;rsquo;s position and sizing after it&amp;rsquo;s closed + reopened. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/443&quot;&gt;#443&lt;/a&gt;.</source>
          <target state="translated">テストランナーを閉じて再度開いた後、テストランナーの位置とサイズを保持します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/443&quot;&gt;＃443を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="b74c3ac7f6fc13347ea31fa9d4da64503e042a96" translate="yes" xml:space="preserve">
          <source>We now prevent &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; from accidentally snapshotting twice.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;が誤って2回スナップショットを作成するのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="18fdd6fe7065fab5f332ef7da02cd47711960ed4" translate="yes" xml:space="preserve">
          <source>We now print the browser and browser version run in the output during &lt;code&gt;cypress run&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/833&quot;&gt;#833&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; 中に、ブラウザと実行されたブラウザのバージョンを出力に出力します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/833&quot;&gt;＃833&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4401a9d2e06a82681fa1fb77ded3bc95c91f3173" translate="yes" xml:space="preserve">
          <source>We now properly detect the branch name when running Cypress in AppVeyor. Fixed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4234&quot;&gt;#4234&lt;/a&gt;.</source>
          <target state="translated">AppVeyorでサイプレスを実行するときに、ブランチ名を適切に検出するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4234&quot;&gt;＃4234で&lt;/a&gt;修正されました。</target>
        </trans-unit>
        <trans-unit id="33b508a71eb45a01c920a3ea036569268ec0b506" translate="yes" xml:space="preserve">
          <source>We now properly display nested objects and arrays that come from &lt;code&gt;cypress.json&lt;/code&gt; in the Settings tab in the Desktop Application.</source>
          <target state="translated">デスクトップアプリケーションの[設定]タブで、 &lt;code&gt;cypress.json&lt;/code&gt; からのネストされたオブジェクトと配列を適切に表示するようになりました。</target>
        </trans-unit>
        <trans-unit id="df11b1ff156795bf45aef4b16b73c7dcfaaed33a" translate="yes" xml:space="preserve">
          <source>We now properly strip leading paths of files on uncaught errors from Windows OS. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2936&quot;&gt;#2936&lt;/a&gt;.</source>
          <target state="translated">Windows OSからのキャッチされていないエラーのファイルの先頭パスを適切に削除するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2936&quot;&gt;＃2936を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="0438da7cbf731b4f6a00456f61fd27d397dffca1" translate="yes" xml:space="preserve">
          <source>We now properly take the &lt;code&gt;maxAge&lt;/code&gt; cookie flag into account and give it preference over the &lt;code&gt;expires&lt;/code&gt; flag as per the cookie spec.</source>
          <target state="translated">私たちは今、適切に取る &lt;code&gt;maxAge&lt;/code&gt; 口座にクッキーフラグをし、上でそれを優先して &lt;code&gt;expires&lt;/code&gt; クッキー仕様に従ってフラグを。</target>
        </trans-unit>
        <trans-unit id="17516c3129c39e56ff2baa6e8bd51f8c221da4e4" translate="yes" xml:space="preserve">
          <source>We now record videos during a headless run with both &lt;code&gt;cypress ci&lt;/code&gt; and &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/229&quot;&gt;#229&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress ci&lt;/code&gt; と&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt;両方でヘッドレスラン中にビデオを録画するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/229&quot;&gt;＃229を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="41ed5032fbb83ec695ce85a2a269ca2a8fd107d3" translate="yes" xml:space="preserve">
          <source>We now run each spec file in isolation from one another. This &lt;em&gt;shouldn&amp;rsquo;t&lt;/em&gt; technically break anything, but if you have set up your tests in a way that requires the state of a previous spec file, this could potentially break your tests. This will go a long ways towards reducing problems we were seeing with long runs in CI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/431&quot;&gt;#431&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/681&quot;&gt;#681&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1589&quot;&gt;#1589&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1539&quot;&gt;#1539&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1692&quot;&gt;#1692&lt;/a&gt;.</source>
          <target state="translated">ここで、各スペックファイルを互いに分離して実行します。これ&lt;em&gt;は&lt;/em&gt;技術的に&lt;em&gt;は問題ありません&lt;/em&gt;が、以前のスペックファイルの状態を必要とする方法でテストを設定した場合、テストが失敗する可能性があります。これは、CIでの長い実行で見られた問題を減らすのに大いに役立ちます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/431&quot;&gt;＃431&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/681&quot;&gt;＃681&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1589&quot;&gt;＃1589&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1539&quot;&gt;＃1539&lt;/a&gt;、および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1692&quot;&gt;＃1692の&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="8dd45046c8e42bb911d4de37499d9e484000d1e2" translate="yes" xml:space="preserve">
          <source>We now set the &lt;code&gt;form&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;Content-Type&lt;/code&gt; header equals &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; and &lt;code&gt;json&lt;/code&gt; is not already set by a user. This fixes a situation where Cypress would try to parse the &lt;code&gt;body&lt;/code&gt; as a string, resulting in a confusing error message. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2923&quot;&gt;#2923&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Content-Type&lt;/code&gt; ヘッダーが &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; に等しく、 &lt;code&gt;json&lt;/code&gt; がまだユーザーによって設定されていない場合は、 &lt;code&gt;form&lt;/code&gt; オプションを &lt;code&gt;true&lt;/code&gt; に設定します。これにより、サイプレスが &lt;code&gt;body&lt;/code&gt; を文字列として解析しようとする状況が修正され、混乱するエラーメッセージが表示されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2923&quot;&gt;＃2923を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="3b82ebe9037c61459331f625916b8be2cb58c54c" translate="yes" xml:space="preserve">
          <source>We now show the entire scaffolded tree of files when adding a brand new project. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/401&quot;&gt;#401&lt;/a&gt;.</source>
          <target state="translated">新しいプロジェクトを追加するときに、ファイルの足場ツリー全体を表示します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/401&quot;&gt;＃401を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="7bbaa609e0783e1680e9c2cc8ead1b4d4f8d53e5" translate="yes" xml:space="preserve">
          <source>We now support ES2015+, modules, and JSX in all spec files. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/246&quot;&gt;#246&lt;/a&gt;.</source>
          <target state="translated">すべてのスペックファイルでES2015 +、モジュール、およびJSXをサポートするようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/246&quot;&gt;＃246を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="6a5e9744a53e3852514902bca4063a7b7683541f" translate="yes" xml:space="preserve">
          <source>We now support per-project &lt;code&gt;state.json&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/512&quot;&gt;#512&lt;/a&gt;.</source>
          <target state="translated">プロジェクト &lt;code&gt;state.json&lt;/code&gt; サポートされるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/512&quot;&gt;＃512を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="a50670cad4240950c833a80d34504d6a2b95db11" translate="yes" xml:space="preserve">
          <source>We now throw a descriptive error if an alias using &lt;a href=&quot;../../api/commands/as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; was defined starting with the &lt;code&gt;@&lt;/code&gt; character. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1643&quot;&gt;#1643&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt;を使用するエイリアスが &lt;code&gt;@&lt;/code&gt; 文字で始まるように定義されている場合、説明エラーをスローするようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1643&quot;&gt;＃1643&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cfb599695a5cc686c7e8e601441f8397de65f3a5" translate="yes" xml:space="preserve">
          <source>We now throw when a value other than &lt;code&gt;cy&lt;/code&gt; is returned from a test or command function. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/463&quot;&gt;#463&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cy&lt;/code&gt; 以外の値がテストまたはコマンド関数から返されたときにスローするようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/463&quot;&gt;＃463を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="5405ca99211029a3def3f2a7f30ff6fe8a65e5b2" translate="yes" xml:space="preserve">
          <source>We now truncate filenames for screenshots to not exceed 255 characters in length. Previously there were cases where the screenshot filename would exceed 255 characters and error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2403&quot;&gt;#2403&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2665&quot;&gt;#2665&lt;/a&gt;.</source>
          <target state="translated">スクリーンショットのファイル名は、255文字を超えないように切り捨てました。以前は、スクリーンショットのファイル名が255文字を超えてエラーになる場合がありました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2403&quot;&gt;＃2403&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2665&quot;&gt;＃2665を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="6349a0aee27c61c03333d5571cf620b3d8a119d2" translate="yes" xml:space="preserve">
          <source>We now validate all of the configuration options set in &lt;code&gt;cypress.json&lt;/code&gt; to ensure it has valid types. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/399&quot;&gt;#399&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress.json&lt;/code&gt; 、cypress.jsonで設定されたすべての構成オプションを検証して、有効なタイプがあることを確認します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/399&quot;&gt;＃399を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="a23bc31a5e0dbaa78a1ea9de08ab436ebc9ae1b4" translate="yes" xml:space="preserve">
          <source>We now validate that &lt;code&gt;baseUrl&lt;/code&gt; is accessible &lt;strong&gt;prior&lt;/strong&gt; to running tests. This prevents a common situation where you may forget to boot your web server and have instantly failing tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/383&quot;&gt;#383&lt;/a&gt;.</source>
          <target state="translated">テストを実行する&lt;strong&gt;前&lt;/strong&gt;に、 &lt;code&gt;baseUrl&lt;/code&gt; にアクセスできることを確認します。これにより、Webサーバーの起動を忘れてすぐにテストが失敗するという一般的な状況を回避できます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/383&quot;&gt;＃383を&lt;/a&gt;修正。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bdc7f96e45ce7f599c81901edca4b26c35bb7dbf" translate="yes" xml:space="preserve">
          <source>We output a much more complete test results object when using cypress as a module. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1248&quot;&gt;#1248&lt;/a&gt;.</source>
          <target state="translated">サイプレスをモジュールとして使用すると、より完全なテスト結果オブジェクトが出力されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1248&quot;&gt;＃1248を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="7aeaeba756d4eebc923f7de3e03479044ceca4fc" translate="yes" xml:space="preserve">
          <source>We print a warning when using an older CLI tool version. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/424&quot;&gt;#424&lt;/a&gt;.</source>
          <target state="translated">古いCLIツールバージョンを使用すると警告が表示されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/424&quot;&gt;＃424を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="951b99396bbeaf90c46480a729dc94f26ec68b1e" translate="yes" xml:space="preserve">
          <source>We recently gave a &amp;ldquo;Best Practices&amp;rdquo; conference talk at AssertJS (February 2018). This video demonstrates how to approach breaking down your application and organizing your tests.</source>
          <target state="translated">最近、AssertJS（2018年2月）で「ベストプラクティス」会議講演を行いました。このビデオでは、アプリケーションを分解してテストを整理する方法について説明します。</target>
        </trans-unit>
        <trans-unit id="8871cd4bb04735a17582e6a2d4edb5517c8d6e98" translate="yes" xml:space="preserve">
          <source>We recommend &lt;strong&gt;not exporting&lt;/strong&gt; the &lt;code&gt;CYPRESS_RUN_BINARY&lt;/code&gt; environment variable, since it will affect every cypress module installed on your file system.</source>
          <target state="translated">ファイルシステムにインストールされているすべてのサイプレスモジュールに影響&lt;strong&gt;する&lt;/strong&gt;ため、 &lt;code&gt;CYPRESS_RUN_BINARY&lt;/code&gt; 環境変数を&lt;strong&gt;エクスポート&lt;/strong&gt;し&lt;strong&gt;ないこと&lt;/strong&gt;をお勧めします。</target>
        </trans-unit>
        <trans-unit id="f19530314ab8ef3f239bbbf7d29d33eed69d612a" translate="yes" xml:space="preserve">
          <source>We recommend placing &lt;code&gt;debugger&lt;/code&gt; or using the &lt;a href=&quot;../../api/commands/debug&quot;&gt;&lt;code&gt;.debug()&lt;/code&gt;&lt;/a&gt; command directly BEFORE the action.</source>
          <target state="translated">&lt;code&gt;debugger&lt;/code&gt; を配置するか、アクションの&lt;a href=&quot;../../api/commands/debug&quot;&gt; &lt;code&gt;.debug()&lt;/code&gt; &lt;/a&gt;コマンドを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="322f94b413be535a53393d415f3afdecdca5122f" translate="yes" xml:space="preserve">
          <source>We recommend setting a &lt;code&gt;baseUrl&lt;/code&gt; when using &lt;code&gt;cy.visit()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cy.visit()&lt;/code&gt; を使用する場合は、 &lt;code&gt;baseUrl&lt;/code&gt; を設定することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="4e0d48e75d6501f06404dea3902fe81934b1aad1" translate="yes" xml:space="preserve">
          <source>We recommend the following configuration in a &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/tsconfig-json.html&quot;&gt;&lt;code&gt;tsconfig.json&lt;/code&gt;&lt;/a&gt; inside your &lt;a href=&quot;../core-concepts/writing-and-organizing-tests#Folder-Structure&quot;&gt;&lt;code&gt;cypress&lt;/code&gt; folder&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../core-concepts/writing-and-organizing-tests#Folder-Structure&quot;&gt; &lt;code&gt;cypress&lt;/code&gt; &lt;/a&gt;フォルダー内の&lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/tsconfig-json.html&quot;&gt; &lt;code&gt;tsconfig.json&lt;/code&gt; で&lt;/a&gt;次の構成をお勧めします。</target>
        </trans-unit>
        <trans-unit id="46f43bf1335ca8434187dd83f43f232a696ca4e8" translate="yes" xml:space="preserve">
          <source>We recommend users:</source>
          <target state="translated">ユーザーにお勧めします。</target>
        </trans-unit>
        <trans-unit id="169bf057f6e4a7447722d544754d1e0791a17a7a" translate="yes" xml:space="preserve">
          <source>We reduced memory consumption and improved the performance of running tests anytime you&amp;rsquo;re inside of &lt;code&gt;cypress open&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2366&quot;&gt;#2366&lt;/a&gt;. Thanks &lt;a href=&quot;https://github.com/CoryDanielson&quot;&gt;@CoryDanielson&lt;/a&gt;!</source>
          <target state="translated">&lt;code&gt;cypress open&lt;/code&gt; 内部にいるときはいつでも、メモリ消費を削減し、テストを実行するパフォーマンスを改善しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2366&quot;&gt;＃2366を&lt;/a&gt;修正。ありがとう&lt;a href=&quot;https://github.com/CoryDanielson&quot;&gt;@CoryDanielson&lt;/a&gt;！</target>
        </trans-unit>
        <trans-unit id="feb650a0a5ebb27f83d965162c038429ea215c4b" translate="yes" xml:space="preserve">
          <source>We removed an artificial delay that was being set in between commands. This means test commands now run faster.</source>
          <target state="translated">コマンド間に設定されていた人工的な遅延を削除しました。これにより、テストコマンドがより速く実行されるようになりました。</target>
        </trans-unit>
        <trans-unit id="cf79cd3bdcf0a8e5075978089026e6fb0de64369" translate="yes" xml:space="preserve">
          <source>We removed erroneous socket connections when the browser is initially launching. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4776&quot;&gt;#4776&lt;/a&gt;.</source>
          <target state="translated">ブラウザの初回起動時に、誤ったソケット接続を削除しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4776&quot;&gt;＃4776を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="7f102480eeb32e932fedcf2551eee4e856920f47" translate="yes" xml:space="preserve">
          <source>We removed scaffolding any directories on a new project (during &lt;code&gt;cypress run&lt;/code&gt;). Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/295&quot;&gt;#295&lt;/a&gt;.</source>
          <target state="translated">新しいプロジェクトのディレクトリの足場を削除しました（ &lt;code&gt;cypress run&lt;/code&gt; 中）。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/295&quot;&gt;＃295を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="1dfcc2232c0f59cac35637d2192f032b48847e1a" translate="yes" xml:space="preserve">
          <source>We renamed &lt;code&gt;CYPRESS_CI_KEY&lt;/code&gt; TO &lt;code&gt;CYPRESS_RECORD_KEY&lt;/code&gt;. This makes it clearer what this key actually does - and the fact that it can be run anywhere irrespective of CI. We still look for the old named key but will print a warning if we detect it.</source>
          <target state="translated">私たちは、名前を変更 &lt;code&gt;CYPRESS_CI_KEY&lt;/code&gt; TO &lt;code&gt;CYPRESS_RECORD_KEY&lt;/code&gt; を。これにより、このキーの実際の動作が明確になり、CIに関係なくどこでも実行できるという事実がわかります。古い名前のキーを探しますが、検出すると警告を表示します。</target>
        </trans-unit>
        <trans-unit id="629163bf9e34562fe1e64cd2634e33387f9329cb" translate="yes" xml:space="preserve">
          <source>We replaced Sinon&amp;rsquo;s argument stringifier for a much less noisy, more performant, custom version.</source>
          <target state="translated">Sinonの引数文字列指定子を、ノイズの少ない、よりパフォーマンスの高いカスタムバージョンに置き換えました。</target>
        </trans-unit>
        <trans-unit id="af327723adf92076c1cd443ec20fab3eb7d79187" translate="yes" xml:space="preserve">
          <source>We replaced capturing environment variables from SnapCI (which is no longer available) to instead capture ones set from GoCD when recording tests to the Dashboard. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2680&quot;&gt;#2680&lt;/a&gt;.</source>
          <target state="translated">ダッシュボードにテストを記録するときに、GoCIから設定された環境変数をキャプチャするために、SnapCI（現在は使用できません）からの環境変数のキャプチャを置き換えました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2680&quot;&gt;＃2680を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="eef5171e668709ce929cb4f6b45ffe88f8c313cb" translate="yes" xml:space="preserve">
          <source>We rewrote the entire driver (we&amp;rsquo;ve all been there) and converted all 2,500+ tests to be run within Cypress itself.</source>
          <target state="translated">ドライバー全体を書き直し（すべて行ったことはあります）、2,500以上のすべてのテストをサイプレス自体で実行できるように変換しました。</target>
        </trans-unit>
        <trans-unit id="a26bd1d1741a305d506ff89592a1ce8a67063911" translate="yes" xml:space="preserve">
          <source>We see many of our users adding code to an &lt;code&gt;after&lt;/code&gt; or &lt;code&gt;afterEach&lt;/code&gt; hook in order to clean up the state generated by the current test(s).</source>
          <target state="translated">現在のテストで生成された状態をクリーンアップするために、多くのユーザーが &lt;code&gt;after&lt;/code&gt; または &lt;code&gt;afterEach&lt;/code&gt; フックにコードを追加しています。</target>
        </trans-unit>
        <trans-unit id="62b0625e1a0b6d84399351bf7b11f569b545819f" translate="yes" xml:space="preserve">
          <source>We see many of our users creating their own &lt;code&gt;visitApp&lt;/code&gt; command. We commonly see that all you&amp;rsquo;re doing is swapping out base urls for &lt;code&gt;development&lt;/code&gt; vs &lt;code&gt;production&lt;/code&gt; environments.</source>
          <target state="translated">多くのユーザーが独自の &lt;code&gt;visitApp&lt;/code&gt; コマンドを作成しています。私たちは、一般的に、あなたがやっているすべてのためのベースURLをスワップアウトされていることがわかり &lt;code&gt;development&lt;/code&gt; 対 &lt;code&gt;production&lt;/code&gt; 環境。</target>
        </trans-unit>
        <trans-unit id="cc0db9923dca7eee1c49a35dc0e887584fce3010" translate="yes" xml:space="preserve">
          <source>We see new users commonly write code that looks like this:</source>
          <target state="translated">新しいユーザーがよくこんな感じのコードを書いているのを目にします。</target>
        </trans-unit>
        <trans-unit id="7dee30eeadb2d3fd5af65ed44ad750fad9b7a8de" translate="yes" xml:space="preserve">
          <source>We stopped minifying &lt;code&gt;vendor.js&lt;/code&gt; (for real this time). More optimizations to come around this.</source>
          <target state="translated">vendor.jsの &lt;code&gt;vendor.js&lt;/code&gt; を停止しました（今回は実際に）。これを回避するためのさらなる最適化。</target>
        </trans-unit>
        <trans-unit id="f902439f8c422af31ce583a53f1f526eed82dd7a" translate="yes" xml:space="preserve">
          <source>We suggest &lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/packages/driver/src/dom/index.js&quot;&gt;reading through the source code here&lt;/a&gt; to see all of the methods and what they do.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/packages/driver/src/dom/index.js&quot;&gt;ここでソースコードを読み、&lt;/a&gt;すべてのメソッドとその機能を確認することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="75c0c073c3e20040a8d2ba4046614309225b036e" translate="yes" xml:space="preserve">
          <source>We suggest using the excellent npm module:</source>
          <target state="translated">優秀なnpmモジュールを使うことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="c6ba04c886476b645d2f603c2308fc15d49136df" translate="yes" xml:space="preserve">
          <source>We support and display multiple sub spies when using Sinon&amp;rsquo;s &lt;code&gt;.withArgs(...)&lt;/code&gt; function.</source>
          <target state="translated">Sinonの &lt;code&gt;.withArgs(...)&lt;/code&gt; 関数を使用する場合、複数のサブスパイをサポートおよび表示します。</target>
        </trans-unit>
        <trans-unit id="90803f6c14446c07b1ccd7c098c48a930facba67" translate="yes" xml:space="preserve">
          <source>We understand that when Cypress is running in its own profile it can be difficult to tell the difference between your normal browser and Cypress.</source>
          <target state="translated">Cypressが独自のプロファイルで実行されている場合、通常のブラウザとCypressの違いがわかりにくい場合があることを理解しています。</target>
        </trans-unit>
        <trans-unit id="1bf6b30efbc09b2fbf3171d4681c86e80a708aaf" translate="yes" xml:space="preserve">
          <source>We updated and removed some dependencies used for development.</source>
          <target state="translated">開発に使用している依存関係の一部を更新し、削除しました。</target>
        </trans-unit>
        <trans-unit id="5872d71cc2fa094d8342b72806b35a1701a40016" translate="yes" xml:space="preserve">
          <source>We updated how we handle &lt;a href=&quot;configuration#Screenshots&quot;&gt;&lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt;&lt;/a&gt; behavior. We now trash the contents of the &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;screenshotsFolder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;videosFolder&lt;/code&gt;&lt;/a&gt; directories instead of trashing the directories themselves. This helps maintain any file access permissions for the directories. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1943&quot;&gt;#1943&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2600&quot;&gt;#2600&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;configuration#Screenshots&quot;&gt; &lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt; &lt;/a&gt;動作の処理方法を更新しました。ディレクトリ自体を&lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;videosFolder&lt;/code&gt; &lt;/a&gt;代わりに、&lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;screenshotsFolder&lt;/code&gt; &lt;/a&gt;およびvideosFolderディレクトリのコンテンツを破棄します。これにより、ディレクトリのファイルアクセス許可を維持できます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1943&quot;&gt;＃1943&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2600&quot;&gt;＃2600を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="c9812923fdcf5b46e0f9546bdf76e500c7f5336b" translate="yes" xml:space="preserve">
          <source>We updated some of our internal ESLint rules to be more strict and also to help with CoffeeScript to JavaScript conversions. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2688&quot;&gt;#2688&lt;/a&gt;.</source>
          <target state="translated">内部のESLintルールの一部をより厳密に更新し、CoffeeScriptからJavaScriptへの変換を支援します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2688&quot;&gt;＃2688を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f845cb7acd9c4e1260607080a2d1cc42673b3bc4" translate="yes" xml:space="preserve">
          <source>We updated the messaging when there is a failure downloading Cypress to recommend checking your proxy settings. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1662&quot;&gt;#1662&lt;/a&gt;.</source>
          <target state="translated">サイプレスのダウンロードに失敗した場合のメッセージを更新し、プロキシ設定の確認を推奨しました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1662&quot;&gt;＃1662&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="846b53476293204cf56e396373cecb86e57d66a9" translate="yes" xml:space="preserve">
          <source>We upgraded the &lt;code&gt;lodash&lt;/code&gt; dependency to fix a security vulnerability warning. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4699&quot;&gt;#4699&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4730&quot;&gt;#4730&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4743&quot;&gt;#4743&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;lodash&lt;/code&gt; 依存関係をアップグレードして、セキュリティの脆弱性の警告を修正しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4699&quot;&gt;＃4699&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4730&quot;&gt;＃4730&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4743&quot;&gt;＃4743を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="00d87701fe7a2fc5ced27b2334ac4dbfbbd1f2c5" translate="yes" xml:space="preserve">
          <source>We upgraded the &lt;code&gt;mocha-teamcity-reporter&lt;/code&gt; dependency so that it no longer errors in certain situations when trying to access duration on tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4654&quot;&gt;#4654&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;mocha-teamcity-reporter&lt;/code&gt; の依存関係をアップグレードして、特定の状況でテストの期間にアクセスしようとしたときにエラーにならないようにしました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4654&quot;&gt;＃4654を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="59f33fcbc1a06450423de0088ac794c2874e130c" translate="yes" xml:space="preserve">
          <source>We use multiple reporters for every single one of our internal projects.</source>
          <target state="translated">社内プロジェクトの一つ一つに複数のレポーターを使用しています。</target>
        </trans-unit>
        <trans-unit id="15063c65a56ff0cb9c42c2d6053bb5c933c08860" translate="yes" xml:space="preserve">
          <source>We want to help developers build a new generation of modern applications faster, better, and without the stress and anxiety associated with managing tests.</source>
          <target state="translated">私たちは、開発者がテスト管理に伴うストレスや不安を感じずに、より速く、より良い、新世代の最新アプリケーションを構築できるように支援したいと考えています。</target>
        </trans-unit>
        <trans-unit id="c5dcb4dbe745d974706577dc0da2742aef375b27" translate="yes" xml:space="preserve">
          <source>We want to make sure every statement and function in the file &lt;code&gt;add.js&lt;/code&gt; has been executed by our tests at least once. Thus we write a test:</source>
          <target state="translated">ファイル &lt;code&gt;add.js&lt;/code&gt; 内のすべてのステートメントと関数が少なくとも1回はテストによって実行されていることを確認したい。したがって、テストを作成します。</target>
        </trans-unit>
        <trans-unit id="ecb20551a34cf4b2b42a6eec81242fecdb58cec0" translate="yes" xml:space="preserve">
          <source>We want to output a &amp;ldquo;spec&amp;rdquo; report to &lt;code&gt;STDOUT&lt;/code&gt;, while saving Mochawesome JSON reports and then combine them into a single report.</source>
          <target state="translated">「スペック」レポートを &lt;code&gt;STDOUT&lt;/code&gt; に出力すると同時に、Mochawesome JSONレポートを保存して、それらを1つのレポートに結合します。</target>
        </trans-unit>
        <trans-unit id="0f66c9b315ca25fad7a8855e508387db9f07721b" translate="yes" xml:space="preserve">
          <source>We will NOT perform these:</source>
          <target state="translated">これらを行うことはありません。</target>
        </trans-unit>
        <trans-unit id="242ddd018c0bd4b4f2164bb5818168a71e6e1d85" translate="yes" xml:space="preserve">
          <source>We will automatically apply the record key environment variable.</source>
          <target state="translated">レコードキーの環境変数を自動的に適用します。</target>
        </trans-unit>
        <trans-unit id="5b1320b4ce8896887c91e20601f6a0ee5ba14a35" translate="yes" xml:space="preserve">
          <source>We will continue to follow &lt;code&gt;semver&lt;/code&gt; from this point on (and also a bit more rigorously).</source>
          <target state="translated">私たちは、この時点から（そして、もう少し厳密に） &lt;code&gt;semver&lt;/code&gt; をフォローし続けます。</target>
        </trans-unit>
        <trans-unit id="be97901f17a90a358b9309faa6800c45d5345cc6" translate="yes" xml:space="preserve">
          <source>We will learn more about &lt;a href=&quot;#Assertions&quot;&gt;assertions&lt;/a&gt; later in this guide.</source>
          <target state="translated">&lt;a href=&quot;#Assertions&quot;&gt;アサーション&lt;/a&gt;については、このガイドの後半で詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="675fdb86b22cfbcc609350d37ff5d4461e71849f" translate="yes" xml:space="preserve">
          <source>We will reiterate one more time. Had the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; or the &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; been rendered asynchronously, you could not use the pattern above. You would have to involve arbitrary delays which will not work in every situation, will slow down your tests, and will still leave chances that your tests are flaky (and are an all-around anti-pattern).</source>
          <target state="translated">もう一度繰り返します。持っていた &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; または &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; 非同期的にレンダリングされては、あなたは上記のパターンを使用することができませんでした。すべての状況で機能しない任意の遅延を伴う必要があり、テストが遅くなり、テストが不安定になる可能性があります（そして、オールラウンドのアンチパターンです）。</target>
        </trans-unit>
        <trans-unit id="c4a19b12f7666773d3964a4542b00dbd90e4a6ba" translate="yes" xml:space="preserve">
          <source>We would likely just need to update our client side code to check whether this query param is present. Now we know ahead of time whether it will or will not be shown.</source>
          <target state="translated">このクエリパラメータが存在するかどうかを確認するために、クライアント側のコードを更新する必要があるでしょう。これで、表示するかしないかが事前にわかります。</target>
        </trans-unit>
        <trans-unit id="35ac5ce1026173c628c01b6c7010966c03ceb5e2" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;re adding the &lt;code&gt;{ matchBase: true }&lt;/code&gt; option because under the hood Cypress actually uses that option by default.</source>
          <target state="translated">サイプレスは実際にはデフォルトでそのオプションを使用するため、 &lt;code&gt;{ matchBase: true }&lt;/code&gt; オプションを追加しています。</target>
        </trans-unit>
        <trans-unit id="11de46b603824287e9b21c18dc4a3c7f339f3e90" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;re also paving the way to make it easy to write multiple tests against the &amp;ldquo;default&amp;rdquo; state of the form. That way each test stays lean but each can be run independently and pass.</source>
          <target state="translated">また、フォームの「デフォルト」の状態に対して複数のテストを簡単に記述できるようにするための道を開いています。このようにして、各テストは無駄のない状態を保ちますが、それぞれを個別に実行して合格することができます。</target>
        </trans-unit>
        <trans-unit id="c592bc46fce153f657274aa7cbad8b61b2d3c2c6" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;re chaining the &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; onto the &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt;, telling it to type into the subject yielded from the &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; command, which will be a DOM element.</source>
          <target state="translated">私たちは、連鎖している&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;に&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;から得られた主題に入力し、それを言って、&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; DOM要素になりますコマンド。</target>
        </trans-unit>
        <trans-unit id="b0ab1c499fe4a30963f0b107118a6858676f454d" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;re continuing to make process in converting our codebase from CoffeeScript to JavaScript. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2690&quot;&gt;#2690&lt;/a&gt; in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4781&quot;&gt;#4781&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4817&quot;&gt;#4817&lt;/a&gt;.</source>
          <target state="translated">コードベースをCoffeeScriptからJavaScriptに変換するプロセスを継続しています。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2690&quot;&gt;＃2690&lt;/a&gt;で&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4781&quot;&gt;＃4781&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4817&quot;&gt;＃4817&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="de938574cc4bbbe196b1fe5d46801d43b197dfe2" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;re excited to announce &lt;a href=&quot;../dashboard/github-integration&quot;&gt;GitHub integration&lt;/a&gt; for the &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Cypress Dashboard&lt;/a&gt;. You can now get timely and useful test run information within pull-requests via status checks and pull-request comments. Learn all about it on &lt;a href=&quot;https://www.cypress.io/blog/2019/07/29/github-integration-for-the-cypress-dashboard/&quot;&gt;our blog&lt;/a&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/981&quot;&gt;#981&lt;/a&gt;.</source>
          <target state="translated">我々は発表することに興奮している&lt;a href=&quot;../dashboard/github-integration&quot;&gt;のGitHubとの統合&lt;/a&gt;のための&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;サイプレスダッシュボードを&lt;/a&gt;。ステータスチェックとプルリクエストコメントを介して、プルリクエスト内のタイムリーで有用なテスト実行情報を取得できるようになりました。&lt;a href=&quot;https://www.cypress.io/blog/2019/07/29/github-integration-for-the-cypress-dashboard/&quot;&gt;ブログで&lt;/a&gt;そのすべてを学んでください。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/981&quot;&gt;＃981&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="40a3ea492cc95544dc7720242b15bc4e3b9f758d" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve &lt;a href=&quot;https://www.cypress.io/blog/2019/05/22/how-we-improved-network-speed-by-300-in-cypress-3-3-0/&quot;&gt;written a blog post&lt;/a&gt; about the 300% increase in proxy performance delivered in &lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0&lt;/a&gt;.</source>
          <target state="translated">私たちはきた&lt;a href=&quot;https://www.cypress.io/blog/2019/05/22/how-we-improved-network-speed-by-300-in-cypress-3-3-0/&quot;&gt;ブログ記事書か&lt;/a&gt;で配信代行性能が300％の増加について&lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1fbf4ee15d640131897ddbcbf37a3509b864c03c" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve &lt;a href=&quot;https://www.cypress.io/blog/2019/05/22/how-we-improved-network-speed-by-300-in-cypress-3-3-0/&quot;&gt;written a blog post&lt;/a&gt; about the 300% increase in proxy performance delivered in &lt;code&gt;3.3.0&lt;/code&gt;.</source>
          <target state="translated">私たちはきた&lt;a href=&quot;https://www.cypress.io/blog/2019/05/22/how-we-improved-network-speed-by-300-in-cypress-3-3-0/&quot;&gt;ブログ記事書か&lt;/a&gt;で配信代行性能が300％の増加について &lt;code&gt;3.3.0&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="a02d3b00e34a3ad892a8efb83027f47b27fe30fc" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve added &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/tick&quot;&gt;&lt;code&gt;cy.tick()&lt;/code&gt;&lt;/a&gt; which are both asynchronous methods to modify timers in your application under test. We automatically apply clock (even if you invoke it before your first &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;) and will automatically reapply it after page load. &lt;a href=&quot;../../api/commands/tick&quot;&gt;&lt;code&gt;cy.tick()&lt;/code&gt;&lt;/a&gt; will enable you to control the amount of time you want passed in your application. This is great for controlling &lt;em&gt;throttled&lt;/em&gt; or &lt;em&gt;debounced&lt;/em&gt; functions.</source>
          <target state="translated">テスト対象のアプリケーションのタイマーを変更するための非同期メソッドである&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../api/commands/tick&quot;&gt; &lt;code&gt;cy.tick()&lt;/code&gt; &lt;/a&gt;を追加しました。クロックを自動的に適用し（最初の&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; の&lt;/a&gt;前に呼び出した場合でも）、ページの読み込み後に自動的に再適用します。&lt;a href=&quot;../../api/commands/tick&quot;&gt; &lt;code&gt;cy.tick()&lt;/code&gt; &lt;/a&gt;を使用すると、アプリケーションに渡す時間を制御できます。これは、&lt;em&gt;スロットル&lt;/em&gt;機能または&lt;em&gt;デバウンス&lt;/em&gt;機能の制御に最適です。</target>
        </trans-unit>
        <trans-unit id="7179f4efab8cbe5c48ac77893e6aae6f2e9f313c" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve added &lt;code&gt;JUnit&lt;/code&gt; as a valid &lt;a href=&quot;../tooling/reporters&quot;&gt;built-in reporters&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/178&quot;&gt;#178&lt;/a&gt;.</source>
          <target state="translated">有効な&lt;a href=&quot;../tooling/reporters&quot;&gt;組み込みレポーター&lt;/a&gt;として &lt;code&gt;JUnit&lt;/code&gt; を追加しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/178&quot;&gt;＃178を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="6bf94b608ebd0cd312e6df53cb6209c640692005" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve added a new &lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;&lt;code&gt;Cypress.Commands&lt;/code&gt;&lt;/a&gt; interface to handle adding your own custom commands. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/436&quot;&gt;#436&lt;/a&gt;.</source>
          <target state="translated">独自のカスタムコマンドの追加を処理する新しい&lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt; &lt;code&gt;Cypress.Commands&lt;/code&gt; &lt;/a&gt;インターフェイスを追加しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/436&quot;&gt;＃436を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ced5b176bf81c2c9b3d92b717c2db21711e52e37" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve added a new CLI flag: &lt;code&gt;--no-exit&lt;/code&gt; for &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; to keep the browser open after the tests finish running. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1871&quot;&gt;#1871&lt;/a&gt;.</source>
          <target state="translated">新しいCLIフラグを追加しました：&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;--no-exit&lt;/code&gt; は、テストの実行が終了した後もブラウザーを開いたままにします。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1871&quot;&gt;＃1871を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="6219fd0a45fdfa36fce2e04f9883f8b27a5da852" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve added automatic ES2015+, module, JSX, and CJSX support to all test files. This means you can use &lt;code&gt;require&lt;/code&gt;, &lt;code&gt;import&lt;/code&gt;, or &lt;code&gt;export&lt;/code&gt; declarations to load other files. You can also use this to import your own application specific JavaScript modules and write unit tests for them. More of these details are yet to come. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/318&quot;&gt;See this issue&lt;/a&gt;.</source>
          <target state="translated">自動ES2015 +、モジュール、JSX、およびCJSXのサポートをすべてのテストファイルに追加しました。つまり、 &lt;code&gt;require&lt;/code&gt; 、 &lt;code&gt;import&lt;/code&gt; 、または &lt;code&gt;export&lt;/code&gt; 宣言を使用して他のファイルをロードできます。これを使用して、独自のアプリケーション固有のJavaScriptモジュールをインポートし、それらの単体テストを作成することもできます。これらの詳細についてはまだ発表されていません。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/318&quot;&gt;この問題を参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1fb2583c6c18a43801c665f3cb14f1b666c05d51" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve added debug output for Xvfb when &lt;code&gt;DEBUG=cypress:xvfb&lt;/code&gt; is enabled. Helpful when diagnosing problems with Xvfb. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1128&quot;&gt;#1128&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DEBUG=cypress:xvfb&lt;/code&gt; が有効な場合のXvfbのデバッグ出力を追加しました。Xvfbの問題を診断するときに役立ちます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1128&quot;&gt;＃1128を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ce5b09065c764b7bc18657ed42dcd4bedc8c718d" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve added more TypeScript documentation for &lt;code&gt;cy.*&lt;/code&gt; methods. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1117&quot;&gt;#1117&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cy.*&lt;/code&gt; メソッドのTypeScriptドキュメントを追加しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1117&quot;&gt;＃1117を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="04370f256c6de099f5719f00006ca5b52fae3f07" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve added our own special aliasing flavor to &lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/spy&quot;&gt;&lt;code&gt;cy.spy()&lt;/code&gt;&lt;/a&gt;. You can use the &lt;a href=&quot;../../api/commands/as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; command and we will associate spy and stub invocations (the same way we do with XHR aliasing and route matching).</source>
          <target state="translated">独自のエイリアスフレーバーを&lt;a href=&quot;../../api/commands/stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../api/commands/spy&quot;&gt; &lt;code&gt;cy.spy()&lt;/code&gt; に&lt;/a&gt;追加しました。&lt;a href=&quot;../../api/commands/as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt;コマンドを使用すると、spyとスタブの呼び出しが関連付けられます（XHRエイリアスとルートマッチングで行うのと同じ方法）。</target>
        </trans-unit>
        <trans-unit id="e10932eef3306faee3156f903a7d6cc64bcf17c0" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve added parallelization to our own internal tests for the driver and the desktop-gui. We&amp;rsquo;ve been able to reduce the number of concurrent instances our tests use by 4, and shaved about 6 minutes off of each build. Faster with less resources. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2325&quot;&gt;#2325&lt;/a&gt;.</source>
          <target state="translated">ドライバーとデスクトップGUIの内部テストに並列化を追加しました。テストで使用する同時インスタンスの数を4に減らし、各ビルドの約6分の時間を節約できました。より少ないリソースでより速く。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2325&quot;&gt;＃2325を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="a91de4950adef29909d252d426fa54ac4a618ebc" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve also added some recipes showing how to utilize these preprocessors.</source>
          <target state="translated">また、これらのプリプロセッサの使用方法を示すいくつかのレシピを追加しました。</target>
        </trans-unit>
        <trans-unit id="48d2602e5c9ae032c1a8225b386fdfe028141cdf" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve also added the two most common 3rd party reporters for Mocha. These are built into Cypress and you can use them without installing anything.</source>
          <target state="translated">また、モカの最も一般的な2人のサードパーティレポーターを追加しました。これらはサイプレスに組み込まれており、何もインストールしなくても使用できます。</target>
        </trans-unit>
        <trans-unit id="308904bc9e079223363b44c7d7cca7073dbc4830" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve begun automating our dependency update process in order to avoid accidental dependency updates. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2990&quot;&gt;#2990&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3025&quot;&gt;#3025&lt;/a&gt;.</source>
          <target state="translated">偶発的な依存関係の更新を回避するために、依存関係の更新プロセスの自動化を開始しました。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2990&quot;&gt;＃2990&lt;/a&gt;および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3025&quot;&gt;＃3025&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="92cc2c9284b04b9aab7d2d28a8a7d654bd3f8f13" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve bypassed Mocha&amp;rsquo;s default uncaught error handling and replaced it with something much better - actually using the thrown error instances instead of creating a new arbitrary one. This means you&amp;rsquo;ll see better stack traces on uncaught errors. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/193&quot;&gt;#193&lt;/a&gt;.</source>
          <target state="translated">Mochaのデフォルトのキャッチされていないエラー処理をバイパスし、より適切なものに置き換えました。実際には、新しい任意のインスタンスを作成する代わりに、スローされたエラーインスタンスを使用します。つまり、キャッチされなかったエラーのスタックトレースが改善されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/193&quot;&gt;＃193を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="14ce05e0c762970e8b47a7c7b827499c4bf2ee92" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve bypassed Mocha&amp;rsquo;s default uncaught error handling in a &lt;code&gt;hook&lt;/code&gt;. Normally this immediately ends the run. Instead we are skipping the remaining tests in the current suite. This prevents skipping potentially dozens or hundreds of tests downstream that are typically unrelated to the hook failure.</source>
          <target state="translated">Mochaのデフォルトのキャッチされないエラー処理を &lt;code&gt;hook&lt;/code&gt; バイパスしました。通常、これにより実行が直ちに終了します。代わりに、現在のスイートの残りのテストをスキップしています。これにより、フックの失敗とは通常関係のない、数十または数百の潜在的なテストをダウンストリームでスキップすることが防止されます。</target>
        </trans-unit>
        <trans-unit id="0d58a9618dc480d49808efe6b1f6b7812f4caf98" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve changed the &amp;ldquo;Config&amp;rdquo; tab to now be called &amp;ldquo;Settings&amp;rdquo;. We added two new sections to the &amp;ldquo;Settings&amp;rdquo; tab which displays your &lt;code&gt;projectId&lt;/code&gt; and your Record Key. These sections do a much better job explaining what these are and how you use them.</source>
          <target state="translated">「構成」タブを「設定」と呼ぶように変更しました。 &lt;code&gt;projectId&lt;/code&gt; とレコードキーを表示する[設定]タブに2つの新しいセクションを追加しました。これらのセクションは、これらがどのようなものであり、どのように使用するかを説明するはるかに優れた仕事をします。</target>
        </trans-unit>
        <trans-unit id="9ab8fd0df1467113f741d3497cddf62dd8d96529" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve created a new &lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes&quot;&gt;example recipes repo&lt;/a&gt; to show you common testing scenarios including how to use the new module support.</source>
          <target state="translated">新しいモジュールサポートの使用方法など、一般的なテストシナリオを示す新しい&lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes&quot;&gt;レシピリポジトリの例&lt;/a&gt;を作成しました。</target>
        </trans-unit>
        <trans-unit id="9b5f1e6ba3be831732c2f2d097aff90f4defb661" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve created several recipes covering additional scenarios like dealing with CSRF tokens or testing XHR based login forms.</source>
          <target state="translated">CSRFトークンの処理やXHRベースのログインフォームのテストなど、追加のシナリオをカバーするいくつかのレシピを作成しました。</target>
        </trans-unit>
        <trans-unit id="8a1bfcc9478b502278c56d49377ba6385f0151d7" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve created three preprocessors as examples for you to look at. These are fully functioning preprocessors.</source>
          <target state="translated">例として、3つのプリプロセッサを作成しました。これらは完全に機能するプリプロセッサです。</target>
        </trans-unit>
        <trans-unit id="854412b17eb4b1adab9bf830ba04f7455c224170" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve designed our API this way because the DOM is a highly mutable object that constantly goes stale. For Cypress to prevent flake, and know when to proceed, we manage commands in a highly controlled deterministic way.</source>
          <target state="translated">この方法でAPIを設計したのは、DOMが常に変化する非常に変化しやすいオブジェクトだからです。サイプレスがフレークを防ぎ、いつ進むべきかを知るために、高度に制御された決定論的な方法でコマンドを管理します。</target>
        </trans-unit>
        <trans-unit id="c163e54ce1a7344b7fbc36cb3c0d879f5679210c" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve enhanced &lt;code&gt;chai-sinon&lt;/code&gt; by improving the output during passes or failures. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/31&quot;&gt;#31&lt;/a&gt;.</source>
          <target state="translated">パスまたは失敗時の出力を改善することにより、 &lt;code&gt;chai-sinon&lt;/code&gt; を強化しました。修正&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/31&quot;&gt;＃31&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0ed2ae1b5a9886a508301eaef538f40b0df863fb" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve finally tracked down the source of specs &amp;ldquo;hanging&amp;rdquo; and failing to start when running Electron. We finally tracked it down to a bug in Electron itself with setting &lt;code&gt;menu&lt;/code&gt; when using offscreen rendering. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2322&quot;&gt;#2322&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2294&quot;&gt;#2294&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1235&quot;&gt;#1235&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1333&quot;&gt;#1333&lt;/a&gt;.</source>
          <target state="translated">ついに、Electronを実行しているときにスペックの「ハング」と起動の失敗の原因を突き止めました。最後に、オフスクリーンレンダリングを使用する際の設定 &lt;code&gt;menu&lt;/code&gt; で、Electron自体のバグを突き止めました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2322&quot;&gt;＃2322&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2294&quot;&gt;＃2294&lt;/a&gt;、および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1235&quot;&gt;＃1235&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1333&quot;&gt;＃1333を&lt;/a&gt;修正します。</target>
        </trans-unit>
        <trans-unit id="6943253d5744218f1d17f3403ebe87eff3f249e1" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve fixed some underlying issues with &lt;a href=&quot;../../api/commands/go&quot;&gt;&lt;code&gt;cy.go()&lt;/code&gt;&lt;/a&gt; during &lt;code&gt;cypress run&lt;/code&gt;. It always worked fine in real Chrome. Previously there were some situations where it would not navigate forward / back correctly.</source>
          <target state="translated">&lt;code&gt;cypress run&lt;/code&gt; 中の&lt;a href=&quot;../../api/commands/go&quot;&gt; &lt;code&gt;cy.go()&lt;/code&gt; の&lt;/a&gt;いくつかの根本的な問題を修正しました。実際のChromeでは常に問題なく動作しました。以前は、前後に正しくナビゲートできない状況がありました。</target>
        </trans-unit>
        <trans-unit id="9aa21b89968e929f0cfef3619da647a6338c03ce" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve fully documented how to do this here.</source>
          <target state="translated">ここでこれを行う方法を完全に文書化しました。</target>
        </trans-unit>
        <trans-unit id="e7c7888330784d1c83fd4642fe7904692619c2de" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve improved many of the error messages related to recording runs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/423&quot;&gt;#423&lt;/a&gt;.</source>
          <target state="translated">記録の実行に関連するエラーメッセージの多くを改善しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/423&quot;&gt;＃423を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="18a11380909552cf0fded8be91fef1645044c452" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve improved the logic of how snapshots are restored so that it does not break the CSS when there were full page navigations in the test and the CSS changed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/223&quot;&gt;#223&lt;/a&gt;.</source>
          <target state="translated">テストでフルページナビゲーションがあり、CSSが変更された場合に、CSSを壊さないように、スナップショットを復元する方法のロジックを改善しました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/223&quot;&gt;＃223を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="91069e8178a34f013473315d9864bc7232786b9e" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve improved the way we inject content into &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; responses by filtering the underlying HTTP request headers. We no longer inject content into templates which were loaded via XHR. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/257&quot;&gt;#257&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/288&quot;&gt;#288&lt;/a&gt;.</source>
          <target state="translated">基になるHTTPリクエストヘッダーをフィルタリングすることで、 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; レスポンスにコンテンツを挿入する方法を改善しました。XHR経由で読み込まれたテンプレートにコンテンツを挿入することはもうありません。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/257&quot;&gt;＃257&lt;/a&gt;と&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/288&quot;&gt;＃288を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="d1d444e60ea6e6641dce0acebac89c838014f72b" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve loosened up the restrictions surrounding what we consider a typeable element. You can now type into inputs with invalid &lt;code&gt;type&lt;/code&gt; attributes because the browser does still consider them regular &lt;code&gt;text&lt;/code&gt; inputs and allows you to type into them. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/586&quot;&gt;#586&lt;/a&gt;.</source>
          <target state="translated">タイプ可能要素と見なすものに関する制限を緩和しました。ブラウザーは通常の &lt;code&gt;text&lt;/code&gt; 入力を引き続き考慮し、ユーザーが入力できるため、無効な &lt;code&gt;type&lt;/code&gt; 属性の入力を入力できるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/586&quot;&gt;＃586を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="72fbac07f0c38546875abf180a04ce594cc778d4" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve moved our entire codebase into one into a private &amp;ldquo;Monorepo&amp;rdquo;. This is in anticipation for going open source (making the GitHub repo public) and should make it easier for everyone to contribute to our code. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/256&quot;&gt;#256&lt;/a&gt;.</source>
          <target state="translated">コードベース全体を1つのプライベート「モノレポ」に移動しました。これはオープンソースになること（GitHubリポジトリを公開すること）を見込んでおり、誰もが簡単にコードに貢献できるようにするはずです。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/256&quot;&gt;＃256を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="b6545faa03fc496b3d8f1840699d612a20f7b94e" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve programmed our application above so that as soon as the &lt;code&gt;click&lt;/code&gt; event happens, the button is removed from the DOM. When Cypress begins processing the next command (&lt;a href=&quot;../../api/commands/parent&quot;&gt;&lt;code&gt;.parent()&lt;/code&gt;&lt;/a&gt;) in the test above, it detects that the yielded subject (the button) is detached from the DOM and throws the error.</source>
          <target state="translated">上記のアプリケーションをプログラムして、 &lt;code&gt;click&lt;/code&gt; イベントが発生するとすぐにボタンがDOMから削除されるようにしました。上記のテストでサイプレスが次のコマンド（&lt;a href=&quot;../../api/commands/parent&quot;&gt; &lt;code&gt;.parent()&lt;/code&gt; &lt;/a&gt;）の処理を開始すると、生成されたサブジェクト（ボタン）がDOMから切り離されていることを検出し、エラーをスローします。</target>
        </trans-unit>
        <trans-unit id="477975bfbd3f5e7f0784cd633767f95ee7a9347a" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve put together a new example repo called &lt;a href=&quot;https://github.com/cypress-io/examples-kitchen-sink&quot;&gt;The Kitchen Sink&lt;/a&gt;. It demonstrates usage of every single Cypress command.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/cypress-io/examples-kitchen-sink&quot;&gt;The Kitchen Sink&lt;/a&gt;と呼ばれる新しい例のリポジトリをまとめました。サイプレスのすべてのコマンドの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="0847e5e74bb1574a6b9d0171a516ce57c0e22d25" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve redesigned the headless run &lt;code&gt;stdout&lt;/code&gt; to give you more details of the run, the stats after the run, what screenshots were taken, the video that was recorded, compression settings for the video, uploading asset progress, etc.</source>
          <target state="translated">ヘッドレスラン &lt;code&gt;stdout&lt;/code&gt; を再設計して、実行の詳細、実行後の統計、撮影されたスクリーンショット、記録されたビデオ、ビデオの圧縮設定、アセットの進行状況のアップロードなどを提供します。</target>
        </trans-unit>
        <trans-unit id="d69f17156ac99ad99c93a0d5f74d18dad13847ac" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve removed the configuration option &lt;code&gt;testFolder&lt;/code&gt; and renamed it to &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;integrationFolder&lt;/code&gt;&lt;/a&gt; inside of the &lt;code&gt;cypress.json&lt;/code&gt;.</source>
          <target state="translated">私たちは、設定オプションの削除した &lt;code&gt;testFolder&lt;/code&gt; をし、それを名前を変更&lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;integrationFolder&lt;/code&gt; の&lt;/a&gt;内部 &lt;code&gt;cypress.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="809f4d0240a74a3d79999add434ec6f2c006652e" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve removed the requirement of filling out an early adopter form and approval for logging in with GitHub to Cypress.</source>
          <target state="translated">GitHubでサイプレスにログインするための早期導入フォームと承認の記入の要件を削除しました。</target>
        </trans-unit>
        <trans-unit id="061641ba5ef96e268ca906ffb3dbc8185331619b" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve removed the undocumented &lt;code&gt;cy.chain()&lt;/code&gt; command. You should be able to safely remove this from your code. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/456&quot;&gt;#456&lt;/a&gt;.</source>
          <target state="translated">ドキュメントに記載されていない &lt;code&gt;cy.chain()&lt;/code&gt; コマンドを削除しました。これをコードから安全に削除できるはずです。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/456&quot;&gt;＃456を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="10343f3ed083eec79338697bf4087dd61e719f15" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve renamed the &lt;code&gt;cypress&lt;/code&gt; npm package to be &lt;code&gt;cypress-cli&lt;/code&gt;. You&amp;rsquo;ll see a giant deprecation warning until your scripts have been updated to reference &lt;code&gt;cypress-cli&lt;/code&gt;.. You can also uninstall the &lt;code&gt;cypress&lt;/code&gt; npm package.</source>
          <target state="translated">&lt;code&gt;cypress&lt;/code&gt; npmパッケージの名前を &lt;code&gt;cypress-cli&lt;/code&gt; に変更しました。スクリプトが基準に更新されるまで、あなたは巨大な非推奨の警告が表示されます &lt;code&gt;cypress-cli&lt;/code&gt; ..こともできますアンインストール &lt;code&gt;cypress&lt;/code&gt; NPMパッケージ。</target>
        </trans-unit>
        <trans-unit id="dd6290653f12fd1b0594e02c5dc49ecd09f4b9ea" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve ripped out Sinon&amp;rsquo;s argument serialization in favor of our own.</source>
          <target state="translated">シノンの議論のシリアライゼーションを、私たち自身のために取り除いた。</target>
        </trans-unit>
        <trans-unit id="03e290ae381f87fdcd18cd55b289070a84d06e2a" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve seen many users writing this kind of code:</source>
          <target state="translated">多くのユーザーがこの種のコードを書いています。</target>
        </trans-unit>
        <trans-unit id="862a308da404666fcd32453c5ec9439f5d7cb7bb" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve set their default timeout durations based on how long we expect certain actions to take.</source>
          <target state="translated">特定のアクションが実行されると予想される時間に基づいて、デフォルトのタイムアウト期間を設定しました。</target>
        </trans-unit>
        <trans-unit id="7011fd70f6a91e2714f7bc080551c9a07afe1e7e" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve taken care at Cypress to write hundreds of custom error messages that attempt to explain in simple terms what went wrong. In this case Cypress &lt;strong&gt;timed out retrying&lt;/strong&gt; to find the content: &lt;code&gt;hype&lt;/code&gt; within the entire page.</source>
          <target state="translated">サイプレスでは、何が問題だったかを簡単な言葉で説明しようとする数百のカスタムエラーメッセージを書き込むように注意してきました。この場合、サイプレスはコンテンツの検索の&lt;strong&gt;再試行でタイムアウトしました&lt;/strong&gt;：ページ全体での &lt;code&gt;hype&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9eced0ba270e04f1d32752dc00ff07fa967f3e4" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve updated &lt;code&gt;cypress-cli&lt;/code&gt; package to &lt;code&gt;0.12.0&lt;/code&gt;. You will need to download this new CLI version if you want to pass &lt;code&gt;--reporter-options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cypress-cli&lt;/code&gt; パッケージを &lt;code&gt;0.12.0&lt;/code&gt; に更新しました。 &lt;code&gt;--reporter-options&lt;/code&gt; を渡す場合は、この新しいCLIバージョンをダウンロードする必要があります。</target>
        </trans-unit>
        <trans-unit id="eb6043b0e7fdfe89fa606da16c84bd4077481430" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve updated the installation experience to account for running locally and in CI so it doesn&amp;rsquo;t generate a ton of logs in &lt;code&gt;stdout&lt;/code&gt;.</source>
          <target state="translated">ローカルおよびCIでの実行を考慮してインストールエクスペリエンスを更新したため、 &lt;code&gt;stdout&lt;/code&gt; に大量のログが生成されません。</target>
        </trans-unit>
        <trans-unit id="43a7ecdcfc76f52c4f7839260da0a7a466f02a86" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve written several other guides specifically about handling this situation.</source>
          <target state="translated">この状況に対処するためのガイドを他にもいくつか作成しました。</target>
        </trans-unit>
        <trans-unit id="0054cc2a2dfcb4f5aee6829dc2940376e5e80287" translate="yes" xml:space="preserve">
          <source>Web Security</source>
          <target state="translated">ウェブセキュリティ</target>
        </trans-unit>
        <trans-unit id="fa822f1692e928a335c1e710710965dbd939ec95" translate="yes" xml:space="preserve">
          <source>Web Security: Common Workarounds</source>
          <target state="translated">ウェブセキュリティ。共通の回避策</target>
        </trans-unit>
        <trans-unit id="a030328790b9cb1779d75cf7fba73d3951cfbac3" translate="yes" xml:space="preserve">
          <source>Web Server</source>
          <target state="translated">ウェブサーバー</target>
        </trans-unit>
        <trans-unit id="e21fe93b150dc90da16caac8eecd7697af124c0b" translate="yes" xml:space="preserve">
          <source>Web Servers</source>
          <target state="translated">ウェブサーバー</target>
        </trans-unit>
        <trans-unit id="e8be6a7511a0213afed8a1af7a2071b625a83caa" translate="yes" xml:space="preserve">
          <source>WebSockets are now correctly proxied through HTTPS and through subdomains different than the current domain under test.</source>
          <target state="translated">WebSocket は HTTPS を介して正しくプロキシされ、現在のテスト対象ドメインとは異なるサブドメインを介して正しくプロキシされるようになりました。</target>
        </trans-unit>
        <trans-unit id="2b6cc2bcdc6dde860cdaf12187589e4e4dd5b609" translate="yes" xml:space="preserve">
          <source>Webinar</source>
          <target state="translated">Webinar</target>
        </trans-unit>
        <trans-unit id="642803d03826095e048310e6f6fdb2336f081224" translate="yes" xml:space="preserve">
          <source>Webpack</source>
          <target state="translated">Webpack</target>
        </trans-unit>
        <trans-unit id="203d720056038f4419e92d0d48fb7196118e4115" translate="yes" xml:space="preserve">
          <source>Week Inputs</source>
          <target state="translated">週の入力</target>
        </trans-unit>
        <trans-unit id="0aea3f53e70a55034cd04dd66711d71935c293bc" translate="yes" xml:space="preserve">
          <source>Welcome wizard</source>
          <target state="translated">ようこそウィザード</target>
        </trans-unit>
        <trans-unit id="969ee229b4e43c209a6c1e172dc1eb4820b006cf" translate="yes" xml:space="preserve">
          <source>What Aliases are and how they simplify your code</source>
          <target state="translated">エイリアスとは何か、そしてどのようにコードを簡素化するか</target>
        </trans-unit>
        <trans-unit id="afd2bab476e1cf1f892263fd732b96759e5c56f2" translate="yes" xml:space="preserve">
          <source>What Continuous Integration the run ran in (if any) and its CI id and url.</source>
          <target state="translated">実行が実行された継続的インテグレーションの種類(あれば)、CI ID と URL。</target>
        </trans-unit>
        <trans-unit id="6142892eb81216da7e0b63632df03dc2dc464d6d" translate="yes" xml:space="preserve">
          <source>What Cypress is and why you should use it</source>
          <target state="translated">サイプレスとは何か、なぜサイプレスを使うべきか</target>
        </trans-unit>
        <trans-unit id="bd255187eca0aa9aad9e76b87f4f206b1c6ba6db" translate="yes" xml:space="preserve">
          <source>What assertions look like and how they work</source>
          <target state="translated">アサーションがどのように見えて、どのように機能するのか</target>
        </trans-unit>
        <trans-unit id="b79b9469fcb3f0a5b4faf92732f0ab8c022c90b2" translate="yes" xml:space="preserve">
          <source>What event should I fire?</source>
          <target state="translated">どのようなイベントを撃てばいいのでしょうか?</target>
        </trans-unit>
        <trans-unit id="9f0d169c177eaafb0d2d4aaf75fd2f8e06e3c33c" translate="yes" xml:space="preserve">
          <source>What if the application does some intensive computation before showing the results in the DOM?</source>
          <target state="translated">アプリケーションが結果を DOM に表示する前に、いくつかの集中的な計算を行った場合はどうなりますか?</target>
        </trans-unit>
        <trans-unit id="026d41b3511fc1543c8d1872254fa88f01c6a992" translate="yes" xml:space="preserve">
          <source>What if the application has not updated the DOM by the time these commands run?</source>
          <target state="translated">これらのコマンドが実行されるまでにアプリケーションが DOM を更新していない場合はどうしますか?</target>
        </trans-unit>
        <trans-unit id="993d8cb3048cf56ed11932d00bb4bb593a1d084d" translate="yes" xml:space="preserve">
          <source>What if the application is waiting for its back end to respond before populating the DOM element?</source>
          <target state="translated">アプリケーションが、DOM 要素を生成する前にバックエンドからの応答を待っている場合はどうすればよいでしょうか?</target>
        </trans-unit>
        <trans-unit id="b76a2f65fb25533a334edab01c384daf659f77d9" translate="yes" xml:space="preserve">
          <source>What is a superdomain? Given the urls below, all have the same superdomain of &lt;code&gt;cypress.io&lt;/code&gt;.</source>
          <target state="translated">スーパードメインとは何ですか？以下のURLを考えると、すべてに同じ &lt;code&gt;cypress.io&lt;/code&gt; のスーパードメインがあります。</target>
        </trans-unit>
        <trans-unit id="1e430531ab68dfcd4d7ceeb4eeb659eb3d8cbb62" translate="yes" xml:space="preserve">
          <source>What is watched?</source>
          <target state="translated">何を見られているのか?</target>
        </trans-unit>
        <trans-unit id="f9c99166992ce776535ea44dcde6ff7202b84b23" translate="yes" xml:space="preserve">
          <source>What isn&amp;rsquo;t watched?</source>
          <target state="translated">何を見ていませんか？</target>
        </trans-unit>
        <trans-unit id="ca032b5844df22ede2117e0697547ac14af77ed3" translate="yes" xml:space="preserve">
          <source>What it does</source>
          <target state="translated">何をするのか</target>
        </trans-unit>
        <trans-unit id="a1cd432ddd940b9c7b2857172d651edafe31e3f7" translate="yes" xml:space="preserve">
          <source>What languages are supported in your test files.</source>
          <target state="translated">テストファイルでサポートされている言語は何ですか?</target>
        </trans-unit>
        <trans-unit id="04faec7aa29323d169fe31ae932bf001bed23f23" translate="yes" xml:space="preserve">
          <source>What makes Cypress unique</source>
          <target state="translated">サイプレスの特徴</target>
        </trans-unit>
        <trans-unit id="36b007eae6da272f087661dc5c136f7b087bedb3" translate="yes" xml:space="preserve">
          <source>What makes Cypress unique from other testing tools is that commands &lt;strong&gt;automatically retry&lt;/strong&gt; their assertions. In fact, they will look &amp;ldquo;downstream&amp;rdquo; at what you&amp;rsquo;re expressing and modify their behavior to make your assertions pass.</source>
          <target state="translated">サイプレスが他のテストツールと異なる点は、コマンドが&lt;strong&gt;自動的に&lt;/strong&gt;アサーションを&lt;strong&gt;再試行&lt;/strong&gt;することです。実際、彼らはあなたが表現しているものの「下流」を見て、彼らの行動を修正してあなたの主張を通過させます。</target>
        </trans-unit>
        <trans-unit id="5eab3129401c494a6af06639b21e40fd44722b66" translate="yes" xml:space="preserve">
          <source>What makes this example below so powerful is that Cypress will automatically wait for a request that matches the &lt;code&gt;getSearch&lt;/code&gt; alias. Instead of forcing Cypress to test the &lt;em&gt;side effect&lt;/em&gt; of a successful request (the display of the Book results), you can test the actual &lt;em&gt;cause&lt;/em&gt; of the results.</source>
          <target state="translated">以下のこの例が非常に強力なのは、サイプレスが &lt;code&gt;getSearch&lt;/code&gt; エイリアスに一致するリクエストを自動的に待機することです。サイプレスに要求の成功による&lt;em&gt;副作用&lt;/em&gt;（ブックの結果の表示）をテストさせる代わりに、結果の実際の&lt;em&gt;原因&lt;/em&gt;をテストすることができます。</target>
        </trans-unit>
        <trans-unit id="4db793c669d440e911f57c2c157998d3f71f32ca" translate="yes" xml:space="preserve">
          <source>What passing and failing tests look like.</source>
          <target state="translated">テストの合格・不合格がどのようなものか</target>
        </trans-unit>
        <trans-unit id="d6eaacbfa99bca1ade71100d75562ccdcb57503d" translate="yes" xml:space="preserve">
          <source>What test insights are available on the Dashboard</source>
          <target state="translated">ダッシュボードではどのようなテストインサイトが利用できますか?</target>
        </trans-unit>
        <trans-unit id="47aff5b1378cdc4e7a6d251caf7f410295a754c1" translate="yes" xml:space="preserve">
          <source>What tradeoffs we make when we stub our network requests</source>
          <target state="translated">ネットワークリクエストをスタブする際に、どのようなトレードオフを行うか</target>
        </trans-unit>
        <trans-unit id="8501d7abcab7ba1c846e3d0a552699fa3dbc907b" translate="yes" xml:space="preserve">
          <source>What you want to do is call &lt;code&gt;cy&lt;/code&gt; again, which automatically creates a new chain scoped to the &lt;code&gt;document&lt;/code&gt;.</source>
          <target state="translated">やりたいことは、もう一度 &lt;code&gt;cy&lt;/code&gt; を呼び出すことです。これにより、 &lt;code&gt;document&lt;/code&gt; スコープとする新しいチェーンが自動的に作成されます。</target>
        </trans-unit>
        <trans-unit id="f1cc2f059af1a5a060fecdb5e9e99b02ff102068" translate="yes" xml:space="preserve">
          <source>What you&amp;rsquo;ll learn</source>
          <target state="translated">あなたが学ぶこと</target>
        </trans-unit>
        <trans-unit id="e807a4ac828b228f989fbdf6968a1375c2edea54" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s happening in this example is that because we have &lt;em&gt;NOT&lt;/em&gt; told Mocha this is an asynchronous test, this test will pass &lt;em&gt;immediately&lt;/em&gt; then move onto the next test. Then, when the &lt;code&gt;setTimeout&lt;/code&gt; callback function runs, new commands will get queued on the wrong test. Cypress will detect this and fail the &lt;em&gt;next&lt;/em&gt; test.</source>
          <target state="translated">この例では、非同期テストであることをMochaに伝えてい&lt;em&gt;ない&lt;/em&gt;ため、このテストは&lt;em&gt;すぐ&lt;/em&gt;に成功し、次のテストに進みます。次に、 &lt;code&gt;setTimeout&lt;/code&gt; コールバック関数が実行されると、新しいコマンドが間違ったテストでキューに入れられます。サイプレスはこれを検出し、&lt;em&gt;次の&lt;/em&gt;テストに失敗します。</target>
        </trans-unit>
        <trans-unit id="61b4196121dbf82c59f9f47e8b2c5729a32b037e" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s more - since Cypress enables you to do things like &lt;strong&gt;stub network requests&lt;/strong&gt; you can build out your web application without even needing a server to provide valid JSON responses.</source>
          <target state="translated">さらに、サイプレスでは&lt;strong&gt;スタブネットワークリクエストなどを&lt;/strong&gt;実行できるため、有効なJSON応答を提供するサーバーを必要とせずにWebアプリケーションを構築できます。</target>
        </trans-unit>
        <trans-unit id="82693e2f52b3769aa2b5d938cb0b5e2e13cd5849" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s the difference between &lt;code&gt;.then()&lt;/code&gt; and &lt;code&gt;.should()&lt;/code&gt;/&lt;code&gt;.and()&lt;/code&gt;?</source>
          <target state="translated">違い何 &lt;code&gt;.then()&lt;/code&gt; と &lt;code&gt;.should()&lt;/code&gt; / &lt;code&gt;.and()&lt;/code&gt; ？</target>
        </trans-unit>
        <trans-unit id="0067680f8887319d72cec225188122863578a461" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s the difference between triggering and event and calling the corresponding cypress command?</source>
          <target state="translated">トリガーとイベント、対応するサイプレスコマンドの呼び出しの違いは何ですか？</target>
        </trans-unit>
        <trans-unit id="35cbfbe9143a25c89543bbbf6c13d0e8d7a90592" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s wrong with the above tests? They are all coupled together!</source>
          <target state="translated">上記のテストの何が問題になっていますか？それらはすべて一緒に結合されています！</target>
        </trans-unit>
        <trans-unit id="f42e0dc0ecab19dfedb19db7f5437642a4f7311a" translate="yes" xml:space="preserve">
          <source>Whatever is returned in the function is ignored. Cypress always forces the command to yield the value from the previous cy command&amp;rsquo;s yield (which in the example below is &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">関数で返されるものはすべて無視されます。サイプレスは常に、コマンドに前のcyコマンドのyield（以下の例では &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; ）からの値を強制します。</target>
        </trans-unit>
        <trans-unit id="8ab6df96a35479d6e93bbcc6e16a10b74fe9f511" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt; fails it will include the current subject n the &lt;code&gt;onConsole&lt;/code&gt; log.</source>
          <target state="translated">場合&lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../api/commands/invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; は&lt;/a&gt;、現在の被写体N含まれる失敗 &lt;code&gt;onConsole&lt;/code&gt; のログ。</target>
        </trans-unit>
        <trans-unit id="a8bcd4fcc53793dd95e5aa34a94c0682af33b6a3" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; fails, it now outputs the full request / response information. This behaves more similar to &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; failures. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/324&quot;&gt;#324&lt;/a&gt;.</source>
          <target state="translated">場合は&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;失敗し、それは今、完全な要求/応答情報を出力します。これは&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; の&lt;/a&gt;失敗に似ています。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/324&quot;&gt;＃324を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="921ee4bd8cb51df251e534bd39934b6fa3adeead" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; times out, we now output much better error messages including information about the request sent. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/340&quot;&gt;#340&lt;/a&gt;.</source>
          <target state="translated">とき&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;要求て送信についての情報を含むタイムアウトし、我々今出力より良いエラーメッセージ。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/340&quot;&gt;＃340を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="f83b90e417104a60f950b6d86d973d0df8117934" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../../api/commands/spy&quot;&gt;&lt;code&gt;cy.spy()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt; are never called, the error now displays a clearer, grammatically correct error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/520&quot;&gt;#520&lt;/a&gt;.</source>
          <target state="translated">とき&lt;a href=&quot;../../api/commands/spy&quot;&gt; &lt;code&gt;cy.spy()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../api/commands/stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; が&lt;/a&gt;呼び出されることはありません、エラーが今より明確に、文法的に正しいエラーが表示されます。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/520&quot;&gt;＃520を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="d73db19c66fd74d0b92ed8ff0f5672e071f65956" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; throws this no longer prevents the next test from issuing any commands. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/149&quot;&gt;#149&lt;/a&gt;.</source>
          <target state="translated">場合&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; が&lt;/a&gt;スローこれはもはやコマンドの発行から次のテストを妨げるものはありません。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/149&quot;&gt;＃149を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="bd04b1d618159e8275d66f34d66a899768ac1b38" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../../api/commands/wrap&quot;&gt;&lt;code&gt;cy.wrap()&lt;/code&gt;&lt;/a&gt; is followed directly by a &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; command, &lt;code&gt;cy.wrap()&lt;/code&gt; will now &lt;a href=&quot;../core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; when its argument evaluates to &lt;code&gt;undefined&lt;/code&gt; until it meets the requirements of the assertion or the &lt;code&gt;cy.wrap()&lt;/code&gt; command times out. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3241&quot;&gt;#3241&lt;/a&gt;.</source>
          <target state="translated">とき&lt;a href=&quot;../../api/commands/wrap&quot;&gt; &lt;code&gt;cy.wrap()&lt;/code&gt; &lt;/a&gt;で直接続いている&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;コマンド、 &lt;code&gt;cy.wrap()&lt;/code&gt; 今ます&lt;a href=&quot;../core-concepts/retry-ability&quot;&gt;リトライ&lt;/a&gt;に、引数評価さを &lt;code&gt;undefined&lt;/code&gt; それは、アサーションやの要件満たすまで &lt;code&gt;cy.wrap()&lt;/code&gt; コマンドがタイムアウト。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3241&quot;&gt;＃3241を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="ce79a2cbded3e2685d8f62355c9aeb57fef47184" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../guides/command-line&quot;&gt;running Cypress from the Command Line&lt;/a&gt; you can pass a &lt;code&gt;--config&lt;/code&gt; flag.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line&quot;&gt;コマンドラインからサイプレスを実行&lt;/a&gt;する場合、 &lt;code&gt;--config&lt;/code&gt; フラグを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="a61d5f3ea89a65d6ff44d099b9ef62505ca68b23" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;https://github.com/bahmutov/start-server-and-test#note-for-webpack-dev-server-users&quot;&gt;working with &lt;code&gt;webpack-dev-server&lt;/code&gt;&lt;/a&gt; that does not respond to &lt;code&gt;HEAD&lt;/code&gt; requests, use an explicit &lt;code&gt;GET&lt;/code&gt; method to ping the server like this:</source>
          <target state="translated">とき&lt;a href=&quot;https://github.com/bahmutov/start-server-and-test#note-for-webpack-dev-server-users&quot;&gt;の作業 &lt;code&gt;webpack-dev-server&lt;/code&gt; &lt;/a&gt;に応答しない &lt;code&gt;HEAD&lt;/code&gt; の要求を、明示的に使用して &lt;code&gt;GET&lt;/code&gt; のこのようサーバーにpingを実行する方法を：</target>
        </trans-unit>
        <trans-unit id="beb557e522bca52be3f66f654122a5c71b423b34" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;.its()&lt;/code&gt; returns &lt;code&gt;undefined&lt;/code&gt; it no longer errors. It will now follow the same logic as all other commands and only fail when directly by a &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; command with an assertion that is not met. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1531&quot;&gt;#1531&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.its()&lt;/code&gt; 戻りは &lt;code&gt;undefined&lt;/code&gt; それをもはやエラーが。他のすべてのコマンドと同じロジックに従い、満たされていないアサーションを&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;コマンドによって直接失敗した場合にのみ失敗します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1531&quot;&gt;＃1531を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="d2e5c376c69da6c0e0f7407476a805bc04b25b9d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;undefined&lt;/code&gt; is returned by the callback function, the subject will not be modified and will instead carry over to the next command.</source>
          <target state="translated">コールバック関数によって &lt;code&gt;undefined&lt;/code&gt; が返された場合、サブジェクトは変更されず、代わりに次のコマンドに引き継がれます。</target>
        </trans-unit>
        <trans-unit id="a3d4699ecb2049820bc1fca6b0538f539bba437c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;visible&lt;/code&gt; assertions such as &lt;code&gt;should('be.visible')&lt;/code&gt; fail we now print the reason Cypress thought the element was invisible. Matches what Cypress prints out when attempting to interact with invisible elements. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/221&quot;&gt;#221&lt;/a&gt;.</source>
          <target state="translated">ときに &lt;code&gt;visible&lt;/code&gt; ようなアサーションが &lt;code&gt;should('be.visible')&lt;/code&gt; 失敗し、我々は今、サイプレス要素が見えないと思った理由を印刷します。非表示の要素を操作するときにサイプレスが出力するものと一致します。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/221&quot;&gt;＃221を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="815138032ee67e2600729558a99aab62c8601192" translate="yes" xml:space="preserve">
          <source>When Cypress blocks a request made to a matching host, it will automatically send a &lt;code&gt;503&lt;/code&gt; status code. As a convenience it also sets a &lt;code&gt;x-cypress-matched-blacklist-host&lt;/code&gt; header so you can see which rule it matched.</source>
          <target state="translated">サイプレスが一致するホストに対して行われたリクエストをブロックすると、自動的に &lt;code&gt;503&lt;/code&gt; ステータスコードを送信します。便宜上、 &lt;code&gt;x-cypress-matched-blacklist-host&lt;/code&gt; ヘッダーも設定するので、どのルールに一致したかを確認できます。</target>
        </trans-unit>
        <trans-unit id="268990d70708a9c119b796886a66d59b81fe00f2" translate="yes" xml:space="preserve">
          <source>When Cypress cannot proxy http content due to a software error it will attach a &lt;code&gt;x-cypress-error&lt;/code&gt; and &lt;code&gt;x-cypress-stack&lt;/code&gt; to the HTTP request for easy inspection and debugging.</source>
          <target state="translated">ソフトウェアエラーが原因でサイプレスがhttpコンテンツをプロキシできない場合、検査とデバッグを容易にするために、 &lt;code&gt;x-cypress-error&lt;/code&gt; と &lt;code&gt;x-cypress-stack&lt;/code&gt; をHTTPリクエストに添付します。</target>
        </trans-unit>
        <trans-unit id="9f2f85c177c420ba4159f649c00a2e9c645b117a" translate="yes" xml:space="preserve">
          <source>When Cypress detects a &lt;code&gt;page loading&lt;/code&gt; event it will now clear out the subject so the next commands cannot reference previous page DOM elements.</source>
          <target state="translated">サイプレスが &lt;code&gt;page loading&lt;/code&gt; イベントを検出すると、サブジェクトが消去されるため、次のコマンドは前のページのDOM要素を参照できません。</target>
        </trans-unit>
        <trans-unit id="c8c0adfc710cda04e93b2138507665ec89e5c1de" translate="yes" xml:space="preserve">
          <source>When Cypress detects a regular HTTP page loading event (where we&amp;rsquo;re leaving the current page and requesting a new one) it will now insert a &lt;code&gt;loading&lt;/code&gt; command which indicates to the user Cypress has stopped running commands until the new page loads.</source>
          <target state="translated">サイプレスが通常のHTTPページの読み込みイベントを検出すると（現在のページを離れて新しいページを要求する場合）、新しいページが読み込まれるまでサイプレスがコマンドの実行を停止したことをユーザーに示す &lt;code&gt;loading&lt;/code&gt; コマンドを挿入します。</target>
        </trans-unit>
        <trans-unit id="cfa18dd67b160d0074863b46b776ad7c55618cc6" translate="yes" xml:space="preserve">
          <source>When Cypress executes your &lt;code&gt;pluginsFile&lt;/code&gt; it will execute with &lt;code&gt;process.cwd()&lt;/code&gt; set to your project&amp;rsquo;s path. Additionally - you will be able to &lt;code&gt;require&lt;/code&gt;&lt;strong&gt;any node module&lt;/strong&gt; you have installed.</source>
          <target state="translated">サイプレスが &lt;code&gt;pluginsFile&lt;/code&gt; を実行すると、プロジェクトのパスに設定された &lt;code&gt;process.cwd()&lt;/code&gt; で実行されます。さらに- インストールした&lt;strong&gt;ノードモジュール&lt;/strong&gt;を &lt;code&gt;require&lt;/code&gt; とすることができます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a6245e32587ae57df7c083e0e037268a72f66f94" translate="yes" xml:space="preserve">
          <source>When Cypress first loads, the internal Cypress web application is hosted on a random port: something like &lt;code&gt;http://localhost:65874/__/&lt;/code&gt;.</source>
          <target state="translated">サイプレスが最初にロードするとき、内部サイプレスWebアプリケーションは、ランダムポート（ &lt;code&gt;http://localhost:65874/__/&lt;/code&gt; など)でホストされています。</target>
        </trans-unit>
        <trans-unit id="60e8cdd09bd17a67bc4dc3fc884c5d3667ec0182" translate="yes" xml:space="preserve">
          <source>When Cypress goes to launch your browser it will give you an opportunity to modify the arguments used to launch the browser.</source>
          <target state="translated">Cypressがブラウザを起動する際に、ブラウザの起動に使われる引数を変更することができます。</target>
        </trans-unit>
        <trans-unit id="6249e037b8f2ddd23b774076f86e912b1df0b079" translate="yes" xml:space="preserve">
          <source>When Cypress is initially run from the Test Runner, you can choose to run Cypress in a select number of browsers including:</source>
          <target state="translated">Cypressがテストランナーから最初に実行されるとき、Cypressを含むいくつかのブラウザで実行することができます。</target>
        </trans-unit>
        <trans-unit id="7b2e9e992d7aa3685768b0e81467c6dc5bd0a979" translate="yes" xml:space="preserve">
          <source>When Cypress launches Chrome, it attempts to launch it with a custom proxy server and browser extension. Certain group policies (GPOs) on Windows can prevent this from working as intended, which can cause tests to break.</source>
          <target state="translated">Cypress が Chrome を起動すると、カスタム プロキシ サーバーとブラウザ拡張機能を使用して Chrome を起動しようとします。Windows の特定のグループポリシー (GPO)により、意図した通りに動作しないことがあり、テストが中断されることがあります。</target>
        </trans-unit>
        <trans-unit id="0f4d773a5003e81e077534d52b8733ca0f9d5f8d" translate="yes" xml:space="preserve">
          <source>When Cypress matches up an outgoing XHR request to a &lt;code&gt;cy.route()&lt;/code&gt;, it actually attempts to match it against both the fully qualified URL and then additionally without the URL&amp;rsquo;s origin.</source>
          <target state="translated">サイプレスが発信XHRリクエストを &lt;code&gt;cy.route()&lt;/code&gt; と照合する場合、実際には、完全修飾URLと、さらにはURLのオリジンなしの両方で照合を試みます。</target>
        </trans-unit>
        <trans-unit id="f4f09ef71a677be6474690d6e200920dfc948d04" translate="yes" xml:space="preserve">
          <source>When Cypress opens other windows they are now auto-focused.</source>
          <target state="translated">Cypressが他のウィンドウを開くと、自動フォーカスされるようになりました。</target>
        </trans-unit>
        <trans-unit id="b031f6ce5525f4f9493c7d09d1285b9e96283131" translate="yes" xml:space="preserve">
          <source>When Cypress retries due to an API timeout or failure it now displays a very nice message indicating to you the delay and number of retries left. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2280&quot;&gt;#2280&lt;/a&gt;.</source>
          <target state="translated">APIのタイムアウトまたは障害が原因でサイプレスが再試行すると、遅延と残りの再試行回数を示す非常に素晴らしいメッセージが表示されるようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2280&quot;&gt;＃2280を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="3e61d87697862f8842aab6436d94312f5a66d17a" translate="yes" xml:space="preserve">
          <source>When Elements Are Missing</source>
          <target state="translated">要素が欠落している場合</target>
        </trans-unit>
        <trans-unit id="9f7ba2a354f6c4a8fca77554521112ded036e10d" translate="yes" xml:space="preserve">
          <source>When To Assert?</source>
          <target state="translated">いつ主張するか?</target>
        </trans-unit>
        <trans-unit id="43d91b1e25e6cda2191a2e46c27b27de74734bb9" translate="yes" xml:space="preserve">
          <source>When XHR&amp;rsquo;s are aborted Cypress will display the stack trace indicating where in your app the XHR was aborted. Additionally it will display as &lt;code&gt;(aborted)&lt;/code&gt; in the Command Log.</source>
          <target state="translated">XHRが中止されると、サイプレスはXHRが中止されたアプリの場所を示すスタックトレースを表示します。さらに、コマンドログに &lt;code&gt;(aborted)&lt;/code&gt; として表示されます。</target>
        </trans-unit>
        <trans-unit id="0345dc48e6ab9ed5927ade6a4dc8f311df47c693" translate="yes" xml:space="preserve">
          <source>When XHR&amp;rsquo;s are made, Cypress will log them in the Command Log and indicate whether they matched a routing alias:</source>
          <target state="translated">XHRが作成されると、サイプレスはそれらをコマンドログに記録し、ルーティングエイリアスと一致したかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="9812e85df6c97f2b9be3ea9fc637b2276d92c5b0" translate="yes" xml:space="preserve">
          <source>When a command causes an immediate visual change in our application, cycling between before and after will update our snapshot. We can see this in action by clicking the &lt;code&gt;TYPE&lt;/code&gt; command in the Command Log. Now, clicking &lt;strong&gt;before&lt;/strong&gt; will show us the input in a default state, showing the placeholder text. Click &lt;strong&gt;after&lt;/strong&gt; will show us what the input looks like when the &lt;code&gt;TYPE&lt;/code&gt; command has completed.</source>
          <target state="translated">コマンドによってアプリケーションの視覚的な変化が即座に発生した場合、前と後を循環させるとスナップショットが更新されます。コマンドログで &lt;code&gt;TYPE&lt;/code&gt; コマンドをクリックすると、この動作を確認できます。ここで、[ &lt;strong&gt;前&lt;/strong&gt;に]をクリック&lt;strong&gt;する&lt;/strong&gt;と、入力がデフォルトの状態で表示され、プレースホルダーテキストが表示されます。&lt;strong&gt;後&lt;/strong&gt;をクリックすると、 &lt;code&gt;TYPE&lt;/code&gt; コマンドが完了したときの入力が表示されます。</target>
        </trans-unit>
        <trans-unit id="82580558a6bdbff76a899246b75ae121c19752b9" translate="yes" xml:space="preserve">
          <source>When a cookie matching the name could not be found:</source>
          <target state="translated">名前に一致するクッキーが見つからなかった場合。</target>
        </trans-unit>
        <trans-unit id="eb09e1d1fedf35c56f8c72456a3bcf2d94b4c02c" translate="yes" xml:space="preserve">
          <source>When a new test runs, any outstanding requests still in flight are automatically aborted. In fact this happens by default whether or not you&amp;rsquo;ve even started a &lt;code&gt;cy.server()&lt;/code&gt;.</source>
          <target state="translated">新しいテストを実行すると、まだ処理中の未解決の要求はすべて自動的に中止されます。実際、これは、 &lt;code&gt;cy.server()&lt;/code&gt; を起動したかどうかに関係なく、デフォルトで発生します。</target>
        </trans-unit>
        <trans-unit id="32751824eb91e4868779afc97108a124d3ce3ee8" translate="yes" xml:space="preserve">
          <source>When a project is added to Cypress, a &lt;code&gt;cypress.json&lt;/code&gt; file is created in the project. This file is used to store the &lt;code&gt;projectId&lt;/code&gt; (&lt;a href=&quot;../dashboard/projects#Setup&quot;&gt;after configuring your tests to record&lt;/a&gt;) and any configuration values you supply.</source>
          <target state="translated">サイプレスにプロジェクトが追加されると、 &lt;code&gt;cypress.json&lt;/code&gt; ファイルがプロジェクトに作成されます。このファイルは、 &lt;code&gt;projectId&lt;/code&gt; （&lt;a href=&quot;../dashboard/projects#Setup&quot;&gt;テストを記録するように構成した後&lt;/a&gt;）および指定した構成値を格納するために使用されます。</target>
        </trans-unit>
        <trans-unit id="d9d1f1c427a2e1dcfdace91c8009c2ff804f4061" translate="yes" xml:space="preserve">
          <source>When a project is initially run from the desktop app, you can now choose to run Cypress in a select number of browsers including: Chrome, Chromium, or Canary (depending on what&amp;rsquo;s installed on your OS).</source>
          <target state="translated">プロジェクトが最初にデスクトップアプリから実行されるとき、選択した数のブラウザーでサイプレスを実行することを選択できるようになりました：Chrome、Chromium、またはCanary（OSにインストールされているものによって異なります）。</target>
        </trans-unit>
        <trans-unit id="1041b08191de37448732c182af038ee4b9b68b8d" translate="yes" xml:space="preserve">
          <source>When a project is transferred to you, you will receive an email notifying you. You will be able to accept or reject the transferred project by visiting your organization&amp;rsquo;s projects and clicking &amp;lsquo;Accept&amp;rsquo; or &amp;lsquo;Reject&amp;rsquo;.</source>
          <target state="translated">プロジェクトが転送されると、通知メールが届きます。組織のプロジェクトにアクセスして[承諾]または[拒否]をクリックすると、移管されたプロジェクトを承諾または拒否できます。</target>
        </trans-unit>
        <trans-unit id="1a7c2092b27dc38fffafeec31327651c219ed43b" translate="yes" xml:space="preserve">
          <source>When a request is proxied through Cypress and there is a network error, we no longer send an HTML response with a 500 status code. We now kill the browser-facing socket and let the network error be handled by the application under test. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4101&quot;&gt;#4101&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4231&quot;&gt;#4231&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1036&quot;&gt;#1036&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4231&quot;&gt;#4231&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1398&quot;&gt;#1398&lt;/a&gt;.</source>
          <target state="translated">リクエストがサイプレス経由でプロキシされ、ネットワークエラーが発生した場合、500ステータスコードを含むHTML応答を送信しなくなりました。ここで、ブラウザーに面したソケットを強制終了し、ネットワークエラーをテスト対象のアプリケーションで処理できるようにします。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4101&quot;&gt;＃4101&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4231&quot;&gt;＃4231&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1036&quot;&gt;＃1036&lt;/a&gt;、&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4231&quot;&gt;＃4231&lt;/a&gt;、および&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1398&quot;&gt;＃1398の&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="0654d8b7d4b7afc35f0e65d940a7b7356b2694c5" translate="yes" xml:space="preserve">
          <source>When a run finishes all of its groups, it waits for a configurable set of time before finally completing. You must add more groups during that time period.</source>
          <target state="translated">ランがすべてのグループを終了すると、最終的に終了する前に設定可能な時間を待ちます。その時間内にグループを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="bc9882613de25b3ce130d3c1e4c1adf15c8e167c" translate="yes" xml:space="preserve">
          <source>When adding &lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;custom commands&lt;/a&gt; to the &lt;code&gt;cy&lt;/code&gt; object, you can manually add their types to avoid TypeScript errors.</source>
          <target state="translated">追加する場合&lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;カスタムコマンドを&lt;/a&gt;へ &lt;code&gt;cy&lt;/code&gt; オブジェクトは、手動で活字体エラーを回避するために自分のタイプを追加することができます。</target>
        </trans-unit>
        <trans-unit id="29521e635d0515fbfcf2cbb390d7d4372a95569e" translate="yes" xml:space="preserve">
          <source>When an HTTP request is received by the proxy layer, by default, we send it with a &lt;code&gt;Connection: keep-alive&lt;/code&gt; header so that the connection will be reused if possible. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3857&quot;&gt;#3857&lt;/a&gt;.</source>
          <target state="translated">HTTPリクエストがプロキシレイヤーで受信されると、デフォルトでは、可能な場合は接続が再利用されるように、 &lt;code&gt;Connection: keep-alive&lt;/code&gt; ヘッダーで送信します。アドレス&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3857&quot;&gt;＃3857&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5880881ff820b30a7440dbfd8851243a42d42faa" translate="yes" xml:space="preserve">
          <source>When an element&amp;rsquo;s center is not visible the error message now includes the stringified element in question, and not &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">要素の中心が表示されない場合、エラーメッセージには問題の文字列化された要素が含まれ、 &lt;code&gt;undefined&lt;/code&gt; ではありません。</target>
        </trans-unit>
        <trans-unit id="c6a152cda7b48fee8983d233f28837859139837b" translate="yes" xml:space="preserve">
          <source>When an exception is thrown regarding Cypress, we send along the exception data to &lt;code&gt;https://api.cypress.io&lt;/code&gt;. We solely use this information to help develop a better product.</source>
          <target state="translated">サイプレスに関して例外がスローされると、例外データとともに &lt;code&gt;https://api.cypress.io&lt;/code&gt; に送信されます。この情報は、より良い製品を開発するためにのみ使用します。</target>
        </trans-unit>
        <trans-unit id="f89c4f14f29902bf64481555db0861db58694fc6" translate="yes" xml:space="preserve">
          <source>When an in app update fails in &lt;code&gt;linux&lt;/code&gt; we now provide instructions on how to manually update Cypress.</source>
          <target state="translated">&lt;code&gt;linux&lt;/code&gt; でアプリ内アップデートが失敗した場合、サイプレスを手動でアップデートする方法の手順を提供します。</target>
        </trans-unit>
        <trans-unit id="4a2600b7b1af61653fd53bbfc240c14b7cad9668" translate="yes" xml:space="preserve">
          <source>When an integration test file is unable to run and the &lt;code&gt;integrationFolder&lt;/code&gt; is not the default path, the UI error now properly prints the integration test file&amp;rsquo;s path by stripping off &lt;code&gt;integration&lt;/code&gt; in the path. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/117&quot;&gt;#117&lt;/a&gt;.</source>
          <target state="translated">統合テストファイルを実行できず、 &lt;code&gt;integrationFolder&lt;/code&gt; がデフォルトのパスでない場合、UIエラーは、パスの &lt;code&gt;integration&lt;/code&gt; を削除することにより、統合テストファイルのパスを適切に出力するようになりました。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/117&quot;&gt;＃117を&lt;/a&gt;修正。</target>
        </trans-unit>
        <trans-unit id="2418374e5be2dd690a8273c358b7f6b4aca07bcd" translate="yes" xml:space="preserve">
          <source>When assertions failed you relied on the test&amp;rsquo;s title to know what failed</source>
          <target state="translated">アサーションが失敗したとき、何が失敗したかを知るためにテストのタイトルに依存しました</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
