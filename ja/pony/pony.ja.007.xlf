<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="">
    <body>
      <group id="">
        <trans-unit id="fda605addc6cb955f5129e6d28b8de68f63cd637" translate="yes" xml:space="preserve">
          <source>Promises.join()</source>
          <target state="translated">Promises.join()</target>
        </trans-unit>
        <trans-unit id="51e269c77546372833b9ac0140637717eb9be280" translate="yes" xml:space="preserve">
          <source>Promises.ne()</source>
          <target state="translated">Promises.ne()</target>
        </trans-unit>
        <trans-unit id="c102efb868476c95f6b083450747e533465fec94" translate="yes" xml:space="preserve">
          <source>Promises[A: &lt;a href=&quot;builtin-any&quot;&gt;Any&lt;/a&gt; #share]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7d6cab200fa411505fff31b7d7c52e01e4dafe" translate="yes" xml:space="preserve">
          <source>Provides basic logging facilities. For most use cases, the &lt;code&gt;StringLogger&lt;/code&gt; class will be used. On construction, it takes 2 parameters and a 3rd optional parameter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af58e66f376c5a33aca996c2d8a86ed10d0cc0c" translate="yes" xml:space="preserve">
          <source>Provides facilities to create output to either &lt;code&gt;STDOUT&lt;/code&gt; or &lt;code&gt;STDERR&lt;/code&gt; that will only appear when the platform is debug configured. To create a binary with debug configured, pass the &lt;code&gt;-d&lt;/code&gt; flag to &lt;code&gt;ponyc&lt;/code&gt; when compiling e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516563d0d4007cca106326d72801f8318d44eeaa" translate="yes" xml:space="preserve">
          <source>Provides functions for generating formatted strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f903ad3ca02506efb329456d5e51bab011009e0" translate="yes" xml:space="preserve">
          <source>Public Behaviours</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83fd9d90135feee7f6a996aca0791b4d44033ddd" translate="yes" xml:space="preserve">
          <source>Public Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6292a02632c76b547842ce760b9a09596a10093f" translate="yes" xml:space="preserve">
          <source>Public Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3cfc1fd30d5fe192c85549d8f7db00088e7190" translate="yes" xml:space="preserve">
          <source>Public fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb41e7a8f6fa56247c20aa64d17caac69cb91358" translate="yes" xml:space="preserve">
          <source>Push a UTF-32 code point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b037ba2e6726ae9fe2562b9ea580da85ac6f6e79" translate="yes" xml:space="preserve">
          <source>Push an item into the heap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf9de47894d8bd31b5abf37d7290ebbeb1dd238" translate="yes" xml:space="preserve">
          <source>Push each value from the iterator into the collection &lt;code&gt;coll&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2454ab34d9a037ed7e19cbdeb940647a56b5a1af" translate="yes" xml:space="preserve">
          <source>Put bureaucracy to use today and before long, your sprawling metropolis of a code base will be manageable again in no time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815882efcc213d32a03008ef713c0827c11611c1" translate="yes" xml:space="preserve">
          <source>Queue an iterable collection of ByteSeqs to be written NOTE: Queue'd data will always be written before normal print/write requested data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb2f973895da73147af22869d08a5efd2a452c0" translate="yes" xml:space="preserve">
          <source>Queue data to be written NOTE: Queue'd data will always be written before normal print/write requested data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad110c81f0a57e767689d02f3046b53dfb7dace" translate="yes" xml:space="preserve">
          <source>Quicksort is a common implementation of a sort algorithm which can sort items of any type for which a &quot;less-than&quot; relation (formally, a total order) is defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd6109272f8c0fdf0884c7836d7c8d3e4e27656" translate="yes" xml:space="preserve">
          <source>Raise 32 to the power of n.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25484a1e87be80722ed4bf62e0c7809e51303327" translate="yes" xml:space="preserve">
          <source>Raise a signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c038f4b3377e2cdbc36924ff706ce1b9be4847" translate="yes" xml:space="preserve">
          <source>Raise the signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3660b4861f2572bc440a888d3943e5053abcfe21" translate="yes" xml:space="preserve">
          <source>Rand</source>
          <target state="translated">Rand</target>
        </trans-unit>
        <trans-unit id="58d888c08aa561f370e38cee976121532a883d71" translate="yes" xml:space="preserve">
          <source>Random</source>
          <target state="translated">Random</target>
        </trans-unit>
        <trans-unit id="4bb417d8cac9e7a0977217618e982ebfd8f74658" translate="yes" xml:space="preserve">
          <source>Random package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1481a4ec9a333d084e80df6831cca7dc013cb6" translate="yes" xml:space="preserve">
          <source>Random._u64_unbiased()</source>
          <target state="translated">Random._u64_unbiased()</target>
        </trans-unit>
        <trans-unit id="b797706957a328dadc69cdcebc0009073feed4be" translate="yes" xml:space="preserve">
          <source>Random.create()</source>
          <target state="translated">Random.create()</target>
        </trans-unit>
        <trans-unit id="a1a121da85442f9d75ce214afdfa2495b0c16bd9" translate="yes" xml:space="preserve">
          <source>Random.has_next()</source>
          <target state="translated">Random.has_next()</target>
        </trans-unit>
        <trans-unit id="253477944a7eea75c0dd83487f7f0c2519b66ee1" translate="yes" xml:space="preserve">
          <source>Random.i128()</source>
          <target state="translated">Random.i128()</target>
        </trans-unit>
        <trans-unit id="5619e7f166986ab0aa87714834debcd58ffdf2f3" translate="yes" xml:space="preserve">
          <source>Random.i16()</source>
          <target state="translated">Random.i16()</target>
        </trans-unit>
        <trans-unit id="33e6c278c010e8e4963f18760343276d5448d01a" translate="yes" xml:space="preserve">
          <source>Random.i32()</source>
          <target state="translated">Random.i32()</target>
        </trans-unit>
        <trans-unit id="5bac2c708455d686b095c61c23caec69bde2808e" translate="yes" xml:space="preserve">
          <source>Random.i64()</source>
          <target state="translated">Random.i64()</target>
        </trans-unit>
        <trans-unit id="ea302dd7a45401a1be452d99f008054f38548de0" translate="yes" xml:space="preserve">
          <source>Random.i8()</source>
          <target state="translated">Random.i8()</target>
        </trans-unit>
        <trans-unit id="66cb34493bcfa6250f2b5cb85214d0a241b81034" translate="yes" xml:space="preserve">
          <source>Random.ilong()</source>
          <target state="translated">Random.ilong()</target>
        </trans-unit>
        <trans-unit id="3618fbec5cd3e73b5a168c56b1d95a6c17088264" translate="yes" xml:space="preserve">
          <source>Random.int()</source>
          <target state="translated">Random.int()</target>
        </trans-unit>
        <trans-unit id="d9620a3cafe04cab9383282c57ca6a9216040f99" translate="yes" xml:space="preserve">
          <source>Random.int_fp_mult()</source>
          <target state="translated">Random.int_fp_mult()</target>
        </trans-unit>
        <trans-unit id="32848802f7d83f6df646b2f96647a61bd3641cfd" translate="yes" xml:space="preserve">
          <source>Random.int_unbiased()</source>
          <target state="translated">Random.int_unbiased()</target>
        </trans-unit>
        <trans-unit id="bf9e67302d950f7a499ffbea9137861af9b7edf6" translate="yes" xml:space="preserve">
          <source>Random.isize()</source>
          <target state="translated">Random.isize()</target>
        </trans-unit>
        <trans-unit id="c9f5d9c67e46f3352550ef7da5e513e59abbdf08" translate="yes" xml:space="preserve">
          <source>Random.next()</source>
          <target state="translated">Random.next()</target>
        </trans-unit>
        <trans-unit id="f79826ebd2d400a689197f0ee6aab0c1a33c42e6" translate="yes" xml:space="preserve">
          <source>Random.real()</source>
          <target state="translated">Random.real()</target>
        </trans-unit>
        <trans-unit id="f3eb8a773ff63a83df388fc9e07d68dd20fbc199" translate="yes" xml:space="preserve">
          <source>Random.shuffle()</source>
          <target state="translated">Random.shuffle()</target>
        </trans-unit>
        <trans-unit id="5b09d80a3acf75bf3885fd18be970d28a0a2d960" translate="yes" xml:space="preserve">
          <source>Random.u128()</source>
          <target state="translated">Random.u128()</target>
        </trans-unit>
        <trans-unit id="bc4744e3adf1c8381a5905aca95485a0cef01748" translate="yes" xml:space="preserve">
          <source>Random.u16()</source>
          <target state="translated">Random.u16()</target>
        </trans-unit>
        <trans-unit id="15641e925ce55fdd7495922ceed4a15be1e48db5" translate="yes" xml:space="preserve">
          <source>Random.u32()</source>
          <target state="translated">Random.u32()</target>
        </trans-unit>
        <trans-unit id="fc9a3b689b3a9a61c7aaf05439ed78a9f8cf46f7" translate="yes" xml:space="preserve">
          <source>Random.u64()</source>
          <target state="translated">Random.u64()</target>
        </trans-unit>
        <trans-unit id="913b1790d0d5c51cf2546161aa133c8090f8918f" translate="yes" xml:space="preserve">
          <source>Random.u8()</source>
          <target state="translated">Random.u8()</target>
        </trans-unit>
        <trans-unit id="86a657ba283d3fdc77caf66977c3401b83536b48" translate="yes" xml:space="preserve">
          <source>Random.ulong()</source>
          <target state="translated">Random.ulong()</target>
        </trans-unit>
        <trans-unit id="c5f8a53e89eeaf452b605339b2760d8d0ffb6ff7" translate="yes" xml:space="preserve">
          <source>Random.usize()</source>
          <target state="translated">Random.usize()</target>
        </trans-unit>
        <trans-unit id="a16c5bbe4bf996740f257aa1e81bd57e4c52c8dd" translate="yes" xml:space="preserve">
          <source>Range</source>
          <target state="translated">Range</target>
        </trans-unit>
        <trans-unit id="4aa133e6c0dafbb693322e68c64f7d6b9a4deac1" translate="yes" xml:space="preserve">
          <source>Range.create()</source>
          <target state="translated">Range.create()</target>
        </trans-unit>
        <trans-unit id="8aec6b6390801db23e466c80d1019aa004545f34" translate="yes" xml:space="preserve">
          <source>Range.has_next()</source>
          <target state="translated">Range.has_next()</target>
        </trans-unit>
        <trans-unit id="6c17b3d25059cb2a0e03152074f8f0fb12005e50" translate="yes" xml:space="preserve">
          <source>Range.is_infinite()</source>
          <target state="translated">Range.is_infinite()</target>
        </trans-unit>
        <trans-unit id="12b92671260b52e9897aed291cec91d240f454c7" translate="yes" xml:space="preserve">
          <source>Range.next()</source>
          <target state="translated">Range.next()</target>
        </trans-unit>
        <trans-unit id="71f75d74409c61f2affcb7d37d4b94f51d8edcbf" translate="yes" xml:space="preserve">
          <source>Range.rewind()</source>
          <target state="translated">Range.rewind()</target>
        </trans-unit>
        <trans-unit id="f31fe56d4a23fb0038d3824cb6152a28a1db54e0" translate="yes" xml:space="preserve">
          <source>Range[optional A: (&lt;a href=&quot;builtin-real&quot;&gt;Real&lt;/a&gt;[A] val &amp;amp; (&lt;a href=&quot;builtin-i8&quot;&gt;I8&lt;/a&gt; val | &lt;a href=&quot;builtin-i16&quot;&gt;I16&lt;/a&gt; val | &lt;a href=&quot;builtin-i32&quot;&gt;I32&lt;/a&gt; val | &lt;a href=&quot;builtin-i64&quot;&gt;I64&lt;/a&gt; val | &lt;a href=&quot;builtin-i128&quot;&gt;I128&lt;/a&gt; val | &lt;a href=&quot;builtin-ilong&quot;&gt;ILong&lt;/a&gt; val | &lt;a href=&quot;builtin-isize&quot;&gt;ISize&lt;/a&gt; val | &lt;a href=&quot;builtin-u8&quot;&gt;U8&lt;/a&gt; val | &lt;a href=&quot;builtin-u16&quot;&gt;U16&lt;/a&gt; val | &lt;a href=&quot;builtin-u32&quot;&gt;U32&lt;/a&gt; val | &lt;a href=&quot;builtin-u64&quot;&gt;U64&lt;/a&gt; val | &lt;a href=&quot;builtin-u128&quot;&gt;U128&lt;/a&gt; val | &lt;a href=&quot;builtin-ulong&quot;&gt;ULong&lt;/a&gt; val | &lt;a href=&quot;builtin-usize&quot;&gt;USize&lt;/a&gt; val | &lt;a href=&quot;builtin-f32&quot;&gt;F32&lt;/a&gt; val | &lt;a href=&quot;builtin-f64&quot;&gt;F64&lt;/a&gt; val))]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852b438f91ad9eb2cdd84419a675a216d543c687" translate="yes" xml:space="preserve">
          <source>Read</source>
          <target state="translated">Read</target>
        </trans-unit>
        <trans-unit id="f375d572d695eb0998b2a7d4066a29ae393510f8" translate="yes" xml:space="preserve">
          <source>Read a chunk of data from stdin. Read a maximum of _chunk_size bytes, send ourself a resume message and stop reading to avoid starving other actors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a47c6804116b77b2c39e794f7a845407d1b3c0a" translate="yes" xml:space="preserve">
          <source>Read an integer from the specified location in this string. The integer value read and the number of characters consumed are reported. The base parameter specifies the base to use, 0 indicates using the prefix, if any, to detect base 2, 10 or 16. If no integer is found at the specified location, then (0, 0) is returned, since no characters have been used. An integer out of range for the target type throws an error. A leading minus is allowed for signed integer types. Underscore characters are allowed throughout the integer and are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fe06d049b08a076388e997ef6e2a1c971e3350" translate="yes" xml:space="preserve">
          <source>Read from stdout or stderr while data is available. If we read 4 kb of data, send ourself a resume message and stop reading, to avoid starving other actors. It's safe to use the same buffer for stdout and stderr because of causal messaging. Events get processed one &lt;em&gt;after&lt;/em&gt; another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7643a02aa4d5bd1fcf583ff9f64373af162c5e" translate="yes" xml:space="preserve">
          <source>Read while data is available, guessing the next packet length as we go. If we read 4 kb of data, send ourself a resume message and stop reading, to avoid starving other actors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1870f9a12e22b34d3977d475847b0cb966e92cdb" translate="yes" xml:space="preserve">
          <source>ReadElement</source>
          <target state="translated">ReadElement</target>
        </trans-unit>
        <trans-unit id="f0f0cc05a6116778b23446912d897754ad74173c" translate="yes" xml:space="preserve">
          <source>ReadElement.apply()</source>
          <target state="translated">ReadElement.apply()</target>
        </trans-unit>
        <trans-unit id="d0455942040a59bf0785e8c64ceb841063594d36" translate="yes" xml:space="preserve">
          <source>ReadElement[A: A]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac801397a699d65036cb4c636bfadcec7e1cb6e" translate="yes" xml:space="preserve">
          <source>ReadSeq</source>
          <target state="translated">ReadSeq</target>
        </trans-unit>
        <trans-unit id="34b08e3123983840f86edf8d9201009bd2f55a77" translate="yes" xml:space="preserve">
          <source>ReadSeq.apply()</source>
          <target state="translated">ReadSeq.apply()</target>
        </trans-unit>
        <trans-unit id="d2f7fb5bda825f21e47b2132ad5c169d20e6f44d" translate="yes" xml:space="preserve">
          <source>ReadSeq.size()</source>
          <target state="translated">ReadSeq.size()</target>
        </trans-unit>
        <trans-unit id="df000d4888344deec8246a8e59df922abcc3ed85" translate="yes" xml:space="preserve">
          <source>ReadSeq.values()</source>
          <target state="translated">ReadSeq.values()</target>
        </trans-unit>
        <trans-unit id="44dfcb7c8edfa23603341d71563a83adb590d527" translate="yes" xml:space="preserve">
          <source>ReadSeq[A: A]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5bbe8292ed1b69e0f95e5bdaa035569a295fd7" translate="yes" xml:space="preserve">
          <source>Reader</source>
          <target state="translated">Reader</target>
        </trans-unit>
        <trans-unit id="70b1bb3f82d278797d6c91935405469ab69fdb30" translate="yes" xml:space="preserve">
          <source>Reader._byte()</source>
          <target state="translated">Reader._byte()</target>
        </trans-unit>
        <trans-unit id="3d4cb0990949e0d81de40230da3197e653191dad" translate="yes" xml:space="preserve">
          <source>Reader._distance_of()</source>
          <target state="translated">Reader._distance_of()</target>
        </trans-unit>
        <trans-unit id="e25f6b9b135d986ecc1bdc09cf96c5fa6cb899d6" translate="yes" xml:space="preserve">
          <source>Reader._peek_byte()</source>
          <target state="translated">Reader._peek_byte()</target>
        </trans-unit>
        <trans-unit id="efa7c9b063caad743588b2d288880659959d610e" translate="yes" xml:space="preserve">
          <source>Reader._search_length()</source>
          <target state="translated">Reader._search_length()</target>
        </trans-unit>
        <trans-unit id="5dda72e08261bc9008893dc5ffe9d75382d164c6" translate="yes" xml:space="preserve">
          <source>Reader.append()</source>
          <target state="translated">Reader.append()</target>
        </trans-unit>
        <trans-unit id="dae5d909742e6b6969dfda8dc07ca7b14c9a65d2" translate="yes" xml:space="preserve">
          <source>Reader.block()</source>
          <target state="translated">Reader.block()</target>
        </trans-unit>
        <trans-unit id="7a9d38f0b408950be95e07b3faa62b3965e124f7" translate="yes" xml:space="preserve">
          <source>Reader.clear()</source>
          <target state="translated">Reader.clear()</target>
        </trans-unit>
        <trans-unit id="f6785c6aabc76fa0e8bea246d58c937e89358fc5" translate="yes" xml:space="preserve">
          <source>Reader.create()</source>
          <target state="translated">Reader.create()</target>
        </trans-unit>
        <trans-unit id="1fecc34bef75116ae166fa5fd93079c796544993" translate="yes" xml:space="preserve">
          <source>Reader.f32_be()</source>
          <target state="translated">Reader.f32_be()</target>
        </trans-unit>
        <trans-unit id="ee0815b7ee0f4b3cebfd77a85aa4d784b7ed893d" translate="yes" xml:space="preserve">
          <source>Reader.f32_le()</source>
          <target state="translated">Reader.f32_le()</target>
        </trans-unit>
        <trans-unit id="e3c11d81b42f0773e282f0595180f0bbb500e42b" translate="yes" xml:space="preserve">
          <source>Reader.f64_be()</source>
          <target state="translated">Reader.f64_be()</target>
        </trans-unit>
        <trans-unit id="ab25e795ebe90ff85348663418bb674f92437d74" translate="yes" xml:space="preserve">
          <source>Reader.f64_le()</source>
          <target state="translated">Reader.f64_le()</target>
        </trans-unit>
        <trans-unit id="72bc8749f5a11d7acc9bd8e16dd0f644cf11d185" translate="yes" xml:space="preserve">
          <source>Reader.i128_be()</source>
          <target state="translated">Reader.i128_be()</target>
        </trans-unit>
        <trans-unit id="265b8eb5ca2fdc825cfb6540d33523cf323cd399" translate="yes" xml:space="preserve">
          <source>Reader.i128_le()</source>
          <target state="translated">Reader.i128_le()</target>
        </trans-unit>
        <trans-unit id="b19bf620a4c70f1e763531558701b084f732417c" translate="yes" xml:space="preserve">
          <source>Reader.i16_be()</source>
          <target state="translated">Reader.i16_be()</target>
        </trans-unit>
        <trans-unit id="64a56b0c492308e5f6e22b74c2a67501440674dc" translate="yes" xml:space="preserve">
          <source>Reader.i16_le()</source>
          <target state="translated">Reader.i16_le()</target>
        </trans-unit>
        <trans-unit id="c4e91275cf9d02aedc29c9ffb7c7e17cd9ba3487" translate="yes" xml:space="preserve">
          <source>Reader.i32_be()</source>
          <target state="translated">Reader.i32_be()</target>
        </trans-unit>
        <trans-unit id="82318ea143b4e995cc062bdd46ca01700cdebd16" translate="yes" xml:space="preserve">
          <source>Reader.i32_le()</source>
          <target state="translated">Reader.i32_le()</target>
        </trans-unit>
        <trans-unit id="31626c1ef1d42dde3abf0704e9bf25aa746c51b8" translate="yes" xml:space="preserve">
          <source>Reader.i64_be()</source>
          <target state="translated">Reader.i64_be()</target>
        </trans-unit>
        <trans-unit id="16af0adbebbf5b596d7a646e8d8b32fab7b9bdca" translate="yes" xml:space="preserve">
          <source>Reader.i64_le()</source>
          <target state="translated">Reader.i64_le()</target>
        </trans-unit>
        <trans-unit id="eca9cd58d76541d9a42c71f1b5434bccde348e69" translate="yes" xml:space="preserve">
          <source>Reader.i8()</source>
          <target state="translated">Reader.i8()</target>
        </trans-unit>
        <trans-unit id="c3ac8feaa8b9cee35e1060e1c6340801289e762c" translate="yes" xml:space="preserve">
          <source>Reader.line()</source>
          <target state="translated">Reader.line()</target>
        </trans-unit>
        <trans-unit id="76c4fd32c8d33a33149d275fe764661f8401c8ab" translate="yes" xml:space="preserve">
          <source>Reader.peek_f32_be()</source>
          <target state="translated">Reader.peek_f32_be()</target>
        </trans-unit>
        <trans-unit id="4bee8a9fe48f40e7e0b929314aeda0d404767764" translate="yes" xml:space="preserve">
          <source>Reader.peek_f32_le()</source>
          <target state="translated">Reader.peek_f32_le()</target>
        </trans-unit>
        <trans-unit id="d5968250186c01c2ebbe3dd283b22748242f44bf" translate="yes" xml:space="preserve">
          <source>Reader.peek_f64_be()</source>
          <target state="translated">Reader.peek_f64_be()</target>
        </trans-unit>
        <trans-unit id="ad15f551e6ca79be91838c5f16da4a502bf3926a" translate="yes" xml:space="preserve">
          <source>Reader.peek_f64_le()</source>
          <target state="translated">Reader.peek_f64_le()</target>
        </trans-unit>
        <trans-unit id="509ed7c6534b91c73e80ea6a1098c5e7c2471daa" translate="yes" xml:space="preserve">
          <source>Reader.peek_i128_be()</source>
          <target state="translated">Reader.peek_i128_be()</target>
        </trans-unit>
        <trans-unit id="2fe3cffbf1dea6b7483f95cc466795276b7bc73d" translate="yes" xml:space="preserve">
          <source>Reader.peek_i128_le()</source>
          <target state="translated">Reader.peek_i128_le()</target>
        </trans-unit>
        <trans-unit id="0d20f87572b9cb12c25ffe69cbabe9c511f77525" translate="yes" xml:space="preserve">
          <source>Reader.peek_i16_be()</source>
          <target state="translated">Reader.peek_i16_be()</target>
        </trans-unit>
        <trans-unit id="03e2b19b0032397a0d90de50a2f674be7ba44a61" translate="yes" xml:space="preserve">
          <source>Reader.peek_i16_le()</source>
          <target state="translated">Reader.peek_i16_le()</target>
        </trans-unit>
        <trans-unit id="7235d8fa9162426cdc51d913eaba7d0271d6747d" translate="yes" xml:space="preserve">
          <source>Reader.peek_i32_be()</source>
          <target state="translated">Reader.peek_i32_be()</target>
        </trans-unit>
        <trans-unit id="4508c2f4da3254f9b1c350973a70f5ba46cb9199" translate="yes" xml:space="preserve">
          <source>Reader.peek_i32_le()</source>
          <target state="translated">Reader.peek_i32_le()</target>
        </trans-unit>
        <trans-unit id="d4c2e75f2852761f4b23c5ba747ffbd20f7a5734" translate="yes" xml:space="preserve">
          <source>Reader.peek_i64_be()</source>
          <target state="translated">Reader.peek_i64_be()</target>
        </trans-unit>
        <trans-unit id="8076c93292b6a3e61a85fc9705fea58bd55fab8d" translate="yes" xml:space="preserve">
          <source>Reader.peek_i64_le()</source>
          <target state="translated">Reader.peek_i64_le()</target>
        </trans-unit>
        <trans-unit id="9c477a0e54083f3ad1bef837c83c1d84f2e02e3b" translate="yes" xml:space="preserve">
          <source>Reader.peek_i8()</source>
          <target state="translated">Reader.peek_i8()</target>
        </trans-unit>
        <trans-unit id="295853f0de534f2a5adca85cdf66dde3a702a27f" translate="yes" xml:space="preserve">
          <source>Reader.peek_u128_be()</source>
          <target state="translated">Reader.peek_u128_be()</target>
        </trans-unit>
        <trans-unit id="be22f14ae8905699eac0eae198a0950064d41d10" translate="yes" xml:space="preserve">
          <source>Reader.peek_u128_le()</source>
          <target state="translated">Reader.peek_u128_le()</target>
        </trans-unit>
        <trans-unit id="1f01bfb3bac7dbfd56f6ceb88b94df4fc85ead96" translate="yes" xml:space="preserve">
          <source>Reader.peek_u16_be()</source>
          <target state="translated">Reader.peek_u16_be()</target>
        </trans-unit>
        <trans-unit id="51fbf32bdf39bf7bf40b1126b250f28a49258099" translate="yes" xml:space="preserve">
          <source>Reader.peek_u16_le()</source>
          <target state="translated">Reader.peek_u16_le()</target>
        </trans-unit>
        <trans-unit id="d2cfd3442c8b3181c6ec98b605704e152f77bd3f" translate="yes" xml:space="preserve">
          <source>Reader.peek_u32_be()</source>
          <target state="translated">Reader.peek_u32_be()</target>
        </trans-unit>
        <trans-unit id="63804c205f4ec2e3ea7706cef1c6b8de1ea3872f" translate="yes" xml:space="preserve">
          <source>Reader.peek_u32_le()</source>
          <target state="translated">Reader.peek_u32_le()</target>
        </trans-unit>
        <trans-unit id="488bc521865c2cad2f4d888dd7da9533e9ef364c" translate="yes" xml:space="preserve">
          <source>Reader.peek_u64_be()</source>
          <target state="translated">Reader.peek_u64_be()</target>
        </trans-unit>
        <trans-unit id="b5d1f783b41421112f5230b314c342413682f90d" translate="yes" xml:space="preserve">
          <source>Reader.peek_u64_le()</source>
          <target state="translated">Reader.peek_u64_le()</target>
        </trans-unit>
        <trans-unit id="9006bedad6d563e95aa0f6e3c4de95e573e42e8d" translate="yes" xml:space="preserve">
          <source>Reader.peek_u8()</source>
          <target state="translated">Reader.peek_u8()</target>
        </trans-unit>
        <trans-unit id="cc363cb60bf91fb86c7af8423b0054527f620e9f" translate="yes" xml:space="preserve">
          <source>Reader.read_until()</source>
          <target state="translated">Reader.read_until()</target>
        </trans-unit>
        <trans-unit id="22fcfd5bdfe3b8b76ff8a953aadac19e39dd61f9" translate="yes" xml:space="preserve">
          <source>Reader.size()</source>
          <target state="translated">Reader.size()</target>
        </trans-unit>
        <trans-unit id="6426c05440cba951bbb8a8bdafe40d8d054a58aa" translate="yes" xml:space="preserve">
          <source>Reader.skip()</source>
          <target state="translated">Reader.skip()</target>
        </trans-unit>
        <trans-unit id="b93c59ec33fc862c53f11705f484885c43a41ebd" translate="yes" xml:space="preserve">
          <source>Reader.u128_be()</source>
          <target state="translated">Reader.u128_be()</target>
        </trans-unit>
        <trans-unit id="42523c8a3748ab05e5d53152669a61463b51dcef" translate="yes" xml:space="preserve">
          <source>Reader.u128_le()</source>
          <target state="translated">Reader.u128_le()</target>
        </trans-unit>
        <trans-unit id="ab88dda374f9f06fc3f06cd2f7c7329b04a57968" translate="yes" xml:space="preserve">
          <source>Reader.u16_be()</source>
          <target state="translated">Reader.u16_be()</target>
        </trans-unit>
        <trans-unit id="72005e5708ba74b1428cd78e1a958d4fb27d5085" translate="yes" xml:space="preserve">
          <source>Reader.u16_le()</source>
          <target state="translated">Reader.u16_le()</target>
        </trans-unit>
        <trans-unit id="44958f50229da6325a39fe637bf4c7256a868d73" translate="yes" xml:space="preserve">
          <source>Reader.u32_be()</source>
          <target state="translated">Reader.u32_be()</target>
        </trans-unit>
        <trans-unit id="f8c0054ad386e7486279a13dfa9a21edca7b23d3" translate="yes" xml:space="preserve">
          <source>Reader.u32_le()</source>
          <target state="translated">Reader.u32_le()</target>
        </trans-unit>
        <trans-unit id="b7605c94f381d1c33f0cc58e1eed587774c17ea2" translate="yes" xml:space="preserve">
          <source>Reader.u64_be()</source>
          <target state="translated">Reader.u64_be()</target>
        </trans-unit>
        <trans-unit id="0204db6ff83b99c4dc416354af5e6d8175ce00c9" translate="yes" xml:space="preserve">
          <source>Reader.u64_le()</source>
          <target state="translated">Reader.u64_le()</target>
        </trans-unit>
        <trans-unit id="1455b924682458f037367683958f1c201e982943" translate="yes" xml:space="preserve">
          <source>Reader.u8()</source>
          <target state="translated">Reader.u8()</target>
        </trans-unit>
        <trans-unit id="68876e645101345cf1fc951263869ee5724dc7d0" translate="yes" xml:space="preserve">
          <source>Reading from stdin is done by registering an &lt;code&gt;InputNotify&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2755293789538b24cd3e2e278f82a4c989b92a15" translate="yes" xml:space="preserve">
          <source>Readline</source>
          <target state="translated">Readline</target>
        </trans-unit>
        <trans-unit id="a7f0bfb44fa210d3c29e7860c1d22c7a49aa6386" translate="yes" xml:space="preserve">
          <source>Readline._add_history()</source>
          <target state="translated">Readline._add_history()</target>
        </trans-unit>
        <trans-unit id="777ca73fc73c490eb1a8c0997f9f05fd886cf017" translate="yes" xml:space="preserve">
          <source>Readline._backspace()</source>
          <target state="translated">Readline._backspace()</target>
        </trans-unit>
        <trans-unit id="7718557c392d45b243b4adc4795ee67fe5aad8a1" translate="yes" xml:space="preserve">
          <source>Readline._clear()</source>
          <target state="translated">Readline._clear()</target>
        </trans-unit>
        <trans-unit id="229c4d203985a2f8016cb6a76aae9935c066137d" translate="yes" xml:space="preserve">
          <source>Readline._delete_prev_word()</source>
          <target state="translated">Readline._delete_prev_word()</target>
        </trans-unit>
        <trans-unit id="bb56e5b6776cf059fdc1997ab2b8e2866ecf2da7" translate="yes" xml:space="preserve">
          <source>Readline._dispatch()</source>
          <target state="translated">Readline._dispatch()</target>
        </trans-unit>
        <trans-unit id="7eb8ec6086de9efbc1f9af22703532ef9ceebff2" translate="yes" xml:space="preserve">
          <source>Readline._handle_line()</source>
          <target state="translated">Readline._handle_line()</target>
        </trans-unit>
        <trans-unit id="ff234c9843df8103fe71e13cfd2773521baa9910" translate="yes" xml:space="preserve">
          <source>Readline._load_history()</source>
          <target state="translated">Readline._load_history()</target>
        </trans-unit>
        <trans-unit id="9b9e315113dafe4a8e915792f101b621f4b81f76" translate="yes" xml:space="preserve">
          <source>Readline._refresh_line()</source>
          <target state="translated">Readline._refresh_line()</target>
        </trans-unit>
        <trans-unit id="da5c1a8b59678c9b4cb6297339d015b21e830c7a" translate="yes" xml:space="preserve">
          <source>Readline._save_history()</source>
          <target state="translated">Readline._save_history()</target>
        </trans-unit>
        <trans-unit id="5695eb58f3cb5437c1c5b6ef967d796870b091ce" translate="yes" xml:space="preserve">
          <source>Readline._swap()</source>
          <target state="translated">Readline._swap()</target>
        </trans-unit>
        <trans-unit id="a872b6fc7e59b8e04826e5f0c7d8fb6a52649683" translate="yes" xml:space="preserve">
          <source>Readline._tab()</source>
          <target state="translated">Readline._tab()</target>
        </trans-unit>
        <trans-unit id="1dfc8d2e56a9978c105eea6d086023f7b6eb97c9" translate="yes" xml:space="preserve">
          <source>Readline.apply()</source>
          <target state="translated">Readline.apply()</target>
        </trans-unit>
        <trans-unit id="724babc787b41c35ae7d075219d775a88c1ca62c" translate="yes" xml:space="preserve">
          <source>Readline.closed()</source>
          <target state="translated">Readline.closed()</target>
        </trans-unit>
        <trans-unit id="0b80db8d717767b696059a4ce215b6f723a1553d" translate="yes" xml:space="preserve">
          <source>Readline.create()</source>
          <target state="translated">Readline.create()</target>
        </trans-unit>
        <trans-unit id="f0018f3216ccd2fad9f54e3608d0cdab09d70d0d" translate="yes" xml:space="preserve">
          <source>Readline.delete()</source>
          <target state="translated">Readline.delete()</target>
        </trans-unit>
        <trans-unit id="9a5a745b8a6188d3d3089b5d4f22afe3deef9f3c" translate="yes" xml:space="preserve">
          <source>Readline.down()</source>
          <target state="translated">Readline.down()</target>
        </trans-unit>
        <trans-unit id="0d18846f47d3814239fe29892c0e637d0c40eee2" translate="yes" xml:space="preserve">
          <source>Readline.end_key()</source>
          <target state="translated">Readline.end_key()</target>
        </trans-unit>
        <trans-unit id="b4f2768f07a51721f3f58d76a135eb2532302c00" translate="yes" xml:space="preserve">
          <source>Readline.fn_key()</source>
          <target state="translated">Readline.fn_key()</target>
        </trans-unit>
        <trans-unit id="ad376ce15d586cdfb0590522135d412be9e2018c" translate="yes" xml:space="preserve">
          <source>Readline.home()</source>
          <target state="translated">Readline.home()</target>
        </trans-unit>
        <trans-unit id="c0edc586cf93737ede0146452f23f8e35a70062c" translate="yes" xml:space="preserve">
          <source>Readline.insert()</source>
          <target state="translated">Readline.insert()</target>
        </trans-unit>
        <trans-unit id="3b9366481e565b1bfbf35467407c09c81f81b00a" translate="yes" xml:space="preserve">
          <source>Readline.left()</source>
          <target state="translated">Readline.left()</target>
        </trans-unit>
        <trans-unit id="a86bb2e53adeca5ea5a7cc5e83bc407e66e3dcb0" translate="yes" xml:space="preserve">
          <source>Readline.page_down()</source>
          <target state="translated">Readline.page_down()</target>
        </trans-unit>
        <trans-unit id="0943fbbcbf78464b7894768858f8b4a19839db25" translate="yes" xml:space="preserve">
          <source>Readline.page_up()</source>
          <target state="translated">Readline.page_up()</target>
        </trans-unit>
        <trans-unit id="876e61374aad08f6bd4eae9eb6f5aef17f3d945d" translate="yes" xml:space="preserve">
          <source>Readline.prompt()</source>
          <target state="translated">Readline.prompt()</target>
        </trans-unit>
        <trans-unit id="58593e6d5edb7907418069f4c15ffa606bd86cd2" translate="yes" xml:space="preserve">
          <source>Readline.right()</source>
          <target state="translated">Readline.right()</target>
        </trans-unit>
        <trans-unit id="b0f262b852ea885db65201fd4890a1ec9d76e610" translate="yes" xml:space="preserve">
          <source>Readline.size()</source>
          <target state="translated">Readline.size()</target>
        </trans-unit>
        <trans-unit id="346416ea5b5ea1cb58f8025dc1ef51081cd368aa" translate="yes" xml:space="preserve">
          <source>Readline.up()</source>
          <target state="translated">Readline.up()</target>
        </trans-unit>
        <trans-unit id="6af3f73551a29d48adccf976dfbf24663231e434" translate="yes" xml:space="preserve">
          <source>ReadlineNotify</source>
          <target state="translated">ReadlineNotify</target>
        </trans-unit>
        <trans-unit id="c0578bae9983bc03e2094b3ebd2bf3eca0ed01c9" translate="yes" xml:space="preserve">
          <source>ReadlineNotify.apply()</source>
          <target state="translated">ReadlineNotify.apply()</target>
        </trans-unit>
        <trans-unit id="c868368116877b063281f7ef4ece52084be63925" translate="yes" xml:space="preserve">
          <source>ReadlineNotify.tab()</source>
          <target state="translated">ReadlineNotify.tab()</target>
        </trans-unit>
        <trans-unit id="e7a0bfe86b70be1f46ad0c8db0c49836bc126b66" translate="yes" xml:space="preserve">
          <source>Reads a U128 from offset. This is only allowed for an array of U8s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042058af1fb3b3fe2f145e01f990e9add9b802e6" translate="yes" xml:space="preserve">
          <source>Reads a U16 from offset. This is only allowed for an array of U8s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b715c02e6f859b78aaa8191eba0422af688c0e" translate="yes" xml:space="preserve">
          <source>Reads a U32 from offset. This is only allowed for an array of U8s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6953379afc6b57fb12b3db8e80d6ec7e6f6dbefa" translate="yes" xml:space="preserve">
          <source>Reads a U64 from offset. This is only allowed for an array of U8s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a43ef4fe104c0b96762759a1ce0779b8dc06d5" translate="yes" xml:space="preserve">
          <source>Reads a U8 from offset. This is only allowed for an array of U8s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e16e5b2c446aea3b142d9320755f82932fc2cdf" translate="yes" xml:space="preserve">
          <source>Real</source>
          <target state="translated">Real</target>
        </trans-unit>
        <trans-unit id="40ed7213eca7be3b7b1799297245539b617ca350" translate="yes" xml:space="preserve">
          <source>Real._value()</source>
          <target state="translated">Real._value()</target>
        </trans-unit>
        <trans-unit id="f89b1be326bfadf0b248e13873e623822931f315" translate="yes" xml:space="preserve">
          <source>Real.add()</source>
          <target state="translated">Real.add()</target>
        </trans-unit>
        <trans-unit id="79bdacf708a7c087730b3cbc0cc9292ffa34929c" translate="yes" xml:space="preserve">
          <source>Real.compare()</source>
          <target state="translated">Real.compare()</target>
        </trans-unit>
        <trans-unit id="b0fc4f08c447d2323fbb66c23c92a1a74376acba" translate="yes" xml:space="preserve">
          <source>Real.create()</source>
          <target state="translated">Real.create()</target>
        </trans-unit>
        <trans-unit id="789985468f10ccb7a61d4614769b288c300fb8f8" translate="yes" xml:space="preserve">
          <source>Real.div()</source>
          <target state="translated">Real.div()</target>
        </trans-unit>
        <trans-unit id="9f33911ad8b51b5be8440126ae86da4c89ea895f" translate="yes" xml:space="preserve">
          <source>Real.divrem()</source>
          <target state="translated">Real.divrem()</target>
        </trans-unit>
        <trans-unit id="eae349ba94a22a63da574952171d91e7fa808d7c" translate="yes" xml:space="preserve">
          <source>Real.eq()</source>
          <target state="translated">Real.eq()</target>
        </trans-unit>
        <trans-unit id="6291da8174ff75c078eece0d54da7f1325e5d37e" translate="yes" xml:space="preserve">
          <source>Real.f32()</source>
          <target state="translated">Real.f32()</target>
        </trans-unit>
        <trans-unit id="d11a4157d275947cbe8dff0f8e1aee2a48140404" translate="yes" xml:space="preserve">
          <source>Real.f32_unsafe()</source>
          <target state="translated">Real.f32_unsafe()</target>
        </trans-unit>
        <trans-unit id="410333f3f2309b47d121d4a6822bf705a4e6dff7" translate="yes" xml:space="preserve">
          <source>Real.f64()</source>
          <target state="translated">Real.f64()</target>
        </trans-unit>
        <trans-unit id="3bc0999c51f094d10e45c55e9bd38b2478a97663" translate="yes" xml:space="preserve">
          <source>Real.f64_unsafe()</source>
          <target state="translated">Real.f64_unsafe()</target>
        </trans-unit>
        <trans-unit id="7b510cb521d9d5c0f10bed37dd1e7b1f6785ba58" translate="yes" xml:space="preserve">
          <source>Real.fld()</source>
          <target state="translated">Real.fld()</target>
        </trans-unit>
        <trans-unit id="e4d964c417c438b914dd3695268917d0c660a792" translate="yes" xml:space="preserve">
          <source>Real.from()</source>
          <target state="translated">Real.from()</target>
        </trans-unit>
        <trans-unit id="a12234b0e64f35952c3972d0e52f0adcacbfd303" translate="yes" xml:space="preserve">
          <source>Real.ge()</source>
          <target state="translated">Real.ge()</target>
        </trans-unit>
        <trans-unit id="917c7d82c92bffd40a4d54e7ec8e5aa359ab63db" translate="yes" xml:space="preserve">
          <source>Real.gt()</source>
          <target state="translated">Real.gt()</target>
        </trans-unit>
        <trans-unit id="b61f200dfb4ac211809058047c3379247563f171" translate="yes" xml:space="preserve">
          <source>Real.hash()</source>
          <target state="translated">Real.hash()</target>
        </trans-unit>
        <trans-unit id="c759b33cc48da53ad38d5d15d8eb78d4bdcf3b97" translate="yes" xml:space="preserve">
          <source>Real.hash64()</source>
          <target state="translated">Real.hash64()</target>
        </trans-unit>
        <trans-unit id="e755d394ef1840bc73bc93a0d18687220e3a7604" translate="yes" xml:space="preserve">
          <source>Real.i128()</source>
          <target state="translated">Real.i128()</target>
        </trans-unit>
        <trans-unit id="3ac7cf669330ce75c54ba3e47c5828e59bbdfcb5" translate="yes" xml:space="preserve">
          <source>Real.i128_unsafe()</source>
          <target state="translated">Real.i128_unsafe()</target>
        </trans-unit>
        <trans-unit id="88f803b3cc7a347068f38379afa3df2776a74dc5" translate="yes" xml:space="preserve">
          <source>Real.i16()</source>
          <target state="translated">Real.i16()</target>
        </trans-unit>
        <trans-unit id="0a41b3a57f1b6ae7e1cf23e5a98b108c937b10bf" translate="yes" xml:space="preserve">
          <source>Real.i16_unsafe()</source>
          <target state="translated">Real.i16_unsafe()</target>
        </trans-unit>
        <trans-unit id="5ef43a4ffff02c6e9b25caac80399b9a9170db35" translate="yes" xml:space="preserve">
          <source>Real.i32()</source>
          <target state="translated">Real.i32()</target>
        </trans-unit>
        <trans-unit id="c808bf159be4db4ab6ea2eef7203a3c1c3988e88" translate="yes" xml:space="preserve">
          <source>Real.i32_unsafe()</source>
          <target state="translated">Real.i32_unsafe()</target>
        </trans-unit>
        <trans-unit id="ae7afe7a385f4ae20e78eafec327d607501eb514" translate="yes" xml:space="preserve">
          <source>Real.i64()</source>
          <target state="translated">Real.i64()</target>
        </trans-unit>
        <trans-unit id="943341364ca4cc3b3fc9d690404bd56672bfa8ab" translate="yes" xml:space="preserve">
          <source>Real.i64_unsafe()</source>
          <target state="translated">Real.i64_unsafe()</target>
        </trans-unit>
        <trans-unit id="3baf7611d3684865bb36ba5714892bd1d9eb64b8" translate="yes" xml:space="preserve">
          <source>Real.i8()</source>
          <target state="translated">Real.i8()</target>
        </trans-unit>
        <trans-unit id="ae8668b02c057f4f4d4db3b617425fd37187a6fd" translate="yes" xml:space="preserve">
          <source>Real.i8_unsafe()</source>
          <target state="translated">Real.i8_unsafe()</target>
        </trans-unit>
        <trans-unit id="ab932510f857d2f6e9bcf20153e3107eff9bfefc" translate="yes" xml:space="preserve">
          <source>Real.ilong()</source>
          <target state="translated">Real.ilong()</target>
        </trans-unit>
        <trans-unit id="285baedc91b636f685d51eb34583704f5c8b30b6" translate="yes" xml:space="preserve">
          <source>Real.ilong_unsafe()</source>
          <target state="translated">Real.ilong_unsafe()</target>
        </trans-unit>
        <trans-unit id="75052c1fcb9fe19869d7c90c5a57fa56eda8a904" translate="yes" xml:space="preserve">
          <source>Real.isize()</source>
          <target state="translated">Real.isize()</target>
        </trans-unit>
        <trans-unit id="279af71e3b009209d3bc6aa174d0b78c39f4faf2" translate="yes" xml:space="preserve">
          <source>Real.isize_unsafe()</source>
          <target state="translated">Real.isize_unsafe()</target>
        </trans-unit>
        <trans-unit id="a3b39201cd8afbac48f77ef658887c7147c4e567" translate="yes" xml:space="preserve">
          <source>Real.le()</source>
          <target state="translated">Real.le()</target>
        </trans-unit>
        <trans-unit id="de9bc20e0589016b471d9fcbf235390978ccceb2" translate="yes" xml:space="preserve">
          <source>Real.lt()</source>
          <target state="translated">Real.lt()</target>
        </trans-unit>
        <trans-unit id="4a2a1e0b0e44b3b6e7c2f96f14baf3d58968ce05" translate="yes" xml:space="preserve">
          <source>Real.max()</source>
          <target state="translated">Real.max()</target>
        </trans-unit>
        <trans-unit id="340b26fade0c3153ee6f0c15dd25fe98dd647a46" translate="yes" xml:space="preserve">
          <source>Real.max_value()</source>
          <target state="translated">Real.max_value()</target>
        </trans-unit>
        <trans-unit id="1e92dee950d7fbc2922222e20a1151a839670461" translate="yes" xml:space="preserve">
          <source>Real.min()</source>
          <target state="translated">Real.min()</target>
        </trans-unit>
        <trans-unit id="a38e8be7a20ad852cea87c9bba4d706315a24482" translate="yes" xml:space="preserve">
          <source>Real.min_value()</source>
          <target state="translated">Real.min_value()</target>
        </trans-unit>
        <trans-unit id="6086f0d9a404befc7ee1f9cb5e099bfaca061f04" translate="yes" xml:space="preserve">
          <source>Real.mod()</source>
          <target state="translated">Real.mod()</target>
        </trans-unit>
        <trans-unit id="1dacb9a0713ccedee8875c7022a64ee050915831" translate="yes" xml:space="preserve">
          <source>Real.mul()</source>
          <target state="translated">Real.mul()</target>
        </trans-unit>
        <trans-unit id="0404e989889430c78c756fd4c5d1e1d87c611438" translate="yes" xml:space="preserve">
          <source>Real.ne()</source>
          <target state="translated">Real.ne()</target>
        </trans-unit>
        <trans-unit id="a4957676f5438ace1ec9ff42def23f4e014a9778" translate="yes" xml:space="preserve">
          <source>Real.neg()</source>
          <target state="translated">Real.neg()</target>
        </trans-unit>
        <trans-unit id="05b8d592d83faacebf65dd2f4d9558ee2c5c1690" translate="yes" xml:space="preserve">
          <source>Real.rem()</source>
          <target state="translated">Real.rem()</target>
        </trans-unit>
        <trans-unit id="0b15c27494c2c9d96190c6357cc3e6c07295c6bd" translate="yes" xml:space="preserve">
          <source>Real.string()</source>
          <target state="translated">Real.string()</target>
        </trans-unit>
        <trans-unit id="06dde64e80dcb5583bed83c7c13e8aa92ced5bed" translate="yes" xml:space="preserve">
          <source>Real.sub()</source>
          <target state="translated">Real.sub()</target>
        </trans-unit>
        <trans-unit id="dab64c7f748b54f79ca783eea3bc083ab4a80c32" translate="yes" xml:space="preserve">
          <source>Real.u128()</source>
          <target state="translated">Real.u128()</target>
        </trans-unit>
        <trans-unit id="b6b68484fe587d834096a9c93604a9ad127befd1" translate="yes" xml:space="preserve">
          <source>Real.u128_unsafe()</source>
          <target state="translated">Real.u128_unsafe()</target>
        </trans-unit>
        <trans-unit id="17211a7f2cdab826e439342b833173fabea150d1" translate="yes" xml:space="preserve">
          <source>Real.u16()</source>
          <target state="translated">Real.u16()</target>
        </trans-unit>
        <trans-unit id="71da3068f00163820c7659cdb7c67c32d8b02a04" translate="yes" xml:space="preserve">
          <source>Real.u16_unsafe()</source>
          <target state="translated">Real.u16_unsafe()</target>
        </trans-unit>
        <trans-unit id="aab34d5a8430aa88964eadecaaa0a3a896441f2a" translate="yes" xml:space="preserve">
          <source>Real.u32()</source>
          <target state="translated">Real.u32()</target>
        </trans-unit>
        <trans-unit id="329599b864da33970859743820f65bef109d6b00" translate="yes" xml:space="preserve">
          <source>Real.u32_unsafe()</source>
          <target state="translated">Real.u32_unsafe()</target>
        </trans-unit>
        <trans-unit id="c698c5856e4b3fb6d3fcd276fb5370677510418f" translate="yes" xml:space="preserve">
          <source>Real.u64()</source>
          <target state="translated">Real.u64()</target>
        </trans-unit>
        <trans-unit id="ffca0e7ea0711dc603f86aa7ee1e671367fc7973" translate="yes" xml:space="preserve">
          <source>Real.u64_unsafe()</source>
          <target state="translated">Real.u64_unsafe()</target>
        </trans-unit>
        <trans-unit id="b65a4634dd4948dc0bba06839d3827062abcff08" translate="yes" xml:space="preserve">
          <source>Real.u8()</source>
          <target state="translated">Real.u8()</target>
        </trans-unit>
        <trans-unit id="3a6c6730c0c7c78193550d7ea8102f51a5a5de2b" translate="yes" xml:space="preserve">
          <source>Real.u8_unsafe()</source>
          <target state="translated">Real.u8_unsafe()</target>
        </trans-unit>
        <trans-unit id="263661dc5e3e4b19266591a786072ea89cba3322" translate="yes" xml:space="preserve">
          <source>Real.ulong()</source>
          <target state="translated">Real.ulong()</target>
        </trans-unit>
        <trans-unit id="550ceb8238eb246c5f8628c0580a2a518eba8276" translate="yes" xml:space="preserve">
          <source>Real.ulong_unsafe()</source>
          <target state="translated">Real.ulong_unsafe()</target>
        </trans-unit>
        <trans-unit id="e8b371edfdfceb4aab0a2e86e4202a9f223fc950" translate="yes" xml:space="preserve">
          <source>Real.usize()</source>
          <target state="translated">Real.usize()</target>
        </trans-unit>
        <trans-unit id="65e3a626c5096e12c1357d459a5917b56a8d96d1" translate="yes" xml:space="preserve">
          <source>Real.usize_unsafe()</source>
          <target state="translated">Real.usize_unsafe()</target>
        </trans-unit>
        <trans-unit id="cb00d7f4695ead74284a895e30bafa9ab7db014e" translate="yes" xml:space="preserve">
          <source>Real[A: &lt;a href=&quot;index&quot;&gt;Real&lt;/a&gt;[A] val]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645d09c88e5aaeee9fcebd162d8b048834123f22" translate="yes" xml:space="preserve">
          <source>Recalculates the string length. This is only needed if the string is changed via an FFI call. If a null terminator byte is not found within the allocated length, the size will not be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88ad9245118df538061a308e9cb4a909e3fb362" translate="yes" xml:space="preserve">
          <source>Receive input from an ANSITerm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc25ebde4ee0916100e799997c487db2c55a4ed" translate="yes" xml:space="preserve">
          <source>Receives finished lines. The next prompt is set by fulfilling the promise. If the promise is rejected, readline will stop handling input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114ba7bc35b0dd3be560b01f3413ad54c05933a7" translate="yes" xml:space="preserve">
          <source>Receives input from stdin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7877d579e075419c4fc82e6959c02da519b15b7" translate="yes" xml:space="preserve">
          <source>Receives input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f817411c388ad754e85df14acb0f53139f7d673" translate="yes" xml:space="preserve">
          <source>Record an error with the given message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1427f0baf510d5c779c5e5754c9e202610440bc" translate="yes" xml:space="preserve">
          <source>Red background.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a1ae52fc253956c1ffec479ab4875de1da968e" translate="yes" xml:space="preserve">
          <source>Red text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e177a6cc7ffc4b5ad35cb65b30af7a5213bf0f4" translate="yes" xml:space="preserve">
          <source>Refresh the line on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caacc66c89018e22ff79f7bfce616a1f62740a8c" translate="yes" xml:space="preserve">
          <source>Registrar</source>
          <target state="translated">Registrar</target>
        </trans-unit>
        <trans-unit id="763d88ec767d7eb1a37fb055cfd6cf4f885be7ec" translate="yes" xml:space="preserve">
          <source>Registrar._fetch()</source>
          <target state="translated">Registrar._fetch()</target>
        </trans-unit>
        <trans-unit id="8b6f98966edec7b18ea80685a0af717f9d2c7cd1" translate="yes" xml:space="preserve">
          <source>Registrar.apply()</source>
          <target state="translated">Registrar.apply()</target>
        </trans-unit>
        <trans-unit id="b2f59e7736dcca03f1ac522d35fe6d6e074e1364" translate="yes" xml:space="preserve">
          <source>Registrar.create()</source>
          <target state="translated">Registrar.create()</target>
        </trans-unit>
        <trans-unit id="51a106b4f3578d3f42190741e1189ec6600f7d0a" translate="yes" xml:space="preserve">
          <source>Registrar.remove()</source>
          <target state="translated">Registrar.remove()</target>
        </trans-unit>
        <trans-unit id="ae9cbca6b1ab8d9b5e4a6428b70f526a98794fab" translate="yes" xml:space="preserve">
          <source>Registrar.update()</source>
          <target state="translated">Registrar.update()</target>
        </trans-unit>
        <trans-unit id="2b03b59293b6fc7101306f5d9ae1e96327bb419a" translate="yes" xml:space="preserve">
          <source>Reject</source>
          <target state="translated">Reject</target>
        </trans-unit>
        <trans-unit id="ba749f54b46b583de01cb5521139dcfd23fb5226" translate="yes" xml:space="preserve">
          <source>Reject the promise after the given expiration in nanoseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56515bd9aaf6fc86f43893516caa0001875ce181" translate="yes" xml:space="preserve">
          <source>Reject the promise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce817b515801ecc40720741355d6ab18d8d1eb73" translate="yes" xml:space="preserve">
          <source>Reject.apply()</source>
          <target state="translated">Reject.apply()</target>
        </trans-unit>
        <trans-unit id="bda44c4b33d8bba25e3832f8b071df6e1a27c090" translate="yes" xml:space="preserve">
          <source>RejectAlways</source>
          <target state="translated">RejectAlways</target>
        </trans-unit>
        <trans-unit id="89b48380673427b1f490664a1b35a8586aa96bf5" translate="yes" xml:space="preserve">
          <source>RejectAlways.apply()</source>
          <target state="translated">RejectAlways.apply()</target>
        </trans-unit>
        <trans-unit id="02187da2b97c1a1c8a2a27da294a5db871b08b71" translate="yes" xml:space="preserve">
          <source>RejectAlways.create()</source>
          <target state="translated">RejectAlways.create()</target>
        </trans-unit>
        <trans-unit id="d414cad5357164d16d8ed46ed6e471b01f97972e" translate="yes" xml:space="preserve">
          <source>RejectAlways[A: &lt;a href=&quot;builtin-any&quot;&gt;Any&lt;/a&gt; #share]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea82873e21ccf6b9864ff1faa43fbc47e186de7d" translate="yes" xml:space="preserve">
          <source>Reject[A: &lt;a href=&quot;builtin-any&quot;&gt;Any&lt;/a&gt; #share]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c92d52a56b05344b8b542abc4ac6dd4629a206" translate="yes" xml:space="preserve">
          <source>Remove a byte from the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c8b088d45e73b219e78165e44635a48ac04336" translate="yes" xml:space="preserve">
          <source>Remove a mapping. This only takes effect if provided key currently maps to the provided value. If the key maps to some other value (perhaps after updating), the mapping won't be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebc3f45ed161787bdb2504f9d716754baa152b8" translate="yes" xml:space="preserve">
          <source>Remove a node from a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71520772cfc06d4863c702cbc53f69aa56fdd6b0" translate="yes" xml:space="preserve">
          <source>Remove a value from the set and return it. Raises an error if the value wasn't in the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b96177cb5208f17c3117674c3bffbfd735cf425" translate="yes" xml:space="preserve">
          <source>Remove a value from the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a90698e2083ad7785230f60980d2c5c1ccb7e1" translate="yes" xml:space="preserve">
          <source>Remove all elements from the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05245aa9b96a8317899e461f447e6ba0708e7b34" translate="yes" xml:space="preserve">
          <source>Remove all elements from the heap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b09a518a4a9b4d337aff6605fc4365f56b91d14" translate="yes" xml:space="preserve">
          <source>Remove all elements from the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86e22a0c76b6927f28832e93cf4b4bceb111f7d" translate="yes" xml:space="preserve">
          <source>Remove all entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1431fcd5f0498c4f27635c3d37fa05e3aa7785a3" translate="yes" xml:space="preserve">
          <source>Remove all instances of s from the string. Returns the count of removed instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd0a53d1d7b96d1e8966c05085732be0e6de50f" translate="yes" xml:space="preserve">
          <source>Remove all leading and trailing characters from the string that are in s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ad1bc858232d59b6479e0bb8fae5116b16ad17" translate="yes" xml:space="preserve">
          <source>Remove all leading characters within the string that are in s. By default, leading whitespace is removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd34edbc3e40f8409757b8ac8287d7df7c388f01" translate="yes" xml:space="preserve">
          <source>Remove all nodes from that and append them to this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3deb168c36cab5592d39b8546888d5c73769780a" translate="yes" xml:space="preserve">
          <source>Remove all nodes from that and prepend them to this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f3ef5a414726fb9b2e1f680368be025fcb27ee2" translate="yes" xml:space="preserve">
          <source>Remove all trailing characters within the string that are in s. By default, trailing whitespace is removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7fc9fef3f87fb9918f8136cb7187bb518f35d6" translate="yes" xml:space="preserve">
          <source>Remove an element from the beginning of the array. The removed element is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b429dad4b46f95a6821b7d9b5a7407b3dd44d9f3" translate="yes" xml:space="preserve">
          <source>Remove an element from the end of the array. The removed element is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4956dc14ff67cec5c11069d08044cc557c9e476d" translate="yes" xml:space="preserve">
          <source>Remove elements in this which are also in that. Add elements in that which are not in this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e552ddcd203a0cef7170c5f6a914e83796958c3c" translate="yes" xml:space="preserve">
          <source>Remove everything that is in that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c8e41161b030794ded08ea559475eba8e5c18b" translate="yes" xml:space="preserve">
          <source>Remove everything that isn't in that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78066e86d767ae09b6f1c8d34c9ab81dc550b9c8" translate="yes" xml:space="preserve">
          <source>Remove n elements from the array, beginning at index i.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="378cad22ad190080d1c1ce394ac2d5508eeb89e3" translate="yes" xml:space="preserve">
          <source>Remove pending timers from this timing wheel and put them on the pending list supplied. Needs the current time and the elapsed time since the previous advance. Returns true if the next timing wheel in the hierarchy should be advanced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b442709e4be5c4868b2dfee03265e3d3ceedf4" translate="yes" xml:space="preserve">
          <source>Remove the file or directory. The directory contents will be removed as well, recursively. Symlinks will be removed but not traversed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc8817dd7efa819dc5e95e6f1f559746acfd8ad" translate="yes" xml:space="preserve">
          <source>Remove the highest priority value from the heap and return it. For max-heaps, the greatest item will be returned. For min-heaps, the smallest item will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d60a19fece1662b269bed11871d26b4e7dc56f" translate="yes" xml:space="preserve">
          <source>Remove the i-th node, raising an error if the index is out of bounds. The removed node is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393161c63a86e7d9ce18c3b3fabb2c8553741c5d" translate="yes" xml:space="preserve">
          <source>Remove the item from the node, if we have one, otherwise raise an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155133769e3e4bb96828d686708d55b5e2a8c153" translate="yes" xml:space="preserve">
          <source>Remove the rights in that from this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262154246d84188d8b05f4018076b61a46215258" translate="yes" xml:space="preserve">
          <source>Remove the timer from any list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac2c206932d2a25eef60a3c6274fcfbc41edbd1" translate="yes" xml:space="preserve">
          <source>Removes a byte from the beginning of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf70e3c7633f25d6f671a0b8b0b00d065bf004e" translate="yes" xml:space="preserve">
          <source>Removes a value from the head of the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7977ccd6de76be098afde773eeca809f041c20" translate="yes" xml:space="preserve">
          <source>Removes a value from the tail of the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a3996114cea39c9cdb749bd7d15e04f33282a1" translate="yes" xml:space="preserve">
          <source>Removes all elements from the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2149179cbfa996b71e490bda469ae8fca18a6a" translate="yes" xml:space="preserve">
          <source>Removes an actor from the set of things to be disposed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262cea4eec52eaf8d77751bd4b9faee270c91212" translate="yes" xml:space="preserve">
          <source>Removes an element from the beginning of the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5c0cb7aef4583bd45b1b54e5ee1cad8a787bd1" translate="yes" xml:space="preserve">
          <source>Removes an element from the end of the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74c4b411e801400d801942919314109023a36bf" translate="yes" xml:space="preserve">
          <source>Rename a file or directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e43c0d58c1126f745de6dae172735eacd8c9a20" translate="yes" xml:space="preserve">
          <source>Rename source (which is relative to this directory) to target (which is relative to the &lt;code&gt;to&lt;/code&gt; directory).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b954c85415e22ff98ae9864b3de834e9f4ed0d" translate="yes" xml:space="preserve">
          <source>Renders the help message as a String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d47d7c3509f7df90cf08ec45e5aa11d7525abd87" translate="yes" xml:space="preserve">
          <source>Repeatedly cycle through the values from the iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f712031062fd2f73b064b3625d2c7e1f445bfa3c" translate="yes" xml:space="preserve">
          <source>Replace multiple separators with a single separator. Convert / to the OS separator. Remove instances of . from the path. Remove instances of .. and the preceding path element from the path. The result will have no trailing slash unless it is a root directory. If the result would be empty, &quot;.&quot; will be returned instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e115dcb16977f960f7725ad9eed30a80643c02e3" translate="yes" xml:space="preserve">
          <source>Replace the item and return the previous one. Raise an error if we have no previous value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe5d31a58780267fb0cb7bd8979b9eb1f76de81" translate="yes" xml:space="preserve">
          <source>Replace up to n occurrences of &lt;code&gt;from&lt;/code&gt; in &lt;code&gt;this&lt;/code&gt; with &lt;code&gt;to&lt;/code&gt;. If n is 0, all occurrences will be replaced. Returns the count of replaced occurrences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d57c679be400f33533bce09cebeade5a135a71" translate="yes" xml:space="preserve">
          <source>Replaces the i-th element of the sequence. Returns the previous value. Raises an error if the index is out of bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d789a8025a12cef551ad897273ac96d67dc9743a" translate="yes" xml:space="preserve">
          <source>Repopulates the state array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43345b004647f3bd84696bbcef680bcb614dacbf" translate="yes" xml:space="preserve">
          <source>Report the test exclusion group, returning an empty string for none. The default body returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c523cc2868530ff137f2f2dec9c5f0e37c9e0f67" translate="yes" xml:space="preserve">
          <source>Report the test label, returning an empty string for none. It can be later use to filter tests which we want to run, by labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85639a5144488289295c5eb7d1e450fd3f8c130b" translate="yes" xml:space="preserve">
          <source>Report the test name, which is used when printing test results and on the command line to select tests to run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17962f0d64a37dd86eed17863e3536ea6bfa0eb" translate="yes" xml:space="preserve">
          <source>Represents a location in a Pony source file, as reported by &lt;code&gt;__loc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f845e43741790592c2d8f98b185b9334bd37345" translate="yes" xml:space="preserve">
          <source>Represents a proleptic Gregorian date and time, without specifying a time zone. The day of month, month, day of week, and day of year are all indexed from 1, i.e. January is 1, Monday is 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e748cdbf504a0d10bff93773ed46510800a44bc2" translate="yes" xml:space="preserve">
          <source>Represents an IPv4 or IPv6 address. The family field indicates the address type. The addr field is either the IPv4 address or the IPv6 flow info. The addr1-4 fields are the IPv6 address, or invalid for an IPv4 address. The scope field is the IPv6 scope, or invalid for an IPv4 address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed6bfb41051ed5b74447340f3c2e29d11e99a7c" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="translated">Required</target>
        </trans-unit>
        <trans-unit id="6023dfbfc2708be7e8a2b0c98d246d1abdae3621" translate="yes" xml:space="preserve">
          <source>Required.create()</source>
          <target state="translated">Required.create()</target>
        </trans-unit>
        <trans-unit id="b218d86f55928ca85f8db5dab2f1987d65f1a80b" translate="yes" xml:space="preserve">
          <source>Required.eq()</source>
          <target state="translated">Required.eq()</target>
        </trans-unit>
        <trans-unit id="20faa41a328f70184b95c2b4764916ac6956ec78" translate="yes" xml:space="preserve">
          <source>Required.ne()</source>
          <target state="translated">Required.ne()</target>
        </trans-unit>
        <trans-unit id="19cac9ed5c5ada1c56b65b8a6b52d1145a23370c" translate="yes" xml:space="preserve">
          <source>Reserve space for len bytes. An additional byte will be reserved for the null terminator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b328fc1822f780a1ec7efbe27cddfcc5c4e602e" translate="yes" xml:space="preserve">
          <source>Reserve space for len elements, including whatever elements are already in the array. Array space grows geometrically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0bbb705a10a5a2251e8922b3003b437515c2d9" translate="yes" xml:space="preserve">
          <source>Reserve space for len elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8edcea47e0a5ed2912d52e0a6f0693eb58869da" translate="yes" xml:space="preserve">
          <source>Reserve space for size bytes in &lt;code&gt;_current&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95688b2caf4e9e065660d7d2649df25b015f1b7" translate="yes" xml:space="preserve">
          <source>Reserve space for size' chunks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8f59a887bb5ac4277e764f49dfa2bc3ed471be" translate="yes" xml:space="preserve">
          <source>Resets all colours and text styles to the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41ef786ddf7e1fb6867c55b7f197b3e2d6ad1e0" translate="yes" xml:space="preserve">
          <source>Resize the read buffer if it is empty or smaller than the next payload size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20e7e7ac2055efe3b1aa4ce24fc928fda5d11aa" translate="yes" xml:space="preserve">
          <source>Resize to len elements, populating previously empty elements with random memory. This is only allowed for an array of numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383319a6b6dde80ce1e8b223a2507d87b8471c1b" translate="yes" xml:space="preserve">
          <source>Resume reading on file descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317f2a72edcbbf47f20193816be05e3dd9a0bb82" translate="yes" xml:space="preserve">
          <source>Resume reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd0c2d1bd911dcf4794a1607a074b0385fdde41" translate="yes" xml:space="preserve">
          <source>Resume writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1fafdd7f3ac9bc54547d1769a8a0ae0bffc9e6d" translate="yes" xml:space="preserve">
          <source>Retrieve index i.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97336dc147a7bbecb0bdbe401d6dfbe3afc2b3ae" translate="yes" xml:space="preserve">
          <source>Return QPC and QPF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aae27e18e24e26d8d0f1892cc80fd40c8e59421" translate="yes" xml:space="preserve">
          <source>Return a &quot;s&quot; or an empty string depending on whether the given number is 1. For use when printing possibly plural words, eg &quot;test&quot; or &quot;tests&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f2108729ec145e939ca719868bfef3c4ddc7b2" translate="yes" xml:space="preserve">
          <source>Return a FileInfo for some path relative to this directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157d3c3f858cc8df836a5bc9d9720c93ccdbe78a" translate="yes" xml:space="preserve">
          <source>Return a FileInfo for this directory. Raise an error if the fd is invalid or if we don't have FileStat permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="195e806d66863b1ac71fcd9fbe4ad9db47dc8bd0" translate="yes" xml:space="preserve">
          <source>Return a POSIX time. Treats the date as UTC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12be141cea7f05efe5f7ca7280af17c4503436ea" translate="yes" xml:space="preserve">
          <source>Return a UTF32 representation of the character at the given offset and the number of bytes needed to encode that character. If the offset does not point to the beginning of a valid UTF8 encoding, return 0xFFFD (the unicode replacement character) and a length of one. Raise an error if the offset is out of bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14c07300b4daa2f952a9f4632bebce43f0457c2" translate="yes" xml:space="preserve">
          <source>Return a \n or \r\n terminated line as a string. By default the newline is not included in the returned string, but it is removed from the buffer. Set &lt;code&gt;keep_line_breaks&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; to keep the line breaks in the returned line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7e0de5ef219f327787a79050c6600ecdfb6a93" translate="yes" xml:space="preserve">
          <source>Return a block as a contiguous chunk of memory. Will throw an error if you request a block larger than what is currently stored in the &lt;code&gt;Reader&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a0dd0cc58e36f69217e88a8abd537bf2dd169d" translate="yes" xml:space="preserve">
          <source>Return a cleaned path before the last separator, or the whole path if there is no separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d8c1d354120c90333a29e5664b707757359efd" translate="yes" xml:space="preserve">
          <source>Return a clock time on linux and bsd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbaabf648b09bbdadcb85c145f5efb25ae8590b" translate="yes" xml:space="preserve">
          <source>Return a new path relative to this one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba4884574b51cea50a7c60660d88cd5c5c3c2cdd" translate="yes" xml:space="preserve">
          <source>Return a pointer to the n-th element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d326f612619dee550e7824ecde5509293b77cd09" translate="yes" xml:space="preserve">
          <source>Return a promise that is fulfilled when either promise is fulfilled, resulting in a tuple of its value and the other promise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f4de0e6df05b0702054510adb1d56e19b864d4" translate="yes" xml:space="preserve">
          <source>Return a set with elements that are in either this or that, but not both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9367e45ff3cf1776255e755a0948b802d683edc7" translate="yes" xml:space="preserve">
          <source>Return a set with the elements of both this and that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d243108dbaef808b5c4e91ee4b73bf5225a7b482" translate="yes" xml:space="preserve">
          <source>Return a set with the elements of this that are not in that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3629d961cfd606cc83a4939e046daed4037da468" translate="yes" xml:space="preserve">
          <source>Return a set with the elements that are in both this and that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d55b157254bd8b25a659e5f96e6faad47fa30f7b" translate="yes" xml:space="preserve">
          <source>Return a set with the value added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3edf7d872d7abf45324f2635fc1b27f28a8a31c7" translate="yes" xml:space="preserve">
          <source>Return a set with the value removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4d4e6ef59bfd5a4c9b0eaa2eed118cd5ee2e84" translate="yes" xml:space="preserve">
          <source>Return a shared portion of this array, covering &lt;code&gt;from&lt;/code&gt; until &lt;code&gt;to&lt;/code&gt;. Both the original and the new array are immutable, as they share memory. The operation does not allocate a new array pointer nor copy elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f81b9f5615c9fbceac5491cc0261011619f8c70" translate="yes" xml:space="preserve">
          <source>Return a shared portion of this string, covering &lt;code&gt;from&lt;/code&gt; until &lt;code&gt;to&lt;/code&gt;. Both the original and the new string are immutable, as they share memory. The operation does not allocate a new string pointer nor copy elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9987ee9456979e24c71b1ac7c896b1d7f7f6b7dc" translate="yes" xml:space="preserve">
          <source>Return a slot number and whether or not it's currently occupied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80ea09be503cf3d3d75c1c0475cef3fd9729c43" translate="yes" xml:space="preserve">
          <source>Return a string from a pointer to a null-terminated cstring without making a copy. The data is not copied. This must be done only with C-FFI functions that return pony_alloc'd character arrays. The pointer is scanned for the first null byte, which will be interpreted as the null terminator. Note that the scan is unbounded; the pointed to data must be null-terminated within the allocated array to preserve memory safety. If a null pointer is given then an empty string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3fc3e98d2cf726087cdf37c5cc1dea77c77de7" translate="yes" xml:space="preserve">
          <source>Return a string from binary pointer data without making a copy. This must be done only with C-FFI functions that return pony_alloc'd character arrays. If a null pointer is given then an empty string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7011be82647d13499a604328d3e49d19760054" translate="yes" xml:space="preserve">
          <source>Return a string that is a concatenation of the strings in data, using this as a separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc63fbb86b837aa715536bcce6f2c76def5d3bf7" translate="yes" xml:space="preserve">
          <source>Return a string that is a concatenation of this and that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67e712d0dc50db87fd38543d79ce506ab66285f" translate="yes" xml:space="preserve">
          <source>Return a tag pointer to the n-th element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edec90e6e2b4798e856882d2cf42be72d6af221a" translate="yes" xml:space="preserve">
          <source>Return a vector that is a clone of a portion of this vector. The range is exclusive and saturated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587c04c8f174fd4120a683e8b0b6bd9cbb22e5fa" translate="yes" xml:space="preserve">
          <source>Return a vector with an element deleted. Elements after this are moved down by one index, compacting the vector. An out of bounds index raises an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4686e4d39db03e850b6ee73b71d8cdb0ea9f080f" translate="yes" xml:space="preserve">
          <source>Return a vector with an element inserted. Elements after this are moved up by one index, extending the vector. An out of bounds index raises an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c874e7ead3094c7d63a4a9233659fb89b6b66a63" translate="yes" xml:space="preserve">
          <source>Return a vector with n elements removed, beginning at index i.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa5c48c104f5f49b09b761ae551e0dca5a8594a" translate="yes" xml:space="preserve">
          <source>Return a vector with the elements in reverse order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b56d6b6e9022f829bc0f8fc4eb23fbf82c9f45" translate="yes" xml:space="preserve">
          <source>Return a vector with the i-th element changed, raising an error if the index is out of bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3cb1414a7f8a7142140267543e7ff602cdda89c" translate="yes" xml:space="preserve">
          <source>Return a vector with the value added to the end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33eb3beab968b5ffa9f79c46b81a47d718c2950" translate="yes" xml:space="preserve">
          <source>Return a vector with the value at the end removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8e9db9c327d37f304734ad8fa00fdbc3c86085" translate="yes" xml:space="preserve">
          <source>Return a vector with the values of the given iterator added to the end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036955d2c530e6141cbd0811974b40aeb44700b1" translate="yes" xml:space="preserve">
          <source>Return an array of buffered ByteSeqs and reset the Writer's buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a5dd046840d7e2f1ec3d5c1b5384c818278fbe" translate="yes" xml:space="preserve">
          <source>Return an iterator for the elements in the heap. The order of elements is arbitrary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ccef7a3eca96db1b17b7f4927688136a4a672c4" translate="yes" xml:space="preserve">
          <source>Return an iterator for the first n elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dcaca5d72c4500310fb381b951112254c96694c" translate="yes" xml:space="preserve">
          <source>Return an iterator on the nodes in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656fe273918043026225ec01377946f7c81e1859" translate="yes" xml:space="preserve">
          <source>Return an iterator on the values in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32be970a8234efd377eb5b7e199ac212ea528e63" translate="yes" xml:space="preserve">
          <source>Return an iterator over the (index, value) pairs in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fde7360bc3151e64d6079e2b75a70ff47dfd323" translate="yes" xml:space="preserve">
          <source>Return an iterator over the (index, value) pairs in the vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1415e4c8dc65db14978a8a700353cbc3c7f42ce0" translate="yes" xml:space="preserve">
          <source>Return an iterator over the bytes in the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91d941482d2f3430a19119d9993add0f2f06909" translate="yes" xml:space="preserve">
          <source>Return an iterator over the codepoints in the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d1165467a94275f5f98e3dff9e65143c7c690b" translate="yes" xml:space="preserve">
          <source>Return an iterator over the indices in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6561a27fa556d5d3dd88904619d2cdf423a20f0" translate="yes" xml:space="preserve">
          <source>Return an iterator over the indices in the vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92e803b3fc42bf7f2113db7436e0157c8f2e69e" translate="yes" xml:space="preserve">
          <source>Return an iterator over the keys and values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18557f6bf374f7d4877e3b69f7ca087ad4194072" translate="yes" xml:space="preserve">
          <source>Return an iterator over the keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee55864c7bdc6d4b4745d2e0876162cc53dc78cf" translate="yes" xml:space="preserve">
          <source>Return an iterator over the values in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c7804c613a7c981ae1e377edfb58f4d647e3dc" translate="yes" xml:space="preserve">
          <source>Return an iterator over the values in the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650ffd28da0ef490dccd295b5101f5e62fe8c536" translate="yes" xml:space="preserve">
          <source>Return an iterator over the values in the vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a347cc13072d55ab3abfbb4f2f427064ec19c09" translate="yes" xml:space="preserve">
          <source>Return an iterator over the values of the iterators produced from the application of the given function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d39e33afc8f1f0ea5873c891607826121efc3fd" translate="yes" xml:space="preserve">
          <source>Return an iterator over the values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91be773d66469c6699fa9420591bce6f530120d4" translate="yes" xml:space="preserve">
          <source>Return an iterator that only returns items that match the predicate &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da61687f8c84f6034041996101cfa9b0ffd3f99e" translate="yes" xml:space="preserve">
          <source>Return an iterator that returns values while the predicate &lt;code&gt;f&lt;/code&gt; returns true. This iterator short-circuits the first time that &lt;code&gt;f&lt;/code&gt; returns false or raises an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aeb5024c3088ac11d7a3aade0cd63782e8fe403" translate="yes" xml:space="preserve">
          <source>Return an iterator where each item's value is the application of the given function to the value in the original iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538f53ceb0cb268128386b60da41d230537cc037" translate="yes" xml:space="preserve">
          <source>Return an iterator which applies &lt;code&gt;f&lt;/code&gt; to each element. If &lt;code&gt;None&lt;/code&gt; is returned, then the iterator will try again by applying &lt;code&gt;f&lt;/code&gt; to the next element. Otherwise, the value of type &lt;code&gt;B&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6233e78d89b5e0fcd503268a4dab9202d2f1e70" translate="yes" xml:space="preserve">
          <source>Return false if at least one value of the iterator fails to match the predicate &lt;code&gt;f&lt;/code&gt;. This method short-circuits at the first value where the predicate returns false, otherwise true is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99d1d3ac2b696c8d19ad271e942acc566c9dd42" translate="yes" xml:space="preserve">
          <source>Return tab completion possibilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62bd04a4a8f8b1e528b43aae31723020a2cfcb2e" translate="yes" xml:space="preserve">
          <source>Return the amount of key-value pairs in the Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22648b3ad749736020640ce5e559281f80b9ed94" translate="yes" xml:space="preserve">
          <source>Return the amount of values in the root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf02c00a1ba5dee0be6a1f5b2527522531035f1" translate="yes" xml:space="preserve">
          <source>Return the amount of values in the vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bce2383089631330c293c646304e47444394c22" translate="yes" xml:space="preserve">
          <source>Return the bound IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d84dd1ff24dcc4c046d9f6aef78f91a5fab7aed" translate="yes" xml:space="preserve">
          <source>Return the current cursor position in the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e3b5b29e7523ca25f8247d845da7ab9cbc892e" translate="yes" xml:space="preserve">
          <source>Return the equivalent canonical absolute path. Raise an error if there isn't one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ddf8a599d27a9b6d249b385eeb0b9f8725b155c" translate="yes" xml:space="preserve">
          <source>Return the file extension, i.e. the part after the last dot as long as that dot is after all separators. Return an empty string for no extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b8b78f0bb8329307b7022baf436b1df0244209" translate="yes" xml:space="preserve">
          <source>Return the highest priority item in the heap. For max-heaps, the greatest item will be returned. For min-heaps, the smallest item will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6173931fd2d71767fab0ff687def8280b049075" translate="yes" xml:space="preserve">
          <source>Return the index of n-th instance of &lt;code&gt;s&lt;/code&gt; in the string starting from the end. The &lt;code&gt;offset&lt;/code&gt; represents the highest index to included in the search. Raise an error if there is no n-th occurrence of &lt;code&gt;s&lt;/code&gt; or &lt;code&gt;s&lt;/code&gt; is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf385160445dcd00d3ec40e8086d562d01ea3e5" translate="yes" xml:space="preserve">
          <source>Return the index of the n-th instance of s in the string starting from the beginning. Raise an error if there is no n-th occurrence of s or s is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89afb215e4955ddea0fe4bd29c73a66e70fe118" translate="yes" xml:space="preserve">
          <source>Return the item, if we have one, otherwise raise an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f1c6ebbd5cfeb9bd8cc7825b05599de26feab1" translate="yes" xml:space="preserve">
          <source>Return the last value of the iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2598e969b8afbd8f39c67fb1aa0b555279d7e23" translate="yes" xml:space="preserve">
          <source>Return the local IP address. If this TCPConnection is closed then the address returned is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78159af11258f2e886d1079c0374675a745b7f6" translate="yes" xml:space="preserve">
          <source>Return the next node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c72d7ac83bd8d17d6375e8482d7964731467de9" translate="yes" xml:space="preserve">
          <source>Return the next time at which the timing wheels should be advanced. This is adjusted for slop, so it yields nanoseconds. If no events are pending, this returns -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ca20f4b32f7f9aa9268164dcef688b20e08261" translate="yes" xml:space="preserve">
          <source>Return the nth value in the iterator that satisfies the predicate &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a1dfc1116b07ac0ad87ba022f6cb5f56e31fee" translate="yes" xml:space="preserve">
          <source>Return the nth value of the iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35bf4eb34852e5603767d9407ff1fb85e9518ba6" translate="yes" xml:space="preserve">
          <source>Return the number of available bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f2ba9e3c51014cdb4f2b713b0b85ea4dbeef46" translate="yes" xml:space="preserve">
          <source>Return the number of elements in the heap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77cfdb575b4f9dee24f25c085b1d5bd7ce3d7ea2" translate="yes" xml:space="preserve">
          <source>Return the number of elements in the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="404a6e2867f72c57d1b10f4cd4b207490ed3ae6d" translate="yes" xml:space="preserve">
          <source>Return the number of values in the iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1939444868a39f1db7490a5658b9efb86ee50e56" translate="yes" xml:space="preserve">
          <source>Return the path after the last separator, or the whole path if there is no separator. If &lt;code&gt;with_ext&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the extension as defined by the &lt;code&gt;ext()&lt;/code&gt; method will be omitted from the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb6d1d9907d1de66fa58891eea701e06f7a24b3" translate="yes" xml:space="preserve">
          <source>Return the path list separator as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfcebb856d9e995f300fc041880a432fd40f2e57" translate="yes" xml:space="preserve">
          <source>Return the path separator as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f90783d92d1c82b78a9905d568ebe708e3111c" translate="yes" xml:space="preserve">
          <source>Return the previous node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244c59dde422e729a51b9d24de033125d20c7f8e" translate="yes" xml:space="preserve">
          <source>Return the remote IP address. If this TCPConnection is closed then the address returned is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44cc4ddd8615c22044503591956b5c9966e08857" translate="yes" xml:space="preserve">
          <source>Return the size of a single element in an array of type A.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0fc2dc52d8addb036e2a1b528c654fc0421ee73" translate="yes" xml:space="preserve">
          <source>Return the slot for a given time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1dc4ba33bdb703c75acc0a11f3d6302a728d95" translate="yes" xml:space="preserve">
          <source>Return the sum of &lt;code&gt;count&lt;/code&gt; rolls of a die with the given number of &lt;code&gt;sides&lt;/code&gt;. The die is numbered from 1 to &lt;code&gt;sides&lt;/code&gt;. For example, count = 2 and sides = 6 will return a value between 2 and 12.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de122810e57f642aa04f59432e3c84355a93dd0d" translate="yes" xml:space="preserve">
          <source>Return the total length of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f36c0096a84fdb1878c9471e976bce7aea6c7d2" translate="yes" xml:space="preserve">
          <source>Return the underlying C-style pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a245e1a5e18bfb52be7057eb06547e4e660410" translate="yes" xml:space="preserve">
          <source>Return the value if it is in the set, otherwise raise an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50895231321874349cf57e093af898f2ba259633" translate="yes" xml:space="preserve">
          <source>Return the value if its in the set, otherwise raise an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dbc51064e1f98820ffb02a254cf4c73f2428dae" translate="yes" xml:space="preserve">
          <source>Return true for a null pointer, false for anything else.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9388e0282b8c4fe59e4f4945ed5984a66968ea" translate="yes" xml:space="preserve">
          <source>Return true if at least one value of the iterator matches the predicate &lt;code&gt;f&lt;/code&gt;. This method short-circuits at the first value where the predicate returns true, otherwise false is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ad8f8c4c939404311a468f9802dad32312c8ae" translate="yes" xml:space="preserve">
          <source>Return true if every element in that is also in this, and this has more elements than that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a03dcb656ac81cc120820b9e02e4678a2db5c0" translate="yes" xml:space="preserve">
          <source>Return true if every element in that is also in this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d13df88e82da2045962ce1be3860f7a649ac8ba" translate="yes" xml:space="preserve">
          <source>Return true if every element in this is also in that, and this has fewer elements than that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926214569ddb6210034c86e0c8efa05aa69a30a2" translate="yes" xml:space="preserve">
          <source>Return true if every element in this is also in that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67bf3400a5bc3229f82470df39a25131b44e78be" translate="yes" xml:space="preserve">
          <source>Return true if the path is an absolute path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243795e8c7da803bdbda94fccc294c106e51bc2e" translate="yes" xml:space="preserve">
          <source>Return true if the string is null-terminated and safe to pass to an FFI function that doesn't accept a size argument, expecting a null-terminator. This method checks that there is a null byte just after the final position of populated bytes in the string, but does not check for other null bytes which may be present earlier in the content of the string. If you need a null-terminated copy of this string, use the clone method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ffdbf89e89d39f263054eed25226bec8ec7dc4b" translate="yes" xml:space="preserve">
          <source>Return true if there is a next node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2378036e1197d30b5dfe403b12774f654e3e1225" translate="yes" xml:space="preserve">
          <source>Return true if there is a previous node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367ae577e15c57c06b10954b3ebd4f5c03e6a48d" translate="yes" xml:space="preserve">
          <source>Return true if this address is less than that address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68845cbff6852ad3bbf5755e7b971637fd390de" translate="yes" xml:space="preserve">
          <source>Return true if this address is that address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b37a4bc38ba89c8ffad41535ac24d6705a6c563" translate="yes" xml:space="preserve">
          <source>Return true if this and that contain the same elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59266b9616254d1255b4b1567efc9f2c89a65eb1" translate="yes" xml:space="preserve">
          <source>Return true to reschedule the timer (if it has an interval), or false to cancel the timer (even if it has an interval).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9582a02f141fc4b345b2936eba691cd0654efebc" translate="yes" xml:space="preserve">
          <source>Returns</source>
          <target state="translated">Returns</target>
        </trans-unit>
        <trans-unit id="01bd03abc60d1db8cc27f6e43ac9f4bcf2288258" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;false&lt;/code&gt; if this Iterator is exhausted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5409a4299b0f531734e6cec5a2cb745a81355b1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if data could be read from the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0936662ad6386e9bea1a5cde77ebc06ada67f6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if this Iterator is not yet exhausted. That means that a value returned from a subsequent call to &lt;code&gt;next()&lt;/code&gt; is a valid part of this iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41ab9f990dfff366e5021296dceba87370030bc" translate="yes" xml:space="preserve">
          <source>Returns IPV4 address (&lt;code&gt;_addr&lt;/code&gt; field in the class) if &lt;code&gt;ip4()&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;. If &lt;code&gt;ip4()&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt; then the contents are invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="639d545f0f1375799552a1d753ea1d5149a2f4f5" translate="yes" xml:space="preserve">
          <source>Returns IPV6 address as the 4-tuple (say &lt;code&gt;a&lt;/code&gt;). &lt;code&gt;a._1 = _addr1&lt;/code&gt; // Bits 0-32 of the IPv6 address in host byte order. &lt;code&gt;a._2 = _addr2  // Bits 33-64 of the IPv6 address in host byte order.&lt;/code&gt;a._3 = _addr3 // Bits 65-96 of the IPv6 address in host byte order. `a._4 = _addr4 // Bits 97-128 of the IPv6 address in host byte order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b53e55ea3c1f506343e270f7770b80c00869ac3" translate="yes" xml:space="preserve">
          <source>Returns IPv6 scope identifier: Unicast, Anycast, Multicast and unassigned scopes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d88adebcff45fcc2a8fc1895ada244fe7f3fa15" translate="yes" xml:space="preserve">
          <source>Returns a 64-bit hash of the address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df03739f973ba71f11cb1002bb9b8ed0b04b6812" translate="yes" xml:space="preserve">
          <source>Returns a Bool indicating if the list is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7c52513d0cf01631570a2dfa53483d0501b68c" translate="yes" xml:space="preserve">
          <source>Returns a Bool indicating if the list is non-empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3936e392de0a0bb24f25b5c22c1c2b84dd13fcd0" translate="yes" xml:space="preserve">
          <source>Returns a C compatible pointer to a null-terminated version of the string, safe to pass to an FFI function that doesn't accept a size argument, expecting a null-terminator. If the underlying string is already null terminated, this is returned; otherwise the string is copied into a new, null-terminated allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d35fb1e9451e7e86b3538bdc0d05e283b46376" translate="yes" xml:space="preserve">
          <source>Returns a C compatible pointer to the underlying string allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2faafdb95ff58ed22c52b0322305a41f661d753e" translate="yes" xml:space="preserve">
          <source>Returns a byte array that is unique to this compiled Pony binary, for the purposes of comparing before deserialising any data from that source. It is statistically impossible for two serialisation-incompatible Pony binaries to have the same serialise signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d9bae8af50c71f8a706f6d9bf15a0fa17b71e7" translate="yes" xml:space="preserve">
          <source>Returns a cleaned, absolute path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ffdd5525af35fcffa94357ca6b49a467e9c0cb" translate="yes" xml:space="preserve">
          <source>Returns a copy of the string repeated &lt;code&gt;num&lt;/code&gt; times with an optional separator added inbetween repeats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da4f6abc2de86e0135385ee99a0407d84c62d2d" translate="yes" xml:space="preserve">
          <source>Returns a copy of the string repeated &lt;code&gt;num&lt;/code&gt; times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2a2bb602a9c98aa11b2dcee4c8acc85bec39f3" translate="yes" xml:space="preserve">
          <source>Returns a copy of the string. The resulting string is null-terminated even if the original is not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11796a7a9f04e4dda021c7852f4b274a13524bd3" translate="yes" xml:space="preserve">
          <source>Returns a formated help string for this arg.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f907797c6d7c58d298382923a78d2a8becd305c6" translate="yes" xml:space="preserve">
          <source>Returns a formated help string for this command and all of its arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810913b2384860a3539ded82e64fdc179b2cee5d" translate="yes" xml:space="preserve">
          <source>Returns a formated help string for this option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b81e0c0dd80617ba8a10084d9992b4f7ddedf9f" translate="yes" xml:space="preserve">
          <source>Returns a hash of the address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21675623749a902801ca11d36b86fa3ae34e37bd" translate="yes" xml:space="preserve">
          <source>Returns a list that has h as a head and t as a tail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d70622a378412751e283c01b0c941babbb4166" translate="yes" xml:space="preserve">
          <source>Returns a lower case version of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f833c5aea08e6c0acb8208b64966b6a9452dfe0e" translate="yes" xml:space="preserve">
          <source>Returns a map by name of the child commands of this command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad13c9f7c62d954a50b681d3b5565491d2551a34" translate="yes" xml:space="preserve">
          <source>Returns a map by name of the named options of this command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4646dc9283b2d421f344599b1797c531af213f" translate="yes" xml:space="preserve">
          <source>Returns a path such that Path.join(to, Path.rel(to, target)) == target. Raises an error if this isn't possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9f7af421f8aa228567b15449c600c5123e4355" translate="yes" xml:space="preserve">
          <source>Returns a pseudo-random base, suitable as a temporary file name or directory name, but not guaranteed to not already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcb32484554953ce1d34037758fe8261529413d2" translate="yes" xml:space="preserve">
          <source>Returns a representational string for this command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422c577890e544c1cf7450f664761e176f486c63" translate="yes" xml:space="preserve">
          <source>Returns a reversed version of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0fb46a0c636e804172ee1948ef17b61b2f7bf3" translate="yes" xml:space="preserve">
          <source>Returns a substring. Index range [&lt;code&gt;from&lt;/code&gt; .. &lt;code&gt;to&lt;/code&gt;) is half-open. Returns an empty string if nothing is in the range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce7ffc782bac729f50c9b092f30a0153c043f76" translate="yes" xml:space="preserve">
          <source>Returns a version of the string with the given range deleted. Index range [&lt;code&gt;from&lt;/code&gt; .. &lt;code&gt;to&lt;/code&gt;) is half-open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0018c950decf9c0def6492c72b1fdeb42bbe5f64" translate="yes" xml:space="preserve">
          <source>Returns a version of the string with the given string inserted at the given offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f952d6b157d4f81ce405926e934bbeebffa937a" translate="yes" xml:space="preserve">
          <source>Returns all unprocessed command line arguments. After parsing all options, this will only include positional arguments, potentially unrecognised and ambiguous options and invalid arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77df344e4297ece8439c236bad09a1c31b16812" translate="yes" xml:space="preserve">
          <source>Returns an Array[U8] iso that reuses the underlying data pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39d02b83ce2a1803822b4e1d9e3b2d68806d3d4b" translate="yes" xml:space="preserve">
          <source>Returns an Array[U8] that reuses the underlying data pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e409bbd0e26332fe65b442e4ab034e8a38ef488b" translate="yes" xml:space="preserve">
          <source>Returns an array of the positional arguments of this command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b85cf82237006f2238f7b5cb928262e5c7524d8" translate="yes" xml:space="preserve">
          <source>Returns an empty iterator over the elements of the empty list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165497f2fd5fb66359de5b2e54619f09361f9883" translate="yes" xml:space="preserve">
          <source>Returns an empty list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b103f692f94c7f7927cb38740ada492b9e0a9e" translate="yes" xml:space="preserve">
          <source>Returns an error, since Nil has no head.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe416183e8a1e109b6e5ed01cf8be125d57e9d2d" translate="yes" xml:space="preserve">
          <source>Returns an error, since Nil has no tail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a570157bc1725175d9d96375361113d096a082c" translate="yes" xml:space="preserve">
          <source>Returns an iterator for reading lines from the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f528af4d0ba860943dff74c86f9484115cc21181" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the elements of the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7785361eb9fc75c7bc42ea17f075db6cc7986a20" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the elements of the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745de120c78fcc12dcc4ec3e530f168a7e9dcf5f" translate="yes" xml:space="preserve">
          <source>Returns an iterator over the elements of the sequence. Note that this iterates over this-&amp;gt;A, not A.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dabe9fe01fa38df799a42aa5c89358e53613ec08" translate="yes" xml:space="preserve">
          <source>Returns an upper case version of the string. Currently only knows ASCII case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74b81e455c7de2ca49f4a066604ff8c5e5cf0a2" translate="yes" xml:space="preserve">
          <source>Returns false if the file wasn't opened with write permission. Returns false and closes the file if not all the bytes were written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1960568803570a098834d95d04190417a0a278" translate="yes" xml:space="preserve">
          <source>Returns false if the sets contain the same elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b0940279be8897852f6f4a621c8ca56d20cac9" translate="yes" xml:space="preserve">
          <source>Returns lines without trailing line breaks. Advances the file cursor to the end of each line returned from &lt;code&gt;next&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eefb63e5943cd6ec0787d69de70af49dffddf13" translate="yes" xml:space="preserve">
          <source>Returns port number in host byte order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce4baaad466d8b0005ec740f3489f43ed31722ca" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;family&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f9486a1c83356896d0dd676402259f9ed7a031" translate="yes" xml:space="preserve">
          <source>Returns the Arg by name, defaulting to a fake Arg if unknown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed17fc50d5d730819e61e6f69375fab2e2bf5e87" translate="yes" xml:space="preserve">
          <source>Returns the Option by name, defaulting to a fake Option if unknown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d2fba34a04523e17a867a7e916c639006df36f" translate="yes" xml:space="preserve">
          <source>Returns the arg value as a Bool, defaulting to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196268a69ebf33ed3dfe47d45e504d79a41281b1" translate="yes" xml:space="preserve">
          <source>Returns the arg value as a ReadSeq[String], defaulting to empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7322dfe446d445ea387530b2b6c1125ff1ed91" translate="yes" xml:space="preserve">
          <source>Returns the arg value as a String, defaulting to empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91359deba6fdce743e15506a27cb34ddfdaee097" translate="yes" xml:space="preserve">
          <source>Returns the arg value as an F64, defaulting to 0.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d675bd24a63f15ea0c691581ea8fb0425c84f6e3" translate="yes" xml:space="preserve">
          <source>Returns the arg value as an I64, defaulting to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a89aef0a1fde62da0b8ca511ee0deaa494af1b5" translate="yes" xml:space="preserve">
          <source>Returns the arg value as an U64, defaulting to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4443c12705b87a1361524e6fdc47c29a8547ce" translate="yes" xml:space="preserve">
          <source>Returns the bit encoding of the set flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cabbaf947b82121dd4d82300a2f171fc353fe8ef" translate="yes" xml:space="preserve">
          <source>Returns the byte at the given offset. Raise an error if the offset is out of bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c38163e2764af090e8190d2daa5864be3db020" translate="yes" xml:space="preserve">
          <source>Returns the description for this arg.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d77daa7ea5b86142a0208f15b196cc0ab3ca755" translate="yes" xml:space="preserve">
          <source>Returns the description for this command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50929479146fb4cba20b5130dedc5bbdba1638d" translate="yes" xml:space="preserve">
          <source>Returns the description for this option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a756ec65305ea0bdec30efdefefa6124215bcd47" translate="yes" xml:space="preserve">
          <source>Returns the full name of this command, with its parents prefixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c159b2dc13ae9d4e62d4fb7814468f63aec23ea6" translate="yes" xml:space="preserve">
          <source>Returns the head of the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7a9ce850b3f2fc7e5d1c3199f632bc94e8d768" translate="yes" xml:space="preserve">
          <source>Returns the host and service name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35967303a34c1453df8d5767874a0417ca6a0d87" translate="yes" xml:space="preserve">
          <source>Returns the i-th byte. Raise an error if the index is out of bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076b8b981ef9ec189412f9b7961a6309b0832728" translate="yes" xml:space="preserve">
          <source>Returns the i-th element of the list. Errors if the index is out of bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4184008ec6b8508e71c8d3ac8ff0824f035c42f6" translate="yes" xml:space="preserve">
          <source>Returns the i-th element of the sequence. For the empty list this call will always error because any index will be out of bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3abf2599e0665da5e7c60571859032844cd5a088" translate="yes" xml:space="preserve">
          <source>Returns the i-th element of the sequence. Raises an error if the index is out of bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b7a3c0f46f67ca82646284242ec06958173da4" translate="yes" xml:space="preserve">
          <source>Returns the i-th element of the sequence. Raises an error if the index is out of bounds. Note that this returns this-&amp;gt;A, not A.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae8fdb25a9b16b08cae9df4a5bcb8ad88ab63d9" translate="yes" xml:space="preserve">
          <source>Returns the key and value at a given index. Raise an error if the index is not populated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac502f63e9599d8a51659f39e0170f1ed09b12f3" translate="yes" xml:space="preserve">
          <source>Returns the last error code set for this File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c512f9f84bffaa19878e1ae30c4fc3b1dc44f7c0" translate="yes" xml:space="preserve">
          <source>Returns the length of the string data in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62d1aba407c59cbdbfc5ed04b6f819fe9ba1eed" translate="yes" xml:space="preserve">
          <source>Returns the list node pointing to the timer. Used to schedule the timer in a queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94732e1efd322a158e520cbaf76158bcac9c9e2" translate="yes" xml:space="preserve">
          <source>Returns the name of the help command, which defaults to &quot;help&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca883311c12428cc8dc8d9c4b46dd798fa9181e7" translate="yes" xml:space="preserve">
          <source>Returns the name of this arg.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724c0667006c2f911acfec6b32b03c5dddc408e1" translate="yes" xml:space="preserve">
          <source>Returns the name of this command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="662f85d83a1db0a86320228d550ba94e6242f73d" translate="yes" xml:space="preserve">
          <source>Returns the name of this option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b96342f4bb7214285adc60d0d772a87592b7f09" translate="yes" xml:space="preserve">
          <source>Returns the next entry, or raises an error if there isn't one. If entries are added during iteration, this may not return all entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72ae98fe9a22da7fc12c0c3ca68b71f8220925a" translate="yes" xml:space="preserve">
          <source>Returns the next expiration time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0808328ee8555db2d5618be419dc5cde8b29eb4" translate="yes" xml:space="preserve">
          <source>Returns the next key, or raises an error if there isn't one. If keys are added during iteration, this may not return all keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f184f1d2131d967861fa309016951be50126ae9" translate="yes" xml:space="preserve">
          <source>Returns the next line in the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e70414bc3572a3912bc156368a4e4e15fe1131" translate="yes" xml:space="preserve">
          <source>Returns the next promise in the chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61acbfae1f8e21f0f9ff721ba65d50458f4d1a4" translate="yes" xml:space="preserve">
          <source>Returns the next value, or raises an error if there isn't one. If values are added during iteration, this may not return all values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6294dba1a41cc5a3ca7d506403b2d4a3be3c597" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fbeee8c0c5dce6960aa81c9f7716ab8eaca7c5e" translate="yes" xml:space="preserve">
          <source>Returns the number of items in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461177dfa24ef7abe77d6f3f85f5bcbad77ee029" translate="yes" xml:space="preserve">
          <source>Returns the number of unicode code points in the string between the two offsets. Index range [&lt;code&gt;from&lt;/code&gt; .. &lt;code&gt;to&lt;/code&gt;) is half-open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2af210fcb4ed128d977495e8826046bd672eb1d" translate="yes" xml:space="preserve">
          <source>Returns the option value as a Bool, defaulting to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e738308345746bac80cb7729acd5ece86ab3c63" translate="yes" xml:space="preserve">
          <source>Returns the option value as a ReadSeq[String], defaulting to empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e35af4963fe67de54b18d33237b8c61c837dc1f" translate="yes" xml:space="preserve">
          <source>Returns the option value as a String, defaulting to empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e63949bb9ece3ae43b7c8eb320f792de254605" translate="yes" xml:space="preserve">
          <source>Returns the option value as an F64, defaulting to 0.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48813f405a3655180cbbaeab3c3ac2c5095afa09" translate="yes" xml:space="preserve">
          <source>Returns the option value as an I64, defaulting to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7d4b12d47389f43a03308f10bb55b360ea9d8e" translate="yes" xml:space="preserve">
          <source>Returns the option value as an U64, defaulting to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2895af8b64301a688bddc860b7b0b9d743bf402" translate="yes" xml:space="preserve">
          <source>Returns the program's working directory. Setting the working directory is not supported, as it is not concurrency-safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83fecd0e9bd0bcffed4a075fa862e1b1083fde1" translate="yes" xml:space="preserve">
          <source>Returns the size of the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88a39cedada6303849229672dc20fe5245db4f5d" translate="yes" xml:space="preserve">
          <source>Returns the space available for data, not including the null terminator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe418b4884b74a4e6925b15b4ddaaf713eeb8098" translate="yes" xml:space="preserve">
          <source>Returns the spec for this command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104e43e3d6b13b3e0922ba9aa1e5ffa27ec8187a" translate="yes" xml:space="preserve">
          <source>Returns the tail of the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f5ddf4b622bf5af8d65c670e9f9077671dc5af" translate="yes" xml:space="preserve">
          <source>Returns the value at a given index. Raise an error if the index is not populated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc113112780afb7f78a4a53d0c418f5bc7cc67d6" translate="yes" xml:space="preserve">
          <source>Returns the value that we set the key to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1b74bfde57dd91158b83a6def3dc271516be23" translate="yes" xml:space="preserve">
          <source>Returns the value, the same as &lt;code&gt;insert&lt;/code&gt;, allowing 'insert_if_absent' to be used as a drop-in replacement for &lt;code&gt;insert&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7cba0d97cb27def92583bfe615360932de2404" translate="yes" xml:space="preserve">
          <source>Returns true for an IPv4 address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d331832082efb107324ac312c27c159673d0256d" translate="yes" xml:space="preserve">
          <source>Returns true for an IPv6 address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b59993542a024fbc230daedabc15547a9ed59e6" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;this&lt;/code&gt; is null (ie apply would raise an error).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9d8d6368c7bd6522810391665c8557c6b97594" translate="yes" xml:space="preserve">
          <source>Returns true if at least one element satisfies the provided predicate, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e949a725b38780e3bfb937268f1dcd90a3b66263" translate="yes" xml:space="preserve">
          <source>Returns true if contains s as a substring, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92ea0ab555e591581cf0fd3574b69bd30c49ed8" translate="yes" xml:space="preserve">
          <source>Returns true if every element in that is also in this, and this has more elements than that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0962bf3de326e218afc2a16b6d22a5bad62bf73" translate="yes" xml:space="preserve">
          <source>Returns true if every element in that is also in this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb7719243f63329d18f2d229606fe6fa49cf5bf" translate="yes" xml:space="preserve">
          <source>Returns true if every element in this is also in that, and this has fewer elements than that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eed05b0e030a9186d9d6e30cff6ad892a8a0222" translate="yes" xml:space="preserve">
          <source>Returns true if every element in this is also in that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26154b1022723420a210f5ba67006f705dd99450" translate="yes" xml:space="preserve">
          <source>Returns true if every element satisfies the provided predicate, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3849f8dab4ffb91d311b586ed66f7bda9c6d456" translate="yes" xml:space="preserve">
          <source>Returns true if the array contains &lt;code&gt;value&lt;/code&gt;, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8fa5d85d47b734c259c124ca89f96904554032" translate="yes" xml:space="preserve">
          <source>Returns true if the event should be disposed of.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11add0338f0b977b2444fb61f8a278c7ceabf9a" translate="yes" xml:space="preserve">
          <source>Returns true if the file is currently open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e38edd9dff1b662849bb7eeed9c4f19730efd3" translate="yes" xml:space="preserve">
          <source>Returns true if the flag is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c5aeaedb316a86593c169c73b3c84900aa1b8c" translate="yes" xml:space="preserve">
          <source>Returns true if the flags contain the oneshot flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f8d26e2d630449aefcca9435add72a8e0739c9" translate="yes" xml:space="preserve">
          <source>Returns true if the flags contain the readable flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b67be53148a5cf80ddfcbdbff58ccdd5454b00c" translate="yes" xml:space="preserve">
          <source>Returns true if the flags contain the writeable flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ab29355dc5424c299e191653f450adb6c40f36" translate="yes" xml:space="preserve">
          <source>Returns true if the flags set on this are a strict subset of the flags set on that. Flags is only partially ordered, so lt is not the opposite of ge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528eeee4ec78d11784b2ec6a0516285f0808a28a" translate="yes" xml:space="preserve">
          <source>Returns true if the flags set on this are a struct superset of the flags set on that. Flags is only partially ordered, so gt is not the opposite of le.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd980be3407bc8da66dc8315276da4d2f648aaa8" translate="yes" xml:space="preserve">
          <source>Returns true if the flags set on this are a subset of the flags set on that or they are the same. Flags is only partially ordered, so le is not the opposite of te.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95c37078022121ee2cddbaf70f67eddb7f1763e" translate="yes" xml:space="preserve">
          <source>Returns true if the flags set on this are a superset of the flags set on that or they are the same. Flags is only partially ordered, so ge is not the opposite of lt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e020afce26d79508f74fa4ef93bbfa8c1ff64b1d" translate="yes" xml:space="preserve">
          <source>Returns true if the host is a literal IPv4 address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de07ce7f7bb93a08c62a798f85c2df205c919f0" translate="yes" xml:space="preserve">
          <source>Returns true if the host is a literal IPv6 address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cca8b0bf719b0ebf2b028494e951636c1759173" translate="yes" xml:space="preserve">
          <source>Returns true if the list contains the provided element, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fa5cbcfc01899b09427c45808b4abd66c5e760" translate="yes" xml:space="preserve">
          <source>Returns true if the path exists. Returns false for a broken symlink.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5253fd8f59658ebfd481ae48fc7c23b6affcb00b" translate="yes" xml:space="preserve">
          <source>Returns true if the sets contain the same elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13764d40eb4a2fd261159c6cebefa476aac2d0e2" translate="yes" xml:space="preserve">
          <source>Returns true if the substring s is present at the given offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412a66db354b70ed420023191f9af7bb7c9a7615" translate="yes" xml:space="preserve">
          <source>Returns true if the two strings have the same contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf47ff0d0859856e86fa1cdfc17eea6bf121d221" translate="yes" xml:space="preserve">
          <source>Returns true if the vector contains &lt;code&gt;value&lt;/code&gt;, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4316681042c62e4ec0732f9f6625003d5f770780" translate="yes" xml:space="preserve">
          <source>Returns true if this has the same flags set as that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dacfc518009c1518c07f36c170867d3abbec673" translate="yes" xml:space="preserve">
          <source>Returns true if this is lexically less than or equal to that. Needs to be made UTF-8 safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c1e1460e12dad0d708a4b4697ac6f854e7e922" translate="yes" xml:space="preserve">
          <source>Returns true if this is lexically less than that. Needs to be made UTF-8 safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6266d12cbd569c639c335aa82e494d5b5ac6b24" translate="yes" xml:space="preserve">
          <source>Returns true iff this arg is required to be present in the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf42ce05e7bbfc9e81fe6244ff796cf7aa43873d" translate="yes" xml:space="preserve">
          <source>Returns true iff this option is required to be present in the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1f10eb54b5fb5c0c59bc871c0976d22a984ef5" translate="yes" xml:space="preserve">
          <source>Returns up to len bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a527254440dcb8c8467de1bc0a6c31d2b18c390a" translate="yes" xml:space="preserve">
          <source>Returns up to len bytes. The resulting string may have internal null characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f9933768794f845d000833d367d5698393211d" translate="yes" xml:space="preserve">
          <source>Reverse</source>
          <target state="translated">Reverse</target>
        </trans-unit>
        <trans-unit id="e5e45558455d6ef258c73d5155117b421e29cf7a" translate="yes" xml:space="preserve">
          <source>Reverse the array in place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908d88aad041678c3f4f3c36647c7b20bba27b66" translate="yes" xml:space="preserve">
          <source>Reverse the order of the bits within the integer. For example, 0b11101101 (237) would return 0b10110111 (183).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a2f5b24eca923130c8933483c8f8a8c78055e0" translate="yes" xml:space="preserve">
          <source>Reverse.create()</source>
          <target state="translated">Reverse.create()</target>
        </trans-unit>
        <trans-unit id="0376ec19136518e1db1d6aaf058fabb887b7c749" translate="yes" xml:space="preserve">
          <source>Reverse.has_next()</source>
          <target state="translated">Reverse.has_next()</target>
        </trans-unit>
        <trans-unit id="f6d0fdbcb50c103c1d1408c8937241a47045be42" translate="yes" xml:space="preserve">
          <source>Reverse.next()</source>
          <target state="translated">Reverse.next()</target>
        </trans-unit>
        <trans-unit id="bcd2d720e6c26a947781d6730e129750878bbc17" translate="yes" xml:space="preserve">
          <source>Reverse.rewind()</source>
          <target state="translated">Reverse.rewind()</target>
        </trans-unit>
        <trans-unit id="30046afc62dd1d59e187f013af72829a852ccb54" translate="yes" xml:space="preserve">
          <source>Reverse[optional A: (&lt;a href=&quot;builtin-real&quot;&gt;Real&lt;/a&gt;[A] val &amp;amp; (&lt;a href=&quot;builtin-i8&quot;&gt;I8&lt;/a&gt; val | &lt;a href=&quot;builtin-i16&quot;&gt;I16&lt;/a&gt; val | &lt;a href=&quot;builtin-i32&quot;&gt;I32&lt;/a&gt; val | &lt;a href=&quot;builtin-i64&quot;&gt;I64&lt;/a&gt; val | &lt;a href=&quot;builtin-i128&quot;&gt;I128&lt;/a&gt; val | &lt;a href=&quot;builtin-ilong&quot;&gt;ILong&lt;/a&gt; val | &lt;a href=&quot;builtin-isize&quot;&gt;ISize&lt;/a&gt; val | &lt;a href=&quot;builtin-u8&quot;&gt;U8&lt;/a&gt; val | &lt;a href=&quot;builtin-u16&quot;&gt;U16&lt;/a&gt; val | &lt;a href=&quot;builtin-u32&quot;&gt;U32&lt;/a&gt; val | &lt;a href=&quot;builtin-u64&quot;&gt;U64&lt;/a&gt; val | &lt;a href=&quot;builtin-u128&quot;&gt;U128&lt;/a&gt; val | &lt;a href=&quot;builtin-ulong&quot;&gt;ULong&lt;/a&gt; val | &lt;a href=&quot;builtin-usize&quot;&gt;USize&lt;/a&gt; val | &lt;a href=&quot;builtin-f32&quot;&gt;F32&lt;/a&gt; val | &lt;a href=&quot;builtin-f64&quot;&gt;F64&lt;/a&gt; val))]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cfcf3b47b3af9b953fd2f5bfa25c2882b3b8b4c" translate="yes" xml:space="preserve">
          <source>Reverses the byte order in the string. This needs to be changed to handle UTF-8 correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884b8d8fa195ef832998753710feb882704d820f" translate="yes" xml:space="preserve">
          <source>Right arrow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9631a5e8ba03a35307054b2078f32edead18b9fe" translate="yes" xml:space="preserve">
          <source>RingBuffer</source>
          <target state="translated">RingBuffer</target>
        </trans-unit>
        <trans-unit id="9ad22558ef67181c2eb5430682fa9a8f7cf8b792" translate="yes" xml:space="preserve">
          <source>RingBuffer.apply()</source>
          <target state="translated">RingBuffer.apply()</target>
        </trans-unit>
        <trans-unit id="5d4e92f409fc80866dde3b232d16c321b822e864" translate="yes" xml:space="preserve">
          <source>RingBuffer.clear()</source>
          <target state="translated">RingBuffer.clear()</target>
        </trans-unit>
        <trans-unit id="bfa349a3acf3d89e60a4064187b4bfc4ce566b79" translate="yes" xml:space="preserve">
          <source>RingBuffer.create()</source>
          <target state="translated">RingBuffer.create()</target>
        </trans-unit>
        <trans-unit id="d345a1cfbadf7712378abf8ca4e1b5a7286aa741" translate="yes" xml:space="preserve">
          <source>RingBuffer.head()</source>
          <target state="translated">RingBuffer.head()</target>
        </trans-unit>
        <trans-unit id="0f7a50db61cf35e09363de0839cf4ea8293ff78e" translate="yes" xml:space="preserve">
          <source>RingBuffer.push()</source>
          <target state="translated">RingBuffer.push()</target>
        </trans-unit>
        <trans-unit id="ffcfda69ee6a2d0a22abc5ed96a2e7ca886d9ac0" translate="yes" xml:space="preserve">
          <source>RingBuffer.size()</source>
          <target state="translated">RingBuffer.size()</target>
        </trans-unit>
        <trans-unit id="45b2995e2e4fe036b4fa7c297498535112b08ae9" translate="yes" xml:space="preserve">
          <source>RingBuffer.space()</source>
          <target state="translated">RingBuffer.space()</target>
        </trans-unit>
        <trans-unit id="74622e703dc7315015991559846f18fd81223ba4" translate="yes" xml:space="preserve">
          <source>RingBuffer[A: A]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c567fb7f8ed9f6d73c7329468ab9ed81506ef28" translate="yes" xml:space="preserve">
          <source>Round down to the nearest power of 10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8b69480cee8be99822771f6d2a3be2d19abae2" translate="yes" xml:space="preserve">
          <source>Round x up to a number of the form [1^x, 2^x, 3^x, 5^x].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed12da41740ceffd0a7f3a7486cc656d6d2e7d7" translate="yes" xml:space="preserve">
          <source>Run the given test, or queue it and run later, as appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efddf7ff36dd2640797d85a0f547408c0b690fe5" translate="yes" xml:space="preserve">
          <source>Run the given test, subject to our filters and options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfcbaad20ac8080e53a0a1126dcde441a6177fbe" translate="yes" xml:space="preserve">
          <source>Run the test. Raising an error is interpreted as a test failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff2911bb6ed9da2b8a789e586d4b455186aaab8c" translate="yes" xml:space="preserve">
          <source>S-&amp;gt;A ?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8152617a3b971d67bab9bb85f386bddd21d4b3d0" translate="yes" xml:space="preserve">
          <source>Same as write, buts adds a newline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb751d563a055fff78534e6718413fd2b0723e18" translate="yes" xml:space="preserve">
          <source>Schedule a timer on this wheel. Mark the bit indicating that the given slot has timers in its list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d16370a038f9b7e4deb41412f9eec3d866fc38" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/ponylang/rfcs/blob/master/text/0038-cli-format.md&quot;&gt;RFC-0038&lt;/a&gt; for more background.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7badd98edaf1b9bf552c78e4de746ebc779afd8d" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;DefaultLogFormatter&lt;/code&gt; for an example of how to implement a LogFormatter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab278a571feb5ba788d3dff41d6f091ad2301b9" translate="yes" xml:space="preserve">
          <source>See: - https://arxiv.org/abs/1805.10941 - http://www.pcg-random.org/posts/bounded-rands.html</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f83c853f3f92508f60bd79f2c95a59880a0ffa9" translate="yes" xml:space="preserve">
          <source>Seed values can contain up to 128 bits of randomness in the form of two U64s. A common non-cryptographically secure way to seed a generator is with &lt;code&gt;Time.now&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6a4669e388bc2b636b7dba0b08fee9dddd5292" translate="yes" xml:space="preserve">
          <source>Selects an option from the configuration depending on the current command line argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eadac3c908b751e09fc0f2e0ce80539a2f831014" translate="yes" xml:space="preserve">
          <source>Send a finished line to the notifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07868e136c608017e25db4adb6905f33a31d3224" translate="yes" xml:space="preserve">
          <source>Send any pending data. If any data can't be sent, keep it in _pending. Once _pending is non-empty, direct writes will get queued there, and they can only be written here. If the _done_writing flag is set, close the pipe once we've processed pending writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c842ae118a53207134a06ec34919a926eb3313" translate="yes" xml:space="preserve">
          <source>Send pending data. If any data can't be sent, keep it and mark as not writeable. On an error, dispose of the connection. Returns whether it sent all pending data or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cbeeea501e69e6254fb518bdf812d5ec9c744a4" translate="yes" xml:space="preserve">
          <source>Sending JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b652a84de46b8b5e0efbb3264d02faba57807e8" translate="yes" xml:space="preserve">
          <source>Separate a list of paths into an array of cleaned paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa328f49b32e6dbe61c90ab9a659303e1d388d15" translate="yes" xml:space="preserve">
          <source>Seq</source>
          <target state="translated">Seq</target>
        </trans-unit>
        <trans-unit id="01034bd27eddc3eb801de2168b76b2ce96a8198d" translate="yes" xml:space="preserve">
          <source>Seq.append()</source>
          <target state="translated">Seq.append()</target>
        </trans-unit>
        <trans-unit id="3967079d623091a2036b0c3d8d58cf906d266d24" translate="yes" xml:space="preserve">
          <source>Seq.apply()</source>
          <target state="translated">Seq.apply()</target>
        </trans-unit>
        <trans-unit id="3271d535d84d215dd784beed9a0bbf0e9b09bc06" translate="yes" xml:space="preserve">
          <source>Seq.clear()</source>
          <target state="translated">Seq.clear()</target>
        </trans-unit>
        <trans-unit id="0629382932811bf915b37e9f01b45c3b88d20212" translate="yes" xml:space="preserve">
          <source>Seq.concat()</source>
          <target state="translated">Seq.concat()</target>
        </trans-unit>
        <trans-unit id="9c7290fe03454f539dac350bdb5316c1c5373cc6" translate="yes" xml:space="preserve">
          <source>Seq.create()</source>
          <target state="translated">Seq.create()</target>
        </trans-unit>
        <trans-unit id="7b8d33abad32efcfe72277ecea45b1ef4c85b4bd" translate="yes" xml:space="preserve">
          <source>Seq.pop()</source>
          <target state="translated">Seq.pop()</target>
        </trans-unit>
        <trans-unit id="e5c0052572d139301d281fab93a47b7b63cd2978" translate="yes" xml:space="preserve">
          <source>Seq.push()</source>
          <target state="translated">Seq.push()</target>
        </trans-unit>
        <trans-unit id="29891bba6f121614c397d09a1e71b3274e6d0fc7" translate="yes" xml:space="preserve">
          <source>Seq.reserve()</source>
          <target state="translated">Seq.reserve()</target>
        </trans-unit>
        <trans-unit id="b147c8ddb229dc8aa8010624b867958978ba8fb8" translate="yes" xml:space="preserve">
          <source>Seq.shift()</source>
          <target state="translated">Seq.shift()</target>
        </trans-unit>
        <trans-unit id="afa1586a28bf648023f5c3d621ff978faa4ab920" translate="yes" xml:space="preserve">
          <source>Seq.size()</source>
          <target state="translated">Seq.size()</target>
        </trans-unit>
        <trans-unit id="a59b03237f58060316374c450e104103fc272790" translate="yes" xml:space="preserve">
          <source>Seq.truncate()</source>
          <target state="translated">Seq.truncate()</target>
        </trans-unit>
        <trans-unit id="c29f9e20d4d8d75ffd97c95d0f3aadd9abc697cc" translate="yes" xml:space="preserve">
          <source>Seq.unshift()</source>
          <target state="translated">Seq.unshift()</target>
        </trans-unit>
        <trans-unit id="1e2f7a076fcbba833cab0025884106f5c22f84f5" translate="yes" xml:space="preserve">
          <source>Seq.update()</source>
          <target state="translated">Seq.update()</target>
        </trans-unit>
        <trans-unit id="0ee86ee63da545fc755d1622b652fecef94edf1f" translate="yes" xml:space="preserve">
          <source>Seq.values()</source>
          <target state="translated">Seq.values()</target>
        </trans-unit>
        <trans-unit id="b614d31e45ee912dd6caaaf4f3792703bae5d51f" translate="yes" xml:space="preserve">
          <source>Seq[A: A]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a460530edc66551a0a3469608bd4531d3d883aec" translate="yes" xml:space="preserve">
          <source>Serialise</source>
          <target state="translated">Serialise</target>
        </trans-unit>
        <trans-unit id="32bb1d31b6d357c6d9ee1850dbb95118589d2fec" translate="yes" xml:space="preserve">
          <source>Serialise package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1420918729f54044177a6e1f4825b2ab50ac7ad" translate="yes" xml:space="preserve">
          <source>Serialise.create()</source>
          <target state="translated">Serialise.create()</target>
        </trans-unit>
        <trans-unit id="53aa21ed436c91cb5a4444e718aea8f33c4c8b99" translate="yes" xml:space="preserve">
          <source>Serialise.eq()</source>
          <target state="translated">Serialise.eq()</target>
        </trans-unit>
        <trans-unit id="1e1fffcd6e45162fcb8827b079321024fddfc8fe" translate="yes" xml:space="preserve">
          <source>Serialise.ne()</source>
          <target state="translated">Serialise.ne()</target>
        </trans-unit>
        <trans-unit id="4e441b961c62fcfde5dda8278004ab95c3b2d302" translate="yes" xml:space="preserve">
          <source>Serialise.signature()</source>
          <target state="translated">Serialise.signature()</target>
        </trans-unit>
        <trans-unit id="a49bc43920fd56c795f3039b4b58a6e1fcbffdeb" translate="yes" xml:space="preserve">
          <source>SerialiseAuth</source>
          <target state="translated">SerialiseAuth</target>
        </trans-unit>
        <trans-unit id="51ecdf53b0318249de3a280858168d0c5dd8430c" translate="yes" xml:space="preserve">
          <source>SerialiseAuth.create()</source>
          <target state="translated">SerialiseAuth.create()</target>
        </trans-unit>
        <trans-unit id="bba9c39df786c81517368ea4b1efebf7339c9a9e" translate="yes" xml:space="preserve">
          <source>SerialiseAuth.eq()</source>
          <target state="translated">SerialiseAuth.eq()</target>
        </trans-unit>
        <trans-unit id="29138ff6f2903f4666375288b544d1cb99d4b883" translate="yes" xml:space="preserve">
          <source>SerialiseAuth.ne()</source>
          <target state="translated">SerialiseAuth.ne()</target>
        </trans-unit>
        <trans-unit id="4ae04d92424f0c2af1e50cd8a54cf3a3a3ef7da0" translate="yes" xml:space="preserve">
          <source>Serialised</source>
          <target state="translated">Serialised</target>
        </trans-unit>
        <trans-unit id="6085cc7c52ebf8abbb1b353ab707321ef26b5012" translate="yes" xml:space="preserve">
          <source>Serialised.apply()</source>
          <target state="translated">Serialised.apply()</target>
        </trans-unit>
        <trans-unit id="7fa9dd32a9529336c2ad85a1dda6b48c27351709" translate="yes" xml:space="preserve">
          <source>Serialised.create()</source>
          <target state="translated">Serialised.create()</target>
        </trans-unit>
        <trans-unit id="bda592cdd6ed5b15f20ae5b50cfcce78d0fa230e" translate="yes" xml:space="preserve">
          <source>Serialised.input()</source>
          <target state="translated">Serialised.input()</target>
        </trans-unit>
        <trans-unit id="786051b1ccb00ba6212a126388d68f65c2283c2b" translate="yes" xml:space="preserve">
          <source>Serialised.output()</source>
          <target state="translated">Serialised.output()</target>
        </trans-unit>
        <trans-unit id="448ab73ba1c21e671e218fb91f2644c834f0c16f" translate="yes" xml:space="preserve">
          <source>Set</source>
          <target state="translated">Set</target>
        </trans-unit>
        <trans-unit id="2283f2f33172fdd6ca5d24de1b79f01553caaa9f" translate="yes" xml:space="preserve">
          <source>Set - A persistent set implemented as a persistent map of an alias of a type to itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52c0c7cdc76e95e1e09b98b1278dcb280a02e7d" translate="yes" xml:space="preserve">
          <source>Set Up</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8980c82f8f12783d6dcedf33a081b191d767e7" translate="yes" xml:space="preserve">
          <source>Set a new prompt, unblock, and handle the pending queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73a0426cdf9b68bcc4034957d1697bdc2ea08c1" translate="yes" xml:space="preserve">
          <source>Set a value in the map if the key doesn't already exist in the Map. Saves an extra lookup when doing a pattern like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef24181139913c9d8e5611463eb1fb496fe245f5" translate="yes" xml:space="preserve">
          <source>Set a value in the map. Returns the new value, allowing reuse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322a6b608ab1b93d8da6b48ff351e6606b8337ab" translate="yes" xml:space="preserve">
          <source>Set index i and return the previous value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af083b33a951b168e9aaa8789c5dbefe406be1c1" translate="yes" xml:space="preserve">
          <source>Set of capabilities for operations on &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caff6e92593074ef0b1d4f9cebec3c17de9dfaea" translate="yes" xml:space="preserve">
          <source>Set the Capsicum rights on the file descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa468bcda3aa276bbc749ee05c70c4a601ff5b9c" translate="yes" xml:space="preserve">
          <source>Set the FileMode for a path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2154f5f3bf24f5f135bbd3d6bfb87ce74c83ed" translate="yes" xml:space="preserve">
          <source>Set the FileMode for some path relative to this directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6643b747a9de9f1cdfc69a7dba37cdde2acb6a13" translate="yes" xml:space="preserve">
          <source>Set the FileMode for this directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c943016a322017cbf7205104e78159842dc7b6" translate="yes" xml:space="preserve">
          <source>Set the FileMode for this fd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96772aa5618ea99dd04fae81efec2c566201a8fc" translate="yes" xml:space="preserve">
          <source>Set the TTL for multicast sends. Defaults to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="077e3220aca055c9e3753a952ca015955b3ed3e2" translate="yes" xml:space="preserve">
          <source>Set the _done_writing flag to true. If _pending is empty we can close the _stdin pipe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7d1d3e2a01924097866fb75f8c4d454c5a0423" translate="yes" xml:space="preserve">
          <source>Set the current time with precision reduced by the slop bits. Return the elapsed time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1884178d792e3161111ab8a1adef9583173ad9" translate="yes" xml:space="preserve">
          <source>Set the cursor position relative to the end of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907066f881f8cc6dddc63e804640b7c80fa993f5" translate="yes" xml:space="preserve">
          <source>Set the cursor position relative to the start of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd8e3e501edd608007b0e016dacff220af9db41" translate="yes" xml:space="preserve">
          <source>Set the executable flag for everyone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01724f0fcd929cd14b1846fc1682d1fe8b0dc16c" translate="yes" xml:space="preserve">
          <source>Set the last access and modification times of a path to now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22a8c0c71ac555d34476a82bd308d90f78c5795" translate="yes" xml:space="preserve">
          <source>Set the last access and modification times of a path to the given values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407a1681718681cf8dbb5bc2540ecca8f31f65b3" translate="yes" xml:space="preserve">
          <source>Set the last access and modification times of the directory to now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653f29dc2648455ea7f50398a47d1c828c94bcaa" translate="yes" xml:space="preserve">
          <source>Set the last access and modification times of the directory to the given values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9ae8e06c74cfa369e38e5f19678be7f72b88de" translate="yes" xml:space="preserve">
          <source>Set the last access and modification times of the file to now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88d91a4b64fffd05b429218f592a5e13002a4fb" translate="yes" xml:space="preserve">
          <source>Set the last access and modification times of the file to the given values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740c51432db022433df124ef9f02529017187b0c" translate="yes" xml:space="preserve">
          <source>Set the modifier bools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed4fc0c1ed42bb250115fcb4b194caad5d36d7fa" translate="yes" xml:space="preserve">
          <source>Set the notifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1de3ed0d54d88006b6ce3fbe685da9e67e70825" translate="yes" xml:space="preserve">
          <source>Set the notifier. Optionally, also sets the chunk size, dictating the maximum number of bytes of each chunk that will be passed to the notifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c295cf402b3b6b014516e9ebbf5785335b69b9" translate="yes" xml:space="preserve">
          <source>Set the owner and group for a path. Does nothing on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994923c951985cda319c791b8b2a18dacf6bdf69" translate="yes" xml:space="preserve">
          <source>Set the owner and group for this directory. Does nothing on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ce98a31224ebe4e33f2fbb48f470ec84f502c1" translate="yes" xml:space="preserve">
          <source>Set the owner and group for this file. Does nothing on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe2bcab4730e0f7fcf6c89d583a0934db0a455bd" translate="yes" xml:space="preserve">
          <source>Set the write flag for everyone to the same as owner_write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92513a49c77c1cb6bdac5048c845dfda8b54bd9" translate="yes" xml:space="preserve">
          <source>Set up the testing environment before a test method is called. Default is to do nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b073ca6e6a07fd18a499979a31d995359ba3d3d" translate="yes" xml:space="preserve">
          <source>SetIs</source>
          <target state="translated">SetIs</target>
        </trans-unit>
        <trans-unit id="88fc2b3ff7a6714075e2bf53bedd060811c65959" translate="yes" xml:space="preserve">
          <source>SetIs[A: &lt;a href=&quot;builtin-any&quot;&gt;Any&lt;/a&gt; #share]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8b0026c4aa2b95d285fb546e564139ca19ac4b" translate="yes" xml:space="preserve">
          <source>SetIs[A: A]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd7f160c13cc2633833457870aeb53a04311e29" translate="yes" xml:space="preserve">
          <source>SetValues</source>
          <target state="translated">SetValues</target>
        </trans-unit>
        <trans-unit id="8ec475de8d1d7ad7b800381fe1fd5a9843418043" translate="yes" xml:space="preserve">
          <source>SetValues.create()</source>
          <target state="translated">SetValues.create()</target>
        </trans-unit>
        <trans-unit id="5b6e6f77f7f5e7aebd86d11a1088ca615a5b2355" translate="yes" xml:space="preserve">
          <source>SetValues.has_next()</source>
          <target state="translated">SetValues.has_next()</target>
        </trans-unit>
        <trans-unit id="26dd764dec5d440ce1c921c46499293745618a1c" translate="yes" xml:space="preserve">
          <source>SetValues.next()</source>
          <target state="translated">SetValues.next()</target>
        </trans-unit>
        <trans-unit id="7c2d202ba98e6b6a658e43f5e98e416a621a84d2" translate="yes" xml:space="preserve">
          <source>SetValues[A: A, H: &lt;a href=&quot;collections-hashfunction&quot;&gt;HashFunction&lt;/a&gt;[A!] val, S: &lt;a href=&quot;collections-hashset&quot;&gt;HashSet&lt;/a&gt;[A, H] #read]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecfbe9f327d596e9dbce4b3c0e1faacbb43ccd50" translate="yes" xml:space="preserve">
          <source>Set[A: (&lt;a href=&quot;collections-hashable&quot;&gt;Hashable&lt;/a&gt; #read &amp;amp; &lt;a href=&quot;builtin-equatable&quot;&gt;Equatable&lt;/a&gt;[A] #read)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa640da3d2ea3fd6674ec65051a78160758abf84" translate="yes" xml:space="preserve">
          <source>Set[A: (&lt;a href=&quot;collections-hashable&quot;&gt;Hashable&lt;/a&gt; val &amp;amp; &lt;a href=&quot;builtin-equatable&quot;&gt;Equatable&lt;/a&gt;[A])]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ce0454e7da71a02b41fc13224f35eea750a4ce" translate="yes" xml:space="preserve">
          <source>Sets a timer. Fire it if need be, schedule it on the right timing wheel, then rearm the timer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1e9a8a78f98c8587219388d71db32e152af3db" translate="yes" xml:space="preserve">
          <source>Sets a value in the map. Returns the old value if there was one, otherwise returns None. If there was no previous value, this may trigger a resize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571e03ed627f68f89158f333bf46248c9b65f9bd" translate="yes" xml:space="preserve">
          <source>Sets all bits, including undefined flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db65f964baea0fea7c43c0e4bc8e51244da96122" translate="yes" xml:space="preserve">
          <source>Sets the TCP keepalive timeout to approximately &lt;code&gt;secs&lt;/code&gt; seconds. Exact timing is OS dependent. If &lt;code&gt;secs&lt;/code&gt; is zero, TCP keepalive is disabled. TCP keepalive is disabled by default. This can only be set on a connected socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb6f268a2f3aef5941b04ffe7717674593be71ea" translate="yes" xml:space="preserve">
          <source>Sets the environment's exit code. The exit code of the root environment will be the exit code of the application, which defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4888fb14bffc99fa05854bd95d53d11dec411f28" translate="yes" xml:space="preserve">
          <source>Sets the flag if it is unset, unsets the flag if it is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15895b14b8f7734c28fd86c82735932cd314ad8" translate="yes" xml:space="preserve">
          <source>Sets the flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="658e2da77666604e2641bce30e9bd00a318c99a9" translate="yes" xml:space="preserve">
          <source>Setting up and tearing down a test environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9336566fa06898dbcbce6da8b5b7219de6f645" translate="yes" xml:space="preserve">
          <source>Short option name (if any).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931a562877974eb575b681c60b51db107311974b" translate="yes" xml:space="preserve">
          <source>Shuffle the elements of the array into a random order, mutating the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="970de494062bac4bf37b33977f6c3378fd4b172f" translate="yes" xml:space="preserve">
          <source>Shutting down ProcessMonitor and external process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263b0f6c3b1c996574a9542a4d2c51482eccfee6" translate="yes" xml:space="preserve">
          <source>Shutting down handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dddc0048e498c9bad5ae66b9c3e7c4f17a6ffbc8" translate="yes" xml:space="preserve">
          <source>Sig</source>
          <target state="translated">Sig</target>
        </trans-unit>
        <trans-unit id="1f36e1202a2667f820a8478fd4cbd943e1a802a5" translate="yes" xml:space="preserve">
          <source>Sig.abrt()</source>
          <target state="translated">Sig.abrt()</target>
        </trans-unit>
        <trans-unit id="cb4188cca20f0d9dfef1d4f800c1e1d4cc2f128f" translate="yes" xml:space="preserve">
          <source>Sig.alrm()</source>
          <target state="translated">Sig.alrm()</target>
        </trans-unit>
        <trans-unit id="5bd76465335cdd4c6b17d2824471c328388558bf" translate="yes" xml:space="preserve">
          <source>Sig.bus()</source>
          <target state="translated">Sig.bus()</target>
        </trans-unit>
        <trans-unit id="b39773e89c170970c8eb4f6cf8c724874c633ac6" translate="yes" xml:space="preserve">
          <source>Sig.chld()</source>
          <target state="translated">Sig.chld()</target>
        </trans-unit>
        <trans-unit id="cf6e69a9a3ad11670de8fa8d63f7ca22b82ebacc" translate="yes" xml:space="preserve">
          <source>Sig.cont()</source>
          <target state="translated">Sig.cont()</target>
        </trans-unit>
        <trans-unit id="a5ab12aed6de6b5e1eae46ee83b452658006a846" translate="yes" xml:space="preserve">
          <source>Sig.create()</source>
          <target state="translated">Sig.create()</target>
        </trans-unit>
        <trans-unit id="62b6723c12f2b9eb2e3a8abaf95c6ec691daa7e4" translate="yes" xml:space="preserve">
          <source>Sig.emt()</source>
          <target state="translated">Sig.emt()</target>
        </trans-unit>
        <trans-unit id="e6ea64f3d4b3ce1f1b0605b1f00a66d9564f4c6c" translate="yes" xml:space="preserve">
          <source>Sig.eq()</source>
          <target state="translated">Sig.eq()</target>
        </trans-unit>
        <trans-unit id="a19b817456bbe989429f51d23fbe6f1d5c3dc202" translate="yes" xml:space="preserve">
          <source>Sig.fpe()</source>
          <target state="translated">Sig.fpe()</target>
        </trans-unit>
        <trans-unit id="0b5ac61f17e747fb0032b5c76548ebed283882e3" translate="yes" xml:space="preserve">
          <source>Sig.hup()</source>
          <target state="translated">Sig.hup()</target>
        </trans-unit>
        <trans-unit id="196b9e4ee7a79dda9fcfab50f35ac6f687b9011f" translate="yes" xml:space="preserve">
          <source>Sig.ill()</source>
          <target state="translated">Sig.ill()</target>
        </trans-unit>
        <trans-unit id="4ee41f6e772de345b81552c162edb51279eae8f7" translate="yes" xml:space="preserve">
          <source>Sig.info()</source>
          <target state="translated">Sig.info()</target>
        </trans-unit>
        <trans-unit id="095c2726be387a34ee73a9d15a89194869280dc4" translate="yes" xml:space="preserve">
          <source>Sig.int()</source>
          <target state="translated">Sig.int()</target>
        </trans-unit>
        <trans-unit id="5acbaf8ab267cccaca33731ff81ceff4baaa1c74" translate="yes" xml:space="preserve">
          <source>Sig.io()</source>
          <target state="translated">Sig.io()</target>
        </trans-unit>
        <trans-unit id="822f1cba766436dd271c160e126ef851804b7468" translate="yes" xml:space="preserve">
          <source>Sig.kill()</source>
          <target state="translated">Sig.kill()</target>
        </trans-unit>
        <trans-unit id="b5a878b0e66b08d0383d9556b83337341c4f124b" translate="yes" xml:space="preserve">
          <source>Sig.ne()</source>
          <target state="translated">Sig.ne()</target>
        </trans-unit>
        <trans-unit id="766a08892961e85994ed55e4bf3a0c10005801c2" translate="yes" xml:space="preserve">
          <source>Sig.pipe()</source>
          <target state="translated">Sig.pipe()</target>
        </trans-unit>
        <trans-unit id="04742e0109d9ef0cc9a3ea0f1ce57f66a0d07e28" translate="yes" xml:space="preserve">
          <source>Sig.prof()</source>
          <target state="translated">Sig.prof()</target>
        </trans-unit>
        <trans-unit id="2652492763f2e81347dfd8ce4fe71d5679ba5d82" translate="yes" xml:space="preserve">
          <source>Sig.pwr()</source>
          <target state="translated">Sig.pwr()</target>
        </trans-unit>
        <trans-unit id="348fa57496b1cd4e872279a904bcb6a1033e2bb6" translate="yes" xml:space="preserve">
          <source>Sig.quit()</source>
          <target state="translated">Sig.quit()</target>
        </trans-unit>
        <trans-unit id="3e20f1e6f7e107ca806cad1ee32c56324cb46ad7" translate="yes" xml:space="preserve">
          <source>Sig.rt()</source>
          <target state="translated">Sig.rt()</target>
        </trans-unit>
        <trans-unit id="4c4b43a880410649e71b439af89431e633cbfebe" translate="yes" xml:space="preserve">
          <source>Sig.segv()</source>
          <target state="translated">Sig.segv()</target>
        </trans-unit>
        <trans-unit id="50ccc653ef6e23279fce0fde109b173d6592f6d3" translate="yes" xml:space="preserve">
          <source>Sig.stkflt()</source>
          <target state="translated">Sig.stkflt()</target>
        </trans-unit>
        <trans-unit id="f5970701e8fd53ca1e85ed1d80c82211576c68b8" translate="yes" xml:space="preserve">
          <source>Sig.stop()</source>
          <target state="translated">Sig.stop()</target>
        </trans-unit>
        <trans-unit id="8c08b740dafd7959a21cd6f3012f065d00a705a6" translate="yes" xml:space="preserve">
          <source>Sig.sys()</source>
          <target state="translated">Sig.sys()</target>
        </trans-unit>
        <trans-unit id="11a7c7f4da9e2126202a4998f70f62c0d22feb3d" translate="yes" xml:space="preserve">
          <source>Sig.term()</source>
          <target state="translated">Sig.term()</target>
        </trans-unit>
        <trans-unit id="6f67df1a3a7c5d3b0410d04a794c1778c8d51990" translate="yes" xml:space="preserve">
          <source>Sig.trap()</source>
          <target state="translated">Sig.trap()</target>
        </trans-unit>
        <trans-unit id="047b13a4f7abbf628af408be60d7c99dd7e232c1" translate="yes" xml:space="preserve">
          <source>Sig.tstp()</source>
          <target state="translated">Sig.tstp()</target>
        </trans-unit>
        <trans-unit id="e633cf72478450a511be2ebc76faa3331c605ef1" translate="yes" xml:space="preserve">
          <source>Sig.ttin()</source>
          <target state="translated">Sig.ttin()</target>
        </trans-unit>
        <trans-unit id="d0066712bded82d23952b0a4c9d6da5d86411dd9" translate="yes" xml:space="preserve">
          <source>Sig.ttou()</source>
          <target state="translated">Sig.ttou()</target>
        </trans-unit>
        <trans-unit id="dcbfe316a0436c065ffe25c650893a3f0879f82b" translate="yes" xml:space="preserve">
          <source>Sig.urg()</source>
          <target state="translated">Sig.urg()</target>
        </trans-unit>
        <trans-unit id="068aeebd8306f0ed26ca4285f5f058bd94b8d2e3" translate="yes" xml:space="preserve">
          <source>Sig.usr1()</source>
          <target state="translated">Sig.usr1()</target>
        </trans-unit>
        <trans-unit id="768a4e834e35411a73d1f6ba1f1c30162fc75613" translate="yes" xml:space="preserve">
          <source>Sig.usr2()</source>
          <target state="translated">Sig.usr2()</target>
        </trans-unit>
        <trans-unit id="2ef9c367b62892d23a68a6fc4554140d23791554" translate="yes" xml:space="preserve">
          <source>Sig.vtalrm()</source>
          <target state="translated">Sig.vtalrm()</target>
        </trans-unit>
        <trans-unit id="85d8812610fe1c2d2833b81d0ba69de888f5dad6" translate="yes" xml:space="preserve">
          <source>Sig.winch()</source>
          <target state="translated">Sig.winch()</target>
        </trans-unit>
        <trans-unit id="c891fb7649640765ebe78ae14aa53b7464894efe" translate="yes" xml:space="preserve">
          <source>Sig.xcpu()</source>
          <target state="translated">Sig.xcpu()</target>
        </trans-unit>
        <trans-unit id="d337a825b97e501cd09cbf44922f210791f726fe" translate="yes" xml:space="preserve">
          <source>Sig.xfsz()</source>
          <target state="translated">Sig.xfsz()</target>
        </trans-unit>
        <trans-unit id="a20f45cbcbe8a328fd85b3c94e3b8e7f9c206234" translate="yes" xml:space="preserve">
          <source>Signal portability</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ed502295e681ae3338023fdef6f442e37d3d91" translate="yes" xml:space="preserve">
          <source>SignalHandler</source>
          <target state="translated">SignalHandler</target>
        </trans-unit>
        <trans-unit id="511c00be716edb2bd91e53c149691b238275fce6" translate="yes" xml:space="preserve">
          <source>SignalHandler._dispose()</source>
          <target state="translated">SignalHandler._dispose()</target>
        </trans-unit>
        <trans-unit id="e9bdba8b4ec86e95ec5db7e97f516e9c05927181" translate="yes" xml:space="preserve">
          <source>SignalHandler._event_notify()</source>
          <target state="translated">SignalHandler._event_notify()</target>
        </trans-unit>
        <trans-unit id="f58dc31ce6b88f6ba02e89e281eb4d449599c756" translate="yes" xml:space="preserve">
          <source>SignalHandler.create()</source>
          <target state="translated">SignalHandler.create()</target>
        </trans-unit>
        <trans-unit id="b6794488975e8c0c71e88d8cc3fe9663c6dab22c" translate="yes" xml:space="preserve">
          <source>SignalHandler.dispose()</source>
          <target state="translated">SignalHandler.dispose()</target>
        </trans-unit>
        <trans-unit id="fba5a00a6f67ab9d737fd70222f01b6ec37ec3fa" translate="yes" xml:space="preserve">
          <source>SignalHandler.raise()</source>
          <target state="translated">SignalHandler.raise()</target>
        </trans-unit>
        <trans-unit id="017fb883fad9bacd5396ef8e3eca7b159ec5b9f3" translate="yes" xml:space="preserve">
          <source>SignalNotify</source>
          <target state="translated">SignalNotify</target>
        </trans-unit>
        <trans-unit id="6a0d8eb5fb6fb7d4adc3c5c35d2471f75be50129" translate="yes" xml:space="preserve">
          <source>SignalNotify.apply()</source>
          <target state="translated">SignalNotify.apply()</target>
        </trans-unit>
        <trans-unit id="a350a6846dcf1a5b30d1612bb9558df052cf03db" translate="yes" xml:space="preserve">
          <source>SignalNotify.dispose()</source>
          <target state="translated">SignalNotify.dispose()</target>
        </trans-unit>
        <trans-unit id="33de82cd7b88fe1955e0a342602fb754871beba7" translate="yes" xml:space="preserve">
          <source>SignalRaise</source>
          <target state="translated">SignalRaise</target>
        </trans-unit>
        <trans-unit id="5b39d0bde63d60a882e50ba394025ae301742619" translate="yes" xml:space="preserve">
          <source>SignalRaise.apply()</source>
          <target state="translated">SignalRaise.apply()</target>
        </trans-unit>
        <trans-unit id="822835ca215dac7ec0f54048270b289a2adf4e79" translate="yes" xml:space="preserve">
          <source>SignalRaise.create()</source>
          <target state="translated">SignalRaise.create()</target>
        </trans-unit>
        <trans-unit id="e99880c43266d19b74eb7e362830d7c5b568a03b" translate="yes" xml:space="preserve">
          <source>SignalRaise.eq()</source>
          <target state="translated">SignalRaise.eq()</target>
        </trans-unit>
        <trans-unit id="dd48966de0179797c24aad6a0bcaf3435ff11583" translate="yes" xml:space="preserve">
          <source>SignalRaise.ne()</source>
          <target state="translated">SignalRaise.ne()</target>
        </trans-unit>
        <trans-unit id="0b6a377872c50ab4c60ce03db17e6a224c91d23d" translate="yes" xml:space="preserve">
          <source>Signals package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3665d85fde70112ccec1bb287428d4fd142fcc" translate="yes" xml:space="preserve">
          <source>Signed</source>
          <target state="translated">Signed</target>
        </trans-unit>
        <trans-unit id="b67c45e051e7102572ce57eb105e5d801b539902" translate="yes" xml:space="preserve">
          <source>SignedInteger</source>
          <target state="translated">SignedInteger</target>
        </trans-unit>
        <trans-unit id="90c33a95c55788eddd711f1ee1ed4edade0da050" translate="yes" xml:space="preserve">
          <source>SignedInteger._value()</source>
          <target state="translated">SignedInteger._value()</target>
        </trans-unit>
        <trans-unit id="f7c242bb26c75f10c176c36706897e58ec96b6c1" translate="yes" xml:space="preserve">
          <source>SignedInteger.abs()</source>
          <target state="translated">SignedInteger.abs()</target>
        </trans-unit>
        <trans-unit id="434619802d651e855251ddcefb1e5ccfa2df5244" translate="yes" xml:space="preserve">
          <source>SignedInteger.add()</source>
          <target state="translated">SignedInteger.add()</target>
        </trans-unit>
        <trans-unit id="acc1ca9c4d1a8deca48c120c100cdcc47724fe1b" translate="yes" xml:space="preserve">
          <source>SignedInteger.add_partial()</source>
          <target state="translated">SignedInteger.add_partial()</target>
        </trans-unit>
        <trans-unit id="a1d28973e83755a57aae16812bbb59c3dc33b73b" translate="yes" xml:space="preserve">
          <source>SignedInteger.add_unsafe()</source>
          <target state="translated">SignedInteger.add_unsafe()</target>
        </trans-unit>
        <trans-unit id="9bca675d91cc02b1885f432f6c5334f8b7e48f36" translate="yes" xml:space="preserve">
          <source>SignedInteger.addc()</source>
          <target state="translated">SignedInteger.addc()</target>
        </trans-unit>
        <trans-unit id="6422014f3e2f351a9f1d442b42a43726e14cb345" translate="yes" xml:space="preserve">
          <source>SignedInteger.bit_reverse()</source>
          <target state="translated">SignedInteger.bit_reverse()</target>
        </trans-unit>
        <trans-unit id="cf60edc7680b729c6799d7793f348514e5556bdc" translate="yes" xml:space="preserve">
          <source>SignedInteger.bitwidth()</source>
          <target state="translated">SignedInteger.bitwidth()</target>
        </trans-unit>
        <trans-unit id="58f537880a03e8aa75bc27b3e07c590036884366" translate="yes" xml:space="preserve">
          <source>SignedInteger.bswap()</source>
          <target state="translated">SignedInteger.bswap()</target>
        </trans-unit>
        <trans-unit id="47f8ee121d2ec9ccf6ea8d710500afcd95279b02" translate="yes" xml:space="preserve">
          <source>SignedInteger.bytewidth()</source>
          <target state="translated">SignedInteger.bytewidth()</target>
        </trans-unit>
        <trans-unit id="54153e83cd59e8ae12dd1145272db78bc588cb6c" translate="yes" xml:space="preserve">
          <source>SignedInteger.clz()</source>
          <target state="translated">SignedInteger.clz()</target>
        </trans-unit>
        <trans-unit id="eaa69cd20c3ba2b577e5e1838e02a932ec5c6375" translate="yes" xml:space="preserve">
          <source>SignedInteger.clz_unsafe()</source>
          <target state="translated">SignedInteger.clz_unsafe()</target>
        </trans-unit>
        <trans-unit id="7ae11faf9fef6c0ae0181fce814c8ff0c7a4ac5c" translate="yes" xml:space="preserve">
          <source>SignedInteger.compare()</source>
          <target state="translated">SignedInteger.compare()</target>
        </trans-unit>
        <trans-unit id="e57634ed32766ce653ffad0de56f2b7c88d6e237" translate="yes" xml:space="preserve">
          <source>SignedInteger.create()</source>
          <target state="translated">SignedInteger.create()</target>
        </trans-unit>
        <trans-unit id="9632203fdff54b988949f0d6df287400ce26b152" translate="yes" xml:space="preserve">
          <source>SignedInteger.ctz()</source>
          <target state="translated">SignedInteger.ctz()</target>
        </trans-unit>
        <trans-unit id="407341184b072047d0d8c7e43fd74d174f63b670" translate="yes" xml:space="preserve">
          <source>SignedInteger.ctz_unsafe()</source>
          <target state="translated">SignedInteger.ctz_unsafe()</target>
        </trans-unit>
        <trans-unit id="087694f0ca05f9c718ac887e7e29fd3a24db7965" translate="yes" xml:space="preserve">
          <source>SignedInteger.div()</source>
          <target state="translated">SignedInteger.div()</target>
        </trans-unit>
        <trans-unit id="0bed91eaa406032e5ea63ba1838b88a405817459" translate="yes" xml:space="preserve">
          <source>SignedInteger.div_partial()</source>
          <target state="translated">SignedInteger.div_partial()</target>
        </trans-unit>
        <trans-unit id="e1dde34b67bfcea00d99bae8916628fe38262db3" translate="yes" xml:space="preserve">
          <source>SignedInteger.div_unsafe()</source>
          <target state="translated">SignedInteger.div_unsafe()</target>
        </trans-unit>
        <trans-unit id="d5585fb177711b3b4e114cd1913f0f11ee33b390" translate="yes" xml:space="preserve">
          <source>SignedInteger.divc()</source>
          <target state="translated">SignedInteger.divc()</target>
        </trans-unit>
        <trans-unit id="acc1b1782c7ceb3201ace4ecc0d1f4cd91b88194" translate="yes" xml:space="preserve">
          <source>SignedInteger.divrem()</source>
          <target state="translated">SignedInteger.divrem()</target>
        </trans-unit>
        <trans-unit id="ae0b0febb5c05f03c2590a82ead5fd1845aa2674" translate="yes" xml:space="preserve">
          <source>SignedInteger.divrem_partial()</source>
          <target state="translated">SignedInteger.divrem_partial()</target>
        </trans-unit>
        <trans-unit id="b5e098fa1cc5ab89b3cffdf069f9a07ea0b7c82e" translate="yes" xml:space="preserve">
          <source>SignedInteger.divrem_unsafe()</source>
          <target state="translated">SignedInteger.divrem_unsafe()</target>
        </trans-unit>
        <trans-unit id="1e62dad1374330bed866fbc2462087412be9935b" translate="yes" xml:space="preserve">
          <source>SignedInteger.eq()</source>
          <target state="translated">SignedInteger.eq()</target>
        </trans-unit>
        <trans-unit id="b60bb05389175f490e5f8a72d44748feccd8ee0e" translate="yes" xml:space="preserve">
          <source>SignedInteger.f32()</source>
          <target state="translated">SignedInteger.f32()</target>
        </trans-unit>
        <trans-unit id="0ff6acc7b3503699cc94600e0c2072e1ddb30ace" translate="yes" xml:space="preserve">
          <source>SignedInteger.f32_unsafe()</source>
          <target state="translated">SignedInteger.f32_unsafe()</target>
        </trans-unit>
        <trans-unit id="7a2778403c06bf56a67f8642a720ac2c93def302" translate="yes" xml:space="preserve">
          <source>SignedInteger.f64()</source>
          <target state="translated">SignedInteger.f64()</target>
        </trans-unit>
        <trans-unit id="ab7dab6b2cedab074477fcab30be743e3387d2b7" translate="yes" xml:space="preserve">
          <source>SignedInteger.f64_unsafe()</source>
          <target state="translated">SignedInteger.f64_unsafe()</target>
        </trans-unit>
        <trans-unit id="9daf7928460114f5eb9c98d313d5c793bf931d8f" translate="yes" xml:space="preserve">
          <source>SignedInteger.fld()</source>
          <target state="translated">SignedInteger.fld()</target>
        </trans-unit>
        <trans-unit id="2d9949e7aacc7230e5730030cf7d9fe866218afc" translate="yes" xml:space="preserve">
          <source>SignedInteger.fld_partial()</source>
          <target state="translated">SignedInteger.fld_partial()</target>
        </trans-unit>
        <trans-unit id="6e521732731c3874c6713976c0ada508d243c8ef" translate="yes" xml:space="preserve">
          <source>SignedInteger.fld_unsafe()</source>
          <target state="translated">SignedInteger.fld_unsafe()</target>
        </trans-unit>
        <trans-unit id="56dc42bea3f761c566fe6c05ef62bd7a58ccb1ac" translate="yes" xml:space="preserve">
          <source>SignedInteger.fldc()</source>
          <target state="translated">SignedInteger.fldc()</target>
        </trans-unit>
        <trans-unit id="59c2ea84998011e06d0e432de03d618204f45f76" translate="yes" xml:space="preserve">
          <source>SignedInteger.from()</source>
          <target state="translated">SignedInteger.from()</target>
        </trans-unit>
        <trans-unit id="e3df4654099eb946b86162175005d81ffcb8b0f1" translate="yes" xml:space="preserve">
          <source>SignedInteger.ge()</source>
          <target state="translated">SignedInteger.ge()</target>
        </trans-unit>
        <trans-unit id="cae7ccd1a820bbb7a22a9f87ba57d809d6a6da1a" translate="yes" xml:space="preserve">
          <source>SignedInteger.gt()</source>
          <target state="translated">SignedInteger.gt()</target>
        </trans-unit>
        <trans-unit id="3432bff22586277f44f7ae5c1f724bcf4def0192" translate="yes" xml:space="preserve">
          <source>SignedInteger.hash()</source>
          <target state="translated">SignedInteger.hash()</target>
        </trans-unit>
        <trans-unit id="a3114271c68b9c9f7ac5074152633052c2dac62c" translate="yes" xml:space="preserve">
          <source>SignedInteger.hash64()</source>
          <target state="translated">SignedInteger.hash64()</target>
        </trans-unit>
        <trans-unit id="d1ce00cafb75bec532eff378d8d4bec692f5a771" translate="yes" xml:space="preserve">
          <source>SignedInteger.i128()</source>
          <target state="translated">SignedInteger.i128()</target>
        </trans-unit>
        <trans-unit id="74d134acb3f92dd27527e73c06b7eee2d6f417ed" translate="yes" xml:space="preserve">
          <source>SignedInteger.i128_unsafe()</source>
          <target state="translated">SignedInteger.i128_unsafe()</target>
        </trans-unit>
        <trans-unit id="350978278f6cffcff542bd1b0660ccbd5b5f8550" translate="yes" xml:space="preserve">
          <source>SignedInteger.i16()</source>
          <target state="translated">SignedInteger.i16()</target>
        </trans-unit>
        <trans-unit id="01a072059ce67f69530a75cd3a4c9ef3025a5259" translate="yes" xml:space="preserve">
          <source>SignedInteger.i16_unsafe()</source>
          <target state="translated">SignedInteger.i16_unsafe()</target>
        </trans-unit>
        <trans-unit id="e98536f759b69c6c0099a3b910fd5ded08402054" translate="yes" xml:space="preserve">
          <source>SignedInteger.i32()</source>
          <target state="translated">SignedInteger.i32()</target>
        </trans-unit>
        <trans-unit id="cf9a4255d5413616e6458e66641a213832d9e953" translate="yes" xml:space="preserve">
          <source>SignedInteger.i32_unsafe()</source>
          <target state="translated">SignedInteger.i32_unsafe()</target>
        </trans-unit>
        <trans-unit id="688869207873928e4278215efc77969bdde21248" translate="yes" xml:space="preserve">
          <source>SignedInteger.i64()</source>
          <target state="translated">SignedInteger.i64()</target>
        </trans-unit>
        <trans-unit id="a0aab2f7485a49b8172d21d8280ff12615386900" translate="yes" xml:space="preserve">
          <source>SignedInteger.i64_unsafe()</source>
          <target state="translated">SignedInteger.i64_unsafe()</target>
        </trans-unit>
        <trans-unit id="9a957f4977f0c2c9a4dd0ac039049cc97dcdc77b" translate="yes" xml:space="preserve">
          <source>SignedInteger.i8()</source>
          <target state="translated">SignedInteger.i8()</target>
        </trans-unit>
        <trans-unit id="737ab329d569312609675f9b52ce2faf29c1bb57" translate="yes" xml:space="preserve">
          <source>SignedInteger.i8_unsafe()</source>
          <target state="translated">SignedInteger.i8_unsafe()</target>
        </trans-unit>
        <trans-unit id="2e4e85ef7c4f01d9bb7033d352b63ecec959b6ec" translate="yes" xml:space="preserve">
          <source>SignedInteger.ilong()</source>
          <target state="translated">SignedInteger.ilong()</target>
        </trans-unit>
        <trans-unit id="86e311f5cffc58c6a58702d0d7126008784f71cb" translate="yes" xml:space="preserve">
          <source>SignedInteger.ilong_unsafe()</source>
          <target state="translated">SignedInteger.ilong_unsafe()</target>
        </trans-unit>
        <trans-unit id="ebc76c74c5f2954cc176b55e0e922d827f096e04" translate="yes" xml:space="preserve">
          <source>SignedInteger.isize()</source>
          <target state="translated">SignedInteger.isize()</target>
        </trans-unit>
        <trans-unit id="da6e83845099c659c38466fbb3fad8f94fad2b11" translate="yes" xml:space="preserve">
          <source>SignedInteger.isize_unsafe()</source>
          <target state="translated">SignedInteger.isize_unsafe()</target>
        </trans-unit>
        <trans-unit id="3ac715dddb2bc26009e52cd5ef61f6b2b61a71a0" translate="yes" xml:space="preserve">
          <source>SignedInteger.le()</source>
          <target state="translated">SignedInteger.le()</target>
        </trans-unit>
        <trans-unit id="d4fff28b346ff66c54ee5d5db573b4ec8f6b9a2d" translate="yes" xml:space="preserve">
          <source>SignedInteger.lt()</source>
          <target state="translated">SignedInteger.lt()</target>
        </trans-unit>
        <trans-unit id="1546610ff3a632adfebb0bf8894db40d20281df6" translate="yes" xml:space="preserve">
          <source>SignedInteger.max()</source>
          <target state="translated">SignedInteger.max()</target>
        </trans-unit>
        <trans-unit id="ff7cc13f522310a95d5d62d13b5eeb2a3477a4ac" translate="yes" xml:space="preserve">
          <source>SignedInteger.max_value()</source>
          <target state="translated">SignedInteger.max_value()</target>
        </trans-unit>
        <trans-unit id="17e84c562abc51241844535d9790435f06f5c045" translate="yes" xml:space="preserve">
          <source>SignedInteger.min()</source>
          <target state="translated">SignedInteger.min()</target>
        </trans-unit>
        <trans-unit id="3232325f43b0f18fd57fbf09aeaf9c201eb8c5f8" translate="yes" xml:space="preserve">
          <source>SignedInteger.min_value()</source>
          <target state="translated">SignedInteger.min_value()</target>
        </trans-unit>
        <trans-unit id="32049c116faa6114caacd82f67ae520bf7fcad25" translate="yes" xml:space="preserve">
          <source>SignedInteger.mod()</source>
          <target state="translated">SignedInteger.mod()</target>
        </trans-unit>
        <trans-unit id="18e830f18a54c278a2712e30d08f0f99ef2a2a2d" translate="yes" xml:space="preserve">
          <source>SignedInteger.mod_partial()</source>
          <target state="translated">SignedInteger.mod_partial()</target>
        </trans-unit>
        <trans-unit id="50c2678e08576ae0f79ac9859d28315897148ff4" translate="yes" xml:space="preserve">
          <source>SignedInteger.mod_unsafe()</source>
          <target state="translated">SignedInteger.mod_unsafe()</target>
        </trans-unit>
        <trans-unit id="0662f9078f188282a91a6b19de661998b22b8e7c" translate="yes" xml:space="preserve">
          <source>SignedInteger.modc()</source>
          <target state="translated">SignedInteger.modc()</target>
        </trans-unit>
        <trans-unit id="9e388f8c3df2431b91386dd10e0f8f9831141145" translate="yes" xml:space="preserve">
          <source>SignedInteger.mul()</source>
          <target state="translated">SignedInteger.mul()</target>
        </trans-unit>
        <trans-unit id="a3cb7fa3705f946ba3cbc23dfb5b2b28d8df2bd3" translate="yes" xml:space="preserve">
          <source>SignedInteger.mul_partial()</source>
          <target state="translated">SignedInteger.mul_partial()</target>
        </trans-unit>
        <trans-unit id="beeac5d48899ca271c4df4839046bf53f5eb82e4" translate="yes" xml:space="preserve">
          <source>SignedInteger.mul_unsafe()</source>
          <target state="translated">SignedInteger.mul_unsafe()</target>
        </trans-unit>
        <trans-unit id="d0c41abfb5807b84ea00b7db3b4822ce363d4d15" translate="yes" xml:space="preserve">
          <source>SignedInteger.mulc()</source>
          <target state="translated">SignedInteger.mulc()</target>
        </trans-unit>
        <trans-unit id="e331f7fc7c36512656c5681bb4711ff3c6455bc4" translate="yes" xml:space="preserve">
          <source>SignedInteger.ne()</source>
          <target state="translated">SignedInteger.ne()</target>
        </trans-unit>
        <trans-unit id="142881eb8ef05ae95a480a83a8c27f8c546f35f3" translate="yes" xml:space="preserve">
          <source>SignedInteger.neg()</source>
          <target state="translated">SignedInteger.neg()</target>
        </trans-unit>
        <trans-unit id="93a684807f02aff172b5c2ab05a08acc4b14cc7d" translate="yes" xml:space="preserve">
          <source>SignedInteger.neg_unsafe()</source>
          <target state="translated">SignedInteger.neg_unsafe()</target>
        </trans-unit>
        <trans-unit id="b87e42c1eda621f9b0dba23fbcbc04d8a5fa4f76" translate="yes" xml:space="preserve">
          <source>SignedInteger.op_and()</source>
          <target state="translated">SignedInteger.op_and()</target>
        </trans-unit>
        <trans-unit id="392d3921c6bb567e77d477a3d1cc8285a3ac7a23" translate="yes" xml:space="preserve">
          <source>SignedInteger.op_not()</source>
          <target state="translated">SignedInteger.op_not()</target>
        </trans-unit>
        <trans-unit id="75eab18a2ef4ef03b6ebc62b02b7b690beb8b8e9" translate="yes" xml:space="preserve">
          <source>SignedInteger.op_or()</source>
          <target state="translated">SignedInteger.op_or()</target>
        </trans-unit>
        <trans-unit id="cf90076524af5c6fef6081d365c1bc6b90a1cb2f" translate="yes" xml:space="preserve">
          <source>SignedInteger.op_xor()</source>
          <target state="translated">SignedInteger.op_xor()</target>
        </trans-unit>
        <trans-unit id="42f4057f893aa102e5801032ddbe36ab3630ff64" translate="yes" xml:space="preserve">
          <source>SignedInteger.popcount()</source>
          <target state="translated">SignedInteger.popcount()</target>
        </trans-unit>
        <trans-unit id="b7355fa467367cf1d7d4749c834c89edd5503817" translate="yes" xml:space="preserve">
          <source>SignedInteger.rem()</source>
          <target state="translated">SignedInteger.rem()</target>
        </trans-unit>
        <trans-unit id="a8b20c50bbcf57b75b26deac84253836ced93fa2" translate="yes" xml:space="preserve">
          <source>SignedInteger.rem_partial()</source>
          <target state="translated">SignedInteger.rem_partial()</target>
        </trans-unit>
        <trans-unit id="0b10285b1ce5f927c718983228ea213978245d3b" translate="yes" xml:space="preserve">
          <source>SignedInteger.rem_unsafe()</source>
          <target state="translated">SignedInteger.rem_unsafe()</target>
        </trans-unit>
        <trans-unit id="d03f00d92fc72dad73dad3b6b072128f7f8cc664" translate="yes" xml:space="preserve">
          <source>SignedInteger.remc()</source>
          <target state="translated">SignedInteger.remc()</target>
        </trans-unit>
        <trans-unit id="a6d1969097fc34785e0735f9ebf218398a216230" translate="yes" xml:space="preserve">
          <source>SignedInteger.shl()</source>
          <target state="translated">SignedInteger.shl()</target>
        </trans-unit>
        <trans-unit id="649bda5887269f29b90ef4552df7841ddc16acdf" translate="yes" xml:space="preserve">
          <source>SignedInteger.shl_unsafe()</source>
          <target state="translated">SignedInteger.shl_unsafe()</target>
        </trans-unit>
        <trans-unit id="92872a0a2f59c235bf23e26f2516dc04c3ef5500" translate="yes" xml:space="preserve">
          <source>SignedInteger.shr()</source>
          <target state="translated">SignedInteger.shr()</target>
        </trans-unit>
        <trans-unit id="26f72b5aa43049b7643dc717420704f5244b8d61" translate="yes" xml:space="preserve">
          <source>SignedInteger.shr_unsafe()</source>
          <target state="translated">SignedInteger.shr_unsafe()</target>
        </trans-unit>
        <trans-unit id="72eb366d4036dc44cc5ea6c39362a775cd0f7ebc" translate="yes" xml:space="preserve">
          <source>SignedInteger.string()</source>
          <target state="translated">SignedInteger.string()</target>
        </trans-unit>
        <trans-unit id="3c2713c194d150a16ee90238e34843e5d557df5b" translate="yes" xml:space="preserve">
          <source>SignedInteger.sub()</source>
          <target state="translated">SignedInteger.sub()</target>
        </trans-unit>
        <trans-unit id="f3c604af418ecfebe7dfab5aceaa5f6f575fa24e" translate="yes" xml:space="preserve">
          <source>SignedInteger.sub_partial()</source>
          <target state="translated">SignedInteger.sub_partial()</target>
        </trans-unit>
        <trans-unit id="4443de5b71c54f0681377c2549a6882bd74b6252" translate="yes" xml:space="preserve">
          <source>SignedInteger.sub_unsafe()</source>
          <target state="translated">SignedInteger.sub_unsafe()</target>
        </trans-unit>
        <trans-unit id="c98cf32aa42b9aa7cae99b28aae3f57aa2e25789" translate="yes" xml:space="preserve">
          <source>SignedInteger.subc()</source>
          <target state="translated">SignedInteger.subc()</target>
        </trans-unit>
        <trans-unit id="12de4b2c0d579e8ad55f35d5c328f1e55e30d039" translate="yes" xml:space="preserve">
          <source>SignedInteger.u128()</source>
          <target state="translated">SignedInteger.u128()</target>
        </trans-unit>
        <trans-unit id="840c0d6e2648115b56e383835d3fdd8e3f47c490" translate="yes" xml:space="preserve">
          <source>SignedInteger.u128_unsafe()</source>
          <target state="translated">SignedInteger.u128_unsafe()</target>
        </trans-unit>
        <trans-unit id="b47de56cd31a2775512b19aad38f5063c8590e96" translate="yes" xml:space="preserve">
          <source>SignedInteger.u16()</source>
          <target state="translated">SignedInteger.u16()</target>
        </trans-unit>
        <trans-unit id="2e397716423c6b720968d20e333b7118aa05c917" translate="yes" xml:space="preserve">
          <source>SignedInteger.u16_unsafe()</source>
          <target state="translated">SignedInteger.u16_unsafe()</target>
        </trans-unit>
        <trans-unit id="4d075141ec207c5594168fc31953ae5093819b62" translate="yes" xml:space="preserve">
          <source>SignedInteger.u32()</source>
          <target state="translated">SignedInteger.u32()</target>
        </trans-unit>
        <trans-unit id="038d707417ac07df253a4000b7b126f5c37f2cc9" translate="yes" xml:space="preserve">
          <source>SignedInteger.u32_unsafe()</source>
          <target state="translated">SignedInteger.u32_unsafe()</target>
        </trans-unit>
        <trans-unit id="2b4206144da8653dd12a5f3ed7482c67c01ff1c0" translate="yes" xml:space="preserve">
          <source>SignedInteger.u64()</source>
          <target state="translated">SignedInteger.u64()</target>
        </trans-unit>
        <trans-unit id="c60973b957240a7ec8ef0ced21c4439e1aada5e1" translate="yes" xml:space="preserve">
          <source>SignedInteger.u64_unsafe()</source>
          <target state="translated">SignedInteger.u64_unsafe()</target>
        </trans-unit>
        <trans-unit id="e62d9d6c08203a1aeb7bb4b6f31e04d1e0499d24" translate="yes" xml:space="preserve">
          <source>SignedInteger.u8()</source>
          <target state="translated">SignedInteger.u8()</target>
        </trans-unit>
        <trans-unit id="df3ac038fd3adefeddec9e352c07b88057d95b1b" translate="yes" xml:space="preserve">
          <source>SignedInteger.u8_unsafe()</source>
          <target state="translated">SignedInteger.u8_unsafe()</target>
        </trans-unit>
        <trans-unit id="3eb0b5668005c4ed87229a38d73b03a007ce9702" translate="yes" xml:space="preserve">
          <source>SignedInteger.ulong()</source>
          <target state="translated">SignedInteger.ulong()</target>
        </trans-unit>
        <trans-unit id="3f8409c8022de35b528de35191afa6b239e9ff5b" translate="yes" xml:space="preserve">
          <source>SignedInteger.ulong_unsafe()</source>
          <target state="translated">SignedInteger.ulong_unsafe()</target>
        </trans-unit>
        <trans-unit id="763f4187a5f259f372dc3737a24fa41f81b34375" translate="yes" xml:space="preserve">
          <source>SignedInteger.usize()</source>
          <target state="translated">SignedInteger.usize()</target>
        </trans-unit>
        <trans-unit id="497f4f142a53b54a66f2c397cd03a51305692150" translate="yes" xml:space="preserve">
          <source>SignedInteger.usize_unsafe()</source>
          <target state="translated">SignedInteger.usize_unsafe()</target>
        </trans-unit>
        <trans-unit id="317fee9a1663bfc9c7d3e82db092e775e5e7211c" translate="yes" xml:space="preserve">
          <source>SignedInteger[A: &lt;a href=&quot;index&quot;&gt;SignedInteger&lt;/a&gt;[A, B] val, B: &lt;a href=&quot;builtin-unsignedinteger&quot;&gt;UnsignedInteger&lt;/a&gt;[B] val]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e3cfa68dc9b54bc42ddb84065578c154233b6a" translate="yes" xml:space="preserve">
          <source>Simple tests run within a single function. When that function exits, either returning or raising an error, the test is complete. This is not viable for tests that need to use actors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef9c93e67f2b555c7fd020e409b1d83d1dba1acf" translate="yes" xml:space="preserve">
          <source>Since failing tests may hang, a timeout must be specified for each long test. When the test function exits a timer is started with the specified timeout. If this timer fires before complete() is called the test is marked as a failure and the timeout is reported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9881130b386699a1a0e556508af7c8f58e04da67" translate="yes" xml:space="preserve">
          <source>Skip n bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a78ad9e72161fb8b04c05b3aacdf924d60f4b81" translate="yes" xml:space="preserve">
          <source>Skip the first n values of the iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831575affe4516531e1192c4c144e1bcb8cded80" translate="yes" xml:space="preserve">
          <source>Skip values of the iterator while the predicate &lt;code&gt;f&lt;/code&gt; returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af84d6b3d813a2091153fe3f7bcd4d45b438a146" translate="yes" xml:space="preserve">
          <source>Skips all non-options. Returns true if a named option has been found, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ee79423935cab28f0b85e8cf2ecf318ca53fc33" translate="yes" xml:space="preserve">
          <source>Skips all positional arguments and attemps to match named options. Returns a ParsedOption on success, a ParseError on error, or None if no named options are found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b8aecd3aaaa33e35d9724dfec4e61ddcb14189" translate="yes" xml:space="preserve">
          <source>So:</source>
          <target state="translated">So:</target>
        </trans-unit>
        <trans-unit id="01992d398474b8b1fab78e738874ba17365d3e28" translate="yes" xml:space="preserve">
          <source>Socket type-independent wrapper functions for &lt;code&gt;getsockopt(2)&lt;/code&gt; and &lt;code&gt;setsockopt(2)&lt;/code&gt; system calls for internal &lt;code&gt;net&lt;/code&gt; package use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8cb3846a17e69a8d46eb6f5ada42aa5d1ad5c1" translate="yes" xml:space="preserve">
          <source>Some specific details:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc4e96a478be02a8147b100bd68113f38b89f80" translate="yes" xml:space="preserve">
          <source>Sort</source>
          <target state="translated">Sort</target>
        </trans-unit>
        <trans-unit id="517f04028a5b7e4ea24e5115983db525c44a0783" translate="yes" xml:space="preserve">
          <source>Sort the given seq.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118d2e29116ce6113a9e25f93e305c12b517a046" translate="yes" xml:space="preserve">
          <source>Sort._sort()</source>
          <target state="translated">Sort._sort()</target>
        </trans-unit>
        <trans-unit id="a7b7967e78b0dc40ac608b7af05af2abf417e668" translate="yes" xml:space="preserve">
          <source>Sort._swap()</source>
          <target state="translated">Sort._swap()</target>
        </trans-unit>
        <trans-unit id="5c81bcb792a1e8d4ef5f140ab5be9461b48ecf53" translate="yes" xml:space="preserve">
          <source>Sort.apply()</source>
          <target state="translated">Sort.apply()</target>
        </trans-unit>
        <trans-unit id="c125072900cf82a94e62a449f9ac8bf0a637085b" translate="yes" xml:space="preserve">
          <source>Sort.create()</source>
          <target state="translated">Sort.create()</target>
        </trans-unit>
        <trans-unit id="d6b9ddb87ea490390a5cbc33174aa14c98b6390d" translate="yes" xml:space="preserve">
          <source>Sort.eq()</source>
          <target state="translated">Sort.eq()</target>
        </trans-unit>
        <trans-unit id="e843a2987361a301bb479deacd7f15d2e705dac8" translate="yes" xml:space="preserve">
          <source>Sort.ne()</source>
          <target state="translated">Sort.ne()</target>
        </trans-unit>
        <trans-unit id="f09facabd6ec44aab77d2ce03cf8502f45e0dbb9" translate="yes" xml:space="preserve">
          <source>Sort[A: &lt;a href=&quot;builtin-seq&quot;&gt;Seq&lt;/a&gt;[B] ref, B: &lt;a href=&quot;builtin-comparable&quot;&gt;Comparable&lt;/a&gt;[B] #read]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ceb2865808b4e3335324e3a7b94445fd54d380" translate="yes" xml:space="preserve">
          <source>Source of unit tests for a PonyTest object. See package doc string for further information and example use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="359672d02b3fb38888f044ebdd35cf51f0d30da3" translate="yes" xml:space="preserve">
          <source>SourceLoc</source>
          <target state="translated">SourceLoc</target>
        </trans-unit>
        <trans-unit id="fa6490c642e6bdd9c8f45f2fcc1e2b5ba288fa82" translate="yes" xml:space="preserve">
          <source>SourceLoc.file()</source>
          <target state="translated">SourceLoc.file()</target>
        </trans-unit>
        <trans-unit id="dc8ecd68bd1aecd9025702ce50e467ea2636a94b" translate="yes" xml:space="preserve">
          <source>SourceLoc.line()</source>
          <target state="translated">SourceLoc.line()</target>
        </trans-unit>
        <trans-unit id="7927148bc0f319e8a6d0fb088f12c8975992f448" translate="yes" xml:space="preserve">
          <source>SourceLoc.method_name()</source>
          <target state="translated">SourceLoc.method_name()</target>
        </trans-unit>
        <trans-unit id="0cb4f39172c76bec78a7f101c7ccb618ecccf895" translate="yes" xml:space="preserve">
          <source>SourceLoc.pos()</source>
          <target state="translated">SourceLoc.pos()</target>
        </trans-unit>
        <trans-unit id="75cbc37deee1c012ca9615e09e379e74405bcaa9" translate="yes" xml:space="preserve">
          <source>SourceLoc.type_name()</source>
          <target state="translated">SourceLoc.type_name()</target>
        </trans-unit>
        <trans-unit id="782f6dc212ea3419ff5a4469a116c405c3a0884b" translate="yes" xml:space="preserve">
          <source>Space for len instances of A.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5801f53f044979d9afd469bab0ed4e77bdaca1c" translate="yes" xml:space="preserve">
          <source>Spawn a new connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4379a60050b3f8c0955159ba45aa1d56de9268" translate="yes" xml:space="preserve">
          <source>Specs</source>
          <target state="translated">Specs</target>
        </trans-unit>
        <trans-unit id="3eaf753a813f40303b3b30abe94d4aff6cf5e7a0" translate="yes" xml:space="preserve">
          <source>Split the string into an array of strings that are delimited by &lt;code&gt;delim&lt;/code&gt; in the original string. If &lt;code&gt;n &amp;gt; 0&lt;/code&gt;, then the split count is limited to n.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f5bf278a8194e0cb9b209151dbd826c850edf8" translate="yes" xml:space="preserve">
          <source>Split the string into an array of strings. Any character in the delimiter string is accepted as a delimiter. If &lt;code&gt;n &amp;gt; 0&lt;/code&gt;, then the split count is limited to n.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7bbee53b1c9c610397aed3f484e6e3f8af8b54" translate="yes" xml:space="preserve">
          <source>SplitMix64</source>
          <target state="translated">SplitMix64</target>
        </trans-unit>
        <trans-unit id="983d9b5f2bba65ff9eff41c9bab51dd8efcb22f0" translate="yes" xml:space="preserve">
          <source>SplitMix64._u64_unbiased()</source>
          <target state="translated">SplitMix64._u64_unbiased()</target>
        </trans-unit>
        <trans-unit id="326adc21ebe8fe915160396a22e8ebf5ce970819" translate="yes" xml:space="preserve">
          <source>SplitMix64.create()</source>
          <target state="translated">SplitMix64.create()</target>
        </trans-unit>
        <trans-unit id="d6b40a0285e9c916537cbf2cedc0620bb239ff97" translate="yes" xml:space="preserve">
          <source>SplitMix64.from_u64()</source>
          <target state="translated">SplitMix64.from_u64()</target>
        </trans-unit>
        <trans-unit id="b67f66013c8f1b9c99791fee3744b30544c6bbdc" translate="yes" xml:space="preserve">
          <source>SplitMix64.has_next()</source>
          <target state="translated">SplitMix64.has_next()</target>
        </trans-unit>
        <trans-unit id="fa9e2a319d4ebb78529e462c43962b13ae457079" translate="yes" xml:space="preserve">
          <source>SplitMix64.i128()</source>
          <target state="translated">SplitMix64.i128()</target>
        </trans-unit>
        <trans-unit id="4a3dc441c78160882cbbeeba9e1bfc68afe85814" translate="yes" xml:space="preserve">
          <source>SplitMix64.i16()</source>
          <target state="translated">SplitMix64.i16()</target>
        </trans-unit>
        <trans-unit id="e7645640e05634ca6b25a085492fa67f09d4fae0" translate="yes" xml:space="preserve">
          <source>SplitMix64.i32()</source>
          <target state="translated">SplitMix64.i32()</target>
        </trans-unit>
        <trans-unit id="494fc198f5d116c90f29ac9444702c4e2f1f81d1" translate="yes" xml:space="preserve">
          <source>SplitMix64.i64()</source>
          <target state="translated">SplitMix64.i64()</target>
        </trans-unit>
        <trans-unit id="5e1088062b97ee90c8570cb5799aaea67639f977" translate="yes" xml:space="preserve">
          <source>SplitMix64.i8()</source>
          <target state="translated">SplitMix64.i8()</target>
        </trans-unit>
        <trans-unit id="c6434d39b9e7399b992957062b5f1e45671ace08" translate="yes" xml:space="preserve">
          <source>SplitMix64.ilong()</source>
          <target state="translated">SplitMix64.ilong()</target>
        </trans-unit>
        <trans-unit id="f42abd4b4a2b21c037d5c5688335b3d7002d1dfd" translate="yes" xml:space="preserve">
          <source>SplitMix64.int()</source>
          <target state="translated">SplitMix64.int()</target>
        </trans-unit>
        <trans-unit id="f6f6a7ffaa4b1f3625c1b59a2f60ceeddfb0d518" translate="yes" xml:space="preserve">
          <source>SplitMix64.int_fp_mult()</source>
          <target state="translated">SplitMix64.int_fp_mult()</target>
        </trans-unit>
        <trans-unit id="7af1ebc6a56e79607a1302129b20d1d340b0a8da" translate="yes" xml:space="preserve">
          <source>SplitMix64.int_unbiased()</source>
          <target state="translated">SplitMix64.int_unbiased()</target>
        </trans-unit>
        <trans-unit id="54348b87fe3afdf128ac6621236148dc5cd918f7" translate="yes" xml:space="preserve">
          <source>SplitMix64.isize()</source>
          <target state="translated">SplitMix64.isize()</target>
        </trans-unit>
        <trans-unit id="64bf2b1018a4fdfdd38fdbc966dad0942c72b4cd" translate="yes" xml:space="preserve">
          <source>SplitMix64.next()</source>
          <target state="translated">SplitMix64.next()</target>
        </trans-unit>
        <trans-unit id="972a3300416a460f6e996b2a0d520b97f7519476" translate="yes" xml:space="preserve">
          <source>SplitMix64.real()</source>
          <target state="translated">SplitMix64.real()</target>
        </trans-unit>
        <trans-unit id="88837197612e0e433f5d2cca95bbf583e6f535ae" translate="yes" xml:space="preserve">
          <source>SplitMix64.shuffle()</source>
          <target state="translated">SplitMix64.shuffle()</target>
        </trans-unit>
        <trans-unit id="318aaed13ef9e4e955c20a41de4c95f7a33b69ac" translate="yes" xml:space="preserve">
          <source>SplitMix64.u128()</source>
          <target state="translated">SplitMix64.u128()</target>
        </trans-unit>
        <trans-unit id="db1deaa34e26339a5cebfd32d551064bb96a0490" translate="yes" xml:space="preserve">
          <source>SplitMix64.u16()</source>
          <target state="translated">SplitMix64.u16()</target>
        </trans-unit>
        <trans-unit id="a607abdf74e25ffb25457be5a602e5b3e2f3554a" translate="yes" xml:space="preserve">
          <source>SplitMix64.u32()</source>
          <target state="translated">SplitMix64.u32()</target>
        </trans-unit>
        <trans-unit id="0324c666e4f18549ebdd3dda687835439eba9c0e" translate="yes" xml:space="preserve">
          <source>SplitMix64.u64()</source>
          <target state="translated">SplitMix64.u64()</target>
        </trans-unit>
        <trans-unit id="812d1e9167514611f456279ab6a343d5fdb4f6e9" translate="yes" xml:space="preserve">
          <source>SplitMix64.u8()</source>
          <target state="translated">SplitMix64.u8()</target>
        </trans-unit>
        <trans-unit id="95764304afd37911e5dec346dc4f7a8aaf266bbe" translate="yes" xml:space="preserve">
          <source>SplitMix64.ulong()</source>
          <target state="translated">SplitMix64.ulong()</target>
        </trans-unit>
        <trans-unit id="a7b996b8dcbb4cab6b4b49b1704c86fe56d58740" translate="yes" xml:space="preserve">
          <source>SplitMix64.usize()</source>
          <target state="translated">SplitMix64.usize()</target>
        </trans-unit>
        <trans-unit id="82d79b9fa6c0cef3b5104ac4d9d15407bfa5cf41" translate="yes" xml:space="preserve">
          <source>Splits the path into a pair, (head, tail) where tail is the last pathname component and head is everything leading up to that. The tail part will never contain a slash; if path ends in a slash, tail will be empty. If there is no slash in path, head will be empty. If path is empty, both head and tail are empty. The path in head will be cleaned before it is returned. In all cases, join(head, tail) returns a path to the same location as path (but the strings may differ). Also see the functions dir() and base().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9acb90b993223b450587ac6120a1697306b1101a" translate="yes" xml:space="preserve">
          <source>Start our next receive. This is used only with IOCP on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1bf75dacd3a6b631db6280ebf78cb4b09d63562" translate="yes" xml:space="preserve">
          <source>Start reading off this TCPConnection again after having been muted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed27d5da810ac25de9d78d32900bdda40b61f46" translate="yes" xml:space="preserve">
          <source>StartProcessAuth</source>
          <target state="translated">StartProcessAuth</target>
        </trans-unit>
        <trans-unit id="fcc5c6fb4f20946c0e24348cf4aa4b270ecf7c52" translate="yes" xml:space="preserve">
          <source>StartProcessAuth.create()</source>
          <target state="translated">StartProcessAuth.create()</target>
        </trans-unit>
        <trans-unit id="d62cdffeecf47d36f59e838e0c85d4dd11de2d49" translate="yes" xml:space="preserve">
          <source>StartProcessAuth.eq()</source>
          <target state="translated">StartProcessAuth.eq()</target>
        </trans-unit>
        <trans-unit id="5829efa32c7e0c70092158c4f10085f52633a444" translate="yes" xml:space="preserve">
          <source>StartProcessAuth.ne()</source>
          <target state="translated">StartProcessAuth.ne()</target>
        </trans-unit>
        <trans-unit id="f187fc429f4baaf1f243e44e3303328c03854a81" translate="yes" xml:space="preserve">
          <source>StdStream</source>
          <target state="translated">StdStream</target>
        </trans-unit>
        <trans-unit id="fd9896bf5ceb6fc60bf33c4b3e243bef08f0519e" translate="yes" xml:space="preserve">
          <source>StdStream._err()</source>
          <target state="translated">StdStream._err()</target>
        </trans-unit>
        <trans-unit id="2df28d2f387356afafb29809739b5dd29617efb0" translate="yes" xml:space="preserve">
          <source>StdStream._out()</source>
          <target state="translated">StdStream._out()</target>
        </trans-unit>
        <trans-unit id="7de1e916be2f9a8fde2a516698cacd16f9a5b775" translate="yes" xml:space="preserve">
          <source>StdStream._print()</source>
          <target state="translated">StdStream._print()</target>
        </trans-unit>
        <trans-unit id="2535d388efed25f46133255f619fb55bcdea2acf" translate="yes" xml:space="preserve">
          <source>StdStream._write()</source>
          <target state="translated">StdStream._write()</target>
        </trans-unit>
        <trans-unit id="f98ce1939f6c8ac7a2bba7790d8c674b1602b83e" translate="yes" xml:space="preserve">
          <source>StdStream.flush()</source>
          <target state="translated">StdStream.flush()</target>
        </trans-unit>
        <trans-unit id="157f3a9388ebe299f0c009b9104b207b61cf7458" translate="yes" xml:space="preserve">
          <source>StdStream.print()</source>
          <target state="translated">StdStream.print()</target>
        </trans-unit>
        <trans-unit id="17a31233bec5029bab1b73afcad5ec6a7dc26c53" translate="yes" xml:space="preserve">
          <source>StdStream.printv()</source>
          <target state="translated">StdStream.printv()</target>
        </trans-unit>
        <trans-unit id="b5bbad2d84fba12502ea76d0f6902be9f3abd710" translate="yes" xml:space="preserve">
          <source>StdStream.write()</source>
          <target state="translated">StdStream.write()</target>
        </trans-unit>
        <trans-unit id="eb5e6ac4d2ac8932156c64df7393174c648fe336" translate="yes" xml:space="preserve">
          <source>StdStream.writev()</source>
          <target state="translated">StdStream.writev()</target>
        </trans-unit>
        <trans-unit id="927c0d79b4b2eabe16132d556b905f82babde15d" translate="yes" xml:space="preserve">
          <source>Stderr</source>
          <target state="translated">Stderr</target>
        </trans-unit>
        <trans-unit id="11e24b80fd15f7632d985d906dd107d9681c3bd0" translate="yes" xml:space="preserve">
          <source>Stdin</source>
          <target state="translated">Stdin</target>
        </trans-unit>
        <trans-unit id="4c5b665c6a354a1e96e8385a6dd69d1829b60ae0" translate="yes" xml:space="preserve">
          <source>Stdin represented as an actor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae9b69585e694d66e70edc4bdf5718054c088cc" translate="yes" xml:space="preserve">
          <source>Stdin._close_event()</source>
          <target state="translated">Stdin._close_event()</target>
        </trans-unit>
        <trans-unit id="f0443bf2aefd71e1d4a0f3807c658e9a7609f5a4" translate="yes" xml:space="preserve">
          <source>Stdin._create()</source>
          <target state="translated">Stdin._create()</target>
        </trans-unit>
        <trans-unit id="64ff1072d8711328a1bc5a7de79a878d28e9d87c" translate="yes" xml:space="preserve">
          <source>Stdin._event_notify()</source>
          <target state="translated">Stdin._event_notify()</target>
        </trans-unit>
        <trans-unit id="ce26cb791ee13d0bf830fab74134ea8caf474fa5" translate="yes" xml:space="preserve">
          <source>Stdin._loop_read()</source>
          <target state="translated">Stdin._loop_read()</target>
        </trans-unit>
        <trans-unit id="24d364c4782437a6d4b2e079591398ad24063c65" translate="yes" xml:space="preserve">
          <source>Stdin._read()</source>
          <target state="translated">Stdin._read()</target>
        </trans-unit>
        <trans-unit id="4c06a7cfc6390811008a061481ae0403decc83b7" translate="yes" xml:space="preserve">
          <source>Stdin._read_again()</source>
          <target state="translated">Stdin._read_again()</target>
        </trans-unit>
        <trans-unit id="0884d47f49a3efd13923edc89a1e5b04fbce7402" translate="yes" xml:space="preserve">
          <source>Stdin._set_notify()</source>
          <target state="translated">Stdin._set_notify()</target>
        </trans-unit>
        <trans-unit id="e78a906075cd8f0130198bcabbab92b8dd2baf0d" translate="yes" xml:space="preserve">
          <source>Stdin.apply()</source>
          <target state="translated">Stdin.apply()</target>
        </trans-unit>
        <trans-unit id="f36b940227e85bb1cbdb05ffc04efb17da91febc" translate="yes" xml:space="preserve">
          <source>Stdin.dispose()</source>
          <target state="translated">Stdin.dispose()</target>
        </trans-unit>
        <trans-unit id="1c8100935a282240c132b02399fce393f72604be" translate="yes" xml:space="preserve">
          <source>Stdout</source>
          <target state="translated">Stdout</target>
        </trans-unit>
        <trans-unit id="88b7aa5ed07b9243f9d4ded74189725776a9ace3" translate="yes" xml:space="preserve">
          <source>Stop accepting input, inform the notifier we have closed, and dispose of our source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e523e4e12907bf2ed141d2cfe72dccb25eafab1" translate="yes" xml:space="preserve">
          <source>Stop listening.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10720aa36b6bde32af66d734b150bb43fe26a1eb" translate="yes" xml:space="preserve">
          <source>Store network data and provide a parsing interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="f7b9c29f42bb44ef2ef1c009b00684ee5184dba0" translate="yes" xml:space="preserve">
          <source>String Logger</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e12ecac06b76991a363cf2b285da75beefad424" translate="yes" xml:space="preserve">
          <source>String._append()</source>
          <target state="translated">String._append()</target>
        </trans-unit>
        <trans-unit id="4f28dd60659eb4c6ff1163880e9a8f416ed75719" translate="yes" xml:space="preserve">
          <source>String._copy_to()</source>
          <target state="translated">String._copy_to()</target>
        </trans-unit>
        <trans-unit id="50cbef5a3f4c706ee5234f1888d510e1a370459a" translate="yes" xml:space="preserve">
          <source>String._read_int_base()</source>
          <target state="translated">String._read_int_base()</target>
        </trans-unit>
        <trans-unit id="d77fcd9c70ac8e5c025b5f59d9d40007b340efd4" translate="yes" xml:space="preserve">
          <source>String._set()</source>
          <target state="translated">String._set()</target>
        </trans-unit>
        <trans-unit id="c85d1cbe2843ee98718f0ecffa47199ab2086f77" translate="yes" xml:space="preserve">
          <source>String._to_int()</source>
          <target state="translated">String._to_int()</target>
        </trans-unit>
        <trans-unit id="77eecfebb0447ea9c4216b5c5463f73c0c801c45" translate="yes" xml:space="preserve">
          <source>String.add()</source>
          <target state="translated">String.add()</target>
        </trans-unit>
        <trans-unit id="95a35ba4369362ceb9d3400364670f1fde676a6e" translate="yes" xml:space="preserve">
          <source>String.append()</source>
          <target state="translated">String.append()</target>
        </trans-unit>
        <trans-unit id="e61d38eba5dd539f102fde221032c0dd3fccff46" translate="yes" xml:space="preserve">
          <source>String.apply()</source>
          <target state="translated">String.apply()</target>
        </trans-unit>
        <trans-unit id="883e935385537abde49f9e5ffaeff7dcfa538f95" translate="yes" xml:space="preserve">
          <source>String.array()</source>
          <target state="translated">String.array()</target>
        </trans-unit>
        <trans-unit id="708747746587f3aae0e455240fb6d8aa7039594d" translate="yes" xml:space="preserve">
          <source>String.at()</source>
          <target state="translated">String.at()</target>
        </trans-unit>
        <trans-unit id="17ae963541206cd684c0063a3790392a842a7abb" translate="yes" xml:space="preserve">
          <source>String.at_offset()</source>
          <target state="translated">String.at_offset()</target>
        </trans-unit>
        <trans-unit id="eea6dafc6b51ec958c459fec0da3b26f7ad8ff7f" translate="yes" xml:space="preserve">
          <source>String.bool()</source>
          <target state="translated">String.bool()</target>
        </trans-unit>
        <trans-unit id="fa7c361eb7b7a076cef68bc525f93ea6e9d1a62d" translate="yes" xml:space="preserve">
          <source>String.chop()</source>
          <target state="translated">String.chop()</target>
        </trans-unit>
        <trans-unit id="cd09c49d177531b50bec82f6f2052bd9e7dfc4f2" translate="yes" xml:space="preserve">
          <source>String.clear()</source>
          <target state="translated">String.clear()</target>
        </trans-unit>
        <trans-unit id="7bacac025cc514e9c4fd07f8adf698e4a147e5ec" translate="yes" xml:space="preserve">
          <source>String.clone()</source>
          <target state="translated">String.clone()</target>
        </trans-unit>
        <trans-unit id="9b2d81291f00a877f251d63762734d5df75b222b" translate="yes" xml:space="preserve">
          <source>String.codepoints()</source>
          <target state="translated">String.codepoints()</target>
        </trans-unit>
        <trans-unit id="2de2936ed90ba402284e3417b3d1cc364d302820" translate="yes" xml:space="preserve">
          <source>String.compact()</source>
          <target state="translated">String.compact()</target>
        </trans-unit>
        <trans-unit id="4f050a0c1053d40972ec2a065eb3b1e02097283c" translate="yes" xml:space="preserve">
          <source>String.compare()</source>
          <target state="translated">String.compare()</target>
        </trans-unit>
        <trans-unit id="76bc0d578fa8ad410f5d98382ee342b6aa91ecbe" translate="yes" xml:space="preserve">
          <source>String.compare_sub()</source>
          <target state="translated">String.compare_sub()</target>
        </trans-unit>
        <trans-unit id="8683c789bb4260c1b8540de932ae14280a64d71d" translate="yes" xml:space="preserve">
          <source>String.concat()</source>
          <target state="translated">String.concat()</target>
        </trans-unit>
        <trans-unit id="6be121cf017a7e70fa67f5b92d83392c834ed03b" translate="yes" xml:space="preserve">
          <source>String.contains()</source>
          <target state="translated">String.contains()</target>
        </trans-unit>
        <trans-unit id="6501b703b428b572d1a4b868a881e48f353ec7a9" translate="yes" xml:space="preserve">
          <source>String.copy_cpointer()</source>
          <target state="translated">String.copy_cpointer()</target>
        </trans-unit>
        <trans-unit id="5535df1cd52cb575ce1a2fd78662b0b07052725f" translate="yes" xml:space="preserve">
          <source>String.copy_cstring()</source>
          <target state="translated">String.copy_cstring()</target>
        </trans-unit>
        <trans-unit id="38278165aa0b812c30b1e8ff3d2ac42e825ea8ef" translate="yes" xml:space="preserve">
          <source>String.count()</source>
          <target state="translated">String.count()</target>
        </trans-unit>
        <trans-unit id="60df6fffc4d711bdd97c10dfc37d903450212940" translate="yes" xml:space="preserve">
          <source>String.cpointer()</source>
          <target state="translated">String.cpointer()</target>
        </trans-unit>
        <trans-unit id="d798a314d2981af8caf5c050204965d16d7c6c07" translate="yes" xml:space="preserve">
          <source>String.create()</source>
          <target state="translated">String.create()</target>
        </trans-unit>
        <trans-unit id="7ab0cdd93f510bb7ed3618c1d356b63e2d1b9a07" translate="yes" xml:space="preserve">
          <source>String.cstring()</source>
          <target state="translated">String.cstring()</target>
        </trans-unit>
        <trans-unit id="fa6ac29738ab3da1baecac3b79004bc9704b89b7" translate="yes" xml:space="preserve">
          <source>String.cut()</source>
          <target state="translated">String.cut()</target>
        </trans-unit>
        <trans-unit id="820948dfee87d77ee9ea61f7e3124492e6ddea4e" translate="yes" xml:space="preserve">
          <source>String.cut_in_place()</source>
          <target state="translated">String.cut_in_place()</target>
        </trans-unit>
        <trans-unit id="ecf187a45c659b17c372790ab4a57221446fbc66" translate="yes" xml:space="preserve">
          <source>String.delete()</source>
          <target state="translated">String.delete()</target>
        </trans-unit>
        <trans-unit id="e058471683701f291652ccc7bf3967feb68d7d60" translate="yes" xml:space="preserve">
          <source>String.eq()</source>
          <target state="translated">String.eq()</target>
        </trans-unit>
        <trans-unit id="9d743fcc167752f7c9e1a7464b1f474768b9f9d4" translate="yes" xml:space="preserve">
          <source>String.f32()</source>
          <target state="translated">String.f32()</target>
        </trans-unit>
        <trans-unit id="0cd293d0efa87fb408a69236ae4b5c3ddbafcde0" translate="yes" xml:space="preserve">
          <source>String.f64()</source>
          <target state="translated">String.f64()</target>
        </trans-unit>
        <trans-unit id="fdbeb96e01fbc1812d3e0d343c3766d8fb3982d2" translate="yes" xml:space="preserve">
          <source>String.find()</source>
          <target state="translated">String.find()</target>
        </trans-unit>
        <trans-unit id="a09a1d55759fb1475ec938cbe99d0bf8a96d8633" translate="yes" xml:space="preserve">
          <source>String.from_array()</source>
          <target state="translated">String.from_array()</target>
        </trans-unit>
        <trans-unit id="483e6a33f7e1bec01acde9ecec56e86b4a9e6bf5" translate="yes" xml:space="preserve">
          <source>String.from_cpointer()</source>
          <target state="translated">String.from_cpointer()</target>
        </trans-unit>
        <trans-unit id="c6ebc915598bbf9bf050366cd996ea5103c9e91a" translate="yes" xml:space="preserve">
          <source>String.from_cstring()</source>
          <target state="translated">String.from_cstring()</target>
        </trans-unit>
        <trans-unit id="1cb650f6a740b5a31d6184be92bfd7a2c873846b" translate="yes" xml:space="preserve">
          <source>String.from_iso_array()</source>
          <target state="translated">String.from_iso_array()</target>
        </trans-unit>
        <trans-unit id="abbd27d53c8f191352985e199f87d36a66d1c5bd" translate="yes" xml:space="preserve">
          <source>String.from_utf32()</source>
          <target state="translated">String.from_utf32()</target>
        </trans-unit>
        <trans-unit id="17d6fb4e19939a1305b308d59e78a13a59485462" translate="yes" xml:space="preserve">
          <source>String.ge()</source>
          <target state="translated">String.ge()</target>
        </trans-unit>
        <trans-unit id="6d20b0b49874c0122d0803fb22a9d072024df526" translate="yes" xml:space="preserve">
          <source>String.gt()</source>
          <target state="translated">String.gt()</target>
        </trans-unit>
        <trans-unit id="fb1df17bb3ec47b4412a29f92d18a9bf7b1e77a7" translate="yes" xml:space="preserve">
          <source>String.hash()</source>
          <target state="translated">String.hash()</target>
        </trans-unit>
        <trans-unit id="69b0c5548aaa9b3274826ebf5eb2b25d623cade0" translate="yes" xml:space="preserve">
          <source>String.hash64()</source>
          <target state="translated">String.hash64()</target>
        </trans-unit>
        <trans-unit id="8438f790b6323a16182a658241029912ed5778e3" translate="yes" xml:space="preserve">
          <source>String.i128()</source>
          <target state="translated">String.i128()</target>
        </trans-unit>
        <trans-unit id="436d71e3163fb79d5af00e3c7f7df0d252314b82" translate="yes" xml:space="preserve">
          <source>String.i16()</source>
          <target state="translated">String.i16()</target>
        </trans-unit>
        <trans-unit id="97cc1b053d95d62dee8c073c9a1362b354638abc" translate="yes" xml:space="preserve">
          <source>String.i32()</source>
          <target state="translated">String.i32()</target>
        </trans-unit>
        <trans-unit id="93316a55f1dcd34885d386bfd1e30b6d21539390" translate="yes" xml:space="preserve">
          <source>String.i64()</source>
          <target state="translated">String.i64()</target>
        </trans-unit>
        <trans-unit id="3bf51eb2ea6fa1798178f34821f4a59cbe0409ae" translate="yes" xml:space="preserve">
          <source>String.i8()</source>
          <target state="translated">String.i8()</target>
        </trans-unit>
        <trans-unit id="06a3550e299b4d5bd503f5c5407590c3056e46e4" translate="yes" xml:space="preserve">
          <source>String.ilong()</source>
          <target state="translated">String.ilong()</target>
        </trans-unit>
        <trans-unit id="c303aa46387b22accf217d5ba4d3f749e53952b6" translate="yes" xml:space="preserve">
          <source>String.insert()</source>
          <target state="translated">String.insert()</target>
        </trans-unit>
        <trans-unit id="e178e650a2e8aabcf2c08107af3ee74837a3d65b" translate="yes" xml:space="preserve">
          <source>String.insert_byte()</source>
          <target state="translated">String.insert_byte()</target>
        </trans-unit>
        <trans-unit id="dd3a7fe5da06112471cc104d867fc2c750cc0ba3" translate="yes" xml:space="preserve">
          <source>String.insert_in_place()</source>
          <target state="translated">String.insert_in_place()</target>
        </trans-unit>
        <trans-unit id="fc9bdc4b2aa6378e8bb1a2e3e43bfad5c6d09f77" translate="yes" xml:space="preserve">
          <source>String.is_null_terminated()</source>
          <target state="translated">String.is_null_terminated()</target>
        </trans-unit>
        <trans-unit id="6859b9b03deaa8d0994c0f45560cd9a94f5a4730" translate="yes" xml:space="preserve">
          <source>String.isize()</source>
          <target state="translated">String.isize()</target>
        </trans-unit>
        <trans-unit id="ebc8173ec8f1dcaf4f06b86aec6effad1c77d1c5" translate="yes" xml:space="preserve">
          <source>String.iso_array()</source>
          <target state="translated">String.iso_array()</target>
        </trans-unit>
        <trans-unit id="e29acf9ecd6fa9f7fe13c9e4c872502ec5b85122" translate="yes" xml:space="preserve">
          <source>String.join()</source>
          <target state="translated">String.join()</target>
        </trans-unit>
        <trans-unit id="5e6115240b5d0bee61274d3258c0cc5c883fb190" translate="yes" xml:space="preserve">
          <source>String.le()</source>
          <target state="translated">String.le()</target>
        </trans-unit>
        <trans-unit id="99cbaeafe1b2142258b137cbaca43c83474faeef" translate="yes" xml:space="preserve">
          <source>String.lower()</source>
          <target state="translated">String.lower()</target>
        </trans-unit>
        <trans-unit id="d585b6765120c7f3c7b6b98f7ae3e1d5c7bcbdc3" translate="yes" xml:space="preserve">
          <source>String.lower_in_place()</source>
          <target state="translated">String.lower_in_place()</target>
        </trans-unit>
        <trans-unit id="25227eae3cd8656b4b510d46f85318633c500c94" translate="yes" xml:space="preserve">
          <source>String.lstrip()</source>
          <target state="translated">String.lstrip()</target>
        </trans-unit>
        <trans-unit id="94e13d1162ff807e4763b02fab82e468af982c1c" translate="yes" xml:space="preserve">
          <source>String.lt()</source>
          <target state="translated">String.lt()</target>
        </trans-unit>
        <trans-unit id="d53cdf0044aa943b0a68b6122acc2f5822e1e4b8" translate="yes" xml:space="preserve">
          <source>String.mul()</source>
          <target state="translated">String.mul()</target>
        </trans-unit>
        <trans-unit id="7686004a86116fe389632aeaf2a6836f0f76984e" translate="yes" xml:space="preserve">
          <source>String.ne()</source>
          <target state="translated">String.ne()</target>
        </trans-unit>
        <trans-unit id="1ab2f4e5f6e602db66b824fe819497b8cfdb7618" translate="yes" xml:space="preserve">
          <source>String.offset_to_index()</source>
          <target state="translated">String.offset_to_index()</target>
        </trans-unit>
        <trans-unit id="47f4ee6a219578b04eadf22664c8b60bd8390166" translate="yes" xml:space="preserve">
          <source>String.pop()</source>
          <target state="translated">String.pop()</target>
        </trans-unit>
        <trans-unit id="8277bf9e5af0caaaabad73a8f815ec8a25e545a7" translate="yes" xml:space="preserve">
          <source>String.push()</source>
          <target state="translated">String.push()</target>
        </trans-unit>
        <trans-unit id="6e81e44c5288edcc5c59907ac6ef9d68c3bc95b2" translate="yes" xml:space="preserve">
          <source>String.push_utf32()</source>
          <target state="translated">String.push_utf32()</target>
        </trans-unit>
        <trans-unit id="0811337378bfb1a43c7eefeb93778f8924f65344" translate="yes" xml:space="preserve">
          <source>String.read_int()</source>
          <target state="translated">String.read_int()</target>
        </trans-unit>
        <trans-unit id="7df73d2727ac583290f10b88b27a2815593a8d36" translate="yes" xml:space="preserve">
          <source>String.recalc()</source>
          <target state="translated">String.recalc()</target>
        </trans-unit>
        <trans-unit id="7fbe4c31c4687ec728baaf0525caa9d4affe6e07" translate="yes" xml:space="preserve">
          <source>String.remove()</source>
          <target state="translated">String.remove()</target>
        </trans-unit>
        <trans-unit id="7fff47b27cb210ad4dc0eae745eca821033e0665" translate="yes" xml:space="preserve">
          <source>String.repeat_str()</source>
          <target state="translated">String.repeat_str()</target>
        </trans-unit>
        <trans-unit id="4fa43e6c2bfc99a5d5595026979678898717cba3" translate="yes" xml:space="preserve">
          <source>String.replace()</source>
          <target state="translated">String.replace()</target>
        </trans-unit>
        <trans-unit id="8a40457d16ba3d13ba9b4b814f9dfa854d07631f" translate="yes" xml:space="preserve">
          <source>String.reserve()</source>
          <target state="translated">String.reserve()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
