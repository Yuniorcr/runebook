<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="docker">
    <body>
      <group id="docker">
        <trans-unit id="bb41e99c9aff699c5080b3991e8752ac32858843" translate="yes" xml:space="preserve">
          <source>The 4th container fails and reports &amp;ldquo;[8] System error: resource temporarily unavailable&amp;rdquo; error. This fails because the caller set &lt;code&gt;nproc=3&lt;/code&gt; resulting in the first three containers using up the three processes quota set for the &lt;code&gt;daemon&lt;/code&gt; user.</source>
          <target state="translated">4番目のコンテナーが失敗し、「[8]システムエラー：リソースが一時的に利用できません」エラーが報告されます。呼び出し元が &lt;code&gt;nproc=3&lt;/code&gt; を設定した結果、最初の3つのコンテナーが &lt;code&gt;daemon&lt;/code&gt; ユーザーに設定された3つのプロセスクォータを使用するため、これは失敗します。</target>
        </trans-unit>
        <trans-unit id="cebd5eb02d39d7497be7af8026f9c48eeca2be59" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#compatibility-matrix&quot;&gt;Compatibility Matrix&lt;/a&gt; shows Compose file versions mapped to Docker Engine releases.</source>
          <target state="translated">&lt;a href=&quot;#compatibility-matrix&quot;&gt;互換性マトリックスは、&lt;/a&gt;ドッカーエンジンのリリースにマッピングされた作曲ファイルのバージョンを示しています。</target>
        </trans-unit>
        <trans-unit id="b7a1f2f65fda41b01612fd40aaaa3de01a0f93ad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../extend/plugin_api/index#json-specification&quot;&gt;&lt;code&gt;PluginSpec&lt;/code&gt;&lt;/a&gt; is defined by the plugin developer. To add the plugin to all Docker nodes, use the &lt;a href=&quot;https://docs.docker.com/engine/api/v1.31/#operation/ServiceCreate&quot;&gt;&lt;code&gt;service/create&lt;/code&gt;&lt;/a&gt; API, passing the &lt;code&gt;PluginSpec&lt;/code&gt; JSON defined in the &lt;code&gt;TaskTemplate&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../extend/plugin_api/index#json-specification&quot;&gt; &lt;code&gt;PluginSpec&lt;/code&gt; は&lt;/a&gt;、プラグインの開発者によって定義されます。プラグインをすべてのDockerノードに追加するには、&lt;a href=&quot;https://docs.docker.com/engine/api/v1.31/#operation/ServiceCreate&quot;&gt; &lt;code&gt;service/create&lt;/code&gt; &lt;/a&gt; APIを使用して、 &lt;code&gt;PluginSpec&lt;/code&gt; 定義された &lt;code&gt;TaskTemplate&lt;/code&gt; JSON を渡します。</target>
        </trans-unit>
        <trans-unit id="73eeeb2a3c032a0ea6d429f4744721f37565d8f4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../commandline/build/index&quot;&gt;&lt;code&gt;docker build&lt;/code&gt;&lt;/a&gt; command builds an image from a &lt;code&gt;Dockerfile&lt;/code&gt; and a &lt;em&gt;context&lt;/em&gt;. The build&amp;rsquo;s context is the set of files at a specified location &lt;code&gt;PATH&lt;/code&gt; or &lt;code&gt;URL&lt;/code&gt;. The &lt;code&gt;PATH&lt;/code&gt; is a directory on your local filesystem. The &lt;code&gt;URL&lt;/code&gt; is a Git repository location.</source>
          <target state="translated">&lt;a href=&quot;../commandline/build/index&quot;&gt; &lt;code&gt;docker build&lt;/code&gt; &lt;/a&gt;コマンドがよりイメージのビルド &lt;code&gt;Dockerfile&lt;/code&gt; および&lt;em&gt;コンテキストを&lt;/em&gt;。ビルドのコンテキストは、指定された場所 &lt;code&gt;PATH&lt;/code&gt; または &lt;code&gt;URL&lt;/code&gt; にあるファイルのセットです。 &lt;code&gt;PATH&lt;/code&gt; は、ローカルファイルシステム上のディレクトリです。 &lt;code&gt;URL&lt;/code&gt; は、 Gitのリポジトリの場所です。</target>
        </trans-unit>
        <trans-unit id="c5f4ed1ae5916f39e4823b8399b775c3b2e70409" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../compose-file-v2/index#depends_on&quot;&gt;&lt;code&gt;depends_on&lt;/code&gt;&lt;/a&gt; option can be used in place of links to indicate dependencies between services and startup order.</source>
          <target state="translated">&lt;a href=&quot;../compose-file-v2/index#depends_on&quot;&gt; &lt;code&gt;depends_on&lt;/code&gt; の&lt;/a&gt;オプションは、サービスや起動順序間の依存性を示すために、リンクの代わりに使用することができます。</target>
        </trans-unit>
        <trans-unit id="018f7b331a3235cebca4b4072ded7099501dab4f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;compose-file/index&quot;&gt;Compose file&lt;/a&gt; provides a way to document and configure all of the application&amp;rsquo;s service dependencies (databases, queues, caches, web service APIs, etc). Using the Compose command line tool you can create and start one or more containers for each dependency with a single command (&lt;code&gt;docker-compose up&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;compose-file/index&quot;&gt;作曲ファイルには、&lt;/a&gt;アプリケーションのすべてのサービスの依存関係の文書化と設定方法（データベース、キュー、キャッシュ、ウェブサービスAPIなど）を提供します。Composeコマンドラインツールを使用すると、単一のコマンド（ &lt;code&gt;docker-compose up&lt;/code&gt; ）で、依存関係ごとに1つ以上のコンテナーを作成して開始できます。</target>
        </trans-unit>
        <trans-unit id="87fa9331ae9490bf7870124f14587e5c346d0b78" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.docker.com/install&quot;&gt;installation section&lt;/a&gt; shows you how to install Docker on a variety of platforms.</source>
          <target state="translated">&lt;a href=&quot;https://docs.docker.com/install&quot;&gt;インストールセクションには、&lt;/a&gt;さまざまなプラットフォームでドッカーをインストールする方法を示します。</target>
        </trans-unit>
        <trans-unit id="6b33d5ede8e3026d0ca1bc748f5aa28796c41cf8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.docker.com/storage/storagedriver/select-storage-driver/#docker-ce&quot;&gt;default storage driver&lt;/a&gt; may fail on Debian, specifying &lt;code&gt;overlay2&lt;/code&gt; should resolve this issue.</source>
          <target state="translated">&lt;a href=&quot;https://docs.docker.com/storage/storagedriver/select-storage-driver/#docker-ce&quot;&gt;デフォルトのストレージドライバを&lt;/a&gt;指定して、Debianの上で失敗することがあり &lt;code&gt;overlay2&lt;/code&gt; は、この問題を解決する必要があります。</target>
        </trans-unit>
        <trans-unit id="628b046b134e285847b720a7dd669b6db236e360" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/docker/libnetwork&quot;&gt;LibNetwork&lt;/a&gt; project</source>
          <target state="translated">&lt;a href=&quot;https://github.com/docker/libnetwork&quot;&gt;LibNetwork&lt;/a&gt;プロジェクト</target>
        </trans-unit>
        <trans-unit id="b662250e23d13987f6741fabca2dfda9a8da7838" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/go-sql-driver/mysql&quot;&gt; the Data Source Name used to access the DB.&lt;/a&gt; ( include &lt;code&gt;parseTime=true&lt;/code&gt; as part of the DSN)</source>
          <target state="translated">&lt;a href=&quot;https://github.com/go-sql-driver/mysql&quot;&gt;データソース名は、DBへのアクセスに使用されます。&lt;/a&gt;（DSNの一部として &lt;code&gt;parseTime=true&lt;/code&gt; を含めます）</target>
        </trans-unit>
        <trans-unit id="fd73d42be4fd177aa9ab1fed999f88e1afe43fbc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/go-sql-driver/mysql&quot;&gt; the Data Source Name used to access the DB.&lt;/a&gt; (include &lt;code&gt;parseTime=true&lt;/code&gt; as part of the DSN)</source>
          <target state="translated">&lt;a href=&quot;https://github.com/go-sql-driver/mysql&quot;&gt;データソース名は、DBへのアクセスに使用されます。&lt;/a&gt;（DSNの一部として &lt;code&gt;parseTime=true&lt;/code&gt; を含める）</target>
        </trans-unit>
        <trans-unit id="504f0db06e322e719534c5c4a5a6576e4f23edb4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.exoscale.com/templates/&quot;&gt;VM templates&lt;/a&gt; available at Exoscale are listed on the Portal when adding a new instance.</source>
          <target state="translated">&lt;a href=&quot;https://www.exoscale.com/templates/&quot;&gt;VMテンプレート&lt;/a&gt;の新しいインスタンスを追加するときExoscaleでご利用いただけますがポータルに表示されます。</target>
        </trans-unit>
        <trans-unit id="1e0a8ecc927fdc7e3340ea02fe6771187b8cca0c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;index&quot;&gt;Understanding Docker section&lt;/a&gt; helps you:</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;理解ドッカーセクションでは&lt;/a&gt;、次のことに役立ちます。</target>
        </trans-unit>
        <trans-unit id="4284d13cb4745a7492b807ffca26395534a811e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;${variable_name}&lt;/code&gt; syntax also supports a few of the standard &lt;code&gt;bash&lt;/code&gt; modifiers as specified below:</source>
          <target state="translated">&lt;code&gt;${variable_name}&lt;/code&gt; 構文は、標準のいくつかのサポート &lt;code&gt;bash&lt;/code&gt; の下に指定されている修飾子：</target>
        </trans-unit>
        <trans-unit id="67a51f2b831d7d69d9eddea8b3cf5f1cc026ce01" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;PUBLISHED-PORT&amp;gt;&lt;/code&gt; is the port where the swarm makes the service available. If you omit it, a random high-numbered port is bound. The &lt;code&gt;&amp;lt;CONTAINER-PORT&amp;gt;&lt;/code&gt; is the port where the container listens. This parameter is required.</source>
          <target state="translated">&lt;code&gt;&amp;lt;PUBLISHED-PORT&amp;gt;&lt;/code&gt; 群れがサービスを利用可能にするポートです。省略した場合、ランダムに大きい番号のポートがバインドされます。 &lt;code&gt;&amp;lt;CONTAINER-PORT&amp;gt;&lt;/code&gt; どこコンテナリッスンポートです。このパラメーターは必須です。</target>
        </trans-unit>
        <trans-unit id="a57f293402afe0c5879e54f7873750bb0d8b3939" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;dest&amp;gt;&lt;/code&gt; is an absolute path, or a path relative to &lt;code&gt;WORKDIR&lt;/code&gt;, into which the source will be copied inside the destination container.</source>
          <target state="translated">&lt;code&gt;&amp;lt;dest&amp;gt;&lt;/code&gt; 、絶対パス、または相対パスである &lt;code&gt;WORKDIR&lt;/code&gt; ソースが宛先コンテナ内にコピー先となります、。</target>
        </trans-unit>
        <trans-unit id="f72a134e51f24916887b605c8357253041c38107" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;src&amp;gt;&lt;/code&gt; path must be inside the &lt;em&gt;context&lt;/em&gt; of the build; you cannot &lt;code&gt;ADD ../something /something&lt;/code&gt;, because the first step of a &lt;code&gt;docker build&lt;/code&gt; is to send the context directory (and subdirectories) to the docker daemon.</source>
          <target state="translated">&lt;code&gt;&amp;lt;src&amp;gt;&lt;/code&gt; パス内でなければならない&lt;em&gt;状況&lt;/em&gt;ビルドの。 &lt;code&gt;ADD ../something /something&lt;/code&gt; することはできません。Docker &lt;code&gt;docker build&lt;/code&gt; 最初のステップは、コンテキストディレクトリ（およびサブディレクトリ）をdockerデーモンに送信することです。</target>
        </trans-unit>
        <trans-unit id="dc1afca2b065dd1b6a9740d25d7aa2a3ebf159b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;src&amp;gt;&lt;/code&gt; path must be inside the &lt;em&gt;context&lt;/em&gt; of the build; you cannot &lt;code&gt;COPY ../something /something&lt;/code&gt;, because the first step of a &lt;code&gt;docker build&lt;/code&gt; is to send the context directory (and subdirectories) to the docker daemon.</source>
          <target state="translated">&lt;code&gt;&amp;lt;src&amp;gt;&lt;/code&gt; パス内でなければならない&lt;em&gt;状況&lt;/em&gt;ビルドの。 &lt;code&gt;COPY ../something /something&lt;/code&gt; することはできません。Docker &lt;code&gt;docker build&lt;/code&gt; 最初のステップは、コンテキストディレクトリ（およびサブディレクトリ）をdockerデーモンに送信することです。</target>
        </trans-unit>
        <trans-unit id="3a3a213a12552b6e7f649b0b0cdf56d19ec341db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;/code&gt; next to the node ID indicates that you&amp;rsquo;re currently connected on this node.</source>
          <target state="translated">ノードIDの横の &lt;code&gt;*&lt;/code&gt; は、現在このノードに接続していることを示します。</target>
        </trans-unit>
        <trans-unit id="bb630ccd56d5687939202633b11ad7715a867b16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--advertise-addr&lt;/code&gt; flag configures the manager node to publish its address as &lt;code&gt;192.168.99.100&lt;/code&gt;. The other nodes in the swarm must be able to access the manager at the IP address.</source>
          <target state="translated">&lt;code&gt;--advertise-addr&lt;/code&gt; フラグとしてそのアドレスを公開する管理ノード構成 &lt;code&gt;192.168.99.100&lt;/code&gt; を。スウォーム内の他のノードは、IPアドレスでマネージャーにアクセスできる必要があります。</target>
        </trans-unit>
        <trans-unit id="ec919e6dd21335064b00777c52cd63ecae7ba32d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--blkio-weight-device=&quot;DEVICE_NAME:WEIGHT&quot;&lt;/code&gt; flag sets a specific device weight. The &lt;code&gt;DEVICE_NAME:WEIGHT&lt;/code&gt; is a string containing a colon-separated device name and weight. For example, to set &lt;code&gt;/dev/sda&lt;/code&gt; device weight to &lt;code&gt;200&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;--blkio-weight-device=&quot;DEVICE_NAME:WEIGHT&quot;&lt;/code&gt; フラグは、特定のデバイスの重みを設定します。 &lt;code&gt;DEVICE_NAME:WEIGHT&lt;/code&gt; コロンで区切られたデバイス名と重量を含む文字列です。たとえば、 &lt;code&gt;/dev/sda&lt;/code&gt; デバイスの重みを &lt;code&gt;200&lt;/code&gt; に設定するには：</target>
        </trans-unit>
        <trans-unit id="b22bb7e3dc97be5255fb3143973a08918865460c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--blkio-weight&lt;/code&gt; flag can set the weighting to a value between 10 to 1000. For example, the commands below create two containers with different blkio weight:</source>
          <target state="translated">&lt;code&gt;--blkio-weight&lt;/code&gt; フラグは以下のコマンドが異なるblkio重量を有する2つのコンテナを作成し、例えば、1000〜10の間の値に重み付けを設定することができます。</target>
        </trans-unit>
        <trans-unit id="f42470659caa51ce06fd7bee1e26762683d77671" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--cgroup-parent&lt;/code&gt; option allows you to set the default cgroup parent to use for containers. If this option is not set, it defaults to &lt;code&gt;/docker&lt;/code&gt; for fs cgroup driver and &lt;code&gt;system.slice&lt;/code&gt; for systemd cgroup driver.</source>
          <target state="translated">&lt;code&gt;--cgroup-parent&lt;/code&gt; オプションでは、コンテナに使用するデフォルトのcgroupの親を設定することができます。このオプションが設定されていない場合、fs cgroupドライバーの場合はデフォルトで &lt;code&gt;/docker&lt;/code&gt; になり、systemd cgroupドライバーの場合は &lt;code&gt;system.slice&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="1826d2db2b75e861af8712525d23a1ed0f1a1ea8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--change&lt;/code&gt; option will apply &lt;code&gt;Dockerfile&lt;/code&gt; instructions to the image that is created. Supported &lt;code&gt;Dockerfile&lt;/code&gt; instructions: &lt;code&gt;CMD&lt;/code&gt;|&lt;code&gt;ENTRYPOINT&lt;/code&gt;|&lt;code&gt;ENV&lt;/code&gt;|&lt;code&gt;EXPOSE&lt;/code&gt;|&lt;code&gt;LABEL&lt;/code&gt;|&lt;code&gt;ONBUILD&lt;/code&gt;|&lt;code&gt;USER&lt;/code&gt;|&lt;code&gt;VOLUME&lt;/code&gt;|&lt;code&gt;WORKDIR&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--change&lt;/code&gt; のオプションが適用されます &lt;code&gt;Dockerfile&lt;/code&gt; の作成された画像に命令を。サポートされる &lt;code&gt;Dockerfile&lt;/code&gt; の手順： &lt;code&gt;CMD&lt;/code&gt; | &lt;code&gt;ENTRYPOINT&lt;/code&gt; | &lt;code&gt;ENV&lt;/code&gt; | &lt;code&gt;EXPOSE&lt;/code&gt; | &lt;code&gt;LABEL&lt;/code&gt; | &lt;code&gt;ONBUILD&lt;/code&gt; | &lt;code&gt;USER&lt;/code&gt; | &lt;code&gt;VOLUME&lt;/code&gt; | &lt;code&gt;WORKDIR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="331901ea2d4b659f72eb06d67078bb16233be25a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--change&lt;/code&gt; option will apply &lt;code&gt;Dockerfile&lt;/code&gt; instructions to the image that is created. Supported &lt;code&gt;Dockerfile&lt;/code&gt; instructions: &lt;code&gt;CMD&lt;/code&gt;|&lt;code&gt;ENTRYPOINT&lt;/code&gt;|&lt;code&gt;ENV&lt;/code&gt;|&lt;code&gt;EXPOSE&lt;/code&gt;|&lt;code&gt;ONBUILD&lt;/code&gt;|&lt;code&gt;USER&lt;/code&gt;|&lt;code&gt;VOLUME&lt;/code&gt;|&lt;code&gt;WORKDIR&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--change&lt;/code&gt; のオプションが適用されます &lt;code&gt;Dockerfile&lt;/code&gt; の作成された画像に命令を。サポートされる &lt;code&gt;Dockerfile&lt;/code&gt; の手順： &lt;code&gt;CMD&lt;/code&gt; | &lt;code&gt;ENTRYPOINT&lt;/code&gt; | &lt;code&gt;ENV&lt;/code&gt; | &lt;code&gt;EXPOSE&lt;/code&gt; | &lt;code&gt;ONBUILD&lt;/code&gt; | &lt;code&gt;USER&lt;/code&gt; | &lt;code&gt;VOLUME&lt;/code&gt; | &lt;code&gt;WORKDIR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6372b4419938c42b7b941008577f7addb6bf25a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--cluster-advertise&lt;/code&gt; option specifies the &lt;code&gt;host:port&lt;/code&gt; or &lt;code&gt;interface:port&lt;/code&gt; combination that this particular daemon instance should use when advertising itself to the cluster. The daemon is reached by remote hosts through this value. If you specify an interface, make sure it includes the IP address of the actual Docker host. For Engine installation created through &lt;code&gt;docker-machine&lt;/code&gt;, the interface is typically &lt;code&gt;eth1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--cluster-advertise&lt;/code&gt; オプションの指定 &lt;code&gt;host:port&lt;/code&gt; または &lt;code&gt;interface:port&lt;/code&gt; クラスタに自分自身をアドバタイズするときに、この特定のデーモンのインスタンスが使用する組み合わせを。デーモンは、この値を介してリモートホストによって到達されます。インターフェースを指定する場合は、実際のDockerホストのIPアドレスが含まれていることを確認してください。 &lt;code&gt;docker-machine&lt;/code&gt; を介して作成されたエンジンのインストールの場合、インターフェースは通常 &lt;code&gt;eth1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="118bb688281323a5d961497c2a015437d9cc0d17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--config-file&lt;/code&gt; option allows you to set any configuration option for the daemon in a JSON format. This file uses the same flag names as keys, except for flags that allow several entries, where it uses the plural of the flag name, e.g., &lt;code&gt;labels&lt;/code&gt; for the &lt;code&gt;label&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;--config-file&lt;/code&gt; オプションでは、JSON形式でのデーモンのいずれかの設定オプションを設定することができます。このファイルには、フラグ名の複数形を使用して複数のエントリ、例えば、許可フラグを除いて、キーと同じフラグ名を使用して &lt;code&gt;labels&lt;/code&gt; 用 &lt;code&gt;label&lt;/code&gt; フラグ。</target>
        </trans-unit>
        <trans-unit id="3001b2baac6ad6ca78a42c7dabc4c6fdb80dc832" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--cpu-quota&lt;/code&gt; flag limits the container&amp;rsquo;s CPU usage. The default 0 value allows the container to take 100% of a CPU resource (1 CPU). The CFS (Completely Fair Scheduler) handles resource allocation for executing processes and is default Linux Scheduler used by the kernel. Set this value to 50000 to limit the container to 50% of a CPU resource. For multiple CPUs, adjust the &lt;code&gt;--cpu-quota&lt;/code&gt; as necessary. For more information, see the &lt;a href=&quot;https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt&quot;&gt;CFS documentation on bandwidth limiting&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;--cpu-quota&lt;/code&gt; フラグは、コンテナのCPU使用量を制限します。デフォルトの0値では、コンテナーがCPUリソース（1 CPU）を100％使用できます。CFS（Completely Fair Scheduler）は、プロセスを実行するためのリソース割り当てを処理し、カーネルによって使用されるデフォルトのLinuxスケジューラです。コンテナーをCPUリソースの50％に制限するには、この値を50000に設定します。複数のCPUの場合、必要に応じて &lt;code&gt;--cpu-quota&lt;/code&gt; を調整します。詳細については、&lt;a href=&quot;https://www.kernel.org/doc/Documentation/scheduler/sched-bwc.txt&quot;&gt;帯域幅制限に関するCFSのドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="043ce561f5352353cd4aea732d4ed3e377b7df93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--credential-spec&lt;/code&gt; must be one of the following formats:</source>
          <target state="translated">&lt;code&gt;--credential-spec&lt;/code&gt; は、次のいずれかの形式でなければなりません。</target>
        </trans-unit>
        <trans-unit id="7645da86ca6a208ce5ac2ceec3ff44fc83723aa7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--device-read-bps&lt;/code&gt; flag limits the read rate (bytes per second) from a device. For example, this command creates a container and limits the read rate to &lt;code&gt;1mb&lt;/code&gt; per second from &lt;code&gt;/dev/sda&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;--device-read-bps&lt;/code&gt; フラグは、デバイスからの読み出し速度（秒あたりのバイト数）を制限します。たとえば、次のコマンドはコンテナーを作成し、 &lt;code&gt;/dev/sda&lt;/code&gt; からの読み取り速度を1 &lt;code&gt;1mb&lt;/code&gt; /秒に制限します。</target>
        </trans-unit>
        <trans-unit id="712e9b14b8091c01098667b0a748389286c56f70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--device-read-iops&lt;/code&gt; flag limits read rate (IO per second) from a device. For example, this command creates a container and limits the read rate to &lt;code&gt;1000&lt;/code&gt; IO per second from &lt;code&gt;/dev/sda&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;--device-read-iops&lt;/code&gt; フラグ制限装置からレート（毎秒IO）を読み取ります。たとえば、次のコマンドはコンテナーを作成し、 &lt;code&gt;/dev/sda&lt;/code&gt; からの読み取り速度を毎秒 &lt;code&gt;1000&lt;/code&gt; IOに制限します。</target>
        </trans-unit>
        <trans-unit id="fe281068f7ac2e41c30ca85d06921f36e2e2462e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--device-write-bps&lt;/code&gt; flag limits the write rate (bytes per second) to a device. For example, this command creates a container and limits the write rate to &lt;code&gt;1mb&lt;/code&gt; per second for &lt;code&gt;/dev/sda&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;--device-write-bps&lt;/code&gt; フラグは、デバイスへの書き込み速度（秒あたりのバイト数）を制限します。たとえば、次のコマンドはコンテナーを作成し、 &lt;code&gt;/dev/sda&lt;/code&gt; の書き込み速度を1 &lt;code&gt;1mb&lt;/code&gt; /秒に制限します。</target>
        </trans-unit>
        <trans-unit id="963edac892eb4f59d48156a5a245122b7ec75c23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--device-write-iops&lt;/code&gt; flag limits write rate (IO per second) to a device. For example, this command creates a container and limits the write rate to &lt;code&gt;1000&lt;/code&gt; IO per second to &lt;code&gt;/dev/sda&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;--device-write-iops&lt;/code&gt; フラグ制限がデバイスに速度（毎秒IO）を書き込みます。たとえば、次のコマンドはコンテナーを作成し、書き込み速度を &lt;code&gt;/dev/sda&lt;/code&gt; への毎秒 &lt;code&gt;1000&lt;/code&gt; IOに制限します。</target>
        </trans-unit>
        <trans-unit id="b41e02b0b1c16f6f4b137f3f08c43bb795e2f980" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--disable-legacy-registry&lt;/code&gt; flag was disabled in Docker 17.12 and will print an error when used. For this error to be printed, the flag itself is still present, but hidden. The flag will be removed in Docker 18.03.</source>
          <target state="translated">&lt;code&gt;--disable-legacy-registry&lt;/code&gt; フラグがドッカー17.12で無効にして、使用時にエラーが出力されます。このエラーを出力するために、フラグ自体はまだ存在していますが、非表示になっています。フラグはDocker 18.03で削除されます。</target>
        </trans-unit>
        <trans-unit id="aa8855c7d7182fcadca1fed0a08f183547580585" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--format&lt;/code&gt; option can be used to obtain specific information about a service. For example, the following command outputs the number of replicas of the &amp;ldquo;redis&amp;rdquo; service.</source>
          <target state="translated">&lt;code&gt;--format&lt;/code&gt; のオプションは、サービスに関する特定の情報を取得するために使用することができます。たとえば、次のコマンドは、「redis」サービスのレプリカの数を出力します。</target>
        </trans-unit>
        <trans-unit id="d2691a80d15b06a3fcb43e9cbfb91577d7e5061b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--gpus&amp;shy;&lt;/code&gt; flag allows you to access NVIDIA GPU resources. First you need to install &lt;a href=&quot;https://nvidia.github.io/nvidia-container-runtime/&quot;&gt;nvidia-container-runtime&lt;/a&gt;. Visit &lt;a href=&quot;https://docs.docker.com/config/containers/resource_constraints/&quot;&gt;Specify a container&amp;rsquo;s resources&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;--gpus&amp;shy;&lt;/code&gt; フラグを使用すると、NVIDIA GPUのリソースにアクセスすることができます。最初に&lt;a href=&quot;https://nvidia.github.io/nvidia-container-runtime/&quot;&gt;nvidia-container-runtime&lt;/a&gt;をインストールする必要があります。詳細については&lt;a href=&quot;https://docs.docker.com/config/containers/resource_constraints/&quot;&gt;、コンテナのリソース&lt;/a&gt;を指定するをご覧ください。</target>
        </trans-unit>
        <trans-unit id="7e733ea054c1c1ff7988c93e553e76ceca01093a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--metrics-addr&lt;/code&gt; option takes a tcp address to serve the metrics API. This feature is still experimental, therefore, the daemon must be running in experimental mode for this feature to work.</source>
          <target state="translated">&lt;code&gt;--metrics-addr&lt;/code&gt; にするオプションは、メトリックのAPIを提供するTCPアドレスを取ります。この機能はまだ実験的なものであるため、この機能を動作させるには、デーモンを実験モードで実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="55edf7ef0d43cb5742eeaebcc6bc88b518d3096c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--mount-add&lt;/code&gt; flag takes the same parameters as the &lt;code&gt;--mount&lt;/code&gt; flag on &lt;code&gt;service create&lt;/code&gt;. Refer to the &lt;a href=&quot;../service_create/index#volumes-and-bind-mounts-mount&quot;&gt;volumes and bind mounts&lt;/a&gt; section in the &lt;code&gt;service create&lt;/code&gt; reference for details.</source>
          <target state="translated">&lt;code&gt;--mount-add&lt;/code&gt; フラグは、同じパラメータ取り &lt;code&gt;--mount&lt;/code&gt; 上の旗 &lt;code&gt;service create&lt;/code&gt; 。詳細については、 &lt;code&gt;service create&lt;/code&gt; リファレンスの&lt;a href=&quot;../service_create/index#volumes-and-bind-mounts-mount&quot;&gt;ボリュームとバインドマウントの&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="2dcb66c9db4a6af0634718f030b3c6961948aceb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--mount-rm&lt;/code&gt; flag takes the &lt;code&gt;target&lt;/code&gt; path of the mount.</source>
          <target state="translated">&lt;code&gt;--mount-rm&lt;/code&gt; フラグがかかり &lt;code&gt;target&lt;/code&gt; マウントのパス。</target>
        </trans-unit>
        <trans-unit id="02aa3c4cfe092d2907c9c5953f6b842f826fec95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--mount&lt;/code&gt; flag allows you to mount volumes, host-directories and &lt;code&gt;tmpfs&lt;/code&gt; mounts in a container.</source>
          <target state="translated">&lt;code&gt;--mount&lt;/code&gt; フラグを使用すると、ボリューム、ホスト、ディレクトリおよびマウントすることができます &lt;code&gt;tmpfs&lt;/code&gt; ののコンテナにマウントを。</target>
        </trans-unit>
        <trans-unit id="8750034606c120ce24db3130aa8129649ec8c176" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--mount&lt;/code&gt; flag allows you to specify a volume driver and volume driver options &lt;em&gt;per volume&lt;/em&gt;, without creating the volumes in advance. In contrast, &lt;code&gt;docker run&lt;/code&gt; allows you to specify a single volume driver which is shared by all volumes, using the &lt;code&gt;--volume-driver&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;--mount&lt;/code&gt; フラグを使用すると、ボリュームのドライバとボリュームドライバオプションを指定することができます&lt;em&gt;ボリュームあたりを&lt;/em&gt;事前にボリュームを作成することなく、。対照的に、 &lt;code&gt;docker run&lt;/code&gt; では、 &lt;code&gt;--volume-driver&lt;/code&gt; フラグを使用して、すべてのボリュームで共有される単一のボリュームドライバーを指定できます。</target>
        </trans-unit>
        <trans-unit id="36dc4d2874ffe2c6696a361b4631e72a78be9474" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--mount&lt;/code&gt; flag allows you to specify custom metadata (&amp;ldquo;labels&amp;rdquo;) for a volume, before the volume is created.</source>
          <target state="translated">&lt;code&gt;--mount&lt;/code&gt; フラグは、ボリュームが作成される前に、ボリュームのカスタムメタデータ（「ラベル」）を指定することができます。</target>
        </trans-unit>
        <trans-unit id="cfadbb2f7c0cefeea1691c7fe0bf1951cbef87e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--mount&lt;/code&gt; flag does not allow you to relabel a volume with &lt;code&gt;Z&lt;/code&gt; or &lt;code&gt;z&lt;/code&gt; flags, which are used for &lt;code&gt;selinux&lt;/code&gt; labeling.</source>
          <target state="translated">&lt;code&gt;--mount&lt;/code&gt; フラグはあなたとボリュームラベルを変更することはできません &lt;code&gt;Z&lt;/code&gt; または &lt;code&gt;z&lt;/code&gt; のために使用されるフラグ、 &lt;code&gt;selinux&lt;/code&gt; ラベルを。</target>
        </trans-unit>
        <trans-unit id="c3ddb7d697487f1f5e66906e8782d710723952e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--mount&lt;/code&gt; flag supports most options that are supported by the &lt;code&gt;-v&lt;/code&gt; or &lt;code&gt;--volume&lt;/code&gt; flag for &lt;code&gt;docker run&lt;/code&gt;, with some important exceptions:</source>
          <target state="translated">&lt;code&gt;--mount&lt;/code&gt; フラグはによってサポートされているほとんどのオプションをサポート &lt;code&gt;-v&lt;/code&gt; または &lt;code&gt;--volume&lt;/code&gt; ためのフラグ &lt;code&gt;docker run&lt;/code&gt; いくつかの重要な例外を除いて、：</target>
        </trans-unit>
        <trans-unit id="af06b038fe8b5ee4cf2200adf2410db371b3030b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--mount&lt;/code&gt; flag supports most options that are supported by the &lt;code&gt;-v&lt;/code&gt; or the &lt;code&gt;--volume&lt;/code&gt; flag, but uses a different syntax. For in-depth information on the &lt;code&gt;--mount&lt;/code&gt; flag, and a comparison between &lt;code&gt;--volume&lt;/code&gt; and &lt;code&gt;--mount&lt;/code&gt;, refer to the &lt;a href=&quot;../service_create/index#add-bind-mounts-or-volumes&quot;&gt;service create command reference&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;--mount&lt;/code&gt; フラグはによってサポートされているほとんどのオプションをサポート &lt;code&gt;-v&lt;/code&gt; または &lt;code&gt;--volume&lt;/code&gt; フラグが、異なる構文を使用しています。 &lt;code&gt;--mount&lt;/code&gt; フラグの詳細情報、および &lt;code&gt;--volume&lt;/code&gt; と &lt;code&gt;--mount&lt;/code&gt; の比較については、&lt;a href=&quot;../service_create/index#add-bind-mounts-or-volumes&quot;&gt;service createコマンドリファレンスを参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bed7237ccc0b8ad3437fa30020a578288a4e4483" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--name&lt;/code&gt; flag names the service &lt;code&gt;helloworld&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--name&lt;/code&gt; フラグ名サービス &lt;code&gt;helloworld&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a853eb9fbc1c99f3f8c76dfce1506f84d6fa4344" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--no-resolve&lt;/code&gt; option shows IDs for task name, without mapping IDs to Names.</source>
          <target state="translated">&lt;code&gt;--no-resolve&lt;/code&gt; IDを名前にマッピングすることなく、タスク名のためのオプションが示すIDを、。</target>
        </trans-unit>
        <trans-unit id="32826a87c3c4abc30e935b98ecd14f2cca87e51e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--node-generic-resources&lt;/code&gt; option takes a list of key-value pair (&lt;code&gt;key=value&lt;/code&gt;) that allows you to advertise user defined resources in a swarm cluster.</source>
          <target state="translated">&lt;code&gt;--node-generic-resources&lt;/code&gt; オプションは、キーと値のペア（のリストとり &lt;code&gt;key=value&lt;/code&gt; 、あなたが群れクラスタでユーザー定義されたリソースを宣伝することができます）。</target>
        </trans-unit>
        <trans-unit id="fe1b46c54563bf68f3d96fa56384895ffc4790ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--privileged&lt;/code&gt; flag gives &lt;em&gt;all&lt;/em&gt; capabilities to the container, and it also lifts all the limitations enforced by the &lt;code&gt;device&lt;/code&gt; cgroup controller. In other words, the container can then do almost everything that the host can do. This flag exists to allow special use-cases, like running Docker within Docker.</source>
          <target state="translated">&lt;code&gt;--privileged&lt;/code&gt; フラグが与える&lt;em&gt;全ての&lt;/em&gt;コンテナに機能し、それはまたによって強制全て制限持ち上げ &lt;code&gt;device&lt;/code&gt; のcgroupコントローラ。つまり、コンテナはホストが実行できるほとんどすべてのことを実行できます。このフラグは、Docker内でDockerを実行するような特別なユースケースを許可するために存在します。</target>
        </trans-unit>
        <trans-unit id="bb774c803d079b4a41ab3354f300b230d3e14040" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--replicas&lt;/code&gt; flag specifies the desired state of 1 running instance.</source>
          <target state="translated">&lt;code&gt;--replicas&lt;/code&gt; フラグが1つの実行中のインスタンスの所望の状態を指定します。</target>
        </trans-unit>
        <trans-unit id="f83197c97e8759a9b35a0a3cfe176f25ddfffb9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--rotate&lt;/code&gt; flag does not require any parameters to do a rotation, but you can optionally specify a certificate and key, or a certificate and external CA URL, and those will be used instead of an automatically-generated certificate/key pair.</source>
          <target state="translated">&lt;code&gt;--rotate&lt;/code&gt; フラグは回転を行うには、パラメータを必要としませんが、必要に応じて証明書とキー、または証明書と外部のCAのURLを指定することができ、それらの代わりに自動的に生成された証明書/鍵ペアを使用します。</target>
        </trans-unit>
        <trans-unit id="d093ee6fc107327da7a54146804ca8a627398258" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--since&lt;/code&gt; and &lt;code&gt;--until&lt;/code&gt; parameters can be Unix timestamps, date formatted timestamps, or Go duration strings (e.g. &lt;code&gt;10m&lt;/code&gt;, &lt;code&gt;1h30m&lt;/code&gt;) computed relative to the client machine&amp;rsquo;s time. If you do not provide the &lt;code&gt;--since&lt;/code&gt; option, the command returns only new and/or live events. Supported formats for date formatted time stamps include RFC3339Nano, RFC3339, &lt;code&gt;2006-01-02T15:04:05&lt;/code&gt;, &lt;code&gt;2006-01-02T15:04:05.999999999&lt;/code&gt;, &lt;code&gt;2006-01-02Z07:00&lt;/code&gt;, and &lt;code&gt;2006-01-02&lt;/code&gt;. The local timezone on the client will be used if you do not provide either a &lt;code&gt;Z&lt;/code&gt; or a &lt;code&gt;+-00:00&lt;/code&gt; timezone offset at the end of the timestamp. When providing Unix timestamps enter seconds[.nanoseconds], where seconds is the number of seconds that have elapsed since January 1, 1970 (midnight UTC/GMT), not counting leap seconds (aka Unix epoch or Unix time), and the optional .nanoseconds field is a fraction of a second no more than nine digits long.</source>
          <target state="translated">&lt;code&gt;--since&lt;/code&gt; と &lt;code&gt;--until&lt;/code&gt; パラメータはUnixのすることができ（例えば、日付フォーマットされたタイムスタンプ、または移動時間文字列にタイムスタンプを &lt;code&gt;10m&lt;/code&gt; 、 &lt;code&gt;1h30m&lt;/code&gt; ）クライアントマシンの時間に対する計算。 &lt;code&gt;--since&lt;/code&gt; オプションを指定しない場合、コマンドは新しいイベントまたはライブイベント、あるいはその両方のみを返します。日付フォーマットされたタイムスタンプのためにサポートされるフォーマットはRFC3339Nano、RFC3339、含める &lt;code&gt;2006-01-02T15:04:05&lt;/code&gt; 、 &lt;code&gt;2006-01-02T15:04:05.999999999&lt;/code&gt; 、 &lt;code&gt;2006-01-02Z07:00&lt;/code&gt; 、および &lt;code&gt;2006-01-02&lt;/code&gt; 。 &lt;code&gt;Z&lt;/code&gt; または &lt;code&gt;+-00:00&lt;/code&gt; を指定しない場合、クライアントのローカルタイムゾーンが使用されますタイムスタンプの最後のタイムゾーンオフセット。 Unixタイムスタンプを提供する場合は、seconds [.nanoseconds]を入力します。ここで、secondsは、1970年1月1日（UTC / GMTの真夜中）から経過した秒数で、うるう秒（別名UnixエポックまたはUnix時間）をカウントせず、オプションです。ナノ秒フィールドは、1秒の端数で9桁以下です。</target>
        </trans-unit>
        <trans-unit id="652b6615884bf6a1cd485ceedcea4963abfed879" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--since&lt;/code&gt; option shows only the container logs generated after a given date. You can specify the date as an RFC 3339 date, a UNIX timestamp, or a Go duration string (e.g. &lt;code&gt;1m30s&lt;/code&gt;, &lt;code&gt;3h&lt;/code&gt;). Besides RFC3339 date format you may also use RFC3339Nano, &lt;code&gt;2006-01-02T15:04:05&lt;/code&gt;, &lt;code&gt;2006-01-02T15:04:05.999999999&lt;/code&gt;, &lt;code&gt;2006-01-02Z07:00&lt;/code&gt;, and &lt;code&gt;2006-01-02&lt;/code&gt;. The local timezone on the client will be used if you do not provide either a &lt;code&gt;Z&lt;/code&gt; or a &lt;code&gt;+-00:00&lt;/code&gt; timezone offset at the end of the timestamp. When providing Unix timestamps enter seconds[.nanoseconds], where seconds is the number of seconds that have elapsed since January 1, 1970 (midnight UTC/GMT), not counting leap seconds (aka Unix epoch or Unix time), and the optional .nanoseconds field is a fraction of a second no more than nine digits long. You can combine the &lt;code&gt;--since&lt;/code&gt; option with either or both of the &lt;code&gt;--follow&lt;/code&gt; or &lt;code&gt;--tail&lt;/code&gt; options.</source>
          <target state="translated">&lt;code&gt;--since&lt;/code&gt; の唯一のオプションが示す特定の日付以降に生成されたコンテナのログ。日付は、RFC 3339日付、UNIXタイムスタンプ、またはGo期間文字列（ &lt;code&gt;1m30s&lt;/code&gt; 、 &lt;code&gt;3h&lt;/code&gt; など）として指定できます。 RFC3339の日付形式のほかに、あなたもRFC3339Nano、使用することができます &lt;code&gt;2006-01-02T15:04:05&lt;/code&gt; 、 &lt;code&gt;2006-01-02T15:04:05.999999999&lt;/code&gt; 、 &lt;code&gt;2006-01-02Z07:00&lt;/code&gt; 、および &lt;code&gt;2006-01-02&lt;/code&gt; 。 &lt;code&gt;Z&lt;/code&gt; または &lt;code&gt;+-00:00&lt;/code&gt; を指定しない場合、クライアントのローカルタイムゾーンが使用されますタイムスタンプの最後のタイムゾーンオフセット。 Unixタイムスタンプを提供する場合は、seconds [.nanoseconds]を入力します。ここで、secondsは、1970年1月1日（UTC / GMTの真夜中）から経過した秒数で、うるう秒（別名UnixエポックまたはUnix時間）をカウントせず、オプションです。ナノ秒フィールドは、1秒の端数で9桁以下です。あなたは組み合わせることができ &lt;code&gt;--since&lt;/code&gt; のいずれかまたは両方のオプションをして &lt;code&gt;--follow&lt;/code&gt; か &lt;code&gt;--tail&lt;/code&gt; オプション。</target>
        </trans-unit>
        <trans-unit id="bab01cf2bd689f9a42400bd61c72369e65a07ab2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--since&lt;/code&gt; option shows only the service logs generated after a given date. You can specify the date as an RFC 3339 date, a UNIX timestamp, or a Go duration string (e.g. &lt;code&gt;1m30s&lt;/code&gt;, &lt;code&gt;3h&lt;/code&gt;). Besides RFC3339 date format you may also use RFC3339Nano, &lt;code&gt;2006-01-02T15:04:05&lt;/code&gt;, &lt;code&gt;2006-01-02T15:04:05.999999999&lt;/code&gt;, &lt;code&gt;2006-01-02Z07:00&lt;/code&gt;, and &lt;code&gt;2006-01-02&lt;/code&gt;. The local timezone on the client will be used if you do not provide either a &lt;code&gt;Z&lt;/code&gt; or a &lt;code&gt;+-00:00&lt;/code&gt; timezone offset at the end of the timestamp. When providing Unix timestamps enter seconds[.nanoseconds], where seconds is the number of seconds that have elapsed since January 1, 1970 (midnight UTC/GMT), not counting leap seconds (aka Unix epoch or Unix time), and the optional .nanoseconds field is a fraction of a second no more than nine digits long. You can combine the &lt;code&gt;--since&lt;/code&gt; option with either or both of the &lt;code&gt;--follow&lt;/code&gt; or &lt;code&gt;--tail&lt;/code&gt; options.</source>
          <target state="translated">&lt;code&gt;--since&lt;/code&gt; の唯一のオプションが示す特定の日付以降に発生したサービスログ。日付は、RFC 3339日付、UNIXタイムスタンプ、またはGo期間文字列（ &lt;code&gt;1m30s&lt;/code&gt; 、 &lt;code&gt;3h&lt;/code&gt; など）として指定できます。 RFC3339の日付形式のほかに、あなたもRFC3339Nano、使用することができます &lt;code&gt;2006-01-02T15:04:05&lt;/code&gt; 、 &lt;code&gt;2006-01-02T15:04:05.999999999&lt;/code&gt; 、 &lt;code&gt;2006-01-02Z07:00&lt;/code&gt; 、および &lt;code&gt;2006-01-02&lt;/code&gt; 。 &lt;code&gt;Z&lt;/code&gt; または &lt;code&gt;+-00:00&lt;/code&gt; を指定しない場合、クライアントのローカルタイムゾーンが使用されますタイムスタンプの最後のタイムゾーンオフセット。 Unixタイムスタンプを提供する場合は、seconds [.nanoseconds]を入力します。ここで、secondsは、1970年1月1日（UTC / GMTの真夜中）から経過した秒数で、うるう秒（別名UnixエポックまたはUnix時間）をカウントせず、オプションです。ナノ秒フィールドは、1秒の端数で9桁以下です。あなたは組み合わせることができ &lt;code&gt;--since&lt;/code&gt; のいずれかまたは両方のオプションをして &lt;code&gt;--follow&lt;/code&gt; か &lt;code&gt;--tail&lt;/code&gt; オプション。</target>
        </trans-unit>
        <trans-unit id="3600edac5452a3667a2c3e6900d550bfe91f655a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--squash&lt;/code&gt; option has a number of known limitations:</source>
          <target state="translated">&lt;code&gt;--squash&lt;/code&gt; オプションが知られている多くの制限があります。</target>
        </trans-unit>
        <trans-unit id="868df34827a00906506bf1395e46d56e0920fb6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--squash&lt;/code&gt; option is an experimental feature, and should not be considered stable.</source>
          <target state="translated">&lt;code&gt;--squash&lt;/code&gt; オプションは実験的な機能であり、かつ安定しているとみなすべきではありません。</target>
        </trans-unit>
        <trans-unit id="54d86090ae9e58411843350e49a7bf462b0b39ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--stop-signal&lt;/code&gt; flag sets the system call signal that will be sent to the container to exit. This signal can be a valid unsigned number that matches a position in the kernel&amp;rsquo;s syscall table, for instance 9, or a signal name in the format SIGNAME, for instance SIGKILL.</source>
          <target state="translated">&lt;code&gt;--stop-signal&lt;/code&gt; フラグが出口に容器に送信されるシステムコール信号を設定します。このシグナルは、カーネルのsyscallテーブル内の位置（例：9）と一致する有効な符号なし数値、またはSIGNAME形式のシグナル名（例：SIGKILL）にすることができます。</target>
        </trans-unit>
        <trans-unit id="8846e238508789402dc6ccf956f8dc91d051d006" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--stop-timeout&lt;/code&gt; flag sets the timeout (in seconds) that a pre-defined (see &lt;code&gt;--stop-signal&lt;/code&gt;) system call signal that will be sent to the container to exit. After timeout elapses the container will be killed with SIGKILL.</source>
          <target state="translated">&lt;code&gt;--stop-timeout&lt;/code&gt; フラグがタイムアウト（秒）を設定し、その予め定義された（参照 &lt;code&gt;--stop-signal&lt;/code&gt; 出口に容器に送信される）システムコール信号。タイムアウトが経過すると、コンテナはSIGKILLで強制終了されます。</target>
        </trans-unit>
        <trans-unit id="5495a7454f1586617a7dc6a7549e59d398007aca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--sysctl&lt;/code&gt; sets namespaced kernel parameters (sysctls) in the container. For example, to turn on IP forwarding in the containers network namespace, run this command:</source>
          <target state="translated">&lt;code&gt;--sysctl&lt;/code&gt; の容器にカーネルパラメータ（のsysctl）名前空間のセット。たとえば、コンテナネットワークの名前空間でIP転送をオンにするには、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="854ac408f31454204ac08d0e6423e78b130a7510" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--tmpfs&lt;/code&gt; flag mounts an empty tmpfs into the container with the &lt;code&gt;rw&lt;/code&gt;, &lt;code&gt;noexec&lt;/code&gt;, &lt;code&gt;nosuid&lt;/code&gt;, &lt;code&gt;size=65536k&lt;/code&gt; options.</source>
          <target state="translated">&lt;code&gt;--tmpfs&lt;/code&gt; 有する容器にフラグがマウント空TMPFSを &lt;code&gt;rw&lt;/code&gt; 、 &lt;code&gt;noexec&lt;/code&gt; 、 &lt;code&gt;nosuid&lt;/code&gt; を、 &lt;code&gt;size=65536k&lt;/code&gt; オプション。</target>
        </trans-unit>
        <trans-unit id="0fa0a35baa2bfba7770838b9ad13455ac8f296b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--update-delay&lt;/code&gt; flag configures the time delay between updates to a service task or sets of tasks. You can describe the time &lt;code&gt;T&lt;/code&gt; as a combination of the number of seconds &lt;code&gt;Ts&lt;/code&gt;, minutes &lt;code&gt;Tm&lt;/code&gt;, or hours &lt;code&gt;Th&lt;/code&gt;. So &lt;code&gt;10m30s&lt;/code&gt; indicates a 10 minute 30 second delay.</source>
          <target state="translated">&lt;code&gt;--update-delay&lt;/code&gt; フラグは、サービス・タスクまたはタスクのセットの更新の間の時間遅延を設定します。時間 &lt;code&gt;T&lt;/code&gt; は、秒数 &lt;code&gt;Ts&lt;/code&gt; 、分数 &lt;code&gt;Tm&lt;/code&gt; 、または時間数 &lt;code&gt;Th&lt;/code&gt; の組み合わせとして説明できます。したがって、 &lt;code&gt;10m30s&lt;/code&gt; は10分30秒の遅延を示します。</target>
        </trans-unit>
        <trans-unit id="934f930ffe6caf2c011d78e9b4448a9de589e06f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--update-max-failure-ratio&lt;/code&gt; flag controls what fraction of tasks can fail during an update before the update as a whole is considered to have failed. For example, with &lt;code&gt;--update-max-failure-ratio 0.1 --update-failure-action pause&lt;/code&gt;, after 10% of the tasks being updated fail, the update is paused.</source>
          <target state="translated">&lt;code&gt;--update-max-failure-ratio&lt;/code&gt; 全体として更新前の更新時に失敗することができ、タスクのどのような割合フラグコントロールが失敗したと考えられています。たとえば、 &lt;code&gt;--update-max-failure-ratio 0.1 --update-failure-action pause&lt;/code&gt; を使用すると、更新されているタスクの10％が失敗した後、更新は一時停止されます。</target>
        </trans-unit>
        <trans-unit id="59ad8b554a390785f6d30eb5a97c2b44cc58fc73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--virtualbox-boot2docker-url&lt;/code&gt; flag takes a few different forms. By default, if no value is specified for this flag, Machine checks locally for a boot2docker ISO. If one is found, it is used as the ISO for the created machine. If one is not found, the latest ISO release available on &lt;a href=&quot;https://github.com/boot2docker/boot2docker&quot;&gt;boot2docker/boot2docker&lt;/a&gt; is downloaded and stored locally for future use. Therefore, you must run &lt;code&gt;docker-machine upgrade&lt;/code&gt; deliberately on a machine if you wish to update the &amp;ldquo;cached&amp;rdquo; boot2docker ISO.</source>
          <target state="translated">&lt;code&gt;--virtualbox-boot2docker-url&lt;/code&gt; フラグは、いくつかの異なる形をとります。デフォルトでは、このフラグに値が指定されていない場合、Machineはローカルでboot2docker ISOをチェックします。見つかった場合は、作成されたマシンのISOとして使用されます。見つからない場合は、&lt;a href=&quot;https://github.com/boot2docker/boot2docker&quot;&gt;boot2docker / boot2dockerで&lt;/a&gt;入手可能な最新のISOリリースがダウンロードされ、将来使用するためにローカルに保存されます。したがって、「キャッシュされた」boot2docker ISOを更新する場合は、マシン上で慎重にdocker &lt;code&gt;docker-machine upgrade&lt;/code&gt; 実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="f4dfe5d38bdec5d1891053f396d04d8f227ea20e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--volume&lt;/code&gt; (or &lt;code&gt;-v&lt;/code&gt;) flag takes a value that is in the format &lt;code&gt;&amp;lt;volume_name&amp;gt;:&amp;lt;mountpoint&amp;gt;&lt;/code&gt;. The two parts of the value are separated by a colon (&lt;code&gt;:&lt;/code&gt;) character.</source>
          <target state="translated">&lt;code&gt;--volume&lt;/code&gt; （または &lt;code&gt;-v&lt;/code&gt; ）フラグが形式である値とる &lt;code&gt;&amp;lt;volume_name&amp;gt;:&amp;lt;mountpoint&amp;gt;&lt;/code&gt; 。（値の2つの部分が、コロンで分離されている &lt;code&gt;:&lt;/code&gt; ）文字。</target>
        </trans-unit>
        <trans-unit id="79c57bd734a2d57c422c7ec0f9b8f3c9c845afa9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--volumes-from&lt;/code&gt; flag mounts all the defined volumes from the referenced containers. Containers can be specified by repetitions of the &lt;code&gt;--volumes-from&lt;/code&gt; argument. The container ID may be optionally suffixed with &lt;code&gt;:ro&lt;/code&gt; or &lt;code&gt;:rw&lt;/code&gt; to mount the volumes in read-only or read-write mode, respectively. By default, the volumes are mounted in the same mode (read write or read only) as the reference container.</source>
          <target state="translated">&lt;code&gt;--volumes-from&lt;/code&gt; フラグが参照されるコンテナからすべての定義されたボリュームをマウントします。 &lt;code&gt;--volumes-from&lt;/code&gt; 引数を繰り返すことで、コンテナーを指定できます。コンテナーIDには、オプションで接尾辞として &lt;code&gt;:ro&lt;/code&gt; または &lt;code&gt;:rw&lt;/code&gt; を付けて、それぞれボリュームを読み取り専用モードまたは読み取り/書き込みモードでマウントすることができます。デフォルトでは、ボリュームは参照コンテナーと同じモード（読み取り/書き込みまたは読み取り専用）でマウントされます。</target>
        </trans-unit>
        <trans-unit id="a1a5149b5262d073b9c766e953b846fff95d80d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-P&lt;/code&gt; option publishes all the ports to the host interfaces. Docker binds each exposed port to a random port on the host. The range of ports are within an &lt;em&gt;ephemeral port range&lt;/em&gt; defined by &lt;code&gt;/proc/sys/net/ipv4/ip_local_port_range&lt;/code&gt;. Use the &lt;code&gt;-p&lt;/code&gt; flag to explicitly map a single port or range of ports.</source>
          <target state="translated">&lt;code&gt;-P&lt;/code&gt; のオプションは、ホストインターフェイスにすべてのポートを公開しています。Dockerは、公開された各ポートをホスト上のランダムなポートにバインドします。&lt;em&gt;ポートの範囲&lt;/em&gt;は、 &lt;code&gt;/proc/sys/net/ipv4/ip_local_port_range&lt;/code&gt; で定義された&lt;em&gt;一時的なポート範囲&lt;/em&gt;内です。 &lt;code&gt;-p&lt;/code&gt; フラグを使用して、単一のポートまたはポートの範囲を明示的にマップします。</target>
        </trans-unit>
        <trans-unit id="9d187d0c1f780586ccb4a349b371c0d9954d1e7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-a&lt;/code&gt; flag tells &lt;code&gt;docker run&lt;/code&gt; to bind to the container&amp;rsquo;s &lt;code&gt;STDIN&lt;/code&gt;, &lt;code&gt;STDOUT&lt;/code&gt; or &lt;code&gt;STDERR&lt;/code&gt;. This makes it possible to manipulate the output and input as needed.</source>
          <target state="translated">&lt;code&gt;-a&lt;/code&gt; フラグが伝え &lt;code&gt;docker run&lt;/code&gt; コンテナのに結合する &lt;code&gt;STDIN&lt;/code&gt; 、 &lt;code&gt;STDOUT&lt;/code&gt; または &lt;code&gt;STDERR&lt;/code&gt; 。これにより、必要に応じて出力と入力を操作できます。</target>
        </trans-unit>
        <trans-unit id="00e78bca83bff0346cfa7bb1929f7a24bd5628d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-b, --bridge=&lt;/code&gt; flag is set to &lt;code&gt;docker0&lt;/code&gt; as default bridge network. It is created automatically when you install Docker. If you are not using the default, you must create and configure the bridge manually or just set it to &amp;lsquo;none&amp;rsquo;: &lt;code&gt;--bridge=none&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;-b, --bridge=&lt;/code&gt; フラグが設定されている &lt;code&gt;docker0&lt;/code&gt; デフォルトブリッジネットワークとして。Dockerのインストール時に自動的に作成されます。デフォルトを使用していない場合は、ブリッジを手動で作成して構成するか、単に「なし」に設定する必要があります &lt;code&gt;--bridge=none&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fef31794e25c5885ab349aeec30b37ec9cfb2e31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-f&lt;/code&gt; flag is optional. If you don&amp;rsquo;t provide this flag on the command line, Compose traverses the working directory and its parent directories looking for a &lt;code&gt;docker-compose.yml&lt;/code&gt; and a &lt;code&gt;docker-compose.override.yml&lt;/code&gt; file. You must supply at least the &lt;code&gt;docker-compose.yml&lt;/code&gt; file. If both files are present on the same directory level, Compose combines the two files into a single configuration.</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; フラグは任意です。コマンドラインでこのフラグを提供していない場合は、作曲を探している作業ディレクトリおよびその親ディレクトリトラバース &lt;code&gt;docker-compose.yml&lt;/code&gt; と &lt;code&gt;docker-compose.override.yml&lt;/code&gt; ファイルを。少なくとも &lt;code&gt;docker-compose.yml&lt;/code&gt; ファイルを提供する必要があります。両方のファイルが同じディレクトリレベルに存在する場合、Composeは2つのファイルを1つの構成に結合します。</target>
        </trans-unit>
        <trans-unit id="be855a59336774399e3a7b83f1b2b7f1d547f976" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--graph&lt;/code&gt; flag for the &lt;code&gt;dockerd&lt;/code&gt; or &lt;code&gt;docker daemon&lt;/code&gt; command was used to indicate the directory in which to store persistent data and resource configuration and has been replaced with the more descriptive &lt;code&gt;--data-root&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;-g&lt;/code&gt; または &lt;code&gt;--graph&lt;/code&gt; フラグ &lt;code&gt;dockerd&lt;/code&gt; 又は &lt;code&gt;docker daemon&lt;/code&gt; コマンドは、永続的なデータとリソース設定を格納するディレクトリを示すために使用し、より説明的で置換されている &lt;code&gt;--data-root&lt;/code&gt; フラグ。</target>
        </trans-unit>
        <trans-unit id="76c0ec7a2c9ee426e880b46a80e62d861fb434da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-q&lt;/code&gt; or &lt;code&gt;--quiet&lt;/code&gt; option only shows IDs of the tasks in the stack. This example outputs all task IDs of the &amp;ldquo;voting&amp;rdquo; stack;</source>
          <target state="translated">&lt;code&gt;-q&lt;/code&gt; または &lt;code&gt;--quiet&lt;/code&gt; オプションは、スタック内のタスクのIDを示しています。この例では、「投票」スタックのすべてのタスクIDを出力します。</target>
        </trans-unit>
        <trans-unit id="321f4b5ce4448eb4e35448e4bc0fe2f7c45b6bec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-v&lt;/code&gt; flag mounts the current working directory into the container. The &lt;code&gt;-w&lt;/code&gt; lets the command being executed inside the current working directory, by changing into the directory to the value returned by &lt;code&gt;pwd&lt;/code&gt;. So this combination executes the command using the container, but inside the current working directory.</source>
          <target state="translated">&lt;code&gt;-v&lt;/code&gt; フラグは、容器の中に、現在の作業ディレクトリをマウントします。 &lt;code&gt;-w&lt;/code&gt; は、によって返された値にディレクトリに変更することで、現在の作業ディレクトリ内で実行中の命令することができます &lt;code&gt;pwd&lt;/code&gt; 。したがって、この組み合わせは、コンテナーを使用してコマンドを実行しますが、現在の作業ディレクトリー内です。</target>
        </trans-unit>
        <trans-unit id="6715ad91a3f3e2ea443f1c9685408c8bf699b5f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-w&lt;/code&gt; lets the command being executed inside directory given, here &lt;code&gt;/path/to/dir/&lt;/code&gt;. If the path does not exist it is created inside the container.</source>
          <target state="translated">&lt;code&gt;-w&lt;/code&gt; は、コマンドが、ここで指定したディレクトリ内で実行されていることができます &lt;code&gt;/path/to/dir/&lt;/code&gt; 。パスが存在しない場合は、コンテナ内に作成されます。</target>
        </trans-unit>
        <trans-unit id="a07135f67e45c6c5342f6d4af54f3e2573322ad0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.Field&lt;/code&gt; syntax doesn&amp;rsquo;t work when the field name begins with a number, but the template language&amp;rsquo;s &lt;code&gt;index&lt;/code&gt; function does. The &lt;code&gt;.NetworkSettings.Ports&lt;/code&gt; section contains a map of the internal port mappings to a list of external address/port objects. To grab just the numeric public port, you use &lt;code&gt;index&lt;/code&gt; to find the specific port map, and then &lt;code&gt;index&lt;/code&gt; 0 contains the first object inside of that. Then we ask for the &lt;code&gt;HostPort&lt;/code&gt; field to get the public address.</source>
          <target state="translated">&lt;code&gt;.Field&lt;/code&gt; フィールド名が数字で始まるが、テンプレート言語の構文ときは動作しません &lt;code&gt;index&lt;/code&gt; 機能がありません。 &lt;code&gt;.NetworkSettings.Ports&lt;/code&gt; のセクションでは、外部アドレス/ポートオブジェクトのリストに内部ポートマッピングのマップが含まれています。数値のパブリックポートのみを取得するには、 &lt;code&gt;index&lt;/code&gt; を使用して特定のポートマップを検索し、 &lt;code&gt;index&lt;/code&gt; 0にその内部の最初のオブジェクトを含めます。次に、 &lt;code&gt;HostPort&lt;/code&gt; フィールドにパブリックアドレスを取得するように求めます。</target>
        </trans-unit>
        <trans-unit id="b45bcfe28cfbc7bf1e4c9d18f73bcfd15b5b4045" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ADD&lt;/code&gt; instruction copies new files, directories or remote file URLs from &lt;code&gt;&amp;lt;src&amp;gt;&lt;/code&gt; and adds them to the filesystem of the image at the path &lt;code&gt;&amp;lt;dest&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ADD&lt;/code&gt; の命令からファイル、ディレクトリ、またはリモートファイルのURL新しいコピー &lt;code&gt;&amp;lt;src&amp;gt;&lt;/code&gt; とパスでの画像のファイルシステムに追加します &lt;code&gt;&amp;lt;dest&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fac454db47a7141d94be83ec27a2881ff73c5a77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ARG&lt;/code&gt; instruction defines a variable that users can pass at build-time to the builder with the &lt;code&gt;docker build&lt;/code&gt; command using the &lt;code&gt;--build-arg &amp;lt;varname&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; flag. If a user specifies a build argument that was not defined in the Dockerfile, the build outputs a warning.</source>
          <target state="translated">&lt;code&gt;ARG&lt;/code&gt; の指示は、ユーザが有するビルダーにビルド時に渡すことができる変数定義 &lt;code&gt;docker build&lt;/code&gt; 使用してコマンド &lt;code&gt;--build-arg &amp;lt;varname&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; フラグ。ユーザーがDockerfileで定義されていないビルド引数を指定すると、ビルドは警告を出力します。</target>
        </trans-unit>
        <trans-unit id="d0ccb62f794462cdcfdf2433ebe70961e4918f85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AVAILABILITY&lt;/code&gt; column shows whether or not the scheduler can assign tasks to the node:</source>
          <target state="translated">&lt;code&gt;AVAILABILITY&lt;/code&gt; スケジューラは、ノードにタスクを割り当てることができるか否かの列のショー：</target>
        </trans-unit>
        <trans-unit id="417ce49286ee166704f694561cf8b565bdfb59bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMD&lt;/code&gt; instruction has three forms:</source>
          <target state="translated">&lt;code&gt;CMD&lt;/code&gt; の命令は3つの形式があります。</target>
        </trans-unit>
        <trans-unit id="9a203c026fa9c79445c4b63b7715ada33d208b40" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COPY&lt;/code&gt; instruction copies new files or directories from &lt;code&gt;&amp;lt;src&amp;gt;&lt;/code&gt; and adds them to the filesystem of the container at the path &lt;code&gt;&amp;lt;dest&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;COPY&lt;/code&gt; の命令をコピーし、新しいファイルやディレクトリから &lt;code&gt;&amp;lt;src&amp;gt;&lt;/code&gt; とは、パスでコンテナのファイルシステムに追加します &lt;code&gt;&amp;lt;dest&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d9652ade73caed1f5cb10142c1b7360bd4afe13" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dockerfile&lt;/code&gt; assumes that your application is called &lt;code&gt;aspnetapp&lt;/code&gt;. Change the &lt;code&gt;Dockerfile&lt;/code&gt; to use the DLL file of your project.</source>
          <target state="translated">&lt;code&gt;Dockerfile&lt;/code&gt; は、アプリケーションが呼び出されることを前提としてい &lt;code&gt;aspnetapp&lt;/code&gt; 。プロジェクトのDLLファイルを使用するように &lt;code&gt;Dockerfile&lt;/code&gt; を変更します。</target>
        </trans-unit>
        <trans-unit id="82f6ee7a0e96f694b25ee985575726b6ec82c45b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ENTRYPOINT&lt;/code&gt; of an image is similar to a &lt;code&gt;COMMAND&lt;/code&gt; because it specifies what executable to run when the container starts, but it is (purposely) more difficult to override. The &lt;code&gt;ENTRYPOINT&lt;/code&gt; gives a container its default nature or behavior, so that when you set an &lt;code&gt;ENTRYPOINT&lt;/code&gt; you can run the container &lt;em&gt;as if it were that binary&lt;/em&gt;, complete with default options, and you can pass in more options via the &lt;code&gt;COMMAND&lt;/code&gt;. But, sometimes an operator may want to run something else inside the container, so you can override the default &lt;code&gt;ENTRYPOINT&lt;/code&gt; at runtime by using a string to specify the new &lt;code&gt;ENTRYPOINT&lt;/code&gt;. Here is an example of how to run a shell in a container that has been set up to automatically run something else (like &lt;code&gt;/usr/bin/redis-server&lt;/code&gt;):</source>
          <target state="translated">イメージの &lt;code&gt;ENTRYPOINT&lt;/code&gt; は、コンテナーの開始時に実行する実行可能ファイルを指定するため、 &lt;code&gt;COMMAND&lt;/code&gt; に似ていますが、（意図的に）オーバーライドするのがより困難です。 &lt;code&gt;ENTRYPOINT&lt;/code&gt; は、あなたが設定したときにそのことを、コンテナにそのデフォルトの本質や行動を与える &lt;code&gt;ENTRYPOINT&lt;/code&gt; をあなたは、コンテナを実行することができ&lt;em&gt;、それがそのバイナリであるかのように&lt;/em&gt;、デフォルトのオプションとの完全な、とあなたが経由して、より多くのオプションを渡すことができます &lt;code&gt;COMMAND&lt;/code&gt; 。ただし、オペレーターがコンテナー内で何か他のものを実行したい場合があるため、ストリングを使用して新しい &lt;code&gt;ENTRYPOINT&lt;/code&gt; を指定することにより、実行時にデフォルトの &lt;code&gt;ENTRYPOINT&lt;/code&gt; をオーバーライドできます。。以下は、他の何か（ &lt;code&gt;/usr/bin/redis-server&lt;/code&gt; など）を自動的に実行するように設定されているコンテナーでシェルを実行する方法の例です。</target>
        </trans-unit>
        <trans-unit id="45551afa7e325e55770cef5ae4c690193b754077" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ENV&lt;/code&gt; instruction has two forms. The first form, &lt;code&gt;ENV &amp;lt;key&amp;gt; &amp;lt;value&amp;gt;&lt;/code&gt;, will set a single variable to a value. The entire string after the first space will be treated as the &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; - including whitespace characters. The value will be interpreted for other environment variables, so quote characters will be removed if they are not escaped.</source>
          <target state="translated">&lt;code&gt;ENV&lt;/code&gt; の命令は、2つの形式があります。最初の形式である &lt;code&gt;ENV &amp;lt;key&amp;gt; &amp;lt;value&amp;gt;&lt;/code&gt; は、単一の変数に値を設定します。最初のスペースの後の文字列全体は、空白文字を含む &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; として扱われます。値は他の環境変数に対して解釈されるため、エスケープされていない場合、引用文字は削除されます。</target>
        </trans-unit>
        <trans-unit id="e26b1f9ce0f2c0c2eaf61a3bc6b69242e0d92f5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ENV&lt;/code&gt; instruction sets the environment variable &lt;code&gt;&amp;lt;key&amp;gt;&lt;/code&gt; to the value &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt;. This value will be in the environment for all subsequent instructions in the build stage and can be &lt;a href=&quot;#environment-replacement&quot;&gt;replaced inline&lt;/a&gt; in many as well.</source>
          <target state="translated">&lt;code&gt;ENV&lt;/code&gt; の命令は、環境変数設定 &lt;code&gt;&amp;lt;key&amp;gt;&lt;/code&gt; 値に &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; 。この値は、ビルドステージの後続のすべての命令の環境に存在し、多くの&lt;a href=&quot;#environment-replacement&quot;&gt;インライン&lt;/a&gt;で置き換えることもできます。</target>
        </trans-unit>
        <trans-unit id="7f497b45d5ed2e762023ba2fab7f21dad19db409" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EXPOSE&lt;/code&gt; instruction does not actually publish the port. It functions as a type of documentation between the person who builds the image and the person who runs the container, about which ports are intended to be published. To actually publish the port when running the container, use the &lt;code&gt;-p&lt;/code&gt; flag on &lt;code&gt;docker run&lt;/code&gt; to publish and map one or more ports, or the &lt;code&gt;-P&lt;/code&gt; flag to publish all exposed ports and map them to high-order ports.</source>
          <target state="translated">&lt;code&gt;EXPOSE&lt;/code&gt; 命令は、実際にポートを公開していません。これは、イメージを作成する人とコンテナを実行する人との間の一種のドキュメントとして機能し、ポートの公開が予定されています。コンテナーの実行時にポートを実際に公開するには、 &lt;code&gt;docker run&lt;/code&gt; で &lt;code&gt;-p&lt;/code&gt; フラグを使用して1つ以上のポートを公開およびマップするか、 &lt;code&gt;-P&lt;/code&gt; フラグを使用してすべての公開ポートを公開し、それらを高次ポートにマップします。</target>
        </trans-unit>
        <trans-unit id="645f60437d027833327e4b44fb9a229f2bfb6400" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EXPOSE&lt;/code&gt; instruction informs Docker that the container listens on the specified network ports at runtime. You can specify whether the port listens on TCP or UDP, and the default is TCP if the protocol is not specified.</source>
          <target state="translated">&lt;code&gt;EXPOSE&lt;/code&gt; 命令知らせるドッカーその実行時に指定されたネットワークポート上の容器聴取。ポートがTCPまたはUDPのどちらで待機するかを指定できます。プロトコルが指定されていない場合、デフォルトはTCPです。</target>
        </trans-unit>
        <trans-unit id="716562e8a5dadfe33cef2e8369dbac6cc00b394f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FROM&lt;/code&gt; instruction initializes a new build stage and sets the &lt;a href=&quot;https://docs.docker.com/engine/reference/glossary/#base-image&quot;&gt;&lt;em&gt;Base Image&lt;/em&gt;&lt;/a&gt; for subsequent instructions. As such, a valid &lt;code&gt;Dockerfile&lt;/code&gt; must start with a &lt;code&gt;FROM&lt;/code&gt; instruction. The image can be any valid image &amp;ndash; it is especially easy to start by &lt;strong&gt;pulling an image&lt;/strong&gt; from the &lt;a href=&quot;../../../get-started/index&quot;&gt;&lt;em&gt;Public Repositories&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;FROM&lt;/code&gt; 命令は、新しいビルドのステージを初期化し、設定&lt;a href=&quot;https://docs.docker.com/engine/reference/glossary/#base-image&quot;&gt;&lt;em&gt;ベースイメージを&lt;/em&gt;&lt;/a&gt;後続の命令のために。したがって、有効な &lt;code&gt;Dockerfile&lt;/code&gt; は &lt;code&gt;FROM&lt;/code&gt; 命令で始まる必要があります。イメージは任意の有効なイメージにすることができ&lt;a href=&quot;../../../get-started/index&quot;&gt;&lt;em&gt;ます&lt;/em&gt;&lt;/a&gt;。&lt;em&gt;パブリックリポジトリ&lt;/em&gt;から&lt;strong&gt;イメージ&lt;/strong&gt;を&lt;strong&gt;プルすること&lt;/strong&gt;から始めるのが特に簡単です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="42ec5b4969dc13ba5cb34f54cea73cb4d3f05903" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FROM&lt;/code&gt; tag is pulling a signed image. You cannot build an image that has a &lt;code&gt;FROM&lt;/code&gt; that is not either present locally or signed. Given that content trust data exists for the tag &lt;code&gt;latest&lt;/code&gt;, the following build should succeed:</source>
          <target state="translated">&lt;code&gt;FROM&lt;/code&gt; タグは、署名された画像を引っ張っています。ローカルに存在しないか、署名されていない &lt;code&gt;FROM&lt;/code&gt; を持つイメージを作成することはできません。タグ &lt;code&gt;latest&lt;/code&gt; のコンテンツ信頼データが存在する場合、次のビルドは成功するはずです。</target>
        </trans-unit>
        <trans-unit id="c2e9d22e237ec841e63406770ce97846d2dc59a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HEALTHCHECK&lt;/code&gt; feature was added in Docker 1.12.</source>
          <target state="translated">&lt;code&gt;HEALTHCHECK&lt;/code&gt; 機能がドッカー1.12で追加されました。</target>
        </trans-unit>
        <trans-unit id="8d43fa4cfb4ede6f95d66b190829555714301acf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HEALTHCHECK&lt;/code&gt; instruction has two forms:</source>
          <target state="translated">&lt;code&gt;HEALTHCHECK&lt;/code&gt; 命令は、2つの形式があります。</target>
        </trans-unit>
        <trans-unit id="ea5519b5379f448f3642a0d47adc25774c5c8041" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HEALTHCHECK&lt;/code&gt; instruction tells Docker how to test a container to check that it is still working. This can detect cases such as a web server that is stuck in an infinite loop and unable to handle new connections, even though the server process is still running.</source>
          <target state="translated">&lt;code&gt;HEALTHCHECK&lt;/code&gt; 命令は、それはまだ動作していることを確認するために、コンテナをテストする方法ドッカーを伝えます。これにより、サーバープロセスがまだ実行されている場合でも、無限ループに陥って新しい接続を処理できないWebサーバーなどのケースを検出できます。</target>
        </trans-unit>
        <trans-unit id="2b7ee116d84bdf3e73f6a2de56ebf95b883e1a00" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LABEL&lt;/code&gt; instruction adds metadata to an image. A &lt;code&gt;LABEL&lt;/code&gt; is a key-value pair. To include spaces within a &lt;code&gt;LABEL&lt;/code&gt; value, use quotes and backslashes as you would in command-line parsing. A few usage examples:</source>
          <target state="translated">&lt;code&gt;LABEL&lt;/code&gt; の命令は、画像にメタデータを追加します。 &lt;code&gt;LABEL&lt;/code&gt; は、キーと値のペアです。 &lt;code&gt;LABEL&lt;/code&gt; 値内にスペースを含めるには、コマンドライン解析と同じように引用符とバックスラッシュを使用します。いくつかの使用例：</target>
        </trans-unit>
        <trans-unit id="67a0a8cc35e4d2e1aa6af5e6fbd62bde27b51ec1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MAINTAINER&lt;/code&gt; instruction sets the &lt;em&gt;Author&lt;/em&gt; field of the generated images. The &lt;code&gt;LABEL&lt;/code&gt; instruction is a much more flexible version of this and you should use it instead, as it enables setting any metadata you require, and can be viewed easily, for example with &lt;code&gt;docker inspect&lt;/code&gt;. To set a label corresponding to the &lt;code&gt;MAINTAINER&lt;/code&gt; field you could use:</source>
          <target state="translated">&lt;code&gt;MAINTAINER&lt;/code&gt; の命令は、設定&lt;em&gt;者&lt;/em&gt;生成された画像のフィールドを。 &lt;code&gt;LABEL&lt;/code&gt; の命令はこれをはるかに柔軟なバージョンであり、それはあなたが必要とするすべてのメタデータを設定可能、として例えば、簡単に見ることができるよう、あなたは、代わりにそれを使用する必要があります &lt;code&gt;docker inspect&lt;/code&gt; 。 &lt;code&gt;MAINTAINER&lt;/code&gt; フィールドに対応するラベルを設定するには、次を使用できます。</target>
        </trans-unit>
        <trans-unit id="67ebbb70f1473098a5c74c9ab58cb56302be856a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MANAGER STATUS&lt;/code&gt; column shows node participation in the Raft consensus:</source>
          <target state="translated">&lt;code&gt;MANAGER STATUS&lt;/code&gt; ラフトコンセンサスの列を示しノード参加：</target>
        </trans-unit>
        <trans-unit id="f7c7704a78191792a1d8655bea11a83fc3049b98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MANAGER&lt;/code&gt; column identifies the manager nodes in the swarm. The empty status in this column for &lt;code&gt;worker1&lt;/code&gt; and &lt;code&gt;worker2&lt;/code&gt; identifies them as worker nodes.</source>
          <target state="translated">&lt;code&gt;MANAGER&lt;/code&gt; 列が群れに管理ノードを識別する。 &lt;code&gt;worker1&lt;/code&gt; と &lt;code&gt;worker2&lt;/code&gt; のこの列の空のステータスは、それらをワーカーノードとして識別します。</target>
        </trans-unit>
        <trans-unit id="501ef9a7f35fb49486364828614f2e22487de202" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mountpoint&lt;/code&gt; is the path on the host (v1) or in the plugin (v2) where the volume has been made available.</source>
          <target state="translated">&lt;code&gt;Mountpoint&lt;/code&gt; ホスト（V1）に、またはボリュームが利用可能にされているプラグイン（V2）内のパスです。</target>
        </trans-unit>
        <trans-unit id="f72509df1f3a093ed48e1717dc925c13dc152b72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ONBUILD&lt;/code&gt; instruction adds to the image a &lt;em&gt;trigger&lt;/em&gt; instruction to be executed at a later time, when the image is used as the base for another build. The trigger will be executed in the context of the downstream build, as if it had been inserted immediately after the &lt;code&gt;FROM&lt;/code&gt; instruction in the downstream &lt;code&gt;Dockerfile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ONBUILD&lt;/code&gt; の命令は、画像に追加&lt;em&gt;トリガー&lt;/em&gt;画像を別のビルドのためのベースとして使用されて後で実行される命令を、。トリガーは、ダウンストリーム &lt;code&gt;Dockerfile&lt;/code&gt; の &lt;code&gt;FROM&lt;/code&gt; 命令の直後に挿入されたかのように、ダウンストリームビルドのコンテキストで実行されます。</target>
        </trans-unit>
        <trans-unit id="a097269ed1f1efba8a2d1de1fbc25ad35e65dfc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PLUGIN_ID&lt;/code&gt; value is either the plugin&amp;rsquo;s name or a path to its specification file. The plugin&amp;rsquo;s implementation determines whether you can specify a name or path. Consult with your Docker administrator to get information about the plugins available to you.</source>
          <target state="translated">&lt;code&gt;PLUGIN_ID&lt;/code&gt; の値は、プラグインの名前やその仕様ファイルへのパスのいずれかです。プラグインの実装により、名前またはパスを指定できるかどうかが決まります。使用可能なプラグインに関する情報を入手するには、Docker管理者に相談してください。</target>
        </trans-unit>
        <trans-unit id="3340492be3828b9c868ba42851749e55259a3bbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;REPLICAS&lt;/code&gt; column shows both the &lt;em&gt;actual&lt;/em&gt; and &lt;em&gt;desired&lt;/em&gt; number of tasks for the service.</source>
          <target state="translated">&lt;code&gt;REPLICAS&lt;/code&gt; カラムショー両方&lt;em&gt;実際&lt;/em&gt;と&lt;em&gt;所望の&lt;/em&gt;サービスのためのタスクの数。</target>
        </trans-unit>
        <trans-unit id="870bd21b88f50c54e7de0b3f963b7fc150117ad9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RUN&lt;/code&gt; instruction will execute any commands in a new layer on top of the current image and commit the results. The resulting committed image will be used for the next step in the &lt;code&gt;Dockerfile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RUN&lt;/code&gt; の命令は、現在の画像の上に新しいレイヤー内の任意のコマンドを実行して結果をコミットします。結果のコミットされたイメージは、 &lt;code&gt;Dockerfile&lt;/code&gt; の次のステップで使用されます。</target>
        </trans-unit>
        <trans-unit id="aee97a7ef2f533b4a208999ce506515a16a4128f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SHELL&lt;/code&gt; feature was added in Docker 1.12.</source>
          <target state="translated">&lt;code&gt;SHELL&lt;/code&gt; の機能は、ドッカー1.12で追加されました。</target>
        </trans-unit>
        <trans-unit id="1f46243e9474ba3fbb5fc42070b6a0e810312875" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SHELL&lt;/code&gt; instruction allows the default shell used for the &lt;em&gt;shell&lt;/em&gt; form of commands to be overridden. The default shell on Linux is &lt;code&gt;[&quot;/bin/sh&quot;, &quot;-c&quot;]&lt;/code&gt;, and on Windows is &lt;code&gt;[&quot;cmd&quot;, &quot;/S&quot;, &quot;/C&quot;]&lt;/code&gt;. The &lt;code&gt;SHELL&lt;/code&gt; instruction &lt;em&gt;must&lt;/em&gt; be written in JSON form in a Dockerfile.</source>
          <target state="translated">&lt;code&gt;SHELL&lt;/code&gt; の命令のために使用されるデフォルトのシェル可能&lt;em&gt;シェル&lt;/em&gt;オーバーライドするコマンドの形を。Linuxのデフォルトシェルは &lt;code&gt;[&quot;/bin/sh&quot;, &quot;-c&quot;]&lt;/code&gt; で、Windows のデフォルトシェルは &lt;code&gt;[&quot;cmd&quot;, &quot;/S&quot;, &quot;/C&quot;]&lt;/code&gt; です。 &lt;code&gt;SHELL&lt;/code&gt; の命令が&lt;em&gt;なければなりません&lt;/em&gt; DockerfileにJSON形式で記述すること。</target>
        </trans-unit>
        <trans-unit id="1163d8948bca451e34ca883bf4efe7959b615e7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SHELL&lt;/code&gt; instruction can also be used on Linux should an alternate shell be required such as &lt;code&gt;zsh&lt;/code&gt;, &lt;code&gt;csh&lt;/code&gt;, &lt;code&gt;tcsh&lt;/code&gt; and others.</source>
          <target state="translated">&lt;code&gt;SHELL&lt;/code&gt; Linuxで使用することも可能命令は、代替シェルは、次のような必要とされるべきで &lt;code&gt;zsh&lt;/code&gt; の、 &lt;code&gt;csh&lt;/code&gt; 、 &lt;code&gt;tcsh&lt;/code&gt; の等。</target>
        </trans-unit>
        <trans-unit id="9402e574cf122018a583eec5b329c405d3666b7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SHELL&lt;/code&gt; instruction can appear multiple times. Each &lt;code&gt;SHELL&lt;/code&gt; instruction overrides all previous &lt;code&gt;SHELL&lt;/code&gt; instructions, and affects all subsequent instructions. For example:</source>
          <target state="translated">&lt;code&gt;SHELL&lt;/code&gt; の命令が複数回表示されることができます。各 &lt;code&gt;SHELL&lt;/code&gt; の命令は、以前のすべて上書きされます &lt;code&gt;SHELL&lt;/code&gt; の指示をし、すべての後続の命令に影響を与えます。例えば：</target>
        </trans-unit>
        <trans-unit id="e98590ef0a2096201cca8d93674ffaef975a01dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SHELL&lt;/code&gt; instruction could also be used to modify the way in which a shell operates. For example, using &lt;code&gt;SHELL cmd /S /C /V:ON|OFF&lt;/code&gt; on Windows, delayed environment variable expansion semantics could be modified.</source>
          <target state="translated">&lt;code&gt;SHELL&lt;/code&gt; の命令は、シェルが動作する方法を変更するために使用することができます。たとえば、Windowsで &lt;code&gt;SHELL cmd /S /C /V:ON|OFF&lt;/code&gt; を使用すると、遅延環境変数の展開セマンティクスを変更できます。</target>
        </trans-unit>
        <trans-unit id="6298e85aed297aa06c04ef1003db81ec2c7ef26c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SHELL&lt;/code&gt; instruction is particularly useful on Windows where there are two commonly used and quite different native shells: &lt;code&gt;cmd&lt;/code&gt; and &lt;code&gt;powershell&lt;/code&gt;, as well as alternate shells available including &lt;code&gt;sh&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SHELL&lt;/code&gt; の：命令は、2つの一般的に使用されると全く異なるネイティブのシェルがあるWindows上で特に有効である &lt;code&gt;cmd&lt;/code&gt; および &lt;code&gt;powershell&lt;/code&gt; 、などを含む、利用可能な代替シェル &lt;code&gt;sh&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="70da59d5f956e683e513e4afc1818bb61971fb54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SIGNED TAG&lt;/code&gt; is the signed image tag with a unique content-addressable &lt;code&gt;DIGEST&lt;/code&gt;. &lt;code&gt;SIGNERS&lt;/code&gt; lists all entities who have signed.</source>
          <target state="translated">&lt;code&gt;SIGNED TAG&lt;/code&gt; は、固有のコンテンツアドレス可能符号付きイメージタグである &lt;code&gt;DIGEST&lt;/code&gt; 。 &lt;code&gt;SIGNERS&lt;/code&gt; は、署名したすべてのエンティティをリストします。</target>
        </trans-unit>
        <trans-unit id="1d1da3c14a5462c93cead1c428e7eedd8878cdc2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SIZE&lt;/code&gt; is the cumulative space taken up by the image and all its parent images. This is also the disk space used by the contents of the Tar file created when you &lt;code&gt;docker save&lt;/code&gt; an image.</source>
          <target state="translated">&lt;code&gt;SIZE&lt;/code&gt; は画像とそのすべての親画像に取り込ま累積スペースです。これは、イメージを &lt;code&gt;docker save&lt;/code&gt; するときに作成されるTarファイルの内容によって使用されるディスク領域でもあります。</target>
        </trans-unit>
        <trans-unit id="1541d778170a621d3c22bd5b6e13485df9fa5abd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;STOPSIGNAL&lt;/code&gt; instruction sets the system call signal that will be sent to the container to exit. This signal can be a valid unsigned number that matches a position in the kernel&amp;rsquo;s syscall table, for instance 9, or a signal name in the format SIGNAME, for instance SIGKILL.</source>
          <target state="translated">&lt;code&gt;STOPSIGNAL&lt;/code&gt; 命令が終了した容器に送信されるシステムコール信号を設定します。このシグナルは、カーネルのsyscallテーブル内の位置（例：9）と一致する有効な符号なし数値、またはSIGNAME形式のシグナル名（例：SIGKILL）にすることができます。</target>
        </trans-unit>
        <trans-unit id="3510f8e32a94f048c18787c43f116f8b2b1db4b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SignedTags&lt;/code&gt; key will list the &lt;code&gt;SignedTag&lt;/code&gt; name, its &lt;code&gt;Digest&lt;/code&gt;, and the &lt;code&gt;Signers&lt;/code&gt; responsible for the signature.</source>
          <target state="translated">&lt;code&gt;SignedTags&lt;/code&gt; のキーが一覧表示されます &lt;code&gt;SignedTag&lt;/code&gt; の名前、その &lt;code&gt;Digest&lt;/code&gt; と、 &lt;code&gt;Signers&lt;/code&gt; の署名の責任を。</target>
        </trans-unit>
        <trans-unit id="0a3f768c13747f5e7ee4e46e620852cfb97cee1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TLSConfig&lt;/code&gt; field is optional and TLS will only be verified if this configuration is present.</source>
          <target state="translated">&lt;code&gt;TLSConfig&lt;/code&gt; のフィールドはオプションであり、この構成が存在する場合はTLSにのみ検証されます。</target>
        </trans-unit>
        <trans-unit id="c93989b2fb4eaed0d00803c2508edabbae9aa2ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;URL&lt;/code&gt; parameter can refer to three kinds of resources: Git repositories, pre-packaged tarball contexts and plain text files.</source>
          <target state="translated">&lt;code&gt;URL&lt;/code&gt; の Gitリポジトリ、あらかじめパッケージのtarballコンテキストとプレーンテキストファイル：パラメータはリソースの3種類を参照することができます。</target>
        </trans-unit>
        <trans-unit id="995c1b14070453923cd78f9b81be5fac37fc342e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;USER&lt;/code&gt; at line 2 evaluates to &lt;code&gt;some_user&lt;/code&gt; as the &lt;code&gt;user&lt;/code&gt; variable is defined on the subsequent line 3. The &lt;code&gt;USER&lt;/code&gt; at line 4 evaluates to &lt;code&gt;what_user&lt;/code&gt; as &lt;code&gt;user&lt;/code&gt; is defined and the &lt;code&gt;what_user&lt;/code&gt; value was passed on the command line. Prior to its definition by an &lt;code&gt;ARG&lt;/code&gt; instruction, any use of a variable results in an empty string.</source>
          <target state="translated">&lt;code&gt;USER&lt;/code&gt; に行2件の評価さで &lt;code&gt;some_user&lt;/code&gt; として &lt;code&gt;user&lt;/code&gt; 変数は次のライン3上に定義されている &lt;code&gt;USER&lt;/code&gt; 線で4件の評価さ &lt;code&gt;what_user&lt;/code&gt; として &lt;code&gt;user&lt;/code&gt; 定義され、 &lt;code&gt;what_user&lt;/code&gt; の値は、コマンドラインに渡されました。 &lt;code&gt;ARG&lt;/code&gt; 命令で定義する前は、変数を使用すると空の文字列になります。</target>
        </trans-unit>
        <trans-unit id="b2b6c1993ea47bca5c16249690dcc2cdf3b59597" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;USER&lt;/code&gt; instruction sets the user name (or UID) and optionally the user group (or GID) to use when running the image and for any &lt;code&gt;RUN&lt;/code&gt;, &lt;code&gt;CMD&lt;/code&gt; and &lt;code&gt;ENTRYPOINT&lt;/code&gt; instructions that follow it in the &lt;code&gt;Dockerfile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;USER&lt;/code&gt; 命令は、イメージを実行するときに使用し、いずれかのためにユーザ名（またはUID）を設定し、必要に応じてユーザーグループ（またはGID） &lt;code&gt;RUN&lt;/code&gt; 、 &lt;code&gt;CMD&lt;/code&gt; 及び &lt;code&gt;ENTRYPOINT&lt;/code&gt; でそれに続く命令 &lt;code&gt;Dockerfile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d33671ff9ff81e4a1193fb055f7f6d6cbdaea5a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VOLUME&lt;/code&gt; instruction creates a mount point with the specified name and marks it as holding externally mounted volumes from native host or other containers. The value can be a JSON array, &lt;code&gt;VOLUME [&quot;/var/log/&quot;]&lt;/code&gt;, or a plain string with multiple arguments, such as &lt;code&gt;VOLUME /var/log&lt;/code&gt; or &lt;code&gt;VOLUME /var/log /var/db&lt;/code&gt;. For more information/examples and mounting instructions via the Docker client, refer to &lt;a href=&quot;https://docs.docker.com/storage#/mount-a-host-directory-as-a-data-volume&quot;&gt;&lt;em&gt;Share Directories via Volumes&lt;/em&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;code&gt;VOLUME&lt;/code&gt; の命令は、外部保持として指定された名前とマークそれにマウントポイントを作成し、ネイティブホストまたは他の容器からボリュームをマウント。値は、JSON配列、 &lt;code&gt;VOLUME [&quot;/var/log/&quot;]&lt;/code&gt; 、または &lt;code&gt;VOLUME /var/log&lt;/code&gt; や &lt;code&gt;VOLUME /var/log /var/db&lt;/code&gt; などの複数の引数を持つプレーン文字列にすることができます。Dockerクライアントを介した詳細/例およびマウント手順については、&lt;a href=&quot;https://docs.docker.com/storage#/mount-a-host-directory-as-a-data-volume&quot;&gt;&lt;em&gt;ボリュームの&lt;/em&gt;&lt;/a&gt;ドキュメント&lt;em&gt;を介したディレクトリの共有を&lt;/em&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8e27e606679dcb2a5aacc2d44d5f337f925fc0fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WORKDIR&lt;/code&gt; instruction can be used multiple times in a &lt;code&gt;Dockerfile&lt;/code&gt;. If a relative path is provided, it will be relative to the path of the previous &lt;code&gt;WORKDIR&lt;/code&gt; instruction. For example:</source>
          <target state="translated">&lt;code&gt;WORKDIR&lt;/code&gt; の命令がで複数回使用することができます &lt;code&gt;Dockerfile&lt;/code&gt; 。相対パスが指定されている場合、それは前の &lt;code&gt;WORKDIR&lt;/code&gt; 命令のパスへの相対パスになります。例えば：</target>
        </trans-unit>
        <trans-unit id="4a147d370a985d02c05500bdc3abd64abc4f75c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WORKDIR&lt;/code&gt; instruction can resolve environment variables previously set using &lt;code&gt;ENV&lt;/code&gt;. You can only use environment variables explicitly set in the &lt;code&gt;Dockerfile&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;WORKDIR&lt;/code&gt; の命令は、以前使用して設定された環境変数を解決することができ &lt;code&gt;ENV&lt;/code&gt; を。 &lt;code&gt;Dockerfile&lt;/code&gt; で明示的に設定された環境変数のみを使用できます。例えば：</target>
        </trans-unit>
        <trans-unit id="c841bd1ff530bf145434255ac0536325cb79900e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WORKDIR&lt;/code&gt; instruction sets the working directory for any &lt;code&gt;RUN&lt;/code&gt;, &lt;code&gt;CMD&lt;/code&gt;, &lt;code&gt;ENTRYPOINT&lt;/code&gt;, &lt;code&gt;COPY&lt;/code&gt; and &lt;code&gt;ADD&lt;/code&gt; instructions that follow it in the &lt;code&gt;Dockerfile&lt;/code&gt;. If the &lt;code&gt;WORKDIR&lt;/code&gt; doesn&amp;rsquo;t exist, it will be created even if it&amp;rsquo;s not used in any subsequent &lt;code&gt;Dockerfile&lt;/code&gt; instruction.</source>
          <target state="translated">&lt;code&gt;WORKDIR&lt;/code&gt; の命令は、いずれかの作業ディレクトリを設定し、 &lt;code&gt;RUN&lt;/code&gt; 、 &lt;code&gt;CMD&lt;/code&gt; 、 &lt;code&gt;ENTRYPOINT&lt;/code&gt; 、 &lt;code&gt;COPY&lt;/code&gt; および &lt;code&gt;ADD&lt;/code&gt; の中で、それに続く命令 &lt;code&gt;Dockerfile&lt;/code&gt; 。場合 &lt;code&gt;WORKDIR&lt;/code&gt; が存在しない、それはそれ以降で使用していない場合でも、それが作成されます &lt;code&gt;Dockerfile&lt;/code&gt; の命令。</target>
        </trans-unit>
        <trans-unit id="2dd0484854b35b2483fd38a2b7dc3bb5dc5ef886" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[REPOSITORY[:TAG]]&lt;/code&gt; value must be an &amp;ldquo;exact match&amp;rdquo;. This means that, for example, &lt;code&gt;docker images jav&lt;/code&gt; does not match the image &lt;code&gt;java&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[REPOSITORY[:TAG]]&lt;/code&gt; 値は「完全一致」でなければなりません。これは、たとえば、 &lt;code&gt;docker images jav&lt;/code&gt; が画像 &lt;code&gt;java&lt;/code&gt; と一致しないことを意味します。</target>
        </trans-unit>
        <trans-unit id="13597d6a87d88f87cf53223339f91d85dd2b2aff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ancestor&lt;/code&gt; filter matches containers based on its image or a descendant of it. The filter supports the following image representation:</source>
          <target state="translated">&lt;code&gt;ancestor&lt;/code&gt; フィルタは、その画像またはその子孫に基づいて、コンテナを一致します。フィルターは、次の画像表現をサポートしています。</target>
        </trans-unit>
        <trans-unit id="e2af6f0edf436040d36923f5820566c22d471ac5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aufs&lt;/code&gt; driver is the oldest, but is based on a Linux kernel patch-set that is unlikely to be merged into the main kernel. These are also known to cause some serious kernel crashes. However &lt;code&gt;aufs&lt;/code&gt; allows containers to share executable and shared library memory, so is a useful choice when running thousands of containers with the same program or libraries.</source>
          <target state="translated">&lt;code&gt;aufs&lt;/code&gt; のドライバは最も古いですが、メインのカーネルにマージされにくいのLinuxカーネルパッチセットに基づいています。これらは、いくつかの重大なカーネルクラッシュを引き起こすことも知られています。ただし、 &lt;code&gt;aufs&lt;/code&gt; を使用すると、コンテナーは実行可能ファイルと共有ライブラリーのメモリーを共有できるため、同じプログラムまたはライブラリーで何千ものコンテナーを実行する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="d21264ed9be94f59b90f635a011c3e1c7dccb1ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aufs&lt;/code&gt; storage driver facilitates running Docker on distros that have no support for OverlayFS, such as Ubuntu 14.04 LTS, which originally shipped with a 3.14 kernel.</source>
          <target state="translated">&lt;code&gt;aufs&lt;/code&gt; ように、元々 3.14カーネルに同梱のUbuntu 14.04 LTS、などOverlayFSためのサポートを、持っていないディストリビューション上でドッカーを実行しているストレージドライバが容易。</target>
        </trans-unit>
        <trans-unit id="ac5b8e87a209b84e7e37fcdb8a390ec2e2305090" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aufs&lt;/code&gt; storage driver is deprecated in favor of &lt;code&gt;overlay2&lt;/code&gt;, and will be removed in a future release. Users of the &lt;code&gt;aufs&lt;/code&gt; storage driver are recommended to migrate to a different storage driver, such as &lt;code&gt;overlay2&lt;/code&gt;, which is now the default storage driver.</source>
          <target state="translated">&lt;code&gt;aufs&lt;/code&gt; ストレージドライバは賛成で廃止され &lt;code&gt;overlay2&lt;/code&gt; 、および将来のリリースでは削除されます。 &lt;code&gt;aufs&lt;/code&gt; ストレージドライバーのユーザーは、 &lt;code&gt;overlay2&lt;/code&gt; などの別のストレージドライバーに移行することをお勧めします。これは現在、デフォルトのストレージドライバーです。</target>
        </trans-unit>
        <trans-unit id="043c98c9bd9cb2795c2de8bf56042b5344260468" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;before&lt;/code&gt; filter shows only containers created before the container with given id or name. For example, having these containers created:</source>
          <target state="translated">&lt;code&gt;before&lt;/code&gt; フィルタのみを示しているコンテナは、特定のIDまたは名前を持つコンテナの前に作成しました。たとえば、次のコンテナを作成するとします。</target>
        </trans-unit>
        <trans-unit id="074d496d9037bf300f47a0466f625105ef5ae8c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;before&lt;/code&gt; filter shows only images created before the image with given id or reference. For example, having these images:</source>
          <target state="translated">&lt;code&gt;before&lt;/code&gt; フィルタのみを示し、所与のIDまたは参照して画像の前に作成されたイメージ。たとえば、次の画像があるとします。</target>
        </trans-unit>
        <trans-unit id="680eea36a92a6d600ce8f2d291b3dabb1fd2b4f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bind-propagation&lt;/code&gt; option defaults to &lt;code&gt;rprivate&lt;/code&gt; for both bind mounts and volume mounts, and is only configurable for bind mounts. In other words, named volumes do not support bind propagation.</source>
          <target state="translated">&lt;code&gt;bind-propagation&lt;/code&gt; へのオプションのデフォルト &lt;code&gt;rprivate&lt;/code&gt; バインドマウントとボリュームのマウントの両方のための、およびバインドマウント用のみ設定可能です。つまり、名前付きボリュームはバインドの伝播をサポートしていません。</target>
        </trans-unit>
        <trans-unit id="67f07157a985d84dcd79e8d91f8e6b76da258ccb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;btrfs&lt;/code&gt; driver is very fast for &lt;code&gt;docker build&lt;/code&gt; - but like &lt;code&gt;devicemapper&lt;/code&gt; does not share executable memory between devices. Use &lt;code&gt;dockerd -s btrfs -g /mnt/btrfs_partition&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;btrfs&lt;/code&gt; のドライバがために、非常に高速である &lt;code&gt;docker build&lt;/code&gt; -しかし、同じよう &lt;code&gt;devicemapper&lt;/code&gt; デバイス間で実行可能なメモリを共有しません。使用 &lt;code&gt;dockerd -s btrfs -g /mnt/btrfs_partition&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc0ba098ceac4dd5ea14ad79d5a4ce5bb841ef45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;capability&lt;/code&gt; filter matches on plugin capabilities. One plugin might have multiple capabilities. Currently &lt;code&gt;volumedriver&lt;/code&gt;, &lt;code&gt;networkdriver&lt;/code&gt;, &lt;code&gt;ipamdriver&lt;/code&gt;, &lt;code&gt;logdriver&lt;/code&gt;, &lt;code&gt;metricscollector&lt;/code&gt;, and &lt;code&gt;authz&lt;/code&gt; are supported capabilities.</source>
          <target state="translated">&lt;code&gt;capability&lt;/code&gt; フィルタは機能をプラグインに一致します。1つのプラグインに複数の機能がある場合があります。現在、 &lt;code&gt;volumedriver&lt;/code&gt; 、 &lt;code&gt;networkdriver&lt;/code&gt; 、 &lt;code&gt;ipamdriver&lt;/code&gt; 、 &lt;code&gt;logdriver&lt;/code&gt; 、 &lt;code&gt;metricscollector&lt;/code&gt; 、および &lt;code&gt;authz&lt;/code&gt; がサポートされている機能です。</target>
        </trans-unit>
        <trans-unit id="fdecbd9da265febad688f0f54cfcc497df8b3feb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config.json&lt;/code&gt; file describes the plugin. See the &lt;a href=&quot;config/index&quot;&gt;plugins config reference&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;config.json&lt;/code&gt; のファイルには、プラグインを記述しています。&lt;a href=&quot;config/index&quot;&gt;プラグイン設定リファレンスを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="736cffcd57446baeaf57dc1d916874f3ab44b5a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config.json&lt;/code&gt; file stores a JSON encoding of several properties:</source>
          <target state="translated">&lt;code&gt;config.json&lt;/code&gt; のファイルを格納するいくつかのプロパティのJSONエンコーディング：</target>
        </trans-unit>
        <trans-unit id="2310e282ca831fa888d8ebbe5bcaac153cd3667b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;container-dest&lt;/code&gt; must always be an absolute path such as &lt;code&gt;/src/docs&lt;/code&gt;. The &lt;code&gt;host-src&lt;/code&gt; can either be an absolute path or a &lt;code&gt;name&lt;/code&gt; value. If you supply an absolute path for the &lt;code&gt;host-dir&lt;/code&gt;, Docker bind-mounts to the path you specify. If you supply a &lt;code&gt;name&lt;/code&gt;, Docker creates a named volume by that &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;container-dest&lt;/code&gt; 常にような絶対パスでなければならない &lt;code&gt;/src/docs&lt;/code&gt; 。 &lt;code&gt;host-src&lt;/code&gt; 、絶対パスまたはことができる &lt;code&gt;name&lt;/code&gt; 値。 &lt;code&gt;host-dir&lt;/code&gt; に絶対パスを指定すると、Dockerは指定したパスにbind-mountします。ユーザーが指定する場合は &lt;code&gt;name&lt;/code&gt; 、ドッカーはその分というボリュームを作成する &lt;code&gt;name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8630a18f96c819b6fc8d9fb47228d4ec089bb06b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;container:...&lt;/code&gt; formats are only supported in the &lt;a href=&quot;../compose-versioning/index#version-2&quot;&gt;version 2 file format&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;container:...&lt;/code&gt; の形式だけでサポートされている&lt;a href=&quot;../compose-versioning/index#version-2&quot;&gt;バージョン2のファイル形式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc1a8fdb596af07bb07751edfd381fdce594be84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;content-trust&lt;/code&gt; flag is based around a &lt;code&gt;mode&lt;/code&gt; variable instructing the engine whether to enforce signed images, and a &lt;code&gt;trust-pinning&lt;/code&gt; variable instructing the engine which sources to trust.</source>
          <target state="translated">&lt;code&gt;content-trust&lt;/code&gt; フラグが周囲に基づく &lt;code&gt;mode&lt;/code&gt; 署名された画像を強制するかどうかをエンジンに指示変数、及び &lt;code&gt;trust-pinning&lt;/code&gt; 信頼するためにどのソースエンジンを指示する変数。</target>
        </trans-unit>
        <trans-unit id="012a8331c2e0e74449f2ab7bb73efed40ea1a1e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cp&lt;/code&gt; command behaves like the Unix &lt;code&gt;cp -a&lt;/code&gt; command in that directories are copied recursively with permissions preserved if possible. Ownership is set to the user and primary group at the destination. For example, files copied to a container are created with &lt;code&gt;UID:GID&lt;/code&gt; of the root user. Files copied to the local machine are created with the &lt;code&gt;UID:GID&lt;/code&gt; of the user which invoked the &lt;code&gt;docker cp&lt;/code&gt; command. However, if you specify the &lt;code&gt;-a&lt;/code&gt; option, &lt;code&gt;docker cp&lt;/code&gt; sets the ownership to the user and primary group at the source. If you specify the &lt;code&gt;-L&lt;/code&gt; option, &lt;code&gt;docker cp&lt;/code&gt; follows any symbolic link in the &lt;code&gt;SRC_PATH&lt;/code&gt;. &lt;code&gt;docker cp&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; create parent directories for &lt;code&gt;DEST_PATH&lt;/code&gt; if they do not exist.</source>
          <target state="translated">&lt;code&gt;cp&lt;/code&gt; Unixのようなコマンドに振る舞う &lt;code&gt;cp -a&lt;/code&gt; そのディレクトリ内のコマンドは、可能な場合は、保存権限で再帰的にコピーされます。所有権は、宛先のユーザーおよび1次グループに設定されます。たとえば、コンテナにコピーされたファイルは、rootユーザーの &lt;code&gt;UID:GID&lt;/code&gt; で作成されます。ローカルマシンにコピーされたファイルは、 &lt;code&gt;docker cp&lt;/code&gt; コマンドを呼び出したユーザーの &lt;code&gt;UID:GID&lt;/code&gt; で作成されます。ただし、 &lt;code&gt;-a&lt;/code&gt; オプションを指定した場合、 &lt;code&gt;docker cp&lt;/code&gt; はソースのユーザーとプライマリグループに所有権を設定します。 &lt;code&gt;-L&lt;/code&gt; オプションを指定すると、 &lt;code&gt;SRC_PATH&lt;/code&gt; &lt;code&gt;docker cp&lt;/code&gt; はSRC_PATH内のシンボリックリンクをたどります。。 &lt;code&gt;docker cp&lt;/code&gt; は、 &lt;code&gt;DEST_PATH&lt;/code&gt; の親ディレクトリが存在しない場合&lt;em&gt;は&lt;/em&gt;作成しません。</target>
        </trans-unit>
        <trans-unit id="d47ce5d678976a7476b0c18e9222d25c8a694629" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dangling&lt;/code&gt; filter matches on all volumes not referenced by any containers</source>
          <target state="translated">&lt;code&gt;dangling&lt;/code&gt; 任意のコンテナによって参照されていないすべてのボリューム上のフィルタのマッチ</target>
        </trans-unit>
        <trans-unit id="ca501fcadca0fc33fcf1980848e49bf924e5837a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;depends_on&lt;/code&gt; option is ignored when &lt;a href=&quot;../../engine/reference/commandline/stack_deploy/index&quot;&gt;deploying a stack in swarm mode&lt;/a&gt; with a version 3 Compose file.</source>
          <target state="translated">&lt;code&gt;depends_on&lt;/code&gt; のときオプションは無視され&lt;a href=&quot;../../engine/reference/commandline/stack_deploy/index&quot;&gt;群れモードでスタックを展開&lt;/a&gt;、バージョン3のComposeファイルに。</target>
        </trans-unit>
        <trans-unit id="a10821048e200222decc18b5caa6ef73360f3e65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;deploy&lt;/code&gt; command supports compose file version &lt;code&gt;3.0&lt;/code&gt; and above.</source>
          <target state="translated">&lt;code&gt;deploy&lt;/code&gt; コマンド支持体は、ファイルのバージョン構成 &lt;code&gt;3.0&lt;/code&gt; 以上を。</target>
        </trans-unit>
        <trans-unit id="d97f79dd18614fb6309fc4cb7e75346b229c6a7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;desired-state&lt;/code&gt; filter can take the values &lt;code&gt;running&lt;/code&gt;, &lt;code&gt;shutdown&lt;/code&gt;, or &lt;code&gt;accepted&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;desired-state&lt;/code&gt; フィルタ値取ることができる &lt;code&gt;running&lt;/code&gt; 、 &lt;code&gt;shutdown&lt;/code&gt; 、または &lt;code&gt;accepted&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c577e679b95985fa19b5d2c2ba04dd7e2e5beeaf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;devicemapper&lt;/code&gt; driver uses thin provisioning and Copy on Write (CoW) snapshots. For each devicemapper graph location &amp;ndash; typically &lt;code&gt;/var/lib/docker/devicemapper&lt;/code&gt; &amp;ndash; a thin pool is created based on two block devices, one for data and one for metadata. By default, these block devices are created automatically by using loopback mounts of automatically created sparse files. Refer to &lt;a href=&quot;#devicemapper-options&quot;&gt;Devicemapper options&lt;/a&gt; below for a way how to customize this setup. &lt;a href=&quot;http://jpetazzo.github.io/2014/01/29/docker-device-mapper-resize/&quot;&gt;~jpetazzo/Resizing Docker containers with the Device Mapper plugin&lt;/a&gt; article explains how to tune your existing setup without the use of options.</source>
          <target state="translated">&lt;code&gt;devicemapper&lt;/code&gt; のドライバは、Write（ウシ）のスナップショットにシンプロビジョニングとコピーを使用しています。デバイスマッパーグラフの場所（通常は &lt;code&gt;/var/lib/docker/devicemapper&lt;/code&gt; )ごとに、データ用とメタデータ用の2つのブロックデバイスに基づいてシンプールが作成されます。デフォルトでは、これらのブロックデバイスは、自動作成されたスパースファイルのループバックマウントを使用して自動的に作成されます。この設定をカスタマイズする方法については、以下の&lt;a href=&quot;#devicemapper-options&quot;&gt;Devicemapperオプションを&lt;/a&gt;参照してください。&lt;a href=&quot;http://jpetazzo.github.io/2014/01/29/docker-device-mapper-resize/&quot;&gt;〜jpetazzo /デバイスマッパープラグインを使用したDockerコンテナーのサイズ変更の&lt;/a&gt;記事では、オプションを使用せずに既存の設定を調整する方法について説明しています。</target>
        </trans-unit>
        <trans-unit id="bccd0195d721f403d76a89afd53f755e0c58494d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;devicemapper&lt;/code&gt; storage driver facilitates running Docker on older (3.x) kernels that have no support for other storage drivers (such as overlay2, or AUFS).</source>
          <target state="translated">&lt;code&gt;devicemapper&lt;/code&gt; の他のストレージ（例えばoverlay2として、又はAUFS）ドライバのためのサポートを有していない古い（3.xの）カーネルでドッカーを実行しているストレージドライバが容易になります。</target>
        </trans-unit>
        <trans-unit id="89272b2ed83b2ae8d4a0b79b32cc9955f7c51e27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;devicemapper&lt;/code&gt; storage driver is deprecated in favor of &lt;code&gt;overlay2&lt;/code&gt;, and will be removed in a future release. Users of the &lt;code&gt;devicemapper&lt;/code&gt; storage driver are recommended to migrate to a different storage driver, such as &lt;code&gt;overlay2&lt;/code&gt;, which is now the default storage driver.</source>
          <target state="translated">&lt;code&gt;devicemapper&lt;/code&gt; のストレージドライバは賛成で廃止され &lt;code&gt;overlay2&lt;/code&gt; 、および将来のリリースでは削除されます。 &lt;code&gt;devicemapper&lt;/code&gt; ストレージドライバーのユーザーは、 &lt;code&gt;overlay2&lt;/code&gt; などの別のストレージドライバーに移行することをお勧めします。これは現在、デフォルトのストレージドライバーです。</target>
        </trans-unit>
        <trans-unit id="07ecd732b3bd07e8737e552d0f0bcba3e4908ea3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;disable-legacy-registry&lt;/code&gt; configuration option has been removed and, when used, will produce an error on daemon startup.</source>
          <target state="translated">&lt;code&gt;disable-legacy-registry&lt;/code&gt; 設定オプションが削除されている、使用された場合、デーモン起動時にエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="4a497a0da289a9d8c0ef81082723389a06ffe41a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker build&lt;/code&gt; command builds Docker images from a Dockerfile and a &amp;ldquo;context&amp;rdquo;. A build&amp;rsquo;s context is the set of files located in the specified &lt;code&gt;PATH&lt;/code&gt; or &lt;code&gt;URL&lt;/code&gt;. The build process can refer to any of the files in the context. For example, your build can use a &lt;a href=&quot;../../builder/index#copy&quot;&gt;&lt;em&gt;COPY&lt;/em&gt;&lt;/a&gt; instruction to reference a file in the context.</source>
          <target state="translated">&lt;code&gt;docker build&lt;/code&gt; コマンドがDockerfileと「文脈」からドッカーイメージを構築します。ビルドのコンテキストは、指定された &lt;code&gt;PATH&lt;/code&gt; または &lt;code&gt;URL&lt;/code&gt; にあるファイルのセットです。ビルドプロセスは、コンテキスト内の任意のファイルを参照できます。たとえば、ビルドでは&lt;a href=&quot;../../builder/index#copy&quot;&gt;&lt;em&gt;COPY&lt;/em&gt;&lt;/a&gt;命令を使用して、コンテキスト内のファイルを参照できます。</target>
        </trans-unit>
        <trans-unit id="8d00da26adc0934efef97a4a66ba07d087391f9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker cp&lt;/code&gt; command assumes container paths are relative to the container&amp;rsquo;s &lt;code&gt;/&lt;/code&gt; (root) directory. This means supplying the initial forward slash is optional; The command sees &lt;code&gt;compassionate_darwin:/tmp/foo/myfile.txt&lt;/code&gt; and &lt;code&gt;compassionate_darwin:tmp/foo/myfile.txt&lt;/code&gt; as identical. Local machine paths can be an absolute or relative value. The command interprets a local machine&amp;rsquo;s relative paths as relative to the current working directory where &lt;code&gt;docker cp&lt;/code&gt; is run.</source>
          <target state="translated">&lt;code&gt;docker cp&lt;/code&gt; コマンドは、コンテナパスがコンテナのに対して相対的なものを前提と &lt;code&gt;/&lt;/code&gt; （ルート）ディレクトリ。つまり、最初のスラッシュの指定はオプションです。コマンドは &lt;code&gt;compassionate_darwin:/tmp/foo/myfile.txt&lt;/code&gt; と &lt;code&gt;compassionate_darwin:tmp/foo/myfile.txt&lt;/code&gt; が同一であると見なします。ローカルマシンパスは、絶対値または相対値にすることができます。このコマンドは、ローカルマシンの相対パスを、 &lt;code&gt;docker cp&lt;/code&gt; が実行されている現在の作業ディレクトリに対する相対パスとして解釈します。</target>
        </trans-unit>
        <trans-unit id="f0488fda8ff3401a355142d0109c0774079f4704" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker cp&lt;/code&gt; utility copies the contents of &lt;code&gt;SRC_PATH&lt;/code&gt; to the &lt;code&gt;DEST_PATH&lt;/code&gt;. You can copy from the container&amp;rsquo;s file system to the local machine or the reverse, from the local filesystem to the container. If &lt;code&gt;-&lt;/code&gt; is specified for either the &lt;code&gt;SRC_PATH&lt;/code&gt; or &lt;code&gt;DEST_PATH&lt;/code&gt;, you can also stream a tar archive from &lt;code&gt;STDIN&lt;/code&gt; or to &lt;code&gt;STDOUT&lt;/code&gt;. The &lt;code&gt;CONTAINER&lt;/code&gt; can be a running or stopped container. The &lt;code&gt;SRC_PATH&lt;/code&gt; or &lt;code&gt;DEST_PATH&lt;/code&gt; can be a file or directory.</source>
          <target state="translated">&lt;code&gt;docker cp&lt;/code&gt; のユーティリティの内容をコピー &lt;code&gt;SRC_PATH&lt;/code&gt; に &lt;code&gt;DEST_PATH&lt;/code&gt; 。コンテナーのファイルシステムからローカルマシンにコピーしたり、その逆で、ローカルファイルシステムからコンテナーにコピーしたりできます。場合 &lt;code&gt;-&lt;/code&gt; のいずれかに指定されている &lt;code&gt;SRC_PATH&lt;/code&gt; または &lt;code&gt;DEST_PATH&lt;/code&gt; 、あなたはまた、からtarアーカイブをストリーミングすることができ &lt;code&gt;STDIN&lt;/code&gt; かに &lt;code&gt;STDOUT&lt;/code&gt; 。 &lt;code&gt;CONTAINER&lt;/code&gt; 、実行中であるか、またはコンテナを停止することができます。 &lt;code&gt;SRC_PATH&lt;/code&gt; または &lt;code&gt;DEST_PATH&lt;/code&gt; ファイルやディレクトリをすることができます。</target>
        </trans-unit>
        <trans-unit id="2d84e65b44b0ace486ef052eb68a53a9c7db22eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker create&lt;/code&gt; command creates a writeable container layer over the specified image and prepares it for running the specified command. The container ID is then printed to &lt;code&gt;STDOUT&lt;/code&gt;. This is similar to &lt;code&gt;docker run -d&lt;/code&gt; except the container is never started. You can then use the &lt;code&gt;docker start &amp;lt;container_id&amp;gt;&lt;/code&gt; command to start the container at any point.</source>
          <target state="translated">&lt;code&gt;docker create&lt;/code&gt; コマンドは、指定された画像の上に書き込み可能なコンテナ層を作成し、指定されたコマンドを実行するためにそれを準備します。次に、コンテナIDが &lt;code&gt;STDOUT&lt;/code&gt; に出力されます。これは、コンテナーが起動されないことを除いて、 &lt;code&gt;docker run -d&lt;/code&gt; に似ています。次に、 &lt;code&gt;docker start &amp;lt;container_id&amp;gt;&lt;/code&gt; コマンドを使用して、任意の時点でコンテナーを開始できます。</target>
        </trans-unit>
        <trans-unit id="9e49c5596561af85a1388d3ee7f38cdf68214b18" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker exec&lt;/code&gt; command runs a new command in a running container.</source>
          <target state="translated">&lt;code&gt;docker exec&lt;/code&gt; コマンドが実行されているコンテナに新しいコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="36a4345c685a94da4a4d72493c8dd4b169284353" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker export&lt;/code&gt; command does not export the contents of volumes associated with the container. If a volume is mounted on top of an existing directory in the container, &lt;code&gt;docker export&lt;/code&gt; will export the contents of the &lt;em&gt;underlying&lt;/em&gt; directory, not the contents of the volume.</source>
          <target state="translated">&lt;code&gt;docker export&lt;/code&gt; コマンドは、コンテナに関連付けられたボリュームの内容をエクスポートしません。コンテナー内の既存のディレクトリの上にボリュームがマウントされている場合、 &lt;code&gt;docker export&lt;/code&gt; はボリュームのコンテンツではなく、&lt;em&gt;基になる&lt;/em&gt;ディレクトリのコンテンツをエクスポートします。</target>
        </trans-unit>
        <trans-unit id="212faf92123f1bd5dad504ad0c9711f075a2a885" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker images&lt;/code&gt; command takes an optional &lt;code&gt;[REPOSITORY[:TAG]]&lt;/code&gt; argument that restricts the list to images that match the argument. If you specify &lt;code&gt;REPOSITORY&lt;/code&gt;but no &lt;code&gt;TAG&lt;/code&gt;, the &lt;code&gt;docker images&lt;/code&gt; command lists all images in the given repository.</source>
          <target state="translated">&lt;code&gt;docker images&lt;/code&gt; コマンドは、オプションの取り &lt;code&gt;[REPOSITORY[:TAG]]&lt;/code&gt; 引数が一致したイメージにリストを制限引数を。 &lt;code&gt;REPOSITORY&lt;/code&gt; を指定して &lt;code&gt;TAG&lt;/code&gt; を指定しない場合、 &lt;code&gt;docker images&lt;/code&gt; コマンドは、指定されたリポジトリー内のすべてのイメージをリストします。</target>
        </trans-unit>
        <trans-unit id="9cf01d6be8fbd1ded8fffe4de73a77b12d992e6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker import&lt;/code&gt; command format &lt;code&gt;file|URL|- [REPOSITORY [TAG]]&lt;/code&gt; is deprecated since November 2013. It&amp;rsquo;s no more supported.</source>
          <target state="translated">&lt;code&gt;docker import&lt;/code&gt; コマンド形式の &lt;code&gt;file|URL|- [REPOSITORY [TAG]]&lt;/code&gt; それはもはやサポートされています11月、2013年で廃止されました。</target>
        </trans-unit>
        <trans-unit id="dce7f5061f028dd79b6c9199c2e8844396289e6d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker kill&lt;/code&gt; subcommand kills one or more containers. The main process inside the container is sent &lt;code&gt;SIGKILL&lt;/code&gt; signal (default), or the signal that is specified with the &lt;code&gt;--signal&lt;/code&gt; option. You can kill a container using the container&amp;rsquo;s ID, ID-prefix, or name.</source>
          <target state="translated">&lt;code&gt;docker kill&lt;/code&gt; サブコマンドは、1つ以上の容器を殺します。コンテナー内のメインプロセスには、 &lt;code&gt;SIGKILL&lt;/code&gt; シグナル（デフォルト）、または &lt;code&gt;--signal&lt;/code&gt; オプションで指定されたシグナルが送信されます。コンテナーのID、IDプレフィックス、または名前を使用してコンテナーを強制終了できます。</target>
        </trans-unit>
        <trans-unit id="d43c3096a9a9284aa348945d30f3d5d392ae079e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker logs --details&lt;/code&gt; command will add on extra attributes, such as environment variables and labels, provided to &lt;code&gt;--log-opt&lt;/code&gt; when creating the container.</source>
          <target state="translated">&lt;code&gt;docker logs --details&lt;/code&gt; コマンドは、このようなに提供する環境変数やラベル、などの追加属性に追加されます &lt;code&gt;--log-opt&lt;/code&gt; コンテナを作成するとき。</target>
        </trans-unit>
        <trans-unit id="e5948949f42d952f60c7708fcce602b9cb6dc943" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker logs --follow&lt;/code&gt; command will continue streaming the new output from the container&amp;rsquo;s &lt;code&gt;STDOUT&lt;/code&gt; and &lt;code&gt;STDERR&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;docker logs --follow&lt;/code&gt; コマンドは、コンテナのから新しい出力ストリーミング続ける &lt;code&gt;STDOUT&lt;/code&gt; と &lt;code&gt;STDERR&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="d8a9ca6208ff085d23a305e8d1993aaa303ef846" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker logs --timestamps&lt;/code&gt; command will add an &lt;a href=&quot;https://golang.org/pkg/time/#pkg-constants&quot;&gt;RFC3339Nano timestamp&lt;/a&gt; , for example &lt;code&gt;2014-09-16T06:17:46.000000000Z&lt;/code&gt;, to each log entry. To ensure that the timestamps are aligned the nano-second part of the timestamp will be padded with zero when necessary.</source>
          <target state="translated">&lt;code&gt;docker logs --timestamps&lt;/code&gt; コマンドが追加されます&lt;a href=&quot;https://golang.org/pkg/time/#pkg-constants&quot;&gt;RFC3339Nanoタイムスタンプを&lt;/a&gt;、たとえば、 &lt;code&gt;2014-09-16T06:17:46.000000000Z&lt;/code&gt; 、各ログエントリに。タイムスタンプを確実に整列させるために、タイムスタンプのナノ秒部分には、必要に応じてゼロが埋め込まれます。</target>
        </trans-unit>
        <trans-unit id="f379943afa430ee6b50ed771213d592f53df6cd9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker logs&lt;/code&gt; command batch-retrieves logs present at the time of execution.</source>
          <target state="translated">&lt;code&gt;docker logs&lt;/code&gt; 実行時にバッチを検索ログ存在を命じます。</target>
        </trans-unit>
        <trans-unit id="6b969e0fdf69b61cfacee42a371cb8dcea9a37c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker logs&lt;/code&gt; command is available only for the &lt;code&gt;json-file&lt;/code&gt; and &lt;code&gt;journald&lt;/code&gt; logging drivers. For detailed information on working with logging drivers, see &lt;a href=&quot;https://docs.docker.com/config/containers/logging/configure/&quot;&gt;Configure logging drivers&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;docker logs&lt;/code&gt; コマンドは使用可能です &lt;code&gt;json-file&lt;/code&gt; と &lt;code&gt;journald&lt;/code&gt; ログドライバー。ログドライバーの操作の詳細については、「&lt;a href=&quot;https://docs.docker.com/config/containers/logging/configure/&quot;&gt;ログドライバー&lt;/a&gt;を構成する」を参照してください。</target>
        </trans-unit>
        <trans-unit id="55752f0f1f17d3b512c98898ce7574796f4e5407" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker manifest inspect&lt;/code&gt; command takes an optional &lt;code&gt;--verbose&lt;/code&gt; flag that gives you the image&amp;rsquo;s name (Ref), and architecture and os (Platform).</source>
          <target state="translated">&lt;code&gt;docker manifest inspect&lt;/code&gt; のコマンドは、オプションの取り &lt;code&gt;--verbose&lt;/code&gt; あなたのイメージの名前（REF）、およびアーキテクチャとOS（プラットフォーム）を与えるフラグ。</target>
        </trans-unit>
        <trans-unit id="6c3ad1c2e88a035ec19fe4201ac4b782caf157a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker manifest&lt;/code&gt; command by itself performs no action. In order to operate on a manifest or manifest list, one of the subcommands must be used.</source>
          <target state="translated">&lt;code&gt;docker manifest&lt;/code&gt; 自体によるコマンドには、アクションを実行しません。マニフェストまたはマニフェストリストを操作するには、サブコマンドの1つを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="75c99ddf08d348672ee86f07f42d81770f1637c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker pause&lt;/code&gt; command suspends all processes in the specified containers. On Linux, this uses the cgroups freezer. Traditionally, when suspending a process the &lt;code&gt;SIGSTOP&lt;/code&gt; signal is used, which is observable by the process being suspended. With the cgroups freezer the process is unaware, and unable to capture, that it is being suspended, and subsequently resumed. On Windows, only Hyper-V containers can be paused.</source>
          <target state="translated">&lt;code&gt;docker pause&lt;/code&gt; コマンドは、指定されたコンテナ内のすべてのプロセスを中断します。Linuxでは、これはcgroups冷凍庫を使用します。従来、プロセスを一時停止するときは、 &lt;code&gt;SIGSTOP&lt;/code&gt; シグナルが使用されます。これは、一時停止されているプロセスで監視できます。cgroupsのフリーザーを使用すると、プロセスは中断され、その後再開されたことを認識できず、キャプチャできません。Windowsでは、Hyper-Vコンテナーのみを一時停止できます。</target>
        </trans-unit>
        <trans-unit id="d4fcb5e9f179d47f06df5ff0e7c5e4b7f44e31e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker ps --before&lt;/code&gt; and &lt;code&gt;docker ps --since&lt;/code&gt; options are deprecated. Use &lt;code&gt;docker ps --filter=before=...&lt;/code&gt; and &lt;code&gt;docker ps --filter=since=...&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;docker ps --before&lt;/code&gt; と &lt;code&gt;docker ps --since&lt;/code&gt; オプションは推奨されません。使用 &lt;code&gt;docker ps --filter=before=...&lt;/code&gt; と &lt;code&gt;docker ps --filter=since=...&lt;/code&gt; 代わりに。</target>
        </trans-unit>
        <trans-unit id="c88758404e46e53d12887c5e58b9a83faebb4784" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker ps&lt;/code&gt; command only shows running containers by default. To see all containers, use the &lt;code&gt;-a&lt;/code&gt; (or &lt;code&gt;--all&lt;/code&gt;) flag:</source>
          <target state="translated">&lt;code&gt;docker ps&lt;/code&gt; コマンドは、デフォルトで実行されているコンテナを示しています。すべてのコンテナーを表示するには、 &lt;code&gt;-a&lt;/code&gt; （または &lt;code&gt;--all&lt;/code&gt; ）フラグを使用します。</target>
        </trans-unit>
        <trans-unit id="60742f07fa12b395820e597a3d69a0275c37092a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker rename&lt;/code&gt; command renames a container.</source>
          <target state="translated">&lt;code&gt;docker rename&lt;/code&gt; コマンドは、コンテナの名前を変更します。</target>
        </trans-unit>
        <trans-unit id="349b19b1df93f399fb4b343e7c3f1b48014c976d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker run&lt;/code&gt; command can be used in combination with &lt;code&gt;docker commit&lt;/code&gt; to &lt;a href=&quot;../commit/index&quot;&gt;&lt;em&gt;change the command that a container runs&lt;/em&gt;&lt;/a&gt;. There is additional detailed information about &lt;code&gt;docker run&lt;/code&gt; in the &lt;a href=&quot;../../run/index&quot;&gt;Docker run reference&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;docker run&lt;/code&gt; コマンドはと組み合わせて使用することができます &lt;code&gt;docker commit&lt;/code&gt; する&lt;a href=&quot;../commit/index&quot;&gt;&lt;em&gt;コンテナが実行するコマンドを変更します&lt;/em&gt;&lt;/a&gt;。&lt;a href=&quot;../../run/index&quot;&gt;Docker runリファレンスに&lt;/a&gt;は、 &lt;code&gt;docker run&lt;/code&gt; に関する追加の詳細情報があります。</target>
        </trans-unit>
        <trans-unit id="4cbc062ae7a3f96974d3b09cc48a4d036bab9de4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker run&lt;/code&gt; command first &lt;code&gt;creates&lt;/code&gt; a writeable container layer over the specified image, and then &lt;code&gt;starts&lt;/code&gt; it using the specified command. That is, &lt;code&gt;docker run&lt;/code&gt; is equivalent to the API &lt;code&gt;/containers/create&lt;/code&gt; then &lt;code&gt;/containers/(id)/start&lt;/code&gt;. A stopped container can be restarted with all its previous changes intact using &lt;code&gt;docker start&lt;/code&gt;. See &lt;code&gt;docker ps -a&lt;/code&gt; to view a list of all containers.</source>
          <target state="translated">&lt;code&gt;docker run&lt;/code&gt; コマンドは、最初の &lt;code&gt;creates&lt;/code&gt; 指定された画像上の書き込み可能なコンテナ層を、次いで &lt;code&gt;starts&lt;/code&gt; 指定されたコマンドを使用して。つまり、 &lt;code&gt;docker run&lt;/code&gt; はAPI &lt;code&gt;/containers/create&lt;/code&gt; と同等で、次に &lt;code&gt;/containers/(id)/start&lt;/code&gt; と同等です。 &lt;code&gt;docker start&lt;/code&gt; を使用すると、停止したコンテナを以前のすべての変更をそのままにして再起動できます。すべてのコンテナのリストを表示するには、 &lt;code&gt;docker ps -a&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="a8db5978a7d7f7646bc12237ae6823cb2607d57b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker run&lt;/code&gt; command initializes the newly created volume with any data that exists at the specified location within the base image. For example, consider the following Dockerfile snippet:</source>
          <target state="translated">&lt;code&gt;docker run&lt;/code&gt; コマンドは、ベース画像内の指定された場所に存在する任意のデータを新たに作成されたボリュームを初期化します。たとえば、次のDockerfileスニペットを考えてみます。</target>
        </trans-unit>
        <trans-unit id="08f6f844a66eaa6760e5fe6294cac62a9f838920" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker run&lt;/code&gt; command must specify an &lt;a href=&quot;https://docs.docker.com/engine/reference/glossary/#image&quot;&gt;&lt;em&gt;IMAGE&lt;/em&gt;&lt;/a&gt; to derive the container from. An image developer can define image defaults related to:</source>
          <target state="translated">&lt;code&gt;docker run&lt;/code&gt; コマンドを指定しなければなりません&lt;a href=&quot;https://docs.docker.com/engine/reference/glossary/#image&quot;&gt;&lt;em&gt;IMAGEを&lt;/em&gt;&lt;/a&gt;からコンテナを導出します。画像開発者は、以下に関連する画像のデフォルトを定義できます。</target>
        </trans-unit>
        <trans-unit id="e7e7fcd62d448b7d3efd101f9754749e96cc06f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker search --automated&lt;/code&gt; and &lt;code&gt;docker search --stars&lt;/code&gt; options are deprecated. Use &lt;code&gt;docker search --filter=is-automated=...&lt;/code&gt; and &lt;code&gt;docker search --filter=stars=...&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;docker search --automated&lt;/code&gt; と &lt;code&gt;docker search --stars&lt;/code&gt; オプションは推奨されません。使用 &lt;code&gt;docker search --filter=is-automated=...&lt;/code&gt; と &lt;code&gt;docker search --filter=stars=...&lt;/code&gt; 代わりに。</target>
        </trans-unit>
        <trans-unit id="4aabab092cfe3cb42af64ee2c599a695b974e3cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker service create&lt;/code&gt; command creates the service.</source>
          <target state="translated">&lt;code&gt;docker service create&lt;/code&gt; コマンドは、サービスを作成します。</target>
        </trans-unit>
        <trans-unit id="5cff7ed0601c6010af07e5b704b1ef7693421a0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker service logs --details&lt;/code&gt; command will add on extra attributes, such as environment variables and labels, provided to &lt;code&gt;--log-opt&lt;/code&gt; when creating the service.</source>
          <target state="translated">&lt;code&gt;docker service logs --details&lt;/code&gt; コマンドは、このようなに提供する環境変数やラベル、などの追加属性に追加されます &lt;code&gt;--log-opt&lt;/code&gt; サービスを作成するとき。</target>
        </trans-unit>
        <trans-unit id="3b1a61f7542a854c2c468b381383555fd4a0e0a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker service logs --follow&lt;/code&gt; command will continue streaming the new output from the service&amp;rsquo;s &lt;code&gt;STDOUT&lt;/code&gt; and &lt;code&gt;STDERR&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;docker service logs --follow&lt;/code&gt; コマンドは、サービスのより新しい出力ストリーミング続ける &lt;code&gt;STDOUT&lt;/code&gt; と &lt;code&gt;STDERR&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="ec273344485322eeae5f9cae2c1a61b08d484ffb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker service logs --timestamps&lt;/code&gt; command will add an &lt;a href=&quot;https://golang.org/pkg/time/#pkg-constants&quot;&gt;RFC3339Nano timestamp&lt;/a&gt; , for example &lt;code&gt;2014-09-16T06:17:46.000000000Z&lt;/code&gt;, to each log entry. To ensure that the timestamps are aligned the nano-second part of the timestamp will be padded with zero when necessary.</source>
          <target state="translated">&lt;code&gt;docker service logs --timestamps&lt;/code&gt; コマンドが追加されます&lt;a href=&quot;https://golang.org/pkg/time/#pkg-constants&quot;&gt;RFC3339Nanoタイムスタンプを&lt;/a&gt;、たとえば、 &lt;code&gt;2014-09-16T06:17:46.000000000Z&lt;/code&gt; 、各ログエントリに。タイムスタンプを確実に整列させるために、タイムスタンプのナノ秒部分には、必要に応じてゼロが埋め込まれます。</target>
        </trans-unit>
        <trans-unit id="10d50fd68ded8731e1e0d64ba1ecf10befcfd427" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker service logs&lt;/code&gt; command batch-retrieves logs present at the time of execution.</source>
          <target state="translated">&lt;code&gt;docker service logs&lt;/code&gt; 実行時にバッチを検索ログ存在を命じます。</target>
        </trans-unit>
        <trans-unit id="640c1ffd784e8f72b9a5490dec23bcb47dfb66cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker service logs&lt;/code&gt; command can be used with either the name or ID of a service, or with the ID of a task. If a service is passed, it will display logs for all of the containers in that service. If a task is passed, it will only display logs from that particular task.</source>
          <target state="translated">&lt;code&gt;docker service logs&lt;/code&gt; コマンドは、サービスの名前またはIDのいずれかで、またはタスクのIDを使用することができます。サービスが渡されると、そのサービスのすべてのコンテナのログが表示されます。タスクが渡されると、その特定のタスクのログのみが表示されます。</target>
        </trans-unit>
        <trans-unit id="3d6799e8fd809602d47bbaef1fed0086a066b9cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker service scale&lt;/code&gt; command allows you to set the desired number of tasks for multiple services at once. The following example scales both the backend and frontend services:</source>
          <target state="translated">&lt;code&gt;docker service scale&lt;/code&gt; コマンドを使用すると、一度に複数のサービスのためのタスクの希望数を設定することができます。次の例では、バックエンドサービスとフロントエンドサービスの両方をスケーリングしています。</target>
        </trans-unit>
        <trans-unit id="35f8643610a500188dc8fdf3f7c0514e81a3046b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker stack&lt;/code&gt; command supports defining configs in a Compose file. However, the &lt;code&gt;configs&lt;/code&gt; key is not supported for &lt;code&gt;docker compose&lt;/code&gt;. See &lt;a href=&quot;../../../compose/compose-file/index#configs&quot;&gt;the Compose file reference&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;docker stack&lt;/code&gt; 作曲ファイルにコンフィグを定義するコマンドがサポートします。ただし、 &lt;code&gt;docker compose&lt;/code&gt; では &lt;code&gt;configs&lt;/code&gt; キーはサポートされていません。詳細について&lt;a href=&quot;../../../compose/compose-file/index#configs&quot;&gt;は、Composeファイルリファレンス&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="e37aaf9ed0cf3abb97c6ae7c0ac113e4a6d55b78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker stats&lt;/code&gt; command returns a live data stream for running containers. To limit data to one or more specific containers, specify a list of container names or ids separated by a space. You can specify a stopped container but stopped containers do not return any data.</source>
          <target state="translated">&lt;code&gt;docker stats&lt;/code&gt; コマンドは、コンテナを実行するためのライブデータストリームを返します。データを1つ以上の特定のコンテナーに制限するには、スペースで区切られたコンテナー名またはIDのリストを指定します。停止したコンテナを指定できますが、停止したコンテナはデータを返しません。</target>
        </trans-unit>
        <trans-unit id="ffa34f440b12b822742a35ad1b0ae9e02c01aede" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker swarm join&lt;/code&gt; command does the following:</source>
          <target state="translated">&lt;code&gt;docker swarm join&lt;/code&gt; コマンドは次の処理を行います。</target>
        </trans-unit>
        <trans-unit id="3824f90f3968e4e8230115835228e6aebae8ad0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker system df&lt;/code&gt; command displays information regarding the amount of disk space used by the docker daemon.</source>
          <target state="translated">&lt;code&gt;docker system df&lt;/code&gt; ドッカーデーモンによって使用されるディスク・スペースの量に関する情報を表示します。</target>
        </trans-unit>
        <trans-unit id="db1650195cef112b49d3648c9d83e1ec42925b18" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker unpause&lt;/code&gt; command un-suspends all processes in the specified containers. On Linux, it does this using the cgroups freezer.</source>
          <target state="translated">&lt;code&gt;docker unpause&lt;/code&gt; コマンドは、指定されたコンテナ内のすべてのプロセスを解除し、一時停止します。Linuxでは、cgroups冷凍庫を使用してこれを行います。</target>
        </trans-unit>
        <trans-unit id="e36a30f337ce860b63b6680f160a9b4d5546b044" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker update&lt;/code&gt; command dynamically updates container configuration. You can use this command to prevent containers from consuming too many resources from their Docker host. With a single command, you can place limits on a single container or on many. To specify more than one container, provide space-separated list of container names or IDs.</source>
          <target state="translated">&lt;code&gt;docker update&lt;/code&gt; コマンドは、動的にコンテナ設定を更新します。このコマンドを使用して、コンテナーがDockerホストから大量のリソースを消費するのを防ぐことができます。1つのコマンドで、1つまたは複数のコンテナに制限を設定できます。複数のコンテナーを指定するには、コンテナー名またはIDのスペース区切りのリストを指定します。</target>
        </trans-unit>
        <trans-unit id="19196d6f9e4c444a904f2de757b7f6396f216e73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker-compose run&lt;/code&gt; command allows you to run one-off commands for your services. For example, to see what environment variables are available to the &lt;code&gt;web&lt;/code&gt; service:</source>
          <target state="translated">&lt;code&gt;docker-compose run&lt;/code&gt; コマンドは、あなたのサービスのための一回限りのコマンドを実行することができます。たとえば、 &lt;code&gt;web&lt;/code&gt; サービスで使用できる環境変数を確認するには：</target>
        </trans-unit>
        <trans-unit id="a96f0c05b1b67f88be01dc43a967085da416ae02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker-compose run&lt;/code&gt; command is for running &amp;ldquo;one-off&amp;rdquo; or &amp;ldquo;adhoc&amp;rdquo; tasks. It requires the service name you want to run and only starts containers for services that the running service depends on. Use &lt;code&gt;run&lt;/code&gt; to run tests or perform an administrative task such as removing or adding data to a data volume container. The &lt;code&gt;run&lt;/code&gt; command acts like &lt;code&gt;docker run -ti&lt;/code&gt; in that it opens an interactive terminal to the container and returns an exit status matching the exit status of the process in the container.</source>
          <target state="translated">&lt;code&gt;docker-compose run&lt;/code&gt; コマンドは、「一回限り」または「アドホック」タスクを実行するためのものです。実行するサービス名が必要であり、実行中のサービスが依存するサービスのコンテナーのみを開始します。 &lt;code&gt;run&lt;/code&gt; を使用して、テストを実行するか、データボリュームコンテナーへのデータの削除や追加などの管理タスクを実行します。 &lt;code&gt;run&lt;/code&gt; コマンドは次のように作用する &lt;code&gt;docker run -ti&lt;/code&gt; それが容器に対話型端末を開き、容器の処理の終了ステータスを一致終了ステータスを返すことができます。</target>
        </trans-unit>
        <trans-unit id="d7ddb5e3e9d59bef26d3067922a3583ee29c8518" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker-compose start&lt;/code&gt; command is useful only to restart containers that were previously created, but were stopped. It never creates new containers.</source>
          <target state="translated">&lt;code&gt;docker-compose start&lt;/code&gt; コマンドは、以前に作成されたが、停止し、再起動コンテナに便利です。新しいコンテナを作成することはありません。</target>
        </trans-unit>
        <trans-unit id="ae035654bee087f0eea5350f20215eb42ce4f2f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker-compose up&lt;/code&gt; command aggregates the output of each container (essentially running &lt;code&gt;docker-compose logs -f&lt;/code&gt;). When the command exits, all containers are stopped. Running &lt;code&gt;docker-compose up -d&lt;/code&gt; starts the containers in the background and leaves them running.</source>
          <target state="translated">&lt;code&gt;docker-compose up&lt;/code&gt; コマンド凝集各容器の出力は、（本質的に実行 &lt;code&gt;docker-compose logs -f&lt;/code&gt; ）。コマンドが終了すると、すべてのコンテナーが停止します。 &lt;code&gt;docker-compose up -d&lt;/code&gt; を実行すると、コンテナーがバックグラウンドで起動され、実行されたままになります。</target>
        </trans-unit>
        <trans-unit id="43d3c64fa422d8a0abeec4a7dfcfccf738e571a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker-compose.yml&lt;/code&gt; file describes the services that make your app. In this example those services are a web server and database. The compose file also describes which Docker images these services use, how they link together, any volumes they might need mounted inside the containers. Finally, the &lt;code&gt;docker-compose.yml&lt;/code&gt; file describes which ports these services expose. See the &lt;a href=&quot;../compose-file/index&quot;&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt; reference&lt;/a&gt; for more information on how this file works.</source>
          <target state="translated">&lt;code&gt;docker-compose.yml&lt;/code&gt; ファイルには、あなたのアプリを作るサービスについて説明します。この例では、これらのサービスはWebサーバーとデータベースです。構成ファイルには、これらのサービスが使用するDockerイメージ、それらのリンク方法、コンテナー内にマウントする必要のあるボリュームも記述されています。最後に、 &lt;code&gt;docker-compose.yml&lt;/code&gt; ファイルは、これらのサービスが公開するポートを記述します。このファイルの機能の詳細については、&lt;a href=&quot;../compose-file/index&quot;&gt; &lt;code&gt;docker-compose.yml&lt;/code&gt; リファレンス&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="42e300efff75e3110759be633a66d0569b3f5b46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker-compose.yml&lt;/code&gt; file might specify a &lt;code&gt;webapp&lt;/code&gt; service.</source>
          <target state="translated">&lt;code&gt;docker-compose.yml&lt;/code&gt; ファイルが指定した可能性がある &lt;code&gt;webapp&lt;/code&gt; サービスを。</target>
        </trans-unit>
        <trans-unit id="ce23ece18ea650efd0145a4a258ce3fc78e02e6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker-default&lt;/code&gt; profile for containers lives in &lt;a href=&quot;https://github.com/moby/moby/tree/master/profiles/apparmor&quot;&gt;profiles/apparmor&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;docker-default&lt;/code&gt; でコンテナの生活のためのプロファイル&lt;a href=&quot;https://github.com/moby/moby/tree/master/profiles/apparmor&quot;&gt;のプロファイル/ AppArmorの&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e295c8599d28f52be79d6f37991897d2f4101fc7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker-default&lt;/code&gt; profile is the default for running containers. It is moderately protective while providing wide application compatibility. The profile is generated from the following &lt;a href=&quot;https://github.com/moby/moby/blob/master/profiles/apparmor/template.go&quot;&gt;template&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;docker-default&lt;/code&gt; プロファイルは、コンテナを実行するためのデフォルトです。幅広いアプリケーション互換性を提供しながら、適度に保護されています。プロファイルは次の&lt;a href=&quot;https://github.com/moby/moby/blob/master/profiles/apparmor/template.go&quot;&gt;テンプレート&lt;/a&gt;から生成されます。</target>
        </trans-unit>
        <trans-unit id="53293c102800f99d9a3f56ca9a39e8ff9fd8b31f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker-machine create&lt;/code&gt; command has some flags which apply to all drivers. These largely control aspects of Machine&amp;rsquo;s provisioning process (including the creation of Docker Swarm containers) that the user may wish to customize.</source>
          <target state="translated">&lt;code&gt;docker-machine create&lt;/code&gt; のコマンドは、すべてのドライバに適用されるいくつかのフラグを持っています。これらは主に、ユーザーがカスタマイズしたいマシンのプロビジョニングプロセス（Docker Swarmコンテナーの作成を含む）の側面を制御します。</target>
        </trans-unit>
        <trans-unit id="e849ce54b451a6cbfd8103fd5b47b57985f8374f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker-machine create&lt;/code&gt; command typically requires that you specify, at a minimum:</source>
          <target state="translated">&lt;code&gt;docker-machine create&lt;/code&gt; コマンドを、通常、あなたが最低で、指定する必要があります：</target>
        </trans-unit>
        <trans-unit id="2db3618b71fffeeb2d53ba032a660f3e49b7592b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;docker-machine&lt;/code&gt; subcommands are slightly different than the &lt;code&gt;boot2docker&lt;/code&gt; subcommands. The table below lists the equivalent &lt;code&gt;docker-machine&lt;/code&gt; subcommand and what it does:</source>
          <target state="translated">&lt;code&gt;docker-machine&lt;/code&gt; サブコマンドは、よりわずかに異なっている &lt;code&gt;boot2docker&lt;/code&gt; のサブコマンド。以下の表は、同等の &lt;code&gt;docker-machine&lt;/code&gt; サブコマンドとその機能を示しています。</target>
        </trans-unit>
        <trans-unit id="a1db1683487e14949bbb78f38e959277a8f5ce96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dockerd&lt;/code&gt; options that support the &lt;code&gt;overlay&lt;/code&gt; network are:</source>
          <target state="translated">&lt;code&gt;dockerd&lt;/code&gt; のサポートオプション &lt;code&gt;overlay&lt;/code&gt; ネットワークは、次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7761e7440db05872e7e8ff271cc30ebcfb8af0e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;driver&lt;/code&gt; filter matches networks based on their driver.</source>
          <target state="translated">&lt;code&gt;driver&lt;/code&gt; フィルタは、そのドライバーに基づいたネットワークと一致します。</target>
        </trans-unit>
        <trans-unit id="94879eb9ab387b61bf11d2e1021a2478cd5cb8f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;driver&lt;/code&gt; filter matches volumes based on their driver.</source>
          <target state="translated">&lt;code&gt;driver&lt;/code&gt; フィルタは、そのドライバーに基づいてボリュームを一致します。</target>
        </trans-unit>
        <trans-unit id="65484cf66101bd80c3b61d4be6a3893152113f3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;driver&lt;/code&gt; name specifies a logging driver for the service&amp;rsquo;s containers, as with the &lt;code&gt;--log-driver&lt;/code&gt; option for docker run (&lt;a href=&quot;https://docs.docker.com/config/containers/logging&quot;&gt;documented here&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;driver&lt;/code&gt; 名前はと同じように、サービスのコンテナのロギング・ドライバを指定する &lt;code&gt;--log-driver&lt;/code&gt; （ドッキングウィンドウの実行のためのオプション&lt;a href=&quot;https://docs.docker.com/config/containers/logging&quot;&gt;ここで記述します&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5900845392b6117d52a5cf8872beb287865bd83b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;enabled&lt;/code&gt; filter matches on plugins enabled or disabled.</source>
          <target state="translated">&lt;code&gt;enabled&lt;/code&gt; プラグインのフィルタ一致が有効または無効。</target>
        </trans-unit>
        <trans-unit id="c2307cc28eea42e0d4cfd9d9269b5a168a00b09f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;erase&lt;/code&gt; command can write error messages to &lt;code&gt;STDOUT&lt;/code&gt; that the docker engine will show if there was an issue.</source>
          <target state="translated">&lt;code&gt;erase&lt;/code&gt; コマンドは、にエラーメッセージを書き込むことができます &lt;code&gt;STDOUT&lt;/code&gt; 問題があった場合ドッカエンジンが表示されること。</target>
        </trans-unit>
        <trans-unit id="bea1b0179ece69facab7b56689aa14845a2f6b29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;erase&lt;/code&gt; command takes a string payload from &lt;code&gt;STDIN&lt;/code&gt;. That payload carries the server address that the docker engine wants to remove credentials for. This is an example of that payload: &lt;code&gt;https://index.docker.io/v1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erase&lt;/code&gt; コマンドは、文字列からペイロード取り &lt;code&gt;STDIN&lt;/code&gt; を。そのペイロードは、Dockerエンジンが資格情報を削除するサーバーアドレスを伝達します。これはそのペイロードの例です： &lt;code&gt;https://index.docker.io/v1&lt;/code&gt; : //index.docker.io/v1。</target>
        </trans-unit>
        <trans-unit id="3254cd82ba3134bf8e742dc3c8b67f6c4d144c42" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;escape&lt;/code&gt; directive sets the character used to escape characters in a &lt;code&gt;Dockerfile&lt;/code&gt;. If not specified, the default escape character is &lt;code&gt;\&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;escape&lt;/code&gt; ディレクティブは、内の文字エスケープするために使用される文字セット &lt;code&gt;Dockerfile&lt;/code&gt; を。指定しない場合、デフォルトのエスケープ文字は &lt;code&gt;\&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4cfc30d9ac969e04f4a3ad1ed08dbd7718761a34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exited&lt;/code&gt; filter matches containers by exist status code. For example, to filter for containers that have exited successfully:</source>
          <target state="translated">&lt;code&gt;exited&lt;/code&gt; フィルタが存在する状態コードによってコンテナと一致します。たとえば、正常に終了したコンテナをフィルタリングするには：</target>
        </trans-unit>
        <trans-unit id="7f10d4cc68da79397364680c26647bc7ff0e9fdc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filter&lt;/code&gt; param to filter the list of image by reference (name or name:tag) is now implemented as a regular filter, named &lt;code&gt;reference&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; 基準（名前または名前：タグ）によって画像のリストをフィルタリングするPARAMについて命名規則的フィルタとして実装されている &lt;code&gt;reference&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9bf88f2b1a3cee4d1df04d1341ef1e7a515a38b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; command takes a string payload from the standard input. That payload carries the server address that the docker engine needs credentials for. This is an example of that payload: &lt;code&gt;https://index.docker.io/v1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; コマンドは、標準入力から文字列ペイロードを取ります。そのペイロードは、Dockerエンジンが資格情報を必要とするサーバーアドレスを伝達します。これはそのペイロードの例です： &lt;code&gt;https://index.docker.io/v1&lt;/code&gt; : //index.docker.io/v1。</target>
        </trans-unit>
        <trans-unit id="9f9a5dac63313f2426c581b6b16d66b50692278c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; command writes a JSON payload to &lt;code&gt;STDOUT&lt;/code&gt;. Docker reads the user name and password from this payload:</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; コマンドはにJSONペイロードを書き込み &lt;code&gt;STDOUT&lt;/code&gt; 。Dockerはこのペイロードからユーザー名とパスワードを読み取ります。</target>
        </trans-unit>
        <trans-unit id="2eea40067a6206a0916c6632051f6c874f33f8f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id&lt;/code&gt; filter matches a task&amp;rsquo;s id.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; フィルタは、タスクのIDと一致します。</target>
        </trans-unit>
        <trans-unit id="874d9c20a73081ecc0605f94bd826accf1ed089f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id&lt;/code&gt; filter matches all or part of a node&amp;rsquo;s id.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; フィルタは、ノードのIDの全部または一部と一致しました。</target>
        </trans-unit>
        <trans-unit id="062f71d75d6eee0e75a08eb04d77e976398622ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id&lt;/code&gt; filter matches all or part of a service&amp;rsquo;s id.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; フィルタは、サービスのIDの全部または一部と一致しました。</target>
        </trans-unit>
        <trans-unit id="9e7e6e53805c2ffc518e3b6b0f7c3661959a337d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id&lt;/code&gt; filter matches all or prefix of a secret&amp;rsquo;s id.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; フィルタは、秘密のidのすべてまたはプレフィックスに一致します。</target>
        </trans-unit>
        <trans-unit id="c040b7fd003539442feca73620bd35debb9865f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id&lt;/code&gt; filter matches on all or a prefix of a task&amp;rsquo;s ID.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; フィルタは、すべてまたはタスクのIDのプレフィックスに一致します。</target>
        </trans-unit>
        <trans-unit id="33be488005446a7b9d19d4576733f3cd58f14e22" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id&lt;/code&gt; filter matches on all or part of a network&amp;rsquo;s ID.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; フィルタは、ネットワークのIDの全部または一部に一致します。</target>
        </trans-unit>
        <trans-unit id="1a9cc726ad58a1f48a622098d6bd09b650006d37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;key=value&lt;/code&gt; must be unique to avoid overwriting the label value. If you specify labels with identical keys but different values, each subsequent value overwrites the previous. Docker uses the last &lt;code&gt;key=value&lt;/code&gt; you supply.</source>
          <target state="translated">&lt;code&gt;key=value&lt;/code&gt; ラベル値を上書きしないように一意である必要があります。同じキーで値が異なるラベルを指定すると、後続の各値によって前の値が上書きされます。Dockerは最後に指定した &lt;code&gt;key=value&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="5654d9f7d98e717322ea30f463a002b491eb3daa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;label&lt;/code&gt; filter accepts two formats. One is the &lt;code&gt;label=...&lt;/code&gt; (&lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt; or &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;), which removes containers with the specified labels. The other format is the &lt;code&gt;label!=...&lt;/code&gt; (&lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt; or &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;), which removes containers without the specified labels.</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; フィルタの2つの形式を受け入れます。1つは &lt;code&gt;label=...&lt;/code&gt; （ &lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt; または &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ）で、指定されたラベルのコンテナーを削除します。もう1つの形式は &lt;code&gt;label!=...&lt;/code&gt; （ &lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt; または &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ）で、指定されたラベルのないコンテナーを削除します。</target>
        </trans-unit>
        <trans-unit id="be97cd3616a16824993de31a828d5df1d9b52148" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;label&lt;/code&gt; filter accepts two formats. One is the &lt;code&gt;label=...&lt;/code&gt; (&lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt; or &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;), which removes containers, images, networks, and volumes with the specified labels. The other format is the &lt;code&gt;label!=...&lt;/code&gt; (&lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt; or &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;), which removes containers, images, networks, and volumes without the specified labels.</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; フィルタの2つの形式を受け入れます。 1つは &lt;code&gt;label=...&lt;/code&gt; （ &lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt; または &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ）で、指定したラベルのコンテナー、イメージ、ネットワーク、ボリュームを削除します。もう1つの形式は &lt;code&gt;label!=...&lt;/code&gt; （ &lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt; または &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ）で、指定したラベルのないコンテナー、イメージ、ネットワーク、およびボリュームを削除します。</target>
        </trans-unit>
        <trans-unit id="b8a2df36fd4d938bef98a3473bfa58e3dccc1bce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;label&lt;/code&gt; filter accepts two formats. One is the &lt;code&gt;label=...&lt;/code&gt; (&lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt; or &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;), which removes images with the specified labels. The other format is the &lt;code&gt;label!=...&lt;/code&gt; (&lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt; or &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;), which removes images without the specified labels.</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; フィルタの2つの形式を受け入れます。 1つは &lt;code&gt;label=...&lt;/code&gt; （ &lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt; または &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ）で、指定されたラベルの画像を削除します。もう1つの形式は &lt;code&gt;label!=...&lt;/code&gt; （ &lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt; または &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ）で、指定されたラベルのない画像を削除します。</target>
        </trans-unit>
        <trans-unit id="52ff0a6b1f787c9e75fb01815b0e6b266ae2a1d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;label&lt;/code&gt; filter accepts two formats. One is the &lt;code&gt;label=...&lt;/code&gt; (&lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt; or &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;), which removes networks with the specified labels. The other format is the &lt;code&gt;label!=...&lt;/code&gt; (&lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt; or &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;), which removes networks without the specified labels.</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; フィルタの2つの形式を受け入れます。1つは &lt;code&gt;label=...&lt;/code&gt; （ &lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt; または &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ）で、指定したラベルのネットワークを削除します。もう1つの形式は &lt;code&gt;label!=...&lt;/code&gt; （ &lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt; または &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ）で、指定されたラベルのないネットワークを削除します。</target>
        </trans-unit>
        <trans-unit id="018de019755b87e20d5872730ae9dd136b302390" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;label&lt;/code&gt; filter matches containers based on the presence of a &lt;code&gt;label&lt;/code&gt; alone or a &lt;code&gt;label&lt;/code&gt; and a value.</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; フィルタは、の存在に基づいてコンテナ一致する &lt;code&gt;label&lt;/code&gt; 単独または &lt;code&gt;label&lt;/code&gt; と値を。</target>
        </trans-unit>
        <trans-unit id="4d8af22aa6e6d75efc58ea064321d18436b8a10d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;label&lt;/code&gt; filter matches images based on the presence of a &lt;code&gt;label&lt;/code&gt; alone or a &lt;code&gt;label&lt;/code&gt; and a value.</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; フィルタの有無に基づいて画像を一致 &lt;code&gt;label&lt;/code&gt; 単独で、または &lt;code&gt;label&lt;/code&gt; と値。</target>
        </trans-unit>
        <trans-unit id="98e6df95904d703aaec7b0207a80452c247789a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;label&lt;/code&gt; filter matches networks based on the presence of a &lt;code&gt;label&lt;/code&gt; alone or a &lt;code&gt;label&lt;/code&gt; and a value.</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; フィルタは、の存在に基づいてネットワークに一致する &lt;code&gt;label&lt;/code&gt; 単独で、または &lt;code&gt;label&lt;/code&gt; と値。</target>
        </trans-unit>
        <trans-unit id="5e15c96bb92954198ca742ec3d8e8b0984c3f9cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;label&lt;/code&gt; filter matches nodes based on engine labels and on the presence of a &lt;code&gt;label&lt;/code&gt; alone or a &lt;code&gt;label&lt;/code&gt; and a value. Node labels are currently not used for filtering.</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; エンジンラベル上の存在に基づいてフィルタマッチノード &lt;code&gt;label&lt;/code&gt; 単独または &lt;code&gt;label&lt;/code&gt; と値。ノードラベルは現在、フィルタリングに使用されていません。</target>
        </trans-unit>
        <trans-unit id="d48e63cfaa1dbb7dceb781c12aed418e6036a7cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;label&lt;/code&gt; filter matches secrets based on the presence of a &lt;code&gt;label&lt;/code&gt; alone or a &lt;code&gt;label&lt;/code&gt; and a value.</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; フィルタは、の存在に基づいて秘密一致する &lt;code&gt;label&lt;/code&gt; 単独または &lt;code&gt;label&lt;/code&gt; と値を。</target>
        </trans-unit>
        <trans-unit id="4d4f1362ae0c77d72fd3decf3629591112e34b0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;label&lt;/code&gt; filter matches services based on the presence of a &lt;code&gt;label&lt;/code&gt; alone or a &lt;code&gt;label&lt;/code&gt; and a value.</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; フィルタは、の存在に基づいてサービスと一致する &lt;code&gt;label&lt;/code&gt; 単独または &lt;code&gt;label&lt;/code&gt; と値を。</target>
        </trans-unit>
        <trans-unit id="7d6a1563d22c594b3e7762479f46564bf33ef840" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;label&lt;/code&gt; filter matches tasks based on the presence of a &lt;code&gt;label&lt;/code&gt; alone or a &lt;code&gt;label&lt;/code&gt; and a value.</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; フィルタは、の存在に基づいてタスクと一致する &lt;code&gt;label&lt;/code&gt; 単独または &lt;code&gt;label&lt;/code&gt; と値を。</target>
        </trans-unit>
        <trans-unit id="af9c4f8bbdf1d60d98233e85dfbc13dc94b96e98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;label&lt;/code&gt; filter matches volumes based on the presence of a &lt;code&gt;label&lt;/code&gt; alone or a &lt;code&gt;label&lt;/code&gt; and a value.</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; フィルタは、の存在に基づいて、ボリュームと一致する &lt;code&gt;label&lt;/code&gt; 単独または &lt;code&gt;label&lt;/code&gt; と値を。</target>
        </trans-unit>
        <trans-unit id="0c2988bf145e8ccc73b38070bfaf3b48226f427f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ls&lt;/code&gt; command tries to reach each host in parallel. If a given host does not answer in less than 10 seconds, the &lt;code&gt;ls&lt;/code&gt; command states that this host is in &lt;code&gt;Timeout&lt;/code&gt; state. In some circumstances (poor connection, high load, or while troubleshooting), you may want to increase or decrease this value. You can use the -t flag for this purpose with a numerical value in seconds.</source>
          <target state="translated">&lt;code&gt;ls&lt;/code&gt; 並行して、各ホストに到達しようとするコマンド。特定のホストが10秒未満で応答しない場合、 &lt;code&gt;ls&lt;/code&gt; コマンドはこのホストが &lt;code&gt;Timeout&lt;/code&gt; 状態であることを示します。状況によっては（接続不良、高負荷、またはトラブルシューティング中）、この値を増減する必要がある場合があります。この目的で-tフラグを使用して、秒単位の数値を指定できます。</target>
        </trans-unit>
        <trans-unit id="5703b34d2ea18e80b932f011cb44b023bff8d66c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;membership&lt;/code&gt; filter matches nodes based on the presence of a &lt;code&gt;membership&lt;/code&gt; and a value &lt;code&gt;accepted&lt;/code&gt; or &lt;code&gt;pending&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;membership&lt;/code&gt; の存在に基づいてフィルタマッチノード &lt;code&gt;membership&lt;/code&gt; 値 &lt;code&gt;accepted&lt;/code&gt; 又は &lt;code&gt;pending&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8b1c08c13336a840ca4426784eba1b9975c6865" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; filter matches on the mode (either &lt;code&gt;replicated&lt;/code&gt; or &lt;code&gt;global&lt;/code&gt;) of a service.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; フィルタは、モード（いずれか一方に一致 &lt;code&gt;replicated&lt;/code&gt; または &lt;code&gt;global&lt;/code&gt; サービス）。</target>
        </trans-unit>
        <trans-unit id="f89ad7e1e240d286b92475de1880259e4179996e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;my-label&lt;/code&gt; key doesn&amp;rsquo;t specify a value so the label defaults to an empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;). To add multiple labels, repeat the label flag (&lt;code&gt;-l&lt;/code&gt; or &lt;code&gt;--label&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;my-label&lt;/code&gt; キーは（空の文字列にラベルのデフォルトので、値を指定していません &lt;code&gt;&quot;&quot;&lt;/code&gt; ）。複数のラベルを追加するには、ラベルフラグを繰り返します（ &lt;code&gt;-l&lt;/code&gt; または &lt;code&gt;--label&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="082614082d232a3fdd600eb393e84c2b7810814a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mynet&lt;/code&gt; network is now owned by &lt;code&gt;weave&lt;/code&gt;, so subsequent commands referring to that network will be sent to the plugin,</source>
          <target state="translated">&lt;code&gt;mynet&lt;/code&gt; ネットワークは、現在で所有されて &lt;code&gt;weave&lt;/code&gt; 、そのネットワークを参照する後続のコマンドは、プラグインに送信されますので、</target>
        </trans-unit>
        <trans-unit id="4116f19330146743a5b9ffe7f885dbf991a4c292" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; filter matches on all or part of a container&amp;rsquo;s name.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; フィルタは、コンテナの名前の全部または一部に一致します。</target>
        </trans-unit>
        <trans-unit id="bdf2c18aa87a750b7d502fbc1168479b6f550ff3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; filter matches on all or part of a network&amp;rsquo;s name.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; フィルタは、ネットワークの名前の全部または一部に一致します。</target>
        </trans-unit>
        <trans-unit id="13d14b84aa19afef87897aa55f10ed51ff7376a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; filter matches on all or part of a node hostname.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; フィルタは、ノードのホスト名のすべてまたは一部に一致します。</target>
        </trans-unit>
        <trans-unit id="3c06f079b7410ab5cfcbb6181eb803ec0ef01f81" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; filter matches on all or part of a service&amp;rsquo;s name.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; フィルタは、サービスの名前の全部または一部に一致します。</target>
        </trans-unit>
        <trans-unit id="40ee93534c85c37ac235cd07ceadd27279867de7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; filter matches on all or part of a task&amp;rsquo;s name.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; フィルタは、タスクの名前の全部または一部に一致します。</target>
        </trans-unit>
        <trans-unit id="7b0e1af36ee24c5616ec9fb952dc64e9cdf914ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; filter matches on all or part of a volume&amp;rsquo;s name.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; フィルタは、ボリュームの名前の全部または一部に一致します。</target>
        </trans-unit>
        <trans-unit id="65875118713d9d791bb0a46435277fd73f9d0631" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; filter matches on all or prefix of a secret&amp;rsquo;s name.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; フィルタは、秘密の名前の全部またはプレフィックスに一致します。</target>
        </trans-unit>
        <trans-unit id="48deeb28be69f5f57a0691024754fc4fcedb79e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; filter matches on task names.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; フィルタは、タスク名に一致します。</target>
        </trans-unit>
        <trans-unit id="702fb5469953d05950f731252ceb1e71cb5ced6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;native.cgroupdriver&lt;/code&gt; option specifies the management of the container&amp;rsquo;s cgroups. You can only specify &lt;code&gt;cgroupfs&lt;/code&gt; or &lt;code&gt;systemd&lt;/code&gt;. If you specify &lt;code&gt;systemd&lt;/code&gt; and it is not available, the system errors out. If you omit the &lt;code&gt;native.cgroupdriver&lt;/code&gt; option,&lt;code&gt;cgroupfs&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;native.cgroupdriver&lt;/code&gt; のオプションは、コンテナののcgroupの管理を指定します。 &lt;code&gt;cgroupfs&lt;/code&gt; または &lt;code&gt;systemd&lt;/code&gt; のみを指定できます。 &lt;code&gt;systemd&lt;/code&gt; を指定しても使用できない場合、システムはエラーになります。 &lt;code&gt;native.cgroupdriver&lt;/code&gt; オプションを省略すると、 &lt;code&gt;cgroupfs&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="e84716020b3bafa9802a7e4d62c5858b8b46e922" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;network&lt;/code&gt; filter shows only containers that are connected to a network with a given name or id.</source>
          <target state="translated">&lt;code&gt;network&lt;/code&gt; のみフィルタ示す所定の名前またはIDを用いてネットワークに接続されているコンテナ。</target>
        </trans-unit>
        <trans-unit id="b651cc06a639b090262a5f5c552b2399900192a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;node&lt;/code&gt; filter matches on a node name or a node ID.</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; フィルタは、ノード名またはノードIDに一致します。</target>
        </trans-unit>
        <trans-unit id="4f8e6ad6eb59b8cb6cf3c618793766797bc47785" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;notary list&lt;/code&gt; and &lt;code&gt;notary remove&lt;/code&gt; commands can also take the &lt;code&gt;--roles&lt;/code&gt; flag to specify roles to list or remove targets from. By default, this operates over the base &lt;code&gt;targets&lt;/code&gt; role.</source>
          <target state="translated">&lt;code&gt;notary list&lt;/code&gt; と &lt;code&gt;notary remove&lt;/code&gt; コマンドも取ることができます &lt;code&gt;--roles&lt;/code&gt; からリストまたは削除対象にロールを指定するフラグ。デフォルトでは、これはベース &lt;code&gt;targets&lt;/code&gt; 役割に対して機能します。</target>
        </trans-unit>
        <trans-unit id="b27f7d14334c92b16cec1e9a1b3aed69946a76d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;overlay2&lt;/code&gt; uses the same fast union filesystem but takes advantage of &lt;a href=&quot;https://lkml.org/lkml/2015/2/11/106&quot;&gt;additional features&lt;/a&gt; added in Linux kernel 4.0 to avoid excessive inode consumption. Call &lt;code&gt;dockerd -s overlay2&lt;/code&gt; to use it.</source>
          <target state="translated">&lt;code&gt;overlay2&lt;/code&gt; は、同じ高速の労働組合のファイルシステムを使用していますが、を活用して&lt;a href=&quot;https://lkml.org/lkml/2015/2/11/106&quot;&gt;、追加機能&lt;/a&gt;、過剰なiノードの消費を避けるためのLinuxカーネル4.0で追加します。 &lt;code&gt;dockerd -s overlay2&lt;/code&gt; を呼び出して使用します。</target>
        </trans-unit>
        <trans-unit id="f62b83b6c6304e6bd37693d3d4d2a3ba5d121dc4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;overlay&lt;/code&gt; driver creates a named network across multiple nodes in a &lt;a href=&quot;../../engine/swarm/index&quot;&gt;swarm&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;overlay&lt;/code&gt; ドライバは、内の複数のノード間で名前付きネットワーク作成&lt;a href=&quot;../../engine/swarm/index&quot;&gt;群れを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f1095b703bcc7591339e488256d38b8fabfd5f0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;overlay&lt;/code&gt; is a very fast union filesystem. It is now merged in the main Linux kernel as of &lt;a href=&quot;https://lkml.org/lkml/2014/10/26/137&quot;&gt;3.18.0&lt;/a&gt;. &lt;code&gt;overlay&lt;/code&gt; also supports page cache sharing, this means multiple containers accessing the same file can share a single page cache entry (or entries), it makes &lt;code&gt;overlay&lt;/code&gt; as efficient with memory as &lt;code&gt;aufs&lt;/code&gt; driver. Call &lt;code&gt;dockerd -s overlay&lt;/code&gt; to use it.</source>
          <target state="translated">&lt;code&gt;overlay&lt;/code&gt; 非常に高速な労働組合のファイルシステムです。&lt;a href=&quot;https://lkml.org/lkml/2014/10/26/137&quot;&gt;3.18.0以降&lt;/a&gt;、メインのLinuxカーネルに統合されました。 &lt;code&gt;overlay&lt;/code&gt; はページキャッシュ共有もサポートします。これは、同じファイルにアクセスする複数のコンテナーが単一のページキャッシュエントリー（または複数のエントリー）を共有できることを意味し、 &lt;code&gt;overlay&lt;/code&gt; を &lt;code&gt;aufs&lt;/code&gt; ドライバーと同じくらいメモリで効率的にします。 &lt;code&gt;dockerd -s overlay&lt;/code&gt; を呼び出して使用します。</target>
        </trans-unit>
        <trans-unit id="e8add9ee4df5f9e747f7dfaaa7ea17cfd452a7db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;overlay&lt;/code&gt; storage driver is deprecated in favor of the &lt;code&gt;overlay2&lt;/code&gt; storage driver, which has all the benefits of &lt;code&gt;overlay&lt;/code&gt;, without its limitations (excessive inode consumption). The legacy &lt;code&gt;overlay&lt;/code&gt; storage driver will be removed in a future release. Users of the &lt;code&gt;overlay&lt;/code&gt; storage driver should migrate to the &lt;code&gt;overlay2&lt;/code&gt; storage driver.</source>
          <target state="translated">&lt;code&gt;overlay&lt;/code&gt; ストレージドライバはの賛成で廃止されました &lt;code&gt;overlay2&lt;/code&gt; のすべての利点があるストレージドライバ、 &lt;code&gt;overlay&lt;/code&gt; その限界（過度のiノードの消費量）なし、。レガシー &lt;code&gt;overlay&lt;/code&gt; ストレージドライバは、将来のリリースで削除される予定です。 &lt;code&gt;overlay&lt;/code&gt; ストレージドライバーのユーザーは、 &lt;code&gt;overlay2&lt;/code&gt; ストレージドライバーに移行する必要があります。</target>
        </trans-unit>
        <trans-unit id="57d6cd43d9cf4064b15d5370549b191804dbe847" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;publish&lt;/code&gt; and &lt;code&gt;expose&lt;/code&gt; filters show only containers that have published or exposed port with a given port number, port range, and/or protocol. The default protocol is &lt;code&gt;tcp&lt;/code&gt; when not specified.</source>
          <target state="translated">&lt;code&gt;publish&lt;/code&gt; と &lt;code&gt;expose&lt;/code&gt; フィルタは、公開または指定したポート番号、ポート範囲、および/またはプロトコルとポートを暴露しているだけのコンテナを示しています。指定しない場合、デフォルトのプロトコルは &lt;code&gt;tcp&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="32212b2ccd1049c0834c60bdfd798e9765d7db57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;redis&lt;/code&gt; service uses a public &lt;a href=&quot;https://registry.hub.docker.com/_/redis/&quot;&gt;Redis&lt;/a&gt; image pulled from the Docker Hub registry.</source>
          <target state="translated">&lt;code&gt;redis&lt;/code&gt; サービスは、公開使用&lt;a href=&quot;https://registry.hub.docker.com/_/redis/&quot;&gt;のRedisの&lt;/a&gt;ドッカーハブレジストリから引き出された画像を。</target>
        </trans-unit>
        <trans-unit id="a10f28df2d9ece01d4995b17a29708fde3933b04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reference&lt;/code&gt; filter shows only images whose reference matches the specified pattern.</source>
          <target state="translated">&lt;code&gt;reference&lt;/code&gt; その参照指定されたパターンに一致するフィルタのみを示す画像。</target>
        </trans-unit>
        <trans-unit id="e28bcc91dc3b30ca61505750632dc3ed05692327" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remote_server&lt;/code&gt; specifies how to connect to a Notary server to download metadata updates and publish metadata changes.</source>
          <target state="translated">&lt;code&gt;remote_server&lt;/code&gt; 方法を指定するメタデータの更新プログラムをダウンロードして、メタデータの変更を公開するために公証サーバーに接続します。</target>
        </trans-unit>
        <trans-unit id="f95d30a98fcc537264adac1b069c3de5c624096e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;repository:shortid&lt;/code&gt; syntax for referencing images is very little used, collides with tag references, and can be confused with digest references.</source>
          <target state="translated">画像を参照するための &lt;code&gt;repository:shortid&lt;/code&gt; 構文はほとんど使用されておらず、タグ参照と衝突し、ダイジェスト参照と混同される可能性があります。</target>
        </trans-unit>
        <trans-unit id="946a27d27a594272d228a2f9ebd5d23d58f82f9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;role&lt;/code&gt; filter matches nodes based on the presence of a &lt;code&gt;role&lt;/code&gt; and a value &lt;code&gt;worker&lt;/code&gt; or &lt;code&gt;manager&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;role&lt;/code&gt; フィルタの存在に基づいてノード一致 &lt;code&gt;role&lt;/code&gt; と値 &lt;code&gt;worker&lt;/code&gt; または &lt;code&gt;manager&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19a30e315bc4c8b432b7da06b140919f686444f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;root_keys&lt;/code&gt; subdirectory within &lt;code&gt;private&lt;/code&gt; stores root private keys, while &lt;code&gt;tuf_keys&lt;/code&gt; stores targets, snapshots, and delegations private keys.</source>
          <target state="translated">&lt;code&gt;root_keys&lt;/code&gt; の内のサブディレクトリ &lt;code&gt;private&lt;/code&gt; しばらく店は、秘密鍵をルート &lt;code&gt;tuf_keys&lt;/code&gt; の店の目標、スナップショット、および代表団秘密鍵。</target>
        </trans-unit>
        <trans-unit id="6610e72ef34ecc0f23817bc0409ff6cf2dea2b7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rootfs&lt;/code&gt; directory represents the root filesystem of the plugin. In this example, it was created from a Dockerfile:</source>
          <target state="translated">&lt;code&gt;rootfs&lt;/code&gt; ののディレクトリには、プラグインのルートファイルシステムを表します。この例では、Dockerfileから作成されました。</target>
        </trans-unit>
        <trans-unit id="27e15a03c1fef8554bd0e6252de77d87b274d86d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scope&lt;/code&gt; filter matches networks based on their scope.</source>
          <target state="translated">&lt;code&gt;scope&lt;/code&gt; フィルタは、その範囲に基づいてネットワークに一致します。</target>
        </trans-unit>
        <trans-unit id="8a091005755a7e40cc57b9186a022197457f724c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;service&lt;/code&gt; file (for example &lt;code&gt;/lib/systemd/system/your-plugin.service&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;service&lt;/code&gt; （例えば用ファイル &lt;code&gt;/lib/systemd/system/your-plugin.service&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="37491830e511de1d5bb58a0686627f39963dcb6b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;service&lt;/code&gt; the name of the service being extended, for example &lt;code&gt;web&lt;/code&gt; or &lt;code&gt;database&lt;/code&gt;. The &lt;code&gt;file&lt;/code&gt; is the location of a Compose configuration file defining that service.</source>
          <target state="translated">&lt;code&gt;service&lt;/code&gt; サービスの名前は、例えばのために、拡張された &lt;code&gt;web&lt;/code&gt; または &lt;code&gt;database&lt;/code&gt; 。 &lt;code&gt;file&lt;/code&gt; そのサービスを定義する作曲、構成ファイルの場所です。</target>
        </trans-unit>
        <trans-unit id="a360e2cea9622846c780d822d40a24715633debd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;since&lt;/code&gt; filter shows only containers created since the container with given id or name. For example, with the same containers as in &lt;code&gt;before&lt;/code&gt; filter:</source>
          <target state="translated">&lt;code&gt;since&lt;/code&gt; のフィルタのみを示しているコンテナは、指定されたIDまたは名前を持つコンテナために作成します。たとえば、 &lt;code&gt;before&lt;/code&gt; フィルターと同じコンテナーの場合：</target>
        </trans-unit>
        <trans-unit id="84d3e1bb8cb5d26bcfef75759b883a6e402ea173" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;site.csr&lt;/code&gt; and &lt;code&gt;site.cnf&lt;/code&gt; files are not needed by the Nginx service, but you need them if you want to generate a new site certificate. Protect the &lt;code&gt;root-ca.key&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;site.csr&lt;/code&gt; と &lt;code&gt;site.cnf&lt;/code&gt; ファイルは、nginxのサービスが必要とする、しかし、あなたは新しいサイトの証明書を生成したい場合には、それらを必要とされていません。 &lt;code&gt;root-ca.key&lt;/code&gt; ファイルを保護します。</target>
        </trans-unit>
        <trans-unit id="3977312060c807dab33ea48b26fdaff6022f83de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;socket&lt;/code&gt; file (for example &lt;code&gt;/lib/systemd/system/your-plugin.socket&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;socket&lt;/code&gt; （例えば用ファイル &lt;code&gt;/lib/systemd/system/your-plugin.socket&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="74dddfba7279c1388888439111e559495678ed60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;status&lt;/code&gt; filter matches containers by status. You can filter using &lt;code&gt;created&lt;/code&gt;, &lt;code&gt;restarting&lt;/code&gt;, &lt;code&gt;running&lt;/code&gt;, &lt;code&gt;removing&lt;/code&gt;, &lt;code&gt;paused&lt;/code&gt;, &lt;code&gt;exited&lt;/code&gt; and &lt;code&gt;dead&lt;/code&gt;. For example, to filter for &lt;code&gt;running&lt;/code&gt; containers:</source>
          <target state="translated">&lt;code&gt;status&lt;/code&gt; フィルタは、状況によってコンテナに一致します。あなたは使用してフィルタリングすることができます &lt;code&gt;created&lt;/code&gt; 、 &lt;code&gt;restarting&lt;/code&gt; 、 &lt;code&gt;running&lt;/code&gt; 、 &lt;code&gt;removing&lt;/code&gt; 、 &lt;code&gt;paused&lt;/code&gt; 、 &lt;code&gt;exited&lt;/code&gt; と &lt;code&gt;dead&lt;/code&gt; 。たとえば、 &lt;code&gt;running&lt;/code&gt; コンテナをフィルタリングするには：</target>
        </trans-unit>
        <trans-unit id="2c2e44a9200bd1d71315631b0c2c98438f27f8ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;store&lt;/code&gt; command can write error messages to &lt;code&gt;STDOUT&lt;/code&gt; that the docker engine will show if there was an issue.</source>
          <target state="translated">&lt;code&gt;store&lt;/code&gt; コマンドは、にエラーメッセージが書き込むことができ &lt;code&gt;STDOUT&lt;/code&gt; 問題があった場合ドッカエンジンが表示されます。</target>
        </trans-unit>
        <trans-unit id="201eae4e5d21feaa880c1da9df3662878ff71506" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;store&lt;/code&gt; command takes a JSON payload from the standard input. That payload carries the server address, to identify the credential, the user name, and either a password or an identity token.</source>
          <target state="translated">&lt;code&gt;store&lt;/code&gt; 命令は、標準入力からJSONペイロードをとります。そのペイロードは、資格情報、ユーザー名、およびパスワードまたはIDトークンのいずれかを識別するためのサーバーアドレスを伝達します。</target>
        </trans-unit>
        <trans-unit id="8f8d92702335aa3cf9f7d6e3d0646cb9035f7d39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tag&lt;/code&gt; or &lt;code&gt;digest&lt;/code&gt; values are optional. If you omit either of them, the builder assumes a &lt;code&gt;latest&lt;/code&gt; tag by default. The builder returns an error if it cannot find the &lt;code&gt;tag&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;tag&lt;/code&gt; または &lt;code&gt;digest&lt;/code&gt; 値はオプションです。それらのいずれかを省略すると、ビルダーはデフォルトで &lt;code&gt;latest&lt;/code&gt; タグを想定します。 &lt;code&gt;tag&lt;/code&gt; 値が見つからない場合、ビルダーはエラーを返します。</target>
        </trans-unit>
        <trans-unit id="acb29c4110ede458e19d89941d169232476d9c7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trust_dir&lt;/code&gt; specifies the location (as an absolute path or a path relative to the directory of the configuration file) where the TUF metadata and private keys are stored.</source>
          <target state="translated">&lt;code&gt;trust_dir&lt;/code&gt; は TUFメタデータと秘密鍵が格納されている（絶対パスまたは構成ファイルのディレクトリへの相対パスとして）位置を指定します。</target>
        </trans-unit>
        <trans-unit id="d567b63c2e261aff2ddbc1c532e24bc856109547" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trust_pinning&lt;/code&gt; specifies how to bootstrap trust for the root of a Notary client&amp;rsquo;s trusted collection.</source>
          <target state="translated">&lt;code&gt;trust_pinning&lt;/code&gt; 公証人のクライアントの信頼されたコレクションのルートの信頼をブートストラップする方法を指定します。</target>
        </trans-unit>
        <trans-unit id="5c3ba868e5bbc2288271513312680c5aea6e1bc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; filter supports two values; &lt;code&gt;builtin&lt;/code&gt; displays predefined networks (&lt;code&gt;bridge&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;), whereas &lt;code&gt;custom&lt;/code&gt; displays user defined networks.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; フィルタは、2つの値をサポートしています。 &lt;code&gt;builtin&lt;/code&gt; は事前定義されたネットワーク（ &lt;code&gt;bridge&lt;/code&gt; 、 &lt;code&gt;none&lt;/code&gt; 、 &lt;code&gt;host&lt;/code&gt; ）を表示しますが、 &lt;code&gt;custom&lt;/code&gt; はユーザー定義のネットワークを表示します。</target>
        </trans-unit>
        <trans-unit id="623dd4366d3e03347278170a9392f26c7b6dca59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;until&lt;/code&gt; filter can be Unix timestamps, date formatted timestamps, or Go duration strings (e.g. &lt;code&gt;10m&lt;/code&gt;, &lt;code&gt;1h30m&lt;/code&gt;) computed relative to the daemon machine&amp;rsquo;s time. Supported formats for date formatted time stamps include RFC3339Nano, RFC3339, &lt;code&gt;2006-01-02T15:04:05&lt;/code&gt;, &lt;code&gt;2006-01-02T15:04:05.999999999&lt;/code&gt;, &lt;code&gt;2006-01-02Z07:00&lt;/code&gt;, and &lt;code&gt;2006-01-02&lt;/code&gt;. The local timezone on the daemon will be used if you do not provide either a &lt;code&gt;Z&lt;/code&gt; or a &lt;code&gt;+-00:00&lt;/code&gt; timezone offset at the end of the timestamp. When providing Unix timestamps enter seconds[.nanoseconds], where seconds is the number of seconds that have elapsed since January 1, 1970 (midnight UTC/GMT), not counting leap seconds (aka Unix epoch or Unix time), and the optional .nanoseconds field is a fraction of a second no more than nine digits long.</source>
          <target state="translated">&lt;code&gt;until&lt;/code&gt; フィルタは、Unixタイムスタンプ、日付フォーマットされたタイムスタンプ、または移動時間の文字列（例えばすることができ &lt;code&gt;10m&lt;/code&gt; 、 &lt;code&gt;1h30m&lt;/code&gt; デーモン・マシンの時間に対する計算します）。日付フォーマットされたタイムスタンプのためにサポートされるフォーマットはRFC3339Nano、RFC3339、含める &lt;code&gt;2006-01-02T15:04:05&lt;/code&gt; 、 &lt;code&gt;2006-01-02T15:04:05.999999999&lt;/code&gt; 、 &lt;code&gt;2006-01-02Z07:00&lt;/code&gt; 、および &lt;code&gt;2006-01-02&lt;/code&gt; 。 &lt;code&gt;Z&lt;/code&gt; または &lt;code&gt;+-00:00&lt;/code&gt; のいずれも指定しない場合、デーモンのローカルタイムゾーンが使用されますタイムスタンプの最後のタイムゾーンオフセット。Unixタイムスタンプを提供する場合は、seconds [.nanoseconds]を入力します。ここで、secondsは、1970年1月1日（UTC / GMTの真夜中）から経過した秒数で、うるう秒（別名UnixエポックまたはUnix時間）をカウントせず、オプションです。ナノ秒フィールドは、1秒の端数で9桁以下です。</target>
        </trans-unit>
        <trans-unit id="88838fefdaa39b0ba1f163b1d4ed778a4bd3b967" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;volume&lt;/code&gt; filter shows only containers that mount a specific volume or have a volume mounted in a specific path:</source>
          <target state="translated">&lt;code&gt;volume&lt;/code&gt; フィルタ示す特定のボリュームをマウントまたはボリュームを特定のパスにマウントされている唯一のコンテナ。</target>
        </trans-unit>
        <trans-unit id="fffe874eceb8a6d1dad5be3972e327372c8f22a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;web&lt;/code&gt; service uses an image that&amp;rsquo;s built from the &lt;code&gt;Dockerfile&lt;/code&gt; in the current directory. It then binds the container and the host machine to the exposed port, &lt;code&gt;5000&lt;/code&gt;. This example service uses the default port for the Flask web server, &lt;code&gt;5000&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;web&lt;/code&gt; サービスから組み込まれている画像使用 &lt;code&gt;Dockerfile&lt;/code&gt; カレントディレクトリにします。次に、コンテナーとホストマシンを公開ポート &lt;code&gt;5000&lt;/code&gt; にバインドします。このサンプルサービスは、Flaskウェブサーバーのデフォルトポート &lt;code&gt;5000&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="cfb1cd9971be9ceb83fb0faa1ce31cb35adfc984" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;zfs&lt;/code&gt; driver is probably not as fast as &lt;code&gt;btrfs&lt;/code&gt; but has a longer track record on stability. Thanks to &lt;code&gt;Single Copy ARC&lt;/code&gt; shared blocks between clones will be cached only once. Use &lt;code&gt;dockerd -s zfs&lt;/code&gt;. To select a different zfs filesystem set &lt;code&gt;zfs.fsname&lt;/code&gt; option as described in &lt;a href=&quot;#zfs-options&quot;&gt;ZFS options&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;zfs&lt;/code&gt; ドライバが早くとしてはおそらくない &lt;code&gt;btrfs&lt;/code&gt; が、安定性に長い実績を持っています。 &lt;code&gt;Single Copy ARC&lt;/code&gt; おかげで、クローン間のARC共有ブロックは一度だけキャッシュされます。 &lt;code&gt;dockerd -s zfs&lt;/code&gt; を使用します。別のzfsファイルシステムを選択するには、&lt;a href=&quot;#zfs-options&quot;&gt;ZFSオプションで&lt;/a&gt;説明されている &lt;code&gt;zfs.fsname&lt;/code&gt; オプションを設定します。</target>
        </trans-unit>
        <trans-unit id="6624f3a95723eb7deecfcb67c0306da23d188f9e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;exec&lt;/em&gt; form makes it possible to avoid shell string munging, and to &lt;code&gt;RUN&lt;/code&gt; commands using a base image that does not contain the specified shell executable.</source>
          <target state="translated">&lt;em&gt;execの&lt;/em&gt;形式は、シェルの文字列いじるを回避することができる、とに &lt;code&gt;RUN&lt;/code&gt; 指定されたシェルの実行が含まれていない基本イメージを使用してコマンド。</target>
        </trans-unit>
        <trans-unit id="7658e2cd9f6d19cd1a74039c07d230202a829f8c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;shell&lt;/em&gt; form prevents any &lt;code&gt;CMD&lt;/code&gt; or &lt;code&gt;run&lt;/code&gt; command line arguments from being used, but has the disadvantage that your &lt;code&gt;ENTRYPOINT&lt;/code&gt; will be started as a subcommand of &lt;code&gt;/bin/sh -c&lt;/code&gt;, which does not pass signals. This means that the executable will not be the container&amp;rsquo;s &lt;code&gt;PID 1&lt;/code&gt; - and will &lt;em&gt;not&lt;/em&gt; receive Unix signals - so your executable will not receive a &lt;code&gt;SIGTERM&lt;/code&gt; from &lt;code&gt;docker stop &amp;lt;container&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;シェル&lt;/em&gt;形は、任意の防止 &lt;code&gt;CMD&lt;/code&gt; または &lt;code&gt;run&lt;/code&gt; に使用されているから、コマンドライン引数を、しかし、あなたという欠点がある &lt;code&gt;ENTRYPOINT&lt;/code&gt; がのサブコマンドとして開始されます &lt;code&gt;/bin/sh -c&lt;/code&gt; 信号を通過させません、。実行ファイルがコンテナのではないだろうというこの手段 &lt;code&gt;PID 1&lt;/code&gt; となります- &lt;em&gt;ではない&lt;/em&gt; Unixシグナルを受け取る-あなたの実行ファイルが受信しないように、 &lt;code&gt;SIGTERM&lt;/code&gt; から &lt;code&gt;docker stop &amp;lt;container&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58b7b4aa81e7c742e582727ad709a516ccd434f0" translate="yes" xml:space="preserve">
          <source>The API is versioned via an Accept header, which currently is always set to &lt;code&gt;application/vnd.docker.plugins.v1+json&lt;/code&gt;.</source>
          <target state="translated">APIは、現在常に &lt;code&gt;application/vnd.docker.plugins.v1+json&lt;/code&gt; に設定されているAcceptヘッダーによってバージョン管理されています。</target>
        </trans-unit>
        <trans-unit id="9e306793d0c42815f9b23cd928d98f6eb8a992cc" translate="yes" xml:space="preserve">
          <source>The BugSnag API key to use to report errors.</source>
          <target state="translated">エラーを報告するために使用するBugSnag APIキー。</target>
        </trans-unit>
        <trans-unit id="a5433b4be7d70650a05b6da15569a592be1d2f16" translate="yes" xml:space="preserve">
          <source>The CLI interprets the &lt;code&gt;.dockerignore&lt;/code&gt; file as a newline-separated list of patterns similar to the file globs of Unix shells. For the purposes of matching, the root of the context is considered to be both the working and the root directory. For example, the patterns &lt;code&gt;/foo/bar&lt;/code&gt; and &lt;code&gt;foo/bar&lt;/code&gt; both exclude a file or directory named &lt;code&gt;bar&lt;/code&gt; in the &lt;code&gt;foo&lt;/code&gt; subdirectory of &lt;code&gt;PATH&lt;/code&gt; or in the root of the git repository located at &lt;code&gt;URL&lt;/code&gt;. Neither excludes anything else.</source>
          <target state="translated">CLIは、 &lt;code&gt;.dockerignore&lt;/code&gt; ファイルを、UNIXシェルのファイルグロブに類似した、改行で区切られたパターンのリストとして解釈します。照合の目的で、コンテキストのルートは、作業ディレクトリとルートディレクトリの両方と見なされます。たとえば、パターン &lt;code&gt;/foo/bar&lt;/code&gt; および &lt;code&gt;foo/bar&lt;/code&gt; はどちらも、 &lt;code&gt;PATH&lt;/code&gt; の &lt;code&gt;foo&lt;/code&gt; サブディレクトリまたは &lt;code&gt;URL&lt;/code&gt; にあるgitリポジトリのルートにある &lt;code&gt;bar&lt;/code&gt; という名前のファイルまたはディレクトリを除外します。どちらも除外されません。</target>
        </trans-unit>
        <trans-unit id="8a6904fbb817ebee7ff84f7e6d4354ab155db813" translate="yes" xml:space="preserve">
          <source>The Compose file can also be provided as standard input with &lt;code&gt;--compose-file -&lt;/code&gt;:</source>
          <target state="translated">Composeファイルは、 &lt;code&gt;--compose-file -&lt;/code&gt; して標準入力として提供することもできます。</target>
        </trans-unit>
        <trans-unit id="9a8f68cb614e118d7a4b20ace969787816ab48d0" translate="yes" xml:space="preserve">
          <source>The Compose file formats are now described in these references, specific to each version.</source>
          <target state="translated">Composeファイルのフォーマットは、各バージョンに固有のこれらのリファレンスで説明されるようになりました。</target>
        </trans-unit>
        <trans-unit id="1d29374d8810128ad1904bc2c9e9b744865870f4" translate="yes" xml:space="preserve">
          <source>The Compose file is a &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; file defining &lt;a href=&quot;#service-configuration-reference&quot;&gt;services&lt;/a&gt;, &lt;a href=&quot;#network-configuration-reference&quot;&gt;networks&lt;/a&gt; and &lt;a href=&quot;#volume-configuration-reference&quot;&gt;volumes&lt;/a&gt;. The default path for a Compose file is &lt;code&gt;./docker-compose.yml&lt;/code&gt;.</source>
          <target state="translated">Composeファイルは、&lt;a href=&quot;#service-configuration-reference&quot;&gt;サービス&lt;/a&gt;、&lt;a href=&quot;#network-configuration-reference&quot;&gt;ネットワーク&lt;/a&gt;、&lt;a href=&quot;#volume-configuration-reference&quot;&gt;ボリュームを&lt;/a&gt;定義する&lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;ファイルです。Composeファイルのデフォルトのパスは &lt;code&gt;./docker-compose.yml&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3f2e30c63852d32e3d75aa2f8d4ff22ba7d03a09" translate="yes" xml:space="preserve">
          <source>The Compose file is a &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; file defining services, networks, and volumes for a Docker application.</source>
          <target state="translated">Composeファイルは、Dockerアプリケーションのサービス、ネットワーク、ボリュームを定義する&lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;ファイルです。</target>
        </trans-unit>
        <trans-unit id="516fc9fe7a027246ddf927cabfb86b10368bf5ea" translate="yes" xml:space="preserve">
          <source>The DigitalOcean driver uses &lt;code&gt;ubuntu-16-04-x64&lt;/code&gt; as the default image.</source>
          <target state="translated">DigitalOceanドライバーは、 &lt;code&gt;ubuntu-16-04-x64&lt;/code&gt; をデフォルトのイメージとして使用します。</target>
        </trans-unit>
        <trans-unit id="60e1c1a3e2fc863f910eda1e82acf0df54987727" translate="yes" xml:space="preserve">
          <source>The Docker API only supports requests from clients which report a specific version. If you receive a &lt;code&gt;client and server don't have same version&lt;/code&gt; error using &lt;code&gt;docker-compose&lt;/code&gt;, you can workaround this error by setting this environment variable. Set the version value to match the server version.</source>
          <target state="translated">Docker APIは、特定のバージョンを報告するクライアントからのリクエストのみをサポートします。あなたが受け取った場合 &lt;code&gt;client and server don't have same version&lt;/code&gt; 使用して、エラーを &lt;code&gt;docker-compose&lt;/code&gt; 、あなたは、この環境変数を設定することで、このエラーを回避することができます。サーバーのバージョンと一致するようにバージョン値を設定します。</target>
        </trans-unit>
        <trans-unit id="d1504232c28254b9f9fcec3e6f6770c5273875bb" translate="yes" xml:space="preserve">
          <source>The Docker Engine - our lightweight and powerful open source containerization technology combined with a work flow for building and containerizing your applications.</source>
          <target state="translated">Docker Engine-軽量で強力なオープンソースのコンテナ化技術と、アプリケーションを構築してコンテナ化するためのワークフローを組み合わせたものです。</target>
        </trans-unit>
        <trans-unit id="e981d539da2aad65e18d80315ff72524e7e5303d" translate="yes" xml:space="preserve">
          <source>The Docker Engine can be configured to only run signed images. The Docker Content Trust signature verification feature is built directly into the &lt;code&gt;dockerd&lt;/code&gt; binary.</source>
          <target state="translated">Docker Engineは、署名されたイメージのみを実行するように構成できます。Docker Content Trust署名検証機能は、 &lt;code&gt;dockerd&lt;/code&gt; バイナリに直接組み込まれています。</target>
        </trans-unit>
        <trans-unit id="769b3a4ec31c20cda0955586d45d677bc3ea572f" translate="yes" xml:space="preserve">
          <source>The Docker Engine can keep user credentials in an external credentials store, such as the native keychain of the operating system. Using an external store is more secure than storing credentials in the Docker configuration file.</source>
          <target state="translated">Docker Engineは、オペレーティングシステムのネイティブキーチェーンなどの外部のクレデンシャルストアにユーザーのクレデンシャルを保持することができます。外部ストアを使用することは、Docker設定ファイルにクレデンシャルを保存するよりも安全です。</target>
        </trans-unit>
        <trans-unit id="a95fdd73bfffcdc36ab59e6eb0861915736278a5" translate="yes" xml:space="preserve">
          <source>The Docker Engine client takes care of these name expansions for you so do not change the names you use with the Engine client or API. This is a requirement only when interacting with the same Docker Hub repositories through the Notary client.</source>
          <target state="translated">これらの名前の展開はDocker Engineクライアントが代行してくれるので、EngineクライアントやAPIで使用する名前は変更しないでください。これはNotaryクライアントを介して同じDocker Hubリポジトリとやりとりする場合にのみ必要です。</target>
        </trans-unit>
        <trans-unit id="e5e6b53dfbe1a35edb43e21132908b08612d8d0b" translate="yes" xml:space="preserve">
          <source>The Docker Engine joins the swarm depending on the &lt;strong&gt;join-token&lt;/strong&gt; you provide to the &lt;code&gt;docker swarm join&lt;/code&gt; command. The node only uses the token at join time. If you subsequently rotate the token, it doesn&amp;rsquo;t affect existing swarm nodes. Refer to &lt;a href=&quot;../swarm-mode/index#view-the-join-command-or-update-a-swarm-join-token&quot;&gt;Run Docker Engine in swarm mode&lt;/a&gt;.</source>
          <target state="translated">Dockerエンジンは、 &lt;code&gt;docker swarm join&lt;/code&gt; コマンドに指定した&lt;strong&gt;join-tokenに&lt;/strong&gt;応じて、swarmに参加します。ノードは、結合時にのみトークンを使用します。その後トークンをローテーションしても、既存のスウォームノードには影響しません。&lt;a href=&quot;../swarm-mode/index#view-the-join-command-or-update-a-swarm-join-token&quot;&gt;スウォームモードでのDockerエンジンの実行を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f02c0b12a5516b4fd13dbbd313dee5b1eda6fe97" translate="yes" xml:space="preserve">
          <source>The Docker Engine returns an error if the driver is not available.</source>
          <target state="translated">Docker Engineは、ドライバが利用できない場合にエラーを返します。</target>
        </trans-unit>
        <trans-unit id="26a113db9a410ab73f222f9bca15d695db3743ad" translate="yes" xml:space="preserve">
          <source>The Docker client stores the keys in the &lt;code&gt;~/.docker/trust/private&lt;/code&gt; directory. Before backing them up, you should &lt;code&gt;tar&lt;/code&gt; them into an archive:</source>
          <target state="translated">Dockerクライアントは、 &lt;code&gt;~/.docker/trust/private&lt;/code&gt; ディレクトリにキーを保存します。それらをバックアップする前に、アーカイブにそれらを &lt;code&gt;tar&lt;/code&gt; する必要があります：</target>
        </trans-unit>
        <trans-unit id="f784453fb940cff3136cf6c4eccf303e18360b96" translate="yes" xml:space="preserve">
          <source>The Docker client will honor the &lt;code&gt;DOCKER_HOST&lt;/code&gt; environment variable to set the &lt;code&gt;-H&lt;/code&gt; flag for the client. Use &lt;strong&gt;one&lt;/strong&gt; of the following commands:</source>
          <target state="translated">Dockerクライアントは、 &lt;code&gt;DOCKER_HOST&lt;/code&gt; 環境変数を尊重して、クライアントに &lt;code&gt;-H&lt;/code&gt; フラグを設定します。次の&lt;strong&gt;いずれか&lt;/strong&gt;のコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="b9b1e227b06064053804ed860bc5f7814dea3d4e" translate="yes" xml:space="preserve">
          <source>The Docker client will honor the &lt;code&gt;HTTP_PROXY&lt;/code&gt;, &lt;code&gt;HTTPS_PROXY&lt;/code&gt;, and &lt;code&gt;NO_PROXY&lt;/code&gt; environment variables (or the lowercase versions thereof). &lt;code&gt;HTTPS_PROXY&lt;/code&gt; takes precedence over &lt;code&gt;HTTP_PROXY&lt;/code&gt;.</source>
          <target state="translated">Dockerクライアントは、 &lt;code&gt;HTTP_PROXY&lt;/code&gt; 、 &lt;code&gt;HTTPS_PROXY&lt;/code&gt; 、および &lt;code&gt;NO_PROXY&lt;/code&gt; 環境変数（またはそれらの小文字バージョン）を受け入れます。 &lt;code&gt;HTTPS_PROXY&lt;/code&gt; は &lt;code&gt;HTTP_PROXY&lt;/code&gt; よりも優先されます。</target>
        </trans-unit>
        <trans-unit id="a5c8f241b1b8d61a93d92c1530c2e12812c43b35" translate="yes" xml:space="preserve">
          <source>The Docker daemon can listen for &lt;a href=&quot;https://docs.docker.com/develop/sdk&quot;&gt;Docker Engine API&lt;/a&gt; requests via three different types of Socket: &lt;code&gt;unix&lt;/code&gt;, &lt;code&gt;tcp&lt;/code&gt;, and &lt;code&gt;fd&lt;/code&gt;.</source>
          <target state="translated">Dockerデーモンは、3種類のソケット（ &lt;code&gt;unix&lt;/code&gt; 、 &lt;code&gt;tcp&lt;/code&gt; 、および &lt;code&gt;fd&lt;/code&gt; )を介して&lt;a href=&quot;https://docs.docker.com/develop/sdk&quot;&gt;Docker Engine API&lt;/a&gt;リクエストをリッスンできます。</target>
        </trans-unit>
        <trans-unit id="b9c9784a3450d3d22b2aa9a2e66a2518f32553f2" translate="yes" xml:space="preserve">
          <source>The Docker daemon interprets &lt;code&gt;.crt&lt;/code&gt; files as CA certificates and &lt;code&gt;.cert&lt;/code&gt; files as client certificates. If a CA certificate is accidentally given the extension &lt;code&gt;.cert&lt;/code&gt; instead of the correct &lt;code&gt;.crt&lt;/code&gt; extension, the Docker daemon logs the following error message:</source>
          <target state="translated">Dockerデーモンは、 &lt;code&gt;.crt&lt;/code&gt; ファイルをCA証明書として解釈し、 &lt;code&gt;.cert&lt;/code&gt; ファイルをクライアント証明書として解釈します。CA証明書に正しい &lt;code&gt;.crt&lt;/code&gt; 拡張子ではなく拡張子 &lt;code&gt;.cert&lt;/code&gt; が誤って付与された場合、Dockerデーモンは次のエラーメッセージをログに記録します。</target>
        </trans-unit>
        <trans-unit id="cb898408cbd90376be8d461674bfc0ca2aa29162" translate="yes" xml:space="preserve">
          <source>The Docker daemon relies on a &lt;a href=&quot;https://github.com/opencontainers/runtime-spec&quot;&gt;OCI&lt;/a&gt; compliant runtime (invoked via the &lt;code&gt;containerd&lt;/code&gt; daemon) as its interface to the Linux kernel &lt;code&gt;namespaces&lt;/code&gt;, &lt;code&gt;cgroups&lt;/code&gt;, and &lt;code&gt;SELinux&lt;/code&gt;.</source>
          <target state="translated">Dockerデーモンは、Linuxカーネル &lt;code&gt;namespaces&lt;/code&gt; 、 &lt;code&gt;cgroups&lt;/code&gt; 、および &lt;code&gt;SELinux&lt;/code&gt; へのインターフェースとして、&lt;a href=&quot;https://github.com/opencontainers/runtime-spec&quot;&gt;OCI&lt;/a&gt;準拠のランタイム（ &lt;code&gt;containerd&lt;/code&gt; デーモンを介して呼び出される）に依存しています。</target>
        </trans-unit>
        <trans-unit id="6f8b8fe412b9032f49ad4147a38c5684876ea1dd" translate="yes" xml:space="preserve">
          <source>The Docker daemon runs the instructions in the &lt;code&gt;Dockerfile&lt;/code&gt; one-by-one, committing the result of each instruction to a new image if necessary, before finally outputting the ID of your new image. The Docker daemon will automatically clean up the context you sent.</source>
          <target state="translated">Dockerデーモンは &lt;code&gt;Dockerfile&lt;/code&gt; 内の命令を1つずつ実行し、必要に応じて各命令の結果を新しいイメージにコミットしてから、最終的に新しいイメージのIDを出力します。Dockerデーモンは、送信したコンテキストを自動的にクリーンアップします。</target>
        </trans-unit>
        <trans-unit id="b6e1be11d17f40601ae630a15a10dbd070a820fd" translate="yes" xml:space="preserve">
          <source>The Docker swarm mode scheduler may reschedule your running service containers at any time if they become unhealthy or unreachable.</source>
          <target state="translated">Dockerのスウォームモードスケジューラは、実行中のサービスコンテナが不健康になったり、アクセスできなくなったりした場合、いつでもスケジュールを変更することができます。</target>
        </trans-unit>
        <trans-unit id="72310a65dcf93f71664669032c86d03ef6046ea8" translate="yes" xml:space="preserve">
          <source>The Dockerfile defines an application&amp;rsquo;s image content via one or more build commands that configure that image. Once built, you can run the image in a container. For more information on &lt;code&gt;Dockerfile&lt;/code&gt;, see the &lt;a href=&quot;../../get-started/index#building-an-image-from-a-dockerfile&quot;&gt;Docker user guide&lt;/a&gt; and the &lt;a href=&quot;../../engine/reference/builder/index&quot;&gt;Dockerfile reference&lt;/a&gt;.</source>
          <target state="translated">Dockerfileは、そのイメージを構成する1つ以上のビルドコマンドを介して、アプリケーションのイメージコンテンツを定義します。ビルドしたら、イメージをコンテナで実行できます。詳細について &lt;code&gt;Dockerfile&lt;/code&gt; 、参照&lt;a href=&quot;../../get-started/index#building-an-image-from-a-dockerfile&quot;&gt;ドッカーユーザガイド&lt;/a&gt;と&lt;a href=&quot;../../engine/reference/builder/index&quot;&gt;Dockerfile参照を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8db94bec7c2e718a34b45671510f274255de23e" translate="yes" xml:space="preserve">
          <source>The Engine mounts binds and volumes</source>
          <target state="translated">エンジンマウントのバインドとボリューム</target>
        </trans-unit>
        <trans-unit id="77a5c1284bd5d29f74b9038bb69295fca9657338" translate="yes" xml:space="preserve">
          <source>The Exoscale driver does an educated guess to pick the correct default SSH user. If left empty, it picks a suitable one following those rules:</source>
          <target state="translated">Exoscale ドライバは、正しいデフォルトの SSH ユーザを選択するための推測を行います。空のままにしておくと、これらのルールに従って適切なユーザを選択します。</target>
        </trans-unit>
        <trans-unit id="e7776bb7b1feb0cdf6b9d378083948ecee5a364b" translate="yes" xml:space="preserve">
          <source>The GCE driver uses the &lt;code&gt;ubuntu-1604-xenial-v20161130&lt;/code&gt; instance image unless otherwise specified. To obtain a list of image URLs run:</source>
          <target state="translated">GCEドライバーは、特に指定がない限り、 &lt;code&gt;ubuntu-1604-xenial-v20161130&lt;/code&gt; インスタンスイメージを使用します。画像URLのリストを取得するには、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="3ed225f02abcd916a36da6d5362330e6ef486c76" translate="yes" xml:space="preserve">
          <source>The GRPC port of the remote trust service</source>
          <target state="translated">リモートトラストサービスの GRPC ポート</target>
        </trans-unit>
        <trans-unit id="01efbfe017c227f04baa00c60ccb41e0ae379e7a" translate="yes" xml:space="preserve">
          <source>The Google driver uses &lt;a href=&quot;https://developers.google.com/identity/protocols/application-default-credentials&quot;&gt;Application Default Credentials&lt;/a&gt; to get authorization credentials for use in calling Google APIs.</source>
          <target state="translated">Googleドライバーは、&lt;a href=&quot;https://developers.google.com/identity/protocols/application-default-credentials&quot;&gt;アプリケーションのデフォルト&lt;/a&gt;認証情報を使用して、Google APIの呼び出しに使用する認証認証情報を取得します。</target>
        </trans-unit>
        <trans-unit id="f4f3efcfd0b9bf004bc8b95386891f6d660ca1c4" translate="yes" xml:space="preserve">
          <source>The HTML output is truncated:</source>
          <target state="translated">HTML出力は切り捨てられています。</target>
        </trans-unit>
        <trans-unit id="28915ec304ba22579fc2a14faedd1ca73cf26b2f" translate="yes" xml:space="preserve">
          <source>The HTTP method (GET/DELETE/POST)</source>
          <target state="translated">HTTPメソッド(GET/DELETE/POST)</target>
        </trans-unit>
        <trans-unit id="2631817e449cb6201d6128453c2b450e67c7f0c6" translate="yes" xml:space="preserve">
          <source>The HTTP request URI including API version (e.g., v.1.17/containers/json)</source>
          <target state="translated">API のバージョンを含む HTTP リクエスト URI (例:v.1.17/containers/json)</target>
        </trans-unit>
        <trans-unit id="f6b4e4056419626a88d045ad2a89f79c6a1828c1" translate="yes" xml:space="preserve">
          <source>The IP address must be assigned to a network interface available to the host operating system. All nodes in the swarm need to connect to the manager at the IP address.</source>
          <target state="translated">IP アドレスは、ホスト オペレーティング システムで利用可能なネットワーク インターフェイスに割り当てられている必要があります。スウォーム内のすべてのノードは、IPアドレスでマネージャに接続する必要があります。</target>
        </trans-unit>
        <trans-unit id="b59ce3b3c22ba1282f1f27b4d7318e2a6aed4b0a" translate="yes" xml:space="preserve">
          <source>The IP address of the manager machine</source>
          <target state="translated">管理者マシンのIPアドレス</target>
        </trans-unit>
        <trans-unit id="14e893cc4f0f163841ea538ac2b79f8d8a3b79da" translate="yes" xml:space="preserve">
          <source>The Linode Instance &lt;code&gt;image&lt;/code&gt; which provides the Linux distribution (see &lt;a href=&quot;https://api.linode.com/v4/images&quot;&gt;here&lt;/a&gt;).</source>
          <target state="translated">Linuxディストリビューションを提供するLinodeインスタンス &lt;code&gt;image&lt;/code&gt; （&lt;a href=&quot;https://api.linode.com/v4/images&quot;&gt;ここを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="83b7e9cefa7ff387cdd56e7ff68e1a677949aefe" translate="yes" xml:space="preserve">
          <source>The Linode Instance &lt;code&gt;label&lt;/code&gt;, unless overridden this will match the docker-machine name. This &lt;code&gt;label&lt;/code&gt; must be unique on the account.</source>
          <target state="translated">Linode Instance &lt;code&gt;label&lt;/code&gt; は、オーバーライドされない限り、docker-machine名と一致します。この &lt;code&gt;label&lt;/code&gt; はアカウントで一意である必要があります。</target>
        </trans-unit>
        <trans-unit id="bcc9c3a146345291574afc8492f61ed2e65b48d2" translate="yes" xml:space="preserve">
          <source>The Linode Instance &lt;code&gt;region&lt;/code&gt; (see &lt;a href=&quot;https://api.linode.com/v4/regions&quot;&gt;here&lt;/a&gt;)</source>
          <target state="translated">Linodeインスタンス &lt;code&gt;region&lt;/code&gt; （&lt;a href=&quot;https://api.linode.com/v4/regions&quot;&gt;ここを&lt;/a&gt;参照）</target>
        </trans-unit>
        <trans-unit id="6ae16b541187b536715d8341f613c9b770516823" translate="yes" xml:space="preserve">
          <source>The Linode Instance &lt;code&gt;root_pass&lt;/code&gt; (password assigned to the &lt;code&gt;root&lt;/code&gt; account)</source>
          <target state="translated">Linodeインスタンス &lt;code&gt;root_pass&lt;/code&gt; （ &lt;code&gt;root&lt;/code&gt; アカウントに割り当てられたパスワード）</target>
        </trans-unit>
        <trans-unit id="5668a87d5f3cb3f0f372b8772fdf1ff3faa88431" translate="yes" xml:space="preserve">
          <source>The Linode Instance &lt;code&gt;type&lt;/code&gt; (see &lt;a href=&quot;https://api.linode.com/v4/linode/types&quot;&gt;here&lt;/a&gt;)</source>
          <target state="translated">Linodeインスタンス &lt;code&gt;type&lt;/code&gt; （&lt;a href=&quot;https://api.linode.com/v4/linode/types&quot;&gt;ここを&lt;/a&gt;参照）</target>
        </trans-unit>
        <trans-unit id="ab313ad7fbd67b8ea1f71091c8c23d1efc05816d" translate="yes" xml:space="preserve">
          <source>The Linux kernel &lt;a href=&quot;http://man7.org/linux/man-pages/man7/user_namespaces.7.html&quot;&gt;user namespace support&lt;/a&gt; provides additional security by enabling a process, and therefore a container, to have a unique range of user and group IDs which are outside the traditional user and group range utilized by the host system. Potentially the most important security improvement is that, by default, container processes running as the &lt;code&gt;root&lt;/code&gt; user will have expected administrative privilege (with some restrictions) inside the container but will effectively be mapped to an unprivileged &lt;code&gt;uid&lt;/code&gt; on the host.</source>
          <target state="translated">Linuxカーネルの&lt;a href=&quot;http://man7.org/linux/man-pages/man7/user_namespaces.7.html&quot;&gt;ユーザー名前空間サポート&lt;/a&gt;は、プロセス、つまりコンテナーが、ホストシステムで利用される従来のユーザーとグループの範囲外のユーザーとグループIDの一意の範囲を持つことを可能にすることで、追加のセキュリティを提供します。潜在的に最も重要なセキュリティの改善は、デフォルトで、 &lt;code&gt;root&lt;/code&gt; ユーザーとして実行されているコンテナープロセスはコンテナー内で予期される管理特権（いくつかの制限付き）を持ち &lt;code&gt;uid&lt;/code&gt; が、ホスト上の非特権uidに効果的にマップされることです。</target>
        </trans-unit>
        <trans-unit id="000c040d8ab5e7c7ac50c8fdd132c54bd647e56f" translate="yes" xml:space="preserve">
          <source>The Machine provisioning process will:</source>
          <target state="translated">マシンのプロビジョニング処理が行われます。</target>
        </trans-unit>
        <trans-unit id="4cfd5fd9df9bb644721ce760e1a72a350c0aac10" translate="yes" xml:space="preserve">
          <source>The Machine repository supplies several &lt;code&gt;bash&lt;/code&gt; scripts that add features such as:</source>
          <target state="translated">Machineリポジトリは、次のような機能を追加するいくつかの &lt;code&gt;bash&lt;/code&gt; スクリプトを提供します。</target>
        </trans-unit>
        <trans-unit id="a6915b8754b576be2fa1f8db4e62a17da6c7cb93" translate="yes" xml:space="preserve">
          <source>The Notary Service always holds the timestamp key. If the attacker has Notary Service write credentials, then they have effective access to the timestamp key because the server generates and signs the timestamp for them.</source>
          <target state="translated">公証人サービスは常にタイムスタンプの鍵を保持している。攻撃者が公証人サービスの書き込み証明書を持っている場合、サーバがタイムスタンプを生成して署名するので、攻撃者はタイムスタンプキーに有効にアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="f510469dc42e51346acf512073fd66bf115cb369" translate="yes" xml:space="preserve">
          <source>The Notary repository includes sample certificates in the fixtures directory. When you initialize a development service using the provided &lt;code&gt;docker-compose.yml&lt;/code&gt; file, these sample certificates are used to create a more production like environment.</source>
          <target state="translated">Notaryリポジトリのフィクスチャディレクトリには、サンプルの証明書が含まれています。提供された &lt;code&gt;docker-compose.yml&lt;/code&gt; ファイルを使用して開発サービスを初期化する場合、これらのサンプル証明書を使用して、より生産的な環境を作成します。</target>
        </trans-unit>
        <trans-unit id="50de710da14be82d6d655046022a33a82c1ccc49" translate="yes" xml:space="preserve">
          <source>The Notary signer is responsible for:</source>
          <target state="translated">公証人が責任を持って署名します。</target>
        </trans-unit>
        <trans-unit id="c7afa7afbcd2ecc33c972605b1ce47bb9ca61017" translate="yes" xml:space="preserve">
          <source>The Plugin API is RPC-style JSON over HTTP, much like webhooks.</source>
          <target state="translated">プラグインAPIはHTTP上のRPCスタイルのJSONで、webhooksによく似ています。</target>
        </trans-unit>
        <trans-unit id="c227709ccd232d5e24a6d93f58178e25df562116" translate="yes" xml:space="preserve">
          <source>The Rackspace driver uses &lt;code&gt;821ba5f4-712d-4ec8-9c65-a3fa4bc500f9&lt;/code&gt; (Ubuntu 16.04 LTS) by default.</source>
          <target state="translated">Rackspaceドライバーは、 &lt;code&gt;821ba5f4-712d-4ec8-9c65-a3fa4bc500f9&lt;/code&gt; （Ubuntu 16.04 LTS）を使用します。</target>
        </trans-unit>
        <trans-unit id="82a21a7905a3cbb90eca7f4af732c295bd94e70a" translate="yes" xml:space="preserve">
          <source>The SoftLayer driver uses &lt;code&gt;UBUNTU_LATEST&lt;/code&gt; as the image type by default.</source>
          <target state="translated">SoftLayerドライバーは、デフォルトでイメージ・タイプとして &lt;code&gt;UBUNTU_LATEST&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="3bb056935b1763e55e51fba63a4a7934510e7050" translate="yes" xml:space="preserve">
          <source>The TCP address (IP and port) to listen for GRPC traffic. Examples:</source>
          <target state="translated">GRPC トラフィックをリッスンする TCP アドレス (IP およびポート)。例。</target>
        </trans-unit>
        <trans-unit id="88b4794d69904fc8e3ffc932b8cfd22da1dd7afc" translate="yes" xml:space="preserve">
          <source>The TCP address (IP and port) to listen for HTTP traffic on. Examples:</source>
          <target state="translated">HTTP トラフィックをリッスンする TCP アドレス (IP およびポート)。例。</target>
        </trans-unit>
        <trans-unit id="58f9d4f77b99b0275d71525e448d6600d2ca8f64" translate="yes" xml:space="preserve">
          <source>The TCP address (IP and port) to listen on. Examples:</source>
          <target state="translated">リッスンする TCP アドレス (IP とポート)。例を示します。</target>
        </trans-unit>
        <trans-unit id="7f378ce0f64115e9ae1db3da7716eb7c2cda8d30" translate="yes" xml:space="preserve">
          <source>The TCP port of the Linode that Docker will be listening on</source>
          <target state="translated">DockerがリッスンするLinodeのTCPポート</target>
        </trans-unit>
        <trans-unit id="4f34c1c251f453c03bae93c9980a57d4667489ef" translate="yes" xml:space="preserve">
          <source>The UTS namespace is for setting the hostname and the domain that is visible to running processes in that namespace. By default, all containers, including those with &lt;code&gt;--network=host&lt;/code&gt;, have their own UTS namespace. The &lt;code&gt;host&lt;/code&gt; setting will result in the container using the same UTS namespace as the host. Note that &lt;code&gt;--hostname&lt;/code&gt; and &lt;code&gt;--domainname&lt;/code&gt; are invalid in &lt;code&gt;host&lt;/code&gt; UTS mode.</source>
          <target state="translated">UTSネームスペースは、そのネームスペースで実行中のプロセスから見えるホスト名とドメインを設定するためのものです。デフォルトでは、-- &lt;code&gt;--network=host&lt;/code&gt; を含むものを含め、すべてのコンテナに独自のUTS名前空間があります。 &lt;code&gt;host&lt;/code&gt; 設定は、ホストと同じUTS名前空間を使用してコンテナになります。 &lt;code&gt;--hostname&lt;/code&gt; および &lt;code&gt;--domainname&lt;/code&gt; は、 &lt;code&gt;host&lt;/code&gt; UTSモードでは無効であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9570e3606e8e0207aa0ccc41a7f3d6bbb9a975b3" translate="yes" xml:space="preserve">
          <source>The UUID identifiers come from the Docker daemon. If you do not assign a container name with the &lt;code&gt;--name&lt;/code&gt; option, then the daemon generates a random string name for you. Defining a &lt;code&gt;name&lt;/code&gt; can be a handy way to add meaning to a container. If you specify a &lt;code&gt;name&lt;/code&gt;, you can use it when referencing the container within a Docker network. This works for both background and foreground Docker containers.</source>
          <target state="translated">UUID識別子はDockerデーモンから取得されます。 &lt;code&gt;--name&lt;/code&gt; オプションでコンテナ名を割り当てない場合、デーモンはランダムな文字列名を生成します。 &lt;code&gt;name&lt;/code&gt; を定義することは、コンテナーに意味を追加するための便利な方法です。 &lt;code&gt;name&lt;/code&gt; を指定すると、Dockerネットワーク内のコンテナーを参照するときにその名前を使用できます。これは、バックグラウンドとフォアグラウンドの両方のDockerコンテナーで機能します。</target>
        </trans-unit>
        <trans-unit id="d79d287da69a4a3f2d788cfe61abfc21d2875db3" translate="yes" xml:space="preserve">
          <source>The VAR_NOT_INTERPOLATED_BY_COMPOSE is not set. Substituting an empty string.</source>
          <target state="translated">VAR_NOT_INTERPOLATED_BY_COMPOSEが設定されていません。空の文字列を代入します。</target>
        </trans-unit>
        <trans-unit id="fd2331cc37261fcbeb226c52aee1f2bad68a2512" translate="yes" xml:space="preserve">
          <source>The VMware Fusion driver uses the latest boot2docker image. See &lt;a href=&quot;https://github.com/boot2docker/boot2docker&quot;&gt;frapposelli/boot2docker&lt;/a&gt;</source>
          <target state="translated">VMware Fusionドライバーは最新のboot2dockerイメージを使用します。&lt;a href=&quot;https://github.com/boot2docker/boot2docker&quot;&gt;frapposelli / boot2dockerを&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="b92c6a3df559cf9f9bf7e2a377d941da13c2302a" translate="yes" xml:space="preserve">
          <source>The VMware vCloud Air driver uses the &lt;code&gt;Ubuntu Server 12.04 LTS (amd64 20140927)&lt;/code&gt; image by default.</source>
          <target state="translated">VMware vCloud Airドライバーは、デフォルトで &lt;code&gt;Ubuntu Server 12.04 LTS (amd64 20140927)&lt;/code&gt; イメージを使用します。</target>
        </trans-unit>
        <trans-unit id="1f1f49461b6458d5fa20b8e5eef851e3e1e7567b" translate="yes" xml:space="preserve">
          <source>The VMware vSphere driver uses the latest boot2docker image.</source>
          <target state="translated">VMware vSphere ドライバは、最新の boot2docker イメージを使用します。</target>
        </trans-unit>
        <trans-unit id="ac2fd9823008d438c71601d7a5b438706dd53245" translate="yes" xml:space="preserve">
          <source>The Version 1 Compose file is a &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; file that defines &lt;a href=&quot;#service-configuration-reference&quot;&gt;services&lt;/a&gt;.</source>
          <target state="translated">バージョン1の構成ファイルは、&lt;a href=&quot;#service-configuration-reference&quot;&gt;サービス&lt;/a&gt;を定義する&lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;ファイルです。</target>
        </trans-unit>
        <trans-unit id="053bbb5df4e49691e9c5c6aa76dfa2421d6004be" translate="yes" xml:space="preserve">
          <source>The above command sets the &lt;em&gt;desired&lt;/em&gt; number of tasks for the service. Even though the command returns immediately, actual scaling of the service may take some time. The &lt;code&gt;REPLICAS&lt;/code&gt; column shows both the &lt;em&gt;actual&lt;/em&gt; and &lt;em&gt;desired&lt;/em&gt; number of replica tasks for the service.</source>
          <target state="translated">上記のコマンドは、サービスに必要なタスク数を設定し&lt;em&gt;ます&lt;/em&gt;。コマンドがすぐに返されても、実際のサービスのスケーリングには時間がかかる場合があります。 &lt;code&gt;REPLICAS&lt;/code&gt; カラムショー両方&lt;em&gt;実際&lt;/em&gt;と&lt;em&gt;所望の&lt;/em&gt;サービスの複製タスクの数。</target>
        </trans-unit>
        <trans-unit id="9d5d9e53c576fe5f14e8462005d5c33d1293b13b" translate="yes" xml:space="preserve">
          <source>The above command will use the current directory as the build context and read a Dockerfile from stdin.</source>
          <target state="translated">上記のコマンドは、カレントディレクトリをビルドコンテキストとして使用し、stdinからDockerfileを読み込みます。</target>
        </trans-unit>
        <trans-unit id="34faf87ada6f2c49d8b93b6a04fcd4278bb71522" translate="yes" xml:space="preserve">
          <source>The above command works on Windows only if you use a terminal emulator such as &lt;a href=&quot;https://git-for-windows.github.io/&quot;&gt;Git BASH&lt;/a&gt;, which supports Linux commands like &lt;code&gt;chmod&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドは、 &lt;code&gt;chmod&lt;/code&gt; などのLinuxコマンドをサポートする&lt;a href=&quot;https://git-for-windows.github.io/&quot;&gt;Git BASH&lt;/a&gt;などのターミナルエミュレーターを使用する場合にのみ、Windowsで機能します。</target>
        </trans-unit>
        <trans-unit id="34ea0c251fca629c07e331bace6e9df9d3f364b9" translate="yes" xml:space="preserve">
          <source>The above commands will build the current build context (as specified by the &lt;code&gt;.&lt;/code&gt;) twice, once using a debug version of a &lt;code&gt;Dockerfile&lt;/code&gt; and once using a production version.</source>
          <target state="translated">上記のコマンドは、現在のビルドコンテキスト（ &lt;code&gt;.&lt;/code&gt; 指定）を2回ビルドします &lt;code&gt;Dockerfile&lt;/code&gt; 回はDockerfileのデバッグバージョンを使用し、もう1回は本番バージョンを使用します。</target>
        </trans-unit>
        <trans-unit id="5179bbf9a5fe4d0559c4202f0c4cdc5b926bb0bd" translate="yes" xml:space="preserve">
          <source>The above example for controlling log files and sizes uses options specific to the &lt;a href=&quot;https://docs.docker.com/config/containers/logging#json-file&quot;&gt;json-file driver&lt;/a&gt;. These particular options are not available on other logging drivers. For a full list of supported logging drivers and their options, see &lt;a href=&quot;https://docs.docker.com/config/containers/logging&quot;&gt;logging drivers&lt;/a&gt;.</source>
          <target state="translated">上記のログファイルとサイズを制御する例では、&lt;a href=&quot;https://docs.docker.com/config/containers/logging#json-file&quot;&gt;json-fileドライバーに&lt;/a&gt;固有のオプションを使用しています。これらの特定のオプションは、他のロギングドライバーでは使用できません。サポートログのドライバーとそのオプションの完全なリストについては、&lt;a href=&quot;https://docs.docker.com/config/containers/logging&quot;&gt;ログのドライバを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f093a1321de60dc8c82ee545590e3b79fa5f264b" translate="yes" xml:space="preserve">
          <source>The above output shows that the &lt;code&gt;docker-default&lt;/code&gt; profile running on various container PIDs is in &lt;code&gt;enforce&lt;/code&gt; mode. This means AppArmor is actively blocking and auditing in &lt;code&gt;dmesg&lt;/code&gt; anything outside the bounds of the &lt;code&gt;docker-default&lt;/code&gt; profile.</source>
          <target state="translated">上記の出力は、さまざまなコンテナーPIDで実行されている &lt;code&gt;docker-default&lt;/code&gt; プロファイルが &lt;code&gt;enforce&lt;/code&gt; モードであることを示しています。これは、AppArmorが &lt;code&gt;docker-default&lt;/code&gt; プロファイルの境界外にあるものをすべて &lt;code&gt;dmesg&lt;/code&gt; でアクティブにブロックおよび監査していることを意味します。</target>
        </trans-unit>
        <trans-unit id="d200c15742fb2300e685da66c69867efdfe210c9" translate="yes" xml:space="preserve">
          <source>The actual extent of integration depends on which version of the &lt;a href=&quot;../compose-file/index#versioning&quot;&gt;Compose file format&lt;/a&gt; you are using:</source>
          <target state="translated">統合の実際の範囲は、使用している&lt;a href=&quot;../compose-file/index#versioning&quot;&gt;Composeファイル形式の&lt;/a&gt;バージョンによって異なります。</target>
        </trans-unit>
        <trans-unit id="c53f12c881a1a893720f7f15ed293fb4da6174a6" translate="yes" xml:space="preserve">
          <source>The administrative keys listed specify the root key of trust, as well as the administrative repository key. These keys are responsible for modifying signers, and rotating keys for the signed repository.</source>
          <target state="translated">リストされた管理鍵は、管理リポジトリの鍵と同様に信頼のルート鍵を指定します。これらの鍵は、署名者の変更や署名済みリポジトリの鍵のローテーションを担当します。</target>
        </trans-unit>
        <trans-unit id="c79b727478823a0e43b0fc18d5e82dfe0f2c00b1" translate="yes" xml:space="preserve">
          <source>The amount of data the container has read to and written from block devices on the host</source>
          <target state="translated">コンテナがホスト上のブロックデバイスから読み書きしたデータ量</target>
        </trans-unit>
        <trans-unit id="2bf47d87fbe717e121dd86bd58bd038bd68358c7" translate="yes" xml:space="preserve">
          <source>The amount of data the container has sent and received over its network interface</source>
          <target state="translated">コンテナがネットワークインターフェースを介して送受信したデータの量</target>
        </trans-unit>
        <trans-unit id="590f9091420642ff940715d49d155ce5d6434be6" translate="yes" xml:space="preserve">
          <source>The amount of swap space provisioned on the Linode Instance</source>
          <target state="translated">Linode インスタンスにプロビジョニングされたスワップスペースの量</target>
        </trans-unit>
        <trans-unit id="420b520b189370c5709e162d6da932a4837c8376" translate="yes" xml:space="preserve">
          <source>The app is now bootable, but you&amp;rsquo;re not quite there yet. By default, Rails expects a database to be running on &lt;code&gt;localhost&lt;/code&gt; - so you need to point it at the &lt;code&gt;db&lt;/code&gt; container instead. You also need to change the database and username to align with the defaults set by the &lt;code&gt;postgres&lt;/code&gt; image.</source>
          <target state="translated">アプリは起動可能になりましたが、まだ完全には起動していません。デフォルトでは、Railsはデータベースが &lt;code&gt;localhost&lt;/code&gt; で実行されることを想定しているため、代わりに &lt;code&gt;db&lt;/code&gt; コンテナーにポイントする必要があります。データベースとユーザー名を変更して、 &lt;code&gt;postgres&lt;/code&gt; イメージで設定されたデフォルトに合わせる必要もあります。</target>
        </trans-unit>
        <trans-unit id="7be6a30db5c572cf9181942bf629645491a22e50" translate="yes" xml:space="preserve">
          <source>The app itself</source>
          <target state="translated">アプリ自体</target>
        </trans-unit>
        <trans-unit id="2d56df5fefd85739b353e0b719bdb02818f55645" translate="yes" xml:space="preserve">
          <source>The arguments &lt;code&gt;alpine ping docker.com&lt;/code&gt; define the service as an Alpine Linux container that executes the command &lt;code&gt;ping docker.com&lt;/code&gt;.</source>
          <target state="translated">引数 &lt;code&gt;alpine ping docker.com&lt;/code&gt; は、サービスをコマンド &lt;code&gt;ping docker.com&lt;/code&gt; を実行するAlpine Linuxコンテナーとして定義します。</target>
        </trans-unit>
        <trans-unit id="afa69edabec810d13a65a3dae4b99ff827c93ebf" translate="yes" xml:space="preserve">
          <source>The attacker does not have access to the timestamp key, which is always held by the Notary Service, and cannot set up a malicious mirror.</source>
          <target state="translated">攻撃者は、公証人サービスが常に保持しているタイムスタンプキーにアクセスできず、悪意のあるミラーを設置することができません。</target>
        </trans-unit>
        <trans-unit id="92bc7e040b0ebdfa21b86e8239695e6807bea67a" translate="yes" xml:space="preserve">
          <source>The authentication method used</source>
          <target state="translated">使用している認証方法</target>
        </trans-unit>
        <trans-unit id="ce7c51376025d7fd3f3793a740d0bdaad6f07e17" translate="yes" xml:space="preserve">
          <source>The base command for the Docker CLI.</source>
          <target state="translated">Docker CLIの基本コマンドです。</target>
        </trans-unit>
        <trans-unit id="12915a5aac3b55411ca3d3305b49845def9ac6b6" translate="yes" xml:space="preserve">
          <source>The base device size can be increased at daemon restart which will allow all future images and containers (based on those new images) to be of the new base device size.</source>
          <target state="translated">ベースデバイスサイズは、将来のすべてのイメージとコンテナ(それらの新しいイメージに基づく)が新しいベースデバイスサイズであることを可能にするデーモン再起動時に増加させることができます。</target>
        </trans-unit>
        <trans-unit id="0703b58e4bf73ac4c5d674ad3512db88784d9285" translate="yes" xml:space="preserve">
          <source>The basic &lt;code&gt;docker run&lt;/code&gt; command takes this form:</source>
          <target state="translated">基本的な &lt;code&gt;docker run&lt;/code&gt; コマンドは次の形式を取ります。</target>
        </trans-unit>
        <trans-unit id="575b79f3ef4a8047ed7a1e057b92fbd05da4bf47" translate="yes" xml:space="preserve">
          <source>The best solution is to perform this check in your application code, both at startup and whenever a connection is lost for any reason. However, if you don&amp;rsquo;t need this level of resilience, you can work around the problem with a wrapper script:</source>
          <target state="translated">最良の解決策は、起動時と何らかの理由で接続が失われたときの両方で、アプリケーションコードでこのチェックを実行することです。ただし、このレベルの復元力が必要ない場合は、ラッパースクリプトで問題を回避できます。</target>
        </trans-unit>
        <trans-unit id="eda46c8cf09024e246ff7c52fa8ece30868a6e32" translate="yes" xml:space="preserve">
          <source>The best way to prevent privilege-escalation attacks from within a container is to configure your container&amp;rsquo;s applications to run as unprivileged users. For containers whose processes must run as the &lt;code&gt;root&lt;/code&gt; user within the container, you can re-map this user to a less-privileged user on the Docker host. The mapped user is assigned a range of UIDs which function within the namespace as normal UIDs from 0 to 65536, but have no privileges on the host machine itself.</source>
          <target state="translated">コンテナー内からの特権昇格攻撃を防ぐ最良の方法は、コンテナーのアプリケーションを特権のないユーザーとして実行するように構成することです。コンテナー内で &lt;code&gt;root&lt;/code&gt; ユーザーとしてプロセスを実行する必要があるコンテナーの場合、このユーザーをDockerホストの特権の低いユーザーに再マップできます。マップされたユーザーには、0〜65536の通常のUIDとしてネームスペース内で機能する一連のUIDが割り当てられますが、ホストマシン自体に対する権限はありません。</target>
        </trans-unit>
        <trans-unit id="f1f474ffbfb080d2299496ab85e3b7e63f8b4aa0" translate="yes" xml:space="preserve">
          <source>The best way to recover from losing the quorum is to bring the failed nodes back online. If you can&amp;rsquo;t do that, the only way to recover from this state is to use the &lt;code&gt;--force-new-cluster&lt;/code&gt; action from a manager node. This removes all managers except the manager the command was run from. The quorum is achieved because there is now only one manager. Promote nodes to be managers until you have the desired number of managers.</source>
          <target state="translated">クォーラムの喪失から回復する最善の方法は、障害が発生したノードをオンラインに戻すことです。それができない場合、この状態から回復する唯一の方法は、マネージャーノードから &lt;code&gt;--force-new-cluster&lt;/code&gt; アクションを使用することです。これにより、コマンドの実行元のマネージャーを除くすべてのマネージャーが削除されます。クォーラムは、マネージャが1人だけになったために達成されました。必要な数のマネージャーになるまで、ノードをマネージャーに昇格させます。</target>
        </trans-unit>
        <trans-unit id="35282ae4886a7519b2b65816e9e41a8dc0bfb991" translate="yes" xml:space="preserve">
          <source>The build is run by the Docker daemon, not by the CLI. The first thing a build process does is send the entire context (recursively) to the daemon. In most cases, it&amp;rsquo;s best to start with an empty directory as context and keep your Dockerfile in that directory. Add only the files needed for building the Dockerfile.</source>
          <target state="translated">ビルドは、CLIではなく、Dockerデーモンによって実行されます。ビルドプロセスが最初に行うことは、コンテキスト全体を（再帰的に）デーモンに送信することです。ほとんどの場合、コンテキストとして空のディレクトリから開始し、Dockerfileをそのディレクトリに保持することをお勧めします。Dockerfileのビルドに必要なファイルのみを追加します。</target>
        </trans-unit>
        <trans-unit id="bd548e026d0cb7646c6abcf18976b5314a6291ee" translate="yes" xml:space="preserve">
          <source>The built-in &lt;code&gt;local&lt;/code&gt; driver on Linux accepts options similar to the linux &lt;code&gt;mount&lt;/code&gt; command. You can provide multiple options by passing the &lt;code&gt;--opt&lt;/code&gt; flag multiple times. Some &lt;code&gt;mount&lt;/code&gt; options (such as the &lt;code&gt;o&lt;/code&gt; option) can take a comma-separated list of options. Complete list of available mount options can be found &lt;a href=&quot;http://man7.org/linux/man-pages/man8/mount.8.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Linux の組み込み &lt;code&gt;local&lt;/code&gt; ドライバーは、linux &lt;code&gt;mount&lt;/code&gt; コマンドと同様のオプションを受け入れます。 &lt;code&gt;--opt&lt;/code&gt; フラグを複数回渡すことで、複数のオプションを提供できます。一部の &lt;code&gt;mount&lt;/code&gt; オプション（ &lt;code&gt;o&lt;/code&gt; オプションなど）は、オプションのコンマ区切りのリストを取ることができます。使用可能なマウントオプションの完全なリストは、&lt;a href=&quot;http://man7.org/linux/man-pages/man8/mount.8.html&quot;&gt;こちらにあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e589f84ba8092374a7adacbfb4c36a6c8dfce2ac" translate="yes" xml:space="preserve">
          <source>The built-in &lt;code&gt;local&lt;/code&gt; driver on Windows does not support any options.</source>
          <target state="translated">Windows の組み込み &lt;code&gt;local&lt;/code&gt; ドライバは、オプションをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="dc6031f34bc45122b3da56b152c8aaed58988503" translate="yes" xml:space="preserve">
          <source>The built-in LXC execution driver, the lxc-conf flag, and API fields have been removed.</source>
          <target state="translated">組み込みのLXC実行ドライバ、lxc-confフラグ、APIフィールドが削除されました。</target>
        </trans-unit>
        <trans-unit id="aaf21ffa56c46051a2828bb0284bd2fce1a4396e" translate="yes" xml:space="preserve">
          <source>The cache for &lt;code&gt;RUN&lt;/code&gt; instructions can be invalidated by &lt;code&gt;ADD&lt;/code&gt; instructions. See &lt;a href=&quot;#add&quot;&gt;below&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;RUN&lt;/code&gt; 命令のキャッシュは、 &lt;code&gt;ADD&lt;/code&gt; 命令によって無効にできます。詳細については、&lt;a href=&quot;#add&quot;&gt;以下&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4e21ac022d083f0dac5c9f4270fdf6df8f9b5274" translate="yes" xml:space="preserve">
          <source>The cache for &lt;code&gt;RUN&lt;/code&gt; instructions isn&amp;rsquo;t invalidated automatically during the next build. The cache for an instruction like &lt;code&gt;RUN apt-get dist-upgrade -y&lt;/code&gt; will be reused during the next build. The cache for &lt;code&gt;RUN&lt;/code&gt; instructions can be invalidated by using the &lt;code&gt;--no-cache&lt;/code&gt; flag, for example &lt;code&gt;docker build --no-cache&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RUN&lt;/code&gt; 命令のキャッシュは、次のビルド時に自動的に無効にはなりません。 &lt;code&gt;RUN apt-get dist-upgrade -y&lt;/code&gt; のような命令のキャッシュは、次のビルド時に再利用されます。 &lt;code&gt;RUN&lt;/code&gt; 命令のキャッシュは、-- &lt;code&gt;--no-cache&lt;/code&gt; フラグを使用して無効化できます（例： &lt;code&gt;docker build --no-cache&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="387890bfaa5ca05d821fa5a3b5d1ee0a6cfad608" translate="yes" xml:space="preserve">
          <source>The client can now immediately download the latest metadata from the server, using the still-valid bearer token to connect. Notary server only needs to obtain the metadata from the database, since none of the metadata has expired.</source>
          <target state="translated">クライアントは、まだ有効なベアラートークンを使用して接続することで、サーバから最新のメタデータを直ちにダウンロードすることができるようになりました。公証人サーバは、メタデータの有効期限が切れていないため、データベースからメタデータを取得するだけで済みます。</target>
        </trans-unit>
        <trans-unit id="18d5ec6bc9d750748f1efde7c61a2989b641b66e" translate="yes" xml:space="preserve">
          <source>The client logs in to the authorization server via basic auth over HTTPS, obtain a bearer token, and then present the token to Notary server on future requests.</source>
          <target state="translated">クライアントは、HTTPS 上の基本認証で認証サーバにログインし、ベアラートークンを取得した後、今後のリクエスト時にトークンをNotaryサーバに提示します。</target>
        </trans-unit>
        <trans-unit id="008a74ce549151e51ed0e972fe5969ff680c6df9" translate="yes" xml:space="preserve">
          <source>The cluster management and orchestration features embedded in the Docker Engine are built using &lt;a href=&quot;https://github.com/docker/swarmkit/&quot;&gt;swarmkit&lt;/a&gt;. Swarmkit is a separate project which implements Docker&amp;rsquo;s orchestration layer and is used directly within Docker.</source>
          <target state="translated">Docker Engineに組み込まれたクラスター管理およびオーケストレーション機能は、&lt;a href=&quot;https://github.com/docker/swarmkit/&quot;&gt;swarmkit&lt;/a&gt;を使用して構築されています。Swarmkitは、Dockerのオーケストレーションレイヤーを実装する独立したプロジェクトで、Docker内で直接使用されます。</target>
        </trans-unit>
        <trans-unit id="d9d803a4a4aa2732e3815dd3fec6ac2441d70eb5" translate="yes" xml:space="preserve">
          <source>The command &lt;a href=&quot;../reference/down/index&quot;&gt;&lt;code&gt;docker-compose down&lt;/code&gt;&lt;/a&gt; removes the containers and default network, but preserves your WordPress database.</source>
          <target state="translated">コマンド&lt;a href=&quot;../reference/down/index&quot;&gt; &lt;code&gt;docker-compose down&lt;/code&gt; &lt;/a&gt;はコンテナーとデフォルトのネットワークを削除しますが、WordPressデータベースは保持します。</target>
        </trans-unit>
        <trans-unit id="d103dac69f74e6da15998f384bbbf98c322bd326" translate="yes" xml:space="preserve">
          <source>The command &lt;code&gt;docker-compose down --volumes&lt;/code&gt; removes the containers, default network, and the WordPress database.</source>
          <target state="translated">コマンド &lt;code&gt;docker-compose down --volumes&lt;/code&gt; は、コンテナー、デフォルトネットワーク、およびWordPressデータベースを削除します。</target>
        </trans-unit>
        <trans-unit id="a1ded79620e6d1ae5604250cb4f5ac48fde1be04" translate="yes" xml:space="preserve">
          <source>The command after the &lt;code&gt;CMD&lt;/code&gt; keyword can be either a shell command (e.g. &lt;code&gt;HEALTHCHECK CMD /bin/check-running&lt;/code&gt;) or an &lt;em&gt;exec&lt;/em&gt; array (as with other Dockerfile commands; see e.g. &lt;code&gt;ENTRYPOINT&lt;/code&gt; for details).</source>
          <target state="translated">&lt;code&gt;CMD&lt;/code&gt; キーワードの後のコマンドは、シェルコマンド（例： &lt;code&gt;HEALTHCHECK CMD /bin/check-running&lt;/code&gt; ）または&lt;em&gt;exec&lt;/em&gt;配列（他のDockerfileコマンドと同様;詳細については、例 &lt;code&gt;ENTRYPOINT&lt;/code&gt; を参照）のいずれかです。</target>
        </trans-unit>
        <trans-unit id="a4ad35310c7aa7c67030bd46a3f2c137ecbcce0e" translate="yes" xml:space="preserve">
          <source>The command can also be a list, in a manner similar to &lt;a href=&quot;../../../engine/reference/builder/index#cmd&quot;&gt;dockerfile&lt;/a&gt;:</source>
          <target state="translated">コマンドは、&lt;a href=&quot;../../../engine/reference/builder/index#cmd&quot;&gt;dockerfile&lt;/a&gt;と同様の方法でリストにすることもできます。</target>
        </trans-unit>
        <trans-unit id="eb23a07d84e630a5e8757111b76c8800f31539ec" translate="yes" xml:space="preserve">
          <source>The command can also be a list, in a manner similar to &lt;a href=&quot;../../engine/reference/builder/index#cmd&quot;&gt;dockerfile&lt;/a&gt;:</source>
          <target state="translated">コマンドは、&lt;a href=&quot;../../engine/reference/builder/index#cmd&quot;&gt;dockerfile&lt;/a&gt;と同様の方法でリストにすることもできます。</target>
        </trans-unit>
        <trans-unit id="0956efd491b81018147a694d5d0b1c6091fab3ac" translate="yes" xml:space="preserve">
          <source>The command invoked by docker will be:</source>
          <target state="translated">dockerで起動したコマンドになります。</target>
        </trans-unit>
        <trans-unit id="dae172cbb22e837995c3df1ccd985a845c6b4d13" translate="yes" xml:space="preserve">
          <source>The command requires &lt;code&gt;SRC_PATH&lt;/code&gt; and &lt;code&gt;DEST_PATH&lt;/code&gt; to exist according to the above rules. If &lt;code&gt;SRC_PATH&lt;/code&gt; is local and is a symbolic link, the symbolic link, not the target, is copied by default. To copy the link target and not the link, specify the &lt;code&gt;-L&lt;/code&gt; option.</source>
          <target state="translated">このコマンドでは、上記の規則に従って &lt;code&gt;SRC_PATH&lt;/code&gt; および &lt;code&gt;DEST_PATH&lt;/code&gt; が存在する必要があります。場合 &lt;code&gt;SRC_PATH&lt;/code&gt; はローカルであり、シンボリックリンク、シンボリックリンクではなく、ターゲットである、デフォルトでコピーされます。リンクではなくリンクターゲットをコピーするには、 &lt;code&gt;-L&lt;/code&gt; オプションを指定します。</target>
        </trans-unit>
        <trans-unit id="0d58d57885d29e1a2606150c96168372661b385e" translate="yes" xml:space="preserve">
          <source>The command started using &lt;code&gt;docker exec&lt;/code&gt; only runs while the container&amp;rsquo;s primary process (&lt;code&gt;PID 1&lt;/code&gt;) is running, and it is not restarted if the container is restarted.</source>
          <target state="translated">&lt;code&gt;docker exec&lt;/code&gt; を使用して開始されたコマンドは、コンテナーのプライマリプロセス（ &lt;code&gt;PID 1&lt;/code&gt; ）の実行中にのみ実行され、コンテナーが再起動されても再起動されません。</target>
        </trans-unit>
        <trans-unit id="f0a72ceb0f35e23bf2d1761717be1222bd1f2b70" translate="yes" xml:space="preserve">
          <source>The command&amp;rsquo;s exit status indicates the health status of the container. The possible values are:</source>
          <target state="translated">コマンドの終了ステータスは、コンテナのヘルスステータスを示します。可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="d9a93e6beea86e2782016f21845beb9cd6afbccd" translate="yes" xml:space="preserve">
          <source>The commands to configure your shell differ depending on whether you are Mac, Linux, or Windows, so examples of each are shown on the tabs below.</source>
          <target state="translated">シェルを設定するコマンドは、Mac、Linux、Windowsのいずれかによって異なりますので、それぞれの例を以下のタブに示します。</target>
        </trans-unit>
        <trans-unit id="1fcf81cd2c19a4aa739ef6f89bede8ea8de9d5ea" translate="yes" xml:space="preserve">
          <source>The commit operation will not include any data contained in volumes mounted inside the container.</source>
          <target state="translated">コミット操作には、コンテナ内にマウントされたボリュームに含まれるデータは一切含まれません。</target>
        </trans-unit>
        <trans-unit id="83a0a167e28d8f87b6757f8a0015a4c55e5a2769" translate="yes" xml:space="preserve">
          <source>The complete list of deprecated features can be found on the &lt;a href=&quot;deprecated/index&quot;&gt;Deprecated Features page&lt;/a&gt;.</source>
          <target state="translated">廃止された機能の完全なリストは、&lt;a href=&quot;deprecated/index&quot;&gt;廃止&lt;/a&gt;された機能のページにあります。</target>
        </trans-unit>
        <trans-unit id="468d9a29501077e3aa8dde888309cbb4c0b42e6a" translate="yes" xml:space="preserve">
          <source>The config.json file</source>
          <target state="translated">config.jsonファイル</target>
        </trans-unit>
        <trans-unit id="63580fe0751f0a80b7f41e5612dc01cfec484ac4" translate="yes" xml:space="preserve">
          <source>The configuration file for Notary client normally resides at &lt;code&gt;~/.notary/config.json&lt;/code&gt;, but the path to a different configuration file can be specified using the &lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--configFile&lt;/code&gt; command line flag.</source>
          <target state="translated">Notaryクライアントの構成ファイルは通常 &lt;code&gt;~/.notary/config.json&lt;/code&gt; にありますが、 &lt;code&gt;-c&lt;/code&gt; または &lt;code&gt;--configFile&lt;/code&gt; コマンドラインフラグを使用して別の構成ファイルへのパスを指定できます。</target>
        </trans-unit>
        <trans-unit id="42aecee7e3d42c214cbe47500065d6827ebee111" translate="yes" xml:space="preserve">
          <source>The configuration in the &lt;code&gt;docker-compose.override.yml&lt;/code&gt; file is applied over and in addition to the values in the &lt;code&gt;docker-compose.yml&lt;/code&gt; file.</source>
          <target state="translated">で構成 &lt;code&gt;docker-compose.override.yml&lt;/code&gt; ファイルが上との値に加えて適用される &lt;code&gt;docker-compose.yml&lt;/code&gt; ファイル。</target>
        </trans-unit>
        <trans-unit id="06a3d484626f8819afe1dc776cba1d83d88a0606" translate="yes" xml:space="preserve">
          <source>The consistency requirements for the mount; one of</source>
          <target state="translated">マウントのための一貫性の要件;のいずれか</target>
        </trans-unit>
        <trans-unit id="4f609b0747ecf4db5b68bbca89691e8478935849" translate="yes" xml:space="preserve">
          <source>The container can have a different logging driver than the Docker daemon. Use the &lt;code&gt;--log-driver=VALUE&lt;/code&gt; with the &lt;code&gt;docker run&lt;/code&gt; command to configure the container&amp;rsquo;s logging driver. The following options are supported:</source>
          <target state="translated">コンテナーには、Dockerデーモンとは異なるロギングドライバーを含めることができます。使用 &lt;code&gt;--log-driver=VALUE&lt;/code&gt; との &lt;code&gt;docker run&lt;/code&gt; コンテナのログドライバを設定するコマンドを。次のオプションがサポートされています。</target>
        </trans-unit>
        <trans-unit id="1e120a80067063699b6c9309ae85bbe648e64ec8" translate="yes" xml:space="preserve">
          <source>The container can use as much memory as it needs. The memory reservation setting ensures the container doesn&amp;rsquo;t consume too much memory for long time, because every memory reclaim shrinks the container&amp;rsquo;s consumption to the reservation.</source>
          <target state="translated">コンテナは必要なだけのメモリを使用できます。メモリ予約の設定により、すべてのメモリ再利用によりコンテナの消費が予約に縮小されるため、コンテナが長時間にわたってメモリを過剰に消費しないことが保証されます。</target>
        </trans-unit>
        <trans-unit id="6c41c4e059c0f6d5b08e701882d43028ba6a1c76" translate="yes" xml:space="preserve">
          <source>The container creation endpoint (&lt;code&gt;/containers/create&lt;/code&gt;) accepts a &lt;code&gt;VolumeDriver&lt;/code&gt; field of type &lt;code&gt;string&lt;/code&gt; allowing to specify the name of the driver. If not specified, it defaults to &lt;code&gt;&quot;local&quot;&lt;/code&gt; (the default driver for local volumes).</source>
          <target state="translated">コンテナー作成エンドポイント（ &lt;code&gt;/containers/create&lt;/code&gt; ）は、ドライバーの名前を指定できる &lt;code&gt;string&lt;/code&gt; 型の &lt;code&gt;VolumeDriver&lt;/code&gt; フィールドを受け入れます。指定しない場合、デフォルトで &lt;code&gt;&quot;local&quot;&lt;/code&gt; （ローカルボリュームのデフォルトドライバー）になります。</target>
        </trans-unit>
        <trans-unit id="c5fc2a7434f444d2bf6be0610e195a7bb56b36c4" translate="yes" xml:space="preserve">
          <source>The container has unlimited memory which can cause the host to run out memory and require killing system processes to free memory. The &lt;code&gt;--oom-score-adj&lt;/code&gt; parameter can be changed to select the priority of which containers will be killed when the system is out of memory, with negative scores making them less likely to be killed, and positive scores more likely.</source>
          <target state="translated">コンテナには無制限のメモリがあり、ホストがメモリを使い果たし、システムプロセスを強制終了してメモリを解放する必要があります。 &lt;code&gt;--oom-score-adj&lt;/code&gt; パラメーターを変更して、システムのメモリーが不足したときに強制終了するコンテナーの優先度を選択できます。負のスコアを指定すると、コンテナーが強制終了される可能性が低くなり、正のスコアを指定できる可能性が高くなります。</target>
        </trans-unit>
        <trans-unit id="333084b3793f80a3fdbaa6d2ac4ef96b2a7ad2c4" translate="yes" xml:space="preserve">
          <source>The contents of the source tree, with conflicts resolved in favor of &amp;ldquo;2.&amp;rdquo; on a file-by-file basis.</source>
          <target state="translated">ソースツリーの内容。競合は「2」を優先して解決されました。ファイルごとに。</target>
        </trans-unit>
        <trans-unit id="cbe1954333dba969dd75128ef1a9d14d906afd02" translate="yes" xml:space="preserve">
          <source>The contents of those fields are ignored by Compose, but they can be inserted in your resource definitions using &lt;a href=&quot;http://www.yaml.org/spec/1.2/spec.html#id2765878&quot;&gt;YAML anchors&lt;/a&gt;. For example, if you want several of your services to use the same logging configuration:</source>
          <target state="translated">これらのフィールドの内容はComposeでは無視されますが、&lt;a href=&quot;http://www.yaml.org/spec/1.2/spec.html#id2765878&quot;&gt;YAMLアンカー&lt;/a&gt;を使用してリソース定義に挿入できます。たとえば、複数のサービスで同じロギング構成を使用する場合：</target>
        </trans-unit>
        <trans-unit id="55bb6aa9bd31acce0a500a34fa7ad10a92eb38dc" translate="yes" xml:space="preserve">
          <source>The corresponding network configuration in the &lt;a href=&quot;#network-configuration-reference&quot;&gt;top-level networks section&lt;/a&gt; must have an &lt;code&gt;ipam&lt;/code&gt; block with subnet and gateway configurations covering each static address. If IPv6 addressing is desired, the &lt;a href=&quot;#enableipv6&quot;&gt;&lt;code&gt;enable_ipv6&lt;/code&gt;&lt;/a&gt; option must be set.</source>
          <target state="translated">&lt;a href=&quot;#network-configuration-reference&quot;&gt;トップレベルネットワークセクション&lt;/a&gt;の対応するネットワーク構成には、各静的アドレスをカバーするサブネットおよびゲートウェイ構成を含む &lt;code&gt;ipam&lt;/code&gt; ブロックが必要です。IPv6アドレッシングが必要な場合は、&lt;a href=&quot;#enableipv6&quot;&gt; &lt;code&gt;enable_ipv6&lt;/code&gt; &lt;/a&gt;オプションを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="586d71b6ade2d35dd85189494da13a3579476751" translate="yes" xml:space="preserve">
          <source>The corresponding network configuration in the &lt;a href=&quot;#network-configuration-reference&quot;&gt;top-level networks section&lt;/a&gt; must have an &lt;code&gt;ipam&lt;/code&gt; block with subnet configurations covering each static address.</source>
          <target state="translated">&lt;a href=&quot;#network-configuration-reference&quot;&gt;トップレベルネットワークセクション&lt;/a&gt;の対応するネットワーク構成には、各静的アドレスをカバーするサブネット構成を持つ &lt;code&gt;ipam&lt;/code&gt; ブロックが必要です。</target>
        </trans-unit>
        <trans-unit id="fad571b286cbf1b134860d78c384eaf61397a5ea" translate="yes" xml:space="preserve">
          <source>The current expected use case is to advertise NVIDIA GPUs so that services requesting &lt;code&gt;NVIDIA-GPU=[0-16]&lt;/code&gt; can land on a node that has enough GPUs for the task to run.</source>
          <target state="translated">現在予想される使用例は、NVIDIA GPUをアドバタイズして、 &lt;code&gt;NVIDIA-GPU=[0-16]&lt;/code&gt; を要求するサービスが、タスクを実行するのに十分なGPUを持つノードに到達できるようにすることです。</target>
        </trans-unit>
        <trans-unit id="bcb1c15d1b89c3f94e8dabe5ed1066e78563ff31" translate="yes" xml:space="preserve">
          <source>The current release stage, such as &lt;code&gt;&quot;production&quot;&lt;/code&gt;. You can use this value to filter errors in the Bugsnag dashboard.</source>
          <target state="translated">&lt;code&gt;&quot;production&quot;&lt;/code&gt; などの現在のリリースステージ。この値を使用して、Bugsnagダッシュボードでエラーをフィルタリングできます。</target>
        </trans-unit>
        <trans-unit id="3c1993b21d61bb6110c17c440c31c9f2b3c920bb" translate="yes" xml:space="preserve">
          <source>The currently supported cluster store options are:</source>
          <target state="translated">現在サポートされているクラスタストアのオプションは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="8bc214496669aa244b1cc5d85b13d7d6cb05c343" translate="yes" xml:space="preserve">
          <source>The currently supported filters are:</source>
          <target state="translated">現在サポートされているフィルタは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="d4b2d4d7c5b15f6ba647817c9d9d938449c46c97" translate="yes" xml:space="preserve">
          <source>The daemon is also potentially vulnerable to other inputs, such as image loading from either disk with &lt;code&gt;docker load&lt;/code&gt;, or from the network with &lt;code&gt;docker pull&lt;/code&gt;. As of Docker 1.3.2, images are now extracted in a chrooted subprocess on Linux/Unix platforms, being the first-step in a wider effort toward privilege separation. As of Docker 1.10.0, all images are stored and accessed by the cryptographic checksums of their contents, limiting the possibility of an attacker causing a collision with an existing image.</source>
          <target state="translated">デーモンは、 &lt;code&gt;docker load&lt;/code&gt; を使用してディスクから、または &lt;code&gt;docker pull&lt;/code&gt; を使用してネットワークからイメージをロードするなど、他の入力に対しても潜在的に脆弱です。Docker 1.3.2以降、イメージはLinux / Unixプラットフォーム上のchrootされたサブプロセスで抽出されるようになり、権限分離への幅広い取り組みの最初のステップとなっています。Docker 1.10.0以降では、すべてのイメージが格納され、その内容の暗号化チェックサムによってアクセスされるため、攻撃者が既存のイメージとの衝突を引き起こす可能性が制限されます。</target>
        </trans-unit>
        <trans-unit id="1b40a58c33ae6973207a461d4362662281b137fb" translate="yes" xml:space="preserve">
          <source>The daemon is moved to a separate binary (&lt;code&gt;dockerd&lt;/code&gt;), and should be used instead.</source>
          <target state="translated">デーモンは別のバイナリ（ &lt;code&gt;dockerd&lt;/code&gt; ）に移動され、代わりに使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="3b7c8c7558a775a2edcd115a970ad32948322ddb" translate="yes" xml:space="preserve">
          <source>The daemon uses &lt;a href=&quot;https://github.com/docker/libkv/&quot;&gt;libkv&lt;/a&gt; to advertise the node within the cluster. Some key-value backends support mutual TLS. To configure the client TLS settings used by the daemon can be configured using the &lt;code&gt;--cluster-store-opt&lt;/code&gt; flag, specifying the paths to PEM encoded files. For example:</source>
          <target state="translated">デーモンは&lt;a href=&quot;https://github.com/docker/libkv/&quot;&gt;libkv&lt;/a&gt;を使用して、クラスター内のノードを通知します。一部のKey-Valueバックエンドは相互TLSをサポートしています。デーモンが使用するクライアントTLS設定を構成するには、 &lt;code&gt;--cluster-store-opt&lt;/code&gt; フラグを使用して、PEMエンコードファイルへのパスを指定します。例えば：</target>
        </trans-unit>
        <trans-unit id="10c61591c638186cd78e6bcb2f76d135a645641c" translate="yes" xml:space="preserve">
          <source>The data file is where the images are stored and the metadata file is where the meta data regarding those images are stored. When run for the first time Docker allocates a certain amount of data space and meta data space from the space available on the volume where &lt;code&gt;/var/lib/docker&lt;/code&gt; is mounted.</source>
          <target state="translated">データファイルは画像が保存される場所で、メタデータファイルはそれらの画像に関するメタデータが保存される場所です。Dockerを初めて実行すると、 &lt;code&gt;/var/lib/docker&lt;/code&gt; がマウントされているボリュームで使用可能なスペースから、一定量のデータスペースとメタデータスペースが割り当てられます。</target>
        </trans-unit>
        <trans-unit id="6e1b782dc4239cc2ee12f8ada2116b7cec6452c5" translate="yes" xml:space="preserve">
          <source>The db service uses both secrets, and the wordpress is using one.</source>
          <target state="translated">dbサービスは両方の秘密を使っていて、ワードプレスは片方を使っています。</target>
        </trans-unit>
        <trans-unit id="88b708d10b5bb132b812231de52a9a57fd050d57" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;docker images&lt;/code&gt; will show all top level images, their repository and tags, and their size.</source>
          <target state="translated">デフォルトの &lt;code&gt;docker images&lt;/code&gt; には、すべての最上位のイメージ、それらのリポジトリとタグ、およびそれらのサイズが表示されます。</target>
        </trans-unit>
        <trans-unit id="e751a256a79a508fc6a8dac6bc7ba71dd7cb189a" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;seccomp&lt;/code&gt; profile provides a sane default for running containers with seccomp and disables around 44 system calls out of 300+. It is moderately protective while providing wide application compatibility. The default Docker profile can be found &lt;a href=&quot;https://github.com/moby/moby/blob/master/profiles/seccomp/default.json&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">デフォルトの &lt;code&gt;seccomp&lt;/code&gt; プロファイルは、seccompでコンテナーを実行するための適切なデフォルトを提供し、300以上のうち約44のシステムコールを無効にします。幅広いアプリケーション互換性を提供しながら、適度に保護されています。デフォルトのDockerプロファイルは&lt;a href=&quot;https://github.com/moby/moby/blob/master/profiles/seccomp/default.json&quot;&gt;ここにあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02e46ce6640ecc061d7753130fd0e3ce54b962ca" translate="yes" xml:space="preserve">
          <source>The default CPU CFS (Completely Fair Scheduler) period is 100ms. We can use &lt;code&gt;--cpu-period&lt;/code&gt; to set the period of CPUs to limit the container&amp;rsquo;s CPU usage. And usually &lt;code&gt;--cpu-period&lt;/code&gt; should work with &lt;code&gt;--cpu-quota&lt;/code&gt;.</source>
          <target state="translated">デフォルトのCPU CFS（Completely Fair Scheduler）期間は100msです。 &lt;code&gt;--cpu-period&lt;/code&gt; を使用してCPUの期間を設定し、コンテナーのCPU使用率を制限できます。そして、通常 &lt;code&gt;--cpu-period&lt;/code&gt; は &lt;code&gt;--cpu-quota&lt;/code&gt; と一緒に機能します。</target>
        </trans-unit>
        <trans-unit id="835a0981f4ea865680edc5b2da7de4c21a68744c" translate="yes" xml:space="preserve">
          <source>The default SSH username for the default AMIs is &lt;code&gt;ubuntu&lt;/code&gt;.</source>
          <target state="translated">デフォルトのAMIのデフォルトのSSHユーザー名は &lt;code&gt;ubuntu&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="59cdf16cd5e29f0ac54596e99e587be9a13ea86c" translate="yes" xml:space="preserve">
          <source>The default driver &lt;a href=&quot;https://docs.docker.com/config/containers/logging#json-file&quot;&gt;json-file&lt;/a&gt;, has options to limit the amount of logs stored. To do this, use a key-value pair for maximum storage size and maximum number of files:</source>
          <target state="translated">デフォルトのドライバー&lt;a href=&quot;https://docs.docker.com/config/containers/logging#json-file&quot;&gt;json-file&lt;/a&gt;には、保存されるログの量を制限するオプションがあります。これを行うには、最大ストレージサイズと最大ファイル数のキーと値のペアを使用します。</target>
        </trans-unit>
        <trans-unit id="ce72086dcefd05b0b3815fadb5d6794a3874059b" translate="yes" xml:space="preserve">
          <source>The default driver depends on how the Docker Engine you&amp;rsquo;re using is configured, but in most instances it is &lt;code&gt;bridge&lt;/code&gt; on a single host and &lt;code&gt;overlay&lt;/code&gt; on a Swarm.</source>
          <target state="translated">デフォルトのドライバーは、使用しているDocker Engineの構成方法によって異なりますが、ほとんどの場合、単一のホスト上の &lt;code&gt;bridge&lt;/code&gt; であり、Swarm上の &lt;code&gt;overlay&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c7f4b3f884940abe279914db7dec9662f4803c53" translate="yes" xml:space="preserve">
          <source>The default for this option will also be changed accordingly for &lt;code&gt;docker service rollback&lt;/code&gt; and &lt;code&gt;docker service scale&lt;/code&gt; in Docker 17.10.</source>
          <target state="translated">このオプションのデフォルトも、Docker 17.10の &lt;code&gt;docker service rollback&lt;/code&gt; と &lt;code&gt;docker service scale&lt;/code&gt; に応じて変更されます。</target>
        </trans-unit>
        <trans-unit id="5a6dfa1d042a5a81b6bf6160ce5c49ad7812c75e" translate="yes" xml:space="preserve">
          <source>The default format is as follows:</source>
          <target state="translated">デフォルトのフォーマットは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="5c1cb315610bf195b7d26211262a21ff2fe2bdfe" translate="yes" xml:space="preserve">
          <source>The default init binary that is used is &lt;a href=&quot;https://github.com/krallin/tini&quot;&gt;Tini&lt;/a&gt;, and is installed in &lt;code&gt;/usr/libexec/docker-init&lt;/code&gt; on the daemon host. You can configure the daemon to use a custom init binary through the &lt;a href=&quot;../../../engine/reference/commandline/dockerd/index#daemon-configuration-file&quot;&gt;&lt;code&gt;init-path&lt;/code&gt; configuration option&lt;/a&gt;.</source>
          <target state="translated">使用されるデフォルトのinitバイナリは&lt;a href=&quot;https://github.com/krallin/tini&quot;&gt;Tini&lt;/a&gt;であり、デーモンホストの &lt;code&gt;/usr/libexec/docker-init&lt;/code&gt; にインストールされます。&lt;a href=&quot;../../../engine/reference/commandline/dockerd/index#daemon-configuration-file&quot;&gt; &lt;code&gt;init-path&lt;/code&gt; 設定オプション&lt;/a&gt;を使用して、カスタムのinitバイナリを使用するようにデーモンを設定できます。</target>
        </trans-unit>
        <trans-unit id="f3a2403daddc36ae40af72ba1509df0c525c4f7a" translate="yes" xml:space="preserve">
          <source>The default init binary that is used is &lt;a href=&quot;https://github.com/krallin/tini&quot;&gt;Tini&lt;/a&gt;, and is installed in &lt;code&gt;/usr/libexec/docker-init&lt;/code&gt; on the daemon host. You can configure the daemon to use a custom init binary through the &lt;a href=&quot;../../engine/reference/commandline/dockerd/index#daemon-configuration-file&quot;&gt;&lt;code&gt;init-path&lt;/code&gt; configuration option&lt;/a&gt;.</source>
          <target state="translated">使用されるデフォルトのinitバイナリは&lt;a href=&quot;https://github.com/krallin/tini&quot;&gt;Tini&lt;/a&gt;であり、デーモンホストの &lt;code&gt;/usr/libexec/docker-init&lt;/code&gt; にインストールされます。&lt;a href=&quot;../../engine/reference/commandline/dockerd/index#daemon-configuration-file&quot;&gt; &lt;code&gt;init-path&lt;/code&gt; 設定オプション&lt;/a&gt;を使用して、カスタムのinitバイナリを使用するようにデーモンを設定できます。</target>
        </trans-unit>
        <trans-unit id="6b46500a2cf3200d1811ab7e8c81dc7096ac8b4f" translate="yes" xml:space="preserve">
          <source>The default init process used is the first &lt;code&gt;docker-init&lt;/code&gt; executable found in the system path of the Docker daemon process. This &lt;code&gt;docker-init&lt;/code&gt; binary, included in the default installation, is backed by &lt;a href=&quot;https://github.com/krallin/tini&quot;&gt;tini&lt;/a&gt;.</source>
          <target state="translated">使用されるデフォルトのinitプロセスは、Dockerデーモンプロセスのシステムパスにある最初の &lt;code&gt;docker-init&lt;/code&gt; 実行可能ファイルです。デフォルトのインストールに含まれているこの &lt;code&gt;docker-init&lt;/code&gt; バイナリは、&lt;a href=&quot;https://github.com/krallin/tini&quot;&gt;tini&lt;/a&gt;によってサポートされています。</target>
        </trans-unit>
        <trans-unit id="2d29444d706667623d7f48549919ccd31c44e5c9" translate="yes" xml:space="preserve">
          <source>The default isolation on Windows server operating systems is &lt;code&gt;process&lt;/code&gt;. The default isolation on Windows client operating systems is &lt;code&gt;hyperv&lt;/code&gt;. An attempt to start a container on a client operating system older than Windows 10 1809 with &lt;code&gt;--isolation process&lt;/code&gt; will fail.</source>
          <target state="translated">Windowsサーバーオペレーティングシステムでのデフォルトの分離は &lt;code&gt;process&lt;/code&gt; です。Windowsクライアントオペレーティングシステムのデフォルトの分離は、 &lt;code&gt;hyperv&lt;/code&gt; です。 &lt;code&gt;--isolation process&lt;/code&gt; を使用してWindows 10 1809より古いクライアントオペレーティングシステムでコンテナーを起動しようとすると失敗します。</target>
        </trans-unit>
        <trans-unit id="1003ad4f0dfb7841d434646ca9e28a70873641dc" translate="yes" xml:space="preserve">
          <source>The default location of the configuration file on Linux is &lt;code&gt;/etc/docker/daemon.json&lt;/code&gt;. The &lt;code&gt;--config-file&lt;/code&gt; flag can be used to specify a non-default location.</source>
          <target state="translated">Linuxでの構成ファイルのデフォルトの場所は &lt;code&gt;/etc/docker/daemon.json&lt;/code&gt; です。 &lt;code&gt;--config-file&lt;/code&gt; フラグがデフォルト以外の場所を指定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="946fe86eb52848a137c16603863073ed3192847f" translate="yes" xml:space="preserve">
          <source>The default location of the configuration file on Windows is &lt;code&gt;%programdata%\docker\config\daemon.json&lt;/code&gt;. The &lt;code&gt;--config-file&lt;/code&gt; flag can be used to specify a non-default location.</source>
          <target state="translated">Windowsでの構成ファイルのデフォルトの場所は &lt;code&gt;%programdata%\docker\config\daemon.json&lt;/code&gt; です。 &lt;code&gt;--config-file&lt;/code&gt; フラグがデフォルト以外の場所を指定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="1d77799e03e62749f4abf25bccc750b066c07d78" translate="yes" xml:space="preserve">
          <source>The default network, if one is used</source>
          <target state="translated">デフォルトのネットワーク (使用されている場合)</target>
        </trans-unit>
        <trans-unit id="098406d500f9e645da44a793a6233d0cd7c06c69" translate="yes" xml:space="preserve">
          <source>The default path for a Compose file is &lt;code&gt;./docker-compose.yml&lt;/code&gt;.</source>
          <target state="translated">Composeファイルのデフォルトのパスは &lt;code&gt;./docker-compose.yml&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fb8857f4a0cda00b382ca084d9bef1fbf8561297" translate="yes" xml:space="preserve">
          <source>The default project name is the basename of the project directory. You can set a custom project name by using the &lt;a href=&quot;reference/overview/index&quot;&gt;&lt;code&gt;-p&lt;/code&gt; command line option&lt;/a&gt; or the &lt;a href=&quot;reference/envvars/index#compose-project-name&quot;&gt;&lt;code&gt;COMPOSE_PROJECT_NAME&lt;/code&gt; environment variable&lt;/a&gt;.</source>
          <target state="translated">デフォルトのプロジェクト名は、プロジェクトディレクトリのベース名です。&lt;a href=&quot;reference/overview/index&quot;&gt; &lt;code&gt;-p&lt;/code&gt; コマンドラインオプション&lt;/a&gt;または&lt;a href=&quot;reference/envvars/index#compose-project-name&quot;&gt; &lt;code&gt;COMPOSE_PROJECT_NAME&lt;/code&gt; 環境変数&lt;/a&gt;を使用して、カスタムプロジェクト名を設定できます。</target>
        </trans-unit>
        <trans-unit id="e933c3002f8889546c0ab43e358c6c7eb91f636a" translate="yes" xml:space="preserve">
          <source>The default seccomp profile will adjust to the selected capabilities, in order to allow use of facilities allowed by the capabilities, so you should not have to adjust this, since Docker 1.12. In Docker 1.10 and 1.11 this did not happen and it may be necessary to use a custom seccomp profile or use &lt;code&gt;--security-opt seccomp=unconfined&lt;/code&gt; when adding capabilities.</source>
          <target state="translated">デフォルトのseccompプロファイルは、機能によって許可された機能の使用を許可するために、選択された機能に合わせて調整されるため、Docker 1.12以降ではこれを調整する必要はありません。Docker 1.10と1.11では、これは発生せず、カスタムのseccompプロファイルを使用するか、機能を追加するときに &lt;code&gt;--security-opt seccomp=unconfined&lt;/code&gt; を使用する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="1c1e388da7ec0a0a04b987272aedc0229521e525" translate="yes" xml:space="preserve">
          <source>The default shell for the &lt;em&gt;shell&lt;/em&gt; form can be changed using the &lt;code&gt;SHELL&lt;/code&gt; command.</source>
          <target state="translated">&lt;em&gt;シェル&lt;/em&gt;フォームのデフォルトシェルは、 &lt;code&gt;SHELL&lt;/code&gt; コマンドを使用して変更できます。</target>
        </trans-unit>
        <trans-unit id="79f1b805588ca93f12c5151f467a7d3172574cbb" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;--cpus&lt;/code&gt; is &lt;code&gt;0.000&lt;/code&gt;, which means there is no limit.</source>
          <target state="translated">&lt;code&gt;--cpus&lt;/code&gt; のデフォルト値は &lt;code&gt;0.000&lt;/code&gt; です。これは、制限がないことを意味します。</target>
        </trans-unit>
        <trans-unit id="e4a3f2aa0f06fe9f002e0533949e71bd65c91612" translate="yes" xml:space="preserve">
          <source>The default value is json-file.</source>
          <target state="translated">デフォルト値は json-file です。</target>
        </trans-unit>
        <trans-unit id="43c639c5f9940e65b93aed2edfa229895d878456" translate="yes" xml:space="preserve">
          <source>The default working directory for running binaries within a container is the root directory (&lt;code&gt;/&lt;/code&gt;), but the developer can set a different default with the Dockerfile &lt;code&gt;WORKDIR&lt;/code&gt; command. The operator can override this with:</source>
          <target state="translated">コンテナー内でバイナリーを実行するためのデフォルトの作業ディレクトリーはルート・ディレクトリー（ &lt;code&gt;/&lt;/code&gt; ）ですが、開発者はDockerfile &lt;code&gt;WORKDIR&lt;/code&gt; コマンドを使用して別のデフォルトを設定できます。オペレーターはこれを次のようにオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="9f08a74fcb0c137793370ee0cf17b818a97b0e38" translate="yes" xml:space="preserve">
          <source>The delegation (an online) key passphrase</source>
          <target state="translated">委任(オンライン)のキーパスフレーズ</target>
        </trans-unit>
        <trans-unit id="4b17714a5567df9952e53a2f8facd472db67ca19" translate="yes" xml:space="preserve">
          <source>The developer can set a default user to run the first process with the Dockerfile &lt;code&gt;USER&lt;/code&gt; instruction. When starting a container, the operator can override the &lt;code&gt;USER&lt;/code&gt; instruction by passing the &lt;code&gt;-u&lt;/code&gt; option.</source>
          <target state="translated">開発者は、Dockerfile &lt;code&gt;USER&lt;/code&gt; 命令を使用して最初のプロセスを実行するようにデフォルトユーザーを設定できます。コンテナーを開始するとき、オペレーターは &lt;code&gt;-u&lt;/code&gt; オプションを渡して &lt;code&gt;USER&lt;/code&gt; 命令をオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="05147ac693f70511d9e9341898fa849f2c06b771" translate="yes" xml:space="preserve">
          <source>The diagram below illustrates how manager nodes and worker nodes encrypt communications using a minimum of TLS 1.2.</source>
          <target state="translated">次の図は、マネージャノードとワーカーノードが、最低限のTLS 1.2を使用して通信を暗号化する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="cb288d1103743acfb8d43d7f42964ab0c718c9e1" translate="yes" xml:space="preserve">
          <source>The diagram below shows a three-service replica in yellow and a global service in gray.</source>
          <target state="translated">下の図は、3つのサービスのレプリカを黄色で、グローバルサービスをグレーで示しています。</target>
        </trans-unit>
        <trans-unit id="d322b7f5d4fe953d4548dff5c94e40c25755e35d" translate="yes" xml:space="preserve">
          <source>The diagram below shows how swarm mode accepts service create requests and schedules tasks to worker nodes.</source>
          <target state="translated">次の図は、スウォームモードがサービスの作成要求を受け付け、ワーカーノードにタスクをスケジューリングする様子を示しています。</target>
        </trans-unit>
        <trans-unit id="a542ef3183b38578e602775ecc5d8ac346cdbbc6" translate="yes" xml:space="preserve">
          <source>The directories which are owned by the remapped user are used instead of the same directories directly beneath &lt;code&gt;/var/lib/docker/&lt;/code&gt; and the unused versions (such as &lt;code&gt;/var/lib/docker/tmp/&lt;/code&gt; in the example here) can be removed. Docker does not use them while &lt;code&gt;userns-remap&lt;/code&gt; is enabled.</source>
          <target state="translated">&lt;code&gt;/var/lib/docker/&lt;/code&gt; 直下にある同じディレクトリの代わりに、再マップされたユーザーが所有するディレクトリが使用され、未使用のバージョン（この例では &lt;code&gt;/var/lib/docker/tmp/&lt;/code&gt; など）を削除できます。Dockerは、 &lt;code&gt;userns-remap&lt;/code&gt; が有効になっている間はこれらを使用しません。</target>
        </trans-unit>
        <trans-unit id="ced9b493d368f4aa1a0fe354475a92f041e9fd7a" translate="yes" xml:space="preserve">
          <source>The docker login command is removing the ability to automatically register for an account with the target registry if the given username doesn&amp;rsquo;t exist. Due to this change, the email flag is no longer required, and will be deprecated.</source>
          <target state="translated">docker loginコマンドは、指定されたユーザー名が存在しない場合に、ターゲットレジストリにアカウントを自動的に登録する機能を削除しています。この変更により、メールフラグは不要になり、廃止される予定です。</target>
        </trans-unit>
        <trans-unit id="c3f61e1a16f6c08b9e1d558d719854f08c48dd22" translate="yes" xml:space="preserve">
          <source>The docker volume &lt;code&gt;db_data&lt;/code&gt; persists any updates made by WordPress to the database. &lt;a href=&quot;https://docs.docker.com/storage&quot;&gt;Learn more about docker volumes&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;db_data&lt;/code&gt; ボリュームdb_dataは、WordPressによってデータベースに加えられた更新を保持します。&lt;a href=&quot;https://docs.docker.com/storage&quot;&gt;Dockerボリュームの詳細&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1416be20c4d01103caaee715619ae02361dcc4e5" translate="yes" xml:space="preserve">
          <source>The docker-machine create command</source>
          <target state="translated">docker-machine createコマンド</target>
        </trans-unit>
        <trans-unit id="2c33c4de05fef67739d59f64c71b01bf34737dbd" translate="yes" xml:space="preserve">
          <source>The download operation will be performed on the host the Docker daemon is running on, which is not necessarily the same host from which the build command is being issued. The Docker daemon will fetch &lt;code&gt;context.tar.gz&lt;/code&gt; and use it as the build context. Tarball contexts must be tar archives conforming to the standard &lt;code&gt;tar&lt;/code&gt; UNIX format and can be compressed with any one of the &amp;lsquo;xz&amp;rsquo;, &amp;lsquo;bzip2&amp;rsquo;, &amp;lsquo;gzip&amp;rsquo; or &amp;lsquo;identity&amp;rsquo; (no compression) formats.</source>
          <target state="translated">ダウンロード操作は、Dockerデーモンが実行されているホスト上で実行されます。これは、ビルドコマンドの発行元と同じホストである必要はありません。Dockerデーモンは &lt;code&gt;context.tar.gz&lt;/code&gt; をフェッチし、ビルドコンテキストとして使用します。tarballコンテキストは、標準の &lt;code&gt;tar&lt;/code&gt; UNIX形式に準拠したtarアーカイブである必要があり、「xz」、「bzip2」、「gzip」、または「identity」（圧縮なし）形式のいずれかで圧縮できます。</target>
        </trans-unit>
        <trans-unit id="7edb9183a839b9915a5a25418cfe38fbb6391bb2" translate="yes" xml:space="preserve">
          <source>The drained node shows &lt;code&gt;Drain&lt;/code&gt; for &lt;code&gt;AVAILABILITY&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Drain&lt;/code&gt; されたノードは、DAIN for &lt;code&gt;AVAILABILITY&lt;/code&gt; を示します。</target>
        </trans-unit>
        <trans-unit id="008ecc6d5a62a3ca5a113cadbf298669fecf4eaf" translate="yes" xml:space="preserve">
          <source>The driver is not required to implement &lt;code&gt;Capabilities&lt;/code&gt;. If it is not implemented, the default values are used.</source>
          <target state="translated">ドライバは &lt;code&gt;Capabilities&lt;/code&gt; を実装する必要はありません。実装されていない場合は、デフォルト値が使用されます。</target>
        </trans-unit>
        <trans-unit id="45d754e6b3d42d6576d69090d424263def84711c" translate="yes" xml:space="preserve">
          <source>The easiest way to deploy Notary Server is by using Docker Compose. To follow the procedure on this page, you must have already &lt;a href=&quot;../../../../compose/install/index&quot;&gt;installed Docker Compose&lt;/a&gt;.</source>
          <target state="translated">Notary Serverをデプロイする最も簡単な方法は、Docker Composeを使用することです。このページの手順を実行するには、&lt;a href=&quot;../../../../compose/install/index&quot;&gt;Docker Composeをインストールし&lt;/a&gt;ておく必要があります。</target>
        </trans-unit>
        <trans-unit id="cbb3473804a03fd64904744c7f89f506da1b00af" translate="yes" xml:space="preserve">
          <source>The easiest way to deploy an application is to run it on a single server, similar to how you would run your development environment. If you want to scale up your application, you can run Compose apps on a Swarm cluster.</source>
          <target state="translated">アプリケーションをデプロイする最も簡単な方法は、開発環境を実行するのと同じように、単一のサーバー上でアプリケーションを実行することです。アプリケーションをスケールアップしたい場合は、Compose アプリケーションを Swarm クラスター上で実行することができます。</target>
        </trans-unit>
        <trans-unit id="0f3be48a8a42306450b08c080985765fe25d537c" translate="yes" xml:space="preserve">
          <source>The easiest way to produce a bundle is to generate it using &lt;code&gt;docker-compose&lt;/code&gt; from an existing &lt;code&gt;docker-compose.yml&lt;/code&gt;. Of course, that&amp;rsquo;s just &lt;em&gt;one&lt;/em&gt; possible way to proceed, in the same way that &lt;code&gt;docker build&lt;/code&gt; isn&amp;rsquo;t the only way to produce a Docker image.</source>
          <target state="translated">バンドルを作成する最も簡単な方法は、既存の &lt;code&gt;docker-compose.yml&lt;/code&gt; から &lt;code&gt;docker-compose&lt;/code&gt; を使用してバンドルを生成することです。もちろん、それは、Docker &lt;code&gt;docker build&lt;/code&gt; がDockerイメージを作成する唯一の方法ではないのと同じように、続行する&lt;em&gt;1つの&lt;/em&gt;可能な方法にすぎません。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e21df395f3446d584a4ca9200bc32ed01c54aa7" translate="yes" xml:space="preserve">
          <source>The endpoint &lt;code&gt;/containers/(id or name)/copy&lt;/code&gt; is deprecated in favor of &lt;code&gt;/containers/(id or name)/archive&lt;/code&gt;.</source>
          <target state="translated">エンドポイント &lt;code&gt;/containers/(id or name)/copy&lt;/code&gt; は廃止され、 &lt;code&gt;/containers/(id or name)/archive&lt;/code&gt; が優先されます。</target>
        </trans-unit>
        <trans-unit id="5c08b62b88c6225b00d167dc7e607242e3b89d5e" translate="yes" xml:space="preserve">
          <source>The entrypoint can also be a list, in a manner similar to &lt;a href=&quot;../../../engine/reference/builder/index#entrypoint&quot;&gt;dockerfile&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../../../engine/reference/builder/index#entrypoint&quot;&gt;エントリー&lt;/a&gt;ポイントは、dockerfileと同様の方法でリストにすることもできます。</target>
        </trans-unit>
        <trans-unit id="f40c04ee015b92c39817e6ca9d4f62c70b5a83bd" translate="yes" xml:space="preserve">
          <source>The entrypoint can also be a list, in a manner similar to &lt;a href=&quot;../../engine/reference/builder/index#entrypoint&quot;&gt;dockerfile&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../../engine/reference/builder/index#entrypoint&quot;&gt;エントリー&lt;/a&gt;ポイントは、dockerfileと同様の方法でリストにすることもできます。</target>
        </trans-unit>
        <trans-unit id="ec2a98ae62a1beccce3cba7cfa61a0b6efb72b90" translate="yes" xml:space="preserve">
          <source>The env command supports a &lt;code&gt;--no-proxy&lt;/code&gt; flag which ensures that the created machine&amp;rsquo;s IP address is added to the &lt;a href=&quot;https://wiki.archlinux.org/index.php/Proxy_settings&quot;&gt;&lt;code&gt;NO_PROXY&lt;/code&gt;/&lt;code&gt;no_proxy&lt;/code&gt; environment variable&lt;/a&gt;.</source>
          <target state="translated">envコマンドは、作成されたマシンのIPアドレスが&lt;a href=&quot;https://wiki.archlinux.org/index.php/Proxy_settings&quot;&gt; &lt;code&gt;NO_PROXY&lt;/code&gt; &lt;/a&gt; / &lt;code&gt;no_proxy&lt;/code&gt; 環境変数に確実に追加される &lt;code&gt;--no-proxy&lt;/code&gt; フラグをサポートします。</target>
        </trans-unit>
        <trans-unit id="e1826416e57d3bef2c80c7a035f75c85a4ffee30" translate="yes" xml:space="preserve">
          <source>The environment variables for the older passwords are optional, but Notary Signer cannot decrypt older keys if they are not provided, and attempts to sign data using those keys fail.</source>
          <target state="translated">古いパスワードの環境変数はオプションですが、古い鍵が提供されていない場合、Notary Signer は古い鍵を復号化することができず、それらの鍵を使ってデータに署名しようとすると失敗します。</target>
        </trans-unit>
        <trans-unit id="a6627fbb8c91d0fc377c2ff347617c288abca678" translate="yes" xml:space="preserve">
          <source>The environment variables set using &lt;code&gt;ENV&lt;/code&gt; will persist when a container is run from the resulting image. You can view the values using &lt;code&gt;docker inspect&lt;/code&gt;, and change them using &lt;code&gt;docker run --env &amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ENV&lt;/code&gt; を使用して設定された環境変数は、結果のイメージからコンテナーが実行されるときに保持されます。 &lt;code&gt;docker run --env &amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; &lt;code&gt;docker inspect&lt;/code&gt; を使用して値を表示し、docker run --env &amp;lt;key&amp;gt; = &amp;lt;value&amp;gt;を使用して値を変更できます。</target>
        </trans-unit>
        <trans-unit id="f2d4a06ff2b2c1bb65797bcb34409b040d8f44ca" translate="yes" xml:space="preserve">
          <source>The environment variables you define here are used for &lt;a href=&quot;../compose-file/index#variable-substitution&quot;&gt;variable substitution&lt;/a&gt; in your Compose file, and can also be used to define the following &lt;a href=&quot;../reference/envvars/index&quot;&gt;CLI variables&lt;/a&gt;:</source>
          <target state="translated">ここで定義する環境変数は、Composeファイルの&lt;a href=&quot;../compose-file/index#variable-substitution&quot;&gt;変数置換&lt;/a&gt;に使用され、次の&lt;a href=&quot;../reference/envvars/index&quot;&gt;CLI変数の&lt;/a&gt;定義にも使用できます。</target>
        </trans-unit>
        <trans-unit id="d428381f478d7b84b477c7df64a8f6a6a9edd161" translate="yes" xml:space="preserve">
          <source>The escape character is used both to escape characters in a line, and to escape a newline. This allows a &lt;code&gt;Dockerfile&lt;/code&gt; instruction to span multiple lines. Note that regardless of whether the &lt;code&gt;escape&lt;/code&gt; parser directive is included in a &lt;code&gt;Dockerfile&lt;/code&gt;, &lt;em&gt;escaping is not performed in a &lt;code&gt;RUN&lt;/code&gt; command, except at the end of a line.&lt;/em&gt;</source>
          <target state="translated">エスケープ文字は、行内の文字をエスケープするためと、改行をエスケープするための両方で使用されます。これにより、 &lt;code&gt;Dockerfile&lt;/code&gt; 命令が複数の行にまたがることができます。 &lt;code&gt;escape&lt;/code&gt; パーサーディレクティブが &lt;code&gt;Dockerfile&lt;/code&gt; に含まれているかどうかに関係なく&lt;em&gt;、行の終わりを除いて&lt;/em&gt;&lt;em&gt;、&lt;/em&gt;&lt;em&gt; &lt;code&gt;RUN&lt;/code&gt; &lt;/em&gt;&lt;em&gt;コマンド&lt;/em&gt;&lt;em&gt;ではエスケープが実行されない&lt;/em&gt;ことに注意してください&lt;em&gt;。&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eeba3b74b0236d42f86530a251ea9e62a35c7995" translate="yes" xml:space="preserve">
          <source>The events that can be received using this can be seen &lt;a href=&quot;../../../engine/reference/commandline/events/index#object-types&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">これを使用して受信できるイベントは、こちらで確認でき&lt;a href=&quot;../../../engine/reference/commandline/events/index#object-types&quot;&gt;ます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1a17988740e39b0620e37d4cec3a97d766137f47" translate="yes" xml:space="preserve">
          <source>The example below demonstrates joining a manager node using a manager token.</source>
          <target state="translated">以下の例では、マネージャ・トークンを使用してマネージャ・ノードに参加しています。</target>
        </trans-unit>
        <trans-unit id="25b4970988441b740e2a781fbee1a66aa2b61f5a" translate="yes" xml:space="preserve">
          <source>The example below demonstrates joining a worker node using a worker token.</source>
          <target state="translated">以下の例では、ワーカートークンを使用してワーカーノードを結合しています。</target>
        </trans-unit>
        <trans-unit id="b7a1e5a37682ef20c70bef17964c7684d70c655a" translate="yes" xml:space="preserve">
          <source>The example below exposes the first and third GPUs.</source>
          <target state="translated">以下の例では、第1と第3のGPUを公開しています。</target>
        </trans-unit>
        <trans-unit id="136216b3bc39195557bd1003225e277d5f1e1c60" translate="yes" xml:space="preserve">
          <source>The example below illustrates this:</source>
          <target state="translated">以下の例では、これを説明しています。</target>
        </trans-unit>
        <trans-unit id="7ed635a4e298f0a02b5b0d66b8bfc619f56a50cc" translate="yes" xml:space="preserve">
          <source>The example below mounts an empty tmpfs into the container with the &lt;code&gt;rw&lt;/code&gt;, &lt;code&gt;noexec&lt;/code&gt;, &lt;code&gt;nosuid&lt;/code&gt;, and &lt;code&gt;size=65536k&lt;/code&gt; options.</source>
          <target state="translated">以下の例では、空のtmpfsを &lt;code&gt;rw&lt;/code&gt; 、 &lt;code&gt;noexec&lt;/code&gt; 、 &lt;code&gt;nosuid&lt;/code&gt; 、および &lt;code&gt;size=65536k&lt;/code&gt; オプションを使用してコンテナにマウントします。</target>
        </trans-unit>
        <trans-unit id="cd44fcd3927c43527b19df5d70413fafa8dafd56" translate="yes" xml:space="preserve">
          <source>The example below shows the information from a certificate from a worker node:</source>
          <target state="translated">以下の例では、ワーカーノードからの証明書の情報を示しています。</target>
        </trans-unit>
        <trans-unit id="54d8617f0498acb2ab072f389ab875b0bca6e0a6" translate="yes" xml:space="preserve">
          <source>The example below shows the output for a daemon running on Red Hat Enterprise Linux, using the &lt;code&gt;devicemapper&lt;/code&gt; storage driver. As can be seen in the output, additional information about the &lt;code&gt;devicemapper&lt;/code&gt; storage driver is shown:</source>
          <target state="translated">以下の例は、 &lt;code&gt;devicemapper&lt;/code&gt; ストレージドライバーを使用して、Red Hat Enterprise Linuxで実行されているデーモンの出力を示しています。出力からわかるように、 &lt;code&gt;devicemapper&lt;/code&gt; ストレージドライバーに関する追加情報が表示されます。</target>
        </trans-unit>
        <trans-unit id="029833a3c9a7900068d40d95bb8919839dba6dc3" translate="yes" xml:space="preserve">
          <source>The example on this page is using experimental mode in Docker 1.13.</source>
          <target state="translated">このページの例では、Docker 1.13で実験モードを使用しています。</target>
        </trans-unit>
        <trans-unit id="d14272aafaddb2ec6f187da9a77f600e86a905b2" translate="yes" xml:space="preserve">
          <source>The example shown above would store log files until they reach a &lt;code&gt;max-size&lt;/code&gt; of 200kB, and then rotate them. The amount of individual log files stored is specified by the &lt;code&gt;max-file&lt;/code&gt; value. As logs grow beyond the max limits, older log files are removed to allow storage of new logs.</source>
          <target state="translated">上記の例では、 &lt;code&gt;max-size&lt;/code&gt; が200 KB に達するまでログファイルを保存し、その後ローテーションします。保存される個々のログファイルの量は、 &lt;code&gt;max-file&lt;/code&gt; 値によって指定されます。ログが上限を超えると、古いログファイルが削除され、新しいログを保存できるようになります。</target>
        </trans-unit>
        <trans-unit id="c577259842d61990aced0fbd2f28da4da6a3648f" translate="yes" xml:space="preserve">
          <source>The examples here show how to create and start a machine, run Docker commands, and work with containers.</source>
          <target state="translated">ここでは、マシンを作成して起動し、Dockerコマンドを実行し、コンテナを使って作業する方法を例示しています。</target>
        </trans-unit>
        <trans-unit id="0849d6689ed7be80620bb8487fe1dd07e740085a" translate="yes" xml:space="preserve">
          <source>The exit code from &lt;code&gt;docker run&lt;/code&gt; gives information about why the container failed to run or why it exited. When &lt;code&gt;docker run&lt;/code&gt; exits with a non-zero code, the exit codes follow the &lt;code&gt;chroot&lt;/code&gt; standard, see below:</source>
          <target state="translated">&lt;code&gt;docker run&lt;/code&gt; の終了コードは、コンテナーの実行に失敗した理由またはコンテナーが終了した理由に関する情報を提供します。ときに &lt;code&gt;docker run&lt;/code&gt; 非ゼロのコードで終了し、終了コードが続く &lt;code&gt;chroot&lt;/code&gt; 標準を、以下を参照してください：</target>
        </trans-unit>
        <trans-unit id="582264dedcc552f5bc709f56c6bf7ac62d1091c7" translate="yes" xml:space="preserve">
          <source>The experimental channel uses incremental versioning with the major and minor component from the stable channel on the time of the release. For example:</source>
          <target state="translated">実験的なチャンネルでは、リリース時に安定版チャンネルのメジャーコンポーネントとマイナーコンポーネントのインクリメンタルバージョンを使用しています。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="52885d2644998577e6073933e22175a4ebac7538" translate="yes" xml:space="preserve">
          <source>The failure rate to tolerate during a rollback, specified as a floating-point number between 0 and 1. For instance, given 5 tasks, a failure ratio of &lt;code&gt;.2&lt;/code&gt; would tolerate one task failing to roll back. A value of &lt;code&gt;0&lt;/code&gt; means no failure are tolerated, while a value of &lt;code&gt;1&lt;/code&gt; means any number of failure are tolerated.</source>
          <target state="translated">ロールバック中に許容される失敗率。0〜1の浮動小数点数として指定します。たとえば、5つのタスクが与えられた場合、失敗率 &lt;code&gt;.2&lt;/code&gt; は、1つのタスクがロールバックできないことを許容します。値 &lt;code&gt;0&lt;/code&gt; は障害が許容されないことを意味し、値 &lt;code&gt;1&lt;/code&gt; は任意の数の障害が許容されることを意味します。</target>
        </trans-unit>
        <trans-unit id="d68f9035a468196dba9c2b9c69d4081509161884" translate="yes" xml:space="preserve">
          <source>The features of Compose that make it effective are:</source>
          <target state="translated">効果が出るコンポーズの特徴は</target>
        </trans-unit>
        <trans-unit id="5586c9b78df4bbb7f9f4a597bb211ee31c9db6a9" translate="yes" xml:space="preserve">
          <source>The fields &lt;code&gt;ID&lt;/code&gt;, &lt;code&gt;Status&lt;/code&gt; and &lt;code&gt;From&lt;/code&gt; in the events API have been deprecated in favor of a more rich structure. See the events API documentation for the new format.</source>
          <target state="translated">イベントAPI のフィールド &lt;code&gt;ID&lt;/code&gt; 、 &lt;code&gt;Status&lt;/code&gt; 、および &lt;code&gt;From&lt;/code&gt; は、よりリッチな構造のために廃止されました。新しい形式については、イベントAPIのドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="e940422c1fe38ec0a69aaf8826be36a4ebca5660" translate="yes" xml:space="preserve">
          <source>The file doesn&amp;rsquo;t need to have any contents.</source>
          <target state="translated">ファイルにコンテンツが含まれている必要はありません。</target>
        </trans-unit>
        <trans-unit id="4e1b2e21312a1d047cc07a276a5f08dda69ecae6" translate="yes" xml:space="preserve">
          <source>The file path in this example is not a requirement. In production, you could use another.</source>
          <target state="translated">この例のファイルパスは必須ではありません。本番環境では、別のものを使用することができます。</target>
        </trans-unit>
        <trans-unit id="c5a70924dcb932c02c158eac18cd4f544c78e2d1" translate="yes" xml:space="preserve">
          <source>The files are actually being transferred using &lt;code&gt;sftp&lt;/code&gt; (over an ssh connection), so this program (&amp;ldquo;sftp&amp;rdquo;) needs to be present on the machine - but it usually is.</source>
          <target state="translated">ファイルは実際には &lt;code&gt;sftp&lt;/code&gt; を使用して（ssh接続経由で）転送されているため、このプログラム（「sftp」）はマシン上に存在する必要がありますが、通常は存在します。</target>
        </trans-unit>
        <trans-unit id="1c30c54a6a3202f383fed47f50a78dfcf095b8ba" translate="yes" xml:space="preserve">
          <source>The filtering flag (&lt;code&gt;--filter&lt;/code&gt;) format is a &lt;code&gt;key=value&lt;/code&gt; pair. If there is more than one filter, then pass multiple flags. For example: &lt;code&gt;--filter &quot;foo=bar&quot; --filter &quot;bif=baz&quot;&lt;/code&gt;</source>
          <target state="translated">フィルタリングフラグ（ &lt;code&gt;--filter&lt;/code&gt; ）形式は、 &lt;code&gt;key=value&lt;/code&gt; ペアです。複数のフィルターがある場合は、複数のフラグを渡します。例：-- &lt;code&gt;--filter &quot;foo=bar&quot; --filter &quot;bif=baz&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f285ce11e5dcd83c24e5bd33204635adf09ba89" translate="yes" xml:space="preserve">
          <source>The filtering flag (&lt;code&gt;--filter&lt;/code&gt;) format is of &amp;ldquo;key=value&amp;rdquo;. If there is more than one filter, then pass multiple flags (e.g., &lt;code&gt;--filter &quot;foo=bar&quot; --filter &quot;bif=baz&quot;&lt;/code&gt;)</source>
          <target state="translated">フィルタリングフラグ（ &lt;code&gt;--filter&lt;/code&gt; ）の形式は「key = value」です。複数のフィルターがある場合は、複数のフラグを渡します（例 &lt;code&gt;--filter &quot;foo=bar&quot; --filter &quot;bif=baz&quot;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="17cb4654fb42a49d5cd6d0cc710a22c55ee18d5c" translate="yes" xml:space="preserve">
          <source>The filtering flag (&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--filter&lt;/code&gt;) format is a &lt;code&gt;key=value&lt;/code&gt; pair. If there is more than one filter, then pass multiple flags (e.g. &lt;code&gt;--filter &quot;foo=bar&quot; --filter &quot;bif=baz&quot;&lt;/code&gt;)</source>
          <target state="translated">フィルタリングフラグ（ &lt;code&gt;-f&lt;/code&gt; または &lt;code&gt;--filter&lt;/code&gt; ）形式は、 &lt;code&gt;key=value&lt;/code&gt; ペアです。複数のフィルターがある場合は、複数のフラグを渡します（例 &lt;code&gt;--filter &quot;foo=bar&quot; --filter &quot;bif=baz&quot;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="426aa2257cf91d00fd6ee5760b570121af7b130b" translate="yes" xml:space="preserve">
          <source>The filtering flag (&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--filter&lt;/code&gt;) format is a &lt;code&gt;key=value&lt;/code&gt; pair. If there is more than one filter, then pass multiple flags (e.g. &lt;code&gt;--filter &quot;foo=bar&quot; --filter &quot;bif=baz&quot;&lt;/code&gt;). Multiple filter flags are combined as an &lt;code&gt;OR&lt;/code&gt; filter.</source>
          <target state="translated">フィルタリングフラグ（ &lt;code&gt;-f&lt;/code&gt; または &lt;code&gt;--filter&lt;/code&gt; ）形式は、 &lt;code&gt;key=value&lt;/code&gt; ペアです。複数のフィルターがある場合は、複数のフラグを渡します（例 &lt;code&gt;--filter &quot;foo=bar&quot; --filter &quot;bif=baz&quot;&lt;/code&gt; ）。複数のフィルターフラグが &lt;code&gt;OR&lt;/code&gt; フィルターとして結合されます。</target>
        </trans-unit>
        <trans-unit id="e8989ebfc2055cad776feeb144c1f803cbdf05ec" translate="yes" xml:space="preserve">
          <source>The filtering flag (&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--filter&lt;/code&gt;) format is a &lt;code&gt;key=value&lt;/code&gt; pair. If there is more than one filter, then pass multiple flags (e.g. &lt;code&gt;--filter &quot;foo=bar&quot; --filter &quot;bif=baz&quot;&lt;/code&gt;). Multiple filter flags are combined as an &lt;code&gt;OR&lt;/code&gt; filter. For example, &lt;code&gt;-f name=redis.1 -f name=redis.7&lt;/code&gt; returns both &lt;code&gt;redis.1&lt;/code&gt; and &lt;code&gt;redis.7&lt;/code&gt; tasks.</source>
          <target state="translated">フィルタリングフラグ（ &lt;code&gt;-f&lt;/code&gt; または &lt;code&gt;--filter&lt;/code&gt; ）形式は、 &lt;code&gt;key=value&lt;/code&gt; ペアです。複数のフィルターがある場合は、複数のフラグを渡します（例 &lt;code&gt;--filter &quot;foo=bar&quot; --filter &quot;bif=baz&quot;&lt;/code&gt; ）。複数のフィルターフラグが &lt;code&gt;OR&lt;/code&gt; フィルターとして結合されます。例えば、 &lt;code&gt;-f name=redis.1 -f name=redis.7&lt;/code&gt; 戻りの両方 &lt;code&gt;redis.1&lt;/code&gt; と &lt;code&gt;redis.7&lt;/code&gt; タスク。</target>
        </trans-unit>
        <trans-unit id="6cfeb05ebb258fa8134b6ec40524576b415408df" translate="yes" xml:space="preserve">
          <source>The filtering flag (&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--filter&lt;/code&gt;) format is a &lt;code&gt;key=value&lt;/code&gt; pair. If there is more than one filter, then pass multiple flags (e.g. &lt;code&gt;--filter &quot;foo=bar&quot; --filter &quot;bif=baz&quot;&lt;/code&gt;). Multiple filter flags are combined as an &lt;code&gt;OR&lt;/code&gt; filter. For example, &lt;code&gt;-f type=custom -f type=builtin&lt;/code&gt; returns both &lt;code&gt;custom&lt;/code&gt; and &lt;code&gt;builtin&lt;/code&gt; networks.</source>
          <target state="translated">フィルタリングフラグ（ &lt;code&gt;-f&lt;/code&gt; または &lt;code&gt;--filter&lt;/code&gt; ）形式は、 &lt;code&gt;key=value&lt;/code&gt; ペアです。複数のフィルターがある場合は、複数のフラグを渡します（例 &lt;code&gt;--filter &quot;foo=bar&quot; --filter &quot;bif=baz&quot;&lt;/code&gt; ）。複数のフィルターフラグが &lt;code&gt;OR&lt;/code&gt; フィルターとして結合されます。たとえば、 &lt;code&gt;-f type=custom -f type=builtin&lt;/code&gt; は、 &lt;code&gt;custom&lt;/code&gt; ネットワークと &lt;code&gt;builtin&lt;/code&gt; ネットワークの両方を返します。</target>
        </trans-unit>
        <trans-unit id="aa57b9da7a41568c91cc65822e0d547ada31afd2" translate="yes" xml:space="preserve">
          <source>The filtering flag (&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--filter&lt;/code&gt;) format is a &lt;code&gt;key=value&lt;/code&gt; pair. If there is more than one filter, then pass multiple flags (e.g., &lt;code&gt;--filter &quot;foo=bar&quot; --filter &quot;bif=baz&quot;&lt;/code&gt;)</source>
          <target state="translated">フィルタリングフラグ（ &lt;code&gt;-f&lt;/code&gt; または &lt;code&gt;--filter&lt;/code&gt; ）形式は、 &lt;code&gt;key=value&lt;/code&gt; ペアです。複数のフィルターがある場合は、複数のフラグを渡します（例 &lt;code&gt;--filter &quot;foo=bar&quot; --filter &quot;bif=baz&quot;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="6d153c537e3f437d55503da7c3af5fa8df3281c1" translate="yes" xml:space="preserve">
          <source>The filtering flag (&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--filter&lt;/code&gt;) format is of &amp;ldquo;key=value&amp;rdquo;. If there is more than one filter, then pass multiple flags (e.g., &lt;code&gt;--filter &quot;foo=bar&quot; --filter &quot;bif=baz&quot;&lt;/code&gt;)</source>
          <target state="translated">フィルタリングフラグ（ &lt;code&gt;-f&lt;/code&gt; または &lt;code&gt;--filter&lt;/code&gt; ）の形式は「key = value」です。複数のフィルターがある場合は、複数のフラグを渡します（例 &lt;code&gt;--filter &quot;foo=bar&quot; --filter &quot;bif=baz&quot;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="21c9307216d7ac9e58873bc62de805e595d77fb7" translate="yes" xml:space="preserve">
          <source>The filtering flag (&lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--filter&lt;/code&gt;) format is of &amp;ldquo;key=value&amp;rdquo;. If you would like to use multiple filters, pass multiple flags (e.g., &lt;code&gt;--filter &quot;foo=bar&quot; --filter &quot;bif=baz&quot;&lt;/code&gt;)</source>
          <target state="translated">フィルタリングフラグ（ &lt;code&gt;-f&lt;/code&gt; または &lt;code&gt;--filter&lt;/code&gt; ）の形式は「key = value」です。複数のフィルターを使用する場合は、複数のフラグを渡します（例：-- &lt;code&gt;--filter &quot;foo=bar&quot; --filter &quot;bif=baz&quot;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c89d57bdf2df6a04b4fa2b97bdec037616b402af" translate="yes" xml:space="preserve">
          <source>The first example shows both the short and long syntax for secrets, and the second example shows only the short syntax. The short syntax creates files in &lt;code&gt;/run/secrets/&lt;/code&gt; with the same name as the secret. Within the running containers, the following three files now exist:</source>
          <target state="translated">最初の例はシークレットの短い構文と長い構文の両方を示し、2番目の例は短い構文のみを示しています。短い構文では、 &lt;code&gt;/run/secrets/&lt;/code&gt; にシークレットと同じ名前のファイルを作成します。実行中のコンテナ内に、次の3つのファイルが存在します。</target>
        </trans-unit>
        <trans-unit id="c1e4c3387577d12532a6e4a3ecfe47ce12c0a55e" translate="yes" xml:space="preserve">
          <source>The first machine acts as the manager, which executes management commands and authenticates workers to join the swarm, and the second is a worker.</source>
          <target state="translated">前記第1のマシンは、管理コマンドを実行してスウォームに参加するワーカーを認証する管理者の役割を果たすものであり</target>
        </trans-unit>
        <trans-unit id="2bba495c3320b897a52b14601599924b407dce11" translate="yes" xml:space="preserve">
          <source>The first time you run this, the docker-in-docker, Notary server, and registry images are downloaded from Docker Hub.</source>
          <target state="translated">最初に実行すると、Docker-in-docker、Notaryサーバー、レジストリイメージがDocker Hubからダウンロードされます。</target>
        </trans-unit>
        <trans-unit id="c9e3339436cc84f78df58b00f645a3e8f63ffc1d" translate="yes" xml:space="preserve">
          <source>The first time you try to create a machine, Azure driver asks you to authenticate:</source>
          <target state="translated">最初にマシンを作成しようとすると、Azureドライバから認証を求められます。</target>
        </trans-unit>
        <trans-unit id="cb84cfdbd020c04d119b920f80cb7bc8cfcb5740" translate="yes" xml:space="preserve">
          <source>The flag &lt;code&gt;--api-enable-cors&lt;/code&gt; is deprecated since v1.6.0. Use the flag &lt;code&gt;--api-cors-header&lt;/code&gt; instead.</source>
          <target state="translated">フラグ &lt;code&gt;--api-enable-cors&lt;/code&gt; は、v1.6.0以降廃止されました。代わりにフラグ &lt;code&gt;--api-cors-header&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="05639fcd64ed17067c7ecbfbfdb1be4d5640f23e" translate="yes" xml:space="preserve">
          <source>The flag &lt;code&gt;--limit&lt;/code&gt; is the maximum number of results returned by a search. This value could be in the range between 1 and 100. The default value of &lt;code&gt;--limit&lt;/code&gt; is 25.</source>
          <target state="translated">フラグ &lt;code&gt;--limit&lt;/code&gt; は、検索によって返される結果の最大数です。この値の範囲は &lt;code&gt;--limit&lt;/code&gt; です。--limitのデフォルト値は25です。</target>
        </trans-unit>
        <trans-unit id="cab2ad76191c73b2c24b2a692e1bc849f354e599" translate="yes" xml:space="preserve">
          <source>The flag &lt;code&gt;--run&lt;/code&gt; of the docker commit (and its short version &lt;code&gt;-run&lt;/code&gt;) were deprecated in favor of the &lt;code&gt;--changes&lt;/code&gt; flag that allows to pass &lt;code&gt;Dockerfile&lt;/code&gt; commands.</source>
          <target state="translated">&lt;code&gt;Dockerfile&lt;/code&gt; コマンドを渡すことを許可する &lt;code&gt;--changes&lt;/code&gt; フラグに &lt;code&gt;--run&lt;/code&gt; 、docker commit（およびその短縮バージョン &lt;code&gt;-run&lt;/code&gt; ）のフラグ--runは非推奨になりました。</target>
        </trans-unit>
        <trans-unit id="66b31971db73964ceb63d241b628599ed67bd387" translate="yes" xml:space="preserve">
          <source>The flag &lt;code&gt;--security-opt&lt;/code&gt; doesn&amp;rsquo;t use the colon separator (&lt;code&gt;:&lt;/code&gt;) anymore to divide keys and values, it uses the equal symbol (&lt;code&gt;=&lt;/code&gt;) for consistency with other similar flags, like &lt;code&gt;--storage-opt&lt;/code&gt;.</source>
          <target state="translated">フラグ &lt;code&gt;--security-opt&lt;/code&gt; （コロン区切り文字を使用しない &lt;code&gt;:&lt;/code&gt; それは同じ記号（使用し、分割キーと値にもはや） &lt;code&gt;=&lt;/code&gt; のような他の同様のフラグとの整合性のために） &lt;code&gt;--storage-opt&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8989880255f74df623b434530f23c19d9dd927e2" translate="yes" xml:space="preserve">
          <source>The flag can be used multiple times to allow multiple registries to be marked as insecure.</source>
          <target state="translated">このフラグを複数回使用して、複数のレジストリを安全でないものとしてマークできるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="211c61f70624ea83298a758a91c7c1645a33a063" translate="yes" xml:space="preserve">
          <source>The flags &lt;code&gt;-d&lt;/code&gt; and &lt;code&gt;--daemon&lt;/code&gt; are deprecated in favor of the &lt;code&gt;daemon&lt;/code&gt; subcommand:</source>
          <target state="translated">フラグ &lt;code&gt;-d&lt;/code&gt; と &lt;code&gt;--daemon&lt;/code&gt; は非推奨になり、 &lt;code&gt;daemon&lt;/code&gt; サブコマンドが優先されます。</target>
        </trans-unit>
        <trans-unit id="fe514827a2bc8cfeb3427c13cc2ba47f6aba7300" translate="yes" xml:space="preserve">
          <source>The flags are:</source>
          <target state="translated">フラグは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="2fec17d2ea0cac008bfab4ea63128760ff0394bf" translate="yes" xml:space="preserve">
          <source>The flags you pass to &lt;code&gt;ip addr show&lt;/code&gt; depend on whether you are using IPv4 or IPv6 networking in your containers. Use the following flags for IPv4 address retrieval for a network device named &lt;code&gt;eth0&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;ip addr show&lt;/code&gt; に渡すフラグは、コンテナーでIPv4またはIPv6ネットワークのどちらを使用しているかによって異なります。 &lt;code&gt;eth0&lt;/code&gt; という名前のネットワークデバイスのIPv4アドレスを取得するには、次のフラグを使用します。</target>
        </trans-unit>
        <trans-unit id="71648dc68d5b64d785048324356509378e05cbab" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;ARG&lt;/code&gt; variables are set automatically:</source>
          <target state="translated">次の &lt;code&gt;ARG&lt;/code&gt; 変数は自動的に設定されます。</target>
        </trans-unit>
        <trans-unit id="30e40704f73a0a3a123810462ea6e8146a6cf011" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;Dockerfile&lt;/code&gt; shows using the &lt;code&gt;ENTRYPOINT&lt;/code&gt; to run Apache in the foreground (i.e., as &lt;code&gt;PID 1&lt;/code&gt;):</source>
          <target state="translated">次の &lt;code&gt;Dockerfile&lt;/code&gt; は、 &lt;code&gt;ENTRYPOINT&lt;/code&gt; を使用してフォアグラウンドで（つまり、 &lt;code&gt;PID 1&lt;/code&gt; として）Apacheを実行する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="37f735ff00a071c2cf805f826830d3b8e2b5d95b" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;run&lt;/code&gt; command options work with container networking:</source>
          <target state="translated">次の &lt;code&gt;run&lt;/code&gt; コマンドオプションは、コンテナネットワークで機能します。</target>
        </trans-unit>
        <trans-unit id="2dd8971bea651d99e456deec000fc508c3c98507" translate="yes" xml:space="preserve">
          <source>The following arguments can be passed to &lt;code&gt;docker network create&lt;/code&gt; for any network driver, again with their approximate equivalents to &lt;code&gt;docker daemon&lt;/code&gt;.</source>
          <target state="translated">次の引数は、任意のネットワークドライバーの &lt;code&gt;docker network create&lt;/code&gt; に渡すことができ &lt;code&gt;docker daemon&lt;/code&gt; 。ここでも、docker daemonとほぼ同等です。</target>
        </trans-unit>
        <trans-unit id="b23a60a2303821537dcbfdf274039df8c3b54583" translate="yes" xml:space="preserve">
          <source>The following assumptions are made:</source>
          <target state="translated">以下のような仮定をしています。</target>
        </trans-unit>
        <trans-unit id="8c8e4bd61d1bff8edef1e67a6084184b1eb9a3d0" translate="yes" xml:space="preserve">
          <source>The following command creates a global service:</source>
          <target state="translated">次のコマンドでグローバルサービスを作成します。</target>
        </trans-unit>
        <trans-unit id="3f41dfd8129fa7163b1fcd0686727a3dff3ac419" translate="yes" xml:space="preserve">
          <source>The following command creates a service with three replicas with an anonymous volume on &lt;code&gt;/path/in/container&lt;/code&gt;:</source>
          <target state="translated">次のコマンドは、 &lt;code&gt;/path/in/container&lt;/code&gt; に匿名ボリュームを持つ3つのレプリカを持つサービスを作成します。</target>
        </trans-unit>
        <trans-unit id="29c23ead74fe204bf41fa629c5ab8b6b4b70e8a5" translate="yes" xml:space="preserve">
          <source>The following command pulls the &lt;code&gt;testing/test-image&lt;/code&gt; image from a local registry listening on port 5000 (&lt;code&gt;myregistry.local:5000&lt;/code&gt;):</source>
          <target state="translated">次のコマンドは、ポート5000（ &lt;code&gt;myregistry.local:5000&lt;/code&gt; ）でリッスンするローカルレジストリから &lt;code&gt;testing/test-image&lt;/code&gt; イメージをプルします。</target>
        </trans-unit>
        <trans-unit id="7e7782423be2ee9e2d32ef7fe59037eb232cd112" translate="yes" xml:space="preserve">
          <source>The following command scales the &amp;ldquo;frontend&amp;rdquo; service to 50 tasks.</source>
          <target state="translated">次のコマンドは、「フロントエンド」サービスを50タスクにスケーリングします。</target>
        </trans-unit>
        <trans-unit id="e98a7778ab952d2730fb21ff8b3b5a2385a04618" translate="yes" xml:space="preserve">
          <source>The following command shows all services in the &lt;code&gt;myapp&lt;/code&gt; stack:</source>
          <target state="translated">次のコマンドは、 &lt;code&gt;myapp&lt;/code&gt; スタック内のすべてのサービスを表示します。</target>
        </trans-unit>
        <trans-unit id="f6737e57d5cb6dbd975d1866fc4b37937d8fb0ea" translate="yes" xml:space="preserve">
          <source>The following command shows all stacks and some additional information:</source>
          <target state="translated">次のコマンドは、すべてのスタックといくつかの追加情報を表示します。</target>
        </trans-unit>
        <trans-unit id="d5faa074805d759eea82bbf46ff2134e3cf5cf46" translate="yes" xml:space="preserve">
          <source>The following command shows all the tasks that are part of the &lt;code&gt;redis&lt;/code&gt; service:</source>
          <target state="translated">次のコマンドは、 &lt;code&gt;redis&lt;/code&gt; サービスの一部であるすべてのタスクを表示します。</target>
        </trans-unit>
        <trans-unit id="7366e9c16d47b415ad53ada639d3d553801f6fcb" translate="yes" xml:space="preserve">
          <source>The following command shows all the tasks that are part of the &lt;code&gt;voting&lt;/code&gt; stack:</source>
          <target state="translated">次のコマンドは、 &lt;code&gt;voting&lt;/code&gt; スタックの一部であるすべてのタスクを表示します。</target>
        </trans-unit>
        <trans-unit id="33aa1c0ff959003ae5db74897da312b568866247" translate="yes" xml:space="preserve">
          <source>The following command shows both the &lt;code&gt;web&lt;/code&gt; and &lt;code&gt;db&lt;/code&gt; services:</source>
          <target state="translated">次のコマンドは、 &lt;code&gt;web&lt;/code&gt; サービスと &lt;code&gt;db&lt;/code&gt; サービスの両方を示しています。</target>
        </trans-unit>
        <trans-unit id="cc1df223fe15bc104674c09a48d71feaab974d1f" translate="yes" xml:space="preserve">
          <source>The following command shows images and which family they belong to (if any):</source>
          <target state="translated">次のコマンドは、画像を表示し、それらがどのファミリーに属しているかを表示します(もしあれば)。</target>
        </trans-unit>
        <trans-unit id="f3237696ef19d83021d5a836b6a1e9cef0f6a8c6" translate="yes" xml:space="preserve">
          <source>The following command tries to scale a global service to 10 tasks and returns an error.</source>
          <target state="translated">次のコマンドは、グローバルサービスを 10 個のタスクにスケールしようとし、エラーを返します。</target>
        </trans-unit>
        <trans-unit id="743253aea145f2b6b290ac340121787c9e892dbc" translate="yes" xml:space="preserve">
          <source>The following commands show several different ways to filter the &lt;code&gt;docker event&lt;/code&gt; output.</source>
          <target state="translated">次のコマンドは、 &lt;code&gt;docker event&lt;/code&gt; 出力をフィルターするいくつかの異なる方法を示しています。</target>
        </trans-unit>
        <trans-unit id="b6298983a47ff8b831614b53250bab44a457c001" translate="yes" xml:space="preserve">
          <source>The following daemon options must be configured for each daemon:</source>
          <target state="translated">以下のデーモンオプションは、各デーモンに設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="0e1249ef154b913b7dd2bbe55b18194abec49cea" translate="yes" xml:space="preserve">
          <source>The following diagram illustrates the interactions between the Notary client, server, and signer:</source>
          <target state="translated">次の図は、公証人クライアント、サーバ、および署名者間の相互作用を示しています。</target>
        </trans-unit>
        <trans-unit id="073116ed512a6960c0757670bc051f3d85c14ca2" translate="yes" xml:space="preserve">
          <source>The following double-dash options are deprecated and have no replacement:</source>
          <target state="translated">以下のダブルダッシュオプションは非推奨であり、代替案はありません。</target>
        </trans-unit>
        <trans-unit id="7553e37733080d989c32cbc7394667475874c240" translate="yes" xml:space="preserve">
          <source>The following environment variables are set for Linux containers:</source>
          <target state="translated">Linuxコンテナには以下の環境変数が設定されています。</target>
        </trans-unit>
        <trans-unit id="1cf7dac8f25b3b64ccb5f54f340c992264a83cea" translate="yes" xml:space="preserve">
          <source>The following environment variables containing signing key passphrases can be used to facilitate &lt;a href=&quot;../../advanced_usage/index&quot;&gt;Notary client CLI interaction&lt;/a&gt;. If provided, these passwords are used initially to sign TUF metadata. If the passphrase is incorrect, you are prompted to enter the correct passphrase.</source>
          <target state="translated">署名鍵のパスフレーズを含む次の環境変数を使用して、&lt;a href=&quot;../../advanced_usage/index&quot;&gt;NotaryクライアントのCLI相互作用&lt;/a&gt;を促進できます。指定した場合、これらのパスワードはTUFメタデータの署名に最初に使用されます。パスフレーズが正しくない場合は、正しいパスフレーズを入力するように求められます。</target>
        </trans-unit>
        <trans-unit id="330e46b20430cd7e0f80c1c374963e5118293212" translate="yes" xml:space="preserve">
          <source>The following example adds a new alias name to an existing service already connected to network my-network:</source>
          <target state="translated">次の例では、すでにネットワークmy-networkに接続されている既存のサービスに新しいエイリアス名を追加します。</target>
        </trans-unit>
        <trans-unit id="bfce6b526de13780562727784926aed9ee9477cf" translate="yes" xml:space="preserve">
          <source>The following example adds a published service port to an existing service.</source>
          <target state="translated">次の例では、既存のサービスに公開されているサービスポートを追加します。</target>
        </trans-unit>
        <trans-unit id="cdac32ddb3bc500f52a2c4a75021fc5f7dc815f7" translate="yes" xml:space="preserve">
          <source>The following example adds a secret named &lt;code&gt;ssh-2&lt;/code&gt; and removes &lt;code&gt;ssh-1&lt;/code&gt;:</source>
          <target state="translated">次の例では、 &lt;code&gt;ssh-2&lt;/code&gt; という名前のシークレットを追加し、 &lt;code&gt;ssh-1&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="ed35b68636be0f973b90873b9a9b7655e381e216" translate="yes" xml:space="preserve">
          <source>The following example assumes a gMSA and its credential spec (called credspec.json) already exists, and that the nodes being deployed to are correctly configured for the gMSA.</source>
          <target state="translated">次の例では、gMSAとそのクレデンシャル仕様(credspec.jsonと呼ばれる)がすでに存在し、デプロイ先のノードがgMSA用に正しく構成されていることを想定しています。</target>
        </trans-unit>
        <trans-unit id="58de12602d90215b83000afdccd448ef3bc54d9f" translate="yes" xml:space="preserve">
          <source>The following example bind-mounts a host directory at &lt;code&gt;/path/in/container&lt;/code&gt; in the containers backing the service:</source>
          <target state="translated">次の例では、サービスをバッキングする &lt;code&gt;/path/in/container&lt;/code&gt; にあるホストディレクトリをバインドマウントします。</target>
        </trans-unit>
        <trans-unit id="345356612044ec35634acb958647f9ee76b8ead7" translate="yes" xml:space="preserve">
          <source>The following example change the env variable &lt;code&gt;DEBUG&lt;/code&gt; on the &lt;code&gt;sample-volume-plugin&lt;/code&gt; plugin.</source>
          <target state="translated">次の例では、 &lt;code&gt;sample-volume-plugin&lt;/code&gt; プラグインの環境変数 &lt;code&gt;DEBUG&lt;/code&gt; を変更します。</target>
        </trans-unit>
        <trans-unit id="1b9d6b0fdf70b163165b0fcce02f13448db748ce" translate="yes" xml:space="preserve">
          <source>The following example change the path of the &lt;code&gt;mydevice&lt;/code&gt; device on the &lt;code&gt;myplugin&lt;/code&gt; plugin.</source>
          <target state="translated">次の例では、 &lt;code&gt;myplugin&lt;/code&gt; プラグインの &lt;code&gt;mydevice&lt;/code&gt; デバイスのパスを変更します。</target>
        </trans-unit>
        <trans-unit id="37a4c9d8a660383f462090e521ec2df16b8718d3" translate="yes" xml:space="preserve">
          <source>The following example change the source of the &lt;code&gt;mymount&lt;/code&gt; mount on the &lt;code&gt;myplugin&lt;/code&gt; plugin.</source>
          <target state="translated">次の例では、 &lt;code&gt;myplugin&lt;/code&gt; プラグインの &lt;code&gt;mymount&lt;/code&gt; マウントのソースを変更します。</target>
        </trans-unit>
        <trans-unit id="f8267ab2e1a38cb0d0220942e495dc3d366efa5a" translate="yes" xml:space="preserve">
          <source>The following example change the value of the args on the &lt;code&gt;myplugin&lt;/code&gt; plugin.</source>
          <target state="translated">次の例では、 &lt;code&gt;myplugin&lt;/code&gt; プラグインの引数の値を変更します。</target>
        </trans-unit>
        <trans-unit id="f650868197d937aea99d7e6f5a9ab9219f7b7e10" translate="yes" xml:space="preserve">
          <source>The following example configures a &lt;code&gt;redis&lt;/code&gt; service to roll back automatically if a &lt;code&gt;docker service update&lt;/code&gt; fails to deploy. Two tasks can be rolled back in parallel. Tasks are monitored for 20 seconds after rollback to be sure they do not exit, and a maximum failure ratio of 20% is tolerated. Default values are used for &lt;code&gt;--rollback-delay&lt;/code&gt; and &lt;code&gt;--rollback-failure-action&lt;/code&gt;.</source>
          <target state="translated">次の例では、 &lt;code&gt;redis&lt;/code&gt; &lt;code&gt;docker service update&lt;/code&gt; デプロイに失敗した場合に自動的にロールバックするようにredisサービスを構成しています。2つのタスクを並行してロールバックできます。タスクはロールバック後20秒間監視され、終了しないことを確認します。最大失敗率は20％です。 &lt;code&gt;--rollback-delay&lt;/code&gt; および &lt;code&gt;--rollback-failure-action&lt;/code&gt; にはデフォルト値が使用されます。</target>
        </trans-unit>
        <trans-unit id="dfc6ef49320e217eb5c253c2ac24897dc4371265" translate="yes" xml:space="preserve">
          <source>The following example creates a network using the built-in &lt;code&gt;bridge&lt;/code&gt; network driver and running a container in the created network</source>
          <target state="translated">次の例では、組み込みの &lt;code&gt;bridge&lt;/code&gt; ネットワークドライバーを使用してネットワークを作成し、作成したネットワークでコンテナーを実行しています</target>
        </trans-unit>
        <trans-unit id="6f15ed186e216c41ccf590a70e61097dd40b3081" translate="yes" xml:space="preserve">
          <source>The following example creates a service that uses a named volume:</source>
          <target state="translated">次の例では、名前付きボリュームを使用するサービスを作成します。</target>
        </trans-unit>
        <trans-unit id="be9175ed1d5e994edd6a5d5d4d2a3f9572676d39" translate="yes" xml:space="preserve">
          <source>The following example creates a service which mounts the &lt;code&gt;test-data&lt;/code&gt; volume to &lt;code&gt;/somewhere&lt;/code&gt;. The next step updates the service to also mount the &lt;code&gt;other-volume&lt;/code&gt; volume to &lt;code&gt;/somewhere-else&lt;/code&gt;volume, The last step unmounts the &lt;code&gt;/somewhere&lt;/code&gt; mount point, effectively removing the &lt;code&gt;test-data&lt;/code&gt; volume. Each command returns the service name.</source>
          <target state="translated">次の例では、 &lt;code&gt;test-data&lt;/code&gt; ボリュームを &lt;code&gt;/somewhere&lt;/code&gt; にマウントするサービスを作成します。次のステップでは、サービスを更新して &lt;code&gt;other-volume&lt;/code&gt; ボリュームも &lt;code&gt;/somewhere-else&lt;/code&gt; ボリュームにマウントします。最後のステップでは、 &lt;code&gt;/somewhere&lt;/code&gt; マウントポイントをアンマウントし、 &lt;code&gt;test-data&lt;/code&gt; ボリュームを効果的に削除します。各コマンドはサービス名を返します。</target>
        </trans-unit>
        <trans-unit id="f8c7341d24e14d740d2f93a0ba945ff8e13e5984" translate="yes" xml:space="preserve">
          <source>The following example creates a service with a single replica, updates the service to use three replicas, and then rolls back the service to the previous version, having one replica.</source>
          <target state="translated">次の例では、1 つのレプリカを持つサービスを作成し、3 つのレプリカを使用するようにサービスを更新してから、1 つのレプリカを持つサービスを以前のバージョンにロールバックしています。</target>
        </trans-unit>
        <trans-unit id="29fd998771d5f61ae99690e05c2da76e000b7f1e" translate="yes" xml:space="preserve">
          <source>The following example disables and removes the &lt;code&gt;sample-volume-plugin:latest&lt;/code&gt; plugin:</source>
          <target state="translated">次の例では、 &lt;code&gt;sample-volume-plugin:latest&lt;/code&gt; プラグインを無効にして削除します。</target>
        </trans-unit>
        <trans-unit id="58414d829baf96224b330e04ddc456870ac303da" translate="yes" xml:space="preserve">
          <source>The following example filter matches volumes with the &lt;code&gt;is-timelord&lt;/code&gt; label regardless of its value.</source>
          <target state="translated">次の例のフィルターは、値に関係なく、 &lt;code&gt;is-timelord&lt;/code&gt; ラベルが付いたボリュームに一致します。</target>
        </trans-unit>
        <trans-unit id="a9825e605f4ae30ab10a0382379dec35cdfaaa78" translate="yes" xml:space="preserve">
          <source>The following example installs &lt;code&gt;vieus/sshfs&lt;/code&gt; plugin and &lt;a href=&quot;../plugin_set/index&quot;&gt;sets&lt;/a&gt; its &lt;code&gt;DEBUG&lt;/code&gt; environment variable to &lt;code&gt;1&lt;/code&gt;. To install, &lt;code&gt;pull&lt;/code&gt; the plugin from Docker Hub and prompt the user to accept the list of privileges that the plugin needs, set the plugin&amp;rsquo;s parameters and enable the plugin.</source>
          <target state="translated">次の例では、 &lt;code&gt;vieus/sshfs&lt;/code&gt; プラグインをインストールし、その &lt;code&gt;DEBUG&lt;/code&gt; 環境変数を &lt;code&gt;1&lt;/code&gt; に&lt;a href=&quot;../plugin_set/index&quot;&gt;設定&lt;/a&gt;します。インストールするには、Docker Hubからプラグインを &lt;code&gt;pull&lt;/code&gt; 、プラグインが必要とする特権のリストを受け入れるようにユーザーに求め、プラグインのパラメーターを設定してプラグインを有効にします。</target>
        </trans-unit>
        <trans-unit id="813d16401bf2f9114259b05a74110ed1120c1ce5" translate="yes" xml:space="preserve">
          <source>The following example installs &lt;code&gt;vieus/sshfs&lt;/code&gt; plugin, uses it to create and use a volume, then upgrades the plugin.</source>
          <target state="translated">次の例では、 &lt;code&gt;vieus/sshfs&lt;/code&gt; プラグインをインストールし、それを使用してボリュームを作成および使用してから、プラグインをアップグレードします。</target>
        </trans-unit>
        <trans-unit id="488f39c6669e0e91254e7cfb402fee79b9fa2d8b" translate="yes" xml:space="preserve">
          <source>The following example is a common pattern found on Windows which can be streamlined by using the &lt;code&gt;SHELL&lt;/code&gt; instruction:</source>
          <target state="translated">次の例は、Windowsで見られる一般的なパターンで、 &lt;code&gt;SHELL&lt;/code&gt; 命令を使用して効率化できます。</target>
        </trans-unit>
        <trans-unit id="7f9a9efded9b244dee8aabd2a087f9e89c5da7e9" translate="yes" xml:space="preserve">
          <source>The following example limits the memory (&lt;code&gt;-m&lt;/code&gt;) to 500M and sets the memory reservation to 200M.</source>
          <target state="translated">次の例では、メモリ（ &lt;code&gt;-m&lt;/code&gt; ）を500Mに制限し、メモリ予約を200Mに設定します。</target>
        </trans-unit>
        <trans-unit id="c98bc0fde049889c7f7676fa21cfc061612b3f91" translate="yes" xml:space="preserve">
          <source>The following example limits the memory to 100M and disables the OOM killer for this container:</source>
          <target state="translated">次の例では、メモリを 100M に制限し、このコンテナの OOM キラーを無効にしています。</target>
        </trans-unit>
        <trans-unit id="61de1584870695125b4a74e826905894c3c68353" translate="yes" xml:space="preserve">
          <source>The following example load the credential spec from a value named &lt;code&gt;my-credential-spec&lt;/code&gt; in the registry:</source>
          <target state="translated">次の例では、レジストリの &lt;code&gt;my-credential-spec&lt;/code&gt; という名前の値から資格情報の仕様を読み込みます。</target>
        </trans-unit>
        <trans-unit id="f31dcebd5640e4ee3430345cde44ce122416adb9" translate="yes" xml:space="preserve">
          <source>The following example matches networks with the &lt;code&gt;bridge&lt;/code&gt; driver:</source>
          <target state="translated">次の例は、ネットワークを &lt;code&gt;bridge&lt;/code&gt; ドライバと照合します。</target>
        </trans-unit>
        <trans-unit id="b727cd30c474b02b8830e2bceade1108e4fb2687" translate="yes" xml:space="preserve">
          <source>The following example matches networks with the &lt;code&gt;local&lt;/code&gt; scope:</source>
          <target state="translated">次の例は、ネットワークを &lt;code&gt;local&lt;/code&gt; スコープと照合します。</target>
        </trans-unit>
        <trans-unit id="991d737d7f20b84a74e6a617d5dc2116e8fd9fc0" translate="yes" xml:space="preserve">
          <source>The following example matches networks with the &lt;code&gt;swarm&lt;/code&gt; scope:</source>
          <target state="translated">次の例は、 &lt;code&gt;swarm&lt;/code&gt; スコープを持つネットワークを照合します。</target>
        </trans-unit>
        <trans-unit id="85f19a1b28b0c4b4d423eed2db6c9916310c58bd" translate="yes" xml:space="preserve">
          <source>The following example matches volumes that are created with the &lt;code&gt;local&lt;/code&gt; driver:</source>
          <target state="translated">次の例は、 &lt;code&gt;local&lt;/code&gt; ドライバーで作成されたボリュームと一致します。</target>
        </trans-unit>
        <trans-unit id="09cb8c4ce1df308900b83a52d7298b2ae3ac003f" translate="yes" xml:space="preserve">
          <source>The following example reads a password from a file, and passes it to the &lt;code&gt;docker login&lt;/code&gt; command using &lt;code&gt;STDIN&lt;/code&gt;:</source>
          <target state="translated">次の例では、ファイルからパスワードを読み取り、 &lt;code&gt;STDIN&lt;/code&gt; を使用して &lt;code&gt;docker login&lt;/code&gt; コマンドに渡します。</target>
        </trans-unit>
        <trans-unit id="e0ddfae23ebd183f0203154109919119f0be6ff1" translate="yes" xml:space="preserve">
          <source>The following example removes images with the label &lt;code&gt;deprecated&lt;/code&gt;:</source>
          <target state="translated">次の例では、 &lt;code&gt;deprecated&lt;/code&gt; のラベルが付いた画像を削除します。</target>
        </trans-unit>
        <trans-unit id="8f4b6e6ce6615def6425c69da97cb6c9e5ff166a" translate="yes" xml:space="preserve">
          <source>The following example removes images with the label &lt;code&gt;maintainer&lt;/code&gt; set to &lt;code&gt;john&lt;/code&gt;:</source>
          <target state="translated">次の例では、 &lt;code&gt;maintainer&lt;/code&gt; ラベルが &lt;code&gt;john&lt;/code&gt; に設定された画像を削除します。</target>
        </trans-unit>
        <trans-unit id="b71aef8df0c62b67fdb13f10edccc0071e581b90" translate="yes" xml:space="preserve">
          <source>The following example runs a container from the &lt;code&gt;alpine&lt;/code&gt; image with the &lt;code&gt;sha256:9cacb71397b640eca97488cf08582ae4e4068513101088e9f96c9814bfda95e0&lt;/code&gt; digest:</source>
          <target state="translated">次の例では、 &lt;code&gt;sha256:9cacb71397b640eca97488cf08582ae4e4068513101088e9f96c9814bfda95e0&lt;/code&gt; ダイジェストを使用して、 &lt;code&gt;alpine&lt;/code&gt; イメージからコンテナーを実行します。</target>
        </trans-unit>
        <trans-unit id="14bc07f818ef5b8e3874b5e3f0cede09acf315cf" translate="yes" xml:space="preserve">
          <source>The following example runs nginx as a service on each node in your swarm and exposes nginx port locally on each swarm node.</source>
          <target state="translated">以下の例では、スウォーム内の各ノードで nginx をサービスとして実行し、各スウォームノードで nginx ポートをローカルに公開しています。</target>
        </trans-unit>
        <trans-unit id="3c1ee6b9dcdd5a62ce81941fd4fd7e8bb580e939" translate="yes" xml:space="preserve">
          <source>The following example sends a &lt;code&gt;SIGHUP&lt;/code&gt; signal to the container named &lt;code&gt;my_container&lt;/code&gt;:</source>
          <target state="translated">次の例では、 &lt;code&gt;SIGHUP&lt;/code&gt; シグナルを &lt;code&gt;my_container&lt;/code&gt; という名前のコンテナーに送信します。</target>
        </trans-unit>
        <trans-unit id="b046c8d9a9d59e70ba785c2fa43e3ae60f63c35d" translate="yes" xml:space="preserve">
          <source>The following example sends the default &lt;code&gt;KILL&lt;/code&gt; signal to the container named &lt;code&gt;my_container&lt;/code&gt;:</source>
          <target state="translated">次の例では、デフォルトの &lt;code&gt;KILL&lt;/code&gt; 信号を &lt;code&gt;my_container&lt;/code&gt; という名前のコンテナーに送信します。</target>
        </trans-unit>
        <trans-unit id="2124a458e14880a140fd9d2f4cfa3b4d4cdf3eb7" translate="yes" xml:space="preserve">
          <source>The following example set memory reservation to 1G without a hard memory limit.</source>
          <target state="translated">以下の例では、ハードメモリ制限なしでメモリ予約を1Gに設定しています。</target>
        </trans-unit>
        <trans-unit id="db08df032a2de4d6f23e749dae8e6565966b669b" translate="yes" xml:space="preserve">
          <source>The following example sets a preference to spread the deployment across nodes based on the value of the &lt;code&gt;datacenter&lt;/code&gt; label. If some nodes have &lt;code&gt;datacenter=us-east&lt;/code&gt; and others have &lt;code&gt;datacenter=us-west&lt;/code&gt;, the service is deployed as evenly as possible across the two sets of nodes.</source>
          <target state="translated">次の例では、 &lt;code&gt;datacenter&lt;/code&gt; ラベルの値に基づいてノード間で展開を分散するように設定します。一部のノードに &lt;code&gt;datacenter=us-east&lt;/code&gt; があり、他のノードに &lt;code&gt;datacenter=us-west&lt;/code&gt; がある場合、サービスは2つのノードセットに可能な限り均等にデプロイされます。</target>
        </trans-unit>
        <trans-unit id="8230dd1220dd706cf8566dbee10e4dc1ad1c9d4a" translate="yes" xml:space="preserve">
          <source>The following example sets name of the &lt;code&gt;my_secret&lt;/code&gt; to &lt;code&gt;redis_secret&lt;/code&gt; within the container, sets the mode to &lt;code&gt;0440&lt;/code&gt; (group-readable) and sets the user and group to &lt;code&gt;103&lt;/code&gt;. The &lt;code&gt;redis&lt;/code&gt; service does not have access to the &lt;code&gt;my_other_secret&lt;/code&gt; secret.</source>
          <target state="translated">以下の例セット名 &lt;code&gt;my_secret&lt;/code&gt; する &lt;code&gt;redis_secret&lt;/code&gt; 容器内には、へのモードを設定し &lt;code&gt;0440&lt;/code&gt; （グループ読み取り可能）とにユーザとグループを設定する &lt;code&gt;103&lt;/code&gt; 。 &lt;code&gt;redis&lt;/code&gt; サービスへのアクセスはありません &lt;code&gt;my_other_secret&lt;/code&gt; 秘密を。</target>
        </trans-unit>
        <trans-unit id="1e0837645e3fcc573d29accac038d64c469ddaf8" translate="yes" xml:space="preserve">
          <source>The following example sets the name of &lt;code&gt;my_config&lt;/code&gt; to &lt;code&gt;redis_config&lt;/code&gt; within the container, sets the mode to &lt;code&gt;0440&lt;/code&gt; (group-readable) and sets the user and group to &lt;code&gt;103&lt;/code&gt;. The &lt;code&gt;redis&lt;/code&gt; service does not have access to the &lt;code&gt;my_other_config&lt;/code&gt; config.</source>
          <target state="translated">次の例では、 &lt;code&gt;redis_config&lt;/code&gt; 内で &lt;code&gt;my_config&lt;/code&gt; の名前をredis_configに設定し、モードを &lt;code&gt;0440&lt;/code&gt; （グループ読み取り可能）に設定し、ユーザーとグループを &lt;code&gt;103&lt;/code&gt; に設定します。 &lt;code&gt;redis&lt;/code&gt; サービスへのアクセスはありません &lt;code&gt;my_other_config&lt;/code&gt; の設定を。</target>
        </trans-unit>
        <trans-unit id="e6c9ffb891e37aec1140f9e04c47f3d25c956b59" translate="yes" xml:space="preserve">
          <source>The following example sets up a service with multiple placement preferences. Tasks are spread first over the various datacenters, and then over racks (as indicated by the respective labels):</source>
          <target state="translated">以下の例では、複数の配置優先順位を持つサービスを設定しています。タスクは最初に様々なデータセンターに分散され、次にラックに分散されます(それぞれのラベルで示されています)。</target>
        </trans-unit>
        <trans-unit id="ddc395cc2f65ffce110b409fbfb09d97f9609f3a" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a sample &lt;code&gt;plugin&lt;/code&gt;.</source>
          <target state="translated">次の例は、サンプル &lt;code&gt;plugin&lt;/code&gt; を作成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="7ae3957799f337692f9bc9b28a6e2e2c634ffcc0" translate="yes" xml:space="preserve">
          <source>The following example shows how to push a sample &lt;code&gt;user/plugin&lt;/code&gt;.</source>
          <target state="translated">次の例は、サンプルの &lt;code&gt;user/plugin&lt;/code&gt; をプッシュする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="f81ed1c286e21dc1188ff9a6fb0987668305135a" translate="yes" xml:space="preserve">
          <source>The following example shows that the &lt;code&gt;sample-volume-plugin&lt;/code&gt; plugin is installed and enabled:</source>
          <target state="translated">次の例は、 &lt;code&gt;sample-volume-plugin&lt;/code&gt; プラグインがインストールされて有効になっていることを示しています。</target>
        </trans-unit>
        <trans-unit id="5852f4e870d19346460239d94051ab30d075af83" translate="yes" xml:space="preserve">
          <source>The following example shows that the &lt;code&gt;sample-volume-plugin&lt;/code&gt; plugin is installed, but disabled:</source>
          <target state="translated">次の例は、 &lt;code&gt;sample-volume-plugin&lt;/code&gt; プラグインがインストールされているが無効になっていることを示しています。</target>
        </trans-unit>
        <trans-unit id="884f0bedd2eaaa130232ed33769aceea522058d0" translate="yes" xml:space="preserve">
          <source>The following example updates the number of replicas for the service from 4 to 5, and then rolls back to the previous configuration.</source>
          <target state="translated">次の例では、サービスのレプリカの数を4から5に更新し、以前の構成にロールバックします。</target>
        </trans-unit>
        <trans-unit id="99a95c61d8e93bc7cab02ddeaaf85dc7ad465b73" translate="yes" xml:space="preserve">
          <source>The following example uses a template without headers and outputs the &lt;code&gt;Container&lt;/code&gt; and &lt;code&gt;CPUPerc&lt;/code&gt; entries separated by a colon for all images:</source>
          <target state="translated">次の例では、ヘッダーのないテンプレートを使用し、すべての画像について、コロンで区切られた &lt;code&gt;Container&lt;/code&gt; および &lt;code&gt;CPUPerc&lt;/code&gt; エントリを出力します。</target>
        </trans-unit>
        <trans-unit id="2a792120d0b9a1a451b8375e49426da3fb636d7a" translate="yes" xml:space="preserve">
          <source>The following example uses a template without headers and outputs the &lt;code&gt;ID&lt;/code&gt; and &lt;code&gt;Command&lt;/code&gt; entries separated by a colon for all running containers:</source>
          <target state="translated">次の例では、ヘッダーのないテンプレートを使用し、実行中のすべてのコンテナについて、コロンで区切られた &lt;code&gt;ID&lt;/code&gt; と &lt;code&gt;Command&lt;/code&gt; エントリを出力します。</target>
        </trans-unit>
        <trans-unit id="c34a9ca7aa8333d80688cb47f375496e30fb62a3" translate="yes" xml:space="preserve">
          <source>The following example uses a template without headers and outputs the &lt;code&gt;ID&lt;/code&gt; and &lt;code&gt;CreatedSince&lt;/code&gt; entries separated by a colon for the &lt;code&gt;busybox&lt;/code&gt; image:</source>
          <target state="translated">次の例では、ヘッダーのないテンプレートを使用して、 &lt;code&gt;busybox&lt;/code&gt; イメージの &lt;code&gt;ID&lt;/code&gt; と &lt;code&gt;CreatedSince&lt;/code&gt; エントリをコロンで区切って出力します。</target>
        </trans-unit>
        <trans-unit id="9053190ef7a8482789c99b20dbfb533dfc395e2b" translate="yes" xml:space="preserve">
          <source>The following example uses a template without headers and outputs the &lt;code&gt;ID&lt;/code&gt; and &lt;code&gt;Driver&lt;/code&gt; entries separated by a colon for all networks:</source>
          <target state="translated">次の例では、ヘッダーのないテンプレートを使用し、すべてのネットワークについて、コロンで区切られた &lt;code&gt;ID&lt;/code&gt; と &lt;code&gt;Driver&lt;/code&gt; エントリを出力します。</target>
        </trans-unit>
        <trans-unit id="0d3c21214705e5d6c9f771dca55ab75a5d739cda" translate="yes" xml:space="preserve">
          <source>The following example uses a template without headers and outputs the &lt;code&gt;ID&lt;/code&gt; and &lt;code&gt;Name&lt;/code&gt; entries separated by a colon for all images:</source>
          <target state="translated">次の例では、ヘッダーのないテンプレートを使用し、すべての画像についてコロンで区切られた &lt;code&gt;ID&lt;/code&gt; と &lt;code&gt;Name&lt;/code&gt; エントリを出力します。</target>
        </trans-unit>
        <trans-unit id="a79d89630514bb61b7a4ec4ec9fdc9ffefd497f7" translate="yes" xml:space="preserve">
          <source>The following example uses a template without headers and outputs the &lt;code&gt;ID&lt;/code&gt; and &lt;code&gt;Name&lt;/code&gt; entries separated by a colon for all plugins:</source>
          <target state="translated">次の例では、ヘッダーのないテンプレートを使用して、すべてのプラグインの &lt;code&gt;ID&lt;/code&gt; と &lt;code&gt;Name&lt;/code&gt; エントリをコロンで区切って出力します。</target>
        </trans-unit>
        <trans-unit id="804de291801d65c46987d10d9722e8e1597a61c7" translate="yes" xml:space="preserve">
          <source>The following example uses a template without headers and outputs the &lt;code&gt;ID&lt;/code&gt; and &lt;code&gt;Repository&lt;/code&gt; entries separated by a colon for all images:</source>
          <target state="translated">次の例では、ヘッダーのないテンプレートを使用し、すべての画像について、コロンで区切られた &lt;code&gt;ID&lt;/code&gt; および &lt;code&gt;Repository&lt;/code&gt; エントリを出力します。</target>
        </trans-unit>
        <trans-unit id="4f0930ce338dadf5495c9cc22ea15ee538bd074c" translate="yes" xml:space="preserve">
          <source>The following example uses a template without headers and outputs the &lt;code&gt;ID&lt;/code&gt;, &lt;code&gt;Hostname&lt;/code&gt;, and &lt;code&gt;TLS Status&lt;/code&gt; entries separated by a colon for all nodes:</source>
          <target state="translated">次の例では、ヘッダーのないテンプレートを使用し、すべてのノードの &lt;code&gt;ID&lt;/code&gt; 、 &lt;code&gt;Hostname&lt;/code&gt; 、およびコロンで区切られた &lt;code&gt;TLS Status&lt;/code&gt; エントリを出力します。</target>
        </trans-unit>
        <trans-unit id="f139db89194cb2e0f5218bff4781bbaf174f7a38" translate="yes" xml:space="preserve">
          <source>The following example uses a template without headers and outputs the &lt;code&gt;ID&lt;/code&gt;, &lt;code&gt;Mode&lt;/code&gt;, and &lt;code&gt;Replicas&lt;/code&gt; entries separated by a colon for all services:</source>
          <target state="translated">次の例では、ヘッダーのないテンプレートを使用し、すべてのサービスについて、コロンで区切られた &lt;code&gt;ID&lt;/code&gt; 、 &lt;code&gt;Mode&lt;/code&gt; 、および &lt;code&gt;Replicas&lt;/code&gt; エントリを出力します。</target>
        </trans-unit>
        <trans-unit id="b8665cdaa79b1fbb23875fb4872bb3265da68042" translate="yes" xml:space="preserve">
          <source>The following example uses a template without headers and outputs the &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Driver&lt;/code&gt; entries separated by a colon for all running machines:</source>
          <target state="translated">次の例では、ヘッダーのないテンプレートを使用し、実行中のすべてのマシンについて、コロンで区切られた &lt;code&gt;Name&lt;/code&gt; および &lt;code&gt;Driver&lt;/code&gt; エントリを出力します。</target>
        </trans-unit>
        <trans-unit id="72fecd4b8a0d3a98296aa22d178ffd98c1a2ed29" translate="yes" xml:space="preserve">
          <source>The following example uses a template without headers and outputs the &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Driver&lt;/code&gt; entries separated by a colon for all volumes:</source>
          <target state="translated">次の例では、ヘッダーのないテンプレートを使用し、すべてのボリュームについて、コロンで区切られた &lt;code&gt;Name&lt;/code&gt; および &lt;code&gt;Driver&lt;/code&gt; エントリを出力します。</target>
        </trans-unit>
        <trans-unit id="eedefcafa867fc51893471b85cafbed225dd74ee" translate="yes" xml:space="preserve">
          <source>The following example uses a template without headers and outputs the &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Image&lt;/code&gt; entries separated by a colon for all tasks:</source>
          <target state="translated">次の例では、ヘッダーのないテンプレートを使用し、すべてのタスクについて、コロンで区切られた &lt;code&gt;Name&lt;/code&gt; と &lt;code&gt;Image&lt;/code&gt; エントリを出力します。</target>
        </trans-unit>
        <trans-unit id="a607ab10c65e128911094483d04501824e7a3c19" translate="yes" xml:space="preserve">
          <source>The following example uses a template without headers and outputs the &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Services&lt;/code&gt; entries separated by a colon for all stacks:</source>
          <target state="translated">次の例では、ヘッダーのないテンプレートを使用し、すべてのスタックについて、コロンで区切られた &lt;code&gt;Name&lt;/code&gt; および &lt;code&gt;Services&lt;/code&gt; エントリを出力します。</target>
        </trans-unit>
        <trans-unit id="27840da3b3c26b130c2393ce1a25742a883dfebd" translate="yes" xml:space="preserve">
          <source>The following example uses a template without headers and outputs the &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;StarCount&lt;/code&gt; entries separated by a colon for all images:</source>
          <target state="translated">次の例では、ヘッダーのないテンプレートを使用し、すべての画像について、コロンで区切られた &lt;code&gt;Name&lt;/code&gt; および &lt;code&gt;StarCount&lt;/code&gt; エントリを出力します。</target>
        </trans-unit>
        <trans-unit id="5097e4e285bcb4f61bbb1c5261ad561df449bf75" translate="yes" xml:space="preserve">
          <source>The following example uses the short syntax to grant the &lt;code&gt;redis&lt;/code&gt; service access to the &lt;code&gt;my_config&lt;/code&gt; and &lt;code&gt;my_other_config&lt;/code&gt; configs. The value of &lt;code&gt;my_config&lt;/code&gt; is set to the contents of the file &lt;code&gt;./my_config.txt&lt;/code&gt;, and &lt;code&gt;my_other_config&lt;/code&gt; is defined as an external resource, which means that it has already been defined in Docker, either by running the &lt;code&gt;docker config create&lt;/code&gt; command or by another stack deployment. If the external config does not exist, the stack deployment fails with a &lt;code&gt;config not found&lt;/code&gt; error.</source>
          <target state="translated">次の例では、短い構文を使用して、 &lt;code&gt;my_config&lt;/code&gt; および &lt;code&gt;my_other_config&lt;/code&gt; 構成へのアクセスを &lt;code&gt;redis&lt;/code&gt; サービスに付与しています。 &lt;code&gt;my_config&lt;/code&gt; の値はファイル &lt;code&gt;./my_config.txt&lt;/code&gt; の内容に設定され、 &lt;code&gt;my_other_config&lt;/code&gt; は外部リソースとして定義されます。つまり、Docker &lt;code&gt;docker config create&lt;/code&gt; コマンドを実行するか、別のスタックによってDockerですでに定義されています。展開。外部設定が存在しない場合、スタックのデプロイは &lt;code&gt;config not found&lt;/code&gt; エラーで失敗します。</target>
        </trans-unit>
        <trans-unit id="edbdc0dd7768c9a4ffab0a305de18d34860216cf" translate="yes" xml:space="preserve">
          <source>The following example uses the short syntax to grant the &lt;code&gt;redis&lt;/code&gt; service access to the &lt;code&gt;my_secret&lt;/code&gt; and &lt;code&gt;my_other_secret&lt;/code&gt; secrets. The value of &lt;code&gt;my_secret&lt;/code&gt; is set to the contents of the file &lt;code&gt;./my_secret.txt&lt;/code&gt;, and &lt;code&gt;my_other_secret&lt;/code&gt; is defined as an external resource, which means that it has already been defined in Docker, either by running the &lt;code&gt;docker secret create&lt;/code&gt; command or by another stack deployment. If the external secret does not exist, the stack deployment fails with a &lt;code&gt;secret not found&lt;/code&gt; error.</source>
          <target state="translated">次の例では、短い構文を使用して、 &lt;code&gt;my_secret&lt;/code&gt; および &lt;code&gt;my_other_secret&lt;/code&gt; シークレットへのアクセスを &lt;code&gt;redis&lt;/code&gt; サービスに付与しています。 &lt;code&gt;my_secret&lt;/code&gt; の値はファイル &lt;code&gt;./my_secret.txt&lt;/code&gt; の内容に設定され、 &lt;code&gt;my_other_secret&lt;/code&gt; は外部リソースとして定義されます。つまり、docker &lt;code&gt;docker secret create&lt;/code&gt; コマンドを実行するか、別のスタックによってDockerですでに定義されています。展開。外部シークレットが存在しない場合、 &lt;code&gt;secret not found&lt;/code&gt; エラーでスタックの展開が失敗します。</target>
        </trans-unit>
        <trans-unit id="700f7f72c505a0cd991e4670f83883bf1ce0e178" translate="yes" xml:space="preserve">
          <source>The following example, illustrates a dangerous way to use the flag:</source>
          <target state="translated">次の例では、旗の危険な使い方を説明しています。</target>
        </trans-unit>
        <trans-unit id="89c0412b4e8637f46684214f9bcf2b4a30f4e274" translate="yes" xml:space="preserve">
          <source>The following examples show bind mount syntax:</source>
          <target state="translated">以下の例はバインドマウントの構文を示しています。</target>
        </trans-unit>
        <trans-unit id="1e7cc6f5f98f421cfe718405a306f6462cbf3f4c" translate="yes" xml:space="preserve">
          <source>The following examples will fail when using Windows-based containers, as the destination of a volume or bind mount inside the container must be one of: a non-existing or empty directory; or a drive other than C:. Further, the source of a bind mount must be a local directory, not a file.</source>
          <target state="translated">以下の例は、Windows ベースのコンテナを使用している場合に失敗します。コンテナ内のボリュームまたはバインドマウントの宛先は、存在しないか空のディレクトリ、または C:以外のドライブのいずれかでなければならないからです。さらに、バインドマウントのソースはファイルではなくローカルディレクトリでなければなりません。</target>
        </trans-unit>
        <trans-unit id="7f19f64e11cd93069667bbfd55960c6a2ddbbdd1" translate="yes" xml:space="preserve">
          <source>The following filter matches all containers that are connected to a network with a name containing &lt;code&gt;net1&lt;/code&gt;.</source>
          <target state="translated">次のフィルターは、名前が &lt;code&gt;net1&lt;/code&gt; を含むネットワークに接続されているすべてのコンテナーに一致します。</target>
        </trans-unit>
        <trans-unit id="800e886868cfa732f164d0182de8422c8e649e13" translate="yes" xml:space="preserve">
          <source>The following filter matches all containers that have exposed TCP port in the range of &lt;code&gt;8000-8080&lt;/code&gt;:</source>
          <target state="translated">次のフィルターは、 &lt;code&gt;8000-8080&lt;/code&gt; の範囲のTCPポートを公開しているすべてのコンテナーに一致します。</target>
        </trans-unit>
        <trans-unit id="07ea30f7ec788e0e5ca1c99051771631a91c5e82" translate="yes" xml:space="preserve">
          <source>The following filter matches all containers that have exposed UDP port &lt;code&gt;80&lt;/code&gt;:</source>
          <target state="translated">次のフィルターは、UDPポート &lt;code&gt;80&lt;/code&gt; を公​​開しているすべてのコンテナーに一致します。</target>
        </trans-unit>
        <trans-unit id="15fd706a88462118bd357b932c54f13e0615f52c" translate="yes" xml:space="preserve">
          <source>The following filter matches all containers that have published port of 80:</source>
          <target state="translated">以下のフィルタは、公開ポートが80であるすべてのコンテナにマッチします。</target>
        </trans-unit>
        <trans-unit id="1e4d3cb6490f16b07bc00af218867d1488effaf6" translate="yes" xml:space="preserve">
          <source>The following filter matches all containers with a name containing the &lt;code&gt;nostalgic_stallman&lt;/code&gt; string.</source>
          <target state="translated">次のフィルターは、 &lt;code&gt;nostalgic_stallman&lt;/code&gt; 文字列を含む名前を持つすべてのコンテナーに一致します。</target>
        </trans-unit>
        <trans-unit id="25cb2d40a8b8244e76b46bc97aff980f8b372f1a" translate="yes" xml:space="preserve">
          <source>The following filter matches all networks with a name containing the &lt;code&gt;foobar&lt;/code&gt; string.</source>
          <target state="translated">次のフィルターは、 &lt;code&gt;foobar&lt;/code&gt; 文字列を含む名前を持つすべてのネットワークに一致します。</target>
        </trans-unit>
        <trans-unit id="74560278c6c44f13fcb3eaaf5e9b566f270ef9d7" translate="yes" xml:space="preserve">
          <source>The following filter matches all networks with an ID containing the &lt;code&gt;63d1ff1f77b0...&lt;/code&gt; string.</source>
          <target state="translated">次のフィルターは、 &lt;code&gt;63d1ff1f77b0...&lt;/code&gt; 文字列を含むIDを持つすべてのネットワークに一致します。</target>
        </trans-unit>
        <trans-unit id="b664a6dc08d148cd14a3d5a10883f3f6253a5b12" translate="yes" xml:space="preserve">
          <source>The following filter matches all secrets with a &lt;code&gt;project&lt;/code&gt; label regardless of its value:</source>
          <target state="translated">次のフィルターは、値に関係なく、すべてのシークレットを &lt;code&gt;project&lt;/code&gt; ラベルに一致させます。</target>
        </trans-unit>
        <trans-unit id="6bf325e14afdfeb070566c7cb8408f19be850830" translate="yes" xml:space="preserve">
          <source>The following filter matches all services with a &lt;code&gt;project&lt;/code&gt; label regardless of its value:</source>
          <target state="translated">次のフィルターは、値に関係なく、 &lt;code&gt;project&lt;/code&gt; ラベルを持つすべてのサービスに一致します。</target>
        </trans-unit>
        <trans-unit id="377c5cebf1a800ec740bab4e255ece52bcd5502c" translate="yes" xml:space="preserve">
          <source>The following filter matches all tasks with a name containing the &lt;code&gt;redis&lt;/code&gt; string.</source>
          <target state="translated">次のフィルターは、 &lt;code&gt;redis&lt;/code&gt; 文字列を含む名前を持つすべてのタスクに一致します。</target>
        </trans-unit>
        <trans-unit id="f6adbe9e7302ddb4e65fe46ef26fc7737fa9efc6" translate="yes" xml:space="preserve">
          <source>The following filter matches all user defined networks:</source>
          <target state="translated">次のフィルタは、すべてのユーザー定義ネットワークにマッチします。</target>
        </trans-unit>
        <trans-unit id="e0e789cbca67054d34bb67e75d18c65067c0090f" translate="yes" xml:space="preserve">
          <source>The following filter matches all volumes with a name containing the &lt;code&gt;rose&lt;/code&gt; string.</source>
          <target state="translated">次のフィルターは、 &lt;code&gt;rose&lt;/code&gt; 文字列を含む名前のすべてのボリュームに一致します。</target>
        </trans-unit>
        <trans-unit id="333929673e07bb3910786d16dc8890e7af897ae5" translate="yes" xml:space="preserve">
          <source>The following filter matches containers with the &lt;code&gt;color&lt;/code&gt; label regardless of its value.</source>
          <target state="translated">次のフィルターは、値に関係なく、コンテナーを &lt;code&gt;color&lt;/code&gt; ラベルと照合します。</target>
        </trans-unit>
        <trans-unit id="287065c5f990a604ba29bf8f28ec863ce71f474a" translate="yes" xml:space="preserve">
          <source>The following filter matches containers with the &lt;code&gt;color&lt;/code&gt; label with the &lt;code&gt;blue&lt;/code&gt; value.</source>
          <target state="translated">次のフィルターは、 &lt;code&gt;blue&lt;/code&gt; 値を持つ &lt;code&gt;color&lt;/code&gt; ラベルを持つコンテナーを一致させます。</target>
        </trans-unit>
        <trans-unit id="a55d9b8aa17bf7ea4bcc95ca05e971410dd1c999" translate="yes" xml:space="preserve">
          <source>The following filter matches images with the &lt;code&gt;com.example.version&lt;/code&gt; label regardless of its value.</source>
          <target state="translated">次のフィルターは、値に関係なく、 &lt;code&gt;com.example.version&lt;/code&gt; ラベルが付いた画像に一致します。</target>
        </trans-unit>
        <trans-unit id="9308f1b2567a263989225a707e87d9f43669990b" translate="yes" xml:space="preserve">
          <source>The following filter matches images with the &lt;code&gt;com.example.version&lt;/code&gt; label with the &lt;code&gt;1.0&lt;/code&gt; value.</source>
          <target state="translated">次のフィルターは、 &lt;code&gt;com.example.version&lt;/code&gt; ラベルが &lt;code&gt;1.0&lt;/code&gt; の画像を照合します。</target>
        </trans-unit>
        <trans-unit id="81c15752312e03a6c5a55cd6e5284d7d5de8e547" translate="yes" xml:space="preserve">
          <source>The following filter matches networks with the &lt;code&gt;usage&lt;/code&gt; label regardless of its value.</source>
          <target state="translated">次のフィルターは、値に関係なく、 &lt;code&gt;usage&lt;/code&gt; ラベルのあるネットワークに一致します。</target>
        </trans-unit>
        <trans-unit id="342327877e58e3c8eafe26ccb4de7e7111b5b529" translate="yes" xml:space="preserve">
          <source>The following filter matches networks with the &lt;code&gt;usage&lt;/code&gt; label with the &lt;code&gt;prod&lt;/code&gt; value.</source>
          <target state="translated">次のフィルターは、 &lt;code&gt;usage&lt;/code&gt; ラベルが &lt;code&gt;prod&lt;/code&gt; 値のネットワークに一致します。</target>
        </trans-unit>
        <trans-unit id="1bfe9f9a5aba90f02fb92c52e07d997aad516d99" translate="yes" xml:space="preserve">
          <source>The following filter matches nodes with the &lt;code&gt;foo&lt;/code&gt; label regardless of its value.</source>
          <target state="translated">次のフィルターは、値に関係なく、 &lt;code&gt;foo&lt;/code&gt; ラベルを持つノードに一致します。</target>
        </trans-unit>
        <trans-unit id="831f1c4b12005720b96b4a2eca523b0715c5f7cf" translate="yes" xml:space="preserve">
          <source>The following filter matches nodes with the &lt;code&gt;manager&lt;/code&gt; role.</source>
          <target state="translated">次のフィルターは、 &lt;code&gt;manager&lt;/code&gt; 役割を持つノードに一致します。</target>
        </trans-unit>
        <trans-unit id="5d5928dc77f9ac8f51a5bf3a491007d5cb959aa9" translate="yes" xml:space="preserve">
          <source>The following filter matches nodes with the &lt;code&gt;membership&lt;/code&gt; of &lt;code&gt;accepted&lt;/code&gt;.</source>
          <target state="translated">次のフィルターは、 &lt;code&gt;accepted&lt;/code&gt; の &lt;code&gt;membership&lt;/code&gt; を持つノードに一致します。</target>
        </trans-unit>
        <trans-unit id="cae334a9403125be8e105d77b121e928b810cb0d" translate="yes" xml:space="preserve">
          <source>The following filter matches only &lt;code&gt;global&lt;/code&gt; services.</source>
          <target state="translated">次のフィルターは、 &lt;code&gt;global&lt;/code&gt; サービスのみに一致します。</target>
        </trans-unit>
        <trans-unit id="71b96abf9c912452dccc5fc2d078ff7d724074bf" translate="yes" xml:space="preserve">
          <source>The following filter matches only services with the &lt;code&gt;project&lt;/code&gt; label with the &lt;code&gt;project-a&lt;/code&gt; value.</source>
          <target state="translated">次のフィルターは、 &lt;code&gt;project-a&lt;/code&gt; 値を持つ &lt;code&gt;project&lt;/code&gt; ラベルを持つサービスのみに一致します。</target>
        </trans-unit>
        <trans-unit id="d589708b36e77b120b1eb37f5b3855633a489266" translate="yes" xml:space="preserve">
          <source>The following filter matches secret with a name containing a prefix of &lt;code&gt;test&lt;/code&gt;.</source>
          <target state="translated">次のフィルターは、 &lt;code&gt;test&lt;/code&gt; のプレフィックスを含む名前とsecretを照合します。</target>
        </trans-unit>
        <trans-unit id="51f41d32e59f1be3db1713960110b6924fa71193" translate="yes" xml:space="preserve">
          <source>The following filter matches services with a name containing &lt;code&gt;redis&lt;/code&gt;.</source>
          <target state="translated">次のフィルターは、名前に &lt;code&gt;redis&lt;/code&gt; を含むサービスに一致します。</target>
        </trans-unit>
        <trans-unit id="d06c94f037f10c7f3edd2ff9c61b81881e819a03" translate="yes" xml:space="preserve">
          <source>The following filter matches tasks with the &lt;code&gt;usage&lt;/code&gt; label regardless of its value.</source>
          <target state="translated">次のフィルターは、値に関係なく、 &lt;code&gt;usage&lt;/code&gt; ラベルのあるタスクに一致します。</target>
        </trans-unit>
        <trans-unit id="af809a75960cb0ab861cb2b30735a0d65c64aa88" translate="yes" xml:space="preserve">
          <source>The following filter matches the nodes with a name equal to &lt;code&gt;swarm-master&lt;/code&gt; string.</source>
          <target state="translated">次のフィルターは、 &lt;code&gt;swarm-master&lt;/code&gt; 文字列と同じ名前のノードに一致します。</target>
        </trans-unit>
        <trans-unit id="2791d823738fc796e3aff5cac56fe1c0dc58c276" translate="yes" xml:space="preserve">
          <source>The following flags are supported:</source>
          <target state="translated">以下のフラグがサポートされています。</target>
        </trans-unit>
        <trans-unit id="1ba2ceab8147a44173e52004a7d49f0cf956ab1a" translate="yes" xml:space="preserve">
          <source>The following illustrates a configuration with custom certificates:</source>
          <target state="translated">以下は、カスタム証明書を使用した構成を示しています。</target>
        </trans-unit>
        <trans-unit id="cdd40803f742cb5b009b755a1dfe76bf10cfc698" translate="yes" xml:space="preserve">
          <source>The following image depicts the various signing keys and their relationships:</source>
          <target state="translated">以下の画像は、様々な署名鍵とその関係を表しています。</target>
        </trans-unit>
        <trans-unit id="352e506ead5abd1cae6bbdfa70483c6c355b9774" translate="yes" xml:space="preserve">
          <source>The following instructions can be affected by the &lt;code&gt;SHELL&lt;/code&gt; instruction when the &lt;em&gt;shell&lt;/em&gt; form of them is used in a Dockerfile: &lt;code&gt;RUN&lt;/code&gt;, &lt;code&gt;CMD&lt;/code&gt; and &lt;code&gt;ENTRYPOINT&lt;/code&gt;.</source>
          <target state="translated">次の命令は、&lt;em&gt;シェル&lt;/em&gt;形式がDockerfileで使用されている場合、 &lt;code&gt;SHELL&lt;/code&gt; 命令の影響を受ける可能性があります： &lt;code&gt;RUN&lt;/code&gt; 、 &lt;code&gt;CMD&lt;/code&gt; および &lt;code&gt;ENTRYPOINT&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1530583c09c98f904de912a6701d7304d51b5c33" translate="yes" xml:space="preserve">
          <source>The following is an example adding 2 runtimes via the configuration:</source>
          <target state="translated">以下は、設定を介して2つのランタイムを追加した例です。</target>
        </trans-unit>
        <trans-unit id="90af25db82c012aee8c9941342b7fd06be7e8128" translate="yes" xml:space="preserve">
          <source>The following is an example of docker build with &lt;code&gt;--squash&lt;/code&gt; argument</source>
          <target state="translated">以下は、 &lt;code&gt;--squash&lt;/code&gt; 引数を使用したDockerビルドの例です。</target>
        </trans-unit>
        <trans-unit id="ddd205b6626f4c3147db765c896821f29986b142" translate="yes" xml:space="preserve">
          <source>The following is an example usage:</source>
          <target state="translated">以下に使用例を示します。</target>
        </trans-unit>
        <trans-unit id="679caa8ac3b309f79951e6369db67f2ba236eef1" translate="yes" xml:space="preserve">
          <source>The following list of features are deprecated in Engine. To learn more about Docker Engine&amp;rsquo;s deprecation policy, see &lt;a href=&quot;../index#feature-deprecation-policy&quot;&gt;Feature Deprecation Policy&lt;/a&gt;.</source>
          <target state="translated">以下の機能リストは、エンジンで非推奨になりました。Docker Engineの非推奨ポリシーの詳細については、「&lt;a href=&quot;../index#feature-deprecation-policy&quot;&gt;機能&lt;/a&gt;の非推奨ポリシー」を参照してください。</target>
        </trans-unit>
        <trans-unit id="64c0fd6330bb4fe27c1e99d4cbe6591be24268cc" translate="yes" xml:space="preserve">
          <source>The following matches containers based on the layer &lt;code&gt;d0e008c6cf02&lt;/code&gt; or an image that have this layer in its layer stack.</source>
          <target state="translated">以下は、レイヤー &lt;code&gt;d0e008c6cf02&lt;/code&gt; に基づくコンテナー、またはこのレイヤーがレイヤースタックにあるイメージに一致します。</target>
        </trans-unit>
        <trans-unit id="bd05d4ce6012ea3e96f3277ce3e558e06a24423a" translate="yes" xml:space="preserve">
          <source>The following options can only be used for bind mounts (&lt;code&gt;type=bind&lt;/code&gt;):</source>
          <target state="translated">以下のオプションは、バインドマウント（ &lt;code&gt;type=bind&lt;/code&gt; ）にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="cea3dc98beed9105761d1cfaaea9c4b21e0e47cf" translate="yes" xml:space="preserve">
          <source>The following options can only be used for named volumes (&lt;code&gt;type=volume&lt;/code&gt;):</source>
          <target state="translated">以下のオプションは、名前付きボリューム（ &lt;code&gt;type=volume&lt;/code&gt; ）にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="39bd07dcb7784b47d42d9d00b3b6828077c80e7a" translate="yes" xml:space="preserve">
          <source>The following options can only be used for tmpfs mounts (&lt;code&gt;type=tmpfs&lt;/code&gt;);</source>
          <target state="translated">以下のオプションは、tmpfsマウント（ &lt;code&gt;type=tmpfs&lt;/code&gt; ）にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="fd1b04f078db2f9a2a6553fdded57f5727f9750d" translate="yes" xml:space="preserve">
          <source>The following pages describe the usage information for the &lt;a href=&quot;overview/index&quot;&gt;docker-compose&lt;/a&gt; subcommands. You can also see this information by running &lt;code&gt;docker-compose [SUBCOMMAND] --help&lt;/code&gt; from the command line.</source>
          <target state="translated">次のページでは、&lt;a href=&quot;overview/index&quot;&gt;docker-compose&lt;/a&gt;サブコマンドの使用法について説明します。この情報は、コマンドラインから &lt;code&gt;docker-compose [SUBCOMMAND] --help&lt;/code&gt; を実行して確認することもできます。</target>
        </trans-unit>
        <trans-unit id="dc364422c59019db7e4caaa1bcce2d190b0a4ced" translate="yes" xml:space="preserve">
          <source>The following parser directives are supported:</source>
          <target state="translated">以下のパーサディレクティブがサポートされています。</target>
        </trans-unit>
        <trans-unit id="ee1ca432f62944696342ff92fbc385c17290cb85" translate="yes" xml:space="preserve">
          <source>The following ports must be available. On some systems, these ports are open by default.</source>
          <target state="translated">以下のポートが利用可能である必要があります。一部のシステムでは、これらのポートはデフォルトで開いています。</target>
        </trans-unit>
        <trans-unit id="5a06f0ecc09621b84e84a7621d8f9b7b0ea89d01" translate="yes" xml:space="preserve">
          <source>The following removes containers created before &lt;code&gt;2017-01-04T13:10:00&lt;/code&gt;:</source>
          <target state="translated">以下は、 &lt;code&gt;2017-01-04T13:10:00&lt;/code&gt; より前に作成されたコンテナーを削除します。</target>
        </trans-unit>
        <trans-unit id="a5383a9d9670f9fdcac5ef218e29b45584acf08d" translate="yes" xml:space="preserve">
          <source>The following removes containers created more than 5 minutes ago:</source>
          <target state="translated">以下は、5分以上前に作成されたコンテナを削除します。</target>
        </trans-unit>
        <trans-unit id="202bf18e4819e0fe8e3548e75a0fa6fea50dae22" translate="yes" xml:space="preserve">
          <source>The following removes images created before &lt;code&gt;2017-01-04T00:00:00&lt;/code&gt;:</source>
          <target state="translated">以下は、 &lt;code&gt;2017-01-04T00:00:00&lt;/code&gt; より前に作成された画像を削除します。</target>
        </trans-unit>
        <trans-unit id="01bf49080ffa5c29f8ac4d7b93c3575d2fc4a323" translate="yes" xml:space="preserve">
          <source>The following removes images created more than 10 days (&lt;code&gt;240h&lt;/code&gt;) ago:</source>
          <target state="translated">以下は、10日（ &lt;code&gt;240h&lt;/code&gt; ）より前に作成された画像を削除します。</target>
        </trans-unit>
        <trans-unit id="d46d20f52659f2d385980b8dc19d20edf5adca1a" translate="yes" xml:space="preserve">
          <source>The following removes networks created more than 5 minutes ago. Note that system networks such as &lt;code&gt;bridge&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, and &lt;code&gt;none&lt;/code&gt; will never be pruned:</source>
          <target state="translated">以下は、5分以上前に作成されたネットワークを削除します。 &lt;code&gt;bridge&lt;/code&gt; 、 &lt;code&gt;host&lt;/code&gt; 、および &lt;code&gt;none&lt;/code&gt; などのシステムネットワークはプルーニングされないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="b7021eb31e260a4ca6fc6f6f26bc884d3533e40f" translate="yes" xml:space="preserve">
          <source>The following sections illustrate ways to use this command.</source>
          <target state="translated">以下のセクションでは、このコマンドの使用方法を説明します。</target>
        </trans-unit>
        <trans-unit id="afdb57289147fd04a4ba308a16d159524fbc3492" translate="yes" xml:space="preserve">
          <source>The following sections provide details about service configuration. This topic does not cover every flag or scenario. In almost every instance where you can define a configuration at service creation, you can also update an existing service&amp;rsquo;s configuration in a similar way.</source>
          <target state="translated">次のセクションでは、サービス構成について詳しく説明します。このトピックでは、すべてのフラグまたはシナリオを取り上げているわけではありません。サービスの作成時に構成を定義できるほとんどすべてのインスタンスで、既存のサービスの構成を同様の方法で更新することもできます。</target>
        </trans-unit>
        <trans-unit id="edb72a975dadb1beb00c0c5a8ab9b701acb1be71" translate="yes" xml:space="preserve">
          <source>The following service&amp;rsquo;s containers have an environment variable &lt;code&gt;$MYVAR&lt;/code&gt; set to &lt;code&gt;myvalue&lt;/code&gt;, run from the &lt;code&gt;/tmp/&lt;/code&gt; directory, and run as the &lt;code&gt;my_user&lt;/code&gt; user.</source>
          <target state="translated">次のサービスのコンテナーには、環境変数 &lt;code&gt;$MYVAR&lt;/code&gt; が &lt;code&gt;myvalue&lt;/code&gt; に設定されており、 &lt;code&gt;/tmp/&lt;/code&gt; ディレクトリーから実行され、 &lt;code&gt;my_user&lt;/code&gt; ユーザーとして実行されます。</target>
        </trans-unit>
        <trans-unit id="0ab0d241a851d150a626e3f1ab1b7b1212496ed2" translate="yes" xml:space="preserve">
          <source>The following simple example retrieves the gMSA name and JSON contents from your Active Directory (AD) instance:</source>
          <target state="translated">次の簡単な例は、Active Directory (AD)インスタンスから gMSA 名と JSON コンテンツを取得します。</target>
        </trans-unit>
        <trans-unit id="38079e33d70456cc78ac6a52b32f01a2f427e7f7" translate="yes" xml:space="preserve">
          <source>The following single-dash (&lt;code&gt;-opt&lt;/code&gt;) variant of certain command line options are deprecated and replaced with double-dash options (&lt;code&gt;--opt&lt;/code&gt;):</source>
          <target state="translated">特定のコマンドラインオプションの次の単一ダッシュ（ &lt;code&gt;-opt&lt;/code&gt; ）バリアントは非推奨になり、二重ダッシュオプション（ &lt;code&gt;--opt&lt;/code&gt; ）に置き換えられました。</target>
        </trans-unit>
        <trans-unit id="0a9d899e8a7c4ecbad3f9d3cdace6b7d2cb28d82" translate="yes" xml:space="preserve">
          <source>The following standard Docker features are incompatible with running a Docker daemon with user namespaces enabled:</source>
          <target state="translated">以下の標準的なDocker機能は、ユーザー名空間を有効にした状態でDockerデーモンを実行すると互換性がありません。</target>
        </trans-unit>
        <trans-unit id="ceab97b073bdd541ffd2040b147c10ea3c77a29f" translate="yes" xml:space="preserve">
          <source>The following sub-options (supported for &lt;code&gt;docker-compose up&lt;/code&gt; and &lt;code&gt;docker-compose run&lt;/code&gt;) are &lt;em&gt;not supported&lt;/em&gt; for &lt;code&gt;docker stack deploy&lt;/code&gt; or the &lt;code&gt;deploy&lt;/code&gt; key.</source>
          <target state="translated">次のサブオプション（ &lt;code&gt;docker-compose up&lt;/code&gt; および &lt;code&gt;docker-compose run&lt;/code&gt; で&lt;em&gt;サポートさ&lt;/em&gt;れて&lt;em&gt;い&lt;/em&gt;ます）は、 &lt;code&gt;docker stack deploy&lt;/code&gt; または &lt;code&gt;deploy&lt;/code&gt; キーで&lt;em&gt;はサポートさ&lt;/em&gt;れて&lt;em&gt;いません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a512515c3c3198b7df3ff59809648ff2c8837053" translate="yes" xml:space="preserve">
          <source>The following table describes options which apply to both bind mounts and named volumes in a service:</source>
          <target state="translated">次の表は、サービス内のバインドマウントと名前付きボリュームの両方に適用されるオプションについて説明します。</target>
        </trans-unit>
        <trans-unit id="97af8835fb1b0d42baf566cddbcbd484b22e0273" translate="yes" xml:space="preserve">
          <source>The following table represents all the valid suffixes with their build contexts:</source>
          <target state="translated">以下の表は、すべての有効なサフィックスとそのビルドコンテキストを表しています。</target>
        </trans-unit>
        <trans-unit id="50973c531dcf0fca5d800927b2bb86570dc6d0d2" translate="yes" xml:space="preserve">
          <source>The following topics are available:</source>
          <target state="translated">以下のようなトピックがあります。</target>
        </trans-unit>
        <trans-unit id="c92203c1f68f879df757bddd6ad2f3fdfa59c581" translate="yes" xml:space="preserve">
          <source>The following values are accepted:</source>
          <target state="translated">以下の値を受け付けています。</target>
        </trans-unit>
        <trans-unit id="d23ee3675fec03d4201ad5d2868adb69fbb5b7cc" translate="yes" xml:space="preserve">
          <source>The format of the command is:</source>
          <target state="translated">コマンドの形式は</target>
        </trans-unit>
        <trans-unit id="0b9473095568a70fbc515fca5a0c0de6d7b7304b" translate="yes" xml:space="preserve">
          <source>The formatting option (&lt;code&gt;--format&lt;/code&gt;) pretty prints container output using a Go template.</source>
          <target state="translated">フォーマットオプション（ &lt;code&gt;--format&lt;/code&gt; ）は、Goテンプレートを使用してコンテナー出力をきれいに出力します。</target>
        </trans-unit>
        <trans-unit id="c90b205d5d057562cc93124ef1fb067815c006a8" translate="yes" xml:space="preserve">
          <source>The formatting option (&lt;code&gt;--format&lt;/code&gt;) pretty prints secrets output using a Go template.</source>
          <target state="translated">フォーマットオプション（ &lt;code&gt;--format&lt;/code&gt; ）は、Goテンプレートを使用してシークレット出力をきれいに出力します。</target>
        </trans-unit>
        <trans-unit id="1e5fb6599ab24fd4faffd8e8e434811f64c4a751" translate="yes" xml:space="preserve">
          <source>The formatting option (&lt;code&gt;--format&lt;/code&gt;) pretty-prints container output using a Go template.</source>
          <target state="translated">フォーマットオプション（ &lt;code&gt;--format&lt;/code&gt; ）は、Goテンプレートを使用してコンテナー出力をpretty-printします。</target>
        </trans-unit>
        <trans-unit id="1e114329ca4f7454a532ed757c39d973cba22e9d" translate="yes" xml:space="preserve">
          <source>The formatting option (&lt;code&gt;--format&lt;/code&gt;) pretty-prints machines using a Go template.</source>
          <target state="translated">フォーマットオプション（ &lt;code&gt;--format&lt;/code&gt; ）は、Goテンプレートを使用してマシンをきれいに印刷します。</target>
        </trans-unit>
        <trans-unit id="4cecb8823d0ae5d7ce668900da8f03c68d247526" translate="yes" xml:space="preserve">
          <source>The formatting option (&lt;code&gt;--format&lt;/code&gt;) pretty-prints search output using a Go template.</source>
          <target state="translated">フォーマットオプション（ &lt;code&gt;--format&lt;/code&gt; ）は、Goテンプレートを使用して検索出力をきれいに出力します。</target>
        </trans-unit>
        <trans-unit id="9a7c2de2b27bbeda9fbf4be2fff41c1c922774e7" translate="yes" xml:space="preserve">
          <source>The formatting option (&lt;code&gt;--format&lt;/code&gt;) pretty-prints stacks using a Go template.</source>
          <target state="translated">フォーマットオプション（ &lt;code&gt;--format&lt;/code&gt; ）は、Goテンプレートを使用してスタックをプリティプリントします。</target>
        </trans-unit>
        <trans-unit id="48e15b8c4939c370c3bb6974bca1dc0fcff7af41" translate="yes" xml:space="preserve">
          <source>The formatting option (&lt;code&gt;--format&lt;/code&gt;) will pretty print container output using a Go template.</source>
          <target state="translated">フォーマットオプション（ &lt;code&gt;--format&lt;/code&gt; ）は、Goテンプレートを使用してコンテナー出力をきれいに印刷します。</target>
        </trans-unit>
        <trans-unit id="6132c3a006eb8cedb324f2bffedcbf9e0fcc1405" translate="yes" xml:space="preserve">
          <source>The formatting option (&lt;code&gt;--format&lt;/code&gt;) will pretty-prints history output using a Go template.</source>
          <target state="translated">フォーマットオプション（ &lt;code&gt;--format&lt;/code&gt; ）は、Goテンプレートを使用して履歴出力をきれいに出力します。</target>
        </trans-unit>
        <trans-unit id="24b5cac13ad3ca9432388011779d2d67c8c0d7ff" translate="yes" xml:space="preserve">
          <source>The formatting options (&lt;code&gt;--format&lt;/code&gt;) pretty-prints networks output using a Go template.</source>
          <target state="translated">フォーマットオプション（ &lt;code&gt;--format&lt;/code&gt; ）は、Goテンプレートを使用してネットワーク出力をプリティプリントします。</target>
        </trans-unit>
        <trans-unit id="f383ba453be785051b7c5611493a2ff002cfda87" translate="yes" xml:space="preserve">
          <source>The formatting options (&lt;code&gt;--format&lt;/code&gt;) pretty-prints nodes output using a Go template.</source>
          <target state="translated">フォーマットオプション（ &lt;code&gt;--format&lt;/code&gt; ）は、Goテンプレートを使用してノード出力をプリティプリントします。</target>
        </trans-unit>
        <trans-unit id="4fac954b380cf768ad87c1f69c92adba5a56b9ee" translate="yes" xml:space="preserve">
          <source>The formatting options (&lt;code&gt;--format&lt;/code&gt;) pretty-prints plugins output using a Go template.</source>
          <target state="translated">書式設定オプション（ &lt;code&gt;--format&lt;/code&gt; ）は、Goテンプレートを使用してプラグイン出力をプリティプリントします。</target>
        </trans-unit>
        <trans-unit id="a5b662551ceb72817b0d9d973a68e9e4c8e129c8" translate="yes" xml:space="preserve">
          <source>The formatting options (&lt;code&gt;--format&lt;/code&gt;) pretty-prints services output using a Go template.</source>
          <target state="translated">フォーマットオプション（ &lt;code&gt;--format&lt;/code&gt; ）は、Goテンプレートを使用してサービス出力をプリティプリントします。</target>
        </trans-unit>
        <trans-unit id="67076d11d977bc7a1dcefe49045e4eae2c6c8f21" translate="yes" xml:space="preserve">
          <source>The formatting options (&lt;code&gt;--format&lt;/code&gt;) pretty-prints tasks output using a Go template.</source>
          <target state="translated">フォーマットオプション（ &lt;code&gt;--format&lt;/code&gt; ）は、Goテンプレートを使用してタスク出力をプリティプリントします。</target>
        </trans-unit>
        <trans-unit id="a63922a8194d1ad1d264b55c3eca84dfc755a202" translate="yes" xml:space="preserve">
          <source>The formatting options (&lt;code&gt;--format&lt;/code&gt;) pretty-prints volumes output using a Go template.</source>
          <target state="translated">フォーマットオプション（ &lt;code&gt;--format&lt;/code&gt; ）は、Goテンプレートを使用してボリューム出力をプリティプリントします。</target>
        </trans-unit>
        <trans-unit id="2478ba4d66a52065d825d802915cb3a4ef902b9b" translate="yes" xml:space="preserve">
          <source>The functionality described on this page is marked as Experimental, and as such, may change before it becomes generally available.</source>
          <target state="translated">このページに記載されている機能は実験的なものであり、一般的に利用できるようになる前に変更されることがあります。</target>
        </trans-unit>
        <trans-unit id="53df056b93586ddb8659e1d397c9782f60693b8e" translate="yes" xml:space="preserve">
          <source>The general format is shown here.</source>
          <target state="translated">一般的なフォーマットを示します。</target>
        </trans-unit>
        <trans-unit id="275c8aaaaa26e22f95d5301cc3b55ac3cdec446d" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;-D&lt;/code&gt; option causes all &lt;code&gt;docker&lt;/code&gt; commands to output debug information.</source>
          <target state="translated">グローバル &lt;code&gt;-D&lt;/code&gt; オプションを指定すると、すべての &lt;code&gt;docker&lt;/code&gt; コマンドがデバッグ情報を出力します。</target>
        </trans-unit>
        <trans-unit id="6ad7d09f09c6ebab4bee47e20efdb157b4305cec" translate="yes" xml:space="preserve">
          <source>The hard part is over. Now you just repeat the process you used in &lt;a href=&quot;../part3/index&quot;&gt;part 3&lt;/a&gt; to deploy on your new swarm. Just remember that only swarm managers like &lt;code&gt;myvm1&lt;/code&gt; execute Docker commands; workers are just for capacity.</source>
          <target state="translated">難しい部分は終わりました。ここで、&lt;a href=&quot;../part3/index&quot;&gt;パート3で&lt;/a&gt;使用したプロセスを繰り返して、新しい群にデプロイします。 &lt;code&gt;myvm1&lt;/code&gt; のようなswarm managerだけがDockerコマンドを実行することを覚えておいてください。労働者は容量のためだけです。</target>
        </trans-unit>
        <trans-unit id="7a17f01abd893e1c6c4a0f1c0bf80ec053a99aa9" translate="yes" xml:space="preserve">
          <source>The health check will first run &lt;strong&gt;interval&lt;/strong&gt; seconds after the container is started, and then again &lt;strong&gt;interval&lt;/strong&gt; seconds after each previous check completes.</source>
          <target state="translated">ヘルスチェックは、コンテナが起動してから&lt;strong&gt;interval&lt;/strong&gt;秒後に最初に実行され、その後、前の各チェックが完了してから&lt;strong&gt;interval&lt;/strong&gt;秒後に再度実行され&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="50587757d59b1045d03cb2b55f5bd32ec2daecbc" translate="yes" xml:space="preserve">
          <source>The health status is also displayed in the &lt;code&gt;docker ps&lt;/code&gt; output.</source>
          <target state="translated">ヘルスステータスは、 &lt;code&gt;docker ps&lt;/code&gt; 出力にも表示されます。</target>
        </trans-unit>
        <trans-unit id="a44e290ddaf714a047442f22669818b2b8934cc6" translate="yes" xml:space="preserve">
          <source>The helpers always use the first argument in the command to identify the action. There are only three possible values for that argument: &lt;code&gt;store&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, and &lt;code&gt;erase&lt;/code&gt;.</source>
          <target state="translated">ヘルパーは常にコマンドの最初の引数を使用してアクションを識別します。その引数に &lt;code&gt;get&lt;/code&gt; 値は3つだけです： &lt;code&gt;store&lt;/code&gt; 、get、および &lt;code&gt;erase&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49e3d75f86bffa0f3dc84c1b532153407879db50" translate="yes" xml:space="preserve">
          <source>The hostname associated with the container</source>
          <target state="translated">コンテナに関連付けられたホスト名</target>
        </trans-unit>
        <trans-unit id="24b249127db194475ad1fa29636e81e19aba196a" translate="yes" xml:space="preserve">
          <source>The hostname of the remote trust service</source>
          <target state="translated">リモートトラストサービスのホスト名</target>
        </trans-unit>
        <trans-unit id="bc8d4004d9c5c0b1afc9e1c0ff064322235cdc74" translate="yes" xml:space="preserve">
          <source>The image manifest &lt;a href=&quot;https://github.com/docker/distribution/blob/fda42e5ef908bdba722d435ff1f330d40dfcd56c/docs/spec/manifest-v2-1/&quot;&gt;v2 schema 1&lt;/a&gt; format is deprecated in favor of the &lt;a href=&quot;https://github.com/docker/distribution/blob/fda42e5ef908bdba722d435ff1f330d40dfcd56c/docs/spec/manifest-v2-2/&quot;&gt;v2 schema 2&lt;/a&gt; format.</source>
          <target state="translated">画像マニフェスト&lt;a href=&quot;https://github.com/docker/distribution/blob/fda42e5ef908bdba722d435ff1f330d40dfcd56c/docs/spec/manifest-v2-1/&quot;&gt;v2スキーマ1&lt;/a&gt;形式は非推奨になり、&lt;a href=&quot;https://github.com/docker/distribution/blob/fda42e5ef908bdba722d435ff1f330d40dfcd56c/docs/spec/manifest-v2-2/&quot;&gt;v2スキーマ2&lt;/a&gt;形式が優先されます。</target>
        </trans-unit>
        <trans-unit id="95437efa4b2f4d528cee5344d23a48586427b1cb" translate="yes" xml:space="preserve">
          <source>The image that the service runs. Docker images should be referenced with full content hash to fully specify the deployment artifact for the service. Example: &lt;code&gt;postgres@sha256:e0a230a9f5b4e1b8b03bb3e8cf7322b0e42b7838c5c87f4545edb48f5eb8f077&lt;/code&gt;</source>
          <target state="translated">サービスが実行するイメージ。サービスのデプロイメントアーティファクトを完全に指定するには、Dockerイメージを完全なコンテンツハッシュで参照する必要があります。例： &lt;code&gt;postgres@sha256:e0a230a9f5b4e1b8b03bb3e8cf7322b0e42b7838c5c87f4545edb48f5eb8f077&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c2247e031dafb7acba700a626e657e0cfe4cdcf" translate="yes" xml:space="preserve">
          <source>The implementation of the consensus algorithm in swarm mode means it features the properties inherent to distributed systems:</source>
          <target state="translated">スウォームモードでのコンセンサスアルゴリズムの実装は、分散システムに固有の特性を備えていることを意味します。</target>
        </trans-unit>
        <trans-unit id="9c31e09abe96c3782c39594f852fa5e18a0ad156" translate="yes" xml:space="preserve">
          <source>The instruction is not case-sensitive. However, convention is for them to be UPPERCASE to distinguish them from arguments more easily.</source>
          <target state="translated">この命令は大文字小文字を区別しません。しかし、引数との区別を容易にするためには、それらをUPPERCASEにするのが慣例です。</target>
        </trans-unit>
        <trans-unit id="432ac2568e57f2999351cf4730fe1a622e719e5b" translate="yes" xml:space="preserve">
          <source>The instructions below outline installation of the current stable release (&lt;strong&gt;v1.24.1&lt;/strong&gt;) of Compose. To install a different version of Compose, replace the given release number with the one that you want. Compose releases are also listed and available for direct download on the &lt;a href=&quot;https://github.com/docker/compose/releases&quot;&gt;Compose repository release page on GitHub&lt;/a&gt;. To install a &lt;strong&gt;pre-release&lt;/strong&gt; of Compose, refer to the &lt;a href=&quot;#install-pre-release-builds&quot;&gt;install pre-release builds&lt;/a&gt; section.</source>
          <target state="translated">以下の手順は、Composeの現在の安定版リリース（&lt;strong&gt;v1.24.1&lt;/strong&gt;）のインストールの概要を示しています。別のバージョンのComposeをインストールするには、所定のリリース番号を必要なリリース番号に置き換えます。&lt;a href=&quot;https://github.com/docker/compose/releases&quot;&gt;GitHubのComposeリポジトリリリースページに&lt;/a&gt; Composeリリースもリストされており、直接ダウンロードできます。Composeの&lt;strong&gt;プレリリース&lt;/strong&gt;をインストールするには、&lt;strong&gt;プレ&lt;/strong&gt;&lt;a href=&quot;#install-pre-release-builds&quot;&gt;リリースビルドのインストールの&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="a728e9ba163d13c002fa9cbc101bd55bb3117d98" translate="yes" xml:space="preserve">
          <source>The keyword &lt;code&gt;secrets:&lt;/code&gt; defines two secrets &lt;code&gt;db_password:&lt;/code&gt; and &lt;code&gt;db_root_password:&lt;/code&gt;.</source>
          <target state="translated">キーワード &lt;code&gt;secrets:&lt;/code&gt; は、2つのシークレット &lt;code&gt;db_password:&lt;/code&gt; および &lt;code&gt;db_root_password:&lt;/code&gt; を定義します。</target>
        </trans-unit>
        <trans-unit id="f38f01c9dd04c1cf0aaafe08aeddca4be0e7e775" translate="yes" xml:space="preserve">
          <source>The label-file format is similar to the format for loading environment variables. (Unlike environment variables, labels are not visible to processes running inside a container.) The following example illustrates a label-file format:</source>
          <target state="translated">ラベルファイルのフォーマットは、環境変数を読み込むためのフォーマットに似ています。(環境変数とは異なり、ラベルはコンテナ内で実行されているプロセスからは見えません)次の例は、ラベルファイルのフォーマットを示しています。</target>
        </trans-unit>
        <trans-unit id="b061ec279352905ba71ef5544860362f98c44798" translate="yes" xml:space="preserve">
          <source>The labels you set for nodes using &lt;code&gt;docker node update&lt;/code&gt; apply only to the node entity within the swarm. Do not confuse them with the docker daemon labels for &lt;a href=&quot;https://docs.docker.com/config#daemon-labels&quot;&gt;dockerd&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;docker node update&lt;/code&gt; を使用してノードに設定したラベルは、スウォーム内のノードエンティティにのみ適用されます。これらを&lt;a href=&quot;https://docs.docker.com/config#daemon-labels&quot;&gt;dockerdのdocker&lt;/a&gt;デーモンラベルと混同しないでください。</target>
        </trans-unit>
        <trans-unit id="00c354608645937cfbba945cdf048bbd0c24872e" translate="yes" xml:space="preserve">
          <source>The labels you set for nodes using docker node update apply only to the node entity within the swarm. Do not confuse them with the docker daemon labels for &lt;a href=&quot;https://docs.docker.com/config#daemon-labels&quot;&gt;dockerd&lt;/a&gt;.</source>
          <target state="translated">docker node updateを使用してノードに設定したラベルは、スウォーム内のノードエンティティにのみ適用されます。これらを&lt;a href=&quot;https://docs.docker.com/config#daemon-labels&quot;&gt;dockerdのdocker&lt;/a&gt;デーモンラベルと混同しないでください。</target>
        </trans-unit>
        <trans-unit id="a43092dff37282e5d580b06cc9c9a241636d4555" translate="yes" xml:space="preserve">
          <source>The last argument is set to &lt;code&gt;-&lt;/code&gt;, which indicates that the input is read from standard input.</source>
          <target state="translated">最後の引数は &lt;code&gt;-&lt;/code&gt; に設定されます。これは、入力が標準入力から読み取られることを示します。</target>
        </trans-unit>
        <trans-unit id="f88ec5c1efa88b85aa9dbdbf3b9ef1192d7e39a6" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;overlay&lt;/code&gt; storage driver allowed using overlayFS-backed filesystems on pre 4.x kernels. Now that all supported distributions are able to run &lt;code&gt;overlay2&lt;/code&gt; (as they are either on kernel 4.x, or have support for multiple lowerdirs backported), there is no reason to keep maintaining the &lt;code&gt;overlay&lt;/code&gt; storage driver.</source>
          <target state="translated">レガシー &lt;code&gt;overlay&lt;/code&gt; ストレージドライバーでは、4.xより前のカーネルでoverlayFSを使用したファイルシステムを使用できました。サポートされているすべてのディストリビューションが &lt;code&gt;overlay2&lt;/code&gt; を実行できるようになったため（カーネル4.x上にあるか、バックポートされた複数のlowerdirsをサポートしているため）、 &lt;code&gt;overlay&lt;/code&gt; ストレージドライバーを維持し続ける理由はありません。</target>
        </trans-unit>
        <trans-unit id="72ca0136842dab10471332313be4ade3373c948b" translate="yes" xml:space="preserve">
          <source>The list of currently supported feature options:</source>
          <target state="translated">現在サポートされている機能オプションのリスト。</target>
        </trans-unit>
        <trans-unit id="d3c8c2e1de66029817dafcb63fc75fe2dc499fd0" translate="yes" xml:space="preserve">
          <source>The list of currently supported options that can be reconfigured is this:</source>
          <target state="translated">現在サポートされている再設定可能なオプションのリストはこれです。</target>
        </trans-unit>
        <trans-unit id="0e98a52d303448e87f626daa2e157f85abb30be2" translate="yes" xml:space="preserve">
          <source>The logging and bug reporting configuration options for both Notary server and Notary signer have the same keys and format. The following sections provide further detail.</source>
          <target state="translated">NotaryサーバとNotary署名者の両方のログ記録とバグ報告の設定オプションには、同じキーとフォーマットがあります。以下のセクションでさらに詳細を説明します。</target>
        </trans-unit>
        <trans-unit id="86bd991ac2f1db82855964d5b14b4bce6e93bce7" translate="yes" xml:space="preserve">
          <source>The logging section sets the log level of the server. If it is not provided, the signer/server defaults to an ERROR logging level. However if an explicit value was provided, it must be a valid value.</source>
          <target state="translated">ロギングセクションは、サーバのログレベルを設定する。これが指定されていない場合、署名者/サーバはデフォルトで ERROR ロギングレベルを設定する。ただし、明示的な値が指定されている場合は有効な値でなければならない。</target>
        </trans-unit>
        <trans-unit id="9e762c03589c3d17a47706808801d159143b4877" translate="yes" xml:space="preserve">
          <source>The long form syntax allows the configuration of additional fields that can&amp;rsquo;t be expressed in the short form.</source>
          <target state="translated">長い形式の構文では、短い形式では表現できない追加のフィールドを構成できます。</target>
        </trans-unit>
        <trans-unit id="b98877d748e2beaa689b50122d97e4a10950df00" translate="yes" xml:space="preserve">
          <source>The long syntax provides more granularity in how the config is created within the service&amp;rsquo;s task containers.</source>
          <target state="translated">長い構文では、サービスのタスクコンテナ内で構成を作成する方法がより細かくなります。</target>
        </trans-unit>
        <trans-unit id="ab4ed053560438068d3b26d30072e5bb12d4735d" translate="yes" xml:space="preserve">
          <source>The long syntax provides more granularity in how the secret is created within the service&amp;rsquo;s task containers.</source>
          <target state="translated">長い構文では、サービスのタスクコンテナ内でシークレットを作成する方法がより細かくなります。</target>
        </trans-unit>
        <trans-unit id="e55fd2f0d1c7aad656123b72a8eaa4423c80f42a" translate="yes" xml:space="preserve">
          <source>The machine IP addresses returned by &lt;code&gt;docker-machine ls&lt;/code&gt; include port 2376, which is the Docker daemon port. Do not use this port or &lt;a href=&quot;https://forums.docker.com/t/docker-swarm-join-with-virtualbox-connection-error-13-bad-certificate/31392/2&quot;&gt;you may experience errors&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;docker-machine ls&lt;/code&gt; によって返されるマシンのIPアドレスには、Dockerデーモンポートであるポート2376が含まれます。このポートは使用しないでください。使用すると&lt;a href=&quot;https://forums.docker.com/t/docker-swarm-join-with-virtualbox-connection-error-13-bad-certificate/31392/2&quot;&gt;エラーが発生する可能性があります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b1e4cfbe37efbd898032e44dbda616a3d3379c37" translate="yes" xml:space="preserve">
          <source>The main process inside the container referenced under the link &lt;code&gt;redis&lt;/code&gt; will receive &lt;code&gt;SIGKILL&lt;/code&gt;, then the container will be removed.</source>
          <target state="translated">リンク &lt;code&gt;redis&lt;/code&gt; で参照されるコンテナー内のメインプロセスは &lt;code&gt;SIGKILL&lt;/code&gt; を受け取り、コンテナーは削除されます。</target>
        </trans-unit>
        <trans-unit id="6387957ec493a472590c3ca3e7ac1366b4edd047" translate="yes" xml:space="preserve">
          <source>The main process inside the container will receive &lt;code&gt;SIGTERM&lt;/code&gt;, and after a grace period, &lt;code&gt;SIGKILL&lt;/code&gt;.</source>
          <target state="translated">コンテナー内のメインプロセスは &lt;code&gt;SIGTERM&lt;/code&gt; を受け取り、猶予期間の後は &lt;code&gt;SIGKILL&lt;/code&gt; を受け取ります。</target>
        </trans-unit>
        <trans-unit id="ee7fca0430379bc3c92a18b854c9921ca0e85f66" translate="yes" xml:space="preserve">
          <source>The manager instructs the worker nodes to redeploy the tasks using the image at that tag.</source>
          <target state="translated">マネージャはワーカーノードに、そのタグのイメージを使用してタスクを再配置するように指示します。</target>
        </trans-unit>
        <trans-unit id="710695523bad549ff83605c3df401f525b183c0d" translate="yes" xml:space="preserve">
          <source>The manager node also generates two tokens to use when you join additional nodes to the swarm: one &lt;strong&gt;worker token&lt;/strong&gt; and one &lt;strong&gt;manager token&lt;/strong&gt;. Each token includes the digest of the root CA&amp;rsquo;s certificate and a randomly generated secret. When a node joins the swarm, the joining node uses the digest to validate the root CA certificate from the remote manager. The remote manager uses the secret to ensure the joining node is an approved node.</source>
          <target state="translated">また、マネージャノードは、追加のノードをスウォームに参加させるときに使用する2つのトークンを生成します。1つは&lt;strong&gt;workerトークン&lt;/strong&gt;、もう1つは&lt;strong&gt;managerトークン&lt;/strong&gt;です。各トークンには、ルートCAの証明書のダイジェストとランダムに生成されたシークレットが含まれています。ノードがスウォームに参加すると、参加ノードはダイジェストを使用して、リモートマネージャからのルートCA証明書を検証します。リモートマネージャは、シークレットを使用して、参加するノードが承認されたノードであることを確認します。</target>
        </trans-unit>
        <trans-unit id="6fe7ef87a2896b45c763e7b46ac2607a814197d3" translate="yes" xml:space="preserve">
          <source>The manifest command interacts solely with a Docker registry. Because of this, it has no way to query the engine for the list of allowed insecure registries. To allow the CLI to interact with an insecure registry, some &lt;code&gt;docker manifest&lt;/code&gt; commands have an &lt;code&gt;--insecure&lt;/code&gt; flag. For each transaction, such as a &lt;code&gt;create&lt;/code&gt;, which queries a registry, the &lt;code&gt;--insecure&lt;/code&gt; flag must be specified. This flag tells the CLI that this registry call may ignore security concerns like missing or self-signed certificates. Likewise, on a &lt;code&gt;manifest push&lt;/code&gt; to an insecure registry, the &lt;code&gt;--insecure&lt;/code&gt; flag must be specified. If this is not used with an insecure registry, the manifest command fails to find a registry that meets the default requirements.</source>
          <target state="translated">manifestコマンドは、Dockerレジストリとのみ対話します。このため、許可されている安全でないレジストリのリストをエンジンに問い合わせる方法はありません。CLIが安全でないレジストリと対話できるようにするために、一部の &lt;code&gt;--insecure&lt;/code&gt; &lt;code&gt;docker manifest&lt;/code&gt; コマンドには--insecureフラグがあります。レジストリをクエリする &lt;code&gt;create&lt;/code&gt; などのトランザクションごとに、-- &lt;code&gt;--insecure&lt;/code&gt; フラグを指定する必要があります。このフラグは、このレジストリコールが欠落している証明書や自己署名証明書などのセキュリティ上の問題を無視する可能性があることをCLIに通知します。同様に、上の &lt;code&gt;manifest push&lt;/code&gt; 不安定なレジストリに、 &lt;code&gt;--insecure&lt;/code&gt; フラグを指定する必要があります。これが安全でないレジストリで使用されない場合、manifestコマンドはデフォルトの要件を満たすレジストリを見つけることができません。</target>
        </trans-unit>
        <trans-unit id="9ffd76b694c7c7a6e6da7a3f6166050339325636" translate="yes" xml:space="preserve">
          <source>The max age, in seconds, for caching services to cache the latest metadata for a role and the metadata by checksum for a role. This value is set on the cache control headers for GET-ting metadata. `must-revalidate` is also set on the cache control headers for current metadata, as current metadata may change whenever new metadata is signed into a repo. Consistent metadata should never change, although it may be deleted, so the max age can be a higher value.</source>
          <target state="translated">キャッシングサービスがロールの最新のメタデータとロールのチェックサムによるメタデータをキャッシュするための最大年齢を秒単位で指定します。この値はGET-tingメタデータのキャッシュ制御ヘッダに設定されます。`must-revalidate` は現在のメタデータのキャッシュ制御ヘッダにも設定されます。一貫性のあるメタデータは削除されるかもしれませんが、決して変更されるべきではありません。</target>
        </trans-unit>
        <trans-unit id="58a5cf58f71249302a3075f943ef43b227012536" translate="yes" xml:space="preserve">
          <source>The maximum number of tasks to roll back in parallel. By default, one task is rolled back at a time. A value of &lt;code&gt;0&lt;/code&gt; causes all tasks to be rolled back in parallel.</source>
          <target state="translated">並行してロールバックするタスクの最大数。デフォルトでは、一度に1つのタスクがロールバックされます。値を &lt;code&gt;0&lt;/code&gt; にすると、すべてのタスクが並行してロールバックされます。</target>
        </trans-unit>
        <trans-unit id="a35c3e7a9e4e6e95678b28327ea178f97e6c0685" translate="yes" xml:space="preserve">
          <source>The means of installing and running a network driver plugin depend on the particular plugin. So, be sure to install your plugin according to the instructions obtained from the plugin developer.</source>
          <target state="translated">ネットワークドライバプラグインをインストールして実行する方法は、特定のプラグインに依存します。そのため、プラグインの開発元から入手した指示に従ってプラグインをインストールするようにしてください。</target>
        </trans-unit>
        <trans-unit id="4a2d84181923d3b2758ab234bc6aa9a8b22fc07a" translate="yes" xml:space="preserve">
          <source>The minimum Docker Engine version you must be running</source>
          <target state="translated">実行しているDocker Engineの最小バージョン</target>
        </trans-unit>
        <trans-unit id="b01ded6c0b3d82f55e3f46535073246347104b21" translate="yes" xml:space="preserve">
          <source>The mode to use for binding the port, either</source>
          <target state="translated">ポートのバインドに使用するモード。</target>
        </trans-unit>
        <trans-unit id="db6f7022b8d25772c7d891f36408220c2990344a" translate="yes" xml:space="preserve">
          <source>The most basic operation is listing the available signed tags in a repository. The Notary client used in isolation does not know where the trust repositories are located. So, you must provide the &lt;code&gt;-s&lt;/code&gt; (or long form &lt;code&gt;--server&lt;/code&gt;) flag to tell the client which repository server it should communicate with.</source>
          <target state="translated">最も基本的な操作は、リポジトリで使用可能な署名済みタグを一覧表示することです。単独で使用される公証クライアントは、信頼リポジトリがどこにあるかを認識していません。したがって、 &lt;code&gt;-s&lt;/code&gt; （または長い形式の &lt;code&gt;--server&lt;/code&gt; ）フラグを指定して、通信するリポジトリサーバーをクライアントに通知する必要があります。</target>
        </trans-unit>
        <trans-unit id="e3c0616a28189d339564bcd3117d8057f5d15956" translate="yes" xml:space="preserve">
          <source>The most important delegation within Docker Content Trust is &lt;code&gt;targets/releases&lt;/code&gt;. This is seen as the canonical source of a trusted image tag, and without a contributor&amp;rsquo;s key being under this delegation, they will be unable to sign a tag.</source>
          <target state="translated">Docker Content Trust内で最も重要な委任は、 &lt;code&gt;targets/releases&lt;/code&gt; です。これは信頼できる画像タグの正規のソースと見なされ、この委任の下に寄稿者の鍵がないと、寄稿者はタグに署名できません。</target>
        </trans-unit>
        <trans-unit id="1963cac251482ce51e0f0c9b512493c59a096c5c" translate="yes" xml:space="preserve">
          <source>The mount is created inside the container&amp;rsquo;s &lt;code&gt;/world&lt;/code&gt; directory. Docker does not support relative paths for mount points inside the container.</source>
          <target state="translated">マウントはコンテナの &lt;code&gt;/world&lt;/code&gt; ディレクトリ内に作成されます。Dockerは、コンテナー内のマウントポイントの相対パスをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="f65ec1cc00b9bb1818ddcdd9dc95e9ae4db3f15d" translate="yes" xml:space="preserve">
          <source>The mount point of the volume on the host</source>
          <target state="translated">ホスト上のボリュームのマウントポイント</target>
        </trans-unit>
        <trans-unit id="5c2ff1f321223719bfae08a21a2ef3fe1dad75a7" translate="yes" xml:space="preserve">
          <source>The name of the file (excluding the extension) determines the plugin name.</source>
          <target state="translated">ファイル名(拡張子を除く)がプラグイン名を決定します。</target>
        </trans-unit>
        <trans-unit id="2c2d2aa17023ec6fcc56386e68b98696ac0b646e" translate="yes" xml:space="preserve">
          <source>The namespaces &lt;code&gt;com.docker.*&lt;/code&gt;, &lt;code&gt;io.docker.*&lt;/code&gt;, and &lt;code&gt;org.dockerproject.*&lt;/code&gt; in engine labels were always documented to be reserved, but there was never any enforcement.</source>
          <target state="translated">エンジンラベルの名前空間 &lt;code&gt;com.docker.*&lt;/code&gt; 、 &lt;code&gt;io.docker.*&lt;/code&gt; 、および &lt;code&gt;org.dockerproject.*&lt;/code&gt; は常に予約されるように文書化されていましたが、強制はありませんでした。</target>
        </trans-unit>
        <trans-unit id="4db72238fc7d78007b167442cf07bb6fabacfd9e" translate="yes" xml:space="preserve">
          <source>The network driver protocol, in addition to the plugin activation call, is documented as part of libnetwork: &lt;a href=&quot;https://github.com/docker/libnetwork/blob/master/docs/remote/&quot;&gt;https://github.com/docker/libnetwork/blob/master/docs/remote.md&lt;/a&gt;.</source>
          <target state="translated">プラグインのアクティベーションコールに加えて、ネットワークドライバープロトコルはlibnetworkの一部としてドキュメント化されています：&lt;a href=&quot;https://github.com/docker/libnetwork/blob/master/docs/remote/&quot;&gt;https&lt;/a&gt; : //github.com/docker/libnetwork/blob/master/docs/remote.md。</target>
        </trans-unit>
        <trans-unit id="6d8b041ac43e25f9c65ebc52b5baf0e82a00ee6a" translate="yes" xml:space="preserve">
          <source>The network filter matches on both the network&amp;rsquo;s name and id. The following example shows all containers that are attached to the &lt;code&gt;net1&lt;/code&gt; network, using the network id as a filter;</source>
          <target state="translated">ネットワークフィルターは、ネットワークの名前とIDの両方に一致します。次の例は、ネットワークIDをフィルターとして使用して、 &lt;code&gt;net1&lt;/code&gt; ネットワークに接続されているすべてのコンテナーを示しています。</target>
        </trans-unit>
        <trans-unit id="29a642482c30f96a4033899c0fdaea9ec3beee25" translate="yes" xml:space="preserve">
          <source>The network from which copying the configuration</source>
          <target state="translated">設定のコピー元のネットワーク</target>
        </trans-unit>
        <trans-unit id="efe659c7cfe7d28e40435e0deeb5154cf1b4363e" translate="yes" xml:space="preserve">
          <source>The network you created is shared between them and load-balancing. Run &lt;code&gt;docker-machine ls&lt;/code&gt; to get your VMs&amp;rsquo; IP addresses and visit either of them on a browser on port 4000, hitting refresh (or just &lt;code&gt;curl&lt;/code&gt; them).</source>
          <target state="translated">作成したネットワークは、ネットワークと負荷分散の間で共有されます。 &lt;code&gt;docker-machine ls&lt;/code&gt; を実行してVMのIPアドレスを取得し、ポート4000のブラウザーでこれらのいずれかにアクセスして、更新を実行します（または単に &lt;code&gt;curl&lt;/code&gt; します）。</target>
        </trans-unit>
        <trans-unit id="87723d2ef8e1904797dd36ac4993e2ae45bad90e" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;aws-sandbox&lt;/code&gt; instance is running and is the active host as indicated by the asterisk (*). When you create a new machine, your command shell automatically connects to it. You can also check active status by running &lt;code&gt;docker-machine active&lt;/code&gt;.</source>
          <target state="translated">新しい &lt;code&gt;aws-sandbox&lt;/code&gt; インスタンスが実行中であり、アスタリスク（*）で示されているアクティブなホストです。新しいマシンを作成すると、コマンドシェルが自動的にそれに接続します。 &lt;code&gt;docker-machine active&lt;/code&gt; を実行してアクティブステータスを確認することもできます。</target>
        </trans-unit>
        <trans-unit id="183db4b8d88e39dbe104cc52c7ad0b7baded2ed7" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;docker-sandbox&lt;/code&gt; machine is running, and it is the active host as indicated by the asterisk (*). When you create a new machine, your command shell automatically connects to it. If for some reason your new machine is not the active host, run &lt;code&gt;docker-machine env docker-sandbox&lt;/code&gt;, followed by &lt;code&gt;eval $(docker-machine env docker-sandbox)&lt;/code&gt; to connect to it.</source>
          <target state="translated">新しい &lt;code&gt;docker-sandbox&lt;/code&gt; マシンが実行中であり、アスタリスク（*）で示されているように、これがアクティブなホストです。新しいマシンを作成すると、コマンドシェルが自動的にそれに接続します。何らかの理由で新しいマシンがアクティブなホストでない場合は、 &lt;code&gt;docker-machine env docker-sandbox&lt;/code&gt; を実行し、次に &lt;code&gt;eval $(docker-machine env docker-sandbox)&lt;/code&gt; を実行して接続します。</target>
        </trans-unit>
        <trans-unit id="0d5eeb3e8799d63324d4a44f2b2fa61c3e46867c" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;volumes&lt;/code&gt; key mounts the project directory (current directory) on the host to &lt;code&gt;/code&lt;/code&gt; inside the container, allowing you to modify the code on the fly, without having to rebuild the image. The &lt;code&gt;environment&lt;/code&gt; key sets the &lt;code&gt;FLASK_ENV&lt;/code&gt; environment variable, which tells &lt;code&gt;flask run&lt;/code&gt; to run in development mode and reload the code on change. This mode should only be used in development.</source>
          <target state="translated">新しい &lt;code&gt;volumes&lt;/code&gt; キーは、ホスト上のプロジェクトディレクトリ（現在のディレクトリ）をコンテナー内の &lt;code&gt;/code&lt;/code&gt; にマウントします。これにより、イメージを再構築する必要なく、その場でコードを変更できます。 &lt;code&gt;environment&lt;/code&gt; キーが設定されます &lt;code&gt;FLASK_ENV&lt;/code&gt; の指示する環境変数、 &lt;code&gt;flask run&lt;/code&gt; 開発モードで実行し、変更のコードをリロードすることを。このモードは、開発でのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="3e404d1970236a5dc75cedbe336754c764fa97e2" translate="yes" xml:space="preserve">
          <source>The new solutions come with their own native virtualization solutions rather than Oracle VirtualBox, so keep the following considerations in mind when using Machine to create local VMs.</source>
          <target state="translated">新しいソリューションには、Oracle VirtualBoxではなく、独自のネイティブ仮想化ソリューションが付属しているため、Machineを使用してローカルVMを作成する際には、以下の点に注意してください。</target>
        </trans-unit>
        <trans-unit id="b234c0b19a2b37103809d22b0044e00398b27483" translate="yes" xml:space="preserve">
          <source>The newly created configuration file contains information about the location of your local Docker trust data and the notary server URL.</source>
          <target state="translated">新しく作成された設定ファイルには、ローカルのDockerのトラストデータの場所と公証人サーバーのURLに関する情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="bc5727abee1ac6e471930402f1f4be87dab74892" translate="yes" xml:space="preserve">
          <source>The next table shows the capabilities which are not granted by default and may be added.</source>
          <target state="translated">次の表は、デフォルトでは付与されず、追加される可能性のある能力を示しています。</target>
        </trans-unit>
        <trans-unit id="f3fa21b777fd584afc62cf8b69c40e4fffcc5ba1" translate="yes" xml:space="preserve">
          <source>The node listens for inbound swarm manager traffic on this address. The default is to listen on 0.0.0.0:2377. It is also possible to specify a network interface to listen on that interface&amp;rsquo;s address; for example &lt;code&gt;--listen-addr eth0:2377&lt;/code&gt;.</source>
          <target state="translated">ノードは、このアドレスでインバウンドSwarm Managerトラフィックをリッスンします。デフォルトでは0.0.0.0:2377でリッスンします。ネットワークインターフェイスを指定して、そのインターフェイスのアドレスをリッスンすることもできます。たとえば、-- &lt;code&gt;--listen-addr eth0:2377&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fb2efabd37befde6cddb78b91ecab1ab217a31a9" translate="yes" xml:space="preserve">
          <source>The node will still appear in the node list, and marked as &lt;code&gt;down&lt;/code&gt;. It no longer affects swarm operation, but a long list of &lt;code&gt;down&lt;/code&gt; nodes can clutter the node list. To remove an inactive node from the list, use the &lt;a href=&quot;../node_rm/index&quot;&gt;&lt;code&gt;node rm&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">ノードは引き続きノードリストに表示され、 &lt;code&gt;down&lt;/code&gt; としてマークされます。群れの操作には影響しなくなりましたが、 &lt;code&gt;down&lt;/code&gt; ノードの長いリストはノードリストを混乱させる可能性があります。リストから非アクティブなノードを削除するには、&lt;a href=&quot;../node_rm/index&quot;&gt; &lt;code&gt;node rm&lt;/code&gt; &lt;/a&gt;コマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="92a57b3a23013f31bf5b08572bd51664bc7950ef" translate="yes" xml:space="preserve">
          <source>The notary server credentials: &lt;code&gt;&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;&lt;/code&gt; encoded in base64</source>
          <target state="translated">公証サーバー資格情報：base64でエンコードされた &lt;code&gt;&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14bfe3d31f5f78a4f822b4d8e315b4ba8ca678ee" translate="yes" xml:space="preserve">
          <source>The notary server is always responsible for managing the timestamp key. However, it is possible for the notary server to manage the snapshot key, if the snapshot key is rotated from the notary client to server, as described in the following subsection.</source>
          <target state="translated">公証人サーバは常にタイムスタンプキーを管理する責任を負う。しかし、以下のサブセクションで説明するように、スナップショットキーが公証人クライアントからサーバにローテーションされている場合、公証人サーバがスナップショットキーを管理することは可能です。</target>
        </trans-unit>
        <trans-unit id="b336f656d8197e0632577208cd876d6d20c4b84c" translate="yes" xml:space="preserve">
          <source>The notation for associating a local image with a repository on a registry is &lt;code&gt;username/repository:tag&lt;/code&gt;. The tag is optional, but recommended, since it is the mechanism that registries use to give Docker images a version. Give the repository and tag meaningful names for the context, such as &lt;code&gt;get-started:part2&lt;/code&gt;. This puts the image in the &lt;code&gt;get-started&lt;/code&gt; repository and tags it as &lt;code&gt;part2&lt;/code&gt;.</source>
          <target state="translated">ローカルイメージをレジストリのリポジトリに関連付けるための表記は、 &lt;code&gt;username/repository:tag&lt;/code&gt; です。このタグはオプションですが、レジストリがDockerイメージにバージョンを与えるために使用するメカニズムであるため、推奨されています。リポジトリにタグを付け、 &lt;code&gt;get-started:part2&lt;/code&gt; などのコンテキストにわかりやすい名前を付けます。これにより、イメージが &lt;code&gt;get-started&lt;/code&gt; リポジトリーに配置され、 &lt;code&gt;part2&lt;/code&gt; としてタグ付けされます。</target>
        </trans-unit>
        <trans-unit id="b69ac60cbd9e75489828f500df16f2177a96db75" translate="yes" xml:space="preserve">
          <source>The notation is &lt;code&gt;machinename:/path/to/dir&lt;/code&gt; for the argument; you can also supply an alternative mount point (default is the same dir path).</source>
          <target state="translated">表記は、引数の &lt;code&gt;machinename:/path/to/dir&lt;/code&gt; です。代替マウントポイントを指定することもできます（デフォルトは同じdirパスです）。</target>
        </trans-unit>
        <trans-unit id="d11c5e1162367e795a70983b83cfdf3d1ee3ac48" translate="yes" xml:space="preserve">
          <source>The notation is &lt;code&gt;machinename:/path/to/files&lt;/code&gt; for the arguments; in the host machine&amp;rsquo;s case, you don&amp;rsquo;t need to specify the name, just the path.</source>
          <target state="translated">表記は、引数の &lt;code&gt;machinename:/path/to/files&lt;/code&gt; です。ホストマシンの場合、名前を指定する必要はなく、パスを指定するだけです。</target>
        </trans-unit>
        <trans-unit id="917f866a3c931d8ef3e0b7a32449c7405bbd0d26" translate="yes" xml:space="preserve">
          <source>The number of items in the task history is determined by the &lt;code&gt;--task-history-limit&lt;/code&gt; option that was set when initializing the swarm. You can change the task history retention limit using the &lt;a href=&quot;../swarm_update/index&quot;&gt;&lt;code&gt;docker swarm update&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">タスク履歴の項目数は、スウォームの初期化時に設定された &lt;code&gt;--task-history-limit&lt;/code&gt; オプションによって決定されます。&lt;a href=&quot;../swarm_update/index&quot;&gt; &lt;code&gt;docker swarm update&lt;/code&gt; &lt;/a&gt;コマンドを使用して、タスク履歴の保持制限を変更できます。</target>
        </trans-unit>
        <trans-unit id="f44ace853eedd4d2b3d52b4a07c2863c83910a2d" translate="yes" xml:space="preserve">
          <source>The number should increment.</source>
          <target state="translated">数値はインクリメントする必要があります。</target>
        </trans-unit>
        <trans-unit id="2335d7fb127df2a4cdc6970180f0ce850a983406" translate="yes" xml:space="preserve">
          <source>The official Docker Hub Notary servers are located at &lt;code&gt;https://notary.docker.io&lt;/code&gt;. If you would like to use your own Notary server, it is important to use the same or a newer &lt;a href=&quot;https://github.com/docker/notary/releases&quot;&gt;Notary version&lt;/a&gt;, as the client for feature compatibility (ex: client version 0.2, server/signer version &amp;gt;= 0.2). Additionally, Notary stores your own signing keys, and a cache of previously downloaded trust metadata in a directory, provided with the &lt;code&gt;-d&lt;/code&gt; flag. When interacting with Docker Hub repositories, you must instruct the client to use the associated trust directory, which by default is found at &lt;code&gt;.docker/trust&lt;/code&gt; within the calling user&amp;rsquo;s home directory (failing to use this directory may result in errors when publishing updates to your trust data):</source>
          <target state="translated">公式のDocker Hub Notaryサーバーは &lt;code&gt;https://notary.docker.io&lt;/code&gt; にあります。独自のNotaryサーバーを使用する場合は、機能の互換性のためにクライアントとして同じまたは新しい&lt;a href=&quot;https://github.com/docker/notary/releases&quot;&gt;Notaryバージョン&lt;/a&gt;を使用することが重要です（例：クライアントバージョン0.2、サーバー/署名者バージョン== 0.2）。さらに、Notaryは独自の署名鍵と、以前にダウンロードした信頼メタデータのキャッシュを、 &lt;code&gt;-d&lt;/code&gt; フラグで提供されるディレクトリに保存します。 Docker Hubリポジトリとやり取りするときは、関連付けられた信頼ディレクトリを使用するようにクライアントに指示する必要があります。このディレクトリは、デフォルトでは呼び出し元ユーザーのホームディレクトリ内の &lt;code&gt;.docker/trust&lt;/code&gt; にあります（このディレクトリを使用しないと、更新を信頼データ）：</target>
        </trans-unit>
        <trans-unit id="22218babb42765a654a32765cf74fbd5b2200f1a" translate="yes" xml:space="preserve">
          <source>The only thing new here is the peer service to &lt;code&gt;web&lt;/code&gt;, named &lt;code&gt;visualizer&lt;/code&gt;. Notice two new things here: a &lt;code&gt;volumes&lt;/code&gt; key, giving the visualizer access to the host&amp;rsquo;s socket file for Docker, and a &lt;code&gt;placement&lt;/code&gt; key, ensuring that this service only ever runs on a swarm manager -- never a worker. That&amp;rsquo;s because this container, built from &lt;a href=&quot;https://github.com/ManoMarks/docker-swarm-visualizer&quot;&gt;an open source project created by Docker&lt;/a&gt;, displays Docker services running on a swarm in a diagram.</source>
          <target state="translated">ここで唯一新しいのは、 &lt;code&gt;visualizer&lt;/code&gt; という &lt;code&gt;web&lt;/code&gt; へのピアサービスです。ここで2つの新しい点に注意してください：Dockerのホストのソケットファイルへのビジュアライザアクセスを提供する &lt;code&gt;volumes&lt;/code&gt; キーと &lt;code&gt;placement&lt;/code&gt; キー。これは、&lt;a href=&quot;https://github.com/ManoMarks/docker-swarm-visualizer&quot;&gt;Dockerによって作成されたオープンソースプロジェクト&lt;/a&gt;から構築されたこのコンテナーが、スウォームで実行されているDockerサービスをダイアグラムに表示するためです。</target>
        </trans-unit>
        <trans-unit id="89730a2ade1b5abddc9347ab148e5d119931f020" translate="yes" xml:space="preserve">
          <source>The operator can also adjust the performance parameters of the container:</source>
          <target state="translated">オペレータは、コンテナの性能パラメータを調整することもできます。</target>
        </trans-unit>
        <trans-unit id="41382989315f8c3ee9e303ef492c566711e626ec" translate="yes" xml:space="preserve">
          <source>The operator can identify a container in three ways:</source>
          <target state="translated">オペレータは、3つの方法でコンテナを識別することができます。</target>
        </trans-unit>
        <trans-unit id="c7367fe1cca6b073f6f2a1faf3da852281eae9d5" translate="yes" xml:space="preserve">
          <source>The optional field &lt;code&gt;features&lt;/code&gt; in &lt;code&gt;daemon.json&lt;/code&gt; allows users to enable or disable specific daemon features. For example, &lt;code&gt;{&quot;features&quot;:{&quot;buildkit&quot;: true}}&lt;/code&gt; enables &lt;code&gt;buildkit&lt;/code&gt; as the default docker image builder.</source>
          <target state="translated">&lt;code&gt;daemon.json&lt;/code&gt; のオプションのフィールド &lt;code&gt;features&lt;/code&gt; を使用すると、特定のデーモン機能を有効または無効にできます。たとえば、 &lt;code&gt;{&quot;features&quot;:{&quot;buildkit&quot;: true}}&lt;/code&gt; は、デフォルトの &lt;code&gt;buildkit&lt;/code&gt; イメージビルダーとしてビルドキットを有効にします。</target>
        </trans-unit>
        <trans-unit id="e28c99503cf59797f397d36b1752165612aec9cc" translate="yes" xml:space="preserve">
          <source>The options described here are specific to the &lt;code&gt;deploy&lt;/code&gt; key and swarm mode. If you want to set resource constraints on non swarm deployments, use &lt;a href=&quot;compose-file-v2/index#cpu-and-other-resources&quot;&gt;Compose file format version 2 CPU, memory, and other resource options&lt;/a&gt;. If you have further questions, refer to the discussion on the GitHub issue &lt;a href=&quot;https://github.com/docker/compose/issues/4513&quot;&gt;docker/compose/4513&lt;/a&gt;.</source>
          <target state="translated">ここで説明するオプションは、 &lt;code&gt;deploy&lt;/code&gt; キーとスウォームモードに固有です。Swarm以外のデプロイメントにリソース制約を設定する場合は、&lt;a href=&quot;compose-file-v2/index#cpu-and-other-resources&quot;&gt;Composeファイルフォーマットバージョン2のCPU、メモリ、およびその他のリソースオプションを使用します&lt;/a&gt;。さらに質問がある場合は、GitHubの問題&lt;a href=&quot;https://github.com/docker/compose/issues/4513&quot;&gt;docker / compose / 4513&lt;/a&gt;の説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="be781eb9a4261dfa7130c6d663bb44e808306180" translate="yes" xml:space="preserve">
          <source>The options for &lt;code&gt;endpoint_mode&lt;/code&gt; also work as flags on the swarm mode CLI command &lt;a href=&quot;../../engine/reference/commandline/service_create/index&quot;&gt;docker service create&lt;/a&gt;. For a quick list of all swarm related &lt;code&gt;docker&lt;/code&gt; commands, see &lt;a href=&quot;../../engine/swarm/index#swarm-mode-key-concepts-and-tutorial&quot;&gt;Swarm mode CLI commands&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;endpoint_mode&lt;/code&gt; のオプションは、スウォームモードCLIコマンド&lt;a href=&quot;../../engine/reference/commandline/service_create/index&quot;&gt;docker service createの&lt;/a&gt;フラグとしても機能します。すべてのswarm関連の &lt;code&gt;docker&lt;/code&gt; コマンドのクイックリストについては、&lt;a href=&quot;../../engine/swarm/index#swarm-mode-key-concepts-and-tutorial&quot;&gt;SwarmモードのCLIコマンドを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="de59387120196b30f85a7b76e5242eebb18bcb72" translate="yes" xml:space="preserve">
          <source>The options for token auth. See &lt;a href=&quot;https://github.com/docker/distribution/blob/master/docs/configuration/#token&quot;&gt; the registry token configuration documentation&lt;/a&gt; for the parameter details.</source>
          <target state="translated">トークン認証のオプション。パラメータの詳細について&lt;a href=&quot;https://github.com/docker/distribution/blob/master/docs/configuration/#token&quot;&gt;は、レジストリトークン構成のドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7412839711afce147b5113fb7e29aef802049f6a" translate="yes" xml:space="preserve">
          <source>The options set in the configuration file must not conflict with options set via flags. The docker daemon fails to start if an option is duplicated between the file and the flags, regardless their value. We do this to avoid silently ignore changes introduced in configuration reloads. For example, the daemon fails to start if you set daemon labels in the configuration file and also set daemon labels via the &lt;code&gt;--label&lt;/code&gt; flag. Options that are not present in the file are ignored when the daemon starts.</source>
          <target state="translated">設定ファイルで設定されたオプションは、フラグで設定されたオプションと競合してはなりません。オプションがファイルとフラグ間で重複している場合、それらの値に関係なく、Dockerデーモンは起動に失敗します。これを行うのは、設定の再読み込みで導入された変更を黙って無視しないようにするためです。たとえば、構成ファイルでデーモンラベルを設定し、 &lt;code&gt;--label&lt;/code&gt; フラグでデーモンラベルも設定した場合、デーモンは起動に失敗します。デーモンの起動時に、ファイルに存在しないオプションは無視されます。</target>
        </trans-unit>
        <trans-unit id="887339b939d9bd41483f880117e295c27a275ba5" translate="yes" xml:space="preserve">
          <source>The options that can appear before &lt;code&gt;CMD&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;CMD&lt;/code&gt; の前に表示できるオプションは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="15025a31073c4bf6ead7579cba512726377f05f7" translate="yes" xml:space="preserve">
          <source>The options you can specify are:</source>
          <target state="translated">指定できるオプションは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="be530e2255560ffe12f81210b54801ad89713238" translate="yes" xml:space="preserve">
          <source>The output above also shows the &lt;code&gt;/usr/bin/docker&lt;/code&gt; (Docker Engine daemon) profile is running in &lt;code&gt;complain&lt;/code&gt; mode. This means AppArmor &lt;em&gt;only&lt;/em&gt; logs to &lt;code&gt;dmesg&lt;/code&gt; activity outside the bounds of the profile. (Except in the case of Ubuntu Trusty, where some interesting behaviors are enforced.)</source>
          <target state="translated">上記の出力は、 &lt;code&gt;/usr/bin/docker&lt;/code&gt; （Docker Engineデーモン）プロファイルが &lt;code&gt;complain&lt;/code&gt; モードで実行されていることも示しています。つまり、AppArmor はプロファイルの範囲外の &lt;code&gt;dmesg&lt;/code&gt; アクティビティに&lt;em&gt;のみ&lt;/em&gt;ログを記録します。 （Ubuntu Trustyの場合を除いて、いくつかの興味深い動作が強制されます。）</target>
        </trans-unit>
        <trans-unit id="2355a5f85cf53a441cc11d2d8bdc79e7dae6c672" translate="yes" xml:space="preserve">
          <source>The output described above is intended for the shells &lt;code&gt;bash&lt;/code&gt; and &lt;code&gt;zsh&lt;/code&gt; (if you&amp;rsquo;re not sure which shell you&amp;rsquo;re using, there&amp;rsquo;s a very good possibility that it&amp;rsquo;s &lt;code&gt;bash&lt;/code&gt;). However, these are not the only shells which Docker Machine supports. Docker Machine detects the shells available in your environment and lists them. Docker supports &lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;cmd&lt;/code&gt;, &lt;code&gt;powershell&lt;/code&gt;, and &lt;code&gt;emacs&lt;/code&gt;.</source>
          <target state="translated">上記の出力は、シェル &lt;code&gt;bash&lt;/code&gt; および &lt;code&gt;zsh&lt;/code&gt; を対象としています（使用しているシェルが不明な場合は、 &lt;code&gt;bash&lt;/code&gt; である可能性が非常に高いです）。ただし、Docker Machineがサポートするシェルはこれらだけではありません。Docker Machineは、環境で使用可能なシェルを検出してリストします。Dockerは、 &lt;code&gt;bash&lt;/code&gt; 、 &lt;code&gt;cmd&lt;/code&gt; 、 &lt;code&gt;powershell&lt;/code&gt; 、 &lt;code&gt;emacs&lt;/code&gt; をサポートしています。</target>
        </trans-unit>
        <trans-unit id="a45c5a07cae9a3fc556e42c151f1b595b59af9be" translate="yes" xml:space="preserve">
          <source>The output for &lt;code&gt;docker swarm init&lt;/code&gt; provides the connection command to use when you join new worker nodes to the swarm:</source>
          <target state="translated">&lt;code&gt;docker swarm init&lt;/code&gt; の出力には、新しいワーカーノードをswarmに参加させるときに使用する接続コマンドが含まれています。</target>
        </trans-unit>
        <trans-unit id="bd47af0af4efb7be690f1343bf0a5ed1d3833bd4" translate="yes" xml:space="preserve">
          <source>The output includes the commands to join new nodes to the swarm. Nodes will join as managers or workers depending on the value for the &lt;code&gt;--token&lt;/code&gt; flag.</source>
          <target state="translated">出力には、新しいノードを群に結合するコマンドが含まれます。ノードは、 &lt;code&gt;--token&lt;/code&gt; フラグの値に応じて、マネージャーまたはワーカーとして参加します。</target>
        </trans-unit>
        <trans-unit id="640437e1ea9cf751f8f36635ede5392a77849e3d" translate="yes" xml:space="preserve">
          <source>The output of &lt;code&gt;service inspect&lt;/code&gt; shows if your update paused due to failure:</source>
          <target state="translated">&lt;code&gt;service inspect&lt;/code&gt; の出力は、失敗が原因で更新が一時停止したかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="cce7e1017043a07f1dba87713af3ef3207ceec71" translate="yes" xml:space="preserve">
          <source>The output of the final &lt;code&gt;pwd&lt;/code&gt; command in this &lt;code&gt;Dockerfile&lt;/code&gt; would be &lt;code&gt;/a/b/c&lt;/code&gt;.</source>
          <target state="translated">最終の出力 &lt;code&gt;pwd&lt;/code&gt; このにおけるコマンド &lt;code&gt;Dockerfile&lt;/code&gt; であろう &lt;code&gt;/a/b/c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5b0809469381a9d3d38b296dd33b48f8cf206a7" translate="yes" xml:space="preserve">
          <source>The output of the final &lt;code&gt;pwd&lt;/code&gt; command in this &lt;code&gt;Dockerfile&lt;/code&gt; would be &lt;code&gt;/path/$DIRNAME&lt;/code&gt;</source>
          <target state="translated">最終出力の &lt;code&gt;pwd&lt;/code&gt; 本では、コマンド &lt;code&gt;Dockerfile&lt;/code&gt; はなり &lt;code&gt;/path/$DIRNAME&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="773e939704075237973f7c14690a3cee57cf3927" translate="yes" xml:space="preserve">
          <source>The output shows the &lt;code&gt;&amp;lt;CONTAINER-PORT&amp;gt;&lt;/code&gt; (labeled &lt;code&gt;TargetPort&lt;/code&gt;) from the containers and the &lt;code&gt;&amp;lt;PUBLISHED-PORT&amp;gt;&lt;/code&gt; (labeled &lt;code&gt;PublishedPort&lt;/code&gt;) where nodes listen for requests for the service.</source>
          <target state="translated">出力には、コンテナーからの &lt;code&gt;&amp;lt;CONTAINER-PORT&amp;gt;&lt;/code&gt; （ &lt;code&gt;TargetPort&lt;/code&gt; のラベルが付いている）と、ノードがサービスの要求をリッスンする &lt;code&gt;&amp;lt;PUBLISHED-PORT&amp;gt;&lt;/code&gt; （ &lt;code&gt;PublishedPort&lt;/code&gt; のラベルが付いている）が表示されます。</target>
        </trans-unit>
        <trans-unit id="7b45be3f9ca95cc06eaa63157a9914673b94e68f" translate="yes" xml:space="preserve">
          <source>The output shows us the names of the tags available, the hex encoded sha256 digest of the image manifest associated with that tag, the size of the manifest, and the Notary role that signed this tag into the repository. The &amp;ldquo;targets&amp;rdquo; role is the most common role in a simple repository. When a repository has (or expects) to have collaborators, you may see other &amp;ldquo;delegated&amp;rdquo; roles listed as signers, based on the choice of the administrator as to how they organize their collaborators.</source>
          <target state="translated">出力には、使用可能なタグの名前、そのタグに関連付けられたイメージマニフェストの16進エンコードされたsha256ダイジェスト、マニフェストのサイズ、およびこのタグをリポジトリに署名した公証人ロールが表示されます。「ターゲット」ロールは、単純なリポジトリで最も一般的なロールです。リポジトリにコラボレーターがいる（または期待している）場合、コラボレーターの編成方法に関する管理者の選択に基づいて、署名者としてリストされた他の「委任された」ロールが表示されることがあります。</target>
        </trans-unit>
        <trans-unit id="3a20f79e9ea92e3d5d042b3749d55e9fb231dda1" translate="yes" xml:space="preserve">
          <source>The overlay and overlay2 storage driver does not work as expected if the backing filesystem does not support &lt;code&gt;d_type&lt;/code&gt;. For example, XFS does not support &lt;code&gt;d_type&lt;/code&gt; if it is formatted with the &lt;code&gt;ftype=0&lt;/code&gt; option.</source>
          <target state="translated">バッキングファイルシステムが &lt;code&gt;d_type&lt;/code&gt; をサポートしていない場合、overlayおよびoverlay2ストレージドライバは期待どおりに機能しません。たとえば、 &lt;code&gt;ftype=0&lt;/code&gt; オプションでフォーマットされている場合、XFSは &lt;code&gt;d_type&lt;/code&gt; をサポートしません。</target>
        </trans-unit>
        <trans-unit id="6772401b9f59c7d3631574fc262b4cfd5c6fae97" translate="yes" xml:space="preserve">
          <source>The passphrases you chose for both the root key and your repository key should be randomly generated and stored in a password manager. Having the repository key allows users to sign image tags on a repository. Passphrases are used to encrypt your keys at rest and ensure that a lost laptop or an unintended backup doesn&amp;rsquo;t put the private key material at risk.</source>
          <target state="translated">ルートキーとリポジトリキーの両方に選択したパスフレーズはランダムに生成され、パスワードマネージャーに保存されます。リポジトリキーがあると、ユーザーはリポジトリのイメージタグに署名できます。パスフレーズは、保管中の鍵を暗号化するために使用され、ノートパソコンの紛失や意図しないバックアップによって秘密鍵の情報が危険にさらされないようにします。</target>
        </trans-unit>
        <trans-unit id="7921733af36283370ff2c7a3bafa55d215831e2e" translate="yes" xml:space="preserve">
          <source>The path to the certificate to use for HTTPS. Must be provided together with &lt;code&gt;tls_key_file&lt;/code&gt;, or not at all. If neither are provided, the server uses HTTP instead of HTTPS. The path is relative to the directory of the configuration file.</source>
          <target state="translated">HTTPSに使用する証明書へのパス。 &lt;code&gt;tls_key_file&lt;/code&gt; と一緒に提供するか、まったく提供しない必要があります。どちらも指定されていない場合、サーバーはHTTPSではなくHTTPを使用します。パスは、構成ファイルのディレクトリからの相対パスです。</target>
        </trans-unit>
        <trans-unit id="d49a7cbb3325ee43f3655cca35361be16fa0ce11" translate="yes" xml:space="preserve">
          <source>The path to the certificate to use for HTTPS. The path is relative to the directory of the configuration file.</source>
          <target state="translated">HTTPS で使用する証明書のパス。パスは設定ファイルのディレクトリからの相対パスです。</target>
        </trans-unit>
        <trans-unit id="cc6fea9e413138463ad3caf57d146a91b37f385c" translate="yes" xml:space="preserve">
          <source>The path to the certificate to use for TLS mutual authentication. This must be provided together with &lt;code&gt;tls_client_key&lt;/code&gt; or not at all. The path is relative to the directory of the configuration file.</source>
          <target state="translated">TLS相互認証に使用する証明書へのパス。これは、 &lt;code&gt;tls_client_key&lt;/code&gt; と一緒に提供するか、まったく提供しない必要があります。パスは、構成ファイルのディレクトリからの相対パスです。</target>
        </trans-unit>
        <trans-unit id="a02fb0c3c553eaad6af5d8d6ce2860686b40be67" translate="yes" xml:space="preserve">
          <source>The path to the client certificate to use for mutual TLS with the Notary server. Must be provided along with &lt;code&gt;tls_client_key&lt;/code&gt; or not provided at all. The path is relative to the directory of the configuration file.</source>
          <target state="translated">Notaryサーバーとの相互TLSに使用するクライアント証明書へのパス。 &lt;code&gt;tls_client_key&lt;/code&gt; とともに提供するか、まったく提供しない必要があります。パスは、構成ファイルのディレクトリからの相対パスです。</target>
        </trans-unit>
        <trans-unit id="02b50f36283fa77547334520ace19ee4dfcc4135" translate="yes" xml:space="preserve">
          <source>The path to the client key to use for mutual TLS with the Notary server. Must be provided along with &lt;code&gt;tls_client_cert&lt;/code&gt; or not provided at all. The path is relative to the directory of the configuration file.</source>
          <target state="translated">Notaryサーバーとの相互TLSに使用するクライアントキーへのパス。 &lt;code&gt;tls_client_cert&lt;/code&gt; とともに提供するか、まったく提供しない必要があります。パスは、構成ファイルのディレクトリからの相対パスです。</target>
        </trans-unit>
        <trans-unit id="66ff566fdcbbd6d71352430ce6eeffddb0779a2d" translate="yes" xml:space="preserve">
          <source>The path to the file containing the root CA with which to verify the TLS certificate of the Notary server, for example if it is self-signed. The path is relative to the directory of the configuration file.</source>
          <target state="translated">Notary サーバの TLS 証明書を検証するためのルート CA を含むファイルへのパス。このパスは、設定ファイルのディレクトリからの相対パスです。</target>
        </trans-unit>
        <trans-unit id="8aaf5e7edd9c8cbc20272f7e43807aef90359eee" translate="yes" xml:space="preserve">
          <source>The path to the private key to use for HTTPS. Must be provided together with &lt;code&gt;tls_cert_file&lt;/code&gt;, or not at all. If neither are provided, the server uses HTTP instead of HTTPS. The path is relative to the directory of the configuration file.</source>
          <target state="translated">HTTPSに使用する秘密鍵へのパス。 &lt;code&gt;tls_cert_file&lt;/code&gt; と一緒に提供するか、まったく提供しない必要があります。どちらも指定されていない場合、サーバーはHTTPSではなくHTTPを使用します。パスは、構成ファイルのディレクトリからの相対パスです。</target>
        </trans-unit>
        <trans-unit id="0e3be96cfe128a246a5170eecbbf92354b61abc2" translate="yes" xml:space="preserve">
          <source>The path to the private key to use for HTTPS. The path is relative to the directory of the configuration file.</source>
          <target state="translated">HTTPS で使用する秘密鍵のパスです。パスは設定ファイルのディレクトリからの相対パスです。</target>
        </trans-unit>
        <trans-unit id="b1a4d713e0460af37af02f395caffe48a13e027a" translate="yes" xml:space="preserve">
          <source>The path to the private key to use for TLS mutual authentication. This must be provided together with &lt;code&gt;tls_client_cert&lt;/code&gt; or not at all. The path is relative to the directory of the configuration file.</source>
          <target state="translated">TLS相互認証に使用する秘密鍵へのパス。これは、 &lt;code&gt;tls_client_cert&lt;/code&gt; と一緒に提供するか、まったく提供しない必要があります。パスは、構成ファイルのディレクトリからの相対パスです。</target>
        </trans-unit>
        <trans-unit id="6ecca1195ce455667b656022d75de39ecdf3c877" translate="yes" xml:space="preserve">
          <source>The path to the root CA that signed the TLS certificate of the remote service. This parameter must be provided if said root CA is not in the system's default trust roots. The path is relative to the directory of the configuration file.</source>
          <target state="translated">リモートサービスの TLS 証明書に署名したルート CA へのパス。このパラメータは、ルート CA がシステムのデフォルトのトラストルートにない場合に指定する必要があります。このパスは、設定ファイルのディレクトリからの相対パスです。</target>
        </trans-unit>
        <trans-unit id="012c2ffec87ed472da3d4617f62f9c1d29fe053d" translate="yes" xml:space="preserve">
          <source>The placement constraint you put on the Redis service, ensuring that it always uses the same host.</source>
          <target state="translated">Redis サービスに適用する配置制約で、常に同じホストを使用するようにします。</target>
        </trans-unit>
        <trans-unit id="cf5772e3d94707e32a722854b385febbff079284" translate="yes" xml:space="preserve">
          <source>The placement of &lt;code&gt;!&lt;/code&gt; exception rules influences the behavior: the last line of the &lt;code&gt;.dockerignore&lt;/code&gt; that matches a particular file determines whether it is included or excluded. Consider the following example:</source>
          <target state="translated">の配置 &lt;code&gt;!&lt;/code&gt; 例外ルールは動作に影響します。特定のファイルと一致する &lt;code&gt;.dockerignore&lt;/code&gt; の最後の行によって、ファイルが含まれるか除外されるかが決まります。次の例を考えてみます。</target>
        </trans-unit>
        <trans-unit id="c7b6aeb70321b0532d875f81f564375bb56ed249" translate="yes" xml:space="preserve">
          <source>The plugin can subsequently be enabled for local use or pushed to the public registry.</source>
          <target state="translated">プラグインはその後、ローカルで使用するために有効にしたり、パブリックレジストリにプッシュしたりすることができます。</target>
        </trans-unit>
        <trans-unit id="5681b06ba81b98e56e671eda1bf016a361f78c9c" translate="yes" xml:space="preserve">
          <source>The plugin must support two authorization messages formats, one from the daemon to the plugin and then from the plugin to the daemon. The tables below detail the content expected in each message.</source>
          <target state="translated">プラグインは、デーモンからプラグインへ、そしてプラグインからデーモンへの2つの認可メッセージのフォーマットをサポートしなければなりません。以下の表は、各メッセージで期待される内容の詳細を示しています。</target>
        </trans-unit>
        <trans-unit id="bf479528d3c864f40b34e6e8a8b256f60574b3aa" translate="yes" xml:space="preserve">
          <source>The plugin requests 2 privileges:</source>
          <target state="translated">プラグインは2つの権限を要求します。</target>
        </trans-unit>
        <trans-unit id="20591766ace52f6ea09ec3a0f14b31599830c93a" translate="yes" xml:space="preserve">
          <source>The port number inside the container (where the service listens) does not need to match the port number exposed on the outside of the container (where clients connect). For example, inside the container an HTTP service is listening on port 80 (and so the image developer specifies &lt;code&gt;EXPOSE 80&lt;/code&gt; in the Dockerfile). At runtime, the port might be bound to 42800 on the host. To find the mapping between the host ports and the exposed ports, use &lt;code&gt;docker port&lt;/code&gt;.</source>
          <target state="translated">コンテナー内（サービスがリッスンする場所）のポート番号は、コンテナーの外側（クライアントが接続する場所）に公開されているポート番号と一致する必要はありません。たとえば、コンテナ内のHTTPサービスはポート80でリッスンしています（したがって、イメージ開発者はDockerfileで &lt;code&gt;EXPOSE 80&lt;/code&gt; を指定します）。実行時に、ポートはホスト上の42800にバインドされる場合があります。ホストポートと公開されたポート間のマッピングを見つけるには、 &lt;code&gt;docker port&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="04ec18e0ed519d31508f51c1d0dad20602cec320" translate="yes" xml:space="preserve">
          <source>The port that SSH is running on, needed for Docker Machine to provision the Linode.</source>
          <target state="translated">SSHが動作しているポートで、Docker MachineがLinodeをプロビジョニングするために必要なもの。</target>
        </trans-unit>
        <trans-unit id="fe1e329bc037c6d750a15b68d6244ffce06f9b6a" translate="yes" xml:space="preserve">
          <source>The preceding example illustrates a request to add the delegation &lt;code&gt;targets/releases&lt;/code&gt; to the GUN &lt;code&gt;example.com/collection&lt;/code&gt;. The delegation name must be prefixed by &lt;code&gt;targets/&lt;/code&gt; to be valid, since all delegations are restricted versions of the target role. The command adds the public key contained in the x509 cert &lt;code&gt;cert.pem&lt;/code&gt; to the &lt;code&gt;targets/releases&lt;/code&gt; delegation.</source>
          <target state="translated">上記の例は、委任 &lt;code&gt;targets/releases&lt;/code&gt; をGUN &lt;code&gt;example.com/collection&lt;/code&gt; に追加するリクエストを示しています。すべての委任はターゲットの役割の制限されたバージョンであるため、委任名の前に &lt;code&gt;targets/&lt;/code&gt; を付ける必要があります。このコマンドは、x509証明書 &lt;code&gt;cert.pem&lt;/code&gt; に含まれている公開鍵を &lt;code&gt;targets/releases&lt;/code&gt; 委任に追加します。</target>
        </trans-unit>
        <trans-unit id="2cf6cb209a774a788b51f43415e140aebd8f49cb" translate="yes" xml:space="preserve">
          <source>The preceding example is operating-system specific and is for illustrative purposes only. You should consult your operating system documentation for creating an os-provided bundled certificate chain.</source>
          <target state="translated">前述の例は、オペレーティングシステム固有のものであり、説明のみを目的としています。OS が提供するバンドルされた証明書チェーンの作成方法については、 オペレーティングシステムのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="75050ce3b960d53c3dbe585963f55bbcb50f66d5" translate="yes" xml:space="preserve">
          <source>The prerequisites are:</source>
          <target state="translated">前提条件は</target>
        </trans-unit>
        <trans-unit id="d512ca933bd80757c1dfdd90d2ebb6e19763954d" translate="yes" xml:space="preserve">
          <source>The presence of one or more &lt;code&gt;&amp;lt;filename&amp;gt;.key/cert&lt;/code&gt; pairs indicates to Docker that there are custom certificates required for access to the desired repository.</source>
          <target state="translated">1つ以上の &lt;code&gt;&amp;lt;filename&amp;gt;.key/cert&lt;/code&gt; ペアの存在は、目的のリポジトリへのアクセスに必要なカスタム証明書があることをDockerに示します。</target>
        </trans-unit>
        <trans-unit id="64d88377cebbf31910a31e90c8d322de508c55c5" translate="yes" xml:space="preserve">
          <source>The problem is that Swarm might first schedule &lt;code&gt;bar&lt;/code&gt; and &lt;code&gt;baz&lt;/code&gt; on different nodes (since they&amp;rsquo;re not dependent on one another), making it impossible to pick an appropriate node for &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="translated">問題は、Swarmが最初に &lt;code&gt;bar&lt;/code&gt; と &lt;code&gt;baz&lt;/code&gt; を異なるノードにスケジュールする可能性があることです（それらは互いに依存していないため）、 &lt;code&gt;foo&lt;/code&gt; に適切なノードを選択することが不可能になります。</target>
        </trans-unit>
        <trans-unit id="b8b8984e1b09d38e20dadc2233b45e65257a854a" translate="yes" xml:space="preserve">
          <source>The problem of waiting for a database (for example) to be ready is really just a subset of a much larger problem of distributed systems. In production, your database could become unavailable or move hosts at any time. Your application needs to be resilient to these types of failures.</source>
          <target state="translated">データベース(例えば)の準備が整うのを待つという問題は、分散システムのより大きな問題のサブセットに過ぎません。本番環境では、データベースが利用できなくなったり、ホストがいつでも移動したりする可能性があります。アプリケーションはこのようなタイプの障害に対して回復力を持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="bfe05733ac9969fdef95ebcf6c7d8018f77d417f" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;HttpHeaders&lt;/code&gt; specifies a set of headers to include in all messages sent from the Docker client to the daemon. Docker does not try to interpret or understand these header; it simply puts them into the messages. Docker does not allow these headers to change any headers it sets for itself.</source>
          <target state="translated">プロパティ &lt;code&gt;HttpHeaders&lt;/code&gt; は、Dockerクライアントからデーモンに送信されるすべてのメッセージに含めるヘッダーのセットを指定します。Dockerはこれらのヘッダーを解釈または理解しようとしません。メッセージにメッセージを入れるだけです。Dockerでは、これらのヘッダーが自身に設定するヘッダーを変更することはできません。</target>
        </trans-unit>
        <trans-unit id="f899e49371710fd9560f2e9b26b6c551e9faa588" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;configFormat&lt;/code&gt; specifies the default format for &lt;code&gt;docker config ls&lt;/code&gt; output. When the &lt;code&gt;--format&lt;/code&gt; flag is not provided with the &lt;code&gt;docker config ls&lt;/code&gt; command, Docker&amp;rsquo;s client uses this property. If this property is not set, the client falls back to the default table format. For a list of supported formatting directives, see &lt;a href=&quot;../config_ls/index&quot;&gt;&lt;strong&gt;Formatting&lt;/strong&gt; section in the &lt;code&gt;docker config ls&lt;/code&gt; documentation&lt;/a&gt;</source>
          <target state="translated">プロパティ &lt;code&gt;configFormat&lt;/code&gt; は、docker &lt;code&gt;docker config ls&lt;/code&gt; 出力のデフォルトの形式を指定します。とき &lt;code&gt;--format&lt;/code&gt; フラグが設けられていない &lt;code&gt;docker config ls&lt;/code&gt; コマンド、ドッカーのクライアントは、このプロパティを使用しています。このプロパティが設定されていない場合、クライアントはデフォルトのテーブル形式にフォールバックします。サポートされているフォーマットディレクティブのリストについて&lt;a href=&quot;../config_ls/index&quot;&gt;は、&lt;/a&gt; &lt;code&gt;docker config ls&lt;/code&gt; ドキュメントの「&lt;strong&gt;フォーマット」&lt;/strong&gt;セクションをご覧ください。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff2c161f1c8c1f61a5754a04ce5dff50f47e7bde" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;credHelpers&lt;/code&gt; specifies a set of credential helpers to use preferentially over &lt;code&gt;credsStore&lt;/code&gt; or &lt;code&gt;auths&lt;/code&gt; when storing and retrieving credentials for specific registries. If this property is set, the binary &lt;code&gt;docker-credential-&amp;lt;value&amp;gt;&lt;/code&gt; will be used when storing or retrieving credentials for a specific registry. For more information, see the &lt;a href=&quot;../login/index#credential-helpers&quot;&gt;&lt;strong&gt;Credential helpers&lt;/strong&gt; section in the &lt;code&gt;docker login&lt;/code&gt; documentation&lt;/a&gt;</source>
          <target state="translated">プロパティ &lt;code&gt;credHelpers&lt;/code&gt; は、特定のレジストリの資格を保存および取得するときに、 &lt;code&gt;credsStore&lt;/code&gt; または &lt;code&gt;auths&lt;/code&gt; 優先的に使用する資格ヘルパーのセットを指定します。このプロパティが設定されている場合、特定のレジストリの資格情報を格納または取得するときに、バイナリの &lt;code&gt;docker-credential-&amp;lt;value&amp;gt;&lt;/code&gt; が使用されます。詳細について&lt;a href=&quot;../login/index#credential-helpers&quot;&gt;は、&lt;/a&gt; &lt;code&gt;docker login&lt;/code&gt; ドキュメントの&lt;strong&gt;資格情報ヘルパーの&lt;/strong&gt;セクションをご覧ください。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="885b94cb03ea1c65dc63a5fec3733d6e66bdee06" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;credsStore&lt;/code&gt; specifies an external binary to serve as the default credential store. When this property is set, &lt;code&gt;docker login&lt;/code&gt; will attempt to store credentials in the binary specified by &lt;code&gt;docker-credential-&amp;lt;value&amp;gt;&lt;/code&gt; which is visible on &lt;code&gt;$PATH&lt;/code&gt;. If this property is not set, credentials will be stored in the &lt;code&gt;auths&lt;/code&gt; property of the config. For more information, see the &lt;a href=&quot;../login/index#credentials-store&quot;&gt;&lt;strong&gt;Credentials store&lt;/strong&gt; section in the &lt;code&gt;docker login&lt;/code&gt; documentation&lt;/a&gt;</source>
          <target state="translated">プロパティ &lt;code&gt;credsStore&lt;/code&gt; は、デフォルトの資格情報ストアとして機能する外部バイナリを指定します。このプロパティが設定されている場合、 &lt;code&gt;docker login&lt;/code&gt; は、 &lt;code&gt;$PATH&lt;/code&gt; 表示される &lt;code&gt;docker-credential-&amp;lt;value&amp;gt;&lt;/code&gt; で指定されたバイナリに資格情報を保存しようとします。このプロパティが設定されていない場合、資格情報は構成の &lt;code&gt;auths&lt;/code&gt; プロパティに格納されます。詳細について&lt;a href=&quot;../login/index#credentials-store&quot;&gt;は、&lt;/a&gt; &lt;code&gt;docker login&lt;/code&gt; ドキュメントの&lt;strong&gt;資格情報ストアの&lt;/strong&gt;セクションをご覧ください。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="032d9de0808ce12e78a3473ef97c2fc00382a217" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;imagesFormat&lt;/code&gt; specifies the default format for &lt;code&gt;docker images&lt;/code&gt; output. When the &lt;code&gt;--format&lt;/code&gt; flag is not provided with the &lt;code&gt;docker images&lt;/code&gt; command, Docker&amp;rsquo;s client uses this property. If this property is not set, the client falls back to the default table format. For a list of supported formatting directives, see the &lt;a href=&quot;../images/index&quot;&gt;&lt;strong&gt;Formatting&lt;/strong&gt; section in the &lt;code&gt;docker images&lt;/code&gt; documentation&lt;/a&gt;</source>
          <target state="translated">プロパティ &lt;code&gt;imagesFormat&lt;/code&gt; は、Docker &lt;code&gt;docker images&lt;/code&gt; 出力のデフォルト形式を指定します。とき &lt;code&gt;--format&lt;/code&gt; フラグが設けられていない &lt;code&gt;docker images&lt;/code&gt; コマンド、ドッカーのクライアントは、このプロパティを使用しています。このプロパティが設定されていない場合、クライアントはデフォルトのテーブル形式にフォールバックします。サポートされているフォーマットディレクティブのリストについて&lt;a href=&quot;../images/index&quot;&gt;は、&lt;/a&gt; &lt;code&gt;docker images&lt;/code&gt; ドキュメントの「&lt;strong&gt;フォーマット」&lt;/strong&gt;セクションをご覧ください。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9762ebf835e6bb935778d6f32521ace476e942d" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;nodesFormat&lt;/code&gt; specifies the default format for &lt;code&gt;docker node ls&lt;/code&gt; output. When the &lt;code&gt;--format&lt;/code&gt; flag is not provided with the &lt;code&gt;docker node ls&lt;/code&gt; command, Docker&amp;rsquo;s client uses the value of &lt;code&gt;nodesFormat&lt;/code&gt;. If the value of &lt;code&gt;nodesFormat&lt;/code&gt; is not set, the client uses the default table format. For a list of supported formatting directives, see the &lt;a href=&quot;../node_ls/index&quot;&gt;&lt;strong&gt;Formatting&lt;/strong&gt; section in the &lt;code&gt;docker node ls&lt;/code&gt; documentation&lt;/a&gt;</source>
          <target state="translated">プロパティ &lt;code&gt;nodesFormat&lt;/code&gt; は、Docker &lt;code&gt;docker node ls&lt;/code&gt; 出力のデフォルトのフォーマットを指定します。とき &lt;code&gt;--format&lt;/code&gt; フラグが設けられていない &lt;code&gt;docker node ls&lt;/code&gt; コマンド、ドッカーのクライアントは、の値使用 &lt;code&gt;nodesFormat&lt;/code&gt; を。 &lt;code&gt;nodesFormat&lt;/code&gt; の値が設定されていない場合、クライアントはデフォルトのテーブル形式を使用します。サポートされているフォーマットディレクティブのリストについて&lt;a href=&quot;../node_ls/index&quot;&gt;は、&lt;/a&gt; &lt;code&gt;docker node ls&lt;/code&gt; ドキュメントの「&lt;strong&gt;フォーマット」&lt;/strong&gt;セクションをご覧ください。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="674252cd16d5395c7c486b5e598ef4d29bd15baf" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;plugins&lt;/code&gt; contains settings specific to CLI plugins. The key is the plugin name, while the value is a further map of options, which are specific to that plugin.</source>
          <target state="translated">プロパティ &lt;code&gt;plugins&lt;/code&gt; には、CLIプラグインに固有の設定が含まれています。キーはプラグイン名であり、値はそのプラグインに固有のオプションの追加マップです。</target>
        </trans-unit>
        <trans-unit id="16b6f754562d22b95673706648cf3297c4642803" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;pluginsFormat&lt;/code&gt; specifies the default format for &lt;code&gt;docker plugin ls&lt;/code&gt; output. When the &lt;code&gt;--format&lt;/code&gt; flag is not provided with the &lt;code&gt;docker plugin ls&lt;/code&gt; command, Docker&amp;rsquo;s client uses this property. If this property is not set, the client falls back to the default table format. For a list of supported formatting directives, see the &lt;a href=&quot;../plugin_ls/index&quot;&gt;&lt;strong&gt;Formatting&lt;/strong&gt; section in the &lt;code&gt;docker plugin ls&lt;/code&gt; documentation&lt;/a&gt;</source>
          <target state="translated">プロパティ &lt;code&gt;pluginsFormat&lt;/code&gt; は、Docker &lt;code&gt;docker plugin ls&lt;/code&gt; 出力のデフォルトの形式を指定します。とき &lt;code&gt;--format&lt;/code&gt; フラグが設けられていない &lt;code&gt;docker plugin ls&lt;/code&gt; コマンド、ドッカーのクライアントは、このプロパティを使用しています。このプロパティが設定されていない場合、クライアントはデフォルトのテーブル形式にフォールバックします。サポートされているフォーマットディレクティブのリストについて&lt;a href=&quot;../plugin_ls/index&quot;&gt;は、&lt;/a&gt; &lt;code&gt;docker plugin ls&lt;/code&gt; ドキュメントの「&lt;strong&gt;フォーマット」&lt;/strong&gt;セクションをご覧ください。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d665772e5032d12e09e20305b4804b9de1d1bb7" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;psFormat&lt;/code&gt; specifies the default format for &lt;code&gt;docker ps&lt;/code&gt; output. When the &lt;code&gt;--format&lt;/code&gt; flag is not provided with the &lt;code&gt;docker ps&lt;/code&gt; command, Docker&amp;rsquo;s client uses this property. If this property is not set, the client falls back to the default table format. For a list of supported formatting directives, see the &lt;a href=&quot;../ps/index&quot;&gt;&lt;strong&gt;Formatting&lt;/strong&gt; section in the &lt;code&gt;docker ps&lt;/code&gt; documentation&lt;/a&gt;</source>
          <target state="translated">プロパティ &lt;code&gt;psFormat&lt;/code&gt; は、docker &lt;code&gt;docker ps&lt;/code&gt; 出力のデフォルトの形式を指定します。とき &lt;code&gt;--format&lt;/code&gt; フラグが設けられていない &lt;code&gt;docker ps&lt;/code&gt; コマンド、ドッカーのクライアントは、このプロパティを使用しています。このプロパティが設定されていない場合、クライアントはデフォルトのテーブル形式にフォールバックします。サポートされているフォーマットディレクティブのリストについて&lt;a href=&quot;../ps/index&quot;&gt;は、&lt;/a&gt; &lt;code&gt;docker ps&lt;/code&gt; ドキュメントの「&lt;strong&gt;フォーマット」&lt;/strong&gt;セクションをご覧ください。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c29241435344425768990fdbce634092e6914be" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;secretFormat&lt;/code&gt; specifies the default format for &lt;code&gt;docker secret ls&lt;/code&gt; output. When the &lt;code&gt;--format&lt;/code&gt; flag is not provided with the &lt;code&gt;docker secret ls&lt;/code&gt; command, Docker&amp;rsquo;s client uses this property. If this property is not set, the client falls back to the default table format. For a list of supported formatting directives, see &lt;a href=&quot;../secret_ls/index&quot;&gt;&lt;strong&gt;Formatting&lt;/strong&gt; section in the &lt;code&gt;docker secret ls&lt;/code&gt; documentation&lt;/a&gt;</source>
          <target state="translated">プロパティ &lt;code&gt;secretFormat&lt;/code&gt; は、Docker &lt;code&gt;docker secret ls&lt;/code&gt; 出力のデフォルトフォーマットを指定します。とき &lt;code&gt;--format&lt;/code&gt; フラグが設けられていない &lt;code&gt;docker secret ls&lt;/code&gt; コマンド、ドッカーのクライアントは、このプロパティを使用しています。このプロパティが設定されていない場合、クライアントはデフォルトのテーブル形式にフォールバックします。サポートされているフォーマットディレクティブのリストについて&lt;a href=&quot;../secret_ls/index&quot;&gt;は、&lt;/a&gt; &lt;code&gt;docker secret ls&lt;/code&gt; ドキュメントの「&lt;strong&gt;フォーマット」&lt;/strong&gt;セクションをご覧ください。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15f10e024d87a5aa3c77ccceee942e55fd612be9" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;serviceInspectFormat&lt;/code&gt; specifies the default format for &lt;code&gt;docker service inspect&lt;/code&gt; output. When the &lt;code&gt;--format&lt;/code&gt; flag is not provided with the &lt;code&gt;docker service inspect&lt;/code&gt; command, Docker&amp;rsquo;s client uses this property. If this property is not set, the client falls back to the default json format. For a list of supported formatting directives, see the &lt;a href=&quot;../service_inspect/index&quot;&gt;&lt;strong&gt;Formatting&lt;/strong&gt; section in the &lt;code&gt;docker service inspect&lt;/code&gt; documentation&lt;/a&gt;</source>
          <target state="translated">プロパティ &lt;code&gt;serviceInspectFormat&lt;/code&gt; は、Docker &lt;code&gt;docker service inspect&lt;/code&gt; 出力のデフォルト形式を指定します。とき &lt;code&gt;--format&lt;/code&gt; フラグが設けられていない &lt;code&gt;docker service inspect&lt;/code&gt; コマンドを、ドッカーのクライアントは、このプロパティを使用しています。このプロパティが設定されていない場合、クライアントはデフォルトのjson形式にフォールバックします。サポートされているフォーマットディレクティブのリストについて&lt;a href=&quot;../service_inspect/index&quot;&gt;は、&lt;/a&gt; &lt;code&gt;docker service inspect&lt;/code&gt; ドキュメントの「&lt;strong&gt;フォーマット」&lt;/strong&gt;セクションをご覧ください。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cbcbb8f8b6af8aebd036d17bda4cead916d2fab7" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;servicesFormat&lt;/code&gt; specifies the default format for &lt;code&gt;docker service ls&lt;/code&gt; output. When the &lt;code&gt;--format&lt;/code&gt; flag is not provided with the &lt;code&gt;docker service ls&lt;/code&gt; command, Docker&amp;rsquo;s client uses this property. If this property is not set, the client falls back to the default json format. For a list of supported formatting directives, see the &lt;a href=&quot;../service_ls/index&quot;&gt;&lt;strong&gt;Formatting&lt;/strong&gt; section in the &lt;code&gt;docker service ls&lt;/code&gt; documentation&lt;/a&gt;</source>
          <target state="translated">プロパティ &lt;code&gt;servicesFormat&lt;/code&gt; は、 &lt;code&gt;docker service ls&lt;/code&gt; 出力のデフォルトの形式を指定します。とき &lt;code&gt;--format&lt;/code&gt; フラグが設けられていない &lt;code&gt;docker service ls&lt;/code&gt; コマンド、ドッカーのクライアントは、このプロパティを使用しています。このプロパティが設定されていない場合、クライアントはデフォルトのjson形式にフォールバックします。サポートされているフォーマットディレクティブのリストについて&lt;a href=&quot;../service_ls/index&quot;&gt;は、&lt;/a&gt; &lt;code&gt;docker service ls&lt;/code&gt; ドキュメントの「&lt;strong&gt;フォーマット」&lt;/strong&gt;セクションをご覧ください。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29f7b59bf05268406aa48e6182f276000bba09a6" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;stackOrchestrator&lt;/code&gt; specifies the default orchestrator to use when running &lt;code&gt;docker stack&lt;/code&gt; management commands. Valid values are &lt;code&gt;&quot;swarm&quot;&lt;/code&gt;, &lt;code&gt;&quot;kubernetes&quot;&lt;/code&gt;, and &lt;code&gt;&quot;all&quot;&lt;/code&gt;. This property can be overridden with the &lt;code&gt;DOCKER_STACK_ORCHESTRATOR&lt;/code&gt; environment variable, or the &lt;code&gt;--orchestrator&lt;/code&gt; flag.</source>
          <target state="translated">プロパティ &lt;code&gt;stackOrchestrator&lt;/code&gt; は、Docker &lt;code&gt;docker stack&lt;/code&gt; 管理コマンドを実行するときに使用するデフォルトのオーケストレーターを指定します。有効な値は &lt;code&gt;&quot;swarm&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;kubernetes&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;all&quot;&lt;/code&gt; です。このプロパティは、 &lt;code&gt;DOCKER_STACK_ORCHESTRATOR&lt;/code&gt; 環境変数または &lt;code&gt;--orchestrator&lt;/code&gt; フラグでオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="89096068ab98f54e8022d62790125f24ecea93c3" translate="yes" xml:space="preserve">
          <source>The property &lt;code&gt;statsFormat&lt;/code&gt; specifies the default format for &lt;code&gt;docker stats&lt;/code&gt; output. When the &lt;code&gt;--format&lt;/code&gt; flag is not provided with the &lt;code&gt;docker stats&lt;/code&gt; command, Docker&amp;rsquo;s client uses this property. If this property is not set, the client falls back to the default table format. For a list of supported formatting directives, see &lt;a href=&quot;../stats/index&quot;&gt;&lt;strong&gt;Formatting&lt;/strong&gt; section in the &lt;code&gt;docker stats&lt;/code&gt; documentation&lt;/a&gt;</source>
          <target state="translated">プロパティ &lt;code&gt;statsFormat&lt;/code&gt; は、Docker &lt;code&gt;docker stats&lt;/code&gt; 出力のデフォルトの形式を指定します。とき &lt;code&gt;--format&lt;/code&gt; フラグが設けられていない &lt;code&gt;docker stats&lt;/code&gt; コマンド、ドッカーのクライアントは、このプロパティを使用しています。このプロパティが設定されていない場合、クライアントはデフォルトのテーブル形式にフォールバックします。サポートされているフォーマットディレクティブのリストについて&lt;a href=&quot;../stats/index&quot;&gt;は、&lt;/a&gt; &lt;code&gt;docker stats&lt;/code&gt; ドキュメントの「&lt;strong&gt;フォーマット」&lt;/strong&gt;セクションをご覧ください。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7e8d8488bd5aeca71220fc57ade98ba0396970b3" translate="yes" xml:space="preserve">
          <source>The proportion will only apply when CPU-intensive processes are running. When tasks in one container are idle, other containers can use the left-over CPU time. The actual amount of CPU time will vary depending on the number of containers running on the system.</source>
          <target state="translated">この割合は、CPU集約的なプロセスが実行されている場合にのみ適用されます。1つのコンテナ内のタスクがアイドル状態の場合、他のコンテナは残りのCPU時間を使用することができます。実際のCPU時間は、システム上で実行されているコンテナの数によって異なります。</target>
        </trans-unit>
        <trans-unit id="29dd043bdbec42216466734cc457a5eb41e7e1d3" translate="yes" xml:space="preserve">
          <source>The protocol to use,</source>
          <target state="translated">使用するプロトコルです。</target>
        </trans-unit>
        <trans-unit id="dd4801f0adeb0b0c444ff1a77d62156fc4876952" translate="yes" xml:space="preserve">
          <source>The pull did not complete because the trust system couldn&amp;rsquo;t verify the image.</source>
          <target state="translated">信頼システムがイメージを検証できなかったため、プルは完了しませんでした。</target>
        </trans-unit>
        <trans-unit id="05fbaf65a8c8a13a9ab566a2ba1e79a9e9e03a05" translate="yes" xml:space="preserve">
          <source>The quickest way to spin up a full Notary service for testing and development purposes is to use the Docker compose file in the &lt;a href=&quot;https://github.com/docker/notary&quot;&gt;Notary project&lt;/a&gt;.</source>
          <target state="translated">テストと開発の目的で完全なNotaryサービスを起動する最も簡単な方法は、&lt;a href=&quot;https://github.com/docker/notary&quot;&gt;Notaryプロジェクト&lt;/a&gt;でDocker構成ファイルを使用することです。</target>
        </trans-unit>
        <trans-unit id="03aafb92ef99d26e58b4c2893ae4d7e8464a53d1" translate="yes" xml:space="preserve">
          <source>The rate, parallelism, and other parameters of a rollback operation are determined by the values passed with the following flags:</source>
          <target state="translated">ロールバック操作のレート、並列性、その他のパラメータは、以下のフラグで渡された値によって決定されます。</target>
        </trans-unit>
        <trans-unit id="b246231e5b5b3d634a215da1c5bd509904d947a5" translate="yes" xml:space="preserve">
          <source>The reason both IP addresses work is that nodes in a swarm participate in an ingress &lt;strong&gt;routing mesh&lt;/strong&gt;. This ensures that a service deployed at a certain port within your swarm always has that port reserved to itself, no matter what node is actually running the container. Here&amp;rsquo;s a diagram of how a routing mesh for a service called &lt;code&gt;my-web&lt;/code&gt; published at port &lt;code&gt;8080&lt;/code&gt; on a three-node swarm would look:</source>
          <target state="translated">両方のIPアドレスが機能する理由は、スウォーム内のノードが入力&lt;strong&gt;ルーティングメッシュに&lt;/strong&gt;参加するためです。これにより、実際にコンテナを実行しているノードに関係なく、スウォーム内の特定のポートにデプロイされたサービスが常にそのポートを予約します。これは、3ノードのスウォームのポート &lt;code&gt;8080&lt;/code&gt; で公開された &lt;code&gt;my-web&lt;/code&gt; というサービスのルーティングメッシュがどのように見えるかを示す図です。</target>
        </trans-unit>
        <trans-unit id="9ca58fbbf0c45fb062cd8ba7663e5e2b086da215" translate="yes" xml:space="preserve">
          <source>The reason why &lt;em&gt;Docker swarm mode&lt;/em&gt; is using a consensus algorithm is to make sure that all the manager nodes that are in charge of managing and scheduling tasks in the cluster, are storing the same consistent state.</source>
          <target state="translated">&lt;em&gt;Docker Swarmモード&lt;/em&gt;がコンセンサスアルゴリズムを使用している理由は、クラスター内のタスクの管理とスケジュールを担当するすべてのマネージャーノードが同じ一貫した状態を保存していることを確認するためです。</target>
        </trans-unit>
        <trans-unit id="2a7ec2d9119bc0f68a55c5feb705fb7e586a2482" translate="yes" xml:space="preserve">
          <source>The reference used to push/pull from a registry</source>
          <target state="translated">レジストリからのプッシュ/プルに使用される参照</target>
        </trans-unit>
        <trans-unit id="7569bc34bfdbd4a5889b6033671a33e7ec2584e5" translate="yes" xml:space="preserve">
          <source>The remaining steps in the tutorial don&amp;rsquo;t use the &lt;code&gt;helloworld&lt;/code&gt; service, so now you can delete the service from the swarm.</source>
          <target state="translated">チュートリアルの残りのステップでは &lt;code&gt;helloworld&lt;/code&gt; サービスを使用しないため、サービスをswarmから削除できます。</target>
        </trans-unit>
        <trans-unit id="7ab5290c1463fb3de227a57f2d281e7f50e898ee" translate="yes" xml:space="preserve">
          <source>The remapping itself is handled by two files: &lt;code&gt;/etc/subuid&lt;/code&gt; and &lt;code&gt;/etc/subgid&lt;/code&gt;. Each file works the same, but one is concerned with the user ID range, and the other with the group ID range. Consider the following entry in &lt;code&gt;/etc/subuid&lt;/code&gt;:</source>
          <target state="translated">再マッピング自体は、 &lt;code&gt;/etc/subuid&lt;/code&gt; および &lt;code&gt;/etc/subgid&lt;/code&gt; の 2つのファイルによって処理されます。各ファイルは同じように機能しますが、1つはユーザーIDの範囲に関係し、もう1つはグループIDの範囲に関係します。 &lt;code&gt;/etc/subuid&lt;/code&gt; の次のエントリを検討してください。</target>
        </trans-unit>
        <trans-unit id="5bf3a365f9776118fbc56e14043d665fdcb36273" translate="yes" xml:space="preserve">
          <source>The reporting section contains any configuration for useful for running the service, such as reporting errors. Currently, Notary only supports reporting errors to &lt;a href=&quot;https://bugsnag.com&quot;&gt;Bugsnag&lt;/a&gt;.</source>
          <target state="translated">レポートセクションには、エラーのレポートなど、サービスの実行に役立つ構成が含まれています。現在、Notaryは&lt;a href=&quot;https://bugsnag.com&quot;&gt;Bugsnag&lt;/a&gt;へのエラー報告のみをサポートしています。</target>
        </trans-unit>
        <trans-unit id="c88d2ba2ed2816515b29f747a56198118252a7d7" translate="yes" xml:space="preserve">
          <source>The root CA rotation will not be completed until all registered nodes have rotated their TLS certificates. If the rotation is not completing within a reasonable amount of time, try running &lt;code&gt;docker node ls --format '{{.ID}} {{.Hostname}} {{.Status}} {{.TLSStatus}}'&lt;/code&gt; to see if any nodes are down or otherwise unable to rotate TLS certificates.</source>
          <target state="translated">ルートCAのローテーションは、登録されたすべてのノードがTLS証明書をローテーションするまで完了しません。ローテーションが妥当な時間内に完了しない場合は、 &lt;code&gt;docker node ls --format '{{.ID}} {{.Hostname}} {{.Status}} {{.TLSStatus}}'&lt;/code&gt; を実行して、ノードがダウンしているか、TLS証明書をローテーションできません。</target>
        </trans-unit>
        <trans-unit id="465cc3be871925b74afbbcaa771fbc172146cce6" translate="yes" xml:space="preserve">
          <source>The root and targets key are generated and stored locally client-side.</source>
          <target state="translated">ルートキーとターゲットキーはクライアント側で生成され、ローカルに保存されます。</target>
        </trans-unit>
        <trans-unit id="eb3fbf76706a263fc41ee7f0e5b3732ad52454f6" translate="yes" xml:space="preserve">
          <source>The root certificate to trust for mutual authentication. If provided, any clients connecting to Notary signer need a client certificate signed by this root. If not provided, mutual authentication is not required. The path is relative to the directory of the configuration file.</source>
          <target state="translated">相互認証のために信頼するルート証明書。指定した場合、公証人署名者に接続するクライアントには、このルートが署名したクライアント証明書が必要になります。省略した場合、相互認証は必要ありません。パスは設定ファイルのディレクトリからの相対パスです。</target>
        </trans-unit>
        <trans-unit id="b91ee6325038098e40965654c5b58f973a1c04a0" translate="yes" xml:space="preserve">
          <source>The root key is the root of all trust. It signs the &lt;a href=&quot;https://github.com/theupdateframework/tuf/blob/1bed3e09a478c2c918ffbff10b9118f6e52ee129/docs/tuf-spec.txt#L489&quot;&gt;root metadata file&lt;/a&gt;, which lists the IDs of the root, targets, snapshot, and timestamp public keys. Clients use these public keys to verify the signatures on all the metadata files in the repository. This key is held by a collection owner, and should be kept offline and safe, more so than any other key.</source>
          <target state="translated">ルートキーは、すべての信頼のルートです。&lt;a href=&quot;https://github.com/theupdateframework/tuf/blob/1bed3e09a478c2c918ffbff10b9118f6e52ee129/docs/tuf-spec.txt#L489&quot;&gt;ルートメタデータファイル&lt;/a&gt;に署名します。ルートメタデータファイルには、ルートのID、ターゲット、スナップショット、タイムスタンプの公開キーがリストされています。クライアントはこれらの公開鍵を使用して、リポジトリ内のすべてのメタデータファイルの署名を検証します。このキーはコレクションの所有者が保持しており、他のどのキーよりもオフラインで安全に保管する必要があります。</target>
        </trans-unit>
        <trans-unit id="b295f881568376eb1d80d57cee88cfe5b7c2bfe9" translate="yes" xml:space="preserve">
          <source>The root/offline key passphrase</source>
          <target state="translated">ルート/オフラインキーのパスフレーズ</target>
        </trans-unit>
        <trans-unit id="8102a636a624047ab10c86d269bc0df4dae6624a" translate="yes" xml:space="preserve">
          <source>The rootfs directory</source>
          <target state="translated">rootfs ディレクトリ</target>
        </trans-unit>
        <trans-unit id="a8adc27400fa9d16cf99f74a14e6a34821d755bf" translate="yes" xml:space="preserve">
          <source>The routing mesh listens on the published port for any IP address assigned to the node. For externally routable IP addresses, the port is available from outside the host. For all other IP addresses the access is only available from within the host.</source>
          <target state="translated">ルーティングメッシュは、ノードに割り当てられた任意のIPアドレスについて、公開されたポートをリッスンします。外部からルーティング可能なIPアドレスの場合、ポートはホストの外部から利用可能です。それ以外のすべてのIPアドレスについては、ホスト内からのみアクセスが可能です。</target>
        </trans-unit>
        <trans-unit id="651ea2301cb30ccac05c14bcc4f8596b34135c1e" translate="yes" xml:space="preserve">
          <source>The sample private key files in the Notary repository are obviously public knowledge and using them in a production deployment is highly insecure.</source>
          <target state="translated">Notary リポジトリにあるサンプルの秘密鍵ファイルは明らかに公知のものであり、本番環境で使用することは非常に安全ではありません。</target>
        </trans-unit>
        <trans-unit id="0680e84ec3606b9b2a28ebd30c137017045206d7" translate="yes" xml:space="preserve">
          <source>The scale command enables you to scale one or more replicated services either up or down to the desired number of replicas. This command cannot be applied on services which are global mode. The command will return immediately, but the actual scaling of the service may take some time. To stop all replicas of a service while keeping the service active in the swarm you can set the scale to 0.</source>
          <target state="translated">scale コマンドを使用すると、1 つまたは複数のレプリケートされたサービスを、必要な数のレプリカまでスケールアップまたはスケールダウンすることができます。このコマンドは、グローバル モードのサービスには適用できません。コマンドはすぐに戻りますが、サービスの実際のスケーリングには時間がかかる場合があります。スウォーム内でサービスをアクティブにしたまま、サービスのすべてのレプリカを停止するには、スケールを 0 に設定します。</target>
        </trans-unit>
        <trans-unit id="fd5e3a3daf8f3af35f3576952165a75efca3c43f" translate="yes" xml:space="preserve">
          <source>The scheduler applies rolling updates as follows by default:</source>
          <target state="translated">スケジューラは、デフォルトでは以下のようにローリングアップデートを適用します。</target>
        </trans-unit>
        <trans-unit id="7fdad0e461a858285fc18d11169e3855ceaafd78" translate="yes" xml:space="preserve">
          <source>The second difference is that the &lt;code&gt;docker-compose run&lt;/code&gt; command does not create any of the ports specified in the service configuration. This prevents port collisions with already-open ports. If you &lt;em&gt;do want&lt;/em&gt; the service&amp;rsquo;s ports to be created and mapped to the host, specify the &lt;code&gt;--service-ports&lt;/code&gt; flag:</source>
          <target state="translated">2番目の違いは、 &lt;code&gt;docker-compose run&lt;/code&gt; コマンドは、サービス構成で指定されたポートを作成しないことです。これにより、すでに開いているポートとのポートの衝突が防止されます。あなたがいる場合&lt;em&gt;たいです&lt;/em&gt;サービスのポートが作成され、ホストにマップされるように、指定 &lt;code&gt;--service-ports&lt;/code&gt; フラグを：</target>
        </trans-unit>
        <trans-unit id="1369662f4279d3737e3689ad5061118d736eaf00" translate="yes" xml:space="preserve">
          <source>The second form, &lt;code&gt;ENV &amp;lt;key&amp;gt;=&amp;lt;value&amp;gt; ...&lt;/code&gt;, allows for multiple variables to be set at one time. Notice that the second form uses the equals sign (=) in the syntax, while the first form does not. Like command line parsing, quotes and backslashes can be used to include spaces within values.</source>
          <target state="translated">2番目の形式、 &lt;code&gt;ENV &amp;lt;key&amp;gt;=&amp;lt;value&amp;gt; ...&lt;/code&gt; では、一度に複数の変数を設定できます。2番目の形式では構文で等号（=）を使用していますが、最初の形式では使用していません。コマンドラインの解析と同様に、引用符とバックスラッシュを使用して、値内にスペースを含めることができます。</target>
        </trans-unit>
        <trans-unit id="a18b471e24f517ee24f17b02f1944454e7b27901" translate="yes" xml:space="preserve">
          <source>The secrets are each mounted in a &lt;code&gt;tmpfs&lt;/code&gt; filesystem at &lt;code&gt;/run/secrets/mysql_password&lt;/code&gt; and &lt;code&gt;/run/secrets/mysql_root_password&lt;/code&gt;. They are never exposed as environment variables, nor can they be committed to an image if the &lt;code&gt;docker commit&lt;/code&gt; command is run. The &lt;code&gt;mysql_password&lt;/code&gt; secret is the one used by the non-privileged WordPress container to connect to MySQL.</source>
          <target state="translated">シークレットはそれぞれ、 &lt;code&gt;/run/secrets/mysql_password&lt;/code&gt; および &lt;code&gt;/run/secrets/mysql_root_password&lt;/code&gt; の &lt;code&gt;tmpfs&lt;/code&gt; ファイルシステムにマウントされます。これらは環境変数として公開されることも、 &lt;code&gt;docker commit&lt;/code&gt; コマンドが実行された場合にイメージにコミットされることもありません。 &lt;code&gt;mysql_password&lt;/code&gt; の秘密は、MySQLに接続するために、非特権WordPressのコンテナで使用されるものです。</target>
        </trans-unit>
        <trans-unit id="f092993aa746c14f11973e92473a80799b7c5cdb" translate="yes" xml:space="preserve">
          <source>The secrets are stored in the encrypted Raft logs for the swarm.</source>
          <target state="translated">秘密は群れのために暗号化されたラフトのログに保存されています。</target>
        </trans-unit>
        <trans-unit id="a950b0ba4b36dfaab8fd235063e02e8ae56ebb64" translate="yes" xml:space="preserve">
          <source>The sections below provide an inexhaustive overview of available plugins.</source>
          <target state="translated">以下のセクションでは、利用可能なプラグインの概要を網羅的に説明しています。</target>
        </trans-unit>
        <trans-unit id="ed44fc39d73da3d657ea6e32cb6e540bcc7e237b" translate="yes" xml:space="preserve">
          <source>The security of keys held and administered by users depends on measures taken by the users. If the Notary Client CLI was used to create them, then they are password protected and the Notary CLI does not provide options to export them in plaintext.</source>
          <target state="translated">ユーザーが保持し管理する鍵のセキュリティは、ユーザーが取った対策に依存します。公証人クライアントCLIが鍵の作成に使用された場合、それらはパスワードで保護されており、公証人CLIは平文でエクスポートするオプションを提供していません。</target>
        </trans-unit>
        <trans-unit id="cc6046dbe345edbe3a9289f0ffe25429820506bd" translate="yes" xml:space="preserve">
          <source>The self-signed certificate&amp;rsquo;s subject name and subject alternative names are &lt;code&gt;notary-server&lt;/code&gt;, &lt;code&gt;notaryserver&lt;/code&gt;, and &lt;code&gt;localhost&lt;/code&gt;, so if your Docker host is not on &lt;code&gt;localhost&lt;/code&gt; (for example if you are using Docker Machine), update your hosts file such that the name &lt;code&gt;notary-server&lt;/code&gt; is associated with the IP address of your Docker host.</source>
          <target state="translated">自己署名証明書のサブジェクト名とサブジェクト代替名がある &lt;code&gt;notary-server&lt;/code&gt; 、 &lt;code&gt;notaryserver&lt;/code&gt; 、および &lt;code&gt;localhost&lt;/code&gt; あなたドッカーホストが上ではないので、場合、 &lt;code&gt;localhost&lt;/code&gt; （あなたがドッカーマシンを使用している場合など）、そのような名前のそのhostsファイルの更新 &lt;code&gt;notary-server&lt;/code&gt; は、DockerホストのIPアドレスに関連付けられています。</target>
        </trans-unit>
        <trans-unit id="05fc316e8da00fa94322c414c61e50be43f29aa2" translate="yes" xml:space="preserve">
          <source>The sequence diagrams below depict an allow and deny authorization flow:</source>
          <target state="translated">以下のシーケンス図は、許可と拒否の承認フローを示しています。</target>
        </trans-unit>
        <trans-unit id="cfda3a75597b63ea614d8b5f992985ded0fd10f1" translate="yes" xml:space="preserve">
          <source>The server and signer each require a database. These should be separate databases with different users. The users should be limited in their permissions. We recommend giving the following MySQL (or equivalent) permissions to the users restricted to only their own databases:</source>
          <target state="translated">サーバと署名者はそれぞれデータベースを必要とします。これらは、異なるユーザを持つ別々のデータベースでなければなりません。ユーザの権限は制限されている必要があります。自分のデータベースのみに制限されたユーザには、以下のMySQL(または同等のもの)の権限を与えることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a1d5383055ec3d5ebeeb1ca8d9b08a8b9065d399" translate="yes" xml:space="preserve">
          <source>The service is scheduled on an available node. To confirm that the service was created and started successfully, use the &lt;code&gt;docker service ls&lt;/code&gt; command:</source>
          <target state="translated">サービスは利用可能なノードでスケジュールされます。サービスが作成され、正常に開始されたことを確認するには、 &lt;code&gt;docker service ls&lt;/code&gt; コマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="5355f89c4a23e588939caf6ab76b28c21f8b64ba" translate="yes" xml:space="preserve">
          <source>The service mode determines whether this is a &lt;em&gt;replicated&lt;/em&gt; service or a &lt;em&gt;global&lt;/em&gt; service. A replicated service runs as many tasks as specified, while a global service runs on each active node in the swarm.</source>
          <target state="translated">サービスモードは、これが&lt;em&gt;複製&lt;/em&gt;サービスであるか、&lt;em&gt;グローバル&lt;/em&gt;サービスであるかを決定します。レプリケートされたサービスは指定された数のタスクを実行し、グローバルサービスはスウォーム内の各アクティブノードで実行されます。</target>
        </trans-unit>
        <trans-unit id="82c2d6c046e79fb08237072b087819e985e2f1f6" translate="yes" xml:space="preserve">
          <source>The service that does all the heavy-lifting of managing trust</source>
          <target state="translated">信託管理の重労働をすべて代行してくれるサービス</target>
        </trans-unit>
        <trans-unit id="188371eb2e278b2bcaa57e5e84f1de91dd45b6f9" translate="yes" xml:space="preserve">
          <source>The settings currently supported are:</source>
          <target state="translated">現在サポートされている設定は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="5e9f71dbad06279098210209165a53aa91ebb9a3" translate="yes" xml:space="preserve">
          <source>The severity of the compromise of a trust collection owner/administrator&amp;rsquo;s decrypted key depends on the type and combination of keys compromised. For example, were the snapshot and targets key both compromised, or just the targets key?</source>
          <target state="translated">トラストコレクションの所有者/管理者の復号化されたキーの侵害の重大度は、侵害されたキーのタイプと組み合わせによって異なります。たとえば、スナップショットとターゲットキーの両方が侵害されたのか、それともターゲットキーだけが侵害されたのか。</target>
        </trans-unit>
        <trans-unit id="5e285e5fc1c5c5b83b6e6ae21945064a554d6911" translate="yes" xml:space="preserve">
          <source>The short syntax uses the generic &lt;code&gt;[SOURCE:]TARGET[:MODE]&lt;/code&gt; format, where &lt;code&gt;SOURCE&lt;/code&gt; can be either a host path or volume name. &lt;code&gt;TARGET&lt;/code&gt; is the container path where the volume is mounted. Standard modes are &lt;code&gt;ro&lt;/code&gt; for read-only and &lt;code&gt;rw&lt;/code&gt; for read-write (default).</source>
          <target state="translated">短い構文は、一般的な使用 &lt;code&gt;[SOURCE:]TARGET[:MODE]&lt;/code&gt; フォーマット、 &lt;code&gt;SOURCE&lt;/code&gt; はホスト経路またはボリューム名のいずれかであることができるが。 &lt;code&gt;TARGET&lt;/code&gt; は、ボリュームがマウントされるコンテナーパスです。標準モードは、読み取り専用の &lt;code&gt;ro&lt;/code&gt; と読み取り/書き込み（デフォルト）の &lt;code&gt;rw&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="479ecea93938657188a1718269a0502002d14409" translate="yes" xml:space="preserve">
          <source>The short syntax variant only specifies the config name. This grants the container access to the config and mounts it at &lt;code&gt;/&amp;lt;config_name&amp;gt;&lt;/code&gt; within the container. The source name and destination mountpoint are both set to the config name.</source>
          <target state="translated">短い構文バリアントは、構成名のみを指定します。これにより、コンテナーに構成へのアクセスが許可され、コンテナー内の &lt;code&gt;/&amp;lt;config_name&amp;gt;&lt;/code&gt; にマウントされます。ソース名と宛先マウントポイントの両方が構成名に設定されています。</target>
        </trans-unit>
        <trans-unit id="cfba78e508fa6569fb674621ccb1b91714d1e973" translate="yes" xml:space="preserve">
          <source>The short syntax variant only specifies the secret name. This grants the container access to the secret and mounts it at &lt;code&gt;/run/secrets/&amp;lt;secret_name&amp;gt;&lt;/code&gt; within the container. The source name and destination mountpoint are both set to the secret name.</source>
          <target state="translated">短い構文バリアントは、秘密の名前のみを指定します。これにより、コンテナーにシークレットへのアクセスが許可され、コンテナー内の &lt;code&gt;/run/secrets/&amp;lt;secret_name&amp;gt;&lt;/code&gt; にマウントされます。ソース名と宛先マウントポイントの両方がシークレット名に設定されています。</target>
        </trans-unit>
        <trans-unit id="1da25af45d12b0e226e934e1363a91d8c769594b" translate="yes" xml:space="preserve">
          <source>The shorthand (&lt;code&gt;-h&lt;/code&gt;) is less common than &lt;code&gt;--help&lt;/code&gt; on Linux and cannot be used on all subcommands (due to it conflicting with, e.g. &lt;code&gt;-h&lt;/code&gt; / &lt;code&gt;--hostname&lt;/code&gt; on &lt;code&gt;docker create&lt;/code&gt;). For this reason, the &lt;code&gt;-h&lt;/code&gt; shorthand was not printed in the &amp;ldquo;usage&amp;rdquo; output of subcommands, nor documented, and is now marked &amp;ldquo;deprecated&amp;rdquo;.</source>
          <target state="translated">省略形（ &lt;code&gt;-h&lt;/code&gt; ）は、Linuxでは &lt;code&gt;--help&lt;/code&gt; より一般的ではなく、すべてのサブコマンドで使用することはできません（たとえば、 &lt;code&gt;docker create&lt;/code&gt; の &lt;code&gt;-h&lt;/code&gt; / &lt;code&gt;--hostname&lt;/code&gt; と競合するため）。このため、 &lt;code&gt;-h&lt;/code&gt; 省略形はサブコマンドの「使用方法」出力に出力されておらず、文書化もされておらず、「非推奨」とマークされています。</target>
        </trans-unit>
        <trans-unit id="b1823de424eca78e8cd4261e1adb302d80224200" translate="yes" xml:space="preserve">
          <source>The single copy of &lt;code&gt;visualizer&lt;/code&gt; is running on the manager as you expect, and the 5 instances of &lt;code&gt;web&lt;/code&gt; are spread out across the swarm. You can corroborate this visualization by running &lt;code&gt;docker stack ps &amp;lt;stack&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">期待どおりに、 &lt;code&gt;visualizer&lt;/code&gt; の単一のコピーがマネージャーで実行されており、 &lt;code&gt;web&lt;/code&gt; の5つの​​インスタンスが群れ全体に広がっています。 &lt;code&gt;docker stack ps &amp;lt;stack&amp;gt;&lt;/code&gt; を実行して、この視覚化を裏付けることができます。</target>
        </trans-unit>
        <trans-unit id="8cd0880463635b8e67d1ef02c532e8c3032cbe66" translate="yes" xml:space="preserve">
          <source>The single-dash (&lt;code&gt;-help&lt;/code&gt;) was removed, in favor of the double-dash &lt;code&gt;--help&lt;/code&gt;</source>
          <target state="translated">単一ダッシュ（ &lt;code&gt;-help&lt;/code&gt; ）が削除され、二重ダッシュ &lt;code&gt;--help&lt;/code&gt; が採用されました。</target>
        </trans-unit>
        <trans-unit id="34a4291305962d962a0ae36d42891028cba295a8" translate="yes" xml:space="preserve">
          <source>The size of the VM&amp;rsquo;s disk can be configured this way:</source>
          <target state="translated">VMのディスクのサイズは次のように構成できます。</target>
        </trans-unit>
        <trans-unit id="b72510ced0d790516e0ce0a66a581ebc5933ec3f" translate="yes" xml:space="preserve">
          <source>The snapshot (an online) key passphrase</source>
          <target state="translated">スナップショット(オンラインの)キーパスフレーズ</target>
        </trans-unit>
        <trans-unit id="64a63b8afef04c5fd245cceea8bf9d95936bf43a" translate="yes" xml:space="preserve">
          <source>The snapshot key signs the &lt;a href=&quot;https://github.com/theupdateframework/tuf/blob/1bed3e09a478c2c918ffbff10b9118f6e52ee129/docs/tuf-spec.txt#L604&quot;&gt;snapshot metadata file&lt;/a&gt;, which enumerates the filenames, sizes, and hashes of the root, targets, and delegation metadata files for the collection. This file is used to verify the integrity of the other metadata files. The snapshot key is held by either a collection owner/administrator, or held by the Notary service to facilitate &lt;a href=&quot;../advanced_usage/index#working-with-delegation-roles&quot;&gt;signing by multiple collaborators via delegation roles&lt;/a&gt;.</source>
          <target state="translated">スナップショットキーは、コレクションのルート、ターゲット、および委任メタデータファイルのファイル名、サイズ、ハッシュを列挙する&lt;a href=&quot;https://github.com/theupdateframework/tuf/blob/1bed3e09a478c2c918ffbff10b9118f6e52ee129/docs/tuf-spec.txt#L604&quot;&gt;スナップショットメタデータファイルに&lt;/a&gt;署名します。このファイルは、他のメタデータファイルの整合性を検証するために使用されます。スナップショットキーは、コレクションの所有者/管理者が保持するか、Notaryサービスが保持して、&lt;a href=&quot;../advanced_usage/index#working-with-delegation-roles&quot;&gt;委任ロールを介した複数の共同編集者による署名&lt;/a&gt;を容易にします。</target>
        </trans-unit>
        <trans-unit id="e3009e949c1d5550b7288bb677530e0a0ba478ba" translate="yes" xml:space="preserve">
          <source>The solution is to use &lt;code&gt;ONBUILD&lt;/code&gt; to register advance instructions to run later, during the next build stage.</source>
          <target state="translated">解決策は、 &lt;code&gt;ONBUILD&lt;/code&gt; を使用して事前命令を登録し、後で、次のビルドステージで実行することです。</target>
        </trans-unit>
        <trans-unit id="5b8f682785a6e43ae0cbbde58fcc4f0b5598edd1" translate="yes" xml:space="preserve">
          <source>The storage section specifies which storage backend the server should use to store TUF metadata. Only MySQL or an in-memory store is supported.</source>
          <target state="translated">ストレージセクションでは、サーバがどのストレージバックエンドを使用してTUFメタデータを保存するかを指定します。MySQL またはインメモリストアのみがサポートされています。</target>
        </trans-unit>
        <trans-unit id="7071e38fef942da46e433f01278d254227287231" translate="yes" xml:space="preserve">
          <source>The structure and permitted configuration keys</source>
          <target state="translated">構造と許可された設定キー</target>
        </trans-unit>
        <trans-unit id="ea12639961c26144f02d08ab564148f99bd4aa3b" translate="yes" xml:space="preserve">
          <source>The subnet range comes from the &lt;code&gt;--default-addr-pool&lt;/code&gt;, (such as &lt;code&gt;10.10.0.0/16&lt;/code&gt;). The size of 16 there represents the number of networks one can create within that &lt;code&gt;default-addr-pool&lt;/code&gt; range. The &lt;code&gt;--default-address-pool&lt;/code&gt; option may occur multiple times with each option providing additional addresses for docker to use for overlay subnets.</source>
          <target state="translated">サブネットの範囲は &lt;code&gt;--default-addr-pool&lt;/code&gt; から &lt;code&gt;10.10.0.0/16&lt;/code&gt; れます（10.10.0.0/16など）。そこでの16のサイズは、その &lt;code&gt;default-addr-pool&lt;/code&gt; 範囲内で作成できるネットワークの数を表します。 &lt;code&gt;--default-address-pool&lt;/code&gt; オプションは、オーバーレイサブネットの使用にドッキングウィンドウのために追加のアドレスを提供する各オプションで複数回発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="9f4fcc17f1c191d796a33a3a9af64120d639fd0d" translate="yes" xml:space="preserve">
          <source>The subordinate UID and GID ranges must be associated with an existing user, even though the association is an implementation detail. The user owns the namespaced storage directories under &lt;code&gt;/var/lib/docker/&lt;/code&gt;. If you don&amp;rsquo;t want to use an existing user, Docker can create one for you and use that. If you want to use an existing username or user ID, it must already exist. Typically, this means that the relevant entries need to be in &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/group&lt;/code&gt;, but if you are using a different authentication back-end, this requirement may translate differently.</source>
          <target state="translated">関連付けは実装の詳細ですが、従属UIDおよびGIDの範囲は、既存のユーザーに関連付ける必要があります。ユーザーは、 &lt;code&gt;/var/lib/docker/&lt;/code&gt; 下の名前空間付きストレージディレクトリを所有します。既存のユーザーを使用したくない場合は、Dockerが作成して使用します。既存のユーザー名またはユーザーIDを使用する場合は、すでに存在している必要があります。通常、これは関連するエントリが &lt;code&gt;/etc/passwd&lt;/code&gt; および &lt;code&gt;/etc/group&lt;/code&gt; に存在する必要があることを意味しますが、別の認証バックエンドを使用している場合、この要件は異なる解釈になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="41d38596a5c2344ff17e02b039500f02d18f800e" translate="yes" xml:space="preserve">
          <source>The supported flags are as follows:</source>
          <target state="translated">サポートされているフラグは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="53bda3a84f325c0d6fe257e495edda6f4f91eef8" translate="yes" xml:space="preserve">
          <source>The supported flags are the following :</source>
          <target state="translated">サポートされているフラグは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="21892ba3c3ab5a265fafe92a1d86c39ed241c3d6" translate="yes" xml:space="preserve">
          <source>The supported units are &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;k&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt; and &lt;code&gt;g&lt;/code&gt;, and their alternative notation &lt;code&gt;kb&lt;/code&gt;, &lt;code&gt;mb&lt;/code&gt; and &lt;code&gt;gb&lt;/code&gt;. Decimal values are not supported at this time.</source>
          <target state="translated">サポートされている単位は、 &lt;code&gt;b&lt;/code&gt; 、 &lt;code&gt;k&lt;/code&gt; 、 &lt;code&gt;m&lt;/code&gt; 、 &lt;code&gt;g&lt;/code&gt; と、それらの代替表記である &lt;code&gt;kb&lt;/code&gt; 、 &lt;code&gt;mb&lt;/code&gt; 、 &lt;code&gt;gb&lt;/code&gt; です。現在、10進値はサポートされていません。</target>
        </trans-unit>
        <trans-unit id="807cd4896b900c1b59b5b7d890258f1331a14b7c" translate="yes" xml:space="preserve">
          <source>The supported units are &lt;code&gt;us&lt;/code&gt;, &lt;code&gt;ms&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt; and &lt;code&gt;h&lt;/code&gt;.</source>
          <target state="translated">サポートされている単位は、 &lt;code&gt;us&lt;/code&gt; 、 &lt;code&gt;ms&lt;/code&gt; 、 &lt;code&gt;s&lt;/code&gt; 、 &lt;code&gt;m&lt;/code&gt; 、および &lt;code&gt;h&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ee7b3ee3acebd9009344f2838f9b5ae0e30b16d9" translate="yes" xml:space="preserve">
          <source>The swarm extends &lt;code&gt;my-network&lt;/code&gt; to each node running the service.</source>
          <target state="translated">swarmは &lt;code&gt;my-network&lt;/code&gt; サービスを実行している各ノードにmy-networkを拡張します。</target>
        </trans-unit>
        <trans-unit id="e8db2ff14bf4c80ac8a86419be635fcf751e90ef" translate="yes" xml:space="preserve">
          <source>The swarm extends my-network to each node running the service.</source>
          <target state="translated">スウォームは、サービスを実行している各ノードにマイネットワークを拡張します。</target>
        </trans-unit>
        <trans-unit id="2bf9f6bd81f0a82dc7b12293d79dee778c3d6d05" translate="yes" xml:space="preserve">
          <source>The swarm manager maintains the desired state by ending the task on a node with &lt;code&gt;Drain&lt;/code&gt; availability and creating a new task on a node with &lt;code&gt;Active&lt;/code&gt; availability.</source>
          <target state="translated">Swarm Managerは、 &lt;code&gt;Drain&lt;/code&gt; が使用可能なノードでタスクを終了し、 &lt;code&gt;Active&lt;/code&gt; が使用可能なノードで新しいタスクを作成することにより、目的の状態を維持します。</target>
        </trans-unit>
        <trans-unit id="65790f3186fe670370e99c3c01ba5d4fbd93871e" translate="yes" xml:space="preserve">
          <source>The swarm manager uses &lt;strong&gt;ingress load balancing&lt;/strong&gt; to expose the services you want to make available externally to the swarm. The swarm manager can automatically assign the service a &lt;strong&gt;PublishedPort&lt;/strong&gt; or you can configure a PublishedPort for the service. You can specify any unused port. If you do not specify a port, the swarm manager assigns the service a port in the 30000-32767 range.</source>
          <target state="translated">スウォームマネージャは、&lt;strong&gt;イングレスロードバランシング&lt;/strong&gt;を使用して、スウォームの外部で利用できるようにするサービスを公開します。 Swarm Managerは、サービスに&lt;strong&gt;PublishedPortを&lt;/strong&gt;自動的に割り当てることができます。または、サービスの&lt;strong&gt;PublishedPort&lt;/strong&gt;を構成できます。未使用のポートを指定できます。ポートを指定しない場合、Swarm Managerはサービスに30000〜32767の範囲のポートを割り当てます。</target>
        </trans-unit>
        <trans-unit id="56909f0d7f17f9e0bbe59c5689143779666dbf5a" translate="yes" xml:space="preserve">
          <source>The swarm mode public key infrastructure (PKI) system built into Docker makes it simple to securely deploy a container orchestration system. The nodes in a swarm use mutual Transport Layer Security (TLS) to authenticate, authorize, and encrypt the communications with other nodes in the swarm.</source>
          <target state="translated">Dockerに組み込まれたスウォームモード公開鍵基盤(PKI)システムにより、コンテナオーケストレーションシステムを安全に簡単にデプロイすることができます。スウォーム内のノードは、スウォーム内の他のノードとの通信を相互にTLS(Transport Layer Security)を使って認証、認証、暗号化を行います。</target>
        </trans-unit>
        <trans-unit id="177825a6c20f4575a9a1b1e5fdac44315634cd55" translate="yes" xml:space="preserve">
          <source>The syntax directive defines the location of the Dockerfile builder that is used for building the current Dockerfile. The BuildKit backend allows to seamlessly use external implementations of builders that are distributed as Docker images and execute inside a container sandbox environment.</source>
          <target state="translated">構文指令は、現在のDockerfileのビルドに使用されるDockerfileビルダーの場所を定義します。BuildKitバックエンドでは、Dockerイメージとして配布され、コンテナサンドボックス環境内で実行されるビルダーの外部実装をシームレスに利用することができます。</target>
        </trans-unit>
        <trans-unit id="0e83e8c32440b639e2870f007f94e67fbe95cc31" translate="yes" xml:space="preserve">
          <source>The syntax for file globbing in AppArmor is a bit different than some other globbing implementations. It is highly suggested you take a look at some of the below resources with regard to AppArmor profile syntax.</source>
          <target state="translated">AppArmorのファイル・グロブの構文は、他のグロブ実装とは少し異なります。AppArmorプロファイルの構文については、以下のリソースを参照することを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="9b7bd5feec5d7731585bce13eb511ccb98f70714" translate="yes" xml:space="preserve">
          <source>The syntax for using built-in networks such as &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;none&lt;/code&gt; is a little different. Define an external network with the name &lt;code&gt;host&lt;/code&gt; or &lt;code&gt;none&lt;/code&gt; (that Docker has already created automatically) and an alias that Compose can use (&lt;code&gt;hostnet&lt;/code&gt; or &lt;code&gt;nonet&lt;/code&gt; in the following examples), then grant the service access to that network using the alias.</source>
          <target state="translated">&lt;code&gt;host&lt;/code&gt; や &lt;code&gt;none&lt;/code&gt; などの組み込みネットワークを使用するための構文は少し異なります。 &lt;code&gt;host&lt;/code&gt; または &lt;code&gt;none&lt;/code&gt; （Dockerが自動的に作成済み）という名前の外部ネットワークと、Composeが使用できるエイリアス（次の例では &lt;code&gt;hostnet&lt;/code&gt; または &lt;code&gt;nonet&lt;/code&gt; ）を定義し、エイリアスを使用してそのネットワークへのサービスアクセスを許可します。</target>
        </trans-unit>
        <trans-unit id="f0ff47db46947fd89be3900e6662eb377c24199a" translate="yes" xml:space="preserve">
          <source>The systemd cgroup driver has different rules for &lt;code&gt;--cgroup-parent&lt;/code&gt;. Systemd represents hierarchy by slice and the name of the slice encodes the location in the tree. So &lt;code&gt;--cgroup-parent&lt;/code&gt; for systemd cgroups should be a slice name. A name can consist of a dash-separated series of names, which describes the path to the slice from the root slice. For example, &lt;code&gt;--cgroup-parent=user-a-b.slice&lt;/code&gt; means the memory cgroup for the container is created in &lt;code&gt;/sys/fs/cgroup/memory/user.slice/user-a.slice/user-a-b.slice/docker-&amp;lt;id&amp;gt;.scope&lt;/code&gt;.</source>
          <target state="translated">systemd cgroupドライバーには、--cgroup &lt;code&gt;--cgroup-parent&lt;/code&gt; に対して異なるルールがあります。Systemdはスライスごとに階層を表し、スライスの名前はツリー内の場所をエンコードします。したがって、systemd &lt;code&gt;--cgroup-parent&lt;/code&gt; はスライス名にする必要があります。名前は、ダッシュで区切られた一連の名前で構成でき、ルートスライスからスライスへのパスを示します。たとえば、 &lt;code&gt;--cgroup-parent=user-a-b.slice&lt;/code&gt; は、コンテナのメモリcgroupが &lt;code&gt;/sys/fs/cgroup/memory/user.slice/user-a.slice/user-a-b.slice/docker-&amp;lt;id&amp;gt;.scope&lt;/code&gt; 作成されることを意味します-&amp;lt;id&amp;gt; .scope。</target>
        </trans-unit>
        <trans-unit id="0533656b4b74c590cc6513549d259075f037f41c" translate="yes" xml:space="preserve">
          <source>The table below shows what command is executed for different &lt;code&gt;ENTRYPOINT&lt;/code&gt; / &lt;code&gt;CMD&lt;/code&gt; combinations:</source>
          <target state="translated">次の表は、さまざまな &lt;code&gt;ENTRYPOINT&lt;/code&gt; / &lt;code&gt;CMD&lt;/code&gt; の組み合わせに対して実行されるコマンドを示しています。</target>
        </trans-unit>
        <trans-unit id="0185173a349942562bd58274872dd22dc8f0e29c" translate="yes" xml:space="preserve">
          <source>The target port within the container and the port to map it to on the nodes, using the routing mesh (</source>
          <target state="translated">コンテナ内のターゲットポートと、ルーティングメッシュを使用してノードにマッピングするポート (</target>
        </trans-unit>
        <trans-unit id="01f09d14eb7d87e9c346afdcc156ecf97088e58b" translate="yes" xml:space="preserve">
          <source>The targets (an online) key passphrase</source>
          <target state="translated">ターゲット(オンライン)のキーパスフレーズ</target>
        </trans-unit>
        <trans-unit id="69ce8dd4214ab3a54dcd700601b8837bbda45bf0" translate="yes" xml:space="preserve">
          <source>The targets key must be locally managed - to rotate the targets key, for instance in case of compromise, use the &lt;code&gt;notary key rotate targets&lt;/code&gt; command without the &lt;code&gt;-r&lt;/code&gt; flag.</source>
          <target state="translated">ターゲットキーはローカルで管理する必要があります。たとえば、侵害された場合などに &lt;code&gt;notary key rotate targets&lt;/code&gt; には、 &lt;code&gt;-r&lt;/code&gt; フラグなしでnotary key rotate targetsコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="097f73b93a96add7eae69c74428e99d8d28480db" translate="yes" xml:space="preserve">
          <source>The targets key signs the &lt;a href=&quot;ttps://github.com/theupdateframework/tuf/blob/1bed3e09a478c2c918ffbff10b9118f6e52ee129/docs/tuf-spec.txt#L678&quot;&gt;targets metadata file&lt;/a&gt;, which lists filenames in the collection, and their sizes and respective &lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographic_hash_function&quot;&gt;hashes&lt;/a&gt;. This file is used to verify the integrity of some or all of the actual contents of the repository. It is also used to &lt;a href=&quot;../advanced_usage/index#working-with-delegation-roles&quot;&gt;delegate trust to other collaborators via delegation roles&lt;/a&gt;. The targets key is held by the collection owner or administrator.</source>
          <target state="translated">ターゲットのキーは、&lt;a href=&quot;ttps://github.com/theupdateframework/tuf/blob/1bed3e09a478c2c918ffbff10b9118f6e52ee129/docs/tuf-spec.txt#L678&quot;&gt;ターゲットのメタデータファイルに&lt;/a&gt;署名します。このファイルには、コレクション内のファイル名、それらのサイズ、およびそれぞれの&lt;a href=&quot;https://en.wikipedia.org/wiki/Cryptographic_hash_function&quot;&gt;ハッシュ&lt;/a&gt;がリストされています。このファイルは、リポジトリの実際のコンテンツの一部またはすべての整合性を検証するために使用されます。また&lt;a href=&quot;../advanced_usage/index#working-with-delegation-roles&quot;&gt;、委任の役割を介して他の共同作業者に信頼&lt;/a&gt;を委任するためにも使用されます。ターゲットキーは、コレクションの所有者または管理者が保持しています。</target>
        </trans-unit>
        <trans-unit id="8e03566e6e6cb3a1a03671d36368093bc50beb83" translate="yes" xml:space="preserve">
          <source>The timestamp and snapshot keys are safely generated and stored in a signing server that is deployed alongside the Docker registry. These keys are generated in a backend service that isn&amp;rsquo;t directly exposed to the internet and are encrypted at rest.</source>
          <target state="translated">タイムスタンプとスナップショットキーは安全に生成され、Dockerレジストリと一緒にデプロイされた署名サーバーに保存されます。これらのキーは、インターネットに直接公開されていないバックエンドサービスで生成され、保存時に暗号化されます。</target>
        </trans-unit>
        <trans-unit id="3d18b09fad96c7637380585b8bee68a93fdbc75f" translate="yes" xml:space="preserve">
          <source>The timestamp key signs the &lt;a href=&quot;https://github.com/theupdateframework/tuf/blob/1bed3e09a478c2c918ffbff10b9118f6e52ee129/docs/tuf-spec.txt#L827&quot;&gt;timestamp metadata file&lt;/a&gt;, which provides freshness guarantees for the collection by having the shortest expiry time of any particular piece of metadata and by specifying the filename, size, and hash of the most recent snapshot for the collection. It is used to verify the integrity of the snapshot file. The timestamp key is held by the Notary service so the timestamp can be automatically re-generated when it is requested from the server, rather than require that a collection owner come online before each timestamp expiry.</source>
          <target state="translated">タイムスタンプキーは、&lt;a href=&quot;https://github.com/theupdateframework/tuf/blob/1bed3e09a478c2c918ffbff10b9118f6e52ee129/docs/tuf-spec.txt#L827&quot;&gt;タイムスタンプメタデータファイルに&lt;/a&gt;署名します。これにより、特定のメタデータの有効期限が最も短くなり、コレクションの最新のスナップショットのファイル名、サイズ、ハッシュを指定することにより、コレクションの鮮度が保証されます。スナップショットファイルの整合性を検証するために使用されます。タイムスタンプキーはNotaryサービスによって保持されるので、タイムスタンプが期限切れになる前にコレクションの所有者がオンラインになる必要はなく、サーバーから要求されたときにタイムスタンプを自動的に再生成できます。</target>
        </trans-unit>
        <trans-unit id="704394fd5b8493bd6e289ef12138c69f8e714fdb" translate="yes" xml:space="preserve">
          <source>The top-level &lt;code&gt;configs&lt;/code&gt; declaration defines or references &lt;a href=&quot;../../engine/swarm/configs/index&quot;&gt;configs&lt;/a&gt; that can be granted to the services in this stack. The source of the config is either &lt;code&gt;file&lt;/code&gt; or &lt;code&gt;external&lt;/code&gt;.</source>
          <target state="translated">トップレベルの &lt;code&gt;configs&lt;/code&gt; 宣言は、このスタック内のサービスに付与できる&lt;a href=&quot;../../engine/swarm/configs/index&quot;&gt;構成&lt;/a&gt;を定義または参照します。構成のソースは、 &lt;code&gt;file&lt;/code&gt; または &lt;code&gt;external&lt;/code&gt; いずれかです。</target>
        </trans-unit>
        <trans-unit id="06c35a757b239c69a0548e919ffccda1b64e9cb1" translate="yes" xml:space="preserve">
          <source>The top-level &lt;code&gt;networks&lt;/code&gt; key lets you specify networks to be created.</source>
          <target state="translated">トップレベルの &lt;code&gt;networks&lt;/code&gt; キーを使用すると、作成するネットワークを指定できます。</target>
        </trans-unit>
        <trans-unit id="7414ff9907a0e9a522d26984ac446fdfa9604491" translate="yes" xml:space="preserve">
          <source>The top-level &lt;code&gt;networks&lt;/code&gt; key lets you specify networks to be created. For a full explanation of Compose&amp;rsquo;s use of Docker networking features, see the &lt;a href=&quot;../../networking/index&quot;&gt;Networking guide&lt;/a&gt;.</source>
          <target state="translated">トップレベルの &lt;code&gt;networks&lt;/code&gt; キーを使用すると、作成するネットワークを指定できます。ComposeによるDockerネットワーク機能の使用の詳細については、&lt;a href=&quot;../../networking/index&quot;&gt;ネットワークガイドを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0390c92b705085454360c5f24d96c5340fcc7036" translate="yes" xml:space="preserve">
          <source>The top-level &lt;code&gt;secrets&lt;/code&gt; declaration defines or references &lt;a href=&quot;../../engine/swarm/secrets/index&quot;&gt;secrets&lt;/a&gt; that can be granted to the services in this stack. The source of the secret is either &lt;code&gt;file&lt;/code&gt; or &lt;code&gt;external&lt;/code&gt;.</source>
          <target state="translated">トップレベルの &lt;code&gt;secrets&lt;/code&gt; 宣言は、このスタック内のサービスに付与できる&lt;a href=&quot;../../engine/swarm/secrets/index&quot;&gt;秘密&lt;/a&gt;を定義または参照します。シークレットのソースは、 &lt;code&gt;file&lt;/code&gt; または &lt;code&gt;external&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="322e63c416ba6a457d865d372c3db8990b527d11" translate="yes" xml:space="preserve">
          <source>The topics below describe available options to set resource constraints on services or containers in a swarm.</source>
          <target state="translated">以下のトピックでは、スウォーム内のサービスやコンテナにリソース制約を設定するために利用可能なオプションについて説明します。</target>
        </trans-unit>
        <trans-unit id="54cf08ae091cd1246737172b45300405441fa449" translate="yes" xml:space="preserve">
          <source>The topics below explain the differences among the versions, Docker Engine compatibility, and &lt;a href=&quot;#upgrading&quot;&gt;how to upgrade&lt;/a&gt;.</source>
          <target state="translated">以下のトピックでは、バージョン間の違い、Dockerエンジンの互換性、および&lt;a href=&quot;#upgrading&quot;&gt;アップグレード方法について説明します&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ed6348d39665453e5afbba76aa26e4b42d3aec5" translate="yes" xml:space="preserve">
          <source>The topics on this reference page are organized alphabetically by top-level key to reflect the structure of the Compose file itself. Top-level keys that define a section in the configuration file such as &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;deploy&lt;/code&gt;, &lt;code&gt;depends_on&lt;/code&gt;, &lt;code&gt;networks&lt;/code&gt;, and so on, are listed with the options that support them as sub-topics. This maps to the &lt;code&gt;&amp;lt;key&amp;gt;: &amp;lt;option&amp;gt;: &amp;lt;value&amp;gt;&lt;/code&gt; indent structure of the Compose file.</source>
          <target state="translated">このリファレンスページのトピックは、Composeファイル自体の構造を反映するために、トップレベルのキーでアルファベット順に構成されています。 &lt;code&gt;build&lt;/code&gt; 、 &lt;code&gt;deploy&lt;/code&gt; 、 &lt;code&gt;depends_on&lt;/code&gt; 、 &lt;code&gt;networks&lt;/code&gt; などの構成ファイルのセクションを定義する最上位のキーは、サブトピックとしてサポートするオプションとともにリストされます。これは、Composeファイルの &lt;code&gt;&amp;lt;key&amp;gt;: &amp;lt;option&amp;gt;: &amp;lt;value&amp;gt;&lt;/code&gt; インデント構造にマップされます。</target>
        </trans-unit>
        <trans-unit id="6c53132ec117df95bc0650452a0b9339edb16b37" translate="yes" xml:space="preserve">
          <source>The transfer of context from the local machine to the Docker daemon is what the &lt;code&gt;docker&lt;/code&gt; client means when you see the &amp;ldquo;Sending build context&amp;rdquo; message.</source>
          <target state="translated">ドッカーデーモンへのローカルマシンからのコンテキストの転送は何である &lt;code&gt;docker&lt;/code&gt; クライアント手段は、あなたが「ビルドコンテキストを送信」メッセージが表示されたとき。</target>
        </trans-unit>
        <trans-unit id="95f5b0e2ba8bddb684a7c26a00396d9830eeafb5" translate="yes" xml:space="preserve">
          <source>The tutorial guides you through the following activities:</source>
          <target state="translated">チュートリアルでは、次のような活動を案内しています。</target>
        </trans-unit>
        <trans-unit id="6b5befa58d03f8a29b0c139f5cc34961087af58e" translate="yes" xml:space="preserve">
          <source>The tutorial uses &lt;code&gt;manager1&lt;/code&gt; : &lt;code&gt;192.168.99.100&lt;/code&gt;.</source>
          <target state="translated">チュートリアルでは &lt;code&gt;manager1&lt;/code&gt; ： &lt;code&gt;192.168.99.100&lt;/code&gt; を使用しています。</target>
        </trans-unit>
        <trans-unit id="e7c05446c0a238cd4c756284cf18fb1555be975d" translate="yes" xml:space="preserve">
          <source>The type of mount, can be either</source>
          <target state="translated">マウントのタイプは、次のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="808a955c835bc826a78db93a8f283cb1de51c319" translate="yes" xml:space="preserve">
          <source>The underlying logic of Docker swarm mode is a general purpose scheduler and orchestrator. The service and task abstractions themselves are unaware of the containers they implement. Hypothetically, you could implement other types of tasks such as virtual machine tasks or non-containerized process tasks. The scheduler and orchestrator are agnostic about the type of task. However, the current version of Docker only supports container tasks.</source>
          <target state="translated">Dockerスウォームモードの根底にあるロジックは、汎用スケジューラとオーケストレータです。サービスやタスクの抽象化自体は、実装するコンテナを意識していません。仮定の話ですが、仮想マシンタスクやコンテナ化されていないプロセスタスクなど、他のタイプのタスクを実装することができます。スケジューラやオーケストレータはタスクの種類には不可知です。しかし、現在のバージョンのDockerはコンテナタスクのみをサポートしています。</target>
        </trans-unit>
        <trans-unit id="077b2070cdc00a73a64fa6daed16da1a2d09e083" translate="yes" xml:space="preserve">
          <source>The unknown directive is treated as a comment due to not being recognized. In addition, the known directive is treated as a comment due to appearing after a comment which is not a parser directive.</source>
          <target state="translated">不明なディレクティブは、認識されないためコメントとして扱われます。また、パーサ指令ではないコメントの後に出現するため、既知の指令はコメントとして扱われます。</target>
        </trans-unit>
        <trans-unit id="813604c1f616eff640341fd47c3ef347077481ed" translate="yes" xml:space="preserve">
          <source>The user as which docker-machine should log in to the Linode instance to install Docker. This user must have passwordless sudo.</source>
          <target state="translated">Dockerをインストールするために、どのdocker-machineがLinodeインスタンスにログインするかを指定します。このユーザはパスワードなしのsudoを持っている必要があります。</target>
        </trans-unit>
        <trans-unit id="9576dab363bda69179f31e7cb6a084eeae7e6f30" translate="yes" xml:space="preserve">
          <source>The user identification</source>
          <target state="translated">ユーザー識別</target>
        </trans-unit>
        <trans-unit id="950b799dd4aed77dfb0676c4acc74f28e973ee02" translate="yes" xml:space="preserve">
          <source>The usual cause of this error is that the container has a volume (defined either in its image or in the Compose file) without an explicit mapping, and so in order to preserve its data, Compose has directed Swarm to schedule the new container on the same node as the old container. This results in a port clash.</source>
          <target state="translated">このエラーの通常の原因は、コンテナにボリューム(イメージまたはComposeファイルで定義されている)があり、明示的なマッピングがないため、そのデータを保存するために、ComposeはSwarmに新しいコンテナを古いコンテナと同じノードでスケジュールするよう指示しました。この結果、ポートの衝突が発生します。</target>
        </trans-unit>
        <trans-unit id="5a787679f2f02da5f6dce687df16d0ad2de650af" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;VAL&lt;/code&gt; is used as is and not modified at all. For example if the value is surrounded by quotes (as is often the case of shell variables), the quotes are included in the value passed to Compose.</source>
          <target state="translated">&lt;code&gt;VAL&lt;/code&gt; の値はそのまま使用され、まったく変更されません。たとえば、値が引用符で囲まれている場合（シェル変数の場合のように）、引用符はComposeに渡される値に含まれます。</target>
        </trans-unit>
        <trans-unit id="61609f3bd2f21ab04e9d50f0aa0ad5208715c1ba" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;DEBUG&lt;/code&gt; variable in the container is taken from the value for the same variable in the shell in which Compose is run.</source>
          <target state="translated">コンテナー内の &lt;code&gt;DEBUG&lt;/code&gt; 変数の値は、Composeが実行されるシェル内の同じ変数の値から取得されます。</target>
        </trans-unit>
        <trans-unit id="746c6ac6a23b8454770142b20f0126d7ade6f0e5" translate="yes" xml:space="preserve">
          <source>The value returned is not the password, but the ID of the secret. In the remainder of this tutorial, the ID output is omitted.</source>
          <target state="translated">返される値はパスワードではなく、秘密のIDです。このチュートリアルの残りの部分では、IDの出力は省略します。</target>
        </trans-unit>
        <trans-unit id="1889542e56eda59f3d3d8ea98417148b9aec534d" translate="yes" xml:space="preserve">
          <source>The values are sent to the appropriate &lt;code&gt;syscall&lt;/code&gt; as they are set. Docker doesn&amp;rsquo;t perform any byte conversion. Take this into account when setting the values.</source>
          <target state="translated">値は、設定されると適切な &lt;code&gt;syscall&lt;/code&gt; に送信されます。Dockerはバイト変換を行いません。値を設定するときは、これを考慮してください。</target>
        </trans-unit>
        <trans-unit id="50d5528070cdcdf314e138aa479cb9727774525f" translate="yes" xml:space="preserve">
          <source>The variable expansion technique in this example allows you to pass arguments from the command line and persist them in the final image by leveraging the &lt;code&gt;ENV&lt;/code&gt; instruction. Variable expansion is only supported for &lt;a href=&quot;#environment-replacement&quot;&gt;a limited set of Dockerfile instructions.&lt;/a&gt;</source>
          <target state="translated">この例の変数拡張手法では、コマンドラインから引数を渡し、 &lt;code&gt;ENV&lt;/code&gt; 命令を利用してそれらを最終的なイメージに永続化できます。変数拡張は&lt;a href=&quot;#environment-replacement&quot;&gt;、Dockerfile命令の限定されたセットで&lt;/a&gt;のみサポートされます。</target>
        </trans-unit>
        <trans-unit id="ad9e412128cae9e2070e957151f854e8924ad398" translate="yes" xml:space="preserve">
          <source>The visualizer is a standalone service that can run in any app that includes it in the stack. It doesn&amp;rsquo;t depend on anything else. Now let&amp;rsquo;s create a service that &lt;em&gt;does&lt;/em&gt; have a dependency: the Redis service that provides a visitor counter.</source>
          <target state="translated">ビジュアライザーは、スタックに含まれているすべてのアプリで実行できるスタンドアロンサービスです。それは他には何も依存しません。今度は、サービス作成でき&lt;em&gt;ない&lt;/em&gt;訪問者カウンタを提供Redisのサービス：依存関係を持っています。</target>
        </trans-unit>
        <trans-unit id="984e84f6857002353b6ddc22dd16cfaabdf532de" translate="yes" xml:space="preserve">
          <source>The volume name is a human-readable name for the volume, and cannot begin with a &lt;code&gt;/&lt;/code&gt; character. It is referred to as &lt;code&gt;volume_name&lt;/code&gt; in the rest of this topic.</source>
          <target state="translated">ボリューム名は人間が読み取れるボリュームの名前であり、 &lt;code&gt;/&lt;/code&gt; 文字で始めることはできません。このトピックの残りの部分では、 &lt;code&gt;volume_name&lt;/code&gt; と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="0783572785fa9651cdf59fe05a1291f10567dced" translate="yes" xml:space="preserve">
          <source>The volume you created that lets the container access &lt;code&gt;./data&lt;/code&gt; (on the host) as &lt;code&gt;/data&lt;/code&gt; (inside the Redis container). While containers come and go, the files stored on &lt;code&gt;./data&lt;/code&gt; on the specified host persists, enabling continuity.</source>
          <target state="translated">コンテナーが &lt;code&gt;./data&lt;/code&gt; （ホスト上）に &lt;code&gt;/data&lt;/code&gt; （Redisコンテナー内）としてアクセスできるように作成したボリューム。コンテナが行き来する間、指定されたホストの &lt;code&gt;./data&lt;/code&gt; に保存されているファイルは存続し、継続性を可能にします。</target>
        </trans-unit>
        <trans-unit id="4942b66d1eb91033003011fbf6eb332e419dd45c" translate="yes" xml:space="preserve">
          <source>The volumes commands are complex enough to have their own documentation in section &lt;a href=&quot;https://docs.docker.com/storage/volumes/&quot;&gt;&lt;em&gt;Use volumes&lt;/em&gt;&lt;/a&gt;. A developer can define one or more &lt;code&gt;VOLUME&lt;/code&gt;&amp;rsquo;s associated with an image, but only the operator can give access from one container to another (or from a container to a volume mounted on the host).</source>
          <target state="translated">ボリュームコマンドは、&lt;a href=&quot;https://docs.docker.com/storage/volumes/&quot;&gt;&lt;em&gt;「ボリュームの使用」&lt;/em&gt;&lt;/a&gt;セクションに独自のドキュメントを作成できるほど複雑です。開発者は、イメージに関連付けられた1つ以上の &lt;code&gt;VOLUME&lt;/code&gt; を定義できますが、オペレーターのみがコンテナーからホストに（またはコンテナーからホストにマウントされたボリュームに）アクセスできます。</target>
        </trans-unit>
        <trans-unit id="cde13cc54c1b745deadeca881f546b49d1ec0604" translate="yes" xml:space="preserve">
          <source>The way the namespace remapping is handled on the host is using two files, &lt;code&gt;/etc/subuid&lt;/code&gt; and &lt;code&gt;/etc/subgid&lt;/code&gt;. These files are typically managed automatically when you add or remove users or groups, but on a few distributions such as RHEL and CentOS 7.3, you may need to manage these files manually.</source>
          <target state="translated">ホストでの名前空間の再マッピングの処理方法は、2つのファイル &lt;code&gt;/etc/subuid&lt;/code&gt; と &lt;code&gt;/etc/subgid&lt;/code&gt; を使用しています。これらのファイルは通常、ユーザーまたはグループを追加または削除すると自動的に管理されますが、RHELやCentOS 7.3などの一部のディストリビューションでは、これらのファイルを手動で管理する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="e45b1f6108a82bf67b71c85d0639d5979f14f7ca" translate="yes" xml:space="preserve">
          <source>Then make sure the experimental flag is enabled:</source>
          <target state="translated">そして、実験フラグが有効になっていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="f0f9379ccf766a586a4628c88e3a02475ae34742" translate="yes" xml:space="preserve">
          <source>Then reload your shell:</source>
          <target state="translated">その後、あなたのシェルをリロードします。</target>
        </trans-unit>
        <trans-unit id="16ac1788505b466a3f21ddb8e7fff258927db3f1" translate="yes" xml:space="preserve">
          <source>Then run it, mapping the exposed port to one on the host</source>
          <target state="translated">次に、公開されているポートをホスト上のポートにマッピングして実行します。</target>
        </trans-unit>
        <trans-unit id="ba0f97060d2e1000948b0ee70a4d723aaa8a3cc9" translate="yes" xml:space="preserve">
          <source>Then run the following command to download the current stable release of Compose (v1.24.1):</source>
          <target state="translated">次に、以下のコマンドを実行して、Compose (v1.24.1)の現在の安定版リリースをダウンロードします。</target>
        </trans-unit>
        <trans-unit id="228d7d3092c1d2d33a29a03d6afceb9497d2f340" translate="yes" xml:space="preserve">
          <source>Then specify the arguments under the &lt;code&gt;build&lt;/code&gt; key. You can pass a mapping or a list:</source>
          <target state="translated">そして、下の引数を指定して &lt;code&gt;build&lt;/code&gt; キー。マッピングまたはリストを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="f619b0978d2bfc96e064c4f4798aa4408b70e708" translate="yes" xml:space="preserve">
          <source>Then start your Docker daemon with &lt;code&gt;HTTPS_PROXY=http://username:password@proxy:port/ dockerd&lt;/code&gt;. The &lt;code&gt;username:&lt;/code&gt; and &lt;code&gt;password@&lt;/code&gt; are optional - and are only needed if your proxy is set up to require authentication.</source>
          <target state="translated">次に、 &lt;code&gt;HTTPS_PROXY=http://username:password@proxy:port/ dockerd&lt;/code&gt; を使用してDockerデーモンを起動します。 &lt;code&gt;username:&lt;/code&gt; と &lt;code&gt;password@&lt;/code&gt; オプションである-そしてあなたのプロキシが認証を必要とするように設定されている場合にのみ必要とされています。</target>
        </trans-unit>
        <trans-unit id="c079d6aea55289143434dbc5a465fbbf83112617" translate="yes" xml:space="preserve">
          <source>Then they can send it to whichever CA you trust to sign certificates, or they can self-sign the certificate (in this example, creating a certificate that is valid for 1 year):</source>
          <target state="translated">その後、証明書に署名するために信頼している認証局に送ることもできますし、証明書に自己署名することもできます(この例では、1年間有効な証明書を作成します)。</target>
        </trans-unit>
        <trans-unit id="67b4998ea0be4fba5d41e8c39a43342f50125aea" translate="yes" xml:space="preserve">
          <source>Then they need to generate an x509 certificate containing the public key, which is what you need from them. Here is the command to generate a CSR (certificate signing request):</source>
          <target state="translated">次に、公開鍵を含む x509 証明書を生成する必要があります。以下は、CSR (証明書署名要求)を生成するコマンドです。</target>
        </trans-unit>
        <trans-unit id="f98543252d0cf2bd1bc0835d978d514dcdabc924" translate="yes" xml:space="preserve">
          <source>Then they need to give you &lt;code&gt;delegation.crt&lt;/code&gt;, whether it is self-signed or signed by a CA.</source>
          <target state="translated">次に、自己署名かCAによる署名かに関係なく、 &lt;code&gt;delegation.crt&lt;/code&gt; を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="7f0f2bd70f5c8bbac6125eb7ed05e5ef0b2fdf49" translate="yes" xml:space="preserve">
          <source>Then write a docker-compose file that bind mounts it in:</source>
          <target state="translated">そして、それをバインドしてマウントするdocker-composeファイルを書きます。</target>
        </trans-unit>
        <trans-unit id="2f8d9774582e7502132f5270ffce97532f11b56e" translate="yes" xml:space="preserve">
          <source>Then you can set:</source>
          <target state="translated">ならば、設定してください。</target>
        </trans-unit>
        <trans-unit id="571bfb0a1edc1b50bdfe5e978fd0ae01ac16b272" translate="yes" xml:space="preserve">
          <source>Then you need to run &lt;code&gt;source /etc/bash_completion.d/docker-machine-prompt.bash&lt;/code&gt; in your bash terminal to tell your setup where it can find the file &lt;code&gt;docker-machine-prompt.bash&lt;/code&gt; that you previously downloaded.</source>
          <target state="translated">次に、bashターミナルで &lt;code&gt;source /etc/bash_completion.d/docker-machine-prompt.bash&lt;/code&gt; を実行して、以前にダウンロードした &lt;code&gt;docker-machine-prompt.bash&lt;/code&gt; ファイルがどこにあるかをセットアップに通知する必要があります。</target>
        </trans-unit>
        <trans-unit id="da78cfe7ed5b6cb10ab0b2174b36663e652c5c77" translate="yes" xml:space="preserve">
          <source>Then you provide account verification, security credentials, and configuration options for the providers as flags to &lt;code&gt;docker-machine create&lt;/code&gt;. The flags are unique for each cloud-specific driver. For instance, to pass a DigitalOcean access token you use the &lt;code&gt;--digitalocean-access-token&lt;/code&gt; flag. Take a look at the examples below for DigitalOcean and AWS.</source>
          <target state="translated">次に、アカウント検証、セキュリティ認証情報、および &lt;code&gt;docker-machine create&lt;/code&gt; へのフラグとしてプロバイダーの構成オプションを提供します。フラグは、クラウド固有のドライバーごとに一意です。たとえば、DigitalOceanアクセストークンを渡すには、 &lt;code&gt;--digitalocean-access-token&lt;/code&gt; フラグを使用します。以下のDigitalOceanとAWSの例をご覧ください。</target>
        </trans-unit>
        <trans-unit id="199f762f8c8d3029eb46e8f8b8d9f5acda2921b7" translate="yes" xml:space="preserve">
          <source>Then, a user could ask &lt;code&gt;udev&lt;/code&gt; to execute a script that would &lt;code&gt;docker exec my-container mknod newDevX c 42 &amp;lt;minor&amp;gt;&lt;/code&gt; the required device when it is added.</source>
          <target state="translated">次に、ユーザーは &lt;code&gt;udev&lt;/code&gt; に、追加されたときに必要なデバイスを &lt;code&gt;docker exec my-container mknod newDevX c 42 &amp;lt;minor&amp;gt;&lt;/code&gt; するスクリプトを実行するように要求できます。</target>
        </trans-unit>
        <trans-unit id="2854e1d7f0e6d6eec93f6eab6fe27b1c48cc1487" translate="yes" xml:space="preserve">
          <source>Then, assume this image is built with this command:</source>
          <target state="translated">そして、この画像がこのコマンドで構築されていると仮定します。</target>
        </trans-unit>
        <trans-unit id="e6079812a1f2778a6a21c1d63667ecca6da677c8" translate="yes" xml:space="preserve">
          <source>Then, install the latest release of the Linode machine driver for your environment from the &lt;a href=&quot;https://github.com/linode/docker-machine-driver-linode/releases&quot;&gt;releases list&lt;/a&gt;.</source>
          <target state="translated">次に、&lt;a href=&quot;https://github.com/linode/docker-machine-driver-linode/releases&quot;&gt;リリースリスト&lt;/a&gt;からご使用の環境用のLinodeマシンドライバーの最新リリースをインストールします。</target>
        </trans-unit>
        <trans-unit id="6806394a7c9ad960785738687166412a97ca5e1a" translate="yes" xml:space="preserve">
          <source>Then, run the custom profile with &lt;code&gt;--security-opt&lt;/code&gt; like so:</source>
          <target state="translated">次に、次のように &lt;code&gt;--security-opt&lt;/code&gt; を使用してカスタムプロファイルを実行します。</target>
        </trans-unit>
        <trans-unit id="b73e331846444f80e366e7040fb663466a3470e0" translate="yes" xml:space="preserve">
          <source>There are &lt;a href=&quot;https://github.com/search?q=in%3Apath+docker-compose.yml+extension%3Ayml&amp;amp;type=Code&quot;&gt;many examples of Compose files on github&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/search?q=in%3Apath+docker-compose.yml+extension%3Ayml&amp;amp;type=Code&quot;&gt;githubのComposeファイルに&lt;/a&gt;は多くの例があります。</target>
        </trans-unit>
        <trans-unit id="b7814cd8379144950605ca794127eccce00dcde3" translate="yes" xml:space="preserve">
          <source>There are currently three versions of the Compose file format:</source>
          <target state="translated">Composeファイルフォーマットには現在3つのバージョンがあります。</target>
        </trans-unit>
        <trans-unit id="7940b6f7dad82d1a9e956120f2b7089211bf1646" translate="yes" xml:space="preserve">
          <source>There are five possible container IDs all cycling by randomly, demonstrating the load-balancing.</source>
          <target state="translated">5つの可能性のあるコンテナIDがランダムに循環しており、ロードバランシングを実証しています。</target>
        </trans-unit>
        <trans-unit id="0c0de849851d22b43f8ffa512bd662db77eca8ad" translate="yes" xml:space="preserve">
          <source>There are four major areas to consider when reviewing Docker security:</source>
          <target state="translated">Dockerのセキュリティを見直す際に考慮すべき点は大きく分けて4つあります。</target>
        </trans-unit>
        <trans-unit id="3d778b5b15fe825c32888587cbc69d4f27f45b66" translate="yes" xml:space="preserve">
          <source>There are multiple parts of Compose that deal with environment variables in one sense or another. This page should help you find the information you need.</source>
          <target state="translated">Composeには、環境変数を扱う部分が複数あります。このページでは、必要な情報を見つけるのに役立つはずです。</target>
        </trans-unit>
        <trans-unit id="aeda8a40ea312e9777dda9667b4da9b34a9d0320" translate="yes" xml:space="preserve">
          <source>There are several cases where the user might want to set options for the created Docker engine (also known as the Docker &lt;em&gt;daemon&lt;/em&gt;) themselves. For example, they may want to allow connection to a &lt;a href=&quot;https://docs.docker.com/registry/&quot;&gt;registry&lt;/a&gt; that they are running themselves using the &lt;code&gt;--insecure-registry&lt;/code&gt; flag for the daemon. Docker Machine supports the configuration of such options for the created engines via the &lt;code&gt;create&lt;/code&gt; command flags which begin with &lt;code&gt;--engine&lt;/code&gt;.</source>
          <target state="translated">作成されたDockerエンジン（Docker &lt;em&gt;デーモンと&lt;/em&gt;も呼ばれる）自体のオプションをユーザーが設定したい場合がいくつかあります。たとえば、デーモンの &lt;code&gt;--insecure-registry&lt;/code&gt; フラグを使用して、自分が実行している&lt;a href=&quot;https://docs.docker.com/registry/&quot;&gt;レジストリ&lt;/a&gt;への接続を許可する場合があります。Docker Machineは、-- &lt;code&gt;--engine&lt;/code&gt; で始まる &lt;code&gt;create&lt;/code&gt; コマンドフラグを介して、作成されたエンジンのそのようなオプションの構成をサポートしています。</target>
        </trans-unit>
        <trans-unit id="97ca57e34878d9d455f58028c76cb939649ff43d" translate="yes" xml:space="preserve">
          <source>There are several things to be aware of when using &lt;code&gt;depends_on&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;depends_on&lt;/code&gt; を使用する際に注意すべき点がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="91711ed59c8022626f780ec2fbf3eb54e0f15adc" translate="yes" xml:space="preserve">
          <source>There are several things to note, depending on which &lt;a href=&quot;../compose-versioning/index#versioning&quot;&gt;Compose file version&lt;/a&gt; you&amp;rsquo;re using:</source>
          <target state="translated">使用している&lt;a href=&quot;../compose-versioning/index#versioning&quot;&gt;Composeファイルのバージョンに&lt;/a&gt;応じて、注意すべき点がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="0187ca342f3a08a30c681cab0c7791034bfb8706" translate="yes" xml:space="preserve">
          <source>There are several versions of the Compose file format &amp;ndash; 1, 2, 2.x, and 3.x</source>
          <target state="translated">Composeファイル形式には、1、2、2.x、および3.xのいくつかのバージョンがあります。</target>
        </trans-unit>
        <trans-unit id="25125d555c6868815e8ee9d7df65db55c5d2807c" translate="yes" xml:space="preserve">
          <source>There are several versions of the Compose file format &amp;ndash; 1, 2, 2.x, and 3.x The table below is a quick look. For full details on what each version includes and how to upgrade, see &lt;strong&gt;&lt;a href=&quot;../compose-versioning/index&quot;&gt;About versions and upgrading&lt;/a&gt;&lt;/strong&gt;.</source>
          <target state="translated">Composeファイル形式には、1、2、2.x、3.xのいくつかのバージョンがあります。各バージョンの内容とアップグレード方法の詳細&lt;strong&gt;&lt;a href=&quot;../compose-versioning/index&quot;&gt;については、バージョンとアップグレードについてを&lt;/a&gt;&lt;/strong&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="40bc0cbdfa8ca5327db23d0dec4ef03b9664c4f2" translate="yes" xml:space="preserve">
          <source>There are several versions of the Compose file format &amp;ndash; 1, 2, 2.x, and 3.x. The table below is a quick look. For full details on what each version includes and how to upgrade, see &lt;strong&gt;&lt;a href=&quot;compose-versioning/index&quot;&gt;About versions and upgrading&lt;/a&gt;&lt;/strong&gt;.</source>
          <target state="translated">Composeファイル形式には、1、2、2.x、および3.xのいくつかのバージョンがあります。以下の表は、簡単な概要です。各バージョンの内容とアップグレード方法の詳細&lt;strong&gt;&lt;a href=&quot;compose-versioning/index&quot;&gt;については、バージョンとアップグレードについてを&lt;/a&gt;&lt;/strong&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="741d63007545485e619b16d848df8c7aff45bdf3" translate="yes" xml:space="preserve">
          <source>There are some variations in behavior between the two methods, so report any issues or inconsistencies if you come across them.</source>
          <target state="translated">2つの方法の間には、いくつかの行動のバリエーションがあるので、問題点や矛盾点が出てきたら報告してください。</target>
        </trans-unit>
        <trans-unit id="e78ebb7a2059162d806fa2029f73ae7c6fcfa1b2" translate="yes" xml:space="preserve">
          <source>There are three types of files which can be put in the plugin directory.</source>
          <target state="translated">プラグインディレクトリに入れるファイルは3種類あります。</target>
        </trans-unit>
        <trans-unit id="9cf0c0eaad237b6c73a28f6dd75f35d7f472776e" translate="yes" xml:space="preserve">
          <source>There are two options for trust pinning user-signed images:</source>
          <target state="translated">ユーザーが署名した画像をトラストピン留めするには、2つのオプションがあります。</target>
        </trans-unit>
        <trans-unit id="6ecf6e9b95eb4c02baccc868b92d4665fe217696" translate="yes" xml:space="preserve">
          <source>There are two types of nodes: &lt;a href=&quot;#manager-nodes&quot;&gt;&lt;strong&gt;managers&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;#worker-nodes&quot;&gt;&lt;strong&gt;workers&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">ノードには、&lt;a href=&quot;#manager-nodes&quot;&gt;&lt;strong&gt;マネージャー&lt;/strong&gt;&lt;/a&gt;と&lt;a href=&quot;#worker-nodes&quot;&gt;&lt;strong&gt;ワーカーの&lt;/strong&gt;&lt;/a&gt; 2つのタイプがあります。</target>
        </trans-unit>
        <trans-unit id="fc09e07084850510543084daf1f91c42a9f17fe3" translate="yes" xml:space="preserve">
          <source>There are two types of service deployments, replicated and global.</source>
          <target state="translated">サービスのデプロイには、レプリケートされたものとグローバルなものの2種類があります。</target>
        </trans-unit>
        <trans-unit id="45b1371ce6228c69ca79895526ca065b03babbe6" translate="yes" xml:space="preserve">
          <source>There are two viable workarounds for this problem:</source>
          <target state="translated">この問題の回避策は2つあります。</target>
        </trans-unit>
        <trans-unit id="dbd4f77633783e3c8d534038973dd23605b9f89f" translate="yes" xml:space="preserve">
          <source>There are two ways to connect to the PostgreSQL server. We can use &lt;a href=&quot;https://docs.docker.com/network&quot;&gt;&lt;em&gt;Link Containers&lt;/em&gt;&lt;/a&gt;, or we can access it from our host (or the network).</source>
          <target state="translated">PostgreSQLサーバーに接続するには2つの方法があります。&lt;a href=&quot;https://docs.docker.com/network&quot;&gt;&lt;em&gt;リンクコンテナ&lt;/em&gt;&lt;/a&gt;を使用するか、ホスト（またはネットワーク）からアクセスできます。</target>
        </trans-unit>
        <trans-unit id="2a9bea40f116e961dedc24c36590df75bee7e1ef" translate="yes" xml:space="preserve">
          <source>There are two ways to run the Engine in swarm mode:</source>
          <target state="translated">スウォームモードでエンジンを実行するには2つの方法があります。</target>
        </trans-unit>
        <trans-unit id="f54c1303cdfa771953ec88e0bfab370d1cdc3de0" translate="yes" xml:space="preserve">
          <source>There can only be one &lt;code&gt;CMD&lt;/code&gt; instruction in a &lt;code&gt;Dockerfile&lt;/code&gt;. If you list more than one &lt;code&gt;CMD&lt;/code&gt; then only the last &lt;code&gt;CMD&lt;/code&gt; will take effect.</source>
          <target state="translated">&lt;code&gt;Dockerfile&lt;/code&gt; には、 &lt;code&gt;CMD&lt;/code&gt; 命令を1つだけ含めることができます。複数の &lt;code&gt;CMD&lt;/code&gt; をリストすると、最後の &lt;code&gt;CMD&lt;/code&gt; のみが有効になります。</target>
        </trans-unit>
        <trans-unit id="550d578e017477c6594796ed69856a32f3fde0d2" translate="yes" xml:space="preserve">
          <source>There can only be one &lt;code&gt;HEALTHCHECK&lt;/code&gt; instruction in a Dockerfile. If you list more than one then only the last &lt;code&gt;HEALTHCHECK&lt;/code&gt; will take effect.</source>
          <target state="translated">&lt;code&gt;HEALTHCHECK&lt;/code&gt; 命令を1つだけ含めることができます。複数をリストすると、最後の &lt;code&gt;HEALTHCHECK&lt;/code&gt; のみが有効になります。</target>
        </trans-unit>
        <trans-unit id="0df320a875323d0c7c7d6a4f46cd3776c2f98030" translate="yes" xml:space="preserve">
          <source>There has already been a lot written about this problem of &lt;a href=&quot;https://medium.com/@gchudnov/trapping-signals-in-docker-containers-7a57fdda7d86&quot;&gt;processes handling signals&lt;/a&gt; in containers.</source>
          <target state="translated">コンテナー内の&lt;a href=&quot;https://medium.com/@gchudnov/trapping-signals-in-docker-containers-7a57fdda7d86&quot;&gt;シグナル&lt;/a&gt;を処理するプロセスのこの問題については、すでに多くのことが書かれています。</target>
        </trans-unit>
        <trans-unit id="77d469c7c182850a6574b09d72ba3863433df44e" translate="yes" xml:space="preserve">
          <source>There is a limit to the number of machines that an anti-affinity group can have. This can be worked around by specifying an additional anti-affinity group using &lt;code&gt;--exoscale-affinity-group=docker-machineX&lt;/code&gt;</source>
          <target state="translated">アンチアフィニティグループが持つことができるマシンの数には制限があります。これは、 &lt;code&gt;--exoscale-affinity-group=docker-machineX&lt;/code&gt; を使用して追加の非アフィニティグループを指定することで回避できます</target>
        </trans-unit>
        <trans-unit id="a003cd7737f7589bad419544346f832d93be43fc" translate="yes" xml:space="preserve">
          <source>There is a side effect when using this flag: user remapping will not be enabled for that container but, because the read-only (image) layers are shared between containers, ownership of the the containers filesystem will still be remapped.</source>
          <target state="translated">このフラグを使用すると副作用があります:そのコンテナではユーザーのリマッピングは有効になりませんが、読み込み専用(イメージ)レイヤーはコンテナ間で共有されているため、コンテナのファイルシステムの所有権はリマッピングされたままになります。</target>
        </trans-unit>
        <trans-unit id="807fe7b30bf42d01a6f7b614c0c1e3e2cf015de6" translate="yes" xml:space="preserve">
          <source>There is also a long format, which is easier to read and allows you to specify more options. The long format is preferred. You cannot specify the service&amp;rsquo;s mode when using the short format. Here is an example of using the long format for the same service as above:</source>
          <target state="translated">長い形式もあり、読みやすく、より多くのオプションを指定できます。長い形式が推奨されます。短い形式を使用する場合は、サービスのモードを指定できません。上記と同じサービスに長い形式を使用する例を次に示します。</target>
        </trans-unit>
        <trans-unit id="7159817725d7d3f10517f75ce07ddcc5d62ded9f" translate="yes" xml:space="preserve">
          <source>There is much more to the Docker platform than what was covered here, but you have a good idea of the basics of containers, images, services, swarms, stacks, scaling, load-balancing, volumes, and placement constraints.</source>
          <target state="translated">Dockerプラットフォームにはここで説明したこと以外にも多くのことがありますが、コンテナ、イメージ、サービス、スワーム、スタック、スケーリング、ロードバランス、ボリューム、配置の制約などの基本的なことは理解できたでしょう。</target>
        </trans-unit>
        <trans-unit id="8ea1f9e166a0f3ace0e8c4e2faba71437003d220" translate="yes" xml:space="preserve">
          <source>There is no limit on the number of manager nodes. The decision about how many manager nodes to implement is a trade-off between performance and fault-tolerance. Adding manager nodes to a swarm makes the swarm more fault-tolerant. However, additional manager nodes reduce write performance because more nodes must acknowledge proposals to update the swarm state. This means more network round-trip traffic.</source>
          <target state="translated">マネージャノードの数に制限はありません。実装するマネージャノードの数を決定するのは、パフォーマンスと耐障害性のトレードオフです。スウォームにマネージャノードを追加すると、スウォームの耐障害性が向上します。しかし、スウォームの状態を更新するために、より多くのノードがプロポーザルを確認しなければならないため、マネージャ・ノードを追加すると書き込みパフォーマンスが低下します。これは、ネットワークの往復トラフィックが増えることを意味します。</target>
        </trans-unit>
        <trans-unit id="c46ae2b51f093b4d567a20743cf894773a9d4341" translate="yes" xml:space="preserve">
          <source>There is no memory limit for the container. The container can use as much memory as needed.</source>
          <target state="translated">コンテナにはメモリの制限はありません。コンテナは必要なだけのメモリを使用することができます。</target>
        </trans-unit>
        <trans-unit id="54df66a39d52c7bcabb4266fa44bd074305be26b" translate="yes" xml:space="preserve">
          <source>There is no special handling of quotation marks. This means that &lt;strong&gt;they are part of the VAL&lt;/strong&gt;.</source>
          <target state="translated">引用符の特別な処理はありません。これは、&lt;strong&gt;それらがVALの一部である&lt;/strong&gt;こと&lt;strong&gt;を&lt;/strong&gt;意味します。</target>
        </trans-unit>
        <trans-unit id="bc8488fc468fa3d5bf59b15f4d91a3229dc387f4" translate="yes" xml:space="preserve">
          <source>There may be cases where you want to use both. You can have the image include the code using a &lt;code&gt;COPY&lt;/code&gt;, and use a &lt;code&gt;volume&lt;/code&gt; in your Compose file to include the code from the host during development. The volume overrides the directory contents of the image.</source>
          <target state="translated">両方を使用したい場合があります。 &lt;code&gt;COPY&lt;/code&gt; を使用してイメージにコードを含め、開発中にホストからのコードを含めるためにComposeファイルの &lt;code&gt;volume&lt;/code&gt; を使用できます。ボリュームは、イメージのディレクトリの内容を上書きします。</target>
        </trans-unit>
        <trans-unit id="9151a652d582569b556b13188766c2cd2a43286b" translate="yes" xml:space="preserve">
          <source>Therefore, node labels can be used to limit critical tasks to nodes that meet certain requirements. For example, schedule only on machines where special workloads should be run, such as machines that meet &lt;a href=&quot;https://www.pcisecuritystandards.org/&quot;&gt;PCI-SS compliance&lt;/a&gt;.</source>
          <target state="translated">したがって、ノードラベルを使用して、重要なタスクを特定の要件を満たすノードに制限できます。たとえば、&lt;a href=&quot;https://www.pcisecuritystandards.org/&quot;&gt;PCI-SSコンプライアンス&lt;/a&gt;を満たすマシンなど、特別なワークロードを実行する必要があるマシンでのみスケジュールします。</target>
        </trans-unit>
        <trans-unit id="311428cc61f122ac8f0ff1fe39f6b93b94ca88a8" translate="yes" xml:space="preserve">
          <source>These &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;ctrl-a&lt;/code&gt;, &lt;code&gt;X&lt;/code&gt;, or &lt;code&gt;ctrl-\\&lt;/code&gt; values are all examples of valid key sequences. To configure a different configuration default key sequence for all containers, see &lt;a href=&quot;../cli/index#configuration-files&quot;&gt;&lt;strong&gt;Configuration file&lt;/strong&gt; section&lt;/a&gt;.</source>
          <target state="translated">これらの &lt;code&gt;a&lt;/code&gt; 、 &lt;code&gt;ctrl-a&lt;/code&gt; 、 &lt;code&gt;X&lt;/code&gt; 、または &lt;code&gt;ctrl-\\&lt;/code&gt; の値はすべて、有効なキーシーケンスの例です。すべてのコンテナーに対して異なる構成のデフォルトのキーシーケンスを構成するには、「&lt;a href=&quot;../cli/index#configuration-files&quot;&gt;&lt;strong&gt;構成ファイル」&lt;/strong&gt;セクションを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="64b5474c1794485b2d40653c9e2e09081765ab8a" translate="yes" xml:space="preserve">
          <source>These Go environment variables are case-insensitive. See the &lt;a href=&quot;http://golang.org/pkg/net/http/&quot;&gt;Go specification&lt;/a&gt; for details on these variables.</source>
          <target state="translated">これらのGo環境変数は大文字と小文字を区別しません。これらの変数の詳細については、&lt;a href=&quot;http://golang.org/pkg/net/http/&quot;&gt;Go仕様&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="31caaf6623b9c633e6c1073eb9040be966d639aa" translate="yes" xml:space="preserve">
          <source>These are created once when the first machine is created and reused afterwards. Although they are free resources, driver does a best effort to clean them up after the last machine using these resources is removed.</source>
          <target state="translated">これらは最初のマシンが作成されたときに一度作成され、その後再利用されます。これらは無料のリソースですが、これらのリソースを使用している最後のマシンが削除された後、ドライバはこれらのリソースをクリーンアップするために最善の努力をしています。</target>
        </trans-unit>
        <trans-unit id="39fe1e5ad586d0e7cf7856a65e7b6669576d3d25" translate="yes" xml:space="preserve">
          <source>These are the ports you need to expose for each service:</source>
          <target state="translated">これらは、各サービスで公開する必要のあるポートです。</target>
        </trans-unit>
        <trans-unit id="bac967147ac9fac7063b2796ffd0dbb09be399f8" translate="yes" xml:space="preserve">
          <source>These arguments are defined in the global scope so are not automatically available inside build stages or for your &lt;code&gt;RUN&lt;/code&gt; commands. To expose one of these arguments inside the build stage redefine it without value.</source>
          <target state="translated">これらの引数はグローバルスコープで定義されているため、ビルドステージ内や &lt;code&gt;RUN&lt;/code&gt; コマンドでは自動的に使用できません。ビルドステージ内でこれらの引数の1つを公開するには、値なしで再定義します。</target>
        </trans-unit>
        <trans-unit id="584b62ca74acc41372cd2036de01d6464c923b50" translate="yes" xml:space="preserve">
          <source>These command examples shows a Bash shell. For a different shell, such as C Shell, the same commands are the same except where noted.</source>
          <target state="translated">これらのコマンド例は、Bash シェルを示しています。C シェルのような別のシェルの場合は、指定された場所以外は同じコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="e74c851f71498e84ce39a15acf42934d7c72f3de" translate="yes" xml:space="preserve">
          <source>These differences are explained below.</source>
          <target state="translated">これらの違いを以下に説明します。</target>
        </trans-unit>
        <trans-unit id="7246908a42dc07a518a78b2cabf07f47d70b301a" translate="yes" xml:space="preserve">
          <source>These flags were added before Docker 1.0, so will not be &lt;em&gt;removed&lt;/em&gt;, only &lt;em&gt;hidden&lt;/em&gt;, to discourage their use.</source>
          <target state="translated">これらのフラグはDocker 1.0より前に追加されたため、使用を阻止するために&lt;em&gt;削除さ&lt;/em&gt;れることはなく、&lt;em&gt;非表示&lt;/em&gt;になるだけです。</target>
        </trans-unit>
        <trans-unit id="c2b20459caa4cc0cc4428337ecd3dbaee5eb97fb" translate="yes" xml:space="preserve">
          <source>These instructions assume you are running in Linux or macOS. You can run this sandbox on a local machine or on a virtual machine. You need to have privileges to run docker commands on your local machine or in the VM.</source>
          <target state="translated">これらの手順は、Linux または macOS で実行していることを前提としています。このサンドボックスはローカルマシンまたは仮想マシン上で実行できます。ローカルマシンまたは仮想マシン上で docker コマンドを実行するには、権限が必要です。</target>
        </trans-unit>
        <trans-unit id="4d8c56cad2f39c4a7b2f668100d9da8dd6631ef4" translate="yes" xml:space="preserve">
          <source>These instructions assume you have installed the Docker Engine 1.12 or later on a machine to serve as a manager node in your swarm.</source>
          <target state="translated">これらの手順では、スウォームのマネージャーノードとして機能するマシンにDocker Engine 1.12以降をインストールしていることを前提としています。</target>
        </trans-unit>
        <trans-unit id="84e044fa18790282168ffba099e31deab2a0f085" translate="yes" xml:space="preserve">
          <source>These options are passed directly to the volume driver. Options for different volume drivers may do different things (or nothing at all).</source>
          <target state="translated">これらのオプションはボリュームドライバに直接渡されます。異なるボリュームドライバのオプションは、異なる動作をすることがあります(または全く何もしないこともあります)。</target>
        </trans-unit>
        <trans-unit id="230271f219630a6dfecde6978e6f7c8484085c31" translate="yes" xml:space="preserve">
          <source>These parameters always set an upper limit on the memory available to the container. On Linux, this is set on the cgroup and applications in a container can query it at &lt;code&gt;/sys/fs/cgroup/memory/memory.limit_in_bytes&lt;/code&gt;.</source>
          <target state="translated">これらのパラメーターは常に、コンテナーが使用できるメモリーの上限を設定します。Linuxでは、これはcgroupで設定され、コンテナー内のアプリケーションは &lt;code&gt;/sys/fs/cgroup/memory/memory.limit_in_bytes&lt;/code&gt; でそれを照会できます。</target>
        </trans-unit>
        <trans-unit id="bb1e65e28097900a5e6798cdcb5c67d92ccb7612" translate="yes" xml:space="preserve">
          <source>These portable images are defined by something called a &lt;code&gt;Dockerfile&lt;/code&gt;.</source>
          <target state="translated">これらのポータブルイメージは、 &lt;code&gt;Dockerfile&lt;/code&gt; と呼ばれるものによって定義されます。</target>
        </trans-unit>
        <trans-unit id="c44349d63c8f29613ee6fa93097acd99df2851dd" translate="yes" xml:space="preserve">
          <source>These properties are deprecated in favor of per-network properties in &lt;code&gt;NetworkSettings.Networks&lt;/code&gt;. These properties were already &amp;ldquo;deprecated&amp;rdquo; in docker 1.9, but kept around for backward compatibility.</source>
          <target state="translated">これらのプロパティは、 &lt;code&gt;NetworkSettings.Networks&lt;/code&gt; のネットワークごとのプロパティのために廃止されました。これらのプロパティは、Docker 1.9ではすでに「非推奨」ですが、下位互換性のために残されています。</target>
        </trans-unit>
        <trans-unit id="95ad3420806ce4f7e45f02368e5d74ee7259066d" translate="yes" xml:space="preserve">
          <source>These settings are determined by the &lt;a href=&quot;https://hub.docker.com/images/postgres&quot;&gt;postgres&lt;/a&gt; Docker image specified in &lt;code&gt;docker-compose.yml&lt;/code&gt;.</source>
          <target state="translated">これらの設定は、 &lt;code&gt;docker-compose.yml&lt;/code&gt; で指定された&lt;a href=&quot;https://hub.docker.com/images/postgres&quot;&gt;postgres&lt;/a&gt; Dockerイメージによって決定されます。</target>
        </trans-unit>
        <trans-unit id="0006a01688ee5bb8760e82efcaab62e7a7b452cd" translate="yes" xml:space="preserve">
          <source>These syntax rules apply to the &lt;code&gt;.env&lt;/code&gt; file:</source>
          <target state="translated">これらの構文規則は &lt;code&gt;.env&lt;/code&gt; ファイルに適用されます。</target>
        </trans-unit>
        <trans-unit id="0c4632832f247dcfe72ed61367b13859852ff268" translate="yes" xml:space="preserve">
          <source>These topics describe version 1 of the Compose file format. This is the oldest version.</source>
          <target state="translated">これらのトピックでは、Compose ファイル形式のバージョン 1 について説明します。これは最も古いバージョンです。</target>
        </trans-unit>
        <trans-unit id="37e57e0e52a34f096be81802356245c57ce84aec" translate="yes" xml:space="preserve">
          <source>These topics describe version 2 of the Compose file format.</source>
          <target state="translated">これらのトピックでは、Compose ファイル形式のバージョン 2 について説明します。</target>
        </trans-unit>
        <trans-unit id="239f599300fe3779fc761e4efc4bdc384fbe57be" translate="yes" xml:space="preserve">
          <source>These topics describe version 3 of the Compose file format. This is the newest version.</source>
          <target state="translated">これらのトピックでは、Compose ファイル形式のバージョン 3 について説明します。これは最新バージョンです。</target>
        </trans-unit>
        <trans-unit id="9bf35be4d7ca6fb7048d753152c839ba29757169" translate="yes" xml:space="preserve">
          <source>These two &lt;code&gt;docker build&lt;/code&gt; commands do the exact same thing. They both use the contents of the &lt;code&gt;debug&lt;/code&gt; file instead of looking for a &lt;code&gt;Dockerfile&lt;/code&gt; and will use &lt;code&gt;/home/me/myapp&lt;/code&gt; as the root of the build context. Note that &lt;code&gt;debug&lt;/code&gt; is in the directory structure of the build context, regardless of how you refer to it on the command line.</source>
          <target state="translated">これら2つの &lt;code&gt;docker build&lt;/code&gt; コマンドは、まったく同じことを行います。どちらも &lt;code&gt;Dockerfile&lt;/code&gt; を探す代わりに &lt;code&gt;debug&lt;/code&gt; ファイルの内容を使用し、ビルドコンテキストのルートとして &lt;code&gt;/home/me/myapp&lt;/code&gt; を使用します。コマンドラインで &lt;code&gt;debug&lt;/code&gt; を参照する方法に関係なく、デバッグはビルドコンテキストのディレクトリ構造にあることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3bc9ec20c6ba6550b3916f42f42debaecc83c305" translate="yes" xml:space="preserve">
          <source>They should keep &lt;code&gt;delegation.key&lt;/code&gt; private because it is used to sign tags.</source>
          <target state="translated">タグの署名に使用されるため、 &lt;code&gt;delegation.key&lt;/code&gt; は非公開にする必要があります。</target>
        </trans-unit>
        <trans-unit id="f8bb7a76c170c136f81e1e0fbc79c555341c4e8c" translate="yes" xml:space="preserve">
          <source>This (size) will allow to set the container rootfs size to 120G at creation time. This option is only available for the &lt;code&gt;devicemapper&lt;/code&gt;, &lt;code&gt;btrfs&lt;/code&gt;, &lt;code&gt;overlay2&lt;/code&gt;, &lt;code&gt;windowsfilter&lt;/code&gt; and &lt;code&gt;zfs&lt;/code&gt; graph drivers. For the &lt;code&gt;devicemapper&lt;/code&gt;, &lt;code&gt;btrfs&lt;/code&gt;, &lt;code&gt;windowsfilter&lt;/code&gt; and &lt;code&gt;zfs&lt;/code&gt; graph drivers, user cannot pass a size less than the Default BaseFS Size. For the &lt;code&gt;overlay2&lt;/code&gt; storage driver, the size option is only available if the backing fs is &lt;code&gt;xfs&lt;/code&gt; and mounted with the &lt;code&gt;pquota&lt;/code&gt; mount option. Under these conditions, user can pass any size less than the backing fs size.</source>
          <target state="translated">これ（サイズ）により、作成時にコンテナーのrootfsサイズを120Gに設定できます。このオプションは、のためにのみ利用可能です &lt;code&gt;devicemapper&lt;/code&gt; 、 &lt;code&gt;btrfs&lt;/code&gt; 、 &lt;code&gt;overlay2&lt;/code&gt; 、 &lt;code&gt;windowsfilter&lt;/code&gt; と &lt;code&gt;zfs&lt;/code&gt; グラフドライバー。 &lt;code&gt;devicemapper&lt;/code&gt; 、 &lt;code&gt;btrfs&lt;/code&gt; 、 &lt;code&gt;windowsfilter&lt;/code&gt; と &lt;code&gt;zfs&lt;/code&gt; グラフドライバー、ユーザーはデフォルトのBaseFSサイズよりも小さいサイズを渡すことはできません。 &lt;code&gt;overlay2&lt;/code&gt; ストレージドライバ、サイズオプションは、バッキングfsがある場合にのみ使用可能です &lt;code&gt;xfs&lt;/code&gt; とが搭載された &lt;code&gt;pquota&lt;/code&gt; オプションをマウントします。これらの条件下では、ユーザーはバッキングfsサイズよりも小さい任意のサイズを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="0f57ef99877faf08ed983654bb76f051727a7a4a" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;Dockerfile&lt;/code&gt; refers to a couple of files we haven&amp;rsquo;t created yet, namely &lt;code&gt;app.py&lt;/code&gt; and &lt;code&gt;requirements.txt&lt;/code&gt;. Let&amp;rsquo;s create those next.</source>
          <target state="translated">この &lt;code&gt;Dockerfile&lt;/code&gt; は、まだ作成していない2つのファイル、つまり &lt;code&gt;app.py&lt;/code&gt; と &lt;code&gt;requirements.txt&lt;/code&gt; を参照しています。次に作成しましょう。</target>
        </trans-unit>
        <trans-unit id="47b5a932b8b87db6fd83585f80ce51e69d78bd4d" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;Dockerfile&lt;/code&gt; starts with a &lt;a href=&quot;https://hub.docker.com/r/library/python/tags/3/&quot;&gt;Python 3 parent image&lt;/a&gt;. The parent image is modified by adding a new &lt;code&gt;code&lt;/code&gt; directory. The parent image is further modified by installing the Python requirements defined in the &lt;code&gt;requirements.txt&lt;/code&gt; file.</source>
          <target state="translated">この &lt;code&gt;Dockerfile&lt;/code&gt; は、&lt;a href=&quot;https://hub.docker.com/r/library/python/tags/3/&quot;&gt;Python 3の親イメージで&lt;/a&gt;始まります。親イメージは、新しい &lt;code&gt;code&lt;/code&gt; ディレクトリを追加することによって変更されます。親イメージは、 &lt;code&gt;requirements.txt&lt;/code&gt; ファイルで定義されたPython要件をインストールすることによってさらに変更されます。</target>
        </trans-unit>
        <trans-unit id="fcc11cd71fd30d08d07edb398a96dbfeeb5387c9" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;docker-compose.yml&lt;/code&gt; file tells Docker to do the following:</source>
          <target state="translated">この &lt;code&gt;docker-compose.yml&lt;/code&gt; ファイルは、Dockerに次のことを行うように指示します。</target>
        </trans-unit>
        <trans-unit id="42b222153a9a1c425f836be3f93bd24f5404188e" translate="yes" xml:space="preserve">
          <source>This Compose file defines two services: &lt;code&gt;web&lt;/code&gt; and &lt;code&gt;redis&lt;/code&gt;.</source>
          <target state="translated">このComposeファイルは2つのサービスを定義します： &lt;code&gt;web&lt;/code&gt; と &lt;code&gt;redis&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="358fc9bba91271cbe664fce4a5159a52599bd1b3" translate="yes" xml:space="preserve">
          <source>This Dockerfile results in an image that causes &lt;code&gt;docker run&lt;/code&gt; to create a new mount point at &lt;code&gt;/myvol&lt;/code&gt; and copy the &lt;code&gt;greeting&lt;/code&gt; file into the newly created volume.</source>
          <target state="translated">このDockerfileの結果、docker &lt;code&gt;docker run&lt;/code&gt; は &lt;code&gt;/myvol&lt;/code&gt; に新しいマウントポイントを作成し、 &lt;code&gt;greeting&lt;/code&gt; ファイルを新しく作成されたボリュームにコピーします。</target>
        </trans-unit>
        <trans-unit id="75674b77be279ff4516a3e04e754ff23ee2f1790" translate="yes" xml:space="preserve">
          <source>This Quickstart guide shows you how to use Docker Compose to set up and run a Rails/PostgreSQL app. Before starting, &lt;a href=&quot;../install/index&quot;&gt;install Compose&lt;/a&gt;.</source>
          <target state="translated">このクイックスタートガイドでは、Docker Composeを使用してRails / PostgreSQLアプリを設定および実行する方法を示します。開始&lt;a href=&quot;../install/index&quot;&gt;する&lt;/a&gt;前に、Composeをインストールします。</target>
        </trans-unit>
        <trans-unit id="f01905754800cfb79fe2f86a2616a78f01578a67" translate="yes" xml:space="preserve">
          <source>This adds the local file &lt;code&gt;my_file.txt&lt;/code&gt; (which must exist relative to the current working directory), under the target name &lt;code&gt;v1&lt;/code&gt;, to the &lt;code&gt;example.com/collection&lt;/code&gt; collection we set up. The contents of the local file are not actually added to the collection - a &amp;ldquo;target&amp;rdquo; consists of the file path and one or more checksums of the contents.</source>
          <target state="translated">これにより、ローカルファイル &lt;code&gt;my_file.txt&lt;/code&gt; （現在の作業ディレクトリに対して相対的に存在する必要がある）がターゲット名 &lt;code&gt;v1&lt;/code&gt; で、設定した &lt;code&gt;example.com/collection&lt;/code&gt; コレクションに追加されます。ローカルファイルのコンテンツは実際にはコレクションに追加されません。「ターゲット」は、ファイルパスとコンテンツの1つ以上のチェックサムで構成されます。</target>
        </trans-unit>
        <trans-unit id="df4a4d34e6996802cfe8fa551770ac282cbd2296" translate="yes" xml:space="preserve">
          <source>This also causes a change in the swarm&amp;rsquo;s join tokens. The previous join tokens are no longer valid.</source>
          <target state="translated">これにより、スウォームの結合トークンも変更されます。以前の結合トークンは無効になりました。</target>
        </trans-unit>
        <trans-unit id="86a0e1e2e2d988ec765aa8086c19c406f4640726" translate="yes" xml:space="preserve">
          <source>This article demonstrates how to ensure the traffic between the Docker registry server and the Docker daemon (a client of the registry server) is encrypted and properly authenticated using &lt;em&gt;certificate-based client-server authentication&lt;/em&gt;.</source>
          <target state="translated">この記事では、DockerレジストリサーバーとDockerデーモン（レジストリサーバーのクライアント）間のトラフィックを暗号化し、&lt;em&gt;証明書ベースのクライアントサーバー認証を&lt;/em&gt;使用して適切に認証する方法&lt;em&gt;を説明します&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="9d38d1f1f6a9a807fd73d238aabfdc22a2067cc2" translate="yes" xml:space="preserve">
          <source>This behavior illustrates that the requirements and configuration of your tasks are not tightly tied to the current state of the swarm. As the administrator of a swarm, you declare the desired state of your swarm, and the manager works with the nodes in the swarm to create that state. You do not need to micro-manage the tasks on the swarm.</source>
          <target state="translated">この動作は、タスクの要件や設定がスウォームの現在の状態に厳密に縛られていないことを示しています。スウォームの管理者として、希望するスウォームの状態を宣言すると、管理者はスウォームのノードと連携してその状態を作成します。スウォーム上のタスクをマイクロ管理する必要はありません。</target>
        </trans-unit>
        <trans-unit id="e1c412d460861eab1e7925494ef21e2f85862ad8" translate="yes" xml:space="preserve">
          <source>This binds port &lt;code&gt;8080&lt;/code&gt; of the container to TCP port &lt;code&gt;80&lt;/code&gt; on &lt;code&gt;127.0.0.1&lt;/code&gt; of the host machine. You can also specify &lt;code&gt;udp&lt;/code&gt; and &lt;code&gt;sctp&lt;/code&gt; ports. The &lt;a href=&quot;https://docs.docker.com/network&quot;&gt;Docker User Guide&lt;/a&gt; explains in detail how to manipulate ports in Docker.</source>
          <target state="translated">これにより、コンテナのポート &lt;code&gt;8080&lt;/code&gt; がホストマシンの &lt;code&gt;127.0.0.1&lt;/code&gt; の TCPポート &lt;code&gt;80&lt;/code&gt; にバインドされます。 &lt;code&gt;udp&lt;/code&gt; および &lt;code&gt;sctp&lt;/code&gt; ポートを指定することもできます。&lt;a href=&quot;https://docs.docker.com/network&quot;&gt;ドッカーユーザーガイドは、&lt;/a&gt;ドッカーでポートを操作する方法を詳細に説明しています。</target>
        </trans-unit>
        <trans-unit id="f1d02d4b2ae7965df9c4265d0e3adff2cc9369f8" translate="yes" xml:space="preserve">
          <source>This builds the development Notary server and Notary signer images, and start up containers for the Notary server, Notary signer, and the MySQL database that both of them share. The MySQL data is stored in a volume.</source>
          <target state="translated">開発用のNotaryサーバとNotary signerのイメージを構築し、Notaryサーバ、Notary signer、両者が共有するMySQLデータベースのコンテナを起動します。MySQL データはボリュームに格納されています。</target>
        </trans-unit>
        <trans-unit id="97f761181ab7632d59e26ed008632c00f572855e" translate="yes" xml:space="preserve">
          <source>This can be used to create a context out of an existing &lt;code&gt;DOCKER_HOST&lt;/code&gt; based script:</source>
          <target state="translated">これは、既存の &lt;code&gt;DOCKER_HOST&lt;/code&gt; ベースのスクリプトからコンテキストを作成するために使用できます。</target>
        </trans-unit>
        <trans-unit id="edce6ba04bb5661e80ee7609a1990a5b26a9e5aa" translate="yes" xml:space="preserve">
          <source>This causes problems when using a web server such as Nginx to serve static files from a shared volume. For development environments, a good workaround is to disable sendfile in your server configuration.</source>
          <target state="translated">これは、Nginx のような Web サーバーを使用して共有ボリュームから静的ファイルを提供する場合に問題が発生します。開発環境では、サーバ設定で sendfile を無効にするのが良い回避策です。</target>
        </trans-unit>
        <trans-unit id="0af2aba4a2db980cbd2853a408306d57c1c6a1c8" translate="yes" xml:space="preserve">
          <source>This command displays system wide information regarding the Docker installation. Information displayed includes the kernel version, number of containers and images. The number of images shown is the number of unique images. The same image tagged under different names is counted only once.</source>
          <target state="translated">このコマンドは、Dockerのインストールに関するシステム全体の情報を表示します。表示される情報には、カーネルのバージョン、コンテナの数、イメージが含まれます。表示されるイメージの数は、ユニークなイメージの数です。異なる名前でタグ付けされた同じイメージは一度だけカウントされます。</target>
        </trans-unit>
        <trans-unit id="240ca2085f5947e49de738600c8da8f441afca27" translate="yes" xml:space="preserve">
          <source>This command downloads a lightweight Linux distribution (&lt;a href=&quot;https://github.com/boot2docker/boot2docker&quot;&gt;boot2docker&lt;/a&gt;) with the Docker daemon installed, and creates and starts a VirtualBox VM with Docker running.</source>
          <target state="translated">このコマンドは、Dockerデーモンがインストールされた軽量のLinuxディストリビューション（&lt;a href=&quot;https://github.com/boot2docker/boot2docker&quot;&gt;boot2docker&lt;/a&gt;）をダウンロードし、Dockerが実行されているVirtualBox VMを作成して起動します。</target>
        </trans-unit>
        <trans-unit id="35184527810629c1311c56b69a8f765cc48c694d" translate="yes" xml:space="preserve">
          <source>This command is experimental on the Docker client. It should not be used in production environments. To enable experimental features in the Docker CLI, edit the &lt;a href=&quot;../cli/index#configuration-files&quot;&gt;config.json&lt;/a&gt; and set &lt;code&gt;experimental&lt;/code&gt; to &lt;code&gt;enabled&lt;/code&gt;.</source>
          <target state="translated">このコマンドは、Dockerクライアントでは試験的なものです。本番環境では使用しないでください。Docker CLIで試験的な機能を有効にするには、&lt;a href=&quot;../cli/index#configuration-files&quot;&gt;config.json&lt;/a&gt;を編集し、 &lt;code&gt;experimental&lt;/code&gt; を &lt;code&gt;enabled&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="df32b930eb31af34fe2b76612ef1e6f0009304a3" translate="yes" xml:space="preserve">
          <source>This command is experimental on the Docker daemon. It should not be used in production environments. To enable experimental features on the Docker daemon, edit the &lt;a href=&quot;../dockerd/index#daemon-configuration-file&quot;&gt;daemon.json&lt;/a&gt; and set &lt;code&gt;experimental&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このコマンドは、Dockerデーモンで実験的なものです。本番環境では使用しないでください。Dockerデーモンで試験的な機能を有効にするには、&lt;a href=&quot;../dockerd/index#daemon-configuration-file&quot;&gt;daemon.json&lt;/a&gt;を編集して、 &lt;code&gt;experimental&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="b4fad7e4f212ad30b2c2846839873bab6f4ae67d" translate="yes" xml:space="preserve">
          <source>This command is experimental.</source>
          <target state="translated">このコマンドは実験的なものです。</target>
        </trans-unit>
        <trans-unit id="e3a6d53a3cf2ebcf1bd54d7f955d415d822847a8" translate="yes" xml:space="preserve">
          <source>This command is optional because the person who created the &lt;code&gt;IMAGE&lt;/code&gt; may have already provided a default &lt;code&gt;COMMAND&lt;/code&gt; using the Dockerfile &lt;code&gt;CMD&lt;/code&gt; instruction. As the operator (the person running a container from the image), you can override that &lt;code&gt;CMD&lt;/code&gt; instruction just by specifying a new &lt;code&gt;COMMAND&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IMAGE&lt;/code&gt; を作成した人がDockerfile &lt;code&gt;CMD&lt;/code&gt; 命令を使用してデフォルトの &lt;code&gt;COMMAND&lt;/code&gt; をすでに提供している場合があるため、このコマンドはオプションです。オペレーター（イメージからコンテナーを実行する人）は、新しい &lt;code&gt;COMMAND&lt;/code&gt; を指定するだけで、その &lt;code&gt;CMD&lt;/code&gt; 命令をオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="e297bdb9616106c472adc915c5da37860a04aa4e" translate="yes" xml:space="preserve">
          <source>This command pulls all images from the &lt;code&gt;fedora&lt;/code&gt; repository:</source>
          <target state="translated">このコマンドは &lt;code&gt;fedora&lt;/code&gt; リポジトリからすべてのイメージをプルします：</target>
        </trans-unit>
        <trans-unit id="365f6a7147122b686375358bdf74e35f3d587264" translate="yes" xml:space="preserve">
          <source>This command when run targeting a manager, lists services are running in the swarm.</source>
          <target state="translated">このコマンドは、マネージャをターゲットにして実行すると、スウォームで実行されているサービスの一覧を表示します。</target>
        </trans-unit>
        <trans-unit id="ddf782cc635d52ac46f7c8308682cd36d0868308" translate="yes" xml:space="preserve">
          <source>This command will delete all stopped containers. The command &lt;code&gt;docker ps -a -q&lt;/code&gt; will return all existing container IDs and pass them to the &lt;code&gt;rm&lt;/code&gt; command which will delete them. Any running containers will not be deleted.</source>
          <target state="translated">このコマンドは、停止しているすべてのコンテナーを削除します。コマンド &lt;code&gt;docker ps -a -q&lt;/code&gt; はすべての既存のコンテナーIDを返し、それらを削除する &lt;code&gt;rm&lt;/code&gt; コマンドに渡します。実行中のコンテナは削除されません。</target>
        </trans-unit>
        <trans-unit id="a22c94088bd64bc47d90d7a2bf3e8f1ae563b3ae" translate="yes" xml:space="preserve">
          <source>This command will force-remove a running container.</source>
          <target state="translated">このコマンドは、実行中のコンテナを強制的に削除します。</target>
        </trans-unit>
        <trans-unit id="24bca651c57768c2cbbc0f8a0064b563ef57bafa" translate="yes" xml:space="preserve">
          <source>This command will remove the container and any volumes associated with it. Note that if a volume was specified with a name, it will not be removed.</source>
          <target state="translated">このコマンドは、コンテナとそれに関連付けられたすべてのボリュームを削除します。ボリュームに名前が指定されていた場合は削除されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="7a907da2bfe0f1e4e51ceded4cd12d4f72da28ae" translate="yes" xml:space="preserve">
          <source>This configuration option can overridden with the command line flag `--tlscacert`, which would specify a path relative to the current working directory where the Notary client is invoked.</source>
          <target state="translated">この設定オプションはコマンドラインフラグ `--tlscacert` で上書きすることができます。</target>
        </trans-unit>
        <trans-unit id="f3dac2903a9e3b3bcb2b9748cb607af7325f6ae4" translate="yes" xml:space="preserve">
          <source>This configuration option can overridden with the command line flag `--tlscert`, which would specify a path relative to the current working directory where the Notary client is invoked.</source>
          <target state="translated">この設定オプションはコマンドラインフラグ `--tlscert` で上書きすることができます。</target>
        </trans-unit>
        <trans-unit id="e323c3dfc61399ca682bdcd3c5130865f67656b5" translate="yes" xml:space="preserve">
          <source>This configuration option can overridden with the command line flag `--tlskey`, which would specify a path relative to the current working directory where the Notary client is invoked.</source>
          <target state="translated">この設定オプションはコマンドラインフラグ `--tlskey` で上書きすることができます。</target>
        </trans-unit>
        <trans-unit id="709ff60d32f8c4d39b9a6e28d1237a9155af5e63" translate="yes" xml:space="preserve">
          <source>This creates a virtual machine running locally in VirtualBox which uses the &lt;code&gt;overlay&lt;/code&gt; storage backend, has the key-value pairs &lt;code&gt;foo=bar&lt;/code&gt; and &lt;code&gt;spam=eggs&lt;/code&gt; as labels on the engine, and allows pushing / pulling from the insecure registry located at &lt;code&gt;registry.myco.com&lt;/code&gt;. You can verify much of this by inspecting the output of &lt;code&gt;docker info&lt;/code&gt;:</source>
          <target state="translated">これにより、VirtualBoxでローカルに実行される仮想マシンが作成されます。これは、 &lt;code&gt;overlay&lt;/code&gt; ストレージバックエンドを使用し、キーと値のペア &lt;code&gt;foo=bar&lt;/code&gt; と &lt;code&gt;spam=eggs&lt;/code&gt; をエンジンのラベルとして持ち、registry.mycoにある安全でないレジストリからのプッシュ/プルを可能にし &lt;code&gt;registry.myco.com&lt;/code&gt; 。 &lt;code&gt;docker info&lt;/code&gt; の出力を調べることで、これの多くを確認できます。</target>
        </trans-unit>
        <trans-unit id="41a11612feac37d243bc29270cc7b6836505ff66" translate="yes" xml:space="preserve">
          <source>This deploys all three services using the configuration in &lt;code&gt;docker-compose.yml&lt;/code&gt; and &lt;code&gt;docker-compose.prod.yml&lt;/code&gt; (but not the dev configuration in &lt;code&gt;docker-compose.override.yml&lt;/code&gt;).</source>
          <target state="translated">これは、構成を使用して、すべての3つのサービス展開 &lt;code&gt;docker-compose.yml&lt;/code&gt; と &lt;code&gt;docker-compose.prod.yml&lt;/code&gt; （ただし中のdevの設定 &lt;code&gt;docker-compose.override.yml&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2ac8d354c9ba0ef9da4ef3101bd1948b3180a500" translate="yes" xml:space="preserve">
          <source>This diagram illustrates how placement preferences work:</source>
          <target state="translated">この図は、プレースメント・プリファレンスがどのように機能するかを示しています。</target>
        </trans-unit>
        <trans-unit id="d1bc61090cecad38ab7e1afe84b40d5a2df3de11" translate="yes" xml:space="preserve">
          <source>This disconnects the shell from &lt;code&gt;docker-machine&lt;/code&gt; created virtual machines, and allows you to continue working in the same shell, now using native &lt;code&gt;docker&lt;/code&gt; commands (for example, on Docker Desktop for Mac or Docker Desktop for Windows). To learn more, see the &lt;a href=&quot;../../machine/get-started/index#unset-environment-variables-in-the-current-shell&quot;&gt;Machine topic on unsetting environment variables&lt;/a&gt;.</source>
          <target state="translated">これにより、 &lt;code&gt;docker-machine&lt;/code&gt; で作成された仮想マシンからシェルが切断され、ネイティブの &lt;code&gt;docker&lt;/code&gt; コマンドを使用して、同じシェルで作業を続けることができます（たとえば、Docker Desktop for MacまたはDocker Desktop for Windows）。詳細については、&lt;a href=&quot;../../machine/get-started/index#unset-environment-variables-in-the-current-shell&quot;&gt;環境変数の設定解除に関するマシンのトピックを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9d2f8bae28c2c9e880782a4809b0b4ebefad7b1c" translate="yes" xml:space="preserve">
          <source>This document assumes familiarity with &lt;a href=&quot;https://www.theupdateframework.com/&quot;&gt;The Update Framework&lt;/a&gt;, but here is a brief recap of the TUF roles and corresponding key hierarchy:</source>
          <target state="translated">このドキュメントは、&lt;a href=&quot;https://www.theupdateframework.com/&quot;&gt;更新フレームワークに&lt;/a&gt;精通していることを前提としていますが、TUFの役割と対応するキー階層の簡単な要約を次に示します。</target>
        </trans-unit>
        <trans-unit id="f3db2d513e02b85d3f9b2621224278858e2df00d" translate="yes" xml:space="preserve">
          <source>This document describes Docker Engine network driver plugins generally available in Docker Engine. To view information on plugins managed by Docker Engine, refer to &lt;a href=&quot;../index&quot;&gt;Docker Engine plugin system&lt;/a&gt;.</source>
          <target state="translated">このドキュメントでは、Docker Engineで一般的に利用可能なDocker Engineネットワークドライバープラグインについて説明します。Docker Engineが管理するプラグインの情報を表示するには、&lt;a href=&quot;../index&quot;&gt;Docker Engineプラグインシステムを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f6e7554c11c0d25f0bdedde0eaf7221ec3abe7f5" translate="yes" xml:space="preserve">
          <source>This document describes basic use of the Notary CLI as a tool supporting Docker Content Trust. For more advanced use cases, you must &lt;a href=&quot;../running_a_service/index&quot;&gt;run your own Notary service&lt;/a&gt;. Read the &lt;a href=&quot;../advanced_usage/index&quot;&gt;use the Notary client for advanced users&lt;/a&gt; documentation.</source>
          <target state="translated">このドキュメントでは、Docker Content TrustをサポートするツールとしてのNotary CLIの基本的な使用法について説明します。より高度なユースケースでは&lt;a href=&quot;../running_a_service/index&quot;&gt;、独自のNotaryサービスを実行する&lt;/a&gt;必要があります。&lt;a href=&quot;../advanced_usage/index&quot;&gt;上級ユーザー向けのNotaryクライアントの使用&lt;/a&gt;に関するドキュメントをお読みください。</target>
        </trans-unit>
        <trans-unit id="0fa42b8f27f63672e035019dbb27d49c75249850" translate="yes" xml:space="preserve">
          <source>This document describes the Docker Engine plugin API. To view information on plugins managed by Docker Engine, refer to &lt;a href=&quot;../index&quot;&gt;Docker Engine plugin system&lt;/a&gt;.</source>
          <target state="translated">このドキュメントでは、Docker EngineプラグインAPIについて説明します。Docker Engineが管理するプラグインの情報を表示するには、&lt;a href=&quot;../index&quot;&gt;Docker Engineプラグインシステムを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="92a5e71cde0d41862aadd7efb2569e87955944e7" translate="yes" xml:space="preserve">
          <source>This document describes the Docker Engine plugins generally available in Docker Engine. To view information on plugins managed by Docker Engine, refer to &lt;a href=&quot;../index&quot;&gt;Docker Engine plugin system&lt;/a&gt;.</source>
          <target state="translated">このドキュメントでは、Docker Engineで一般的に利用可能なDocker Engineプラグインについて説明します。Docker Engineが管理するプラグインの情報を表示するには、&lt;a href=&quot;../index&quot;&gt;Docker Engineプラグインシステムを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="977a9aa369ad0a7c94c5def3b85e5184449f8f22" translate="yes" xml:space="preserve">
          <source>This document describes the Docker Engine plugins generally available in Docker Engine. To view information on plugins managed by Docker, refer to &lt;a href=&quot;../index&quot;&gt;Docker Engine plugin system&lt;/a&gt;.</source>
          <target state="translated">このドキュメントでは、Docker Engineで一般的に利用可能なDocker Engineプラグインについて説明します。Dockerが管理するプラグインの情報を表示するには、&lt;a href=&quot;../index&quot;&gt;Docker Engineプラグインシステムを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3a6bfc98e4ea8d246879d5a991655ac15af82d7d" translate="yes" xml:space="preserve">
          <source>This document is for anyone who wants to run their own Notary service (such as those who want to use Notary with a private Docker registry). Running a Notary service requires that you are already familiar with using &lt;a href=&quot;https://docs.docker.com/config/daemon&quot;&gt;Docker Engine&lt;/a&gt; and &lt;a href=&quot;../../compose/index&quot;&gt;Docker Compose&lt;/a&gt;.</source>
          <target state="translated">このドキュメントは、独自のNotaryサービスを実行したい人（プライベートDockerレジストリでNotaryを使用したい人など）を対象としています。Notaryサービスを実行するには、&lt;a href=&quot;https://docs.docker.com/config/daemon&quot;&gt;Docker Engine&lt;/a&gt;と&lt;a href=&quot;../../compose/index&quot;&gt;Docker Composeの&lt;/a&gt;使用に精通している必要があります。</target>
        </trans-unit>
        <trans-unit id="667ba7c5086cd3f9086bb97fe691713d68d06fdf" translate="yes" xml:space="preserve">
          <source>This document is for power users of the &lt;a href=&quot;../../advanced_usage/index&quot;&gt;Notary client&lt;/a&gt; who want to facilitate CLI interaction or specify custom options.</source>
          <target state="translated">このドキュメントは、CLIの相互作用を促進したり、カスタムオプションを指定したりする&lt;a href=&quot;../../advanced_usage/index&quot;&gt;Notaryクライアントの&lt;/a&gt;パワーユーザーを対象としています。</target>
        </trans-unit>
        <trans-unit id="d14334b6cf15bb6366cf71f20d5f69c1e4bdd6ea" translate="yes" xml:space="preserve">
          <source>This document is for power users of the &lt;a href=&quot;../advanced_usage/index&quot;&gt;notary client&lt;/a&gt;, or for those who are &lt;a href=&quot;../running_a_service/index&quot;&gt;running their own service&lt;/a&gt; who want to facilitate CLI interaction or specify custom options.</source>
          <target state="translated">このドキュメントは、&lt;a href=&quot;../advanced_usage/index&quot;&gt;公証クライアントの&lt;/a&gt;パワーユーザー、または&lt;a href=&quot;../running_a_service/index&quot;&gt;独自のサービス&lt;/a&gt;を実行していて、 CLIの相互作用を促進したり、カスタムオプションを指定したりするユーザーを対象としています。</target>
        </trans-unit>
        <trans-unit id="336585c13b95433518135a03992347242015d28d" translate="yes" xml:space="preserve">
          <source>This document is for those who are &lt;a href=&quot;../../running_a_service/index&quot;&gt;running their own Notary service&lt;/a&gt; who want to specify custom options.</source>
          <target state="translated">このドキュメントは、カスタムオプションを指定したい&lt;a href=&quot;../../running_a_service/index&quot;&gt;独自のNotaryサービス&lt;/a&gt;を実行しているユーザーを対象としています。</target>
        </trans-unit>
        <trans-unit id="a3523a80f4fb22175f1197cab78624b412918813" translate="yes" xml:space="preserve">
          <source>This document outlines the format of the V0 plugin configuration. The plugin config described herein was introduced in the Docker daemon in the &lt;a href=&quot;https://github.com/docker/docker/commit/f37117045c5398fd3dca8016ea8ca0cb47e7312b&quot;&gt;v1.12.0 release&lt;/a&gt;.</source>
          <target state="translated">このドキュメントでは、V0プラグイン構成の形式について説明します。ここで説明するプラグイン設定は、&lt;a href=&quot;https://github.com/docker/docker/commit/f37117045c5398fd3dca8016ea8ca0cb47e7312b&quot;&gt;v1.12.0リリースの&lt;/a&gt; Dockerデーモンで導入されました。</target>
        </trans-unit>
        <trans-unit id="88801665323f52ce7e37ca0d98754639e1876f23" translate="yes" xml:space="preserve">
          <source>This document&amp;rsquo;s command examples omit the &lt;code&gt;-s&lt;/code&gt; and &lt;code&gt;-d&lt;/code&gt; flags. If you do not know what these options do, read the &lt;a href=&quot;../getting_started/index&quot;&gt;Getting Started&lt;/a&gt; docs or run &lt;code&gt;notary --help&lt;/code&gt; before continuing. Once you understand what these flags do, you must provide your own values for these options while following this document. You can also configure these options, see &lt;a href=&quot;../reference/index&quot;&gt;advanced configuration options&lt;/a&gt; for more information.</source>
          <target state="translated">このドキュメントのコマンド例では、 &lt;code&gt;-s&lt;/code&gt; フラグと &lt;code&gt;-d&lt;/code&gt; フラグを省略しています。これらのオプションの機能がわからない場合は、先に進む前に、&lt;a href=&quot;../getting_started/index&quot;&gt;Getting Started&lt;/a&gt;ドキュメントを読むか、 &lt;code&gt;notary --help&lt;/code&gt; を実行してください。これらのフラグの機能を理解したら、このドキュメントに従って、これらのオプションに独自の値を指定する必要があります。これらのオプションを構成することもできます。詳細について&lt;a href=&quot;../reference/index&quot;&gt;は&lt;/a&gt;、詳細構成オプションを参照してください。</target>
        </trans-unit>
        <trans-unit id="9ca6ae0c176ba4178b4b3258f721cfed1ca466f8" translate="yes" xml:space="preserve">
          <source>This does not remove images from a registry. You cannot remove an image of a running container unless you use the &lt;code&gt;-f&lt;/code&gt; option. To see all images on a host use the &lt;a href=&quot;../images/index&quot;&gt;&lt;code&gt;docker image ls&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">これは、レジストリからイメージを削除しません。 &lt;code&gt;-f&lt;/code&gt; オプションを使用しない限り、実行中のコンテナのイメージを削除することはできません。ホスト上のすべてのイメージを表示するには、&lt;a href=&quot;../images/index&quot;&gt; &lt;code&gt;docker image ls&lt;/code&gt; &lt;/a&gt;コマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="29c95833fd291c916b66a22ef975e69524fe0812" translate="yes" xml:space="preserve">
          <source>This doesn&amp;rsquo;t affect regular web apps, but reduces the vectors of attack by malicious users considerably. By default Docker drops all capabilities except &lt;a href=&quot;https://github.com/moby/moby/blob/master/oci/defaults.go#L14-L30&quot;&gt;those needed&lt;/a&gt;, a whitelist instead of a blacklist approach. You can see a full list of available capabilities in &lt;a href=&quot;http://man7.org/linux/man-pages/man7/capabilities.7.html&quot;&gt;Linux manpages&lt;/a&gt;.</source>
          <target state="translated">これは通常のWebアプリには影響しませんが、悪意のあるユーザーによる攻撃のベクトルを大幅に減らします。デフォルトでは、Dockerは&lt;a href=&quot;https://github.com/moby/moby/blob/master/oci/defaults.go#L14-L30&quot;&gt;必要な&lt;/a&gt;機能を除くすべての機能を削除します。つまり、ブラックリストアプローチではなくホワイトリストです。&lt;a href=&quot;http://man7.org/linux/man-pages/man7/capabilities.7.html&quot;&gt;Linuxのマンページ&lt;/a&gt;で使用可能な機能の完全なリストを確認できます。</target>
        </trans-unit>
        <trans-unit id="a43a9520de487587d0fbcc7ec2262af5285678e1" translate="yes" xml:space="preserve">
          <source>This entire section is optional. However, if you would like authentication for your server, then you need the required parameters below to configure it.</source>
          <target state="translated">このセクション全体はオプションです。ただし、サーバの認証を行いたい場合は、以下のパラメータを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="3a433067a0a5e5fcc3e2fd416075fa3c8f721f5e" translate="yes" xml:space="preserve">
          <source>This entire section is optional. However, if you would like to specify a different log level, then you need the required parameters below to configure it.</source>
          <target state="translated">このセクション全体はオプションです。ただし、別のログレベルを指定したい場合は、以下の必要なパラメータを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="8ea48ec9b38860daa76dd08decddeba0cb452ba2" translate="yes" xml:space="preserve">
          <source>This entire section is optional. If you want to report errors to Bugsnag, then you need to include a &lt;code&gt;bugsnag&lt;/code&gt; subsection, along with the required parameters below, to configure it.</source>
          <target state="translated">このセクション全体はオプションです。Bugsnagにエラーを報告する場合は、 &lt;code&gt;bugsnag&lt;/code&gt; サブセクションと、以下の必須パラメーターを含めて構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="2f77a7d533cc24ee410fe3e4b950ec5a19938c5e" translate="yes" xml:space="preserve">
          <source>This example assumes that you have PowerShell installed.</source>
          <target state="translated">この例では、PowerShell がインストールされていることを前提としています。</target>
        </trans-unit>
        <trans-unit id="579d25d3fa42da9cf3b7765d1ba3889e8d54df66" translate="yes" xml:space="preserve">
          <source>This example assumes the VPC ID was found in the &lt;code&gt;a&lt;/code&gt; availability zone. Use the&lt;code&gt;--amazonec2-zone&lt;/code&gt; flag to specify a zone other than the &lt;code&gt;a&lt;/code&gt; zone. For example, &lt;code&gt;--amazonec2-zone c&lt;/code&gt; signifies &lt;code&gt;us-east1-c&lt;/code&gt;.</source>
          <target state="translated">この例では &lt;code&gt;a&lt;/code&gt; アベイラビリティーゾーンでVPC IDが見つかったと想定しています。使用 &lt;code&gt;--amazonec2-zone&lt;/code&gt; 以外のゾーンを指定するためのフラグをゾーンを。たとえば、-- &lt;code&gt;--amazonec2-zone c&lt;/code&gt; は &lt;code&gt;us-east1-c&lt;/code&gt; を意味します。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c7dabe53e43b79614d8438010395bf2de91947e2" translate="yes" xml:space="preserve">
          <source>This example assumes you already have an ASP.NET Core app on your machine. If you are new to ASP.NET you can follow a &lt;a href=&quot;https://www.asp.net/get-started&quot;&gt;simple tutorial&lt;/a&gt; to initialize a project or clone our &lt;a href=&quot;https://github.com/dotnet/dotnet-docker/tree/master/samples/aspnetapp&quot;&gt;ASP.NET Docker Sample&lt;/a&gt;.</source>
          <target state="translated">この例では、マシンにASP.NET Coreアプリがすでにあると想定しています。ASP.NETを初めて使用する場合は、&lt;a href=&quot;https://www.asp.net/get-started&quot;&gt;簡単なチュートリアル&lt;/a&gt;に従ってプロジェクトを初期化するか、&lt;a href=&quot;https://github.com/dotnet/dotnet-docker/tree/master/samples/aspnetapp&quot;&gt;ASP.NET Dockerサンプルを&lt;/a&gt;複製できます。</target>
        </trans-unit>
        <trans-unit id="b072eb53d731dbe872bf5499fc8375a6c9b49d0a" translate="yes" xml:space="preserve">
          <source>This example builds upon the previous one. In this scenario, you create a new secret with a new MySQL password, update the &lt;code&gt;mysql&lt;/code&gt; and &lt;code&gt;wordpress&lt;/code&gt; services to use it, then remove the old secret.</source>
          <target state="translated">この例は、前の例に基づいています。このシナリオでは、新しいMySQLパスワードで新しいシークレットを作成し、それを使用するように &lt;code&gt;mysql&lt;/code&gt; および &lt;code&gt;wordpress&lt;/code&gt; サービスを更新してから、古いシークレットを削除します。</target>
        </trans-unit>
        <trans-unit id="634e957efa7945da265880d09e1c009341ec0d3f" translate="yes" xml:space="preserve">
          <source>This example creates a simple WordPress site using two secrets in a compose file.</source>
          <target state="translated">この例では、コンポーズファイルの中の2つの秘密を使って、シンプルなWordPressサイトを作成しています。</target>
        </trans-unit>
        <trans-unit id="c0c1d508a75d41b428bb130225b60f1d0a96206d" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to dockerize an ASP.NET Core application.</source>
          <target state="translated">この例では、ASP.NET Core アプリケーションを dockerize する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="cb3e7c67c57703593b3796456e5ef4778a541b6f" translate="yes" xml:space="preserve">
          <source>This example displays images with a name containing &amp;lsquo;busybox&amp;rsquo; and are automated builds:</source>
          <target state="translated">この例は、「busybox」を含む名前の画像を表示し、自動ビルドです。</target>
        </trans-unit>
        <trans-unit id="d437f7cb185e6f0f539ce5261b7757395e2fb234" translate="yes" xml:space="preserve">
          <source>This example displays images with a name containing &amp;lsquo;busybox&amp;rsquo; and at least 3 stars:</source>
          <target state="translated">この例では、「busybox」と3つ以上の星を含む名前の画像を表示します。</target>
        </trans-unit>
        <trans-unit id="089c84ed40f5a74f086ac6569d6bd88f3bdc3419" translate="yes" xml:space="preserve">
          <source>This example displays images with a name containing &amp;lsquo;busybox&amp;rsquo;, at least 3 stars and are official builds:</source>
          <target state="translated">次の例では、「busybox」を含む名前が3つ以上の星で、公式ビルドの画像を表示しています。</target>
        </trans-unit>
        <trans-unit id="9c9f7b682bab6a44bd538f6d2618377c9d88ebf3" translate="yes" xml:space="preserve">
          <source>This example displays images with a name containing &amp;lsquo;busybox&amp;rsquo;, at least 3 stars and the description isn&amp;rsquo;t truncated in the output:</source>
          <target state="translated">次の例では、「busybox」を含む名前の画像を3つ以上の星で表示し、出力では説明が切り捨てられていません。</target>
        </trans-unit>
        <trans-unit id="6eba9c7e71f29918228f74c8055da8a02b312f1d" translate="yes" xml:space="preserve">
          <source>This example displays images with a name containing &amp;lsquo;busybox&amp;rsquo;:</source>
          <target state="translated">この例では、「busybox」を含む名前の画像を表示します。</target>
        </trans-unit>
        <trans-unit id="0a4157e43c96ca0241f93cdf0f0fd84d6e72bf92" translate="yes" xml:space="preserve">
          <source>This example illustrates some techniques to use Docker secrets to avoid saving sensitive credentials within your image or passing them directly on the command line.</source>
          <target state="translated">この例では、イメージ内に機密情報を保存したり、コマンドラインに直接渡したりすることを避けるために、Dockerの秘密を使用するテクニックをいくつか説明しています。</target>
        </trans-unit>
        <trans-unit id="dc30d391e6c1eb0cafa3fb875dba31a87120a05f" translate="yes" xml:space="preserve">
          <source>This example is divided into two parts. &lt;a href=&quot;#generate-the-site-certificate&quot;&gt;The first part&lt;/a&gt; is all about generating the site certificate and does not directly involve Docker configs at all, but it sets up &lt;a href=&quot;#configure-the-nginx-container&quot;&gt;the second part&lt;/a&gt;, where you store and use the site certificate as a series of secrets and the Nginx configuration as a config. The example shows how to set options on the config, such as the target location within the container and the file permissions (&lt;code&gt;mode&lt;/code&gt;).</source>
          <target state="translated">この例は2つの部分に分かれています。&lt;a href=&quot;#generate-the-site-certificate&quot;&gt;最初の部分&lt;/a&gt;はサイト証明書の生成に関するものであり、Dockerの構成は直接関与していませんが&lt;a href=&quot;#configure-the-nginx-container&quot;&gt;、2番目の部分&lt;/a&gt;はサイト証明書を一連のシークレットとして保存して使用し、Nginx構成を構成として使用します。この例は、コンテナー内のターゲットの場所やファイルのアクセス許可（ &lt;code&gt;mode&lt;/code&gt; ）など、構成のオプションを設定する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="be1de2e4e765f59fa609da136c95f017d2b842e4" translate="yes" xml:space="preserve">
          <source>This example is divided into two parts. &lt;a href=&quot;#generate-the-site-certificate&quot;&gt;The first part&lt;/a&gt; is all about generating the site certificate and does not directly involve Docker secrets at all, but it sets up &lt;a href=&quot;#configure-the-nginx-container&quot;&gt;the second part&lt;/a&gt;, where you store and use the site certificate and Nginx configuration as secrets.</source>
          <target state="translated">この例は2つの部分に分かれています。&lt;a href=&quot;#generate-the-site-certificate&quot;&gt;最初の部分&lt;/a&gt;はすべてサイト証明書の生成に関するものであり、Dockerシークレットは直接関与していませんが&lt;a href=&quot;#configure-the-nginx-container&quot;&gt;、2番目の部分&lt;/a&gt;ではサイト証明書とNginx構成をシークレットとして保存して使用します。</target>
        </trans-unit>
        <trans-unit id="1f44a24dd4e591c700687a4e45acdc0197fd37f3" translate="yes" xml:space="preserve">
          <source>This example outputs a table format:</source>
          <target state="translated">この例では、テーブル形式で出力します。</target>
        </trans-unit>
        <trans-unit id="e10bbbbba424e466c62818ae9402ad4263b572c7" translate="yes" xml:space="preserve">
          <source>This example removes a secret:</source>
          <target state="translated">この例では、秘密を削除しています。</target>
        </trans-unit>
        <trans-unit id="a78141592d005e659ba00e71941bf06333b14dc3" translate="yes" xml:space="preserve">
          <source>This example removes images which have a maintainer label not set to &lt;code&gt;john&lt;/code&gt;:</source>
          <target state="translated">この例では、メンテナラベルが &lt;code&gt;john&lt;/code&gt; に設定されていないイメージを削除します。</target>
        </trans-unit>
        <trans-unit id="4fac1bc679f649f868cf9d28a2903fbba45806cd" translate="yes" xml:space="preserve">
          <source>This example removes images which have no &lt;code&gt;maintainer&lt;/code&gt; label:</source>
          <target state="translated">この例では、 &lt;code&gt;maintainer&lt;/code&gt; ラベルのない画像を削除します。</target>
        </trans-unit>
        <trans-unit id="b7bae738b014b2992b003324821252fee76806dd" translate="yes" xml:space="preserve">
          <source>This example restricts the processes in the container to only use memory from memory nodes 0, 1 and 2.</source>
          <target state="translated">この例では、コンテナ内のプロセスがメモリノード 0、1、2 のメモリのみを使用するように制限しています。</target>
        </trans-unit>
        <trans-unit id="2efb21cb22c1a26daa1fb3cebf96188cfcc9da20" translate="yes" xml:space="preserve">
          <source>This example restricts the processes in the container to only use memory from memory nodes 1 and 3.</source>
          <target state="translated">この例では、コンテナ内のプロセスがメモリノード1と3のメモリのみを使用するように制限しています。</target>
        </trans-unit>
        <trans-unit id="1615ecdaa4849de43ea0c27507789f81c51f5e88" translate="yes" xml:space="preserve">
          <source>This example runs a container named &lt;code&gt;test&lt;/code&gt; using the &lt;code&gt;debian:latest&lt;/code&gt; image. The &lt;code&gt;-it&lt;/code&gt; instructs Docker to allocate a pseudo-TTY connected to the container&amp;rsquo;s stdin; creating an interactive &lt;code&gt;bash&lt;/code&gt; shell in the container. In the example, the &lt;code&gt;bash&lt;/code&gt; shell is quit by entering &lt;code&gt;exit 13&lt;/code&gt;. This exit code is passed on to the caller of &lt;code&gt;docker run&lt;/code&gt;, and is recorded in the &lt;code&gt;test&lt;/code&gt; container&amp;rsquo;s metadata.</source>
          <target state="translated">この例では、 &lt;code&gt;debian:latest&lt;/code&gt; イメージを使用して &lt;code&gt;test&lt;/code&gt; という名前のコンテナーを実行します。 &lt;code&gt;-it&lt;/code&gt; 擬似TTYを割り当てるドッカー指示するには、コンテナの標準入力に接続されています。コンテナにインタラクティブな &lt;code&gt;bash&lt;/code&gt; シェルを作成します。この例では、 &lt;code&gt;bash&lt;/code&gt; シェルは &lt;code&gt;exit 13&lt;/code&gt; と入力して終了します。この終了コードは &lt;code&gt;docker run&lt;/code&gt; の呼び出し元に渡され、 &lt;code&gt;test&lt;/code&gt; コンテナーのメタデータに記録されます。</target>
        </trans-unit>
        <trans-unit id="eb97a2b62dfc69be5a36c6d8bc3dd5f0ec7ee3c4" translate="yes" xml:space="preserve">
          <source>This example sets the &lt;code&gt;cgroupdriver&lt;/code&gt; to &lt;code&gt;systemd&lt;/code&gt;:</source>
          <target state="translated">この例では、 &lt;code&gt;cgroupdriver&lt;/code&gt; を &lt;code&gt;systemd&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="f317281bd83742e369f8b299317ea97212757fdd" translate="yes" xml:space="preserve">
          <source>This example sets the template of the created containers based on the service&amp;rsquo;s name and the ID of the node where the container is running:</source>
          <target state="translated">この例では、サービスの名前とコンテナーが実行されているノードのIDに基づいて、作成されたコンテナーのテンプレートを設定します。</target>
        </trans-unit>
        <trans-unit id="f1c28c6b74588071e6ca6b916879bfae7ddcb3ef" translate="yes" xml:space="preserve">
          <source>This example shows a named volume (&lt;code&gt;mydata&lt;/code&gt;) being used by the &lt;code&gt;web&lt;/code&gt; service, and a bind mount defined for a single service (first path under &lt;code&gt;db&lt;/code&gt; service &lt;code&gt;volumes&lt;/code&gt;). The &lt;code&gt;db&lt;/code&gt; service also uses a named volume called &lt;code&gt;dbdata&lt;/code&gt; (second path under &lt;code&gt;db&lt;/code&gt; service &lt;code&gt;volumes&lt;/code&gt;), but defines it using the old string format for mounting a named volume. Named volumes must be listed under the top-level &lt;code&gt;volumes&lt;/code&gt; key, as shown.</source>
          <target state="translated">この例は、 &lt;code&gt;web&lt;/code&gt; サービスによって使用されている名前付きボリューム（ &lt;code&gt;mydata&lt;/code&gt; ）と、単一のサービス（ &lt;code&gt;db&lt;/code&gt; サービス &lt;code&gt;volumes&lt;/code&gt; 下の最初のパス）に対して定義されたバインドマウントを示しています。 &lt;code&gt;db&lt;/code&gt; サービスも呼ばれるというボリューム使用 &lt;code&gt;dbdata&lt;/code&gt; の（下の第二のパス &lt;code&gt;db&lt;/code&gt; サービス &lt;code&gt;volumes&lt;/code&gt; ）が、名前付きボリュームをマウントするための古い文字列のフォーマットを定義する使用します。次のように、名前付きボリュームは最上位の &lt;code&gt;volumes&lt;/code&gt; キーの下にリストされている必要があります。</target>
        </trans-unit>
        <trans-unit id="c7d23c49b05f34f0a627a12996b69b8ce821a609" translate="yes" xml:space="preserve">
          <source>This example shows the use of the &lt;code&gt;.dockerignore&lt;/code&gt; file to exclude the &lt;code&gt;.git&lt;/code&gt; directory from the context. Its effect can be seen in the changed size of the uploaded context. The builder reference contains detailed information on &lt;a href=&quot;../../builder/index#dockerignore-file&quot;&gt;creating a .dockerignore file&lt;/a&gt;</source>
          <target state="translated">この例では、 &lt;code&gt;.dockerignore&lt;/code&gt; ファイルを使用して、 &lt;code&gt;.git&lt;/code&gt; ディレクトリをコンテキストから除外しています。その効果は、アップロードされたコンテキストの変更されたサイズで確認できます。ビルダーリファレンスには&lt;a href=&quot;../../builder/index#dockerignore-file&quot;&gt;、.dockerignoreファイルの作成&lt;/a&gt;に関する詳細情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="d6a87fde5df555e0d28b2a6a18a7d2a7dafe05be" translate="yes" xml:space="preserve">
          <source>This example specifies that the &lt;code&gt;PATH&lt;/code&gt; is &lt;code&gt;.&lt;/code&gt;, and so all the files in the local directory get &lt;code&gt;tar&lt;/code&gt;d and sent to the Docker daemon. The &lt;code&gt;PATH&lt;/code&gt; specifies where to find the files for the &amp;ldquo;context&amp;rdquo; of the build on the Docker daemon. Remember that the daemon could be running on a remote machine and that no parsing of the Dockerfile happens at the client side (where you&amp;rsquo;re running &lt;code&gt;docker build&lt;/code&gt;). That means that &lt;em&gt;all&lt;/em&gt; the files at &lt;code&gt;PATH&lt;/code&gt; get sent, not just the ones listed to &lt;a href=&quot;../../builder/index#add&quot;&gt;&lt;em&gt;ADD&lt;/em&gt;&lt;/a&gt; in the Dockerfile.</source>
          <target state="translated">この例では、 &lt;code&gt;PATH&lt;/code&gt; がであることを指定しています &lt;code&gt;.&lt;/code&gt; 、したがって、ローカルディレクトリ内のすべてのファイルは &lt;code&gt;tar&lt;/code&gt; dを取得し、Dockerデーモンに送信されます。 &lt;code&gt;PATH&lt;/code&gt; のドッカーデーモンにビルドの「文脈」のファイルを検索する場所を指定します。デーモンはリモートマシンで実行されている可能性があり、Dockerfileの解析はクライアント側（docker &lt;code&gt;docker build&lt;/code&gt; 実行している場所）では発生しないことに注意してください。つまり、Dockerfileで&lt;a href=&quot;../../builder/index#add&quot;&gt;&lt;em&gt;ADD&lt;/em&gt;&lt;/a&gt;にリストされているファイルだけでなく、 &lt;code&gt;PATH&lt;/code&gt; にある&lt;em&gt;すべて&lt;/em&gt;のファイルが送信されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3f1b4b2ec0107a4788eeb351035b6620a00bc3a1" translate="yes" xml:space="preserve">
          <source>This exposes port &lt;code&gt;80&lt;/code&gt; of the container without publishing the port to the host system&amp;rsquo;s interfaces.</source>
          <target state="translated">これにより、ポートをホストシステムのインターフェースに公開することなく、コンテナーのポート &lt;code&gt;80&lt;/code&gt; が公開されます。</target>
        </trans-unit>
        <trans-unit id="7973f46d933381d3f9e97acb9d3166e3b57f94f6" translate="yes" xml:space="preserve">
          <source>This feature is available only if Docker has been built with &lt;code&gt;seccomp&lt;/code&gt; and the kernel is configured with &lt;code&gt;CONFIG_SECCOMP&lt;/code&gt; enabled. To check if your kernel supports &lt;code&gt;seccomp&lt;/code&gt;:</source>
          <target state="translated">この機能は、ドッカーがで構築されている場合にのみ使用可能です &lt;code&gt;seccomp&lt;/code&gt; とカーネルがで構成されて &lt;code&gt;CONFIG_SECCOMP&lt;/code&gt; 有効。カーネルが &lt;code&gt;seccomp&lt;/code&gt; をサポートしているかどうかを確認するには：</target>
        </trans-unit>
        <trans-unit id="070122dfb768dc53f7d3aef23f672a47650e34a7" translate="yes" xml:space="preserve">
          <source>This feature is only available when using the &lt;a href=&quot;#buildkit&quot;&gt;BuildKit&lt;/a&gt; backend.</source>
          <target state="translated">この機能は、&lt;a href=&quot;#buildkit&quot;&gt;BuildKit&lt;/a&gt;バックエンドを使用する場合にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="48d0a8489f237e78c64950cced8d3f332a402517" translate="yes" xml:space="preserve">
          <source>This feature is only enabled if the &lt;a href=&quot;#buildkit&quot;&gt;BuildKit&lt;/a&gt; backend is used.</source>
          <target state="translated">この機能は、&lt;a href=&quot;#buildkit&quot;&gt;BuildKit&lt;/a&gt;バックエンドが使用されている場合にのみ有効になります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
