<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="docker">
    <body>
      <group id="docker">
        <trans-unit id="eebe9104739b4ddc24f4917369dc395e741187b7" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;process&lt;/code&gt; isolation, Windows will report the full memory of the host system, not the limit to applications running inside the container</source>
          <target state="translated">&lt;code&gt;process&lt;/code&gt; 分離により、Windowsは、コンテナー内で実行されているアプリケーションの制限ではなく、ホストシステムの全メモリを報告します</target>
        </trans-unit>
        <trans-unit id="58efa2b2d39c31cfffa144087dd258130dd356e9" translate="yes" xml:space="preserve">
          <source>With Docker, scaling your application is a matter of spinning up new executables, not running heavy VM hosts.</source>
          <target state="translated">Dockerを使えば、アプリケーションをスケーリングするのは新しい実行ファイルを回転させることであり、重いVMホストを動かすことではありません。</target>
        </trans-unit>
        <trans-unit id="61cddedb66e0f9ea7fd22d81cbb03a26bfe2e212" translate="yes" xml:space="preserve">
          <source>With Docker, you can just grab a portable Python runtime as an image, no installation necessary. Then, your build can include the base Python image right alongside your app code, ensuring that your app, its dependencies, and the runtime, all travel together.</source>
          <target state="translated">Dockerを使えば、ポータブルなPythonランタイムをイメージとして取得するだけで、インストールの必要はありません。そして、あなたのビルドはアプリコードのすぐ横にベースのPythonイメージを含めることができ、アプリ、その依存関係、ランタイムのすべてが一緒に移動することを保証します。</target>
        </trans-unit>
        <trans-unit id="37bad010e2cd58f45342ef096a488bf3909e16b7" translate="yes" xml:space="preserve">
          <source>With Notary anyone can provide trust over arbitrary collections of data. Using &lt;a href=&quot;https://www.theupdateframework.com/&quot;&gt;The Update Framework (TUF)&lt;/a&gt; as the underlying security framework, Notary takes care of the operations necessary to create, manage, and distribute the metadata necessary to ensure the integrity and freshness of your content.</source>
          <target state="translated">Notaryを使用すると、誰でも任意のデータコレクションを信頼できます。使用して&lt;a href=&quot;https://www.theupdateframework.com/&quot;&gt;更新フレームワーク（TUF）の&lt;/a&gt;基礎となるセキュリティフレームワークとして、公証人は、あなたのコンテンツの完全性と鮮度を確保するために必要なメタデータを作成、管理、および配布するために必要な操作の世話をします。</target>
        </trans-unit>
        <trans-unit id="0a92ea73623f42a7ed7859133e5131f3537373bd" translate="yes" xml:space="preserve">
          <source>With Powershell on Windows, you can run:</source>
          <target state="translated">WindowsのPowershellでは、実行することができます。</target>
        </trans-unit>
        <trans-unit id="fe324941b4a009c8cfb7175cec6a97b50a0a711b" translate="yes" xml:space="preserve">
          <source>With a default &lt;code&gt;umask&lt;/code&gt; of 022, your secret keys are &lt;em&gt;world-readable&lt;/em&gt; and writable for you and your group.</source>
          <target state="translated">デフォルトの &lt;code&gt;umask&lt;/code&gt; が022の場合、秘密鍵はあなたとあなたのグループが誰でも&lt;em&gt;読み取り&lt;/em&gt;および書き込み可能です。</target>
        </trans-unit>
        <trans-unit id="cb0818635ac8a3af4edf083039921ea30fd5f980" translate="yes" xml:space="preserve">
          <source>With oh-my-zsh shell</source>
          <target state="translated">oh-my-zsh シェルで</target>
        </trans-unit>
        <trans-unit id="69763183dcf3289e12d96689202dcde31006e31e" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;--json&lt;/code&gt; flag, a json object is printed one per line with the format:</source>
          <target state="translated">&lt;code&gt;--json&lt;/code&gt; フラグ、JSONオブジェクトは、フォーマットの1行に1つずつ印刷されます。</target>
        </trans-unit>
        <trans-unit id="9ded9d96a557e6ca2b4db66139b54ba5edc72a78" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;docker run [OPTIONS]&lt;/code&gt; an operator can add to or override the image defaults set by a developer. And, additionally, operators can override nearly all the defaults set by the Docker runtime itself. The operator&amp;rsquo;s ability to override image and Docker runtime defaults is why &lt;a href=&quot;../commandline/run/index&quot;&gt;&lt;em&gt;run&lt;/em&gt;&lt;/a&gt; has more options than any other &lt;code&gt;docker&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;docker run [OPTIONS]&lt;/code&gt; オペレータが追加または開発者によって設定された画像のデフォルト値を上書きすることができます。さらに、オペレーターはDockerランタイム自体によって設定されたほぼすべてのデフォルトをオーバーライドできます。オペレーターがイメージとDockerランタイムのデフォルトをオーバーライドできるため、&lt;a href=&quot;../commandline/run/index&quot;&gt;&lt;em&gt;runに&lt;/em&gt;&lt;/a&gt;は他のどの &lt;code&gt;docker&lt;/code&gt; コマンドよりも多くのオプションがあります。</target>
        </trans-unit>
        <trans-unit id="59a89e573faa626b56e0598784a48f4a0e415652" translate="yes" xml:space="preserve">
          <source>With the advent of &lt;a href=&quot;https://docs.docker.com/docker-for-mac/&quot;&gt;Docker Desktop for Mac&lt;/a&gt; and &lt;a href=&quot;https://docs.docker.com/docker-for-windows/&quot;&gt;Docker Desktop for Windows&lt;/a&gt; as replacements for &lt;a href=&quot;https://docs.docker.com/toolbox/overview/&quot;&gt;Docker Toolbox&lt;/a&gt;, we recommend that you use these for your primary Docker workflows. You can use these applications to run Docker natively on your local system without using Docker Machine at all. (See &lt;a href=&quot;https://docs.docker.com/docker-for-mac/docker-toolbox/&quot;&gt;Docker Desktop for Mac vs. Docker Toolbox&lt;/a&gt; for an explanation on the Mac side.)</source>
          <target state="translated">&lt;a href=&quot;https://docs.docker.com/toolbox/overview/&quot;&gt;Docker Toolbox&lt;/a&gt;に代わるものとして&lt;a href=&quot;https://docs.docker.com/docker-for-mac/&quot;&gt;Docker Desktop for Mac&lt;/a&gt;および&lt;a href=&quot;https://docs.docker.com/docker-for-windows/&quot;&gt;Docker Desktop for Windows&lt;/a&gt;が登場したため、これらをプライマリDockerワークフローに使用することをお勧めします。これらのアプリケーションを使用すると、Docker Machineをまったく使用せずに、ローカルシステムでネイティブにDockerを実行できます。（Mac側の説明については、&lt;a href=&quot;https://docs.docker.com/docker-for-mac/docker-toolbox/&quot;&gt;Docker Desktop for MacとDocker Toolbox&lt;/a&gt;を比較してください。）</target>
        </trans-unit>
        <trans-unit id="7014fb1ca72cc6aafa4933dd158884cd852fb2dd" translate="yes" xml:space="preserve">
          <source>With the exception of the &lt;code&gt;--kernel-memory&lt;/code&gt; option, you can specify these options on a running or a stopped container. On kernel version older than 4.6, you can only update &lt;code&gt;--kernel-memory&lt;/code&gt; on a stopped container or on a running container with kernel memory initialized.</source>
          <target state="translated">&lt;code&gt;--kernel-memory&lt;/code&gt; オプションを除いて、実行中または停止中のコンテナーでこれらのオプションを指定できます。4.6より古いカーネルバージョンでは、停止されたコンテナーまたは実行中のコンテナーで、カーネルメモリが初期化された &lt;code&gt;--kernel-memory&lt;/code&gt; のみを更新できます。</target>
        </trans-unit>
        <trans-unit id="12434abd7b4e627f72b0841477a6e98c3107f1c7" translate="yes" xml:space="preserve">
          <source>With the exception of the &lt;code&gt;EXPOSE&lt;/code&gt; directive, an image developer hasn&amp;rsquo;t got much control over networking. The &lt;code&gt;EXPOSE&lt;/code&gt; instruction defines the initial incoming ports that provide services. These ports are available to processes inside the container. An operator can use the &lt;code&gt;--expose&lt;/code&gt; option to add to the exposed ports.</source>
          <target state="translated">&lt;code&gt;EXPOSE&lt;/code&gt; ディレクティブを除いて、イメージ開発者はネットワークをあまり制御できません。 &lt;code&gt;EXPOSE&lt;/code&gt; 命令は、サービスを提供する最初の着信ポートを定義します。これらのポートは、コンテナー内のプロセスで使用できます。オペレーターは &lt;code&gt;--expose&lt;/code&gt; オプションを使用して、公開されたポートに追加できます。</target>
        </trans-unit>
        <trans-unit id="815f4c6b9b975da3e61ec0447769875b20d8e50e" translate="yes" xml:space="preserve">
          <source>With the flag &lt;code&gt;--virtualbox-share-folder&lt;/code&gt;, you can specify which folder the host shares with the created machine. The format is &lt;code&gt;local-folder:machine-folder&lt;/code&gt;. For example, &lt;code&gt;\\?\C:\docker-share:\home\users\&lt;/code&gt;. if you specify the flag with the docker-toolbox using docker-machine from a Windows cmd, it looks like &lt;code&gt;C:\docker-share\\:/home/users&lt;/code&gt;. The &lt;code&gt;:&lt;/code&gt; sign needs to be escaped.</source>
          <target state="translated">フラグ &lt;code&gt;--virtualbox-share-folder&lt;/code&gt; を使用すると、作成したマシンとホストが共有するフォルダーを指定できます。形式は &lt;code&gt;local-folder:machine-folder&lt;/code&gt; です。たとえば、 &lt;code&gt;\\?\C:\docker-share:\home\users\&lt;/code&gt; です。Windows cmdのdocker-machineを使用してdocker-toolboxでフラグを指定すると、 &lt;code&gt;C:\docker-share\\:/home/users&lt;/code&gt; 。 &lt;code&gt;:&lt;/code&gt; 記号はエスケープする必要があります。</target>
        </trans-unit>
        <trans-unit id="da79b12135af4217b5272590f806134720c2d84b" translate="yes" xml:space="preserve">
          <source>With the network is &lt;code&gt;none&lt;/code&gt; a container will not have access to any external routes. The container will still have a &lt;code&gt;loopback&lt;/code&gt; interface enabled in the container but it does not have any routes to external traffic.</source>
          <target state="translated">ネットワークが存在し &lt;code&gt;none&lt;/code&gt; 、コンテナは外部ルートにアクセスできません。コンテナーはまだコンテナーで有効な &lt;code&gt;loopback&lt;/code&gt; インターフェイスを持っていますが、外部トラフィックへのルートはありません。</target>
        </trans-unit>
        <trans-unit id="19c2b76a385e021990ce1a68ee2f4a51f0ba22a5" translate="yes" xml:space="preserve">
          <source>With the network set to &lt;code&gt;bridge&lt;/code&gt; a container will use docker&amp;rsquo;s default networking setup. A bridge is setup on the host, commonly named &lt;code&gt;docker0&lt;/code&gt;, and a pair of &lt;code&gt;veth&lt;/code&gt; interfaces will be created for the container. One side of the &lt;code&gt;veth&lt;/code&gt; pair will remain on the host attached to the bridge while the other side of the pair will be placed inside the container&amp;rsquo;s namespaces in addition to the &lt;code&gt;loopback&lt;/code&gt; interface. An IP address will be allocated for containers on the bridge&amp;rsquo;s network and traffic will be routed though this bridge to the container.</source>
          <target state="translated">ネットワークが &lt;code&gt;bridge&lt;/code&gt; 設定されている場合、コンテナはDockerのデフォルトのネットワーク設定を使用します。ホストにブリッジがセットアップされ、一般的に &lt;code&gt;docker0&lt;/code&gt; という名前が付けられ、コンテナー用に &lt;code&gt;veth&lt;/code&gt; インターフェイスのペアが作成されます。片側 &lt;code&gt;veth&lt;/code&gt; 対の他方の側は他にコンテナの名前空間の内部に配置される一方の対はブリッジに接続されたホストに残る &lt;code&gt;loopback&lt;/code&gt; インタフェース。ブリッジのネットワーク上のコンテナにIPアドレスが割り当てられ、トラフィックはこのブリッジを経由してコンテナにルーティングされます。</target>
        </trans-unit>
        <trans-unit id="a6f2863e70bbcbcc2ed114cb2b301af2d84c4e8f" translate="yes" xml:space="preserve">
          <source>With the network set to &lt;code&gt;container&lt;/code&gt; a container will share the network stack of another container. The other container&amp;rsquo;s name must be provided in the format of &lt;code&gt;--network container:&amp;lt;name|id&amp;gt;&lt;/code&gt;. Note that &lt;code&gt;--add-host&lt;/code&gt;&lt;code&gt;--hostname&lt;/code&gt;&lt;code&gt;--dns&lt;/code&gt;&lt;code&gt;--dns-search&lt;/code&gt;&lt;code&gt;--dns-option&lt;/code&gt; and &lt;code&gt;--mac-address&lt;/code&gt; are invalid in &lt;code&gt;container&lt;/code&gt; netmode, and &lt;code&gt;--publish&lt;/code&gt;&lt;code&gt;--publish-all&lt;/code&gt;&lt;code&gt;--expose&lt;/code&gt; are also invalid in &lt;code&gt;container&lt;/code&gt; netmode.</source>
          <target state="translated">ネットワークを &lt;code&gt;container&lt;/code&gt; 設定すると、コンテナーは別のコンテナーのネットワークスタックを共有します。他のコンテナの名前は &lt;code&gt;--network container:&amp;lt;name|id&amp;gt;&lt;/code&gt; の形式で提供する必要があります。なお、 &lt;code&gt;--add-host&lt;/code&gt; &lt;code&gt;--hostname&lt;/code&gt; &lt;code&gt;--dns&lt;/code&gt; &lt;code&gt;--dns-search&lt;/code&gt; &lt;code&gt;--dns-option&lt;/code&gt; と &lt;code&gt;--mac-address&lt;/code&gt; で無効である &lt;code&gt;container&lt;/code&gt; 、netmodeと &lt;code&gt;--publish&lt;/code&gt; &lt;code&gt;--publish-all&lt;/code&gt; &lt;code&gt;--expose&lt;/code&gt; でも無効ですで &lt;code&gt;container&lt;/code&gt; netmode。</target>
        </trans-unit>
        <trans-unit id="f68ebc247df08633a146ec209c42cfa8b3e20250" translate="yes" xml:space="preserve">
          <source>With the network set to &lt;code&gt;host&lt;/code&gt; a container will share the host&amp;rsquo;s network stack and all interfaces from the host will be available to the container. The container&amp;rsquo;s hostname will match the hostname on the host system. Note that &lt;code&gt;--mac-address&lt;/code&gt; is invalid in &lt;code&gt;host&lt;/code&gt; netmode. Even in &lt;code&gt;host&lt;/code&gt; network mode a container has its own UTS namespace by default. As such &lt;code&gt;--hostname&lt;/code&gt; and &lt;code&gt;--domainname&lt;/code&gt; are allowed in &lt;code&gt;host&lt;/code&gt; network mode and will only change the hostname and domain name inside the container. Similar to &lt;code&gt;--hostname&lt;/code&gt;, the &lt;code&gt;--add-host&lt;/code&gt;, &lt;code&gt;--dns&lt;/code&gt;, &lt;code&gt;--dns-search&lt;/code&gt;, and &lt;code&gt;--dns-option&lt;/code&gt; options can be used in &lt;code&gt;host&lt;/code&gt; network mode. These options update &lt;code&gt;/etc/hosts&lt;/code&gt; or &lt;code&gt;/etc/resolv.conf&lt;/code&gt; inside the container. No change are made to &lt;code&gt;/etc/hosts&lt;/code&gt; and &lt;code&gt;/etc/resolv.conf&lt;/code&gt; on the host.</source>
          <target state="translated">ネットワークがコンテナを &lt;code&gt;host&lt;/code&gt; するように設定されていると、ホストのネットワークスタックが共有され、ホストからのすべてのインターフェースがコンテナで使用可能になります。コンテナのホスト名は、ホストシステムのホスト名と一致します。 &lt;code&gt;--mac-address&lt;/code&gt; は &lt;code&gt;host&lt;/code&gt; ネットモードでは無効であることに注意してください。 &lt;code&gt;host&lt;/code&gt; ネットワークモードであっても、コンテナにはデフォルトで独自のUTS名前空間があります。そのよう &lt;code&gt;--hostname&lt;/code&gt; と &lt;code&gt;--domainname&lt;/code&gt; で許可され &lt;code&gt;host&lt;/code&gt; ネットワークモードのみ容器内のホスト名とドメイン名を変更します。 &lt;code&gt;--hostname&lt;/code&gt; と同様に、 &lt;code&gt;--add-host&lt;/code&gt; &lt;code&gt;--dns&lt;/code&gt; -host、-- dns、-- &lt;code&gt;--dns-search&lt;/code&gt; 、および &lt;code&gt;--dns-option&lt;/code&gt; オプションは、 &lt;code&gt;host&lt;/code&gt; ネットワークモードで使用できます。これらのオプションは、コンテナ内の &lt;code&gt;/etc/hosts&lt;/code&gt; または &lt;code&gt;/etc/resolv.conf&lt;/code&gt; を更新します。 &lt;code&gt;/etc/hosts&lt;/code&gt; および &lt;code&gt;/etc/resolv.conf&lt;/code&gt; は変更されません。</target>
        </trans-unit>
        <trans-unit id="6709b8c72a05b4506166d188d13325ddc8910f94" translate="yes" xml:space="preserve">
          <source>With these two options enabled, if a device is busy when the driver is deleting a container, the driver marks the device as deleted. Later, when the device isn&amp;rsquo;t in use, the driver deletes it.</source>
          <target state="translated">これら2つのオプションを有効にすると、ドライバーがコンテナーを削除しているときにデバイスがビジー状態の場合、ドライバーはデバイスを削除済みとしてマークします。その後、デバイスが使用されていないときに、ドライバーがそれを削除します。</target>
        </trans-unit>
        <trans-unit id="ffd0f6da8dc10c3faf0a9249df8b70e060521352" translate="yes" xml:space="preserve">
          <source>With this command you may apply an existing Docker enterprise license, or interactively download one from Docker. In the interactive exchange, you can sign up for a new trial, or download an existing license. If you are currently running a Community Edition engine, the daemon will be updated to the Enterprise Edition Docker engine with additional capabilities and long term support.</source>
          <target state="translated">このコマンドを使うと、既存のDockerエンタープライズライセンスを適用したり、Dockerからインタラクティブにライセンスをダウンロードしたりすることができます。対話的なやりとりでは、新しいトライアルにサインアップしたり、既存のライセンスをダウンロードしたりすることができます。現在Community Editionエンジンを実行している場合は、デーモンがEnterprise EditionのDockerエンジンにアップデートされ、機能が追加され、長期的なサポートを受けることができます。</target>
        </trans-unit>
        <trans-unit id="65633f0f9893ece9d45a6bc0213ed6e742b27e34" translate="yes" xml:space="preserve">
          <source>With those files in place, you can now generate the Rails skeleton app using &lt;a href=&quot;../reference/run/index&quot;&gt;docker-compose run&lt;/a&gt;:</source>
          <target state="translated">これらのファイルを配置したら、&lt;a href=&quot;../reference/run/index&quot;&gt;docker-compose run&lt;/a&gt;を使用してRailsスケルトンアプリを生成できます。</target>
        </trans-unit>
        <trans-unit id="1a7acd3f86e4731e877c5aeafc9dbc4ffe99c1b1" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;trustsandbox&lt;/code&gt; container, you interact with your local registry rather than the Docker Hub. This means your everyday image repositories are not used. They are protected while you play.</source>
          <target state="translated">&lt;code&gt;trustsandbox&lt;/code&gt; コンテナー内では、Docker Hubではなくローカルレジストリを操作します。つまり、日常のイメージリポジトリは使用されません。プレイ中は保護されます。</target>
        </trans-unit>
        <trans-unit id="74c6f0b79abbfd282cfb559840bf123c77a407aa" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;web&lt;/code&gt; container, your connection string to &lt;code&gt;db&lt;/code&gt; would look like &lt;code&gt;postgres://db:5432&lt;/code&gt;, and from the host machine, the connection string would look like &lt;code&gt;postgres://{DOCKER_IP}:8001&lt;/code&gt;.</source>
          <target state="translated">内 &lt;code&gt;web&lt;/code&gt; コンテナへの接続文字列 &lt;code&gt;db&lt;/code&gt; 次のようになります &lt;code&gt;postgres://db:5432&lt;/code&gt; 、およびホストマシンから、接続文字列は次のようになり &lt;code&gt;postgres://{DOCKER_IP}:8001&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed061b3596fbcd0b31a534c78f007746a7ab1241" translate="yes" xml:space="preserve">
          <source>Within the Docker CLI we can sign and push a container image with the &lt;code&gt;$ docker trust&lt;/code&gt; command syntax. This is built on top of the Notary feature set, more information on Notary can be found &lt;a href=&quot;../../../../notary/getting_started/index&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Docker CLI内で、 &lt;code&gt;$ docker trust&lt;/code&gt; コマンド構文を使用してコンテナーイメージに署名およびプッシュできます。これは公証人の機能セットの上に構築されてい&lt;a href=&quot;../../../../notary/getting_started/index&quot;&gt;ます&lt;/a&gt;。公証人の詳細については、こちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="7a15d4551cec88d65fbf0dfb154a42074cdd1f07" translate="yes" xml:space="preserve">
          <source>Within the running containers, the following three files now exist:</source>
          <target state="translated">実行中のコンテナ内には、以下の3つのファイルが存在するようになりました。</target>
        </trans-unit>
        <trans-unit id="61069a2b47df78f95788eead631c865f50878010" translate="yes" xml:space="preserve">
          <source>Without oh-my-zsh shell</source>
          <target state="translated">oh-my-zsh シェルなし</target>
        </trans-unit>
        <trans-unit id="aa4a574e27eb4b1a1fa03d5048d1782f3c57a792" translate="yes" xml:space="preserve">
          <source>Without the routing mesh</source>
          <target state="translated">ルーティングメッシュなし</target>
        </trans-unit>
        <trans-unit id="b0e0f98ffdc7c34300a820929ad99ff230ebd391" translate="yes" xml:space="preserve">
          <source>WordPress Multisite works only on ports &lt;code&gt;80&lt;/code&gt; and &lt;code&gt;443&lt;/code&gt;.</source>
          <target state="translated">WordPressマルチサイトはポート &lt;code&gt;80&lt;/code&gt; と &lt;code&gt;443&lt;/code&gt; でのみ機能します。</target>
        </trans-unit>
        <trans-unit id="eb4cd7932ac5bc231624703a8fe280c8966021f6" translate="yes" xml:space="preserve">
          <source>Work with delegation roles</source>
          <target state="translated">委任の役割を持って仕事をする</target>
        </trans-unit>
        <trans-unit id="bfe7c40e1e0048221a4469d1eeeabaa3efd5ec96" translate="yes" xml:space="preserve">
          <source>Worker nodes</source>
          <target state="translated">ワーカーノード</target>
        </trans-unit>
        <trans-unit id="b1a65907ef369b682eee16c60ed94a2395390f15" translate="yes" xml:space="preserve">
          <source>Worker nodes are also instances of Docker Engine whose sole purpose is to execute containers. Worker nodes don&amp;rsquo;t participate in the Raft distributed state, make scheduling decisions, or serve the swarm mode HTTP API.</source>
          <target state="translated">ワーカーノードはDocker Engineのインスタンスでもあり、その唯一の目的はコンテナーを実行することです。ワーカーノードは、Raftの分散状態に参加したり、スケジューリングを決定したり、スウォームモードのHTTP APIを提供したりしません。</target>
        </trans-unit>
        <trans-unit id="606052f203791ce18002df4bbe3edb31c4906e84" translate="yes" xml:space="preserve">
          <source>Working directory inside the container</source>
          <target state="translated">コンテナ内の作業ディレクトリ</target>
        </trans-unit>
        <trans-unit id="1620f55d54f97d690d3242f92bbb2667bc6364a4" translate="yes" xml:space="preserve">
          <source>Working directory inside the service containers.</source>
          <target state="translated">サービスコンテナ内の作業ディレクトリ。</target>
        </trans-unit>
        <trans-unit id="b79fc86440ffb1be49e18eec66132d2c4bd9fc53" translate="yes" xml:space="preserve">
          <source>Working with insecure registries</source>
          <target state="translated">安全でないレジストリでの作業</target>
        </trans-unit>
        <trans-unit id="74470cfa625f630a1b60922012705a28c4e52f71" translate="yes" xml:space="preserve">
          <source>WorkingDir &lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">WorkingDir &lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5302b554d6a27b61e9519d3dbe09a5eee7074954" translate="yes" xml:space="preserve">
          <source>Write a network plugin</source>
          <target state="translated">ネットワークプラグインを書く</target>
        </trans-unit>
        <trans-unit id="ffda49cca5500bdc700d879e9f5c661e4151e275" translate="yes" xml:space="preserve">
          <source>Write records to kernel auditing log.</source>
          <target state="translated">カーネル監査ログにレコードを書き込む。</target>
        </trans-unit>
        <trans-unit id="3598d1fcb015751fadb4bb8584459ac6af1960ee" translate="yes" xml:space="preserve">
          <source>Write the container ID to the file</source>
          <target state="translated">コンテナIDをファイルに書き込む</target>
        </trans-unit>
        <trans-unit id="60dc386cb8096895bda9fb0a3bf727c472d4a71e" translate="yes" xml:space="preserve">
          <source>Write the following configuration file to &lt;code&gt;/tmp/server-configdir/config.json&lt;/code&gt;:</source>
          <target state="translated">次の構成ファイルを &lt;code&gt;/tmp/server-configdir/config.json&lt;/code&gt; に書き込みます。</target>
        </trans-unit>
        <trans-unit id="db75e57bbcc49789bc07c714cb642c9c9845791d" translate="yes" xml:space="preserve">
          <source>Write the image ID to the file</source>
          <target state="translated">ファイルに画像IDを書き込む</target>
        </trans-unit>
        <trans-unit id="585abc6cd8b7e93ef32e42d9916f7b2059cbf1a7" translate="yes" xml:space="preserve">
          <source>Write to a file, instead of STDOUT</source>
          <target state="translated">STDOUTの代わりにファイルに書き込む</target>
        </trans-unit>
        <trans-unit id="7129e8c64cb2d3f5b69c2224dcab6c2e974d0875" translate="yes" xml:space="preserve">
          <source>Writing a plugin</source>
          <target state="translated">プラグインを書く</target>
        </trans-unit>
        <trans-unit id="23837461806aad565a980ff9734305e64ec86b5b" translate="yes" xml:space="preserve">
          <source>Yes - see &lt;a href=&quot;../startup-order/index&quot;&gt;Controlling startup order&lt;/a&gt;.</source>
          <target state="translated">はい- &lt;a href=&quot;../startup-order/index&quot;&gt;起動順序の制御を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cbda30aef97f34f1d03588c244c9e030e3c6cf51" translate="yes" xml:space="preserve">
          <source>Yes. &lt;a href=&quot;http://stackoverflow.com/a/1729545/444646&quot;&gt;Yaml is a superset of json&lt;/a&gt; so any JSON file should be valid Yaml. To use a JSON file with Compose, specify the filename to use, for example:</source>
          <target state="translated">はい。&lt;a href=&quot;http://stackoverflow.com/a/1729545/444646&quot;&gt;Yamlはjsonのスーパーセットである&lt;/a&gt;ため、JSONファイルはすべて有効なYamlである必要があります。ComposeでJSONファイルを使用するには、使用するファイル名を指定します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="b070ce859acf33e8fcf9579f2050dfd4d66802b8" translate="yes" xml:space="preserve">
          <source>You are connected to &lt;code&gt;myvm1&lt;/code&gt; by means of the &lt;code&gt;docker-machine&lt;/code&gt; shell configuration, and you still have access to the files on your local host. Make sure you are in the same directory as before, which includes the &lt;a href=&quot;../part3/index#docker-composeyml&quot;&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt; file you created in part 3&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;myvm1&lt;/code&gt; &lt;code&gt;docker-machine&lt;/code&gt; シェル構成によってmyvm1に接続されていますが、ローカルホスト上のファイルに引き続きアクセスできます。&lt;a href=&quot;../part3/index#docker-composeyml&quot;&gt;パート3で作成し&lt;/a&gt;た &lt;code&gt;docker-compose.yml&lt;/code&gt; ファイルを含む、以前と同じディレクトリにいることを確認してください。</target>
        </trans-unit>
        <trans-unit id="83874a9f5f5e924bc8418de9c900ae581f856e65" translate="yes" xml:space="preserve">
          <source>You are pushing an image you have built locally</source>
          <target state="translated">ローカルに構築したイメージをプッシュしている</target>
        </trans-unit>
        <trans-unit id="d83f5f9fe993894ed1dd4e79794b3ea839749bab" translate="yes" xml:space="preserve">
          <source>You are ready to deploy your new Redis-using stack.</source>
          <target state="translated">これで、新しい Redis を使用するスタックをデプロイする準備が整いました。</target>
        </trans-unit>
        <trans-unit id="6551855bec375daa115bdfc39bd2772543a4305f" translate="yes" xml:space="preserve">
          <source>You are responsible for registering your plugin as part of the Docker daemon startup. You can install multiple plugins and chain them together. This chain can be ordered. Each request to the daemon passes in order through the chain. Only when all the plugins grant access to the resource, is the access granted.</source>
          <target state="translated">Dockerデーモンの起動の一部としてプラグインを登録する責任があります。複数のプラグインをインストールしてチェーン化することができます。このチェーンは順序をつけることができます。デーモンへの各リクエストは、チェーンを順番に通過します。すべてのプラグインがリソースへのアクセスを許可した場合にのみ、アクセスが許可されます。</target>
        </trans-unit>
        <trans-unit id="26727f2aa7cf525fc7e06f204014fda306a44ad9" translate="yes" xml:space="preserve">
          <source>You can access your app from the IP address of &lt;strong&gt;either&lt;/strong&gt;&lt;code&gt;myvm1&lt;/code&gt; or &lt;code&gt;myvm2&lt;/code&gt;.</source>
          <target state="translated">あなたは、のIPアドレスからあなたのアプリにアクセスすることができます&lt;strong&gt;いずれか&lt;/strong&gt; &lt;code&gt;myvm1&lt;/code&gt; または &lt;code&gt;myvm2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59ba02ce40d7c190ead4701055fa7bb5819152bb" translate="yes" xml:space="preserve">
          <source>You can add an extra layer of safety by enabling AppArmor, SELinux, GRSEC, or another appropriate hardening system.</source>
          <target state="translated">AppArmor、SELinux、GRSEC、またはその他の適切な硬化システムを有効にすることで、安全性の層を追加することができます。</target>
        </trans-unit>
        <trans-unit id="54c4d2a1dbdd5460c46e2c9b6b0af55c80c859f2" translate="yes" xml:space="preserve">
          <source>You can add or inspect an individual config at any time, or list all configs. You cannot remove a config that a running service is using. See &lt;a href=&quot;index#example-rotate-a-config&quot;&gt;Rotate a config&lt;/a&gt; for a way to remove a config without disrupting running services.</source>
          <target state="translated">個々の構成をいつでも追加または検査したり、すべての構成をリストしたりできます。実行中のサービスが使用している構成は削除できません。実行中のサービスを中断することなく構成を削除する方法については、構成の&lt;a href=&quot;index#example-rotate-a-config&quot;&gt;ローテーションを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="515b8e62cc049eb41499a0bce7e1f8a761afabfb" translate="yes" xml:space="preserve">
          <source>You can add or inspect an individual secret at any time, or list all secrets. You cannot remove a secret that a running service is using. See &lt;a href=&quot;index#example-rotate-a-secret&quot;&gt;Rotate a secret&lt;/a&gt; for a way to remove a secret without disrupting running services.</source>
          <target state="translated">いつでも個々のシークレットを追加または検査したり、すべてのシークレットをリストしたりできます。実行中のサービスが使用しているシークレットは削除できません。実行中のサービスを中断せずにシークレットを削除する方法については&lt;a href=&quot;index#example-rotate-a-secret&quot;&gt;、シークレット&lt;/a&gt;をローテーションするをご覧ください。</target>
        </trans-unit>
        <trans-unit id="c853b33a60d75b7d5b4e8796f1d826fc1d91d4b1" translate="yes" xml:space="preserve">
          <source>You can add other hosts into a container&amp;rsquo;s &lt;code&gt;/etc/hosts&lt;/code&gt; file by using one or more &lt;code&gt;--add-host&lt;/code&gt; flags. This example adds a static address for a host named &lt;code&gt;docker&lt;/code&gt;:</source>
          <target state="translated">1つ以上の &lt;code&gt;--add-host&lt;/code&gt; フラグを使用して、コンテナの &lt;code&gt;/etc/hosts&lt;/code&gt; ファイルに他のホストを追加できます。この例では、 &lt;code&gt;docker&lt;/code&gt; という名前のホストの静的アドレスを追加します。</target>
        </trans-unit>
        <trans-unit id="7764fcb2a8d605b4837f3bb1f1484d127673cbeb" translate="yes" xml:space="preserve">
          <source>You can add your code to the image using &lt;code&gt;COPY&lt;/code&gt; or &lt;code&gt;ADD&lt;/code&gt; directive in a &lt;code&gt;Dockerfile&lt;/code&gt;. This is useful if you need to relocate your code along with the Docker image, for example when you&amp;rsquo;re sending code to another environment (production, CI, etc).</source>
          <target state="translated">&lt;code&gt;Dockerfile&lt;/code&gt; で &lt;code&gt;COPY&lt;/code&gt; または &lt;code&gt;ADD&lt;/code&gt; ディレクティブを使用して、コードを画像に追加できます。これは、コードを別の環境（本番環境、CIなど）に送信する場合など、Dockerイメージとともにコードを再配置する必要がある場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="0bf31c11a4d0055d8d96630a9a8a99a7be30c112" translate="yes" xml:space="preserve">
          <source>You can also &lt;a href=&quot;#bypass-the-routing-mesh&quot;&gt;bypass the routing mesh&lt;/a&gt; for a given service.</source>
          <target state="translated">特定のサービスの&lt;a href=&quot;#bypass-the-routing-mesh&quot;&gt;ルーティングメッシュ&lt;/a&gt;をバイパスすることもできます。</target>
        </trans-unit>
        <trans-unit id="bc147354c246d445537bc8c6cf33983446316210" translate="yes" xml:space="preserve">
          <source>You can also build with content trust. Before running the &lt;code&gt;docker build&lt;/code&gt; command, you should set the environment variable &lt;code&gt;DOCKER_CONTENT_TRUST&lt;/code&gt; either manually or in a scripted fashion. Consider the simple Dockerfile below.</source>
          <target state="translated">コンテンツの信頼で構築することもできます。 &lt;code&gt;DOCKER_CONTENT_TRUST&lt;/code&gt; &lt;code&gt;docker build&lt;/code&gt; コマンドを実行する前に、環境変数DOCKER_CONTENT_TRUSTを手動またはスクリプトで設定する必要があります。以下の単純なDockerfileを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="4e4b1ec7b62e686fa1e32d9f1bde42caa471f67f" translate="yes" xml:space="preserve">
          <source>You can also choose the IP addresses for the container with &lt;code&gt;--ip&lt;/code&gt; and &lt;code&gt;--ip6&lt;/code&gt; flags when you start the container on a user-defined network.</source>
          <target state="translated">ユーザー定義のネットワークでコンテナーを起動するときに、 &lt;code&gt;--ip6&lt;/code&gt; フラグと--ip6フラグを &lt;code&gt;--ip&lt;/code&gt; してコンテナーのIPアドレスを選択することもできます。</target>
        </trans-unit>
        <trans-unit id="bed199b3c482e88bd082906f8ede10db967c2838" translate="yes" xml:space="preserve">
          <source>You can also connect an existing service to an overlay network using the &lt;code&gt;--network-add&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;--network-add&lt;/code&gt; フラグを使用して、既存のサービスをオーバーレイネットワークに接続することもできます。</target>
        </trans-unit>
        <trans-unit id="f68804a7d3b1757e1de6f979be0f1db16fcda3dd" translate="yes" xml:space="preserve">
          <source>You can also demote a manager node to a worker node. See &lt;a href=&quot;../../../reference/commandline/node_demote/index&quot;&gt;node demote&lt;/a&gt;.</source>
          <target state="translated">マネージャーノードをワーカーノードに降格することもできます。&lt;a href=&quot;../../../reference/commandline/node_demote/index&quot;&gt;ノードの降格を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="464891aaaa05d3fb898993b24fd3bcb18449b0d7" translate="yes" xml:space="preserve">
          <source>You can also expose the REST API over HTTP if you explicitly decide to do so. However, if you do that, be aware of the above mentioned security implications. Note that even if you have a firewall to limit accesses to the REST API endpoint from other hosts in the network, the endpoint can be still accessible from containers, and it can easily result in the privilege escalation. Therefore it is &lt;em&gt;mandatory&lt;/em&gt; to secure API endpoints with &lt;a href=&quot;../https/index&quot;&gt;HTTPS and certificates&lt;/a&gt;. It is also recommended to ensure that it is reachable only from a trusted network or VPN.</source>
          <target state="translated">明示的に決定した場合は、HTTPを介してREST APIを公開することもできます。ただし、その場合は、上記のセキュリティへの影響に注意してください。ネットワーク内の他のホストからのREST APIエンドポイントへのアクセスを制限するファイアウォールがある場合でも、エンドポイントはコンテナーから引き続きアクセスでき、特権の昇格を簡単に引き起こす可能性があることに注意してください。したがって、&lt;a href=&quot;../https/index&quot;&gt;HTTPSと証明書で&lt;/a&gt; APIエンドポイントを保護することは&lt;em&gt;必須&lt;/em&gt;です。また、信頼できるネットワークまたはVPNからのみ到達可能であることを確認することもお勧めします。</target>
        </trans-unit>
        <trans-unit id="3f7173d4783121184d3208a3e13e5014c038e773" translate="yes" xml:space="preserve">
          <source>You can also filter for a substring in a name as this shows:</source>
          <target state="translated">このように、名前の中の部分文字列をフィルタリングすることもできます。</target>
        </trans-unit>
        <trans-unit id="489e35a99e49bb270ff61b6146c9165e52a8187c" translate="yes" xml:space="preserve">
          <source>You can also filter for a substring in an ID as this shows:</source>
          <target state="translated">このようにIDの中の部分文字列をフィルタリングすることもできます。</target>
        </trans-unit>
        <trans-unit id="33922fa2e3b353dd6cbf715d40735c6521b14496" translate="yes" xml:space="preserve">
          <source>You can also load the environment variables from a file. This file should use the syntax &lt;code&gt;&amp;lt;variable&amp;gt;=value&lt;/code&gt; (which sets the variable to the given value) or &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; (which takes the value from the local environment), and &lt;code&gt;#&lt;/code&gt; for comments.</source>
          <target state="translated">ファイルから環境変数をロードすることもできます。このファイルでは、 &lt;code&gt;&amp;lt;variable&amp;gt;=value&lt;/code&gt; （変数を指定された値に設定）または &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; （ローカル環境から値を取得）の構文と、コメントに &lt;code&gt;#&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="46944b3eee6421f26ca428697362f043c842d2ee" translate="yes" xml:space="preserve">
          <source>You can also override the parameters of the configuration by setting environment variables of the form &lt;code&gt;NOTARY_SERVER_&amp;lt;var&amp;gt;&lt;/code&gt; or &lt;code&gt;NOTARY_SIGNER_&amp;lt;var&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NOTARY_SERVER_&amp;lt;var&amp;gt;&lt;/code&gt; または &lt;code&gt;NOTARY_SIGNER_&amp;lt;var&amp;gt;&lt;/code&gt; の形式の環境変数を設定して、構成のパラメーターをオーバーライドすることもできます。</target>
        </trans-unit>
        <trans-unit id="f810f839da0d440f6c2ddde93f2a95b98b5df538" translate="yes" xml:space="preserve">
          <source>You can also pass a variable through from the shell by not giving it a value:</source>
          <target state="translated">変数に値を与えないことで、シェルから変数を渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="cd38849be70d8f59211ef5527feb0fdafaafc3fd" translate="yes" xml:space="preserve">
          <source>You can also scale a service using the &lt;a href=&quot;../service_update/index&quot;&gt;&lt;code&gt;docker service update&lt;/code&gt;&lt;/a&gt; command. The following commands are equivalent:</source>
          <target state="translated">&lt;a href=&quot;../service_update/index&quot;&gt; &lt;code&gt;docker service update&lt;/code&gt; &lt;/a&gt;コマンドを使用してサービスをスケーリングすることもできます。以下のコマンドは同等です。</target>
        </trans-unit>
        <trans-unit id="7de2e297b3d0c1ff223629014b45a447691a560e" translate="yes" xml:space="preserve">
          <source>You can also see this information by running &lt;code&gt;docker-compose --help&lt;/code&gt; from the command line.</source>
          <target state="translated">この情報は、コマンドラインから &lt;code&gt;docker-compose --help&lt;/code&gt; を実行して確認することもできます。</target>
        </trans-unit>
        <trans-unit id="757810363e45b53d36c6cec832afbacc76af355c" translate="yes" xml:space="preserve">
          <source>You can also specify an image tag for the service to use. This example modifies the previous one to use the &lt;code&gt;alpine:3.6&lt;/code&gt; tag:</source>
          <target state="translated">サービスが使用するイメージタグを指定することもできます。この例では、 &lt;code&gt;alpine:3.6&lt;/code&gt; タグを使用するように前の例を変更します。</target>
        </trans-unit>
        <trans-unit id="1dd3b93567383ff5ffa8fac281ea2f81f1c498fd" translate="yes" xml:space="preserve">
          <source>You can also specify commands to run remotely by appending them directly to the &lt;code&gt;docker-machine ssh&lt;/code&gt; command, much like the regular &lt;code&gt;ssh&lt;/code&gt; program works:</source>
          <target state="translated">通常の &lt;code&gt;ssh&lt;/code&gt; プログラムが機能するように、 &lt;code&gt;docker-machine ssh&lt;/code&gt; コマンドに直接追加することで、リモートで実行するコマンドを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="a87f55cf2135454472340f02c7a6a54e3045f943" translate="yes" xml:space="preserve">
          <source>You can also specify the name of the network separately from the name used to refer to it within the Compose file:</source>
          <target state="translated">また、Composeファイル内でネットワークを参照する際に使用する名前とは別に、ネットワークの名前を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="be11fcf150423cc31791b08c500c5a38a4f8d527" translate="yes" xml:space="preserve">
          <source>You can also specify the name of the volume separately from the name used to refer to it within the Compose file:</source>
          <target state="translated">また、Composeファイル内でボリュームを参照する際に使用する名前とは別に、ボリュームの名前を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="9d5371c85d4f210dd3d604a15c091241b18a2464" translate="yes" xml:space="preserve">
          <source>You can also specify the output format:</source>
          <target state="translated">また、出力形式を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="6849500307710b1faefd50ac9248e92c9efa7c8b" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;--format pretty&lt;/code&gt; for the same effect.</source>
          <target state="translated">同じ効果を得るために &lt;code&gt;--format pretty&lt;/code&gt; を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="312242d9758c1a2f30cf7b784a4d899e9681e194" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;DOCKER_HOST=ssh://USER@HOST&lt;/code&gt; or &lt;code&gt;ssh -L /path/to/docker.sock:/var/run/docker.sock&lt;/code&gt; instead if you prefer SSH over TLS.</source>
          <target state="translated">TLSよりもSSHを使用する場合は、代わりに &lt;code&gt;DOCKER_HOST=ssh://USER@HOST&lt;/code&gt; または &lt;code&gt;ssh -L /path/to/docker.sock:/var/run/docker.sock&lt;/code&gt; を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="4481472cdafa67014e7a26193e28cfedfb98fac7" translate="yes" xml:space="preserve">
          <source>You can also use placement constraints in conjunction with placement preferences and CPU/memory constraints. Be careful not to use settings that are not possible to fulfill.</source>
          <target state="translated">配置制約は、配置環境設定やCPU/メモリ制約と組み合わせて使用することもできます。満たすことができない設定を使用しないように注意してください。</target>
        </trans-unit>
        <trans-unit id="a64da56db765ee5bf161b0974b9cc95ee100cdb1" translate="yes" xml:space="preserve">
          <source>You can also use placement preferences in conjunction with placement constraints or CPU/memory constraints. Be careful not to use settings that are not possible to fulfill.</source>
          <target state="translated">配置条件は、配置制約やCPU/メモリ制約と組み合わせて使用することもできます。満たすことができない設定を使用しないように注意してください。</target>
        </trans-unit>
        <trans-unit id="3c4f4ee01d909bb299b66445124b4fc2c032150c" translate="yes" xml:space="preserve">
          <source>You can also use secrets to manage non-sensitive data, such as configuration files. However, Docker 17.06 and higher support the use of &lt;a href=&quot;../configs/index&quot;&gt;configs&lt;/a&gt; for storing non-sensitive data. Configs are mounted into the container&amp;rsquo;s filesystem directly, without the use of a RAM disk.</source>
          <target state="translated">シークレットを使用して、構成ファイルなどの機密ではないデータを管理することもできます。ただし、Docker 17.06以降では、機密ではないデータを格納するための&lt;a href=&quot;../configs/index&quot;&gt;構成&lt;/a&gt;の使用がサポートされています。構成は、RAMディスクを使用せずに、コンテナーのファイルシステムに直接マウントされます。</target>
        </trans-unit>
        <trans-unit id="89af1ea314d1b60e8b1e39c1bda0cc23d5b8511d" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;constraint&lt;/code&gt; service-level key in a &lt;code&gt;docker-compose.yml&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;docker-compose.yml&lt;/code&gt; ファイルで &lt;code&gt;constraint&lt;/code&gt; サービスレベルキーを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="f99f3f91bd1e787b145928568e8c68580a644b83" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;curl&lt;/code&gt; command in a shell to view the same content.</source>
          <target state="translated">シェルで &lt;code&gt;curl&lt;/code&gt; コマンドを使用して、同じコンテンツを表示することもできます。</target>
        </trans-unit>
        <trans-unit id="feac09b924d00183ef4c67a196e71767be0bb123" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;docker run --network=&amp;lt;network-name&amp;gt;&lt;/code&gt; option to start a container and immediately connect it to a network.</source>
          <target state="translated">また、使用することができる &lt;code&gt;docker run --network=&amp;lt;network-name&amp;gt;&lt;/code&gt; コンテナを起動し、すぐにネットワークに接続するためのオプションを。</target>
        </trans-unit>
        <trans-unit id="4ccd9f358e80808e63d73852e3022f06e5657636" translate="yes" xml:space="preserve">
          <source>You can also use variables that you&amp;rsquo;ve exported to your local environment:</source>
          <target state="translated">ローカル環境にエクスポートした変数を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="aea572892b1077d3cdfb04c1ce5f3c5d9e57b602" translate="yes" xml:space="preserve">
          <source>You can also write other services and link your &lt;code&gt;web&lt;/code&gt; service to them:</source>
          <target state="translated">他のサービスを記述して、それらに &lt;code&gt;web&lt;/code&gt; サービスをリンクすることもできます。</target>
        </trans-unit>
        <trans-unit id="20fc6ccd35fc61eaf407876d9135e74c80beedf5" translate="yes" xml:space="preserve">
          <source>You can apply multiple tags to an image. For example, you can apply the &lt;code&gt;latest&lt;/code&gt; tag to a newly built image and add another tag that references a specific version. For example, to tag an image both as &lt;code&gt;whenry/fedora-jboss:latest&lt;/code&gt; and &lt;code&gt;whenry/fedora-jboss:v2.1&lt;/code&gt;, use the following:</source>
          <target state="translated">1つの画像に複数のタグを適用できます。たとえば、新しく作成されたイメージに &lt;code&gt;latest&lt;/code&gt; タグを適用し、特定のバージョンを参照する別のタグを追加できます。たとえば、画像に &lt;code&gt;whenry/fedora-jboss:latest&lt;/code&gt; と &lt;code&gt;whenry/fedora-jboss:v2.1&lt;/code&gt; の両方のタグを付けるには、以下を使用します。</target>
        </trans-unit>
        <trans-unit id="e80d890c7cb13fd7e65261d13c63641d176830e5" translate="yes" xml:space="preserve">
          <source>You can attach to the same contained process multiple times simultaneously, from different sessions on the Docker host.</source>
          <target state="translated">Dockerホスト上の異なるセッションから、同じインクルードされたプロセスに複数回同時にアタッチすることができます。</target>
        </trans-unit>
        <trans-unit id="d102e09943ec3e2e41cf03af44f97d0e3f21311e" translate="yes" xml:space="preserve">
          <source>You can back up the swarm using any manager. Use the following procedure.</source>
          <target state="translated">任意のマネージャーを使用してスウォームをバックアップすることができます。以下の手順を使用してください。</target>
        </trans-unit>
        <trans-unit id="d2c824c56fa72a227cef251d511d673cce2408d4" translate="yes" xml:space="preserve">
          <source>You can bring everything down, removing the containers entirely, with the &lt;code&gt;down&lt;/code&gt; command. Pass &lt;code&gt;--volumes&lt;/code&gt; to also remove the data volume used by the Redis container:</source>
          <target state="translated">&lt;code&gt;down&lt;/code&gt; コマンドを使用して、すべてを停止し、コンテナーを完全に削除できます。パスは &lt;code&gt;--volumes&lt;/code&gt; また、Redisのコンテナで使用されるデータ量を削除するには：</target>
        </trans-unit>
        <trans-unit id="fa9230bf463d25633e1e9439688f9bdbd4255236" translate="yes" xml:space="preserve">
          <source>You can bypass the routing mesh, so that when you access the bound port on a given node, you are always accessing the instance of the service running on that node. This is referred to as &lt;code&gt;host&lt;/code&gt; mode. There are a few things to keep in mind.</source>
          <target state="translated">ルーティングメッシュをバイパスできるため、特定のノードのバインドされたポートにアクセスすると、常にそのノードで実行されているサービスのインスタンスにアクセスできます。これは &lt;code&gt;host&lt;/code&gt; モードと呼ばれます。覚えておくべきことがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="0e6aef0889d920d93fc0b81faea547db2fa09ea3" translate="yes" xml:space="preserve">
          <source>You can change a container&amp;rsquo;s restart policy on a running container. The new restart policy takes effect instantly after you run &lt;code&gt;docker update&lt;/code&gt; on a container.</source>
          <target state="translated">実行中のコンテナでコンテナの再起動ポリシーを変更できます。新しい再起動ポリシーは、コンテナーで &lt;code&gt;docker update&lt;/code&gt; を実行した直後に有効になります。</target>
        </trans-unit>
        <trans-unit id="4f66217a41f50a7d0196cff349a3de739b6f8ecf" translate="yes" xml:space="preserve">
          <source>You can change almost everything about an existing service using the &lt;code&gt;docker service update&lt;/code&gt; command. When you update a service, Docker stops its containers and restarts them with the new configuration.</source>
          <target state="translated">&lt;code&gt;docker service update&lt;/code&gt; コマンドを使用して、既存のサービスに関するほとんどすべてを変更できます。サービスを更新すると、Dockerはコンテナーを停止し、新しい構成で再起動します。</target>
        </trans-unit>
        <trans-unit id="dd365c7397170d7421e270703d6f472e9dc263c0" translate="yes" xml:space="preserve">
          <source>You can change the &lt;code&gt;default&lt;/code&gt; string above to make this &lt;code&gt;LaunchAgent&lt;/code&gt; start a different machine.</source>
          <target state="translated">上記の &lt;code&gt;default&lt;/code&gt; 文字列を変更して、この &lt;code&gt;LaunchAgent&lt;/code&gt; に別のマシンを起動させることができます。</target>
        </trans-unit>
        <trans-unit id="ea090b733606f7c963034691a51a91548f8f64fb" translate="yes" xml:space="preserve">
          <source>You can change the SSH username with the &lt;code&gt;--amazonec2-ssh-user&lt;/code&gt; according to the AMI you selected with the &lt;code&gt;--amazonec2-ami&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;--amazonec2-ami&lt;/code&gt; オプションで選択したAMIに従って、 &lt;code&gt;--amazonec2-ssh-user&lt;/code&gt; SSHユーザー名を変更できます。</target>
        </trans-unit>
        <trans-unit id="ead7b5a94cb008366e3e7562e117e129a8b80d22" translate="yes" xml:space="preserve">
          <source>You can configure Docker&amp;rsquo;s trust features so that your users can push and pull trusted images. To learn how to do this, see &lt;a href=&quot;trust/index&quot;&gt;Use trusted images&lt;/a&gt; in this section.</source>
          <target state="translated">ユーザーが信頼できるイメージをプッシュおよびプルできるように、Dockerの信頼機能を構成できます。これを行う方法については、このセクションの&lt;a href=&quot;trust/index&quot;&gt;「信頼できるイメージ&lt;/a&gt;を使用する」を参照してください。</target>
        </trans-unit>
        <trans-unit id="df476714ce4c4d949375c1eae20cb767e00a5306" translate="yes" xml:space="preserve">
          <source>You can configure a service in such a way that if an update to the service causes redeployment to fail, the service can automatically roll back to the previous configuration. This helps protect service availability. You can set one or more of the following flags at service creation or update. If you do not set a value, the default is used.</source>
          <target state="translated">サービスの更新によって再配置に失敗した場合、サービスは自動的に以前の構成にロールバックできるようにサービスを構成できます。これにより、サービスの可用性を保護することができます。サービスの作成時または更新時に、次のフラグのうち 1 つ以上を設定できます。値を設定しない場合は、既定値が使用されます。</target>
        </trans-unit>
        <trans-unit id="69ac94bdbca3f72cef72af9d3d726bbd25f4504a" translate="yes" xml:space="preserve">
          <source>You can configure an external load balancer for swarm services, either in combination with the routing mesh or without using the routing mesh at all.</source>
          <target state="translated">スウォームサービス用の外部ロードバランサーを設定するには、ルーティングメッシュと組み合わせても、ルーティングメッシュを全く使用しなくても、どちらでも構いません。</target>
        </trans-unit>
        <trans-unit id="731173b92630c747a8331ac3bb18a0accd63f880" translate="yes" xml:space="preserve">
          <source>You can configure an external load balancer to route requests to a swarm service. For example, you could configure &lt;a href=&quot;http://www.haproxy.org&quot;&gt;HAProxy&lt;/a&gt; to balance requests to an nginx service published to port 8080.</source>
          <target state="translated">リクエストをスウォームサービスにルーティングするように外部ロードバランサーを設定できます。たとえば、ポート8080に公開されたnginxサービスへのリクエストを分散するように&lt;a href=&quot;http://www.haproxy.org&quot;&gt;HAProxy&lt;/a&gt;を構成できます。</target>
        </trans-unit>
        <trans-unit id="648baf82f8ffb3083656911b26104c05343c7a83" translate="yes" xml:space="preserve">
          <source>You can configure any type of load balancer to route requests to swarm nodes. To learn more about HAProxy, see the &lt;a href=&quot;https://cbonte.github.io/haproxy-dconv/&quot;&gt;HAProxy documentation&lt;/a&gt;.</source>
          <target state="translated">リクエストをスウォームノードにルーティングするように、任意のタイプのロードバランサーを構成できます。HAProxyの詳細については、&lt;a href=&quot;https://cbonte.github.io/haproxy-dconv/&quot;&gt;HAProxyのドキュメントを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="fa5d2313c62555c31b415eb2b83a7a336e7c2495" translate="yes" xml:space="preserve">
          <source>You can configure secure computing mode (Seccomp) policies to secure system calls in a container. For more information, see &lt;a href=&quot;seccomp/index&quot;&gt;Seccomp security profiles for Docker&lt;/a&gt;.</source>
          <target state="translated">セキュアコンピューティングモード（Seccomp）ポリシーを構成して、コンテナー内のシステムコールを保護できます。詳細については&lt;a href=&quot;seccomp/index&quot;&gt;、DockerのSeccompセキュリティプロファイルを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9209915eb3411e7600d0bb2b9f1559f67b7433ec" translate="yes" xml:space="preserve">
          <source>You can configure the Docker daemon to listen to multiple sockets at the same time using multiple &lt;code&gt;-H&lt;/code&gt; options:</source>
          <target state="translated">複数の &lt;code&gt;-H&lt;/code&gt; オプションを使用して、複数のソケットを同時にリッスンするようにDockerデーモンを構成できます。</target>
        </trans-unit>
        <trans-unit id="c5936c1bffed718796f936b6b78dff49ecfd8473" translate="yes" xml:space="preserve">
          <source>You can configure the following aspects of Notary:</source>
          <target state="translated">Notary の以下の側面を設定することができます。</target>
        </trans-unit>
        <trans-unit id="633b2fc127d3f8c7661fb14832732ff3b3d27df2" translate="yes" xml:space="preserve">
          <source>You can configure the following options for the runtime environment in the container:</source>
          <target state="translated">コンテナ内のランタイム環境には、以下のオプションを設定することができます。</target>
        </trans-unit>
        <trans-unit id="68adadc73937742cc15b95f8f8fe43f1b08eefbc" translate="yes" xml:space="preserve">
          <source>You can configure the load balancer to balance requests between every node in the swarm even if there are no tasks scheduled on the node. For example, you could have the following HAProxy configuration in &lt;code&gt;/etc/haproxy/haproxy.cfg&lt;/code&gt;:</source>
          <target state="translated">ノードでタスクがスケジュールされていない場合でも、スウォーム内のすべてのノード間でリクエストを分散するようにロードバランサーを構成できます。たとえば、 &lt;code&gt;/etc/haproxy/haproxy.cfg&lt;/code&gt; / haproxy / haproxy.cfgに次のHAProxy構成を含めることができます。</target>
        </trans-unit>
        <trans-unit id="913dd02d98fad81ead2fc56e35a32b9c0d5dacb7" translate="yes" xml:space="preserve">
          <source>You can configure the runtime using options specified with the &lt;code&gt;--exec-opt&lt;/code&gt; flag. All the flag&amp;rsquo;s options have the &lt;code&gt;native&lt;/code&gt; prefix. A single &lt;code&gt;native.cgroupdriver&lt;/code&gt; option is available.</source>
          <target state="translated">&lt;code&gt;--exec-opt&lt;/code&gt; フラグで指定されたオプションを使用してランタイムを構成できます。フラグのすべてのオプションには、 &lt;code&gt;native&lt;/code&gt; プレフィックスがあります。1つの &lt;code&gt;native.cgroupdriver&lt;/code&gt; オプションを使用できます。</target>
        </trans-unit>
        <trans-unit id="2da4649e3218bc4fafb7df590708f0bcfc2ca268" translate="yes" xml:space="preserve">
          <source>You can configure the service&amp;rsquo;s &lt;a href=&quot;#reserve-memory-or-cpus-for-a-service&quot;&gt;CPU or memory requirements&lt;/a&gt;, and the service only runs on nodes which can meet those requirements.</source>
          <target state="translated">サービスの&lt;a href=&quot;#reserve-memory-or-cpus-for-a-service&quot;&gt;CPUまたはメモリ要件&lt;/a&gt;を構成でき、サービスはそれらの要件を満たすことができるノードでのみ実行されます。</target>
        </trans-unit>
        <trans-unit id="062647114e990762602681e9e9e98ff4a028e3e6" translate="yes" xml:space="preserve">
          <source>You can connect a container to one or more networks. The networks need not be the same type. For example, you can connect a single container bridge and overlay networks.</source>
          <target state="translated">コンテナを 1 つ以上のネットワークに接続することができます。ネットワークは同じタイプである必要はありません。たとえば、単一のコンテナ ブリッジとオーバーレイ ネットワークを接続できます。</target>
        </trans-unit>
        <trans-unit id="3a50cb498046cc514574c2cad4b8cc3d69e523de" translate="yes" xml:space="preserve">
          <source>You can connect multiple containers to the same network. Once connected, the containers can communicate easily need only another container&amp;rsquo;s IP address or name. For &lt;code&gt;overlay&lt;/code&gt; networks or custom plugins that support multi-host connectivity, containers connected to the same multi-host network but launched from different Engines can also communicate in this way.</source>
          <target state="translated">複数のコンテナを同じネットワークに接続できます。接続されると、コンテナーは簡単に通信でき、別のコンテナーのIPアドレスまたは名前のみが必要になります。以下のために &lt;code&gt;overlay&lt;/code&gt; マルチホスト接続をサポートするネットワークまたはカスタムプラグイン、異なるエンジンから同じマルチホストネットワークに接続されているが、立ち上げた容器も、このように通信することができます。</target>
        </trans-unit>
        <trans-unit id="8e684ecfbfb94a5a384f821517d495d9cc449d0c" translate="yes" xml:space="preserve">
          <source>You can connect multiple containers to the same network. Once connected, the containers can communicate using only another container&amp;rsquo;s IP address or name. For &lt;code&gt;overlay&lt;/code&gt; networks or custom plugins that support multi-host connectivity, containers connected to the same multi-host network but launched from different Engines can also communicate in this way.</source>
          <target state="translated">複数のコンテナを同じネットワークに接続できます。接続されると、コンテナは別のコンテナのIPアドレスまたは名前のみを使用して通信できます。以下のために &lt;code&gt;overlay&lt;/code&gt; マルチホスト接続をサポートするネットワークまたはカスタムプラグイン、異なるエンジンから同じマルチホストネットワークに接続されているが、立ち上げた容器も、このように通信することができます。</target>
        </trans-unit>
        <trans-unit id="74c7455fe4872fbe21f5ed2754e8801441bed62b" translate="yes" xml:space="preserve">
          <source>You can control the order of service startup and shutdown with the &lt;a href=&quot;../compose-file/index#depends-on&quot;&gt;depends_on&lt;/a&gt; option. Compose always starts and stops containers in dependency order, where dependencies are determined by &lt;code&gt;depends_on&lt;/code&gt;, &lt;code&gt;links&lt;/code&gt;, &lt;code&gt;volumes_from&lt;/code&gt;, and &lt;code&gt;network_mode: &quot;service:...&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../compose-file/index#depends-on&quot;&gt;depends_on&lt;/a&gt;オプションを使用して、サービスの起動とシャットダウンの順序を制御できます。Composeは常に依存関係の順序でコンテナーを開始および停止します。依存関係は &lt;code&gt;depends_on&lt;/code&gt; 、 &lt;code&gt;links&lt;/code&gt; 、 &lt;code&gt;volumes_from&lt;/code&gt; 、およびnetwork_mode &lt;code&gt;network_mode: &quot;service:...&quot;&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="0fcf26265abe853428443a0ba09eca2cb434f4ed" translate="yes" xml:space="preserve">
          <source>You can create a network using a Docker network driver or an external network driver plugin. You can connect multiple containers to the same network. Once connected to a user-defined network, the containers can communicate easily using only another container&amp;rsquo;s IP address or name.</source>
          <target state="translated">Dockerネットワークドライバーまたは外部ネットワークドライバープラグインを使用してネットワークを作成できます。複数のコンテナを同じネットワークに接続できます。ユーザー定義のネットワークに接続すると、コンテナーは別のコンテナーのIPアドレスまたは名前のみを使用して簡単に通信できます。</target>
        </trans-unit>
        <trans-unit id="763e178dd85a4180405ff7bea8d4fb267ab87301" translate="yes" xml:space="preserve">
          <source>You can create a new service and pass the &lt;code&gt;--network&lt;/code&gt; flag to attach the service to the overlay network:</source>
          <target state="translated">新しいサービスを作成し、 &lt;code&gt;--network&lt;/code&gt; フラグを渡して、サービスをオーバーレイネットワークに接続できます。</target>
        </trans-unit>
        <trans-unit id="6aab3fe3275fc74db3fd945644e7b712cb2f9994" translate="yes" xml:space="preserve">
          <source>You can create a swarm of one manager node, but you cannot have a worker node without at least one manager node. By default, all managers are also workers. In a single manager node cluster, you can run commands like &lt;code&gt;docker service create&lt;/code&gt; and the scheduler places all tasks on the local Engine.</source>
          <target state="translated">1つのマネージャーノードのスウォームを作成できますが、少なくとも1つのマネージャーノードがないとワーカーノードを作成できません。デフォルトでは、すべてのマネージャーもワーカーです。単一のマネージャーノードクラスターでは、 &lt;code&gt;docker service create&lt;/code&gt; などのコマンドを実行でき、スケジューラーはすべてのタスクをローカルエンジンに配置します。</target>
        </trans-unit>
        <trans-unit id="18a782adc25948f5b9e3a747fd2b604c165de5c1" translate="yes" xml:space="preserve">
          <source>You can create an &lt;code&gt;~/.aws/credentials&lt;/code&gt; file to hold your AWS keys so that you don&amp;rsquo;t need to type them every time you run the &lt;code&gt;docker-machine create&lt;/code&gt; command. Here is an example of a credentials file.</source>
          <target state="translated">&lt;code&gt;~/.aws/credentials&lt;/code&gt; 作成できますファイルを作成してAWSキーを保持 &lt;code&gt;docker-machine create&lt;/code&gt; コマンドを実行するたびにキーを入力する必要がありません。これは、資格情報ファイルの例です。</target>
        </trans-unit>
        <trans-unit id="c3f6fba8e4e8284b523d375b2b40a72e07486fe0" translate="yes" xml:space="preserve">
          <source>You can create an entirely new machine or you can convert a Boot2Docker VM into a machine by importing the VM. To convert a Boot2Docker VM, you&amp;rsquo;d use the following command:</source>
          <target state="translated">まったく新しいマシンを作成することも、VMをインポートしてBoot2Docker VMをマシンに変換することもできます。Boot2Docker VMを変換するには、次のコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="bd1562722defe7ca4a0fd3ef58d7ec715e32ac94" translate="yes" xml:space="preserve">
          <source>You can create and manage as many local VMs running Docker as your local resources permit; just run &lt;code&gt;docker-machine create&lt;/code&gt; again. All created machines appear in the output of &lt;code&gt;docker-machine ls&lt;/code&gt;.</source>
          <target state="translated">ローカルリソースが許可する限り、Dockerを実行するローカルVMを作成して管理できます。もう一度 &lt;code&gt;docker-machine create&lt;/code&gt; を実行してください。作成されたすべてのマシンは、の出力に表示されます &lt;code&gt;docker-machine ls&lt;/code&gt; のます。</target>
        </trans-unit>
        <trans-unit id="1c498c067458b32cc464e93d6f532b5781608103" translate="yes" xml:space="preserve">
          <source>You can create the network which will be used to provide the routing-mesh in the swarm cluster. You do so by specifying &lt;code&gt;--ingress&lt;/code&gt; when creating the network. Only one ingress network can be created at the time. The network can be removed only if no services depend on it. Any option available when creating an overlay network is also available when creating the ingress network, besides the &lt;code&gt;--attachable&lt;/code&gt; option.</source>
          <target state="translated">スウォームクラスターでルーティングメッシュを提供するために使用されるネットワークを作成できます。そのためには、ネットワークの作成時に &lt;code&gt;--ingress&lt;/code&gt; を指定します。一度に作成できる入力ネットワークは1つだけです。依存するサービスがない場合にのみ、ネットワークを削除できます。 &lt;code&gt;--attachable&lt;/code&gt; オプションの他に、オーバーレイネットワークの作成時に使用できるオプションは、入力ネットワークの作成時にも使用できます。</target>
        </trans-unit>
        <trans-unit id="c18bb29d8951be273d9a35729f358e10b866cd23" translate="yes" xml:space="preserve">
          <source>You can create two types of mounts for services in a swarm, &lt;code&gt;volume&lt;/code&gt; mounts or &lt;code&gt;bind&lt;/code&gt; mounts. Regardless of which type of mount you use, configure it using the &lt;code&gt;--mount&lt;/code&gt; flag when you create a service, or the &lt;code&gt;--mount-add&lt;/code&gt; or &lt;code&gt;--mount-rm&lt;/code&gt; flag when updating an existing service. The default is a data volume if you don&amp;rsquo;t specify a type.</source>
          <target state="translated">スウォームのサービスには、 &lt;code&gt;volume&lt;/code&gt; マウントと &lt;code&gt;bind&lt;/code&gt; マウントの2種類のマウントを作成できます。使用するマウントのタイプに関係なく、サービスを作成するときに &lt;code&gt;--mount&lt;/code&gt; フラグを使用して構成するか、または &lt;code&gt;--mount-add&lt;/code&gt; または &lt;code&gt;--mount-rm&lt;/code&gt; 、既存のサービスを更新するときに --mount-rmフラグ。タイプを指定しない場合、デフォルトはデータボリュームです。</target>
        </trans-unit>
        <trans-unit id="9e1ded9d6e046d361562814b4d4b5364dcb40c50" translate="yes" xml:space="preserve">
          <source>You can define each plugin into a separated subdirectory if you want to isolate definitions from each other. For example, you can create the &lt;code&gt;flocker&lt;/code&gt; socket under &lt;code&gt;/run/docker/plugins/flocker/flocker.sock&lt;/code&gt; and only mount &lt;code&gt;/run/docker/plugins/flocker&lt;/code&gt; inside the &lt;code&gt;flocker&lt;/code&gt; container.</source>
          <target state="translated">定義を互いに分離したい場合は、各プラグインを別々のサブディレクトリに定義できます。たとえば、あなたが作成することができ &lt;code&gt;flocker&lt;/code&gt; の下のソケットを &lt;code&gt;/run/docker/plugins/flocker/flocker.sock&lt;/code&gt; のみマウント &lt;code&gt;/run/docker/plugins/flocker&lt;/code&gt; 内部 &lt;code&gt;flocker&lt;/code&gt; のコンテナ。</target>
        </trans-unit>
        <trans-unit id="ae4af3ca26381fbbec3db52bcbe19c2b5f661d9e" translate="yes" xml:space="preserve">
          <source>You can define the variable and its value when running the container:</source>
          <target state="translated">コンテナを実行する際に変数とその値を定義することができます。</target>
        </trans-unit>
        <trans-unit id="6f681c063d614c5eba4f85a8ef8ad42612fe6a54" translate="yes" xml:space="preserve">
          <source>You can define your own policies using your favorite access control mechanism.</source>
          <target state="translated">お好みのアクセス制御メカニズムを使って、独自のポリシーを定義することができます。</target>
        </trans-unit>
        <trans-unit id="b296bfc0cb9abab9e4f0fc5833d12d87d41f6225" translate="yes" xml:space="preserve">
          <source>You can disconnect a container from a network using the &lt;code&gt;docker network disconnect&lt;/code&gt; command.</source>
          <target state="translated">を使用して、コンテナをネットワークから切断できます。 &lt;code&gt;docker network disconnect&lt;/code&gt; コマンド。</target>
        </trans-unit>
        <trans-unit id="8b56c0ba69f5a5739d4f8b6a334b49dd22a34a96" translate="yes" xml:space="preserve">
          <source>You can do the same using &lt;a href=&quot;../../compose/index&quot;&gt;Docker Compose&lt;/a&gt; by setting volumes, environment variables, and overriding the default command for the Notary server containers in the Compose file.</source>
          <target state="translated">&lt;a href=&quot;../../compose/index&quot;&gt;Docker Compose&lt;/a&gt;を使用しても同じことができますボリューム、環境変数を設定し、Composeファイル内のNotaryサーバーコンテナーのデフォルトコマンドを上書きます。</target>
        </trans-unit>
        <trans-unit id="5f17fa73828668d04127c0011ad85b210142f794" translate="yes" xml:space="preserve">
          <source>You can download precompiled notary binary for 64 bit Linux or macOS from the Notary repository&amp;rsquo;s &lt;a href=&quot;https://github.com/docker/notary/releases&quot;&gt;Releases page on Github&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/docker/notary/releases&quot;&gt;Github&lt;/a&gt;の公証リポジトリのリリースページから、64ビットLinuxまたはmacOS用のプリコンパイルされた公証バイナリをダウンロードできます。。</target>
        </trans-unit>
        <trans-unit id="a5b056eb64925eecbf0e1fb8fe271b81da5f90d8" translate="yes" xml:space="preserve">
          <source>You can even cherry-pick particular tags of an image repository.</source>
          <target state="translated">画像リポジトリの特定のタグをチェリーピックすることもできます。</target>
        </trans-unit>
        <trans-unit id="fec9a747fa2db626d6d33241616752373d4113ff" translate="yes" xml:space="preserve">
          <source>You can even use the &lt;code&gt;.dockerignore&lt;/code&gt; file to exclude the &lt;code&gt;Dockerfile&lt;/code&gt; and &lt;code&gt;.dockerignore&lt;/code&gt; files. These files are still sent to the daemon because it needs them to do its job. But the &lt;code&gt;ADD&lt;/code&gt; and &lt;code&gt;COPY&lt;/code&gt; instructions do not copy them to the image.</source>
          <target state="translated">あなたも使用することができます &lt;code&gt;.dockerignore&lt;/code&gt; の除外するファイルを &lt;code&gt;Dockerfile&lt;/code&gt; と &lt;code&gt;.dockerignore&lt;/code&gt; ファイルを。これらのファイルは、ジョブを実行する必要があるため、引き続きデーモンに送信されます。ただし、 &lt;code&gt;ADD&lt;/code&gt; および &lt;code&gt;COPY&lt;/code&gt; 命令はそれらをイメージにコピーしません。</target>
        </trans-unit>
        <trans-unit id="b32fa6efc0dcd6937006d63f84895dda4ce4743d" translate="yes" xml:space="preserve">
          <source>You can extend a Compose file using the &lt;code&gt;extends&lt;/code&gt; field or by creating multiple Compose files. See &lt;a href=&quot;extends/index&quot;&gt;extends&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;extends&lt;/code&gt; フィールドを使用するか、複数のCompose ファイルを作成することにより、Composeファイルを拡張できます。見る&lt;a href=&quot;extends/index&quot;&gt;は&lt;/a&gt;、extendsをしてください。</target>
        </trans-unit>
        <trans-unit id="a6d34dedb5c59c676ecad8e950f7743f368e0a75" translate="yes" xml:space="preserve">
          <source>You can extend a service that itself extends another. You can extend indefinitely. Compose does not support circular references and &lt;code&gt;docker-compose&lt;/code&gt; returns an error if it encounters one.</source>
          <target state="translated">それ自体が別のサービスを拡張するサービスを拡張できます。無期限に延長できます。Composeは循環参照と &lt;code&gt;docker-compose&lt;/code&gt; をサポートしていませんはエラー返します。</target>
        </trans-unit>
        <trans-unit id="e92db1adfebd6a517c5785aa343cc25fcbb4b370" translate="yes" xml:space="preserve">
          <source>You can extend the capabilities of the Docker Engine by loading third-party plugins. This page explains the types of plugins and provides links to several volume and network plugins for Docker.</source>
          <target state="translated">サードパーティのプラグインを読み込むことで、Docker Engineの機能を拡張することができます。このページでは、プラグインの種類を説明し、Docker用のいくつかのボリュームプラグインとネットワークプラグインへのリンクを提供しています。</target>
        </trans-unit>
        <trans-unit id="4bad2dee85167024415e81d7b96a81289b815c3e" translate="yes" xml:space="preserve">
          <source>You can filter the output by an absolute timestamp or relative time on the host machine, using the following different time syntaxes:</source>
          <target state="translated">以下の異なる時間構文を使用して、ホストマシン上の絶対タイムスタンプまたは相対時間で出力をフィルタリングすることができます。</target>
        </trans-unit>
        <trans-unit id="df04d529ff62de418894272cab304569f9e76324" translate="yes" xml:space="preserve">
          <source>You can find additional documentation in the comments at the &lt;a href=&quot;https://github.com/docker/machine/tree/master/contrib/completion/bash&quot;&gt;top of each script&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/docker/machine/tree/master/contrib/completion/bash&quot;&gt;各スクリプトの上部&lt;/a&gt;にあるコメントで追加のドキュメントを見つけることができます。</target>
        </trans-unit>
        <trans-unit id="fd1103c88fffc440fb167ded49c92b16386ade82" translate="yes" xml:space="preserve">
          <source>You can find out all the ports mapped by not specifying a &lt;code&gt;PRIVATE_PORT&lt;/code&gt;, or just a specific mapping:</source>
          <target state="translated">&lt;code&gt;PRIVATE_PORT&lt;/code&gt; を指定しないことで、マッピングされているすべてのポートを確認できますか、特定のマッピングだけを。</target>
        </trans-unit>
        <trans-unit id="cb188165de80d2ad979cfe8d2d557d73bb44a63b" translate="yes" xml:space="preserve">
          <source>You can get the PID of &lt;code&gt;notary-server&lt;/code&gt; through</source>
          <target state="translated">&lt;code&gt;notary-server&lt;/code&gt; の PIDを取得できます、</target>
        </trans-unit>
        <trans-unit id="0c664cefd31ac791b31a6a585a1da985b6794823" translate="yes" xml:space="preserve">
          <source>You can go further and define (or re-define) configuration locally in &lt;code&gt;docker-compose.yml&lt;/code&gt;:</source>
          <target state="translated">さらに進んで、 &lt;code&gt;docker-compose.yml&lt;/code&gt; でローカルに構成を定義（または再定義）できます。</target>
        </trans-unit>
        <trans-unit id="9c1c428fd4cd1c187539e507698f4a729dd01434" translate="yes" xml:space="preserve">
          <source>You can grant a service access to multiple configs and you can mix long and short syntax. Defining a config does not imply granting a service access to it.</source>
          <target state="translated">複数の設定に対してサービスへのアクセスを許可することができ、長い構文と短い構文を混在させることができます。コンフィグを定義したからといって、そのコンフィグへのサービスアクセスを許可することを意味するわけではありません。</target>
        </trans-unit>
        <trans-unit id="8af54751122ba57689015bd164f246d7efe4825a" translate="yes" xml:space="preserve">
          <source>You can grant a service access to multiple secrets and you can mix long and short syntax. Defining a secret does not imply granting a service access to it.</source>
          <target state="translated">サービスに複数の秘密へのアクセスを許可することができ、長い構文と短い構文を混在させることができます。秘密を定義したからといって、その秘密へのサービスアクセスを許可することを意味するわけではありません。</target>
        </trans-unit>
        <trans-unit id="246d12350f6144da45d5ebaecb7f364eb63400cc" translate="yes" xml:space="preserve">
          <source>You can group your images together using names and tags, and then upload them to &lt;a href=&quot;../../../../get-started/index#/contributing-to-docker-hub&quot;&gt;&lt;em&gt;Share Images via Repositories&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">名前とタグを使用して画像をグループ化し、次にそれらをアップロードすることができます &lt;a href=&quot;../../../../get-started/index#/contributing-to-docker-hub&quot;&gt;&lt;em&gt;リポジトリ経由で画像共有にます&lt;/em&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da77cb90b4235ed299a01d3c8c9e021bd71505d6" translate="yes" xml:space="preserve">
          <source>You can ignore these warnings unless you actually need the ability to &lt;a href=&quot;https://docs.docker.com/config/containers&quot;&gt;limit these resources&lt;/a&gt;, in which case you should consult your operating system&amp;rsquo;s documentation for enabling them. &lt;a href=&quot;https://docs.docker.com/install/linux#your-kernel-does-not-support-cgroup-swap-limit-capabilities&quot;&gt;Learn more&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.docker.com/config/containers&quot;&gt;これらのリソース&lt;/a&gt;を制限する機能が実際に必要でない限り、これらの警告を無視できます。その場合、オペレーティングシステムのドキュメントを参照して、それらを有効にする必要があります。&lt;a href=&quot;https://docs.docker.com/install/linux#your-kernel-does-not-support-cgroup-swap-limit-capabilities&quot;&gt;もっと詳しく知る&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="54974f48a88eaa32cf54269306312e2e1444a2be" translate="yes" xml:space="preserve">
          <source>You can impose placement constraints on the service, and the constraints may not be able to be honored at a given time.</source>
          <target state="translated">サービスに配置の制約を課すことができ、その制約がある時間には尊重されない可能性があります。</target>
        </trans-unit>
        <trans-unit id="fe4b669d13fd0309ed5dbfc7aa25b36a81c5b2bb" translate="yes" xml:space="preserve">
          <source>You can inspect a secret, either by its &lt;em&gt;name&lt;/em&gt;, or &lt;em&gt;ID&lt;/em&gt;</source>
          <target state="translated">シークレットは、その&lt;em&gt;名前&lt;/em&gt;、または&lt;em&gt; IDでます&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="06ac559e7db35bedcf56cc1a4cab48fdc7f48777" translate="yes" xml:space="preserve">
          <source>You can inspect a service, either by its &lt;em&gt;name&lt;/em&gt;, or &lt;em&gt;ID&lt;/em&gt;</source>
          <target state="translated">サービスは、その&lt;em&gt;名前&lt;/em&gt;、または&lt;em&gt; IDでます&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f373c5a8a16e288ebf243865250bba9837a5908" translate="yes" xml:space="preserve">
          <source>You can inspect images with &lt;code&gt;docker inspect &amp;lt;tag or id&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;docker inspect &amp;lt;tag or id&amp;gt;&lt;/code&gt; で画像を検査できますます。</target>
        </trans-unit>
        <trans-unit id="8af07d9ea4ada580179d49442a80cc818fa3024d" translate="yes" xml:space="preserve">
          <source>You can join any machine, physical or virtual, to this swarm, using the same &lt;code&gt;docker swarm join&lt;/code&gt; command you used on &lt;code&gt;myvm2&lt;/code&gt;, and capacity is added to your cluster. Just run &lt;code&gt;docker stack deploy&lt;/code&gt; afterwards, and your app can take advantage of the new resources.</source>
          <target state="translated">&lt;code&gt;myvm2&lt;/code&gt; で使用したのと同じdocker &lt;code&gt;docker swarm join&lt;/code&gt; コマンドを使用して、物理または仮想の任意のマシンをこのスウォームに参加させることができ、容量がクラスターに追加されます。後で &lt;code&gt;docker stack deploy&lt;/code&gt; を実行するだけで、アプリは新しいリソースを利用できます。</target>
        </trans-unit>
        <trans-unit id="635f2b07d263911ac32fb8f3cd308a2b9e94737c" translate="yes" xml:space="preserve">
          <source>You can limit the set of nodes where a task can be scheduled by defining constraint expressions. Multiple constraints find nodes that satisfy every expression (AND match). Constraints can match node or Docker Engine labels as follows:</source>
          <target state="translated">制約式を定義することで、タスクがスケジューリングできるノードのセットを制限することができます。複数の制約は、すべての式を満たすノードを見つけます(ANDマッチ)。制約は、以下のようにノードまたはDocker Engineのラベルと一致させることができます。</target>
        </trans-unit>
        <trans-unit id="932d9584bdf7d063295a234173cea19d5f8905e7" translate="yes" xml:space="preserve">
          <source>You can load multiple label-files by supplying multiple &lt;code&gt;--label-file&lt;/code&gt; flags.</source>
          <target state="translated">複数の &lt;code&gt;--label-file&lt;/code&gt; フラグを指定して、複数のラベルファイルをロードできます。</target>
        </trans-unit>
        <trans-unit id="fb7ea10b657de774a945ed1c05bbb8230c047109" translate="yes" xml:space="preserve">
          <source>You can log into any public or private repository for which you have credentials. When you log in, the command stores credentials in &lt;code&gt;$HOME/.docker/config.json&lt;/code&gt; on Linux or &lt;code&gt;%USERPROFILE%/.docker/config.json&lt;/code&gt; on Windows, via the procedure described below.</source>
          <target state="translated">資格情報を持つ任意のパブリックまたはプライベートリポジトリにログインできます。ログインすると、以下の手順で、コマンドは資格情報を &lt;code&gt;$HOME/.docker/config.json&lt;/code&gt; （Linuxの場合）または &lt;code&gt;%USERPROFILE%/.docker/config.json&lt;/code&gt; （Windowsの場合）に保存します。</target>
        </trans-unit>
        <trans-unit id="c3e08a89a51095a72ff31f7fc841d8b1482feb83" translate="yes" xml:space="preserve">
          <source>You can loop over arrays and maps in the results to produce simple text output:</source>
          <target state="translated">結果の配列やマップをループさせて、シンプルなテキスト出力を作成することができます。</target>
        </trans-unit>
        <trans-unit id="c5c5662aed716bfdd648d1a8cd8019fe49d1ac3c" translate="yes" xml:space="preserve">
          <source>You can modify node attributes as follows:</source>
          <target state="translated">以下のようにノードの属性を変更することができます。</target>
        </trans-unit>
        <trans-unit id="ba9348ba8efc287e168073afdaea352d00ea5240" translate="yes" xml:space="preserve">
          <source>You can monitor the health of manager nodes by querying the docker &lt;code&gt;nodes&lt;/code&gt; API in JSON format through the &lt;code&gt;/nodes&lt;/code&gt; HTTP endpoint. Refer to the &lt;a href=&quot;https://docs.docker.com/engine/api/v1.25/#tag/Node&quot;&gt;nodes API documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;/nodes&lt;/code&gt; HTTPエンドポイントを介して、JSON形式でDocker &lt;code&gt;nodes&lt;/code&gt; APIをクエリすることにより、マネージャーノードの状態を監視できます。&lt;a href=&quot;https://docs.docker.com/engine/api/v1.25/#tag/Node&quot;&gt;ノードAPIドキュメントを&lt;/a&gt;参照してくださいをください。</target>
        </trans-unit>
        <trans-unit id="f5acdfcb9b53125d4412e62af654c3c8652d3b67" translate="yes" xml:space="preserve">
          <source>You can mount a host path as part of a definition for a single service, and there is no need to define it in the top level &lt;code&gt;volumes&lt;/code&gt; key.</source>
          <target state="translated">ホストパスは単一サービスの定義の一部としてマウントでき、最上位の &lt;code&gt;volumes&lt;/code&gt; キーで定義する必要はありません。</target>
        </trans-unit>
        <trans-unit id="7539dca6b06909c8cda5cc2e73206fc436c8315e" translate="yes" xml:space="preserve">
          <source>You can mount a relative path on the host, that expands relative to the directory of the Compose configuration file being used. Relative paths should always begin with &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;..&lt;/code&gt;.</source>
          <target state="translated">ホストに相対パスをマウントできます。これは、使用されているCompose構成ファイルのディレクトリを基準に拡張されます。相対パスは常にで始まる必要があります &lt;code&gt;.&lt;/code&gt; または &lt;code&gt;..&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af722015f2a94e745ccd11ed2043e37c82955685" translate="yes" xml:space="preserve">
          <source>You can mount a relative path on the host, which expands relative to the directory of the Compose configuration file being used. Relative paths should always begin with &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;..&lt;/code&gt;.</source>
          <target state="translated">ホストに相対パスをマウントできます。これは、使用されているCompose構成ファイルのディレクトリを基準に拡張されます。相対パスは常にで始まる必要があります &lt;code&gt;.&lt;/code&gt; または &lt;code&gt;..&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9574e393616f86dbebee4730c471f7aa8ee02bf6" translate="yes" xml:space="preserve">
          <source>You can name the directory something easy for you to remember. This directory is the context for your application image. The directory should only contain resources to build that image.</source>
          <target state="translated">このディレクトリには、覚えやすい名前を付けることができます。このディレクトリはアプリケーションイメージのコンテキストです。このディレクトリには、そのイメージを構築するためのリソースのみを格納してください。</target>
        </trans-unit>
        <trans-unit id="a3ec0713e5c8d70883468794734dc666e808b63b" translate="yes" xml:space="preserve">
          <source>You can narrow the kind of nodes your task can land on through the using the &lt;code&gt;--generic-resource&lt;/code&gt; flag (if the nodes advertise these resources):</source>
          <target state="translated">&lt;code&gt;--generic-resource&lt;/code&gt; フラグを使用して、タスクが到達できるノードの種類を絞り込むことができます（ノードがこれらのリソースをアドバタイズする場合）。</target>
        </trans-unit>
        <trans-unit id="f398176427488324c0c396b451d465f4c6c04315" translate="yes" xml:space="preserve">
          <source>You can now boot the app with &lt;a href=&quot;../reference/up/index&quot;&gt;docker-compose up&lt;/a&gt;:</source>
          <target state="translated">これで&lt;a href=&quot;../reference/up/index&quot;&gt;docker-compose upで&lt;/a&gt;アプリを起動できます：</target>
        </trans-unit>
        <trans-unit id="db3139a93c0afa28f4950e2904a43049b899a295" translate="yes" xml:space="preserve">
          <source>You can now run Docker commands on this host.</source>
          <target state="translated">これでこのホストでDockerコマンドを実行できるようになりました。</target>
        </trans-unit>
        <trans-unit id="08fde8ee16c2bacd43d172d7d7022270ca44d869" translate="yes" xml:space="preserve">
          <source>You can omit the value when specifying a build argument, in which case its value at build time is the value in the environment where Compose is running.</source>
          <target state="translated">ビルド引数を指定する際には値を省略することができますが、その場合、ビルド時の値はComposeが動作している環境での値になります。</target>
        </trans-unit>
        <trans-unit id="15062d652d78f4eb03a818cdf4f82e5d2934f2d6" translate="yes" xml:space="preserve">
          <source>You can override the &lt;code&gt;docker run&lt;/code&gt; command for the image if you want to pass different command line options. Both Notary server and Notary signer take the following command line arguments:</source>
          <target state="translated">異なるコマンドラインオプションを渡す場合は、イメージの &lt;code&gt;docker run&lt;/code&gt; コマンドをオーバーライドできます。NotaryサーバーとNotary署名者はどちらも次のコマンドライン引数を取ります。</target>
        </trans-unit>
        <trans-unit id="1fe5dbdf3702f4db7043e0341923ac8d965d060d" translate="yes" xml:space="preserve">
          <source>You can override the default labeling scheme for each container by specifying the &lt;code&gt;--security-opt&lt;/code&gt; flag. Specifying the level in the following command allows you to share the same content between containers.</source>
          <target state="translated">&lt;code&gt;--security-opt&lt;/code&gt; を指定することで、各コンテナーのデフォルトのラベル付けスキームをオーバーライドできますフラグを。次のコマンドでレベルを指定すると、コンテナー間で同じコンテンツを共有できます。</target>
        </trans-unit>
        <trans-unit id="dff2e4504e5bd5753ff17b2889bd7441acf98489" translate="yes" xml:space="preserve">
          <source>You can pass &lt;code&gt;unconfined&lt;/code&gt; to run a container without the default seccomp profile.</source>
          <target state="translated">デフォルトのseccompプロファイルなしでコンテナーを実行するために &lt;code&gt;unconfined&lt;/code&gt; なしで渡すことができます。</target>
        </trans-unit>
        <trans-unit id="082ad582100a8a00fe133f9f4fa5f232aaec8952" translate="yes" xml:space="preserve">
          <source>You can pass environment variables from your shell straight through to a service&amp;rsquo;s containers with the &lt;a href=&quot;../compose-file/index#environment&quot;&gt;&amp;lsquo;environment&amp;rsquo; key&lt;/a&gt; by not giving them a value, just like with &lt;code&gt;docker run -e VARIABLE ...&lt;/code&gt;:</source>
          <target state="translated">あなたがまっすぐサービスのコンテナへを通して、あなたのシェルからの環境変数を渡すことができる&lt;a href=&quot;../compose-file/index#environment&quot;&gt;「環境」キー&lt;/a&gt;だけと同じように、それらに値を与えないことで &lt;code&gt;docker run -e VARIABLE ...&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="76662786c039a093df9f1de04a50afac10cbe11b" translate="yes" xml:space="preserve">
          <source>You can pass multiple environment variables from an external file through to a service&amp;rsquo;s containers with the &lt;a href=&quot;../compose-file/index#env_file&quot;&gt;&amp;lsquo;env_file&amp;rsquo; option&lt;/a&gt;, just like with &lt;code&gt;docker run --env-file=FILE ...&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;../compose-file/index#env_file&quot;&gt;docker &lt;/a&gt; &lt;code&gt;docker run --env-file=FILE ...&lt;/code&gt; と同じように、「env_file」オプションを使用して、外部ファイルからサービスのコンテナーに複数の環境変数を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="43fce4891e31d586e186bc9fba00b589fcb9e3dd" translate="yes" xml:space="preserve">
          <source>You can pause, restart, and stop containers that are connected to a network. A container connects to its configured networks when it runs.</source>
          <target state="translated">ネットワークに接続されているコンテナを一時停止、再起動、停止することができます。コンテナは、実行時に設定されたネットワークに接続します。</target>
        </trans-unit>
        <trans-unit id="2b4bcfda039f6f4d4346afdeff61502363f4d331" translate="yes" xml:space="preserve">
          <source>You can print the inspect output in a human-readable format instead of the default JSON output, by using the &lt;code&gt;--pretty&lt;/code&gt; option:</source>
          <target state="translated">&lt;code&gt;--pretty&lt;/code&gt; オプションを使用して、デフォルトのJSON出力の代わりに人間が読める形式で検査出力を印刷できます。</target>
        </trans-unit>
        <trans-unit id="ba01aa16dc20b8472fabdb8c7d86db75e4da2965" translate="yes" xml:space="preserve">
          <source>You can promote a worker node to be a manager by running &lt;code&gt;docker node promote&lt;/code&gt;. For example, you may want to promote a worker node when you take a manager node offline for maintenance. See &lt;a href=&quot;../../../reference/commandline/node_promote/index&quot;&gt;node promote&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;docker node promote&lt;/code&gt; を実行すると、ワーカーノードをマネージャーに昇格できます。たとえば、メンテナンスのためにマネージャーノードをオフラインにするときに、ワーカーノードを昇格させることができます。&lt;a href=&quot;../../../reference/commandline/node_promote/index&quot;&gt;ノードの昇格を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9e98cb86757329b5fe2a807e3428044b4702503f" translate="yes" xml:space="preserve">
          <source>You can promote a worker node to the manager role. This is useful when a manager node becomes unavailable or if you want to take a manager offline for maintenance. Similarly, you can demote a manager node to the worker role.</source>
          <target state="translated">ワーカーノードをマネージャーロールに昇格させることができます。これは、マネージャノードが使用できなくなった場合や、メンテナンスのためにマネージャをオフラインにしたい場合に便利です。同様に、マネージャノードをワーカーロールに降格させることもできます。</target>
        </trans-unit>
        <trans-unit id="e722a9ce5d89f2df95da5a1d77ce8eca2153947c" translate="yes" xml:space="preserve">
          <source>You can protect the Docker daemon socket and ensure only trusted Docker client connections. For more information, &lt;a href=&quot;https/index&quot;&gt;Protect the Docker daemon socket&lt;/a&gt;</source>
          <target state="translated">Dockerデーモンソケットを保護し、信頼できるDockerクライアント接続のみを確保できます。詳細について&lt;a href=&quot;https/index&quot;&gt;は、Dockerデーモンソケットを保護する&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6b73c81fe9530caed6a482fa481709daaa399f6" translate="yes" xml:space="preserve">
          <source>You can publish a port for an existing service using the following command:</source>
          <target state="translated">以下のコマンドを使用して、既存のサービスのポートを公開することができます。</target>
        </trans-unit>
        <trans-unit id="838df0c069b715857deab2e61ae048adb6265602" translate="yes" xml:space="preserve">
          <source>You can publish service ports to make them available externally to the swarm using the &lt;code&gt;--publish&lt;/code&gt; flag. The &lt;code&gt;--publish&lt;/code&gt; flag can take two different styles of arguments. The short version is positional, and allows you to specify the published port and target port separated by a colon.</source>
          <target state="translated">&lt;code&gt;--publish&lt;/code&gt; フラグを使用して、サービスポートを公開し、それらをスウォームの外部で使用できるようにすることができます。 &lt;code&gt;--publish&lt;/code&gt; フラグは、引数の二つの異なるスタイルを取ることができます。短いバージョンは定位置であり、公開ポートとターゲットポートをコロンで区切って指定できます。</target>
        </trans-unit>
        <trans-unit id="57ece701d3047cc8770034fa3141613ce528dda6" translate="yes" xml:space="preserve">
          <source>You can reach the nginx server on port 8080 of every swarm node. If you add a node to the swarm, a nginx task is started on it. You cannot start another service or container on any swarm node which binds to port 8080.</source>
          <target state="translated">各スウォームノードの8080番ポートでnginxサーバーにアクセスすることができます。スウォームにノードを追加すると、そのノードで nginx タスクが起動されます。8080番ポートにバインドされているスウォームノードでは、別のサービスやコンテナを起動することはできません。</target>
        </trans-unit>
        <trans-unit id="bbd70e3c7b23f931f6c62d58f6398d3790816da1" translate="yes" xml:space="preserve">
          <source>You can register an already existing docker host by passing the daemon url. With that, you can have the same workflow as on a host provisioned by docker-machine.</source>
          <target state="translated">デーモンのURLを渡すことで、既存のdockerホストを登録することができます。これで、docker-machineでプロビジョニングされたホストと同じワークフローが可能になります。</target>
        </trans-unit>
        <trans-unit id="19c9a00629f9951f9f0e8c15c0064d25043b9fd1" translate="yes" xml:space="preserve">
          <source>You can remove all trust data from a repository, including repository, target, snapshot and all delegations keys using the Notary CLI.</source>
          <target state="translated">Notary CLI を使用して、リポジトリ、ターゲット、スナップショット、およびすべての委任キーを含むリポジトリからすべての信頼データを削除することができます。</target>
        </trans-unit>
        <trans-unit id="7f8aadb92e13f774ea968f12c8408f9bba305429" translate="yes" xml:space="preserve">
          <source>You can remove an image using its short or long ID, its tag, or its digest. If an image has one or more tags referencing it, you must remove all of them before the image is removed. Digest references are removed automatically when an image is removed by tag.</source>
          <target state="translated">画像を削除するには、短い ID や長い ID、タグ、ダイジェストを使います。画像を参照しているタグが1つ以上ある場合は、画像を削除する前にそれらをすべて削除しなければなりません。ダイジェスト参照は、画像がタグで削除されると自動的に削除されます。</target>
        </trans-unit>
        <trans-unit id="21a68d3c6f8dbcbd6031c0c15f00a9851fa85f95" translate="yes" xml:space="preserve">
          <source>You can remove individual keys and/or paths by passing keys as arguments, and/or paths under the &lt;code&gt;--paths&lt;/code&gt; flag. Use &lt;code&gt;--all-paths&lt;/code&gt; to clear all paths for this role. If you specify all key IDs currently in the delegation role, you delete the role entirely.</source>
          <target state="translated">引数としてキーを渡すことで、個々のキーやパスを削除したり、 &lt;code&gt;--paths&lt;/code&gt; フラグでパスを削除したりできます。このロールのすべての &lt;code&gt;--all-paths&lt;/code&gt; をクリアするには、-all-pathsを使用します。現在委任ロールにあるすべてのキーIDを指定すると、ロールが完全に削除されます。</target>
        </trans-unit>
        <trans-unit id="c5a016646590241f96f97f9091145c5ba3ba37f7" translate="yes" xml:space="preserve">
          <source>You can reserve a specific amount of memory for a service. If no node in the swarm has the required amount of memory, the service remains in a pending state until a node is available which can run its tasks. If you specify a very large value, such as 500 GB, the task stays pending forever, unless you really have a node which can satisfy it.</source>
          <target state="translated">サービスに特定のメモリ量を予約することができます。スウォーム内のどのノードも必要なメモリ量を持っていない場合、サービスはタスクを実行できるノードが利用可能になるまで保留状態になります。500 GB のような非常に大きな値を指定すると、本当にそれを満たすことができるノードがない限り、タスクは永遠に保留状態のままになります。</target>
        </trans-unit>
        <trans-unit id="e6bb17a14765dffc602e449c4365de8a00ec9be4" translate="yes" xml:space="preserve">
          <source>You can reset a containers entrypoint by passing an empty string, for example:</source>
          <target state="translated">例えば、空の文字列を渡すことで、コンテナのエントリポイントをリセットすることができます。</target>
        </trans-unit>
        <trans-unit id="0e6f80e9588a0412025ca8c3939a66c86c1e1b58" translate="yes" xml:space="preserve">
          <source>You can run &lt;code&gt;curl -4 http://localhost:4000&lt;/code&gt; several times in a row, or go to that URL in your browser and hit refresh a few times.</source>
          <target state="translated">あなたは実行することができます &lt;code&gt;curl -4 http://localhost:4000&lt;/code&gt; 行に何回か、またはお使いのブラウザでそのURLにアクセスして、数回リフレッシュヒット。</target>
        </trans-unit>
        <trans-unit id="a987fe6644c2487eecc072d66c5cd84119780b75" translate="yes" xml:space="preserve">
          <source>You can run &lt;code&gt;docker node inspect &amp;lt;NODE-ID&amp;gt;&lt;/code&gt; on a manager node to view the details for an individual node. The output defaults to JSON format, but you can pass the &lt;code&gt;--pretty&lt;/code&gt; flag to print the results in human-readable format. For example:</source>
          <target state="translated">あなたは実行することができます &lt;code&gt;docker node inspect &amp;lt;NODE-ID&amp;gt;&lt;/code&gt; 個々のノードの詳細を表示する管理ノード上で。出力のデフォルトはJSON形式ですが、 &lt;code&gt;--pretty&lt;/code&gt; フラグを渡して、人間が読める形式で結果を出力できます。例えば：</target>
        </trans-unit>
        <trans-unit id="328662d283cbddbd1f77e072f4f616c71a9d05ef" translate="yes" xml:space="preserve">
          <source>You can run &lt;code&gt;docker stack rm&lt;/code&gt; to stop the app and take down the stack. This removes any config that was created by &lt;code&gt;docker stack deploy&lt;/code&gt; with the same stack name. This removes &lt;em&gt;all&lt;/em&gt; configs, including those not referenced by services and those remaining after a &lt;code&gt;docker service update --config-rm&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;docker stack rm&lt;/code&gt; を実行してアプリを停止し、スタックを削除できます。これにより、同じスタック名で &lt;code&gt;docker stack deploy&lt;/code&gt; によって作成された構成がすべて削除されます。これにより、サービスによって参照されていないものや、 &lt;code&gt;docker service update --config-rm&lt;/code&gt; 後に残ったものを含め、&lt;em&gt;すべての&lt;/em&gt;構成が削除されます。</target>
        </trans-unit>
        <trans-unit id="5283bcac59779194117811297db151c17f2c8d23" translate="yes" xml:space="preserve">
          <source>You can run &lt;code&gt;ifconfig&lt;/code&gt; on Linux or macOS to see a list of the available network interfaces.</source>
          <target state="translated">LinuxまたはmacOSで &lt;code&gt;ifconfig&lt;/code&gt; を実行して、使用可能なネットワークインターフェイスのリストを表示できます。</target>
        </trans-unit>
        <trans-unit id="11c1104b341f7bbc0fd2ed7494cfdbbc75b3f679" translate="yes" xml:space="preserve">
          <source>You can run Compose on macOS, Windows, and 64-bit Linux.</source>
          <target state="translated">macOS、Windows、64ビットLinuxでComposeを実行することができます。</target>
        </trans-unit>
        <trans-unit id="e5ba2e618aefdabfec0408bcecfa999900cba2e5" translate="yes" xml:space="preserve">
          <source>You can run a kernel with GRSEC and PAX. This adds many safety checks, both at compile-time and run-time; it also defeats many exploits, thanks to techniques like address randomization. It doesn&amp;rsquo;t require Docker-specific configuration, since those security features apply system-wide, independent of containers.</source>
          <target state="translated">GRSECとPAXでカーネルを実行できます。これにより、コンパイル時と実行時の両方で多くの安全性チェックが追加されます。また、アドレスのランダム化などの手法のおかげで、多くのエクスプロイトを無効にします。これらのセキュリティ機能はコンテナに関係なくシステム全体に適用されるため、Docker固有の構成は必要ありません。</target>
        </trans-unit>
        <trans-unit id="328e110e3664fc82b61c3c5d6df798907ca4759e" translate="yes" xml:space="preserve">
          <source>You can run docker commands from a local terminal to the active docker machine.</source>
          <target state="translated">ローカルターミナルからアクティブなdockerマシンにdockerコマンドを実行することができます。</target>
        </trans-unit>
        <trans-unit id="303446b4ab0f526af6a38c87e9a504ee76c70129" translate="yes" xml:space="preserve">
          <source>You can run the images with your own configuration files entirely. You just need to mount your configuration directory, and then pass the path to that configuration file as an argument to the &lt;code&gt;docker run&lt;/code&gt; command.</source>
          <target state="translated">独自の構成ファイルでイメージを完全に実行できます。構成ディレクトリをマウントし、その構成ファイルへのパスを引数として &lt;code&gt;docker run&lt;/code&gt; コマンドに渡すだけです。</target>
        </trans-unit>
        <trans-unit id="d77082406ceff66bf6c3f820398824ca13529c0f" translate="yes" xml:space="preserve">
          <source>You can scale the app by changing the &lt;code&gt;replicas&lt;/code&gt; value in &lt;code&gt;docker-compose.yml&lt;/code&gt;, saving the change, and re-running the &lt;code&gt;docker stack deploy&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;docker-compose.yml&lt;/code&gt; の &lt;code&gt;replicas&lt;/code&gt; 値を変更し、変更を保存して、 &lt;code&gt;docker stack deploy&lt;/code&gt; コマンドを再実行することで、アプリをスケーリングできます。</target>
        </trans-unit>
        <trans-unit id="3a3df3eab4720b1ab21769a0a788267ad0e50b48" translate="yes" xml:space="preserve">
          <source>You can see a pending change by running &lt;code&gt;notary status&lt;/code&gt; for the modified repository. The &lt;code&gt;status&lt;/code&gt; subcommand is an offline operation and as such, does not require the &lt;code&gt;-s&lt;/code&gt; flag, however it silently ignores the flag if provided. Failing to provide the correct value for the &lt;code&gt;-d&lt;/code&gt; flag may show the wrong (probably empty) change list:</source>
          <target state="translated">変更されたリポジトリーの &lt;code&gt;notary status&lt;/code&gt; を実行すると、保留中の変更を確認できます。 &lt;code&gt;status&lt;/code&gt; サブコマンドは、オフライン操作で、そのようなものとして、必要としない &lt;code&gt;-s&lt;/code&gt; 提供される場合、それはサイレントフラグを無視しかし、フラグ。 &lt;code&gt;-d&lt;/code&gt; フラグに正しい値を指定しないと、間違った（おそらく空の）変更リストが表示されることがあります。</target>
        </trans-unit>
        <trans-unit id="8d3e8374391fc9a0034e67426701fc14f4e5cef0" translate="yes" xml:space="preserve">
          <source>You can see from the output of &lt;code&gt;top&lt;/code&gt; that the specified &lt;code&gt;ENTRYPOINT&lt;/code&gt; is not &lt;code&gt;PID 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;top&lt;/code&gt; の出力から、指定された &lt;code&gt;ENTRYPOINT&lt;/code&gt; が &lt;code&gt;PID 1&lt;/code&gt; ではないことがわかります。</target>
        </trans-unit>
        <trans-unit id="b1334386ec8559c8d189eff912d1547dc12f72cf" translate="yes" xml:space="preserve">
          <source>You can see that swarm has created 4 new tasks to scale to a total of 5 running instances of Alpine Linux. The tasks are distributed between the three nodes of the swarm. One is running on &lt;code&gt;manager1&lt;/code&gt;.</source>
          <target state="translated">swarmが4つの新しいタスクを作成して、合計5つの実行中のAlpine Linuxのインスタンスにスケーリングすることがわかります。タスクは、スウォームの3つのノード間で分散されます。1つは &lt;code&gt;manager1&lt;/code&gt; で実行されています。</target>
        </trans-unit>
        <trans-unit id="e54c4523df4d6c46ffbc31071cd45ebc29411e65" translate="yes" xml:space="preserve">
          <source>You can see the &lt;code&gt;targets/releases&lt;/code&gt; with its paths and key IDs. If you wish to modify these fields, you can do so with additional &lt;code&gt;notary delegation add&lt;/code&gt; or &lt;code&gt;notary delegation remove&lt;/code&gt; commands on this role.</source>
          <target state="translated">&lt;code&gt;targets/releases&lt;/code&gt; とそのパスおよびキーID を確認できます。これらのフィールドを変更する場合は、この役割で追加の &lt;code&gt;notary delegation add&lt;/code&gt; コマンドまたは &lt;code&gt;notary delegation remove&lt;/code&gt; コマンドを使用して行うことができます。</target>
        </trans-unit>
        <trans-unit id="ed7747393f058ad025c5dfc49f9bf9b984c5a165" translate="yes" xml:space="preserve">
          <source>You can see which keys have been pushed to the Notary server for each repository with the &lt;code&gt;$ docker trust inspect&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;$ docker trust inspect&lt;/code&gt; コマンドを使用して、各リポジトリのNotaryサーバーにプッシュされたキーを確認できます。</target>
        </trans-unit>
        <trans-unit id="dd4d93e030e6e7c3ac46f903e577e707ad0b01a8" translate="yes" xml:space="preserve">
          <source>You can select working directory for the command to execute into</source>
          <target state="translated">コマンドを実行するディレクトリは</target>
        </trans-unit>
        <trans-unit id="c5655211393a566c7f3241e46893081c62f77a67" translate="yes" xml:space="preserve">
          <source>You can send commands to your VMs using &lt;code&gt;docker-machine ssh&lt;/code&gt;. Instruct &lt;code&gt;myvm1&lt;/code&gt; to become a swarm manager with &lt;code&gt;docker swarm init&lt;/code&gt; and look for output like this:</source>
          <target state="translated">&lt;code&gt;docker-machine ssh&lt;/code&gt; を使用してVMにコマンドを送信できます。 &lt;code&gt;myvm1&lt;/code&gt; にdocker &lt;code&gt;docker swarm init&lt;/code&gt; を備えたswarm managerになるように指示し、次のような出力を探します。</target>
        </trans-unit>
        <trans-unit id="0e32f16ec972339a1cfa52af2165521773a945bf" translate="yes" xml:space="preserve">
          <source>You can set &lt;a href=&quot;../envvars/index&quot;&gt;environment variables&lt;/a&gt; for various &lt;code&gt;docker-compose&lt;/code&gt; options, including the &lt;code&gt;-f&lt;/code&gt; and &lt;code&gt;-p&lt;/code&gt; flags.</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; フラグや &lt;code&gt;-p&lt;/code&gt; フラグなど、さまざまな &lt;code&gt;docker-compose&lt;/code&gt; オプションの&lt;a href=&quot;../envvars/index&quot;&gt;環境変数&lt;/a&gt;を設定できます。</target>
        </trans-unit>
        <trans-unit id="4f98630e4c60efb413612a09c335c0161adf8537" translate="yes" xml:space="preserve">
          <source>You can set default values for any environment variables referenced in the Compose file, or used to configure Compose, in an &lt;a href=&quot;../env-file/index&quot;&gt;environment file&lt;/a&gt; named &lt;code&gt;.env&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;.env&lt;/code&gt; という名前の&lt;a href=&quot;../env-file/index&quot;&gt;環境ファイル&lt;/a&gt;で、Composeファイルで参照される、またはComposeの構成に使用される環境変数のデフォルト値を設定できます。</target>
        </trans-unit>
        <trans-unit id="c4f623772cb08e19671edc07af3fc2ebe0b7a4ee" translate="yes" xml:space="preserve">
          <source>You can set default values for environment variables using a &lt;a href=&quot;../../env-file/index&quot;&gt;&lt;code&gt;.env&lt;/code&gt; file&lt;/a&gt;, which Compose automatically looks for. Values set in the shell environment override those set in the &lt;code&gt;.env&lt;/code&gt; file.</source>
          <target state="translated">Composeが自動的に検索する&lt;a href=&quot;../../env-file/index&quot;&gt; &lt;code&gt;.env&lt;/code&gt; ファイル&lt;/a&gt;を使用して、環境変数のデフォルト値を設定できます。シェル環境で設定された値は、 &lt;code&gt;.env&lt;/code&gt; ファイルで設定された値をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="20ea6de812aaec42e316e7feac7e30fa27ed3876" translate="yes" xml:space="preserve">
          <source>You can set default values for environment variables using a &lt;a href=&quot;../env-file/index&quot;&gt;&lt;code&gt;.env&lt;/code&gt; file&lt;/a&gt;, which Compose automatically looks for. Values set in the shell environment override those set in the &lt;code&gt;.env&lt;/code&gt; file.</source>
          <target state="translated">Composeが自動的に検索する&lt;a href=&quot;../env-file/index&quot;&gt; &lt;code&gt;.env&lt;/code&gt; ファイル&lt;/a&gt;を使用して、環境変数のデフォルト値を設定できます。シェル環境で設定された値は、 &lt;code&gt;.env&lt;/code&gt; ファイルで設定された値をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="1859972fb60c2c0baf48b09dc5ecf7d631e9f68d" translate="yes" xml:space="preserve">
          <source>You can set environment variables in a service&amp;rsquo;s containers with the &lt;a href=&quot;../compose-file/index#environment&quot;&gt;&amp;lsquo;environment&amp;rsquo; key&lt;/a&gt;, just like with &lt;code&gt;docker run -e VARIABLE=VALUE ...&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;docker run -e VARIABLE=VALUE ...&lt;/code&gt; と同じように、&lt;a href=&quot;../compose-file/index#environment&quot;&gt;「environment」キー&lt;/a&gt;を使用してサービスのコンテナに環境変数を設定できます。</target>
        </trans-unit>
        <trans-unit id="6a30ba42acde13646082943d7312246e45dc251a" translate="yes" xml:space="preserve">
          <source>You can set the ownership (&lt;code&gt;uid&lt;/code&gt; and &lt;code&gt;gid&lt;/code&gt;) for the config, using either the numerical ID or the name of the user or group. You can also specify the file permissions (&lt;code&gt;mode&lt;/code&gt;). These settings are ignored for Windows containers.</source>
          <target state="translated">数値IDまたはユーザーまたはグループの名前を使用して、構成の所有権（ &lt;code&gt;uid&lt;/code&gt; および &lt;code&gt;gid&lt;/code&gt; ）を設定できます。ファイルのアクセス許可（ &lt;code&gt;mode&lt;/code&gt; ）を指定することもできます。これらの設定は、Windowsコンテナでは無視されます。</target>
        </trans-unit>
        <trans-unit id="7d987625363d28763599a39d8667739669a63c92" translate="yes" xml:space="preserve">
          <source>You can set up the service to divide tasks evenly over different categories of nodes. One example of where this can be useful is to balance tasks over a set of datacenters or availability zones. The example below illustrates this:</source>
          <target state="translated">異なるカテゴリのノードにタスクを均等に分割するようにサービスを設定することができます。これが便利な例としては、データセンターやアベイラビリティゾーンのセットでタスクのバランスをとることが挙げられます。以下の例はこれを示しています。</target>
        </trans-unit>
        <trans-unit id="251f33af01558540aaf7aec9d2c9d53828e0f7f6" translate="yes" xml:space="preserve">
          <source>You can setup kernel memory limit to constrain these kinds of memory. For example, every process consumes some stack pages. By limiting kernel memory, you can prevent new processes from being created when the kernel memory usage is too high.</source>
          <target state="translated">カーネルのメモリ制限を設定して、これらのメモリを制限することができます。例えば、すべてのプロセスがいくつかのスタックページを消費しているとします。カーネルメモリを制限することで、カーネルメモリの使用量が多すぎる場合に新しいプロセスが生成されるのを防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="a422635c1d6ba19b7a2492c59b437e80063f1579" translate="yes" xml:space="preserve">
          <source>You can source your &lt;code&gt;~/.bash_profile&lt;/code&gt; or launch a new terminal to utilize completion.</source>
          <target state="translated">&lt;code&gt;~/.bash_profile&lt;/code&gt; 入手するか、新しいターミナルを起動して完了を利用できます。</target>
        </trans-unit>
        <trans-unit id="1a33ea7627956920ae841253cc243f1fb3e36da7" translate="yes" xml:space="preserve">
          <source>You can specify a &lt;code&gt;URL&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; (dash) to take data directly from &lt;code&gt;STDIN&lt;/code&gt;. The &lt;code&gt;URL&lt;/code&gt; can point to an archive (.tar, .tar.gz, .tgz, .bzip, .tar.xz, or .txz) containing a filesystem or to an individual file on the Docker host. If you specify an archive, Docker untars it in the container relative to the &lt;code&gt;/&lt;/code&gt; (root). If you specify an individual file, you must specify the full path within the host. To import from a remote location, specify a &lt;code&gt;URI&lt;/code&gt; that begins with the &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt; protocol.</source>
          <target state="translated">&lt;code&gt;URL&lt;/code&gt; または &lt;code&gt;-&lt;/code&gt; （ダッシュ）を指定して、 &lt;code&gt;STDIN&lt;/code&gt; から直接データを取得できます。 &lt;code&gt;URL&lt;/code&gt; は、ファイルシステムを含むアーカイブ（の.tar、.tar.gzファイル、.tgzという、.bzip、.tar.xz、または.txz）またはドッカーホスト上の個々のファイルを指すことができます。アーカイブを指定すると、Dockerは &lt;code&gt;/&lt;/code&gt; （ルート）を基準にしてコンテナー内のアーカイブを解凍します。個別のファイルを指定する場合は、ホスト内のフルパスを指定する必要があります。リモートの場所からインポートするには、 &lt;code&gt;http://&lt;/code&gt; または &lt;code&gt;https://&lt;/code&gt; プロトコルで始まる &lt;code&gt;URI&lt;/code&gt; を指定します。</target>
        </trans-unit>
        <trans-unit id="f8a985d72b5b501738ffd28a60108e2ec10ddb5f" translate="yes" xml:space="preserve">
          <source>You can specify a custom signal either by &lt;em&gt;name&lt;/em&gt;, or &lt;em&gt;number&lt;/em&gt;. The &lt;code&gt;SIG&lt;/code&gt; prefix is optional, so the following examples are equivalent:</source>
          <target state="translated">&lt;em&gt;名前&lt;/em&gt;または&lt;em&gt;番号の&lt;/em&gt;いずれかでカスタム信号を指定できます。 &lt;code&gt;SIG&lt;/code&gt; の接頭辞はオプションなので、次の例は等価です。</target>
        </trans-unit>
        <trans-unit id="d494d1bea151f81da76c32ed28441678109c9d47" translate="yes" xml:space="preserve">
          <source>You can specify a plain string for the &lt;code&gt;ENTRYPOINT&lt;/code&gt; and it will execute in &lt;code&gt;/bin/sh -c&lt;/code&gt;. This form will use shell processing to substitute shell environment variables, and will ignore any &lt;code&gt;CMD&lt;/code&gt; or &lt;code&gt;docker run&lt;/code&gt; command line arguments. To ensure that &lt;code&gt;docker stop&lt;/code&gt; will signal any long running &lt;code&gt;ENTRYPOINT&lt;/code&gt; executable correctly, you need to remember to start it with &lt;code&gt;exec&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;ENTRYPOINT&lt;/code&gt; にはプレーンな文字列を指定でき、それは &lt;code&gt;/bin/sh -c&lt;/code&gt; で実行されます。この形式は、シェル処理を使用してシェル環境変数を置き換え、 &lt;code&gt;CMD&lt;/code&gt; または &lt;code&gt;docker run&lt;/code&gt; コマンドライン引数を無視します。ことを確認するために、 &lt;code&gt;docker stop&lt;/code&gt; 任意の長時間実行通知します &lt;code&gt;ENTRYPOINT&lt;/code&gt; の正しく実行可能ファイルを、あなたがそれを起動するために覚えておく必要が &lt;code&gt;exec&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="399e5a9f8c49dd7715280366fd693b6ae6d92e22" translate="yes" xml:space="preserve">
          <source>You can specify a repository and tag at which to save the new image if the build succeeds:</source>
          <target state="translated">ビルドが成功した場合に新しいイメージを保存するリポジトリとタグを指定できます。</target>
        </trans-unit>
        <trans-unit id="8cd377d81b4ee6b93d979e7f8fe73d77ba2213a9" translate="yes" xml:space="preserve">
          <source>You can specify multiple placement preferences, and they are processed in the order they are encountered. The following example sets up a service with multiple placement preferences. Tasks are spread first over the various datacenters, and then over racks (as indicated by the respective labels):</source>
          <target state="translated">複数の配置優先順位を指定することができ、それらは遭遇した順に処理されます。以下の例では、複数の配置優先順位を指定してサービスをセットアップしています。タスクは、最初にさまざまなデータセンターに分散され、次にラックに分散されます(それぞれのラベルで示されています)。</target>
        </trans-unit>
        <trans-unit id="32033cfbd2ccff707470fee24e57c5b8376f5087" translate="yes" xml:space="preserve">
          <source>You can specify options like &lt;code&gt;-a=[]&lt;/code&gt; multiple times in a single command line, for example in these commands:</source>
          <target state="translated">&lt;code&gt;-a=[]&lt;/code&gt; のようなオプションは、たとえば次のコマンドのように、1つのコマンドラインで複数回指定できます。</target>
        </trans-unit>
        <trans-unit id="729a2c9f8adb8b26d1f5b980c2de123f2795288a" translate="yes" xml:space="preserve">
          <source>You can specify the IP address you want to be assigned to the container&amp;rsquo;s interface.</source>
          <target state="translated">コンテナーのインターフェースに割り当てるIPアドレスを指定できます。</target>
        </trans-unit>
        <trans-unit id="15f125d4403958fe272b0811b709fa635d3ac94f" translate="yes" xml:space="preserve">
          <source>You can specify the isolation mode when creating or updating a new service using the &lt;code&gt;--isolation&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;--isolation&lt;/code&gt; フラグを使用して、新しいサービスを作成または更新するときに分離モードを指定できます。</target>
        </trans-unit>
        <trans-unit id="9f53540451c9d5bf81993aec87930b8dd485ffd4" translate="yes" xml:space="preserve">
          <source>You can specify the maximum amount of times Docker will try to restart the container when using the &lt;strong&gt;on-failure&lt;/strong&gt; policy. The default is that Docker will try forever to restart the container. The number of (attempted) restarts for a container can be obtained via &lt;a href=&quot;../commandline/inspect/index&quot;&gt;&lt;code&gt;docker inspect&lt;/code&gt;&lt;/a&gt;. For example, to get the number of restarts for container &amp;ldquo;my-container&amp;rdquo;;</source>
          <target state="translated">&lt;strong&gt;障害時&lt;/strong&gt;ポリシーを使用し&lt;strong&gt;ている&lt;/strong&gt;場合に、Dockerがコンテナーの再起動を試行する最大回数を指定できます。デフォルトでは、Dockerはコンテナを再起動しようとします。コンテナーの（試行された）再起動の数は、&lt;a href=&quot;../commandline/inspect/index&quot;&gt; &lt;code&gt;docker inspect&lt;/code&gt; &lt;/a&gt;を介して取得できます。たとえば、コンテナ「my-container」の再起動の数を取得するには、</target>
        </trans-unit>
        <trans-unit id="c740fa945150f7498d881c6982f5aeeac897ea72" translate="yes" xml:space="preserve">
          <source>You can specify whether the service needs to run a specific number of replicas or should run globally on every worker node. See &lt;a href=&quot;#replicated-or-global-services&quot;&gt;Replicated or global services&lt;/a&gt;.</source>
          <target state="translated">サービスが特定の数のレプリカを実行する必要があるか、すべてのワーカーノードでグローバルに実行する必要があるかを指定できます。&lt;a href=&quot;#replicated-or-global-services&quot;&gt;複製サービスまたはグローバルサービスを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ab45f0d60b94c0bbcc9c165fbe3559341becae1f" translate="yes" xml:space="preserve">
          <source>You can start &lt;code&gt;dockerd&lt;/code&gt; with the &lt;code&gt;--userns-remap&lt;/code&gt; flag or follow this procedure to configure the daemon using the &lt;code&gt;daemon.json&lt;/code&gt; configuration file. The &lt;code&gt;daemon.json&lt;/code&gt; method is recommended. If you use the flag, use the following command as a model:</source>
          <target state="translated">&lt;code&gt;--userns-remap&lt;/code&gt; フラグを &lt;code&gt;dockerd&lt;/code&gt; してdockerdを起動するか、この手順に従って、 &lt;code&gt;daemon.json&lt;/code&gt; 設定ファイルを使用してデーモンを設定できます。 &lt;code&gt;daemon.json&lt;/code&gt; の方法が推奨されます。フラグを使用する場合は、次のコマンドをモデルとして使用します。</target>
        </trans-unit>
        <trans-unit id="84dd2459f290c6f64e99ec8900761eb1f509003f" translate="yes" xml:space="preserve">
          <source>You can supply multiple &lt;code&gt;-f&lt;/code&gt; configuration files. When you supply multiple files, Compose combines them into a single configuration. Compose builds the configuration in the order you supply the files. Subsequent files override and add to their predecessors.</source>
          <target state="translated">複数の &lt;code&gt;-f&lt;/code&gt; 構成ファイルを指定できます。複数のファイルを指定すると、Composeはそれらを1つの構成に結合します。Composeは、ファイルを指定した順序で構成を構築します。後続のファイルはオーバーライドして、それらの先行ファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="822ff10e2d5010ca6995def571295bbdd4e90391" translate="yes" xml:space="preserve">
          <source>You can tear down the stack with &lt;code&gt;docker stack rm&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;docker stack rm&lt;/code&gt; でスタックを破棄できます。例えば：</target>
        </trans-unit>
        <trans-unit id="f8d67825a40d1267850fe38e51dd1f17c8d9b561" translate="yes" xml:space="preserve">
          <source>You can then run it (giving it a name for the next step):</source>
          <target state="translated">そして、それを実行する(次のステップの名前をつける)ことができます。</target>
        </trans-unit>
        <trans-unit id="25ddc28205c2dcd879efc3875c81ba261bcfdf2e" translate="yes" xml:space="preserve">
          <source>You can unset the &lt;code&gt;docker-machine&lt;/code&gt; environment variables in your current shell with the given command.</source>
          <target state="translated">指定したコマンドを使用して、現在のシェルで &lt;code&gt;docker-machine&lt;/code&gt; 環境変数を設定解除できます。</target>
        </trans-unit>
        <trans-unit id="997588aa0befbb8934f3c6821ab50095cc0c2823" translate="yes" xml:space="preserve">
          <source>You can update a container&amp;rsquo;s kernel memory limit using the &lt;code&gt;--kernel-memory&lt;/code&gt; option. On kernel version older than 4.6, this option can be updated on a running container only if the container was started with &lt;code&gt;--kernel-memory&lt;/code&gt;. If the container was started &lt;em&gt;without&lt;/em&gt;&lt;code&gt;--kernel-memory&lt;/code&gt; you need to stop the container before updating kernel memory.</source>
          <target state="translated">&lt;code&gt;--kernel-memory&lt;/code&gt; オプションを使用して、コンテナのカーネルメモリ制限を更新できます。4.6より古いカーネルバージョンでは、コンテナーが &lt;code&gt;--kernel-memory&lt;/code&gt; で起動された場合にのみ、実行中のコンテナーでこのオプションを更新できます。コンテナが &lt;code&gt;--kernel-memory&lt;/code&gt; &lt;em&gt;なし&lt;/em&gt;で起動された場合、カーネルメモリを更新する前にコンテナを停止する必要があります。</target>
        </trans-unit>
        <trans-unit id="1474ef3733d109ea25fc5d59b7092063cef92e31" translate="yes" xml:space="preserve">
          <source>You can update a service to grant it access to additional configs or revoke its access to a given config at any time.</source>
          <target state="translated">サービスを更新して、追加のコンフィグへのアクセスを許可したり、指定されたコンフィグへのアクセスをいつでも取り消すことができます。</target>
        </trans-unit>
        <trans-unit id="30d9624b0d2af1224fe1b4d609ab2d663a625c57" translate="yes" xml:space="preserve">
          <source>You can update a service to grant it access to additional secrets or revoke its access to a given secret at any time.</source>
          <target state="translated">サービスを更新して、追加の秘密へのアクセスを許可したり、与えられた秘密へのアクセスをいつでも取り消すことができます。</target>
        </trans-unit>
        <trans-unit id="2f23798de9a6488f53d34aed52097662191f6d89" translate="yes" xml:space="preserve">
          <source>You can update almost every configuration detail about an existing service, including the image name and tag it runs. See &lt;a href=&quot;#update-a-services-image-after-creation&quot;&gt;Update a service&amp;rsquo;s image after creation&lt;/a&gt;.</source>
          <target state="translated">イメージ名や実行するタグなど、既存のサービスに関するほとんどすべての構成の詳細を更新できます。&lt;a href=&quot;#update-a-services-image-after-creation&quot;&gt;作成後にサービスのイメージ&lt;/a&gt;を更新するを参照してください。</target>
        </trans-unit>
        <trans-unit id="a256da54a120fa7976809d7d090d7ee3c65f9e55" translate="yes" xml:space="preserve">
          <source>You can update kernel memory while the container is running:</source>
          <target state="translated">コンテナの実行中にカーネルメモリを更新することができます。</target>
        </trans-unit>
        <trans-unit id="6cb634be6c1bbf47c1ede18be2b83a19d0c4f55e" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;--link&lt;/code&gt; option to link another container with a preferred alias</source>
          <target state="translated">&lt;code&gt;--link&lt;/code&gt; オプションを使用して、別のコンテナーを優先エイリアスにリンクできます</target>
        </trans-unit>
        <trans-unit id="5650d0d6a9883e49de40024a6eca7dfeec9aaa84" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;-f&lt;/code&gt; flag to specify a path to Compose file that is not located in the current directory, either from the command line or by setting up a &lt;a href=&quot;../envvars/index#compose_file&quot;&gt;COMPOSE_FILE environment variable&lt;/a&gt; in your shell or in an environment file.</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; フラグを使用して、コマンドラインから、またはシェルまたは環境ファイルで&lt;a href=&quot;../envvars/index#compose_file&quot;&gt;COMPOSE_FILE環境変数を&lt;/a&gt;設定することにより、現在のディレクトリにないComposeファイルへのパスを指定できます。</target>
        </trans-unit>
        <trans-unit id="82d59b51cf1d26fea9d281b8ec7f73ace209f2a7" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ENV&lt;/code&gt; instructions in a Dockerfile to define variable values. These values persist in the built image. However, often persistence is not what you want. Users want to specify variables differently depending on which host they build an image on.</source>
          <target state="translated">Dockerfileで &lt;code&gt;ENV&lt;/code&gt; 命令を使用して、変数値を定義できます。これらの値は、ビルドされたイメージに保持されます。ただし、多くの場合、持続性は必要なものではありません。ユーザーは、イメージを構築するホストに応じて異なる方法で変数を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="aa73d413d4a3ae3424500ebe0b447a9822c98ef2" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;dmesg&lt;/code&gt; to debug problems and &lt;code&gt;aa-status&lt;/code&gt; check the loaded profiles.</source>
          <target state="translated">&lt;code&gt;dmesg&lt;/code&gt; を使用して問題をデバッグし、ロードされたプロファイルを &lt;code&gt;aa-status&lt;/code&gt; で確認できます。</target>
        </trans-unit>
        <trans-unit id="79611691f3a006f710a6d25f25f78f4ddc449811" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;docker service inspect&lt;/code&gt; to view the service&amp;rsquo;s published port. For instance:</source>
          <target state="translated">&lt;code&gt;docker service inspect&lt;/code&gt; を使用して、サービスの公開ポートを表示できます。例えば：</target>
        </trans-unit>
        <trans-unit id="dc78f0213c3e7c133c079da6e77f5d9b66128dae" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;extends&lt;/code&gt; on any service together with other configuration keys. The &lt;code&gt;extends&lt;/code&gt; value must be a dictionary defined with a required &lt;code&gt;service&lt;/code&gt; and an optional &lt;code&gt;file&lt;/code&gt; key.</source>
          <target state="translated">他の構成キーと一緒に任意のサービスで &lt;code&gt;extends&lt;/code&gt; を使用できます。 &lt;code&gt;extends&lt;/code&gt; た値が必要で定義された辞書でなければならない &lt;code&gt;service&lt;/code&gt; とオプションの &lt;code&gt;file&lt;/code&gt; キー。</target>
        </trans-unit>
        <trans-unit id="abccea24ec771ae836fbff0c4191d344e49233ee" translate="yes" xml:space="preserve">
          <source>You can use Compose to deploy an app to a remote Docker host by setting the &lt;code&gt;DOCKER_HOST&lt;/code&gt;, &lt;code&gt;DOCKER_TLS_VERIFY&lt;/code&gt;, and &lt;code&gt;DOCKER_CERT_PATH&lt;/code&gt; environment variables appropriately. For tasks like this, &lt;a href=&quot;../../machine/overview/index&quot;&gt;Docker Machine&lt;/a&gt; makes managing local and remote Docker hosts very easy, and is recommended even if you&amp;rsquo;re not deploying remotely.</source>
          <target state="translated">&lt;code&gt;DOCKER_HOST&lt;/code&gt; 、 &lt;code&gt;DOCKER_TLS_VERIFY&lt;/code&gt; 、および &lt;code&gt;DOCKER_CERT_PATH&lt;/code&gt; 環境変数を適切に設定することにより、Composeを使用してアプリをリモートDockerホストにデプロイできます。このようなタスクの場合、&lt;a href=&quot;../../machine/overview/index&quot;&gt;Docker Machineを使用&lt;/a&gt;すると、ローカルおよびリモートのDockerホストを非常に簡単に管理できるため、リモートでデプロイしていない場合でも推奨されます。</target>
        </trans-unit>
        <trans-unit id="f558676592f2dc8c6387945047f3f45180baeb33" translate="yes" xml:space="preserve">
          <source>You can use Docker Compose binary, &lt;code&gt;docker-compose [-f &amp;lt;arg&amp;gt;...] [options] [COMMAND] [ARGS...]&lt;/code&gt;, to build and manage multiple services in Docker containers.</source>
          <target state="translated">Docker Composeバイナリである &lt;code&gt;docker-compose [-f &amp;lt;arg&amp;gt;...] [options] [COMMAND] [ARGS...]&lt;/code&gt; を使用して、Dockerコンテナで複数のサービスを構築および管理できます。</target>
        </trans-unit>
        <trans-unit id="766998d24b60badb8a9e5815e15cb91a7ff484d6" translate="yes" xml:space="preserve">
          <source>You can use Docker Compose to easily run WordPress in an isolated environment built with Docker containers. This quick-start guide demonstrates how to use Compose to set up and run WordPress. Before starting, make sure you have &lt;a href=&quot;../install/index&quot;&gt;Compose installed&lt;/a&gt;.</source>
          <target state="translated">Docker Composeを使用して、Dockerコンテナで構築された隔離された環境でWordPressを簡単に実行できます。このクイックスタートガイドでは、Composeを使用してWordPressを設定および実行する方法を示します。開始する前に、&lt;a href=&quot;../install/index&quot;&gt;Composeがインストールされ&lt;/a&gt;ていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="fab56e1b4d8b4c322f669328e28a11fe627f0caa" translate="yes" xml:space="preserve">
          <source>You can use Docker Desktop for Mac or Windows to test &lt;em&gt;single-node&lt;/em&gt; features of swarm mode, including initializing a swarm with a single node, creating services, and scaling services. Docker &amp;ldquo;Moby&amp;rdquo; on Hyperkit (Mac) or Hyper-V (Windows) serve as the single swarm node.</source>
          <target state="translated">MacまたはWindows用のDockerデスクトップを使用して、単一ノードでのswarmの初期化、サービスの作成、サービスのスケーリングなど、swarmモードの&lt;em&gt;単一ノード&lt;/em&gt;機能をテストできます。Hyperkit（Mac）またはHyper-V（Windows）上のDocker&amp;ldquo; Moby&amp;rdquo;は、単一のスウォームノードとして機能します。</target>
        </trans-unit>
        <trans-unit id="5a4619908032ef981a04ef8d4e725bca940b0347" translate="yes" xml:space="preserve">
          <source>You can use Docker Machine to create local virtual hosts on which to deploy and test &lt;a href=&quot;../../engine/swarm/index&quot;&gt;swarm mode&lt;/a&gt; clusters.</source>
          <target state="translated">Docker Machineを使用して、&lt;a href=&quot;../../engine/swarm/index&quot;&gt;スウォームモードの&lt;/a&gt;クラスターをデプロイおよびテストするローカル仮想ホストを作成できます。</target>
        </trans-unit>
        <trans-unit id="71366bee5fcfed9002e65ebb700da6802202ecd1" translate="yes" xml:space="preserve">
          <source>You can use Docker Machine to:</source>
          <target state="translated">Docker Machineを使って</target>
        </trans-unit>
        <trans-unit id="062567bcd22480170898bccdfa2d04e8dda05523" translate="yes" xml:space="preserve">
          <source>You can use a &lt;code&gt;$$&lt;/code&gt; (double-dollar sign) when your configuration needs a literal dollar sign. This also prevents Compose from interpolating a value, so a &lt;code&gt;$$&lt;/code&gt; allows you to refer to environment variables that you don&amp;rsquo;t want processed by Compose.</source>
          <target state="translated">構成に文字通りのドル記号が必要な場合は、 &lt;code&gt;$$&lt;/code&gt; （2ドル記号）を使用できます。これにより、Composeが値を補間することも防止されるため、 &lt;code&gt;$$&lt;/code&gt; を使用すると、Composeで処理したくない環境変数を参照できます。</target>
        </trans-unit>
        <trans-unit id="ac5a1d746c16e93c1594ee8d1811a38db57ef850" translate="yes" xml:space="preserve">
          <source>You can use a filter to locate containers that exited with status of &lt;code&gt;137&lt;/code&gt; meaning a &lt;code&gt;SIGKILL(9)&lt;/code&gt; killed them.</source>
          <target state="translated">フィルターを使用して、 &lt;code&gt;SIGKILL(9)&lt;/code&gt; がコンテナーを強制終了したことを意味する &lt;code&gt;137&lt;/code&gt; の状況で終了したコンテナーを見つけることができます。</target>
        </trans-unit>
        <trans-unit id="69c135e325d318875f33b292b94b618041c68d42" translate="yes" xml:space="preserve">
          <source>You can use an &lt;code&gt;ARG&lt;/code&gt; or an &lt;code&gt;ENV&lt;/code&gt; instruction to specify variables that are available to the &lt;code&gt;RUN&lt;/code&gt; instruction. Environment variables defined using the &lt;code&gt;ENV&lt;/code&gt; instruction always override an &lt;code&gt;ARG&lt;/code&gt; instruction of the same name. Consider this Dockerfile with an &lt;code&gt;ENV&lt;/code&gt; and &lt;code&gt;ARG&lt;/code&gt; instruction.</source>
          <target state="translated">あなたは使用することができ &lt;code&gt;ARG&lt;/code&gt; または &lt;code&gt;ENV&lt;/code&gt; のに使用できる変数を指定する命令を &lt;code&gt;RUN&lt;/code&gt; の命令を。 &lt;code&gt;ENV&lt;/code&gt; 命令を使用して定義された環境変数は、常に同じ名前の &lt;code&gt;ARG&lt;/code&gt; 命令をオーバーライドします。 &lt;code&gt;ENV&lt;/code&gt; および &lt;code&gt;ARG&lt;/code&gt; 命令を含むこのDockerfileを検討してください。</target>
        </trans-unit>
        <trans-unit id="fa5480a45a21a3eb2dcb767ea3efcc1e47656a79" translate="yes" xml:space="preserve">
          <source>You can use certificate-based client-server authentication to verify a Docker daemon has the rights to access images on a registry. For more information, see &lt;a href=&quot;certificates/index&quot;&gt;Using certificates for repository client verification&lt;/a&gt;.</source>
          <target state="translated">証明書ベースのクライアントサーバー認証を使用して、Dockerデーモンがレジストリのイメージにアクセスする権限を持っていることを確認できます。詳細については、「&lt;a href=&quot;certificates/index&quot;&gt;リポジトリクライアントの検証に証明書を使用&lt;/a&gt;する」を参照してください。</target>
        </trans-unit>
        <trans-unit id="9b7b4dd3c3b611928948589c0fb1c0578c932d40" translate="yes" xml:space="preserve">
          <source>You can use environment variables in configuration values with a Bash-like &lt;code&gt;${VARIABLE}&lt;/code&gt; syntax - see &lt;a href=&quot;#variable-substitution&quot;&gt;variable substitution&lt;/a&gt; for full details.</source>
          <target state="translated">環境変数は、Bashのような &lt;code&gt;${VARIABLE}&lt;/code&gt; 構文を使用して構成値で使用できます。詳細については、&lt;a href=&quot;#variable-substitution&quot;&gt;変数の置換&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7b92c2326b15e16e0193abc4434407cf276fabd0" translate="yes" xml:space="preserve">
          <source>You can use environment variables:</source>
          <target state="translated">環境変数を使うことができます。</target>
        </trans-unit>
        <trans-unit id="84f06a2245c39597e3a46d7dd33a6d4b79af2c10" translate="yes" xml:space="preserve">
          <source>You can use gzip to save the image file and make the backup smaller.</source>
          <target state="translated">gzipを使って画像ファイルを保存し、バックアップを小さくすることができます。</target>
        </trans-unit>
        <trans-unit id="ed533cd395179758bf2c31da9976aca9c64d7c5b" translate="yes" xml:space="preserve">
          <source>You can use multiple &lt;code&gt;-H&lt;/code&gt;, for example, if you want to listen on both TCP and a Unix socket</source>
          <target state="translated">たとえば、TCPとUnixソケットの両方で待機する場合は、複数の &lt;code&gt;-H&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="3f58e5f160c67043ac732ead129ce87cfa918513" translate="yes" xml:space="preserve">
          <source>You can use overlay networks to connect one or more services within the swarm.</source>
          <target state="translated">オーバーレイネットワークを使用して、スウォーム内の1つ以上のサービスを接続することができます。</target>
        </trans-unit>
        <trans-unit id="9c01585b0ad769ab6f0e715551d01f4f4d01ca7c" translate="yes" xml:space="preserve">
          <source>You can use secrets to manage any sensitive data which a container needs at runtime but you don&amp;rsquo;t want to store in the image or in source control, such as:</source>
          <target state="translated">シークレットを使用して、実行時にコンテナが必要とする機密データを管理できますが、次のようなイメージやソース管理に保存する必要はありません。</target>
        </trans-unit>
        <trans-unit id="91573a09cf38ddd463fd65e9ac0341ef79017236" translate="yes" xml:space="preserve">
          <source>You can use templates for some flags of &lt;code&gt;service create&lt;/code&gt;, using the syntax provided by the Go&amp;rsquo;s &lt;a href=&quot;http://golang.org/pkg/text/template/&quot;&gt;text/template&lt;/a&gt; package.</source>
          <target state="translated">Goの&lt;a href=&quot;http://golang.org/pkg/text/template/&quot;&gt;text / template&lt;/a&gt;パッケージで提供される構文を使用して、 &lt;code&gt;service create&lt;/code&gt; 一部のフラグにテンプレートを使用できます。</target>
        </trans-unit>
        <trans-unit id="df630e9beacdb60e2cc2387290e980d386aca9a6" translate="yes" xml:space="preserve">
          <source>You can use the --format option to obtain specific information about a secret. The following example command outputs the creation time of the secret.</source>
          <target state="translated">-format オプションを使用すると、シークレットに関する特定の情報を得ることができます。次の例のコマンドは、秘密の作成時刻を出力します。</target>
        </trans-unit>
        <trans-unit id="c0e0ed9afed3c72860d0fcf45edbb396a024f7dd" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;--force&lt;/code&gt; option on a manager to remove it from the swarm. However, this does not reconfigure the swarm to ensure that there are enough managers to maintain a quorum in the swarm. The safe way to remove a manager from a swarm is to demote it to a worker and then direct it to leave the quorum without using &lt;code&gt;--force&lt;/code&gt;. Only use &lt;code&gt;--force&lt;/code&gt; in situations where the swarm will no longer be used after the manager leaves, such as in a single-node swarm.</source>
          <target state="translated">マネージャーで &lt;code&gt;--force&lt;/code&gt; オプションを使用して、スウォームから削除できます。ただし、これは、スウォームのクォーラムを維持するのに十分なマネージャがいることを保証するためにスウォームを再構成しません。群れからマネージャーを削除する安全な方法は、それをワーカーに降格してから、-- &lt;code&gt;--force&lt;/code&gt; を使用せずにクォーラムを離れるように指示することです。 &lt;code&gt;--force&lt;/code&gt; を使用するのは、単一ノードのスウォームなど、マネージャが離れた後にスウォームが使用されなくなる状況のみです。</target>
        </trans-unit>
        <trans-unit id="dcd14479571306327ad188e54315578a193251b9" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;--init&lt;/code&gt; flag to indicate that an init process should be used as the PID 1 in the container. Specifying an init process ensures the usual responsibilities of an init system, such as reaping zombie processes, are performed inside the created container.</source>
          <target state="translated">&lt;code&gt;--init&lt;/code&gt; フラグを使用して、initプロセスをコンテナー内のPID 1として使用する必要があることを示すことができます。initプロセスを指定すると、ゾンビプロセスの取得など、initシステムの通常の責任が、作成されたコンテナ内で実行されます。</target>
        </trans-unit>
        <trans-unit id="ca1108baabb0cf35f562f551c938ab545c2f7972" translate="yes" xml:space="preserve">
          <source>You can use the &lt;em&gt;exec&lt;/em&gt; form of &lt;code&gt;ENTRYPOINT&lt;/code&gt; to set fairly stable default commands and arguments and then use either form of &lt;code&gt;CMD&lt;/code&gt; to set additional defaults that are more likely to be changed.</source>
          <target state="translated">&lt;code&gt;ENTRYPOINT&lt;/code&gt; の&lt;em&gt;exec&lt;/em&gt;形式を使用して、かなり安定したデフォルトのコマンドと引数を設定してから、どちらかの形式の &lt;code&gt;CMD&lt;/code&gt; を使用して、変更される可能性が高い追加のデフォルトを設定できます。</target>
        </trans-unit>
        <trans-unit id="3fc5235eeb0d6f02820e5aa6f4dd6345d9dd43c1" translate="yes" xml:space="preserve">
          <source>You can use the defined volumes to inspect the PostgreSQL log files and to backup your configuration and data:</source>
          <target state="translated">定義されたボリュームを使用して、PostgreSQLのログファイルを検査し、設定とデータをバックアップすることができます。</target>
        </trans-unit>
        <trans-unit id="423aaaa082fecd4efefd8026a24f16fb2332fef8" translate="yes" xml:space="preserve">
          <source>You can use the full or shortened container ID or the container name set using &lt;code&gt;docker run --name&lt;/code&gt; option.</source>
          <target state="translated">完全または短縮されたコンテナーID、または &lt;code&gt;docker run --name&lt;/code&gt; オプションを使用して設定されたコンテナー名を使用できます。</target>
        </trans-unit>
        <trans-unit id="757a036e5adc99d74c7204684446bfcfada2f841" translate="yes" xml:space="preserve">
          <source>You can use the swarm command line, as you&amp;rsquo;ve done already, to browse and manage the swarm. Here are some examples that should look familiar by now:</source>
          <target state="translated">すでに行ったように、swarmコマンドラインを使用して、swarmを参照および管理できます。これまでに見慣れた例をいくつか示します。</target>
        </trans-unit>
        <trans-unit id="f81c51d0b455ef88f4bebe69602018178e69b5ce" translate="yes" xml:space="preserve">
          <source>You can use this as a wrapper script as in the previous example, by setting:</source>
          <target state="translated">これを設定することで、先ほどの例と同様にラッパースクリプトとして使用することができます。</target>
        </trans-unit>
        <trans-unit id="3b78ee2097973189a617a7f46999a6a0cd76cd8c" translate="yes" xml:space="preserve">
          <source>You can use this in conjunction with &lt;code&gt;docker rmi ...&lt;/code&gt;:</source>
          <target state="translated">これを &lt;code&gt;docker rmi ...&lt;/code&gt; と組み合わせて使用​​できます。</target>
        </trans-unit>
        <trans-unit id="1c5191537baae10ee053c6520b800e4fca676558" translate="yes" xml:space="preserve">
          <source>You can verify that the services were correctly created</source>
          <target state="translated">サービスが正しく作成されたことを確認することができます。</target>
        </trans-unit>
        <trans-unit id="2b8eea59b664abefb1e902bc9a198ef36d5e1fcf" translate="yes" xml:space="preserve">
          <source>You can verify that the services were correctly created:</source>
          <target state="translated">サービスが正しく作成されたかどうかを確認することができます。</target>
        </trans-unit>
        <trans-unit id="b19cd993adea5d9fea2a96f29e4b1e96d66bf42f" translate="yes" xml:space="preserve">
          <source>You configure the rolling update policy at service deployment time.</source>
          <target state="translated">サービス展開時にローリングアップデートポリシーを設定します。</target>
        </trans-unit>
        <trans-unit id="935d2214454b350e907894ae9b58510024a889dc" translate="yes" xml:space="preserve">
          <source>You control the type of service using the &lt;code&gt;--mode&lt;/code&gt; flag. If you don&amp;rsquo;t specify a mode, the service defaults to &lt;code&gt;replicated&lt;/code&gt;. For replicated services, you specify the number of replica tasks you want to start using the &lt;code&gt;--replicas&lt;/code&gt; flag. For example, to start a replicated nginx service with 3 replica tasks:</source>
          <target state="translated">&lt;code&gt;--mode&lt;/code&gt; フラグを使用してサービスのタイプを制御します。モードを指定しない場合、サービスはデフォルトで &lt;code&gt;replicated&lt;/code&gt; ます。複製されたサービスの場合、 &lt;code&gt;--replicas&lt;/code&gt; フラグを使用して開始するレプリカタスクの数を指定します。たとえば、複製されたnginxサービスを3つのレプリカタスクで開始するには：</target>
        </trans-unit>
        <trans-unit id="0be1d0e97d293a13784bea82bdf15a18d5633422" translate="yes" xml:space="preserve">
          <source>You could also use the Notary CLI to list delegations and keys. Here you can clearly see the keys were attached to &lt;code&gt;targets/releases&lt;/code&gt; and &lt;code&gt;targets/jeff&lt;/code&gt;.</source>
          <target state="translated">Notary CLIを使用して、委任とキーをリストすることもできます。ここでは、キーが &lt;code&gt;targets/releases&lt;/code&gt; および &lt;code&gt;targets/jeff&lt;/code&gt; アタッチされていることがはっきりとわかります。</target>
        </trans-unit>
        <trans-unit id="fd932bbf92c031dfe1f418776d2911cc3e1b66d8" translate="yes" xml:space="preserve">
          <source>You could change the config to look like:</source>
          <target state="translated">コンフィグを以下のように変更してみてはいかがでしょうか。</target>
        </trans-unit>
        <trans-unit id="eb112979f42998323e7e42e363ea06ccb13a8215" translate="yes" xml:space="preserve">
          <source>You get the long container ID for your app and then are kicked back to your terminal. Your container is running in the background. You can also see the abbreviated container ID with &lt;code&gt;docker container ls&lt;/code&gt; (and both work interchangeably when running commands):</source>
          <target state="translated">アプリの長いコンテナIDを取得すると、ターミナルに戻ります。コンテナはバックグラウンドで実行されています。 &lt;code&gt;docker container ls&lt;/code&gt; を使用して、省略されたコンテナIDを確認することもできます（コマンドを実行すると、どちらも同じ意味で機能します）。</target>
        </trans-unit>
        <trans-unit id="37f53fbf7d98997bb2d21e1ba889a2279662c63c" translate="yes" xml:space="preserve">
          <source>You have access to the build key</source>
          <target state="translated">ビルドキーにアクセスできる</target>
        </trans-unit>
        <trans-unit id="ea4793735339f658144c8c39642430705274e138" translate="yes" xml:space="preserve">
          <source>You have now configured a Nginx service with its configuration decoupled from its image. You could run multiple sites with exactly the same image but separate configurations, without the need to build a custom image at all.</source>
          <target state="translated">これで、イメージから切り離された設定でNginxサービスを設定することができました。カスタムイメージを構築することなく、全く同じイメージで複数のサイトを実行することができます。</target>
        </trans-unit>
        <trans-unit id="d4902cab2dedeffaefcdc4406137d6efe52df5bc" translate="yes" xml:space="preserve">
          <source>You have now updated your &lt;code&gt;nginx&lt;/code&gt; service&amp;rsquo;s configuration without the need to rebuild its image.</source>
          <target state="translated">これで、イメージを再構築する必要なく、 &lt;code&gt;nginx&lt;/code&gt; サービスの構成が更新されました。</target>
        </trans-unit>
        <trans-unit id="6fc2b74e116dc0096d79e91447e3d2308c92c5cb" translate="yes" xml:space="preserve">
          <source>You learned that stacks are inter-related services all running in concert, and that -- surprise! -- you&amp;rsquo;ve been using stacks since part three of this tutorial. You learned that to add more services to your stack, you insert them in your Compose file. Finally, you learned that by using a combination of placement constraints and volumes you can create a permanent home for persisting data, so that your app&amp;rsquo;s data survives when the container is torn down and redeployed.</source>
          <target state="translated">スタックは相互に関連するサービスであり、すべてが協調して実行されることを学びました。-このチュートリアルのパート3以降、スタックを使用しています。スタックにさらにサービスを追加するには、それらをComposeファイルに挿入することを学びました。最後に、配置の制約とボリュームの組み合わせを使用することで、永続化データ用の永続的なホームを作成できるため、コンテナーが分解され再デプロイされたときにアプリのデータが存続することを学びました。</target>
        </trans-unit>
        <trans-unit id="79688c4f363bcd45ce95cd4fdf744d8dc86d9510" translate="yes" xml:space="preserve">
          <source>You manage swarm membership with the &lt;code&gt;docker swarm&lt;/code&gt; and &lt;code&gt;docker node&lt;/code&gt; subsystems. Refer to &lt;a href=&quot;../join-nodes/index&quot;&gt;Add nodes to a swarm&lt;/a&gt; for more information on how to add worker nodes and promote a worker node to be a manager.</source>
          <target state="translated">&lt;code&gt;docker swarm&lt;/code&gt; および &lt;code&gt;docker node&lt;/code&gt; サブシステムを使用して、swarmメンバーシップを管理します。ワーカーノードを追加し、ワーカーノードをマネージャーに昇格させる方法の詳細については&lt;a href=&quot;../join-nodes/index&quot;&gt;、ノードをスウォーム&lt;/a&gt;に追加するを参照してください。</target>
        </trans-unit>
        <trans-unit id="198081da238b365e828d9c68b94df44770aea77f" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;code&gt;--build-arg&lt;/code&gt; flag without a value, in which case the value from the local environment will be propagated into the Docker container being built:</source>
          <target state="translated">値なしで &lt;code&gt;--build-arg&lt;/code&gt; フラグを使用することもできます。その場合、ローカル環境からの値が、ビルドされているDockerコンテナーに伝播されます。</target>
        </trans-unit>
        <trans-unit id="09f74f43bdfe4853242b90da074f2fbc00dac73e" translate="yes" xml:space="preserve">
          <source>You may also want to visit the &lt;a href=&quot;../create/index#specifying-configuration-options-for-the-created-docker-engine&quot;&gt;documentation on setting &lt;code&gt;HTTP_PROXY&lt;/code&gt; for the created daemon using the &lt;code&gt;--engine-env&lt;/code&gt; flag for &lt;code&gt;docker-machine create&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../create/index#specifying-configuration-options-for-the-created-docker-engine&quot;&gt; &lt;code&gt;--engine-env&lt;/code&gt; &lt;/a&gt; &lt;code&gt;docker-machine create&lt;/code&gt; --engine-envフラグを &lt;code&gt;HTTP_PROXY&lt;/code&gt; して、作成されたデーモンのHTTP_PROXYの設定に関するドキュメントを参照することもできます。</target>
        </trans-unit>
        <trans-unit id="ee2eea550018d3305f9a574ca80c93cc6eab59b8" translate="yes" xml:space="preserve">
          <source>You may notice that some flags specify environment variables that they are associated with as well (located to the far left hand side of the row). If these environment variables are set when &lt;code&gt;docker-machine create&lt;/code&gt; is invoked, Docker Machine uses them for the default value of the flag.</source>
          <target state="translated">一部のフラグは、それらが関連付けられている（行の左端にある）環境変数を指定していることに気付くでしょう。 &lt;code&gt;docker-machine create&lt;/code&gt; の呼び出し時にこれらの環境変数が設定されている場合、Docker Machineはそれらの変数をフラグのデフォルト値として使用します。</target>
        </trans-unit>
        <trans-unit id="35448d8e9c09b538cca78ae300a1b6d3c09d6eff" translate="yes" xml:space="preserve">
          <source>You may wish to share the UTS namespace with the host if you would like the hostname of the container to change as the hostname of the host changes. A more advanced use case would be changing the host&amp;rsquo;s hostname from a container.</source>
          <target state="translated">ホストのホスト名の変更に応じてコンテナのホスト名を変更する場合は、UTS名前空間をホストと共有することができます。より高度な使用例は、ホストのホスト名をコンテナから変更することです。</target>
        </trans-unit>
        <trans-unit id="2e7095c4dad5df38e0280e872bc08525020476ce" translate="yes" xml:space="preserve">
          <source>You may write your Compose file as follows:</source>
          <target state="translated">Composeファイルは以下のように書くことができます。</target>
        </trans-unit>
        <trans-unit id="704a4b86d69ecf78cf97644d8fd8cf23af8c205d" translate="yes" xml:space="preserve">
          <source>You might want to use the current shell to connect to a different Docker Engine. This would be the case if, for example, you are &lt;a href=&quot;https://docs.docker.com/docker-for-mac/docker-toolbox/&quot;&gt;running Docker Desktop for Mac concurrent with Docker Toolbox&lt;/a&gt; and want to talk to two different Docker Engines. In both scenarios, you have the option to switch the environment for the current shell to talk to different Docker engines.</source>
          <target state="translated">現在のシェルを使用して別のDockerエンジンに接続することもできます。これは、たとえば、&lt;a href=&quot;https://docs.docker.com/docker-for-mac/docker-toolbox/&quot;&gt;Docker Toolbox&lt;/a&gt;と並行してDocker Desktop for Macを実行していて、2つの異なるDockerエンジンと通信したい場合に当てはまります。どちらのシナリオでも、現在のシェルの環境を切り替えて、さまざまなDockerエンジンと通信するオプションがあります。</target>
        </trans-unit>
        <trans-unit id="39b8faf5910005368a64991d61dd7ca4fb9b998d" translate="yes" xml:space="preserve">
          <source>You must also open the published port between the swarm nodes and any external resources, such as an external load balancer, that require access to the port.</source>
          <target state="translated">また、ポートへのアクセスを必要とする外部ロードバランサーなどの外部リソースとスワームノードの間で公開されているポートを開く必要があります。</target>
        </trans-unit>
        <trans-unit id="d9d78b996497cb098a6065092c2ec53bdd5193d8" translate="yes" xml:space="preserve">
          <source>You must also specify the &lt;code&gt;--advertise-addr&lt;/code&gt; if the address where other nodes reach the first manager node is not the same address the manager sees as its own. For instance, in a cloud setup that spans different regions, hosts have both internal addresses for access within the region and external addresses that you use for access from outside that region. In this case, specify the external address with &lt;code&gt;--advertise-addr&lt;/code&gt; so that the node can propagate that information to other nodes that subsequently connect to it.</source>
          <target state="translated">他のノードが最初のマネージャーノードに到達するアドレスが、マネージャーが自身のノードと見なしているアドレスと異なる場合は、 &lt;code&gt;--advertise-addr&lt;/code&gt; も指定する必要があります。たとえば、さまざまなリージョンにまたがるクラウドセットアップでは、ホストには、リージョン内へのアクセスに使用する内部アドレスと、そのリージョン外からのアクセスに使用する外部アドレスの両方があります。この場合、 &lt;code&gt;--advertise-addr&lt;/code&gt; 使用して外部アドレスを指定し、ノードがその情報を後で接続する他のノードに伝達できるようにします。</target>
        </trans-unit>
        <trans-unit id="f53844b090d4e244a1b5b762b9c141cf1430ff11" translate="yes" xml:space="preserve">
          <source>You must have imported an appropriate delegation key for this role. To do so, you can run &lt;code&gt;notary key import &amp;lt;KEY_FILE&amp;gt; --role user&lt;/code&gt; with the private key PEM file, or drop the private key PEM in &lt;code&gt;private/tuf_keys&lt;/code&gt; as &lt;code&gt;&amp;lt;KEY_ID&amp;gt;.key&lt;/code&gt; with the &lt;code&gt;role&lt;/code&gt; PEM header set to &lt;code&gt;user&lt;/code&gt;.</source>
          <target state="translated">このロールに適切な委任キーをインポートしておく必要があります。これを行うには、秘密鍵PEMファイルを &lt;code&gt;notary key import &amp;lt;KEY_FILE&amp;gt; --role user&lt;/code&gt; してnotary key import &amp;lt;KEY_FILE&amp;gt; --role userを実行するか、 &lt;code&gt;role&lt;/code&gt; PEMヘッダーを &lt;code&gt;user&lt;/code&gt; に設定して、秘密鍵PEMを &lt;code&gt;private/tuf_keys&lt;/code&gt; に &lt;code&gt;&amp;lt;KEY_ID&amp;gt;.key&lt;/code&gt; としてドロップします。</target>
        </trans-unit>
        <trans-unit id="d5437f01cc72330dfafea86c6ec14a8dff5e3670" translate="yes" xml:space="preserve">
          <source>You must use an Administrator level account to create and manage Hyper-V machines.</source>
          <target state="translated">Hyper-Vマシンの作成と管理には、管理者レベルのアカウントを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="e3c2366bdadc27a3ea91e93a8cdb3d6133797aef" translate="yes" xml:space="preserve">
          <source>You need a hypervisor that can create virtual machines (VMs), so &lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;install Oracle VirtualBox&lt;/a&gt; for your machine&amp;rsquo;s OS.</source>
          <target state="translated">仮想マシン（VM）を作成できるハイパーバイザーが必要なので、マシンのOSに&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;Oracle VirtualBox&lt;/a&gt;をインストールします。</target>
        </trans-unit>
        <trans-unit id="aca6bfa6670447d0d6e53af9b13cfea6018c3073" translate="yes" xml:space="preserve">
          <source>You need an Azure Subscription to use this Docker Machine driver. &lt;a href=&quot;https://azure.microsoft.com/free/&quot;&gt;Sign up for a free trial.&lt;/a&gt;</source>
          <target state="translated">このDocker Machineドライバーを使用するには、Azureサブスクリプションが必要です。&lt;a href=&quot;https://azure.microsoft.com/free/&quot;&gt;無料トライアルにサインアップしてください。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fc030e9a1b42c8aaa5304fa87da1c04fab81d22" translate="yes" xml:space="preserve">
          <source>You need an existing virtual switch to use the driver. Hyper-V can share an external network interface (also known as bridging). See &lt;a href=&quot;http://blogs.technet.com/b/canitpro/archive/2014/03/11/step-by-step-enabling-hyper-v-for-use-on-windows-8-1.aspx&quot;&gt;this blog&lt;/a&gt; to learn more. If you would like to use NAT, create an internal network, and use &lt;a href=&quot;http://www.packet6.com/allowing-windows-8-1-hyper-v-vm-to-work-with-wifi/&quot;&gt;Internet Connection Sharing&lt;/a&gt;.</source>
          <target state="translated">ドライバーを使用するには、既存の仮想スイッチが必要です。Hyper-Vは、外部ネットワークインターフェイス（ブリッジングとも呼ばれます）を共有できます。詳細については、&lt;a href=&quot;http://blogs.technet.com/b/canitpro/archive/2014/03/11/step-by-step-enabling-hyper-v-for-use-on-windows-8-1.aspx&quot;&gt;このブログ&lt;/a&gt;を参照してください。NATを使用する場合は、内部ネットワークを作成し、&lt;a href=&quot;http://www.packet6.com/allowing-windows-8-1-hyper-v-vm-to-work-with-wifi/&quot;&gt;インターネット接続の共有&lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="0c75e42433cf96b7ecdaaa8869caf1297af7d587" translate="yes" xml:space="preserve">
          <source>You need to change the SSH username only if the custom AMI you use has a different SSH username.</source>
          <target state="translated">使用しているカスタムAMIが異なるSSHユーザ名を持っている場合にのみ、SSHユーザ名を変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="673099d476f2a5785b7c84ff5162a8b0e01cb63e" translate="yes" xml:space="preserve">
          <source>You need to create a personal access token under &amp;ldquo;Apps &amp;amp; API&amp;rdquo; in the DigitalOcean Control Panel and pass that to &lt;code&gt;docker-machine create&lt;/code&gt; with the &lt;code&gt;--digitalocean-access-token&lt;/code&gt; option.</source>
          <target state="translated">DigitalOceanコントロールパネルの[Apps＆API]で個人用アクセストークンを &lt;code&gt;docker-machine create&lt;/code&gt; し、 &lt;code&gt;--digitalocean-access-token&lt;/code&gt; オプションを指定してdocker- machine createに渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="1ef9f238bffb5fa2e0ff55236490716956226e5b" translate="yes" xml:space="preserve">
          <source>You need to generate an API key in the softlayer control panel. &lt;a href=&quot;http://knowledgelayer.softlayer.com/procedure/retrieve-your-api-key&quot;&gt;Retrieve your API key&lt;/a&gt;.</source>
          <target state="translated">softlayerコントロールパネルでAPIキーを生成する必要があります。&lt;a href=&quot;http://knowledgelayer.softlayer.com/procedure/retrieve-your-api-key&quot;&gt;APIキーを取得します&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca5ce1b6e241c1b8bd90db400b68f4c341fe10dc" translate="yes" xml:space="preserve">
          <source>You need to specify the credentials store in &lt;code&gt;$HOME/.docker/config.json&lt;/code&gt; to tell the docker engine to use it. The value of the config property should be the suffix of the program to use (i.e. everything after &lt;code&gt;docker-credential-&lt;/code&gt;). For example, to use &lt;code&gt;docker-credential-osxkeychain&lt;/code&gt;:</source>
          <target state="translated">資格情報ストアを &lt;code&gt;$HOME/.docker/config.json&lt;/code&gt; に指定して、Dockerエンジンに使用を指示する必要があります。configプロパティの値は、使用するプログラムのサフィックス（つまり、 &lt;code&gt;docker-credential-&lt;/code&gt; 以降のすべて）である必要があります。たとえば、 &lt;code&gt;docker-credential-osxkeychain&lt;/code&gt; を使用するには：</target>
        </trans-unit>
        <trans-unit id="8b4e9abf8a08afc414060ea4392d06610b2a014b" translate="yes" xml:space="preserve">
          <source>You now have two VMs created, named &lt;code&gt;myvm1&lt;/code&gt; and &lt;code&gt;myvm2&lt;/code&gt;.</source>
          <target state="translated">これで、 &lt;code&gt;myvm1&lt;/code&gt; と &lt;code&gt;myvm2&lt;/code&gt; という名前の2つのVMが作成されました。</target>
        </trans-unit>
        <trans-unit id="1c98c6c46824cb97a342f00f32c8ae73e0c271e0" translate="yes" xml:space="preserve">
          <source>You probably need to make changes to your app configuration to make it ready for production. These changes may include:</source>
          <target state="translated">おそらく、アプリの設定を変更して本番に備えておく必要があるでしょう。これらの変更には以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="54f71868fa0c9d4bda9a85977d3e9803f07b2089" translate="yes" xml:space="preserve">
          <source>You saw in the Compose file that &lt;code&gt;visualizer&lt;/code&gt; runs on port 8080. Get the IP address of one of your nodes by running &lt;code&gt;docker-machine ls&lt;/code&gt;. Go to either IP address at port 8080 and you can see the visualizer running:</source>
          <target state="translated">Composeファイルで &lt;code&gt;visualizer&lt;/code&gt; がポート8080で実行されているのを確認しました &lt;code&gt;docker-machine ls&lt;/code&gt; 実行して、いずれかのノードのIPアドレスを取得します。ポート8080でいずれかのIPアドレスに移動すると、ビジュアライザーが実行されていることがわかります。</target>
        </trans-unit>
        <trans-unit id="bf3b77a8acafdabd365518bc5f02356ff95d002b" translate="yes" xml:space="preserve">
          <source>You see an error, because this content doesn&amp;rsquo;t exist on the &lt;code&gt;notaryserver&lt;/code&gt; yet.</source>
          <target state="translated">このコンテンツはまだ &lt;code&gt;notaryserver&lt;/code&gt; に存在しないため、エラーが表示されます。</target>
        </trans-unit>
        <trans-unit id="91669e9c8b2aeb4e7c21d0c897267857c6464661" translate="yes" xml:space="preserve">
          <source>You should back up the root key somewhere safe. Given that it is only required to create new repositories, it is a good idea to store it offline in hardware. For details on securing, and backing up your keys, make sure you read how to &lt;a href=&quot;../trust_key_mng/index&quot;&gt;manage keys for DCT&lt;/a&gt;.</source>
          <target state="translated">ルートキーは安全な場所にバックアップしてください。新しいリポジトリを作成する必要があるだけなので、ハードウェアにオフラインで保存することをお勧めします。キーの保護とバックアップの詳細については&lt;a href=&quot;../trust_key_mng/index&quot;&gt;、DCTのキーの管理&lt;/a&gt;方法を必ずお読みください。</target>
        </trans-unit>
        <trans-unit id="4aa2bdfdf70b2e9d5bc3c002d1e7f3221b2bff82" translate="yes" xml:space="preserve">
          <source>You should choose a channel that best fits your needs. If you only want bugfixes, you should use &lt;code&gt;docker/dockerfile:1.0&lt;/code&gt;. If you want to benefit from experimental features, you should use the experimental channel. If you are using the experimental channel, newer releases may not be backwards compatible, so it is recommended to use an immutable full version variant.</source>
          <target state="translated">ニーズに最も適したチャネルを選択する必要があります。バグ修正のみが必要な場合は、 &lt;code&gt;docker/dockerfile:1.0&lt;/code&gt; を使用する必要があります。試験運用機能を利用したい場合は、試験運用チャネルを使用してください。試験運用版チャネルを使用している場合、新しいリリースには下位互換性がない可能性があるため、不変の完全バージョンのバリアントを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="fd6294845113b2a23b6568b420de92ea7f63e612" translate="yes" xml:space="preserve">
          <source>You should create overlay networks with &lt;code&gt;/24&lt;/code&gt; blocks (the default), which limits you to 256 IP addresses, when you create networks using the default VIP-based endpoint-mode. This recommendation addresses &lt;a href=&quot;https://github.com/moby/moby/issues/30820&quot;&gt;limitations with swarm mode&lt;/a&gt;. If you need more than 256 IP addresses, do not increase the IP block size. You can either use &lt;code&gt;dnsrr&lt;/code&gt; endpoint mode with an external load balancer, or use multiple smaller overlay networks. See &lt;a href=&quot;https://docs.docker.com/network#configure-service-discovery&quot;&gt;Configure service discovery&lt;/a&gt; for more information about different endpoint modes.</source>
          <target state="translated">デフォルトのVIPベースのエンドポイントモードを使用してネットワークを作成する場合は、 &lt;code&gt;/24&lt;/code&gt; ブロック（デフォルト）のオーバーレイネットワークを作成する必要があります。これにより、IPアドレスは256に制限されます。この推奨&lt;a href=&quot;https://github.com/moby/moby/issues/30820&quot;&gt;事項は、スウォームモードの制限に&lt;/a&gt;対処します。 256を超えるIPアドレスが必要な場合は、IPブロックサイズを大きくしないでください。外部ロードバランサーで &lt;code&gt;dnsrr&lt;/code&gt; エンドポイントモードを使用するか、複数の小さなオーバーレイネットワークを使用できます。さまざまなエンドポイントモードの詳細については、&lt;a href=&quot;https://docs.docker.com/network#configure-service-discovery&quot;&gt;サービス検出の構成を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2e84613439f2643e7567c04d69ffff0ddba68478" translate="yes" xml:space="preserve">
          <source>You should maintain an odd number of managers in the swarm to support manager node failures. Having an odd number of managers ensures that during a network partition, there is a higher chance that the quorum remains available to process requests if the network is partitioned into two sets. Keeping the quorum is not guaranteed if you encounter more than two network partitions.</source>
          <target state="translated">マネージャノードの障害をサポートするために、スウォームでは奇数のマネージャを維持する必要があります。奇数のマネージャを維持することで、ネットワークが2つのセットに分割されている場合、ネットワークのパーティションの間、要求を処理するための定足数を確保できる可能性が高くなります。ネットワークが2つ以上に分割されている場合、定足数を維持することは保証されません。</target>
        </trans-unit>
        <trans-unit id="b205048dbb39a28131b763257bf8accca6460735" translate="yes" xml:space="preserve">
          <source>You should never restart a manager node by copying the &lt;code&gt;raft&lt;/code&gt; directory from another node. The data directory is unique to a node ID. A node can only use a node ID once to join the swarm. The node ID space should be globally unique.</source>
          <target state="translated">&lt;code&gt;raft&lt;/code&gt; ディレクトリを別のノードからコピーしてマネージャーノードを再起動しないでください。データディレクトリはノードIDに一意です。ノードは、ノードIDを1回だけ使用して、スウォームに参加できます。ノードIDスペースはグローバルに一意である必要があります。</target>
        </trans-unit>
        <trans-unit id="a1423a39c53c8b43a915a38b04562a27fb3bfb8c" translate="yes" xml:space="preserve">
          <source>You should rotate the locked swarm&amp;rsquo;s unlock key on a regular schedule.</source>
          <target state="translated">ロックされたスウォームのロック解除キーを定期的にローテーションする必要があります。</target>
        </trans-unit>
        <trans-unit id="75fca42bf1e7af08570c63ef1122f97159aa2cdd" translate="yes" xml:space="preserve">
          <source>You should see a message in your browser saying:</source>
          <target state="translated">というメッセージがブラウザに表示されるはずです。</target>
        </trans-unit>
        <trans-unit id="963c536db9d131287f2a6ca6c62d26698ec3b97b" translate="yes" xml:space="preserve">
          <source>You should see a message that Python is serving your app at &lt;code&gt;http://0.0.0.0:80&lt;/code&gt;. But that message is coming from inside the container, which doesn&amp;rsquo;t know you mapped port 80 of that container to 4000, making the correct URL &lt;code&gt;http://localhost:4000&lt;/code&gt;.</source>
          <target state="translated">Pythonが &lt;code&gt;http://0.0.0.0:80&lt;/code&gt; でアプリを提供しているというメッセージが表示されます。しかし、そのメッセージはコンテナーの内部から送信されており、コンテナーのポート80を4000にマップして、正しいURLを &lt;code&gt;http://localhost:4000&lt;/code&gt; にしていることを認識していません。</target>
        </trans-unit>
        <trans-unit id="302303f928d2159204a9028a6725ce9f9820e547" translate="yes" xml:space="preserve">
          <source>You should see both &lt;code&gt;rhel-httpd&lt;/code&gt; and &lt;code&gt;registry-host:5000/myadmin/rhel-httpd&lt;/code&gt; listed.</source>
          <target state="translated">あなたは両方見るべきである &lt;code&gt;rhel-httpd&lt;/code&gt; および &lt;code&gt;registry-host:5000/myadmin/rhel-httpd&lt;/code&gt; リストされています。</target>
        </trans-unit>
        <trans-unit id="a3a6e0c2530be12b0d1143fb75a5b3b4a42809d4" translate="yes" xml:space="preserve">
          <source>You should use a &lt;code&gt;volume&lt;/code&gt; if you want to make changes to your code and see them reflected immediately, for example when you&amp;rsquo;re developing code and your server supports hot code reloading or live-reload.</source>
          <target state="translated">コードを変更してすぐに反映されるようにしたい場合は、 &lt;code&gt;volume&lt;/code&gt; を使用する必要があります。たとえば、コードを開発していて、サーバーがホットコードの再読み込みまたはライブ再読み込みをサポートしている場合などです。</target>
        </trans-unit>
        <trans-unit id="77a725f4e4adad68cd8d4f6f4b1160f7f3a752b8" translate="yes" xml:space="preserve">
          <source>You still need to &lt;a href=&quot;#configs&quot;&gt;grant access to the config&lt;/a&gt; to each service in the stack.</source>
          <target state="translated">それでも、スタック内の各サービスに構成&lt;a href=&quot;#configs&quot;&gt;へのアクセス&lt;/a&gt;を許可する必要があります。</target>
        </trans-unit>
        <trans-unit id="0d4a939e70da1f715a280320a815837f994654a3" translate="yes" xml:space="preserve">
          <source>You still need to &lt;a href=&quot;#secrets&quot;&gt;grant access to the secrets&lt;/a&gt; to each service in the stack.</source>
          <target state="translated">スタック内の各サービスに&lt;a href=&quot;#secrets&quot;&gt;シークレット&lt;/a&gt;へのアクセスを許可する必要があります。</target>
        </trans-unit>
        <trans-unit id="e40cbc42543528d8e2b621112e4908e73f5617bb" translate="yes" xml:space="preserve">
          <source>You will need a Linode APIv4 Personal Access Token. Get one here: &lt;a href=&quot;https://developers.linode.com/api/v4#section/Personal-Access-Token&quot;&gt;https://developers.linode.com/api/v4#section/Personal-Access-Token&lt;/a&gt;. Supply the token to &lt;code&gt;docker-machine create -d linode&lt;/code&gt; with &lt;code&gt;--linode-token&lt;/code&gt;.</source>
          <target state="translated">Linode APIv4パーソナルアクセストークンが必要です。こちらから入手してください：&lt;a href=&quot;https://developers.linode.com/api/v4#section/Personal-Access-Token&quot;&gt;https&lt;/a&gt; : //developers.linode.com/api/v4#section/Personal-Access-Token。トークン供給 &lt;code&gt;docker-machine create -d linode&lt;/code&gt; 持つ &lt;code&gt;--linode-token&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b6906139ec66bd11cfec52f809875c2fd9c7f628" translate="yes" xml:space="preserve">
          <source>You would need to set the environment variable &lt;code&gt;NOTARY_SERVER_STORAGE_DB_URL&lt;/code&gt;, because the &lt;code&gt;db_url&lt;/code&gt; is in the &lt;code&gt;storage&lt;/code&gt; section of the Notary server configuration JSON.</source>
          <target state="translated">&lt;code&gt;db_url&lt;/code&gt; はNotaryサーバー設定JSONの &lt;code&gt;storage&lt;/code&gt; セクションにあるため、環境変数 &lt;code&gt;NOTARY_SERVER_STORAGE_DB_URL&lt;/code&gt; を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="01be82608283b8cbf6dd9fbcd5f2819f6128ac9d" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll find that the proportion of time is the same as the proportion of blkio weights of the two containers.</source>
          <target state="translated">時間の比率は、2つのコンテナーのblkioウェイトの比率と同じであることがわかります。</target>
        </trans-unit>
        <trans-unit id="a51eeb8853ee81dfa0d29c44cf9f931a1c097e0e" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll need two shells for this example.</source>
          <target state="translated">この例では、2つのシェルが必要です。</target>
        </trans-unit>
        <trans-unit id="2ba79483e84c2c3fd3a8c314db4703704f5285f3" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re doing great, this is the home stretch!</source>
          <target state="translated">元気です。これがホームストレッチです。</target>
        </trans-unit>
        <trans-unit id="85e1e1848f9ced21754ebffed2b3be35429e53af" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve been editing the same Compose file for this entire tutorial. Well, we have good news. That Compose file works just as well in production as it does on your machine. In this section, we will go through some options for running your Dockerized application.</source>
          <target state="translated">このチュートリアル全体で同じComposeファイルを編集しています。さて、良いニュースがあります。そのComposeファイルは、マシンでの場合と同じように、本番環境でも機能します。このセクションでは、Dockerizedアプリケーションを実行するためのいくつかのオプションについて説明します。</target>
        </trans-unit>
        <trans-unit id="d4fe4f247d219733dced50e608efd15c8760359e" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve taken a full-stack, dev-to-deploy tour of the entire Docker platform.</source>
          <target state="translated">Dockerプラットフォーム全体のフルスタックの開発からデプロイのツアーを終えました。</target>
        </trans-unit>
        <trans-unit id="8e561b6978dc90ee4fb485bd0996d03f200ddc99" translate="yes" xml:space="preserve">
          <source>Your app is now running on your cloud provider.</source>
          <target state="translated">あなたのアプリは現在、あなたのクラウドプロバイダー上で実行されています。</target>
        </trans-unit>
        <trans-unit id="8424bb0b4bc3852133c0a98236a550a85d58caa0" translate="yes" xml:space="preserve">
          <source>Your configuration options can contain environment variables. Compose uses the variable values from the shell environment in which &lt;code&gt;docker-compose&lt;/code&gt; is run. For example, suppose the shell contains &lt;code&gt;POSTGRES_VERSION=9.3&lt;/code&gt; and you supply this configuration:</source>
          <target state="translated">設定オプションには環境変数を含めることができます。Composeは、 &lt;code&gt;docker-compose&lt;/code&gt; が実行されているシェル環境からの変数値を使用します。たとえば、シェルに &lt;code&gt;POSTGRES_VERSION=9.3&lt;/code&gt; が含まれていて、次の構成を指定したとします。</target>
        </trans-unit>
        <trans-unit id="084fef0d16a06be0376fa0f1e25fca4209e92382" translate="yes" xml:space="preserve">
          <source>Your container will have lines in &lt;code&gt;/etc/hosts&lt;/code&gt; which define the hostname of the container itself as well as &lt;code&gt;localhost&lt;/code&gt; and a few other common things. The &lt;code&gt;--add-host&lt;/code&gt; flag can be used to add additional lines to &lt;code&gt;/etc/hosts&lt;/code&gt;.</source>
          <target state="translated">コンテナの &lt;code&gt;/etc/hosts&lt;/code&gt; には、コンテナ自体のホスト名と &lt;code&gt;localhost&lt;/code&gt; およびその他の一般的な事項を定義する行があります。 &lt;code&gt;--add-host&lt;/code&gt; フラグに追加の行を追加するために使用することができる &lt;code&gt;/etc/hosts&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="64dbfe0ffb995924de4f14ba6869f3b926032a67" translate="yes" xml:space="preserve">
          <source>Your container will use the same DNS servers as the host by default, but you can override this with &lt;code&gt;--dns&lt;/code&gt;.</source>
          <target state="translated">コンテナはデフォルトでホストと同じDNSサーバーを使用しますが、これを &lt;code&gt;--dns&lt;/code&gt; で上書きできます。</target>
        </trans-unit>
        <trans-unit id="8ab0fd190ee9d406884563a82458273e51cf9e1a" translate="yes" xml:space="preserve">
          <source>Your customization applies to all containers started in with your Docker client. Users can override your custom or the default key sequence on a per-container basis. To do this, the user specifies the &lt;code&gt;--detach-keys&lt;/code&gt; flag with the &lt;code&gt;docker attach&lt;/code&gt;, &lt;code&gt;docker exec&lt;/code&gt;, &lt;code&gt;docker run&lt;/code&gt; or &lt;code&gt;docker start&lt;/code&gt; command.</source>
          <target state="translated">カスタマイズは、Dockerクライアントで開始されたすべてのコンテナーに適用されます。ユーザーは、コンテナーごとにカスタムまたはデフォルトのキーシーケンスを上書きできます。これを行うには、ユーザーが指定し &lt;code&gt;--detach-keys&lt;/code&gt; とフラグを &lt;code&gt;docker attach&lt;/code&gt; 、 &lt;code&gt;docker exec&lt;/code&gt; 、 &lt;code&gt;docker run&lt;/code&gt; または &lt;code&gt;docker start&lt;/code&gt; コマンド。</target>
        </trans-unit>
        <trans-unit id="d19f19222cd3814b4594be2a7bf72edf495c6b04" translate="yes" xml:space="preserve">
          <source>Your default VPC ID is determined at the start of a command. In some cases, either because your account does not have a default VPC, or you do not want to use the default one, you can specify a VPC with the &lt;code&gt;--amazonec2-vpc-id&lt;/code&gt; flag.</source>
          <target state="translated">デフォルトのVPC IDは、コマンドの開始時に決定されます。アカウントにデフォルトのVPCがないか、デフォルトのVPCを使用したくない場合、 &lt;code&gt;--amazonec2-vpc-id&lt;/code&gt; フラグでVPCを指定できます。</target>
        </trans-unit>
        <trans-unit id="18eb02e58978e0bd647fa4be8d36cebd729b07cb" translate="yes" xml:space="preserve">
          <source>Your directory listing may have some differences, especially if you use a different container storage driver than &lt;code&gt;aufs&lt;/code&gt;.</source>
          <target state="translated">特に &lt;code&gt;aufs&lt;/code&gt; とは異なるコンテナーストレージドライバーを使用する場合は、ディレクトリリストにいくつかの違いがある可能性があります。</target>
        </trans-unit>
        <trans-unit id="c555c9f1170ebe78d16845f79b31e0942252bc8a" translate="yes" xml:space="preserve">
          <source>Your first &lt;code&gt;docker-compose.yml&lt;/code&gt; file</source>
          <target state="translated">最初の &lt;code&gt;docker-compose.yml&lt;/code&gt; ファイル</target>
        </trans-unit>
        <trans-unit id="afa910b5ed827136d4eee0f607c122c6d9a1bb42" translate="yes" xml:space="preserve">
          <source>Your first docker-compose.yml File</source>
          <target state="translated">最初の docker-compose.yml ファイル</target>
        </trans-unit>
        <trans-unit id="769aea4b8228a820bc9f132a1e3ce0cb6c59b762" translate="yes" xml:space="preserve">
          <source>Your new development environment</source>
          <target state="translated">あなたの新しい開発環境</target>
        </trans-unit>
        <trans-unit id="c1e9f6a3ffbddd1a5c9e6a40cf431f0349ac15ff" translate="yes" xml:space="preserve">
          <source>Your service uses the gMSA credential spec when it starts, but unlike a typical Docker Config (used by passing the --config flag), the credential spec is not mounted into the container.</source>
          <target state="translated">サービスは起動時にgMSAクレデンシャル仕様を使用しますが、一般的なDocker Config(--configフラグを渡すことで使用)とは異なり、クレデンシャル仕様はコンテナにマウントされません。</target>
        </trans-unit>
        <trans-unit id="a36e8d4fd23e76e1296849017c6c9d67b2ee13ec" translate="yes" xml:space="preserve">
          <source>Your service will use the gMSA credential spec when it starts, but unlike a typical Docker Config (used by passing the --config flag), the credential spec will not be mounted into the container.</source>
          <target state="translated">サービスは起動時にgMSAのクレデンシャル仕様を使用しますが、一般的なDocker Config(--configフラグを渡すことで使用されます)とは異なり、クレデンシャル仕様はコンテナにマウントされません。</target>
        </trans-unit>
        <trans-unit id="1d676d9c391c67445f236d1208ba84445b5053f1" translate="yes" xml:space="preserve">
          <source>Yubikey support requires &lt;a href=&quot;https://www.yubico.com/support/knowledge-base/categories/downloads/&quot;&gt;Yubico PIV libraries&lt;/a&gt; (bundled with the PIV tools) to be available in standard library locations.</source>
          <target state="translated">Yubikeyをサポートするには、標準のライブラリの場所で&lt;a href=&quot;https://www.yubico.com/support/knowledge-base/categories/downloads/&quot;&gt;Yubico PIVライブラリ&lt;/a&gt;（PIVツールにバンドルされている）を使用できる必要があります。</target>
        </trans-unit>
        <trans-unit id="60dd11fc07bd0d3945e44a890cc72d0f1f51e20d" translate="yes" xml:space="preserve">
          <source>ZFS options</source>
          <target state="translated">ZFS オプション</target>
        </trans-unit>
        <trans-unit id="6bc651c1ea1b888fd17d908b5d775d3dfb2f624e" translate="yes" xml:space="preserve">
          <source>Zsh</source>
          <target state="translated">Zsh</target>
        </trans-unit>
        <trans-unit id="2304e7d96c38a1fd44578d3797f7c271fda06ec9" translate="yes" xml:space="preserve">
          <source>[]byte</source>
          <target state="translated">[]byte</target>
        </trans-unit>
        <trans-unit id="b2e5f684d206fc762ea10335b6f2d226c8c1d180" translate="yes" xml:space="preserve">
          <source>a drive other than &lt;code&gt;C:&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;C:&lt;/code&gt; 以外のドライブ：</target>
        </trans-unit>
        <trans-unit id="1fd5ba11a556c0cf5dd368924ae1c45e70868895" translate="yes" xml:space="preserve">
          <source>a function that displays the active machine in your shell prompt</source>
          <target state="translated">シェルプロンプトにアクティブなマシンを表示する関数</target>
        </trans-unit>
        <trans-unit id="959e21cac14c1c24744c4e46496329ee3517e3d7" translate="yes" xml:space="preserve">
          <source>a function wrapper that adds a &lt;code&gt;docker-machine use&lt;/code&gt; subcommand to switch the active machine</source>
          <target state="translated">&lt;code&gt;docker-machine use&lt;/code&gt; サブコマンドを追加してアクティブマシンを切り替える関数ラッパー</target>
        </trans-unit>
        <trans-unit id="637642e47d478c00e1463a995c964b79d695ecfa" translate="yes" xml:space="preserve">
          <source>a non-existing or empty directory</source>
          <target state="translated">存在しないか空のディレクトリ</target>
        </trans-unit>
        <trans-unit id="19251148c6e4a8bc3fafafb262b0ad7b311f093c" translate="yes" xml:space="preserve">
          <source>a rolling update policy</source>
          <target state="translated">ローリングアップデートポリシー</target>
        </trans-unit>
        <trans-unit id="2bb6b986c5d6fb26dd9dd1054b545ce022371b0c" translate="yes" xml:space="preserve">
          <source>active</source>
          <target state="translated">active</target>
        </trans-unit>
        <trans-unit id="4d7a9af00bf393679089d870e60a2b720df5c663" translate="yes" xml:space="preserve">
          <source>add or remove label metadata</source>
          <target state="translated">ラベルのメタデータを追加または削除</target>
        </trans-unit>
        <trans-unit id="927876bfc7eae4c6f52b380d83dab14d11493e49" translate="yes" xml:space="preserve">
          <source>adding nodes to the swarm</source>
          <target state="translated">ノード追加</target>
        </trans-unit>
        <trans-unit id="3b21e0f54dca09308ec896c51cda4f9ca4dd91a4" translate="yes" xml:space="preserve">
          <source>aliases</source>
          <target state="translated">aliases</target>
        </trans-unit>
        <trans-unit id="43c56eb5822b8c596fd48c0ab4832de1e48d2b12" translate="yes" xml:space="preserve">
          <source>allow inbound SSH traffic on the server that is running the &lt;code&gt;manager&lt;/code&gt; (this may be already set on your cloud provider)</source>
          <target state="translated">&lt;code&gt;manager&lt;/code&gt; 実行しているサーバーでインバウンドSSHトラフィックを許可します（これはクラウドプロバイダーですでに設定されている場合があります）</target>
        </trans-unit>
        <trans-unit id="d52a2256076a6caf4065d6e255883f30a8247988" translate="yes" xml:space="preserve">
          <source>allow inbound traffic to the &lt;code&gt;web&lt;/code&gt; service on any worker nodes so that Hello World and Visualizer are accessible from a web browser.</source>
          <target state="translated">Hello WorldとVisualizerにWebブラウザーからアクセスできるように、任意のワーカーノードで &lt;code&gt;web&lt;/code&gt; サービスへのインバウンドトラフィックを許可します。</target>
        </trans-unit>
        <trans-unit id="6e1b346aa50cd2ecb794c045dd8f416e80cf1083" translate="yes" xml:space="preserve">
          <source>ami-1c45e273</source>
          <target state="translated">ami-1c45e273</target>
        </trans-unit>
        <trans-unit id="9f02b2923c7265d40efc80e7fdd1ea27d5b310fe" translate="yes" xml:space="preserve">
          <source>ami-2378f540</source>
          <target state="translated">ami-2378f540</target>
        </trans-unit>
        <trans-unit id="053ae9c92de3582d1443b9caa8078c71f31de237" translate="yes" xml:space="preserve">
          <source>ami-34afc458</source>
          <target state="translated">ami-34afc458</target>
        </trans-unit>
        <trans-unit id="9f9a4b6abf6b9d114bd25b4313849722df010ad2" translate="yes" xml:space="preserve">
          <source>ami-49e59a26</source>
          <target state="translated">ami-49e59a26</target>
        </trans-unit>
        <trans-unit id="98ca5abfc4ad6b93b913c641d7d2917024ffbacb" translate="yes" xml:space="preserve">
          <source>ami-6d48500b</source>
          <target state="translated">ami-6d48500b</target>
        </trans-unit>
        <trans-unit id="b9d16509b665b6194d1d93a4664e5772969b535e" translate="yes" xml:space="preserve">
          <source>ami-73f7da13</source>
          <target state="translated">ami-73f7da13</target>
        </trans-unit>
        <trans-unit id="8ba8c0527e55b20a759e31c8eeb81fcc0bac843a" translate="yes" xml:space="preserve">
          <source>ami-785c491f</source>
          <target state="translated">ami-785c491f</target>
        </trans-unit>
        <trans-unit id="78ee0111499690535de5fd74e7ebb7299cb2898c" translate="yes" xml:space="preserve">
          <source>ami-7ed56a1a</source>
          <target state="translated">ami-7ed56a1a</target>
        </trans-unit>
        <trans-unit id="834f3952546ad88ab091ab227e3cdeeb2329c8d4" translate="yes" xml:space="preserve">
          <source>ami-835b4efa</source>
          <target state="translated">ami-835b4efa</target>
        </trans-unit>
        <trans-unit id="7e6cf54bd9ed7d74182d930f4ec3cb9ddcd2967a" translate="yes" xml:space="preserve">
          <source>ami-8b92b4ee</source>
          <target state="translated">ami-8b92b4ee</target>
        </trans-unit>
        <trans-unit id="11713ef72dde81f332ff2ab77adeacd6af873778" translate="yes" xml:space="preserve">
          <source>ami-939412f2</source>
          <target state="translated">ami-939412f2</target>
        </trans-unit>
        <trans-unit id="5d4c5867ccb0d4be8c1a3e4927e874b3c6989e0c" translate="yes" xml:space="preserve">
          <source>ami-94d20dfa</source>
          <target state="translated">ami-94d20dfa</target>
        </trans-unit>
        <trans-unit id="f687e606813e670501ba8808b41562f428b14a6b" translate="yes" xml:space="preserve">
          <source>ami-a163b4cc</source>
          <target state="translated">ami-a163b4cc</target>
        </trans-unit>
        <trans-unit id="a447270c627d8ccd93c9ebad164e4482e76f026d" translate="yes" xml:space="preserve">
          <source>ami-c1cf79bc</source>
          <target state="translated">ami-c1cf79bc</target>
        </trans-unit>
        <trans-unit id="0542573e1ffeb71d317f33d67bb2232ca45685ef" translate="yes" xml:space="preserve">
          <source>ami-cc7066a8</source>
          <target state="translated">ami-cc7066a8</target>
        </trans-unit>
        <trans-unit id="d96f081e28e0fd2244a08fa227e7d42c4965e1b9" translate="yes" xml:space="preserve">
          <source>ami-d15a75c7</source>
          <target state="translated">ami-d15a75c7</target>
        </trans-unit>
        <trans-unit id="48a2af0411527d43b56716cc34c665855a2288c7" translate="yes" xml:space="preserve">
          <source>ami-e94e5e8a</source>
          <target state="translated">ami-e94e5e8a</target>
        </trans-unit>
        <trans-unit id="98c39a8349416b8736d68a6317b7db5db3d3ff10" translate="yes" xml:space="preserve">
          <source>an AWS Access Key ID</source>
          <target state="translated">AWSアクセスキーID</target>
        </trans-unit>
        <trans-unit id="f73588fdcd1bb1b41cf5d4f8e450af53b559d41a" translate="yes" xml:space="preserve">
          <source>an AWS Secret Access Key</source>
          <target state="translated">AWSの秘密アクセスキー</target>
        </trans-unit>
        <trans-unit id="3db38ac6452343fbfbe6ad64aa19fb3238dbe19d" translate="yes" xml:space="preserve">
          <source>an offline key that is the root of DCT for an image tag</source>
          <target state="translated">画像タグのDCTのルートとなるオフラインキー</target>
        </trans-unit>
        <trans-unit id="ddc3f3bc04a0324dfd01573c2717c55b698e63ec" translate="yes" xml:space="preserve">
          <source>an overlay network for the service to connect to other services in the swarm</source>
          <target state="translated">スウォーム内の他のサービスに接続するためのサービス用オーバーレイネットワーク</target>
        </trans-unit>
        <trans-unit id="587cf1de4e778922e2ca69b66e2697ce210246b6" translate="yes" xml:space="preserve">
          <source>ancestor</source>
          <target state="translated">ancestor</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="c684f70ac6f87bc4fedd0b50a58ef2cecb3cf458" translate="yes" xml:space="preserve">
          <source>and many others.</source>
          <target state="translated">など、多くの方にご利用いただいています。</target>
        </trans-unit>
        <trans-unit id="41e7263a3b42ad78cff0cc85cc01ac14a0e494ab" translate="yes" xml:space="preserve">
          <source>ap-northeast-1</source>
          <target state="translated">ap-northeast-1</target>
        </trans-unit>
        <trans-unit id="916fe9db1af6ddf3ce0e63e7c94a0f13379eec59" translate="yes" xml:space="preserve">
          <source>ap-northeast-2</source>
          <target state="translated">ap-northeast-2</target>
        </trans-unit>
        <trans-unit id="5dd9c1e5e166373290d4fe2f0707ee8f2c632a21" translate="yes" xml:space="preserve">
          <source>ap-south-1</source>
          <target state="translated">ap-south-1</target>
        </trans-unit>
        <trans-unit id="781a24a14347c6402680e16d785ae6119a2ae792" translate="yes" xml:space="preserve">
          <source>ap-southeast-1</source>
          <target state="translated">ap-southeast-1</target>
        </trans-unit>
        <trans-unit id="cbe28313724d9fdf7eeafebb953b068859d972d4" translate="yes" xml:space="preserve">
          <source>ap-southeast-2</source>
          <target state="translated">ap-southeast-2</target>
        </trans-unit>
        <trans-unit id="81a11f26ce4e144b1db789a799b9a4340799ee07" translate="yes" xml:space="preserve">
          <source>applications have no system dependencies</source>
          <target state="translated">アプリケーションにはシステムへの依存性がありません。</target>
        </trans-unit>
        <trans-unit id="3030e728f154bf51419109efb93b6b8aeec9a976" translate="yes" xml:space="preserve">
          <source>args</source>
          <target state="translated">args</target>
        </trans-unit>
        <trans-unit id="c0ee36527bf077287856a034612f3afc64faa37d" translate="yes" xml:space="preserve">
          <source>args of the plugin, struct consisting of the following fields</source>
          <target state="translated">プラグインの args、以下のフィールドからなる構造体</target>
        </trans-unit>
        <trans-unit id="fa0428a893775c2614e70e0ab834cdf7232809f4" translate="yes" xml:space="preserve">
          <source>arguments for selected options. For example, &lt;code&gt;docker-compose kill -s&lt;/code&gt; completes some signals like SIGHUP and SIGUSR1.</source>
          <target state="translated">選択したオプションの引数。たとえば、 &lt;code&gt;docker-compose kill -s&lt;/code&gt; は、SIGHUPやSIGUSR1などのいくつかのシグナルを完了します。</target>
        </trans-unit>
        <trans-unit id="8c95b394b7dc1c7944200f20c5375a2569606c53" translate="yes" xml:space="preserve">
          <source>as long as the Swarm cluster is configured to use the &lt;a href=&quot;https://docs.docker.com/network#an-overlay-network-with-docker-engine-swarm-mode&quot;&gt;overlay driver&lt;/a&gt;, or a custom driver which supports multi-host networking.</source>
          <target state="translated">Swarmクラスターが&lt;a href=&quot;https://docs.docker.com/network#an-overlay-network-with-docker-engine-swarm-mode&quot;&gt;オーバーレイドライバー&lt;/a&gt;、またはマルチホストネットワークをサポートするカスタムドライバーを使用するように構成されている限り。</target>
        </trans-unit>
        <trans-unit id="f0f77b8c66c54200481c656c2bff2a9083a3b8eb" translate="yes" xml:space="preserve">
          <source>as well as:</source>
          <target state="translated">と同様に。</target>
        </trans-unit>
        <trans-unit id="f4eab172b9928081a1f4f21f54ac7173a624bcf8" translate="yes" xml:space="preserve">
          <source>attachable</source>
          <target state="translated">attachable</target>
        </trans-unit>
        <trans-unit id="e48486e6d9c80e2b9e36cda710d792474cc2d26b" translate="yes" xml:space="preserve">
          <source>auth section (optional)</source>
          <target state="translated">認証部</target>
        </trans-unit>
        <trans-unit id="960191f11abec5774501b6c91a820742fc142bdd" translate="yes" xml:space="preserve">
          <source>available docker-compose commands</source>
          <target state="translated">利用可能な docker-compose コマンド</target>
        </trans-unit>
        <trans-unit id="51de2b835bd35a67eb32dbcd3d77d4b96e5aa39d" translate="yes" xml:space="preserve">
          <source>before</source>
          <target state="translated">before</target>
        </trans-unit>
        <trans-unit id="7200c7b77bdd14bf9072fdeb0f514dba74853ca9" translate="yes" xml:space="preserve">
          <source>before (&lt;code&gt;&amp;lt;image-name&amp;gt;[:&amp;lt;tag&amp;gt;]&lt;/code&gt;, &lt;code&gt;&amp;lt;image id&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;image@digest&amp;gt;&lt;/code&gt;) - filter images created before given id or references</source>
          <target state="translated">before（ &lt;code&gt;&amp;lt;image-name&amp;gt;[:&amp;lt;tag&amp;gt;]&lt;/code&gt; 、 &lt;code&gt;&amp;lt;image id&amp;gt;&lt;/code&gt; または &lt;code&gt;&amp;lt;image@digest&amp;gt;&lt;/code&gt; ）-指定されたIDまたは参照の前に作成された画像をフィルタリングします</target>
        </trans-unit>
        <trans-unit id="6bdd4db977b0f96aaf3bff2e4300153c648ca382" translate="yes" xml:space="preserve">
          <source>bind</source>
          <target state="translated">bind</target>
        </trans-unit>
        <trans-unit id="0e77ca7f9475a78ab8bd959b61d770e3760f0dd5" translate="yes" xml:space="preserve">
          <source>bind-nonrecursive</source>
          <target state="translated">bind-nonrecursive</target>
        </trans-unit>
        <trans-unit id="e122de6cf44d6d71c68de8ff396ad97d65e155e1" translate="yes" xml:space="preserve">
          <source>blkio_config</source>
          <target state="translated">blkio_config</target>
        </trans-unit>
        <trans-unit id="5039d155a71c0a5f7a2b2654ad49cb7ee47a8980" translate="yes" xml:space="preserve">
          <source>bool</source>
          <target state="translated">bool</target>
        </trans-unit>
        <trans-unit id="2fa1981b4a9a7a3e2f1294354810635b9030c74f" translate="yes" xml:space="preserve">
          <source>bridge</source>
          <target state="translated">bridge</target>
        </trans-unit>
        <trans-unit id="78abff21c39aaf499370eb6a7aed76b19889fef8" translate="yes" xml:space="preserve">
          <source>bridge name to be used when creating the Linux bridge</source>
          <target state="translated">Linux ブリッジを作成する際に使用するブリッジ名</target>
        </trans-unit>
        <trans-unit id="80754af91bfb6d1073585b046fe0a474ce868509" translate="yes" xml:space="preserve">
          <source>build</source>
          <target state="translated">build</target>
        </trans-unit>
        <trans-unit id="777065f79dbdadba8cecdc57c60f499832254179" translate="yes" xml:space="preserve">
          <source>build &lt;code&gt;labels&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;labels&lt;/code&gt; 作成する</target>
        </trans-unit>
        <trans-unit id="d59795de8a4d83834e525b589b2bb0c12e4542c1" translate="yes" xml:space="preserve">
          <source>bundle</source>
          <target state="translated">bundle</target>
        </trans-unit>
        <trans-unit id="05ee7b28ed7ba488eff5b0534d744719dfc7b7e3" translate="yes" xml:space="preserve">
          <source>by default, generates a self-signed root CA for the swarm.</source>
          <target state="translated">デフォルトでは、スウォームの自己署名付きルートCAを生成します。</target>
        </trans-unit>
        <trans-unit id="828b6681fec556f348924984a1d86810565d6666" translate="yes" xml:space="preserve">
          <source>by default, generates tokens for worker and manager nodes to join the swarm.</source>
          <target state="translated">デフォルトでは、スウォームに参加するワーカーノードとマネージャノードのトークンを生成します。</target>
        </trans-unit>
        <trans-unit id="087c7772a3a85544454f5a1812678f87d7a19f37" translate="yes" xml:space="preserve">
          <source>ca-central-1</source>
          <target state="translated">ca-central-1</target>
        </trans-unit>
        <trans-unit id="6a22d10ee4c77d96c74073d80248ad9712b6ea9b" translate="yes" xml:space="preserve">
          <source>cache_from</source>
          <target state="translated">cache_from</target>
        </trans-unit>
        <trans-unit id="0c93713c1e43fccf897b7b4f02e822c65d557fdf" translate="yes" xml:space="preserve">
          <source>cached</source>
          <target state="translated">cached</target>
        </trans-unit>
        <trans-unit id="08c9f41f124ebaa49463069101439a3356140a0a" translate="yes" xml:space="preserve">
          <source>caching section (optional)</source>
          <target state="translated">キャッシングセクション</target>
        </trans-unit>
        <trans-unit id="f46d0e2902bb6049f09dcb2276ec8aa8baec3ce0" translate="yes" xml:space="preserve">
          <source>cap_add, cap_drop</source>
          <target state="translated">cap_add,cap_drop</target>
        </trans-unit>
        <trans-unit id="ade759e239a40b02809e1f1b31f59f6d0107aae9" translate="yes" xml:space="preserve">
          <source>capabilities of the plugin (&lt;em&gt;Linux only&lt;/em&gt;), see list &lt;a href=&quot;https://github.com/opencontainers/runc/blob/master/libcontainer/SPEC/#security&quot;&gt;&lt;code&gt;here&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">プラグインの機能（&lt;em&gt;Linuxのみ&lt;/em&gt;）、リストは&lt;a href=&quot;https://github.com/opencontainers/runc/blob/master/libcontainer/SPEC/#security&quot;&gt; &lt;code&gt;here&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5be5b3d86d8c8a2c9b0ebdde86fae39960f2481" translate="yes" xml:space="preserve">
          <source>capability</source>
          <target state="translated">capability</target>
        </trans-unit>
        <trans-unit id="73aee7b1e8570a68cd1fe1083a23f6d73d4ae9cb" translate="yes" xml:space="preserve">
          <source>capability (string - currently &lt;code&gt;volumedriver&lt;/code&gt;, &lt;code&gt;networkdriver&lt;/code&gt;, &lt;code&gt;ipamdriver&lt;/code&gt;, &lt;code&gt;logdriver&lt;/code&gt;, &lt;code&gt;metricscollector&lt;/code&gt;, or &lt;code&gt;authz&lt;/code&gt;)</source>
          <target state="translated">機能（文字列-現在 &lt;code&gt;volumedriver&lt;/code&gt; 、 &lt;code&gt;networkdriver&lt;/code&gt; 、 &lt;code&gt;ipamdriver&lt;/code&gt; 、 &lt;code&gt;logdriver&lt;/code&gt; 、 &lt;code&gt;metricscollector&lt;/code&gt; 、または &lt;code&gt;authz&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="07cee1e6c0d2484541bc592e796bd70cac433eda" translate="yes" xml:space="preserve">
          <source>cgroup_parent</source>
          <target state="translated">cgroup_parent</target>
        </trans-unit>
        <trans-unit id="16ebbb5849685062a8c125fae702f97816497eac" translate="yes" xml:space="preserve">
          <source>change a node role</source>
          <target state="translated">ノードロールを変更する</target>
        </trans-unit>
        <trans-unit id="71a8de6d92d3d8cb6fcc4d7c75765d63a537896c" translate="yes" xml:space="preserve">
          <source>change node availability</source>
          <target state="translated">チェンジノードアベイラビリティー</target>
        </trans-unit>
        <trans-unit id="672f4f917caab638fd6967768bd75f32fd1f4e3c" translate="yes" xml:space="preserve">
          <source>characteristics of the nodes where the service can run (such as resource constraints and placement preferences)</source>
          <target state="translated">サービスを実行できるノードの特性 (リソース制約や配置の好みなど)</target>
        </trans-unit>
        <trans-unit id="d48f3139e6b9f07ba2b4611bd13fb1661cbce53a" translate="yes" xml:space="preserve">
          <source>client configuration file</source>
          <target state="translated">コンフィギュレーションファイルクライアント</target>
        </trans-unit>
        <trans-unit id="0c6a84d772fa45d5da9123676c13a10f987ec6bb" translate="yes" xml:space="preserve">
          <source>cn-north-1</source>
          <target state="translated">cn-north-1</target>
        </trans-unit>
        <trans-unit id="1925f793093581c47a5c6b2e414506b1cbae280d" translate="yes" xml:space="preserve">
          <source>command</source>
          <target state="translated">command</target>
        </trans-unit>
        <trans-unit id="b7f90d3b37889edd6678abc3269d0f2a19bb8cf4" translate="yes" xml:space="preserve">
          <source>command completion</source>
          <target state="translated">コマンド補完</target>
        </trans-unit>
        <trans-unit id="09eb7d714f90b9b10ee2f5ee9666cd4cb717b5f6" translate="yes" xml:space="preserve">
          <source>command-line reference</source>
          <target state="translated">コマンドライン参照</target>
        </trans-unit>
        <trans-unit id="caff63f373612ec246ce33340ee5ea92a5f612b6" translate="yes" xml:space="preserve">
          <source>concepts and getting help</source>
          <target state="translated">概念と助けを得る</target>
        </trans-unit>
        <trans-unit id="dfba7aade0868074c2861c98e2a9a92f3178a51b" translate="yes" xml:space="preserve">
          <source>config</source>
          <target state="translated">config</target>
        </trans-unit>
        <trans-unit id="2e7225e51ae489ea31fbce86b22c8c09a7d555a7" translate="yes" xml:space="preserve">
          <source>config (&lt;code&gt;config=&amp;lt;name or id&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">config（ &lt;code&gt;config=&amp;lt;name or id&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="5fb66943637feb59e5652d81e0b86fc7a5ccca4d" translate="yes" xml:space="preserve">
          <source>configs</source>
          <target state="translated">configs</target>
        </trans-unit>
        <trans-unit id="7d5ee500c46dd9095b798b3b6067d78ee25266a2" translate="yes" xml:space="preserve">
          <source>configs configuration reference</source>
          <target state="translated">コンフィグ設定参照</target>
        </trans-unit>
        <trans-unit id="caa0ed803f06ccc9ae5f0bbd2318a586bfb3b67a" translate="yes" xml:space="preserve">
          <source>configuration files</source>
          <target state="translated">コンフィギュレーションファイル</target>
        </trans-unit>
        <trans-unit id="fe1a95b42e0077a562eef88fab0ea60bfedcebd1" translate="yes" xml:space="preserve">
          <source>configures the manager to listen on an active network interface on port 2377.</source>
          <target state="translated">はポート 2377 のアクティブなネットワークインターフェースをリッスンするようにマネージャを設定します。</target>
        </trans-unit>
        <trans-unit id="e92d77a9d3319a333f82bd19aa3dc7bfc326afb3" translate="yes" xml:space="preserve">
          <source>connecting to a remote daemon, such as a &lt;code&gt;docker-machine&lt;/code&gt; provisioned &lt;code&gt;docker engine&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;docker-machine&lt;/code&gt; でプロビジョニングされた &lt;code&gt;docker engine&lt;/code&gt; などのリモートデーモンへの接続。</target>
        </trans-unit>
        <trans-unit id="8c305a07c6f8fa806cbf0aa9caa35c680fb0c4c7" translate="yes" xml:space="preserve">
          <source>consistent</source>
          <target state="translated">consistent</target>
        </trans-unit>
        <trans-unit id="255a762c36cdae2fe950e67e8b8a4efb260e7540" translate="yes" xml:space="preserve">
          <source>container</source>
          <target state="translated">container</target>
        </trans-unit>
        <trans-unit id="f44956cd48cc80dfb15d3b2dbd1aca1e5547b42d" translate="yes" xml:space="preserve">
          <source>container (&lt;code&gt;container=&amp;lt;name or id&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">コンテナー（ &lt;code&gt;container=&amp;lt;name or id&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="31cd2646e0944f1d70d0365dcf282e508ed3168d" translate="yes" xml:space="preserve">
          <source>container identification</source>
          <target state="translated">容器識別</target>
        </trans-unit>
        <trans-unit id="14f850c34e63edcdfd0aa66d316b75de4d9281eb" translate="yes" xml:space="preserve">
          <source>container_name</source>
          <target state="translated">container_name</target>
        </trans-unit>
        <trans-unit id="ec2727b3b71f07635f726026bef44352ec89e452" translate="yes" xml:space="preserve">
          <source>context</source>
          <target state="translated">context</target>
        </trans-unit>
        <trans-unit id="cd072d0dde8910008d609526e3f7daf9aa00ea8c" translate="yes" xml:space="preserve">
          <source>cpu_count, cpu_percent, cpu_shares, cpu_period, cpu_quota, cpus, cpuset, domainname, hostname, ipc, mac_address, mem_limit, memswap_limit, mem_swappiness, mem_reservation, oom_kill_disable, oom_score_adj, privileged, read_only, shm_size, stdin_open, tty, user, working_dir</source>
          <target state="translated">cpu_count,cpu_percent,cpu_shares,cpu_period,cpu_quota,cpus,cpuset,ドメイン名,ホスト名,ipc,mac_address,mem_limit,memswap_limit,mem_swappiness,mem_reservation,oom_kill_disable,oom_score_adj,privileged,read_only,shm_size,stdin_open,tty,user,working_dir</target>
        </trans-unit>
        <trans-unit id="318973317e08e71e5895e18983e822e0c7fc6ec7" translate="yes" xml:space="preserve">
          <source>cpu_rt_runtime, cpu_rt_period</source>
          <target state="translated">cpu_rt_runtime,cpu_rt_period</target>
        </trans-unit>
        <trans-unit id="0624648ad39b16595bf49af6664c4a07cb607039" translate="yes" xml:space="preserve">
          <source>cpu_shares, cpu_quota, cpuset, domainname, hostname, ipc, mac_address, mem_limit, memswap_limit, mem_swappiness, privileged, read_only, restart, shm_size, stdin_open, tty, user, working_dir</source>
          <target state="translated">cpu_shares,cpu_quota,cpuset,domainname,hostname,ipc,mac_address,mem_limit,memswap_limit,mem_swappiness,privileged,read_only,restart,shm_size,stdin_open,tty,user,working_dir</target>
        </trans-unit>
        <trans-unit id="9b7c68a918b17eb053809b198d7c9abfc142f30a" translate="yes" xml:space="preserve">
          <source>create</source>
          <target state="translated">create</target>
        </trans-unit>
        <trans-unit id="4938aebcda1c80f17d48c07e926b7b779d50fbfe" translate="yes" xml:space="preserve">
          <source>create a new (or start an existing) Docker virtual machine</source>
          <target state="translated">Docker仮想マシンを新規作成(または既存の仮想マシンを起動)する</target>
        </trans-unit>
        <trans-unit id="066036ffd8947648ed238005330d393b219e6074" translate="yes" xml:space="preserve">
          <source>create context from a named context</source>
          <target state="translated">名前付きコンテキストからコンテキストを作成する</target>
        </trans-unit>
        <trans-unit id="8210da2b31209460470f1206d944b4b5ed1e46c1" translate="yes" xml:space="preserve">
          <source>creates a swarm named &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; という名前のスウォームを作成します。</target>
        </trans-unit>
        <trans-unit id="6a0cbae42cdbc9625267436ae648db8276473a08" translate="yes" xml:space="preserve">
          <source>creates an overlay default IP addresses and subnet mask for your networks</source>
          <target state="translated">ネットワーク用のオーバーレイデフォルトIPアドレスとサブネットマスクを作成します。</target>
        </trans-unit>
        <trans-unit id="60a0cd4fecf473c2718b7f1b5101c51f158e14d3" translate="yes" xml:space="preserve">
          <source>creates an overlay network named &lt;code&gt;ingress&lt;/code&gt; for publishing service ports external to the swarm.</source>
          <target state="translated">群の外部にあるサービスポートを公開するための、 &lt;code&gt;ingress&lt;/code&gt; という名前のオーバーレイネットワークを作成します。</target>
        </trans-unit>
        <trans-unit id="d3a88b62e5e6dfbfa253ecce53fc310936cc4503" translate="yes" xml:space="preserve">
          <source>credential_spec</source>
          <target state="translated">credential_spec</target>
        </trans-unit>
        <trans-unit id="6075904f3374be89efeb714b14cb7ac5ea52e8a3" translate="yes" xml:space="preserve">
          <source>currently supported:</source>
          <target state="translated">現在サポートされています。</target>
        </trans-unit>
        <trans-unit id="4eb7a17655440a77cf067e6d109036a13dfa5100" translate="yes" xml:space="preserve">
          <source>daemon</source>
          <target state="translated">daemon</target>
        </trans-unit>
        <trans-unit id="1150ba990a85c5918a823f8be6da892ae3a8713e" translate="yes" xml:space="preserve">
          <source>daemon (&lt;code&gt;daemon=&amp;lt;name or id&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">デーモン（ &lt;code&gt;daemon=&amp;lt;name or id&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="755d346c0e2ec02be51dc5d1b8e3c1a7d2c8a351" translate="yes" xml:space="preserve">
          <source>daemon is running on Windows server, or &lt;code&gt;hyperv&lt;/code&gt; if running on Windows client.</source>
          <target state="translated">デーモンはWindowsサーバーで実行されています。Windowsクライアントで実行されている場合は &lt;code&gt;hyperv&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6f7cf198dfb29436edaf34fc317327b3fbb012fe" translate="yes" xml:space="preserve">
          <source>dangling</source>
          <target state="translated">dangling</target>
        </trans-unit>
        <trans-unit id="aa456615a3f995734efe5b4b24739ee3b02d5364" translate="yes" xml:space="preserve">
          <source>dangling (boolean - true or false)</source>
          <target state="translated">ぶら下がっている (ブール値-真または偽)</target>
        </trans-unit>
        <trans-unit id="407b7ee3e135f51fe5e12377435af2e75ee50851" translate="yes" xml:space="preserve">
          <source>dangling (boolean - true or false, 0 or 1)</source>
          <target state="translated">ぶら下がっている (ブール値-真か偽か、0か1かのどちらか)</target>
        </trans-unit>
        <trans-unit id="32faaecac742100f7753f0c1d0aa0add01b4046b" translate="yes" xml:space="preserve">
          <source>debug</source>
          <target state="translated">debug</target>
        </trans-unit>
        <trans-unit id="6803cfd22f69617d3cd07144f64367faacd28779" translate="yes" xml:space="preserve">
          <source>decrease logging level by signaling &lt;code&gt;SIGUSR2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SIGUSR2&lt;/code&gt; に信号を送ることでログレベルを下げる</target>
        </trans-unit>
        <trans-unit id="7505d64a54e061b7acd54ccd58b49dc43500b635" translate="yes" xml:space="preserve">
          <source>default</source>
          <target state="translated">default</target>
        </trans-unit>
        <trans-unit id="31b469d4ada185a4574d3787f4dbf939e4f61407" translate="yes" xml:space="preserve">
          <source>default address pool in CIDR format</source>
          <target state="translated">CIDR形式のデフォルトアドレスプール</target>
        </trans-unit>
        <trans-unit id="5c7e89d3e0147873ef435b8bee3928159c8cc279" translate="yes" xml:space="preserve">
          <source>default address pool subnet mask length</source>
          <target state="translated">デフォルトアドレスプールサブネットマスク長</target>
        </trans-unit>
        <trans-unit id="2fe30db6ace3d91c9ebca3a041f5baf8bf3dc859" translate="yes" xml:space="preserve">
          <source>default for local</source>
          <target state="translated">ローカルのデフォルト</target>
        </trans-unit>
        <trans-unit id="d2e3207d92d2272c3e76100083d63d4503394196" translate="yes" xml:space="preserve">
          <source>default for remote</source>
          <target state="translated">リモート用のデフォルト</target>
        </trans-unit>
        <trans-unit id="7b63e4d7ed03b9dcaf52939882ffbbf6b0fb0985" translate="yes" xml:space="preserve">
          <source>delegated</source>
          <target state="translated">delegated</target>
        </trans-unit>
        <trans-unit id="1797e6ebcb9eb49bdfd7ea799fa754652bacaf5c" translate="yes" xml:space="preserve">
          <source>delegation</source>
          <target state="translated">delegation</target>
        </trans-unit>
        <trans-unit id="9485989ff514b5106b7738850fd73c23e8c1e3f7" translate="yes" xml:space="preserve">
          <source>delete</source>
          <target state="translated">delete</target>
        </trans-unit>
        <trans-unit id="d992f35918ff4662dc2ff2c575252097361df68e" translate="yes" xml:space="preserve">
          <source>deny access to raw sockets (to prevent packet spoofing);</source>
          <target state="translated">生のソケットへのアクセスを拒否します (パケットの詐称を防ぐため)。</target>
        </trans-unit>
        <trans-unit id="aa6c0c809419398bbbac0a9b4c3912d07a2220dc" translate="yes" xml:space="preserve">
          <source>deny access to some filesystem operations, like creating new device nodes, changing the owner of files, or altering attributes (including the immutable flag);</source>
          <target state="translated">新しいデバイスノードの作成、ファイルの所有者の変更、属性の変更 (immutable フラグを含む)など、いくつかのファイルシステム操作へのアクセスを拒否します。</target>
        </trans-unit>
        <trans-unit id="fb2f29039cd092d81687c48428a5f2121f9c4f56" translate="yes" xml:space="preserve">
          <source>deny all &amp;ldquo;mount&amp;rdquo; operations;</source>
          <target state="translated">すべての「マウント」操作を拒否します。</target>
        </trans-unit>
        <trans-unit id="7bb1e6b13c6b894dfd30206d3c9ba87246dccb73" translate="yes" xml:space="preserve">
          <source>deny module loading;</source>
          <target state="translated">モジュールの読み込みを拒否します。</target>
        </trans-unit>
        <trans-unit id="0cb4f09a238f2a12115366c6de3f3a20d777cc6c" translate="yes" xml:space="preserve">
          <source>depends_on</source>
          <target state="translated">depends_on</target>
        </trans-unit>
        <trans-unit id="b0d51b9ff91b623cc42b17c529b7c21c2ab57fb4" translate="yes" xml:space="preserve">
          <source>deploy</source>
          <target state="translated">deploy</target>
        </trans-unit>
        <trans-unit id="d24fd332f69c0b3cf27520da21626daa44887c4f" translate="yes" xml:space="preserve">
          <source>deploy &lt;code&gt;endpoint_mode&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;endpoint_mode&lt;/code&gt; をデプロイする</target>
        </trans-unit>
        <trans-unit id="000e6fe116b3e51c9200e49aa4a6a7a7110f1bea" translate="yes" xml:space="preserve">
          <source>deploying application services to the swarm</source>
          <target state="translated">スウォームへのアプリケーションサービスの展開</target>
        </trans-unit>
        <trans-unit id="513b28ad3810ae4846ec6bb58921d48892ceb662" translate="yes" xml:space="preserve">
          <source>deprecated</source>
          <target state="translated">deprecated</target>
        </trans-unit>
        <trans-unit id="23cb1233761c7d24a10de70852fb9d34dbcc24fe" translate="yes" xml:space="preserve">
          <source>description of the args.</source>
          <target state="translated">argsの説明。</target>
        </trans-unit>
        <trans-unit id="0aaafb870ec335e20e02a052a24a58a2ea41fe6a" translate="yes" xml:space="preserve">
          <source>description of the device.</source>
          <target state="translated">デバイスの説明。</target>
        </trans-unit>
        <trans-unit id="fdae7f541f0f274296289e9983437e794e9c0569" translate="yes" xml:space="preserve">
          <source>description of the env.</source>
          <target state="translated">エンベロープの説明</target>
        </trans-unit>
        <trans-unit id="43916869818df51a34ae6de96508188a045a6f6c" translate="yes" xml:space="preserve">
          <source>description of the mount.</source>
          <target state="translated">マウントの説明。</target>
        </trans-unit>
        <trans-unit id="9ff4353fa5929fd4a4e45e94af87ab8ef5fa1ea8" translate="yes" xml:space="preserve">
          <source>description of the plugin</source>
          <target state="translated">プラグインの説明</target>
        </trans-unit>
        <trans-unit id="f2c908912d7d0334bd8a3c314546caf0ca96b6d0" translate="yes" xml:space="preserve">
          <source>designates the current node as a leader manager node for the swarm.</source>
          <target state="translated">は、現在のノードをスウォームのリーダー・マネージャー・ノードとして指定します。</target>
        </trans-unit>
        <trans-unit id="7817fbe88bc4b81804b15149f4df931ab22f2d6d" translate="yes" xml:space="preserve">
          <source>desired-state</source>
          <target state="translated">desired-state</target>
        </trans-unit>
        <trans-unit id="369a054d54eeb0723e0cb5de25e51a5e6c07db51" translate="yes" xml:space="preserve">
          <source>destination of the mount.</source>
          <target state="translated">マウント先を指定します。</target>
        </trans-unit>
        <trans-unit id="12a8e8a50678cf8f074f076c78f30052b450de33" translate="yes" xml:space="preserve">
          <source>detached or foreground running</source>
          <target state="translated">抜き打ち</target>
        </trans-unit>
        <trans-unit id="ee1bdf9223feb091410e6c3c27508b170cce910a" translate="yes" xml:space="preserve">
          <source>device mapper storage driver</source>
          <target state="translated">デバイスマッパストレージドライバ</target>
        </trans-unit>
        <trans-unit id="06d51b4232849fe6d9668ae686fff244c899404e" translate="yes" xml:space="preserve">
          <source>device of the plugin, (&lt;em&gt;Linux only&lt;/em&gt;), struct consisting of the following fields, see &lt;a href=&quot;https://github.com/opencontainers/runtime-spec/blob/master/config-linux/#devices&quot;&gt;&lt;code&gt;DEVICES&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">プラグインのデバイス（&lt;em&gt;Linuxのみ&lt;/em&gt;）、次のフィールドで構成される構造体、&lt;a href=&quot;https://github.com/opencontainers/runtime-spec/blob/master/config-linux/#devices&quot;&gt; &lt;code&gt;DEVICES&lt;/code&gt; &lt;/a&gt;参照</target>
        </trans-unit>
        <trans-unit id="035021e0bd6863d1978d309d8de96e712f4c6efd" translate="yes" xml:space="preserve">
          <source>device_cgroup_rules</source>
          <target state="translated">device_cgroup_rules</target>
        </trans-unit>
        <trans-unit id="de39793c69b7cabcffa240016194f7a7b693509b" translate="yes" xml:space="preserve">
          <source>device_read_bps, device_write_bps</source>
          <target state="translated">デバイスリードビット数、デバイスライトビット数</target>
        </trans-unit>
        <trans-unit id="7df8d03a0eda51f0287bd5b43189f23c151c4101" translate="yes" xml:space="preserve">
          <source>device_read_iops, device_write_iops</source>
          <target state="translated">デバイスの読み込みイオプス、デバイスの書き込みイオプス</target>
        </trans-unit>
        <trans-unit id="728190e74db38b003067ac3f46c3ad71c016f5d9" translate="yes" xml:space="preserve">
          <source>devices</source>
          <target state="translated">devices</target>
        </trans-unit>
        <trans-unit id="abbc90e006c2d9b123e8a882a69855595d3a702a" translate="yes" xml:space="preserve">
          <source>dns</source>
          <target state="translated">dns</target>
        </trans-unit>
        <trans-unit id="638265ce6e9ab3e889182fa6b16d479a8fb13d41" translate="yes" xml:space="preserve">
          <source>dns_opt</source>
          <target state="translated">dns_opt</target>
        </trans-unit>
        <trans-unit id="554ee72c306055d62f6e69717ba04ae5e7f2e420" translate="yes" xml:space="preserve">
          <source>dns_search</source>
          <target state="translated">dns_search</target>
        </trans-unit>
        <trans-unit id="e982f17bcbe0f724063b708a4f76db211a999304" translate="yes" xml:space="preserve">
          <source>docker</source>
          <target state="translated">docker</target>
        </trans-unit>
        <trans-unit id="fda6c48c0f33e52f617e78fe9f1e923c553c61a4" translate="yes" xml:space="preserve">
          <source>docker (2376/tcp)</source>
          <target state="translated">ドッカー (2376/tcp)</target>
        </trans-unit>
        <trans-unit id="ea22bff2b3fff95d9bef5034b5ec41832f0ce1bb" translate="yes" xml:space="preserve">
          <source>docker attach</source>
          <target state="translated">ドッカーアタッチ</target>
        </trans-unit>
        <trans-unit id="b48577ef56cc4d23ec1b593cd057873876929df9" translate="yes" xml:space="preserve">
          <source>docker build</source>
          <target state="translated">ドッカービルド</target>
        </trans-unit>
        <trans-unit id="50aa9faeef22922e2ab98c37d35d71de93191c6e" translate="yes" xml:space="preserve">
          <source>docker builder</source>
          <target state="translated">ドッカービルダー</target>
        </trans-unit>
        <trans-unit id="b4fa2dc8c5105ea1a89a1e9c215d5d8d9898ae72" translate="yes" xml:space="preserve">
          <source>docker builder build</source>
          <target state="translated">ドッカービルダービルド</target>
        </trans-unit>
        <trans-unit id="12831cddd0cfe3d9141067ce6c8028e1fec01370" translate="yes" xml:space="preserve">
          <source>docker builder prune</source>
          <target state="translated">ドッカービルダーのプルーン</target>
        </trans-unit>
        <trans-unit id="98614ca3f879780707fb76d469dab3bbb52cd182" translate="yes" xml:space="preserve">
          <source>docker checkpoint</source>
          <target state="translated">ドッカーチェックポイント</target>
        </trans-unit>
        <trans-unit id="5769122f5990b4c735055a1415b0b6301d82afb3" translate="yes" xml:space="preserve">
          <source>docker checkpoint create</source>
          <target state="translated">ドッカーチェックポイント作成</target>
        </trans-unit>
        <trans-unit id="b6dcd243c11b461d247c34adc5f4ef5910c2ec0a" translate="yes" xml:space="preserve">
          <source>docker checkpoint ls</source>
          <target state="translated">ドッカーチェックポイント ls</target>
        </trans-unit>
        <trans-unit id="c5c7839cc6bc867cad37b1dad8dea516116f83e8" translate="yes" xml:space="preserve">
          <source>docker checkpoint rm</source>
          <target state="translated">ドッカーチェックポイントRM</target>
        </trans-unit>
        <trans-unit id="2d327be8aefd2df36694adf9677427549bf57d3f" translate="yes" xml:space="preserve">
          <source>docker commit</source>
          <target state="translated">ドッカーコミット</target>
        </trans-unit>
        <trans-unit id="02b0b51711b3060f3d2abd3678d8824a85c3e541" translate="yes" xml:space="preserve">
          <source>docker config</source>
          <target state="translated">ドッカーコンフィグ</target>
        </trans-unit>
        <trans-unit id="619c16a434db4b29f671feda67183543ca5bfee1" translate="yes" xml:space="preserve">
          <source>docker config create</source>
          <target state="translated">ドッカーコンフィグ作成</target>
        </trans-unit>
        <trans-unit id="ed23b2e3aaaceede1a9ea090744dbec1e68c5ecf" translate="yes" xml:space="preserve">
          <source>docker config inspect</source>
          <target state="translated">ドッカーコンフィグインスペクション</target>
        </trans-unit>
        <trans-unit id="486baff01c31274949910466a35fff068da88134" translate="yes" xml:space="preserve">
          <source>docker config ls</source>
          <target state="translated">ドッカーコンフィグ ls</target>
        </trans-unit>
        <trans-unit id="f32c2b3d4ba7ec23c7507f92c89767333c5b5923" translate="yes" xml:space="preserve">
          <source>docker config rm</source>
          <target state="translated">ドッカーコンフィグラム</target>
        </trans-unit>
        <trans-unit id="be0265d2da1a2d3d3015f7f3cf7f533b58add7d4" translate="yes" xml:space="preserve">
          <source>docker container</source>
          <target state="translated">ドッカーコンテナ</target>
        </trans-unit>
        <trans-unit id="449d6465d56b21218ab9e16a230883e074c3fd9b" translate="yes" xml:space="preserve">
          <source>docker container attach</source>
          <target state="translated">ドッカーコンテナアタッチ</target>
        </trans-unit>
        <trans-unit id="d7093d938e7cf5f872453c4eadd677bc196dd8be" translate="yes" xml:space="preserve">
          <source>docker container commit</source>
          <target state="translated">ドッカーコンテナコミット</target>
        </trans-unit>
        <trans-unit id="21efb9121feb7c287fda637161dd674778287337" translate="yes" xml:space="preserve">
          <source>docker container cp</source>
          <target state="translated">ドッカーコンテナcp</target>
        </trans-unit>
        <trans-unit id="0c787dbc5b99600311082b3244686fcb0c8602a4" translate="yes" xml:space="preserve">
          <source>docker container create</source>
          <target state="translated">ドッカーコンテナ作成</target>
        </trans-unit>
        <trans-unit id="413918cd8d043c58d24fd08a1f371aec0562c945" translate="yes" xml:space="preserve">
          <source>docker container diff</source>
          <target state="translated">ドッカーコンテナ差分</target>
        </trans-unit>
        <trans-unit id="412e0de7556959638912838a6ac9e0718e8b71ac" translate="yes" xml:space="preserve">
          <source>docker container exec</source>
          <target state="translated">ドッカーコンテナエグゼ</target>
        </trans-unit>
        <trans-unit id="b9ca466bb5e8c7731bb7ed884cf4a5cfca00ec29" translate="yes" xml:space="preserve">
          <source>docker container export</source>
          <target state="translated">ドッカーコンテナエクスポート</target>
        </trans-unit>
        <trans-unit id="eabcd45dbc536eefc146afedf429edbf66d85a8f" translate="yes" xml:space="preserve">
          <source>docker container inspect</source>
          <target state="translated">ドッカーコンテナ検査</target>
        </trans-unit>
        <trans-unit id="2bb9806498b547a78b89a2ec361eecd901e1502f" translate="yes" xml:space="preserve">
          <source>docker container kill</source>
          <target state="translated">ドッカーコンテナキル</target>
        </trans-unit>
        <trans-unit id="5257311fb57fdaf500cf881df8ee0c523bb036bd" translate="yes" xml:space="preserve">
          <source>docker container logs</source>
          <target state="translated">ドッカーコンテナログ</target>
        </trans-unit>
        <trans-unit id="e723dfdbdf248b0d9c6cd89a07b78f6adb27c090" translate="yes" xml:space="preserve">
          <source>docker container ls</source>
          <target state="translated">ドッカーコンテナ ls</target>
        </trans-unit>
        <trans-unit id="f698614ca2e867a9f72da97483696f5f22e555e9" translate="yes" xml:space="preserve">
          <source>docker container pause</source>
          <target state="translated">ドッカーコンテナポーズ</target>
        </trans-unit>
        <trans-unit id="3e444bc4860fa15c71abb2a1554890573806ca50" translate="yes" xml:space="preserve">
          <source>docker container port</source>
          <target state="translated">ドッカーコンテナポート</target>
        </trans-unit>
        <trans-unit id="f7702239c4b850b7de6042a19558e6a0382c5f75" translate="yes" xml:space="preserve">
          <source>docker container prune</source>
          <target state="translated">ドッカーコンテナの剪定</target>
        </trans-unit>
        <trans-unit id="20b1f18e94d3ee69e5678f21304c42b64c4ed16e" translate="yes" xml:space="preserve">
          <source>docker container rename</source>
          <target state="translated">ドッカーコンテナの名前変更</target>
        </trans-unit>
        <trans-unit id="e63ea83408355255bd8f1635378db28392adee49" translate="yes" xml:space="preserve">
          <source>docker container restart</source>
          <target state="translated">ドッカーコンテナ再起動</target>
        </trans-unit>
        <trans-unit id="2e03415c12cd17fa7df1e52b6bf242b7fcae4603" translate="yes" xml:space="preserve">
          <source>docker container rm</source>
          <target state="translated">ドッカーコンテナRM</target>
        </trans-unit>
        <trans-unit id="17f24daf7182f0f8523c2373dc56391d73bb71a5" translate="yes" xml:space="preserve">
          <source>docker container run</source>
          <target state="translated">ドッカーコンテナラン</target>
        </trans-unit>
        <trans-unit id="193368134be4f9fd10e5c64554b2ca1ea9be4660" translate="yes" xml:space="preserve">
          <source>docker container start</source>
          <target state="translated">ドッカーコンテナ起動</target>
        </trans-unit>
        <trans-unit id="0770e8d442c814a9f2f3dfab19246fcd64aa21a4" translate="yes" xml:space="preserve">
          <source>docker container stats</source>
          <target state="translated">ドッカーコンテナ統計</target>
        </trans-unit>
        <trans-unit id="c2c31de3a0954f5899c4a02ef75867fa61c84968" translate="yes" xml:space="preserve">
          <source>docker container stop</source>
          <target state="translated">ドッカーコンテナ停止</target>
        </trans-unit>
        <trans-unit id="87e4a1103f9cdcff1c9108441145e44b2cc317be" translate="yes" xml:space="preserve">
          <source>docker container top</source>
          <target state="translated">ドッカーコンテナトップ</target>
        </trans-unit>
        <trans-unit id="9eabc5b988227426ea7f17d2caed190087c2cc4d" translate="yes" xml:space="preserve">
          <source>docker container unpause</source>
          <target state="translated">ドッカーコンテナのアンパウス</target>
        </trans-unit>
        <trans-unit id="c882a0d59582a8d7ac998f2ee47bfef739692ea1" translate="yes" xml:space="preserve">
          <source>docker container update</source>
          <target state="translated">ドッカーコンテナ更新</target>
        </trans-unit>
        <trans-unit id="f9ca077b1cd732abc712da85c40cc9f0c4488244" translate="yes" xml:space="preserve">
          <source>docker container wait</source>
          <target state="translated">ドッカーコンテナ待ち</target>
        </trans-unit>
        <trans-unit id="d93fd0b8224f638aeedfb3378e4358e2d0d2b5ac" translate="yes" xml:space="preserve">
          <source>docker context</source>
          <target state="translated">ドッカーコンテキスト</target>
        </trans-unit>
        <trans-unit id="093724d5a2dcc9af7ac7e0d9ad56bf3d826a00a2" translate="yes" xml:space="preserve">
          <source>docker context create</source>
          <target state="translated">ドッカーコンテキスト作成</target>
        </trans-unit>
        <trans-unit id="fa585c621a2ea674546d856abc6c184279e3c411" translate="yes" xml:space="preserve">
          <source>docker context export</source>
          <target state="translated">ドッカーコンテキストエクスポート</target>
        </trans-unit>
        <trans-unit id="3000d2a159a8f2ee79e45d9b6d1c94a9b64c62c7" translate="yes" xml:space="preserve">
          <source>docker context import</source>
          <target state="translated">ドッカーコンテキストインポート</target>
        </trans-unit>
        <trans-unit id="6c36598c06c2c9ae7f093162a9b97852244d9b68" translate="yes" xml:space="preserve">
          <source>docker context inspect</source>
          <target state="translated">ドッカーコンテキストインスペクション</target>
        </trans-unit>
        <trans-unit id="ca4cadb33fe3b1eccea0004dd1b424eae969517a" translate="yes" xml:space="preserve">
          <source>docker context ls</source>
          <target state="translated">ドッカーコンテキスト ls</target>
        </trans-unit>
        <trans-unit id="738983760e0737392d0ec7d58f5f167cb508ac59" translate="yes" xml:space="preserve">
          <source>docker context rm</source>
          <target state="translated">ドッカーコンテキストRM</target>
        </trans-unit>
        <trans-unit id="869b887ad1f0f72fba9e24964209ce059458ab9f" translate="yes" xml:space="preserve">
          <source>docker context update</source>
          <target state="translated">ドッカーコンテキスト更新</target>
        </trans-unit>
        <trans-unit id="192654565a697da234ccc0b971196c7189b9f416" translate="yes" xml:space="preserve">
          <source>docker context use</source>
          <target state="translated">ドッカーコンテキスト使用</target>
        </trans-unit>
        <trans-unit id="1901312574e7cf844e4f98a993ff04b025677ced" translate="yes" xml:space="preserve">
          <source>docker cp</source>
          <target state="translated">ドッカーシーピー</target>
        </trans-unit>
        <trans-unit id="a473d615dcd9931c96f2280cbc55edd2d99a15c1" translate="yes" xml:space="preserve">
          <source>docker create</source>
          <target state="translated">ドッカー作成</target>
        </trans-unit>
        <trans-unit id="703cbfa9ad8834ba2000fa2952c10c36a8ac12b5" translate="yes" xml:space="preserve">
          <source>docker deploy</source>
          <target state="translated">ドッカーデプロイ</target>
        </trans-unit>
        <trans-unit id="9b5cf9827701e96d96a43ae3ba53b29c1930dd62" translate="yes" xml:space="preserve">
          <source>docker diff</source>
          <target state="translated">ドッカーデフ</target>
        </trans-unit>
        <trans-unit id="0ee8b60dbcda35c070998514ab6245c10fc288fa" translate="yes" xml:space="preserve">
          <source>docker engine</source>
          <target state="translated">ドッカーエンジン</target>
        </trans-unit>
        <trans-unit id="462ea11a193b521afbd4fc9c550a6e80707c1771" translate="yes" xml:space="preserve">
          <source>docker engine activate</source>
          <target state="translated">ドッカーエンジン起動</target>
        </trans-unit>
        <trans-unit id="7e6328136aef1cc2d7df2787caac47edead98d23" translate="yes" xml:space="preserve">
          <source>docker engine check</source>
          <target state="translated">ドッカーエンジンチェック</target>
        </trans-unit>
        <trans-unit id="295d0e2743b6bbae7b659f2fca3118fc69e030fe" translate="yes" xml:space="preserve">
          <source>docker engine update</source>
          <target state="translated">ドッカーエンジンアップデート</target>
        </trans-unit>
        <trans-unit id="d58902bb42f0189a55355b114cd86ffa57d5fb44" translate="yes" xml:space="preserve">
          <source>docker events</source>
          <target state="translated">ドッカーイベント</target>
        </trans-unit>
        <trans-unit id="5f8253ea194c7dd42ec7d419cba7a88903649c65" translate="yes" xml:space="preserve">
          <source>docker exec</source>
          <target state="translated">ドッカー実行</target>
        </trans-unit>
        <trans-unit id="a59224a6fd9278ba936f7dcea82e847c6d235294" translate="yes" xml:space="preserve">
          <source>docker export</source>
          <target state="translated">ドッカーエクスポート</target>
        </trans-unit>
        <trans-unit id="7cfd82b0b7ce80f225b0e0688ad466445aea06d9" translate="yes" xml:space="preserve">
          <source>docker history</source>
          <target state="translated">ドッカーヒストリー</target>
        </trans-unit>
        <trans-unit id="4617ea1fe6c1656f2c6a6a235927ec9b20c0469f" translate="yes" xml:space="preserve">
          <source>docker image</source>
          <target state="translated">ドッカーイメージ</target>
        </trans-unit>
        <trans-unit id="729df89e741466993c016e96d4607682a4622f41" translate="yes" xml:space="preserve">
          <source>docker image build</source>
          <target state="translated">ドッカーイメージビルド</target>
        </trans-unit>
        <trans-unit id="5f71a4adb8fadf1e3ac8cc50b62fe032931343b9" translate="yes" xml:space="preserve">
          <source>docker image history</source>
          <target state="translated">ドッカーイメージ履歴</target>
        </trans-unit>
        <trans-unit id="3b5c800d3c7fc8ab516c0e51d93675c922c83d55" translate="yes" xml:space="preserve">
          <source>docker image import</source>
          <target state="translated">ドッカーイメージインポート</target>
        </trans-unit>
        <trans-unit id="b2b14fe92dd848f673e61c02d1e511d848337cfe" translate="yes" xml:space="preserve">
          <source>docker image inspect</source>
          <target state="translated">ドッカーイメージインスペクション</target>
        </trans-unit>
        <trans-unit id="76f9abefbc4a41ae6df0322b871ae52b95e7a8e3" translate="yes" xml:space="preserve">
          <source>docker image load</source>
          <target state="translated">ドッカーイメージロード</target>
        </trans-unit>
        <trans-unit id="c2a3ca93e2f5d46d1834d7686012bcd63f3a3f1b" translate="yes" xml:space="preserve">
          <source>docker image ls</source>
          <target state="translated">ドッカーイメージ ls</target>
        </trans-unit>
        <trans-unit id="21400836c6209513abdc5cca75713903a9eec8de" translate="yes" xml:space="preserve">
          <source>docker image prune</source>
          <target state="translated">ドッカーイメージの剪定</target>
        </trans-unit>
        <trans-unit id="57635fd8be9b77133aa4e3f57de25a11ea80d50e" translate="yes" xml:space="preserve">
          <source>docker image pull</source>
          <target state="translated">ドッカーイメージプル</target>
        </trans-unit>
        <trans-unit id="b6f32739c8aa7671ac9f6a03ce417415eeade39e" translate="yes" xml:space="preserve">
          <source>docker image push</source>
          <target state="translated">ドッカーイメージプッシュ</target>
        </trans-unit>
        <trans-unit id="52f816f8f73d6c8e218f22e70be0997e23a7d5b1" translate="yes" xml:space="preserve">
          <source>docker image rm</source>
          <target state="translated">ドッカーイメージRM</target>
        </trans-unit>
        <trans-unit id="54088e0c68df5eef2f6700a9f8016af045e9b3da" translate="yes" xml:space="preserve">
          <source>docker image save</source>
          <target state="translated">ドッカーイメージ保存</target>
        </trans-unit>
        <trans-unit id="6fe3832fba85e227f4e77e110ce0f1fa324a552e" translate="yes" xml:space="preserve">
          <source>docker image tag</source>
          <target state="translated">ドッカーイメージタグ</target>
        </trans-unit>
        <trans-unit id="57e5029c4aa19e485f0e739d593aef6623d0c99e" translate="yes" xml:space="preserve">
          <source>docker images</source>
          <target state="translated">ドッカーイメージ</target>
        </trans-unit>
        <trans-unit id="99d97ee8649af47a26be5e09ae3132ca39b49fd2" translate="yes" xml:space="preserve">
          <source>docker import</source>
          <target state="translated">ドッカーインポート</target>
        </trans-unit>
        <trans-unit id="c59521be2579ff366972a6b559915a2a05a5faeb" translate="yes" xml:space="preserve">
          <source>docker info</source>
          <target state="translated">ドッカー情報</target>
        </trans-unit>
        <trans-unit id="f401c42378c061bcd9c2ad0aeb05119b7cf93137" translate="yes" xml:space="preserve">
          <source>docker inspect</source>
          <target state="translated">ドッカーインスペクション</target>
        </trans-unit>
        <trans-unit id="b17fda6e9d2818fc25a20831b1ed265d45ed758c" translate="yes" xml:space="preserve">
          <source>docker kill</source>
          <target state="translated">ドッカーキル</target>
        </trans-unit>
        <trans-unit id="ed2c2f028f0d28637b58e9181134b92abd364287" translate="yes" xml:space="preserve">
          <source>docker load</source>
          <target state="translated">ドッカーロード</target>
        </trans-unit>
        <trans-unit id="915f61f7c6198df031fa9db8a2aeaaf5220890ac" translate="yes" xml:space="preserve">
          <source>docker login</source>
          <target state="translated">ドッカーログイン</target>
        </trans-unit>
        <trans-unit id="f83cdaa8a922e8a2c46c3889dfdc8fc6c9653963" translate="yes" xml:space="preserve">
          <source>docker logout</source>
          <target state="translated">ドッカーログアウト</target>
        </trans-unit>
        <trans-unit id="eec027039e03a0e9deae6f8e4003c081f0f475dd" translate="yes" xml:space="preserve">
          <source>docker logs</source>
          <target state="translated">ドッカーログ</target>
        </trans-unit>
        <trans-unit id="9ae5e776c3dcb3eda15079dfa76ddea94ca039f4" translate="yes" xml:space="preserve">
          <source>docker manifest</source>
          <target state="translated">ドッカーマニフェスト</target>
        </trans-unit>
        <trans-unit id="abb6348634362c059825f40c5421749a5c98bba2" translate="yes" xml:space="preserve">
          <source>docker manifest annotate</source>
          <target state="translated">ドッカーマニフェストアノテート</target>
        </trans-unit>
        <trans-unit id="1dce34eadcffb78bd772e82ba25a58b4344e65f0" translate="yes" xml:space="preserve">
          <source>docker manifest create</source>
          <target state="translated">ドッカーマニフェスト作成</target>
        </trans-unit>
        <trans-unit id="e19a521d47c8c55401b270eaeba98b341d398ef0" translate="yes" xml:space="preserve">
          <source>docker manifest inspect</source>
          <target state="translated">ドッカーマニフェスト検査</target>
        </trans-unit>
        <trans-unit id="7c6beda03e7a70de970baaf87853dbad0d7de2ca" translate="yes" xml:space="preserve">
          <source>docker manifest push</source>
          <target state="translated">ドッカーマニフェストプッシュ</target>
        </trans-unit>
        <trans-unit id="68dba0762366e2dfdf8ba89621ab149278519096" translate="yes" xml:space="preserve">
          <source>docker network</source>
          <target state="translated">ドッカーネットワーク</target>
        </trans-unit>
        <trans-unit id="1a17cc9b5915971b68c5ab3bf6f22ff0df51b22c" translate="yes" xml:space="preserve">
          <source>docker network connect</source>
          <target state="translated">ドッカーネットワーク接続</target>
        </trans-unit>
        <trans-unit id="ebf83ee531d2e9f408519499f4309e413c1d761b" translate="yes" xml:space="preserve">
          <source>docker network create</source>
          <target state="translated">ドッカーネットワーク作成</target>
        </trans-unit>
        <trans-unit id="acecd8e9fab692d3ae896a05fcf5d264c2e9ee96" translate="yes" xml:space="preserve">
          <source>docker network disconnect</source>
          <target state="translated">ドッカーネットワーク切断</target>
        </trans-unit>
        <trans-unit id="0958695c4a8c058e0ab55fc82393186d5c9a9603" translate="yes" xml:space="preserve">
          <source>docker network inspect</source>
          <target state="translated">ドッカーネットワークインスペクション</target>
        </trans-unit>
        <trans-unit id="0018bd62cc03ce4e5448714d408f234d5722634b" translate="yes" xml:space="preserve">
          <source>docker network ls</source>
          <target state="translated">ドッカーネットワークLS</target>
        </trans-unit>
        <trans-unit id="9360ddd01918fb5f4b43122cc9a33da58a0e0d95" translate="yes" xml:space="preserve">
          <source>docker network prune</source>
          <target state="translated">ドッカーネットワークプルーン</target>
        </trans-unit>
        <trans-unit id="ba189d61507e91d54aa87165055c180be6a86531" translate="yes" xml:space="preserve">
          <source>docker network rm</source>
          <target state="translated">ドッカーネットワークRM</target>
        </trans-unit>
        <trans-unit id="b72fa4a53f947b483edbd406e2ec9849dc7fecc1" translate="yes" xml:space="preserve">
          <source>docker node</source>
          <target state="translated">ドッカーノード</target>
        </trans-unit>
        <trans-unit id="39b4d5083713017a39ac79c4c24645273eae9d4a" translate="yes" xml:space="preserve">
          <source>docker node demote</source>
          <target state="translated">ドッカーノード降格</target>
        </trans-unit>
        <trans-unit id="468f0856bf925205d13405471d94fdb0da699820" translate="yes" xml:space="preserve">
          <source>docker node inspect</source>
          <target state="translated">ドッカーノードインスペクション</target>
        </trans-unit>
        <trans-unit id="d2e92120e72cff2b1a32c8dc4d8951e11d30c2dc" translate="yes" xml:space="preserve">
          <source>docker node ls</source>
          <target state="translated">ドッカーノードLS</target>
        </trans-unit>
        <trans-unit id="4e8310e029e77dcdb944f306aef8ec41e8c948a4" translate="yes" xml:space="preserve">
          <source>docker node promote</source>
          <target state="translated">ドッカーノードプロモート</target>
        </trans-unit>
        <trans-unit id="1862b66a3d23b86cf1319ac471cc73a98d5b4986" translate="yes" xml:space="preserve">
          <source>docker node ps</source>
          <target state="translated">ドッカーノードps</target>
        </trans-unit>
        <trans-unit id="6c159f8e16fd4bcd704d51beef8c9b03e97b6f3d" translate="yes" xml:space="preserve">
          <source>docker node rm</source>
          <target state="translated">ドッカーノードRM</target>
        </trans-unit>
        <trans-unit id="e161c88e843eaeab17747445f7f28c44161da9cc" translate="yes" xml:space="preserve">
          <source>docker node update</source>
          <target state="translated">ドッカーノード更新</target>
        </trans-unit>
        <trans-unit id="0a820a23077169843c25cf52c4c08a0f7ee2c395" translate="yes" xml:space="preserve">
          <source>docker pause</source>
          <target state="translated">ドッカーポーズ</target>
        </trans-unit>
        <trans-unit id="dd83c78626a16b8c9ecb8528633e13d8ba44d79a" translate="yes" xml:space="preserve">
          <source>docker plugin</source>
          <target state="translated">ドッカープラグイン</target>
        </trans-unit>
        <trans-unit id="17d14c5092b8c587927acb480cfe22092d63f1a7" translate="yes" xml:space="preserve">
          <source>docker plugin create</source>
          <target state="translated">ドッカープラグイン作成</target>
        </trans-unit>
        <trans-unit id="9b8426b1ecaa8438da56ec4c231c006415b3914a" translate="yes" xml:space="preserve">
          <source>docker plugin disable</source>
          <target state="translated">dockerプラグインの無効化</target>
        </trans-unit>
        <trans-unit id="90bbf756928168c5694102080543400d8db21eee" translate="yes" xml:space="preserve">
          <source>docker plugin enable</source>
          <target state="translated">ドッカープラグインイネーブル</target>
        </trans-unit>
        <trans-unit id="2c4851fc61f6bee3f82c70e444a34e34f37accf6" translate="yes" xml:space="preserve">
          <source>docker plugin inspect</source>
          <target state="translated">ドッカープラグインインスペクション</target>
        </trans-unit>
        <trans-unit id="020bc3afd1492e52c7aa709c3f0e12f58e8b755a" translate="yes" xml:space="preserve">
          <source>docker plugin install</source>
          <target state="translated">ドッカープラグインインストール</target>
        </trans-unit>
        <trans-unit id="de4edc5d917fb534ca86f27e7505fba79ed4f4fe" translate="yes" xml:space="preserve">
          <source>docker plugin ls</source>
          <target state="translated">docker プラグイン ls</target>
        </trans-unit>
        <trans-unit id="919076a879371ac280bd922a98a20bbd886aa60c" translate="yes" xml:space="preserve">
          <source>docker plugin push</source>
          <target state="translated">ドッカープラグインプッシュ</target>
        </trans-unit>
        <trans-unit id="0a9400a4907f334b0f454834c9a6e1d74c8cc189" translate="yes" xml:space="preserve">
          <source>docker plugin rm</source>
          <target state="translated">docker プラグイン rm</target>
        </trans-unit>
        <trans-unit id="cc17a6ab2ec1726946358cf459a75b4a49c878cf" translate="yes" xml:space="preserve">
          <source>docker plugin set</source>
          <target state="translated">ドッカープラグインセット</target>
        </trans-unit>
        <trans-unit id="2753bfda66b84db4131321ff06533be058370d00" translate="yes" xml:space="preserve">
          <source>docker plugin upgrade</source>
          <target state="translated">ドッカープラグインアップグレード</target>
        </trans-unit>
        <trans-unit id="5ad2f1ec2238bd60e2147f30bc07f7d5eb5e79eb" translate="yes" xml:space="preserve">
          <source>docker port</source>
          <target state="translated">ドッカーポート</target>
        </trans-unit>
        <trans-unit id="30faf94a5c2597de23709bfea957c60535d63a74" translate="yes" xml:space="preserve">
          <source>docker ps</source>
          <target state="translated">ドッカーピーエス</target>
        </trans-unit>
        <trans-unit id="e11ac3bb4e275a9379fe37026e592813b96650a2" translate="yes" xml:space="preserve">
          <source>docker pull</source>
          <target state="translated">ドッカープル</target>
        </trans-unit>
        <trans-unit id="2fe2df6403e7eed9b736c027dcac2cdc7cd999ec" translate="yes" xml:space="preserve">
          <source>docker push</source>
          <target state="translated">ドッカープッシュ</target>
        </trans-unit>
        <trans-unit id="78c85c5e1f02b9ed9647541654abdbbf3c382720" translate="yes" xml:space="preserve">
          <source>docker rename</source>
          <target state="translated">ドッカーリネーム</target>
        </trans-unit>
        <trans-unit id="5e73d4337219fd10c406b70b373a1a79ba027dc1" translate="yes" xml:space="preserve">
          <source>docker restart</source>
          <target state="translated">ドッカー再起動</target>
        </trans-unit>
        <trans-unit id="d4ce48ec1cb7006fdf4232ed704da023705948fd" translate="yes" xml:space="preserve">
          <source>docker rm</source>
          <target state="translated">ドッカーラム</target>
        </trans-unit>
        <trans-unit id="cbfd9ca8fc6d512fbfc90ed74c8c843af0173f60" translate="yes" xml:space="preserve">
          <source>docker rmi</source>
          <target state="translated">ドッカーアールエムアイ</target>
        </trans-unit>
        <trans-unit id="247f398fbcaead399b3be59a472ba648e0c8d022" translate="yes" xml:space="preserve">
          <source>docker run</source>
          <target state="translated">ドッカーラン</target>
        </trans-unit>
        <trans-unit id="8166f10764f4c9025cd4e72f81d845d825a7a38e" translate="yes" xml:space="preserve">
          <source>docker save</source>
          <target state="translated">ドッカーセーブ</target>
        </trans-unit>
        <trans-unit id="f24f165eba54fbb600152602c385669f6313291c" translate="yes" xml:space="preserve">
          <source>docker search</source>
          <target state="translated">ドッカー検索</target>
        </trans-unit>
        <trans-unit id="45257c5a7f98281737809248947037fc06691fe1" translate="yes" xml:space="preserve">
          <source>docker secret</source>
          <target state="translated">ドッカーシークレット</target>
        </trans-unit>
        <trans-unit id="bc0396a205746779d62c97187b7995c7c457564d" translate="yes" xml:space="preserve">
          <source>docker secret create</source>
          <target state="translated">ドッカーシークレット作成</target>
        </trans-unit>
        <trans-unit id="7228820b5be096ddfd0daca9d935c359f7fb1314" translate="yes" xml:space="preserve">
          <source>docker secret inspect</source>
          <target state="translated">ドッカーシークレットインスペクション</target>
        </trans-unit>
        <trans-unit id="c5b697c1b30a34072019661d47f38a2717d476de" translate="yes" xml:space="preserve">
          <source>docker secret ls</source>
          <target state="translated">ドッカーシークレットLS</target>
        </trans-unit>
        <trans-unit id="b7a0148cde8c94b9597a5c6b3c5dbee22d840972" translate="yes" xml:space="preserve">
          <source>docker secret rm</source>
          <target state="translated">ドッカーシークレットRM</target>
        </trans-unit>
        <trans-unit id="69b5201730d3661c5cfe98538ff50056b59e089e" translate="yes" xml:space="preserve">
          <source>docker service</source>
          <target state="translated">ドッカーサービス</target>
        </trans-unit>
        <trans-unit id="780a466b100415fa94e2458740edcb383157de68" translate="yes" xml:space="preserve">
          <source>docker service create</source>
          <target state="translated">ドッカーサービス作成</target>
        </trans-unit>
        <trans-unit id="0c5a0c710c1ac888f5c7940c02008ece3ec6ab72" translate="yes" xml:space="preserve">
          <source>docker service inspect</source>
          <target state="translated">ドッカーサービスインスペクション</target>
        </trans-unit>
        <trans-unit id="a3a35b7af4b5f5e6e8f4ff433f9b7fcbb5afe740" translate="yes" xml:space="preserve">
          <source>docker service logs</source>
          <target state="translated">ドッカーサービスログ</target>
        </trans-unit>
        <trans-unit id="3dcbd5a69b8b430238376534206c4f9f811b4a3b" translate="yes" xml:space="preserve">
          <source>docker service ls</source>
          <target state="translated">ドッカーサービス ls</target>
        </trans-unit>
        <trans-unit id="d37e98df534569cb885ee4164d944f90f8b52718" translate="yes" xml:space="preserve">
          <source>docker service ps</source>
          <target state="translated">ドッカーサービスps</target>
        </trans-unit>
        <trans-unit id="de54e816d62976a07e48cff4165bfbcbd1822ca1" translate="yes" xml:space="preserve">
          <source>docker service rm</source>
          <target state="translated">ドッカーサービスRM</target>
        </trans-unit>
        <trans-unit id="e979e38c1e967d568754ec91c6d5bcd2a1930f2e" translate="yes" xml:space="preserve">
          <source>docker service rollback</source>
          <target state="translated">ドッカーサービスロールバック</target>
        </trans-unit>
        <trans-unit id="457c0d4a9452f808ca782c34126516f0c23a8ac4" translate="yes" xml:space="preserve">
          <source>docker service scale</source>
          <target state="translated">ドッカーサービススケール</target>
        </trans-unit>
        <trans-unit id="e624dad6f15a86afd585d954c9c1e7e00eba6ec8" translate="yes" xml:space="preserve">
          <source>docker service update</source>
          <target state="translated">ドッカーサービス更新</target>
        </trans-unit>
        <trans-unit id="0af7c5cc8541ae63054a5be571159ee7f81e216f" translate="yes" xml:space="preserve">
          <source>docker stack</source>
          <target state="translated">ドッカースタック</target>
        </trans-unit>
        <trans-unit id="1358ca57ed8d9f9557b3ba1eec7a4593d4faf567" translate="yes" xml:space="preserve">
          <source>docker stack deploy</source>
          <target state="translated">ドッカースタックデプロイ</target>
        </trans-unit>
        <trans-unit id="6c452c355fb4182bcc13ae15ff466be1eebad1ab" translate="yes" xml:space="preserve">
          <source>docker stack ls</source>
          <target state="translated">ドッカースタック ls</target>
        </trans-unit>
        <trans-unit id="120cc664c44fc77c3f117148fddfb3df87609458" translate="yes" xml:space="preserve">
          <source>docker stack ps</source>
          <target state="translated">ドッカースタックps</target>
        </trans-unit>
        <trans-unit id="8835b1606336411c738e56f60603a1e6dff43a67" translate="yes" xml:space="preserve">
          <source>docker stack rm</source>
          <target state="translated">ドッカースタック rm</target>
        </trans-unit>
        <trans-unit id="4ad5ce7ed85795358479b7dddeecfa411d62d653" translate="yes" xml:space="preserve">
          <source>docker stack services</source>
          <target state="translated">ドッカースタックサービス</target>
        </trans-unit>
        <trans-unit id="d0de7159d190fe1f60d7fb4f26e23b7d308d4a5c" translate="yes" xml:space="preserve">
          <source>docker start</source>
          <target state="translated">ドッカースタート</target>
        </trans-unit>
        <trans-unit id="07f8610c355ed18a5ee8332d24b05c0f8782f95a" translate="yes" xml:space="preserve">
          <source>docker stats</source>
          <target state="translated">ドッカー統計</target>
        </trans-unit>
        <trans-unit id="aa93975189141d9982ee260566caf3ab62b3bc9d" translate="yes" xml:space="preserve">
          <source>docker stop</source>
          <target state="translated">ドッカーストップ</target>
        </trans-unit>
        <trans-unit id="5f927dd3abebbae74bd49f995b1a1eb3c08dba70" translate="yes" xml:space="preserve">
          <source>docker swarm</source>
          <target state="translated">ドッカー群</target>
        </trans-unit>
        <trans-unit id="ea4225ba52ced2c8a2034578eb892626846f4545" translate="yes" xml:space="preserve">
          <source>docker swarm ca</source>
          <target state="translated">ドッカースウォーム</target>
        </trans-unit>
        <trans-unit id="d0a4372aed0d3736136372647166480701090491" translate="yes" xml:space="preserve">
          <source>docker swarm init</source>
          <target state="translated">ドッカー・スウォームinit</target>
        </trans-unit>
        <trans-unit id="d27a3f11e0f68744dcb8e03015105cb59a30562c" translate="yes" xml:space="preserve">
          <source>docker swarm join</source>
          <target state="translated">ドッカースウォームジョイン</target>
        </trans-unit>
        <trans-unit id="104d4e361ac8a6b0e510d4b2e3cde47b4b1e2dd1" translate="yes" xml:space="preserve">
          <source>docker swarm join-token</source>
          <target state="translated">ドッカースウォームジョイントークン</target>
        </trans-unit>
        <trans-unit id="78b0e610876ffa83dafe8a9e8f46bb9b32e21ffc" translate="yes" xml:space="preserve">
          <source>docker swarm leave</source>
          <target state="translated">ドッカースウォーム放置</target>
        </trans-unit>
        <trans-unit id="7dc22f1fae3391c47a77db6cd3bbfc510ae40859" translate="yes" xml:space="preserve">
          <source>docker swarm unlock</source>
          <target state="translated">ドッカースワームのロック解除</target>
        </trans-unit>
        <trans-unit id="b59ca38f2ebecb052bcba52ef11569f1e1c65cfa" translate="yes" xml:space="preserve">
          <source>docker swarm unlock-key</source>
          <target state="translated">ドッカースワームアンロックキー</target>
        </trans-unit>
        <trans-unit id="e2c3cdc0ba4c100aa6a3a9f88b4d982c65339c6b" translate="yes" xml:space="preserve">
          <source>docker swarm update</source>
          <target state="translated">ドッカースウォームアップデート</target>
        </trans-unit>
        <trans-unit id="3d05899a9fc1c51542093fbb5bc0435e502f319f" translate="yes" xml:space="preserve">
          <source>docker system</source>
          <target state="translated">ドッカーシステム</target>
        </trans-unit>
        <trans-unit id="795ab39e5f5b4491871eab374ff4809dcb4f3183" translate="yes" xml:space="preserve">
          <source>docker system df</source>
          <target state="translated">ドッカーシステムDF</target>
        </trans-unit>
        <trans-unit id="f2e1400bb1625f70286407a1c173f5ea08748263" translate="yes" xml:space="preserve">
          <source>docker system events</source>
          <target state="translated">ドッカーシステムイベント</target>
        </trans-unit>
        <trans-unit id="a55298f2cf63e2db49da9bc7cb136ee9813ec86c" translate="yes" xml:space="preserve">
          <source>docker system info</source>
          <target state="translated">ドッカーシステム情報</target>
        </trans-unit>
        <trans-unit id="1daaa5319285716ca533349f1e1ccc77d64ded2d" translate="yes" xml:space="preserve">
          <source>docker system prune</source>
          <target state="translated">ドッカーシステム剪定</target>
        </trans-unit>
        <trans-unit id="fc96e5db581a732ae977b1ef3167bc4a3ce94d1b" translate="yes" xml:space="preserve">
          <source>docker tag</source>
          <target state="translated">ドッカータグ</target>
        </trans-unit>
        <trans-unit id="4c1ffb55a91d9a6a5f0fd2c3aff0d9f9b2473bae" translate="yes" xml:space="preserve">
          <source>docker top</source>
          <target state="translated">ドッカートップ</target>
        </trans-unit>
        <trans-unit id="cceb68cc44d0c7c38cef2bae0717bc4b12e2c642" translate="yes" xml:space="preserve">
          <source>docker trust</source>
          <target state="translated">ドッカートラスト</target>
        </trans-unit>
        <trans-unit id="eba6c69ee811b6eeb5d6a3b9976117993ae57e90" translate="yes" xml:space="preserve">
          <source>docker trust inspect</source>
          <target state="translated">ドッカートラストインスペクション</target>
        </trans-unit>
        <trans-unit id="d34ea25733f5d93a1b6f9d062b6a5caf6c3ce4f1" translate="yes" xml:space="preserve">
          <source>docker trust key</source>
          <target state="translated">ドッカートラストキー</target>
        </trans-unit>
        <trans-unit id="e6a5f7306bb97f5dc4bbdaf51f7aa397e22a796a" translate="yes" xml:space="preserve">
          <source>docker trust key generate</source>
          <target state="translated">ドッカートラストキー生成</target>
        </trans-unit>
        <trans-unit id="168fdb051d6a72fddc19eb8777a1b2a2455e04be" translate="yes" xml:space="preserve">
          <source>docker trust key load</source>
          <target state="translated">ドッカートラストキーロード</target>
        </trans-unit>
        <trans-unit id="856f278dfc9744bbcbf200f6ab56647d20e9294b" translate="yes" xml:space="preserve">
          <source>docker trust revoke</source>
          <target state="translated">ドッカートラストリボーク</target>
        </trans-unit>
        <trans-unit id="45ae9db1204620f360e22e7981885aebcad9f89a" translate="yes" xml:space="preserve">
          <source>docker trust sign</source>
          <target state="translated">ドッカートラストサイン</target>
        </trans-unit>
        <trans-unit id="0375c19c66cc226dae972351d9923ede1b3ac0a2" translate="yes" xml:space="preserve">
          <source>docker trust signer</source>
          <target state="translated">ドッカートラスト署名者</target>
        </trans-unit>
        <trans-unit id="c0b4e5d72b57018ef96eccbf1bd5de1390df25c1" translate="yes" xml:space="preserve">
          <source>docker trust signer add</source>
          <target state="translated">ドッカートラストシグナ追加</target>
        </trans-unit>
        <trans-unit id="12cd6ce7d5791fd43a65b27b1834a71879a74cf5" translate="yes" xml:space="preserve">
          <source>docker trust signer remove</source>
          <target state="translated">dockerの信頼署名者を削除する</target>
        </trans-unit>
        <trans-unit id="da590a2a0b4588db3c669d9034d3bc14aef8f02f" translate="yes" xml:space="preserve">
          <source>docker unpause</source>
          <target state="translated">ドッカーアンパウス</target>
        </trans-unit>
        <trans-unit id="a19a4ffeac3f94d9d5c6893cd384b60d2115010b" translate="yes" xml:space="preserve">
          <source>docker update</source>
          <target state="translated">ドッカーアップデート</target>
        </trans-unit>
        <trans-unit id="d2f4ef2448b6dcf7be8124baf8065d71d14d81ad" translate="yes" xml:space="preserve">
          <source>docker version</source>
          <target state="translated">ドッカー版</target>
        </trans-unit>
        <trans-unit id="b84b02662fcb347821b5f6cabad940934101d9f1" translate="yes" xml:space="preserve">
          <source>docker volume</source>
          <target state="translated">ドッカーボリューム</target>
        </trans-unit>
        <trans-unit id="0db63facb442524f2f7a864484535e9f0f7dd325" translate="yes" xml:space="preserve">
          <source>docker volume create</source>
          <target state="translated">ドッカーボリューム作成</target>
        </trans-unit>
        <trans-unit id="4c8cbac184493382c696438ae840289ab21d69dd" translate="yes" xml:space="preserve">
          <source>docker volume inspect</source>
          <target state="translated">ドッカーボリュームインスペクション</target>
        </trans-unit>
        <trans-unit id="a40d9f9a920e2193de61e91ac8d980d2f7c3502a" translate="yes" xml:space="preserve">
          <source>docker volume ls</source>
          <target state="translated">ドッカーボリュームLS</target>
        </trans-unit>
        <trans-unit id="f2775d108cc22147e160ed884713235fb22f3a24" translate="yes" xml:space="preserve">
          <source>docker volume prune</source>
          <target state="translated">ドッカーボリュームプルーン</target>
        </trans-unit>
        <trans-unit id="8eee99359d8d99c41925c185c2c553924b64586f" translate="yes" xml:space="preserve">
          <source>docker volume rm</source>
          <target state="translated">ドッカーボリュームRM</target>
        </trans-unit>
        <trans-unit id="940cb388a78252ef77945690839e6c5b8d0bb6d0" translate="yes" xml:space="preserve">
          <source>docker wait</source>
          <target state="translated">ドッカー待ち</target>
        </trans-unit>
        <trans-unit id="2a298b027cf545ca9eb7cc48f69f8306436eae2a" translate="yes" xml:space="preserve">
          <source>docker-compose</source>
          <target state="translated">docker-compose</target>
        </trans-unit>
        <trans-unit id="1e041d41c58c5edfcd45ec8106e39d2f68134550" translate="yes" xml:space="preserve">
          <source>docker-compose Command</source>
          <target state="translated">docker-compose コマンド</target>
        </trans-unit>
        <trans-unit id="506563502d585235f9949ed69d4455aaa44bb7d9" translate="yes" xml:space="preserve">
          <source>docker-compose build</source>
          <target state="translated">ドッカーコンポーズビルド</target>
        </trans-unit>
        <trans-unit id="31d7a53759c3bfe4fb5bda6c575dfd5e11558d06" translate="yes" xml:space="preserve">
          <source>docker-compose bundle</source>
          <target state="translated">docker-composeバンドル</target>
        </trans-unit>
        <trans-unit id="c2652933591a7abd729ebfb4a2eaf69ae69e6b63" translate="yes" xml:space="preserve">
          <source>docker-compose config</source>
          <target state="translated">ドッカーコンポーズコンフィグ</target>
        </trans-unit>
        <trans-unit id="e134403753f0dd062e3af6a25254cfe7a2c63d94" translate="yes" xml:space="preserve">
          <source>docker-compose create</source>
          <target state="translated">ドッカーコンポーズ作成</target>
        </trans-unit>
        <trans-unit id="4ff82c987cb8e38f229c016e07cf9b4b469243c7" translate="yes" xml:space="preserve">
          <source>docker-compose down</source>
          <target state="translated">ドッカーコンポーズダウン</target>
        </trans-unit>
        <trans-unit id="61f5828c7f751737b3fad7e2e22fda6fbbaa410a" translate="yes" xml:space="preserve">
          <source>docker-compose events</source>
          <target state="translated">ドッカーコンポーズイベント</target>
        </trans-unit>
        <trans-unit id="38e9e25b15db18b6ff3b4be3b019ad577ed1e040" translate="yes" xml:space="preserve">
          <source>docker-compose exec</source>
          <target state="translated">ドッカーコンポーズ</target>
        </trans-unit>
        <trans-unit id="3816108ffbdffa71a011e47e274c438cc8cc4d5b" translate="yes" xml:space="preserve">
          <source>docker-compose help</source>
          <target state="translated">ドッカーコンポーズヘルプ</target>
        </trans-unit>
        <trans-unit id="b636a2868f41dd9a177222fe4a1ad68f6f8d7156" translate="yes" xml:space="preserve">
          <source>docker-compose images</source>
          <target state="translated">docker-compose images</target>
        </trans-unit>
        <trans-unit id="8eb3d6e277c7ee24303adb8bf5026eeb3c0704ef" translate="yes" xml:space="preserve">
          <source>docker-compose kill</source>
          <target state="translated">ドッカーコンポーズキル</target>
        </trans-unit>
        <trans-unit id="df372d872ecc84b43eb18f38c41f199dea7d2d87" translate="yes" xml:space="preserve">
          <source>docker-compose logs</source>
          <target state="translated">docker-composeログ</target>
        </trans-unit>
        <trans-unit id="493d35bd7f095144dd80c78e5088ed8c899251c2" translate="yes" xml:space="preserve">
          <source>docker-compose pause</source>
          <target state="translated">ドッカーコンポーズポーズ</target>
        </trans-unit>
        <trans-unit id="e124d5b70526d47770410356e422f9997aea4af6" translate="yes" xml:space="preserve">
          <source>docker-compose port</source>
          <target state="translated">ドッカーコンポーズポート</target>
        </trans-unit>
        <trans-unit id="44239f00825436e390a1076de49084db1b971290" translate="yes" xml:space="preserve">
          <source>docker-compose ps</source>
          <target state="translated">docker-compose ps</target>
        </trans-unit>
        <trans-unit id="b95227a911459156967f97a64f470dc26e3b3978" translate="yes" xml:space="preserve">
          <source>docker-compose pull</source>
          <target state="translated">ドッカーコンポーズプル</target>
        </trans-unit>
        <trans-unit id="248fc1b75415a210202918bc8d80b530d25c0c2a" translate="yes" xml:space="preserve">
          <source>docker-compose push</source>
          <target state="translated">ドッカーコンポーズプッシュ</target>
        </trans-unit>
        <trans-unit id="16459adbc919f1f99cc58a424433811ed92d918a" translate="yes" xml:space="preserve">
          <source>docker-compose restart</source>
          <target state="translated">docker-compose再起動</target>
        </trans-unit>
        <trans-unit id="ba9e837767adf22dc54f7482e29f305f02a7b022" translate="yes" xml:space="preserve">
          <source>docker-compose rm</source>
          <target state="translated">docker-compose rm</target>
        </trans-unit>
        <trans-unit id="05284d10ee59e7080ea713f9784765c226c2da7a" translate="yes" xml:space="preserve">
          <source>docker-compose run</source>
          <target state="translated">ドッカーコンポーズラン</target>
        </trans-unit>
        <trans-unit id="34f7ea416a3a11c79440ae4a9140a2a71d9be98b" translate="yes" xml:space="preserve">
          <source>docker-compose scale</source>
          <target state="translated">ドッカーコンポーズスケール</target>
        </trans-unit>
        <trans-unit id="233dbd6dcac20665eca2c13d2b3b0bf6653e28cb" translate="yes" xml:space="preserve">
          <source>docker-compose start</source>
          <target state="translated">ドッカーコンポーズ開始</target>
        </trans-unit>
        <trans-unit id="35c1fafe775c1e1997932e2a1baa9f529dcb66d6" translate="yes" xml:space="preserve">
          <source>docker-compose stop</source>
          <target state="translated">ドッカーコンポーズストップ</target>
        </trans-unit>
        <trans-unit id="c9ef7957906df749421b539dcc248e06a279de4d" translate="yes" xml:space="preserve">
          <source>docker-compose top</source>
          <target state="translated">ドッカーコンポーズトップ</target>
        </trans-unit>
        <trans-unit id="3b908436cf4e7ed899b7f4421a0fcb58ea33610b" translate="yes" xml:space="preserve">
          <source>docker-compose unpause</source>
          <target state="translated">docker-compose アンパウス</target>
        </trans-unit>
        <trans-unit id="287e163e188a470dbd451a0cc1a3971a5bb3a8c9" translate="yes" xml:space="preserve">
          <source>docker-compose up</source>
          <target state="translated">ドッカーコンポ</target>
        </trans-unit>
        <trans-unit id="c14e8f4ef0b6a776c575f9282042aa38dd65d635" translate="yes" xml:space="preserve">
          <source>docker-machine active</source>
          <target state="translated">ドッカーマシンアクティブ</target>
        </trans-unit>
        <trans-unit id="f8de9025fc3a491a8ab6d041f44018d2b19dea8d" translate="yes" xml:space="preserve">
          <source>docker-machine config</source>
          <target state="translated">ドッカーマシン設定</target>
        </trans-unit>
        <trans-unit id="78ab9606eb82b3736ab175b0b83632d0a101dab5" translate="yes" xml:space="preserve">
          <source>docker-machine create</source>
          <target state="translated">ドッカーマシン作成</target>
        </trans-unit>
        <trans-unit id="1f47edc037f4d0b3a40fb2627b09fc8ab0ed4497" translate="yes" xml:space="preserve">
          <source>docker-machine env</source>
          <target state="translated">マシンドッカー環境</target>
        </trans-unit>
        <trans-unit id="c63989774db21e85c8ce0c3f8720279cac9b2440" translate="yes" xml:space="preserve">
          <source>docker-machine help</source>
          <target state="translated">ドッカーマシンヘルプ</target>
        </trans-unit>
        <trans-unit id="63e290ce528d9a8e8fbbdd7776940e6ef147afb9" translate="yes" xml:space="preserve">
          <source>docker-machine inspect</source>
          <target state="translated">ドッカーマシンインスペクション</target>
        </trans-unit>
        <trans-unit id="d74f80a41221af4d74dcdd547179680114158f54" translate="yes" xml:space="preserve">
          <source>docker-machine ip</source>
          <target state="translated">ドッカーマシンIP</target>
        </trans-unit>
        <trans-unit id="b8026776d9fc6b5beb4852b09e8bee6e4d839591" translate="yes" xml:space="preserve">
          <source>docker-machine kill</source>
          <target state="translated">ドッカーマシンキル</target>
        </trans-unit>
        <trans-unit id="6574c4eecfaadba3668183c27b7fac2d83d66b28" translate="yes" xml:space="preserve">
          <source>docker-machine ls</source>
          <target state="translated">ドッカーマシン ls</target>
        </trans-unit>
        <trans-unit id="31c4105fcb2c6f5071b79c93b994d82c35e76fb1" translate="yes" xml:space="preserve">
          <source>docker-machine mount</source>
          <target state="translated">ドッカーマシンマウント</target>
        </trans-unit>
        <trans-unit id="dab65c42c638a2e0532c56ee1e50c51f10691e4b" translate="yes" xml:space="preserve">
          <source>docker-machine provision</source>
          <target state="translated">ドッカーマシンプロビジョニング</target>
        </trans-unit>
        <trans-unit id="f59981c48b9c0f82b5334818030ed6cc7e6763b9" translate="yes" xml:space="preserve">
          <source>docker-machine regenerate-certs</source>
          <target state="translated">docker-machine regenerate-certs</target>
        </trans-unit>
        <trans-unit id="910ece79c95ace41190cd7dcab96a42dcf97341a" translate="yes" xml:space="preserve">
          <source>docker-machine restart</source>
          <target state="translated">ドッカーマシン再起動</target>
        </trans-unit>
        <trans-unit id="fb7c7044c7b590191a39a9c198aebf283c9e965a" translate="yes" xml:space="preserve">
          <source>docker-machine rm</source>
          <target state="translated">ドッカーマシン rm</target>
        </trans-unit>
        <trans-unit id="21eb1d2fbcd854d7a3b55413454cf317036a71e1" translate="yes" xml:space="preserve">
          <source>docker-machine scp</source>
          <target state="translated">docker-machine scp</target>
        </trans-unit>
        <trans-unit id="632965d1eba43b090d99cee342eeb7e3385d1e54" translate="yes" xml:space="preserve">
          <source>docker-machine ssh</source>
          <target state="translated">ドッカーマシンssh</target>
        </trans-unit>
        <trans-unit id="8847e07cce4dbbce2f77401ed057a3492b8a6317" translate="yes" xml:space="preserve">
          <source>docker-machine start</source>
          <target state="translated">ドッカーマシン起動</target>
        </trans-unit>
        <trans-unit id="c9a507dce1fdb31f7c8d63f541db7e0858edef2f" translate="yes" xml:space="preserve">
          <source>docker-machine status</source>
          <target state="translated">ドッカーマシンの状態</target>
        </trans-unit>
        <trans-unit id="f0d3c2f6b50b1c6174c45cba77fefd71829ea6cb" translate="yes" xml:space="preserve">
          <source>docker-machine stop</source>
          <target state="translated">ドッカーマシン停止</target>
        </trans-unit>
        <trans-unit id="aa334e9cfb79722e8bed9c79e18768c41b2f0b1c" translate="yes" xml:space="preserve">
          <source>docker-machine upgrade</source>
          <target state="translated">ドッカーマシンアップグレード</target>
        </trans-unit>
        <trans-unit id="bfab7e4c00c0bbc16f0e212da2e88be009c105d1" translate="yes" xml:space="preserve">
          <source>docker-machine url</source>
          <target state="translated">docker-machine url</target>
        </trans-unit>
        <trans-unit id="54f350074cbae7adf5f659d3eb85ba126a277846" translate="yes" xml:space="preserve">
          <source>docker/dockerfile:1 - allow versions 1.&lt;em&gt;.&lt;/em&gt;</source>
          <target state="translated">docker / dockerfile：1-バージョン1.を許可します&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c637d09007feb3a482802307019614bd47fe5d9b" translate="yes" xml:space="preserve">
          <source>docker/dockerfile:1.0 - allow versions 1.0.*</source>
          <target state="translated">docker/dockerfile:1.0-バージョン 1.0.*を許可する</target>
        </trans-unit>
        <trans-unit id="1f166d3a9090179073506a92876782678cf7992e" translate="yes" xml:space="preserve">
          <source>docker/dockerfile:1.0-experimental - latest experimental releases after 1.0</source>
          <target state="translated">docker/dockerfile:1.0-experimental-1.0以降の最新の実験的リリース</target>
        </trans-unit>
        <trans-unit id="898515f5791b83792672a316b4910af9182767b4" translate="yes" xml:space="preserve">
          <source>docker/dockerfile:1.0.0 - only allow immutable version 1.0.0</source>
          <target state="translated">docker/dockerfile:1.0.0-不変バージョン 1.0.0 のみを許可する</target>
        </trans-unit>
        <trans-unit id="02550215825ef2feb5b068c2434d39cc51eb6bbd" translate="yes" xml:space="preserve">
          <source>docker/dockerfile:1.0.1-experimental - only allow immutable version 1.0.1-experimental</source>
          <target state="translated">docker/dockerfile:1.0.1-experimental-不変バージョンの1.0.1-experimentalのみを許可する</target>
        </trans-unit>
        <trans-unit id="2fdceb9420b4e68f7a6c9e460eba191b38c35a65" translate="yes" xml:space="preserve">
          <source>docker/dockerfile:experimental - latest release on experimental channel</source>
          <target state="translated">docker/dockerfile:experimental-実験チャンネルの最新リリース</target>
        </trans-unit>
        <trans-unit id="0a6fa42397d7e598144dc3ebccae37129c8906d2" translate="yes" xml:space="preserve">
          <source>docker/dockerfile:latest - latest release on stable channel</source>
          <target state="translated">docker/dockerfile:latest-安定版チャンネルでの最新リリース</target>
        </trans-unit>
        <trans-unit id="70c19f2baae5799abf8f00ce8348f9bbd0be881c" translate="yes" xml:space="preserve">
          <source>dockerd</source>
          <target state="translated">dockerd</target>
        </trans-unit>
        <trans-unit id="558c49b604560afd1841f2a7b49e2f60bd1f99b3" translate="yes" xml:space="preserve">
          <source>dockerfile</source>
          <target state="translated">dockerfile</target>
        </trans-unit>
        <trans-unit id="1d1b2c0503bae1fa89bf31d3f2095d80fa1e4fcd" translate="yes" xml:space="preserve">
          <source>domainname, hostname, ipc, mac_address, privileged, read_only, shm_size, stdin_open, tty, user, working_dir</source>
          <target state="translated">ドメイン名、ホスト名、ipc、mac_address、特権、read_only、shm_size、stdin_open、tty、user、作業ディレクトリ</target>
        </trans-unit>
        <trans-unit id="77346d0447daff959358a0ecbeec83bfd9ec86bb" translate="yes" xml:space="preserve">
          <source>down</source>
          <target state="translated">down</target>
        </trans-unit>
        <trans-unit id="817248fb77fb5c2cef3f2c732ad257cb1fb9c5e4" translate="yes" xml:space="preserve">
          <source>download</source>
          <target state="translated">download</target>
        </trans-unit>
        <trans-unit id="dd9e3567c5471d0338f57d2ed207086b7360a52b" translate="yes" xml:space="preserve">
          <source>drain a manager node so that only performs swarm management tasks and is unavailable for task assignment.</source>
          <target state="translated">マネージャーノードをドレインして、スウォーム管理タスクのみを実行し、タスクの割り当てに利用できないようにします。</target>
        </trans-unit>
        <trans-unit id="ddd84cb8227e42ea2505020e1b7e5eaa8c517bb4" translate="yes" xml:space="preserve">
          <source>drain a node so you can take it down for maintenance.</source>
          <target state="translated">ノードをドレインすることで、メンテナンスのためにノードを削除することができます。</target>
        </trans-unit>
        <trans-unit id="fdda0c46f953c1a45bdc520849be1e4edf4e228c" translate="yes" xml:space="preserve">
          <source>driver</source>
          <target state="translated">driver</target>
        </trans-unit>
        <trans-unit id="de71d251fb9fd660d530f1c187fddd3cf3812870" translate="yes" xml:space="preserve">
          <source>driver (a volume driver&amp;rsquo;s name)</source>
          <target state="translated">ドライバー（ボリュームドライバーの名前）</target>
        </trans-unit>
        <trans-unit id="5f1ace0663ab478940732c701991000dc4771db9" translate="yes" xml:space="preserve">
          <source>driver (driver name)</source>
          <target state="translated">運転手</target>
        </trans-unit>
        <trans-unit id="3ce1e328e73c009e2886a12027cf8c329d5caf21" translate="yes" xml:space="preserve">
          <source>driver options for the network</source>
          <target state="translated">ネットワーク用ドライバオプション</target>
        </trans-unit>
        <trans-unit id="8c03e491823e2d88ccf12a01be6916ddbc393709" translate="yes" xml:space="preserve">
          <source>driver_opts</source>
          <target state="translated">driver_opts</target>
        </trans-unit>
        <trans-unit id="7d11bbbad26e21561551fcaf064bc73742963096" translate="yes" xml:space="preserve">
          <source>drivers</source>
          <target state="translated">drivers</target>
        </trans-unit>
        <trans-unit id="a7f719bf74e49f78da1a4edfed258b184a7054ff" translate="yes" xml:space="preserve">
          <source>dst</source>
          <target state="translated">dst</target>
        </trans-unit>
        <trans-unit id="e37c738fad7451f32bcc30d990870dd76088f729" translate="yes" xml:space="preserve">
          <source>during a rolling update</source>
          <target state="translated">ローリングアップデート中</target>
        </trans-unit>
        <trans-unit id="f281a50851b1928420ac9af04ebefb8bbd427401" translate="yes" xml:space="preserve">
          <source>during a service update to scale up</source>
          <target state="translated">スケールアップのためのサービス更新時に</target>
        </trans-unit>
        <trans-unit id="623bccadfb4c97dd9449eaf92baf3d93adac8db7" translate="yes" xml:space="preserve">
          <source>enable_ipv6</source>
          <target state="translated">enable_ipv6</target>
        </trans-unit>
        <trans-unit id="3ea3f9802accf8817bacd6f3df46a73b93ccddec" translate="yes" xml:space="preserve">
          <source>enabled</source>
          <target state="translated">enabled</target>
        </trans-unit>
        <trans-unit id="f0515b289231b7c361fcd57ff70e18e1f41639dd" translate="yes" xml:space="preserve">
          <source>enabled (boolean - true or false, 0 or 1)</source>
          <target state="translated">有効化された(ブール値-真または偽、0または1)</target>
        </trans-unit>
        <trans-unit id="04acd12d8bffd6630f193c10d0dd51f92d5c7238" translate="yes" xml:space="preserve">
          <source>endpoint_mode</source>
          <target state="translated">endpoint_mode</target>
        </trans-unit>
        <trans-unit id="d2f05c41c4d8201c928e384dff967e8e4dfc06d9" translate="yes" xml:space="preserve">
          <source>engine.labels</source>
          <target state="translated">engine.labels</target>
        </trans-unit>
        <trans-unit id="60a887734bc7b290d76f1b03da048aa3efc5d337" translate="yes" xml:space="preserve">
          <source>engine.labels.operatingsystem==ubuntu 14.04</source>
          <target state="translated">engine.labels.operatingsystem==ubuntu 14.04</target>
        </trans-unit>
        <trans-unit id="0f7c518039774bb00b8168f11cf8f1df5755cd85" translate="yes" xml:space="preserve">
          <source>ensuring that any uploaded metadata is valid, signed, and self-consistent</source>
          <target state="translated">アップロードされたメタデータが有効で、署名され、自己矛盾のないものであることを確認すること</target>
        </trans-unit>
        <trans-unit id="e89dd390584c1a3296045a66b7f352f412364578" translate="yes" xml:space="preserve">
          <source>entrypoint</source>
          <target state="translated">entrypoint</target>
        </trans-unit>
        <trans-unit id="af9285ae492167c00cb10d1c46862947ff8efea5" translate="yes" xml:space="preserve">
          <source>entrypoint of the plugin, see &lt;a href=&quot;../../reference/builder/index#entrypoint&quot;&gt;&lt;code&gt;ENTRYPOINT&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">プラグインのエントリポイント、&lt;a href=&quot;../../reference/builder/index#entrypoint&quot;&gt; &lt;code&gt;ENTRYPOINT&lt;/code&gt; を&lt;/a&gt;参照</target>
        </trans-unit>
        <trans-unit id="e338e8e3d1ddeb83df4ace416a87e89ed797cd19" translate="yes" xml:space="preserve">
          <source>enum</source>
          <target state="translated">enum</target>
        </trans-unit>
        <trans-unit id="920f8f5815b381ea692e9e7c2f7119f2b1aa620a" translate="yes" xml:space="preserve">
          <source>env</source>
          <target state="translated">env</target>
        </trans-unit>
        <trans-unit id="e780589c06d87ba3e801533b0e52ba84f7d0d304" translate="yes" xml:space="preserve">
          <source>env of the plugin, struct consisting of the following fields</source>
          <target state="translated">プラグインの env、以下のフィールドからなる構造体</target>
        </trans-unit>
        <trans-unit id="257f3adb34c32cc77b1de6ab2f0bddd495b5e27a" translate="yes" xml:space="preserve">
          <source>env variables</source>
          <target state="translated">環境変数</target>
        </trans-unit>
        <trans-unit id="f610876c752c84f23bf450cfe0a139fcd25c5eb3" translate="yes" xml:space="preserve">
          <source>env_file</source>
          <target state="translated">env_file</target>
        </trans-unit>
        <trans-unit id="c6e454d960df4845f9d69eb11377c8b23882715b" translate="yes" xml:space="preserve">
          <source>environment</source>
          <target state="translated">environment</target>
        </trans-unit>
        <trans-unit id="86403ebd2f9f8c907d68bdc39d5fc0cbe52193c7" translate="yes" xml:space="preserve">
          <source>environment variables using the &lt;code&gt;--env&lt;/code&gt; flag</source>
          <target state="translated">&lt;code&gt;--env&lt;/code&gt; フラグを使用した環境変数</target>
        </trans-unit>
        <trans-unit id="11f9578d05e6f7bb58a3cdd00107e9f4e3882671" translate="yes" xml:space="preserve">
          <source>error</source>
          <target state="translated">error</target>
        </trans-unit>
        <trans-unit id="cdecabe1520a398e4e46deff9d55b19bed6d6457" translate="yes" xml:space="preserve">
          <source>escape</source>
          <target state="translated">escape</target>
        </trans-unit>
        <trans-unit id="2a1b83bcab0fd0f6fa562eb0148db3d5c12a645f" translate="yes" xml:space="preserve">
          <source>eu-central-1</source>
          <target state="translated">eu-central-1</target>
        </trans-unit>
        <trans-unit id="20c756b8d752b585db8daa6b9ae9b7b0f179769b" translate="yes" xml:space="preserve">
          <source>eu-west-1</source>
          <target state="translated">eu-west-1</target>
        </trans-unit>
        <trans-unit id="65aaaff858db7500c651ebef055a5f5de4b81bc2" translate="yes" xml:space="preserve">
          <source>eu-west-2</source>
          <target state="translated">eu-west-2</target>
        </trans-unit>
        <trans-unit id="e4f51b6cb3d0e934487d2ff846e04ab26067960b" translate="yes" xml:space="preserve">
          <source>eu-west-3</source>
          <target state="translated">eu-west-3</target>
        </trans-unit>
        <trans-unit id="3978e32eeacbd2a09ed98f070ae0637405f544e5" translate="yes" xml:space="preserve">
          <source>event (&lt;code&gt;event=&amp;lt;event action&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">イベント（ &lt;code&gt;event=&amp;lt;event action&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="82d50d9042decb175894924272dd3b5a14cd3716" translate="yes" xml:space="preserve">
          <source>events</source>
          <target state="translated">events</target>
        </trans-unit>
        <trans-unit id="c3499c2729730a7f807efb8676a92dcb6f8a3f8f" translate="yes" xml:space="preserve">
          <source>example</source>
          <target state="translated">example</target>
        </trans-unit>
        <trans-unit id="be62562725d30894d1641b11d5106adde66f0d79" translate="yes" xml:space="preserve">
          <source>exec</source>
          <target state="translated">exec</target>
        </trans-unit>
        <trans-unit id="0637cc8bcbbc384fb2738f80dd387dbece8aaf3a" translate="yes" xml:space="preserve">
          <source>exec_cmd p1_cmd</source>
          <target state="translated">exec_cmd p1_cmd</target>
        </trans-unit>
        <trans-unit id="4a2692b5caa782d5e573ff3cd5f6fd74970a35b7" translate="yes" xml:space="preserve">
          <source>exec_entry p1_entry</source>
          <target state="translated">exec_entry p1_entry</target>
        </trans-unit>
        <trans-unit id="7b84d41ba17f737dcd65421f95b6dc1ef8f56a5b" translate="yes" xml:space="preserve">
          <source>exec_entry p1_entry /bin/sh -c exec_cmd p1_cmd</source>
          <target state="translated">exec_entry p1_entry /bin/sh -c exec_cmd p1_cmd</target>
        </trans-unit>
        <trans-unit id="e33ecf2be5173d8cde944a2f5f4c4e5b85df2852" translate="yes" xml:space="preserve">
          <source>exec_entry p1_entry exec_cmd p1_cmd</source>
          <target state="translated">exec_entry p1_entry exec_cmd p1_cmd</target>
        </trans-unit>
        <trans-unit id="7fb6ca7b55d615aa86bdca1b0b91113756fb5e88" translate="yes" xml:space="preserve">
          <source>exec_entry p1_entry p1_cmd p2_cmd</source>
          <target state="translated">exec_entry p1_entry p1_cmd p2_cmd</target>
        </trans-unit>
        <trans-unit id="e9e86ea85c2b6f8176cee219e782a4c322caec77" translate="yes" xml:space="preserve">
          <source>exited</source>
          <target state="translated">exited</target>
        </trans-unit>
        <trans-unit id="2216470a6aacb2edec4887e9eadec834847afc5d" translate="yes" xml:space="preserve">
          <source>experimental</source>
          <target state="translated">experimental</target>
        </trans-unit>
        <trans-unit id="732c9871ab75de0767a88fa5623a85a03c962ae8" translate="yes" xml:space="preserve">
          <source>experimental (daemon)</source>
          <target state="translated">実験用</target>
        </trans-unit>
        <trans-unit id="0d23a9d9da666bddcdefdc96a56ed0052f08f2ed" translate="yes" xml:space="preserve">
          <source>expose</source>
          <target state="translated">expose</target>
        </trans-unit>
        <trans-unit id="2b781ff8e3327e3e897ec571fa02fec12242e7dd" translate="yes" xml:space="preserve">
          <source>extends</source>
          <target state="translated">extends</target>
        </trans-unit>
        <trans-unit id="1988056a9766bcf5be87ec483a9c22efcd9e9039" translate="yes" xml:space="preserve">
          <source>extends the &lt;code&gt;ingress&lt;/code&gt; overlay network to the current node.</source>
          <target state="translated">&lt;code&gt;ingress&lt;/code&gt; オーバーレイネットワークを現在のノードに拡張します。</target>
        </trans-unit>
        <trans-unit id="59d8f3ec5b13131f7856e6ed51dca3c6adb97cd4" translate="yes" xml:space="preserve">
          <source>external</source>
          <target state="translated">external</target>
        </trans-unit>
        <trans-unit id="f40050d6d5821035df84059bf706338d4066f241" translate="yes" xml:space="preserve">
          <source>external (volume or storage) drivers which are unaware or incapable of using daemon user mappings.</source>
          <target state="translated">デーモンユーザマッピングを使用していないか、または使用できない外部(ボリュームまたはストレージ)ドライバ。</target>
        </trans-unit>
        <trans-unit id="f322512455fd2ac06eb0486e488aa4e9179f3a84" translate="yes" xml:space="preserve">
          <source>external_links</source>
          <target state="translated">external_links</target>
        </trans-unit>
        <trans-unit id="3673780757859050fd94a7fb53ef58520d9da085" translate="yes" xml:space="preserve">
          <source>extra_hosts</source>
          <target state="translated">extra_hosts</target>
        </trans-unit>
        <trans-unit id="7cb6efb98ba5972a9b5090dc2e517fe14d12cb04" translate="yes" xml:space="preserve">
          <source>false</source>
          <target state="translated">false</target>
        </trans-unit>
        <trans-unit id="c3de14b5c375ff5775e80c74b358f6a6b322ffb5" translate="yes" xml:space="preserve">
          <source>file version 1 reference</source>
          <target state="translated">ファイルバージョン1参照</target>
        </trans-unit>
        <trans-unit id="10a075a371c113ba9081a1f095b194f5bf13347b" translate="yes" xml:space="preserve">
          <source>file version 2 reference</source>
          <target state="translated">ファイルバージョン2参照</target>
        </trans-unit>
        <trans-unit id="ab800268b3c8fe09ec6ef7bc4d858b0ace04730e" translate="yes" xml:space="preserve">
          <source>file version 3 reference</source>
          <target state="translated">ファイルバージョン3参照</target>
        </trans-unit>
        <trans-unit id="232fc9648b8c88bbb8b37885eb121cc4a0c9c242" translate="yes" xml:space="preserve">
          <source>file versions and upgrading</source>
          <target state="translated">ファイルのバージョンとアップグレード</target>
        </trans-unit>
        <trans-unit id="84d604a0d6a39b52de796c6e8f5d35d873c60f7c" translate="yes" xml:space="preserve">
          <source>flag twice.</source>
          <target state="translated">フラグを2回</target>
        </trans-unit>
        <trans-unit id="43eef9a62abb8b1e1654f8a890aae054abffa82b" translate="yes" xml:space="preserve">
          <source>for</source>
          <target state="translated">for</target>
        </trans-unit>
        <trans-unit id="0c605d207c1a9da172900cbeb4357df1491396c3" translate="yes" xml:space="preserve">
          <source>for a bind-mount does not make its submounts</source>
          <target state="translated">がバインドマウントの場合、そのサブマウントは</target>
        </trans-unit>
        <trans-unit id="7337b232a96de911c0672057b2d730754658e5a1" translate="yes" xml:space="preserve">
          <source>gMSA for Swarm</source>
          <target state="translated">スウォームのためのgMSA</target>
        </trans-unit>
        <trans-unit id="faf81fcc74ab66d2b362632d3c6e39d70fdd41a7" translate="yes" xml:space="preserve">
          <source>gce-docker plugin</source>
          <target state="translated">gce-docker プラグイン</target>
        </trans-unit>
        <trans-unit id="f747945de55f7baf1d08872d530a0dc4cf369212" translate="yes" xml:space="preserve">
          <source>generating the timestamp (and sometimes snapshot) metadata</source>
          <target state="translated">タイムスタンプ(場合によってはスナップショット)メタデータの生成</target>
        </trans-unit>
        <trans-unit id="0d59cfdb78da8bcf0751ebf7bca8a461d3c7a469" translate="yes" xml:space="preserve">
          <source>group_add</source>
          <target state="translated">group_add</target>
        </trans-unit>
        <trans-unit id="951e78244b7bd08c38d0bb8750fd1bb9fadab331" translate="yes" xml:space="preserve">
          <source>hardware management is irrelevant, meaning that you never need to run &lt;code&gt;udevd&lt;/code&gt; or equivalent daemons within containers;</source>
          <target state="translated">ハードウェア管理は無関係です。つまり、コンテナー内で &lt;code&gt;udevd&lt;/code&gt; または同等のデーモンを実行する必要はありません。</target>
        </trans-unit>
        <trans-unit id="374444ea057e4d86d40f2a50d8191d771d96c2d7" translate="yes" xml:space="preserve">
          <source>headless</source>
          <target state="translated">headless</target>
        </trans-unit>
        <trans-unit id="c6e3aaf6776ca314d3a1989de4c73798b2b8708f" translate="yes" xml:space="preserve">
          <source>healthcheck</source>
          <target state="translated">healthcheck</target>
        </trans-unit>
        <trans-unit id="92005ecf3788faea8346a7919fba0232188561ab" translate="yes" xml:space="preserve">
          <source>help</source>
          <target state="translated">help</target>
        </trans-unit>
        <trans-unit id="86dd1cf45142e904cb2e99c2721fac3ca198c6ca" translate="yes" xml:space="preserve">
          <source>host</source>
          <target state="translated">host</target>
        </trans-unit>
        <trans-unit id="e3239ad2b343bf4b438025a7f74afdf5ffa15e27" translate="yes" xml:space="preserve">
          <source>host or none</source>
          <target state="translated">ホストかなし</target>
        </trans-unit>
        <trans-unit id="ca658f7c24b1536fc6796ccc4cef3e76d792ba6d" translate="yes" xml:space="preserve">
          <source>how many containers participate in the service</source>
          <target state="translated">何個のコンテナがサービスに参加しているか</target>
        </trans-unit>
        <trans-unit id="87ea5dfc8b8e384d848979496e706390b497e547" translate="yes" xml:space="preserve">
          <source>id</source>
          <target state="translated">id</target>
        </trans-unit>
        <trans-unit id="ed8f09909ec0cb5e8e606181bb78c5f516d3e7a6" translate="yes" xml:space="preserve">
          <source>id (network&amp;rsquo;s id)</source>
          <target state="translated">id（ネットワークのID）</target>
        </trans-unit>
        <trans-unit id="3c13bd6865f497e4c70396f89bd6d0823acaddcc" translate="yes" xml:space="preserve">
          <source>id / ID (&lt;code&gt;--filter id=7be5ei6sqeye&lt;/code&gt;, or &lt;code&gt;--filter ID=7be5ei6sqeye&lt;/code&gt;)</source>
          <target state="translated">id / ID（-- &lt;code&gt;--filter id=7be5ei6sqeye&lt;/code&gt; 、または &lt;code&gt;--filter ID=7be5ei6sqeye&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="5812c7d9f91e68d3f718ad34340ce89eaefbfd42" translate="yes" xml:space="preserve">
          <source>if no type is specified.</source>
          <target state="translated">タイプが指定されていない場合は</target>
        </trans-unit>
        <trans-unit id="4a18bc61942b587fb95f47ae9f3c0a99151955f3" translate="yes" xml:space="preserve">
          <source>if using many nodes, allow communication between the &lt;code&gt;redis&lt;/code&gt; service and &lt;code&gt;web&lt;/code&gt; service</source>
          <target state="translated">多くのノードを使用している場合は、 &lt;code&gt;redis&lt;/code&gt; サービスと &lt;code&gt;web&lt;/code&gt; サービス間の通信を許可します</target>
        </trans-unit>
        <trans-unit id="0d13308976a283a958d6da9b3f073924c39c098d" translate="yes" xml:space="preserve">
          <source>if your registry is signed by a custom root Certificate Authority and it is not registered with Docker Engine, you may see the following error message:</source>
          <target state="translated">レジストリがカスタムルート認証局によって署名されていて、Docker Engineに登録されていない場合、以下のようなエラーメッセージが表示されることがあります。</target>
        </trans-unit>
        <trans-unit id="0e76292794888d4f1fa75fb3aff4ca27c58f56a6" translate="yes" xml:space="preserve">
          <source>image</source>
          <target state="translated">image</target>
        </trans-unit>
        <trans-unit id="38b070268c0bae0a650ffcf87ebbaa03fa7206ba" translate="yes" xml:space="preserve">
          <source>image (&lt;code&gt;image=&amp;lt;repository or tag&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">画像（ &lt;code&gt;image=&amp;lt;repository or tag&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="489656cd4a1a2882c6125fd936704aace4d33bd7" translate="yes" xml:space="preserve">
          <source>image (&lt;code&gt;image=&amp;lt;tag or id&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">画像（ &lt;code&gt;image=&amp;lt;tag or id&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="19f49d852660fe0a079cbf95c3efb34ba88de911" translate="yes" xml:space="preserve">
          <source>images</source>
          <target state="translated">images</target>
        </trans-unit>
        <trans-unit id="d332e6195db9b7126b61d40924e9288f8649a5a7" translate="yes" xml:space="preserve">
          <source>in Linux.</source>
          <target state="translated">をLinuxで使用しています。</target>
        </trans-unit>
        <trans-unit id="77b183770aca580132364ae4bc614ef809dfc48a" translate="yes" xml:space="preserve">
          <source>increase logging level by signaling &lt;code&gt;SIGUSR1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SIGUSR1&lt;/code&gt; に信号を送ることによりログレベルを上げる</target>
        </trans-unit>
        <trans-unit id="59bd0a3ff43b32849b319e645d4798d8a5d1e889" translate="yes" xml:space="preserve">
          <source>info</source>
          <target state="translated">info</target>
        </trans-unit>
        <trans-unit id="e4e810466669889f6d245e182e0f85b41a760695" translate="yes" xml:space="preserve">
          <source>ingress</source>
          <target state="translated">ingress</target>
        </trans-unit>
        <trans-unit id="fd62812fbd9ec4c7f99aa4f6253fead2388eb238" translate="yes" xml:space="preserve">
          <source>init</source>
          <target state="translated">init</target>
        </trans-unit>
        <trans-unit id="f73c8dc7b8503576716e6b30f2c883c96a23ff81" translate="yes" xml:space="preserve">
          <source>initializing a cluster of Docker Engines in swarm mode</source>
          <target state="translated">スウォームモードでのDockerエンジンクラスタの初期化</target>
        </trans-unit>
        <trans-unit id="a1a2ae18fa153a52a05172a40a60c6c0848214e2" translate="yes" xml:space="preserve">
          <source>inspect</source>
          <target state="translated">inspect</target>
        </trans-unit>
        <trans-unit id="083cb2d425a344806151c3c26fa3803c1331c79c" translate="yes" xml:space="preserve">
          <source>inspect an individual node</source>
          <target state="translated">個々のノードを検査する</target>
        </trans-unit>
        <trans-unit id="dd0e3247e7927f1891e350c808338b20cca8a6eb" translate="yes" xml:space="preserve">
          <source>install Docker Engine on Linux machines</source>
          <target state="translated">LinuxマシンにDocker Engineをインストールする</target>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="translated">int</target>
        </trans-unit>
        <trans-unit id="5b33eaa25fce921a4a450f48149bff99ccf36bc8" translate="yes" xml:space="preserve">
          <source>interface implemented by the plugins, struct consisting of the following fields</source>
          <target state="translated">プラグインによって実装されたインターフェイスで、以下のフィールドからなる構造体です。</target>
        </trans-unit>
        <trans-unit id="9f33a7c798af6fd6abb28049d9c1b3edfa2fd24a" translate="yes" xml:space="preserve">
          <source>internal</source>
          <target state="translated">internal</target>
        </trans-unit>
        <trans-unit id="f9aba3f1299b4a48e75ee40ef3baf522152a817c" translate="yes" xml:space="preserve">
          <source>ip</source>
          <target state="translated">ip</target>
        </trans-unit>
        <trans-unit id="7afc9cfb8176a0cc42f3804d9f86bfe5563d9120" translate="yes" xml:space="preserve">
          <source>ipam</source>
          <target state="translated">ipam</target>
        </trans-unit>
        <trans-unit id="34cb11a49aa8be01288bcc504e59bf97f7bfd8f6" translate="yes" xml:space="preserve">
          <source>ipv4_address, ipv6_address</source>
          <target state="translated">ipv4_address,ipv6_address</target>
        </trans-unit>
        <trans-unit id="7f8ef9ae138b855de6514ac356276974b2f3167d" translate="yes" xml:space="preserve">
          <source>is an optional way to specify the name of the volume (for example,</source>
          <target state="translated">は、ボリュームの名前を指定するオプションの方法です(例えば。</target>
        </trans-unit>
        <trans-unit id="4570d3713b7379f9e4840ad86281f891bb7cc420" translate="yes" xml:space="preserve">
          <source>is destroyed (which is upon</source>
          <target state="translated">滅びる</target>
        </trans-unit>
        <trans-unit id="18ab6ac7001b131bc4dc74bd619c612205dff372" translate="yes" xml:space="preserve">
          <source>is equivalent to:</source>
          <target state="translated">に相当します。</target>
        </trans-unit>
        <trans-unit id="a4941b8f65f3ef7c3339a3993ea6937da25b1da0" translate="yes" xml:space="preserve">
          <source>is not supported.</source>
          <target state="translated">はサポートされていません。</target>
        </trans-unit>
        <trans-unit id="edbd81c95b4ed6583d86c9db407643724ad3e0b6" translate="yes" xml:space="preserve">
          <source>is required, and specifies an absolute path to the file or directory to bind-mount (for example,</source>
          <target state="translated">は必須で、バインドマウントするファイルやディレクトリへの絶対パスを指定します (例.</target>
        </trans-unit>
        <trans-unit id="326b4939edb0663273e2635a0b8eaef62e0b1996" translate="yes" xml:space="preserve">
          <source>is specified, the volume is assigned a random name which is guaranteed to be unique on the host, but may not be unique cluster-wide. A randomly-named volume has the same lifecycle as its container and is destroyed when the</source>
          <target state="translated">が指定された場合、ボリュームにはホスト上で一意であることが保証されたランダムな名前が割り当てられますが、クラスタ全体で一意であるとは限りません。ランダムな名前のボリュームは、そのコンテナと同じライフサイクルを持ち</target>
        </trans-unit>
        <trans-unit id="9c71271958bd0ff5504788acbf4b95a5df820e73" translate="yes" xml:space="preserve">
          <source>is-automated</source>
          <target state="translated">is-automated</target>
        </trans-unit>
        <trans-unit id="9c0dfbe334ba50d50ed491d5d08478dde891cbc2" translate="yes" xml:space="preserve">
          <source>is-automated (boolean - true or false) - is the image automated or not</source>
          <target state="translated">is-automated (boolean-true あるいは false)-画像が自動化されているかどうか.</target>
        </trans-unit>
        <trans-unit id="ee4ef869e1bd13dc335185a004b77549a2d6e3cf" translate="yes" xml:space="preserve">
          <source>is-official</source>
          <target state="translated">is-official</target>
        </trans-unit>
        <trans-unit id="483647e4b84071a72048eafc6b5cf6697a40a765" translate="yes" xml:space="preserve">
          <source>is-official (boolean - true or false) - is the image official or not</source>
          <target state="translated">is-official (boolean-true あるいは false)-画像が公式かどうか。</target>
        </trans-unit>
        <trans-unit id="4ee64af0b2223831d706d10af4775feb24fca81c" translate="yes" xml:space="preserve">
          <source>isolation</source>
          <target state="translated">isolation</target>
        </trans-unit>
        <trans-unit id="afc4a90f407dc88e8958c1c8666ed523c3a9d628" translate="yes" xml:space="preserve">
          <source>joins the current node to the swarm at the manager listen address based upon the swarm token.</source>
          <target state="translated">は、スウォームトークンに基づいたマネージャのリッスンアドレスで、現在のノードをスウォームに結合します。</target>
        </trans-unit>
        <trans-unit id="c80f5bc166cd6739ba9ba6d94acabc0aa01494da" translate="yes" xml:space="preserve">
          <source>kill</source>
          <target state="translated">kill</target>
        </trans-unit>
        <trans-unit id="64c65374dbab6fe3762748196d9d3a9610e2e5a9" translate="yes" xml:space="preserve">
          <source>label</source>
          <target state="translated">label</target>
        </trans-unit>
        <trans-unit id="c08b4013d32246f2cfa2d1d2fd0980dba87ccf2b" translate="yes" xml:space="preserve">
          <source>label (&lt;code&gt;--filter label=key=value&lt;/code&gt;)</source>
          <target state="translated">ラベル（ &lt;code&gt;--filter label=key=value&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a042c734d910aa7b9953b302218057a41d01d98c" translate="yes" xml:space="preserve">
          <source>label (&lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt; or &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">ラベル（ &lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt; または &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="158f213769f3dd192daa50e64725164a8921a132" translate="yes" xml:space="preserve">
          <source>label (&lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt;, &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;, &lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt;, or &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;) - only remove containers with (or without, in case &lt;code&gt;label!=...&lt;/code&gt; is used) the specified labels.</source>
          <target state="translated">ラベル（ &lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt; 、 &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; 、 &lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt; 、または &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ）- &lt;code&gt;label!=...&lt;/code&gt; 場合（またはラベルなしの場合のみ！） = ...が使用されます）指定されたラベル。</target>
        </trans-unit>
        <trans-unit id="d3797afeeb53535de2c6543ea00c6096d5a44d1d" translate="yes" xml:space="preserve">
          <source>label (&lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt;, &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;, &lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt;, or &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;) - only remove containers, images, networks, and volumes with (or without, in case &lt;code&gt;label!=...&lt;/code&gt; is used) the specified labels.</source>
          <target state="translated">ラベル（ &lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt; 、 &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; 、 &lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt; 、または &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ）-（でコンテナ、イメージ、ネットワーク、およびボリュームのみを削除しますまたはなしで、 &lt;code&gt;label!=...&lt;/code&gt; 場合！= ...が使用さは、指定されたラベル。</target>
        </trans-unit>
        <trans-unit id="38db22cf743024b0e71d0791c1bfdc75923ee9dd" translate="yes" xml:space="preserve">
          <source>label (&lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt;, &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;, &lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt;, or &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;) - only remove images with (or without, in case &lt;code&gt;label!=...&lt;/code&gt; is used) the specified labels.</source>
          <target state="translated">ラベル（ &lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt; 、 &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; 、 &lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt; 、または &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ）- &lt;code&gt;label!=...&lt;/code&gt; 場合のみ（またはラベルなしの場合は！） = ...が使用されます）指定されたラベル。</target>
        </trans-unit>
        <trans-unit id="4c6a715455c44956f653dcb24121eaf9430993e6" translate="yes" xml:space="preserve">
          <source>label (&lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt;, &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;, &lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt;, or &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt;) - only remove networks with (or without, in case &lt;code&gt;label!=...&lt;/code&gt; is used) the specified labels.</source>
          <target state="translated">ラベル（ &lt;code&gt;label=&amp;lt;key&amp;gt;&lt;/code&gt; 、 &lt;code&gt;label=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; 、 &lt;code&gt;label!=&amp;lt;key&amp;gt;&lt;/code&gt; 、または &lt;code&gt;label!=&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; ）- &lt;code&gt;label!=...&lt;/code&gt; 付き（またはラベルなしの場合はラベルなし！） = ...が使用されます）指定されたラベル。</target>
        </trans-unit>
        <trans-unit id="e2651f32d2eb42ef7491916ccf0f8b84301a06d5" translate="yes" xml:space="preserve">
          <source>label (Machine created with &lt;code&gt;--engine-label&lt;/code&gt; option, can be filtered with &lt;code&gt;label=&amp;lt;key&amp;gt;[=&amp;lt;value&amp;gt;]&lt;/code&gt;)</source>
          <target state="translated">ラベル（ &lt;code&gt;--engine-label&lt;/code&gt; オプションで作成されたマシン、 &lt;code&gt;label=&amp;lt;key&amp;gt;[=&amp;lt;value&amp;gt;]&lt;/code&gt; でフィルターできます）</target>
        </trans-unit>
        <trans-unit id="c7775e9214ae79db6716acbac8529400a4aff25c" translate="yes" xml:space="preserve">
          <source>labels</source>
          <target state="translated">labels</target>
        </trans-unit>
        <trans-unit id="7e2d3823d55d12a0df057803da53f955650aa678" translate="yes" xml:space="preserve">
          <source>leave the swarm</source>
          <target state="translated">群れを離れる</target>
        </trans-unit>
        <trans-unit id="1eb7d5c2200d0f49da387953fb79c9fef74fbb5c" translate="yes" xml:space="preserve">
          <source>limited</source>
          <target state="translated">limited</target>
        </trans-unit>
        <trans-unit id="295f8eaad7c83b8c2871ff82448f3a23a1432419" translate="yes" xml:space="preserve">
          <source>limited, maybe*</source>
          <target state="translated">限定的</target>
        </trans-unit>
        <trans-unit id="d3d8dbcf5b7fa233dfc9f3f145f8e73d76ca0be1" translate="yes" xml:space="preserve">
          <source>link_local_ips</source>
          <target state="translated">link_local_ips</target>
        </trans-unit>
        <trans-unit id="379e75c850e1334ef7bece52694c2f26cebec78f" translate="yes" xml:space="preserve">
          <source>links</source>
          <target state="translated">links</target>
        </trans-unit>
        <trans-unit id="193633ebef0a33a447a326996eda59d45c408c35" translate="yes" xml:space="preserve">
          <source>list nodes in the swarm</source>
          <target state="translated">スウォーム内のノードをリストアップします</target>
        </trans-unit>
        <trans-unit id="a3df2fa29890feda68b40e6a43cc09439d5ae506" translate="yes" xml:space="preserve">
          <source>log management is also typically handed to Docker, or to third-party services like Loggly or Splunk;</source>
          <target state="translated">ログ管理は一般的にDockerやLogglyやSplunkのようなサードパーティのサービスにも渡されます。</target>
        </trans-unit>
        <trans-unit id="a46affb9819e73b2076822cac4f3b718918561a4" translate="yes" xml:space="preserve">
          <source>log_driver</source>
          <target state="translated">log_driver</target>
        </trans-unit>
        <trans-unit id="c6fba0ab42a0cab77f6c965faec1c9cf57860da6" translate="yes" xml:space="preserve">
          <source>log_opt</source>
          <target state="translated">log_opt</target>
        </trans-unit>
        <trans-unit id="42f7b07db92a254d70b2763520ccb302387e6d6e" translate="yes" xml:space="preserve">
          <source>logging</source>
          <target state="translated">logging</target>
        </trans-unit>
        <trans-unit id="b0d9f389f8aac727e83ea16cbe7c34297f70f62b" translate="yes" xml:space="preserve">
          <source>logging section (optional)</source>
          <target state="translated">ロギングセクション</target>
        </trans-unit>
        <trans-unit id="474c797713f37901928aafb6adbae0241d1750bd" translate="yes" xml:space="preserve">
          <source>logs</source>
          <target state="translated">logs</target>
        </trans-unit>
        <trans-unit id="3567886465050b7e24e2f2ca0d3e9b0c895c1090" translate="yes" xml:space="preserve">
          <source>loopholes in the container configuration profile, either by default, or when customized by users.</source>
          <target state="translated">コンテナの設定プロファイルの抜け穴をデフォルトで、あるいはユーザーがカスタマイズした場合に修正することができます。</target>
        </trans-unit>
        <trans-unit id="ebfdec641529d4b59a54e18f8b0e9730f85939fb" translate="yes" xml:space="preserve">
          <source>ls</source>
          <target state="translated">ls</target>
        </trans-unit>
        <trans-unit id="df13d6f8dd677b825d05a58f29f749a17db10d88" translate="yes" xml:space="preserve">
          <source>maintaining cluster state</source>
          <target state="translated">クラスタ状態維持</target>
        </trans-unit>
        <trans-unit id="a4902e5d4c4eba11246b5eeb8fa528869c99709d" translate="yes" xml:space="preserve">
          <source>managing the swarm once you have everything running</source>
          <target state="translated">稼動後のスウォームの管理</target>
        </trans-unit>
        <trans-unit id="cb55ee92911cfc88c11928eac1c7b7dde67e360a" translate="yes" xml:space="preserve">
          <source>manifest annotate</source>
          <target state="translated">顕在注釈</target>
        </trans-unit>
        <trans-unit id="b320a1d780e340436afed07ea1a8adce6348b297" translate="yes" xml:space="preserve">
          <source>manifest create</source>
          <target state="translated">マニフェスト作成</target>
        </trans-unit>
        <trans-unit id="021f2c36767f0991386099dbb7fd1d6d88962a59" translate="yes" xml:space="preserve">
          <source>manifest inspect</source>
          <target state="translated">顕在検査</target>
        </trans-unit>
        <trans-unit id="0e3cb536e0f681e1f22ea862a025a098043c97b5" translate="yes" xml:space="preserve">
          <source>manifest push</source>
          <target state="translated">マニフェストプッシュ</target>
        </trans-unit>
        <trans-unit id="6c08a28fcff282cb2d7ec8431d0afad22bb8e96c" translate="yes" xml:space="preserve">
          <source>map[string]string</source>
          <target state="translated">map[string]string</target>
        </trans-unit>
        <trans-unit id="9f3e9242c63870528e4600bc635fca8f0f5d6e9c" translate="yes" xml:space="preserve">
          <source>matches</source>
          <target state="translated">matches</target>
        </trans-unit>
        <trans-unit id="26f2fd91eb2871b9eed530539dde702c5ed8e704" translate="yes" xml:space="preserve">
          <source>maybe*</source>
          <target state="translated">maybe*</target>
        </trans-unit>
        <trans-unit id="99ef7e9bc5027ed4d6250b3f33657d6d5b28c8e6" translate="yes" xml:space="preserve">
          <source>membership</source>
          <target state="translated">membership</target>
        </trans-unit>
        <trans-unit id="e78fe7049341b36116d8054f5a3e00d01f245fcc" translate="yes" xml:space="preserve">
          <source>mode</source>
          <target state="translated">mode</target>
        </trans-unit>
        <trans-unit id="0d386c7e10f7dd67057d4654995b139b5de1da3f" translate="yes" xml:space="preserve">
          <source>mode (&lt;code&gt;--filter mode=replicated&lt;/code&gt;, or &lt;code&gt;--filter mode=global&lt;/code&gt;)</source>
          <target state="translated">モード（ &lt;code&gt;--filter mode=replicated&lt;/code&gt; 、または &lt;code&gt;--filter mode=global&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c7a6dddea994b2601021855183ae08b234de9f20" translate="yes" xml:space="preserve">
          <source>mount</source>
          <target state="translated">mount</target>
        </trans-unit>
        <trans-unit id="85ad01e3b6df240c4940e131f12795a24cb27d28" translate="yes" xml:space="preserve">
          <source>mount of the plugin, struct consisting of the following fields, see &lt;a href=&quot;https://github.com/opencontainers/runtime-spec/blob/master/config/#mounts&quot;&gt;&lt;code&gt;MOUNTS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">プラグインのマウント、次のフィールドからなる構造体、参照&lt;a href=&quot;https://github.com/opencontainers/runtime-spec/blob/master/config/#mounts&quot;&gt; &lt;code&gt;MOUNTS&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce38ae84f7ff2d32c9cac3eef34e10dcfe9b2a8b" translate="yes" xml:space="preserve">
          <source>mount type.</source>
          <target state="translated">マウントタイプです。</target>
        </trans-unit>
        <trans-unit id="6ae999552a0d2dca14d62e2bc8b764d377b1dd6c" translate="yes" xml:space="preserve">
          <source>name</source>
          <target state="translated">name</target>
        </trans-unit>
        <trans-unit id="d72e04a96c7567a7ae5da312c324cf4c6db63983" translate="yes" xml:space="preserve">
          <source>name (&lt;code&gt;--filter name=myapp_web&lt;/code&gt;)</source>
          <target state="translated">名前（ &lt;code&gt;--filter name=myapp_web&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="89d3fd5dcc719ef8293f99cfa8479299b1e93cbf" translate="yes" xml:space="preserve">
          <source>name (Machine name returned by driver, supports &lt;a href=&quot;https://github.com/google/re2/wiki/Syntax&quot;&gt;golang style&lt;/a&gt; regular expressions)</source>
          <target state="translated">name（ドライバーによって返されるマシン名、&lt;a href=&quot;https://github.com/google/re2/wiki/Syntax&quot;&gt;golangスタイルの&lt;/a&gt;正規表現をサポート）</target>
        </trans-unit>
        <trans-unit id="530c6cd250626ba95f7f39f76db6a13323d31c41" translate="yes" xml:space="preserve">
          <source>name (a volume&amp;rsquo;s name)</source>
          <target state="translated">名前（ボリュームの名前）</target>
        </trans-unit>
        <trans-unit id="60958e5627f0769b9f542f1b9e093bb815dddb5c" translate="yes" xml:space="preserve">
          <source>name (network&amp;rsquo;s name)</source>
          <target state="translated">名前（ネットワークの名前）</target>
        </trans-unit>
        <trans-unit id="cb902a272612c74f45142ccdd3c1b2c1693facdf" translate="yes" xml:space="preserve">
          <source>name of the args.</source>
          <target state="translated">argsの名前を指定します。</target>
        </trans-unit>
        <trans-unit id="a32f9dfd833803076d602d56625b6395335d83ba" translate="yes" xml:space="preserve">
          <source>name of the device.</source>
          <target state="translated">デバイスの名前を指定します。</target>
        </trans-unit>
        <trans-unit id="875bfcd054a384d75c0300ed71c16403590d879a" translate="yes" xml:space="preserve">
          <source>name of the env.</source>
          <target state="translated">envの名前。</target>
        </trans-unit>
        <trans-unit id="2c534d8119db18ea66383922b4a4647b145ada3f" translate="yes" xml:space="preserve">
          <source>name of the mount.</source>
          <target state="translated">マウントの名前</target>
        </trans-unit>
        <trans-unit id="5808df7db5cd414896a5a2665a5f9c4523a2e54c" translate="yes" xml:space="preserve">
          <source>names the node with the machine hostname</source>
          <target state="translated">マシンのホスト名でノードを指定します。</target>
        </trans-unit>
        <trans-unit id="fc3fd19dc874eaf859174d8f32a20e49990023c7" translate="yes" xml:space="preserve">
          <source>names the node with the machine hostname.</source>
          <target state="translated">は、マシンのホスト名でノードを指定します。</target>
        </trans-unit>
        <trans-unit id="391b6629d9b645d3073c6f5ad432c40537646604" translate="yes" xml:space="preserve">
          <source>net</source>
          <target state="translated">net</target>
        </trans-unit>
        <trans-unit id="c112e88173d4d3c5c1409a17bee4837673523991" translate="yes" xml:space="preserve">
          <source>network</source>
          <target state="translated">network</target>
        </trans-unit>
        <trans-unit id="d27071459c9f76156f614de0ab63bd92ffa6d2fa" translate="yes" xml:space="preserve">
          <source>network (&lt;code&gt;network=&amp;lt;name or id&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">ネットワーク（ &lt;code&gt;network=&amp;lt;name or id&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b7d01cffb4c080ad93cda1d47c24dad9a322214a" translate="yes" xml:space="preserve">
          <source>network management happens outside of the containers, enforcing separation of concerns as much as possible, meaning that a container should never need to perform &lt;code&gt;ifconfig&lt;/code&gt;, &lt;code&gt;route&lt;/code&gt;, or ip commands (except when a container is specifically engineered to behave like a router or firewall, of course).</source>
          <target state="translated">ネットワーク管理はコンテナーの外で行われ、懸念事項の分離を可能な限り強制します。つまり、コンテナーが &lt;code&gt;ifconfig&lt;/code&gt; 、 &lt;code&gt;route&lt;/code&gt; 、またはipコマンドを実行する必要はありません（コンテナーがルーターまたはファイアウォールのように動作するように特別に設計されている場合を除き、コース）。</target>
        </trans-unit>
        <trans-unit id="d04ab42aff5be4b3aa35252e08f9a8e8b69bb886" translate="yes" xml:space="preserve">
          <source>network of the plugin, struct consisting of the following fields</source>
          <target state="translated">プラグインのネットワーク、以下のフィールドからなる構造体</target>
        </trans-unit>
        <trans-unit id="e21dd6a7d58382053e4881d09962489135b5d45f" translate="yes" xml:space="preserve">
          <source>network settings</source>
          <target state="translated">ネットワーク設定</target>
        </trans-unit>
        <trans-unit id="cab08a2526be1a4d241653e7bff19c6aecd1cbe7" translate="yes" xml:space="preserve">
          <source>network type.</source>
          <target state="translated">ネットワークの種類を指定します。</target>
        </trans-unit>
        <trans-unit id="4d580f61eddb9f58ac9c9ff15716213e5d557e6a" translate="yes" xml:space="preserve">
          <source>network_mode</source>
          <target state="translated">network_mode</target>
        </trans-unit>
        <trans-unit id="ec1fde8a67b25c95c74e66c3b2301c7b8f36cf98" translate="yes" xml:space="preserve">
          <source>networks</source>
          <target state="translated">networks</target>
        </trans-unit>
        <trans-unit id="fd1286353570c5703799ba76999323b7c7447b06" translate="yes" xml:space="preserve">
          <source>no</source>
          <target state="translated">no</target>
        </trans-unit>
        <trans-unit id="f8e966d1e207d02c44511a58dccff2f5429e9a3b" translate="yes" xml:space="preserve">
          <source>node</source>
          <target state="translated">node</target>
        </trans-unit>
        <trans-unit id="e42ada5cbe6769944f437941e9a6b07c6f3b47f2" translate="yes" xml:space="preserve">
          <source>node (&lt;code&gt;--filter node=mynode&lt;/code&gt;)</source>
          <target state="translated">ノード（ &lt;code&gt;--filter node=mynode&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="dd0bf6fddd6ab5dbaffc253376f06b43846d1374" translate="yes" xml:space="preserve">
          <source>node (&lt;code&gt;node=&amp;lt;id&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">ノード（ &lt;code&gt;node=&amp;lt;id&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="55e45a82636b730633fcc16b32748c79a57b439e" translate="yes" xml:space="preserve">
          <source>node attribute</source>
          <target state="translated">ノード属性</target>
        </trans-unit>
        <trans-unit id="0b3310650bba53f2b2c6e8849252be97f4ca837e" translate="yes" xml:space="preserve">
          <source>node.hostname</source>
          <target state="translated">node.hostname</target>
        </trans-unit>
        <trans-unit id="6f3c5cae8ee5b0aeeab70b417f784186e7c3f59c" translate="yes" xml:space="preserve">
          <source>node.hostname!=node-2</source>
          <target state="translated">node.hostname!=node-2</target>
        </trans-unit>
        <trans-unit id="d4679b5f29e4bc489882ff400959b1151f854fd3" translate="yes" xml:space="preserve">
          <source>node.id</source>
          <target state="translated">node.id</target>
        </trans-unit>
        <trans-unit id="18f31db3ef28378b753ff07b580daa94b759e4c2" translate="yes" xml:space="preserve">
          <source>node.id==2ivku8v2gvtg4</source>
          <target state="translated">node.id==2ivku8v2gvtg4</target>
        </trans-unit>
        <trans-unit id="bc137ec141cf50b22e6b14d1d16cbb459043c17f" translate="yes" xml:space="preserve">
          <source>node.labels</source>
          <target state="translated">node.labels</target>
        </trans-unit>
        <trans-unit id="cfd1e92e7cafc0953e9401039e24be7afca86f5b" translate="yes" xml:space="preserve">
          <source>node.labels.security==high</source>
          <target state="translated">node.labels.security==high</target>
        </trans-unit>
        <trans-unit id="cec11bc129f7ebc3dea7a0040df43209afec48aa" translate="yes" xml:space="preserve">
          <source>node.role</source>
          <target state="translated">node.role</target>
        </trans-unit>
        <trans-unit id="61c876bf8df1a90861f41f6ba1212b5e5fc49826" translate="yes" xml:space="preserve">
          <source>node.role==manager</source>
          <target state="translated">node.role==manager</target>
        </trans-unit>
        <trans-unit id="2d80602b8794571316ecc8202025832feba18f69" translate="yes" xml:space="preserve">
          <source>npipe</source>
          <target state="translated">npipe</target>
        </trans-unit>
        <trans-unit id="e2bec22e85a94bab8e50b1a4af86e7835ef533dc" translate="yes" xml:space="preserve">
          <source>on a CI server, to keep builds from interfering with each other, you can set the project name to a unique build number</source>
          <target state="translated">をCIサーバ上で使用している場合、ビルドがお互いに干渉しないようにするために、プロジェクト名を一意のビルド番号に設定することができます。</target>
        </trans-unit>
        <trans-unit id="2834a69998f3f637e1cc3b20df706883266d51b2" translate="yes" xml:space="preserve">
          <source>on a dev host, to create multiple copies of a single environment, such as when you want to run a stable copy for each feature branch of a project</source>
          <target state="translated">プロジェクトの各機能ブランチに対して安定したコピーを実行したい場合などに、単一の環境の複数のコピーを作成します。</target>
        </trans-unit>
        <trans-unit id="f525aca0a837894422f3f056e9e4d7f8b3b2c0b0" translate="yes" xml:space="preserve">
          <source>on a shared host or dev host, to prevent different projects, which may use the same service names, from interfering with each other</source>
          <target state="translated">を共有ホストまたは開発ホスト上で使用することで、同じサービス名を使用する可能性のある異なるプロジェクトがお互いに干渉しないようにします。</target>
        </trans-unit>
        <trans-unit id="63695c39a9a6cc341c8a251eeaa66e0167778bf3" translate="yes" xml:space="preserve">
          <source>on the current Linux implementation. See also</source>
          <target state="translated">現在のLinuxの実装を参照してください。以下も参照してください。</target>
        </trans-unit>
        <trans-unit id="f304596e6888af9f7e2de71d5e89d3d7b2004e30" translate="yes" xml:space="preserve">
          <source>only display license information and exit</source>
          <target state="translated">ライセンス情報を表示して終了するだけ</target>
        </trans-unit>
        <trans-unit id="35e2a2733681e15168874ea15f741166b1f1000f" translate="yes" xml:space="preserve">
          <source>open ports between the hosts</source>
          <target state="translated">ホスト間のオープンポート</target>
        </trans-unit>
        <trans-unit id="1a9d0be1681b4e4bfd927dc6efc5ff1f0d0b393a" translate="yes" xml:space="preserve">
          <source>option is given when mounting the bind or volume. Note that setting</source>
          <target state="translated">オプションはバインドやボリュームをマウントする際に与えられます。オプションが与えられていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="264aa9404c6e713f6c3220818c5dd1f7eb47bfe7" translate="yes" xml:space="preserve">
          <source>option, because submounts are not mounted as read-only. Set</source>
          <target state="translated">オプションを使用すると、サブマウントは読み取り専用としてマウントされないため、このオプションを使用することができます。サブマウントが読み取り専用でマウントされているため、サブマウントは読み取り専用でマウントされています。</target>
        </trans-unit>
        <trans-unit id="81ad3496e8db2260d9a3f3e0e4e89e37ccad1d34" translate="yes" xml:space="preserve">
          <source>options of the mount.</source>
          <target state="translated">マウントのオプション。</target>
        </trans-unit>
        <trans-unit id="da8e36d4bb98c8358bd6464b6c6e1e59483822f0" translate="yes" xml:space="preserve">
          <source>options that are available for a particular command</source>
          <target state="translated">特定のコマンドで利用可能なオプション</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="15dd1c3f57c578aacb0c1a4a52009cf37e24b3c4" translate="yes" xml:space="preserve">
          <source>or no value: Mounts the bind or volume read-only.</source>
          <target state="translated">または値なしでマウントします。バインドまたはボリュームを読み取り専用でマウントします。</target>
        </trans-unit>
        <trans-unit id="8901dbd3211bc9eee31032808172906160219676" translate="yes" xml:space="preserve">
          <source>or two examples of how to pass more parameters to that ENTRYPOINT:</source>
          <target state="translated">そのentrypointにさらに多くのパラメータを渡す方法の例を2つほど紹介します。</target>
        </trans-unit>
        <trans-unit id="b9deb3a38a78c84cf593c310b49c3347b5624e0e" translate="yes" xml:space="preserve">
          <source>otherwise, &lt;code&gt;root&lt;/code&gt;.</source>
          <target state="translated">それ以外の場合は、 &lt;code&gt;root&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6cc8d3ffd21316f339d0e6960da01ce49a4a8120" translate="yes" xml:space="preserve">
          <source>ou cannot override a key whose value is another map. For instance, setting &lt;code&gt;NOTARY_SERVER_STORAGE='{&quot;storage&quot;: {&quot;backend&quot;: &quot;memory&quot;}}'&lt;/code&gt; does not set in-memory storage. It just fails to parse. You can only override keys whose values are strings or numbers.</source>
          <target state="translated">値が別のマップであるキーを上書きすることはできません。たとえば、 &lt;code&gt;NOTARY_SERVER_STORAGE='{&quot;storage&quot;: {&quot;backend&quot;: &quot;memory&quot;}}'&lt;/code&gt; 設定しても、メモリ内ストレージは設定されません。解析に失敗するだけです。上書きできるのは、値が文字列または数値であるキーのみです。</target>
        </trans-unit>
        <trans-unit id="543d99683c3062544f5957fd8be95b83a6718fbc" translate="yes" xml:space="preserve">
          <source>overlay</source>
          <target state="translated">overlay</target>
        </trans-unit>
        <trans-unit id="4952a08df8c9b9053e5cbdf1379ec9aa93a6df54" translate="yes" xml:space="preserve">
          <source>override default location of containerd endpoint</source>
          <target state="translated">containerd エンドポイントのデフォルトの場所をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="cefcd6b1f122108d23aeb9fda297f043a0a88c29" translate="yes" xml:space="preserve">
          <source>p1_cmd p2_cmd</source>
          <target state="translated">p1_cmd p2_cmd</target>
        </trans-unit>
        <trans-unit id="c09e780703098daceab350e387a9d87a4a85978d" translate="yes" xml:space="preserve">
          <source>path of devices</source>
          <target state="translated">デバイスパス</target>
        </trans-unit>
        <trans-unit id="f41ff7a1c6a965a46516d3d31a4bdcc258f95460" translate="yes" xml:space="preserve">
          <source>path of the device.</source>
          <target state="translated">デバイスのパス。</target>
        </trans-unit>
        <trans-unit id="9f5b46f742294c873b55a25cfc970d05026ed37b" translate="yes" xml:space="preserve">
          <source>path to be mounted as rshared, so that mounts under that path are visible to docker. This is useful for volume plugins. This path will be bind-mounted outside of the plugin rootfs so it&amp;rsquo;s contents are preserved on upgrade.</source>
          <target state="translated">rsharedとしてマウントされるパス。これにより、そのパスの下のマウントがdockerから見えるようになります。これはボリュームプラグインに役立ちます。このパスは、プラグインrootfsの外部でバインドマウントされるため、その内容はアップグレード時に保持されます。</target>
        </trans-unit>
        <trans-unit id="ef8d29955a725c39916a4626f3921a0104242439" translate="yes" xml:space="preserve">
          <source>pause</source>
          <target state="translated">pause</target>
        </trans-unit>
        <trans-unit id="23173d97eed7dbd8332029f2d2d716f04566aaa7" translate="yes" xml:space="preserve">
          <source>pause a node so it can&amp;rsquo;t receive new tasks.</source>
          <target state="translated">ノードを一時停止して、新しいタスクを受信できないようにします。</target>
        </trans-unit>
        <trans-unit id="c8dbfae0c1fb68d0df9c6bc6e18ad250e8d87010" translate="yes" xml:space="preserve">
          <source>performing signing operations with these keys whenever the Notary server requests</source>
          <target state="translated">公証人サーバからのリクエストがあった場合には、これらの鍵を用いて署名操作を行います。</target>
        </trans-unit>
        <trans-unit id="e411f5c208942f771d8af25a6edeb75f0676cb55" translate="yes" xml:space="preserve">
          <source>pid</source>
          <target state="translated">pid</target>
        </trans-unit>
        <trans-unit id="fce1869fc11806ed011251ce18dd901ed0b3a08c" translate="yes" xml:space="preserve">
          <source>pids_limit</source>
          <target state="translated">pids_limit</target>
        </trans-unit>
        <trans-unit id="0eed454125af2b3f69d712bbc1190ac8ec5420ee" translate="yes" xml:space="preserve">
          <source>pip version 6.0 or greater is required.</source>
          <target state="translated">pipのバージョン6.0以上が必要です。</target>
        </trans-unit>
        <trans-unit id="7843fc5bea024e9b274e26db43b7e680d8bc9356" translate="yes" xml:space="preserve">
          <source>placement</source>
          <target state="translated">placement</target>
        </trans-unit>
        <trans-unit id="3c72abbe626f27d174d80fc434b851cce7bde6d3" translate="yes" xml:space="preserve">
          <source>platform</source>
          <target state="translated">platform</target>
        </trans-unit>
        <trans-unit id="f05d9424c949ecf084c9afd59ce6aeb16356b206" translate="yes" xml:space="preserve">
          <source>plugin (&lt;code&gt;plugin=&amp;lt;name or id&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">プラグイン（ &lt;code&gt;plugin=&amp;lt;name or id&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="062d8a9dec0fa507d19f3b3481b4980ca139455f" translate="yes" xml:space="preserve">
          <source>port</source>
          <target state="translated">port</target>
        </trans-unit>
        <trans-unit id="7941fd7476dd2659884eacc31ae02cf7611d8703" translate="yes" xml:space="preserve">
          <source>ports</source>
          <target state="translated">ports</target>
        </trans-unit>
        <trans-unit id="607d88ae5ac163d412b5ca61b79dacb20ad37432" translate="yes" xml:space="preserve">
          <source>poweroff</source>
          <target state="translated">poweroff</target>
        </trans-unit>
        <trans-unit id="3345867ecfeeaaae30e155d010fc96d9f5119644" translate="yes" xml:space="preserve">
          <source>priority</source>
          <target state="translated">priority</target>
        </trans-unit>
        <trans-unit id="797e0337559133338fd72e30146fcb0b2713eeb7" translate="yes" xml:space="preserve">
          <source>produce JSON-formatted logs</source>
          <target state="translated">JSON形式のログを生成する</target>
        </trans-unit>
        <trans-unit id="6e9b4af64b7aeed1decfa7a974b96ef6f9e40d9b" translate="yes" xml:space="preserve">
          <source>protocol</source>
          <target state="translated">protocol</target>
        </trans-unit>
        <trans-unit id="868b357f69316d1e9bc7a3d4a8d0637f6779223f" translate="yes" xml:space="preserve">
          <source>provision</source>
          <target state="translated">provision</target>
        </trans-unit>
        <trans-unit id="c67f1ee17880030ce11821dcc9be7af90b863d9b" translate="yes" xml:space="preserve">
          <source>ps</source>
          <target state="translated">ps</target>
        </trans-unit>
        <trans-unit id="db7d7b4a1b56d22f294d35aa0a764f98e713c1fa" translate="yes" xml:space="preserve">
          <source>publish and expose</source>
          <target state="translated">載せる</target>
        </trans-unit>
        <trans-unit id="a4212cd79c193852fde1a77c9782fe0df19bdf8f" translate="yes" xml:space="preserve">
          <source>published and target port</source>
          <target state="translated">公開・目標ポート</target>
        </trans-unit>
        <trans-unit id="c872d5564551dae02f3833dc6ec1f0b4475abdb4" translate="yes" xml:space="preserve">
          <source>pull</source>
          <target state="translated">pull</target>
        </trans-unit>
        <trans-unit id="dc867c03d6f1f4385a2475b4be1137e585036dd1" translate="yes" xml:space="preserve">
          <source>push</source>
          <target state="translated">push</target>
        </trans-unit>
        <trans-unit id="73b9f04976dfc2d88430f0582bc42066af9f5a3c" translate="yes" xml:space="preserve">
          <source>read-write</source>
          <target state="translated">read-write</target>
        </trans-unit>
        <trans-unit id="9a27718297218c3757c365d357d13f49d0fa3065" translate="yes" xml:space="preserve">
          <source>readonly</source>
          <target state="translated">readonly</target>
        </trans-unit>
        <trans-unit id="9c1135511782bf7e10795c4c56b2d403db40529b" translate="yes" xml:space="preserve">
          <source>reference (pattern of an image reference) - filter images whose reference matches the specified pattern</source>
          <target state="translated">reference (画像参照のパターン)-指定したパターンに一致する画像をフィルタリングする</target>
        </trans-unit>
        <trans-unit id="37f59777578448f25b1e924b48f6b4a73e60c294" translate="yes" xml:space="preserve">
          <source>regenerate-certs</source>
          <target state="translated">regenerate-certs</target>
        </trans-unit>
        <trans-unit id="9b0d6e5c92043150b4c60223943224baa11f40e0" translate="yes" xml:space="preserve">
          <source>remote_server section (optional)</source>
          <target state="translated">リモートサーバセクション (オプション)</target>
        </trans-unit>
        <trans-unit id="5c9d14b2f8b526f52dec3a93ba1f2a31ddbe4698" translate="yes" xml:space="preserve">
          <source>replicas</source>
          <target state="translated">replicas</target>
        </trans-unit>
        <trans-unit id="3b68bb33b67266b96266205bc1c62ba86597c761" translate="yes" xml:space="preserve">
          <source>reporting section (optional)</source>
          <target state="translated">ほうこくぶ</target>
        </trans-unit>
        <trans-unit id="9b798b17849d8ed0e1e53e1b1d1f15cdb5cf6b17" translate="yes" xml:space="preserve">
          <source>repositories section (optional)</source>
          <target state="translated">リポジトリセクション</target>
        </trans-unit>
        <trans-unit id="7231c62884f08ba1dae4a5235d7be56016133404" translate="yes" xml:space="preserve">
          <source>repository or tagging keys that sign tags</source>
          <target state="translated">タグに署名するリポジトリまたはタグキー</target>
        </trans-unit>
        <trans-unit id="7ba6d8ce4925a4b1d2a07789f6618c7a1ef2224b" translate="yes" xml:space="preserve">
          <source>requests a TLS certificate from the manager.</source>
          <target state="translated">はマネージャに TLS 証明書を要求します。</target>
        </trans-unit>
        <trans-unit id="91ef0c1608b20c9c5bd9e003bbb600229c0dfeb1" translate="yes" xml:space="preserve">
          <source>reset</source>
          <target state="translated">reset</target>
        </trans-unit>
        <trans-unit id="cc1aca718668ad4ef114dda13d3c555162dc3c45" translate="yes" xml:space="preserve">
          <source>resource density can be optimized.</source>
          <target state="translated">リソース密度を最適化することができます。</target>
        </trans-unit>
        <trans-unit id="0189424a5a60fed329fa868e83bf2760d97a4778" translate="yes" xml:space="preserve">
          <source>resources</source>
          <target state="translated">resources</target>
        </trans-unit>
        <trans-unit id="16f766f2f5d7ff50934fb25604a14e9fd4126771" translate="yes" xml:space="preserve">
          <source>restart</source>
          <target state="translated">restart</target>
        </trans-unit>
        <trans-unit id="adca4352ca26530ffde2bb12526c11fe6d97a947" translate="yes" xml:space="preserve">
          <source>restart_policy</source>
          <target state="translated">restart_policy</target>
        </trans-unit>
        <trans-unit id="59138b9c6007527a46d59d39086f1c63de25dc92" translate="yes" xml:space="preserve">
          <source>restore unavailable or paused nodes available status.</source>
          <target state="translated">利用できないノードまたは一時停止しているノードの利用可能な状態を復元します。</target>
        </trans-unit>
        <trans-unit id="5cd7e29c88170aa3f16281e0dbf5772c137f6d8d" translate="yes" xml:space="preserve">
          <source>rm</source>
          <target state="translated">rm</target>
        </trans-unit>
        <trans-unit id="8dca46428d005a2f4c2e039fb250964d6139a8b2" translate="yes" xml:space="preserve">
          <source>role</source>
          <target state="translated">role</target>
        </trans-unit>
        <trans-unit id="4007b191fe0f2a7d283cce280ae0fcb54ce4fa43" translate="yes" xml:space="preserve">
          <source>rollback_config</source>
          <target state="translated">rollback_config</target>
        </trans-unit>
        <trans-unit id="2e77eda8896a124b58808ae2a7a2cd9e04d411fe" translate="yes" xml:space="preserve">
          <source>root key</source>
          <target state="translated">ルートキー</target>
        </trans-unit>
        <trans-unit id="df6ad19037c97987c4ff9792810c0e145356717c" translate="yes" xml:space="preserve">
          <source>run</source>
          <target state="translated">run</target>
        </trans-unit>
        <trans-unit id="f2e18ffc17e2595362b5468aac34221e09934bf8" translate="yes" xml:space="preserve">
          <source>runtime</source>
          <target state="translated">runtime</target>
        </trans-unit>
        <trans-unit id="2c18ac49d87ee2a1f0387045c53e8891be790df8" translate="yes" xml:space="preserve">
          <source>runtime constraints on CPU and memory</source>
          <target state="translated">CPUとメモリの実行時制約</target>
        </trans-unit>
        <trans-unit id="ac486fd398093740a87bfd231e43af610b922e2d" translate="yes" xml:space="preserve">
          <source>sa-east-1</source>
          <target state="translated">sa-east-1</target>
        </trans-unit>
        <trans-unit id="13a4a11319d31c1b323d5774f44240a9ffc984d0" translate="yes" xml:space="preserve">
          <source>save</source>
          <target state="translated">save</target>
        </trans-unit>
        <trans-unit id="60020d1b19707b587574a1c80412af51ea9e12b3" translate="yes" xml:space="preserve">
          <source>scale</source>
          <target state="translated">scale</target>
        </trans-unit>
        <trans-unit id="70d78c0bd6768e96fa8d5c477ac63aab926cc55f" translate="yes" xml:space="preserve">
          <source>scheduling services</source>
          <target state="translated">スケジューリングサービス</target>
        </trans-unit>
        <trans-unit id="9ad43caee71362d5cd2eb7f4f6fbb4538671ca61" translate="yes" xml:space="preserve">
          <source>scope (&lt;code&gt;scope=&amp;lt;local or swarm&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">スコープ（ &lt;code&gt;scope=&amp;lt;local or swarm&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ec34d8001df884991af250249f43f8af8fbb448a" translate="yes" xml:space="preserve">
          <source>scope (&lt;code&gt;swarm|global|local&lt;/code&gt;)</source>
          <target state="translated">スコープ（ &lt;code&gt;swarm|global|local&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="61541b484ac2a6488909f3326523fa0e68783461" translate="yes" xml:space="preserve">
          <source>scp</source>
          <target state="translated">scp</target>
        </trans-unit>
        <trans-unit id="367e4a439d034a0844bab119596067d5141fc032" translate="yes" xml:space="preserve">
          <source>sctp</source>
          <target state="translated">sctp</target>
        </trans-unit>
        <trans-unit id="ccbeabcdb73b29c2ff540f83523b3603544d7677" translate="yes" xml:space="preserve">
          <source>sdl</source>
          <target state="translated">sdl</target>
        </trans-unit>
        <trans-unit id="4a54d0ee9d5a78982d16215bdc34d561b219f75c" translate="yes" xml:space="preserve">
          <source>secret (&lt;code&gt;secret=&amp;lt;name or id&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">シークレット（ &lt;code&gt;secret=&amp;lt;name or id&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="fe86558143c0bd528f649a153bdc32b8fa90301c" translate="yes" xml:space="preserve">
          <source>secrets</source>
          <target state="translated">secrets</target>
        </trans-unit>
        <trans-unit id="cc9513decc78bd549d4fee8908b3ca800974c9b1" translate="yes" xml:space="preserve">
          <source>secrets configuration reference</source>
          <target state="translated">シークレットコンフィギュレーションリファレンス</target>
        </trans-unit>
        <trans-unit id="f1d01b68b79d659fdfd5f90226b553af59a1b2ea" translate="yes" xml:space="preserve">
          <source>security_opt</source>
          <target state="translated">security_opt</target>
        </trans-unit>
        <trans-unit id="6a560cddac5324cd5bfecdf9f8651fc9811c9664" translate="yes" xml:space="preserve">
          <source>separate)</source>
          <target state="translated">separate)</target>
        </trans-unit>
        <trans-unit id="f2297f3d0b97f85a6707fe2823565d69460261a2" translate="yes" xml:space="preserve">
          <source>server configuration file</source>
          <target state="translated">サーバ設定ファイル</target>
        </trans-unit>
        <trans-unit id="83710e6d6b56b116f3040b86f4ecc011438314e5" translate="yes" xml:space="preserve">
          <source>server section (required)</source>
          <target state="translated">サーバ部</target>
        </trans-unit>
        <trans-unit id="227126229b72f115eafa85d0a3a5508c26ccda43" translate="yes" xml:space="preserve">
          <source>server-managed keys such as the timestamp key, which provides freshness security guarantees for your repository</source>
          <target state="translated">タイムスタンプキーのようなサーバー管理キーは、リポジトリの鮮度保証を提供します。</target>
        </trans-unit>
        <trans-unit id="ecb64564a0befcc54dbac9f98179f7e912548d17" translate="yes" xml:space="preserve">
          <source>service (&lt;code&gt;--filter service=web&lt;/code&gt;)</source>
          <target state="translated">サービス（ &lt;code&gt;--filter service=web&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="fbe568b1f6e27c22253df1e2920b0a03d3eecba1" translate="yes" xml:space="preserve">
          <source>service (&lt;code&gt;service=&amp;lt;name or id&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">サービス（ &lt;code&gt;service=&amp;lt;name or id&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a1d4a47a5ac6168f80a3b2dd44bb61a95b39f654" translate="yes" xml:space="preserve">
          <source>service create</source>
          <target state="translated">サービスクリエイト</target>
        </trans-unit>
        <trans-unit id="022c525c60da4ee9fa83fbe967557ace98624ef5" translate="yes" xml:space="preserve">
          <source>service inspect</source>
          <target state="translated">サービスインスペクション</target>
        </trans-unit>
        <trans-unit id="fe347338eab469cf46f66e20bcb28bb2bed3a926" translate="yes" xml:space="preserve">
          <source>service ls</source>
          <target state="translated">サービスLS</target>
        </trans-unit>
        <trans-unit id="77a21128cf703bfd059ea6b7c4d35de57fad1662" translate="yes" xml:space="preserve">
          <source>service names that make sense in a given context, such as services with running or stopped instances or services based on images vs. services based on Dockerfiles. For &lt;code&gt;docker-compose scale&lt;/code&gt;, completed service names automatically have &amp;ldquo;=&amp;rdquo; appended.</source>
          <target state="translated">実行中または停止中のインスタンスがあるサービスや、イメージに基づくサービスとDockerfilesに基づくサービスなど、特定のコンテキストで意味のあるサービス名。以下のために &lt;code&gt;docker-compose scale&lt;/code&gt; 、完成サービス名は、自動的に「=」が追加しています。</target>
        </trans-unit>
        <trans-unit id="f72e112da8cbccb5d58d96a0f02bf32f12a4df71" translate="yes" xml:space="preserve">
          <source>service ps</source>
          <target state="translated">サービスピーエス</target>
        </trans-unit>
        <trans-unit id="badf0fc806bed6eaeddb39df6be4a14455b49912" translate="yes" xml:space="preserve">
          <source>service rm</source>
          <target state="translated">サービスルーム</target>
        </trans-unit>
        <trans-unit id="a4a9c8c064fd95202acf54ff724d5d8f3b0d4533" translate="yes" xml:space="preserve">
          <source>service scale</source>
          <target state="translated">サービス規模</target>
        </trans-unit>
        <trans-unit id="c9caafe7d191e8a0e96c17590b6cd4199f30a34d" translate="yes" xml:space="preserve">
          <source>service update</source>
          <target state="translated">サービス更新</target>
        </trans-unit>
        <trans-unit id="edc57a6dad8b7aa766aa1212af80695ec6e165b4" translate="yes" xml:space="preserve">
          <source>serving swarm mode &lt;a href=&quot;https://docs.docker.com/develop/sdk&quot;&gt;HTTP API endpoints&lt;/a&gt;</source>
          <target state="translated">スウォームモードの&lt;a href=&quot;https://docs.docker.com/develop/sdk&quot;&gt;HTTP APIエンドポイントの提供&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="85626de3c03275b5fcb9dcdbb35aa7faf146e667" translate="yes" xml:space="preserve">
          <source>set the docker endpoint</source>
          <target state="translated">docker のエンドポイントを設定します。</target>
        </trans-unit>
        <trans-unit id="215d6bbc93a9f65c2f8b468b10d07341ce61a1f4" translate="yes" xml:space="preserve">
          <source>set the kubernetes endpoint</source>
          <target state="translated">kubernetes エンドポイントを設定します</target>
        </trans-unit>
        <trans-unit id="65127fc20bb7b8ce0b2977cdbdd138fe611874c3" translate="yes" xml:space="preserve">
          <source>sets the current node to &lt;code&gt;Active&lt;/code&gt; availability, meaning it can receive tasks from the scheduler.</source>
          <target state="translated">現在のノードを &lt;code&gt;Active&lt;/code&gt; 可用性に設定します。つまり、ノードはスケジューラからタスクを受信できます。</target>
        </trans-unit>
        <trans-unit id="296bddee9cbd27bfb8ba3a6b60ae721a7792eb19" translate="yes" xml:space="preserve">
          <source>sharing PID or NET namespaces with the host (&lt;code&gt;--pid=host&lt;/code&gt; or &lt;code&gt;--network=host&lt;/code&gt;).</source>
          <target state="translated">ホストとPIDまたはNET名前空間を共有する（ &lt;code&gt;--pid=host&lt;/code&gt; または &lt;code&gt;--network=host&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="077356d3407db0e36851de3caa85eb4cc2dba3fd" translate="yes" xml:space="preserve">
          <source>shellinit</source>
          <target state="translated">shellinit</target>
        </trans-unit>
        <trans-unit id="690007c765d682c4d3c27d3a39ef31e78477d161" translate="yes" xml:space="preserve">
          <source>shm_size</source>
          <target state="translated">shm_size</target>
        </trans-unit>
        <trans-unit id="8638c7fd14b7fa41b75af1f072f7f91fd35075e2" translate="yes" xml:space="preserve">
          <source>signer configuration file</source>
          <target state="translated">署名者設定ファイル</target>
        </trans-unit>
        <trans-unit id="2eb888e95f113117c63e0d526f68ad90267a45e6" translate="yes" xml:space="preserve">
          <source>since</source>
          <target state="translated">since</target>
        </trans-unit>
        <trans-unit id="adfffe5eaa0670207cde2f0a382df274d21147ae" translate="yes" xml:space="preserve">
          <source>since (&lt;code&gt;&amp;lt;image-name&amp;gt;[:&amp;lt;tag&amp;gt;]&lt;/code&gt;, &lt;code&gt;&amp;lt;image id&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;image@digest&amp;gt;&lt;/code&gt;) - filter images created since given id or references</source>
          <target state="translated">since（ &lt;code&gt;&amp;lt;image-name&amp;gt;[:&amp;lt;tag&amp;gt;]&lt;/code&gt; 、 &lt;code&gt;&amp;lt;image id&amp;gt;&lt;/code&gt; または &lt;code&gt;&amp;lt;image@digest&amp;gt;&lt;/code&gt; ）-指定されたIDまたは参照以降に作成された画像をフィルタリングします</target>
        </trans-unit>
        <trans-unit id="4a3550e582560d137ad00ec5ef9e311e7c9d9730" translate="yes" xml:space="preserve">
          <source>slab pages</source>
          <target state="translated">スラブページ</target>
        </trans-unit>
        <trans-unit id="e94025be336b1f89159af64b1f6eda5d470ac8d6" translate="yes" xml:space="preserve">
          <source>snapshot</source>
          <target state="translated">snapshot</target>
        </trans-unit>
        <trans-unit id="6724bbe9902b675183c86414e882c1921497cd97" translate="yes" xml:space="preserve">
          <source>so that that Notary signer knows to encrypt all keys with the passphrase &lt;code&gt;mypassword&lt;/code&gt;, and to decrypt any private key stored with password alias &lt;code&gt;passwordalias1&lt;/code&gt; with the passphrase &lt;code&gt;mypassword&lt;/code&gt;.</source>
          <target state="translated">そのため公証人の署名者は、パスフレーズですべてのキーを暗号化するために知っていることを &lt;code&gt;mypassword&lt;/code&gt; を、およびパスワードの別名で保存されている秘密鍵復号化に &lt;code&gt;passwordalias1&lt;/code&gt; パスフレーズと &lt;code&gt;mypassword&lt;/code&gt; をします。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
