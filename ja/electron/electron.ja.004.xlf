<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="electron">
    <body>
      <group id="electron">
        <trans-unit id="995966e6c20175910f22196dd266f8bc5154a3f3" translate="yes" xml:space="preserve">
          <source>Event: 'updated'</source>
          <target state="translated">イベントが発生します。'更新されました'</target>
        </trans-unit>
        <trans-unit id="c5ae3b222d134285cac1aac21d26c8e851ced680" translate="yes" xml:space="preserve">
          <source>Event: 'web-contents-created'</source>
          <target state="translated">イベントが発生します。'web-contents-created'</target>
        </trans-unit>
        <trans-unit id="88ff9cf6a58d42e3f4e0e1510c4b4126ca7c7f09" translate="yes" xml:space="preserve">
          <source>Event: 'will-attach-webview'</source>
          <target state="translated">イベント。'will-attach-webview'</target>
        </trans-unit>
        <trans-unit id="305197e69d1bbb6e3d791951cded7a230e12a2eb" translate="yes" xml:space="preserve">
          <source>Event: 'will-continue-activity' &lt;em&gt;macOS&lt;/em&gt;</source>
          <target state="translated">イベント： 'will-continue-activity' &lt;em&gt;macOS&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="224f35ab398eb761932c82885d89339c30951963" translate="yes" xml:space="preserve">
          <source>Event: 'will-download'</source>
          <target state="translated">イベント。ダウンロード予定</target>
        </trans-unit>
        <trans-unit id="5bf328bd009a74c5410e09a6c3cfc586e1808ba0" translate="yes" xml:space="preserve">
          <source>Event: 'will-finish-launching'</source>
          <target state="translated">イベントを開催します。'will-finish-launching'</target>
        </trans-unit>
        <trans-unit id="5acba750151c5026a73fb9dd6843b406f4cbcb62" translate="yes" xml:space="preserve">
          <source>Event: 'will-navigate'</source>
          <target state="translated">イベントです。'will-navigate'</target>
        </trans-unit>
        <trans-unit id="40d2598ce0fdbb01d309cae0e7832040e154a1d3" translate="yes" xml:space="preserve">
          <source>Event: 'will-prevent-unload'</source>
          <target state="translated">イベント。'will-prevent-unload'</target>
        </trans-unit>
        <trans-unit id="323ed8640629c76373d154eaefb9032827dca55a" translate="yes" xml:space="preserve">
          <source>Event: 'will-quit'</source>
          <target state="translated">イベントを開催します。辞めます</target>
        </trans-unit>
        <trans-unit id="c091128c2cc84697664f69da9f735b514083ee1f" translate="yes" xml:space="preserve">
          <source>Event: 'window-all-closed'</source>
          <target state="translated">イベント。'window-all-closed'</target>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="31c041967d6140eec241eaee7ac37dab37524808" translate="yes" xml:space="preserve">
          <source>Every app's main process file is specified in the &lt;code&gt;main&lt;/code&gt; property in &lt;code&gt;package.json&lt;/code&gt;. This is how &lt;code&gt;electron .&lt;/code&gt; knows what file to execute at startup.</source>
          <target state="translated">すべてのアプリのメインプロセスファイルは、 &lt;code&gt;package.json&lt;/code&gt; の &lt;code&gt;main&lt;/code&gt; プロパティで指定されます。これはどのように &lt;code&gt;electron .&lt;/code&gt; 起動時に実行するファイルを知っています。</target>
        </trans-unit>
        <trans-unit id="a38435d6bc9be7f6c37b9fefb75e8a2ffab8e165" translate="yes" xml:space="preserve">
          <source>Every pull request is tested on the Continuous Integration (CI) system to confirm that it works on Electron's supported platforms.</source>
          <target state="translated">すべてのプルリクエストは、継続的インテグレーション(CI)システム上でテストされ、Electronのサポートするプラットフォームで動作することを確認します。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="1fabb1683d22d0469c9e9cac437dfd3fa193ab75" translate="yes" xml:space="preserve">
          <source>Example code:</source>
          <target state="translated">コード例。</target>
        </trans-unit>
        <trans-unit id="4312c0d196667d274b37be2ada9008127d0d5796" translate="yes" xml:space="preserve">
          <source>Example of getting a real path from a dragged-onto-the-app file:</source>
          <target state="translated">ドラッグオンザアプリのファイルから実際のパスを取得する例。</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="d43f17e39a48deb85e042478b50aaf24697d443d" translate="yes" xml:space="preserve">
          <source>Examples of commit messages with semantic prefixes:</source>
          <target state="translated">意味的な接頭辞を持つコミットメッセージの例。</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="5580e714c8c2bcdee301e532b1f7e69aa9ebb22e" translate="yes" xml:space="preserve">
          <source>Examples: &quot;.google.com&quot;, &quot;.com&quot;, &quot;&lt;a href=&quot;http://.google.com&quot;&gt;http://.google.com&lt;/a&gt;&quot;</source>
          <target state="translated">例：「.google.com」、「.com」、「&lt;a href=&quot;http://.google.com&quot;&gt;http：//.google.com&lt;/a&gt;」</target>
        </trans-unit>
        <trans-unit id="5add125af3931a2968212be29052de4245883903" translate="yes" xml:space="preserve">
          <source>Examples: &quot;127.0.1&quot;, &quot;[0:0::1]&quot;, &quot;[::1]&quot;, &quot;http://[::1]:99&quot;</source>
          <target state="translated">例)&quot;127.0.0.1 &quot;127.0.0.1&quot;,&quot;[0:0::1]&quot;,&quot;[::1],&quot;http://[::1]:99&quot;</target>
        </trans-unit>
        <trans-unit id="631af215657ac273b156db9dd18c1493b36168bb" translate="yes" xml:space="preserve">
          <source>Examples: &quot;192.168.1.1/16&quot;, &quot;fefe:13::abc/33&quot;.</source>
          <target state="translated">例)&quot;192.168.1.1/16 &quot;192.168.1.1/16&quot;,&quot;fefe:13::abc/33&quot;.</target>
        </trans-unit>
        <trans-unit id="6f4a00d592015b8e3e0b85c73293a684edb1129f" translate="yes" xml:space="preserve">
          <source>Examples: &quot;foobar.com&quot;, &quot;&lt;em&gt;foobar.com&quot;, &quot;&lt;/em&gt;.foobar.com&quot;, &quot;&lt;em&gt;foobar.com:99&quot;, &quot;&lt;a href=&quot;https://x&quot;&gt;https://x&lt;/a&gt;.&lt;/em&gt;.y.com:99&quot;</source>
          <target state="translated">例： &quot;foobar.com&quot;、 &quot; &lt;em&gt;foob​​ar.com&quot;、 &quot;&lt;/em&gt; .foobar.com&quot;、 &quot; &lt;em&gt;foob​​ar.com:99&quot;、 &quot; &lt;a href=&quot;https://x&quot;&gt;https：//でのx&lt;/a&gt;。&lt;/em&gt; .y.com：99&quot;</target>
        </trans-unit>
        <trans-unit id="c2d9551e2b12d915f4919195330ae215fbc42b22" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;copy&lt;/code&gt; in page.</source>
          <target state="translated">ページ内の編集コマンドの &lt;code&gt;copy&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="00bc5db4eeee069096756fd1644887f76eb809b0" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;cut&lt;/code&gt; in page.</source>
          <target state="translated">ページに &lt;code&gt;cut&lt;/code&gt; 編集コマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="ccbbda924e45f6118b8b552daa0b82b7a488e798" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;delete&lt;/code&gt; in page.</source>
          <target state="translated">ページ内の編集コマンド &lt;code&gt;delete&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="3acca9d1f00ee36a78e96320b3150e2601260a20" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;paste&lt;/code&gt; in page.</source>
          <target state="translated">ページに編集コマンドの &lt;code&gt;paste&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="d545a517f9fe12f3be0e891a9b8eb416d2e2eb96" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;pasteAndMatchStyle&lt;/code&gt; in page.</source>
          <target state="translated">ページ内の編集コマンド &lt;code&gt;pasteAndMatchStyle&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="7aaa4ea53a03cbd6eea043d99bf3024bad7ddbb7" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;redo&lt;/code&gt; in page.</source>
          <target state="translated">ページ内の編集コマンドの &lt;code&gt;redo&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="c3f9550816c2719469411609586d51f96f1151a6" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;replace&lt;/code&gt; in page.</source>
          <target state="translated">ページ内の編集コマンド &lt;code&gt;replace&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="1f2c825fece30efe7c633fd90e4a10180af08e99" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;replaceMisspelling&lt;/code&gt; in page.</source>
          <target state="translated">ページ内の編集コマンド &lt;code&gt;replaceMisspelling&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="37686ee6b1340e6a5fdbf0ce9a298da5fe7aa426" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;selectAll&lt;/code&gt; in page.</source>
          <target state="translated">ページ内の編集コマンド &lt;code&gt;selectAll&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="fb9c21383404017bdc5782991a9c014b1825ef09" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;undo&lt;/code&gt; in page.</source>
          <target state="translated">ページで編集コマンドの &lt;code&gt;undo&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="927940fdd81e43defc5ea18ae14a37bdb2ead7c5" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;unselect&lt;/code&gt; in page.</source>
          <target state="translated">ページで &lt;code&gt;unselect&lt;/code&gt; れている編集コマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="fc9babe3164047839e389e91298ad1d4dac2cee2" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;copy&lt;/code&gt; in web page.</source>
          <target state="translated">Webページで編集コマンドの &lt;code&gt;copy&lt;/code&gt; 実行します。</target>
        </trans-unit>
        <trans-unit id="63ee1a60d1e56539e7fd8d73fc2238cb8e670017" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;cut&lt;/code&gt; in web page.</source>
          <target state="translated">Webページに &lt;code&gt;cut&lt;/code&gt; 編集コマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="91f09d7b0162338de4e37dc9d1801a2ff53ec05a" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;delete&lt;/code&gt; in web page.</source>
          <target state="translated">Webページで編集コマンド &lt;code&gt;delete&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="e3768e532ff3028538eb4ee29a692607ac4619bf" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;paste&lt;/code&gt; in web page.</source>
          <target state="translated">編集コマンドをウェブページに &lt;code&gt;paste&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="a50e68032753fa0c9889c1bb29a20b8ab0f19563" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;pasteAndMatchStyle&lt;/code&gt; in web page.</source>
          <target state="translated">Webページで編集コマンド &lt;code&gt;pasteAndMatchStyle&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="e4d8992bb54b83e9089ceea8ead0390b07f386a7" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;redo&lt;/code&gt; in web page.</source>
          <target state="translated">Webページで編集コマンド &lt;code&gt;redo&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="ba22204717a3a5fb87a06159db63e0d249bcab09" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;replace&lt;/code&gt; in web page.</source>
          <target state="translated">Webページで編集コマンド &lt;code&gt;replace&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="0894ebf8c4f9be36d10ca3cb3c6a5148046ffce3" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;replaceMisspelling&lt;/code&gt; in web page.</source>
          <target state="translated">Webページで編集コマンド &lt;code&gt;replaceMisspelling&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="d2f8d6567fa8a752c2e297d44afd66f714fda6af" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;selectAll&lt;/code&gt; in web page.</source>
          <target state="translated">Webページで編集コマンド &lt;code&gt;selectAll&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="44837e55e0ac490d3d2c3e10e0f1d3ea048b6cea" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;undo&lt;/code&gt; in web page.</source>
          <target state="translated">Webページで編集コマンドの &lt;code&gt;undo&lt;/code&gt; 実行します。</target>
        </trans-unit>
        <trans-unit id="95ff6b03dbdc9ff6d6ac679c35352e28f8cc6a2b" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;unselect&lt;/code&gt; in web page.</source>
          <target state="translated">Webページで &lt;code&gt;unselect&lt;/code&gt; れていない編集コマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="5b5874df7dc1eb5e12ec5179c4894d9611dfea17" translate="yes" xml:space="preserve">
          <source>Executing Binaries Inside &lt;code&gt;asar&lt;/code&gt; Archive</source>
          <target state="translated">&lt;code&gt;asar&lt;/code&gt; アーカイブ内でのバイナリの実行</target>
        </trans-unit>
        <trans-unit id="7c212da9b7b08836f30a2f44d7b0b631db17e1a8" translate="yes" xml:space="preserve">
          <source>Exits immediately with &lt;code&gt;exitCode&lt;/code&gt;. &lt;code&gt;exitCode&lt;/code&gt; defaults to 0.</source>
          <target state="translated">&lt;code&gt;exitCode&lt;/code&gt; ですぐに終了します。 &lt;code&gt;exitCode&lt;/code&gt; のデフォルトは0です。</target>
        </trans-unit>
        <trans-unit id="e5a7308aee4bb7cb898c7a91834daec766eb3d8f" translate="yes" xml:space="preserve">
          <source>Experimental features are, as the name suggests, experimental and have not been enabled for all Chromium users. Furthermore, their impact on Electron as a whole has likely not been tested.</source>
          <target state="translated">実験的な機能は、その名の通り実験的なものであり、すべてのChromiumユーザが有効になっているわけではありません。さらに、Electron全体への影響はおそらくテストされていません。</target>
        </trans-unit>
        <trans-unit id="15fc9eab791707cb2be3aa36774b444776b06642" translate="yes" xml:space="preserve">
          <source>Extensions to process object.</source>
          <target state="translated">オブジェクトを処理するための拡張機能です。</target>
        </trans-unit>
        <trans-unit id="36bdb0c4e95eb235a9dae5ec3bc3c0e50ebb1632" translate="yes" xml:space="preserve">
          <source>External Debuggers</source>
          <target state="translated">外部デバッガ</target>
        </trans-unit>
        <trans-unit id="6665ae025d7bfde53cfcf2c9c281e3a277b67fe8" translate="yes" xml:space="preserve">
          <source>Extra Unpacking on Some APIs</source>
          <target state="translated">一部のAPIでの追加アンパック</target>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="a53ac626975f27602b101ee26086bf28679223ca" translate="yes" xml:space="preserve">
          <source>Fake Stat Information of &lt;code&gt;fs.stat&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fs.stat&lt;/code&gt; の偽の統計情報</target>
        </trans-unit>
        <trans-unit id="0e9430a5c15a25c2e0bc6a804e7395a0d585931b" translate="yes" xml:space="preserve">
          <source>Faroese</source>
          <target state="translated">Faroese</target>
        </trans-unit>
        <trans-unit id="ed3bdadf84df50841fa3f667344949be09290c26" translate="yes" xml:space="preserve">
          <source>Fatal internal compiler error: C1001</source>
          <target state="translated">致命的な内部コンパイラ・エラー。C1001</target>
        </trans-unit>
        <trans-unit id="4f5a54627dea26b6876632913ba4f8191aad7605" translate="yes" xml:space="preserve">
          <source>Feature Flags</source>
          <target state="translated">フィーチャーフラッグ</target>
        </trans-unit>
        <trans-unit id="b2e49793fe93779cb01b8dc38d230ea8124b18f9" translate="yes" xml:space="preserve">
          <source>Feature flags are a common practice in Chromium, and are well-established in the web-development ecosystem. In the context of Electron, a feature flag or &lt;strong&gt;soft branch&lt;/strong&gt; must have the following properties:</source>
          <target state="translated">機能フラグはChromiumの一般的な手法であり、Web開発エコシステムで確立されています。Electronのコンテキストでは、機能フラグまたは&lt;strong&gt;ソフトブランチに&lt;/strong&gt;は次のプロパティが必要です。</target>
        </trans-unit>
        <trans-unit id="d4dcd7fef14f742aac1948cca5e3aa19a6d26619" translate="yes" xml:space="preserve">
          <source>Fedora 21</source>
          <target state="translated">フェドラ21</target>
        </trans-unit>
        <trans-unit id="68ef9cadad56547c3404ff7d01f699cf1f121a09" translate="yes" xml:space="preserve">
          <source>Feel free to post a comment in the pull request to ping reviewers if you are awaiting an answer on something. If you encounter words or acronyms that seem unfamiliar, refer to this &lt;a href=&quot;https://sites.google.com/a/chromium.org/dev/glossary&quot;&gt;glossary&lt;/a&gt;.</source>
          <target state="translated">何かの回答を待っている場合は、プルリクエストにpingレビュアーにコメントを投稿してください。聞き慣れない単語や頭字語に遭遇した場合は、この&lt;a href=&quot;https://sites.google.com/a/chromium.org/dev/glossary&quot;&gt;用語集を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="175df75ca866a486722893cf48cbe47ba7932e38" translate="yes" xml:space="preserve">
          <source>Fetch the git submodules:</source>
          <target state="translated">git サブモジュールを取得します。</target>
        </trans-unit>
        <trans-unit id="927b92da1ee917ff26d97054707f38033a5f0818" translate="yes" xml:space="preserve">
          <source>Fetches a path's associated icon.</source>
          <target state="translated">パスに関連付けられたアイコンを取得します。</target>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="246b2f9db7afd4afaa3d5e709533172c78ad8d0e" translate="yes" xml:space="preserve">
          <source>File Object</source>
          <target state="translated">ファイルオブジェクト</target>
        </trans-unit>
        <trans-unit id="7a3acd779d548299a9f1c4a2da5a38f640685def" translate="yes" xml:space="preserve">
          <source>File names should be concatenated with &lt;code&gt;-&lt;/code&gt; instead of &lt;code&gt;_&lt;/code&gt;, e.g. &lt;code&gt;file-name.js&lt;/code&gt; rather than &lt;code&gt;file_name.js&lt;/code&gt;, because in &lt;a href=&quot;https://github.com/github/atom&quot;&gt;github/atom&lt;/a&gt; module names are usually in the &lt;code&gt;module-name&lt;/code&gt; form. This rule only applies to &lt;code&gt;.js&lt;/code&gt; files.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/github/atom&quot;&gt;github / atomでは&lt;/a&gt;モジュール名は通常 &lt;code&gt;module-name&lt;/code&gt; 形式であるため、ファイル名は &lt;code&gt;_&lt;/code&gt; ではなく &lt;code&gt;-&lt;/code&gt; で連結する必要があり &lt;code&gt;file-name.js&lt;/code&gt; 。たとえば、 &lt;code&gt;file_name.js&lt;/code&gt; ではなくfile-name.jsです。このルールは &lt;code&gt;.js&lt;/code&gt; ファイルにのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="7af55e1bfa851e12bdbfb75d7450fac19000151a" translate="yes" xml:space="preserve">
          <source>FileFilter</source>
          <target state="translated">FileFilter</target>
        </trans-unit>
        <trans-unit id="f462d97028e01e1f17e34060a7c99429b205e942" translate="yes" xml:space="preserve">
          <source>FileFilter Object</source>
          <target state="translated">ファイルフィルタオブジェクト</target>
        </trans-unit>
        <trans-unit id="cd9a5554356141790a82e86864449b480ac00a5e" translate="yes" xml:space="preserve">
          <source>Filipino</source>
          <target state="translated">Filipino</target>
        </trans-unit>
        <trans-unit id="131e90e96326989c97e15eca9aa16fac395ba444" translate="yes" xml:space="preserve">
          <source>Finally the &lt;code&gt;index.html&lt;/code&gt; is the web page you want to show:</source>
          <target state="translated">最後に、 &lt;code&gt;index.html&lt;/code&gt; は表示するWebページです。</target>
        </trans-unit>
        <trans-unit id="02b74ef965a4dcee339726db07647fc90cfb8e47" translate="yes" xml:space="preserve">
          <source>Find out filesystem location used by Chrome for storing extensions:</source>
          <target state="translated">Chrome が拡張機能を保存するために使用するファイルシステムの場所を確認します。</target>
        </trans-unit>
        <trans-unit id="b9648adc5da1390634fe986be70082d1a7314302" translate="yes" xml:space="preserve">
          <source>Find out what version change is needed</source>
          <target state="translated">どのようなバージョン変更が必要なのかを確認する</target>
        </trans-unit>
        <trans-unit id="f97c03477f029ec97161fb3249f40975f98cb43e" translate="yes" xml:space="preserve">
          <source>Finding Support</source>
          <target state="translated">サポートを探す</target>
        </trans-unit>
        <trans-unit id="57eef27b1643e8b06fcc0444b2a3519d01b2cef8" translate="yes" xml:space="preserve">
          <source>Finnish</source>
          <target state="translated">Finnish</target>
        </trans-unit>
        <trans-unit id="5e52497e1cdbc228ec84c3a498a510d9eb0a9578" translate="yes" xml:space="preserve">
          <source>Fired when a frame has done navigation.</source>
          <target state="translated">フレームがナビゲーションを行ったときに発生します。</target>
        </trans-unit>
        <trans-unit id="51a13a5d80380bc539de3421f81e3ce28e63bd46" translate="yes" xml:space="preserve">
          <source>Fired when a load has committed. This includes navigation within the current document as well as subframe document-level loads, but does not include asynchronous resource loads.</source>
          <target state="translated">ロードがコミットされたときに発生します。これには、現在のドキュメント内のナビゲーションやサブフレームのドキュメントレベルのロードが含まれますが、非同期のリソースロードは含まれません。</target>
        </trans-unit>
        <trans-unit id="277b75ade0fe25c29d720450d6e66a97fb6cf510" translate="yes" xml:space="preserve">
          <source>Fired when a plugin process is crashed.</source>
          <target state="translated">プラグインプロセスがクラッシュしたときに発生します。</target>
        </trans-unit>
        <trans-unit id="6a0ffe5f413971478388bb78716740c0bc854831" translate="yes" xml:space="preserve">
          <source>Fired when a redirect was received while requesting a resource.</source>
          <target state="translated">リソースのリクエスト中にリダイレクトを受信した場合に発生します。</target>
        </trans-unit>
        <trans-unit id="6e3ac89d8432eea459401b7b1793621958ef5765" translate="yes" xml:space="preserve">
          <source>Fired when a result is available for &lt;a href=&quot;#webviewfindinpagetext-options&quot;&gt;&lt;code&gt;webview.findInPage&lt;/code&gt;&lt;/a&gt; request.</source>
          <target state="translated">結果が&lt;a href=&quot;#webviewfindinpagetext-options&quot;&gt; &lt;code&gt;webview.findInPage&lt;/code&gt; &lt;/a&gt;リクエストで利用可能になると発生します。</target>
        </trans-unit>
        <trans-unit id="52d384e722ca2265adbacfacb3b2c4c7da5b36c0" translate="yes" xml:space="preserve">
          <source>Fired when details regarding a requested resource is available. &lt;code&gt;status&lt;/code&gt; indicates socket connection to download the resource.</source>
          <target state="translated">リクエストされたリソースに関する詳細が利用可能になると発生します。 &lt;code&gt;status&lt;/code&gt; は、リソースをダウンロードするためのソケット接続を示します。</target>
        </trans-unit>
        <trans-unit id="4451d0b8ebb6b9a5a3977344345d786b96cc8075" translate="yes" xml:space="preserve">
          <source>Fired when document in the given frame is loaded.</source>
          <target state="translated">指定されたフレーム内の文書が読み込まれたときに発生します。</target>
        </trans-unit>
        <trans-unit id="f63f99464becc370d140a795365e8fd6b207381a" translate="yes" xml:space="preserve">
          <source>Fired when page enters fullscreen triggered by HTML API.</source>
          <target state="translated">HTML API によってページがフルスクリーンになったときに発生します。</target>
        </trans-unit>
        <trans-unit id="e2934ed79f57401f01947d5576b783caae267c53" translate="yes" xml:space="preserve">
          <source>Fired when page leaves fullscreen triggered by HTML API.</source>
          <target state="translated">HTML API によってページがフルスクリーンから離れたときに発生します。</target>
        </trans-unit>
        <trans-unit id="0570c1500c67e1d7aebc65a98a1b7e823f516360" translate="yes" xml:space="preserve">
          <source>Fired when page receives favicon urls.</source>
          <target state="translated">ページがファビコンのURLを受信したときに発生します。</target>
        </trans-unit>
        <trans-unit id="117e37459607abb65dce79a7c045800ead6888db" translate="yes" xml:space="preserve">
          <source>Fired when page title is set during navigation. &lt;code&gt;explicitSet&lt;/code&gt; is false when title is synthesized from file url.</source>
          <target state="translated">ナビゲーション中にページタイトルが設定されると発生します。タイトルがファイルURLから合成される場合、 &lt;code&gt;explicitSet&lt;/code&gt; はfalseです。</target>
        </trans-unit>
        <trans-unit id="be44199f58d36bd4301154b23d0dcb330ea0d875" translate="yes" xml:space="preserve">
          <source>Fired when the WebContents is destroyed.</source>
          <target state="translated">WebContentsが破壊されたときに発生します。</target>
        </trans-unit>
        <trans-unit id="4c9f296f1d9e1fa51dbae125c7971829e6c0c607" translate="yes" xml:space="preserve">
          <source>Fired when the gpu process is crashed.</source>
          <target state="translated">gpuプロセスがクラッシュしたときに発生します。</target>
        </trans-unit>
        <trans-unit id="10d97ea48a6bad16b15200e1a9908e3087d0cf68" translate="yes" xml:space="preserve">
          <source>Fired when the guest page attempts to close itself.</source>
          <target state="translated">ゲストページが自分自身を閉じようとしたときに発生します。</target>
        </trans-unit>
        <trans-unit id="f369a2095107e692ef2ece44e4987543937640cc" translate="yes" xml:space="preserve">
          <source>Fired when the guest page attempts to open a new browser window.</source>
          <target state="translated">ゲストページが新しいブラウザウィンドウを開こうとしたときに発生します。</target>
        </trans-unit>
        <trans-unit id="f24231d7fc3dfa3fde6a0c2f7d4794cda64c29f8" translate="yes" xml:space="preserve">
          <source>Fired when the guest page has sent an asynchronous message to embedder page.</source>
          <target state="translated">ゲストページがエンベッダーページに非同期メッセージを送信したときに発生します。</target>
        </trans-unit>
        <trans-unit id="ec7f3851082921c42a1028ddac2f7bc640c59467" translate="yes" xml:space="preserve">
          <source>Fired when the guest window logs a console message.</source>
          <target state="translated">ゲストウィンドウがコンソールメッセージを記録したときに発生します。</target>
        </trans-unit>
        <trans-unit id="dd8723914c8724f48e88e5f7cbd957e9107f2781" translate="yes" xml:space="preserve">
          <source>Fired when the navigation is done, i.e. the spinner of the tab will stop spinning, and the &lt;code&gt;onload&lt;/code&gt; event is dispatched.</source>
          <target state="translated">ナビゲーションが完了すると発生します。つまり、タブのスピナーが回転を停止し、 &lt;code&gt;onload&lt;/code&gt; イベントが送出されます。</target>
        </trans-unit>
        <trans-unit id="2129d76f2db58520ccfef9c9d47b3b2327db6bd4" translate="yes" xml:space="preserve">
          <source>Fired when the renderer process is crashed.</source>
          <target state="translated">レンダラプロセスがクラッシュしたときに発生します。</target>
        </trans-unit>
        <trans-unit id="fc1e93fb67c9edaeda6350f0a4f6392669140d9d" translate="yes" xml:space="preserve">
          <source>First please make sure the extension is still being maintained, some extensions can not even work for recent versions of Chrome browser, and we are not able to do anything for them.</source>
          <target state="translated">拡張機能の中には、最近のバージョンのChromeブラウザでは動作しないものもあり、何もできません。</target>
        </trans-unit>
        <trans-unit id="12a0d3bebd41a47a1ebcd202cc5fd6f469240c5a" translate="yes" xml:space="preserve">
          <source>First you need to download the &lt;code&gt;chromedriver&lt;/code&gt; binary, and run it:</source>
          <target state="translated">まず、 &lt;code&gt;chromedriver&lt;/code&gt; バイナリをダウンロードして実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="c97db4162758208ef13df66721f7af8cb0c380b7" translate="yes" xml:space="preserve">
          <source>First, in order to avoid deadlocks, the callbacks passed to the main process are called asynchronously. You should not expect the main process to get the return value of the passed callbacks.</source>
          <target state="translated">まず、デッドロックを避けるために、メインプロセスに渡されたコールバックは非同期に呼び出されます。メインプロセスが渡されたコールバックの戻り値を取得することを期待してはいけません。</target>
        </trans-unit>
        <trans-unit id="34b7a02caa86c50def87d171ced86e2b7a6d85dc" translate="yes" xml:space="preserve">
          <source>First, install &lt;a href=&quot;https://en.wikipedia.org/wiki/Xvfb&quot;&gt;Xvfb&lt;/a&gt;. It's a virtual framebuffer, implementing the X11 display server protocol - it performs all graphical operations in memory without showing any screen output, which is exactly what we need.</source>
          <target state="translated">まず、&lt;a href=&quot;https://en.wikipedia.org/wiki/Xvfb&quot;&gt;Xvfbを&lt;/a&gt;インストールします。これは仮想フレームバッファであり、X11ディスプレイサーバープロトコルを実装しています。画面出力を表示せずにメモリ内ですべてのグラフィック操作を実行します。これはまさに私たちが必要とするものです。</target>
        </trans-unit>
        <trans-unit id="9be1e7185b5c9d3d7dabfa2ff2d7a828031f3d46" translate="yes" xml:space="preserve">
          <source>First, install a recent version of Node.js. Depending on your Linux distribution, the installation steps might differ. Assuming that you normally install software using a package manager like &lt;code&gt;apt&lt;/code&gt; or &lt;code&gt;pacman&lt;/code&gt;, use the official &lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;Node.js guidance on installing on Linux&lt;/a&gt;.</source>
          <target state="translated">まず、Node.jsの最新バージョンをインストールします。Linuxディストリビューションによっては、インストール手順が異なる場合があります。通常、 &lt;code&gt;apt&lt;/code&gt; や &lt;code&gt;pacman&lt;/code&gt; などのパッケージマネージャーを使用してソフトウェアをインストールする場合は&lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;、Linuxへのインストールに関する&lt;/a&gt;公式のNode.jsガイダンスを使用してください。</target>
        </trans-unit>
        <trans-unit id="0af76cb4ec629443cfcf87eae3eddbd49728f097" translate="yes" xml:space="preserve">
          <source>First, install a recent version of Node.js. We recommend that you install either the latest &lt;code&gt;LTS&lt;/code&gt; or &lt;code&gt;Current&lt;/code&gt; version available. Visit &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;the Node.js download page&lt;/a&gt; and select the &lt;code&gt;Windows Installer&lt;/code&gt;. Once downloaded, execute the installer and let the installation wizard guide you through the installation.</source>
          <target state="translated">まず、Node.jsの最新バージョンをインストールします。利用可能な最新の &lt;code&gt;LTS&lt;/code&gt; または &lt;code&gt;Current&lt;/code&gt; バージョンをインストールすることをお勧めします。&lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.jsダウンロードページに&lt;/a&gt;アクセスし、 &lt;code&gt;Windows Installer&lt;/code&gt; を選択します。ダウンロードしたら、インストーラーを実行し、インストールウィザードの指示に従ってインストールしてください。</target>
        </trans-unit>
        <trans-unit id="cc292aedc916ac210a076b2b0186247bdd714b0b" translate="yes" xml:space="preserve">
          <source>First, install a recent version of Node.js. We recommend that you install either the latest &lt;code&gt;LTS&lt;/code&gt; or &lt;code&gt;Current&lt;/code&gt; version available. Visit &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;the Node.js download page&lt;/a&gt; and select the &lt;code&gt;macOS Installer&lt;/code&gt;. While Homebrew is an offered option, but we recommend against it - many tools will be incompatible with the way Homebrew installs Node.js.</source>
          <target state="translated">まず、Node.jsの最新バージョンをインストールします。利用可能な最新の &lt;code&gt;LTS&lt;/code&gt; または &lt;code&gt;Current&lt;/code&gt; バージョンをインストールすることをお勧めします。&lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.jsダウンロードページに&lt;/a&gt;アクセスし、 &lt;code&gt;macOS Installer&lt;/code&gt; を選択します。Homebrewは提供されるオプションですが、推奨されません-多くのツールは、HomebrewがNode.jsをインストールする方法と互換性がありません。</target>
        </trans-unit>
        <trans-unit id="1d7df8cadd80eb18446994d001ea3461e077d6dd" translate="yes" xml:space="preserve">
          <source>First, you have to add a &lt;code&gt;ElectronTeamID&lt;/code&gt; key to your app's &lt;code&gt;Info.plist&lt;/code&gt;, which has your Team ID as value:</source>
          <target state="translated">まず、アプリの &lt;code&gt;Info.plist&lt;/code&gt; に &lt;code&gt;ElectronTeamID&lt;/code&gt; キーを追加する必要があります。これには、値としてチームIDが含まれます。</target>
        </trans-unit>
        <trans-unit id="ca0882e805f3e57f974f180e01085f543e2fb36d" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;*.patch&lt;/code&gt; files in the &lt;code&gt;patches/&lt;/code&gt; and &lt;code&gt;patches-mas/&lt;/code&gt; folders.</source>
          <target state="translated">修正 &lt;code&gt;*.patch&lt;/code&gt; ファイルの中のファイル &lt;code&gt;patches/&lt;/code&gt; および &lt;code&gt;patches-mas/&lt;/code&gt; フォルダ。</target>
        </trans-unit>
        <trans-unit id="3573878e20013b55583b98e25b25480b5f447544" translate="yes" xml:space="preserve">
          <source>Fix build config errors first</source>
          <target state="translated">ビルドコンフィグのエラーを最初に修正</target>
        </trans-unit>
        <trans-unit id="2fd326b2a55bcce8aaf40e5b205a43586f01e477" translate="yes" xml:space="preserve">
          <source>Fix compilation and linking errors</source>
          <target state="translated">コンパイルとリンクのエラーを修正</target>
        </trans-unit>
        <trans-unit id="be472760b1c59aabacb468181805b6d35ea1f4a6" translate="yes" xml:space="preserve">
          <source>Fix fatal errors first, like missing files and errors related to compiler flags or defines</source>
          <target state="translated">ファイルが見つからない、コンパイラフラグや定義に関連したエラーなどの致命的なエラーを最初に修正します。</target>
        </trans-unit>
        <trans-unit id="d1cadd8ae95fff74283ef0e169c388a7747600a6" translate="yes" xml:space="preserve">
          <source>Fix missing binaries of a release manually</source>
          <target state="translated">欠落しているリリースのバイナリを手動で修正</target>
        </trans-unit>
        <trans-unit id="ecdbb9113c4d8c2f61653a2c4c861cc1dc00c823" translate="yes" xml:space="preserve">
          <source>Flash Frame</source>
          <target state="translated">フラッシュフレーム</target>
        </trans-unit>
        <trans-unit id="bd43ec85fdff6518874fb812586a2433706d81d5" translate="yes" xml:space="preserve">
          <source>Focuses on the window.</source>
          <target state="translated">窓にピントを合わせます。</target>
        </trans-unit>
        <trans-unit id="cee144f2d216cdc7631ba053ba3f05f1965d28a6" translate="yes" xml:space="preserve">
          <source>Focuses the child window (brings the window to front).</source>
          <target state="translated">子ウィンドウをフォーカスします(ウィンドウを前面に出します)。</target>
        </trans-unit>
        <trans-unit id="14c6a7fd821dc867b3d84617a634eef0422b84c7" translate="yes" xml:space="preserve">
          <source>Focuses the web page.</source>
          <target state="translated">ウェブページにフォーカスを当てます。</target>
        </trans-unit>
        <trans-unit id="aecd03a4a4b9d532aa63bf7dc404e53645c982b7" translate="yes" xml:space="preserve">
          <source>Follow all the steps above to fix Electron code on all supported platforms.</source>
          <target state="translated">上記の手順に従って、サポートされているすべてのプラットフォームでElectronコードを修正してください。</target>
        </trans-unit>
        <trans-unit id="1c24b5bf867b6e42c0299f9cc8698367f71b90cc" translate="yes" xml:space="preserve">
          <source>Follow the guidelines below for building Electron on Linux.</source>
          <target state="translated">Linux上でElectronを構築するには、以下のガイドラインに従ってください。</target>
        </trans-unit>
        <trans-unit id="5b7fa4ec60b9d247ca93f67ab735d3ef943d7b6a" translate="yes" xml:space="preserve">
          <source>Follow the guidelines below for building Electron on Windows.</source>
          <target state="translated">Windows上にElectronを構築するには、以下のガイドラインに従ってください。</target>
        </trans-unit>
        <trans-unit id="fd80cb5d21b263826159e8667626fffe170c3f97" translate="yes" xml:space="preserve">
          <source>Follow the guidelines below for building Electron on macOS.</source>
          <target state="translated">以下のガイドラインに従って、macOS上でElectronをビルドしてください。</target>
        </trans-unit>
        <trans-unit id="7918e53919f3efaa0dfa15fb15011ba6065eb834" translate="yes" xml:space="preserve">
          <source>Follow the guidelines below for building Electron with the experimental GN build.</source>
          <target state="translated">実験的GNビルドでElectronをビルドするには、以下のガイドラインに従ってください。</target>
        </trans-unit>
        <trans-unit id="921acf758984257599ba401c33220ee705e3803f" translate="yes" xml:space="preserve">
          <source>Following &lt;code&gt;gyp&lt;/code&gt; files contain the main rules for building Electron:</source>
          <target state="translated">以下の &lt;code&gt;gyp&lt;/code&gt; ファイルには、Electronを構築するための主なルールが含まれています。</target>
        </trans-unit>
        <trans-unit id="549cb66a7786a536325eec62186f803c70217c72" translate="yes" xml:space="preserve">
          <source>Following platforms are supported by Electron:</source>
          <target state="translated">Electronがサポートしているプラットフォームは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="c2e6ed1cc1e40ea38253fb9692c1bee87a7a9da6" translate="yes" xml:space="preserve">
          <source>Following suffixes for DPI are also supported:</source>
          <target state="translated">以下のDPIのサフィックスもサポートしています。</target>
        </trans-unit>
        <trans-unit id="7ed62a7bbd3406e1648a659173663fd21604ab49" translate="yes" xml:space="preserve">
          <source>For C++ and Python, we follow Chromium's &lt;a href=&quot;https://www.chromium.org/developers/coding-style&quot;&gt;Coding Style&lt;/a&gt;. You can use &lt;a href=&quot;clang-format&quot;&gt;clang-format&lt;/a&gt; to format the C++ code automatically. There is also a script &lt;code&gt;script/cpplint.py&lt;/code&gt; to check whether all files conform.</source>
          <target state="translated">C ++とPythonについては、Chromiumの&lt;a href=&quot;https://www.chromium.org/developers/coding-style&quot;&gt;コーディングスタイルに&lt;/a&gt;従います。&lt;a href=&quot;clang-format&quot;&gt;clang-format&lt;/a&gt;を使用して、C ++コードを自動的にフォーマットできます。すべてのファイルが準拠しているかどうかを確認するスクリプト &lt;code&gt;script/cpplint.py&lt;/code&gt; もあります。</target>
        </trans-unit>
        <trans-unit id="1111e6b08b7a2e0ce97ca11efe04cef41bea428e" translate="yes" xml:space="preserve">
          <source>For Jenkins, a &lt;a href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/Xvfb+Plugin&quot;&gt;Xvfb plugin is available&lt;/a&gt;.</source>
          <target state="translated">Jenkinsの場合、&lt;a href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/Xvfb+Plugin&quot;&gt;Xvfbプラグインが利用可能です&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e234ecf902399c6ca2e2168815587789055c246" translate="yes" xml:space="preserve">
          <source>For POST requests the &lt;code&gt;uploadData&lt;/code&gt; object must be provided.</source>
          <target state="translated">POSTリクエストの場合、 &lt;code&gt;uploadData&lt;/code&gt; オブジェクトを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="2e94ed3bd242175238f65cecbea47db530efc30e" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;minor&lt;/code&gt; release, e.g. &lt;code&gt;1.8.0&lt;/code&gt;, use this format:</source>
          <target state="translated">&lt;code&gt;1.8.0&lt;/code&gt; などの &lt;code&gt;minor&lt;/code&gt; リリースの場合は、次の形式を使用します。</target>
        </trans-unit>
        <trans-unit id="c3aef3c0a78c4ebdda5b31c717e34be096a56311" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;patch&lt;/code&gt; release, use the following format:</source>
          <target state="translated">以下のため &lt;code&gt;patch&lt;/code&gt; リリースで、次の形式を使用します。</target>
        </trans-unit>
        <trans-unit id="fc84c5b30853e927ab61c178eca9058bf3442a18" translate="yes" xml:space="preserve">
          <source>For a complex app, the &lt;code&gt;ready-to-show&lt;/code&gt; event could be emitted too late, making the app feel slow. In this case, it is recommended to show the window immediately, and use a &lt;code&gt;backgroundColor&lt;/code&gt; close to your app's background:</source>
          <target state="translated">複雑なアプリの場合、 &lt;code&gt;ready-to-show&lt;/code&gt; できるイベントが遅すぎてアプリが遅く感じられる可能性があります。この場合、ウィンドウをすぐに表示し、アプリの背景に近い &lt;code&gt;backgroundColor&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="22fe9873a98adb59030dea1269d80e54827cd0a8" translate="yes" xml:space="preserve">
          <source>For a list of boilerplates and tools to kick-start your development process, see the &lt;a href=&quot;boilerplates-and-clis&quot;&gt;Boilerplates and CLIs documentation&lt;/a&gt;.</source>
          <target state="translated">開発プロセスを開始するためのボイラープレートとツールのリストについては、ボイラープレート&lt;a href=&quot;boilerplates-and-clis&quot;&gt;とCLIのドキュメントを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="d588bcee88995a0c7fae3327f86fa8df139ed0a0" translate="yes" xml:space="preserve">
          <source>For an introduction to ProcMon's basic and advanced debugging features, go check out &lt;a href=&quot;https://channel9.msdn.com/shows/defrag-tools/defrag-tools-4-process-monitor&quot;&gt;this video tutorial&lt;/a&gt; provided by Microsoft.</source>
          <target state="translated">ProcMonの基本的なデバッグ機能と高度なデバッグ機能の概要については、Microsoftが提供する&lt;a href=&quot;https://channel9.msdn.com/shows/defrag-tools/defrag-tools-4-process-monitor&quot;&gt;このビデオチュートリアル&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="20758183c3e1338dc8a6b93162460ce862ff75d3" translate="yes" xml:space="preserve">
          <source>For any issue, there are fundamentally three ways an individual can contribute:</source>
          <target state="translated">どのような課題に対しても、個人が貢献できる方法は基本的に3つあります。</target>
        </trans-unit>
        <trans-unit id="c36476d109a6eac638160d47ed71c4848f206bb8" translate="yes" xml:space="preserve">
          <source>For certain events the &lt;code&gt;listener&lt;/code&gt; is passed with a &lt;code&gt;callback&lt;/code&gt;, which should be called with a &lt;code&gt;response&lt;/code&gt; object when &lt;code&gt;listener&lt;/code&gt; has done its work.</source>
          <target state="translated">特定のイベントでは、 &lt;code&gt;listener&lt;/code&gt; は &lt;code&gt;callback&lt;/code&gt; で渡されます。コールバックは、 &lt;code&gt;listener&lt;/code&gt; が作業を行ったときに &lt;code&gt;response&lt;/code&gt; オブジェクトで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="502cf085450be5d6d8a56eda1a567fd820d5644e" translate="yes" xml:space="preserve">
          <source>For certain features (e.g. pinch-zoom) to work properly, you must target the macOS 10.10 SDK.</source>
          <target state="translated">特定の機能(ピンチズームなど)を正しく動作させるには、macOS 10.10 SDKをターゲットにする必要があります。</target>
        </trans-unit>
        <trans-unit id="f55316ce3b72dc39959ab1636a82f40fea730083" translate="yes" xml:space="preserve">
          <source>For convenience, you may want to wrap &lt;code&gt;appProcess&lt;/code&gt; in a driver object that provides more high-level functions. Here is an example of how you can do this:</source>
          <target state="translated">便宜上、より高レベルの関数を提供するドライバーオブジェクトで &lt;code&gt;appProcess&lt;/code&gt; をラップすることができます。これを行う方法の例を次に示します。</target>
        </trans-unit>
        <trans-unit id="6265093784bd7dbf5e19bb812e72dae142bf8944" translate="yes" xml:space="preserve">
          <source>For each major and minor bump, you should expect to see something like the following:</source>
          <target state="translated">メジャーバンプとマイナーバンプのそれぞれについて、以下のようなものが表示されることを期待してください。</target>
        </trans-unit>
        <trans-unit id="58abffa9ea34b3901414814791108b8b1b94cc23" translate="yes" xml:space="preserve">
          <source>For each patch, do:</source>
          <target state="translated">各パッチについては、実行してください。</target>
        </trans-unit>
        <trans-unit id="83edd08299e575573bc5493f6bc769dea6d6a6c1" translate="yes" xml:space="preserve">
          <source>For each patch:</source>
          <target state="translated">各パッチのために。</target>
        </trans-unit>
        <trans-unit id="7e1e492e1ff102dacf9ee3206f3207099b0d6167" translate="yes" xml:space="preserve">
          <source>For example building with GCC toolchain:</source>
          <target state="translated">例えば、GCCツールチェーンを使って構築します。</target>
        </trans-unit>
        <trans-unit id="065f28411e5112140feb1dde5f9794fa00a0584d" translate="yes" xml:space="preserve">
          <source>For example if &lt;code&gt;icon.png&lt;/code&gt; is a normal image that has standard resolution, then &lt;code&gt;icon@2x.png&lt;/code&gt; will be treated as a high resolution image that has double DPI density.</source>
          <target state="translated">たとえば、 &lt;code&gt;icon.png&lt;/code&gt; が標準解像度の通常の画像である場合、 &lt;code&gt;icon@2x.png&lt;/code&gt; は、DPI密度が2倍の高解像度画像として扱われます。</target>
        </trans-unit>
        <trans-unit id="7c473301f00f572dccbc6dcc4c5399d4e0ed0ace" translate="yes" xml:space="preserve">
          <source>For example if you installed &lt;code&gt;clang&lt;/code&gt; under &lt;code&gt;/user/local/bin/clang&lt;/code&gt;:</source>
          <target state="translated">たとえば、 &lt;code&gt;/user/local/bin/clang&lt;/code&gt; の下に &lt;code&gt;clang&lt;/code&gt; をインストールした場合：</target>
        </trans-unit>
        <trans-unit id="ba48d1140902ffdcb02cd8e0d7757e695bd35f62" translate="yes" xml:space="preserve">
          <source>For example when you load following page with custom protocol without registering it as standard scheme, the image will not be loaded because non-standard schemes can not recognize relative URLs:</source>
          <target state="translated">例えば、標準スキームに登録せずにカスタムプロトコルで以下のページを読み込むと、非標準スキームでは相対URLを認識できないため、画像は読み込まれません。</target>
        </trans-unit>
        <trans-unit id="493ec61d1e04b47a4387b0ca5addeea25d2a2575" translate="yes" xml:space="preserve">
          <source>For example, Windows Media Player might offer standard media transport controls such as play, pause, mute, and stop.</source>
          <target state="translated">例えば、Windows Media Playerは、再生、一時停止、ミュート、停止などの標準的なメディアトランスポートコントロールを提供しているかもしれません。</target>
        </trans-unit>
        <trans-unit id="3494f8de5fe0b0ecf247fa44514610b6a4b5dc01" translate="yes" xml:space="preserve">
          <source>For example, an API calling A requests for &lt;code&gt;prevent-app-suspension&lt;/code&gt;, and another calling B requests for &lt;code&gt;prevent-display-sleep&lt;/code&gt;. &lt;code&gt;prevent-display-sleep&lt;/code&gt; will be used until B stops its request. After that, &lt;code&gt;prevent-app-suspension&lt;/code&gt; is used.</source>
          <target state="translated">たとえば、Aを呼び出すAPIが &lt;code&gt;prevent-app-suspension&lt;/code&gt; をリクエストし、別のAPIを呼び出すBが &lt;code&gt;prevent-display-sleep&lt;/code&gt; をリクエストします。 &lt;code&gt;prevent-display-sleep&lt;/code&gt; は、Bが要求を停止するまで使用されます。その後、 &lt;code&gt;prevent-app-suspension&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="9c1f50d21d4007f1d24f2deda38646ce1693771a" translate="yes" xml:space="preserve">
          <source>For example, suppose we have an &lt;code&gt;example.asar&lt;/code&gt; archive under &lt;code&gt;/path/to&lt;/code&gt;:</source>
          <target state="translated">たとえば、 &lt;code&gt;/path/to&lt;/code&gt; の下に &lt;code&gt;example.asar&lt;/code&gt; アーカイブがあるとします。</target>
        </trans-unit>
        <trans-unit id="e6543b5df66545d392593abae27aaf4d3618aaa2" translate="yes" xml:space="preserve">
          <source>For example, the following code seems innocent at first glance. It installs a callback for the &lt;code&gt;close&lt;/code&gt; event on a remote object:</source>
          <target state="translated">たとえば、次のコードは一見無害に見えます。リモートオブジェクトに &lt;code&gt;close&lt;/code&gt; イベントのコールバックをインストールします。</target>
        </trans-unit>
        <trans-unit id="b2c330e45eb22f06fc0ae8f33da09f6bd6a525e6" translate="yes" xml:space="preserve">
          <source>For example, to get a file with &lt;code&gt;$.get&lt;/code&gt;:</source>
          <target state="translated">たとえば、 &lt;code&gt;$.get&lt;/code&gt; ファイルを取得するには：</target>
        </trans-unit>
        <trans-unit id="49a277e10dfd7299cf73cfb6c1f4de56cad0bbf3" translate="yes" xml:space="preserve">
          <source>For example, when creating a tray or setting a window's icon, you can pass an image file path as a &lt;code&gt;String&lt;/code&gt;:</source>
          <target state="translated">たとえば、トレイを作成するとき、またはウィンドウのアイコンを設定するときに、イメージファイルのパスを &lt;code&gt;String&lt;/code&gt; として渡すことができます。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="dc165346dfd2f10c3f19f087c010877da49b91ef" translate="yes" xml:space="preserve">
          <source>For information on how to properly disclose an Electron vulnerability, see &lt;a href=&quot;https://github.com/electron/electron/tree/master/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt;</source>
          <target state="translated">Electronの脆弱性を適切に開示する方法については、&lt;a href=&quot;https://github.com/electron/electron/tree/master/SECURITY.md&quot;&gt;SECURITY.mdを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="26000534d32ef52933841a528d4d8361afeb23a6" translate="yes" xml:space="preserve">
          <source>For instance you can't use a function from the renderer process in an &lt;code&gt;Array.map&lt;/code&gt; called in the main process:</source>
          <target state="translated">たとえば、メインプロセスで呼び出された &lt;code&gt;Array.map&lt;/code&gt; でレンダラープロセスの関数を使用することはできません。</target>
        </trans-unit>
        <trans-unit id="21d1e0d87b298c57a74a76988b09ab848fb4f7af" translate="yes" xml:space="preserve">
          <source>For instance, Electron uses Chromium's rendering library rather than all of Chromium. This makes it easier to upgrade Chromium but also means some browser features found in Google Chrome do not exist in Electron.</source>
          <target state="translated">例えば、ElectronはChromiumのすべてではなく、Chromiumのレンダリングライブラリを使用しています。これにより、Chromium のアップグレードが容易になりますが、Google Chrome に見られるいくつかのブラウザ機能が Electron には存在しないことになります。</target>
        </trans-unit>
        <trans-unit id="85f3a1e5e439ec3b7f4fca1ecd7c8de55b68620e" translate="yes" xml:space="preserve">
          <source>For instance, the following example quickly shows how the &lt;code&gt;net&lt;/code&gt; API might be used:</source>
          <target state="translated">たとえば、次の例は、 &lt;code&gt;net&lt;/code&gt; APIの使用方法をすばやく示しています。</target>
        </trans-unit>
        <trans-unit id="248c4264fd961b911b66e5010fd921898cf7d57a" translate="yes" xml:space="preserve">
          <source>For instance, to use the China mirror:</source>
          <target state="translated">例えば、チャイナミラーを使うとか。</target>
        </trans-unit>
        <trans-unit id="253f8917506432b3ee4474e59a0b7110f22e5749" translate="yes" xml:space="preserve">
          <source>For instance, we could have created the same request to 'github.com' as follows:</source>
          <target state="translated">例えば、以下のように'github.com'に対して同じリクエストを作成することができます。</target>
        </trans-unit>
        <trans-unit id="f1c45df08669248a19de97849fd5f55d5638340a" translate="yes" xml:space="preserve">
          <source>For instructions on how to acquire a Google API key, visit &lt;a href=&quot;https://www.chromium.org/developers/how-tos/api-keys&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="translated">Google APIキーを取得する方法については、&lt;a href=&quot;https://www.chromium.org/developers/how-tos/api-keys&quot;&gt;このページ&lt;/a&gt;にアクセスしてください。</target>
        </trans-unit>
        <trans-unit id="243e0173737239b628ca89b755eb49cb3a3707d3" translate="yes" xml:space="preserve">
          <source>For keyboard events, the &lt;code&gt;event&lt;/code&gt; object also have following properties:</source>
          <target state="translated">キーボードイベントの場合、 &lt;code&gt;event&lt;/code&gt; オブジェクトには次のプロパティもあります。</target>
        </trans-unit>
        <trans-unit id="12ce8d2e3bf4689b50d95cab569ba2b0adf45656" translate="yes" xml:space="preserve">
          <source>For more info, see the &lt;a href=&quot;mac-app-store-submission-guide&quot;&gt;Mac App Store Submission Guide&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;mac-app-store-submission-guide&quot;&gt;Mac App Store Submission Guideを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="72310bb077b7a4aabe4c2bd84e6c77d6e4541848" translate="yes" xml:space="preserve">
          <source>For more information on the available configuration options, see the &lt;a href=&quot;https://docs.snapcraft.io/build-snaps/syntax&quot;&gt;documentation on the snapcraft syntax&lt;/a&gt;. Let's look at an example:</source>
          <target state="translated">使用可能な構成オプションの詳細については&lt;a href=&quot;https://docs.snapcraft.io/build-snaps/syntax&quot;&gt;、snapcraft構文に関するドキュメントを&lt;/a&gt;参照してください。例を見てみましょう：</target>
        </trans-unit>
        <trans-unit id="a49cdb56dde81924b746254a7f24e97ae73d88e0" translate="yes" xml:space="preserve">
          <source>For more information, please see the &lt;a href=&quot;tutorial/security&quot;&gt;security introduction&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;tutorial/security&quot;&gt;セキュリティの&lt;/a&gt;概要をご覧ください。</target>
        </trans-unit>
        <trans-unit id="2af1bafb37e1efc8e25030cb405ee2425e632d82" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;debugging-main-process&quot;&gt;Debugging the Main Process documentation&lt;/a&gt;.</source>
          <target state="translated">詳細については&lt;a href=&quot;debugging-main-process&quot;&gt;、メインプロセス&lt;/a&gt;のデバッグのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="41cd0116e7dd1d6789182cceddbd7400a085cc79" translate="yes" xml:space="preserve">
          <source>For mouse events, the &lt;code&gt;event&lt;/code&gt; object also have following properties:</source>
          <target state="translated">マウスイベントの場合、 &lt;code&gt;event&lt;/code&gt; オブジェクトには次のプロパティもあります。</target>
        </trans-unit>
        <trans-unit id="55c6af6d16985648f77a3161d644bf54c2338ed4" translate="yes" xml:space="preserve">
          <source>For other non-module APIs, use natural titles, like &lt;code&gt;&amp;lt;webview&amp;gt; Tag&lt;/code&gt; or &lt;code&gt;Process Object&lt;/code&gt;.</source>
          <target state="translated">他の非モジュールAPIの場合は、 &lt;code&gt;&amp;lt;webview&amp;gt; Tag&lt;/code&gt; や &lt;code&gt;Process Object&lt;/code&gt; などの自然なタイトルを使用します。</target>
        </trans-unit>
        <trans-unit id="874be508e5c6c8bb81ba63b5d40f3aa79ddc3ebe" translate="yes" xml:space="preserve">
          <source>For setting up a server to accept and process crash reports, you can use following projects:</source>
          <target state="translated">クラッシュレポートを受け付けて処理するサーバを設定するには、以下のプロジェクトを使用します。</target>
        </trans-unit>
        <trans-unit id="893021d623407b15b31b3974ad7dd84b9b512520" translate="yes" xml:space="preserve">
          <source>For some cases like verifying the &lt;code&gt;asar&lt;/code&gt; archive's checksum, we need to read the content of an &lt;code&gt;asar&lt;/code&gt; archive as a file. For this purpose you can use the built-in &lt;code&gt;original-fs&lt;/code&gt; module which provides original &lt;code&gt;fs&lt;/code&gt; APIs without &lt;code&gt;asar&lt;/code&gt; support:</source>
          <target state="translated">検証のようないくつかの例について &lt;code&gt;asar&lt;/code&gt; アーカイブのチェックサムを、我々はの内容読む必要は &lt;code&gt;asar&lt;/code&gt; ファイルとしてアーカイブを。この目的のために、 &lt;code&gt;asar&lt;/code&gt; サポートなしで元の &lt;code&gt;fs&lt;/code&gt; API を提供する組み込みの &lt;code&gt;original-fs&lt;/code&gt; モジュールを使用できます。</target>
        </trans-unit>
        <trans-unit id="b835b6381166067c2c6c297fb53d050596f4659d" translate="yes" xml:space="preserve">
          <source>For some operations, such as streaming media using RTMP, it is necessary to grant wider permissions to players&amp;rsquo; &lt;code&gt;.swf&lt;/code&gt; files. One way of accomplishing this, is to use &lt;a href=&quot;https://github.com/szwacz/nw-flash-trust&quot;&gt;nw-flash-trust&lt;/a&gt;.</source>
          <target state="translated">RTMPを使用したメディアのストリーミングなどの一部の操作では、プレーヤーの &lt;code&gt;.swf&lt;/code&gt; ファイルに幅広い権限を付与する必要があります。これを実現する1つの方法は、&lt;a href=&quot;https://github.com/szwacz/nw-flash-trust&quot;&gt;nw-flash-trust&lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="4bca33f19785ae50790d03e5e8b8f9fa3f8e8940" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;mouseWheel&lt;/code&gt; event, the &lt;code&gt;event&lt;/code&gt; object also have following properties:</source>
          <target state="translated">以下のため &lt;code&gt;mouseWheel&lt;/code&gt; イベント、 &lt;code&gt;event&lt;/code&gt; オブジェクトは、次のプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="42cf0bcb717e6e1c5bc2bab69a7555abd5c7050c" translate="yes" xml:space="preserve">
          <source>Force closing the view, the &lt;code&gt;unload&lt;/code&gt; and &lt;code&gt;beforeunload&lt;/code&gt; events won't be emitted for the web page. After you're done with a view, call this function in order to free memory and other resources as soon as possible.</source>
          <target state="translated">ビューを強制的に閉じると、Webページに対して &lt;code&gt;unload&lt;/code&gt; イベントと &lt;code&gt;beforeunload&lt;/code&gt; イベントが発行されません。ビューを使い終わったら、この関数を呼び出して、メモリやその他のリソースをできるだけ早く解放します。</target>
        </trans-unit>
        <trans-unit id="41c34d9172157555e51609e1dd9cdae11457b4a8" translate="yes" xml:space="preserve">
          <source>Force closing the window, the &lt;code&gt;unload&lt;/code&gt; and &lt;code&gt;beforeunload&lt;/code&gt; event won't be emitted for the web page, and &lt;code&gt;close&lt;/code&gt; event will also not be emitted for this window, but it guarantees the &lt;code&gt;closed&lt;/code&gt; event will be emitted.</source>
          <target state="translated">力は、ウィンドウを閉じ、 &lt;code&gt;unload&lt;/code&gt; および &lt;code&gt;beforeunload&lt;/code&gt; イベントは、Webページのために放出されることはないだろう、と &lt;code&gt;close&lt;/code&gt; イベントも、このウィンドウのために放出されることはありませんが、それは保証 &lt;code&gt;closed&lt;/code&gt; イベントが放出されます。</target>
        </trans-unit>
        <trans-unit id="8a6a94c0656419d75d09c1f47735e377b3dc71eb" translate="yes" xml:space="preserve">
          <source>Forcefully closes the child window without calling its unload event.</source>
          <target state="translated">アンロードイベントを呼び出さずに子ウィンドウを強制的に閉じます。</target>
        </trans-unit>
        <trans-unit id="11ec4772862b480bc0d4330e63394f4c0dd82ef7" translate="yes" xml:space="preserve">
          <source>Forces the maximum disk space to be used by the disk cache, in bytes.</source>
          <target state="translated">ディスクキャッシュが使用する最大ディスク容量をバイト単位で強制的に指定します。</target>
        </trans-unit>
        <trans-unit id="ffda46761bf18cf0dd922e7a16c1a3454103fb87" translate="yes" xml:space="preserve">
          <source>Forge comes with &lt;a href=&quot;https://electronforge.io/templates&quot;&gt;ready-to-use templates&lt;/a&gt; for popular frameworks like React, Vue, or Angular. It uses the same core modules used by the greater Electron community (like &lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt;&lt;code&gt;electron-packager&lt;/code&gt;&lt;/a&gt;) &amp;ndash; changes made by Electron maintainers (like Slack) benefit Forge's users, too.</source>
          <target state="translated">Forgeには、React、Vue、Angularなどの一般的なフレームワーク用の&lt;a href=&quot;https://electronforge.io/templates&quot;&gt;すぐに使用できるテンプレート&lt;/a&gt;が付属しています。それは、より大きいエレクトロンコミュニティ（&lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt; &lt;code&gt;electron-packager&lt;/code&gt; など&lt;/a&gt;）で使用されているものと同じコアモジュールを使用しています。</target>
        </trans-unit>
        <trans-unit id="a640134df49a1d7ac759c390662f71687021a130" translate="yes" xml:space="preserve">
          <source>Fork the project &lt;a href=&quot;https://github.com/electron/electron&quot;&gt;on GitHub&lt;/a&gt; and clone your fork locally.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron/electron&quot;&gt;GitHub&lt;/a&gt;でプロジェクトをフォークし、ローカルでフォークのクローンを作成します。</target>
        </trans-unit>
        <trans-unit id="d735aafe3953821674bcc047eed0a464f448083f" translate="yes" xml:space="preserve">
          <source>Forwarding</source>
          <target state="translated">Forwarding</target>
        </trans-unit>
        <trans-unit id="048394d7b70f10b345e72c4c9fdb7401b26faee6" translate="yes" xml:space="preserve">
          <source>Frameless Window</source>
          <target state="translated">フレームレスウィンドウ</target>
        </trans-unit>
        <trans-unit id="17a56f23cb49369abb90876a7fc79db233cbec85" translate="yes" xml:space="preserve">
          <source>Frameless window</source>
          <target state="translated">フレームレスウィンドウ</target>
        </trans-unit>
        <trans-unit id="44389f6a466eaabf5c1db729e369511134e2b03b" translate="yes" xml:space="preserve">
          <source>French</source>
          <target state="translated">French</target>
        </trans-unit>
        <trans-unit id="33f0ca3b78634f70f34727200cfe101d4f639b17" translate="yes" xml:space="preserve">
          <source>French (Canada)</source>
          <target state="translated">フランス語(カナダ</target>
        </trans-unit>
        <trans-unit id="950e3b8444abd67e768a641c20181ffe0042529b" translate="yes" xml:space="preserve">
          <source>French (France)</source>
          <target state="translated">フレンチ</target>
        </trans-unit>
        <trans-unit id="d4e7895fbc7b89b31127508cafb2663fdb083fa2" translate="yes" xml:space="preserve">
          <source>French (Switzerland)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f09db2793c736909bd6c37b71f7a0bc8a0f19ae" translate="yes" xml:space="preserve">
          <source>Frisian</source>
          <target state="translated">Frisian</target>
        </trans-unit>
        <trans-unit id="0ff10501f7e66c9f19bf9c4babdd10ca579ce254" translate="yes" xml:space="preserve">
          <source>From 2.0 onward, Electron will follow semver.</source>
          <target state="translated">2.0以降、Electronはsemverに従うことになります。</target>
        </trans-unit>
        <trans-unit id="c3a8674a8d599ddfc6957634e4c486efbfebd3ff" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/&quot;&gt;ChromeDriver - WebDriver for Chrome&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/&quot;&gt;ChromeDriver&lt;/a&gt;から-Chrome用WebDriver：</target>
        </trans-unit>
        <trans-unit id="2913aab19780bda8d7bb89f9e9bccc9c50a55e58" translate="yes" xml:space="preserve">
          <source>From Electron 2.0 on, developers will see warnings and recommendations printed to the developer console. They only show up when the binary's name is Electron, indicating that a developer is currently looking at the console.</source>
          <target state="translated">Electron 2.0 以降、開発者は開発者コンソールに警告と推奨事項が表示されるようになりました。これはバイナリの名前がElectronの場合にのみ表示され、開発者が現在コンソールを見ていることを示しています。</target>
        </trans-unit>
        <trans-unit id="4a3e35689697ec190cd2fb0c4be0d315bd4c2251" translate="yes" xml:space="preserve">
          <source>From Electron root's root, run &lt;code&gt;script/update.py&lt;/code&gt;</source>
          <target state="translated">Electronルートのルートから、 &lt;code&gt;script/update.py&lt;/code&gt; を実行します</target>
        </trans-unit>
        <trans-unit id="4c958b0e9d4b9e2e2a54c9e8c8cd51e301fc6448" translate="yes" xml:space="preserve">
          <source>From MSDN, it's illustrated:</source>
          <target state="translated">MSDNより、イラスト入りです。</target>
        </trans-unit>
        <trans-unit id="a4394da6bd07f1ee0042ce07dda3d202ffb90075" translate="yes" xml:space="preserve">
          <source>From a terminal that has &lt;code&gt;snapcraft&lt;/code&gt; in its &lt;code&gt;PATH&lt;/code&gt;, run &lt;code&gt;electron-installer-snap&lt;/code&gt; with the only required parameter &lt;code&gt;--src&lt;/code&gt;, which is the location of your packaged Electron application created in the first step.</source>
          <target state="translated">&lt;code&gt;PATH&lt;/code&gt; に &lt;code&gt;snapcraft&lt;/code&gt; が含まれている端末から、必須のパラメーター &lt;code&gt;--src&lt;/code&gt; のみを使用して &lt;code&gt;electron-installer-snap&lt;/code&gt; を実行します。これは、最初の手順で作成したパッケージ化されたElectronアプリケーションの場所です。</target>
        </trans-unit>
        <trans-unit id="e5b99d0a24b6837e0fdb16a7b9dadc5b38ac1363" translate="yes" xml:space="preserve">
          <source>From an elevated PowerShell (run it &quot;as Administrator&quot;), run &lt;code&gt;electron-windows-store&lt;/code&gt; with the required parameters, passing both the input and output directories, the app's name and version, and confirmation that &lt;code&gt;node_modules&lt;/code&gt; should be flattened.</source>
          <target state="translated">昇格したPowerShell（「管理者」として実行）から、必須パラメーターを指定して &lt;code&gt;electron-windows-store&lt;/code&gt; を実行し、入力ディレクトリと出力ディレクトリの両方、アプリの名前とバージョン、および &lt;code&gt;node_modules&lt;/code&gt; をフラット化する必要があることの確認を渡します。</target>
        </trans-unit>
        <trans-unit id="734f49b3b8a88010f69b244bff01621f449f9ac4" translate="yes" xml:space="preserve">
          <source>From within GitHub, opening a new pull request will present you with a template that should be filled out:</source>
          <target state="translated">GitHub から新しいプルリクエストを開くと、記入すべきテンプレートが表示されます。</target>
        </trans-unit>
        <trans-unit id="2131cc39138eced8836ed354bc7b8c3289d46bc7" translate="yes" xml:space="preserve">
          <source>From within the Electron app, you can listen for messages and send replies using the nodejs &lt;a href=&quot;https://nodejs.org/api/process.html&quot;&gt;process&lt;/a&gt; API:</source>
          <target state="translated">Electronアプリ内から、nodejs &lt;a href=&quot;https://nodejs.org/api/process.html&quot;&gt;プロセス&lt;/a&gt; API を使用してメッセージをリッスンし、返信を送信できます。</target>
        </trans-unit>
        <trans-unit id="bafd4b54282745a2bed1442852b73f4b3189a77a" translate="yes" xml:space="preserve">
          <source>Further Reading</source>
          <target state="translated">続きを読む</target>
        </trans-unit>
        <trans-unit id="5bdf7278fcea3b5007a7f31401ae7da8c28c2e82" translate="yes" xml:space="preserve">
          <source>Furthermore, in Windows 8, the maximum length for the notification body is 250 characters, with the Windows team recommending that notifications should be kept to 200 characters. That said, that limitation has been removed in Windows 10, with the Windows team asking developers to be reasonable. Attempting to send gigantic amounts of text to the API (thousands of characters) might result in instability.</source>
          <target state="translated">さらに、Windows 8 では、通知の本文の最大長は 250 文字で、Windows チームは通知を 200 文字に抑えることを推奨しています。しかし、Windows 10 ではこの制限は削除されており、Windows チームは開発者に合理的であることを求めています。API に巨大な量のテキスト (数千文字)を送信しようとすると、不安定になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="1db4aba2bc9d400d5e75f5473ff811cd819a436d" translate="yes" xml:space="preserve">
          <source>GOOGLE_API_KEY</source>
          <target state="translated">GOOGLE_API_KEY</target>
        </trans-unit>
        <trans-unit id="3ee288cccc04fc78b1de48dba8362ca4f281d5e7" translate="yes" xml:space="preserve">
          <source>GPU accelerated</source>
          <target state="translated">GPU加速化</target>
        </trans-unit>
        <trans-unit id="63e7c142f025c95ec8531acfd0d122a163cb6b1f" translate="yes" xml:space="preserve">
          <source>GPU accelerated rendering means that the GPU is used for composition. Because of that the frame has to be copied from the GPU which requires more performance, thus this mode is quite a bit slower than the other one. The benefit of this mode that WebGL and 3D CSS animations are supported.</source>
          <target state="translated">GPUアクセラレーションレンダリングは、GPUをコンポジションに使用することを意味します。そのため、フレームはGPUからコピーされなければならず、より多くのパフォーマンスを必要とするため、このモードは他のモードに比べてかなり遅くなります。このモードの利点は、WebGLと3D CSSアニメーションがサポートされていることです。</target>
        </trans-unit>
        <trans-unit id="27e0642d3d0283fa0d1d5b490eeb105437323129" translate="yes" xml:space="preserve">
          <source>GPUFeatureStatus</source>
          <target state="translated">GPUFeatureStatus</target>
        </trans-unit>
        <trans-unit id="1fae790cf35d61c88e97f17c988718c8de99c880" translate="yes" xml:space="preserve">
          <source>GPUFeatureStatus Object</source>
          <target state="translated">GPUFeatureStatus オブジェクト</target>
        </trans-unit>
        <trans-unit id="ccece2966ff8b4cb279897a70ef4ca32da17c0cd" translate="yes" xml:space="preserve">
          <source>Galician</source>
          <target state="translated">Galician</target>
        </trans-unit>
        <trans-unit id="63f15e2cad489c7f65563ae7617fe47ac16f9b26" translate="yes" xml:space="preserve">
          <source>General Code</source>
          <target state="translated">一般法典</target>
        </trans-unit>
        <trans-unit id="3c5d21815e853ee353943f1b16ccdedddafbb86a" translate="yes" xml:space="preserve">
          <source>Generally speaking, Electron supports Ubuntu 12.04, Fedora 21, Debian 8 and later.</source>
          <target state="translated">一般的には、Ubuntu 12.04、Fedora 21、Debian 8以降をサポートしています。</target>
        </trans-unit>
        <trans-unit id="90b6f5d52bf8b14dce89eab99bf56fc36ee3ce58" translate="yes" xml:space="preserve">
          <source>Generally speaking, it is easier to completely disable &lt;code&gt;eval()&lt;/code&gt; than to make it bulletproof. Thus, if you do not need it, it is a good idea to disable it.</source>
          <target state="translated">一般的に言えば、 &lt;code&gt;eval()&lt;/code&gt; を完全に無効にする方が、完全に無効にするよりも簡単です。したがって、必要ない場合は、無効にすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="13f9f22123ed9e158e8f29705aa35590736ffaba" translate="yes" xml:space="preserve">
          <source>Generally speaking, setting the parameter to a value below zero (like &lt;code&gt;-1&lt;/code&gt;) will remove the progress bar while setting it to a value higher than one (like &lt;code&gt;2&lt;/code&gt;) will switch the progress bar to intermediate mode.</source>
          <target state="translated">一般的に、パラメータを0未満の値（ &lt;code&gt;-1&lt;/code&gt; など）に設定するとプログレスバーが削除され、1よりも大きい値（ &lt;code&gt;2&lt;/code&gt; など）に設定するとプログレスバーが中間モードに切り替わります。</target>
        </trans-unit>
        <trans-unit id="9a1b685e55f4b94987ef88208f8882ad9106ba1c" translate="yes" xml:space="preserve">
          <source>Generally speaking, shortcuts are added by providing a &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Exec&lt;/code&gt; property for each entry in the shortcuts menu. Unity will execute the &lt;code&gt;Exec&lt;/code&gt; field once clicked by the user. The format is as follows:</source>
          <target state="translated">一般的に、ショートカットは、ショートカットメニューの各エントリに &lt;code&gt;Name&lt;/code&gt; プロパティと &lt;code&gt;Exec&lt;/code&gt; プロパティを提供することで追加されます。Unityは、ユーザーがクリックすると、 &lt;code&gt;Exec&lt;/code&gt; フィールドを実行します。形式は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1538647f42f7d3d79050cbefe208f89d3f10ca55" translate="yes" xml:space="preserve">
          <source>Generally speaking, there are likely good reasons if a feature was not enabled by default. Legitimate use cases for enabling specific features exist. As a developer, you should know exactly why you need to enable a feature, what the ramifications are, and how it impacts the security of your application. Under no circumstances should you enable features speculatively.</source>
          <target state="translated">一般的に言えば、ある機能がデフォルトで有効になっていない場合、それなりの理由があると思われます。特定の機能を有効にするための正当なユースケースは存在します。開発者としては、なぜ機能を有効にする必要があるのか、どのような影響があるのか、そしてそれがアプリケーションのセキュリティにどのような影響を与えるのかを正確に知るべきです。いかなる状況であっても、推測で機能を有効にしてはいけません。</target>
        </trans-unit>
        <trans-unit id="3169e818304c83f7b1d25d45a63a2afbec618473" translate="yes" xml:space="preserve">
          <source>Generally, the &lt;code&gt;template&lt;/code&gt; is just an array of &lt;code&gt;options&lt;/code&gt; for constructing a &lt;a href=&quot;menu-item&quot;&gt;MenuItem&lt;/a&gt;. The usage can be referenced above.</source>
          <target state="translated">一般に、 &lt;code&gt;template&lt;/code&gt; は&lt;a href=&quot;menu-item&quot;&gt;MenuItem&lt;/a&gt;を作成するための &lt;code&gt;options&lt;/code&gt; 配列にすぎません。使用法は上記で参照できます。</target>
        </trans-unit>
        <trans-unit id="5e016c4e6c4388b4fdc614cd782c50dda7199bee" translate="yes" xml:space="preserve">
          <source>Generate xcode project for debugging sources (cannot build code from xcode)</source>
          <target state="translated">デバッグソース用の xcode プロジェクトを生成する (xcode からコードをビルドすることはできません)</target>
        </trans-unit>
        <trans-unit id="0afb4a7756056519dfbd37bafb195e85a8b71d1c" translate="yes" xml:space="preserve">
          <source>Generate, download, and install &lt;a href=&quot;https://github.com/electron-userland/electron-osx-sign/wiki/1.-Getting-Started#certificates&quot;&gt;signing certificates&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron-userland/electron-osx-sign/wiki/1.-Getting-Started#certificates&quot;&gt;署名証明書&lt;/a&gt;を生成、ダウンロード、インストールする</target>
        </trans-unit>
        <trans-unit id="a3d952d915882776a804ebcb451b68280f150a03" translate="yes" xml:space="preserve">
          <source>Generating &lt;code&gt;asar&lt;/code&gt; Archives</source>
          <target state="translated">&lt;code&gt;asar&lt;/code&gt; アーカイブの生成</target>
        </trans-unit>
        <trans-unit id="0e4e031d86d0110b37d71551b28614ffdcf68aee" translate="yes" xml:space="preserve">
          <source>Generating asar Archives</source>
          <target state="translated">asarアーカイブの生成</target>
        </trans-unit>
        <trans-unit id="aca441ddd2e8d07643b87c1b24a828fa5b4b3e42" translate="yes" xml:space="preserve">
          <source>Georgian</source>
          <target state="translated">Georgian</target>
        </trans-unit>
        <trans-unit id="da91388c72d3e31da19dcd85c97374197748485d" translate="yes" xml:space="preserve">
          <source>German</source>
          <target state="translated">German</target>
        </trans-unit>
        <trans-unit id="078c5c2d83171c5c9230eb9470f612f005a42c2d" translate="yes" xml:space="preserve">
          <source>German (Austria)</source>
          <target state="translated">ドイツ語</target>
        </trans-unit>
        <trans-unit id="9c71d86768bbc4160407ef4ed71ede2d112003c0" translate="yes" xml:space="preserve">
          <source>German (Germany)</source>
          <target state="translated">ドイツ語</target>
        </trans-unit>
        <trans-unit id="09e6c204b1cd8e89c8f7fe995a77b7e2feb3c179" translate="yes" xml:space="preserve">
          <source>German (Switzerland)</source>
          <target state="translated">ドイツ語</target>
        </trans-unit>
        <trans-unit id="9a96c736087dc403a036da96c29f464627719640" translate="yes" xml:space="preserve">
          <source>Get Certificate</source>
          <target state="translated">証明書を取得する</target>
        </trans-unit>
        <trans-unit id="97902b12593780ddf28d3457dbb261e2b807323d" translate="yes" xml:space="preserve">
          <source>Get Team ID</source>
          <target state="translated">チームIDの取得</target>
        </trans-unit>
        <trans-unit id="1d751cd6f2223c387565d489fdaf84c5a57d5ce2" translate="yes" xml:space="preserve">
          <source>Get a Windows Authenticode code signing certificate</source>
          <target state="translated">Windows Authenticode コード署名証明書を取得します。</target>
        </trans-unit>
        <trans-unit id="b9b7985f4cabac6df8ab0ce7316af20136bc9a96" translate="yes" xml:space="preserve">
          <source>Get a copy of Electron's libcc fork</source>
          <target state="translated">Electron の libcc フォークのコピーを入手する</target>
        </trans-unit>
        <trans-unit id="3dfdaa9a34c13df1a4918f14dbd278dbcb6ad6d1" translate="yes" xml:space="preserve">
          <source>Get a set of category groups. The category groups can change as new code paths are reached.</source>
          <target state="translated">カテゴリグループのセットを取得します。カテゴリグループは、新しいコードパスに到達すると変更することができます。</target>
        </trans-unit>
        <trans-unit id="b31590d49ba6cc9bd37661826a0e210780ebf287" translate="yes" xml:space="preserve">
          <source>Get and set properties of a session.</source>
          <target state="translated">セッションのプロパティを取得・設定します。</target>
        </trans-unit>
        <trans-unit id="4651f3efda204499e94165cf4e7980b1e52540ef" translate="yes" xml:space="preserve">
          <source>Get system preferences.</source>
          <target state="translated">システム環境設定を取得します。</target>
        </trans-unit>
        <trans-unit id="f8a9296dea080088611ff14ad0eae0f5c7d1c3c8" translate="yes" xml:space="preserve">
          <source>Get the code and initialize the project:</source>
          <target state="translated">コードを取得し、プロジェクトを初期化します。</target>
        </trans-unit>
        <trans-unit id="42e39f6d0cb0eadebb6a9541f6e152c7e729a7f1" translate="yes" xml:space="preserve">
          <source>Get the code:</source>
          <target state="translated">コードを手に入れろ</target>
        </trans-unit>
        <trans-unit id="6e09fde08da990083e9a1d35f798afb7b2e02572" translate="yes" xml:space="preserve">
          <source>Get the current monitoring traced data.</source>
          <target state="translated">現在の監視トレースデータを取得します。</target>
        </trans-unit>
        <trans-unit id="af84e9850a364806c20ee98a9f19df0ba5a1b68f" translate="yes" xml:space="preserve">
          <source>Get the maximum usage across processes of trace buffer as a percentage of the full state. When the TraceBufferUsage value is determined the &lt;code&gt;callback&lt;/code&gt; is called.</source>
          <target state="translated">トレースバッファーのプロセス全体の最大使用量を、完全な状態のパーセンテージとして取得します。TraceBufferUsage値が決定されると、 &lt;code&gt;callback&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f0e6b1c9b8b0f68211223759203e1903246b8a61" translate="yes" xml:space="preserve">
          <source>Get the system printer list.</source>
          <target state="translated">システムプリンタのリストを取得します。</target>
        </trans-unit>
        <trans-unit id="7c8c41f61ee8c8b61ef31de98aef8618369ead6d" translate="yes" xml:space="preserve">
          <source>Get the version of crashpad that we're going to use.</source>
          <target state="translated">使用するクラッシュパッドのバージョンを取得します。</target>
        </trans-unit>
        <trans-unit id="774b49b5b98b5374e54d194a189001e6997ca6b2" translate="yes" xml:space="preserve">
          <source>Getting the Code</source>
          <target state="translated">コードの取得</target>
        </trans-unit>
        <trans-unit id="1f5fe669e18521007ce5a8aa2cce9d3c3fa007a4" translate="yes" xml:space="preserve">
          <source>Getting the plugin</source>
          <target state="translated">プラグインの取得</target>
        </trans-unit>
        <trans-unit id="5819778898df55e3a762f0c5728b457970d72cae" translate="yes" xml:space="preserve">
          <source>Git</source>
          <target state="translated">Git</target>
        </trans-unit>
        <trans-unit id="31a9c72c1cf9aa2b3749a61100d0110a62a633e0" translate="yes" xml:space="preserve">
          <source>GitHub's Electron team maintains &lt;a href=&quot;https://github.com/electron/update.electronjs.org&quot;&gt;update.electronjs.org&lt;/a&gt;, a free and open-source webservice that Electron apps can use to self-update. The service is designed for Electron apps that meet the following criteria:</source>
          <target state="translated">GitHubのElectronチームは、Electronアプリが自己更新に使用できる無料のオープンソース&lt;a href=&quot;https://github.com/electron/update.electronjs.org&quot;&gt;Webサービス&lt;/a&gt;であるupdate.electronjs.orgを維持しています。このサービスは、次の条件を満たすエレクトロンアプリ向けに設計されています。</target>
        </trans-unit>
        <trans-unit id="74fe7d567bf71c112291a363a3d9b39b53cc1350" translate="yes" xml:space="preserve">
          <source>Gives the default maximal active V-logging level; 0 is the default. Normally positive values are used for V-logging levels.</source>
          <target state="translated">デフォルトの最大アクティブ V-logging レベルを指定します。通常、V-logging レベルには正の値が使用されます。</target>
        </trans-unit>
        <trans-unit id="04622ff2db8ee08e5e23ba617b529878c0062cd3" translate="yes" xml:space="preserve">
          <source>Gives the per-module maximal V-logging levels to override the value given by &lt;code&gt;--v&lt;/code&gt;. E.g. &lt;code&gt;my_module=2,foo*=3&lt;/code&gt; would change the logging level for all code in source files &lt;code&gt;my_module.*&lt;/code&gt; and &lt;code&gt;foo*.*&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--v&lt;/code&gt; で指定された値を上書きするために、モジュールごとの最大Vログレベルを指定します。たとえば、 &lt;code&gt;my_module=2,foo*=3&lt;/code&gt; は、ソースファイル &lt;code&gt;my_module.*&lt;/code&gt; および &lt;code&gt;foo*.*&lt;/code&gt; 内のすべてのコードのログレベルを変更します。</target>
        </trans-unit>
        <trans-unit id="2a102f27f850350772f2e44ae41ae0c25df0de90" translate="yes" xml:space="preserve">
          <source>Global Installation</source>
          <target state="translated">グローバルインストール</target>
        </trans-unit>
        <trans-unit id="9b2c45900d277c38ce7727bdb988069b357640ce" translate="yes" xml:space="preserve">
          <source>Global Shortcuts</source>
          <target state="translated">グローバルショートカット</target>
        </trans-unit>
        <trans-unit id="7427cf697be16a4ec1d916910128a59d920125e7" translate="yes" xml:space="preserve">
          <source>Glossary</source>
          <target state="translated">Glossary</target>
        </trans-unit>
        <trans-unit id="47ba3bd2a5c6aeb3e8cad3b83d7b5602dbe77429" translate="yes" xml:space="preserve">
          <source>Glossary of Terms</source>
          <target state="translated">用語集</target>
        </trans-unit>
        <trans-unit id="c476992f33540e23daa401c4e60e99186e563a56" translate="yes" xml:space="preserve">
          <source>GoDaddy</source>
          <target state="translated">GoDaddy</target>
        </trans-unit>
        <trans-unit id="28732829f3eca4da96a693af0bb508a19d3ecbdf" translate="yes" xml:space="preserve">
          <source>Google offers &lt;a href=&quot;https://developer.chrome.com/devtools&quot;&gt;excellent documentation for their developer tools&lt;/a&gt;. We recommend that you make yourself familiar with them - they are usually one of the most powerful utilities in any Electron Developer's tool belt.</source>
          <target state="translated">Googleは&lt;a href=&quot;https://developer.chrome.com/devtools&quot;&gt;開発者向けの優れたドキュメントを&lt;/a&gt;提供しています。それらをよく理解することをお勧めします。これらは通常、Electron Developerのツールベルトで最も強力なユーティリティの1つです。</target>
        </trans-unit>
        <trans-unit id="59d5f5b13f13f6d5e8e88a5a92e137f7d64b2954" translate="yes" xml:space="preserve">
          <source>Greek</source>
          <target state="translated">Greek</target>
        </trans-unit>
        <trans-unit id="e96b7da2918127b11fa0a0e9eee6e9a1c10a65ca" translate="yes" xml:space="preserve">
          <source>Guarani</source>
          <target state="translated">Guarani</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">ガイド</target>
        </trans-unit>
        <trans-unit id="8da0077fda7c3873b2109d7ff97c49289bade98b" translate="yes" xml:space="preserve">
          <source>Guides and Tutorials</source>
          <target state="translated">ガイドとチュートリアル</target>
        </trans-unit>
        <trans-unit id="7d874f5abb3950680f297babc41172373fdc4c32" translate="yes" xml:space="preserve">
          <source>Guides: Development</source>
          <target state="translated">ガイド 開発</target>
        </trans-unit>
        <trans-unit id="c06c55a5bcd005bf56c5234eb953099ffc1de3f1" translate="yes" xml:space="preserve">
          <source>Gujarati</source>
          <target state="translated">Gujarati</target>
        </trans-unit>
        <trans-unit id="12b4aa2e03f9d0d04893ebd755d57aa21da50f87" translate="yes" xml:space="preserve">
          <source>Gyp Files</source>
          <target state="translated">ジップファイル</target>
        </trans-unit>
        <trans-unit id="6ab64c2c4cbe25df11defa0cabb6e1d056d0b05d" translate="yes" xml:space="preserve">
          <source>HKDF - &lt;a href=&quot;https://csrc.nist.gov/publications/nistpubs/800-56C/SP-800-56C.pdf&quot;&gt;NIST SP 800-56C&lt;/a&gt;</source>
          <target state="translated">HKDF- &lt;a href=&quot;https://csrc.nist.gov/publications/nistpubs/800-56C/SP-800-56C.pdf&quot;&gt;NIST SP 800-56C&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96aef50bf3aade35f7355d1a4921a735889e4d65" translate="yes" xml:space="preserve">
          <source>HMAC - &lt;a href=&quot;https://csrc.nist.gov/publications/fips/fips198-1/FIPS-198-1_final.pdf&quot;&gt;FIPS 198-1&lt;/a&gt;</source>
          <target state="translated">HMAC- &lt;a href=&quot;https://csrc.nist.gov/publications/fips/fips198-1/FIPS-198-1_final.pdf&quot;&gt;FIPS 198-1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ec65432dccf7be3dd348b42b4845c542f32d36e" translate="yes" xml:space="preserve">
          <source>Handle responses to HTTP/HTTPS requests.</source>
          <target state="translated">HTTP/HTTPS リクエストに対するレスポンスを処理します。</target>
        </trans-unit>
        <trans-unit id="c6198e10656789bfc9a2ce6cde36df2a0803c265" translate="yes" xml:space="preserve">
          <source>Hausa</source>
          <target state="translated">Hausa</target>
        </trans-unit>
        <trans-unit id="cd7668c561bd17eb1bdc17551d90f80f2444fe05" translate="yes" xml:space="preserve">
          <source>Hawaiian</source>
          <target state="translated">Hawaiian</target>
        </trans-unit>
        <trans-unit id="348d00693e12bc983bd092677b90434b5a4d869e" translate="yes" xml:space="preserve">
          <source>Hebrew</source>
          <target state="translated">Hebrew</target>
        </trans-unit>
        <trans-unit id="32e9448bc4ec32f0e45beaffa974dfcc238350cc" translate="yes" xml:space="preserve">
          <source>Here is a pre-configured project that you can download and directly debug in VSCode: &lt;a href=&quot;https://github.com/octref/vscode-electron-debug/tree/master/electron-quick-start&quot;&gt;https://github.com/octref/vscode-electron-debug/tree/master/electron-quick-start&lt;/a&gt;</source>
          <target state="translated">これは、VSCodeでダウンロードして直接デバッグできる事前構成済みのプロジェクトです。https：&lt;a href=&quot;https://github.com/octref/vscode-electron-debug/tree/master/electron-quick-start&quot;&gt;//github.com/octref/vscode-electron-debug/tree/master/electron-quick-start&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7511063de052867ece2aea3d8c3eafd004df2d88" translate="yes" xml:space="preserve">
          <source>Here is an example of the 1.x strategy:</source>
          <target state="translated">ここでは、1.xの攻略例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="536ab89c6edf5aadcd8667b06d61bfd9d8b1c469" translate="yes" xml:space="preserve">
          <source>Here is an example that shows how to use In-App Purchases in Electron. You'll have to replace the product ids by the identifiers of the products created with iTunes Connect (the identifier of &lt;code&gt;com.example.app.product1&lt;/code&gt; is &lt;code&gt;product1&lt;/code&gt;). Note that you have to listen to the &lt;code&gt;transactions-updated&lt;/code&gt; event as soon as possible in your app.</source>
          <target state="translated">以下は、Electronでのアプリ内購入の使用例です。あなたは、iTunesの接続（の識別子を使用して作成製品の識別子によって製品IDを交換する必要があります &lt;code&gt;com.example.app.product1&lt;/code&gt; がある &lt;code&gt;product1&lt;/code&gt; ）。アプリでできるだけ早く &lt;code&gt;transactions-updated&lt;/code&gt; イベントをリッスンする必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6d95a763e8b803427825f074147dbb618bb8baf8" translate="yes" xml:space="preserve">
          <source>Here's a very simple example of creating a custom Jump List:</source>
          <target state="translated">ここでは、カスタムジャンプリストを作成する非常に簡単な例を紹介します。</target>
        </trans-unit>
        <trans-unit id="a2e3007d0832120c6f9a0f910d309296102f99f4" translate="yes" xml:space="preserve">
          <source>Hides all application windows without minimizing them.</source>
          <target state="translated">すべてのアプリケーションウィンドウを最小化せずに非表示にします。</target>
        </trans-unit>
        <trans-unit id="c6b1b93e545fd554605800d785e996e3dc0eb5ee" translate="yes" xml:space="preserve">
          <source>Hides the dock icon.</source>
          <target state="translated">ドックアイコンを非表示にします。</target>
        </trans-unit>
        <trans-unit id="5a43dc7f2f465c2745f7cb820f2abef02d340442" translate="yes" xml:space="preserve">
          <source>Hides the window.</source>
          <target state="translated">窓を隠します。</target>
        </trans-unit>
        <trans-unit id="ef8f36f42eba0b8668da702476cc74241114add9" translate="yes" xml:space="preserve">
          <source>High Resolution Image</source>
          <target state="translated">高解像度画像</target>
        </trans-unit>
        <trans-unit id="c9e6b253fc34a7155f97dc0aab1c389d34cafdad" translate="yes" xml:space="preserve">
          <source>Hindi</source>
          <target state="translated">Hindi</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="9b0ec9db7c0e86a129f9fa1bab0da6d3e2b91722" translate="yes" xml:space="preserve">
          <source>Hooks a windows message. The &lt;code&gt;callback&lt;/code&gt; is called when the message is received in the WndProc.</source>
          <target state="translated">Windowsメッセージをフックします。 &lt;code&gt;callback&lt;/code&gt; メッセージをWndProcメソッドで受信されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="e31334bebb7eaceff6fb89067353d34e43f8191c" translate="yes" xml:space="preserve">
          <source>How to Contribute in Issues</source>
          <target state="translated">課題での貢献の仕方</target>
        </trans-unit>
        <trans-unit id="5a8e3da66fa923f0ece07325d1e26b9f23216424" translate="yes" xml:space="preserve">
          <source>How to Submit Your App</source>
          <target state="translated">アプリの提出方法</target>
        </trans-unit>
        <trans-unit id="77a4a1a408e307fcb086698bb67fe202442adacb" translate="yes" xml:space="preserve">
          <source>How to install native modules</source>
          <target state="translated">ネイティブモジュールのインストール方法</target>
        </trans-unit>
        <trans-unit id="e219f690385e428b335d5c1debc806bb7f162143" translate="yes" xml:space="preserve">
          <source>How to load a DevTools Extension</source>
          <target state="translated">DevTools拡張機能をロードする方法</target>
        </trans-unit>
        <trans-unit id="42990de13e12a6f3fe14f015c9fa5f168409cf6f" translate="yes" xml:space="preserve">
          <source>How to share data between web pages?</source>
          <target state="translated">Webページ間でデータを共有するには?</target>
        </trans-unit>
        <trans-unit id="006cb42291b4d2a8b6209f1743122eaed8f3b45c" translate="yes" xml:space="preserve">
          <source>How to use Node.js and Electron APIs.</source>
          <target state="translated">Node.jsとElectron APIの使い方。</target>
        </trans-unit>
        <trans-unit id="a592ebd85a69060d7634d9886b10816e9eb5584f" translate="yes" xml:space="preserve">
          <source>How?</source>
          <target state="translated">How?</target>
        </trans-unit>
        <trans-unit id="3dd7ebb42cfd90c92c21fd773d0d3b2eaa35204b" translate="yes" xml:space="preserve">
          <source>However if you are using the built-in module but still getting this error, it is very likely you are using the module in the wrong process. For example &lt;code&gt;electron.app&lt;/code&gt; can only be used in the main process, while &lt;code&gt;electron.webFrame&lt;/code&gt; is only available in renderer processes.</source>
          <target state="translated">ただし、組み込みモジュールを使用していてもこのエラーが発生する場合は、モジュールを間違ったプロセスで使用している可能性が高いです。たとえば、 &lt;code&gt;electron.app&lt;/code&gt; はメインプロセスでのみ使用できますが、 &lt;code&gt;electron.webFrame&lt;/code&gt; はレンダラープロセスでのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="80cb96f852d1ce7ae9b00c59c13912122674f7ce" translate="yes" xml:space="preserve">
          <source>Hungarian</source>
          <target state="translated">Hungarian</target>
        </trans-unit>
        <trans-unit id="4663bd433a3403bb10d42d1a6d961eb823a20381" translate="yes" xml:space="preserve">
          <source>I can not use jQuery/RequireJS/Meteor/AngularJS in Electron.</source>
          <target state="translated">ElectronでjQuery/RequireJS/Meteor/AngularJSが使えません。</target>
        </trans-unit>
        <trans-unit id="f6443e9e80d7ff5014bd87a1c30a8be0edfc3cec" translate="yes" xml:space="preserve">
          <source>IDEA - &quot;On the Design and Security of Block Ciphers&quot; book by X. Lai</source>
          <target state="translated">IDEA-「ブロック暗号の設計とセキュリティについて」X.Lai著</target>
        </trans-unit>
        <trans-unit id="2d2784b01eb1135581b7a56e053cc184e7b456aa" translate="yes" xml:space="preserve">
          <source>IDL</source>
          <target state="translated">IDL</target>
        </trans-unit>
        <trans-unit id="d0f99dc7f22f9fd48a428327fd8c96820f8a762f" translate="yes" xml:space="preserve">
          <source>IME</source>
          <target state="translated">IME</target>
        </trans-unit>
        <trans-unit id="7c68728ac018ddf5a25a386395b4b5962be1aaf6" translate="yes" xml:space="preserve">
          <source>IOCounters</source>
          <target state="translated">IOCounters</target>
        </trans-unit>
        <trans-unit id="1fd209e564e2f820f91ecf2931819f28bad1b99c" translate="yes" xml:space="preserve">
          <source>IOCounters Object</source>
          <target state="translated">IOCounters オブジェクト</target>
        </trans-unit>
        <trans-unit id="f4aa7e6cdf843e01253be3fd2becaee731842f78" translate="yes" xml:space="preserve">
          <source>IPC</source>
          <target state="translated">IPC</target>
        </trans-unit>
        <trans-unit id="890a7404cde81122526f825a731ae1012afa8fc4" translate="yes" xml:space="preserve">
          <source>IPC stands for Inter-Process Communication. Electron uses IPC to send serialized JSON messages between the &lt;a href=&quot;#main-process&quot;&gt;main&lt;/a&gt; and &lt;a href=&quot;#renderer-process&quot;&gt;renderer&lt;/a&gt; processes.</source>
          <target state="translated">IPCは、プロセス間通信の略です。ElectronはIPCを使用して、&lt;a href=&quot;#main-process&quot;&gt;メイン&lt;/a&gt;プロセスと&lt;a href=&quot;#renderer-process&quot;&gt;レンダラー&lt;/a&gt;プロセスの間でシリアル化されたJSONメッセージを送信します。</target>
        </trans-unit>
        <trans-unit id="4908b12c142b7bd671d43e5185556c158bb0999c" translate="yes" xml:space="preserve">
          <source>Icelandic</source>
          <target state="translated">Icelandic</target>
        </trans-unit>
        <trans-unit id="b1faf3607f00a15313ffe083e5f26329c2c9887b" translate="yes" xml:space="preserve">
          <source>Icon Overlays in Taskbar</source>
          <target state="translated">タスクバーのアイコンオーバーレイ</target>
        </trans-unit>
        <trans-unit id="4b58f92cb05655184beba35216e41c88e52c8808" translate="yes" xml:space="preserve">
          <source>Icon overlays serve as a contextual notification of status, and are intended to negate the need for a separate notification area status icon to communicate that information to the user. For instance, the new mail status in Microsoft Outlook, currently shown in the notification area, can now be indicated through an overlay on the taskbar button. Again, you must decide during your development cycle which method is best for your application. Overlay icons are intended to supply important, long-standing status or notifications such as network status, messenger status, or new mail. The user should not be presented with constantly changing overlays or animations.</source>
          <target state="translated">アイコンのオーバーレイは、ステータスの文脈上の通知として機能し、その情報をユーザーに伝達するために、別個の通知領域のステータスアイコンの必要性を否定することを意図しています。たとえば、現在通知領域に表示されている Microsoft Outlook の新しいメールのステータスを、タスクバーボタンのオーバーレイで表示することができます。ここでも、アプリケーションに最適な方法を開発サイクル中に決定する必要があります。オーバーレイアイコンは、ネットワークの状態、メッセンジャーの状態、または新しいメールのような重要で長期的な状態や通知を提供することを目的としています。ユーザーは、常に変化するオーバーレイやアニメーションを表示すべきではありません。</target>
        </trans-unit>
        <trans-unit id="1431424e0aa0d00794b34d04eefeac90cc58d9b8" translate="yes" xml:space="preserve">
          <source>Icons associated with certain file extensions, like &lt;code&gt;.mp3&lt;/code&gt;, &lt;code&gt;.png&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;code&gt;.mp3&lt;/code&gt; 、 &lt;code&gt;.png&lt;/code&gt; などの特定のファイル拡張子に関連付けられたアイコン</target>
        </trans-unit>
        <trans-unit id="b87b9c7cefbb13a341bb1187e3a49551471edda0" translate="yes" xml:space="preserve">
          <source>Icons inside the file itself, like &lt;code&gt;.exe&lt;/code&gt;, &lt;code&gt;.dll&lt;/code&gt;, &lt;code&gt;.ico&lt;/code&gt;.</source>
          <target state="translated">ファイル自体の内部アイコンなどの &lt;code&gt;.exe&lt;/code&gt; ファイル、 &lt;code&gt;.dll&lt;/code&gt; ファイル、 &lt;code&gt;.ico&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="186bfe94308b4c8b9444f82e3fabdd4996e0d6b2" translate="yes" xml:space="preserve">
          <source>Ideally, the pull request will pass (&quot;be green&quot;) on all of CI's platforms. This means that all tests pass and there are no linting errors. However, it is not uncommon for the CI infrastructure itself to fail on specific platforms or for so-called &quot;flaky&quot; tests to fail (&quot;be red&quot;). Each CI failure must be manually inspected to determine the cause.</source>
          <target state="translated">理想的には、CIのすべてのプラットフォーム上でプルリクエストが通過(&quot;be green&quot;)することです。これは、すべてのテストが合格し、リントエラーがないことを意味します。しかし、CIインフラストラクチャ自体が特定のプラットフォームで失敗したり、いわゆる「欠陥のある」テストが失敗することは珍しくありません(「赤」になる)。各CIの失敗は、原因を特定するために手動で検査する必要があります。</target>
        </trans-unit>
        <trans-unit id="9241deb084a6d5babf2886e1ab3012b3abf8b22b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;backgroundThrottling&lt;/code&gt; is disabled, the visibility state will remain &lt;code&gt;visible&lt;/code&gt; even if the window is minimized, occluded, or hidden.</source>
          <target state="translated">場合 &lt;code&gt;backgroundThrottling&lt;/code&gt; が無効になっている、可視性の状態が残る &lt;code&gt;visible&lt;/code&gt; ウィンドウが最小化されている場合でも、閉塞、または非表示。</target>
        </trans-unit>
        <trans-unit id="271d04a59e510c2f17aaa6bc0a410f5e69008aa0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;categories&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; the previously set custom Jump List (if any) will be replaced by the standard Jump List for the app (managed by Windows).</source>
          <target state="translated">&lt;code&gt;categories&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、以前に設定されたカスタムジャンプリスト（存在する場合）は、アプリの標準のジャンプリスト（Windowsで管理）に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="556f915b2e5f20804107a01cb875b2dc9074fb1f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;partition&lt;/code&gt; starts with &lt;code&gt;persist:&lt;/code&gt;, the page will use a persistent session available to all pages in the app with the same &lt;code&gt;partition&lt;/code&gt;. if there is no &lt;code&gt;persist:&lt;/code&gt; prefix, the page will use an in-memory session. If the &lt;code&gt;partition&lt;/code&gt; is empty then default session of the app will be returned.</source>
          <target state="translated">&lt;code&gt;partition&lt;/code&gt; が &lt;code&gt;persist:&lt;/code&gt; で始まる場合、ページは同じ &lt;code&gt;partition&lt;/code&gt; 持つアプリ内のすべてのページで利用可能な永続的なセッションを使用します。 &lt;code&gt;persist:&lt;/code&gt; 接頭辞がない場合、ページはメモリ内セッションを使用します。 &lt;code&gt;partition&lt;/code&gt; が空の場合、アプリのデフォルトセッションが返されます。</target>
        </trans-unit>
        <trans-unit id="159278b031266e4365b8e89cb754ee1575e08111" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled and not painting, start painting.</source>
          <target state="translated">&lt;em&gt;オフスクリーンレンダリング&lt;/em&gt;が有効でペイントされていない場合は、ペイントを開始します。</target>
        </trans-unit>
        <trans-unit id="727cf6c7299aabc319e19a37a009db3233858a37" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled and painting, stop painting.</source>
          <target state="translated">&lt;em&gt;オフスクリーンレンダリング&lt;/em&gt;が有効でペイントされている場合は、ペイントを停止します。</target>
        </trans-unit>
        <trans-unit id="0341ea0a3b398358cb52497946e862feaf676cae" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled invalidates the frame and generates a new one through the &lt;code&gt;'paint'&lt;/code&gt; event.</source>
          <target state="translated">&lt;em&gt;オフスクリーンレンダリング&lt;/em&gt;が有効になっている場合、フレームが無効になり、 &lt;code&gt;'paint'&lt;/code&gt; イベントを通じて新しいフレームが生成されます。</target>
        </trans-unit>
        <trans-unit id="71adc365e97dd03614eb0aaea1310a81945c3c0a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled sets the frame rate to the specified number. Only values between 1 and 60 are accepted.</source>
          <target state="translated">&lt;em&gt;オフスクリーンレンダリング&lt;/em&gt;が有効になっている場合、フレームレートは指定された数値に設定されます。1〜60の値のみが受け入れられます。</target>
        </trans-unit>
        <trans-unit id="4722ea2a3cf0c60dab14c9eaa28ad6f7054a8910" translate="yes" xml:space="preserve">
          <source>If Electron is running under a different user account, select the &lt;code&gt;Show processes from all users&lt;/code&gt; check box. Notice that depending on how many BrowserWindows your app opened, you will see multiple processes. A typical one-window app will result in Visual Studio presenting you with two &lt;code&gt;Electron.exe&lt;/code&gt; entries - one for the main process and one for the renderer process. Since the list only gives you names, there's currently no reliable way of figuring out which is which.</source>
          <target state="translated">Electronが別のユーザーアカウントで実行されている場合は、[ &lt;code&gt;Show processes from all users&lt;/code&gt; チェックボックスをオンにします。アプリが開いたBrowserWindowsの数に応じて、複数のプロセスが表示されることに注意してください。典型的な1ウィンドウアプリケーションでは、Visual Studioに2つの &lt;code&gt;Electron.exe&lt;/code&gt; エントリが表示されます。1つはメインプロセス用で、もう1つはレンダラープロセス用です。リストには名前しか記載されていないため、どちらがどれであるかを判別する信頼できる方法は現在ありません。</target>
        </trans-unit>
        <trans-unit id="dfa45c90a49b752076cafae378cbfb0fc75ef031" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;BrowserWindow&lt;/code&gt; is created with &lt;code&gt;show: false&lt;/code&gt;, the initial visibility state will be &lt;code&gt;visible&lt;/code&gt; despite the window actually being hidden.</source>
          <target state="translated">&lt;code&gt;show: false&lt;/code&gt; して &lt;code&gt;BrowserWindow&lt;/code&gt; を作成すると、ウィンドウが実際に非表示になっていても、初期の可視状態が &lt;code&gt;visible&lt;/code&gt; されます。</target>
        </trans-unit>
        <trans-unit id="e0338bcfcb4104ead00fe9414b0bc6c798aebd82" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;callback&lt;/code&gt; is passed, the API call will be asynchronous and the result will be passed via &lt;code&gt;callback(filename)&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;callback&lt;/code&gt; 渡され、APIの呼び出しは非同期になり、結果が経由して渡される &lt;code&gt;callback(filename)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71e356d72e9973e91887cd4f40f232a75076438d" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;callback&lt;/code&gt; is passed, the API call will be asynchronous and the result will be passed via &lt;code&gt;callback(filenames)&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;callback&lt;/code&gt; 渡され、APIの呼び出しは非同期になり、結果が経由して渡される &lt;code&gt;callback(filenames)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3791cf12a77a8315d2f8d2c28114944e087288f" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;callback&lt;/code&gt; is passed, the dialog will not block the process. The API call will be asynchronous and the result will be passed via &lt;code&gt;callback(response)&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;callback&lt;/code&gt; 渡され、ダイアログは、プロセスをブロックしません。API呼び出しは非同期になり、結果は &lt;code&gt;callback(response)&lt;/code&gt; を介して渡されます。</target>
        </trans-unit>
        <trans-unit id="933de00af7bd0e61f4522a7eb8447733c9fb6a06" translate="yes" xml:space="preserve">
          <source>If a diff section has no instances of &lt;code&gt;deps/V8&lt;/code&gt;, remove it altogether.</source>
          <target state="translated">diffセクションに &lt;code&gt;deps/V8&lt;/code&gt; のインスタンスがない場合は、それを完全に削除します。</target>
        </trans-unit>
        <trans-unit id="ce51a26435dc6c860dd5b7261fd1da0add0d6ab9" translate="yes" xml:space="preserve">
          <source>If a particular beta release is &lt;em&gt;generally regarded&lt;/em&gt; as stable, it will be re-released as a stable build, changing only the version information. e.g. &lt;code&gt;2.0.0&lt;/code&gt;.</source>
          <target state="translated">特定のベータリリースが&lt;em&gt;一般的に&lt;/em&gt;安定している&lt;em&gt;と見なさ&lt;/em&gt;れる場合、バージョン情報のみを変更して、安定したビルドとして再リリースされます。例： &lt;code&gt;2.0.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62a428d1aa74808bcd0676cdc2f0ecc3426101a5" translate="yes" xml:space="preserve">
          <source>If an application has exceptional circumstances and needs to stay on an unsupported series of Electron, developers can silence the end-of-support warning by omitting the final release from the app's &lt;code&gt;package.json&lt;/code&gt;&lt;code&gt;devDependencies&lt;/code&gt;. For example, since the 1-6-x series ended with an end-of-support 1.6.18 release, developers could choose to stay in the 1-6-x series without warnings with &lt;code&gt;devDependency&lt;/code&gt; of &lt;code&gt;&quot;electron&quot;: 1.6.0 - 1.6.17&lt;/code&gt;.</source>
          <target state="translated">アプリケーションに例外的な状況があり、サポートされていない一連のElectronに留まる必要がある場合、開発者はアプリの &lt;code&gt;package.json&lt;/code&gt; &lt;code&gt;devDependencies&lt;/code&gt; からの最終リリースを省略して、サポート終了の警告を黙らせることができます。たとえば、1-6-xシリーズはサポート終了の1.6.18リリースで終了したため、開発者は &lt;code&gt;devDependency&lt;/code&gt; が &lt;code&gt;&quot;electron&quot;: 1.6.0 - 1.6.17&lt;/code&gt; 警告なしで1-6-xシリーズにとどまることを選択できます：1.6.0- 1.6.17。</target>
        </trans-unit>
        <trans-unit id="b3b63c9e15d16c79e73b80be24bb123149539714" translate="yes" xml:space="preserve">
          <source>If both commands printed a version number, you are all set! Before you get started, you might want to install a &lt;a href=&quot;#a-good-editor&quot;&gt;code editor&lt;/a&gt; suited for JavaScript development.</source>
          <target state="translated">両方のコマンドでバージョン番号が出力されていれば、準備は完了です。始める前に、JavaScript開発に適した&lt;a href=&quot;#a-good-editor&quot;&gt;コードエディター&lt;/a&gt;をインストールすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="3bb932b3c9db14b7bf8934cd43d3008c15bd7ef5" translate="yes" xml:space="preserve">
          <source>If building under Cygwin, you may see &lt;code&gt;bootstrap.py&lt;/code&gt; failed with following error:</source>
          <target state="translated">Cygwinでビルドしている場合、 &lt;code&gt;bootstrap.py&lt;/code&gt; が次のエラーで失敗することがあります。</target>
        </trans-unit>
        <trans-unit id="0c921c76717bc0c31716bfb5e7e1d21ffd8545b4" translate="yes" xml:space="preserve">
          <source>If either of these requirements are not met the button simply won't appear.</source>
          <target state="translated">これらの要件のいずれかが満たされていない場合、ボタンは単に表示されません。</target>
        </trans-unit>
        <trans-unit id="6f7cf0c5d1b5e702650badf2be6e09235ead62c0" translate="yes" xml:space="preserve">
          <source>If future bug fixes or security patches need to be made once a release is stable, they are applied and the &lt;em&gt;patch&lt;/em&gt; version is incremented accordingly e.g. &lt;code&gt;2.0.1&lt;/code&gt;.</source>
          <target state="translated">リリースが安定したら、将来のバグ修正またはセキュリティパッチを作成する必要がある場合、それらが適用され、それに応じて&lt;em&gt;パッチ&lt;/em&gt;バージョンが増分されます（例： &lt;code&gt;2.0.1&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="44ed5688e741dfaf087bcb72ad97d72432431f8e" translate="yes" xml:space="preserve">
          <source>If installation fails with an &lt;code&gt;EACCESS&lt;/code&gt; error you may need to &lt;a href=&quot;https://docs.npmjs.com/getting-started/fixing-npm-permissions&quot;&gt;fix your npm permissions&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;EACCESS&lt;/code&gt; エラーでインストールが失敗した場合は、&lt;a href=&quot;https://docs.npmjs.com/getting-started/fixing-npm-permissions&quot;&gt;npm権限&lt;/a&gt;を修正する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="815eb8dd187b8fd58d929aed602225532bb831cc" translate="yes" xml:space="preserve">
          <source>If it is something like &lt;code&gt;node_modules/electron/index.js&lt;/code&gt;, then you have to either remove the npm &lt;code&gt;electron&lt;/code&gt; module, or rename it.</source>
          <target state="translated">&lt;code&gt;node_modules/electron/index.js&lt;/code&gt; のような場合は、npm &lt;code&gt;electron&lt;/code&gt; モジュールを削除するか、名前を変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="a859a4ddd12f0e153e138787f8b6dc0429da67f2" translate="yes" xml:space="preserve">
          <source>If modules provide binaries for the usage in Electron, make sure to omit &lt;code&gt;--build-from-source&lt;/code&gt; and the &lt;code&gt;npm_config_build_from_source&lt;/code&gt; environment variable in order to take full advantage of the prebuilt binaries.</source>
          <target state="translated">モジュールがElectronで使用するためのバイナリーを提供する場合は、ビルド済みのバイナリーを最大限に活用するために、 &lt;code&gt;npm_config_build_from_source&lt;/code&gt; &lt;code&gt;--build-from-source&lt;/code&gt; およびnpm_config_build_from_source環境変数を省略してください。</target>
        </trans-unit>
        <trans-unit id="0a7fc7f45e66e5f0ebd9efc56a7fc45a306be368" translate="yes" xml:space="preserve">
          <source>If only the &lt;code&gt;height&lt;/code&gt; or the &lt;code&gt;width&lt;/code&gt; are specified then the current aspect ratio will be preserved in the resized image.</source>
          <target state="translated">&lt;code&gt;height&lt;/code&gt; または &lt;code&gt;width&lt;/code&gt; のみが指定されている場合、現在のアスペクト比がサイズ変更された画像に保持されます。</target>
        </trans-unit>
        <trans-unit id="9d9162a12eb8774afee04e7764955db85194d35b" translate="yes" xml:space="preserve">
          <source>If running the above command prompts you for a reboot, please restart your machine and run the above command again after a successful restart.</source>
          <target state="translated">上記コマンドを実行すると再起動を促される場合は、マシンを再起動し、再起動に成功したら再度上記コマンドを実行してください。</target>
        </trans-unit>
        <trans-unit id="036a6278d7e573afe9f50df254cc0f6f441e101f" translate="yes" xml:space="preserve">
          <source>If some patches are no longer compatible with the Chromium code, fix compilation errors.</source>
          <target state="translated">いくつかのパッチが Chromium コードと互換性がなくなった場合は、コンパイルエラーを修正してください。</target>
        </trans-unit>
        <trans-unit id="45e3367833fa240b813e722d92da74d613a9b625" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;type&lt;/code&gt; parameter is &lt;code&gt;custom&lt;/code&gt;, the &lt;code&gt;image&lt;/code&gt; parameter will hold the custom cursor image in a &lt;a href=&quot;native-image&quot;&gt;&lt;code&gt;NativeImage&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;scale&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;hotspot&lt;/code&gt; will hold additional information about the custom cursor.</source>
          <target state="translated">場合は &lt;code&gt;type&lt;/code&gt; パラメータがある &lt;code&gt;custom&lt;/code&gt; 、 &lt;code&gt;image&lt;/code&gt; パラメータには、カスタムカーソルのイメージを保持する&lt;a href=&quot;native-image&quot;&gt; &lt;code&gt;NativeImage&lt;/code&gt; &lt;/a&gt;、および &lt;code&gt;scale&lt;/code&gt; 、 &lt;code&gt;size&lt;/code&gt; および &lt;code&gt;hotspot&lt;/code&gt; カスタムカーソルに関する追加情報を保持します。</target>
        </trans-unit>
        <trans-unit id="3074d076d9db7915861fa0e3b33bf85ee60ae69e" translate="yes" xml:space="preserve">
          <source>If the above error persists, the &lt;a href=&quot;https://docs.npmjs.com/misc/config#unsafe-perm&quot;&gt;unsafe-perm&lt;/a&gt; flag may need to be set to true:</source>
          <target state="translated">上記のエラーが続く場合は、&lt;a href=&quot;https://docs.npmjs.com/misc/config#unsafe-perm&quot;&gt;unsafe-perm&lt;/a&gt;フラグをtrueに設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="a2d265f7d654fec2f7394cb9d7e334abf7e454fc" translate="yes" xml:space="preserve">
          <source>If the bootstrap script is interrupted while using the git cache, it will leave the cache locked. To remove the lock, delete the files ending in &lt;code&gt;.lock&lt;/code&gt;:</source>
          <target state="translated">gitキャッシュの使用中にブートストラップスクリプトが中断されると、キャッシュがロックされたままになります。ロックを解除するには、末尾が &lt;code&gt;.lock&lt;/code&gt; のファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="d777a0bd454d49b73cbb2b36d2133d3780f64fba" translate="yes" xml:space="preserve">
          <source>If the menu bar is already visible, calling &lt;code&gt;setAutoHideMenuBar(true)&lt;/code&gt; won't hide it immediately.</source>
          <target state="translated">メニューバーが既に表示されている場合、 &lt;code&gt;setAutoHideMenuBar(true)&lt;/code&gt; を呼び出してもすぐには非表示になりません。</target>
        </trans-unit>
        <trans-unit id="0d81ef85e9492d93d3361d1faa21f3536481d645" translate="yes" xml:space="preserve">
          <source>If the notification has been shown before, this method will dismiss the previously shown notification and create a new one with identical properties.</source>
          <target state="translated">通知が以前に表示されたことがある場合、このメソッドは以前に表示された通知を破棄し、同一のプロパティを持つ新しい通知を作成します。</target>
        </trans-unit>
        <trans-unit id="46d9109487375980a467e3475b5025f5fb361e14" translate="yes" xml:space="preserve">
          <source>If the remote object is leaked in the renderer process (e.g. stored in a map but never freed), the corresponding object in the main process will also be leaked, so you should be very careful not to leak remote objects.</source>
          <target state="translated">レンダラプロセスでリモートオブジェクトがリークされると(マップに格納されているが解放されないなど)、メインプロセスの対応するオブジェクトもリークされるので、リモートオブジェクトがリークされないように細心の注意を払う必要があります。</target>
        </trans-unit>
        <trans-unit id="5e6949fb4346277bbe7db3c64a65fcba98095e0f" translate="yes" xml:space="preserve">
          <source>If the result of the executed code is a promise the callback result will be the resolved value of the promise. We recommend that you use the returned Promise to handle code that results in a Promise.</source>
          <target state="translated">実行されたコードの結果がプロミスの場合、コールバックの結果はプロミスの解決された値になります。返されたプロミスを使用して、結果がプロミスになるコードを処理することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d826471e04a7d4fc05bf0a83dfdd02e0fb722702" translate="yes" xml:space="preserve">
          <source>If the script returns that your configuration is using an outdated security protocol, use your system's package manager to update Python to the latest version in the 2.7.x branch. Alternatively, visit &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;https://www.python.org/downloads/&lt;/a&gt; for detailed instructions.</source>
          <target state="translated">構成で古いセキュリティプロトコルが使用されていることがスクリプトから返された場合は、システムのパッケージマネージャーを使用して、Pythonを2.7.xブランチの最新バージョンに更新します。または、詳細な手順について&lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;https://www.python.org/downloads/にアクセス&lt;/a&gt;します。</target>
        </trans-unit>
        <trans-unit id="e4adbc188f4d1ddc4f11150ad0b6625adc75ae52" translate="yes" xml:space="preserve">
          <source>If the script returns that your configuration is using an outdated security protocol, you can either update macOS to High Sierra or install a new version of Python 2.7.x. To upgrade Python, use &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;:</source>
          <target state="translated">構成で古いセキュリティプロトコルが使用されていることがスクリプトから返された場合は、macOSをHigh Sierraに更新するか、新しいバージョンのPython 2.7.xをインストールできます。Pythonをアップグレードするには、&lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrewを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="07e786051fa4107bbbfff765db6fcd965cc9e749" translate="yes" xml:space="preserve">
          <source>If the size is unknown, it returns 0.</source>
          <target state="translated">サイズが不明な場合は0を返します。</target>
        </trans-unit>
        <trans-unit id="a6400f1ceae84e75b1798da7ac8f97b4940146c9" translate="yes" xml:space="preserve">
          <source>If there are any compilation errors related to the Crashpad, it probably means you need to update the fork to a newer revision. See &lt;a href=&quot;upgrading-crashpad&quot;&gt;Upgrading Crashpad&lt;/a&gt; for instructions on how to do that.</source>
          <target state="translated">クラッシュパッドに関連するコンパイルエラーがある場合は、フォークを新しいリビジョンに更新する必要があることを意味します。その方法については、&lt;a href=&quot;upgrading-crashpad&quot;&gt;クラッシュパッドのアップグレードを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e6f86e7d6a316512c338668077a47aabdfb66578" translate="yes" xml:space="preserve">
          <source>If you are a developer developing a native module and want to test it against Electron, you might want to rebuild the module for Electron manually. You can use &lt;code&gt;node-gyp&lt;/code&gt; directly to build for Electron:</source>
          <target state="translated">ネイティブモジュールを開発している開発者がElectronに対してテストする場合は、Electronのモジュールを手動で再構築することができます。 &lt;code&gt;node-gyp&lt;/code&gt; を直接使用してElectronをビルドできます。</target>
        </trans-unit>
        <trans-unit id="3546e0934a49c0841002196b0423ec133b58edb9" translate="yes" xml:space="preserve">
          <source>If you are an experienced NW.js user, you should be familiar with the concept of Node context and web context. These concepts were invented because of how NW.js was implemented.</source>
          <target state="translated">NW.jsの経験者であれば、Node contextとWeb contextの概念に精通しているはずです。これらの概念は、NW.jsがどのように実装されていたかによって発明されました。</target>
        </trans-unit>
        <trans-unit id="f518771fd5cfe4822af6e39ccae8294353675f7b" translate="yes" xml:space="preserve">
          <source>If you are building an Electron app that you intend to package and distribute, it should be code signed. The Mac and Windows app stores do not allow unsigned apps.</source>
          <target state="translated">パッケージ化して配布する予定のElectronアプリを作成する場合は、コード署名されている必要があります。MacおよびWindowsのアプリストアでは、署名のないアプリは許可されていません。</target>
        </trans-unit>
        <trans-unit id="372e64afe8410fe3d2465d66f766d65bf0c095de" translate="yes" xml:space="preserve">
          <source>If you are following the &lt;code&gt;npm&lt;/code&gt; way of installing modules, then this is done by default, if not, you have to pass &lt;code&gt;--build-from-source&lt;/code&gt; to &lt;code&gt;npm&lt;/code&gt;, or set the &lt;code&gt;npm_config_build_from_source&lt;/code&gt; environment variable.</source>
          <target state="translated">モジュールをインストールする &lt;code&gt;npm&lt;/code&gt; の方法に従っている場合、これはデフォルトで行われます。そうでない場合は、 &lt;code&gt;--build-from-source&lt;/code&gt; &lt;code&gt;npm_config_build_from_source&lt;/code&gt; -from-sourceを &lt;code&gt;npm&lt;/code&gt; に渡すか、npm_config_build_from_source環境変数を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="2cfb529b6f7d16f1e4b79765a55450d85ee67a59" translate="yes" xml:space="preserve">
          <source>If you are new to app sandboxing under macOS, you should also read through Apple's &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html&quot;&gt;Enabling App Sandbox&lt;/a&gt; to have a basic idea, then add keys for the permissions needed by your app to the entitlements files.</source>
          <target state="translated">macOSでアプリのサンドボックスを初めて使用する場合は、Appleの「&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html&quot;&gt;アプリのサンドボックス&lt;/a&gt;を有効にする」を読んで基本的な考え方を理解し、アプリで必要な権限のキーをエンタイトルメントファイルに追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="03cf4ab71384adf8e5e662d0d5afa5788d1fca8c" translate="yes" xml:space="preserve">
          <source>If you are one of the many developers with a strong preference, know that virtually all code editors and IDEs these days support JavaScript.</source>
          <target state="translated">もしあなたが強い好みを持っている多くの開発者の一人であるならば、最近では事実上すべてのコードエディタや IDE が JavaScript をサポートしていることを知っておいてください。</target>
        </trans-unit>
        <trans-unit id="511ece18190383d8648593fd41d94edf88da2d63" translate="yes" xml:space="preserve">
          <source>If you are unable to access GitHub or you need to provide a custom build, you can do so by either providing a mirror or an existing cache directory.</source>
          <target state="translated">GitHub にアクセスできない場合やカスタムビルドを提供する必要がある場合は、ミラーや既存のキャッシュディレクトリを提供することで行うことができます。</target>
        </trans-unit>
        <trans-unit id="b718a7b2269d6aeeadc157ddb6619fbdfb0c4120" translate="yes" xml:space="preserve">
          <source>If you are updating tests and want to run a single spec to check it:</source>
          <target state="translated">テストを更新していて、1つの仕様を実行して確認したい場合。</target>
        </trans-unit>
        <trans-unit id="74e0ec616a5f2db0a595e964d3bee0948512b949" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;../api/web-view&quot;&gt;&lt;code&gt;WebViews&lt;/code&gt;&lt;/a&gt;, you might need the pages and scripts loaded in your &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tag to open new windows. The &lt;code&gt;allowpopups&lt;/code&gt; attribute enables them to create new &lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindows&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;window.open()&lt;/code&gt; method. &lt;code&gt;WebViews&lt;/code&gt; are otherwise not allowed to create new windows.</source>
          <target state="translated">使用している場合は&lt;a href=&quot;../api/web-view&quot;&gt; &lt;code&gt;WebViews&lt;/code&gt; を&lt;/a&gt;、あなたはあなたの中にロードされたページとスクリプトが必要になる場合があります &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; オープン新しいウィンドウにタグを。 &lt;code&gt;allowpopups&lt;/code&gt; の属性は、新規作成することを可能&lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindows&lt;/code&gt; &lt;/a&gt;使用して &lt;code&gt;window.open()&lt;/code&gt; メソッドを。それ以外の場合、 &lt;code&gt;WebViews&lt;/code&gt; は新しいウィンドウを作成できません。</target>
        </trans-unit>
        <trans-unit id="debc2e94eac4ca97e2e31778bad9a6ac9e1e229c" translate="yes" xml:space="preserve">
          <source>If you are using Python as provided by Homebrew, you also need to install the following Python modules:</source>
          <target state="translated">Homebrewが提供するPythonを使用している場合は、以下のPythonモジュールもインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="80fc6f9726825bf77f66d4a114a758748f0e0bf6" translate="yes" xml:space="preserve">
          <source>If you are using editor supports &lt;a href=&quot;http://clang.llvm.org/docs/JSONCompilationDatabase.html&quot;&gt;JSON compilation database&lt;/a&gt; based language server, you can generate it:</source>
          <target state="translated">エディターが&lt;a href=&quot;http://clang.llvm.org/docs/JSONCompilationDatabase.html&quot;&gt;JSONコンパイルデータベース&lt;/a&gt;ベースの言語サーバーをサポートしている場合は、それを生成できます。</target>
        </trans-unit>
        <trans-unit id="f0743e84e5a23466f35691c6aa8c710c8f0896bd" translate="yes" xml:space="preserve">
          <source>If you believe that you have found a bug in Electron, please fill out this form to the best of your ability.</source>
          <target state="translated">エレクトロンのバグを発見したと思われる方は、このフォームに可能な限りのご記入をお願いします。</target>
        </trans-unit>
        <trans-unit id="04ed95949f9fc3a03f546e9a18f26b5b78dac1cb" translate="yes" xml:space="preserve">
          <source>If you do not already have a &lt;code&gt;.deb&lt;/code&gt; package, using &lt;code&gt;electron-installer-snap&lt;/code&gt; might be an easier path to create snap packages. However, multiple solutions for creating Debian packages exist, including &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt;&lt;code&gt;electron-forge&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;&lt;code&gt;electron-builder&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://github.com/unindented/electron-installer-debian&quot;&gt;&lt;code&gt;electron-installer-debian&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.deb&lt;/code&gt; パッケージをまだ持っていない場合は、 &lt;code&gt;electron-installer-snap&lt;/code&gt; を使用する方が、snapパッケージを作成するためのより簡単な方法になる場合があります。ただし、&lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt; &lt;code&gt;electron-forge&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt; &lt;code&gt;electron-builder&lt;/code&gt; 、&lt;/a&gt;または&lt;a href=&quot;https://github.com/unindented/electron-installer-debian&quot;&gt; &lt;code&gt;electron-installer-debian&lt;/code&gt; &lt;/a&gt;など、Debianパッケージを作成するための複数のソリューションが存在します。</target>
        </trans-unit>
        <trans-unit id="dae223953c408d185a172c63bf31851f299204f8" translate="yes" xml:space="preserve">
          <source>If you do not need popups, you are better off not allowing the creation of new &lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindows&lt;/code&gt;&lt;/a&gt; by default. This follows the principle of minimally required access: Don't let a website create new popups unless you know it needs that feature.</source>
          <target state="translated">ポップアップが必要ない場合は、デフォルトで新しい&lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindows&lt;/code&gt; &lt;/a&gt;の作成を許可しない方がよいでしょう。これは、最小限必要なアクセスの原則に従います。その機能が必要であることがわかっている場合を除き、Webサイトに新しいポップアップを作成させないでください。</target>
        </trans-unit>
        <trans-unit id="75e742cb1e3b85a399839264fcadf6ad1ed680a7" translate="yes" xml:space="preserve">
          <source>If you do not subscribe to this event and all windows are closed, the default behavior is to quit the app; however, if you subscribe, you control whether the app quits or not. If the user pressed &lt;code&gt;Cmd + Q&lt;/code&gt;, or the developer called &lt;code&gt;app.quit()&lt;/code&gt;, Electron will first try to close all the windows and then emit the &lt;code&gt;will-quit&lt;/code&gt; event, and in this case the &lt;code&gt;window-all-closed&lt;/code&gt; event would not be emitted.</source>
          <target state="translated">このイベントをサブスクライブせず、すべてのウィンドウが閉じている場合、デフォルトの動作はアプリを終了することです。ただし、サブスクライブする場合は、アプリを終了するかどうかを制御します。ユーザーが &lt;code&gt;Cmd + Q&lt;/code&gt; 押すか、開発者が &lt;code&gt;app.quit()&lt;/code&gt; を呼び出した場合、Electronはまずすべてのウィンドウを閉じてから、 &lt;code&gt;will-quit&lt;/code&gt; イベントを発行し &lt;code&gt;window-all-closed&lt;/code&gt; この場合、window-all-closedイベントは発生しません。放出された。</target>
        </trans-unit>
        <trans-unit id="5d0f3f38792a28a4c020dd49aaa3a70bf46349b1" translate="yes" xml:space="preserve">
          <source>If you don't currently have a Windows installation, &lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/&quot;&gt;dev.microsoftedge.com&lt;/a&gt; has timebombed versions of Windows that you can use to build Electron.</source>
          <target state="translated">現在Windowsをインストールしていない場合は、&lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/&quot;&gt;dev.microsoftedge.comに&lt;/a&gt; Electronのビルドに使用できるWindowsの時限爆弾バージョンがあります。</target>
        </trans-unit>
        <trans-unit id="7c78880b2801eaeed7ce1f2cc4299bfdc75ef332" translate="yes" xml:space="preserve">
          <source>If you don't want any tools but only a solid boilerplate to build from, CT Lin's &lt;a href=&quot;https://github.com/chentsulin/electron-react-boilerplate&quot;&gt;&lt;code&gt;electron-react-boilerplate&lt;/code&gt;&lt;/a&gt; might be worth a look. It's quite popular in the community and uses &lt;code&gt;electron-builder&lt;/code&gt; internally.</source>
          <target state="translated">ツールを必要とせず、固体のボイラープレートだけを作成する場合は、CT Linの&lt;a href=&quot;https://github.com/chentsulin/electron-react-boilerplate&quot;&gt; &lt;code&gt;electron-react-boilerplate&lt;/code&gt; &lt;/a&gt;は一見の価値があります。コミュニティでは非常に人気があり、 &lt;code&gt;electron-builder&lt;/code&gt; を内部で使用しています。</target>
        </trans-unit>
        <trans-unit id="c2d2d4069ba374557cc5e36c5e853eb18c112d2e" translate="yes" xml:space="preserve">
          <source>If you don't want to do manual shortcut parsing there are libraries that do advanced key detection such as &lt;a href=&quot;https://github.com/ccampbell/mousetrap&quot;&gt;mousetrap&lt;/a&gt;.</source>
          <target state="translated">手動のショートカット解析を行いたくない場合は、&lt;a href=&quot;https://github.com/ccampbell/mousetrap&quot;&gt;mousetrap&lt;/a&gt;などの高度なキー検出を行うライブラリがあります。</target>
        </trans-unit>
        <trans-unit id="1634a77e4ab54136589ef244b5dfae0ea6e1af51" translate="yes" xml:space="preserve">
          <source>If you encounter this problem, the following articles may prove helpful:</source>
          <target state="translated">この問題に遭遇した場合は、以下の記事が参考になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="7d3538dfb360b356c09289f91591872a5d74f7fc" translate="yes" xml:space="preserve">
          <source>If you encountered an error like &lt;code&gt;Command xxxx not found&lt;/code&gt;, you may try to use the &lt;code&gt;VS2015 Command Prompt&lt;/code&gt; console to execute the build scripts.</source>
          <target state="translated">&lt;code&gt;Command xxxx not found&lt;/code&gt; などのエラーが発生した場合は、 &lt;code&gt;VS2015 Command Prompt&lt;/code&gt; コンソールを使用してビルドスクリプトを実行してみてください。</target>
        </trans-unit>
        <trans-unit id="76da07e932527a6117c3a56371ba3e3878b1de65" translate="yes" xml:space="preserve">
          <source>If you experience crashes or issues in Electron that you believe are not caused by your JavaScript application, but instead by Electron itself, debugging can be a little bit tricky, especially for developers not used to native/C++ debugging. However, using Visual Studio, GitHub's hosted Electron Symbol Server, and the Electron source code, you can enable step-through debugging with breakpoints inside Electron's source code.</source>
          <target state="translated">Electronでクラッシュや問題が発生した場合、それがJavaScriptアプリケーションに原因があるのではなく、Electron自体に原因があると思われる場合、特にネイティブ/C++デバッグに慣れていない開発者にとっては、デバッグは少し厄介なものになります。しかし、Visual Studio、GitHubがホストするElectron Symbol Server、およびElectronのソースコードを使用することで、Electronのソースコード内のブレークポイントを使ってステップスルーデバッグを有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="ea02dd04609c3e21d8286b42c8f5b437dc845f82" translate="yes" xml:space="preserve">
          <source>If you experience crashes or issues in Electron that you believe are not caused by your JavaScript application, but instead by Electron itself, debugging can be a little bit tricky, especially for developers not used to native/C++ debugging. However, using lldb, and the Electron source code, you can enable step-through debugging with breakpoints inside Electron's source code. You can also use &lt;a href=&quot;debugging-instructions-macos-xcode&quot;&gt;XCode for debugging&lt;/a&gt; if you prefer a graphical interface.</source>
          <target state="translated">JavaScriptアプリケーションではなく、Electron自体が原因であると思われるクラッシュまたはElectronの問題が発生した場合、ネイティブ/ C ++デバッグに慣れていない開発者にとって、デバッグは少しトリッキーになる可能性があります。ただし、lldbとElectronソースコードを使用すると、Electronのソースコード内のブレークポイントを使用したステップスルーデバッグを有効にできます。グラフィカルインターフェイスが必要な場合は&lt;a href=&quot;debugging-instructions-macos-xcode&quot;&gt;、デバッグにXCodeを&lt;/a&gt;使用することもできます。</target>
        </trans-unit>
        <trans-unit id="fda1e9a41486e8e36fc4cac6397fc3739cf7ace7" translate="yes" xml:space="preserve">
          <source>If you find yourself running this command often, you can create an alias for it in your &lt;code&gt;~/.gitconfig&lt;/code&gt; file:</source>
          <target state="translated">このコマンドを頻繁に実行している場合は、 &lt;code&gt;~/.gitconfig&lt;/code&gt; ファイルにコマンドのエイリアスを作成できます。</target>
        </trans-unit>
        <trans-unit id="977cfcf861c658c441dcec6fe519ad85a7fcbd6c" translate="yes" xml:space="preserve">
          <source>If you have a security concern, please see the &lt;a href=&quot;https://electronjs.org/SECURITY&quot;&gt;security document&lt;/a&gt;.</source>
          <target state="translated">セキュリティ上の懸念がある場合は、セキュリティに関する&lt;a href=&quot;https://electronjs.org/SECURITY&quot;&gt;ドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="90986c2e6ef30ce59319ba1048589dd7c4ace399" translate="yes" xml:space="preserve">
          <source>If you have an existing build pipeline, you can use &lt;code&gt;electron-installer-snap&lt;/code&gt; programmatically. For more information, see the &lt;a href=&quot;https://docs.snapcraft.io/build-snaps/syntax&quot;&gt;Snapcraft API docs&lt;/a&gt;.</source>
          <target state="translated">既存のビルドパイプラインがある場合は、 &lt;code&gt;electron-installer-snap&lt;/code&gt; をプログラムで使用できます。詳細については、&lt;a href=&quot;https://docs.snapcraft.io/build-snaps/syntax&quot;&gt;Snapcraft APIのドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e9dd61e326667f41af614721259e6dba815d5abe" translate="yes" xml:space="preserve">
          <source>If you have libcc built on your machine in its own repo, tell Electron to use it:</source>
          <target state="translated">マシン上に libcc を構築している場合は、Electron にそれを使うように指示してください。</target>
        </trans-unit>
        <trans-unit id="eccf94d9d65934fc068a168b1624f831893d9ff6" translate="yes" xml:space="preserve">
          <source>If you haven't already, you&amp;rsquo;ll need to sign the Paid Applications Agreement and set up your banking and tax information in iTunes Connect.</source>
          <target state="translated">まだの場合は、有料アプリケーション契約に署名し、iTunes Connectで銀行情報と税務情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="6edde71923d9748cba71b225bd9e64e0b494c180" translate="yes" xml:space="preserve">
          <source>If you haven't yet built libcc but it's already supposed to be upgraded to a new Chromium, bootstrap Electron as usual &lt;code&gt;$ ./script/bootstrap.py -v&lt;/code&gt;</source>
          <target state="translated">libccをまだビルドしていないが、すでに新しいChromiumにアップグレードすることになっている場合は、通常どおりElectronをブートストラップします &lt;code&gt;$ ./script/bootstrap.py -v&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="085847f31a461d6e1ddd1ea7a20e15c8719731d9" translate="yes" xml:space="preserve">
          <source>If you installed a native module and found it was not working, you need to check following things:</source>
          <target state="translated">ネイティブモジュールをインストールしても動作しない場合は、以下のことを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="7118d24a866d3a9a6e79ed6be1e457ffad2d3d88" translate="yes" xml:space="preserve">
          <source>If you know of other great accessibility tools for Electron, add them to the accessibility documentation with a pull request.</source>
          <target state="translated">他にもElectron用の優れたアクセシビリティツールをご存知でしたら、プルリクエストでアクセシビリティドキュメントに追加してください。</target>
        </trans-unit>
        <trans-unit id="52d812014ac06ca7d290314b0daf6918fd02d885" translate="yes" xml:space="preserve">
          <source>If you need the entire &lt;code&gt;electron&lt;/code&gt; module, you can require it and then using destructuring to access the individual modules from &lt;code&gt;electron&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;electron&lt;/code&gt; モジュール全体が必要な場合は、それを要求してから、destructuringを使用して &lt;code&gt;electron&lt;/code&gt; から個々のモジュールにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="13f9e4e0c8e8e4ed90e08b42600091d977f0e2ed" translate="yes" xml:space="preserve">
          <source>If you need to customize your configuration, you can &lt;a href=&quot;https://github.com/electron/update-electron-app&quot;&gt;pass options to &lt;code&gt;update-electron-app&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://github.com/electron/update.electronjs.org&quot;&gt;use the update service directly&lt;/a&gt;.</source>
          <target state="translated">設定をカスタマイズする必要がある場合は、&lt;a href=&quot;https://github.com/electron/update-electron-app&quot;&gt;オプションを &lt;code&gt;update-electron-app&lt;/code&gt; に&lt;/a&gt;渡すか&lt;a href=&quot;https://github.com/electron/update.electronjs.org&quot;&gt;、更新サービスを直接使用できます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="476bf4b37d10e866176315b603d648667b556ae6" translate="yes" xml:space="preserve">
          <source>If you need to force a re-download of the asset and the SHASUM file set the &lt;code&gt;force_no_cache&lt;/code&gt; environment variable to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">アセットとSHASUMファイルの再ダウンロードを強制する必要がある場合は、 &lt;code&gt;force_no_cache&lt;/code&gt; 環境変数を &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="5862300ccd0c3e98db2dcc5d2da273c4be2b2485" translate="yes" xml:space="preserve">
          <source>If you need to mix sandboxed and non-sandboxed renderers in one application, simply omit the &lt;code&gt;--enable-sandbox&lt;/code&gt; argument. Without this argument, windows created with &lt;code&gt;sandbox: true&lt;/code&gt; will still have node.js disabled and communicate only via IPC, which by itself is already a gain from security POV.</source>
          <target state="translated">サンドボックス化されたレンダラーとサンドボックス化されていないレンダラーを1つのアプリケーションで混在させる必要がある場合は、 &lt;code&gt;--enable-sandbox&lt;/code&gt; 引数を省略します。この引数がないと、 &lt;code&gt;sandbox: true&lt;/code&gt; 作成されたウィンドウは引き続きnode.jsが無効になり、IPCを介してのみ通信します。</target>
        </trans-unit>
        <trans-unit id="629e945de9624fcccddb1992beb1d4c29daab014" translate="yes" xml:space="preserve">
          <source>If you need to use an HTTP proxy you can &lt;a href=&quot;https://github.com/request/request/tree/f0c4ec061141051988d1216c24936ad2e7d5c45d#controlling-proxy-behaviour-using-environment-variables&quot;&gt;set these environment variables&lt;/a&gt;.</source>
          <target state="translated">HTTPプロキシを使用する必要がある場合は、&lt;a href=&quot;https://github.com/request/request/tree/f0c4ec061141051988d1216c24936ad2e7d5c45d#controlling-proxy-behaviour-using-environment-variables&quot;&gt;これらの環境変数を設定&lt;/a&gt;できます。</target>
        </trans-unit>
        <trans-unit id="792716b5a2b850708663c8f195d92cab5976c508" translate="yes" xml:space="preserve">
          <source>If you only want to build Electron quickly for testing or development, you can download the shared library versions by passing the &lt;code&gt;--dev&lt;/code&gt; parameter:</source>
          <target state="translated">テストまたは開発のためにElectronをすばやくビルドするだけの場合は、 &lt;code&gt;--dev&lt;/code&gt; パラメータを渡して共有ライブラリのバージョンをダウンロードできます。</target>
        </trans-unit>
        <trans-unit id="2d7d40dcd0ee25b28e3d79e5292f1b6c52000d40" translate="yes" xml:space="preserve">
          <source>If you provided &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;args&lt;/code&gt; options to &lt;code&gt;app.setLoginItemSettings&lt;/code&gt; then you need to pass the same arguments here for &lt;code&gt;openAtLogin&lt;/code&gt; to be set correctly.</source>
          <target state="translated">あなたが提供されている場合 &lt;code&gt;path&lt;/code&gt; と &lt;code&gt;args&lt;/code&gt; にオプションを &lt;code&gt;app.setLoginItemSettings&lt;/code&gt; あなたがのためにここに同じ引数を渡す必要があり &lt;code&gt;openAtLogin&lt;/code&gt; 正しく設定します。</target>
        </trans-unit>
        <trans-unit id="1f1e57d4cd3f8005ef706f6a418f0bd254fc0428" translate="yes" xml:space="preserve">
          <source>If you want a quick fix, you can make the variables global by changing your code from this:</source>
          <target state="translated">手っ取り早く修正したい場合は、ここからコードを変更することで変数をグローバルにすることができます。</target>
        </trans-unit>
        <trans-unit id="c9335e6d51d50f1c8319d8890f1068dd36a905ea" translate="yes" xml:space="preserve">
          <source>If you want to build for an &lt;code&gt;arm&lt;/code&gt; target you should also install the following dependencies:</source>
          <target state="translated">&lt;code&gt;arm&lt;/code&gt; ターゲット用にビルドする場合は、次の依存関係もインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="4c1e6dc0c9b9cafd7d68ef3e780b5817a75fc949" translate="yes" xml:space="preserve">
          <source>If you want to change the architecture that is downloaded (e.g., &lt;code&gt;ia32&lt;/code&gt; on an &lt;code&gt;x64&lt;/code&gt; machine), you can use the &lt;code&gt;--arch&lt;/code&gt; flag with npm install or set the &lt;code&gt;npm_config_arch&lt;/code&gt; environment variable:</source>
          <target state="translated">あなたがダウンロードしたアーキテクチャを変更したい場合（例えば、 &lt;code&gt;ia32&lt;/code&gt; 上 &lt;code&gt;x64&lt;/code&gt; マシン）は、使用することができます &lt;code&gt;--arch&lt;/code&gt; インストールNPMとのフラグを設定したり &lt;code&gt;npm_config_arch&lt;/code&gt; 環境変数を：</target>
        </trans-unit>
        <trans-unit id="5201d3612d4e2d0860bad7ca51a07c78c1f45c88" translate="yes" xml:space="preserve">
          <source>If you want to control the guest content in any way, you can write JavaScript that listens for &lt;code&gt;webview&lt;/code&gt; events and responds to those events using the &lt;code&gt;webview&lt;/code&gt; methods. Here's sample code with two event listeners: one that listens for the web page to start loading, the other for the web page to stop loading, and displays a &quot;loading...&quot; message during the load time:</source>
          <target state="translated">ゲストコンテンツを何らかの方法で制御する場合は、 &lt;code&gt;webview&lt;/code&gt; イベントをリッスンし、 &lt;code&gt;webview&lt;/code&gt; メソッドを使用してそれらのイベントに応答するJavaScriptを記述できます。2つのイベントリスナーを使用したサンプルコードを次に示します。1つはWebページの読み込みをリッスンし、もう1つはWebページの読み込みを停止し、読み込み中に「loading ...」メッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="4fb4f89f45ce1db939f58b3755053c11fd6862aa" translate="yes" xml:space="preserve">
          <source>If you want to debug and step through libchromiumcontent, you will have to run the bootsrap script with the &lt;code&gt;--build_debug_libcc&lt;/code&gt; argument.</source>
          <target state="translated">libchromiumcontentをデバッグしてステップスルーする場合は、 &lt;code&gt;--build_debug_libcc&lt;/code&gt; 引数を指定してbootsrapスクリプトを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="70bc54ee6a7f8f0d7dd27d707f8b8f93a407e696" translate="yes" xml:space="preserve">
          <source>If you want to format the changed code on your latest git commit (HEAD), you can run &lt;code&gt;git-clang-format HEAD~1&lt;/code&gt;. See &lt;code&gt;git-clang-format -h&lt;/code&gt; for more details.</source>
          <target state="translated">変更されたコードを最新のgit commit（HEAD）で &lt;code&gt;git-clang-format HEAD~1&lt;/code&gt; する場合は、git-clang-format HEAD〜1を実行できます。詳細については、 &lt;code&gt;git-clang-format -h&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="1a26518fe1e613b5d3ff699a348197b25272e778" translate="yes" xml:space="preserve">
          <source>If you want to handle keyboard shortcuts for a &lt;a href=&quot;../api/browser-window&quot;&gt;BrowserWindow&lt;/a&gt;, you can use the &lt;code&gt;keyup&lt;/code&gt; and &lt;code&gt;keydown&lt;/code&gt; event listeners on the window object inside the renderer process.</source>
          <target state="translated">&lt;a href=&quot;../api/browser-window&quot;&gt;BrowserWindowの&lt;/a&gt;キーボードショートカットを処理する場合は、レンダラープロセス内のウィンドウオブジェクトで &lt;code&gt;keyup&lt;/code&gt; および &lt;code&gt;keydown&lt;/code&gt; イベントリスナーを使用できます。</target>
        </trans-unit>
        <trans-unit id="e23f9ec8d6d374e4f11ab44cabacc757c58d8152" translate="yes" xml:space="preserve">
          <source>If you want to keep exact same behaviors on all platforms, you should not rely on the &lt;code&gt;click&lt;/code&gt; event and always attach a context menu to the tray icon.</source>
          <target state="translated">すべてのプラットフォームでまったく同じ動作を維持したい場合は、 &lt;code&gt;click&lt;/code&gt; イベントに依存せず、常にトレイアイコンにコンテキストメニューをアタッチしてください。</target>
        </trans-unit>
        <trans-unit id="f18bc349ad3d428e75b99e3c156715cfcda822c2" translate="yes" xml:space="preserve">
          <source>If you want to show Notifications from a renderer process you should use the &lt;a href=&quot;../tutorial/notifications&quot;&gt;HTML5 Notification API&lt;/a&gt;</source>
          <target state="translated">レンダラープロセスからの通知を表示する場合は、&lt;a href=&quot;../tutorial/notifications&quot;&gt;HTML5通知APIを&lt;/a&gt;使用する必要があります</target>
        </trans-unit>
        <trans-unit id="9767f677f83eca842bdd0bf0ecee26c0ee37f559" translate="yes" xml:space="preserve">
          <source>If you want to support displays with different DPI densities at the same time, you can put images with different sizes in the same folder and use the filename without DPI suffixes. For example:</source>
          <target state="translated">異なるDPI濃度のディスプレイを同時にサポートしたい場合は、異なるサイズの画像を同じフォルダに入れて、DPIの接尾辞を除いたファイル名を使用することができます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="8e9880ad441ad45f30eca80c7b9d8eefd5e0f74c" translate="yes" xml:space="preserve">
          <source>If you want to use Chrome's built-in &lt;code&gt;window.open()&lt;/code&gt; implementation, set &lt;code&gt;nativeWindowOpen&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in the &lt;code&gt;webPreferences&lt;/code&gt; options object.</source>
          <target state="translated">Chromeの組み込み &lt;code&gt;window.open()&lt;/code&gt; 実装を使用する &lt;code&gt;true&lt;/code&gt; は、 &lt;code&gt;webPreferences&lt;/code&gt; オプションオブジェクトで &lt;code&gt;nativeWindowOpen&lt;/code&gt; をtrueに設定します。</target>
        </trans-unit>
        <trans-unit id="aaffc18ff167e6c5dc5030e5cecc520f958918d9" translate="yes" xml:space="preserve">
          <source>If you would like to build both &lt;code&gt;Release&lt;/code&gt; and &lt;code&gt;Debug&lt;/code&gt; targets:</source>
          <target state="translated">&lt;code&gt;Release&lt;/code&gt; ターゲットと &lt;code&gt;Debug&lt;/code&gt; ターゲットの両方をビルドする場合：</target>
        </trans-unit>
        <trans-unit id="f79f8a39f57cfbd50d711f9530442b82349e7cfe" translate="yes" xml:space="preserve">
          <source>If you'd like to contribute to Electron, see the &lt;a href=&quot;https://electronjs.org/CONTRIBUTING&quot;&gt;contributing document&lt;/a&gt;.</source>
          <target state="translated">Electronに寄稿したい場合は、&lt;a href=&quot;https://electronjs.org/CONTRIBUTING&quot;&gt;寄稿ドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2aead26dae48a464ea0fe8f7ce84ef9144a991e3" translate="yes" xml:space="preserve">
          <source>If you're debugging something, it can be helpful to pass some extra flags to the Electron binary:</source>
          <target state="translated">何かをデバッグしている場合、Electron バイナリに余分なフラグを渡すと便利です。</target>
        </trans-unit>
        <trans-unit id="5f5e9e99ea82483efec97ab08ba1a5f91453255c" translate="yes" xml:space="preserve">
          <source>If you're developing Electron and don't plan to redistribute your custom Electron build, you may skip this section.</source>
          <target state="translated">Electronを開発していて、カスタムElectronビルドを再配布する予定がない場合は、このセクションを省略しても構いません。</target>
        </trans-unit>
        <trans-unit id="c161dc98d83657640db26ca7b021acbcc3a9d819" translate="yes" xml:space="preserve">
          <source>If you're developing a private Electron application, or if you're not publishing releases to GitHub Releases, it may be necessary to run your own update server.</source>
          <target state="translated">Electronのプライベートアプリケーションを開発している場合や、GitHub Releasesにリリースを公開していない場合は、独自のアップデートサーバーを実行する必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="8b9eaf73429dbe46c500b2d1339d9d43d1c25e98" translate="yes" xml:space="preserve">
          <source>If you're looking for programming help, for answers to questions, or to join in discussion with other developers who use Electron, you can interact with the community in these locations:</source>
          <target state="translated">プログラミングのヘルプ、質問への回答、Electronを使用している他の開発者とのディスカッションに参加したい場合は、以下の場所でコミュニティと交流することができます。</target>
        </trans-unit>
        <trans-unit id="af25fd84a5e354fae9ce7065072bc6d204e2a1e1" translate="yes" xml:space="preserve">
          <source>If you're setting just a custom titlebar as draggable, you also need to make all buttons in titlebar non-draggable.</source>
          <target state="translated">カスタムタイトルバーだけをドラッグ可能に設定している場合は、タイトルバーのすべてのボタンをドラッグ不可にする必要があります。</target>
        </trans-unit>
        <trans-unit id="e6b3c3654b5d12a62eae18258917bf4a22841276" translate="yes" xml:space="preserve">
          <source>If you've found a bug in a &lt;a href=&quot;#supported-versions&quot;&gt;supported version&lt;/a&gt; of Electron, please report it with the &lt;a href=&quot;../development/issues&quot;&gt;issue tracker&lt;/a&gt;.</source>
          <target state="translated">Electronの&lt;a href=&quot;#supported-versions&quot;&gt;サポートさ&lt;/a&gt;れているバージョンでバグを見つけた場合は、&lt;a href=&quot;../development/issues&quot;&gt;Issue Trackerで&lt;/a&gt;報告してください。</target>
        </trans-unit>
        <trans-unit id="51aa10ea3c1c92e6ecacb529aa885236faf8f979" translate="yes" xml:space="preserve">
          <source>If your app is packaged with &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;&lt;code&gt;electron-builder&lt;/code&gt;&lt;/a&gt; you can use the &lt;a href=&quot;https://www.electron.build/auto-update&quot;&gt;electron-updater&lt;/a&gt; module, which does not require a server and allows for updates from S3, GitHub or any other static file host. This sidesteps Electron's built-in update mechanism, meaning that the rest of this documentation will not apply to &lt;code&gt;electron-builder&lt;/code&gt;'s updater.</source>
          <target state="translated">アプリが同梱されている場合&lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt; &lt;code&gt;electron-builder&lt;/code&gt; &lt;/a&gt;を使用でき&lt;a href=&quot;https://www.electron.build/auto-update&quot;&gt;電子アップデータの&lt;/a&gt;サーバーを必要とし、S3、GitHubのか、他の静的ファイルのホストからの更新を可能にしていないモジュールを、。これはElectronの組み込み更新メカニズムを回避します。つまり、このドキュメントの残りの部分は &lt;code&gt;electron-builder&lt;/code&gt; のアップデーターには適用されません。</target>
        </trans-unit>
        <trans-unit id="892280c67a78254c94b3aa2e961496a6129be496" translate="yes" xml:space="preserve">
          <source>Ignore application menu shortcuts while this web contents is focused.</source>
          <target state="translated">このWebコンテンツにフォーカスしている間は、アプリケーションメニューのショートカットを無視します。</target>
        </trans-unit>
        <trans-unit id="424100d46b3ab239a3c2ec5d1347f13d4479a06e" translate="yes" xml:space="preserve">
          <source>Ignore the connections limit for &lt;code&gt;domains&lt;/code&gt; list separated by &lt;code&gt;,&lt;/code&gt;.</source>
          <target state="translated">接続が限界無視 &lt;code&gt;domains&lt;/code&gt; によって分離されたリスト &lt;code&gt;,&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d5fcbfbdcdfee026e6182c4343823188f45b893e" translate="yes" xml:space="preserve">
          <source>Ignores certificate related errors.</source>
          <target state="translated">証明書関連のエラーを無視します。</target>
        </trans-unit>
        <trans-unit id="5044799f824f27630de93bd0f1eb314c6bd530a3" translate="yes" xml:space="preserve">
          <source>Ignoring Above Advice</source>
          <target state="translated">上記のアドバイスを無視する</target>
        </trans-unit>
        <trans-unit id="a063d213139ef01259fb2e1362319e9b85ed8247" translate="yes" xml:space="preserve">
          <source>Ignoring mouse messages makes the web page oblivious to mouse movement, meaning that mouse movement events will not be emitted. On Windows operating systems an optional parameter can be used to forward mouse move messages to the web page, allowing events such as &lt;code&gt;mouseleave&lt;/code&gt; to be emitted:</source>
          <target state="translated">マウスメッセージを無視すると、Webページはマウスの動きに気付かなくなります。つまり、マウスの動きイベントは発行されません。Windowsオペレーティングシステムでは、オプションのパラメーターを使用して、マウス移動メッセージをWebページに &lt;code&gt;mouseleave&lt;/code&gt; し、mouseleaveなどのイベントを発行できます。</target>
        </trans-unit>
        <trans-unit id="3ca349de6e383b65bb6d1144f63a50efd179453b" translate="yes" xml:space="preserve">
          <source>Immediately shows the notification to the user, please note this means unlike the HTML5 Notification implementation, simply instantiating a &lt;code&gt;new Notification&lt;/code&gt; does not immediately show it to the user, you need to call this method before the OS will display it.</source>
          <target state="translated">ユーザーに通知をすぐに表示します。これは、HTML5通知の実装とは異なり、 &lt;code&gt;new Notification&lt;/code&gt; インスタンス化するだけではすぐにはユーザーに表示されないことに注意してください。OSが通知を表示する前に、このメソッドを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="ebb90ad1916e70a7d909dacfe5051f48aa4dd948" translate="yes" xml:space="preserve">
          <source>Implementing Updates in Your App</source>
          <target state="translated">アプリへのアップデートの実装</target>
        </trans-unit>
        <trans-unit id="ebcfb4906925f0491b8dbb88fb357667615aabaa" translate="yes" xml:space="preserve">
          <source>Important things to notice in the preload script:</source>
          <target state="translated">プリロードスクリプトで注意すべき重要なこと</target>
        </trans-unit>
        <trans-unit id="aeebb2ee44266da25bb466aa24666f88aee9acbf" translate="yes" xml:space="preserve">
          <source>Imports the certificate in pkcs12 format into the platform certificate store. &lt;code&gt;callback&lt;/code&gt; is called with the &lt;code&gt;result&lt;/code&gt; of import operation, a value of &lt;code&gt;0&lt;/code&gt; indicates success while any other value indicates failure according to chromium &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;net_error_list&lt;/a&gt;.</source>
          <target state="translated">証明書をpkcs12形式でプラットフォームの証明書ストアにインポートします。 &lt;code&gt;callback&lt;/code&gt; はインポート操作の &lt;code&gt;result&lt;/code&gt; で呼び出され、値 &lt;code&gt;0&lt;/code&gt; は成功を示し、その他の値はchromium &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;net_error_list&lt;/a&gt;に従って失敗を示します。</target>
        </trans-unit>
        <trans-unit id="54d043d66902b54dc09febe87486b632a9ed7082" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;electron-crashpad-vA.B.C.D&lt;/code&gt;, cherry-pick the patch's checksum</source>
          <target state="translated">では &lt;code&gt;electron-crashpad-vA.B.C.D&lt;/code&gt; 、パッチのチェックサムを桜選びます</target>
        </trans-unit>
        <trans-unit id="2c0a5b221735fd5165fe6a72b7dd95e84d476107" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;script/upload.py&lt;/code&gt;, you &lt;em&gt;must&lt;/em&gt; set &lt;code&gt;ELECTRON_REPO&lt;/code&gt; to your fork (&lt;code&gt;MYORG/electron&lt;/code&gt;), especially if you are a contributor to Electron proper.</source>
          <target state="translated">では &lt;code&gt;script/upload.py&lt;/code&gt; 、あなたが&lt;em&gt;しなければならない&lt;/em&gt;設定 &lt;code&gt;ELECTRON_REPO&lt;/code&gt; を（自分のフォークに &lt;code&gt;MYORG/electron&lt;/code&gt; あなたが適切な電子に貢献している場合は特に、）。</target>
        </trans-unit>
        <trans-unit id="21e0f6f2ce9e10de95c77dbb8d73d89c7bd736b0" translate="yes" xml:space="preserve">
          <source>In Chromium, this process is referred to as the &quot;browser process&quot;. It is renamed in Electron to avoid confusion with renderer processes.</source>
          <target state="translated">Chromium では、このプロセスは「ブラウザプロセス」と呼ばれています。これはレンダラープロセスとの混同を避けるため、Electronでは名前が変更されています。</target>
        </trans-unit>
        <trans-unit id="f1437a264a3475229aede1c4942b00e775cc3256" translate="yes" xml:space="preserve">
          <source>In Detail: Electron's Versioning Scheme</source>
          <target state="translated">詳細はこちら エレクトロンのバージョニングスキーム</target>
        </trans-unit>
        <trans-unit id="48a32c72dc62cc33ed97d937cb01ff3252d0a200" translate="yes" xml:space="preserve">
          <source>In Detail: Installing Electron</source>
          <target state="translated">詳細はこちら 電子機器の設置</target>
        </trans-unit>
        <trans-unit id="f1e68e5a8bcc9c028bebf7a43fc653e2a4ab4f00" translate="yes" xml:space="preserve">
          <source>In Detail: Packaging App Source Code with asar</source>
          <target state="translated">詳細を見てみると asarでアプリのソースコードをパッケージ化する</target>
        </trans-unit>
        <trans-unit id="cad4f214e72fcc9d3a93d8052858e48edb7b60be" translate="yes" xml:space="preserve">
          <source>In Detail: Using Pepper Flash Plugin</source>
          <target state="translated">詳細はこちら Pepper Flashプラグインの使用</target>
        </trans-unit>
        <trans-unit id="7fada1074b55085e8425e24c9b5cdb61ea84c1ba" translate="yes" xml:space="preserve">
          <source>In Detail: Using Widevine CDM Plugin</source>
          <target state="translated">詳細はこちら Widevine CDMプラグインの使用</target>
        </trans-unit>
        <trans-unit id="6cff52c011bfed815b8af07ca624dea395e580f9" translate="yes" xml:space="preserve">
          <source>In Devtron, there is a new accessibility tab which will allow you to audit a page in your app, sort and filter the results.</source>
          <target state="translated">Devtronには新しいアクセシビリティ タブがあり、アプリ内のページを監査したり、結果をソートしたり、フィルタリングしたりすることができます。</target>
        </trans-unit>
        <trans-unit id="9d9c3ade67add20f1f2811f5e2457d94c8480632" translate="yes" xml:space="preserve">
          <source>In Electron there are two sets of APIs: Node APIs provided by Node.js and Web APIs provided by Chromium. Both APIs support reading files from &lt;code&gt;asar&lt;/code&gt; archives.</source>
          <target state="translated">Electronには、Node.jsによって提供されるNode APIとChromiumによって提供されるWeb APIの2つのAPIセットがあります。どちらのAPIも、 &lt;code&gt;asar&lt;/code&gt; アーカイブからのファイルの読み取りをサポートしています。</target>
        </trans-unit>
        <trans-unit id="0b42fd03fbe33fd66fe7eccfe82548b3608207c4" translate="yes" xml:space="preserve">
          <source>In Electron we took a very similar approach: for &lt;code&gt;Debug&lt;/code&gt; builds, the binary will be linked to a shared library version of Chromium's components to achieve fast linking time; for &lt;code&gt;Release&lt;/code&gt; builds, the binary will be linked to the static library versions, so we can have the best possible binary size and performance.</source>
          <target state="translated">Electronでは非常によく似たアプローチを採用しました。 &lt;code&gt;Debug&lt;/code&gt; ビルドの場合、バイナリはChromiumのコンポーネントの共有ライブラリバージョンにリンクされ、高速なリンク時間を実現します。以下のための &lt;code&gt;Release&lt;/code&gt; ビルドを我々は可能な限り最高のバイナリサイズと性能を持つことができるように、バイナリは、静的ライブラリのバージョンにリンクされます。</target>
        </trans-unit>
        <trans-unit id="625f5fe9d865e659c090177d284e16759fd6bea9" translate="yes" xml:space="preserve">
          <source>In Electron you can use the Widevine CDM plugin shipped with Chrome browser.</source>
          <target state="translated">Electronでは、Chromeブラウザに同梱されているWidevine CDMプラグインを使用することができます。</target>
        </trans-unit>
        <trans-unit id="e1e890d94f8d23d7f8fadfe52d2a05946a4ed8db" translate="yes" xml:space="preserve">
          <source>In Electron, GUI-related modules (such as &lt;code&gt;dialog&lt;/code&gt;, &lt;code&gt;menu&lt;/code&gt; etc.) are only available in the main process, not in the renderer process. In order to use them from the renderer process, the &lt;code&gt;ipc&lt;/code&gt; module is necessary to send inter-process messages to the main process. With the &lt;code&gt;remote&lt;/code&gt; module, you can invoke methods of the main process object without explicitly sending inter-process messages, similar to Java's &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_remote_method_invocation&quot;&gt;RMI&lt;/a&gt;. An example of creating a browser window from a renderer process:</source>
          <target state="translated">Electronでは、GUI関連のモジュール（ &lt;code&gt;dialog&lt;/code&gt; 、 &lt;code&gt;menu&lt;/code&gt; など）はメインプロセスでのみ使用でき、レンダラープロセスでは使用できません。それらをレンダラープロセスから使用するには、 &lt;code&gt;ipc&lt;/code&gt; モジュールがプロセス間メッセージをメインプロセスに送信する必要があります。 &lt;code&gt;remote&lt;/code&gt; モジュールは、明示的にJavaのに似たプロセス間メッセージ、送信せずにメインプロセスオブジェクトのメソッドを呼び出すことができる&lt;a href=&quot;https://en.wikipedia.org/wiki/Java_remote_method_invocation&quot;&gt;RMIを&lt;/a&gt;。レンダラープロセスからブラウザーウィンドウを作成する例：</target>
        </trans-unit>
        <trans-unit id="1202e6b2d57c7ee8995daa820672658a3e0badef" translate="yes" xml:space="preserve">
          <source>In Electron, Node.js and Chromium share a single V8 instance&amp;mdash;usually the version that Chromium is using. Most of the time this &lt;em&gt;just works&lt;/em&gt; but sometimes it means patching Node.js.</source>
          <target state="translated">Electronでは、Node.jsとChromiumは単一のV8インスタンスを共有します。通常はChromiumが使用しているバージョンです。ほとんどの場合、これ&lt;em&gt;は機能します&lt;/em&gt;が、Node.jsにパッチを適用することを意味する場合もあります。</target>
        </trans-unit>
        <trans-unit id="3034223aae286e52538a3884619c4b3277a74c70" translate="yes" xml:space="preserve">
          <source>In Electron, for the APIs that take images, you can pass either file paths or &lt;code&gt;NativeImage&lt;/code&gt; instances. An empty image will be used when &lt;code&gt;null&lt;/code&gt; is passed.</source>
          <target state="translated">Electronでは、画像を取得するAPIの場合、ファイルパスまたは &lt;code&gt;NativeImage&lt;/code&gt; インスタンスを渡すことができます。 &lt;code&gt;null&lt;/code&gt; が渡されると、空の画像が使用されます。</target>
        </trans-unit>
        <trans-unit id="b349f269ed56f6dd1e5062315e66fa6cb87823e6" translate="yes" xml:space="preserve">
          <source>In Electron, the entry point is a JavaScript script. Instead of providing a URL directly, you manually create a browser window and load an HTML file using the API. You also need to listen to window events to decide when to quit the application.</source>
          <target state="translated">Electronでは、エントリーポイントはJavaScriptスクリプトです。URLを直接提供するのではなく、手動でブラウザウィンドウを作成し、APIを使ってHTMLファイルを読み込みます。また、アプリケーションを終了するタイミングを決定するために、ウィンドウイベントをリッスンする必要があります。</target>
        </trans-unit>
        <trans-unit id="63df86282942316da6f7f2debaa8b9d3f7f75671" translate="yes" xml:space="preserve">
          <source>In Electron, the process that runs &lt;code&gt;package.json&lt;/code&gt;'s &lt;code&gt;main&lt;/code&gt; script is called &lt;strong&gt;the main process&lt;/strong&gt;. The script that runs in the main process can display a GUI by creating web pages. An Electron app always has one main process, but never more.</source>
          <target state="translated">Electronでは、 &lt;code&gt;package.json&lt;/code&gt; の &lt;code&gt;main&lt;/code&gt; スクリプトを実行するプロセスを&lt;strong&gt;メインプロセス&lt;/strong&gt;と呼び&lt;strong&gt;ます&lt;/strong&gt;。メインプロセスで実行されるスクリプトは、Webページを作成してGUIを表示できます。Electronアプリには常に1つのメインプロセスがありますが、それ以上はありません。</target>
        </trans-unit>
        <trans-unit id="37b502635f1118a89c49c89684115bf4576afe89" translate="yes" xml:space="preserve">
          <source>In Electron, we have several ways to communicate between the main process and renderer processes. Like &lt;a href=&quot;../api/ipc-renderer&quot;&gt;&lt;code&gt;ipcRenderer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../api/ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; modules for sending messages, and the &lt;a href=&quot;../api/remote&quot;&gt;remote&lt;/a&gt; module for RPC style communication. There is also an FAQ entry on &lt;a href=&quot;../faq#how-to-share-data-between-web-pages&quot;&gt;how to share data between web pages&lt;/a&gt;.</source>
          <target state="translated">Electronでは、メインプロセスとレンダラープロセスの間で通信する方法がいくつかあります。メッセージを送信するための&lt;a href=&quot;../api/ipc-renderer&quot;&gt; &lt;code&gt;ipcRenderer&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../api/ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; &lt;/a&gt;モジュール、およびRPCスタイルの通信のための&lt;a href=&quot;../api/remote&quot;&gt;リモート&lt;/a&gt;モジュールと同様です。&lt;a href=&quot;../faq#how-to-share-data-between-web-pages&quot;&gt;Webページ間でデータを共有する方法についての&lt;/a&gt; FAQエントリもあります。</target>
        </trans-unit>
        <trans-unit id="1a0df57b98ac115921f2ce0f52c5cef0f577cce5" translate="yes" xml:space="preserve">
          <source>In NW.js the main entry point of an application is a web page or a JS script. You specify a html or js file in the &lt;code&gt;package.json&lt;/code&gt; and it is opened in a browser window as the application's main window (in case of an html entrypoint) or the script is executed.</source>
          <target state="translated">NW.jsでは、アプリケーションの主なエントリポイントはWebページまたはJSスクリプトです。 &lt;code&gt;package.json&lt;/code&gt; でhtmlまたはjsファイルを指定すると、アプリケーションのメインウィンドウ（htmlエントリポイントの場合）またはスクリプトが実行されるときに、ブラウザーウィンドウで開かれます。</target>
        </trans-unit>
        <trans-unit id="c8afc68a42dc2274d210dd3bcb2dc90a34aef201" translate="yes" xml:space="preserve">
          <source>In NW.js, the Node integration in web pages requires patching Chromium to work, while in Electron we chose a different way to integrate the libuv loop with each platform's message loop to avoid hacking Chromium. See the &lt;a href=&quot;https://github.com/electron/electron/tree/master/atom/common&quot;&gt;&lt;code&gt;node_bindings&lt;/code&gt;&lt;/a&gt; code for how that was done.</source>
          <target state="translated">NW.jsでは、Webページでのノード統合には、Chromiumにパッチを適用する必要がありますが、エレクトロンでは、Chromiumのハッキングを回避するためにlibuvループを各プラットフォームのメッセージループと統合する別の方法を選択しました。これがどのように行われたかについては、&lt;a href=&quot;https://github.com/electron/electron/tree/master/atom/common&quot;&gt; &lt;code&gt;node_bindings&lt;/code&gt; &lt;/a&gt;コードを参照してください。</target>
        </trans-unit>
        <trans-unit id="ef45d1cc4d48650ae9b6257f804949f11c64aa48" translate="yes" xml:space="preserve">
          <source>In Node.js and Electron, each running process has a &lt;code&gt;process&lt;/code&gt; object. This object is a global that provides information about, and control over, the current process. As a global, it is always available to applications without using require().</source>
          <target state="translated">Node.jsとElectronでは、実行中の各プロセスに &lt;code&gt;process&lt;/code&gt; オブジェクトがあります。このオブジェクトは、現在のプロセスに関する情報を提供し、それを制御するグローバルです。グローバルとして、require（）を使用せずにアプリケーションで常に使用できます。</target>
        </trans-unit>
        <trans-unit id="fd36a9edb29970d52de8da21b0c6a4fa6aa74ad9" translate="yes" xml:space="preserve">
          <source>In a frameless window the dragging behaviour may conflict with selecting text. For example, when you drag the titlebar you may accidentally select the text on the titlebar. To prevent this, you need to disable text selection within a draggable area like this:</source>
          <target state="translated">フレームレスウィンドウでは、ドラッグの動作がテキストの選択と衝突することがあります。例えば、タイトルバーをドラッグすると、誤ってタイトルバー上のテキストを選択してしまうことがあります。これを防ぐには、このようにドラッグ可能な領域内でのテキスト選択を無効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="0993be2098f3d2d823e3f842cc460f60cc7dc51f" translate="yes" xml:space="preserve">
          <source>In a web page, files in an archive can be requested with the &lt;code&gt;file:&lt;/code&gt; protocol. Like the Node API, &lt;code&gt;asar&lt;/code&gt; archives are treated as directories.</source>
          <target state="translated">Webページでは、アーカイブ &lt;code&gt;file:&lt;/code&gt; はfile：プロトコルでリクエストできます。Node APIと同様に、 &lt;code&gt;asar&lt;/code&gt; アーカイブはディレクトリとして扱われます。</target>
        </trans-unit>
        <trans-unit id="4ebbe08fb4030b6ca8614a5b9c6fc5a297df17c6" translate="yes" xml:space="preserve">
          <source>In addition to changing the architecture, you can also specify the platform (e.g., &lt;code&gt;win32&lt;/code&gt;, &lt;code&gt;linux&lt;/code&gt;, etc.) using the &lt;code&gt;--platform&lt;/code&gt; flag:</source>
          <target state="translated">アーキテクチャの変更に加えて、あなたも（例えば、プラットフォームを指定することができます &lt;code&gt;win32&lt;/code&gt; の、 &lt;code&gt;linux&lt;/code&gt; 使用など） &lt;code&gt;--platform&lt;/code&gt; フラグ：</target>
        </trans-unit>
        <trans-unit id="ad38744a2cd250359b7a0139989ab544e5c30bfd" translate="yes" xml:space="preserve">
          <source>In addition to these methods, the child window implements &lt;code&gt;window.opener&lt;/code&gt; object with no properties and a single method.</source>
          <target state="translated">これらのメソッドに加えて、子ウィンドウは、プロパティなしで単一のメソッドを持つ &lt;code&gt;window.opener&lt;/code&gt; オブジェクトを実装します。</target>
        </trans-unit>
        <trans-unit id="eb6b63b8a09f8385b54d78c9291e4e4e947d73b7" translate="yes" xml:space="preserve">
          <source>In addition, the exe is launched inside the appx model - meaning that it can use many of the APIs available to the Universal Windows Platform. To gain even more capabilities, an Electron app can pair up with an invisible UWP background task launched together with the &lt;code&gt;exe&lt;/code&gt; - sort of launched as a sidekick to run tasks in the background, receive push notifications, or to communicate with other UWP applications.</source>
          <target state="translated">さらに、exeはappxモデル内で起動されます。つまり、ユニバーサルWindowsプラットフォームで利用可能な多くのAPIを使用できます。さらに多くの機能を取得するために、Electronアプリは、 &lt;code&gt;exe&lt;/code&gt; と共に起動される非表示のUWPバックグラウンドタスクとペアにすることができます-一種のサイドキックとして起動され、バックグラウンドでタスクを実行したり、プッシュ通知を受信したり、他のUWPアプリケーションと通信したりできます。</target>
        </trans-unit>
        <trans-unit id="7f65725b617730ca820bb32d3b898b98d459f50d" translate="yes" xml:space="preserve">
          <source>In addition, there are some subtle differences on each platform:</source>
          <target state="translated">また、プラットフォームごとに微妙な違いがあります。</target>
        </trans-unit>
        <trans-unit id="7f2fa843ea25b67d9f9124439c22087532ac27ad" translate="yes" xml:space="preserve">
          <source>In all cases, you will need to have the &lt;code&gt;snapcraft&lt;/code&gt; tool installed. We recommend building on Ubuntu 16.04 (or the current LTS).</source>
          <target state="translated">いずれの場合も、 &lt;code&gt;snapcraft&lt;/code&gt; ツールをインストールする必要があります。Ubuntu 16.04（または現在のLTS）でビルドすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="88eb93dee96b67a7045b74d8bbad7d7a85a57f79" translate="yes" xml:space="preserve">
          <source>In almost all cases, these errors are the result of network problems and not actual issues with the &lt;code&gt;electron&lt;/code&gt; npm package. Errors like &lt;code&gt;ELIFECYCLE&lt;/code&gt;, &lt;code&gt;EAI_AGAIN&lt;/code&gt;, &lt;code&gt;ECONNRESET&lt;/code&gt;, and &lt;code&gt;ETIMEDOUT&lt;/code&gt; are all indications of such network problems. The best resolution is to try switching networks, or wait a bit and try installing again.</source>
          <target state="translated">ほとんどすべての場合、これらのエラーはネットワークの問題の結果であり、 &lt;code&gt;electron&lt;/code&gt; npmパッケージの実際の問題ではありません。以下のようなエラー &lt;code&gt;ELIFECYCLE&lt;/code&gt; 、 &lt;code&gt;EAI_AGAIN&lt;/code&gt; 、 &lt;code&gt;ECONNRESET&lt;/code&gt; 、および &lt;code&gt;ETIMEDOUT&lt;/code&gt; は、このようなネットワークの問題のすべての兆候です。最善の解決策は、ネットワークの切り替えを試すか、少し待ってから再度インストールを試みることです。</target>
        </trans-unit>
        <trans-unit id="195f1e249de6eef85e19604ad6504295fedc65f1" translate="yes" xml:space="preserve">
          <source>In most cases, you should just do everything in the &lt;code&gt;ready&lt;/code&gt; event handler.</source>
          <target state="translated">ほとんどの場合、 &lt;code&gt;ready&lt;/code&gt; イベントハンドラーですべてを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="1c30404658bd31cd20bc5c1bc6d71f1b96198591" translate="yes" xml:space="preserve">
          <source>In normal browsers, web pages usually run in a sandboxed environment and are not allowed access to native resources. Electron users, however, have the power to use Node.js APIs in web pages allowing lower level operating system interactions.</source>
          <target state="translated">通常のブラウザでは、ウェブページは通常サンドボックス環境で実行され、ネイティブリソースへのアクセスは許可されていません。しかし、Electronユーザは、WebページでNode.js APIを使用することで、より低いレベルのオペレーティングシステムとの相互作用を可能にします。</target>
        </trans-unit>
        <trans-unit id="5fc60981dde25a35adbe4ec9983a99588cfe1f9d" translate="yes" xml:space="preserve">
          <source>In opposition to traditional UWP apps, packaged apps currently need to undergo a manual verification process, for which you can apply &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/projects/campaigns/desktop-bridge&quot;&gt;here&lt;/a&gt;. In the meantime, all users will be able to install your package by double-clicking it, so a submission to the store might not be necessary if you're looking for an easier installation method. In managed environments (usually enterprises), the &lt;code&gt;Add-AppxPackage&lt;/code&gt;&lt;a href=&quot;https://technet.microsoft.com/en-us/library/hh856048.aspx&quot;&gt;PowerShell Cmdlet can be used to install it in an automated fashion&lt;/a&gt;.</source>
          <target state="translated">従来のUWPアプリとは異なり、パッケージ化されたアプリは現在、手動の検証プロセスを受ける必要があります。このプロセスを&lt;a href=&quot;https://developer.microsoft.com/en-us/windows/projects/campaigns/desktop-bridge&quot;&gt;ここで&lt;/a&gt;適用できます。それまでの間、すべてのユーザーがパッケージをダブルクリックしてインストールできるため、より簡単なインストール方法を探している場合は、ストアへの送信が不要な場合があります。管理された環境（通常はエンタープライズ）では、 &lt;code&gt;Add-AppxPackage&lt;/code&gt; &lt;a href=&quot;https://technet.microsoft.com/en-us/library/hh856048.aspx&quot;&gt;PowerShellコマンドレットを使用して、自動化された方法でインストールできます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="17b33efa1e685afd83e922c98be3ad7481f7164a" translate="yes" xml:space="preserve">
          <source>In order for extra notification buttons to work on macOS your app must meet the following criteria.</source>
          <target state="translated">macOS上で追加の通知ボタンを動作させるには、アプリが以下の基準を満たしている必要があります。</target>
        </trans-unit>
        <trans-unit id="f6e38a957812e9a29ac5c2d2a05f0c16dc841b4a" translate="yes" xml:space="preserve">
          <source>In order to avoid the complexity of building all of Chromium, Electron uses &lt;a href=&quot;https://github.com/electron/libchromiumcontent&quot;&gt;&lt;code&gt;libchromiumcontent&lt;/code&gt;&lt;/a&gt; to access Chromium's Content API. &lt;code&gt;libchromiumcontent&lt;/code&gt; is a single shared library that includes the Chromium Content module and all of its dependencies. Users don't need a powerful machine to build Electron.</source>
          <target state="translated">Chromiumのすべてを構築する複雑さを回避するために、Electronは&lt;a href=&quot;https://github.com/electron/libchromiumcontent&quot;&gt; &lt;code&gt;libchromiumcontent&lt;/code&gt; &lt;/a&gt;を使用してChromiumのコンテンツAPIにアクセスします。 &lt;code&gt;libchromiumcontent&lt;/code&gt; は、Chromium Contentモジュールとそのすべての依存関係を含む単一の共有ライブラリです。ユーザーは、Electronを構築するための強力なマシンを必要としません。</target>
        </trans-unit>
        <trans-unit id="002692fd3df32049bef10d52e5d3b2dc239a4e1a" translate="yes" xml:space="preserve">
          <source>In order to be able to use this feature on Windows, your application has to be registered as a handler of the file type of the document, otherwise the file won't appear in JumpList even after you have added it. You can find everything on registering your application in &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/cc144104(VS.85).aspx&quot;&gt;Application Registration&lt;/a&gt;.</source>
          <target state="translated">Windowsでこの機能を使用できるようにするには、アプリケーションをドキュメントのファイルタイプのハンドラーとして登録する必要があります。そうしないと、ファイルを追加した後でもファイルがJumpListに表示されません。&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/cc144104(VS.85).aspx&quot;&gt;アプリケーションの登録&lt;/a&gt;に関するすべての情報は、アプリケーションの登録にあります。</target>
        </trans-unit>
        <trans-unit id="6017616527bbb59b4e2288b1e97e6e007923f3e5" translate="yes" xml:space="preserve">
          <source>In order to keep Electron small (file size) and sustainable (the spread of dependencies and APIs) the project limits the scope of the core project.</source>
          <target state="translated">Electronを小さく(ファイルサイズを小さく)、持続可能に(依存関係やAPIの普及を)保つために、プロジェクトはコアプロジェクトの範囲を制限しています。</target>
        </trans-unit>
        <trans-unit id="9e93969c6ab6312de3ab1b1363ee597f5e3607f7" translate="yes" xml:space="preserve">
          <source>In order to land, a pull request needs to be reviewed and approved by at least one Electron Code Owner and pass CI. After that, if there are no objections from other contributors, the pull request can be merged.</source>
          <target state="translated">プルリクエストを許可するためには、少なくとも1人のElectron Code Ownerによるレビューと承認を受け、CIを通過する必要があります。その後、他のコントリビューターからの異議がなければ、プルリクエストをマージすることができます。</target>
        </trans-unit>
        <trans-unit id="5038620daa1de28b5745b004ae182c0ced6a13fd" translate="yes" xml:space="preserve">
          <source>In order to run your package, your users will need Windows 10 with the so-called &quot;Anniversary Update&quot; - details on how to update Windows can be found &lt;a href=&quot;https://blogs.windows.com/windowsexperience/2016/08/02/how-to-get-the-windows-10-anniversary-update&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">パッケージを実行するには、ユーザーはいわゆる「記念日の更新」を備えたWindows 10を必要とします。Windowsの更新方法の詳細については、&lt;a href=&quot;https://blogs.windows.com/windowsexperience/2016/08/02/how-to-get-the-windows-10-anniversary-update&quot;&gt;こちらをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6c6f45a1b0186062309a1e7bd6d2d0cdccc0365" translate="yes" xml:space="preserve">
          <source>In order to satisfy all requirements for app sandboxing, the following modules have been disabled in the MAS build:</source>
          <target state="translated">アプリのサンドボックス化に関するすべての要件を満たすために、MASのビルドでは以下のモジュールが無効化されています。</target>
        </trans-unit>
        <trans-unit id="2aa9e4b60cc508d244b171006423246637a0b33f" translate="yes" xml:space="preserve">
          <source>In other words, when the sandbox is enabled, the renderers can only make changes to the system by delegating tasks to the main process via IPC. &lt;a href=&quot;https://www.chromium.org/developers/design-documents/sandbox&quot;&gt;Here's&lt;/a&gt; more information about the sandbox.</source>
          <target state="translated">つまり、サンドボックスが有効になっている場合、レンダラーは、IPCを介してタスクをメインプロセスに委任することによってのみシステムに変更を加えることができます。&lt;a href=&quot;https://www.chromium.org/developers/design-documents/sandbox&quot;&gt;ここだ&lt;/a&gt;サンドボックスの詳細については。</target>
        </trans-unit>
        <trans-unit id="add54ea319b290d6512f35724ac20b939ad3c263" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;release&lt;/code&gt; branch, verify that the release's files have been created:</source>
          <target state="translated">で &lt;code&gt;release&lt;/code&gt; ブランチ、リリースのファイルが作成されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="af7489da9de75d590f13f01cdc9c2b48b8b1b424" translate="yes" xml:space="preserve">
          <source>In the above code the &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; that was created has node.js disabled and can communicate only via IPC. The use of this option stops electron from creating a node.js runtime in the renderer. Also, within this new window &lt;code&gt;window.open&lt;/code&gt; follows the native behaviour (by default electron creates a &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; and returns a proxy to this via &lt;code&gt;window.open&lt;/code&gt;).</source>
          <target state="translated">上記のコードでは、作成された&lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;はnode.jsが無効になっており、IPC経由でのみ通信できます。このオプションを使用すると、electronがレンダラーでnode.jsランタイムを作成できなくなります。また、この新しいウィンドウ内で &lt;code&gt;window.open&lt;/code&gt; はネイティブの動作に従います（デフォルトでは、electronは&lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;を作成し、 &lt;code&gt;window.open&lt;/code&gt; を介してこれにプロキシを返します）。</target>
        </trans-unit>
        <trans-unit id="dd8a333887f050bcaedb3788895a13b656bcd030" translate="yes" xml:space="preserve">
          <source>In the app, you'd need to write a simple handler for the RPC calls:</source>
          <target state="translated">アプリでは、RPC呼び出しのための簡単なハンドラを書く必要があります。</target>
        </trans-unit>
        <trans-unit id="8caa74ae2f7b42454248de05b842fae89740cc2b" translate="yes" xml:space="preserve">
          <source>In the browser window some HTML APIs like &lt;code&gt;requestFullScreen&lt;/code&gt; can only be invoked by a gesture from the user. Setting &lt;code&gt;userGesture&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; will remove this limitation.</source>
          <target state="translated">ブラウザウィンドウでは、 &lt;code&gt;requestFullScreen&lt;/code&gt; などの一部のHTML API は、ユーザーのジェスチャーによってのみ呼び出すことができます。 &lt;code&gt;userGesture&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定すると、この制限がなくなります。</target>
        </trans-unit>
        <trans-unit id="db52ca544e2d57543b2ade9a5da326a4317aad0a" translate="yes" xml:space="preserve">
          <source>In the case of a corrupted release with broken CI machines, we might have to re-upload the binaries for an already published release.</source>
          <target state="translated">壊れたCIマシンで壊れたリリースの場合、すでに公開されているリリースのバイナリを再アップロードしなければならないかもしれません。</target>
        </trans-unit>
        <trans-unit id="b49bd272eea5595d87ad5e2fe5c9c9b77041719c" translate="yes" xml:space="preserve">
          <source>In the example above, both &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;win&lt;/code&gt; were remote objects and &lt;code&gt;new BrowserWindow&lt;/code&gt; didn't create a &lt;code&gt;BrowserWindow&lt;/code&gt; object in the renderer process. Instead, it created a &lt;code&gt;BrowserWindow&lt;/code&gt; object in the main process and returned the corresponding remote object in the renderer process, namely the &lt;code&gt;win&lt;/code&gt; object.</source>
          <target state="translated">上記の例では、&lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;win&lt;/code&gt; の両方がリモートオブジェクトであり、 &lt;code&gt;new BrowserWindow&lt;/code&gt; はレンダラープロセスで &lt;code&gt;BrowserWindow&lt;/code&gt; オブジェクトを作成しませんでした。代わりに、メインプロセスで &lt;code&gt;BrowserWindow&lt;/code&gt; オブジェクトを作成し、レンダラープロセスで対応するリモートオブジェクト、つまり &lt;code&gt;win&lt;/code&gt; オブジェクトを返しました。</target>
        </trans-unit>
        <trans-unit id="5074e68733d141bd5c5268004d80f2dacb17e13e" translate="yes" xml:space="preserve">
          <source>In the following example preload script, the later loaded website will have access to a &lt;code&gt;window.readConfig()&lt;/code&gt; method, but no Node.js features.</source>
          <target state="translated">次のプリロードスクリプトの例では、後でロードされたWebサイトは &lt;code&gt;window.readConfig()&lt;/code&gt; メソッドにアクセスできますが、Node.js機能はありません。</target>
        </trans-unit>
        <trans-unit id="51b18288d03cd733f92b99f7141ed513739578d6" translate="yes" xml:space="preserve">
          <source>In the testing framework Spectron, you can now audit each window and &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tag in your application. For example:</source>
          <target state="translated">テストフレームワークSpectronでは、アプリケーションの各ウィンドウと &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; タグを監査できます。例えば：</target>
        </trans-unit>
        <trans-unit id="1afa241f36d4217397dfec694d2d1215891c4684" translate="yes" xml:space="preserve">
          <source>In web pages, calling native GUI related APIs is not allowed because managing native GUI resources in web pages is very dangerous and it is easy to leak resources. If you want to perform GUI operations in a web page, the renderer process of the web page must communicate with the main process to request that the main process perform those operations.</source>
          <target state="translated">WebページでネイティブGUI関連のAPIを呼び出すことは、Webページ内でネイティブGUIのリソースを管理することは非常に危険であり、リソースが流出しやすいため禁止されています。WebページでGUI操作を行いたい場合は、Webページのレンダラープロセスがメインプロセスと通信して、メインプロセスにその操作を行うように要求する必要があります。</target>
        </trans-unit>
        <trans-unit id="c4d0e6c3e076cd6a699c60ad2b55fac7991337f3" translate="yes" xml:space="preserve">
          <source>In your renderer process, handle the &lt;code&gt;ondragstart&lt;/code&gt; event and forward the information to your main process.</source>
          <target state="translated">レンダラープロセスで、 &lt;code&gt;ondragstart&lt;/code&gt; イベントを処理し、情報をメインプロセスに転送します。</target>
        </trans-unit>
        <trans-unit id="fdaff53585816691fa4fe5c4dfd5b6e20360de51" translate="yes" xml:space="preserve">
          <source>In-App Purchase (macOS)</source>
          <target state="translated">アプリ内課金(macOS</target>
        </trans-unit>
        <trans-unit id="fcd33c35409267d26cf472bd170c7b44220760a0" translate="yes" xml:space="preserve">
          <source>In-app purchases on Mac App Store.</source>
          <target state="translated">Mac App Storeでのアプリ内課金。</target>
        </trans-unit>
        <trans-unit id="01b9ecc39af8da56d7570c19b704feba4523b1b2" translate="yes" xml:space="preserve">
          <source>IncomingMessage</source>
          <target state="translated">IncomingMessage</target>
        </trans-unit>
        <trans-unit id="13e9abca83628630f255579050b5c29afcf1c1f8" translate="yes" xml:space="preserve">
          <source>Indicates that response body has ended.</source>
          <target state="translated">レスポンスボディが終了したことを示す。</target>
        </trans-unit>
        <trans-unit id="2339b8ad3625abec50c5fec9ccfe1b4c0adb5b6e" translate="yes" xml:space="preserve">
          <source>Indonesian</source>
          <target state="translated">Indonesian</target>
        </trans-unit>
        <trans-unit id="56476d27ce24389481bda3f5413b884651cdc573" translate="yes" xml:space="preserve">
          <source>Initiates a download of the resource at &lt;code&gt;url&lt;/code&gt; without navigating. The &lt;code&gt;will-download&lt;/code&gt; event of &lt;code&gt;session&lt;/code&gt; will be triggered.</source>
          <target state="translated">ナビゲートせずに &lt;code&gt;url&lt;/code&gt; でリソースのダウンロードを開始します。 &lt;code&gt;will-download&lt;/code&gt; のイベント &lt;code&gt;session&lt;/code&gt; トリガされます。</target>
        </trans-unit>
        <trans-unit id="f0dfd5f0e298aa47a48b7d8cbced854e9d4e2a6d" translate="yes" xml:space="preserve">
          <source>Injects CSS into the current web page.</source>
          <target state="translated">現在のウェブページにCSSを挿入します。</target>
        </trans-unit>
        <trans-unit id="b7e359bfdb20491c11d50453bcef336f0fdfbaf1" translate="yes" xml:space="preserve">
          <source>Injects CSS into the guest page.</source>
          <target state="translated">ゲストページにCSSを注入します。</target>
        </trans-unit>
        <trans-unit id="0c476f7fcf5175b2a06fb617a213f4c2f93acbb8" translate="yes" xml:space="preserve">
          <source>Input Method Editor. A program that allows users to enter characters and symbols not found on their keyboard. For example, this allows users of Latin keyboards to input Chinese, Japanese, Korean and Indic characters.</source>
          <target state="translated">入力方法エディタ。キーボードにない文字や記号を入力できるようにするプログラム。例えば、ラテン系キーボードのユーザーが中国語、日本語、韓国語、インディック文字を入力できるようにする。</target>
        </trans-unit>
        <trans-unit id="24599b3c6ab1eb1b9bce61098d2b77a02aba0f64" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;text&lt;/code&gt; to the focused element.</source>
          <target state="translated">フォーカスされた要素に &lt;code&gt;text&lt;/code&gt; を挿入します。</target>
        </trans-unit>
        <trans-unit id="d8520f87c739aa4e579f6880a74b33685e460efb" translate="yes" xml:space="preserve">
          <source>Inserts the &lt;code&gt;menuItem&lt;/code&gt; to the &lt;code&gt;pos&lt;/code&gt; position of the menu.</source>
          <target state="translated">&lt;code&gt;menuItem&lt;/code&gt; をメニューの &lt;code&gt;pos&lt;/code&gt; 位置に挿入します。</target>
        </trans-unit>
        <trans-unit id="b18ed5b223e999f64c1ccaea33926bea7922e4c2" translate="yes" xml:space="preserve">
          <source>Inside Application</source>
          <target state="translated">インサイドアプリケーション</target>
        </trans-unit>
        <trans-unit id="67efb1af030003bc2e370e914ca924f2de6b7ff4" translate="yes" xml:space="preserve">
          <source>Inspect Node &lt;a href=&quot;https://github.com/electron/node&quot;&gt;repo&lt;/a&gt; to see what patches upstream Node used with their v8 after bumping its version</source>
          <target state="translated">ノード&lt;a href=&quot;https://github.com/electron/node&quot;&gt;リポジトリ&lt;/a&gt;を検査して、バージョンをバンプした後、上流ノードがv8で使用したパッチを確認します。</target>
        </trans-unit>
        <trans-unit id="a092085f2c9866b83b7573ea43eba27961c12c78" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/linux_build_instructions.md#Install&quot;&gt;depot_tools&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/linux_build_instructions.md#Install&quot;&gt;depot_tools&lt;/a&gt;をインストールする</target>
        </trans-unit>
        <trans-unit id="9ddc5636813d8d39f423ad830592f346531bb89f" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/linux_build_instructions.md#Install-additional-build-dependencies&quot;&gt;additional build dependencies&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/linux_build_instructions.md#Install-additional-build-dependencies&quot;&gt;追加のビルド依存関係&lt;/a&gt;をインストールする</target>
        </trans-unit>
        <trans-unit id="c751bdc0defb0bcc2e0fb38801b511d7b20b126b" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://github.com/surf-build/surf&quot;&gt;Surf&lt;/a&gt;, via npm: &lt;code&gt;npm install -g surf-build@latest&lt;/code&gt;</source>
          <target state="translated">npmを介して&lt;a href=&quot;https://github.com/surf-build/surf&quot;&gt;Surf&lt;/a&gt;をインストールします &lt;code&gt;npm install -g surf-build@latest&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af7e1eda11eb3ba6c4a6534ba4973cba0e85d446" translate="yes" xml:space="preserve">
          <source>Install Electron via &lt;code&gt;npm install electron&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;npm install electron&lt;/code&gt; を介してElectronをインストールします</target>
        </trans-unit>
        <trans-unit id="59def4f4c416f5ec11a55b89f42f9c04dda49d4c" translate="yes" xml:space="preserve">
          <source>Install Visual Studio 2015/2017 (to get the signing utility)</source>
          <target state="translated">Visual Studio 2015/2017をインストールする(署名ユーティリティを取得する</target>
        </trans-unit>
        <trans-unit id="b0a08fb068315f0e1c7ff6b9951586a86d940581" translate="yes" xml:space="preserve">
          <source>Install it in Chrome browser.</source>
          <target state="translated">Chromeブラウザにインストールします。</target>
        </trans-unit>
        <trans-unit id="c1cf7ea58fe26587ea330bcf3383edd9081a470a" translate="yes" xml:space="preserve">
          <source>Install the module:</source>
          <target state="translated">モジュールをインストールします。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="49badac7f3152085c3ccdfbd4aec9ad26474d44b" translate="yes" xml:space="preserve">
          <source>Installing Electron</source>
          <target state="translated">電子機器の設置</target>
        </trans-unit>
        <trans-unit id="01530047c3eb49aada2802a1ac3a4c313f6cdb3e" translate="yes" xml:space="preserve">
          <source>Installing modules and rebuilding for Electron</source>
          <target state="translated">エレクトロン用モジュールのインストールとリビルド</target>
        </trans-unit>
        <trans-unit id="93e1f66298d41be94ea2442fc257bf8bcd4c056b" translate="yes" xml:space="preserve">
          <source>Instance Events</source>
          <target state="translated">インスタンスイベント</target>
        </trans-unit>
        <trans-unit id="dd4a61ab3dc44ab9b5a205303724a68f74a735a7" translate="yes" xml:space="preserve">
          <source>Instance Methods</source>
          <target state="translated">インスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="227bff69876b172aeee6752f9b003b6b9627ce6c" translate="yes" xml:space="preserve">
          <source>Instance Properties</source>
          <target state="translated">インスタンスのプロパティ</target>
        </trans-unit>
        <trans-unit id="8362b73eb793173f5bd3a1f478b69e06eecb033b" translate="yes" xml:space="preserve">
          <source>Instance methods and properties</source>
          <target state="translated">インスタンスのメソッドとプロパティ</target>
        </trans-unit>
        <trans-unit id="20d33549668c4d09ea6ef7d6c02f07fdfb9c25a1" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;code&gt;Cookies&lt;/code&gt; class are accessed by using &lt;code&gt;cookies&lt;/code&gt; property of a &lt;code&gt;Session&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Cookies&lt;/code&gt; クラスのインスタンスには、 &lt;code&gt;Session&lt;/code&gt; の &lt;code&gt;cookies&lt;/code&gt; プロパティを使用してアクセスします。</target>
        </trans-unit>
        <trans-unit id="ba9374c6843f9596e1f6431ed4d21e4162f669de" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;code&gt;WebRequest&lt;/code&gt; class are accessed by using the &lt;code&gt;webRequest&lt;/code&gt; property of a &lt;code&gt;Session&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WebRequest&lt;/code&gt; クラスのインスタンスには、 &lt;code&gt;Session&lt;/code&gt; の &lt;code&gt;webRequest&lt;/code&gt; プロパティを使用してアクセスします。</target>
        </trans-unit>
        <trans-unit id="16270f869f551f34445155955c881cfa37616466" translate="yes" xml:space="preserve">
          <source>Instructs Electron to bypass the proxy server for the given semi-colon-separated list of hosts. This flag has an effect only if used in tandem with &lt;code&gt;--proxy-server&lt;/code&gt;.</source>
          <target state="translated">指定されたセミコロンで区切られたホストのリストに対してプロキシサーバーをバイパスするようにエレクトロンに指示します。このフラグは、 &lt;code&gt;--proxy-server&lt;/code&gt; と組み合わせて使用​​した場合にのみ効果があります。</target>
        </trans-unit>
        <trans-unit id="6d6d2d7b468b24a48b35ded8843a5bd10903effd" translate="yes" xml:space="preserve">
          <source>Intercept and modify the contents of a request at various stages of its lifetime.</source>
          <target state="translated">ライフタイムの様々な段階でリクエストの内容を傍受し、変更します。</target>
        </trans-unit>
        <trans-unit id="ee6f75429405860b71bcefde477ecaf5969a2348" translate="yes" xml:space="preserve">
          <source>Intercepts &lt;code&gt;scheme&lt;/code&gt; protocol and uses &lt;code&gt;handler&lt;/code&gt; as the protocol's new handler which sends a &lt;code&gt;Buffer&lt;/code&gt; as a response.</source>
          <target state="translated">&lt;code&gt;scheme&lt;/code&gt; プロトコルをインターセプトし、 &lt;code&gt;handler&lt;/code&gt; をプロトコルの新しいハンドラとして使用し、 &lt;code&gt;Buffer&lt;/code&gt; を応答として送信します。</target>
        </trans-unit>
        <trans-unit id="be11c9050ebdb78d8293caf5907f221e92288ad5" translate="yes" xml:space="preserve">
          <source>Intercepts &lt;code&gt;scheme&lt;/code&gt; protocol and uses &lt;code&gt;handler&lt;/code&gt; as the protocol's new handler which sends a &lt;code&gt;String&lt;/code&gt; as a response.</source>
          <target state="translated">&lt;code&gt;scheme&lt;/code&gt; プロトコルをインターセプトし、 &lt;code&gt;handler&lt;/code&gt; をプロトコルの新しいハンドラとして使用して、 &lt;code&gt;String&lt;/code&gt; を応答として送信します。</target>
        </trans-unit>
        <trans-unit id="637ab926f95aaf76690f739533e2ba5eb9714a4e" translate="yes" xml:space="preserve">
          <source>Intercepts &lt;code&gt;scheme&lt;/code&gt; protocol and uses &lt;code&gt;handler&lt;/code&gt; as the protocol's new handler which sends a file as a response.</source>
          <target state="translated">&lt;code&gt;scheme&lt;/code&gt; プロトコルをインターセプトし、 &lt;code&gt;handler&lt;/code&gt; をプロトコルの新しいハンドラとして使用し、ファイルを応答として送信します。</target>
        </trans-unit>
        <trans-unit id="c92f450a734d695eb0e09f842f66dc4c08221e1d" translate="yes" xml:space="preserve">
          <source>Intercepts &lt;code&gt;scheme&lt;/code&gt; protocol and uses &lt;code&gt;handler&lt;/code&gt; as the protocol's new handler which sends a new HTTP request as a response.</source>
          <target state="translated">&lt;code&gt;scheme&lt;/code&gt; プロトコルをインターセプトし、 &lt;code&gt;handler&lt;/code&gt; をプロトコルの新しいハンドラとして使用して、新しいHTTPリクエストを応答として送信します。</target>
        </trans-unit>
        <trans-unit id="afee89207b5b63f5ec244d5599398760f821a96d" translate="yes" xml:space="preserve">
          <source>Interface description language. Write function signatures and data types in a format that can be used to generate interfaces in Java, C++, JavaScript, etc.</source>
          <target state="translated">インターフェース記述言語。Java、C++、JavaScriptなどのインターフェースを生成するために使用できる形式で関数のシグネチャやデータ型を記述します。</target>
        </trans-unit>
        <trans-unit id="06fac3d23961645b440211045f3413e391d15637" translate="yes" xml:space="preserve">
          <source>Interlingua</source>
          <target state="translated">Interlingua</target>
        </trans-unit>
        <trans-unit id="2b7835ef37ebd3e0fc33cd0b04741ea8f2f7dedf" translate="yes" xml:space="preserve">
          <source>Introduction of &lt;a href=&quot;https://conventionalcommits.org/&quot;&gt;conventional commit messages&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://conventionalcommits.org/&quot;&gt;従来のコミットメッセージの&lt;/a&gt;紹介</target>
        </trans-unit>
        <trans-unit id="41573236e6fbc505575a3621ccf0f5fca3ab0ac6" translate="yes" xml:space="preserve">
          <source>Introduction of semver-compliant &lt;code&gt;-beta&lt;/code&gt; tags</source>
          <target state="translated">semver準拠の紹介 &lt;code&gt;-beta&lt;/code&gt; タグ</target>
        </trans-unit>
        <trans-unit id="c9bc3dddf21efcfe1e523f2f2860c73024488699" translate="yes" xml:space="preserve">
          <source>Invalidates the current &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;Handoff&lt;/a&gt; user activity.</source>
          <target state="translated">現在の&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;Handoff&lt;/a&gt;ユーザーアクティビティを無効にします。</target>
        </trans-unit>
        <trans-unit id="8b99998c625d0b440d99f2fb14b8c59a1c9c7445" translate="yes" xml:space="preserve">
          <source>Invoke the updater from your app's main process file:</source>
          <target state="translated">アプリのメイン プロセス ファイルからアップデータを起動します。</target>
        </trans-unit>
        <trans-unit id="98e37149c6765bae15ead855a09f4ad812f8e179" translate="yes" xml:space="preserve">
          <source>Invokes the print dialog on the child window.</source>
          <target state="translated">子ウィンドウの印刷ダイアログを起動します。</target>
        </trans-unit>
        <trans-unit id="2bddaea174340270be5a83fe7aed2e32aa628eba" translate="yes" xml:space="preserve">
          <source>Irish</source>
          <target state="translated">Irish</target>
        </trans-unit>
        <trans-unit id="3a83c1973a29789e42e9e79148e2ce42769de102" translate="yes" xml:space="preserve">
          <source>Issue HTTP/HTTPS requests using Chromium's native networking library</source>
          <target state="translated">Chromium のネイティブネットワーキングライブラリを使用して HTTP/HTTPS リクエストを発行する</target>
        </trans-unit>
        <trans-unit id="30ce4cb25faae86427d8ac22e8f50a0a74f3f393" translate="yes" xml:space="preserve">
          <source>Issues</source>
          <target state="translated">Issues</target>
        </trans-unit>
        <trans-unit id="6cd8dd2ee0aacb1c1c58c1806551c4e2b82b59a5" translate="yes" xml:space="preserve">
          <source>Issues In Electron</source>
          <target state="translated">電子の問題点</target>
        </trans-unit>
        <trans-unit id="71df46d765d8779ff3c19865c5451195c37e4d80" translate="yes" xml:space="preserve">
          <source>It can be used by the preload script to add removed Node global symbols back to the global scope when node integration is turned off:</source>
          <target state="translated">これは、ノード統合がオフになったときに、削除されたノードグローバルシンボルをグローバルスコープに戻すために、プリロードスクリプトで使用することができます。</target>
        </trans-unit>
        <trans-unit id="5496611a4bb2d2ad0c6f82becb4734760e9dc457" translate="yes" xml:space="preserve">
          <source>It creates a new &lt;code&gt;BrowserWindow&lt;/code&gt; with native properties as set by the &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 設定されたネイティブプロパティを持つ新しい &lt;code&gt;BrowserWindow&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="7391d87c0a1a2fe7c0ab00835f38a129f96ed5e0" translate="yes" xml:space="preserve">
          <source>It creates a new &lt;code&gt;Notification&lt;/code&gt; with native properties as set by the &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 設定されたネイティブプロパティで新しい &lt;code&gt;Notification&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="9172bf0f438712c9c3dd7ca8795d16a4bee8eaa8" translate="yes" xml:space="preserve">
          <source>It has since become a popular tool used by open source developers, startups, and established companies. &lt;a href=&quot;https://electronjs.org/apps&quot;&gt;See who is building on Electron&lt;/a&gt;.</source>
          <target state="translated">それ以来、オープンソースの開発者、新興企業、有名企業が使用する人気のツールになっています。&lt;a href=&quot;https://electronjs.org/apps&quot;&gt;Electronで構築しているユーザーを確認し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="0f85d3bf8bcd7441256bc10040e9eefdc09d6b25" translate="yes" xml:space="preserve">
          <source>It is a good idea to control the creation of new &lt;a href=&quot;../api/web-view&quot;&gt;&lt;code&gt;WebViews&lt;/code&gt;&lt;/a&gt; from the main process and to verify that their webPreferences do not disable security features.</source>
          <target state="translated">それは新しいの作成を制御することは良いアイデアです&lt;a href=&quot;../api/web-view&quot;&gt; &lt;code&gt;WebViews&lt;/code&gt; を&lt;/a&gt;メインプロセスから、そのwebPreferencesが無効にセキュリティ機能しないことを確認するために。</target>
        </trans-unit>
        <trans-unit id="964da9fea4bbafe96ef1db6a86f52b43e7414473" translate="yes" xml:space="preserve">
          <source>It is acceptable for some commits in a pull request to not include a semantic prefix, as long as a later commit in the same pull request contains a meaningful encompassing semantic message.</source>
          <target state="translated">プルリクエストの中のいくつかのコミットで意味的なプレフィックスを含まないことは許容されます。</target>
        </trans-unit>
        <trans-unit id="6513c3b2261075b5414276dd4b7c570732e84c37" translate="yes" xml:space="preserve">
          <source>It is also not emitted during in-page navigation, such as clicking anchor links or updating the &lt;code&gt;window.location.hash&lt;/code&gt;. Use &lt;code&gt;did-navigate-in-page&lt;/code&gt; event for this purpose.</source>
          <target state="translated">また、アンカーリンクのクリックや &lt;code&gt;window.location.hash&lt;/code&gt; の更新など、ページ内ナビゲーション中にも出力されません。このために &lt;code&gt;did-navigate-in-page&lt;/code&gt; イベントを使用します。</target>
        </trans-unit>
        <trans-unit id="3c815f956f73b5874b39eadfd911308e44d74e4a" translate="yes" xml:space="preserve">
          <source>It is also not emitted for in-page navigations, such as clicking anchor links or updating the &lt;code&gt;window.location.hash&lt;/code&gt;. Use &lt;code&gt;did-navigate-in-page&lt;/code&gt; event for this purpose.</source>
          <target state="translated">また、アンカーリンクのクリックや &lt;code&gt;window.location.hash&lt;/code&gt; の更新など、ページ内ナビゲーションの場合も出力されません。このために &lt;code&gt;did-navigate-in-page&lt;/code&gt; イベントを使用します。</target>
        </trans-unit>
        <trans-unit id="f8da655fcd87f5210eafad0aaf91c55a5fb6c0b3" translate="yes" xml:space="preserve">
          <source>It is also possible to rebrand Electron by changing the product name and building it from source. To do this you need to modify the &lt;code&gt;atom.gyp&lt;/code&gt; file and have a clean rebuild.</source>
          <target state="translated">製品名を変更してソースからビルドすることにより、Electronのブランドを変更することもできます。これを行うには、 &lt;code&gt;atom.gyp&lt;/code&gt; ファイルを変更し、クリーンに再構築する必要があります。</target>
        </trans-unit>
        <trans-unit id="4b32930b704c36912af4b6b8a8b75fd0314d1679" translate="yes" xml:space="preserve">
          <source>It is also possible to send messages from the main process to the renderer process, see &lt;a href=&quot;web-contents#webcontentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt; for more information.</source>
          <target state="translated">メインプロセスからレンダラープロセスにメッセージを送信することもできます。詳細については、&lt;a href=&quot;web-contents#webcontentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="0b91cede13154f320e8b22c673ef890bdace73b6" translate="yes" xml:space="preserve">
          <source>It is best to specify &lt;code&gt;role&lt;/code&gt; for any menu item that matches a standard role, rather than trying to manually implement the behavior in a &lt;code&gt;click&lt;/code&gt; function. The built-in &lt;code&gt;role&lt;/code&gt; behavior will give the best native experience.</source>
          <target state="translated">&lt;code&gt;click&lt;/code&gt; 機能で動作を手動で実装するのではなく、標準の役割に一致するメニュー項目の &lt;code&gt;role&lt;/code&gt; を指定するのが最善です。組み込みの &lt;code&gt;role&lt;/code&gt; 動作は、ネイティブの最高のエクスペリエンスを提供します。</target>
        </trans-unit>
        <trans-unit id="70390302435eeaafda262133a9e687cdd3b70aea" translate="yes" xml:space="preserve">
          <source>It is highly recommended to format your changed C++ code before opening pull requests, which will save you and the reviewers' time.</source>
          <target state="translated">プルリクエストを開く前に、変更したC++コードをフォーマットすることを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="7830172c1d0f8fe69e4f504337f2d2af361b31bd" translate="yes" xml:space="preserve">
          <source>It is important to note that this option alone won't enable the OS-enforced sandbox. To enable this feature, the &lt;code&gt;--enable-sandbox&lt;/code&gt; command-line argument must be passed to electron, which will force &lt;code&gt;sandbox: true&lt;/code&gt; for all &lt;code&gt;BrowserWindow&lt;/code&gt; instances.</source>
          <target state="translated">このオプションだけではOS強制サンドボックスが有効にならないことに注意してください。この機能を有効にするには、 &lt;code&gt;--enable-sandbox&lt;/code&gt; コマンドライン引数をelectronに渡す必要があります。これにより、すべての &lt;code&gt;BrowserWindow&lt;/code&gt; インスタンスで &lt;code&gt;sandbox: true&lt;/code&gt; が強制されます。</target>
        </trans-unit>
        <trans-unit id="06b0757ae0de67fc7189e624df8530d408b9ad1e" translate="yes" xml:space="preserve">
          <source>It is not possible to have the OS sandbox active only for some renderers, if &lt;code&gt;--enable-sandbox&lt;/code&gt; is enabled, normal electron windows cannot be created.</source>
          <target state="translated">一部のレンダラーに対してのみOSサンドボックスをアクティブにすることはできません &lt;code&gt;--enable-sandbox&lt;/code&gt; が有効になっていると、通常の電子ウィンドウを作成できません。</target>
        </trans-unit>
        <trans-unit id="26eccb2be6647f437eee41fc998f1735f2fdfb59" translate="yes" xml:space="preserve">
          <source>It is paramount that you disable Node.js integration in any renderer (&lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../api/browser-view&quot;&gt;&lt;code&gt;BrowserView&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../api/web-view&quot;&gt;&lt;code&gt;WebView&lt;/code&gt;&lt;/a&gt;) that loads remote content. The goal is to limit the powers you grant to remote content, thus making it dramatically more difficult for an attacker to harm your users should they gain the ability to execute JavaScript on your website.</source>
          <target state="translated">リモートコンテンツをロードするすべてのレンダラー（&lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../api/browser-view&quot;&gt; &lt;code&gt;BrowserView&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;../api/web-view&quot;&gt; &lt;code&gt;WebView&lt;/code&gt; &lt;/a&gt;）でNode.js統合を無効にすることが最も重要です。目的は、リモートコンテンツに付与する権限を制限することです。これにより、攻撃者がWebサイトでJavaScriptを実行できるようになった場合に、ユーザーに害を与えることが劇的に困難になります。</target>
        </trans-unit>
        <trans-unit id="199273e0544a82108bdacc659f2b6ad6ccf8c086" translate="yes" xml:space="preserve">
          <source>It is possible to debug Chromium with Electron by passing &lt;code&gt;--build_debug_libcc&lt;/code&gt; to the bootstrap script:</source>
          <target state="translated">&lt;code&gt;--build_debug_libcc&lt;/code&gt; をブートストラップスクリプトに渡すことにより、ChromiumをElectronでデバッグできます。</target>
        </trans-unit>
        <trans-unit id="89660d837d9b5fa4be0177ad642c3c4194a2b505" translate="yes" xml:space="preserve">
          <source>It is possible to pass any object that implements the readable stream API (emits &lt;code&gt;data&lt;/code&gt;/&lt;code&gt;end&lt;/code&gt;/&lt;code&gt;error&lt;/code&gt; events). For example, here's how a file could be returned:</source>
          <target state="translated">読み取り可能なストリームAPIを実装する任意のオブジェクトを渡すことが可能です（ &lt;code&gt;data&lt;/code&gt; / &lt;code&gt;end&lt;/code&gt; / &lt;code&gt;error&lt;/code&gt; イベントを送信）。たとえば、ファイルを返す方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="e711e87900ad11545fe6d11f0b1dd6baa4c2a7bf" translate="yes" xml:space="preserve">
          <source>It is possible to share this directory with other machines by exporting it as SMB share on linux, but only one process/machine can be using the cache at a time. The locks created by git-cache script will try to prevent this, but it may not work perfectly in a network.</source>
          <target state="translated">linux上でこのディレクトリをSMB共有としてエクスポートすることで他のマシンと共有することは可能ですが、キャッシュを使用できるのは一度に1つのプロセス/マシンのみです。git-cache スクリプトで作成されたロックがこれを防ごうとしますが、ネットワーク上では完全には動作しないかもしれません。</target>
        </trans-unit>
        <trans-unit id="729b1792b3971af4760afa3ec670d4bd463f68ae" translate="yes" xml:space="preserve">
          <source>It is possible to use Node.js features in Electron's Web Workers, to do so the &lt;code&gt;nodeIntegrationInWorker&lt;/code&gt; option should be set to &lt;code&gt;true&lt;/code&gt; in &lt;code&gt;webPreferences&lt;/code&gt;.</source>
          <target state="translated">Node.jsのは、そうするように、電子のWebワーカーに機能を使用することが可能である &lt;code&gt;nodeIntegrationInWorker&lt;/code&gt; のオプションに設定されなければならない &lt;code&gt;true&lt;/code&gt; に &lt;code&gt;webPreferences&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60e41f92d43dd7cb52a699ea13c91a702e3b522b" translate="yes" xml:space="preserve">
          <source>It is recommended that you pause expensive operations when the visibility state is &lt;code&gt;hidden&lt;/code&gt; in order to minimize power consumption.</source>
          <target state="translated">消費電力を最小限に抑えるために、可視状態が &lt;code&gt;hidden&lt;/code&gt; 場合は、高価な操作を一時停止することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="af7b492c8cb4914e87549f09be97fa5754d25b6e" translate="yes" xml:space="preserve">
          <source>It is recommended to keep your changes grouped logically within individual commits. Many contributors find it easier to review changes that are split across multiple commits. There is no limit to the number of commits in a pull request.</source>
          <target state="translated">変更を個々のコミット内で論理的にグループ化しておくことをお勧めします。多くの貢献者は、複数のコミットに分割された変更をレビューする方が簡単だと感じています。プルリクエストのコミット数に制限はありません。</target>
        </trans-unit>
        <trans-unit id="e1cf52e7ed40575673e4cacbc143a8a1d2a41a19" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that the task list be static. It should remain the same regardless of the state or status of the application. While it is possible to vary the list dynamically, you should consider that this could confuse the user who does not expect that portion of the destination list to change.</source>
          <target state="translated">タスクリストは静的であることを強く推奨します。アプリケーションの状態や状態に関係なく、同じままであるべきです。リストを動的に変化させることは可能ですが、宛先リストのその部分が変化することを期待していないユーザーを混乱させる可能性があることを考慮する必要があります。</target>
        </trans-unit>
        <trans-unit id="06810b9a24cd224beebc872577e421af21ac01c7" translate="yes" xml:space="preserve">
          <source>It will create a &lt;code&gt;dist/main&lt;/code&gt; folder in the libcc repo's root. You will need this to build Electron.</source>
          <target state="translated">libccリポジトリのルートに &lt;code&gt;dist/main&lt;/code&gt; フォルダーを作成します。Electronをビルドするには、これが必要になります。</target>
        </trans-unit>
        <trans-unit id="3647db27602728c98ee2a2301c17868327282d6d" translate="yes" xml:space="preserve">
          <source>It will probably fail applying patches.</source>
          <target state="translated">おそらくパッチの適用に失敗するでしょう。</target>
        </trans-unit>
        <trans-unit id="3343764ed4d8b21d498c1a44d6f90876c8454213" translate="yes" xml:space="preserve">
          <source>It's common for open issues to involve discussion. Some contributors may have differing opinions, including whether the behavior is a bug or feature. This discussion is part of the process and should be kept focused, helpful, and professional.</source>
          <target state="translated">オープンな問題には議論を伴うのが一般的です。投稿者の中には、その動作がバグなのか機能なのかなど、異なる意見を持つ人がいるかもしれません。この議論はプロセスの一部であり、焦点を絞って、参考になるように、そして専門的な議論をするようにしてください。</target>
        </trans-unit>
        <trans-unit id="485b57adcc80650a0f376fe516e0ea35fef68007" translate="yes" xml:space="preserve">
          <source>Italian</source>
          <target state="translated">Italian</target>
        </trans-unit>
        <trans-unit id="b9bc30a5feae532b939b0112f6162a8c1d64ca9e" translate="yes" xml:space="preserve">
          <source>Italian (Italy)</source>
          <target state="translated">イタリア語</target>
        </trans-unit>
        <trans-unit id="9b542a61893cf94c6b2aa33589915292aa185c08" translate="yes" xml:space="preserve">
          <source>Italian (Switzerland)</source>
          <target state="translated">イタリア語</target>
        </trans-unit>
        <trans-unit id="9239c22d1d1c990ca8c206cb408b345a3ec8114c" translate="yes" xml:space="preserve">
          <source>Japanese</source>
          <target state="translated">Japanese</target>
        </trans-unit>
        <trans-unit id="ee620923ff5fc510555dc37083a135ee93b5404b" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
          <target state="translated">JavaScript</target>
        </trans-unit>
        <trans-unit id="6910a0b5a00af25b7ba39985cfb9347d8203a0a2" translate="yes" xml:space="preserve">
          <source>JavaScript will always be disabled in the opened &lt;code&gt;window&lt;/code&gt; if it is disabled on the parent window.</source>
          <target state="translated">JavaScriptは、親ウィンドウで無効になっている場合、開いている &lt;code&gt;window&lt;/code&gt; では常に無効になります。</target>
        </trans-unit>
        <trans-unit id="4d3bb51ea74dbb54d8ffaf04425ff843127f10a5" translate="yes" xml:space="preserve">
          <source>Javanese</source>
          <target state="translated">Javanese</target>
        </trans-unit>
        <trans-unit id="a2feefe9afbc3d0f6fec53c2b390d4515e363675" translate="yes" xml:space="preserve">
          <source>Jenkins</source>
          <target state="translated">Jenkins</target>
        </trans-unit>
        <trans-unit id="2023379a50fddc81cf53bdb2ea7da27bdc589b20" translate="yes" xml:space="preserve">
          <source>JumpList</source>
          <target state="translated">JumpList</target>
        </trans-unit>
        <trans-unit id="6298a2509790f8ae562a533cfb770f6ee7778f71" translate="yes" xml:space="preserve">
          <source>JumpListCategory</source>
          <target state="translated">JumpListCategory</target>
        </trans-unit>
        <trans-unit id="0ff8418a0fc25bab796d47849f1222ead79fc898" translate="yes" xml:space="preserve">
          <source>JumpListCategory Object</source>
          <target state="translated">JumpListCategory オブジェクト</target>
        </trans-unit>
        <trans-unit id="94afa3adf74d2a4329032ec8d8dda74daa3c70b5" translate="yes" xml:space="preserve">
          <source>JumpListItem</source>
          <target state="translated">JumpListItem</target>
        </trans-unit>
        <trans-unit id="46eed83a18817455ede51e512cb72e4bd08a77a3" translate="yes" xml:space="preserve">
          <source>JumpListItem Object</source>
          <target state="translated">JumpListItem オブジェクト</target>
        </trans-unit>
        <trans-unit id="c3ed665577f91f82c451742a0c8875950d42b19f" translate="yes" xml:space="preserve">
          <source>Kannada</source>
          <target state="translated">Kannada</target>
        </trans-unit>
        <trans-unit id="b9fedaa07b209e1f7a9c2d83295a76fe49f3b49f" translate="yes" xml:space="preserve">
          <source>Kazakh</source>
          <target state="translated">Kazakh</target>
        </trans-unit>
        <trans-unit id="bae6d59bf391c6b00cbe84e270764a5b277dd65c" translate="yes" xml:space="preserve">
          <source>Keep the second line blank.</source>
          <target state="translated">2行目は空欄にしてください。</target>
        </trans-unit>
        <trans-unit id="3aed4e511b017fafe9de3e6cb5aa57466d57dfaa" translate="yes" xml:space="preserve">
          <source>Keeping Git Submodules Up to Date</source>
          <target state="translated">Git サブモジュールを最新の状態に保つ</target>
        </trans-unit>
        <trans-unit id="b465751c05fbc426234f552a5d95e9103bd3e6dc" translate="yes" xml:space="preserve">
          <source>Keyboard Shortcuts</source>
          <target state="translated">キーボードショートカット</target>
        </trans-unit>
        <trans-unit id="b05203cf89b60eb36609a1a8b7f3cafe0927486a" translate="yes" xml:space="preserve">
          <source>Known issues</source>
          <target state="translated">既知の問題</target>
        </trans-unit>
        <trans-unit id="dec66c5bf0f7fe4cc038ac871def8eb1ac31c146" translate="yes" xml:space="preserve">
          <source>Korean</source>
          <target state="translated">Korean</target>
        </trans-unit>
        <trans-unit id="a06efeaf4455fbbc03855e222511ad582f621f28" translate="yes" xml:space="preserve">
          <source>Kurdish</source>
          <target state="translated">Kurdish</target>
        </trans-unit>
        <trans-unit id="5aea8700748f6946f70240cab14148a2c449ed9c" translate="yes" xml:space="preserve">
          <source>Kyrgyz</source>
          <target state="translated">Kyrgyz</target>
        </trans-unit>
        <trans-unit id="843195acc182eab1aff0d0e1f754451a5eccd288" translate="yes" xml:space="preserve">
          <source>LLDB is a powerful tool and supports multiple strategies for code inspection. For this basic introduction, let's assume that you're calling a command from JavaScript that isn't behaving correctly - so you'd like to break on that command's C++ counterpart inside the Electron source.</source>
          <target state="translated">LLDBは強力なツールであり、コード検査のための複数の戦略をサポートしています。ここでは、JavaScriptから正しく動作しないコマンドを呼び出していると仮定します。</target>
        </trans-unit>
        <trans-unit id="7d3d95ffa3f81f91f71534d6dadf0dec108ea6c6" translate="yes" xml:space="preserve">
          <source>LLDB is a powerful tool with a great documentation. To learn more about it, consider Apple's debugging documentation, for instance the &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/gdb_to_lldb_transition_guide/document/lldb-basics.html#//apple_ref/doc/uid/TP40012917-CH2-SW2&quot;&gt;LLDB Command Structure Reference&lt;/a&gt; or the introduction to &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/gdb_to_lldb_transition_guide/document/lldb-terminal-workflow-tutorial.html&quot;&gt;Using LLDB as a Standalone Debugger&lt;/a&gt;.</source>
          <target state="translated">LLDBは、優れたドキュメントを備えた強力なツールです。詳細については、Appleのデバッグドキュメントを検討してください。たとえば、&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/gdb_to_lldb_transition_guide/document/lldb-basics.html#//apple_ref/doc/uid/TP40012917-CH2-SW2&quot;&gt;LLDBコマンド構造のリファレンス&lt;/a&gt;や、&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/gdb_to_lldb_transition_guide/document/lldb-terminal-workflow-tutorial.html&quot;&gt;スタンドアロンデバッガーとしてのLLDBの使用&lt;/a&gt;の紹介などです。</target>
        </trans-unit>
        <trans-unit id="d19a4be135980e5ef4a065ac5b4d796f7207e00d" translate="yes" xml:space="preserve">
          <source>LNK1181: cannot open input file 'kernel32.lib'</source>
          <target state="translated">LNK1181:入力ファイル 'kernel32.lib' が開けません。</target>
        </trans-unit>
        <trans-unit id="80fea83804bf0e1f73c7272f7a19c26bc52d63ef" translate="yes" xml:space="preserve">
          <source>LTS</source>
          <target state="translated">LTS</target>
        </trans-unit>
        <trans-unit id="800734d40ea8493c3a8bf4b7794c379316a3df97" translate="yes" xml:space="preserve">
          <source>Language Code</source>
          <target state="translated">言語コード</target>
        </trans-unit>
        <trans-unit id="2ccd20b6dbc9562a28819fbf7ff0129d89476dcb" translate="yes" xml:space="preserve">
          <source>Language Name</source>
          <target state="translated">言語名</target>
        </trans-unit>
        <trans-unit id="535cdb9bf5c901974567357abde733d39ad34291" translate="yes" xml:space="preserve">
          <source>Laothian</source>
          <target state="translated">Laothian</target>
        </trans-unit>
        <trans-unit id="d110f1435e34b27515c30f3be3bcd2bfb2388e70" translate="yes" xml:space="preserve">
          <source>Large icon</source>
          <target state="translated">大きなアイコン</target>
        </trans-unit>
        <trans-unit id="e05f92ac1b16cc7edb8d43150b49e59e79895476" translate="yes" xml:space="preserve">
          <source>Later versions of Windows allow for advanced notifications, with custom templates, images, and other flexible elements. To send those notifications (from either the main process or the renderer process), use the userland module &lt;a href=&quot;https://github.com/felixrieseberg/electron-windows-notifications&quot;&gt;electron-windows-notifications&lt;/a&gt;, which uses native Node addons to send &lt;code&gt;ToastNotification&lt;/code&gt; and &lt;code&gt;TileNotification&lt;/code&gt; objects.</source>
          <target state="translated">それ以降のバージョンのWindowsでは、カスタムテンプレート、画像、その他の柔軟な要素を備えた高度な通知が可能です。（メイン処理又はレンダリングプロセスのいずれかから）、それらの通知を送信するために、ユーザランドモジュールを使用して&lt;a href=&quot;https://github.com/felixrieseberg/electron-windows-notifications&quot;&gt;電子のWindows-通知&lt;/a&gt;送信するネイティブノードアドオンを使用する、 &lt;code&gt;ToastNotification&lt;/code&gt; と &lt;code&gt;TileNotification&lt;/code&gt; オブジェクトを。</target>
        </trans-unit>
        <trans-unit id="1728312ad64b08dc2b1876cfbbf9262bc117c354" translate="yes" xml:space="preserve">
          <source>Later versions of macOS allow for notifications with an input field, allowing the user to quickly reply to a notification. In order to send notifications with an input field, use the userland module &lt;a href=&quot;https://github.com/CharlieHess/node-mac-notifier&quot;&gt;node-mac-notifier&lt;/a&gt;.</source>
          <target state="translated">macOSの新しいバージョンでは、入力フィールドを使用した通知が可能で、ユーザーは通知にすばやく返信できます。入力フィールドで通知を送信するには、ユーザーランドモジュール&lt;a href=&quot;https://github.com/CharlieHess/node-mac-notifier&quot;&gt;node-mac-notifierを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="79102e50ec1470cd9d985bb97a7ee168aea5c9fa" translate="yes" xml:space="preserve">
          <source>Later, a zero-day exploit is revealed and a fix is applied to master. We backport the fix to the &lt;code&gt;2-0-x&lt;/code&gt; line and release &lt;code&gt;2.0.1&lt;/code&gt;.</source>
          <target state="translated">その後、ゼロデイ攻撃が明らかになり、修正がマスターに適用されます。修正を &lt;code&gt;2-0-x&lt;/code&gt; 行にリリースし、 &lt;code&gt;2.0.1&lt;/code&gt; をリリースします。</target>
        </trans-unit>
        <trans-unit id="9bde795b72be44b343c829314d764282997de688" translate="yes" xml:space="preserve">
          <source>Latin</source>
          <target state="translated">Latin</target>
        </trans-unit>
        <trans-unit id="9ed6ae997b1668915a9529a0889d5ac9735b0c4b" translate="yes" xml:space="preserve">
          <source>Latvian</source>
          <target state="translated">Latvian</target>
        </trans-unit>
        <trans-unit id="12c9e11f89aca32c500a6c6be3bcd67a6e93e727" translate="yes" xml:space="preserve">
          <source>Launch electron app after build. You can now open the xcode workspace created above and attach to the electron process through the Debug &amp;gt; Attach To Process &amp;gt; Electron debug menu. [Note: If you want to debug the renderer process, you need to attach to the Electron Helper as well.]</source>
          <target state="translated">ビルド後にelectronアプリを起動します。上記で作成したxcodeワークスペースを開き、[デバッグ]&amp;gt; [プロセスにアタッチ]&amp;gt; [電子デバッグ]メニューから電子プロセスにアタッチできます。[注：レンダラープロセスをデバッグする場合は、Electron Helperにもアタッチする必要があります。]</target>
        </trans-unit>
        <trans-unit id="edb627b677bb2e85eb500bda16bcdd868b84eb44" translate="yes" xml:space="preserve">
          <source>Legitimate use cases exist, but unless you know what you are doing, you should not enable this property.</source>
          <target state="translated">合法的なユースケースは存在しますが、何をしているかわからない限り、このプロパティを有効にすべきではありません。</target>
        </trans-unit>
        <trans-unit id="e5416149c06382c28af60fb1dc625ea79a1e2812" translate="yes" xml:space="preserve">
          <source>Let's assume that you want to debug &lt;code&gt;app.setName()&lt;/code&gt;, which is defined in &lt;code&gt;browser.cc&lt;/code&gt; as &lt;code&gt;Browser::SetName()&lt;/code&gt;. Set the breakpoint using the &lt;code&gt;breakpoint&lt;/code&gt; command, specifying file and line to break on:</source>
          <target state="translated">&lt;code&gt;browser.cc&lt;/code&gt; で &lt;code&gt;Browser::SetName()&lt;/code&gt; として定義されている &lt;code&gt;app.setName()&lt;/code&gt; をデバッグするとします。 &lt;code&gt;breakpoint&lt;/code&gt; コマンドを使用してブレークポイントを設定し、ブレークするファイルと行を指定します。</target>
        </trans-unit>
        <trans-unit id="c58bd40e95aef48eee67a645bb4f78e1797cdf10" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT license.</source>
          <target state="translated">MITのライセンスでライセンスされています。</target>
        </trans-unit>
        <trans-unit id="2685bc981621da79d2600fee575db7b305064b8d" translate="yes" xml:space="preserve">
          <source>Lifetime of Remote Objects</source>
          <target state="translated">リモートオブジェクトの寿命</target>
        </trans-unit>
        <trans-unit id="5e9ffa6ffac7ebf299d8829cf9d9d0fbcc4082a7" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;--host-rules&lt;/code&gt; but these &lt;code&gt;rules&lt;/code&gt; only apply to the host resolver.</source>
          <target state="translated">&lt;code&gt;--host-rules&lt;/code&gt; に似ていますが、これらの &lt;code&gt;rules&lt;/code&gt; はホストリゾルバーにのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="cf07f03f4c10e887c4ab3647d44403ccb8dab3d1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;--inspect&lt;/code&gt; but pauses execution on the first line of JavaScript.</source>
          <target state="translated">同様 &lt;code&gt;--inspect&lt;/code&gt; しかし、JavaScriptの最初の行に実行を一時停止します。</target>
        </trans-unit>
        <trans-unit id="f2c530a19bd62e37e3a792fa8bf53464fa79e244" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;ipcRenderer.send&lt;/code&gt; but the event will be sent to the &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; element in the host page instead of the main process.</source>
          <target state="translated">&lt;code&gt;ipcRenderer.send&lt;/code&gt; と同様ですが、イベントはメインプロセスではなくホストページの &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 要素に送信されます。</target>
        </trans-unit>
        <trans-unit id="94b0ded4d60e2107d4aeb10a52dcd568cfff0aed" translate="yes" xml:space="preserve">
          <source>Like NW.js, Electron provides a platform to write desktop applications with JavaScript and HTML and has Node integration to grant access to the low level system from web pages.</source>
          <target state="translated">NW.jsと同様に、ElectronはJavaScriptとHTMLでデスクトップアプリケーションを書くためのプラットフォームを提供し、Nodeを統合してWebページから低レベルのシステムへのアクセスを許可しています。</target>
        </trans-unit>
        <trans-unit id="71c3e236560dfd383eb6c25132ec2f90fb850124" translate="yes" xml:space="preserve">
          <source>Like Node, Electron is focused on having a small set of APIs that provide all the necessary primitives for developing multi-platform desktop applications. This design philosophy allows Electron to remain a flexible tool without being overly prescriptive about how it should be used. Userland enables users to create and share tools that provide additional functionality on top of what is available in &quot;core&quot;.</source>
          <target state="translated">Nodeと同様に、Electronは、マルチプラットフォームのデスクトップアプリケーションを開発するために必要なすべてのプリミティブを提供する小さなAPIのセットを持つことに焦点を当てています。この設計思想により、Electronはどのように使うべきかを過度に規定することなく、柔軟なツールであり続けることができます。ユーザーランドは、ユーザーが「コア」で利用可能な機能の上に追加機能を提供するツールを作成し、共有することを可能にします。</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="3c46b62eb65be1e5fd1cb89afd7c2ec725817824" translate="yes" xml:space="preserve">
          <source>Limitations of MAS Build</source>
          <target state="translated">MASビルドの限界</target>
        </trans-unit>
        <trans-unit id="b62ec0042a445f3138737f83a1b75da7db12a301" translate="yes" xml:space="preserve">
          <source>Limitations of the Node API</source>
          <target state="translated">ノードAPIの制限事項</target>
        </trans-unit>
        <trans-unit id="bdf581cc1c81ea3b5fa1a390925a643afcab19e5" translate="yes" xml:space="preserve">
          <source>Lingala</source>
          <target state="translated">Lingala</target>
        </trans-unit>
        <trans-unit id="8740f6b1646315b108f5a7b7630739c109bdee42" translate="yes" xml:space="preserve">
          <source>Linting</source>
          <target state="translated">Linting</target>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="translated">Linux</target>
        </trans-unit>
        <trans-unit id="7f370089b00f31b78935318c07ce7b050337cf2a" translate="yes" xml:space="preserve">
          <source>Linux: &lt;code&gt;$XDG_CACHE_HOME&lt;/code&gt; or &lt;code&gt;~/.cache/electron/&lt;/code&gt;</source>
          <target state="translated">Linux： &lt;code&gt;$XDG_CACHE_HOME&lt;/code&gt; または &lt;code&gt;~/.cache/electron/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20cb29cb8daab844a02a18f0ac83d7c62fbad7dc" translate="yes" xml:space="preserve">
          <source>List all files under the root of the archive:</source>
          <target state="translated">アーカイブのルート以下のすべてのファイルをリストアップします。</target>
        </trans-unit>
        <trans-unit id="ebd312c54c59e660e8a804202db75a55093c1d92" translate="yes" xml:space="preserve">
          <source>Listens to &lt;code&gt;channel&lt;/code&gt;, when a new message arrives &lt;code&gt;listener&lt;/code&gt; would be called with &lt;code&gt;listener(event, args...)&lt;/code&gt;.</source>
          <target state="translated">耳を傾け &lt;code&gt;channel&lt;/code&gt; の新しいメッセージが到着すると、 &lt;code&gt;listener&lt;/code&gt; で呼び出されます &lt;code&gt;listener(event, args...)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="553c519c9addc3f4dad41b4a23238251692354b7" translate="yes" xml:space="preserve">
          <source>Lithuanian</source>
          <target state="translated">Lithuanian</target>
        </trans-unit>
        <trans-unit id="ef941bb9afb25b349511256cc034b5e38d94c79b" translate="yes" xml:space="preserve">
          <source>Loading content over &lt;code&gt;HTTPS&lt;/code&gt; assures the authenticity and integrity of the loaded resources while encrypting the traffic itself. See the section on &lt;a href=&quot;#1-only-load-secure-content&quot;&gt;only displaying secure content&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;HTTPS&lt;/code&gt; 経由でコンテンツをロードすると、トラフィック自体を暗号化しながら、ロードされたリソースの信頼性と整合性が保証されます。詳細については、&lt;a href=&quot;#1-only-load-secure-content&quot;&gt;保護されたコンテンツの表示のみ&lt;/a&gt;に関するセクションをご覧ください。</target>
        </trans-unit>
        <trans-unit id="fc079f52aed3f3417e23c1f910ecdea48460cc9f" translate="yes" xml:space="preserve">
          <source>Loading the initial HTML of a website over &lt;code&gt;HTTPS&lt;/code&gt; and attempting to load subsequent resources via &lt;code&gt;HTTP&lt;/code&gt; is also known as &quot;mixed content&quot;.</source>
          <target state="translated">&lt;code&gt;HTTPS&lt;/code&gt; 経由でWebサイトの最初のHTMLを読み込み、 &lt;code&gt;HTTP&lt;/code&gt; 経由で後続のリソースを読み込もうとすることは、「混合コンテンツ」とも呼ばれます。</target>
        </trans-unit>
        <trans-unit id="30a1a104adb3f5e456c05c2a32c27218b68a7f56" translate="yes" xml:space="preserve">
          <source>Loads the &lt;code&gt;url&lt;/code&gt; in the webview, the &lt;code&gt;url&lt;/code&gt; must contain the protocol prefix, e.g. the &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;file://&lt;/code&gt;.</source>
          <target state="translated">ロードは &lt;code&gt;url&lt;/code&gt; のWebViewで、 &lt;code&gt;url&lt;/code&gt; 例えば、プロトコルプレフィックスが含まれている必要があり &lt;code&gt;http://&lt;/code&gt; または &lt;code&gt;file://&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be93699ca87035f9fc36269481c3bdb20862991d" translate="yes" xml:space="preserve">
          <source>Loads the &lt;code&gt;url&lt;/code&gt; in the window. The &lt;code&gt;url&lt;/code&gt; must contain the protocol prefix, e.g. the &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;file://&lt;/code&gt;. If the load should bypass http cache then use the &lt;code&gt;pragma&lt;/code&gt; header to achieve it.</source>
          <target state="translated">ウィンドウに &lt;code&gt;url&lt;/code&gt; をロードします。 &lt;code&gt;url&lt;/code&gt; 例えば、プロトコルプレフィックスが含まれている必要があり &lt;code&gt;http://&lt;/code&gt; または &lt;code&gt;file://&lt;/code&gt; 。ロードでhttpキャッシュをバイパスする必要がある場合は、 &lt;code&gt;pragma&lt;/code&gt; ヘッダーを使用してそれを実現します。</target>
        </trans-unit>
        <trans-unit id="49f3107176240c3484499f42d4ea3791ab0eb6ce" translate="yes" xml:space="preserve">
          <source>Loads the given file in the window, &lt;code&gt;filePath&lt;/code&gt; should be a path to an HTML file relative to the root of your application. For instance an app structure like this:</source>
          <target state="translated">指定されたファイルをウィンドウにロードします &lt;code&gt;filePath&lt;/code&gt; は、アプリケーションのルートを基準にしたHTMLファイルへのパスである必要があります。たとえば、次のようなアプリ構造：</target>
        </trans-unit>
        <trans-unit id="9ee0cb93b5814acea6da884dc9bf6b78f5602f71" translate="yes" xml:space="preserve">
          <source>Local Modules (using relative paths)</source>
          <target state="translated">ローカルモジュール (相対パスを使用)</target>
        </trans-unit>
        <trans-unit id="bf7c326f8217d8d073a4c87dc6c0c16e9df63e9f" translate="yes" xml:space="preserve">
          <source>Local Shortcuts</source>
          <target state="translated">ローカル ショートカット</target>
        </trans-unit>
        <trans-unit id="031b11f4c0cdf5c68d2539db1248bf550f65668e" translate="yes" xml:space="preserve">
          <source>Locale values returned by &lt;code&gt;app.getLocale()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;app.getLocale()&lt;/code&gt; によって返されるロケール値。</target>
        </trans-unit>
        <trans-unit id="9a621b0da3425ea2613fe09c377400e16b011ee6" translate="yes" xml:space="preserve">
          <source>Locale values returned by app.getLocale().</source>
          <target state="translated">app.getLocale()によって返されるロケールの値。</target>
        </trans-unit>
        <trans-unit id="a222060e32289bf6910ac4a07a10733be500bd99" translate="yes" xml:space="preserve">
          <source>Locales</source>
          <target state="translated">Locales</target>
        </trans-unit>
        <trans-unit id="e101dd7d36fcf91f4a7562468263eaf821e410bf" translate="yes" xml:space="preserve">
          <source>Located in &lt;code&gt;electron/libchromiumcontent/src/tools/clang/scripts/update.py&lt;/code&gt;</source>
          <target state="translated">位置 &lt;code&gt;electron/libchromiumcontent/src/tools/clang/scripts/update.py&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="857d812e97fcac1b5c82d2064588db4e5ddd72d4" translate="yes" xml:space="preserve">
          <source>Long term support of older versions of Electron does not currently exist. If your current version of Electron works for you, you can stay on it for as long as you'd like. If you want to make use of new features as they come in you should upgrade to a newer version.</source>
          <target state="translated">現在、古いバージョンのElectronの長期サポートはありません。現在お使いのElectronのバージョンが有効であれば、お好きなだけお使いいただけます。新機能の追加をご希望の場合は、新しいバージョンにアップグレードしてください。</target>
        </trans-unit>
        <trans-unit id="68af66810bb202c8b75471176a3f65b13ff42f73" translate="yes" xml:space="preserve">
          <source>MAS</source>
          <target state="translated">MAS</target>
        </trans-unit>
        <trans-unit id="87622d875bec8a4daf829da2f6e6a4da0aa5935c" translate="yes" xml:space="preserve">
          <source>MD2 - &lt;a href=&quot;https://tools.ietf.org/html/rfc1319&quot;&gt;RFC 1319&lt;/a&gt;</source>
          <target state="translated">MD2- &lt;a href=&quot;https://tools.ietf.org/html/rfc1319&quot;&gt;RFC 1319&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48c7fdf5c55534c6ded90e9795080da11821105c" translate="yes" xml:space="preserve">
          <source>MD4 - &lt;a href=&quot;https://tools.ietf.org/html/rfc6150&quot;&gt;RFC 6150&lt;/a&gt;</source>
          <target state="translated">MD4- &lt;a href=&quot;https://tools.ietf.org/html/rfc6150&quot;&gt;RFC 6150&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b2779c17e43e24356f84eb01a1a814532502f63" translate="yes" xml:space="preserve">
          <source>MD5 - &lt;a href=&quot;https://tools.ietf.org/html/rfc1321&quot;&gt;RFC 1321&lt;/a&gt;</source>
          <target state="translated">MD5- &lt;a href=&quot;https://tools.ietf.org/html/rfc1321&quot;&gt;RFC 1321&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4eb4ebbec5df5de4887b468de43d79bcbae01a9d" translate="yes" xml:space="preserve">
          <source>MDC2 - &lt;a href=&quot;https://wiki.openssl.org/index.php/Manual:Mdc2(3)&quot;&gt;ISO/IEC 10118-2&lt;/a&gt;</source>
          <target state="translated">MDC2- &lt;a href=&quot;https://wiki.openssl.org/index.php/Manual:Mdc2(3)&quot;&gt;ISO / IEC 10118-2&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1764c9b488881944bdd8aa802a90466c19b07913" translate="yes" xml:space="preserve">
          <source>Mac App Store</source>
          <target state="translated">マックアプリストア</target>
        </trans-unit>
        <trans-unit id="780c258bc4ad975884ac6bdcaf6f0e1e3b380a9d" translate="yes" xml:space="preserve">
          <source>Mac App Store Submission Guide</source>
          <target state="translated">Mac App Store 投稿ガイド</target>
        </trans-unit>
        <trans-unit id="e1147b6f453aa3574afe7faf01df8f4f43a25471" translate="yes" xml:space="preserve">
          <source>MacOS Dock</source>
          <target state="translated">マックオスドック</target>
        </trans-unit>
        <trans-unit id="55d8cae81f999b148f7f11049a80625438104669" translate="yes" xml:space="preserve">
          <source>MacOS: &lt;code&gt;~/Library/Caches/electron/&lt;/code&gt;</source>
          <target state="translated">MacOS： &lt;code&gt;~/Library/Caches/electron/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3fe571f349f4b42daacd19bf3d1a708f4bec7cd" translate="yes" xml:space="preserve">
          <source>Macedonian</source>
          <target state="translated">Macedonian</target>
        </trans-unit>
        <trans-unit id="62bce9422ff2d14f69ab80a154510232fc8a9afd" translate="yes" xml:space="preserve">
          <source>Main</source>
          <target state="translated">Main</target>
        </trans-unit>
        <trans-unit id="99effeb4610a03a43d98c6d679f8583dca53d6ac" translate="yes" xml:space="preserve">
          <source>Main Menu's Name</source>
          <target state="translated">メインメニューの名称</target>
        </trans-unit>
        <trans-unit id="e49b821b2c7b6714f350a8dd1146a21a18871a8c" translate="yes" xml:space="preserve">
          <source>Main Process</source>
          <target state="translated">主なプロセス</target>
        </trans-unit>
        <trans-unit id="9efa37270cf8257d0ec596934c9bc2db502ebdcd" translate="yes" xml:space="preserve">
          <source>Main and Renderer</source>
          <target state="translated">メインとレンダラ</target>
        </trans-unit>
        <trans-unit id="b53208d488815855dd895906ff829adc9ff78cea" translate="yes" xml:space="preserve">
          <source>Main and Renderer Processes</source>
          <target state="translated">メインプロセスとレンダラプロセス</target>
        </trans-unit>
        <trans-unit id="bd28ae81bb664c783b6f9a050e87f13629f673d6" translate="yes" xml:space="preserve">
          <source>Main process</source>
          <target state="translated">主なプロセス</target>
        </trans-unit>
        <trans-unit id="e92739bf5eb177cbc20df5d923a76a756209a14d" translate="yes" xml:space="preserve">
          <source>Major Version Increments</source>
          <target state="translated">メジャーバージョンアップ</target>
        </trans-unit>
        <trans-unit id="15658f56ce81f1e448f2ea894b48e7e0a98dfaa8" translate="yes" xml:space="preserve">
          <source>Major releases</source>
          <target state="translated">主なリリース</target>
        </trans-unit>
        <trans-unit id="538d8b92993a68dce392ee56fb0fb80b9f6b4060" translate="yes" xml:space="preserve">
          <source>Major version change</source>
          <target state="translated">メジャーバージョンアップ</target>
        </trans-unit>
        <trans-unit id="6304d1caf7f16f9be785c9c328a018b0d5156b1d" translate="yes" xml:space="preserve">
          <source>Make Electron code compatible with the new libcc</source>
          <target state="translated">Electron コードを新しい libcc と互換性のあるものにしました。</target>
        </trans-unit>
        <trans-unit id="123ebe43cb0ceb7111bbb2d0db8366fa969b4407" translate="yes" xml:space="preserve">
          <source>Make HTTP/HTTPS requests.</source>
          <target state="translated">HTTP/HTTPSリクエストを行います。</target>
        </trans-unit>
        <trans-unit id="78ccfead62fd93ae7a93727e70b96ebb1a1ca6c1" translate="yes" xml:space="preserve">
          <source>Make a checklist of the Electron patches that need to be applied with &lt;code&gt;git log --oneline&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;git log --oneline&lt;/code&gt; で適用する必要があるElectronパッチのチェックリストを作成します</target>
        </trans-unit>
        <trans-unit id="fb9d214a8c3a813ca4f40f1248f0fa923e2c259d" translate="yes" xml:space="preserve">
          <source>Make codes changes in Electron repository.</source>
          <target state="translated">Electronのリポジトリでコードの変更を行います。</target>
        </trans-unit>
        <trans-unit id="20990824044b34a54949bd84530966fc5cb788ea" translate="yes" xml:space="preserve">
          <source>Make internal builds of libcc and electron</source>
          <target state="translated">libccと電子の内部ビルドを行う</target>
        </trans-unit>
        <trans-unit id="22a93996cb9b35166bec2f617cb93d4e0a0ce26d" translate="yes" xml:space="preserve">
          <source>Make sure it builds then add, commit, and push work to electron's crashpad fork</source>
          <target state="translated">ビルドされていることを確認してから、追加、コミットし、作業をelectronのクラッシュパッドフォークにプッシュします。</target>
        </trans-unit>
        <trans-unit id="ce695f6c79213567b657ab0ab0a20b729a1495b1" translate="yes" xml:space="preserve">
          <source>Make sure the linter does not report any issues and that all tests pass. Please do not submit patches that fail either check.</source>
          <target state="translated">linter が問題を報告せず、すべてのテストが合格していることを確認してください。どちらのチェックも不合格のパッチは提出しないでください。</target>
        </trans-unit>
        <trans-unit id="971665255c9f7514f0fb7340e444b4ea708018ac" translate="yes" xml:space="preserve">
          <source>Make sure you have the latest Visual Studio update installed.</source>
          <target state="translated">最新の Visual Studio アップデートがインストールされていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="bd200749e96183e292d7ffb6a2e24e6e794542ea" translate="yes" xml:space="preserve">
          <source>Makes the browser go back a web page.</source>
          <target state="translated">ブラウザをWebページに戻します。</target>
        </trans-unit>
        <trans-unit id="fb33f8c8468b4ef03b24447c1b467fe21bdd8e7f" translate="yes" xml:space="preserve">
          <source>Makes the browser go forward a web page.</source>
          <target state="translated">ブラウザにWebページを進めさせます。</target>
        </trans-unit>
        <trans-unit id="3598715e580b14a7b0457c42b72ca9d527ffe21e" translate="yes" xml:space="preserve">
          <source>Makes the guest page go back.</source>
          <target state="translated">ゲストページを元に戻します。</target>
        </trans-unit>
        <trans-unit id="8fecea1ee7ec37d488b674dfe0c96e2d98ff2179" translate="yes" xml:space="preserve">
          <source>Makes the guest page go forward.</source>
          <target state="translated">ゲストページを前進させます。</target>
        </trans-unit>
        <trans-unit id="267a0d8700d17b6e1c1981abe6b4204bfac85631" translate="yes" xml:space="preserve">
          <source>Makes the window ignore all mouse events.</source>
          <target state="translated">ウィンドウをすべてのマウスイベントを無視するようにします。</target>
        </trans-unit>
        <trans-unit id="6dd49a56260ae56c79b5cb939972481551eeff57" translate="yes" xml:space="preserve">
          <source>Makes the window not show in the taskbar.</source>
          <target state="translated">タスクバーにウィンドウを表示しないようにします。</target>
        </trans-unit>
        <trans-unit id="671c4a1a00d83c053d9d4fc465a563ed8e1f7e2c" translate="yes" xml:space="preserve">
          <source>Making Changes</source>
          <target state="translated">変更を加える</target>
        </trans-unit>
        <trans-unit id="046dd363a2869c372fd92b4d7fc805573323a713" translate="yes" xml:space="preserve">
          <source>Making accessible applications is important and we're happy to introduce new functionality to &lt;a href=&quot;https://electronjs.org/devtron&quot;&gt;Devtron&lt;/a&gt; and &lt;a href=&quot;https://electronjs.org/spectron&quot;&gt;Spectron&lt;/a&gt; that gives developers the opportunity to make their apps better for everyone.</source>
          <target state="translated">アクセシブルなアプリケーションを作成することは重要であり、&lt;a href=&quot;https://electronjs.org/devtron&quot;&gt;Devtron&lt;/a&gt;と&lt;a href=&quot;https://electronjs.org/spectron&quot;&gt;Spectronに&lt;/a&gt;新しい機能を導入できることを嬉しく思います。これにより、開発者はアプリを誰にとってもより良いものにすることができます。</target>
        </trans-unit>
        <trans-unit id="08f0c0cf51888a42175c6e62922d9b9e24579a11" translate="yes" xml:space="preserve">
          <source>Malay</source>
          <target state="translated">Malay</target>
        </trans-unit>
        <trans-unit id="c730df3afaaac142f305e8f798eca241f12abf9f" translate="yes" xml:space="preserve">
          <source>Malayalam</source>
          <target state="translated">Malayalam</target>
        </trans-unit>
        <trans-unit id="cfb5310c4958ed16357aa5406e541fbeec602420" translate="yes" xml:space="preserve">
          <source>Maltese</source>
          <target state="translated">Maltese</target>
        </trans-unit>
        <trans-unit id="64ee1d8049f251ea9cde4c5ba76bbc0737728e80" translate="yes" xml:space="preserve">
          <source>Manage browser sessions, cookies, cache, proxy settings, etc.</source>
          <target state="translated">ブラウザのセッション、クッキー、キャッシュ、プロキシ設定などを管理します。</target>
        </trans-unit>
        <trans-unit id="dec209aaca99776ec018cbb9ee0ec7a9b32b56e6" translate="yes" xml:space="preserve">
          <source>Manage files and URLs using their default applications.</source>
          <target state="translated">デフォルトのアプリケーションを使用してファイルやURLを管理します。</target>
        </trans-unit>
        <trans-unit id="c14e21aaec4b77e9b50c210353d726630a69b1b8" translate="yes" xml:space="preserve">
          <source>Manipulate the child browser window</source>
          <target state="translated">子ブラウザウィンドウの操作</target>
        </trans-unit>
        <trans-unit id="a0ba40e77497397867a1a3dd6568cf58eee5431d" translate="yes" xml:space="preserve">
          <source>Manually building for Electron</source>
          <target state="translated">エレクトロンのための手動ビルド</target>
        </trans-unit>
        <trans-unit id="568e03bb96ad8f988e60a033c47bd9714368a07a" translate="yes" xml:space="preserve">
          <source>Manually enables Chrome's accessibility support, allowing to expose accessibility switch to users in application settings. &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;https://www.chromium.org/developers/design-documents/accessibility&lt;/a&gt; for more details. Disabled by default.</source>
          <target state="translated">Chromeのユーザー補助サポートを手動で有効にし、アプリケーション設定でユーザーにユーザー補助スイッチを公開できるようにします。詳細については、&lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;https：//www.chromium.org/developers/design-documents/accessibility&lt;/a&gt;をご覧ください。デフォルトでは無効になっています。</target>
        </trans-unit>
        <trans-unit id="6bb4b981fc369f78634393c244cc62dcb75bb23c" translate="yes" xml:space="preserve">
          <source>Marathi</source>
          <target state="translated">Marathi</target>
        </trans-unit>
        <trans-unit id="e8ceadd643faeb0bb54502b73c425647ff136a31" translate="yes" xml:space="preserve">
          <source>Marks the image as a template image.</source>
          <target state="translated">画像をテンプレート画像としてマークします。</target>
        </trans-unit>
        <trans-unit id="e4cb68450d6ee60729f8e6bf50c6178cacca48e3" translate="yes" xml:space="preserve">
          <source>Match URLs which are IP address literals.</source>
          <target state="translated">IPアドレスリテラルであるURLにマッチします。</target>
        </trans-unit>
        <trans-unit id="33ab1c88001bf081442d8776abcc8ae32ce1b8a6" translate="yes" xml:space="preserve">
          <source>Match a particular domain suffix.</source>
          <target state="translated">特定のドメインサフィックスにマッチします。</target>
        </trans-unit>
        <trans-unit id="7ef5c8e655993c05557e9aa0674b43d038556da1" translate="yes" xml:space="preserve">
          <source>Match all hostnames that match the pattern HOSTNAME_PATTERN.</source>
          <target state="translated">HOSTNAME_PATTERN パターンに一致するすべてのホスト名にマッチします。</target>
        </trans-unit>
        <trans-unit id="a6ab65cfe6eda9c382fe697344f8af846c1bc900" translate="yes" xml:space="preserve">
          <source>Match any URL that is to an IP literal that falls between the given range. IP range is specified using CIDR notation.</source>
          <target state="translated">指定された範囲の間にあるIPリテラルへのURLにマッチします。IP範囲はCIDR記法を使用して指定します。</target>
        </trans-unit>
        <trans-unit id="66b5a35f9ebfbc106121468ab684462bb4780f8a" translate="yes" xml:space="preserve">
          <source>Match local addresses. The meaning of &lt;code&gt;&amp;lt;local&amp;gt;&lt;/code&gt; is whether the host matches one of: &quot;127.0.0.1&quot;, &quot;::1&quot;, &quot;localhost&quot;.</source>
          <target state="translated">ローカルアドレスを照合します。 &lt;code&gt;&amp;lt;local&amp;gt;&lt;/code&gt; の意味は、ホストが「127.0.0.1」、「:: 1」、「localhost」のいずれかに一致するかどうかです。</target>
        </trans-unit>
        <trans-unit id="bc1970136ab27583ccea13cbf7161d7e25b69a5e" translate="yes" xml:space="preserve">
          <source>Maximizes the window. This will also show (but not focus) the window if it isn't being displayed already.</source>
          <target state="translated">ウィンドウを最大化します。ウィンドウがまだ表示されていない場合は、これも表示されます (フォーカスはされません)。</target>
        </trans-unit>
        <trans-unit id="e0efdce50032a40b3a3914e5fc8bfa6cd4288bb5" translate="yes" xml:space="preserve">
          <source>Memory Management</source>
          <target state="translated">メモリ管理</target>
        </trans-unit>
        <trans-unit id="a39a2691f8ac63df7fcbe6ae7ece40b10d717679" translate="yes" xml:space="preserve">
          <source>MemoryInfo</source>
          <target state="translated">MemoryInfo</target>
        </trans-unit>
        <trans-unit id="d2f3ea8610a8148842353371965b406006ea2e95" translate="yes" xml:space="preserve">
          <source>MemoryInfo Object</source>
          <target state="translated">メモリ情報オブジェクト</target>
        </trans-unit>
        <trans-unit id="b6f34e962df288485f4a23a96a69701e9811a805" translate="yes" xml:space="preserve">
          <source>MemoryUsageDetails</source>
          <target state="translated">MemoryUsageDetails</target>
        </trans-unit>
        <trans-unit id="6b8e378b13b324bf2719d56f05d2a76e1fdca001" translate="yes" xml:space="preserve">
          <source>MemoryUsageDetails Object</source>
          <target state="translated">MemoryUsageDetails オブジェクト</target>
        </trans-unit>
        <trans-unit id="57f5f5efbc5990f5230aa95359042338b856707b" translate="yes" xml:space="preserve">
          <source>Menu</source>
          <target state="translated">Menu</target>
        </trans-unit>
        <trans-unit id="ac638b6bd0a0e2ae3936b49675084e959e08498d" translate="yes" xml:space="preserve">
          <source>Menu Item Position</source>
          <target state="translated">メニュー項目 位置</target>
        </trans-unit>
        <trans-unit id="c80d07f2f5248a4d681913d75eca7a816c2ab9da" translate="yes" xml:space="preserve">
          <source>Menu()</source>
          <target state="translated">Menu()</target>
        </trans-unit>
        <trans-unit id="6c4aea89b61f6d70b9afb61efa7ba962a76cb7a1" translate="yes" xml:space="preserve">
          <source>Menu:</source>
          <target state="translated">Menu:</target>
        </trans-unit>
        <trans-unit id="fd0b0b8f9535c21f5c697415e34da8e008d26d26" translate="yes" xml:space="preserve">
          <source>MenuItem</source>
          <target state="translated">MenuItem</target>
        </trans-unit>
        <trans-unit id="7cc9eb5ad4b43fe57d0aef498e053f33d8a9c732" translate="yes" xml:space="preserve">
          <source>MenuItem()</source>
          <target state="translated">MenuItem()</target>
        </trans-unit>
        <trans-unit id="79343f29f5723f9f94c0038b7028cb8a494caeb2" translate="yes" xml:space="preserve">
          <source>Merge temporary branch (pre-2-0-x branches only)</source>
          <target state="translated">一時的なブランチをマージ(2-0-x以前のブランチのみ</target>
        </trans-unit>
        <trans-unit id="edbc4cdf49b60f12acfba715eaa71dd0dc3b31f8" translate="yes" xml:space="preserve">
          <source>Merges all windows into one window with multiple tabs when native tabs are enabled and there is more than one open window.</source>
          <target state="translated">ネイティブ タブが有効で、開いているウィンドウが複数ある場合、すべてのウィンドウを複数のタブを持つ 1 つのウィンドウに統合します。</target>
        </trans-unit>
        <trans-unit id="f62e9e3e46d782563d406255ceb97e4d191cd710" translate="yes" xml:space="preserve">
          <source>Merging back into master</source>
          <target state="translated">マスターへのマージ</target>
        </trans-unit>
        <trans-unit id="b8b0b3aac0d6933ac642e6939867daa972acb2a1" translate="yes" xml:space="preserve">
          <source>Merging back into old release branch</source>
          <target state="translated">古いリリースブランチへのマージ</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="37d18b76453fed3e678a25bf44af7335d8a1f834" translate="yes" xml:space="preserve">
          <source>Microsoft &lt;a href=&quot;https://github.com/catalystcode/electron-windows-store&quot;&gt;developed a tool that compiles Electron apps as &lt;code&gt;.appx&lt;/code&gt; packages&lt;/a&gt;, enabling developers to use some of the goodies found in the new application model. This guide explains how to use it - and what the capabilities and limitations of an Electron AppX package are.</source>
          <target state="translated">Microsoft &lt;a href=&quot;https://github.com/catalystcode/electron-windows-store&quot;&gt;は、Electronアプリを &lt;code&gt;.appx&lt;/code&gt; パッケージとしてコンパイルするツールを&lt;/a&gt;開発しました。これにより、開発者は新しいアプリケーションモデルにあるいくつかの優れた機能を使用できます。このガイドでは、その使用方法と、Electron AppXパッケージの機能と制限について説明します。</target>
        </trans-unit>
        <trans-unit id="28128d38fad00ed20714cff948ab05f77479d1e6" translate="yes" xml:space="preserve">
          <source>MimeTypedBuffer</source>
          <target state="translated">MimeTypedBuffer</target>
        </trans-unit>
        <trans-unit id="d6b317ab061a8236f4adc5d7739f52a26b4e8122" translate="yes" xml:space="preserve">
          <source>MimeTypedBuffer Object</source>
          <target state="translated">MimeTypedBuffer オブジェクト</target>
        </trans-unit>
        <trans-unit id="5c250802ed4e299671bafdfe26fbd5c52d2f174a" translate="yes" xml:space="preserve">
          <source>Minimal Bootstrapping</source>
          <target state="translated">最小限のブートストラップ</target>
        </trans-unit>
        <trans-unit id="59d44ab0c473a6e50cdb5fc05dcae565d64d32c4" translate="yes" xml:space="preserve">
          <source>Minimizes the window. On some platforms the minimized window will be shown in the Dock.</source>
          <target state="translated">ウィンドウを最小化します。一部のプラットフォームでは、最小化されたウィンドウはDockに表示されます。</target>
        </trans-unit>
        <trans-unit id="822d8a4f24b72b15bce76b88a8306344b595b682" translate="yes" xml:space="preserve">
          <source>Minor Version Increments</source>
          <target state="translated">マイナーバージョンのインクリメント</target>
        </trans-unit>
        <trans-unit id="f00051475cd7040e49b1165a98e0ececdb494a4c" translate="yes" xml:space="preserve">
          <source>Minor releases</source>
          <target state="translated">マイナーリリース</target>
        </trans-unit>
        <trans-unit id="187790ce114a2fd84cf44bc5850252f1405fdd09" translate="yes" xml:space="preserve">
          <source>Minor version change</source>
          <target state="translated">マイナーバージョンの変更</target>
        </trans-unit>
        <trans-unit id="74adc5789ce92de7bbb5e3d84a287a1ce6d3e7f5" translate="yes" xml:space="preserve">
          <source>Mirror</source>
          <target state="translated">Mirror</target>
        </trans-unit>
        <trans-unit id="50b753b77904c96a7fe67edc0e7799140807aeb3" translate="yes" xml:space="preserve">
          <source>Missing Features: Alphas, and Nightly</source>
          <target state="translated">欠落している機能 アルファ、ナイトリー</target>
        </trans-unit>
        <trans-unit id="aa608f50164ae4468eca5f7a4828180613e032b7" translate="yes" xml:space="preserve">
          <source>MobX Developer Tools</source>
          <target state="translated">MobX開発者ツール</target>
        </trans-unit>
        <trans-unit id="901b00eb5476b91a74e2f260fe55be50affcee6d" translate="yes" xml:space="preserve">
          <source>Modal windows</source>
          <target state="translated">モーダルウィンドウ</target>
        </trans-unit>
        <trans-unit id="0655e943f357853a23dbc1fca9b8b8b74187fed0" translate="yes" xml:space="preserve">
          <source>Modules for Both Processes:</source>
          <target state="translated">両方のプロセス用のモジュール。</target>
        </trans-unit>
        <trans-unit id="fad485f2b0513e07b52567a6f2a346d73ddbc539" translate="yes" xml:space="preserve">
          <source>Modules for the Main Process:</source>
          <target state="translated">メインプロセス用のモジュールです。</target>
        </trans-unit>
        <trans-unit id="dfc2146f5598a75fa9da745d85433f8c014cba38" translate="yes" xml:space="preserve">
          <source>Modules for the Renderer Process (Web Page):</source>
          <target state="translated">レンダラプロセス用のモジュール(Webページ)。</target>
        </trans-unit>
        <trans-unit id="859556f94b13fc510ff5085b5fb29e88a587fc7b" translate="yes" xml:space="preserve">
          <source>Modules that rely on &lt;code&gt;node-pre-gyp&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;node-pre-gyp&lt;/code&gt; に依存するモジュール</target>
        </trans-unit>
        <trans-unit id="9e6cb54b92e776ea4523222c80634966b1a25f1c" translate="yes" xml:space="preserve">
          <source>Modules that rely on &lt;code&gt;prebuild&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;prebuild&lt;/code&gt; 依存するモジュール</target>
        </trans-unit>
        <trans-unit id="977ca71334b90aac52382878a5bc9c5fe2dc63d2" translate="yes" xml:space="preserve">
          <source>Mojo</source>
          <target state="translated">Mojo</target>
        </trans-unit>
        <trans-unit id="981fb1a731db18be7ffbc618830d04ecbc60cd90" translate="yes" xml:space="preserve">
          <source>Moldavian</source>
          <target state="translated">Moldavian</target>
        </trans-unit>
        <trans-unit id="c3bdbab40a4be4ac1b8eb1ccb2dbb2eaf8ed480f" translate="yes" xml:space="preserve">
          <source>Mongolian</source>
          <target state="translated">Mongolian</target>
        </trans-unit>
        <trans-unit id="ad3be9da0333f2d86e25caf5c419702d7e211450" translate="yes" xml:space="preserve">
          <source>Monitor power state changes.</source>
          <target state="translated">電源状態の変化を監視します。</target>
        </trans-unit>
        <trans-unit id="0d6772c17c36f0f8030e0a6c6baa2bec775c05de" translate="yes" xml:space="preserve">
          <source>Monitoring begins immediately locally and asynchronously on child processes as soon as they receive the &lt;code&gt;startMonitoring&lt;/code&gt; request.</source>
          <target state="translated">監視は、子プロセスで &lt;code&gt;startMonitoring&lt;/code&gt; リクエストを受信するとすぐに、ローカルで非同期にすぐに開始されます。</target>
        </trans-unit>
        <trans-unit id="5eaa209d8dce0c8c489a3d027ee8e07c8703eb01" translate="yes" xml:space="preserve">
          <source>More details can be found in &lt;a href=&quot;application-packaging&quot;&gt;Application packaging&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;application-packaging&quot;&gt;アプリケーションのパッケージ化を&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="ac12df785b0417cadd38f4b76e9fd5ed4a671464" translate="yes" xml:space="preserve">
          <source>More information can be found in the &lt;a href=&quot;https://nodejs.org/dist/latest/docs/api/repl.html&quot;&gt;Node.js REPL docs&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://nodejs.org/dist/latest/docs/api/repl.html&quot;&gt;Node.js REPLドキュメントを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="381a4f2cdda5a922f71425e63e4ead748c557260" translate="yes" xml:space="preserve">
          <source>More may be added as needed to expose more electron APIs in the sandbox, but any module in the main process can already be used through &lt;code&gt;electron.remote.require&lt;/code&gt;.</source>
          <target state="translated">サンドボックスでさらに多くのelectron APIを公開するために、必要に応じて追加することができますが、メインプロセスのどのモジュールも &lt;code&gt;electron.remote.require&lt;/code&gt; を介してすでに使用できます。</target>
        </trans-unit>
        <trans-unit id="91ad2fc5f8c51939d84c8988f4bdd7e13db85699" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;fs&lt;/code&gt; APIs can read a file or get a file's information from &lt;code&gt;asar&lt;/code&gt; archives without unpacking, but for some APIs that rely on passing the real file path to underlying system calls, Electron will extract the needed file into a temporary file and pass the path of the temporary file to the APIs to make them work. This adds a little overhead for those APIs.</source>
          <target state="translated">ほとんどの &lt;code&gt;fs&lt;/code&gt; APIは、解凍せずにファイルを読み取ったり、 &lt;code&gt;asar&lt;/code&gt; アーカイブからファイルの情報を取得したりできますが、基になるシステムコールに実際のファイルパスを渡すことに依存する一部のAPIの場合、Electronは必要なファイルを一時ファイルに抽出し、そのパスを渡します一時ファイルをAPIに渡して機能させます。これにより、これらのAPIに少しオーバーヘッドが追加されます。</target>
        </trans-unit>
        <trans-unit id="24df657906e0a9ff5dd9d380b688073ddd400cbe" translate="yes" xml:space="preserve">
          <source>Most issues are resolved by opening a pull request. The process for opening and reviewing a pull request is similar to that of opening and triaging issues, but carries with it a necessary review and approval workflow that ensures that the proposed changes meet the minimal quality and functional guidelines of the Electron project.</source>
          <target state="translated">ほとんどの問題は、プルリクエストを開くことで解決されます。プルリクエストを開いてレビューするプロセスは、問題を開いてトリアージするプロセスと似ていますが、提案された変更がElectronプロジェクトの最低限の品質と機能のガイドラインを満たしていることを保証するために必要なレビューと承認のワークフローを伴います。</target>
        </trans-unit>
        <trans-unit id="1963afbf0297022503035c708168c89e69e8dc93" translate="yes" xml:space="preserve">
          <source>Most pull requests opened against the &lt;code&gt;electron/electron&lt;/code&gt; repository include changes to either the C/C++ code in the &lt;code&gt;atom/&lt;/code&gt; or &lt;code&gt;brightray/&lt;/code&gt; folders, the JavaScript code in the &lt;code&gt;lib/&lt;/code&gt; folder, the documentation in &lt;code&gt;docs/api/&lt;/code&gt; or tests in the &lt;code&gt;spec/&lt;/code&gt; folder.</source>
          <target state="translated">&lt;code&gt;electron/electron&lt;/code&gt; リポジトリに対して開かれるほとんどのプルリクエストには、 &lt;code&gt;atom/&lt;/code&gt; または &lt;code&gt;brightray/&lt;/code&gt; フォルダー内のC / C ++コード、 &lt;code&gt;lib/&lt;/code&gt; フォルダー内のJavaScriptコード、 &lt;code&gt;docs/api/&lt;/code&gt; 内のドキュメント、または &lt;code&gt;spec/&lt;/code&gt; 内のテストへの変更が含まれますフォルダ。</target>
        </trans-unit>
        <trans-unit id="61d68b3e3473c488df7dd74b03100ff56229d822" translate="yes" xml:space="preserve">
          <source>Most users will get this feature for free, since it's supported out of the box by &lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt;&lt;code&gt;electron-packager&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt;&lt;code&gt;electron-forge&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;&lt;code&gt;electron-builder&lt;/code&gt;&lt;/a&gt;. If you are not using any of these tools, read on.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt; &lt;code&gt;electron-packager&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt; &lt;code&gt;electron-forge&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt; &lt;code&gt;electron-builder&lt;/code&gt; で&lt;/a&gt;そのまま使用できるため、ほとんどのユーザーはこの機能を無料で利用できます。これらのツールを使用していない場合は、読み進めてください。</target>
        </trans-unit>
        <trans-unit id="f6950455d237806d5d93ac0532b6858342225fe4" translate="yes" xml:space="preserve">
          <source>Move the given file to trash and returns a boolean status for the operation.</source>
          <target state="translated">与えられたファイルをゴミ箱に移動し、その操作のためのブール値を返します。</target>
        </trans-unit>
        <trans-unit id="1a3875c81017814140fd6c2816640edc744cfd83" translate="yes" xml:space="preserve">
          <source>Moves the current tab into a new window if native tabs are enabled and there is more than one tab in the current window.</source>
          <target state="translated">ネイティブ タブが有効で、現在のウィンドウに複数のタブがある場合、現在のタブを新しいウィンドウに移動します。</target>
        </trans-unit>
        <trans-unit id="2151334426d72b39234474a7474182d61ff5ba8c" translate="yes" xml:space="preserve">
          <source>Moves window to &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">ウィンドウを &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; に移動します。</target>
        </trans-unit>
        <trans-unit id="a9fd7b0bda50a6a5e59d1f13795eb4c168f24976" translate="yes" xml:space="preserve">
          <source>Moves window to the center of the screen.</source>
          <target state="translated">ウィンドウを画面の中央に移動します。</target>
        </trans-unit>
        <trans-unit id="1675dfdf0c0e828011d9fe463c61a7c1dcc4c9bf" translate="yes" xml:space="preserve">
          <source>Multi-threaded Node.js</source>
          <target state="translated">マルチスレッドのNode.js</target>
        </trans-unit>
        <trans-unit id="8a86acdcb9f782d0a3ed3f193ab37879a5d757d7" translate="yes" xml:space="preserve">
          <source>Multithreading</source>
          <target state="translated">Multithreading</target>
        </trans-unit>
        <trans-unit id="0858aa585025719dcb749334174b44308e0269ab" translate="yes" xml:space="preserve">
          <source>Mute the audio on the current web page.</source>
          <target state="translated">現在のウェブページの音声をミュートします。</target>
        </trans-unit>
        <trans-unit id="be25b242342faf05470c6814b3981c11e4d6e95a" translate="yes" xml:space="preserve">
          <source>My app's window/tray disappeared after a few minutes.</source>
          <target state="translated">数分後にアプリのウィンドウ/トレイが消えてしまいました。</target>
        </trans-unit>
        <trans-unit id="c0852d99c6166cb90a169f7534edc83335406d11" translate="yes" xml:space="preserve">
          <source>NSIS</source>
          <target state="translated">NSIS</target>
        </trans-unit>
        <trans-unit id="273a0d30662970ff3c1562fa729c143a281a5505" translate="yes" xml:space="preserve">
          <source>Naming Things</source>
          <target state="translated">ネーミング</target>
        </trans-unit>
        <trans-unit id="ae115ec106ec45e4acef8b97a3b04cca7c1f1d09" translate="yes" xml:space="preserve">
          <source>Native &lt;code&gt;window.open()&lt;/code&gt; allows synchronous access to opened windows so it is convenient choice if you need to open a dialog or a preferences window.</source>
          <target state="translated">ネイティブ &lt;code&gt;window.open()&lt;/code&gt; は、開いているウィンドウへの同期アクセスを許可するため、ダイアログまたは設定ウィンドウを開く必要がある場合に便利です。</target>
        </trans-unit>
        <trans-unit id="7d611eb47a347300aeaa1deaddf41b48c00f9725" translate="yes" xml:space="preserve">
          <source>Native File Drag &amp;amp; Drop</source>
          <target state="translated">ネイティブファイルのドラッグアンドドロップ</target>
        </trans-unit>
        <trans-unit id="ac15282ea8b85dc5260071b32c7e5ff56c9c347e" translate="yes" xml:space="preserve">
          <source>Native Node modules are supported by Electron, but since Electron is very likely to use a different V8 version from the Node binary installed in your system, you have to manually specify the location of Electron&amp;rsquo;s headers when building native modules.</source>
          <target state="translated">Electronはネイティブノードモジュールをサポートしていますが、ElectronはシステムにインストールされているNodeバイナリとは異なるV8バージョンを使用する可能性が高いため、ネイティブモジュールをビルドするときにElectronのヘッダーの場所を手動で指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="0c4e246e4c5248d193e844f72b5652be7b507bcc" translate="yes" xml:space="preserve">
          <source>Native Node.js modules</source>
          <target state="translated">ネイティブNode.jsモジュール</target>
        </trans-unit>
        <trans-unit id="252c5b3fb963128ed002a67e92becb15fcab1ed6" translate="yes" xml:space="preserve">
          <source>Native modules (also called &lt;a href=&quot;https://nodejs.org/api/addons.html&quot;&gt;addons&lt;/a&gt; in Node.js) are modules written in C or C++ that can be loaded into Node.js or Electron using the require() function, and used as if they were an ordinary Node.js module. They are used primarily to provide an interface between JavaScript running in Node.js and C/C++ libraries.</source>
          <target state="translated">ネイティブモジュール（Node.jsでは&lt;a href=&quot;https://nodejs.org/api/addons.html&quot;&gt;アドオン&lt;/a&gt;とも呼ばれます）は、CまたはC ++で記述されたモジュールで、require（）関数を使用してNode.jsまたはElectronにロードし、通常のNode.jsモジュールであるかのように使用できます。これらは主に、Node.jsで実行されているJavaScriptとC / C ++ライブラリ間のインターフェースを提供するために使用されます。</target>
        </trans-unit>
        <trans-unit id="95da8c4ccd596fdaf1d4ac210f1d149385879626" translate="yes" xml:space="preserve">
          <source>Native modules used in your app also need to be signed. If using electron-osx-sign, be sure to include the path to the built binaries in the argument list:</source>
          <target state="translated">アプリで使用するネイティブモジュールも署名する必要があります。electron-osx-signを使用する場合は、ビルドされたバイナリのパスを必ず引数リストに含めてください。</target>
        </trans-unit>
        <trans-unit id="3c1a0aac6eaaa3568576fc55694001ccec9a9126" translate="yes" xml:space="preserve">
          <source>Natively wrap images such as tray, dock, and application icons.</source>
          <target state="translated">トレイ、ドック、アプリケーションアイコンなどの画像をネイティブにラップします。</target>
        </trans-unit>
        <trans-unit id="e29cb027789071ad70a535a33a8f10fdf355c340" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;code&gt;chrome://extensions&lt;/code&gt;, and find its extension ID, which is a hash string like &lt;code&gt;fmkadmapgofadopljbjfkapdkoienihi&lt;/code&gt;.</source>
          <target state="translated">ナビゲートする &lt;code&gt;chrome://extensions&lt;/code&gt; 、などハッシュ文字列でその伸長ID、見つける &lt;code&gt;fmkadmapgofadopljbjfkapdkoienihi&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="5e6c22608544a75c4105c8e3ea59ba4558dab1e1" translate="yes" xml:space="preserve">
          <source>Navigates browser to the specified absolute web page index.</source>
          <target state="translated">指定されたアブソリュートウェブページのインデックスにブラウザを移動します。</target>
        </trans-unit>
        <trans-unit id="096aee03999803b7750d1f1e58efbe795719b44e" translate="yes" xml:space="preserve">
          <source>Navigates to the specified absolute index.</source>
          <target state="translated">指定された絶対インデックスに移動します。</target>
        </trans-unit>
        <trans-unit id="5da599b4dcf6a1a695f24f512ee12b0c89165ea2" translate="yes" xml:space="preserve">
          <source>Navigates to the specified offset from the &quot;current entry&quot;.</source>
          <target state="translated">現在のエントリ」から指定されたオフセットに移動します。</target>
        </trans-unit>
        <trans-unit id="16e340746126ed50b9b41c11e75938dcc3f78df2" translate="yes" xml:space="preserve">
          <source>Nepali</source>
          <target state="translated">Nepali</target>
        </trans-unit>
        <trans-unit id="0f04ef9e75e01e7515a22d9e98493a1c51268306" translate="yes" xml:space="preserve">
          <source>Network Access</source>
          <target state="translated">ネットワークアクセス</target>
        </trans-unit>
        <trans-unit id="dea662d4213385906aca0bf7758685ae7df5d472" translate="yes" xml:space="preserve">
          <source>New features added to Electron should primarily be native APIs. If a feature can be its own Node.js module, it probably should be. See the &lt;a href=&quot;https://electronjs.org/community&quot;&gt;Electron tools built by the community&lt;/a&gt;.</source>
          <target state="translated">Electronに追加された新機能は、主にネイティブAPIでなければなりません。機能が独自のNode.jsモジュールである可能性がある場合、それはおそらく必要です。&lt;a href=&quot;https://electronjs.org/community&quot;&gt;コミュニティによって構築され&lt;/a&gt;たElectronツールを参照してください。</target>
        </trans-unit>
        <trans-unit id="2e8b4b10c7bf8faf81576631e2d2607ea58bd942" translate="yes" xml:space="preserve">
          <source>New features of Node.js are usually brought by V8 upgrades, since Electron is using the V8 shipped by Chrome browser, the shiny new JavaScript feature of a new Node.js version is usually already in Electron.</source>
          <target state="translated">通常、Node.jsの新機能はV8のアップグレードによってもたらされますが、ElectronはChromeブラウザで出荷されているV8を使用しているため、新しいバージョンのNode.jsのピカピカの新JavaScript機能はすでにElectronに搭載されていることが多いです。</target>
        </trans-unit>
        <trans-unit id="bd1607d822da1cd7db9648fff4d1a2fb20f20f38" translate="yes" xml:space="preserve">
          <source>Next, construct the URL of the update server and tell &lt;a href=&quot;../api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt; about it:</source>
          <target state="translated">次に、更新サーバーのURLを作成し、&lt;a href=&quot;../api/auto-updater&quot;&gt;autoUpdaterに通知&lt;/a&gt;します。</target>
        </trans-unit>
        <trans-unit id="32c4b1de3a9f56586dd96265e3aec6259c4a4716" translate="yes" xml:space="preserve">
          <source>No confirmation dialog will be presented by default, if you wish to allow the user to confirm the operation you may do so using the &lt;a href=&quot;dialog&quot;&gt;&lt;code&gt;dialog&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">&lt;a href=&quot;dialog&quot;&gt; &lt;code&gt;dialog&lt;/code&gt; &lt;/a&gt; API を使用して実行できる操作をユーザーが確認できるようにする場合は、デフォルトでは確認ダイアログは表示されません。</target>
        </trans-unit>
        <trans-unit id="af3b9ab53d82eb15fe1899738bc0d7df769b1ea4" translate="yes" xml:space="preserve">
          <source>No need to use link markup when referencing PRs. Strings like &lt;code&gt;#123&lt;/code&gt; will automatically be converted to links on github.com.</source>
          <target state="translated">PRを参照するときにリンクマークアップを使用する必要はありません。 &lt;code&gt;#123&lt;/code&gt; のような文字列は、github.com上のリンクに自動的に変換されます。</target>
        </trans-unit>
        <trans-unit id="850fae31c96276a74dcd3f2dd75d52f10ee5355f" translate="yes" xml:space="preserve">
          <source>Node API</source>
          <target state="translated">ノードエーピーアイ</target>
        </trans-unit>
        <trans-unit id="18e6baa5730021d04e9eaf16965f19f1b23a8dfd" translate="yes" xml:space="preserve">
          <source>Node integration will always be disabled in the opened &lt;code&gt;window&lt;/code&gt; if it is disabled on the parent window.</source>
          <target state="translated">親ウィンドウでノード統合が無効になっている場合、開いている &lt;code&gt;window&lt;/code&gt; でノード統合は常に無効になります。</target>
        </trans-unit>
        <trans-unit id="06c8c7552c1d8c757da60f82c5c852f21814e5f5" translate="yes" xml:space="preserve">
          <source>Node maintains its own fork of V8</source>
          <target state="translated">Node は V8 の独自のフォークを維持しています。</target>
        </trans-unit>
        <trans-unit id="10b3493287f831e81a438811a1ffba01f8cec4b7" translate="yes" xml:space="preserve">
          <source>Node.js</source>
          <target state="translated">Node.js</target>
        </trans-unit>
        <trans-unit id="29fbb22c1376e061d9bda596cf1a09670be35490" translate="yes" xml:space="preserve">
          <source>Node.js major version updates</source>
          <target state="translated">Node.jsのメジャーバージョンアップ</target>
        </trans-unit>
        <trans-unit id="0edf4fc951592cff636d9829219dc676ea032486" translate="yes" xml:space="preserve">
          <source>Node.js minor version updates</source>
          <target state="translated">Node.jsのマイナーバージョンアップ</target>
        </trans-unit>
        <trans-unit id="dfa646ee2d707cdcf97ec82e290c927dc78bf10d" translate="yes" xml:space="preserve">
          <source>Node.js patch version updates</source>
          <target state="translated">Node.jsのパッチバージョンの更新</target>
        </trans-unit>
        <trans-unit id="41fc9647f853328b7dd9f5803d22c79f16061377" translate="yes" xml:space="preserve">
          <source>Node.js. There are various ways to install Node. You can download source code from &lt;a href=&quot;https://nodejs.org&quot;&gt;nodejs.org&lt;/a&gt; and compile it. Doing so permits installing Node on your own home directory as a standard user. Or try repositories such as &lt;a href=&quot;https://nodesource.com/blog/nodejs-v012-iojs-and-the-nodesource-linux-repositories&quot;&gt;NodeSource&lt;/a&gt;.</source>
          <target state="translated">Node.js。Nodeをインストールするにはさまざまな方法があります。&lt;a href=&quot;https://nodejs.org&quot;&gt;nodejs.org&lt;/a&gt;からソースコードをダウンロードしてコンパイルできます。そうすることで、標準ユーザーとして自分のホームディレクトリにNodeをインストールできます。または、&lt;a href=&quot;https://nodesource.com/blog/nodejs-v012-iojs-and-the-nodesource-linux-repositories&quot;&gt;NodeSource&lt;/a&gt;などのリポジトリを試してください。</target>
        </trans-unit>
        <trans-unit id="43645d9584cb12e426d0fe2c7d32bf6edb4bd70e" translate="yes" xml:space="preserve">
          <source>Non-standard features (that are not handled by Chromium or Electron) given in &lt;code&gt;features&lt;/code&gt; will be passed to any registered &lt;code&gt;webContent&lt;/code&gt;'s &lt;code&gt;new-window&lt;/code&gt; event handler in the &lt;code&gt;additionalFeatures&lt;/code&gt; argument.</source>
          <target state="translated">与えられた（クロムまたは電子によって処理されていない）非標準的な機能 &lt;code&gt;features&lt;/code&gt; 任意の登録に渡されます &lt;code&gt;webContent&lt;/code&gt; の &lt;code&gt;new-window&lt;/code&gt; でのイベントハンドラ &lt;code&gt;additionalFeatures&lt;/code&gt; の引数。</target>
        </trans-unit>
        <trans-unit id="79b723002f87708ebc11fd4f3b902a03f7c9a5c1" translate="yes" xml:space="preserve">
          <source>Norwegian</source>
          <target state="translated">Norwegian</target>
        </trans-unit>
        <trans-unit id="1fd773f7270851b6c0f785cf1c8b3ad262e28551" translate="yes" xml:space="preserve">
          <source>Norwegian (Bokmal)</source>
          <target state="translated">ノルウェー語(ボックマル</target>
        </trans-unit>
        <trans-unit id="51bf329743c855bf7dc6f4020eb2ab76d286da23" translate="yes" xml:space="preserve">
          <source>Norwegian (Nynorsk)</source>
          <target state="translated">ノルウェー語</target>
        </trans-unit>
        <trans-unit id="5140d673735e21810cb3644de66dcc4e9f32dacf" translate="yes" xml:space="preserve">
          <source>Not &lt;code&gt;return null&lt;/code&gt;, &lt;code&gt;return undefined&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">ではない &lt;code&gt;return null&lt;/code&gt; 、 &lt;code&gt;return undefined&lt;/code&gt; 、 &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee1a6b1365a1b87ccbf238c954c25836b1d8612a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;type&lt;/code&gt; should match actual type of &lt;code&gt;value&lt;/code&gt;. An exception is thrown if they don't.</source>
          <target state="translated">その注意 &lt;code&gt;type&lt;/code&gt; の実際の型と一致する必要があります &lt;code&gt;value&lt;/code&gt; 。そうでない場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="3938e66f59355a1e1fdfffa6a12a6f83a038fb1d" translate="yes" xml:space="preserve">
          <source>Note that all statistics are reported in Kilobytes.</source>
          <target state="translated">すべての統計はキロバイト単位で報告されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="95ed4cd9e873cae3bfe1941051202b6af393dfe2" translate="yes" xml:space="preserve">
          <source>Note that because released Electron builds are heavily optimized, debugging is not always easy. The debugger will not be able to show you the content of all variables and the execution path can seem strange because of inlining, tail calls, and other compiler optimizations. The only workaround is to build an unoptimized local build.</source>
          <target state="translated">リリースされたElectronビルドは重く最適化されているため、デバッグは必ずしも容易ではないことに注意してください。デバッガはすべての変数の内容を表示することはできませんし、インライン化やテールコール、その他のコンパイラの最適化のために実行パスがおかしく見えることがあります。唯一の回避策は、最適化されていないローカルビルドをビルドすることです。</target>
        </trans-unit>
        <trans-unit id="c57c65d5ac0ceb092e295f90d36125a6b1a639d3" translate="yes" xml:space="preserve">
          <source>Note that blindly calling this method probably makes Electron slower since it will have to refill these emptied caches, you should only call it if an event in your app has occurred that makes you think your page is actually using less memory (i.e. you have navigated from a super heavy page to a mostly empty one, and intend to stay there).</source>
          <target state="translated">このメソッドを盲目的に呼び出すと、空になったキャッシュを補充する必要があるため、Electronの動作が遅くなる可能性があることに注意してください。このメソッドを呼び出すのは、アプリ内で実際にページの使用メモリが少ないと思わせるようなイベントが発生した場合のみにしてください。</target>
        </trans-unit>
        <trans-unit id="91fe91a59caa7f2571d180091fa2f1b4bd136763" translate="yes" xml:space="preserve">
          <source>Note that by default the &lt;code&gt;shared_library&lt;/code&gt; configuration is not built, so you can only build &lt;code&gt;Release&lt;/code&gt; version of Electron if you use this mode:</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;shared_library&lt;/code&gt; 構成はビルドされないため、このモードを使用する場合、Electronの &lt;code&gt;Release&lt;/code&gt; バージョンのみをビルドできます。</target>
        </trans-unit>
        <trans-unit id="8395177b79afdb728b7fbc2fb9a1f9c36a3715ec" translate="yes" xml:space="preserve">
          <source>Note that closing the devtools does not destroy the &lt;code&gt;devToolsWebContents&lt;/code&gt;, it is caller's responsibility to destroy &lt;code&gt;devToolsWebContents&lt;/code&gt;.</source>
          <target state="translated">デベロッパーツールを閉じて破壊しないことに注意してください &lt;code&gt;devToolsWebContents&lt;/code&gt; は、破壊するために、呼び出し側の責任です &lt;code&gt;devToolsWebContents&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="1eedba0e2f0c0c9e262c378f7939d5ba00020db5" translate="yes" xml:space="preserve">
          <source>Note that even for apps that use &lt;code&gt;ready-to-show&lt;/code&gt; event, it is still recommended to set &lt;code&gt;backgroundColor&lt;/code&gt; to make app feel more native.</source>
          <target state="translated">&lt;code&gt;ready-to-show&lt;/code&gt; イベントを使用するアプリの場合でも、アプリをよりネイティブに感じるように &lt;code&gt;backgroundColor&lt;/code&gt; を設定することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="08183e08214b251b35c3a78f2bdb3429bcb63edb" translate="yes" xml:space="preserve">
          <source>Note that even if a native Node.js module is thread-safe it's still not safe to load it in a Web Worker because the &lt;code&gt;process.dlopen&lt;/code&gt; function is not thread safe.</source>
          <target state="translated">ネイティブNode.jsモジュールがスレッドセーフであっても、 &lt;code&gt;process.dlopen&lt;/code&gt; 関数はスレッドセーフではないため、Webワーカーにロードすることは安全ではありません。</target>
        </trans-unit>
        <trans-unit id="4e121bdd5545f00f66c429e9bf4b431fdd189179" translate="yes" xml:space="preserve">
          <source>Note that it is not enough to call &lt;code&gt;app.commandLine.appendSwitch('--enable-sandbox')&lt;/code&gt;, as electron/node startup code runs after it is possible to make changes to chromium sandbox settings. The switch must be passed to electron on the command-line:</source>
          <target state="translated">電子/ノードのスタートアップコードは、クロムサンドボックスの設定を変更できるようになった後に実行される &lt;code&gt;app.commandLine.appendSwitch('--enable-sandbox')&lt;/code&gt; を呼び出すだけでは不十分です。スイッチはコマンドラインでelectronに渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="c508dd193a53212800eba7a0f9bebf074a2cb119" translate="yes" xml:space="preserve">
          <source>Note that most chromium updates will be considered breaking. Fixes that can be backported will likely be cherry-picked as patches.</source>
          <target state="translated">ほとんどの chromium のアップデートは壊れているとみなされることに注意してください。バックポート可能な修正は、おそらくパッチとしてチェリーピックされるでしょう。</target>
        </trans-unit>
        <trans-unit id="bc8f7867794f761960f6e52c00d04a6ed42068f4" translate="yes" xml:space="preserve">
          <source>Note that multiple commits often get squashed when they are landed.</source>
          <target state="translated">複数のコミットは、着地したときに潰されることが多いので注意してください。</target>
        </trans-unit>
        <trans-unit id="4395e7962b69e7ac44ab88b7ad7bf169f1421b25" translate="yes" xml:space="preserve">
          <source>Note that notifications are limited to 256 bytes in size and will be truncated if you exceed that limit.</source>
          <target state="translated">通知のサイズは256バイトに制限されており、それを超えると切り捨てられてしまうので注意してください。</target>
        </trans-unit>
        <trans-unit id="e93984575496bad02a8e3734296d35061d016065" translate="yes" xml:space="preserve">
          <source>Note that this method does not quit the app when executed, you have to call &lt;code&gt;app.quit&lt;/code&gt; or &lt;code&gt;app.exit&lt;/code&gt; after calling &lt;code&gt;app.relaunch&lt;/code&gt; to make the app restart.</source>
          <target state="translated">このメソッドは実行時にアプリを終了しないことに注意してください。アプリを再起動するには、 &lt;code&gt;app.relaunch&lt;/code&gt; を呼び出した後に &lt;code&gt;app.quit&lt;/code&gt; または &lt;code&gt;app.exit&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="e08d170ebb9f28988bc671214d999a6d835b8873" translate="yes" xml:space="preserve">
          <source>Note the third parameter &lt;code&gt;true&lt;/code&gt; which means the listener will always receive key presses before other listeners so they can't have &lt;code&gt;stopPropagation()&lt;/code&gt; called on them.</source>
          <target state="translated">3番目のパラメーターが &lt;code&gt;true&lt;/code&gt; であることに注意してください。これは、リスナーが他のリスナーよりも常に前にキーの押下を受け取るため、 &lt;code&gt;stopPropagation()&lt;/code&gt; を呼び出せないことを意味します。</target>
        </trans-unit>
        <trans-unit id="fb99d36cac174b30cb19262d8b9442e6b4af1eb8" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;-webkit-app-region: drag&lt;/code&gt; is known to have problems while the developer tools are open. See this &lt;a href=&quot;https://github.com/electron/electron/issues/3647&quot;&gt;GitHub issue&lt;/a&gt; for more information including a workaround.</source>
          <target state="translated">注： &lt;code&gt;-webkit-app-region: drag&lt;/code&gt; は、開発者ツールが開いているときに問題が発生することがわかっています。回避策を含む詳細については、この&lt;a href=&quot;https://github.com/electron/electron/issues/3647&quot;&gt;GitHubの問題&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="857f3244e22200575f24361a0a6bed40558140aa" translate="yes" xml:space="preserve">
          <source>Note: In general you should be using the latest Node during this process; however, older versions of the &lt;code&gt;publish-to-npm&lt;/code&gt; script may have trouble with Node 7 or higher. If you have trouble with this in an older branch, try running with an older version of Node, e.g. a 6.x LTS.</source>
          <target state="translated">注：通常、このプロセスでは最新のノードを使用する必要があります。ただし、古いバージョンの &lt;code&gt;publish-to-npm&lt;/code&gt; スクリプトは、ノード7以降では問題が発生する可能性があります。古いブランチでこれに問題がある場合は、6.x LTSなどの古いバージョンのノードで実行してみてください。</target>
        </trans-unit>
        <trans-unit id="6cdd3e373b09cee7e85d4d4feba4e36696da41c4" translate="yes" xml:space="preserve">
          <source>Note: NW.js has optionally supported multi-context since 0.13.</source>
          <target state="translated">注意:NW.jsは0.13以降、オプションでマルチコンテキストをサポートしています。</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="6bda6fe60f2b8199e29a9c40e5ad1d09dcf8ce2b" translate="yes" xml:space="preserve">
          <source>Notes on macOS Application Menu</source>
          <target state="translated">macOSのアプリケーションメニューの注意点</target>
        </trans-unit>
        <trans-unit id="5637e9944caf4f89cd62750a829b1c3fa5bc6385" translate="yes" xml:space="preserve">
          <source>Notice that the returned pointer is a weak pointer to the underlying native image instead of a copy, so you &lt;em&gt;must&lt;/em&gt; ensure that the associated &lt;code&gt;nativeImage&lt;/code&gt; instance is kept around.</source>
          <target state="translated">返されるポインターは、コピーではなく、基になるネイティブイメージへの弱いポインターであるため、関連する &lt;code&gt;nativeImage&lt;/code&gt; インスタンスが保持されていること&lt;em&gt;を&lt;/em&gt;確認する&lt;em&gt;必要&lt;/em&gt;が&lt;em&gt;あり&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c18f8f255ab9c208f23d0340eb9dff5a84efe311" translate="yes" xml:space="preserve">
          <source>Notification</source>
          <target state="translated">Notification</target>
        </trans-unit>
        <trans-unit id="a594ef9fc3a14f65f3d2ab8b828c8c75fe684d38" translate="yes" xml:space="preserve">
          <source>Notification()</source>
          <target state="translated">Notification()</target>
        </trans-unit>
        <trans-unit id="ac46cd6bf2ec7e9d90f5e3709af6c843ffd8a6af" translate="yes" xml:space="preserve">
          <source>NotificationAction</source>
          <target state="translated">NotificationAction</target>
        </trans-unit>
        <trans-unit id="40564c7354196ec7b43499a220981a5f70e93b10" translate="yes" xml:space="preserve">
          <source>NotificationAction Object</source>
          <target state="translated">通知アクションオブジェクト</target>
        </trans-unit>
        <trans-unit id="753a22b2eb617204efee4644795034b8ace1ee14" translate="yes" xml:space="preserve">
          <source>Notifications</source>
          <target state="translated">Notifications</target>
        </trans-unit>
        <trans-unit id="c6c0fd0a8fedd2b6b1ef8fbd8744de54662703f6" translate="yes" xml:space="preserve">
          <source>Notifications (Windows, Linux, macOS)</source>
          <target state="translated">通知(Windows、Linux、macOS</target>
        </trans-unit>
        <trans-unit id="d2650cb61a9299a0c8fb77939303cdda3e79f923" translate="yes" xml:space="preserve">
          <source>Notifications are sent using &lt;code&gt;libnotify&lt;/code&gt; which can show notifications on any desktop environment that follows &lt;a href=&quot;https://developer.gnome.org/notification-spec/&quot;&gt;Desktop Notifications Specification&lt;/a&gt;, including Cinnamon, Enlightenment, Unity, GNOME, KDE.</source>
          <target state="translated">通知は &lt;code&gt;libnotify&lt;/code&gt; を使用して送信されます。これは、Cinnamon、Enlightenment、Unity、GNOME、KDEなど、&lt;a href=&quot;https://developer.gnome.org/notification-spec/&quot;&gt;デスクトップ通知仕様&lt;/a&gt;に準拠するすべてのデスクトップ環境で通知を表示できます。</target>
        </trans-unit>
        <trans-unit id="35bafe95fcb0bab1b6a8caea7673f3a3b5834500" translate="yes" xml:space="preserve">
          <source>Notifications are straight-forward on macOS, but you should be aware of &lt;a href=&quot;https://developer.apple.com/macos/human-interface-guidelines/system-capabilities/notifications/&quot;&gt;Apple's Human Interface guidelines regarding notifications&lt;/a&gt;.</source>
          <target state="translated">通知はmacOSでは単純明快ですが&lt;a href=&quot;https://developer.apple.com/macos/human-interface-guidelines/system-capabilities/notifications/&quot;&gt;、通知に関するAppleのヒューマンインターフェイスガイドラインに&lt;/a&gt;注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="ed0e8ffe3cf4db1b27449fea2b15ef5961dbabb0" translate="yes" xml:space="preserve">
          <source>Now that you've configured the basic update mechanism for your application, you need to ensure that the user will get notified when there's an update. This can be achieved using the autoUpdater API &lt;a href=&quot;../api/auto-updater#events&quot;&gt;events&lt;/a&gt;:</source>
          <target state="translated">アプリケーションの基本的な更新メカニズムを構成したので、更新があったときにユーザーに通知が届くようにする必要があります。これは、autoUpdater API &lt;a href=&quot;../api/auto-updater#events&quot;&gt;イベント&lt;/a&gt;を使用して実現できます。</target>
        </trans-unit>
        <trans-unit id="abbe0677fa1392e41c33243fac215b9de1771cda" translate="yes" xml:space="preserve">
          <source>Now the branch is ready to be opened as a pull request.</source>
          <target state="translated">これで、プルリクエストとしてブランチを開く準備が整いました。</target>
        </trans-unit>
        <trans-unit id="65e530ec35cfd4c1145e1bebf7e8070b8c5edb30" translate="yes" xml:space="preserve">
          <source>Now, if you open up Electron's developer tools and call &lt;code&gt;setName&lt;/code&gt;, you will once again hit the breakpoint.</source>
          <target state="translated">ここで、Electronの開発者ツールを開いて &lt;code&gt;setName&lt;/code&gt; を呼び出すと、もう一度ブレークポイントに到達します。</target>
        </trans-unit>
        <trans-unit id="a2d0cf792e2e66a08ef4428e45ba19479e6d7246" translate="yes" xml:space="preserve">
          <source>Nullsoft Scriptable Install System is a script-driven Installer authoring tool for Microsoft Windows. It is released under a combination of free software licenses, and is a widely-used alternative to commercial proprietary products like InstallShield. &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;electron-builder&lt;/a&gt; supports NSIS as a build target.</source>
          <target state="translated">Nullsoft Scriptable Install Systemは、Microsoft Windows用のスクリプト駆動のインストーラーオーサリングツールです。これは、フリーソフトウェアライセンスの組み合わせの下でリリースされ、InstallShieldなどの商用プロプライエタリ製品に代わって広く使用されています。&lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;electron-builder&lt;/a&gt;は、NSISをビルドターゲットとしてサポートしています。</target>
        </trans-unit>
        <trans-unit id="8e947de0e02745757e78e2c843661c374d389f89" translate="yes" xml:space="preserve">
          <source>OSR</source>
          <target state="translated">OSR</target>
        </trans-unit>
        <trans-unit id="8208349e3cbd33043b272ef1b88fca8dfb159e64" translate="yes" xml:space="preserve">
          <source>OSR (Off-screen rendering) can be used for loading heavy page in background and then displaying it after (it will be much faster). It allows you to render page without showing it on screen.</source>
          <target state="translated">OSR (Off-screen rendering)は、重いページをバックグラウンドで読み込んでから表示することができます。これにより、画面に表示せずにページをレンダリングすることができます。</target>
        </trans-unit>
        <trans-unit id="33658a4e2701149e1a4ddd472a0648928297bf4f" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;code&gt;new BrowserView&lt;/code&gt; have the following instance methods:</source>
          <target state="translated">&lt;code&gt;new BrowserView&lt;/code&gt; 作成されたオブジェクトには、次のインスタンスメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="9795168f6b349083e3eebd6949c6091a304887b3" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;code&gt;new BrowserView&lt;/code&gt; have the following properties:</source>
          <target state="translated">&lt;code&gt;new BrowserView&lt;/code&gt; 作成されたオブジェクトには、次のプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="b49c77bbbf49bf0356e35fd42f88deeaf12a01db" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;code&gt;new BrowserWindow&lt;/code&gt; emit the following events:</source>
          <target state="translated">&lt;code&gt;new BrowserWindow&lt;/code&gt; 作成されたオブジェクトは、次のイベントを発行します。</target>
        </trans-unit>
        <trans-unit id="159f92ad7fea76c83f9c8b2328c92786e755851e" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;code&gt;new BrowserWindow&lt;/code&gt; have the following instance methods:</source>
          <target state="translated">&lt;code&gt;new BrowserWindow&lt;/code&gt; 作成されたオブジェクトには、次のインスタンスメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="b0dd72c18bb11c45514bb4e5dc8e54091aa186de" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;code&gt;new BrowserWindow&lt;/code&gt; have the following properties:</source>
          <target state="translated">&lt;code&gt;new BrowserWindow&lt;/code&gt; 作成されたオブジェクトには、次のプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="9beb8e44c703cb8648a80c808fad9139f7c84c4c" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;code&gt;new Menu&lt;/code&gt; emit the following events:</source>
          <target state="translated">&lt;code&gt;new Menu&lt;/code&gt; 作成されたオブジェクトは、次のイベントを発行します。</target>
        </trans-unit>
        <trans-unit id="f4e254bf48842d766b6aebdf62f342ea7756100e" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;code&gt;new Menu&lt;/code&gt; or returned by &lt;code&gt;Menu.buildFromTemplate&lt;/code&gt; emit the following events:</source>
          <target state="translated">&lt;code&gt;new Menu&lt;/code&gt; 作成された、または &lt;code&gt;Menu.buildFromTemplate&lt;/code&gt; によって返されたオブジェクトは、次のイベントを発行します。</target>
        </trans-unit>
        <trans-unit id="5010471810dd09f6d0dcef00c7180209b4d76008" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;code&gt;new Notification&lt;/code&gt; emit the following events:</source>
          <target state="translated">&lt;code&gt;new Notification&lt;/code&gt; 作成されたオブジェクトは、次のイベントを発行します。</target>
        </trans-unit>
        <trans-unit id="55a3ac4d31a0b03e344fb88c400cc92b93ef6209" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;code&gt;new Notification&lt;/code&gt; have the following instance methods:</source>
          <target state="translated">&lt;code&gt;new Notification&lt;/code&gt; 作成されたオブジェクトには、次のインスタンスメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="aa226d0aa31507a49a884ea7baf4c1391ef97dbe" translate="yes" xml:space="preserve">
          <source>Occitan</source>
          <target state="translated">Occitan</target>
        </trans-unit>
        <trans-unit id="e67630caabf29751687a5cb1374761d41a2c37af" translate="yes" xml:space="preserve">
          <source>Official Electron builds are built with &lt;a href=&quot;http://adcdownload.apple.com/Developer_Tools/Xcode_8.2.1/Xcode_8.2.1.xip&quot;&gt;Xcode 8.2.1&lt;/a&gt;, which does not contain the 10.10 SDK by default. To obtain it, first download and mount the &lt;a href=&quot;http://developer.apple.com/devcenter/download.action?path=/Developer_Tools/Xcode_6.4/Xcode_6.4.dmg&quot;&gt;Xcode 6.4&lt;/a&gt; DMG.</source>
          <target state="translated">公式のElectronビルドは&lt;a href=&quot;http://adcdownload.apple.com/Developer_Tools/Xcode_8.2.1/Xcode_8.2.1.xip&quot;&gt;Xcode 8.2.1&lt;/a&gt;でビルドされており、デフォルトでは10.10 SDKは含まれていません。それを入手するには、まず&lt;a href=&quot;http://developer.apple.com/devcenter/download.action?path=/Developer_Tools/Xcode_6.4/Xcode_6.4.dmg&quot;&gt;Xcode 6.4&lt;/a&gt; DMGをダウンロードしてマウントします。</target>
        </trans-unit>
        <trans-unit id="712a04ce85e14167c7de62825fdc014691091bf0" translate="yes" xml:space="preserve">
          <source>Official Guides</source>
          <target state="translated">公式ガイド</target>
        </trans-unit>
        <trans-unit id="f55f923d2a1cd291e229ca8bf683b80f6340694e" translate="yes" xml:space="preserve">
          <source>Offline/Online Detection</source>
          <target state="translated">オフライン/オンライン検出</target>
        </trans-unit>
        <trans-unit id="1df95ecefd5595862e9f3946295d5d0b2872cc0b" translate="yes" xml:space="preserve">
          <source>Offscreen Rendering</source>
          <target state="translated">オフスクリーンレンダリング</target>
        </trans-unit>
        <trans-unit id="a2bb50744ae19bf7c0cece8e7ccd76862706f059" translate="yes" xml:space="preserve">
          <source>Offscreen rendering lets you obtain the content of a browser window in a bitmap, so it can be rendered anywhere, for example on a texture in a 3D scene. The offscreen rendering in Electron uses a similar approach than the &lt;a href=&quot;https://bitbucket.org/chromiumembedded/cef&quot;&gt;Chromium Embedded Framework&lt;/a&gt; project.</source>
          <target state="translated">オフスクリーンレンダリングでは、ブラウザウィンドウのコンテンツをビットマップで取得できるため、3Dシーンのテクスチャなど、どこにでもレンダリングできます。Electronのオフスクリーンレンダリングは、&lt;a href=&quot;https://bitbucket.org/chromiumembedded/cef&quot;&gt;Chromium Embedded Framework&lt;/a&gt;プロジェクトと同様のアプローチを使用します。</target>
        </trans-unit>
        <trans-unit id="cb75572f6518e2b4d9ec1a8878a1d7c532cc9e23" translate="yes" xml:space="preserve">
          <source>Often the Release build will have different linking errors that you'll need to fix.</source>
          <target state="translated">リリースビルドでは、修正が必要なリンクエラーが発生することがよくあります。</target>
        </trans-unit>
        <trans-unit id="c68e7ecd2431f1ba158da791ec6a678643496f18" translate="yes" xml:space="preserve">
          <source>Older lines will not be supported by GitHub, but other groups can take ownership and backport stability and security fixes on their own. We discourage this, but recognize that it makes life easier for many app developers.</source>
          <target state="translated">古いラインはGitHubではサポートされませんが、他のグループが所有権を持ち、安定性やセキュリティの修正を自分たちでバックポートすることができます。私たちはこれを推奨しませんが、多くのアプリ開発者の生活が楽になることを認識しています。</target>
        </trans-unit>
        <trans-unit id="cff0c4b81a6d4d688edcd0fb4501754cd605b40b" translate="yes" xml:space="preserve">
          <source>OmahaProxy</source>
          <target state="translated">OmahaProxy</target>
        </trans-unit>
        <trans-unit id="1dd41cec5073739bf5a7f9e39333289dd7e89885" translate="yes" xml:space="preserve">
          <source>On &lt;em&gt;Linux&lt;/em&gt; and &lt;em&gt;macOS&lt;/em&gt;, icons depend on the application associated with file mime type.</source>
          <target state="translated">上&lt;em&gt;のLinux&lt;/em&gt;と&lt;em&gt;MacOSの&lt;/em&gt;アイコンは、ファイルのMIMEタイプに関連付けられたアプリケーションに依存します。</target>
        </trans-unit>
        <trans-unit id="b605a6af368c43a978b906d986fed972e9e7779d" translate="yes" xml:space="preserve">
          <source>On &lt;em&gt;Windows&lt;/em&gt;, there a 2 kinds of icons:</source>
          <target state="translated">上&lt;em&gt;のWindows&lt;/em&gt;、そこアイコンの2種類：</target>
        </trans-unit>
        <trans-unit id="ff60e9613d1f13404a1e463a64235f8be0a1bea8" translate="yes" xml:space="preserve">
          <source>On Fedora, install the following libraries:</source>
          <target state="translated">Fedoraでは、以下のライブラリをインストールします。</target>
        </trans-unit>
        <trans-unit id="9df00d34c513832118c2176e40f5f645abf17f02" translate="yes" xml:space="preserve">
          <source>On Linux always returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Linuxでは常に &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b9cf55a56c003de0fd63c47953026707f35e6f0a" translate="yes" xml:space="preserve">
          <source>On Linux and Windows, the &lt;code&gt;Command&lt;/code&gt; key does not have any effect so use &lt;code&gt;CommandOrControl&lt;/code&gt; which represents &lt;code&gt;Command&lt;/code&gt; on macOS and &lt;code&gt;Control&lt;/code&gt; on Linux and Windows to define some accelerators.</source>
          <target state="translated">LinuxおよびWindowsでは、 &lt;code&gt;Command&lt;/code&gt; キーは効果がないため、macOSでは &lt;code&gt;Command&lt;/code&gt; を表し、LinuxおよびWindowsでは &lt;code&gt;Control&lt;/code&gt; を表す &lt;code&gt;CommandOrControl&lt;/code&gt; を使用して、いくつかのアクセラレータを定義します。</target>
        </trans-unit>
        <trans-unit id="09927bca2807b444e68af8010e3eb95d77cf5004" translate="yes" xml:space="preserve">
          <source>On Linux distributions that only have app indicator support, you have to install &lt;code&gt;libappindicator1&lt;/code&gt; to make the tray icon work.</source>
          <target state="translated">アプリインジケーターのみをサポートするLinuxディストリビューションでは、 &lt;code&gt;libappindicator1&lt;/code&gt; をインストールしてトレイアイコンを機能させる必要があります。</target>
        </trans-unit>
        <trans-unit id="d4ffda71afd8d95f3d5d382fda21cad9567eb6e6" translate="yes" xml:space="preserve">
          <source>On Linux in order for changes made to individual &lt;code&gt;MenuItem&lt;/code&gt;s to take effect, you have to call &lt;code&gt;setContextMenu&lt;/code&gt; again. For example:</source>
          <target state="translated">Linuxでは、個々の &lt;code&gt;MenuItem&lt;/code&gt; に加えられた変更を有効にするために、 &lt;code&gt;setContextMenu&lt;/code&gt; を再度呼び出す必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="d25f80bd1913ef0298c7ac73fdcc88165a8e90c9" translate="yes" xml:space="preserve">
          <source>On Linux many desktop environments do not support hiding a modal window.</source>
          <target state="translated">Linux の多くのデスクトップ環境では、モーダルウィンドウの非表示をサポートしていません。</target>
        </trans-unit>
        <trans-unit id="64054e1bfae97d33f190cb6d1b6b2cb59989e9b4" translate="yes" xml:space="preserve">
          <source>On Linux platform, only supports Unity desktop environment, you need to specify the &lt;code&gt;*.desktop&lt;/code&gt; file name to &lt;code&gt;desktopName&lt;/code&gt; field in &lt;code&gt;package.json&lt;/code&gt;. By default, it will assume &lt;code&gt;app.getName().desktop&lt;/code&gt;.</source>
          <target state="translated">Linuxプラットフォームでは、Unityデスクトップ環境のみをサポートし、 &lt;code&gt;package.json&lt;/code&gt; の &lt;code&gt;desktopName&lt;/code&gt; フィールドに &lt;code&gt;*.desktop&lt;/code&gt; ファイル名を指定する必要があります。デフォルトでは、 &lt;code&gt;app.getName().desktop&lt;/code&gt; を想定しています。</target>
        </trans-unit>
        <trans-unit id="fc556337c6f12b29c561cc53f3788cf8066d7493" translate="yes" xml:space="preserve">
          <source>On Linux the app indicator will be used if it is supported, otherwise &lt;code&gt;GtkStatusIcon&lt;/code&gt; will be used instead.</source>
          <target state="translated">Linuxでは、サポートされている場合はアプリインジケーターが使用されます。サポートされていない場合は、代わりに &lt;code&gt;GtkStatusIcon&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="e2c237290a4057eaed8a5d209964105eb8512622" translate="yes" xml:space="preserve">
          <source>On Linux the plugin binaries are shipped together with Chrome browser, you can find them under &lt;code&gt;/opt/google/chrome&lt;/code&gt;, the filenames are &lt;code&gt;libwidevinecdm.so&lt;/code&gt; and &lt;code&gt;libwidevinecdmadapter.so&lt;/code&gt;.</source>
          <target state="translated">Linuxでは、プラグインバイナリはChromeブラウザと一緒に出荷され、 &lt;code&gt;/opt/google/chrome&lt;/code&gt; で見つけることができます。ファイル名は &lt;code&gt;libwidevinecdm.so&lt;/code&gt; および &lt;code&gt;libwidevinecdmadapter.so&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7cd15dcf06126179b85e68ee618fba408f5f7c17" translate="yes" xml:space="preserve">
          <source>On Linux the type of modal windows will be changed to &lt;code&gt;dialog&lt;/code&gt;.</source>
          <target state="translated">Linuxでは、モーダルウィンドウのタイプが &lt;code&gt;dialog&lt;/code&gt; に変更されます。</target>
        </trans-unit>
        <trans-unit id="65d731b4216c0b9d25e8da648f273953bb999ccf" translate="yes" xml:space="preserve">
          <source>On Linux, focuses on the first visible window. On macOS, makes the application the active app. On Windows, focuses on the application's first window.</source>
          <target state="translated">Linuxでは、最初に表示されるウィンドウにフォーカスします。macOSでは、アプリケーションをアクティブなアプリにします。Windowsでは、アプリケーションの最初のウィンドウにフォーカスします。</target>
        </trans-unit>
        <trans-unit id="8ef57ab9303969685f30709afe54551f5ac97291" translate="yes" xml:space="preserve">
          <source>On Linux, possible types are &lt;code&gt;desktop&lt;/code&gt;, &lt;code&gt;dock&lt;/code&gt;, &lt;code&gt;toolbar&lt;/code&gt;, &lt;code&gt;splash&lt;/code&gt;, &lt;code&gt;notification&lt;/code&gt;.</source>
          <target state="translated">Linuxでは、可能なタイプは、 &lt;code&gt;desktop&lt;/code&gt; 、 &lt;code&gt;dock&lt;/code&gt; 、 &lt;code&gt;toolbar&lt;/code&gt; 、 &lt;code&gt;splash&lt;/code&gt; 、 &lt;code&gt;notification&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1dca352ac4807a0f71b06d4364285f5ee47a679f" translate="yes" xml:space="preserve">
          <source>On Linux, users have to put &lt;code&gt;--enable-transparent-visuals --disable-gpu&lt;/code&gt; in the command line to disable GPU and allow ARGB to make transparent window, this is caused by an upstream bug that &lt;a href=&quot;https://code.google.com/p/chromium/issues/detail?id=369209&quot;&gt;alpha channel doesn't work on some NVidia drivers&lt;/a&gt; on Linux.</source>
          <target state="translated">Linuxでは、ユーザーはコマンドラインに &lt;code&gt;--enable-transparent-visuals --disable-gpu&lt;/code&gt; を入力してGPUを無効にし、ARGBが透明なウィンドウを作成できるようにする必要があります。これは&lt;a href=&quot;https://code.google.com/p/chromium/issues/detail?id=369209&quot;&gt;、一部&lt;/a&gt;でアルファチャネルが機能しないという上流のバグが原因です。Linux上のNVidiaドライバー。</target>
        </trans-unit>
        <trans-unit id="21e8b969d4eb9b0689568607c75e662068d65643" translate="yes" xml:space="preserve">
          <source>On Mac, the native window shadow will not be shown on a transparent window.</source>
          <target state="translated">Macでは、ネイティブウィンドウの影が透明ウィンドウには表示されません。</target>
        </trans-unit>
        <trans-unit id="c9db96e7742ad2789c1db9be9817332c77b3f4fd" translate="yes" xml:space="preserve">
          <source>On RHEL / CentOS, install the following libraries:</source>
          <target state="translated">RHEL/CentOS上では、以下のライブラリをインストールします。</target>
        </trans-unit>
        <trans-unit id="e3beaea4fd3026c5977e5474d42e7bc1e179e30f" translate="yes" xml:space="preserve">
          <source>On Travis, your &lt;code&gt;.travis.yml&lt;/code&gt; should look roughly like this:</source>
          <target state="translated">Travisでは、 &lt;code&gt;.travis.yml&lt;/code&gt; はおおよそ次のようになります。</target>
        </trans-unit>
        <trans-unit id="b0f687fec1ad97dcab1d5ee00eb902d02e07ae85" translate="yes" xml:space="preserve">
          <source>On Ubuntu, install the following libraries:</source>
          <target state="translated">Ubuntuでは、以下のライブラリをインストールします。</target>
        </trans-unit>
        <trans-unit id="d79f9ec1efa8d85dd2eaa27515d35b62bec5fc8d" translate="yes" xml:space="preserve">
          <source>On Windows 10, a shortcut to your app with an &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx&quot;&gt;Application User Model ID&lt;/a&gt; must be installed to the Start Menu.</source>
          <target state="translated">Windows 10では、&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx&quot;&gt;アプリケーションユーザーモデルIDを使用&lt;/a&gt;したアプリへのショートカットをスタートメニューにインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="158204f37fcdb734a933f29e5e206f94ab9744a3" translate="yes" xml:space="preserve">
          <source>On Windows 7, notifications work via a custom implementation which visually resembles the native one on newer systems.</source>
          <target state="translated">Windows 7では、通知は、新しいシステムのネイティブのものに視覚的に似たカスタム実装を介して動作します。</target>
        </trans-unit>
        <trans-unit id="ac532371ea4a3568f398e7522e520757ae0841ee" translate="yes" xml:space="preserve">
          <source>On Windows 8.1 and Windows 8, a shortcut to your app with an &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx&quot;&gt;Application User Model ID&lt;/a&gt; must be installed to the Start screen. Note, however, that it does not need to be pinned to the Start screen.</source>
          <target state="translated">Windows 8.1およびWindows 8では、&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx&quot;&gt;アプリケーションのユーザーモデルIDを使用&lt;/a&gt;したアプリへのショートカットをスタート画面にインストールする必要があります。ただし、スタート画面に固定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="c11f27d46b1d1c963b3aea4ade3662a0a82e52aa" translate="yes" xml:space="preserve">
          <source>On Windows a taskbar button can be used to display a progress bar. This enables a window to provide progress information to the user without the user having to switch to the window itself.</source>
          <target state="translated">Windowsでは、タスクバーボタンを使用してプログレスバーを表示することができます。これにより、ユーザーがウィンドウ自体に切り替えなくても、ウィンドウの進捗情報をユーザーに提供することができます。</target>
        </trans-unit>
        <trans-unit id="118db4d60107c6dc6a0b03561d0955952b95fc16" translate="yes" xml:space="preserve">
          <source>On Windows a taskbar button can use a small overlay to display application status, as quoted from MSDN:</source>
          <target state="translated">Windowsでは、MSDNから引用したように、タスクバーボタンは小さなオーバーレイを使用してアプリケーションの状態を表示することができます。</target>
        </trans-unit>
        <trans-unit id="437b8495d4350237f6ae5235bf717da334c226ea" translate="yes" xml:space="preserve">
          <source>On Windows and Linux always returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">WindowsおよびLinuxでは、常に &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="16584a41d4ea080224da151ed1fd19bbb62de610" translate="yes" xml:space="preserve">
          <source>On Windows and Linux:</source>
          <target state="translated">WindowsとLinuxで。</target>
        </trans-unit>
        <trans-unit id="c09288594ba580e8d6454045fc8d3cc4af991599" translate="yes" xml:space="preserve">
          <source>On Windows it is not supported to change parent window dynamically.</source>
          <target state="translated">Windowsでは、親ウィンドウを動的に変更することはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="e63a28bcb85b5f4b20b6a348d0c5c27b4528effa" translate="yes" xml:space="preserve">
          <source>On Windows it is recommended to use &lt;code&gt;ICO&lt;/code&gt; icons to get best visual effects.</source>
          <target state="translated">Windowsでは、最高の視覚効果を得るために &lt;code&gt;ICO&lt;/code&gt; アイコンを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="4d48f08ee5a6be0d4c73726951cf86f5832b7cc5" translate="yes" xml:space="preserve">
          <source>On Windows only &lt;code&gt;releaseName&lt;/code&gt; is available.</source>
          <target state="translated">Windowsでは、 &lt;code&gt;releaseName&lt;/code&gt; のみを使用できます。</target>
        </trans-unit>
        <trans-unit id="00eb46388cf9db4458f404f55cd58cdb5b3d0aaa" translate="yes" xml:space="preserve">
          <source>On Windows operating systems, transparent windows will not work when DWM is disabled.</source>
          <target state="translated">Windowsオペレーティングシステムでは、DWMが無効になっている場合、透明なウィンドウは機能しません。</target>
        </trans-unit>
        <trans-unit id="890e5493c687e00e48bcbc4f18de9af380043e5f" translate="yes" xml:space="preserve">
          <source>On Windows the options are more limited, due to the Win32 APIs used:</source>
          <target state="translated">Windowsでは、Win32 APIが使用されているため、オプションはより制限されています。</target>
        </trans-unit>
        <trans-unit id="5d9747468a0ea5d23be19d8e66d390b36dd26350" translate="yes" xml:space="preserve">
          <source>On Windows the path passed to &lt;code&gt;--ppapi-flash-path&lt;/code&gt; has to use &lt;code&gt;\&lt;/code&gt; as path delimiter, using POSIX-style paths will not work.</source>
          <target state="translated">Windowsでは、 &lt;code&gt;--ppapi-flash-path&lt;/code&gt; pathに渡されるパスは、 &lt;code&gt;\&lt;/code&gt; をパス区切り文字として使用する必要があります。POSIXスタイルのパスを使用しても機能しません。</target>
        </trans-unit>
        <trans-unit id="fb914279b524366ce3b126d942a95431ad2661dd" translate="yes" xml:space="preserve">
          <source>On Windows the required binaries are &lt;code&gt;widevinecdm.dll&lt;/code&gt; and &lt;code&gt;widevinecdmadapter.dll&lt;/code&gt;, on macOS they are &lt;code&gt;libwidevinecdm.dylib&lt;/code&gt; and &lt;code&gt;widevinecdmadapter.plugin&lt;/code&gt;. You can copy them to anywhere you like, but they have to be put together.</source>
          <target state="translated">Windowsでは、必要なバイナリは &lt;code&gt;widevinecdm.dll&lt;/code&gt; と &lt;code&gt;widevinecdmadapter.dll&lt;/code&gt; ですが、macOSでは &lt;code&gt;libwidevinecdm.dylib&lt;/code&gt; と &lt;code&gt;widevinecdmadapter.plugin&lt;/code&gt; です。それらを好きな場所にコピーできますが、それらは一緒に配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="cef93dcf509e35de277c596d4f02fcf51928158b" translate="yes" xml:space="preserve">
          <source>On Windows the system assigns a trust level to your code signing certificate which if you don't have, or if your trust level is low will cause security dialogs to appear when users start using your application. Trust level builds over time so it's better to start code signing as early as possible.</source>
          <target state="translated">Windows では、システムはコード署名証明書に信頼度を割り当てますが、信頼度がない場合や信頼度が低い場合は、ユーザがアプリケーションを使い始めるとセキュリティダイアログが表示されます。信頼レベルは時間の経過とともに高くなっていきますので、できるだけ早い段階でコード署名を開始した方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="0527616434b21d002814451d17a6ee0eb72edcef" translate="yes" xml:space="preserve">
          <source>On Windows you can add a thumbnail toolbar with specified buttons in a taskbar layout of an application window. It provides users a way to access to a particular window's command without restoring or activating the window.</source>
          <target state="translated">Windowsでは、アプリケーションウィンドウのタスクバーレイアウトに、指定されたボタンを持つサムネイルツールバーを追加することができます。これは、ユーザーがウィンドウを復元したりアクティブにしたりすることなく、特定のウィンドウのコマンドにアクセスする方法を提供します。</target>
        </trans-unit>
        <trans-unit id="f373bc50ef1e10ee64478282d7a1b97783af36e6" translate="yes" xml:space="preserve">
          <source>On Windows you can highlight the taskbar button to get the user's attention. This is similar to bouncing the dock icon on macOS. From the MSDN reference documentation:</source>
          <target state="translated">Windowsでは、タスクバーボタンをハイライトしてユーザーの注意を引くことができます。これは、macOSでドックアイコンをバウンドさせるのと似ています。MSDNのリファレンスドキュメントより。</target>
        </trans-unit>
        <trans-unit id="3c46c57043e34d67484d57f8757ab56a3df794a0" translate="yes" xml:space="preserve">
          <source>On Windows you can provide optional parameters path, the path to your executable, and args, an array of arguments to be passed to your executable when it launches.</source>
          <target state="translated">Windows では、オプションのパラメータとして、実行ファイルのパスである path と、実行ファイルの起動時に渡される引数の配列である args を指定することができます。</target>
        </trans-unit>
        <trans-unit id="f30aed1484dc20882b59dfac85e8fda6d673cced" translate="yes" xml:space="preserve">
          <source>On Windows, SMBv2 has a directory cache that will cause problems with the git cache script, so it is necessary to disable it by setting the registry key</source>
          <target state="translated">Windowsの場合、SMBv2ではディレクトリキャッシュがあるとgitキャッシュスクリプトで問題が発生するので、レジストリキーを設定して無効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="2b082fe1b363a39db809e0477149680648c290c5" translate="yes" xml:space="preserve">
          <source>On Windows, a mode can be passed. Accepted values are &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;indeterminate&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, and &lt;code&gt;paused&lt;/code&gt;. If you call &lt;code&gt;setProgressBar&lt;/code&gt; without a mode set (but with a value within the valid range), &lt;code&gt;normal&lt;/code&gt; will be assumed.</source>
          <target state="translated">Windowsでは、モードを渡すことができます。受け入れられる値は、 &lt;code&gt;none&lt;/code&gt; 、 &lt;code&gt;normal&lt;/code&gt; 、 &lt;code&gt;indeterminate&lt;/code&gt; 、 &lt;code&gt;error&lt;/code&gt; 、および &lt;code&gt;paused&lt;/code&gt; です。モードを設定せずに（ただし、有効範囲内の値を使用して） &lt;code&gt;setProgressBar&lt;/code&gt; を呼び出すと、 &lt;code&gt;normal&lt;/code&gt; と見なされます。</target>
        </trans-unit>
        <trans-unit id="8e645a55425a69ee31ae274400940c40a0cabfa3" translate="yes" xml:space="preserve">
          <source>On Windows, possible type is &lt;code&gt;toolbar&lt;/code&gt;.</source>
          <target state="translated">Windowsでは、可能なタイプは &lt;code&gt;toolbar&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="78c2dbdb841cd73e268f0f6eacf3a5b75a6a3100" translate="yes" xml:space="preserve">
          <source>On Windows, you can also load &lt;code&gt;ICO&lt;/code&gt; icons from file paths. For best visual quality it is recommended to include at least the following sizes in the:</source>
          <target state="translated">Windowsでは、ファイルパスから &lt;code&gt;ICO&lt;/code&gt; アイコンをロードすることもできます。最高の視覚的品質を得るには、少なくとも以下のサイズを含めることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="27fa187906b876326016ad394754286efef3792a" translate="yes" xml:space="preserve">
          <source>On Windows, you have to install your app into a user's machine before you can use the &lt;code&gt;autoUpdater&lt;/code&gt;, so it is recommended that you use the &lt;a href=&quot;https://github.com/electron/windows-installer&quot;&gt;electron-winstaller&lt;/a&gt;, &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt;electron-forge&lt;/a&gt; or the &lt;a href=&quot;https://github.com/electron/grunt-electron-installer&quot;&gt;grunt-electron-installer&lt;/a&gt; package to generate a Windows installer.</source>
          <target state="translated">Windowsでは、 &lt;code&gt;autoUpdater&lt;/code&gt; を使用する前にアプリをユーザーのマシンにインストールする必要があるため、&lt;a href=&quot;https://github.com/electron/windows-installer&quot;&gt;electron-winstaller&lt;/a&gt;、&lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt;electron-forge、&lt;/a&gt;または&lt;a href=&quot;https://github.com/electron/grunt-electron-installer&quot;&gt;grunt-electron-installer&lt;/a&gt;パッケージを使用してWindowsインストーラーを生成することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="150e17f0ecce9fe33fbe81c12b65643384ffc06b" translate="yes" xml:space="preserve">
          <source>On Windows, you have to parse &lt;code&gt;process.argv&lt;/code&gt; (in the main process) to get the filepath.</source>
          <target state="translated">Windowsでは、ファイルパスを取得するために（メインプロセスで） &lt;code&gt;process.argv&lt;/code&gt; を解析する必要があります。</target>
        </trans-unit>
        <trans-unit id="14ddeef3f76541485dc093f488797a02cd77368b" translate="yes" xml:space="preserve">
          <source>On X Window systems, there is also a selection clipboard. To manipulate it you need to pass &lt;code&gt;selection&lt;/code&gt; to each method:</source>
          <target state="translated">X Windowシステムには、選択クリップボードもあります。これを操作するには、各メソッドに &lt;code&gt;selection&lt;/code&gt; を渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="e06a2a29df61f547f731b0958cf67e29eb89e00f" translate="yes" xml:space="preserve">
          <source>On all platforms, the visibility state tracks whether the window is hidden/minimized or not.</source>
          <target state="translated">すべてのプラットフォームで、可視性の状態は、ウィンドウが非表示/最小化されているかどうかを追跡します。</target>
        </trans-unit>
        <trans-unit id="dd348a6925a30ffc3cba942b344c51b4cc128000" translate="yes" xml:space="preserve">
          <source>On electron/libchromiumcontent, this option is exposed through the &lt;code&gt;LIBCHROMIUMCONTENT_GIT_CACHE&lt;/code&gt; environment variable. If you intend to have several libchromiumcontent build trees on the same machine(to work on different branches for example), it is recommended to set the variable to speed up the download of Chromium source. For example:</source>
          <target state="translated">electron / libchromiumcontentでは、このオプションは &lt;code&gt;LIBCHROMIUMCONTENT_GIT_CACHE&lt;/code&gt; 環境変数を通じて公開されます。同じマシンで複数のlibchromiumcontentビルドツリーを使用する場合（たとえば、異なるブランチで作業する場合）、変数を設定してChromiumソースのダウンロードを高速化することをお勧めします。例えば：</target>
        </trans-unit>
        <trans-unit id="d5d29fa330ea984755517fe0efbe1523540801c7" translate="yes" xml:space="preserve">
          <source>On environments that have been using older versions of Electron, you might find the cache also in &lt;code&gt;~/.electron&lt;/code&gt;.</source>
          <target state="translated">古いバージョンのElectronを使用していた環境では、 &lt;code&gt;~/.electron&lt;/code&gt; もキャッシュが見つかる場合があります。</target>
        </trans-unit>
        <trans-unit id="5216cda480d3345c1c54c9e19a792ece96b9144a" translate="yes" xml:space="preserve">
          <source>On how to get the ERN approval, you can reference the article: &lt;a href=&quot;https://carouselapps.com/2015/12/15/legally-submit-app-apples-app-store-uses-encryption-obtain-ern/&quot;&gt;How to legally submit an app to Apple&amp;rsquo;s App Store when it uses encryption (or how to obtain an ERN)&lt;/a&gt;.</source>
          <target state="translated">ERNの承認を取得する方法については、次の記事を参照してください。&lt;a href=&quot;https://carouselapps.com/2015/12/15/legally-submit-app-apples-app-store-uses-encryption-obtain-ern/&quot;&gt;アプリが暗号化を使用している場合にAppleのApp Storeにアプリを合法的に送信する方法（またはERNを取得する方法）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="57c362811477f683b3a4b745ef3eea48bae29116" translate="yes" xml:space="preserve">
          <source>On macOS 10.9 Mavericks and newer, there's an alternative way to specify a chromeless window. Instead of setting &lt;code&gt;frame&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; which disables both the titlebar and window controls, you may want to have the title bar hidden and your content extend to the full window size, yet still preserve the window controls (&quot;traffic lights&quot;) for standard window actions. You can do so by specifying the &lt;code&gt;titleBarStyle&lt;/code&gt; option:</source>
          <target state="translated">macOS 10.9 Mavericks以降では、クロムレスウィンドウを指定する別の方法があります。タイトルバーとウィンドウコントロールの両方を無効にする &lt;code&gt;frame&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定する代わりに、タイトルバーを非表示にしてコンテンツをウィンドウの最大サイズに拡大し、それでも標準のウィンドウアクションのウィンドウコントロール（「信号機」）を保持することができます。 。これを行うには、 &lt;code&gt;titleBarStyle&lt;/code&gt; オプションを指定します。</target>
        </trans-unit>
        <trans-unit id="a2584409ed72447a0e460bfee3acbab390572762" translate="yes" xml:space="preserve">
          <source>On macOS a window can set its represented file, so the file's icon can show in the title bar and when users Command-Click or Control-Click on the title a path popup will show.</source>
          <target state="translated">macOSでは、ウィンドウで表現されたファイルを設定することができるので、ファイルのアイコンをタイトルバーに表示することができ、ユーザーがタイトル上でCommand-クリックまたはControl-クリックすると、パスのポップアップが表示されます。</target>
        </trans-unit>
        <trans-unit id="a2655a587bc8e06a8ff58279f52a0b5d7c76d834" translate="yes" xml:space="preserve">
          <source>On macOS and Linux, the details of the Pepper Flash plugin can be found by navigating to &lt;code&gt;chrome://plugins&lt;/code&gt; in the Chrome browser. Its location and version are useful for Electron's Pepper Flash support. You can also copy it to another location.</source>
          <target state="translated">macOSとLinuxでは、Pepper Flashプラグインの詳細は、Chromeブラウザーで &lt;code&gt;chrome://plugins&lt;/code&gt; に移動すると見つかります。その場所とバージョンは、ElectronのPepper Flashサポートに役立ちます。別の場所にコピーすることもできます。</target>
        </trans-unit>
        <trans-unit id="1fe8d71464d08cd82c2244fa423a0fbc93a2a2f6" translate="yes" xml:space="preserve">
          <source>On macOS it sets the NSWindow's sharingType to NSWindowSharingNone. On Windows it calls SetWindowDisplayAffinity with &lt;code&gt;WDA_MONITOR&lt;/code&gt;.</source>
          <target state="translated">macOSでは、NSWindowのsharingTypeをNSWindowSharingNoneに設定します。Windowsでは、 &lt;code&gt;WDA_MONITOR&lt;/code&gt; を指定して SetWindowDisplayAffinityを呼び出します。</target>
        </trans-unit>
        <trans-unit id="7b719ed9c305f63f420f6c9829ca0d539c95212d" translate="yes" xml:space="preserve">
          <source>On macOS it shows on the dock icon. On Linux it only works for Unity launcher,</source>
          <target state="translated">macOSではドックアイコンに表示されます。LinuxではUnityランチャーでのみ動作します。</target>
        </trans-unit>
        <trans-unit id="5b9c827b72f60556580bcb5998f26643c90f630d" translate="yes" xml:space="preserve">
          <source>On macOS modal windows will be displayed as sheets attached to the parent window.</source>
          <target state="translated">macOSでは、モーダルウィンドウは親ウィンドウに添付されたシートとして表示されます。</target>
        </trans-unit>
        <trans-unit id="97b4e5bacd614db0d764685ab8808b714f27cedb" translate="yes" xml:space="preserve">
          <source>On macOS the child windows will keep the relative position to parent window when parent window moves, while on Windows and Linux child windows will not move.</source>
          <target state="translated">macOSでは、親ウィンドウが移動しても子ウィンドウは親ウィンドウとの相対位置を維持しますが、WindowsやLinuxでは子ウィンドウは移動しません。</target>
        </trans-unit>
        <trans-unit id="39f1dbf0ba55abc37d1e6fb150e9fcdcd3055d9c" translate="yes" xml:space="preserve">
          <source>On macOS the label of the application menu's first item is always your app's name, no matter what label you set. To change it, modify your app bundle's &lt;code&gt;Info.plist&lt;/code&gt; file. See &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/general/Reference/InfoPlistKeyReference/Articles/AboutInformationPropertyListFiles.html&quot;&gt;About Information Property List Files&lt;/a&gt; for more information.</source>
          <target state="translated">macOSでは、設定したラベルに関係なく、アプリケーションメニューの最初の項目のラベルは常にアプリの名前です。これを変更するには、App Bundleの &lt;code&gt;Info.plist&lt;/code&gt; ファイルを変更します。詳細&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/general/Reference/InfoPlistKeyReference/Articles/AboutInformationPropertyListFiles.html&quot;&gt;については、情報プロパティリストファイルについてを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="962efd6dbb14a99f9d0befa74276fb63cb5be210" translate="yes" xml:space="preserve">
          <source>On macOS the progress bar will be displayed as a part of the dock icon.</source>
          <target state="translated">macOSでは、プログレスバーはドックアイコンの一部として表示されます。</target>
        </trans-unit>
        <trans-unit id="9ea80c98060bdc72945684d30b2f8a5c7ab7bcc9" translate="yes" xml:space="preserve">
          <source>On macOS the system can detect any change to the app, whether the change is introduced accidentally or by malicious code.</source>
          <target state="translated">macOSでは、アプリへの変更が誤って導入されたものでも、悪意のあるコードによって導入されたものでも、システムが検知することができます。</target>
        </trans-unit>
        <trans-unit id="c3c9b3fca1c23e6c9ed465458eb791a4854332ee" translate="yes" xml:space="preserve">
          <source>On macOS the system enforces single instance automatically when users try to open a second instance of your app in Finder, and the &lt;code&gt;open-file&lt;/code&gt; and &lt;code&gt;open-url&lt;/code&gt; events will be emitted for that. However when users start your app in command line the system's single instance mechanism will be bypassed and you have to use this method to ensure single instance.</source>
          <target state="translated">macOSでは、ユーザーがFinderでアプリの2番目のインスタンスを開こうとすると、システムは単一のインスタンスを自動的に適用し、 &lt;code&gt;open-file&lt;/code&gt; および &lt;code&gt;open-url&lt;/code&gt; イベントがそのために発行されます。ただし、ユーザーがコマンドラインでアプリを起動すると、システムの単一インスタンスメカニズムがバイパスされるため、この方法を使用して単一インスタンスを確保する必要があります。</target>
        </trans-unit>
        <trans-unit id="b7840f977bfb99194365725b9ce38b97953a1203" translate="yes" xml:space="preserve">
          <source>On macOS there are many system-defined standard menus, like the &lt;code&gt;Services&lt;/code&gt; and &lt;code&gt;Windows&lt;/code&gt; menus. To make your menu a standard menu, you should set your menu's &lt;code&gt;role&lt;/code&gt; to one of the following and Electron will recognize them and make them become standard menus:</source>
          <target state="translated">macOSには、 &lt;code&gt;Services&lt;/code&gt; や &lt;code&gt;Windows&lt;/code&gt; メニューなど、多くのシステム定義の標準メニューがあります。メニューを標準メニューにするには、メニューの &lt;code&gt;role&lt;/code&gt; を次のいずれかに設定する必要があります。そうすると、Electronがそれらを認識し、標準メニューにします。</target>
        </trans-unit>
        <trans-unit id="eca75d79de0a9a7453ab45469d56affb44220b51" translate="yes" xml:space="preserve">
          <source>On macOS, dialogs are presented as sheets attached to a window if you provide a &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; reference in the &lt;code&gt;browserWindow&lt;/code&gt; parameter, or modals if no window is provided.</source>
          <target state="translated">macOSでは、 &lt;code&gt;browserWindow&lt;/code&gt; パラメーターに&lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;参照を指定した場合はダイアログがウィンドウに添付されたシートとして表示され、ウィンドウが指定されていない場合はモーダルが表示されます。</target>
        </trans-unit>
        <trans-unit id="930eff2e98cbfe58c3b54a6114b8875b97f89d80" translate="yes" xml:space="preserve">
          <source>On macOS, possible types are &lt;code&gt;desktop&lt;/code&gt;, &lt;code&gt;textured&lt;/code&gt;.</source>
          <target state="translated">macOSでは、可能なタイプは、 &lt;code&gt;desktop&lt;/code&gt; 、 &lt;code&gt;textured&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="00de65421124783bf23813e9e6459a80e63b403f" translate="yes" xml:space="preserve">
          <source>On macOS, the &lt;code&gt;autoUpdater&lt;/code&gt; module is built upon &lt;a href=&quot;https://github.com/Squirrel/Squirrel.Mac&quot;&gt;Squirrel.Mac&lt;/a&gt;, meaning you don't need any special setup to make it work. For server-side requirements, you can read &lt;a href=&quot;https://github.com/Squirrel/Squirrel.Mac#server-support&quot;&gt;Server Support&lt;/a&gt;. Note that &lt;a href=&quot;https://developer.apple.com/library/content/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html#//apple_ref/doc/uid/TP40009251-SW35&quot;&gt;App Transport Security&lt;/a&gt; (ATS) applies to all requests made as part of the update process. Apps that need to disable ATS can add the &lt;code&gt;NSAllowsArbitraryLoads&lt;/code&gt; key to their app's plist.</source>
          <target state="translated">macOSでは、 &lt;code&gt;autoUpdater&lt;/code&gt; モジュールは&lt;a href=&quot;https://github.com/Squirrel/Squirrel.Mac&quot;&gt;Squirrel.Mac&lt;/a&gt;に基づいて構築されているため、機能させるために特別な設定は必要ありません。サーバー側の要件については、&lt;a href=&quot;https://github.com/Squirrel/Squirrel.Mac#server-support&quot;&gt;サーバーサポートをご覧ください&lt;/a&gt;。&lt;a href=&quot;https://developer.apple.com/library/content/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html#//apple_ref/doc/uid/TP40009251-SW35&quot;&gt;App Transport Security&lt;/a&gt;（ATS）は、更新プロセスの一部として行われたすべてのリクエストに適用されることに注意してください。ATSを無効にする必要があるアプリは、 &lt;code&gt;NSAllowsArbitraryLoads&lt;/code&gt; キーをアプリのplistに追加できます。</target>
        </trans-unit>
        <trans-unit id="40365161d9e6a461903a4a80d95269a07719a20f" translate="yes" xml:space="preserve">
          <source>On macOS, third-party assistive technology can switch accessibility inside Electron applications by setting the attribute &lt;code&gt;AXManualAccessibility&lt;/code&gt; programmatically:</source>
          <target state="translated">macOSでは、サードパーティの支援技術により、属性 &lt;code&gt;AXManualAccessibility&lt;/code&gt; をプログラムで設定することにより、Electronアプリケーション内のアクセシビリティを切り替えることができます。</target>
        </trans-unit>
        <trans-unit id="8060ac604c4db11844d351962afdfa9b65a22b9f" translate="yes" xml:space="preserve">
          <source>On macOS, this displays a modal dialog that shows a message and certificate information, and gives the user the option of trusting/importing the certificate. If you provide a &lt;code&gt;browserWindow&lt;/code&gt; argument the dialog will be attached to the parent window, making it modal.</source>
          <target state="translated">macOSでは、これはメッセージと証明書情報を示すモーダルダイアログを表示し、ユーザーに証明書を信頼/インポートするオプションを提供します。あなたが提供する場合は &lt;code&gt;browserWindow&lt;/code&gt; の引数をダイアログは、それがモーダルなって、親ウィンドウに添付されます。</target>
        </trans-unit>
        <trans-unit id="7a42506216f6516bb98b755deb461c9962c4a02b" translate="yes" xml:space="preserve">
          <source>On macOS, you can specify the name of the sound you'd like to play when the notification is shown. Any of the default sounds (under System Preferences &amp;gt; Sound) can be used, in addition to custom sound files. Be sure that the sound file is copied under the app bundle (e.g., &lt;code&gt;YourApp.app/Contents/Resources&lt;/code&gt;), or one of the following locations:</source>
          <target state="translated">macOSでは、通知が表示されたときに再生するサウンドの名前を指定できます。カスタムサウンドファイルに加えて、デフォルトのサウンド（[システム環境設定]&amp;gt; [サウンド]）を使用できます。サウンドファイルがアプリバンドル（ &lt;code&gt;YourApp.app/Contents/Resources&lt;/code&gt; など）または次の場所のいずれかにコピーされていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="05fa8d4a31ff2dd443da846d8cd791198ad32ce6" translate="yes" xml:space="preserve">
          <source>On macOS:</source>
          <target state="translated">macOSでは。</target>
        </trans-unit>
        <trans-unit id="d91878d802027ae1f7f585fe6cea240e5c2e9867" translate="yes" xml:space="preserve">
          <source>On many Linux environments, you can add custom entries to its launcher by modifying the &lt;code&gt;.desktop&lt;/code&gt; file. For Canonical's Unity documentation, see &lt;a href=&quot;https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles#Adding_shortcuts_to_a_launcher&quot;&gt;Adding Shortcuts to a Launcher&lt;/a&gt;. For details on a more generic implementation, see the &lt;a href=&quot;https://specifications.freedesktop.org/desktop-entry-spec/1.1/ar01s11.html&quot;&gt;freedesktop.org Specification&lt;/a&gt;.</source>
          <target state="translated">多くのLinux環境では、 &lt;code&gt;.desktop&lt;/code&gt; ファイルを変更して、ランチャーにカスタムエントリを追加できます。CanonicalのUnityドキュメントについては、「&lt;a href=&quot;https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles#Adding_shortcuts_to_a_launcher&quot;&gt;ランチャーにショートカットを追加する」を&lt;/a&gt;参照してください。より一般的な実装の詳細については、&lt;a href=&quot;https://specifications.freedesktop.org/desktop-entry-spec/1.1/ar01s11.html&quot;&gt;freedesktop.org仕様を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3175a00a94b5ac5668bf15ea82680ed7696496dc" translate="yes" xml:space="preserve">
          <source>On platforms that have high-DPI support such as Apple Retina displays, you can append &lt;code&gt;@2x&lt;/code&gt; after image's base filename to mark it as a high resolution image.</source>
          <target state="translated">Apple Retinaディスプレイなどの高DPIサポートを備えたプラットフォームでは、画像のベースファイル名の後に &lt;code&gt;@2x&lt;/code&gt; を追加して、高解像度画像としてマークできます。</target>
        </trans-unit>
        <trans-unit id="f4f14ae3997fd148e8454de2f452851367d49927" translate="yes" xml:space="preserve">
          <source>On slower networks, it may be advisable to use the &lt;code&gt;--verbose&lt;/code&gt; flag in order to show download progress:</source>
          <target state="translated">遅いネットワークでは、ダウンロードの進行状況を表示するために &lt;code&gt;--verbose&lt;/code&gt; フラグを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="ad8c7ad7f0b9abe97f0528bf5c8da186b920bbfc" translate="yes" xml:space="preserve">
          <source>On some platforms, the draggable area will be treated as a non-client frame, so when you right click on it a system menu will pop up. To make the context menu behave correctly on all platforms you should never use a custom context menu on draggable areas.</source>
          <target state="translated">プラットフォームによっては、ドラッグ可能な領域は非クライアントフレームとして扱われ、右クリックするとシステムメニューがポップアップします。すべてのプラットフォームでコンテキストメニューが正しく動作するようにするには、ドラッグ可能な領域にカスタムコンテキストメニューを使用しないようにしてください。</target>
        </trans-unit>
        <trans-unit id="05df37334108b614c859014ba1a56e7d96ade900" translate="yes" xml:space="preserve">
          <source>On the screen that allows you to configure the installation, make sure to select the &lt;code&gt;Node.js runtime&lt;/code&gt;, &lt;code&gt;npm package manager&lt;/code&gt;, and &lt;code&gt;Add to PATH&lt;/code&gt; options.</source>
          <target state="translated">インストールの構成を可能にする画面で、必ず &lt;code&gt;Node.js runtime&lt;/code&gt; 、 &lt;code&gt;npm package manager&lt;/code&gt; 、および &lt;code&gt;Add to PATH&lt;/code&gt; オプションを選択してください。</target>
        </trans-unit>
        <trans-unit id="5774f08783d2103ac6cbe1802349acb56ef498f7" translate="yes" xml:space="preserve">
          <source>Once all child processes have acknowledged the &lt;code&gt;captureMonitoringSnapshot&lt;/code&gt; request the &lt;code&gt;callback&lt;/code&gt; will be called with a file that contains the traced data.</source>
          <target state="translated">すべての子プロセスが &lt;code&gt;captureMonitoringSnapshot&lt;/code&gt; 要求を確認すると、トレースされたデータを含むファイルを使用して &lt;code&gt;callback&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9c44343ed4ea2502c1fee0d7789757dcf9e4ffb5" translate="yes" xml:space="preserve">
          <source>Once all child processes have acknowledged the &lt;code&gt;getCategories&lt;/code&gt; request the &lt;code&gt;callback&lt;/code&gt; is invoked with an array of category groups.</source>
          <target state="translated">すべての子プロセスが &lt;code&gt;getCategories&lt;/code&gt; リクエストを確認すると、 &lt;code&gt;callback&lt;/code&gt; がカテゴリグループの配列で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="98776a3ffec4cad6c715b1def985b57231053670" translate="yes" xml:space="preserve">
          <source>Once all child processes have acknowledged the &lt;code&gt;startMonitoring&lt;/code&gt; request the &lt;code&gt;callback&lt;/code&gt; will be called.</source>
          <target state="translated">すべての子プロセスが &lt;code&gt;startMonitoring&lt;/code&gt; リクエストを確認すると、 &lt;code&gt;callback&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7d6e3c4b0729dbc1bbdfda76bcdfcfd3875529bd" translate="yes" xml:space="preserve">
          <source>Once all child processes have acknowledged the &lt;code&gt;stopMonitoring&lt;/code&gt; request the &lt;code&gt;callback&lt;/code&gt; is called.</source>
          <target state="translated">すべての子プロセスが &lt;code&gt;stopMonitoring&lt;/code&gt; 要求を確認すると、 &lt;code&gt;callback&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="b263577cee616902969d72ac20dba5b3da591aac" translate="yes" xml:space="preserve">
          <source>Once all child processes have acknowledged the &lt;code&gt;stopRecording&lt;/code&gt; request, &lt;code&gt;callback&lt;/code&gt; will be called with a file that contains the traced data.</source>
          <target state="translated">すべての子プロセスが &lt;code&gt;stopRecording&lt;/code&gt; リクエストを確認すると、トレースされたデータを含むファイルを使用して &lt;code&gt;callback&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="dba12ea503ae33bccb24c51a78b166fd8cc1fc92" translate="yes" xml:space="preserve">
          <source>Once all of Electron's dependencies are building and using the same copy of V8, the next step is to fix any Electron code issues caused by the Node upgrade.</source>
          <target state="translated">Electron のすべての依存関係が構築され、同じ V8 のコピーを使用したら、次のステップは、Node のアップグレードによって引き起こされた Electron のコードの問題を修正することです。</target>
        </trans-unit>
        <trans-unit id="776b4d3131b12059ffa06e971d85117dff1673db" translate="yes" xml:space="preserve">
          <source>Once downloaded, execute the installer and let the installation wizard guide you through the installation.</source>
          <target state="translated">ダウンロードしたら、インストーラーを実行して、インストールウィザードのガイドに沿ってインストールしてください。</target>
        </trans-unit>
        <trans-unit id="9762bd3e5739d1cded2e18b07c4cca18f08e2ffd" translate="yes" xml:space="preserve">
          <source>Once executed, the tool goes to work: It accepts your Electron app as an input, flattening the &lt;code&gt;node_modules&lt;/code&gt;. Then, it archives your application as &lt;code&gt;app.zip&lt;/code&gt;. Using an installer and a Windows Container, the tool creates an &quot;expanded&quot; AppX package - including the Windows Application Manifest (&lt;code&gt;AppXManifest.xml&lt;/code&gt;) as well as the virtual file system and the virtual registry inside your output folder.</source>
          <target state="translated">ツールが実行されると機能します &lt;code&gt;node_modules&lt;/code&gt; アプリを入力として受け入れ、node_modulesをフラット化します。次に、アプリケーションを &lt;code&gt;app.zip&lt;/code&gt; としてアーカイブします。このツールは、インストーラーとWindowsコンテナーを使用して、Windowsアプリケーションマニフェスト（ &lt;code&gt;AppXManifest.xml&lt;/code&gt; ）、仮想ファイルシステム、および出力フォルダー内の仮想レジストリを含む「拡張」AppXパッケージを作成します。</target>
        </trans-unit>
        <trans-unit id="8209fd5775eb5f0f6b38e2b831be94219fc12b2b" translate="yes" xml:space="preserve">
          <source>Once installation succeeded, you can move on to compiling your Electron app.</source>
          <target state="translated">インストールに成功したら、Electronアプリのコンパイルに移ることができます。</target>
        </trans-unit>
        <trans-unit id="f52b764874aea12781ae2894d4d713d2983206de" translate="yes" xml:space="preserve">
          <source>Once installed, confirm that everything works as expected. Find the Windows PowerShell by opening the Start Menu and typing &lt;code&gt;PowerShell&lt;/code&gt;. Open up &lt;code&gt;PowerShell&lt;/code&gt; or another command line client of your choice and confirm that both &lt;code&gt;node&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt; are available:</source>
          <target state="translated">インストールしたら、すべてが期待どおりに機能することを確認します。スタートメニューを開き、 &lt;code&gt;PowerShell&lt;/code&gt; と入力して、Windows PowerShellを見つけます。 &lt;code&gt;PowerShell&lt;/code&gt; または選択した別のコマンドラインクライアントを開き、 &lt;code&gt;node&lt;/code&gt; と &lt;code&gt;npm&lt;/code&gt; の両方が使用可能であることを確認します。</target>
        </trans-unit>
        <trans-unit id="0190d758bbb3600ff11db5af35330a7f595d05b3" translate="yes" xml:space="preserve">
          <source>Once installed, confirm that everything works as expected. Find the macOS &lt;code&gt;Terminal&lt;/code&gt; application in your &lt;code&gt;/Applications/Utilities&lt;/code&gt; folder (or by searching for the word &lt;code&gt;Terminal&lt;/code&gt; in Spotlight). Open up &lt;code&gt;Terminal&lt;/code&gt; or another command line client of your choice and confirm that both &lt;code&gt;node&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt; are available:</source>
          <target state="translated">インストールしたら、すべてが期待どおりに機能することを確認します。 &lt;code&gt;/Applications/Utilities&lt;/code&gt; フォルダーで（またはSpotlightで単語 &lt;code&gt;Terminal&lt;/code&gt; を検索して）macOS &lt;code&gt;Terminal&lt;/code&gt; アプリケーションを見つけます。 &lt;code&gt;Terminal&lt;/code&gt; または選択した別のコマンドラインクライアントを開き、 &lt;code&gt;node&lt;/code&gt; と &lt;code&gt;npm&lt;/code&gt; の両方が利用可能であることを確認します。</target>
        </trans-unit>
        <trans-unit id="de534bd247da2de87c3c6e4f6c1d1f88d0f52d3d" translate="yes" xml:space="preserve">
          <source>Once the expanded AppX files are created, the tool uses the Windows App Packager (&lt;code&gt;MakeAppx.exe&lt;/code&gt;) to create a single-file AppX package from those files on disk. Finally, the tool can be used to create a trusted certificate on your computer to sign the new AppX package. With the signed AppX package, the CLI can also automatically install the package on your machine.</source>
          <target state="translated">拡張AppXファイルが作成されると、ツールはWindows App Packager（ &lt;code&gt;MakeAppx.exe&lt;/code&gt; ）を使用して、ディスク上のそれらのファイルから単一ファイルのAppXパッケージを作成します。最後に、このツールを使用して、コンピューターに信頼できる証明書を作成し、新しいAppXパッケージに署名できます。署名済みAppXパッケージを使用すると、CLIはパッケージをマシンに自動的にインストールすることもできます。</target>
        </trans-unit>
        <trans-unit id="29a1565d09fedc8a37523bb2973f4deaa6a7b1de" translate="yes" xml:space="preserve">
          <source>Once the merge has finished successfully, run the &lt;code&gt;release&lt;/code&gt; script via &lt;code&gt;npm run release&lt;/code&gt; to finish the release process. This script will do the following: 1. Build the project to validate that the correct version number is being released. 2. Download the binaries and generate the node headers and the .lib linker used on Windows by node-gyp to build native modules. 3. Create and upload the SHASUMS files stored on S3 for the node files. 4. Create and upload the SHASUMS256.txt file stored on the GitHub release. 5. Validate that all of the required files are present on GitHub and S3 and have the correct checksums as specified in the SHASUMS files. 6. Publish the release on GitHub 7. Delete the &lt;code&gt;release&lt;/code&gt; branch.</source>
          <target state="translated">マージが正常に完了したら、 &lt;code&gt;npm run release&lt;/code&gt; を介して &lt;code&gt;release&lt;/code&gt; スクリプトを実行し、リリースプロセスを完了します。このスクリプトは次のことを行います。1.プロジェクトをビルドして、正しいバージョン番号がリリースされていることを確認します。 2.バイナリをダウンロードし、ノードヘッダーと、Windowsでnode-gypがネイティブモジュールを構築するために使用する.libリンカーを生成します。 3.ノードファイル用にS3に保存されているSHASUMSファイルを作成してアップロードします。 4. GitHubリリースに保存されているSHASUMS256.txtファイルを作成してアップロードします。 5.必要なすべてのファイルがGitHubおよびS3に存在し、SHASUMSファイルで指定されている正しいチェックサムがあることを確認します。 6. GitHubでリリースを公開します。7 . &lt;code&gt;release&lt;/code&gt; ブランチを削除します。</target>
        </trans-unit>
        <trans-unit id="018870f6c422a3d261faedabaa572318f015b552" translate="yes" xml:space="preserve">
          <source>Once the release builds have finished, merge the &lt;code&gt;release&lt;/code&gt; branch back into the source release branch using the &lt;code&gt;merge-release&lt;/code&gt; script. If the branch cannot be successfully merged back this script will automatically rebase the &lt;code&gt;release&lt;/code&gt; branch and push the changes which will trigger the release builds again, which means you will need to wait for the release builds to run again before proceeding.</source>
          <target state="translated">リリースが完了したビルドすると、マージ &lt;code&gt;release&lt;/code&gt; 使用ソースリリースブランチに分岐バック &lt;code&gt;merge-release&lt;/code&gt; スクリプトを。ブランチを正常にマージできない場合、このスクリプトは自動的に &lt;code&gt;release&lt;/code&gt; ブランチをリベースし、変更をプッシュしてリリースビルドを再度トリガーします。つまり、続行する前にリリースビルドが再度実行されるのを待つ必要があります。</target>
        </trans-unit>
        <trans-unit id="146982f70d5f8ded9db304459c8223f4a1fa2a13" translate="yes" xml:space="preserve">
          <source>Once you have committed your changes, it is a good idea to use &lt;code&gt;git rebase&lt;/code&gt; (not &lt;code&gt;git merge&lt;/code&gt;) to synchronize your work with the main repository.</source>
          <target state="translated">変更をコミットしたら、（ &lt;code&gt;git merge&lt;/code&gt; ではなく） &lt;code&gt;git rebase&lt;/code&gt; を使用して作業をメインリポジトリと同期することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="53708def307a9b9b51e0444894f876c949dae216" translate="yes" xml:space="preserve">
          <source>Once you have determined which type of version change is needed, run the &lt;code&gt;prepare-release&lt;/code&gt; script with arguments according to your need:</source>
          <target state="translated">必要なバージョン変更のタイプを決定したら、必要に応じて引数を指定して &lt;code&gt;prepare-release&lt;/code&gt; スクリプトを実行します。</target>
        </trans-unit>
        <trans-unit id="80a06ffe9368590b951905eb2fde9ce7315b5a43" translate="yes" xml:space="preserve">
          <source>Once you've built the project locally, you're ready to start making changes!</source>
          <target state="translated">プロジェクトをローカルに構築したら、変更を開始する準備ができています。</target>
        </trans-unit>
        <trans-unit id="9c276f933ac32fd3d3448dc805eaa775d162dfc2" translate="yes" xml:space="preserve">
          <source>Once you've created your initial &lt;code&gt;main.js&lt;/code&gt;, &lt;code&gt;index.html&lt;/code&gt;, and &lt;code&gt;package.json&lt;/code&gt; files, you can try your app by running &lt;code&gt;npm start&lt;/code&gt; from your application's directory.</source>
          <target state="translated">最初の &lt;code&gt;main.js&lt;/code&gt; 、 &lt;code&gt;index.html&lt;/code&gt; 、および &lt;code&gt;package.json&lt;/code&gt; ファイルを作成したら、アプリケーションのディレクトリから &lt;code&gt;npm start&lt;/code&gt; を実行してアプリを試すことができます。</target>
        </trans-unit>
        <trans-unit id="7b31e35ce4ec0bbb306af8b0e29fe2bd1021ed8c" translate="yes" xml:space="preserve">
          <source>Once you've deployed your update server, continue with importing the required modules in your code. The following code might vary for different server software, but it works like described when using &lt;a href=&quot;https://github.com/zeit/hazel&quot;&gt;Hazel&lt;/a&gt;.</source>
          <target state="translated">更新サーバーをデプロイしたら、必要なモジュールをコードにインポートします。次のコードは、サーバーソフトウェアによって異なる場合がありますが、&lt;a href=&quot;https://github.com/zeit/hazel&quot;&gt;Hazel&lt;/a&gt;を使用した場合の説明と同様に機能します。</target>
        </trans-unit>
        <trans-unit id="064981ba6cdfd53aaad23b77588a841f3aba6ee6" translate="yes" xml:space="preserve">
          <source>Once your application is &lt;a href=&quot;application-distribution&quot;&gt;packaged&lt;/a&gt;, it will receive an update for each new &lt;a href=&quot;https://help.github.com/articles/creating-releases/&quot;&gt;GitHub Release&lt;/a&gt; that you publish.</source>
          <target state="translated">アプリケーションが&lt;a href=&quot;application-distribution&quot;&gt;パッケージ化されると&lt;/a&gt;、公開する新しい&lt;a href=&quot;https://help.github.com/articles/creating-releases/&quot;&gt;GitHubリリース&lt;/a&gt;ごとに更新が受信されます。</target>
        </trans-unit>
        <trans-unit id="ee767409aeb4133eb0ffcf2e9af7d2a59427d0b9" translate="yes" xml:space="preserve">
          <source>Once your commits are ready to go -- with passing tests and linting -- begin the process of opening a pull request by pushing your working branch to your fork on GitHub.</source>
          <target state="translated">コミットの準備ができたら、テストに合格して linting が完了したら、作業中のブランチを GitHub のフォークにプッシュしてプルリクエストを開始します。</target>
        </trans-unit>
        <trans-unit id="96ff8cd263b4a1462748b61bea0d19cbedd36e79" translate="yes" xml:space="preserve">
          <source>Once, the lib is built, create a symlink to the built directory under download</source>
          <target state="translated">lib がビルドされたら、ダウンロードの下にビルドされたディレクトリへのシンボリックリンクを作成します。</target>
        </trans-unit>
        <trans-unit id="1cfdf3d36632913f5a7e448e775909dc1fc34682" translate="yes" xml:space="preserve">
          <source>One of the key security features of Chromium is that all blink rendering/JavaScript code is executed within a sandbox. This sandbox uses OS-specific features to ensure that exploits in the renderer process cannot harm the system.</source>
          <target state="translated">Chromium の重要なセキュリティ機能の一つは、blink レンダリング/JavaScript のコードがすべてサンドボックス内で実行されることです。このサンドボックスはOS固有の機能を使用しており、レンダラープロセスの悪用がシステムに害を及ぼすことがないようにしています。</target>
        </trans-unit>
        <trans-unit id="a147608ca5bd5f2922cc0528d8c6928e11775edc" translate="yes" xml:space="preserve">
          <source>One planned enhancement that should greatly increase security is to block IPC messages from sandboxed renderers by default, allowing the main process to explicitly define a set of messages the renderer is allowed to send.</source>
          <target state="translated">セキュリティを大幅に向上させるために計画されている拡張機能の1つは、サンドボックス化されたレンダラーからのIPCメッセージをデフォルトでブロックし、メインプロセスがレンダラーが送信できるメッセージのセットを明示的に定義できるようにすることです。</target>
        </trans-unit>
        <trans-unit id="99744705bcbeb063f61bc8390c3d750f2309ed47" translate="yes" xml:space="preserve">
          <source>One upgrade issue is building all of Electron with a single copy of V8 to ensure compatibility. This is important because upstream Node and &lt;a href=&quot;upgrading-chromium&quot;&gt;libchromiumcontent&lt;/a&gt; both use their own versions of V8.</source>
          <target state="translated">アップグレードの問題の1つは、互換性を確保するためにV8の単一のコピーですべてのElectronをビルドすることです。アップストリームNodeと&lt;a href=&quot;upgrading-chromium&quot;&gt;libchromiumcontentは&lt;/a&gt;どちらも独自のバージョンのV8を使用するため、これは重要です。</target>
        </trans-unit>
        <trans-unit id="9932af99967f42cc38fbd13ef5168301ea164088" translate="yes" xml:space="preserve">
          <source>One-liner for the latest stable mac version: &lt;code&gt;curl -so- https://omahaproxy.appspot.com/mac &amp;gt; VERSION&lt;/code&gt;</source>
          <target state="translated">最新の安定したMacバージョンのワンライナー： &lt;code&gt;curl -so- https://omahaproxy.appspot.com/mac &amp;gt; VERSION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53db714ea1277ad5e9f60f9af9067c62522f2da3" translate="yes" xml:space="preserve">
          <source>One-liner for the latest win64 beta version: &lt;code&gt;curl -so- https://omahaproxy.appspot.com/all | grep &quot;win64,beta&quot; | awk -F, 'NR==1{print $3}' &amp;gt; VERSION&lt;/code&gt;</source>
          <target state="translated">最新のwin64ベータ版のワンライナー： &lt;code&gt;curl -so- https://omahaproxy.appspot.com/all | grep &quot;win64,beta&quot; | awk -F, 'NR==1{print $3}' &amp;gt; VERSION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="abd4bbe261603692df27f3b3e7a61372efdea2c2" translate="yes" xml:space="preserve">
          <source>Online/Offline Event Detection</source>
          <target state="translated">オンライン/オフラインイベント検出</target>
        </trans-unit>
        <trans-unit id="e68be3e69c989094db5ef8028d36a4a57dd58c6c" translate="yes" xml:space="preserve">
          <source>Only 64bit binaries are provided for macOS, and the minimum macOS version supported is macOS 10.9.</source>
          <target state="translated">macOSには64bitバイナリのみが提供されており、サポートされている最小バージョンはmacOS 10.9となっています。</target>
        </trans-unit>
        <trans-unit id="09c3b33ff6c4a5729d827169c013ea2302cff06b" translate="yes" xml:space="preserve">
          <source>Only load secure content</source>
          <target state="translated">安全なコンテンツのみをロード</target>
        </trans-unit>
        <trans-unit id="5f51e85615b4a968e854ef7f5865e4da533c71bd" translate="yes" xml:space="preserve">
          <source>Only the first one is used. If multiple are provided, those beyond the first will be listed as additional actions (displayed when mouse active over the action button). Any such action also is incompatible with &lt;code&gt;hasReply&lt;/code&gt; and will be ignored if &lt;code&gt;hasReply&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; .</source>
          <target state="translated">最初のものだけが使用されます。複数が提供されている場合、最初のものを超えるものが追加のアクションとしてリストされます（アクションボタン上でマウスがアクティブなときに表示されます）。このようなアクションも &lt;code&gt;hasReply&lt;/code&gt; と互換性がなく、 &lt;code&gt;hasReply&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="f174f6b2e526237a94d6c82041bd806c03f336ab" translate="yes" xml:space="preserve">
          <source>Only the stable channel of Chrome is used. If an important fix is in beta or dev channel, we will back-port it.</source>
          <target state="translated">Chrome の安定版チャンネルのみを使用しています。重要な修正がベータ版や開発版のチャンネルにある場合は、バックポートします。</target>
        </trans-unit>
        <trans-unit id="524d4649df49e0f25d3d223d5bd0ba7b6a2181a9" translate="yes" xml:space="preserve">
          <source>Open &lt;a href=&quot;http://www.dash-player.com/demo/drm-test-area/&quot;&gt;http://www.dash-player.com/demo/drm-test-area/&lt;/a&gt;, check whether the page says &lt;code&gt;bitdash uses Widevine in your browser&lt;/code&gt;, then play the video.</source>
          <target state="translated">&lt;a href=&quot;http://www.dash-player.com/demo/drm-test-area/&quot;&gt;http://www.dash-player.com/demo/drm-test-area/を&lt;/a&gt;開き、ページで &lt;code&gt;bitdash uses Widevine in your browser&lt;/code&gt; でWidevineを使用していると表示されているかどうかを確認してから、ビデオを再生します。</target>
        </trans-unit>
        <trans-unit id="698e1eaa37d0aa74f264feab2e3553688b92bd0e" translate="yes" xml:space="preserve">
          <source>Open &lt;a href=&quot;https://shaka-player-demo.appspot.com/&quot;&gt;https://shaka-player-demo.appspot.com/&lt;/a&gt; and load a manifest that uses &lt;code&gt;Widevine&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://shaka-player-demo.appspot.com/&quot;&gt;https://shaka-player-demo.appspot.com/&lt;/a&gt;を開き、 &lt;code&gt;Widevine&lt;/code&gt; を使用するマニフェストを読み込みます。</target>
        </trans-unit>
        <trans-unit id="265c66a384b75881ff660808ed1cba9fd220e6ab" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Info.plist&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Info.plist&lt;/code&gt; を開きます</target>
        </trans-unit>
        <trans-unit id="ce2078dc5b9fcc322ad79af589dae59a57cb5b8a" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;chrome://components/&lt;/code&gt; in Chrome browser, find &lt;code&gt;WidevineCdm&lt;/code&gt; and make sure it is up to date, then you can find all the plugin binaries from the &lt;code&gt;Program Files(x86)/Google/Chrome/Application/VERSION/WidevineCDM/_platform_specific/PLATFORM_ARCH/&lt;/code&gt; directory.</source>
          <target state="translated">Chromeブラウザで &lt;code&gt;chrome://components/&lt;/code&gt; 開き、 &lt;code&gt;WidevineCdm&lt;/code&gt; を見つけて最新であることを確認してください &lt;code&gt;Program Files(x86)/Google/Chrome/Application/VERSION/WidevineCDM/_platform_specific/PLATFORM_ARCH/&lt;/code&gt; からすべてのプラグインバイナリを見つけることができますPLATFORM_ARCH /ディレクトリ。</target>
        </trans-unit>
        <trans-unit id="8db72797e15d549ca389e32d8083cb63d04c4802" translate="yes" xml:space="preserve">
          <source>Open a new window and load a URL.</source>
          <target state="translated">新しいウィンドウを開いてURLを読み込みます。</target>
        </trans-unit>
        <trans-unit id="df66569cc6e6afb220ffbf6d2b7adcbc48a16d11" translate="yes" xml:space="preserve">
          <source>Open a window without toolbars, borders, or other graphical &quot;chrome&quot;.</source>
          <target state="translated">ツールバーやボーダーなどのグラフィカルな「クローム」のないウィンドウを開きます。</target>
        </trans-unit>
        <trans-unit id="34a28ea3ae9ecbdbf3e1bb94c0eda57b35f7b31e" translate="yes" xml:space="preserve">
          <source>Open devtools and check whether &lt;code&gt;navigator.plugins&lt;/code&gt; includes the Widevine CDM plugin.</source>
          <target state="translated">devtoolsを開き、 &lt;code&gt;navigator.plugins&lt;/code&gt; にWidevine CDMプラグインが含まれているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="8767b38ccc465dcdd919dccb24c4a15fb5460291" translate="yes" xml:space="preserve">
          <source>Open the given external protocol URL in the desktop's default manner. (For example, mailto: URLs in the user's default mail agent).</source>
          <target state="translated">与えられた外部プロトコルURLをデスクトップのデフォルトの方法で開きます。(例えば、ユーザーのデフォルトのメールエージェントの mailto:URL など)。</target>
        </trans-unit>
        <trans-unit id="a683b301d99f6c989fec699f23120fe44d252234" translate="yes" xml:space="preserve">
          <source>Open the given file in the desktop's default manner.</source>
          <target state="translated">指定したファイルをデスクトップのデフォルトの方法で開きます。</target>
        </trans-unit>
        <trans-unit id="3b823b976de0885fd5a717acb3a5685a59a5cb54" translate="yes" xml:space="preserve">
          <source>Opens a DevTools window for guest page.</source>
          <target state="translated">ゲストページのDevToolsウィンドウを開きます。</target>
        </trans-unit>
        <trans-unit id="414694f47784d351d0d66b622b44880bb219b6be" translate="yes" xml:space="preserve">
          <source>Opens the DevTools for the service worker context present in the guest page.</source>
          <target state="translated">ゲスト ページに存在するサービス ワーカー コンテキストの DevTools を開きます。</target>
        </trans-unit>
        <trans-unit id="68a6214fddfea0b441a7f17f6397c79b9c58debb" translate="yes" xml:space="preserve">
          <source>Opens the developer tools for the service worker context.</source>
          <target state="translated">サービス ワーカー コンテキストの開発者ツールを開きます。</target>
        </trans-unit>
        <trans-unit id="abf22d936cd3ab6e4ff86e36b994267ef455e2e9" translate="yes" xml:space="preserve">
          <source>Opens the devtools.</source>
          <target state="translated">devtoolsを開きます。</target>
        </trans-unit>
        <trans-unit id="4e27fc5a56ba64d45d09bd80fa644db16b9a4cd5" translate="yes" xml:space="preserve">
          <source>Optimizing compiler</source>
          <target state="translated">コンパイラの最適化</target>
        </trans-unit>
        <trans-unit id="80d9b72ea1c8f1787c347e35ccd1175f7a825495" translate="yes" xml:space="preserve">
          <source>Optional: Add UWP Features using a BackgroundTask</source>
          <target state="translated">オプションです。BackgroundTaskを使ってUWP機能を追加する</target>
        </trans-unit>
        <trans-unit id="e8de9b5cfe974e3ac30344817b777efcdb11949d" translate="yes" xml:space="preserve">
          <source>Optional: Convert using Container Virtualization</source>
          <target state="translated">オプションです。コンテナ仮想化を使用して変換</target>
        </trans-unit>
        <trans-unit id="9d9bcce22766242a692c07392d9626d02e911414" translate="yes" xml:space="preserve">
          <source>Or read the image from the clipboard which returns a &lt;code&gt;NativeImage&lt;/code&gt;:</source>
          <target state="translated">または、 &lt;code&gt;NativeImage&lt;/code&gt; を返すクリップボードから画像を読み取ります。</target>
        </trans-unit>
        <trans-unit id="651a806b332d45e9f30ca8f251978c2732666026" translate="yes" xml:space="preserve">
          <source>Or view &lt;a href=&quot;https://github.com/electron/crashpad/commits/previous-branch-name&quot;&gt;https://github.com/electron/crashpad/commits/previous-branch-name&lt;/a&gt;</source>
          <target state="translated">または&lt;a href=&quot;https://github.com/electron/crashpad/commits/previous-branch-name&quot;&gt;https://github.com/electron/crashpad/commits/previous-branch-nameを&lt;/a&gt;表示</target>
        </trans-unit>
        <trans-unit id="5225700698dd6a7df0e9ec33842d002b6d1fa24e" translate="yes" xml:space="preserve">
          <source>Or you can use the IPC system, which is specific to Electron, to store objects in the main process as a global variable, and then to access them from the renderers through the &lt;code&gt;remote&lt;/code&gt; property of &lt;code&gt;electron&lt;/code&gt; module:</source>
          <target state="translated">または、Electronに固有のIPCシステムを使用して、メインプロセスにオブジェクトをグローバル変数として保存し、レンダラーから &lt;code&gt;electron&lt;/code&gt; モジュールの &lt;code&gt;remote&lt;/code&gt; プロパティを介してオブジェクトにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="c10643b85fbfbd4fbb63e61c52588993e2ffbfa5" translate="yes" xml:space="preserve">
          <source>Oriya</source>
          <target state="translated">Oriya</target>
        </trans-unit>
        <trans-unit id="cdde40b7cdbdf6471f71c878831054ceb02afaeb" translate="yes" xml:space="preserve">
          <source>Oromo</source>
          <target state="translated">Oromo</target>
        </trans-unit>
        <trans-unit id="b822462b62b0966fb729a938d96d627dc2946a3b" translate="yes" xml:space="preserve">
          <source>Other Tools and Boilerplates</source>
          <target state="translated">その他の工具とボイラープレート</target>
        </trans-unit>
        <trans-unit id="2489530e3022fc2dee88bba2c8eea65b468ed88b" translate="yes" xml:space="preserve">
          <source>Other distributions may offer similar packages for installation via package managers such as pacman. Or one can compile from source code.</source>
          <target state="translated">他のディストリビューションでは pacman のようなパッケージマネージャを使って同様のパッケージをインストールすることができます。あるいはソースコードからコンパイルすることもできます。</target>
        </trans-unit>
        <trans-unit id="34ccfe33ccaf70c20d9223b02137ae4913515126" translate="yes" xml:space="preserve">
          <source>Other means for installing Electron exist. Please consult the &lt;a href=&quot;installation&quot;&gt;installation guide&lt;/a&gt; to learn about use with proxies, mirrors, and custom caches.</source>
          <target state="translated">Electronをインストールする他の方法が存在します。プロキシ、ミラー、カスタムキャッシュの使用については、&lt;a href=&quot;installation&quot;&gt;インストールガイド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="efdfba66cdf27ef875bb9d4971100d96e23a6de1" translate="yes" xml:space="preserve">
          <source>Other things to keep in mind when writing a commit message:</source>
          <target state="translated">その他、コミットメッセージを書く際に注意すべきこと</target>
        </trans-unit>
        <trans-unit id="8eb35eb5263c9ae63a3c98ee9bf38cb2ccdd9990" translate="yes" xml:space="preserve">
          <source>Our strategy has a few tradeoffs, which for now we feel are appropriate. Most importantly that new features in master may take a while before reaching a stable release line. If you want to try a new feature immediately, you will have to build Electron yourself.</source>
          <target state="translated">私たちの戦略にはいくつかのトレードオフがありますが、今のところはそれが適切だと感じています。最も重要なことは、masterの新機能は安定したリリースラインに到達するまでにしばらく時間がかかるかもしれないということです。新機能をすぐに試したい場合は、自分でElectronをビルドしなければなりません。</target>
        </trans-unit>
        <trans-unit id="ef3cd7d2d24f7e37320f7fa6047d29e628259470" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;code&gt;path&lt;/code&gt; to a special directory or file associated with &lt;code&gt;name&lt;/code&gt;. If the path specifies a directory that does not exist, the directory will be created by this method. On failure an &lt;code&gt;Error&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; に関連付けられた特別なディレクトリまたはファイルへの &lt;code&gt;path&lt;/code&gt; を上書きします。パスが存在しないディレクトリを指定している場合、このメソッドによってディレクトリが作成されます。失敗すると、 &lt;code&gt;Error&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="d9fcf698030d714263c769f523705ea373aa8094" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;code&gt;userAgent&lt;/code&gt; and &lt;code&gt;acceptLanguages&lt;/code&gt; for this session.</source>
          <target state="translated">このセッションの &lt;code&gt;userAgent&lt;/code&gt; および &lt;code&gt;acceptLanguages&lt;/code&gt; をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="62e5b17bb125ee02173fd3de2f85038d128b3e12" translate="yes" xml:space="preserve">
          <source>Overrides the current application's name.</source>
          <target state="translated">現在のアプリケーションの名前を上書きします。</target>
        </trans-unit>
        <trans-unit id="d626978538596411af1092e84b923536e440c5f5" translate="yes" xml:space="preserve">
          <source>Overrides the user agent for the guest page.</source>
          <target state="translated">ゲストページのユーザーエージェントを上書きします。</target>
        </trans-unit>
        <trans-unit id="667bce9263ee470f194153b33ed64daa93ecede6" translate="yes" xml:space="preserve">
          <source>Overrides the user agent for this web page.</source>
          <target state="translated">このウェブページのユーザーエージェントをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="41f1ed073588aa8127f5ec21426f1a1d3afd97ee" translate="yes" xml:space="preserve">
          <source>PBKDF2 - &lt;a href=&quot;https://tools.ietf.org/html/rfc2898&quot;&gt;RFC 2898&lt;/a&gt;</source>
          <target state="translated">PBKDF2- &lt;a href=&quot;https://tools.ietf.org/html/rfc2898&quot;&gt;RFC 2898&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35dde1a41cc9583f0aba39510fe609bed3090181" translate="yes" xml:space="preserve">
          <source>POSIX shell example:</source>
          <target state="translated">POSIX シェルの例。</target>
        </trans-unit>
        <trans-unit id="4f2c91e60f87b798fc8b1daf301a1775f6845875" translate="yes" xml:space="preserve">
          <source>Package the application using &lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt;electron-packager&lt;/a&gt; (or a similar tool). Make sure to remove &lt;code&gt;node_modules&lt;/code&gt; that you don't need in your final application, since any module you don't actually need will increase your application's size.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt;electron-packager&lt;/a&gt;（または同様のツール）を使用してアプリケーションをパッケージ化します。最終的なアプリケーションで不要な &lt;code&gt;node_modules&lt;/code&gt; を必ず削除してください。実際に不要なモジュールがあると、アプリケーションのサイズが大きくなるためです。</target>
        </trans-unit>
        <trans-unit id="3a39b68c35be609fae3db651a70893a29f102145" translate="yes" xml:space="preserve">
          <source>Packaging</source>
          <target state="translated">Packaging</target>
        </trans-unit>
        <trans-unit id="f6040caa38342b33a6e2561f81b6b745ebcb9010" translate="yes" xml:space="preserve">
          <source>Packaging Tools</source>
          <target state="translated">パッケージングツール</target>
        </trans-unit>
        <trans-unit id="f2f88690043494eaff489df1755ad734e4601324" translate="yes" xml:space="preserve">
          <source>Packaging Your App into a File</source>
          <target state="translated">アプリをファイルにパッケージングする</target>
        </trans-unit>
        <trans-unit id="d6932a33a7ea7529e748ffd4e2cf89238214ab67" translate="yes" xml:space="preserve">
          <source>Page visibility</source>
          <target state="translated">ページの可視性</target>
        </trans-unit>
        <trans-unit id="461fb079bf9bc5eadbc105028fc4954c4cef8ab4" translate="yes" xml:space="preserve">
          <source>Paid Applications Agreement</source>
          <target state="translated">有料アプリ契約書</target>
        </trans-unit>
        <trans-unit id="4b2609d41c5d5b2979141aeb1c932ae4c9884b80" translate="yes" xml:space="preserve">
          <source>Parent and child windows</source>
          <target state="translated">親子ウィンドウ</target>
        </trans-unit>
        <trans-unit id="cc50b3253c9ec78d83c0178cbd9aff6a66d8ced8" translate="yes" xml:space="preserve">
          <source>Pashto</source>
          <target state="translated">Pashto</target>
        </trans-unit>
        <trans-unit id="924ed5f84b43a504120ae93740a6f288ace719a6" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;--build_release_libcc&lt;/code&gt; switch to &lt;code&gt;bootstrap.py&lt;/code&gt; script:</source>
          <target state="translated">パス &lt;code&gt;--build_release_libcc&lt;/code&gt; にスイッチを &lt;code&gt;bootstrap.py&lt;/code&gt; スクリプト：</target>
        </trans-unit>
        <trans-unit id="09a60a69d3768ba08acceb430b2193dfa1062021" translate="yes" xml:space="preserve">
          <source>Pass the location of the extension to &lt;code&gt;BrowserWindow.addDevToolsExtension&lt;/code&gt; API, for the React Developer Tools, it is something like: &lt;code&gt;~/Library/Application Support/Google/Chrome/Default/Extensions/fmkadmapgofadopljbjfkapdkoienihi/0.15.0_0&lt;/code&gt;</source>
          <target state="translated">拡張機能の場所を &lt;code&gt;BrowserWindow.addDevToolsExtension&lt;/code&gt; APIに &lt;code&gt;~/Library/Application Support/Google/Chrome/Default/Extensions/fmkadmapgofadopljbjfkapdkoienihi/0.15.0_0&lt;/code&gt; Toolsの場合、これは次のようになります：〜/ Library / Application Support / Google / Chrome / Default / Extensions / fmkadmapgofadopljbjfkapdkoienihi / 0.15.0_0</target>
        </trans-unit>
        <trans-unit id="ad5c3f0e7c0ef6dc59fcaf76e87eec1a515227b4" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;null&lt;/code&gt; will remove the menu bar on Windows and Linux but has no effect on macOS.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; を渡すと、WindowsおよびLinuxのメニューバーが削除されますが、macOSには影響しません。</target>
        </trans-unit>
        <trans-unit id="4b65bc0f6da235ceeadaec44625db7442aff7217" translate="yes" xml:space="preserve">
          <source>Passing callbacks to the main process</source>
          <target state="translated">コールバックをメインプロセスに渡す</target>
        </trans-unit>
        <trans-unit id="a99d0e2dd062b9c5c794e56955e687db2ecf97ab" translate="yes" xml:space="preserve">
          <source>Patch Version Increments</source>
          <target state="translated">パッチバージョンの増加</target>
        </trans-unit>
        <trans-unit id="3963cdc12053af5418ae355295fd6ccd18a4d561" translate="yes" xml:space="preserve">
          <source>Patch releases</source>
          <target state="translated">パッチリリース</target>
        </trans-unit>
        <trans-unit id="0d241b0b236f4475ae94fc48a9a5dcce104fb400" translate="yes" xml:space="preserve">
          <source>Patch version change</source>
          <target state="translated">パッチのバージョン変更</target>
        </trans-unit>
        <trans-unit id="f80a8f9b768a3feb8df7ca4acf5c378a47165efb" translate="yes" xml:space="preserve">
          <source>Pauses the download.</source>
          <target state="translated">ダウンロードを一時停止します。</target>
        </trans-unit>
        <trans-unit id="443386f993dbc8a8ff5bb30ce71e28d777697096" translate="yes" xml:space="preserve">
          <source>Perform copy and paste operations on the system clipboard.</source>
          <target state="translated">システムのクリップボード上でコピー&amp;ペースト操作を行います。</target>
        </trans-unit>
        <trans-unit id="1ab65965d820e1b8eca39b19a367bfcd2c286297" translate="yes" xml:space="preserve">
          <source>Persian</source>
          <target state="translated">Persian</target>
        </trans-unit>
        <trans-unit id="4cf594f49b23917ecac391fc8d28d0d1e5b855aa" translate="yes" xml:space="preserve">
          <source>Place class properties in the following order:</source>
          <target state="translated">クラスのプロパティを以下の順番で配置します。</target>
        </trans-unit>
        <trans-unit id="af1347140163c48647d892425f4f3bc50eccee64" translate="yes" xml:space="preserve">
          <source>Place requires in the following order:</source>
          <target state="translated">場所は以下の順番でお願いします。</target>
        </trans-unit>
        <trans-unit id="042177b7cf2ecd03f1d33f5139586ccfde836561" translate="yes" xml:space="preserve">
          <source>Platform / Action Support</source>
          <target state="translated">プラットフォーム/アクションサポート</target>
        </trans-unit>
        <trans-unit id="0a6e24e9beaf32c341db1338e51395b530c05067" translate="yes" xml:space="preserve">
          <source>Platform Notices</source>
          <target state="translated">プラットフォームのお知らせ</target>
        </trans-unit>
        <trans-unit id="38b10a3fef9531f82571079e6c0973fde8c3c114" translate="yes" xml:space="preserve">
          <source>Platform Support</source>
          <target state="translated">プラットフォームサポート</target>
        </trans-unit>
        <trans-unit id="2364f85bf32088b9bba3fb1fa24b23a86d1b860d" translate="yes" xml:space="preserve">
          <source>Platform notice</source>
          <target state="translated">プラットフォームのお知らせ</target>
        </trans-unit>
        <trans-unit id="8aea3f326b0cea1fb7ceee876fb1c27718690998" translate="yes" xml:space="preserve">
          <source>Platform notices</source>
          <target state="translated">プラットフォームのお知らせ</target>
        </trans-unit>
        <trans-unit id="32e290a6a60cbaa09f402ce42bfa030da4e3c345" translate="yes" xml:space="preserve">
          <source>Play the beep sound.</source>
          <target state="translated">ビープ音を再生します。</target>
        </trans-unit>
        <trans-unit id="d7c1d9a01ad8204f5d85c6d157708d2fcbfeb87f" translate="yes" xml:space="preserve">
          <source>Playing Sounds</source>
          <target state="translated">音を奏でる</target>
        </trans-unit>
        <trans-unit id="23e9988106970ce7b3543f1f6d42c879b97c98fc" translate="yes" xml:space="preserve">
          <source>Please also ensure that your system and Python version support at least TLS 1.2. For a quick test, run the following script:</source>
          <target state="translated">また、お使いのシステムと Python のバージョンが少なくとも TLS 1.2 をサポートしていることを確認してください。簡単なテストのために、以下のスクリプトを実行します。</target>
        </trans-unit>
        <trans-unit id="a761177e083f69d01f97ca3181e94353d4e2d984" translate="yes" xml:space="preserve">
          <source>Please also ensure that your system and Python version support at least TLS 1.2. This depends on both your version of macOS and Python. For a quick test, run:</source>
          <target state="translated">また、お使いのシステムとPythonのバージョンが少なくともTLS 1.2をサポートしていることを確認してください。これはmacOSとPythonのバージョンに依存します。簡単なテストのために、実行してみてください。</target>
        </trans-unit>
        <trans-unit id="0babb3cd8cdf201644ae75713e3f2a0989a24561" translate="yes" xml:space="preserve">
          <source>Please be sure to run &lt;code&gt;npm run lint&lt;/code&gt; from time to time on any code changes to ensure that they follow the project's code style.</source>
          <target state="translated">プロジェクトのコードスタイルに従っていることを確認するために、コードの変更時には必ず &lt;code&gt;npm run lint&lt;/code&gt; を実行してください。</target>
        </trans-unit>
        <trans-unit id="48d9522bf6728cf2b89e34b109ee642a9c217a29" translate="yes" xml:space="preserve">
          <source>Please make sure that you use the documents that match your Electron version. The version number should be a part of the page URL. If it's not, you are probably using the documentation of a development branch which may contain API changes that are not compatible with your Electron version. To view older versions of the documentation, you can &lt;a href=&quot;https://github.com/electron/electron/tree/v1.4.0&quot;&gt;browse by tag&lt;/a&gt; on GitHub by opening the &quot;Switch branches/tags&quot; dropdown and selecting the tag that matches your version.</source>
          <target state="translated">Electronのバージョンと一致するドキュメントを使用していることを確認してください。バージョン番号は、ページURLの一部である必要があります。そうでない場合は、Electronのバージョンと互換性のないAPIの変更が含まれている可能性がある開発ブランチのドキュメントを使用している可能性があります。ドキュメントの古いバージョンを表示するには、「ブランチ/タグの切り替え」ドロップダウンを開き、バージョンに一致するタグを選択することで、GitHubで&lt;a href=&quot;https://github.com/electron/electron/tree/v1.4.0&quot;&gt;タグ&lt;/a&gt;で参照できます。</target>
        </trans-unit>
        <trans-unit id="c1e7b230d5ac1cd5fa7a1b20a5b2042fc585ad03" translate="yes" xml:space="preserve">
          <source>Please note that the &lt;code&gt;webview&lt;/code&gt; tag's style uses &lt;code&gt;display:flex;&lt;/code&gt; internally to ensure the child &lt;code&gt;object&lt;/code&gt; element fills the full height and width of its &lt;code&gt;webview&lt;/code&gt; container when used with traditional and flexbox layouts (since v0.36.11). Please do not overwrite the default &lt;code&gt;display:flex;&lt;/code&gt; CSS property, unless specifying &lt;code&gt;display:inline-flex;&lt;/code&gt; for inline layout.</source>
          <target state="translated">&lt;code&gt;webview&lt;/code&gt; タグのスタイルは &lt;code&gt;display:flex;&lt;/code&gt; 使用することに注意してください。子 &lt;code&gt;object&lt;/code&gt; 要素が従来のレイアウトおよびフレックスボックスレイアウトで使用されたときに &lt;code&gt;webview&lt;/code&gt; コンテナーの高さおよび幅全体を確実に埋めるため（v0.36.11以降）。デフォルトの &lt;code&gt;display:flex;&lt;/code&gt; 上書きしないでください。CSSプロパティ（ &lt;code&gt;display:inline-flex;&lt;/code&gt; を指定しない場合）インラインレイアウト用。</target>
        </trans-unit>
        <trans-unit id="088a3e6d67c0c501479c0d8618ef47460be9bc90" translate="yes" xml:space="preserve">
          <source>Please use the &lt;code&gt;sandbox&lt;/code&gt; option with care, as it is still an experimental feature. We are still not aware of the security implications of exposing some electron renderer APIs to the preload script, but here are some things to consider before rendering untrusted content:</source>
          <target state="translated">&lt;code&gt;sandbox&lt;/code&gt; オプションはまだ実験的な機能であるため、慎重に使用してください。一部のElectronレンダラーAPIをプリロードスクリプトに公開することによるセキュリティへの影響はまだ認識されていませんが、信頼できないコンテンツをレンダリングする前に考慮すべき点がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="f79a28423ed1ae0232efb54ad41227d0955084f3" translate="yes" xml:space="preserve">
          <source>Point</source>
          <target state="translated">Point</target>
        </trans-unit>
        <trans-unit id="2e7f95ae69f783b8f12ac614fc9f6c701a01a190" translate="yes" xml:space="preserve">
          <source>Point Object</source>
          <target state="translated">ポイントオブジェクト</target>
        </trans-unit>
        <trans-unit id="d011986407b1110e57283981ea38a369075023b8" translate="yes" xml:space="preserve">
          <source>Polish</source>
          <target state="translated">Polish</target>
        </trans-unit>
        <trans-unit id="b8ea4738e0718e5370704d025df3fa743832ceab" translate="yes" xml:space="preserve">
          <source>Pops up the context menu of the tray icon. When &lt;code&gt;menu&lt;/code&gt; is passed, the &lt;code&gt;menu&lt;/code&gt; will be shown instead of the tray icon's context menu.</source>
          <target state="translated">トレイアイコンのコンテキストメニューをポップアップします。場合 &lt;code&gt;menu&lt;/code&gt; 渡され、 &lt;code&gt;menu&lt;/code&gt; 代わりにトレイアイコンのコンテキストメニューの表示されます。</target>
        </trans-unit>
        <trans-unit id="d8f7694c404bee70115fa55b459203ec212d6128" translate="yes" xml:space="preserve">
          <source>Pops up this menu as a context menu in the &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この&lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;コンテキストメニューとしてポップアップします。</target>
        </trans-unit>
        <trans-unit id="23882c575954a0789bf02aba9e6dd01f539bc738" translate="yes" xml:space="preserve">
          <source>Portuguese</source>
          <target state="translated">Portuguese</target>
        </trans-unit>
        <trans-unit id="f3f91e1ec3e0ae32e56bc723e25644fbcc1e3fe2" translate="yes" xml:space="preserve">
          <source>Portuguese (Brazil)</source>
          <target state="translated">英語(ブラジル</target>
        </trans-unit>
        <trans-unit id="0210d3ef06cf7ebec67d99c9ec36bf81243fae52" translate="yes" xml:space="preserve">
          <source>Portuguese (Portugal)</source>
          <target state="translated">ポルトガル語</target>
        </trans-unit>
        <trans-unit id="b2ef221e3193ecc713338eb88d02a0cab9694e2a" translate="yes" xml:space="preserve">
          <source>Possible values:</source>
          <target state="translated">可能な値</target>
        </trans-unit>
        <trans-unit id="63a37317050caea125271af9285cd85201b4ac23" translate="yes" xml:space="preserve">
          <source>Posts &lt;code&gt;event&lt;/code&gt; as native notifications of macOS. The &lt;code&gt;userInfo&lt;/code&gt; is an Object that contains the user information dictionary sent along with the notification.</source>
          <target state="translated">macOSのネイティブ通知として &lt;code&gt;event&lt;/code&gt; を投稿します。 &lt;code&gt;userInfo&lt;/code&gt; 通知とともに送信されたユーザ情報辞書を含むオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="02dd8194ae786db94f966a924c8c4d7410b3015b" translate="yes" xml:space="preserve">
          <source>Prebuilt &lt;code&gt;clang&lt;/code&gt; will try to link to &lt;code&gt;libtinfo.so.5&lt;/code&gt;. Depending on the host architecture, symlink to appropriate &lt;code&gt;libncurses&lt;/code&gt;:</source>
          <target state="translated">ビルド済みの &lt;code&gt;clang&lt;/code&gt; は &lt;code&gt;libtinfo.so.5&lt;/code&gt; へのリンクを試みます。ホストアーキテクチャに応じて、適切な &lt;code&gt;libncurses&lt;/code&gt; へのシンボリックリンク：</target>
        </trans-unit>
        <trans-unit id="5fb051931887eb99f2dccd92e7c46b609a3e39a9" translate="yes" xml:space="preserve">
          <source>Preload</source>
          <target state="translated">Preload</target>
        </trans-unit>
        <trans-unit id="9b94153249fd46af1d00a1d29427a032ebc6409f" translate="yes" xml:space="preserve">
          <source>Prepare a Copy of Flash Plugin</source>
          <target state="translated">Flashプラグインのコピーを用意する</target>
        </trans-unit>
        <trans-unit id="96a9b7cdbe400c8b44756e76d158b85eb3370995" translate="yes" xml:space="preserve">
          <source>Preparing</source>
          <target state="translated">Preparing</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="e8168f34ea6b8cf31e7d2fcaaff5225ad4caab17" translate="yes" xml:space="preserve">
          <source>Prevents Chromium from lowering the priority of invisible pages' renderer processes.</source>
          <target state="translated">Chromiumが不可視ページのレンダラー処理の優先度を下げるのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="33ba329d953e56f8b3b25899450215e101e7c2b6" translate="yes" xml:space="preserve">
          <source>Prevents the window contents from being captured by other apps.</source>
          <target state="translated">ウィンドウの内容が他のアプリに取り込まれるのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="8bdbe869bf6b9311a87a30cce2e990ca7b2d729b" translate="yes" xml:space="preserve">
          <source>Primary value types like strings and numbers, however, are sent by copy.</source>
          <target state="translated">ただし、文字列や数字などの一次値型はコピーで送信されます。</target>
        </trans-unit>
        <trans-unit id="abf25c4b6adbc4a8ee0c4a0aacd78e8bbda63d67" translate="yes" xml:space="preserve">
          <source>PrinterInfo</source>
          <target state="translated">PrinterInfo</target>
        </trans-unit>
        <trans-unit id="ee5c861992f6a941c664d052f91ec0b0181b8991" translate="yes" xml:space="preserve">
          <source>PrinterInfo Object</source>
          <target state="translated">PrinterInfo オブジェクト</target>
        </trans-unit>
        <trans-unit id="a6afbaa1522967cc94045c3505aceafd45bc75ff" translate="yes" xml:space="preserve">
          <source>Prints &lt;code&gt;webview&lt;/code&gt;'s web page as PDF, Same as &lt;code&gt;webContents.printToPDF(options, callback)&lt;/code&gt;.</source>
          <target state="translated">印刷 &lt;code&gt;webview&lt;/code&gt; と同じPDFなどのウェブページ、 &lt;code&gt;webContents.printToPDF(options, callback)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="317538220488eb5a910ebdcfb35a09555682fb2d" translate="yes" xml:space="preserve">
          <source>Prints &lt;code&gt;webview&lt;/code&gt;'s web page. Same as &lt;code&gt;webContents.print([options])&lt;/code&gt;.</source>
          <target state="translated">印刷 &lt;code&gt;webview&lt;/code&gt; のWebページを。 &lt;code&gt;webContents.print([options])&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="8d52de956a256a75cc2e7d421b8d9d6c31e5d286" translate="yes" xml:space="preserve">
          <source>Prints Chrome's internal logging to the console.</source>
          <target state="translated">Chrome の内部ログをコンソールに出力します。</target>
        </trans-unit>
        <trans-unit id="369a9fed0ccc77eec2fb3928b8f6b176f3479500" translate="yes" xml:space="preserve">
          <source>Prints Chromium's logging into console.</source>
          <target state="translated">Chromiumのコンソールへのログインを印刷します。</target>
        </trans-unit>
        <trans-unit id="389e6dc0b768ba8f062f3063f5898912d1f3bf7b" translate="yes" xml:space="preserve">
          <source>Prints the stack trace to the console when Electron crashes.</source>
          <target state="translated">Electronがクラッシュしたときにスタックトレースをコンソールに出力します。</target>
        </trans-unit>
        <trans-unit id="05e502c39854c52e50ec88a0a458fc96dfc210c6" translate="yes" xml:space="preserve">
          <source>Prints window's web page as PDF with Chromium's preview printing custom settings.</source>
          <target state="translated">Chromiumのプレビュー印刷カスタム設定で、ウィンドウのWebページをPDFとして印刷します。</target>
        </trans-unit>
        <trans-unit id="23bcf1f2fd4149bc3867161b9396ffaff448056c" translate="yes" xml:space="preserve">
          <source>Prints window's web page. When &lt;code&gt;silent&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, Electron will pick the system's default printer if &lt;code&gt;deviceName&lt;/code&gt; is empty and the default settings for printing.</source>
          <target state="translated">ウィンドウのWebページを印刷します。ときに &lt;code&gt;silent&lt;/code&gt; に設定されている &lt;code&gt;true&lt;/code&gt; 場合、電子は、システムのデフォルトプリンタを選択します &lt;code&gt;deviceName&lt;/code&gt; 空で、印刷するためのデフォルト設定。</target>
        </trans-unit>
        <trans-unit id="098c331fcfda0dc457987614db8d0cb06b6707ea" translate="yes" xml:space="preserve">
          <source>Process Object</source>
          <target state="translated">プロセスオブジェクト</target>
        </trans-unit>
        <trans-unit id="717a4cbe5c68565fd57f8a35f4d678ea6b5fd71e" translate="yes" xml:space="preserve">
          <source>Process: &lt;a href=&quot;../glossary#main-process&quot;&gt;Main&lt;/a&gt;</source>
          <target state="translated">プロセス：&lt;a href=&quot;../glossary#main-process&quot;&gt;メイン&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="368e6fb7706d4fd2a70ab7c53be5e425a4b7d120" translate="yes" xml:space="preserve">
          <source>Process: &lt;a href=&quot;../glossary#main-process&quot;&gt;Main&lt;/a&gt;, &lt;a href=&quot;../glossary#renderer-process&quot;&gt;Renderer&lt;/a&gt;</source>
          <target state="translated">プロセス：&lt;a href=&quot;../glossary#main-process&quot;&gt;メイン&lt;/a&gt;、&lt;a href=&quot;../glossary#renderer-process&quot;&gt;レンダラー&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b8acb27e9b7462b1e3013f3e4e6c9f1b84602dc" translate="yes" xml:space="preserve">
          <source>Process: &lt;a href=&quot;../glossary#renderer-process&quot;&gt;Renderer&lt;/a&gt;</source>
          <target state="translated">プロセス：&lt;a href=&quot;../glossary#renderer-process&quot;&gt;レンダラー&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e754dd126184a1dcc8f9da34fb1e447a007456e" translate="yes" xml:space="preserve">
          <source>Process: &lt;a href=&quot;../tutorial/quick-start#main-process&quot;&gt;Main&lt;/a&gt;</source>
          <target state="translated">プロセス：&lt;a href=&quot;../tutorial/quick-start#main-process&quot;&gt;メイン&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f888ccdec8c9224a350d6738aec2401071ff29b6" translate="yes" xml:space="preserve">
          <source>Process: &lt;a href=&quot;../tutorial/quick-start#renderer-process&quot;&gt;Renderer&lt;/a&gt;</source>
          <target state="translated">プロセス：&lt;a href=&quot;../tutorial/quick-start#renderer-process&quot;&gt;レンダラー&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b9010e7b7912542b080685f7901930e084a4879" translate="yes" xml:space="preserve">
          <source>ProcessMetric</source>
          <target state="translated">ProcessMetric</target>
        </trans-unit>
        <trans-unit id="ed6284d13129b6e4961cd97cd0c98caae7ecbee6" translate="yes" xml:space="preserve">
          <source>ProcessMetric Object</source>
          <target state="translated">プロセスメトリックオブジェクト</target>
        </trans-unit>
        <trans-unit id="ed7308bb59f2876220e45299939d241199595df2" translate="yes" xml:space="preserve">
          <source>Processes</source>
          <target state="translated">Processes</target>
        </trans-unit>
        <trans-unit id="3d0acdfa0f2bb50113a1acdde2c73649dc676ba0" translate="yes" xml:space="preserve">
          <source>Production Variables</source>
          <target state="translated">生産変数</target>
        </trans-unit>
        <trans-unit id="151fcb771556728ca2f9f2085e8378e1e5453822" translate="yes" xml:space="preserve">
          <source>Progress Bar</source>
          <target state="translated">プログレスバー</target>
        </trans-unit>
        <trans-unit id="fc575e5724e3b513946e86d3e2bd30ce4c1c0864" translate="yes" xml:space="preserve">
          <source>Progress Bar in Taskbar (Windows, macOS, Unity)</source>
          <target state="translated">タスクバーのプログレスバー(Windows、macOS、Unity</target>
        </trans-unit>
        <trans-unit id="9322f459f71bfa8fc91038412dbbbab584fbfb4e" translate="yes" xml:space="preserve">
          <source>Promote beta to stable</source>
          <target state="translated">ベータを安定させる</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="153a2b1eab9a64675a1cdcd42c45812dca52cfa5" translate="yes" xml:space="preserve">
          <source>Providing empty credentials will cancel the request and report an authentication error on the response object:</source>
          <target state="translated">空の認証情報を提供するとリクエストはキャンセルされ、レスポンスオブジェクトに認証エラーが報告されます。</target>
        </trans-unit>
        <trans-unit id="9db0b745b6fa2951c35528cc5a431b74d851a2e8" translate="yes" xml:space="preserve">
          <source>Proxies</source>
          <target state="translated">Proxies</target>
        </trans-unit>
        <trans-unit id="f4ac133b3346381334e7a22465bb1271a3e71cd6" translate="yes" xml:space="preserve">
          <source>Publish the release</source>
          <target state="translated">リリースを公開する</target>
        </trans-unit>
        <trans-unit id="df47c135a9d6b7a1ecf29d4ba2266301243bf2e1" translate="yes" xml:space="preserve">
          <source>Publish the release to npm.</source>
          <target state="translated">リリースをnpmに公開します。</target>
        </trans-unit>
        <trans-unit id="b1aa195e794b4f66b923622c595d29c04615285a" translate="yes" xml:space="preserve">
          <source>Publish to npm</source>
          <target state="translated">npmへの公開</target>
        </trans-unit>
        <trans-unit id="30ab8d084e2209d47a1dc198c8de1e251f390a94" translate="yes" xml:space="preserve">
          <source>Pull Requests</source>
          <target state="translated">プルリクエスト</target>
        </trans-unit>
        <trans-unit id="f1ce36bbabe07bdb27688021c4ac478fd9f25821" translate="yes" xml:space="preserve">
          <source>Punctuations like &lt;code&gt;~&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;$&lt;/code&gt;, etc.</source>
          <target state="translated">以下のような句読点 &lt;code&gt;~&lt;/code&gt; 、 &lt;code&gt;!&lt;/code&gt; 、 &lt;code&gt;@&lt;/code&gt; 、 &lt;code&gt;#&lt;/code&gt; 、 &lt;code&gt;$&lt;/code&gt; など</target>
        </trans-unit>
        <trans-unit id="feaafc60ba98d7e0fbce4f0362fd6da7774b94b5" translate="yes" xml:space="preserve">
          <source>Punjabi</source>
          <target state="translated">Punjabi</target>
        </trans-unit>
        <trans-unit id="7a68ba00f0b9b96745538ec2779f1b225962491f" translate="yes" xml:space="preserve">
          <source>Push changes to submodule reference</source>
          <target state="translated">サブモジュールの参照に変更をプッシュ</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">Python</target>
        </trans-unit>
        <trans-unit id="e5753a9b59b38e69823f51414bf66f9f68ba9622" translate="yes" xml:space="preserve">
          <source>Python 2.7</source>
          <target state="translated">Python 2.7</target>
        </trans-unit>
        <trans-unit id="f303c43bd4a5c1f9956036901345d403602cc40a" translate="yes" xml:space="preserve">
          <source>Python 2.7 with support for TLS 1.2</source>
          <target state="translated">TLS 1.2をサポートしたPython 2.7</target>
        </trans-unit>
        <trans-unit id="4a79a1115c19d6bf73cc5cfa9736c31adc4253ed" translate="yes" xml:space="preserve">
          <source>Python 2.7.x. Some distributions like CentOS 6.x still use Python 2.6.x so you may need to check your Python version with &lt;code&gt;python -V&lt;/code&gt;.</source>
          <target state="translated">Python2.7.x。CentOS 6.xなどの一部のディストリビューションでは引き続きPython 2.6.xを使用しているため、 &lt;code&gt;python -V&lt;/code&gt; を使用してPythonのバージョンを確認する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="2307d71ee74acad008353c63cf8b4e73a00950b1" translate="yes" xml:space="preserve">
          <source>Quechua</source>
          <target state="translated">Quechua</target>
        </trans-unit>
        <trans-unit id="5be69e949cb2acc68e23b5073aa0d68a64a9a965" translate="yes" xml:space="preserve">
          <source>Query and modify a session's cookies.</source>
          <target state="translated">セッションのクッキーを照会し、変更します。</target>
        </trans-unit>
        <trans-unit id="455083cac2ae96eabe3895762b6080aa09e6afa4" translate="yes" xml:space="preserve">
          <source>Quick Start</source>
          <target state="translated">クイックスタート</target>
        </trans-unit>
        <trans-unit id="91a30c67baa4915d60aa61550dedd8da8458c4f3" translate="yes" xml:space="preserve">
          <source>Quiet Hours / Presentation Mode</source>
          <target state="translated">静止時間/プレゼンテーションモード</target>
        </trans-unit>
        <trans-unit id="daafa9b6d6f23a76fa0a90163a85988bb55fe736" translate="yes" xml:space="preserve">
          <source>RC2 - &lt;a href=&quot;https://tools.ietf.org/html/rfc2268&quot;&gt;RFC 2268&lt;/a&gt;</source>
          <target state="translated">RC2- &lt;a href=&quot;https://tools.ietf.org/html/rfc2268&quot;&gt;RFC 2268&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="644659bb059b859b7d9e66d791fb21bea7adc199" translate="yes" xml:space="preserve">
          <source>RC4 - &lt;a href=&quot;https://tools.ietf.org/html/rfc4345&quot;&gt;RFC 4345&lt;/a&gt;</source>
          <target state="translated">RC4- &lt;a href=&quot;https://tools.ietf.org/html/rfc4345&quot;&gt;RFC 4345&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08b00831200706ca933fc1e50c17317060c8cdcc" translate="yes" xml:space="preserve">
          <source>RC5 - &lt;a href=&quot;http://people.csail.mit.edu/rivest/Rivest-rc5rev.pdf&quot;&gt;http://people.csail.mit.edu/rivest/Rivest-rc5rev.pdf&lt;/a&gt;</source>
          <target state="translated">RC5- &lt;a href=&quot;http://people.csail.mit.edu/rivest/Rivest-rc5rev.pdf&quot;&gt;http://people.csail.mit.edu/rivest/Rivest-rc5rev.pdf&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="73775a59948e85039bd898e23e868a9ee126c00f" translate="yes" xml:space="preserve">
          <source>REPL</source>
          <target state="translated">REPL</target>
        </trans-unit>
        <trans-unit id="c3836c1a777fd28d3905c75f7143440ae8f0dad5" translate="yes" xml:space="preserve">
          <source>RIPEMD - &lt;a href=&quot;https://webstore.ansi.org/RecordDetail.aspx?sku=ISO%2FIEC%2010118-3:2004&quot;&gt;ISO/IEC 10118-3&lt;/a&gt;</source>
          <target state="translated">RIPEMD- &lt;a href=&quot;https://webstore.ansi.org/RecordDetail.aspx?sku=ISO%2FIEC%2010118-3:2004&quot;&gt;ISO / IEC 10118-3&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5aa1eabfd92c1a7e53e1ddffc2f5cfcba43caa10" translate="yes" xml:space="preserve">
          <source>RSA - &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447&quot;&gt;RFC 3447&lt;/a&gt;</source>
          <target state="translated">RSA- &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447&quot;&gt;RFC 3447&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09f5bc6c29b43ce1bddc8842a9f10b3c7bc1d465" translate="yes" xml:space="preserve">
          <source>Re-apply our commits from the previous version of node we were using (&lt;code&gt;vY.Y.Y&lt;/code&gt;) to &lt;code&gt;v.X.X.X&lt;/code&gt;</source>
          <target state="translated">使用していた以前のバージョンのノード（ &lt;code&gt;vY.Y.Y&lt;/code&gt; ）からの &lt;code&gt;v.X.X.X&lt;/code&gt; をvXXXに再適用します。</target>
        </trans-unit>
        <trans-unit id="0b8d9d4504138b82d751a5f283a8095308246310" translate="yes" xml:space="preserve">
          <source>React Developer Tools</source>
          <target state="translated">React デベロッパーツール</target>
        </trans-unit>
        <trans-unit id="14b03aa9844af44df8d8d191fa1ab1b1abcab51a" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;patches/v8/README.md&lt;/code&gt; to see which patchfiles came from the previous version of V8 and therefore need to be removed.</source>
          <target state="translated">読む &lt;code&gt;patches/v8/README.md&lt;/code&gt; PATCHFILESはV8の以前のバージョンから来たので、除去する必要があるかを確認します。</target>
        </trans-unit>
        <trans-unit id="538de3cf371599ad0e8f2db393721015612f6b7e" translate="yes" xml:space="preserve">
          <source>Read a file in the &lt;code&gt;asar&lt;/code&gt; archive:</source>
          <target state="translated">&lt;code&gt;asar&lt;/code&gt; アーカイブ内のファイルを読み取ります。</target>
        </trans-unit>
        <trans-unit id="2577ab3462ca24a2f95836946b10de199868dda0" translate="yes" xml:space="preserve">
          <source>Read on to learn more about the contributors and releases of Electron or get started building with Electron in the &lt;a href=&quot;quick-start&quot;&gt;Quick Start Guide&lt;/a&gt;.</source>
          <target state="translated">Electronのコントリビューターとリリースの詳細について読むか、&lt;a href=&quot;quick-start&quot;&gt;クイックスタートガイド&lt;/a&gt;でElectronの構築を開始してください。</target>
        </trans-unit>
        <trans-unit id="6587d703242bd4f420cfe4d4a60f26b78c44559e" translate="yes" xml:space="preserve">
          <source>Read-Eval-Print-Loop (REPL) is a simple, interactive computer programming environment that takes single user inputs (i.e. single expressions), evaluates them, and returns the result to the user.</source>
          <target state="translated">Read-Eval-Print-Loop (REPL)は、単一のユーザー入力(すなわち単一の式)を受け取り、それらを評価し、その結果をユーザーに返すシンプルでインタラクティブなコンピュータ・プログラミング環境です。</target>
        </trans-unit>
        <trans-unit id="289806dd8208404bcdeae0ecffb9418fdf178d01" translate="yes" xml:space="preserve">
          <source>Rebranding by Rebuilding Electron from Source</source>
          <target state="translated">電子をソースから再構築してリブランディング</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
