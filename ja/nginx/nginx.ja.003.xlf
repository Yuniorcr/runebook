<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="nginx">
    <body>
      <group id="nginx">
        <trans-unit id="21e265174a9c7ab8309e97cd2e88bf8e237ebfb4" translate="yes" xml:space="preserve">
          <source>In nginx an HTTP response is produced by sending the response header followed by the optional response body. Both header and body are passed through a chain of filters and eventually get written to the client socket. An nginx module can install its handler into the header or body filter chain and process the output coming from the previous handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb39089e2299bbb96d84437e9309d82e17adec7f" translate="yes" xml:space="preserve">
          <source>In order for NTLM authentication to work, it is necessary to enable keepalive connections to upstream servers. The &lt;a href=&quot;ngx_http_proxy_module#proxy_http_version&quot;&gt;proxy_http_version&lt;/a&gt; directive should be set to &amp;ldquo;&lt;code&gt;1.1&lt;/code&gt;&amp;rdquo; and the &amp;ldquo;Connection&amp;rdquo; header field should be cleared:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d894d9e83a7d26ab434a03a7226f576691376802" translate="yes" xml:space="preserve">
          <source>In order for Perl to recompile the modified modules during reconfiguration, it should be built with the &lt;code&gt;-Dusemultiplicity=yes&lt;/code&gt; or &lt;code&gt;-Dusethreads=yes&lt;/code&gt; parameters. Also, to make Perl leak less memory at run time, it should be built with the &lt;code&gt;-Dusemymalloc=no&lt;/code&gt; parameter. To check the values of these parameters in an already built Perl (preferred values are specified in the example), run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32932950e5f849bf2f45d63930164523a0e7c33f" translate="yes" xml:space="preserve">
          <source>In order for a subrequest to return the required range, the &lt;code&gt;$slice_range&lt;/code&gt; variable should be &lt;a href=&quot;ngx_http_proxy_module#proxy_set_header&quot;&gt;passed&lt;/a&gt; to the proxied server as the &lt;code&gt;Range&lt;/code&gt; request header field. If &lt;a href=&quot;ngx_http_proxy_module#proxy_cache&quot;&gt;caching&lt;/a&gt; is enabled, &lt;code&gt;$slice_range&lt;/code&gt; should be added to the &lt;a href=&quot;ngx_http_proxy_module#proxy_cache_key&quot;&gt;cache key&lt;/a&gt; and caching of responses with 206 status code should be &lt;a href=&quot;ngx_http_proxy_module#proxy_cache_valid&quot;&gt;enabled&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a6732083c63116f0aeb286b9ce41edcd9d88fd" translate="yes" xml:space="preserve">
          <source>In order for nginx to re-read the configuration file, a HUP signal should be sent to the master process. The master process first checks the syntax validity, then tries to apply new configuration, that is, to open log files and new listen sockets. If this fails, it rolls back changes and continues to work with old configuration. If this succeeds, it starts new worker processes, and sends messages to old worker processes requesting them to shut down gracefully. Old worker processes close listen sockets and continue to service old clients. After all clients are serviced, old worker processes are shut down.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc8191883ef822a655f33f3e279582f45e9ad34" translate="yes" xml:space="preserve">
          <source>In order for the &lt;code&gt;resolve&lt;/code&gt; parameter to work, the &lt;a href=&quot;ngx_stream_core_module#resolver&quot;&gt;resolver&lt;/a&gt; directive must be specified in the &lt;a href=&quot;ngx_stream_core_module#stream&quot;&gt;stream&lt;/a&gt; block. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df63a27480305d15d5c14524f511e3f71f54899" translate="yes" xml:space="preserve">
          <source>In order for this parameter to work, it is usually necessary to run nginx worker processes with the &lt;a href=&quot;../ngx_core_module#user&quot;&gt;superuser&lt;/a&gt; privileges. On Linux it is not required (1.13.8) as if the &lt;code&gt;transparent&lt;/code&gt; parameter is specified, worker processes inherit the &lt;code&gt;CAP_NET_RAW&lt;/code&gt; capability from the master process. It is also necessary to configure kernel routing table to intercept network traffic from the FastCGI server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce65969e1cdf3f2b4302fb4c22caa2c32a900c49" translate="yes" xml:space="preserve">
          <source>In order for this parameter to work, it is usually necessary to run nginx worker processes with the &lt;a href=&quot;../ngx_core_module#user&quot;&gt;superuser&lt;/a&gt; privileges. On Linux it is not required (1.13.8) as if the &lt;code&gt;transparent&lt;/code&gt; parameter is specified, worker processes inherit the &lt;code&gt;CAP_NET_RAW&lt;/code&gt; capability from the master process. It is also necessary to configure kernel routing table to intercept network traffic from the SCGI server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb68a7bdaf1ffd5b0cca11269798ca9e55878164" translate="yes" xml:space="preserve">
          <source>In order for this parameter to work, it is usually necessary to run nginx worker processes with the &lt;a href=&quot;../ngx_core_module#user&quot;&gt;superuser&lt;/a&gt; privileges. On Linux it is not required (1.13.8) as if the &lt;code&gt;transparent&lt;/code&gt; parameter is specified, worker processes inherit the &lt;code&gt;CAP_NET_RAW&lt;/code&gt; capability from the master process. It is also necessary to configure kernel routing table to intercept network traffic from the memcached server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee08ad7e21475bb73ffb352c331d9a00e82e0e5" translate="yes" xml:space="preserve">
          <source>In order for this parameter to work, it is usually necessary to run nginx worker processes with the &lt;a href=&quot;../ngx_core_module#user&quot;&gt;superuser&lt;/a&gt; privileges. On Linux it is not required (1.13.8) as if the &lt;code&gt;transparent&lt;/code&gt; parameter is specified, worker processes inherit the &lt;code&gt;CAP_NET_RAW&lt;/code&gt; capability from the master process. It is also necessary to configure kernel routing table to intercept network traffic from the proxied server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e630baac52154bdac982c02089151f967c587235" translate="yes" xml:space="preserve">
          <source>In order for this parameter to work, it is usually necessary to run nginx worker processes with the &lt;a href=&quot;../ngx_core_module#user&quot;&gt;superuser&lt;/a&gt; privileges. On Linux it is not required (1.13.8) as if the &lt;code&gt;transparent&lt;/code&gt; parameter is specified, worker processes inherit the &lt;code&gt;CAP_NET_RAW&lt;/code&gt; capability from the master process. It is also necessary to configure kernel routing table to intercept network traffic from the uwsgi server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1211a85b3f3a44af85e0548a3f991aff89e3bb" translate="yes" xml:space="preserve">
          <source>In order for this parameter to work, it is usually necessary to run nginx worker processes with the &lt;a href=&quot;../ngx_core_module#user&quot;&gt;superuser&lt;/a&gt; privileges. On Linux it is not required as if the &lt;code&gt;transparent&lt;/code&gt; parameter is specified, worker processes inherit the &lt;code&gt;CAP_NET_RAW&lt;/code&gt; capability from the master process. It is also necessary to configure kernel routing table to intercept network traffic from the gRPC server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0339426ab3a3b01999e91aa74f055c021fadaa" translate="yes" xml:space="preserve">
          <source>In order for this parameter to work, the &lt;a href=&quot;ngx_http_core_module#resolver&quot;&gt;resolver&lt;/a&gt; directive must be specified in the &lt;a href=&quot;ngx_http_core_module#http&quot;&gt;http&lt;/a&gt; block. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91452076ae50e92bfa25907603030bd31d1f7f4" translate="yes" xml:space="preserve">
          <source>In order for this parameter to work, the &lt;a href=&quot;ngx_stream_core_module#resolver&quot;&gt;resolver&lt;/a&gt; directive must be specified in the &lt;a href=&quot;ngx_stream_core_module#stream&quot;&gt;stream&lt;/a&gt; block. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7234ee35927ab215b81c4f9622ec54bd44925da" translate="yes" xml:space="preserve">
          <source>In order to rotate log files, they need to be renamed first. After that USR1 signal should be sent to the master process. The master process will then re-open all currently open log files and assign them an unprivileged user under which the worker processes are running, as an owner. After successful re-opening, the master process closes all open files and sends the message to worker process to ask them to re-open files. Worker processes also open new files and close old files right away. As a result, old files are almost immediately available for post processing, such as compression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea6f78ed3c06e6cb78999961b866128b70036fc8" translate="yes" xml:space="preserve">
          <source>In order to upgrade the server executable, the new executable file should be put in place of an old file first. After that USR2 signal should be sent to the master process. The master process first renames its file with the process ID to a new file with the &lt;code&gt;.oldbin&lt;/code&gt; suffix, e.g. &lt;code&gt;/usr/local/nginx/logs/nginx.pid.oldbin&lt;/code&gt;, then starts a new executable file that in turn starts new worker processes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c1a639266e38a12737ca58557ff92b0202fcb0" translate="yes" xml:space="preserve">
          <source>In order to use SNI in nginx, it must be supported in both the OpenSSL library with which the nginx binary has been built as well as the library to which it is being dynamically linked at run time. OpenSSL supports SNI since 0.9.8f version if it was built with config option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190be725c0cd512ac4257379a00ec488657027d5" translate="yes" xml:space="preserve">
          <source>In some cases, the part of a request URI to be replaced cannot be determined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a588e840b01b89cf4873fd7325ac33f2ebd75e2c" translate="yes" xml:space="preserve">
          <source>In such a case, all possible values of a variable need to be present in the configuration at least once in the form of the &lt;a href=&quot;#charset_map&quot;&gt;charset_map&lt;/a&gt;, &lt;a href=&quot;#charset&quot;&gt;charset&lt;/a&gt;, or &lt;a href=&quot;#source_charset&quot;&gt;source_charset&lt;/a&gt; directives. For &lt;code&gt;utf-8&lt;/code&gt;, &lt;code&gt;windows-1251&lt;/code&gt;, and &lt;code&gt;koi8-r&lt;/code&gt; charsets, it is sufficient to include the files &lt;code&gt;conf/koi-win&lt;/code&gt;, &lt;code&gt;conf/koi-utf&lt;/code&gt;, and &lt;code&gt;conf/win-utf&lt;/code&gt; into configuration. For other charsets, simply making a fictitious conversion table works, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74cbeeec525e150d7f36ab7cc2b9e16fcfc9e1c" translate="yes" xml:space="preserve">
          <source>In such a case, first try to set &lt;a href=&quot;ngx_http_core_module#server_names_hash_max_size&quot;&gt;server_names_hash_max_size&lt;/a&gt; to a number close to the number of server names. Only if this does not help, or if nginx&amp;rsquo;s start time is unacceptably long, try to increase &lt;a href=&quot;ngx_http_core_module#server_names_hash_bucket_size&quot;&gt;server_names_hash_bucket_size&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe146824fe7250619f45417c5989f9770680868" translate="yes" xml:space="preserve">
          <source>In the event that all threads in the pool are busy, a new task will wait in the queue. The &lt;code&gt;max_queue&lt;/code&gt; parameter limits the number of tasks allowed to be waiting in the queue. By default, up to 65536 tasks can wait in the queue. When the queue overflows, the task is completed with an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed10351510576744b588e4d6421d7c07b4fa63d" translate="yes" xml:space="preserve">
          <source>In the example above, there are 3 instances of the same application running on srv1-srv3. When the load balancing method is not specifically configured, it defaults to round-robin. All requests are &lt;a href=&quot;ngx_http_proxy_module#proxy_pass&quot;&gt; proxied&lt;/a&gt; to the server group myapp1, and nginx applies HTTP load balancing to distribute the requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc7578672b2c9f7e2d1ac6dc8446487d225c686" translate="yes" xml:space="preserve">
          <source>In the example, the upstream server creates a session by setting the cookie &amp;ldquo;&lt;code&gt;EXAMPLECOOKIE&lt;/code&gt;&amp;rdquo; in the response. Further requests with this cookie will be passed to the same server. If the server cannot process the request, the new server is selected as if the client has not been bound yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8432fba576fbc6a638e49f2488a4d75819d819c" translate="yes" xml:space="preserve">
          <source>In the examples above, the server weights are not configured which means that all specified servers are treated as equally qualified for a particular load balancing method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb611f6b423de2f1dcd866a6885561409036ae9" translate="yes" xml:space="preserve">
          <source>In the first case, the best is to use &lt;a href=&quot;#http_subrequests&quot;&gt;subrequests API&lt;/a&gt;. Instead of directly accessing external service, you declare a location in nginx configuration and direct your subrequest to this location. This location is not limited to &lt;a href=&quot;../http/ngx_http_proxy_module#proxy_pass&quot;&gt;proxying&lt;/a&gt; requests, but may contain other nginx directives. An example of such approach is the &lt;a href=&quot;../http/ngx_http_auth_request_module#auth_request&quot;&gt;auth_request&lt;/a&gt; directive implemented in &lt;a href=&quot;http://hg.nginx.org/nginx/file/tip/src/http/modules/ngx_http_auth_request_module.c&quot;&gt;ngx_http_auth_request module&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f00c733671a04000a05bf717e25acf161719f5a" translate="yes" xml:space="preserve">
          <source>In the following example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d5404d38c293b8436ec353e3b2c1e5d349b8c3" translate="yes" xml:space="preserve">
          <source>In the modern nginx versions variables &lt;a href=&quot;ngx_http_core_module#var_status&quot;&gt;$status&lt;/a&gt; (1.3.2, 1.2.2), &lt;a href=&quot;ngx_http_core_module#var_bytes_sent&quot;&gt;$bytes_sent&lt;/a&gt; (1.3.8, 1.2.5), &lt;a href=&quot;ngx_http_core_module#var_connection&quot;&gt;$connection&lt;/a&gt; (1.3.8, 1.2.5), &lt;a href=&quot;ngx_http_core_module#var_connection_requests&quot;&gt;$connection_requests&lt;/a&gt; (1.3.8, 1.2.5), &lt;a href=&quot;ngx_http_core_module#var_msec&quot;&gt;$msec&lt;/a&gt; (1.3.9, 1.2.6), &lt;a href=&quot;ngx_http_core_module#var_request_time&quot;&gt;$request_time&lt;/a&gt; (1.3.9, 1.2.6), &lt;a href=&quot;ngx_http_core_module#var_pipe&quot;&gt;$pipe&lt;/a&gt; (1.3.12, 1.2.7), &lt;a href=&quot;ngx_http_core_module#var_request_length&quot;&gt;$request_length&lt;/a&gt; (1.3.12, 1.2.7), &lt;a href=&quot;ngx_http_core_module#var_time_iso8601&quot;&gt;$time_iso8601&lt;/a&gt; (1.3.12, 1.2.7), and &lt;a href=&quot;ngx_http_core_module#var_time_local&quot;&gt;$time_local&lt;/a&gt; (1.3.12, 1.2.7) are also available as common variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de96290f7f64baf89fe5d7c5924ef047a16b051" translate="yes" xml:space="preserve">
          <source>In these cases, &lt;code&gt;proxy_pass&lt;/code&gt; should be specified without a URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d691c21ced9a1760582c70fb335d364b99ae56" translate="yes" xml:space="preserve">
          <source>In this case, by default, the response code 302 is returned to the client. It can only be changed to one of the redirect status codes (301, 302, 303, 307, and 308).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02d27f8126b68d3f00ef1cfdef042eabaf3e0a0" translate="yes" xml:space="preserve">
          <source>In this case, if URI is specified in the directive, it is passed to the server as is, replacing the original request URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b766946bfbabe9bd74304bf4901eb2f1d8481c09" translate="yes" xml:space="preserve">
          <source>In this case, the URI specified in the directive is ignored and the full changed request URI is passed to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9647ac737aabc51e20dad37f39bb76df4a020dfd" translate="yes" xml:space="preserve">
          <source>In this case, the absence of ICMP &amp;ldquo;&lt;code&gt;Destination Unreachable&lt;/code&gt;&amp;rdquo; message is expected in reply to the sent string &amp;ldquo;&lt;code&gt;nginx health check&lt;/code&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8feff15f970e5b3db6be7fadf081e59bf5a87c05" translate="yes" xml:space="preserve">
          <source>In this case, the directive value should be increased to the next power of two:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc8e46485e8c4b1c10e390c0123cff84a29090d" translate="yes" xml:space="preserve">
          <source>In this case, the server name is searched among the described &lt;a href=&quot;ngx_stream_upstream_module&quot;&gt;server groups&lt;/a&gt;, and, if not found, is determined using a &lt;a href=&quot;ngx_stream_core_module#resolver&quot;&gt;resolver&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c87a59f397d3247d9616de1eca261f2236eb283" translate="yes" xml:space="preserve">
          <source>In this case, the value of the &amp;ldquo;&lt;code&gt;srv_id&lt;/code&gt;&amp;rdquo; cookie will be either &lt;code&gt;&lt;i&gt;a&lt;/i&gt;&lt;/code&gt; or &lt;code&gt;&lt;i&gt;b&lt;/i&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c3b55e4db584bc6d9c96832ec34c5895cf40d3" translate="yes" xml:space="preserve">
          <source>In this configuration nginx tests only the request&amp;rsquo;s header field &amp;ldquo;Host&amp;rdquo; to determine which server the request should be routed to. If its value does not match any server name, or the request does not contain this header field at all, then nginx will route the request to the default server for this port. In the configuration above, the default server is the first one &amp;mdash; which is nginx&amp;rsquo;s standard default behaviour. It can also be set explicitly which server should be default, with the &lt;code&gt;default_server&lt;/code&gt; parameter in the &lt;a href=&quot;ngx_http_core_module#listen&quot;&gt;listen&lt;/a&gt; directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba7d987bfefa06e58f923f334f4d7028fa1372d" translate="yes" xml:space="preserve">
          <source>In this configuration, &lt;code&gt;sendfile()&lt;/code&gt; is called with the &lt;code&gt;SF_NODISKIO&lt;/code&gt; flag which causes it not to block on disk I/O, but, instead, report back that the data are not in memory. nginx then initiates an asynchronous data load by reading one byte. On the first read, the FreeBSD kernel loads the first 128K bytes of a file into memory, although next reads will only load data in 16K chunks. This can be changed using the &lt;a href=&quot;#read_ahead&quot;&gt;read_ahead&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b535bf4526e82cf4d779b56b719f3b745097d7" translate="yes" xml:space="preserve">
          <source>In this configuration, nginx first tests the IP address and port of the request against the &lt;a href=&quot;ngx_http_core_module#listen&quot;&gt;listen&lt;/a&gt; directives of the &lt;a href=&quot;ngx_http_core_module#server&quot;&gt;server&lt;/a&gt; blocks. It then tests the &amp;ldquo;Host&amp;rdquo; header field of the request against the &lt;a href=&quot;ngx_http_core_module#server_name&quot;&gt;server_name&lt;/a&gt; entries of the &lt;a href=&quot;ngx_http_core_module#server&quot;&gt;server&lt;/a&gt; blocks that matched the IP address and port. If the server name is not found, the request will be processed by the default server. For example, a request for &lt;code&gt;www.example.com&lt;/code&gt; received on the 192.168.1.1:80 port will be handled by the default server of the 192.168.1.1:80 port, i.e., by the first server, since there is no &lt;code&gt;www.example.com&lt;/code&gt; defined for this port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86330969c97e7c379c3409d48f2519dcdf158c92" translate="yes" xml:space="preserve">
          <source>In this example the subject (&amp;ldquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5396964e2a59202fdc11c4214cc42ec19227bc98" translate="yes" xml:space="preserve">
          <source>In this example, the response is split into 1-megabyte cacheable slices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6695cf724b2ff9cef71a3fb9ed7cf4e1abc1621a" translate="yes" xml:space="preserve">
          <source>In versions 1.7.3, 1.7.7, and 1.11.10 cache header format has been changed. Previously cached responses will be considered invalid after upgrading to a newer nginx version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bf53ed48bc0948bbc95e42025e2f40bc151459" translate="yes" xml:space="preserve">
          <source>In versions from 0.7.1 to 0.8.41, if a request matched the prefix location without the &amp;ldquo;&lt;code&gt;=&lt;/code&gt;&amp;rdquo; and &amp;ldquo;&lt;code&gt;^~&lt;/code&gt;&amp;rdquo; modifiers, the search also terminated and regular expressions were not checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec0c1acdbf96fff02aaf8aa772ba758d08e5bcd" translate="yes" xml:space="preserve">
          <source>In versions prior to 0.8.21 this parameter is named simply &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae2a5617793ebeb79d0fb7d09c86c57b8dff6a1" translate="yes" xml:space="preserve">
          <source>In versions prior to 0.8.21, they could only be specified in the &lt;code&gt;listen&lt;/code&gt; directive together with the &lt;code&gt;default&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2ffefd4d857e4c3928db6f5124c4730bbaac59" translate="yes" xml:space="preserve">
          <source>In versions prior to 1.5.9, responses in SPDY connections could not be &lt;a href=&quot;ngx_http_core_module#limit_rate&quot;&gt;rate limited&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5314bb88ef4033cb43b5d6a3c94437e5b7f585" translate="yes" xml:space="preserve">
          <source>In versions prior to 1.7.5, the directive syntax required an arbitrary argument, for example, &amp;ldquo;&lt;code&gt;stub_status on&lt;/code&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f7ec1b2fe01ad3c188feb12a4b15b6ea7487a3d" translate="yes" xml:space="preserve">
          <source>Inappropriate use of this option may have its security &lt;a href=&quot;http://man7.org/linux/man-pages/man7/socket.7.html&quot;&gt;implications&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05e5f0322faba479f0f3c37cf7e2e6f8e866b7e" translate="yes" xml:space="preserve">
          <source>Include files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9045983cbdbf806a171a94a2f52af7b16e1e1876" translate="yes" xml:space="preserve">
          <source>Includes another &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt;, or files matching the specified &lt;code&gt;&lt;i&gt;mask&lt;/i&gt;&lt;/code&gt;, into configuration. Included files should consist of syntactically correct directives and blocks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3806eb9e4d97457d4b3246b0d579de8fa4e6c33b" translate="yes" xml:space="preserve">
          <source>Includes the result of another request into a response. The command has the following parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1bc5e7e5c04eebb69a6e2da261405b45aaa9749" translate="yes" xml:space="preserve">
          <source>Increases sharpness of the final image. The sharpness percentage can exceed 100. The zero value disables sharpening. Parameter value can contain variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95416ec28494191c299733854973a7e99bab4a1" translate="yes" xml:space="preserve">
          <source>Indicates whether the client request body is mirrored. When enabled, the client request body will be read prior to creating mirror subrequests. In this case, unbuffered client request body proxying set by the &lt;a href=&quot;ngx_http_proxy_module#proxy_request_buffering&quot;&gt;proxy_request_buffering&lt;/a&gt;, &lt;a href=&quot;ngx_http_fastcgi_module#fastcgi_request_buffering&quot;&gt;fastcgi_request_buffering&lt;/a&gt;, &lt;a href=&quot;ngx_http_scgi_module#scgi_request_buffering&quot;&gt;scgi_request_buffering&lt;/a&gt;, and &lt;a href=&quot;ngx_http_uwsgi_module#uwsgi_request_buffering&quot;&gt;uwsgi_request_buffering&lt;/a&gt; directives will be disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba8e87a86276a4ce4c2023e2bd804d18133b72e" translate="yes" xml:space="preserve">
          <source>Indicates whether the header fields of the original request are passed to the FastCGI server. See also the &lt;a href=&quot;#fastcgi_pass_request_body&quot;&gt;fastcgi_pass_request_body&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46fd80e907bab4e1113d026c7311121497a573e7" translate="yes" xml:space="preserve">
          <source>Indicates whether the header fields of the original request are passed to the SCGI server. See also the &lt;a href=&quot;#scgi_pass_request_body&quot;&gt;scgi_pass_request_body&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381c25a48d8e6a476b250dc7d86140c0fdcdc25a" translate="yes" xml:space="preserve">
          <source>Indicates whether the header fields of the original request are passed to the proxied server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17a739abf08651c828b789df9d9ae697e4ee1ca" translate="yes" xml:space="preserve">
          <source>Indicates whether the header fields of the original request are passed to the uwsgi server. See also the &lt;a href=&quot;#uwsgi_pass_request_body&quot;&gt;uwsgi_pass_request_body&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a16087ff5e7d770a23a9c9949e5baa063cc4c29" translate="yes" xml:space="preserve">
          <source>Indicates whether the original request body is passed to the FastCGI server. See also the &lt;a href=&quot;#fastcgi_pass_request_headers&quot;&gt;fastcgi_pass_request_headers&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f42c60f35f5e7d80ca5fc9dcdef54bfbb07240" translate="yes" xml:space="preserve">
          <source>Indicates whether the original request body is passed to the SCGI server. See also the &lt;a href=&quot;#scgi_pass_request_headers&quot;&gt;scgi_pass_request_headers&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed9024280e9cb4d93ecb08ca4041b3be51fc313" translate="yes" xml:space="preserve">
          <source>Indicates whether the original request body is passed to the proxied server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26cc6fb8f208ea99eaeeaba6202efa8f150a395a" translate="yes" xml:space="preserve">
          <source>Indicates whether the original request body is passed to the uwsgi server. See also the &lt;a href=&quot;#uwsgi_pass_request_headers&quot;&gt;uwsgi_pass_request_headers&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc943be6378cd49efa3b286db579065c03cf2078" translate="yes" xml:space="preserve">
          <source>Indicates whether to look for each string to replace once or repeatedly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64292826ef2667e8a2a9b0f607cdef4902d8ef2" translate="yes" xml:space="preserve">
          <source>Indicates whether to pass the error message obtained during the authentication on the backend to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb5c2f714283c222aef131cc4f21a84ef43f985" translate="yes" xml:space="preserve">
          <source>Individual worker processes can be controlled with signals as well, though it is not required. The supported signals are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afaa1fdcec54bcd6180c1383ddcf694a754c3e40" translate="yes" xml:space="preserve">
          <source>Initially, the main request is active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830defcc4bcc3af8285609c247eea75a4c96bace" translate="yes" xml:space="preserve">
          <source>Installation on FreeBSD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22bb541dc6bc6ad8a4376cb73aaf6c129294f841" translate="yes" xml:space="preserve">
          <source>Installation on Linux</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57976ed941c206f161b07d9b258affe2868f1d9" translate="yes" xml:space="preserve">
          <source>Installing as a Linux package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca98ef2d18bbb94eac217dcda54b785675b648c3" translate="yes" xml:space="preserve">
          <source>Installing nginx</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e6d8dbbfeaabf14c3c8b092dcfad8e866bd661" translate="yes" xml:space="preserve">
          <source>Installs a Perl handler for the specified variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eeb76a01d425a876b1893278cc936ff64d2e3f4" translate="yes" xml:space="preserve">
          <source>Instead of creating a new thread for each task, nginx implements a &lt;a href=&quot;../ngx_core_module#thread_pool&quot;&gt;thread_pool&lt;/a&gt; strategy. Multiple thread pools may be configured for different purposes (for example, performing I/O on different sets of disks). Each thread pool is created at startup and contains a limited number of threads that process a queue of tasks. When a task is completed, a predefined completion handler is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365ae55cb62bd4d3e2455e93e39e17507cffd1bf" translate="yes" xml:space="preserve">
          <source>Instead of dealing with malloc/free approach which is error prone, learn how to use nginx &lt;a href=&quot;#pool&quot;&gt;pools&lt;/a&gt;. A pool is created and tied to an object - &lt;a href=&quot;#http_conf&quot;&gt;configuration&lt;/a&gt;, &lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;, &lt;a href=&quot;#connection&quot;&gt;connection&lt;/a&gt;, or &lt;a href=&quot;#http_request&quot;&gt;HTTP request&lt;/a&gt;. When the object is destroyed, the associated pool is destroyed too. So when working with an object, it is possible to allocate the amount needed from the corresponding pool and don't care about freeing memory even in case of errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504864385d123883aeb2e747997f455d1f162a01" translate="yes" xml:space="preserve">
          <source>Instructs whether cache entries that match a &lt;a href=&quot;#fastcgi_cache_purge&quot;&gt;wildcard key&lt;/a&gt; will be removed from the disk by the cache purger (1.7.12). Setting the parameter to &lt;code&gt;on&lt;/code&gt; (default is &lt;code&gt;off&lt;/code&gt;) will activate the &amp;ldquo;cache purger&amp;rdquo; process that permanently iterates through all cache entries and deletes the entries that match the wildcard key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ab5e9b05f8d8200c7659e1cd7fb067d3b90b0c" translate="yes" xml:space="preserve">
          <source>Instructs whether cache entries that match a &lt;a href=&quot;#proxy_cache_purge&quot;&gt;wildcard key&lt;/a&gt; will be removed from the disk by the cache purger (1.7.12). Setting the parameter to &lt;code&gt;on&lt;/code&gt; (default is &lt;code&gt;off&lt;/code&gt;) will activate the &amp;ldquo;cache purger&amp;rdquo; process that permanently iterates through all cache entries and deletes the entries that match the wildcard key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5a9aaa2524527db194c03f8ba6125dc5c871a1" translate="yes" xml:space="preserve">
          <source>Instructs whether cache entries that match a &lt;a href=&quot;#scgi_cache_purge&quot;&gt;wildcard key&lt;/a&gt; will be removed from the disk by the cache purger (1.7.12). Setting the parameter to &lt;code&gt;on&lt;/code&gt; (default is &lt;code&gt;off&lt;/code&gt;) will activate the &amp;ldquo;cache purger&amp;rdquo; process that permanently iterates through all cache entries and deletes the entries that match the wildcard key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d262e3fa0fd8ccbfbfa45d5d7e103e9c46218e2" translate="yes" xml:space="preserve">
          <source>Instructs whether cache entries that match a &lt;a href=&quot;#uwsgi_cache_purge&quot;&gt;wildcard key&lt;/a&gt; will be removed from the disk by the cache purger (1.7.12). Setting the parameter to &lt;code&gt;on&lt;/code&gt; (default is &lt;code&gt;off&lt;/code&gt;) will activate the &amp;ldquo;cache purger&amp;rdquo; process that permanently iterates through all cache entries and deletes the entries that match the wildcard key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724b5422dc05c791b8cf0befd732972c0409722e" translate="yes" xml:space="preserve">
          <source>Integers</source>
          <target state="translated">Integers</target>
        </trans-unit>
        <trans-unit id="0df795c709bef2c10ca638eb82b821a023b8fec3" translate="yes" xml:space="preserve">
          <source>Internal Implementation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c18d101768819650022703d309d09de77a757cd" translate="yes" xml:space="preserve">
          <source>Internal Redirect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6365d1aa54df042bc6a6b2b502d05b3a8e4842" translate="yes" xml:space="preserve">
          <source>Internal implementation of the interval depends on the method used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44981251410f7dba87d1ea4b2463e26056ae1813" translate="yes" xml:space="preserve">
          <source>Internal nginx error code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745991d6216ddebb862203158ed712a638c361fa" translate="yes" xml:space="preserve">
          <source>Internationalized domain names (&lt;a href=&quot;https://en.wikipedia.org/wiki/Internationalized_domain_name&quot;&gt;IDNs&lt;/a&gt;) should be specified using an ASCII (Punycode) representation in the &lt;a href=&quot;ngx_http_core_module#server_name&quot;&gt;server_name&lt;/a&gt; directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c388fdaa1c1e1a1748a3b067d43230ffe79d0a3" translate="yes" xml:space="preserve">
          <source>Internationalized names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="7bd049295151ed062f1e5a1fd0137742be65e3b4" translate="yes" xml:space="preserve">
          <source>Introduction article on DTrace pid provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fd41aec7e954839fdf7f085957e6ce3c7193e0" translate="yes" xml:space="preserve">
          <source>Is it possible to implement a desired feature using already &lt;a href=&quot;../index&quot;&gt;available modules&lt;/a&gt;?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3baf4801e02e7a943f03d778d885ec9b13752f" translate="yes" xml:space="preserve">
          <source>Is it possible to solve an issue using built-in scripting languages, such as &lt;a href=&quot;../http/ngx_http_perl_module&quot;&gt;Perl&lt;/a&gt; or &lt;a href=&quot;../njs/index&quot;&gt;njs&lt;/a&gt;?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a04b02f39b647d542666abb927b1d67ddde22c0" translate="yes" xml:space="preserve">
          <source>It allows this server to process requests without the &amp;ldquo;Host&amp;rdquo; header field &amp;mdash; instead of the default server &amp;mdash; for the given address:port pair. This is the default setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1860d651ff3cdd834e35458565c1f6849186309e" translate="yes" xml:space="preserve">
          <source>It handles requests with the &lt;code&gt;start&lt;/code&gt; argument in the request URI&amp;rsquo;s query string specially, by sending back the contents of a file starting from the requested byte offset and with the prepended FLV header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0752ce6c879f21c8a30e870d4f9aed5b0b2ab6e9" translate="yes" xml:space="preserve">
          <source>It is also possible to enable the debugging log for &lt;a href=&quot;ngx_core_module#debug_connection&quot;&gt;selected client addresses&lt;/a&gt; only:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec33d96c5e72e1f7b4c1be6e4f48bac2137c472" translate="yes" xml:space="preserve">
          <source>It is also possible to influence nginx load balancing algorithms even further by using server weights.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564eb48211bb1d169059e0a0dd4f0f39cd411aaf" translate="yes" xml:space="preserve">
          <source>It is also possible to redirect a request to a new location at any point by calling one of &lt;code&gt;ngx_http_internal_redirect(r, uri, args)&lt;/code&gt; or &lt;code&gt;ngx_http_named_location(r, name)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d449aafd2c8ee6edeaba70efe3d1894c3e82153" translate="yes" xml:space="preserve">
          <source>It is also possible to specify an empty server name (0.7.11):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4326d05fbd07996aa94e584363ae402400918eb6" translate="yes" xml:space="preserve">
          <source>It is also possible to use URL redirects for error processing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8c135e1d7443c69a312c7377eb9198c3f155dd" translate="yes" xml:space="preserve">
          <source>It is also possible to use regular expressions in server names, preceding the name with a tilde (&amp;ldquo;&lt;code&gt;~&lt;/code&gt;&amp;rdquo;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51fdfe7d8ea9d7c401a96c9ece22077ad004544b" translate="yes" xml:space="preserve">
          <source>It is better to place a certificate file with several names and its private key file at the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="163c23c33a3d389e289985c8e43a6ba310343f8c" translate="yes" xml:space="preserve">
          <source>It is possible to add wildcard keys using the &lt;code&gt;NGX_HASH_WILDCARD_KEY&lt;/code&gt; flag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af7d7e636d1585bc1961c84bdb6d89b12ecb499" translate="yes" xml:space="preserve">
          <source>It is possible to configure a single server that handles both HTTP and HTTPS requests:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a73ca1ef8bd9f80e80223929073bfb7218b993c" translate="yes" xml:space="preserve">
          <source>It is possible to offload into a separate thread tasks that would otherwise block the nginx worker process. For example, nginx can be configured to use threads to perform &lt;a href=&quot;../http/ngx_http_core_module#aio&quot;&gt;file I/O&lt;/a&gt;. Another use case is a library that doesn't have asynchronous interface and thus cannot be normally used with nginx. Keep in mind that the threads interface is a helper for the existing asynchronous approach to processing client connections, and by no means intended as a replacement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2080dbfeed98435c058e5958a50db2cb3e37b236" translate="yes" xml:space="preserve">
          <source>It is possible to specify either a redirect URL (for codes 301, 302, 303, 307, and 308) or the response body text (for other codes) as the second argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4d6d80fee4e68f8eb5e4c2ab3f266cc17fceae" translate="yes" xml:space="preserve">
          <source>It is possible to specify several stylesheets. They will be applied sequentially in the specified order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a85a31e995d653da7c704bac60514b07e77d04" translate="yes" xml:space="preserve">
          <source>It is possible to use nginx as a very efficient HTTP load balancer to distribute traffic to several application servers and to improve performance, scalability and reliability of web applications with nginx.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cdfa291112d44446b1c5d3f0ba587c077d9eb25" translate="yes" xml:space="preserve">
          <source>It is recommended to avoid using threads in nginx because it will definitely break things: most nginx functions are not thread-safe. It is expected that a thread will be executing only system calls and thread-safe library functions. If you need to run some code that is not related to client request processing, the proper way is to schedule a timer in the &lt;code&gt;init_process&lt;/code&gt; module handler and perform required actions in timer handler. Internally nginx makes use of &lt;a href=&quot;#threads&quot;&gt;threads&lt;/a&gt; to boost IO-related operations, but this is a special case with a lot of limitations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488680f4614db9e5c11b2bd3e7f601ebbac30e48" translate="yes" xml:space="preserve">
          <source>It is similarly possible to use weights with the least-connected and ip-hash load balancing in the recent versions of nginx.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01bd8dfa9d686876c22b2cb8763b6885d3d947ff" translate="yes" xml:space="preserve">
          <source>It makes sense to specify the extensions supported by the IMAP backends to which the clients are proxied (if these extensions are related to commands used after the authentication, when nginx transparently proxies a client connection to the backend).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3102688be1ec987e49d3801b5047e1d7d4157b0" translate="yes" xml:space="preserve">
          <source>It makes sense to specify the extensions supported by the MTA to which the clients are proxied (if these extensions are related to commands used after the authentication, when nginx transparently proxies the client connection to the backend).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb912421577eadc3aa9f950ff0d4eaee76565418" translate="yes" xml:space="preserve">
          <source>It makes sense to specify the extensions supported by the POP3 backends to which the clients are proxied (if these extensions are related to commands used after the authentication, when nginx transparently proxies the client connection to the backend).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ce498191579d9754a111ff64a0f9a1709da4c8" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;NGX_ERROR&lt;/code&gt; in case of internal error (for example, failed memory allocation) or &lt;code&gt;NGX_OK&lt;/code&gt; otherwise. To learn the status of variable evaluation, inspect the flags in &lt;code&gt;ngx_http_variable_value_t&lt;/code&gt; (see the description &lt;a href=&quot;#http_existing_variables&quot;&gt;above&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8079fc42441e5d0fa9058568d8c789330856482b" translate="yes" xml:space="preserve">
          <source>It should be kept in mind that due to the HTTPS protocol limitations for maximum interoperability virtual servers should listen on &lt;a href=&quot;configuring_https_servers#name_based_https_servers&quot;&gt;different IP addresses&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807f813af7b88ff756dff310080291d337fbca89" translate="yes" xml:space="preserve">
          <source>It should be kept in mind that this number includes all connections (e.g. connections with proxied servers, among others), not only connections with clients. Another consideration is that the actual number of simultaneous connections cannot exceed the current limit on the maximum number of open files, which can be changed by &lt;a href=&quot;#worker_rlimit_nofile&quot;&gt;worker_rlimit_nofile&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f283577b2ccdcbf04a62dc0687228cb3cb69f15a" translate="yes" xml:space="preserve">
          <source>It should be noted that if a response is received in a subrequest then the conversion from the response charset to the main request charset is always performed, regardless of the &lt;code&gt;override_charset&lt;/code&gt; directive setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75650cff981801640e80d5234163c088b5e1ddae" translate="yes" xml:space="preserve">
          <source>It should be noted that in the example above DTrace requires some knowledge about the &lt;code&gt;ngx_http_process_request&lt;/code&gt; structure. Unfortunately while it is possible to use a specific &lt;code&gt;#include&lt;/code&gt; directive in the DTrace script and then pass it to a C preprocessor (with the &lt;code&gt;-C&lt;/code&gt; flag), that doesn&amp;rsquo;t really work. Due to a lot of cross dependencies, almost all nginx header files have to be included. In turn, based on &lt;code&gt;configure&lt;/code&gt; script settings, nginx headers will include PCRE, OpenSSL and a variety of system header files. While in theory all those header files related to a specific nginx build might be included in DTrace script preprocessing and compilation, in reality DTrace script most probably will fail to compile because of unknown syntax in some header files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df820dc2ed28b4b0311df6f7e80a6382dd5165d" translate="yes" xml:space="preserve">
          <source>It should be noted that the old master process does not close its listen sockets, and it can be managed to start its worker processes again if needed. If for some reason the new executable file works unacceptably, one of the following can be done:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d47731c746faeaac66145bdca8e7f4d6246455f" translate="yes" xml:space="preserve">
          <source>It should be noted that timed out keep-alive connections are closed normally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767f1d710d68e3f6197ad2a0b2dbb8aa0bf94eba" translate="yes" xml:space="preserve">
          <source>It should be noted that using an index file causes an internal redirect, and the request can be processed in a different location. For example, with the following configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f8c6b004ae9e320c235445eca3dab1d5c516eb" translate="yes" xml:space="preserve">
          <source>It should be particularly noted that the &lt;code&gt;keepalive&lt;/code&gt; directive does not limit the total number of connections to upstream servers that an nginx worker process can open. The &lt;code&gt;&lt;i&gt;connections&lt;/i&gt;&lt;/code&gt; parameter should be set to a number small enough to let upstream servers process new incoming connections as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f8a66cb43e6cbb1730603a48a8fc76b8c53cba" translate="yes" xml:space="preserve">
          <source>It will be a match for requests starting with &lt;code&gt;/images/&lt;/code&gt; (&lt;code&gt;location /&lt;/code&gt; also matches such requests, but has shorter prefix).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="302e3e4f4565ce9b50c814a45e29a4d3634d3c0f" translate="yes" xml:space="preserve">
          <source>Keep alignment identical among different structures in the file. A structure that points to itself has the name, ending with &amp;ldquo;&lt;code&gt;_s&lt;/code&gt;&amp;rdquo;. Adjacent structure definitions are separated with two empty lines:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5025143a89e9b224781aa62468c0e2c91c66496" translate="yes" xml:space="preserve">
          <source>Known Issues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05203cf89b60eb36609a1a8b7f3cafe0927486a" translate="yes" xml:space="preserve">
          <source>Known issues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2228985493d9e43e461c7be5525529248735ad9c" translate="yes" xml:space="preserve">
          <source>Labels</source>
          <target state="translated">Labels</target>
        </trans-unit>
        <trans-unit id="919d2bb6225a8f1db8f2b2daf03d37ffeacbd75a" translate="yes" xml:space="preserve">
          <source>Labels are surrounded with empty lines and are indented at the previous level:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd58fa9befbddd5828629a74e280d882468b2a2a" translate="yes" xml:space="preserve">
          <source>Last but not least it is necessary to add definitions of two member structures (&lt;code&gt;ngx_http_headers_in_t&lt;/code&gt;, &lt;code&gt;ngx_http_headers_out_t&lt;/code&gt;), declarations of callback functions and definitions of constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb89b6eedfdbf0bde5384a031b47f04b68d9d10" translate="yes" xml:space="preserve">
          <source>Last but not least, &lt;a href=&quot;https://www.nginx.com/products/application-load-balancing/&quot;&gt; application load balancing&lt;/a&gt;, &lt;a href=&quot;https://www.nginx.com/products/application-health-checks/&quot;&gt; application health checks&lt;/a&gt;, &lt;a href=&quot;https://www.nginx.com/products/live-activity-monitoring/&quot;&gt; activity monitoring&lt;/a&gt; and &lt;a href=&quot;https://www.nginx.com/products/on-the-fly-reconfiguration/&quot;&gt; on-the-fly reconfiguration&lt;/a&gt; of server groups are available as part of our paid NGINX Plus subscriptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac9ef0ee34afc7025b1de86c68f69648d6c279f" translate="yes" xml:space="preserve">
          <source>Least connected load balancing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ebc367d371ffd35495e36cb61d734551e732a9" translate="yes" xml:space="preserve">
          <source>Least-connected load balancing in nginx is activated when the &lt;a href=&quot;ngx_http_upstream_module#least_conn&quot;&gt; least_conn&lt;/a&gt; directive is used as part of the server group configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eeb8d3faf68bcc1b581a94886e68794327920f8" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s illustrate the above by an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f6da3e0c880eca422b63dede4f2d516cc5799b" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s illustrate this by example. Imagine that nginx is run on FreeBSD and the command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04f8801fd6c22091f0c522f8763dfff6c9d610b" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at a more complex configuration where some virtual servers listen on different addresses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49886e718ce7f3956fc1fc8367b775cde536d7d7" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s use DTrace script example above and see what structure definitions it needs to work properly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc5b2a062f05dd148b4ef24c76639416ebcc59f3" translate="yes" xml:space="preserve">
          <source>Licensed under the BSD License.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59bd6e1cf6b8ff76fb7668142a281b55bcdd5868" translate="yes" xml:space="preserve">
          <source>Limits allowed HTTP methods inside a location. The &lt;code&gt;&lt;i&gt;method&lt;/i&gt;&lt;/code&gt; parameter can be one of the following: &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;HEAD&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;MKCOL&lt;/code&gt;, &lt;code&gt;COPY&lt;/code&gt;, &lt;code&gt;MOVE&lt;/code&gt;, &lt;code&gt;OPTIONS&lt;/code&gt;, &lt;code&gt;PROPFIND&lt;/code&gt;, &lt;code&gt;PROPPATCH&lt;/code&gt;, &lt;code&gt;LOCK&lt;/code&gt;, &lt;code&gt;UNLOCK&lt;/code&gt;, or &lt;code&gt;PATCH&lt;/code&gt;. Allowing the &lt;code&gt;GET&lt;/code&gt; method makes the &lt;code&gt;HEAD&lt;/code&gt; method also allowed. Access to other methods can be limited using the &lt;a href=&quot;ngx_http_access_module&quot;&gt;ngx_http_access_module&lt;/a&gt;, &lt;a href=&quot;ngx_http_auth_basic_module&quot;&gt;ngx_http_auth_basic_module&lt;/a&gt;, and &lt;a href=&quot;ngx_http_auth_jwt_module&quot;&gt;ngx_http_auth_jwt_module&lt;/a&gt; (1.13.10) modules directives:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73300f26ab7825675eccec7bc8a6e284a4c400c8" translate="yes" xml:space="preserve">
          <source>Limits the &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of data written to a temporary file at a time, when buffering of responses from the FastCGI server to temporary files is enabled. By default, &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; is limited by two buffers set by the &lt;a href=&quot;#fastcgi_buffer_size&quot;&gt;fastcgi_buffer_size&lt;/a&gt; and &lt;a href=&quot;#fastcgi_buffers&quot;&gt;fastcgi_buffers&lt;/a&gt; directives. The maximum size of a temporary file is set by the &lt;a href=&quot;#fastcgi_max_temp_file_size&quot;&gt;fastcgi_max_temp_file_size&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93809fc567c3d49889c7bf969db4a42392b0f6c" translate="yes" xml:space="preserve">
          <source>Limits the &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of data written to a temporary file at a time, when buffering of responses from the SCGI server to temporary files is enabled. By default, &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; is limited by two buffers set by the &lt;a href=&quot;#scgi_buffer_size&quot;&gt;scgi_buffer_size&lt;/a&gt; and &lt;a href=&quot;#scgi_buffers&quot;&gt;scgi_buffers&lt;/a&gt; directives. The maximum size of a temporary file is set by the &lt;a href=&quot;#scgi_max_temp_file_size&quot;&gt;scgi_max_temp_file_size&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef00f6e30c1752717a7317533f229737b82c49ee" translate="yes" xml:space="preserve">
          <source>Limits the &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of data written to a temporary file at a time, when buffering of responses from the proxied server to temporary files is enabled. By default, &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; is limited by two buffers set by the &lt;a href=&quot;#proxy_buffer_size&quot;&gt;proxy_buffer_size&lt;/a&gt; and &lt;a href=&quot;#proxy_buffers&quot;&gt;proxy_buffers&lt;/a&gt; directives. The maximum size of a temporary file is set by the &lt;a href=&quot;#proxy_max_temp_file_size&quot;&gt;proxy_max_temp_file_size&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ca26e13a7b910183acde5cfe35c77e9ffa1e0a" translate="yes" xml:space="preserve">
          <source>Limits the &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of data written to a temporary file at a time, when buffering of responses from the uwsgi server to temporary files is enabled. By default, &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; is limited by two buffers set by the &lt;a href=&quot;#uwsgi_buffer_size&quot;&gt;uwsgi_buffer_size&lt;/a&gt; and &lt;a href=&quot;#uwsgi_buffers&quot;&gt;uwsgi_buffers&lt;/a&gt; directives. The maximum size of a temporary file is set by the &lt;a href=&quot;#uwsgi_max_temp_file_size&quot;&gt;uwsgi_max_temp_file_size&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358d1e314b0fba6c39c2bf8a8910543f9f9a9639" translate="yes" xml:space="preserve">
          <source>Limits the maximum allowed number of ranges in byte-range requests. Requests that exceed the limit are processed as if there were no byte ranges specified. By default, the number of ranges is not limited. The zero value disables the byte-range support completely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e1826a357ad2ac8f90e6af4db8a5a45884865c" translate="yes" xml:space="preserve">
          <source>Limits the maximum number of concurrent &lt;a href=&quot;#http2_push&quot;&gt;push&lt;/a&gt; requests in a connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5ec6b364490c3b94a18663f65138fb82893368" translate="yes" xml:space="preserve">
          <source>Limits the maximum size of an &lt;a href=&quot;https://tools.ietf.org/html/rfc7541&quot;&gt;HPACK&lt;/a&gt;-compressed request header field. The limit applies equally to both name and value. Note that if Huffman encoding is applied, the actual size of decompressed name and value strings may be larger. For most requests, the default limit should be enough.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1cda155ffc1febef9233a7fe2b40fafc77e0de" translate="yes" xml:space="preserve">
          <source>Limits the maximum size of the entire request header list after &lt;a href=&quot;https://tools.ietf.org/html/rfc7541&quot;&gt;HPACK&lt;/a&gt; decompression. For most requests, the default limit should be enough.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fc7e87164f475d9f594eb107ff48a54f2fdb43" translate="yes" xml:space="preserve">
          <source>Limits the number of possible tries for passing a connection to the &lt;a href=&quot;#proxy_next_upstream&quot;&gt;next server&lt;/a&gt;. The &lt;code&gt;0&lt;/code&gt; value turns off this limitation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f48a588ed9ee9f7cc393b60912052a329c93daa" translate="yes" xml:space="preserve">
          <source>Limits the number of possible tries for passing a request to the &lt;a href=&quot;#fastcgi_next_upstream&quot;&gt;next server&lt;/a&gt;. The &lt;code&gt;0&lt;/code&gt; value turns off this limitation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8f9ff0c89526b1a4d6d4ee00cd86560a7758b5" translate="yes" xml:space="preserve">
          <source>Limits the number of possible tries for passing a request to the &lt;a href=&quot;#grpc_next_upstream&quot;&gt;next server&lt;/a&gt;. The &lt;code&gt;0&lt;/code&gt; value turns off this limitation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8a965bbcf730faaf101f643b3e8ef051049719" translate="yes" xml:space="preserve">
          <source>Limits the number of possible tries for passing a request to the &lt;a href=&quot;#memcached_next_upstream&quot;&gt;next server&lt;/a&gt;. The &lt;code&gt;0&lt;/code&gt; value turns off this limitation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d97ffd3e112438253f8c959d2ce86be9198393" translate="yes" xml:space="preserve">
          <source>Limits the number of possible tries for passing a request to the &lt;a href=&quot;#proxy_next_upstream&quot;&gt;next server&lt;/a&gt;. The &lt;code&gt;0&lt;/code&gt; value turns off this limitation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79b9b1a63aab4469269e39b72748a590ace0f37" translate="yes" xml:space="preserve">
          <source>Limits the number of possible tries for passing a request to the &lt;a href=&quot;#scgi_next_upstream&quot;&gt;next server&lt;/a&gt;. The &lt;code&gt;0&lt;/code&gt; value turns off this limitation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c2caa12b575f5a9c642f750deb0f3637836161" translate="yes" xml:space="preserve">
          <source>Limits the number of possible tries for passing a request to the &lt;a href=&quot;#uwsgi_next_upstream&quot;&gt;next server&lt;/a&gt;. The &lt;code&gt;0&lt;/code&gt; value turns off this limitation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c115408aa5e6f2ab59d485e6a196d49c79903018" translate="yes" xml:space="preserve">
          <source>Limits the rate of response transmission to a client. The &lt;code&gt;&lt;i&gt;rate&lt;/i&gt;&lt;/code&gt; is specified in bytes per second. The zero value disables rate limiting. The limit is set per a request, and so if a client simultaneously opens two connections, the overall rate will be twice as much as the specified limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aebe94c522db58dc826bf6cb79379da929342af8" translate="yes" xml:space="preserve">
          <source>Limits the rate of response transmission to a client. The rate is limited based on the average bitrate of the MP4 file served. To calculate the rate, the bitrate is multiplied by the specified &lt;code&gt;&lt;i&gt;factor&lt;/i&gt;&lt;/code&gt;. The special value &amp;ldquo;&lt;code&gt;on&lt;/code&gt;&amp;rdquo; corresponds to the factor of 1.1. The special value &amp;ldquo;&lt;code&gt;off&lt;/code&gt;&amp;rdquo; disables rate limiting. The limit is set per a request, and so if a client simultaneously opens two connections, the overall rate will be twice as much as the specified limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e393479657ef00004dba8bfe85cdb6bc27d0ec07" translate="yes" xml:space="preserve">
          <source>Limits the speed of reading the data from the client. The &lt;code&gt;&lt;i&gt;rate&lt;/i&gt;&lt;/code&gt; is specified in bytes per second. The zero value disables rate limiting. The limit is set per a connection, so if the client simultaneously opens two connections, the overall rate will be twice as much as the specified limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76bb99134123c0132d06debe6938c305f5a4be99" translate="yes" xml:space="preserve">
          <source>Limits the speed of reading the data from the proxied server. The &lt;code&gt;&lt;i&gt;rate&lt;/i&gt;&lt;/code&gt; is specified in bytes per second. The zero value disables rate limiting. The limit is set per a connection, so if nginx simultaneously opens two connections to the proxied server, the overall rate will be twice as much as the specified limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e138628abb1c415705268f28a75f308c0f5ab746" translate="yes" xml:space="preserve">
          <source>Limits the speed of reading the response from the FastCGI server. The &lt;code&gt;&lt;i&gt;rate&lt;/i&gt;&lt;/code&gt; is specified in bytes per second. The zero value disables rate limiting. The limit is set per a request, and so if nginx simultaneously opens two connections to the FastCFI server, the overall rate will be twice as much as the specified limit. The limitation works only if &lt;a href=&quot;#fastcgi_buffering&quot;&gt;buffering&lt;/a&gt; of responses from the FastCGI server is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ca986ca5fe5856cfa1ad6088fcad3d4bd0464c" translate="yes" xml:space="preserve">
          <source>Limits the speed of reading the response from the SCGI server. The &lt;code&gt;&lt;i&gt;rate&lt;/i&gt;&lt;/code&gt; is specified in bytes per second. The zero value disables rate limiting. The limit is set per a request, and so if nginx simultaneously opens two connections to the SCGI server, the overall rate will be twice as much as the specified limit. The limitation works only if &lt;a href=&quot;#scgi_buffering&quot;&gt;buffering&lt;/a&gt; of responses from the SCGI server is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1afea50f655be2d6715d1790303cae5630546e" translate="yes" xml:space="preserve">
          <source>Limits the speed of reading the response from the proxied server. The &lt;code&gt;&lt;i&gt;rate&lt;/i&gt;&lt;/code&gt; is specified in bytes per second. The zero value disables rate limiting. The limit is set per a request, and so if nginx simultaneously opens two connections to the proxied server, the overall rate will be twice as much as the specified limit. The limitation works only if &lt;a href=&quot;#proxy_buffering&quot;&gt;buffering&lt;/a&gt; of responses from the proxied server is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7286c0e9bd7dceaf9ffa00a68a04e8b6a8ea776" translate="yes" xml:space="preserve">
          <source>Limits the speed of reading the response from the uwsgi server. The &lt;code&gt;&lt;i&gt;rate&lt;/i&gt;&lt;/code&gt; is specified in bytes per second. The zero value disables rate limiting. The limit is set per a request, and so if nginx simultaneously opens two connections to the uwsgi server, the overall rate will be twice as much as the specified limit. The limitation works only if &lt;a href=&quot;#uwsgi_buffering&quot;&gt;buffering&lt;/a&gt; of responses from the uwsgi server is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd7a91f89bd89474db8834625ca4c4da70240104" translate="yes" xml:space="preserve">
          <source>Limits the time allowed to pass a connection to the &lt;a href=&quot;#proxy_next_upstream&quot;&gt;next server&lt;/a&gt;. The &lt;code&gt;0&lt;/code&gt; value turns off this limitation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50379fff22984ec4c5b26853957868d24d253ca" translate="yes" xml:space="preserve">
          <source>Limits the time during which a request can be passed to the &lt;a href=&quot;#fastcgi_next_upstream&quot;&gt;next server&lt;/a&gt;. The &lt;code&gt;0&lt;/code&gt; value turns off this limitation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b2d0410d729c65b40c77210cc15a07677debac0" translate="yes" xml:space="preserve">
          <source>Limits the time during which a request can be passed to the &lt;a href=&quot;#grpc_next_upstream&quot;&gt;next server&lt;/a&gt;. The &lt;code&gt;0&lt;/code&gt; value turns off this limitation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2171b3812cc4f54b5b000b0e55745285f4689653" translate="yes" xml:space="preserve">
          <source>Limits the time during which a request can be passed to the &lt;a href=&quot;#memcached_next_upstream&quot;&gt;next server&lt;/a&gt;. The &lt;code&gt;0&lt;/code&gt; value turns off this limitation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e751449962ce2bfe5abf84c5adc16148506f6f70" translate="yes" xml:space="preserve">
          <source>Limits the time during which a request can be passed to the &lt;a href=&quot;#proxy_next_upstream&quot;&gt;next server&lt;/a&gt;. The &lt;code&gt;0&lt;/code&gt; value turns off this limitation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ac29ad7d0af730527d8eb9388955f09a1c4ff8" translate="yes" xml:space="preserve">
          <source>Limits the time during which a request can be passed to the &lt;a href=&quot;#scgi_next_upstream&quot;&gt;next server&lt;/a&gt;. The &lt;code&gt;0&lt;/code&gt; value turns off this limitation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b05d730f5efd1c4cbd7cb3e0ac2569ce525123" translate="yes" xml:space="preserve">
          <source>Limits the time during which a request can be passed to the &lt;a href=&quot;#uwsgi_next_upstream&quot;&gt;next server&lt;/a&gt;. The &lt;code&gt;0&lt;/code&gt; value turns off this limitation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28419de763bb45150fc0d38bf46c5a3f95ffb3f" translate="yes" xml:space="preserve">
          <source>Limits which fields of SSL statistics will be output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32211d2305a2dca45d7117a77bcf04ed4e768c43" translate="yes" xml:space="preserve">
          <source>Limits which fields of cache zones will be output. If the &amp;ldquo;&lt;code&gt;fields&lt;/code&gt;&amp;rdquo; value is empty, then only names of cache zones are output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0b1c7b04c8f9df59d3522a2bd9b5c71d7f8964" translate="yes" xml:space="preserve">
          <source>Limits which fields of client HTTP requests statistics will be output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f60b1cf7d2a39fa3296aafa1f9bc7c174927bc" translate="yes" xml:space="preserve">
          <source>Limits which fields of nginx running instance will be output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd53bd6369913b3c8ff221b5156d54237e06387f" translate="yes" xml:space="preserve">
          <source>Limits which fields of server zones will be output. If the &amp;ldquo;&lt;code&gt;fields&lt;/code&gt;&amp;rdquo; value is empty, then only server zone names are output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3558057807cc55a7b861e5e76cf7e8b5b9b592" translate="yes" xml:space="preserve">
          <source>Limits which fields of slab zones will be output. If the &amp;ldquo;&lt;code&gt;fields&lt;/code&gt;&amp;rdquo; value is empty, then only zone names are output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b06b29a8a684acce09200a2447a78749fc69f73" translate="yes" xml:space="preserve">
          <source>Limits which fields of the cache zone will be output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04fb68f5bd34d26c8cdbb49fa027cc6c95568cf9" translate="yes" xml:space="preserve">
          <source>Limits which fields of the connections statistics will be output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fb2914c395188a965d78548054fc74003e7784" translate="yes" xml:space="preserve">
          <source>Limits which fields of the server zone will be output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b16f217a6e7c43d43f0e0689abcaf1c92d1517c" translate="yes" xml:space="preserve">
          <source>Limits which fields of the slab zone will be output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2a650d3299c13761d36b545e78d60bc73a2dae" translate="yes" xml:space="preserve">
          <source>Limits which fields of the upstream server group will be output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8430f4505541134d2e95d8e3c00c19e5d901ed52" translate="yes" xml:space="preserve">
          <source>Limits which fields of upstream server groups will be output. If the &amp;ldquo;&lt;code&gt;fields&lt;/code&gt;&amp;rdquo; value is empty, only names of upstreams are output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c506808f77c2e395de440b0ef94f52232962e6" translate="yes" xml:space="preserve">
          <source>Link to reference documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1fffaaafb7cc996685bceb829c053cc4f7de43d" translate="yes" xml:space="preserve">
          <source>List</source>
          <target state="translated">List</target>
        </trans-unit>
        <trans-unit id="9e9efedec5540d108622b75711f7e18bb405a353" translate="yes" xml:space="preserve">
          <source>Lists are primarily used for HTTP input and output headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf307b18e94df52459ed11214ea433ec9ce054f8" translate="yes" xml:space="preserve">
          <source>Lists do not support item removal. However, when needed, items can internally be marked as missing without actually being removed from the list. For example, to mark HTTP output headers (which are stored as &lt;code&gt;ngx_table_elt_t&lt;/code&gt; objects) as missing, set the &lt;code&gt;hash&lt;/code&gt; field in &lt;code&gt;ngx_table_elt_t&lt;/code&gt; to zero. Items marked in this way are explicitly skipped when the headers are iterated over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9162e66c4a1bb0d5451856137e306b410d8bfd" translate="yes" xml:space="preserve">
          <source>Load Balancing with NGINX and NGINX Plus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf1dd293a2fa573f73290017439309a34d5aee7" translate="yes" xml:space="preserve">
          <source>Load Balancing with NGINX and NGINX Plus part 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6afb192e8876001093b7d61830ada7231e1990f5" translate="yes" xml:space="preserve">
          <source>Load balancing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5821a8921354dc44dc83626343f94f3b25659f18" translate="yes" xml:space="preserve">
          <source>Load balancing across multiple application instances is a commonly used technique for optimizing resource utilization, maximizing throughput, reducing latency, and ensuring fault-tolerant configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec08dc7f6b87f1d10f3e35790a4bafd1ed49ad0c" translate="yes" xml:space="preserve">
          <source>Load balancing methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa86519f58161e80bba3f69d261d5f13fe6430a" translate="yes" xml:space="preserve">
          <source>Loads a dynamic module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ddd384870331f977a1b6db2f71c5e922ecf8b23" translate="yes" xml:space="preserve">
          <source>Location configuration &amp;mdash; Applies to a single &lt;code&gt;location&lt;/code&gt;, &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;limit_except&lt;/code&gt; block. Functions as location-specific settings for a module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="330fc00ea3142b1dd46c33f4d7ca3ba2afe0339c" translate="yes" xml:space="preserve">
          <source>Logging to a cyclic memory buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdac771f1ba5d9c1c7c854a7da91601c0fa29440" translate="yes" xml:space="preserve">
          <source>Logging to syslog</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9096ea94c0d730062612c17137ade9b6d79fa8f6" translate="yes" xml:space="preserve">
          <source>Logging to syslog is available since version 1.7.1. As part of our &lt;a href=&quot;http://nginx.com/products/&quot;&gt;commercial subscription&lt;/a&gt; logging to syslog is available since version 1.5.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e2bb0d6e3d26e08975da78ff7d91e1f79618f83" translate="yes" xml:space="preserve">
          <source>Logging to the memory buffer on the &lt;code&gt;debug&lt;/code&gt; level does not have significant impact on performance even under high load. In this case, the log can be extracted using a &lt;code&gt;gdb&lt;/code&gt; script like the following one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63ae6dd4fc9f9dda66970e827d13f7c73fe841c" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>
        </trans-unit>
        <trans-unit id="241d239f527a9349b5c1751807bde552ed65e244" translate="yes" xml:space="preserve">
          <source>Macro names start from &lt;code&gt;ngx_&lt;/code&gt; or &lt;code&gt;NGX_&lt;/code&gt; (or more specific) prefix. Macro names for constants are uppercase. Parameterized macros and macros for initializers are lowercase. The macro name and value are separated by at least two spaces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513c150041b3e2d3c01bd1710f4ba27ff4952673" translate="yes" xml:space="preserve">
          <source>Mail code should include</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b892b254153ecbb8fbbf6d4247a87eea462aeee" translate="yes" xml:space="preserve">
          <source>Main configuration &amp;mdash; Applies to the entire &lt;code&gt;http&lt;/code&gt; block. Functions as global settings for a module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16664838c5cf5829996b220c1a63751f1f18349d" translate="yes" xml:space="preserve">
          <source>Makes outgoing connections to a FastCGI server originate from the specified local IP address with an optional port (1.11.2). Parameter value can contain variables (1.3.12). The special value &lt;code&gt;off&lt;/code&gt; (1.3.12) cancels the effect of the &lt;code&gt;fastcgi_bind&lt;/code&gt; directive inherited from the previous configuration level, which allows the system to auto-assign the local IP address and port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10bad8a0866e1448a97a53fb6813f80c0a4727c5" translate="yes" xml:space="preserve">
          <source>Makes outgoing connections to a gRPC server originate from the specified local IP address with an optional port. Parameter value can contain variables. The special value &lt;code&gt;off&lt;/code&gt; cancels the effect of the &lt;code&gt;grpc_bind&lt;/code&gt; directive inherited from the previous configuration level, which allows the system to auto-assign the local IP address and port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6fb06bd55e8ffbc3dd885a64c0dee975f69f5f4" translate="yes" xml:space="preserve">
          <source>Makes outgoing connections to a memcached server originate from the specified local IP address with an optional port (1.11.2). Parameter value can contain variables (1.3.12). The special value &lt;code&gt;off&lt;/code&gt; (1.3.12) cancels the effect of the &lt;code&gt;memcached_bind&lt;/code&gt; directive inherited from the previous configuration level, which allows the system to auto-assign the local IP address and port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966d3dd5ff17e74b8636fa37121c9857e041caf7" translate="yes" xml:space="preserve">
          <source>Makes outgoing connections to a proxied server originate from the specified local IP &lt;code&gt;&lt;i&gt;address&lt;/i&gt;&lt;/code&gt;. Parameter value can contain variables (1.11.2). The special value &lt;code&gt;off&lt;/code&gt; cancels the effect of the &lt;code&gt;proxy_bind&lt;/code&gt; directive inherited from the previous configuration level, which allows the system to auto-assign the local IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f3517a796086aedcfc06e505525bb8b01f3a923" translate="yes" xml:space="preserve">
          <source>Makes outgoing connections to a proxied server originate from the specified local IP address with an optional port (1.11.2). Parameter value can contain variables (1.3.12). The special value &lt;code&gt;off&lt;/code&gt; (1.3.12) cancels the effect of the &lt;code&gt;proxy_bind&lt;/code&gt; directive inherited from the previous configuration level, which allows the system to auto-assign the local IP address and port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cad3bfee67afd3aac5926ddd0f36ec1a0bd4dcc" translate="yes" xml:space="preserve">
          <source>Makes outgoing connections to a uwsgi server originate from the specified local IP address with an optional port (1.11.2). Parameter value can contain variables (1.3.12). The special value &lt;code&gt;off&lt;/code&gt; (1.3.12) cancels the effect of the &lt;code&gt;uwsgi_bind&lt;/code&gt; directive inherited from the previous configuration level, which allows the system to auto-assign the local IP address and port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e966ad283367a7ad3967c83a6529ec7a513444" translate="yes" xml:space="preserve">
          <source>Makes outgoing connections to an SCGI server originate from the specified local IP address with an optional port (1.11.2). Parameter value can contain variables (1.3.12). The special value &lt;code&gt;off&lt;/code&gt; (1.3.12) cancels the effect of the &lt;code&gt;scgi_bind&lt;/code&gt; directive inherited from the previous configuration level, which allows the system to auto-assign the local IP address and port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2545a26e31bdc431ccfa33b09fc23aacb8cc212" translate="yes" xml:space="preserve">
          <source>Mandatory phase where data is actually processed, usually &lt;a href=&quot;ngx_stream_proxy_module&quot;&gt;proxied&lt;/a&gt; to &lt;a href=&quot;ngx_stream_upstream_module&quot;&gt;upstream&lt;/a&gt; servers, or a specified value is &lt;a href=&quot;ngx_stream_return_module&quot;&gt;returned&lt;/a&gt; to a client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a749c4601446c4188ecc7013b7a0413a828729b0" translate="yes" xml:space="preserve">
          <source>Manipulating response headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0436f8f6874249f4b4d5888c2f83ba9f44d2d0" translate="yes" xml:space="preserve">
          <source>Manual Memory Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2e48cdabca9e36953b4871e7c905a433ea3841" translate="yes" xml:space="preserve">
          <source>Maps file name extensions to MIME types of responses. Extensions are case-insensitive. Several extensions can be mapped to one type, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6770fb48f47bee270387296f98f7c3597d06b06e" translate="yes" xml:space="preserve">
          <source>Matches a string against a &lt;code&gt;regexp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf38d2ee8b58f39923cebc5f2a3ac27bf6e4c96" translate="yes" xml:space="preserve">
          <source>Members of the cycle include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c56cf0404e558423fa4f11ac70af7d1c32d29d9" translate="yes" xml:space="preserve">
          <source>Memory Slot:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5536b98ab016fe61807564b4a34c80211a7613" translate="yes" xml:space="preserve">
          <source>Memory management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545187b03e45b20e4367b3d2b1082e270cff3e30" translate="yes" xml:space="preserve">
          <source>Microsoft Visual C compiler. Microsoft Visual Studio&lt;sup&gt;&amp;reg;&lt;/sup&gt; 8 and 10 are known to work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88515312927f05350056437bc3a2fd434cc1258c" translate="yes" xml:space="preserve">
          <source>Minimal configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5439de003b0bc5c690c03c6e03d0ec9aac43cc58" translate="yes" xml:space="preserve">
          <source>Miscellaneous names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a89cf0af26560f11b44ce20c6fbfe7b5add0880" translate="yes" xml:space="preserve">
          <source>Mixed name-based and IP-based virtual servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0521e9a1d6c574cf746589e52559489d177c73c2" translate="yes" xml:space="preserve">
          <source>Modifies settings of a particular server in a stream upstream server group. Server parameters are specified in the JSON format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb5d5cade98c1044daf87f11c3a8482e9843f5c" translate="yes" xml:space="preserve">
          <source>Modifies settings of a particular server in an HTTP upstream server group. Server parameters are specified in the JSON format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88013b8a6e79372e7883fcf126f7ee2a23e3f4bb" translate="yes" xml:space="preserve">
          <source>Module ngx_google_perftools_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2e53ed07d3dc200b9e67756aa33a7403afad72" translate="yes" xml:space="preserve">
          <source>Module ngx_http_access_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974c471e88e6385842195e33e7442b2953c6eae6" translate="yes" xml:space="preserve">
          <source>Module ngx_http_addition_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff831f5211124076cb8379752bb5600f940d0cb" translate="yes" xml:space="preserve">
          <source>Module ngx_http_api_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774be4cb913e5e939499547c073ca19858497124" translate="yes" xml:space="preserve">
          <source>Module ngx_http_auth_basic_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ecf92de2d6a49f286fe1fde4cb21bf7889e586" translate="yes" xml:space="preserve">
          <source>Module ngx_http_auth_jwt_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de60fad87e9cd4ba445c8e384de16fae3eff4286" translate="yes" xml:space="preserve">
          <source>Module ngx_http_auth_request_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21937998193b5439c24f22ba829948566e8f99e2" translate="yes" xml:space="preserve">
          <source>Module ngx_http_autoindex_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85813d8bd6a4bf218a54b7fd98ff3412fce80992" translate="yes" xml:space="preserve">
          <source>Module ngx_http_browser_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cb7ec1679332e1e27519522443e1f77cf06c56" translate="yes" xml:space="preserve">
          <source>Module ngx_http_charset_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93aca24a8dac8db59b01c26a99ecdd611db03bc1" translate="yes" xml:space="preserve">
          <source>Module ngx_http_core_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ba46c2bf6bbc6ab55ba27932e4e69736f09833" translate="yes" xml:space="preserve">
          <source>Module ngx_http_dav_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d774b0647922679ce748be7d32b531280fba52a" translate="yes" xml:space="preserve">
          <source>Module ngx_http_empty_gif_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0921899ceda8494fdf61083bfd916286bec122" translate="yes" xml:space="preserve">
          <source>Module ngx_http_f4f_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb5b9cc28ac11f8e5401e1750db39cabd283429" translate="yes" xml:space="preserve">
          <source>Module ngx_http_fastcgi_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9391b3a45add03e37ffc3de73167ba8892d90d18" translate="yes" xml:space="preserve">
          <source>Module ngx_http_flv_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd5f679dabfbefb076e3ff40a0d2e702d9634bd" translate="yes" xml:space="preserve">
          <source>Module ngx_http_geo_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ef418ee9e68a2914420ab5722d12c569567221" translate="yes" xml:space="preserve">
          <source>Module ngx_http_geoip_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8a3e85fc394c7463fbc8ec0926cc4a0d5e7902" translate="yes" xml:space="preserve">
          <source>Module ngx_http_grpc_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927babba1032e702e3769ef650f2aa1c6b921756" translate="yes" xml:space="preserve">
          <source>Module ngx_http_gunzip_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca491b02ab8121c3ca4b30ec50782d40285432d" translate="yes" xml:space="preserve">
          <source>Module ngx_http_gzip_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804cba51d4fea10c41d743fa1cae0b983d7bea57" translate="yes" xml:space="preserve">
          <source>Module ngx_http_gzip_static_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1058d583e7a5204d56ccacc24da56448d1bc877f" translate="yes" xml:space="preserve">
          <source>Module ngx_http_headers_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee2727ff2c0479eb693fc59bf9b01e537818d25" translate="yes" xml:space="preserve">
          <source>Module ngx_http_hls_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4030aa2e43b09f2ad55667e6e16f164e3c4c5a3" translate="yes" xml:space="preserve">
          <source>Module ngx_http_image_filter_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49d342c830cc421ab4c1391db01c55fb2119f9a" translate="yes" xml:space="preserve">
          <source>Module ngx_http_index_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12132bdc178e73867671e987de746e6229c9edf2" translate="yes" xml:space="preserve">
          <source>Module ngx_http_js_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59faf17c97374cca368f0c5591c571b5348a068" translate="yes" xml:space="preserve">
          <source>Module ngx_http_keyval_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11fc4101eccb63d3f15737f1d63f5fa63d00ec8a" translate="yes" xml:space="preserve">
          <source>Module ngx_http_limit_conn_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ab7e25826d319f94262e3d689086fe964bd4fa" translate="yes" xml:space="preserve">
          <source>Module ngx_http_limit_req_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0283f05349997b72a3124bfe948073ad339c7454" translate="yes" xml:space="preserve">
          <source>Module ngx_http_log_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c960d31ff8028c5344293e0345c971c3b87fb155" translate="yes" xml:space="preserve">
          <source>Module ngx_http_map_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3a57c9f32618e705604b8d7049c20b4aeddcdf" translate="yes" xml:space="preserve">
          <source>Module ngx_http_memcached_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e124e9f7f9ea4b0d8d579d8b7124aad5d37e1d5e" translate="yes" xml:space="preserve">
          <source>Module ngx_http_mirror_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6533a78b877edaa319f158fdaaabd04ccea5dd" translate="yes" xml:space="preserve">
          <source>Module ngx_http_mp4_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0bdbd9b10e53ced97f123768e6d8b869ef417f" translate="yes" xml:space="preserve">
          <source>Module ngx_http_perl_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfbe74e177386d2435013459b2970680593d2f14" translate="yes" xml:space="preserve">
          <source>Module ngx_http_proxy_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eda280c6cb8aeb12273d80f42b3db9ce36b4106" translate="yes" xml:space="preserve">
          <source>Module ngx_http_random_index_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c921f2188d6de35f6d458d4a8564360b470bf9" translate="yes" xml:space="preserve">
          <source>Module ngx_http_realip_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e6d8cd63b8cbaae10d1270df22078249c10757" translate="yes" xml:space="preserve">
          <source>Module ngx_http_referer_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d90605b829cd7141255d1adba55c7b3df4be9b" translate="yes" xml:space="preserve">
          <source>Module ngx_http_rewrite_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de58aa32f0efc796710a56df6893195af2575917" translate="yes" xml:space="preserve">
          <source>Module ngx_http_scgi_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee0457362d79dda601e8f55d6467b386a3a7891" translate="yes" xml:space="preserve">
          <source>Module ngx_http_secure_link_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22bf46eea81ac347a1828d4f5d6b6961b174e7fe" translate="yes" xml:space="preserve">
          <source>Module ngx_http_session_log_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca45ce6cf636587ce600130381620a0ab116116" translate="yes" xml:space="preserve">
          <source>Module ngx_http_slice_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d901ebf97d88e6367191c2bfcf62829c3ba0dfd7" translate="yes" xml:space="preserve">
          <source>Module ngx_http_spdy_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddcccbdeb6f2764c39ba818bbed823e4d40b909d" translate="yes" xml:space="preserve">
          <source>Module ngx_http_split_clients_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4ecb34cacd1421e378294ef15b7fbba55b9e69" translate="yes" xml:space="preserve">
          <source>Module ngx_http_ssi_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c0456cefd3acbd81ddad1dde2a77a27f15132c" translate="yes" xml:space="preserve">
          <source>Module ngx_http_ssl_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3326c67172fd6c419b763c3b0bde2cb21fc6e054" translate="yes" xml:space="preserve">
          <source>Module ngx_http_status_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0398ee81e36a353255fc0253db211a5b6e88532f" translate="yes" xml:space="preserve">
          <source>Module ngx_http_stub_status_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a031449ff77e49f1ee4ff3dc7b7a11193d5512c" translate="yes" xml:space="preserve">
          <source>Module ngx_http_sub_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a19b60c5672b502e9d197a63abf120545af8bdf" translate="yes" xml:space="preserve">
          <source>Module ngx_http_upstream_conf_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8a167b2cc678ab3e186f138be5ae97a9751145" translate="yes" xml:space="preserve">
          <source>Module ngx_http_upstream_hc_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2b6b16a6243eacd8cb61c3c924fdb1921a4307" translate="yes" xml:space="preserve">
          <source>Module ngx_http_upstream_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7018eb2142d31791388e9f972d11fa2435e0fab" translate="yes" xml:space="preserve">
          <source>Module ngx_http_userid_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c32694df6da6ff769a7a563177fb7bf4228dd6" translate="yes" xml:space="preserve">
          <source>Module ngx_http_uwsgi_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff9b40d8cf0b22e3337f81e92b072811382b517" translate="yes" xml:space="preserve">
          <source>Module ngx_http_v2_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa16d095a6bf2380b296d41838431426a7569ec2" translate="yes" xml:space="preserve">
          <source>Module ngx_http_xslt_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f135c5e5330c4096d24bd05f0e7b60329eebdef" translate="yes" xml:space="preserve">
          <source>Module ngx_mail_auth_http_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c988d2495e155b1cc788ad3d32859180eff68c9" translate="yes" xml:space="preserve">
          <source>Module ngx_mail_core_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e3fb75ce0b4309002497df70ff28502bbe63ef" translate="yes" xml:space="preserve">
          <source>Module ngx_mail_imap_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01b1544b29ee4fe98d825ecc91a03caea0d1e40" translate="yes" xml:space="preserve">
          <source>Module ngx_mail_pop3_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221f9d6bc3f1498f7b97b67533c5aa38ee275747" translate="yes" xml:space="preserve">
          <source>Module ngx_mail_proxy_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c05b575d6285c22c45d8f4422320c69c64cf5dd" translate="yes" xml:space="preserve">
          <source>Module ngx_mail_smtp_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d893c35711946ee718f22395d1ed1d78bfada47" translate="yes" xml:space="preserve">
          <source>Module ngx_mail_ssl_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb6a08b3dd47aed580798c1e0664dbd741465f69" translate="yes" xml:space="preserve">
          <source>Module ngx_stream_access_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ea545c0ef85fb060679a09de26f23db2014b54" translate="yes" xml:space="preserve">
          <source>Module ngx_stream_core_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e712921e545d4ef816e302a0bf293f9e6819240" translate="yes" xml:space="preserve">
          <source>Module ngx_stream_geo_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5320a2139c740892476a9b86753000090d88a7" translate="yes" xml:space="preserve">
          <source>Module ngx_stream_geoip_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6dbdbb98f86546cec57c6e32f4c22b79d3a546d" translate="yes" xml:space="preserve">
          <source>Module ngx_stream_js_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10641bc9620c63fabece7fbfa0896cf639518338" translate="yes" xml:space="preserve">
          <source>Module ngx_stream_keyval_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a1f3034f3c677e867596864e18704c7c3e10cc" translate="yes" xml:space="preserve">
          <source>Module ngx_stream_limit_conn_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a2efc281b92403f939bb34bea0a0e14cb4640e" translate="yes" xml:space="preserve">
          <source>Module ngx_stream_log_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45cdffac01f2dec71872655d090b8f44144b8500" translate="yes" xml:space="preserve">
          <source>Module ngx_stream_map_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a977463ae66df2b03f74ec765a2db71cd90a2ebc" translate="yes" xml:space="preserve">
          <source>Module ngx_stream_proxy_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f589675d9ba3baef2bd98aa96ed630e8c962dee" translate="yes" xml:space="preserve">
          <source>Module ngx_stream_realip_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def015d5199b17800410f5beeb205dce2e06d93d" translate="yes" xml:space="preserve">
          <source>Module ngx_stream_return_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f8afc37f9a6a4e1b72112050084f9550335820" translate="yes" xml:space="preserve">
          <source>Module ngx_stream_split_clients_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d537a0b325879d3ee629c951b8b6af4fa38afab1" translate="yes" xml:space="preserve">
          <source>Module ngx_stream_ssl_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3862808a012daefe54ab506015c254917d02b52" translate="yes" xml:space="preserve">
          <source>Module ngx_stream_ssl_preread_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb912700f9a790ac00507e2cd7a46809261048a" translate="yes" xml:space="preserve">
          <source>Module ngx_stream_upstream_hc_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b888a4230bcdd57787143856a1645c761dbd1d" translate="yes" xml:space="preserve">
          <source>Module ngx_stream_upstream_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fb1aed2da4101447e89dbdc3883a077922758a" translate="yes" xml:space="preserve">
          <source>Module ngx_stream_zone_sync_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="9f4e82c216273a4bb357144bb3a9f86836460253" translate="yes" xml:space="preserve">
          <source>Modules are the building blocks of nginx, and most of its functionality is implemented as modules. The module source file must contain a global variable of type &lt;code&gt;ngx_module_t&lt;/code&gt;, which is defined as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330bd664dbcc73385e21f6f926466605155bc1eb" translate="yes" xml:space="preserve">
          <source>Modules reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6d5e022cb37e3f0390870c6db4c3629fd96f43" translate="yes" xml:space="preserve">
          <source>Most &amp;ldquo;&lt;code&gt;for&lt;/code&gt;&amp;rdquo; loops are formatted like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9351734e208a864aac0795a47ce4720757534054" translate="yes" xml:space="preserve">
          <source>Most functions in nginx return the following codes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0958671ab7fad54bfeb7743e831ebacb1df09b" translate="yes" xml:space="preserve">
          <source>Most nginx allocations are done in pools. Memory allocated in an nginx pool is freed automatically when the pool is destroyed. This provides good allocation performance and makes memory control easy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea83ee082da0f84a2be51cf26c4608dba5f2dbb" translate="yes" xml:space="preserve">
          <source>Multiple units can be combined in a single value by specifying them in the order from the most to the least significant, and optionally separated by whitespace. For example, &amp;ldquo;&lt;code&gt;1h 30m&lt;/code&gt;&amp;rdquo; specifies the same time as &amp;ldquo;&lt;code&gt;90m&lt;/code&gt;&amp;rdquo; or &amp;ldquo;&lt;code&gt;5400s&lt;/code&gt;&amp;rdquo;. A value without a suffix means seconds. It is recommended to always specify a suffix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d478ed1fc084a2cf47c74cc30d416bce4bdcf1d1" translate="yes" xml:space="preserve">
          <source>Name of nginx build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a011e6994891af49a48aa0fcc8c97d038fdc8b" translate="yes" xml:space="preserve">
          <source>Name-based HTTPS servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2488d617c5210f1a5c2875bf58b71af9545c6229" translate="yes" xml:space="preserve">
          <source>Name-based virtual servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eaf528ae695f51490814748b42c8c7555346a37" translate="yes" xml:space="preserve">
          <source>Named captures in regular expressions create variables (0.8.25) that can later be used in other directives:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87be1c0be72b48ee812d123d40cc04d09240d5c" translate="yes" xml:space="preserve">
          <source>Named regular expression server name captures have been supported since 0.8.25.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e91748557010f07119a40ac844fcae91cc2e7a3" translate="yes" xml:space="preserve">
          <source>Networking</source>
          <target state="translated">Networking</target>
        </trans-unit>
        <trans-unit id="9a0a3f0fa2a801a998e439aaafdd45831e1486e6" translate="yes" xml:space="preserve">
          <source>New methods and properties: &lt;a href=&quot;reference#s_on&quot;&gt;s.on()&lt;/a&gt;, &lt;a href=&quot;reference#s_off&quot;&gt;s.off()&lt;/a&gt;, &lt;a href=&quot;reference#s_allow&quot;&gt;s.allow()&lt;/a&gt;, &lt;a href=&quot;reference#s_done&quot;&gt;s.done()&lt;/a&gt;, &lt;a href=&quot;reference#s_decline&quot;&gt;s.decline()&lt;/a&gt;, &lt;a href=&quot;reference#s_deny&quot;&gt;s.deny()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2d35c9c03fcda6e8885c22621fc6c12c2d88bd" translate="yes" xml:space="preserve">
          <source>Next, add the second &lt;code&gt;location&lt;/code&gt; block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b364c5f1abcdd2215ae029b6542522088ec245" translate="yes" xml:space="preserve">
          <source>Next, open the configuration file. The default configuration file already includes several examples of the &lt;code&gt;server&lt;/code&gt; block, mostly commented out. For now comment out all such blocks and start a new &lt;code&gt;server&lt;/code&gt; block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105a9dacabb7949784885270e8b7aeb98ff5e90d" translate="yes" xml:space="preserve">
          <source>Next, use the server configuration from the previous section and modify it to make it a proxy server configuration. In the first &lt;code&gt;location&lt;/code&gt; block, put the &lt;a href=&quot;http/ngx_http_proxy_module#proxy_pass&quot;&gt;proxy_pass&lt;/a&gt; directive with the protocol, name and port of the proxied server specified in the parameter (in our case, it is &lt;code&gt;http://localhost:8080&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda7f23390e34a400a68512abbf4469239deee7c" translate="yes" xml:space="preserve">
          <source>Nginx provides the following logging macros:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4409732d73a82066174fa92e4f17dfa91d36e83e" translate="yes" xml:space="preserve">
          <source>Normally, loggers are created by existing nginx code from &lt;code&gt;error_log&lt;/code&gt; directives and are available at nearly every stage of processing in cycle, configuration, client connection and other objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="446d201e5f2aa789ba3545722e1d60e73f45512e" translate="yes" xml:space="preserve">
          <source>Not all connections are counted. A connection is counted only if it has a request being processed by the server and the whole request header has already been read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a29df76331ddb3c5c51a38bb4f8a09d67da17c" translate="yes" xml:space="preserve">
          <source>Note that accepting HTTP/2 connections over TLS requires the &amp;ldquo;Application-Layer Protocol Negotiation&amp;rdquo; (ALPN) TLS extension support, which is available only since &lt;a href=&quot;http://www.openssl.org&quot;&gt;OpenSSL&lt;/a&gt; version 1.0.2. Using the &amp;ldquo;Next Protocol Negotiation&amp;rdquo; (NPN) TLS extension for this purpose (available since OpenSSL version 1.0.1) is not guaranteed to work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8d36436b28ec17be9d64c8d1ccf6ae0e312720" translate="yes" xml:space="preserve">
          <source>Note that adding or removing a server from the group may result in remapping most of the keys to different servers. The method is compatible with the &lt;a href=&quot;https://metacpan.org/pod/Cache::Memcached&quot;&gt;Cache::Memcached&lt;/a&gt; Perl library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7c74d88eb10167c23f7be97173b8b50127d2f8" translate="yes" xml:space="preserve">
          <source>Note that after rebuilding Perl with the new &lt;code&gt;-Dusemultiplicity=yes&lt;/code&gt; or &lt;code&gt;-Dusethreads=yes&lt;/code&gt; parameters, all binary Perl modules will have to be rebuilt as well &amp;mdash; they will just stop working with the new Perl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de66fbda8de798f64c92af5cc95fc19d29a4bc7" translate="yes" xml:space="preserve">
          <source>Note that compression is essential for the correct matching of prefix string and regular expression locations. Without it, the &amp;ldquo;&lt;code&gt;//scripts/one.php&lt;/code&gt;&amp;rdquo; request would not match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b16d253505bc8935fc321d1976c2e1537fb3ab8e" translate="yes" xml:space="preserve">
          <source>Note that for HTTP connections &lt;code&gt;ngx_connection_t&lt;/code&gt;'s &lt;code&gt;data&lt;/code&gt; field points back to the request. Such requests are called active, as opposed to the other requests tied to the connection. An active request is used to handle client connection events and is allowed to output its response to the client. Normally, each request becomes active at some point so that it can send its output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5fa8793473ea97041dca7bd72b4351c81193fb2" translate="yes" xml:space="preserve">
          <source>Note that in order to accept both &lt;a href=&quot;ngx_http_ssl_module&quot;&gt;HTTPS&lt;/a&gt; and SPDY connections simultaneously on the same port, &lt;a href=&quot;http://www.openssl.org&quot;&gt;OpenSSL&lt;/a&gt; library used should support &amp;ldquo;Next Protocol Negotiation&amp;rdquo; TLS extension, available since OpenSSL version 1.0.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d7d455c8da45bfa61d5c056cc98ea8dfdcd6650" translate="yes" xml:space="preserve">
          <source>Note that locations of all types test only a URI part of request line without arguments. This is done because arguments in the query string may be given in several ways, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6370a35f6e7b981099507859d70d6f5b6ca74792" translate="yes" xml:space="preserve">
          <source>Note that redefining the log without also specifying the &lt;code&gt;debug&lt;/code&gt; level will disable the debugging log. In the example below, redefining the log on the &lt;a href=&quot;http/ngx_http_core_module#server&quot;&gt;server&lt;/a&gt; level disables the debugging log for this server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915de56bec6ddce4e2dcecaf7312f01c95c72b60" translate="yes" xml:space="preserve">
          <source>Note that the default server is a property of the listen port and not of the server name. More about this later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a505504002f05ac229ee19f4cf337dc57f70052" translate="yes" xml:space="preserve">
          <source>Note that there are no instructions for the &lt;a href=&quot;ngx_http_core_module#limit_rate&quot;&gt;limit_rate&lt;/a&gt; directive above as it is unrelated to the &lt;code&gt;ngx_http_rewrite_module&lt;/code&gt; module. A separate configuration is created for the &lt;a href=&quot;#if&quot;&gt;if&lt;/a&gt; block. If the condition holds true, a request is assigned this configuration where &lt;code&gt;limit_rate&lt;/code&gt; equals to 10k.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601131a63a7189835433443c490b64237b906c34" translate="yes" xml:space="preserve">
          <source>Note that using variables implies that a certificate will be loaded for each SSL handshake, and this may have a negative impact on performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650e1847f59ac68e38655d83311ff572ce0167e3" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s look at how nginx chooses a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8415fbf092c3f3345480abb862c6c25f6bfbf94a" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s look at how requests would be processed in the configuration above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6101250ca1afcc59baf36ca28be6209c3291e540" translate="yes" xml:space="preserve">
          <source>Numeric conversion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="3c78860cb4a101e5f89badf75b7af980cab6f5eb" translate="yes" xml:space="preserve">
          <source>Offsets may be also specified in gigabytes using &lt;code&gt;g&lt;/code&gt; or &lt;code&gt;G&lt;/code&gt; suffixes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c19f03a77e6bc0c2a56a1369389148a6a45cf6" translate="yes" xml:space="preserve">
          <source>Often modules need to perform an HTTP call to some external service. A common mistake is to use some external library, such as libcurl, to perform the HTTP request. It is absolutely unnecessary to bring a huge amount of external (probably &lt;a href=&quot;#using_libraries&quot;&gt;blocking&lt;/a&gt;!) code for the task which can be accomplished by nginx itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed80d60a0265f450419735f939f6cbf346faa5ce" translate="yes" xml:space="preserve">
          <source>On FreeBSD, AIO can be used starting from FreeBSD 4.3. Prior to FreeBSD 11.0, AIO can either be linked statically into a kernel:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8d46fd044c1c3b659f41afa82ef1b23b15e331" translate="yes" xml:space="preserve">
          <source>On FreeBSD, nginx can be installed either from the &lt;a href=&quot;http://www.freebsd.org/doc/handbook/pkgng-intro.html&quot;&gt;packages&lt;/a&gt; or through the &lt;a href=&quot;http://www.freebsd.org/doc/handbook/ports-using.html&quot;&gt;ports&lt;/a&gt; system. The ports system provides greater flexibility, allowing selection among a wide range of options. The port will compile nginx with the specified options and install it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da75b8882d1e086108348cfac07440efabb6b01" translate="yes" xml:space="preserve">
          <source>On FreeBSD, the &lt;code&gt;fcntl(O_READAHEAD,&lt;/code&gt;&lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt;&lt;code&gt;)&lt;/code&gt; system call, supported since FreeBSD 9.0-CURRENT, is used. FreeBSD 7 has to be &lt;a href=&quot;http://sysoev.ru/freebsd/patch.readahead.txt&quot;&gt;patched&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b00b606f2d7a6897992591fcdb698976fd6665e7" translate="yes" xml:space="preserve">
          <source>On Linux, &lt;a href=&quot;#directio&quot;&gt;directio&lt;/a&gt; can only be used for reading blocks that are aligned on 512-byte boundaries (or 4K for XFS). File&amp;rsquo;s unaligned end is read in blocking mode. The same holds true for byte range requests and for FLV requests not from the beginning of a file: reading of unaligned data at the beginning and end of a file will be blocking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d622d36013f628b11e81c38e7eecae1aa140c2d" translate="yes" xml:space="preserve">
          <source>On Linux, AIO can be used starting from kernel version 2.6.22. Also, it is necessary to enable &lt;a href=&quot;#directio&quot;&gt;directio&lt;/a&gt;, or otherwise reading will be blocking:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e295e098a5746d5b600d521bc5cb97fcfb15b9" translate="yes" xml:space="preserve">
          <source>On Linux, the &lt;code&gt;posix_fadvise(0, 0, 0, POSIX_FADV_SEQUENTIAL)&lt;/code&gt; system call is used, and so the &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; parameter is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7a765b1360717bdb06e1ff30d455346e907462" translate="yes" xml:space="preserve">
          <source>On UNIX, the &lt;code&gt;&lt;i&gt;md5&lt;/i&gt;&lt;/code&gt; request argument value can be obtained as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c26c1a9c0709eb6de05d673cc3ac27cc0b5b84a" translate="yes" xml:space="preserve">
          <source>On UNIX, the hash value for this example can be obtained as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595231ba17967729ff77264018bbd9c272546592" translate="yes" xml:space="preserve">
          <source>On systems that do not support opening of directories only for search, to use these parameters it is required that worker processes have read permissions for all directories being checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d11a61e43de28f334640395142186d93e6200d" translate="yes" xml:space="preserve">
          <source>On versions prior to 0.9.1, redirects can be made with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da4a0e9af64b26d40b39fcba56a57d072f83943" translate="yes" xml:space="preserve">
          <source>Once the master process receives the signal to reload configuration, it checks the syntax validity of the new configuration file and tries to apply the configuration provided in it. If this is a success, the master process starts new worker processes and sends messages to old worker processes, requesting them to shut down. Otherwise, the master process rolls back the changes and continues to work with the old configuration. Old worker processes, receiving a command to shut down, stop accepting new connections and continue to service current requests until all such requests are serviced. After that, the old worker processes exit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddd788df7eeadb3af4a850af142a0b0f6279478" translate="yes" xml:space="preserve">
          <source>One of the common scenarios for using DTrace with nginx is the following: attach to the nginx worker process to log request lines and request start times. The corresponding function to attach is &lt;code&gt;ngx_http_process_request()&lt;/code&gt;, and the argument in question is a pointer to the &lt;code&gt;ngx_http_request_t&lt;/code&gt; structure. DTrace script for such request logging can be as simple as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a224de4f9d7b7383f3556cb406386539e0d4f7" translate="yes" xml:space="preserve">
          <source>One of the frequent uses of nginx is setting it up as a proxy server, which means a server that receives requests, passes them to the proxied servers, retrieves responses from them, and sends them to the clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7b26b2ce5d8f0de0d591099bb07f9a3ed7a664" translate="yes" xml:space="preserve">
          <source>One of the old worker processes with PID 33129 still continues to work. After some time it exits:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e69e05b4cd613ffc1c42c258f79462e2066a14a" translate="yes" xml:space="preserve">
          <source>One of the processes is the master process and another is the worker process. If nginx does not start, look for the reason in the error log file &lt;code&gt;logs\error.log&lt;/code&gt;. If the log file has not been created, the reason for this should be reported in the Windows Event Log. If an error page is displayed instead of the expected page, also look for the reason in the &lt;code&gt;logs\error.log&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e7744a042fc074d8027c3fc8b751f3785227c0" translate="yes" xml:space="preserve">
          <source>One should bear in mind that passing a request to the next server is only possible if nothing has been sent to a client yet. That is, if an error or timeout occurs in the middle of the transferring of a response, fixing this is impossible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee0d4ef7eb28ed3981e2c3a6f098a0b2e4ca918" translate="yes" xml:space="preserve">
          <source>Only &amp;ldquo;&lt;code&gt;http://&lt;/code&gt;&amp;rdquo; OCSP responders are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbf445eedc2a8b0b21058d3e677c6abbe2905d9" translate="yes" xml:space="preserve">
          <source>Only OpenSSL 1.0.2 or higher supports separate &lt;a href=&quot;configuring_https_servers#chains&quot;&gt;certificate chains&lt;/a&gt; for different certificates. With older versions, only one certificate chain can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df39d623a8bd6bef003d04f9b162d90600354d45" translate="yes" xml:space="preserve">
          <source>Only OpenSSL 1.0.2 or higher supports separate certificate chains for different certificates. With older versions, only one certificate chain can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6443dc13d804e5b440738a7053a85607c8831533" translate="yes" xml:space="preserve">
          <source>Only byte strings can be converted to different encodings. For example, a string cannot be encoded to &lt;code&gt;hex&lt;/code&gt; directly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a44ad5c6700625bc744708ca5d8bce5f633129c" translate="yes" xml:space="preserve">
          <source>Only domain names can be passed in SNI, however some browsers may erroneously pass an IP address of the server as its name if a request includes literal IP address. One should not rely on this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f592d04d471125798463afa4a15531dafbc15f" translate="yes" xml:space="preserve">
          <source>Only one level of nesting is currently supported. The command has the following parameter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce530dd8e66ad94d3874630e6a402448d1c5464" translate="yes" xml:space="preserve">
          <source>Only the first 256k of the response body are examined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624c6c03a4eef08de0d1212e8d117fd50006f46e" translate="yes" xml:space="preserve">
          <source>Only the first &lt;a href=&quot;ngx_stream_proxy_module#proxy_buffer_size&quot;&gt;proxy_buffer_size&lt;/a&gt; bytes of data obtained from the server are examined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f9522bcb1dc90d1d63a85899758411e1e166de" translate="yes" xml:space="preserve">
          <source>Only the following codes could be returned before version 0.7.51: 204, 400, 402 &amp;mdash; 406, 408, 410, 411, 413, 416, and 500 &amp;mdash; 504.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf5e093149fa15365c797b12b39a00d5ec3a138" translate="yes" xml:space="preserve">
          <source>Optimization</source>
          <target state="translated">Optimization</target>
        </trans-unit>
        <trans-unit id="b3cf670b4cd53291eab7084eb54459c65288db12" translate="yes" xml:space="preserve">
          <source>Other codes are considered successful finalization codes and might activate the request writer to finish sending the response body. Once the body is completely sent, the request &lt;code&gt;count&lt;/code&gt; is decremented. If it reaches zero, the request is destroyed, but the client connection can still be used for other requests. If &lt;code&gt;count&lt;/code&gt; is positive, there are unfinished activities within the request, which will be finalized at a later point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ed4ec81c43288c78533c338a4c6d47a115a1bc" translate="yes" xml:space="preserve">
          <source>Other string functions are nginx-specific</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209745a6c2578fa439ca738b24293764eb32679d" translate="yes" xml:space="preserve">
          <source>Outputs the value of a variable. The command has the following parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd84dd935fd4f1e0c7dc44f40efd5b205c11b5d9" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;a href=&quot;ngx_stream_proxy_module#proxy_timeout&quot;&gt;proxy_timeout&lt;/a&gt; value for health checks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30956c34294fda22aa2c49d9b60faca2d9452612" translate="yes" xml:space="preserve">
          <source>Overrides the URL of the OCSP responder specified in the &amp;ldquo;&lt;a href=&quot;https://tools.ietf.org/html/rfc5280#section-4.2.2.1&quot;&gt;Authority Information Access&lt;/a&gt;&amp;rdquo; certificate extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="6505fb6cb3d9e92f68ef8c0e1d61d7f592b26dd7" translate="yes" xml:space="preserve">
          <source>PCRE JIT can speed up processing of regular expressions significantly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a837860a036b4f28321b03089e42844cbc726e6b" translate="yes" xml:space="preserve">
          <source>PID of the worker process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3db0385c25c5560fbfafe9942c025588b7a2132" translate="yes" xml:space="preserve">
          <source>Parameter value can contain variables (1.17.0). It may be useful in cases where rate should be limited depending on a certain condition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebdbe3f857b56da39607dc27e90670f916b2ffb9" translate="yes" xml:space="preserve">
          <source>Parameter value can contain variables. In this case, if an address is specified as a domain name, the name is searched among the described &lt;a href=&quot;ngx_http_upstream_module&quot;&gt;server groups&lt;/a&gt;, and, if not found, is determined using a &lt;a href=&quot;ngx_http_core_module#resolver&quot;&gt;resolver&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec7fc3774b04901f3fa374013fe921916df04bc" translate="yes" xml:space="preserve">
          <source>Parameter value can contain variables. In this case, if an address is specified as a domain name, the name is searched among the described server groups, and, if not found, is determined using a &lt;a href=&quot;ngx_http_core_module#resolver&quot;&gt;resolver&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eeee98750f33cbffaeac15159e30b9114ed6039" translate="yes" xml:space="preserve">
          <source>Parameters &lt;code&gt;on&lt;/code&gt; and &lt;code&gt;if_not_owner&lt;/code&gt; add a processing overhead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="502a90e4f23d4e19602b6f2ef19cc7f14148f5c9" translate="yes" xml:space="preserve">
          <source>Parameters Passed to a FastCGI Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c4a4a549aaa8d130248ec73f8c6226f5432358" translate="yes" xml:space="preserve">
          <source>Parameters can be as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62ca915db061750611bcdfb24f8045ff0f0f95e" translate="yes" xml:space="preserve">
          <source>Parameters can either be specified separately, or grouped in a single line using the &amp;ldquo;&lt;code&gt;:&lt;/code&gt;&amp;rdquo; delimiter. If a parameter includes the &amp;ldquo;&lt;code&gt;:&lt;/code&gt;&amp;rdquo; character, it should be escaped as &amp;ldquo;&lt;code&gt;%3A&lt;/code&gt;&amp;rdquo;. Also, &lt;code&gt;libxslt&lt;/code&gt; requires to enclose parameters that contain non-alphanumeric characters into single or double quotes, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba5a3cbbabe4ab5f3edbd3a386d32b72c2bad04" translate="yes" xml:space="preserve">
          <source>Parameters common for all methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ea799800e951914bbd4c173657fa31377de616" translate="yes" xml:space="preserve">
          <source>Parameters inside the &lt;code&gt;map&lt;/code&gt; block specify a mapping between source and resulting values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78fd345ae86a4ea1ea7bd125a2ecd2e2de6968a6" translate="yes" xml:space="preserve">
          <source>Parameters of caching can also be set directly in the response header. This has higher priority than setting of caching time using the directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b5e5bf63e1996a5ed8dae916db62eb74ba6acd" translate="yes" xml:space="preserve">
          <source>Parent server ID of the resolved server. The ID is assigned automatically and cannot be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c1b95b1e060899e9d8da0fe7d256756b8ca63e0" translate="yes" xml:space="preserve">
          <source>Passing a connection to the next server can be limited by &lt;a href=&quot;#proxy_next_upstream_tries&quot;&gt;the number of tries&lt;/a&gt; and by &lt;a href=&quot;#proxy_next_upstream_timeout&quot;&gt;time&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aedd8abdccf4d529a68b1fa5ba2ece8980eaad47" translate="yes" xml:space="preserve">
          <source>Passing a request to the next server can be limited by &lt;a href=&quot;#fastcgi_next_upstream_tries&quot;&gt;the number of tries&lt;/a&gt; and by &lt;a href=&quot;#fastcgi_next_upstream_timeout&quot;&gt;time&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca002d58a3c0f32481b5363e0274ef1ffc7c306a" translate="yes" xml:space="preserve">
          <source>Passing a request to the next server can be limited by &lt;a href=&quot;#grpc_next_upstream_tries&quot;&gt;the number of tries&lt;/a&gt; and by &lt;a href=&quot;#grpc_next_upstream_timeout&quot;&gt;time&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd0fe49b521cfb5e49767d2559dc1989b1e9a27" translate="yes" xml:space="preserve">
          <source>Passing a request to the next server can be limited by &lt;a href=&quot;#memcached_next_upstream_tries&quot;&gt;the number of tries&lt;/a&gt; and by &lt;a href=&quot;#memcached_next_upstream_timeout&quot;&gt;time&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dfc0b91490d4e9c24a45f3ac16e8426649b547e" translate="yes" xml:space="preserve">
          <source>Passing a request to the next server can be limited by &lt;a href=&quot;#proxy_next_upstream_tries&quot;&gt;the number of tries&lt;/a&gt; and by &lt;a href=&quot;#proxy_next_upstream_timeout&quot;&gt;time&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993ed4d4f883dbc6ef78d581e467bb5d148303f8" translate="yes" xml:space="preserve">
          <source>Passing a request to the next server can be limited by &lt;a href=&quot;#scgi_next_upstream_tries&quot;&gt;the number of tries&lt;/a&gt; and by &lt;a href=&quot;#scgi_next_upstream_timeout&quot;&gt;time&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48dd74d6b46ffd3fe42490869b72fd6792443a01" translate="yes" xml:space="preserve">
          <source>Passing a request to the next server can be limited by &lt;a href=&quot;#uwsgi_next_upstream_tries&quot;&gt;the number of tries&lt;/a&gt; and by &lt;a href=&quot;#uwsgi_next_upstream_timeout&quot;&gt;time&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61fb8b420f13e4bcd8d797763fb34470df2a2b8" translate="yes" xml:space="preserve">
          <source>People who during their shared hosting life used to configure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa93baef7e2259e6c22bca029690d5b055c2b25" translate="yes" xml:space="preserve">
          <source>Performs a conditional inclusion. The following commands are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8552f289f18dacdf1368b32892fbcd731fde3093" translate="yes" xml:space="preserve">
          <source>Perl 5.10 compatible syntax, supported since PCRE-7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78bdcefc24b555559dec529284d1cf609c1260b" translate="yes" xml:space="preserve">
          <source>Perl, if you want to build OpenSSL&lt;sup&gt;&amp;reg;&lt;/sup&gt; and nginx with SSL support. For example &lt;a href=&quot;http://www.activestate.com/activeperl&quot;&gt;ActivePerl&lt;/a&gt; or &lt;a href=&quot;http://strawberryperl.com&quot;&gt;Strawberry Perl&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2fcb2647a9af35eaf1df340a2b2c8f3107f075" translate="yes" xml:space="preserve">
          <source>Permits passing &lt;a href=&quot;#fastcgi_hide_header&quot;&gt;otherwise disabled&lt;/a&gt; header fields from a FastCGI server to a client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d19c11197d024dc5103d1f15a1355c57f3960de" translate="yes" xml:space="preserve">
          <source>Permits passing &lt;a href=&quot;#grpc_hide_header&quot;&gt;otherwise disabled&lt;/a&gt; header fields from a gRPC server to a client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b9dd4aeb60ef7c1b6ad8e5b340bbcd53b28c17" translate="yes" xml:space="preserve">
          <source>Permits passing &lt;a href=&quot;#proxy_hide_header&quot;&gt;otherwise disabled&lt;/a&gt; header fields from a proxied server to a client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a13da424cfbcb7f4836b8212434b68b562e4f1" translate="yes" xml:space="preserve">
          <source>Permits passing &lt;a href=&quot;#scgi_hide_header&quot;&gt;otherwise disabled&lt;/a&gt; header fields from an SCGI server to a client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4c081e318e8fa7abd47b86822089529bd5223a" translate="yes" xml:space="preserve">
          <source>Permits passing &lt;a href=&quot;#uwsgi_hide_header&quot;&gt;otherwise disabled&lt;/a&gt; header fields from a uwsgi server to a client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76ea3ad850340e22aade0de39ec43e495956797" translate="yes" xml:space="preserve">
          <source>Phase handlers are expected to return specific codes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1299c5da4d36f7c6543acebafdc41ccf1b565939" translate="yes" xml:space="preserve">
          <source>Phases</source>
          <target state="translated">Phases</target>
        </trans-unit>
        <trans-unit id="3ae2c2ab560ee9396868e39d4cc2c80645dcca81" translate="yes" xml:space="preserve">
          <source>Please note that most of the variables will have empty values when used with health checks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0099fdb41b20bc684c20322562c835e9aa5e22bd" translate="yes" xml:space="preserve">
          <source>Please note that this will limit access to all methods &lt;strong&gt;except&lt;/strong&gt; GET and HEAD.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2873f7f45acd93b2185be226c51316d30b60fba0" translate="yes" xml:space="preserve">
          <source>Please note that with round-robin or least-connected load balancing, each subsequent client&amp;rsquo;s request can be potentially distributed to a different server. There is no guarantee that the same client will be always directed to the same server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5b14fc10103a5687b6862d3e52810e28822aaf" translate="yes" xml:space="preserve">
          <source>Pointers are explicitly compared to &lt;code&gt;NULL&lt;/code&gt; (not &lt;code&gt;0&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778627418cb4b30cdfe47281afdbf30f1a173700" translate="yes" xml:space="preserve">
          <source>Pool</source>
          <target state="translated">Pool</target>
        </trans-unit>
        <trans-unit id="b8f82152fedd75a4a9923f8bf5623bebdae65ece" translate="yes" xml:space="preserve">
          <source>Port ranges (1.15.10) are specified with the first and last port separated by a hyphen:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62435c5f99c54a9243d8506f9978744ee5729e11" translate="yes" xml:space="preserve">
          <source>Possible future enhancements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c6a0c395807e3433a17140b90c66a4a3ab664a0" translate="yes" xml:space="preserve">
          <source>Possible responses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc5815b6a4a78d30f1fddc4cf16bcbeaf73e575" translate="yes" xml:space="preserve">
          <source>Posted events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5018a100839e3806d77ed5aa4b9aec78591f9a6e" translate="yes" xml:space="preserve">
          <source>Pre-built &lt;a href=&quot;https://nginx.org/en/linux_packages.html&quot;&gt;Linux&lt;/a&gt; packages provide out-of-the-box support for debugging log with the &lt;code&gt;nginx-debug&lt;/code&gt; binary (1.9.8) which can be run using commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea40acfa8199f2f5fac55591f887b6d9fbda8918" translate="yes" xml:space="preserve">
          <source>Pre-emptively sends (&lt;a href=&quot;https://tools.ietf.org/html/rfc7540#section-8.2&quot;&gt;pushes&lt;/a&gt;) a request to the specified &lt;code&gt;&lt;i&gt;uri&lt;/i&gt;&lt;/code&gt; along with the response to the original request. Only relative URIs with absolute path will be processed, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46fec83cee33c96793f4840bbc8a39f30cbbe386" translate="yes" xml:space="preserve">
          <source>Preliminary check for access. The &lt;a href=&quot;ngx_stream_limit_conn_module&quot;&gt;ngx_stream_limit_conn_module&lt;/a&gt; module is invoked at this phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690b8706d3e1f79bde61f6dc644048c260a4aafe" translate="yes" xml:space="preserve">
          <source>Preprocessor</source>
          <target state="translated">Preprocessor</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="39508f9eb0f4608781c6357701ef0f850ac31139" translate="yes" xml:space="preserve">
          <source>Presentation at nginx.conf 2018</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adef4f4b9461e3e8e2f89308f210e7e6808d7119" translate="yes" xml:space="preserve">
          <source>Prior to 0.7.14 SSL could not be enabled selectively for individual listening sockets, as shown above. SSL could only be enabled for the entire server using the &lt;a href=&quot;ngx_http_ssl_module#ssl&quot;&gt;ssl&lt;/a&gt; directive, making it impossible to set up a single HTTP/HTTPS server. The &lt;code&gt;ssl&lt;/code&gt; parameter of the &lt;a href=&quot;ngx_http_core_module#listen&quot;&gt;listen&lt;/a&gt; directive was added to solve this issue. The use of the &lt;a href=&quot;ngx_http_ssl_module#ssl&quot;&gt;ssl&lt;/a&gt; directive in modern versions is thus discouraged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1bcbbcaef344c57e256c4cad8ad5209835d1d4" translate="yes" xml:space="preserve">
          <source>Prior to version 1.1.18, the value &lt;code&gt;safari&lt;/code&gt; matched all Safari and Safari-like browsers on all operating systems, and keep-alive connections with them were disabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8224e984175a9e1e3119cf797205a5089e7f746" translate="yes" xml:space="preserve">
          <source>Prior to version 1.11.0, builtin parameters were used by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5414ce3b4c1ea87adc46335be59ebdcc5c41d8d" translate="yes" xml:space="preserve">
          <source>Prior to version 1.11.0, the &lt;code&gt;prime256v1&lt;/code&gt; curve was used by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4ad9de2ba3fe1902e9d58e55eb0dd0ac62be57" translate="yes" xml:space="preserve">
          <source>Prior to version 1.11.3, the default value was &lt;code&gt;on&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d580afe3f548f4300147c071b4d580d18db6a3" translate="yes" xml:space="preserve">
          <source>Prior to version 1.11.5, this parameter was available as part of our &lt;a href=&quot;http://nginx.com/products/&quot;&gt;commercial subscription&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a117c63c6d0ea7768c1e3d200515a0c3a92ee1f" translate="yes" xml:space="preserve">
          <source>Prior to version 1.11.6, incomplete connections were taken into account by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694949775465a37da6f11b0ed64a5b4c80755c03" translate="yes" xml:space="preserve">
          <source>Prior to version 1.11.6, incomplete requests were taken into account by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da131d1990affc2690f1573d76788517e43ca52a" translate="yes" xml:space="preserve">
          <source>Prior to version 1.11.6, the variable name was &lt;code&gt;$ssl_client_i_dn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448439664c0b232923b50fc403e082936dd48d9c" translate="yes" xml:space="preserve">
          <source>Prior to version 1.11.6, the variable name was &lt;code&gt;$ssl_client_s_dn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3837f89cad6e7bd0082543e9d9d08b3fc2012ba6" translate="yes" xml:space="preserve">
          <source>Prior to version 1.11.7, by default, UDP health check required a &lt;a href=&quot;#hc_match&quot;&gt;match&lt;/a&gt; block with the &lt;a href=&quot;#match_send&quot;&gt;send&lt;/a&gt; and &lt;a href=&quot;#match_expect&quot;&gt;expect&lt;/a&gt; parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c21cb37f52a6a32a1980ebf615c7392b03b2fa11" translate="yes" xml:space="preserve">
          <source>Prior to version 1.11.7, the &amp;ldquo;&lt;code&gt;FAILED&lt;/code&gt;&amp;rdquo; result did not contain the &lt;code&gt;&lt;i&gt;reason&lt;/i&gt;&lt;/code&gt; string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8402fb579d19d95a42e184bc856752d4c79e6e49" translate="yes" xml:space="preserve">
          <source>Prior to version 1.13.10, only the results of responses obtained using the &lt;a href=&quot;ngx_http_proxy_module&quot;&gt;ngx_http_proxy_module&lt;/a&gt;, &lt;a href=&quot;ngx_http_memcached_module&quot;&gt;ngx_http_memcached_module&lt;/a&gt;, &lt;a href=&quot;ngx_http_fastcgi_module&quot;&gt;ngx_http_fastcgi_module&lt;/a&gt; (1.5.6), &lt;a href=&quot;ngx_http_uwsgi_module&quot;&gt;ngx_http_uwsgi_module&lt;/a&gt; (1.5.6), and &lt;a href=&quot;ngx_http_scgi_module&quot;&gt;ngx_http_scgi_module&lt;/a&gt; (1.5.6) modules could be written into variables. The maximum size of the response was set with the &lt;a href=&quot;ngx_http_proxy_module#proxy_buffer_size&quot;&gt;proxy_buffer_size&lt;/a&gt;, &lt;a href=&quot;ngx_http_memcached_module#memcached_buffer_size&quot;&gt;memcached_buffer_size&lt;/a&gt;, &lt;a href=&quot;ngx_http_fastcgi_module#fastcgi_buffer_size&quot;&gt;fastcgi_buffer_size&lt;/a&gt;, &lt;a href=&quot;ngx_http_uwsgi_module#uwsgi_buffer_size&quot;&gt;uwsgi_buffer_size&lt;/a&gt;, and &lt;a href=&quot;ngx_http_scgi_module#scgi_buffer_size&quot;&gt;scgi_buffer_size&lt;/a&gt; directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee4b70a4821718004780abd3b7c9dbaec6846d8" translate="yes" xml:space="preserve">
          <source>Prior to version 1.13.3, the configuration was accessible only via a special location handled by &lt;a href=&quot;../http/ngx_http_upstream_conf_module#upstream_conf&quot;&gt;upstream_conf&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2d2ef5e03a3e0afbda527c9407cf8991a262ac" translate="yes" xml:space="preserve">
          <source>Prior to version 1.13.3, the configuration was accessible only via a special location handled by &lt;a href=&quot;ngx_http_upstream_conf_module#upstream_conf&quot;&gt;upstream_conf&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6346fcecae7e942ca92f4cffbd19a7ba8f9cd8f9" translate="yes" xml:space="preserve">
          <source>Prior to version 1.13.6, the parameter could be changed only with the &lt;a href=&quot;ngx_http_api_module&quot;&gt;API&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f5f225fad2e412bb9d993a128518afda9cfade" translate="yes" xml:space="preserve">
          <source>Prior to version 1.13.7, only HS256, RS256, ES256 algorithms were supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a53b7293052cf3e11f9fccaba40ba8897f47670" translate="yes" xml:space="preserve">
          <source>Prior to version 1.13.7, only one key name could be specified, and the result was undefined for arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810e6fdc2bba496155329ff10cd547934a45db76" translate="yes" xml:space="preserve">
          <source>Prior to version 1.3.4, if this parameter was omitted then the operating system&amp;rsquo;s settings were in effect for the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0731982d2a6dd59c46e5623c55f5f4237234ec2a" translate="yes" xml:space="preserve">
          <source>Prior to version 1.5.13, the default value depended on the size of the processor&amp;rsquo;s cache line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8ce26c76f3b6b3996216182323ec95d8bab55e" translate="yes" xml:space="preserve">
          <source>Prior to version 1.5.13, the default value was 512.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866f3cd54b48049b677067cd6383fc7b5f20ffbc" translate="yes" xml:space="preserve">
          <source>Prior to version 1.7.6, a &lt;code&gt;&lt;i&gt;key&lt;/i&gt;&lt;/code&gt; could contain exactly one variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c8ee11395e298935fc3fd57b20ff6cb5e77753" translate="yes" xml:space="preserve">
          <source>Prior to version 1.9.5, the default value was 1 32k.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8573eb79ea2e655a211288294c0d6723a7c2bc35" translate="yes" xml:space="preserve">
          <source>Prior to version 1.9.8, the default value was 256 on all platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f4c13a6a06f999cc56eb966c94f71ef2658a3f" translate="yes" xml:space="preserve">
          <source>Process</source>
          <target state="translated">Process</target>
        </trans-unit>
        <trans-unit id="5df0bc5493352bb48a5c9d96843c5072972f58fd" translate="yes" xml:space="preserve">
          <source>Process I/O events by calling a handler, specific to the event notification mechanism, chosen by nginx configuration. This handler waits for at least one I/O event to happen, but only until the next timeout expires. When a read or write event occurs, the &lt;code&gt;ready&lt;/code&gt; flag is set and the event's handler is called. For Linux, the &lt;code&gt;ngx_epoll_process_events()&lt;/code&gt; handler is normally used, which calls &lt;code&gt;epoll_wait()&lt;/code&gt; to wait for I/O events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf423d74bede80a66825b0acedca92838917c6e" translate="yes" xml:space="preserve">
          <source>Process posted events by calling &lt;code&gt;ngx_event_process_posted()&lt;/code&gt;. The function repeatedly removes the first element from the posted events queue and calls the element's handler, until the queue is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7308bb59f2876220e45299939d241199595df2" translate="yes" xml:space="preserve">
          <source>Processes</source>
          <target state="translated">Processes</target>
        </trans-unit>
        <trans-unit id="95ff03e101f25646d7f09c7ead39f8bbc4153cb0" translate="yes" xml:space="preserve">
          <source>Processes:</source>
          <target state="translated">Processes:</target>
        </trans-unit>
        <trans-unit id="53a896dbbde99b110e547215013f71cae4f5dfa1" translate="yes" xml:space="preserve">
          <source>Processing of one or more of these response header fields can be disabled using the &lt;a href=&quot;#fastcgi_ignore_headers&quot;&gt;fastcgi_ignore_headers&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff1091cd40fb5b39b859c5a65dc190ca0289f99" translate="yes" xml:space="preserve">
          <source>Processing of one or more of these response header fields can be disabled using the &lt;a href=&quot;#proxy_ignore_headers&quot;&gt;proxy_ignore_headers&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b84eac9cbf459536bc79dcf47605b67818df94e" translate="yes" xml:space="preserve">
          <source>Processing of one or more of these response header fields can be disabled using the &lt;a href=&quot;#scgi_ignore_headers&quot;&gt;scgi_ignore_headers&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf72e18113b6b2bde71c09f946fc32c14ef42ea" translate="yes" xml:space="preserve">
          <source>Processing of one or more of these response header fields can be disabled using the &lt;a href=&quot;#uwsgi_ignore_headers&quot;&gt;uwsgi_ignore_headers&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc68f20ecfe6943adeb2e669c2592f02493f9a8" translate="yes" xml:space="preserve">
          <source>Profiles will be stored as &lt;code&gt;/path/to/profile.&amp;lt;worker_pid&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed77c3f7ffc41a33eadccef5727dc7c97079235" translate="yes" xml:space="preserve">
          <source>Protocol</source>
          <target state="translated">Protocol</target>
        </trans-unit>
        <trans-unit id="8486b83141c9e2932e695878fb2aa907ede58110" translate="yes" xml:space="preserve">
          <source>Provides the configuration file context in which the HTTP server directives are specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8351441556c27c9eac7121828dfb3cef8efcf206" translate="yes" xml:space="preserve">
          <source>Provides the configuration file context in which the directives that affect connection processing are specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e51a5de1d6f02918fc6f6a487defec06470b18" translate="yes" xml:space="preserve">
          <source>Provides the configuration file context in which the mail server directives are specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf21ad6a4f703ff8e30116fb851d0d7e5d613bc3" translate="yes" xml:space="preserve">
          <source>Provides the configuration file context in which the stream server directives are specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a206b239c5eb6d95a2d7ecac787f33fc83a8fc1a" translate="yes" xml:space="preserve">
          <source>Pseudo-streaming works in alliance with a compatible Flash player. The player sends an HTTP request to the server with the start time specified in the query string argument (named simply &lt;code&gt;start&lt;/code&gt; and specified in seconds), and the server responds with the stream such that its start position corresponds to the requested time, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993f7288171ad0caa9248ddf4ea6491358d00562" translate="yes" xml:space="preserve">
          <source>Puts the &lt;a href=&quot;ngx_http_upstream_module&quot;&gt;http&lt;/a&gt; upstream server into the &amp;ldquo;draining&amp;rdquo; mode (1.7.5). In this mode, only requests &lt;a href=&quot;ngx_http_upstream_module#sticky&quot;&gt;bound&lt;/a&gt; to the server will be proxied to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e620fef64b221e206820a50637e6026d065fbb5" translate="yes" xml:space="preserve">
          <source>Python compatible syntax, supported since PCRE-4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5860c8458788e44e7636fa364548e067049a0d7b" translate="yes" xml:space="preserve">
          <source>QUIT</source>
          <target state="translated">QUIT</target>
        </trans-unit>
        <trans-unit id="d325fcd919384f395c02751e03d2cd0288b98cca" translate="yes" xml:space="preserve">
          <source>Queue</source>
          <target state="translated">Queue</target>
        </trans-unit>
        <trans-unit id="6893515d8d8210cd6951825230df8c066f42b8f0" translate="yes" xml:space="preserve">
          <source>RS256, RS384, RS512</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb64de56bb1971068fc82a6c792f2add57b9b19" translate="yes" xml:space="preserve">
          <source>Rate limit can also be set in the &amp;ldquo;X-Accel-Limit-Rate&amp;rdquo; header field of a proxied server response. This capability can be disabled using the &lt;a href=&quot;ngx_http_proxy_module#proxy_ignore_headers&quot;&gt;proxy_ignore_headers&lt;/a&gt;, &lt;a href=&quot;ngx_http_fastcgi_module#fastcgi_ignore_headers&quot;&gt;fastcgi_ignore_headers&lt;/a&gt;, &lt;a href=&quot;ngx_http_uwsgi_module#uwsgi_ignore_headers&quot;&gt;uwsgi_ignore_headers&lt;/a&gt;, and &lt;a href=&quot;ngx_http_scgi_module#scgi_ignore_headers&quot;&gt;scgi_ignore_headers&lt;/a&gt; directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5192ccd32093c851d37b5fe6a119eb3dcbbc214" translate="yes" xml:space="preserve">
          <source>Rate limit can also be set in the &lt;a href=&quot;#var_limit_rate&quot;&gt;&lt;code&gt;$limit_rate&lt;/code&gt;&lt;/a&gt; variable, however, since version 1.17.0, this method is not recommended:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8b2d0053f9be1a3d89eb92b5031298db6ac710" translate="yes" xml:space="preserve">
          <source>Read and send file operations are offloaded to threads of the specified &lt;a href=&quot;../ngx_core_module#thread_pool&quot;&gt;pool&lt;/a&gt;. If the pool name is omitted, the pool with the name &amp;ldquo;&lt;code&gt;default&lt;/code&gt;&amp;rdquo; is used. The pool name can also be set with variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680aec290d86d16853419395e7d40a96c5fbc421" translate="yes" xml:space="preserve">
          <source>Reading initial bytes of data into the &lt;a href=&quot;ngx_stream_core_module#preread_buffer_size&quot;&gt;preread buffer&lt;/a&gt; to allow modules such as &lt;a href=&quot;ngx_stream_ssl_preread_module&quot;&gt;ngx_stream_ssl_preread_module&lt;/a&gt; analyze the data before its processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1208845c87ef18e4b9bb326914ecf9693048ff8f" translate="yes" xml:space="preserve">
          <source>Reading or discarding the client request body from a subrequest is not allowed. It must always be done in the main request. When a subrequest is created, it inherits the parent's &lt;code&gt;request_body&lt;/code&gt; object which can be used by the subrequest if the main request has previously read the request body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5b31ec7ea49a3fdbab01283606c966db22f9aa" translate="yes" xml:space="preserve">
          <source>Red-Black tree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ee459e33ca80e141c9ae220d89687fe19f417c" translate="yes" xml:space="preserve">
          <source>Redirected and rewritten requests become internal and can access the &lt;a href=&quot;../http/ngx_http_core_module#internal&quot;&gt;internal&lt;/a&gt; locations. Internal requests have the &lt;code&gt;internal&lt;/code&gt; flag set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0adb2b4fd398caea57cb7ffa25fa20febe24268" translate="yes" xml:space="preserve">
          <source>Redirection for old browsers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d41588f18b9cc0acad359eda8104e402fed1cec" translate="yes" xml:space="preserve">
          <source>Reduces timer resolution in worker processes, thus reducing the number of &lt;code&gt;gettimeofday()&lt;/code&gt; system calls made. By default, &lt;code&gt;gettimeofday()&lt;/code&gt; is called each time a kernel event is received. With reduced resolution, &lt;code&gt;gettimeofday()&lt;/code&gt; is only called once per specified &lt;code&gt;&lt;i&gt;interval&lt;/i&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="5b41e31016ccf130f515780f7a5ada164584c852" translate="yes" xml:space="preserve">
          <source>Regular expression server name captures have been supported since 0.7.40.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831dbad63f50bdf8706fc51226059f5e89666e14" translate="yes" xml:space="preserve">
          <source>Regular expression server names have been supported since 0.6.7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3172c4ae8fee97c04bb506eac2e6f47443f5a679" translate="yes" xml:space="preserve">
          <source>Regular expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629756d3f6b3cd2dd64c12fa2fc33e1897a3aa15" translate="yes" xml:space="preserve">
          <source>Regular expressions are tested sequentially and therefore are the slowest method and are non-scalable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33566e8b1a629851ab3ac098e0ddbda4c737449b" translate="yes" xml:space="preserve">
          <source>Regular expressions can contain captures (0.7.40) that can later be used in other directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd42c3e6804b9a2d316b8ccaabd97ab6f75a2ea" translate="yes" xml:space="preserve">
          <source>Regular expressions can contain captures (0.7.40) that can later be used in other directives:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e891452b8b186129ba47f29d57a132feca0af2a" translate="yes" xml:space="preserve">
          <source>Regular expressions names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac55d7200c442fb6c7b3517f7db59bf72cc8fa3" translate="yes" xml:space="preserve">
          <source>Release Date: 01 Feb 2017</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b04212cd80dbd840eccebd523b2b67baecafc87" translate="yes" xml:space="preserve">
          <source>Release Date: 04 Apr 2017</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b1186f4519cc4219d349c30503023a84810a77" translate="yes" xml:space="preserve">
          <source>Release Date: 08 Aug 2017</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdeaa4ed1271420df560095b9d23cb00e9c39341" translate="yes" xml:space="preserve">
          <source>Release Date: 09 Oct 2017</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4118bb89b9c7c8c2726c65cbee282d563d60f55e" translate="yes" xml:space="preserve">
          <source>Release Date: 13 Dec 2016</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3b77467b83bab08d0558f428cb1c42f374120a" translate="yes" xml:space="preserve">
          <source>Release Date: 16 April 2019</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c56d5d8ca9d7dae584a7e3e72bc33b52b0faf3" translate="yes" xml:space="preserve">
          <source>Release Date: 18 September 2018</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3237f9bbd64f744b337e6bab9238fe8920c5c418" translate="yes" xml:space="preserve">
          <source>Release Date: 19 June 2018</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9913577b23534e3074a12dbb163ecbf8f2a67761" translate="yes" xml:space="preserve">
          <source>Release Date: 20 Nov 2017</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b5d38a6f0e8b9f11213b2b00640f778a468a71" translate="yes" xml:space="preserve">
          <source>Release Date: 21 May 2019</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04284f5f342df23d0fce0c910e033a8608e70d78" translate="yes" xml:space="preserve">
          <source>Release Date: 24 Jan 2017</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e5562aff3e95a01ce4a3b75ccd0e8e31b23dc09" translate="yes" xml:space="preserve">
          <source>Release Date: 25 December 2018</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b3d7036db13a4491de0bd1876c57c0e9950701a" translate="yes" xml:space="preserve">
          <source>Release Date: 25 June 2019</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb592a2c8c942b1fb84708f9414477967dcc0edb" translate="yes" xml:space="preserve">
          <source>Release Date: 26 February 2019</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38b8ab28d583ea2ccae4d489cbba1ff3ea17554" translate="yes" xml:space="preserve">
          <source>Release Date: 26 March 2019</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5626f15987ad02f007ce459bd84038cfaa0087e6" translate="yes" xml:space="preserve">
          <source>Release Date: 27 Dec 2016</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe64599b4fc570464f046ac59f9438ec56e37208" translate="yes" xml:space="preserve">
          <source>Release Date: 27 Jun 2017</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13557046c0731e65ea64a21d02178011c37ea565" translate="yes" xml:space="preserve">
          <source>Release Date: 27 November 2018</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbbe5e52a841608c0161d82bea3ad674fea15b8f" translate="yes" xml:space="preserve">
          <source>Release Date: 3 Apr 2018</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef458bd2c198fa9078d34dff2b9d67cd0991da57" translate="yes" xml:space="preserve">
          <source>Release Date: 30 October 2018</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c48d9b095b18ce89ed8bb4ca4737b045547b17f" translate="yes" xml:space="preserve">
          <source>Release Date: 31 Aug 2017</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f45650479ef5df492699198de75845fa128e991d" translate="yes" xml:space="preserve">
          <source>Release Date: 31 July 2018</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33a3557424fc6584f447d5cc9d6a386b50c84d2" translate="yes" xml:space="preserve">
          <source>Release Date: 31 May 2018</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4c3619364a5e1aac92d399132fe50abf9dc3e6" translate="yes" xml:space="preserve">
          <source>Removed properties of the &lt;a href=&quot;reference#stream&quot;&gt;Stream&lt;/a&gt; object: &lt;code&gt;s.OK&lt;/code&gt;, &lt;code&gt;s.ABORT&lt;/code&gt;, &lt;code&gt;s.AGAIN&lt;/code&gt;, &lt;code&gt;s.DECLINED&lt;/code&gt;, &lt;code&gt;s.ERROR&lt;/code&gt; (replaced with &lt;a href=&quot;reference#s_allow&quot;&gt;s.allow()&lt;/a&gt;, &lt;a href=&quot;reference#s_done&quot;&gt;s.done()&lt;/a&gt;, &lt;a href=&quot;reference#s_deny&quot;&gt;s.deny()&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e978c4be9d429d84cce4e66f54a964d977fd685f" translate="yes" xml:space="preserve">
          <source>Removes a server from a stream server group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e30a5a17e3ef0e08e24b7b0ce2210a77002ac8" translate="yes" xml:space="preserve">
          <source>Removes a server from an HTTP upstream server group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d355a84f4f1132ee8555255967e01134ba5e1e7" translate="yes" xml:space="preserve">
          <source>Removes a server from the group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a873dd6b787b492e9393171b10068f1fe2185cd" translate="yes" xml:space="preserve">
          <source>Removes whitespaces from both ends of a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aed03cac49d5e43da4e855a967286931a4d621a" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="translated">Request</target>
        </trans-unit>
        <trans-unit id="8d9503e1f0fda66984f613bde4aa4538c4453b2b" translate="yes" xml:space="preserve">
          <source>Request Argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="943cee89464e50a8eeb04ca7c152b45101e9636a" translate="yes" xml:space="preserve">
          <source>Request body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dba78ad483ea2c67187bb5150024fa4931e706b" translate="yes" xml:space="preserve">
          <source>Request finalization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b27d8537b98b66f163a078a819e80fed7b5b697" translate="yes" xml:space="preserve">
          <source>Request parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be553530c629101a00c56fd50a88deb527be1141" translate="yes" xml:space="preserve">
          <source>Request redirection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0e7ce9ae95cfb810daec9034953e6593131003" translate="yes" xml:space="preserve">
          <source>Request:</source>
          <target state="translated">Request:</target>
        </trans-unit>
        <trans-unit id="bbd12d8357a45999e6d04e781d23a94c3c9f200c" translate="yes" xml:space="preserve">
          <source>Requests are logged in the context of a location where processing ends. It may be different from the original location, if an &lt;a href=&quot;ngx_http_core_module#internal&quot;&gt;internal redirect&lt;/a&gt; happens during request processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d48d9a1ca19ef9bcdd90b95617aaa7b58ee6cd08" translate="yes" xml:space="preserve">
          <source>Requests sent within early data are subject to &lt;a href=&quot;https://tools.ietf.org/html/rfc8470&quot;&gt;replay attacks&lt;/a&gt;. To protect against such attacks at the application layer, the &lt;a href=&quot;#var_ssl_early_data&quot;&gt;$ssl_early_data&lt;/a&gt; variable should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41bf7198820dffb9be0bb22f4e0b1a53bd6bba82" translate="yes" xml:space="preserve">
          <source>Required to add a backup server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16016973439cdb06cfe1e5b1812994941b91cb9" translate="yes" xml:space="preserve">
          <source>Resets counters of SSL handshakes and session reuses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22925ec7c964443050eb296d2e2a4b4d9cf9641" translate="yes" xml:space="preserve">
          <source>Resets counters of abnormally terminated and respawned child processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f09a4c9303708e76ff63d9ae84e3d34005db8dce" translate="yes" xml:space="preserve">
          <source>Resets statistics of accepted and discarded connections, sessions, received and sent bytes in a particular stream server zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0401d34f6e0ad0e9287c9edd0f0b18f80fc35a" translate="yes" xml:space="preserve">
          <source>Resets statistics of accepted and discarded requests, responses, received and sent bytes in a particular HTTP server zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5cacfc89fce3ec0306d350faa44b074f7a053c6" translate="yes" xml:space="preserve">
          <source>Resets statistics of accepted and dropped client connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ed1ecd7aa80a43ce90d78eba3b808a8c4ce3a8" translate="yes" xml:space="preserve">
          <source>Resets statistics of cache hits/misses in a particular cache zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3e9570d564c852f2eefc088abe8951e5b5c336" translate="yes" xml:space="preserve">
          <source>Resets the &amp;ldquo;&lt;code&gt;reqs&lt;/code&gt;&amp;rdquo; and &amp;ldquo;&lt;code&gt;fails&lt;/code&gt;&amp;rdquo; metrics for each memory slot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70e74fb6bae190fb3e8a23064eeca7e0bf0b7803" translate="yes" xml:space="preserve">
          <source>Resets the number of total client HTTP requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e724cb8875de2732d7c9c11b7e0d932b6283b080" translate="yes" xml:space="preserve">
          <source>Resets the statistics for each upstream server in an upstream server group and queue statistics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="039d2154c99882a8d7bb8c6a6a0701e99a30cd63" translate="yes" xml:space="preserve">
          <source>Resets the statistics for each upstream server in an upstream server group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ae051ef8a268fcb1e0e3fc4684f4cfacdc805a" translate="yes" xml:space="preserve">
          <source>Resolving of names into IPv6 addresses is supported starting from version 1.5.8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e617e4fc9da3de9693eac5990613543b86c63f9" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="translated">Response</target>
        </trans-unit>
        <trans-unit id="f003d35e4131a41424a1edfbb53ccfb4138d412f" translate="yes" xml:space="preserve">
          <source>Response Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176070ca20a7563bed4cef2212a9be37af09f14a" translate="yes" xml:space="preserve">
          <source>Response body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b398df4add831e6b05ee4c0b368c39fd3f5bc77" translate="yes" xml:space="preserve">
          <source>Response header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016df9f27abc51c7b43bef9a62b70f578999adc0" translate="yes" xml:space="preserve">
          <source>Returning Fastest Response from Proxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a774f2ec2ecbe36c4ec33a24b06882331c0c994" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if a string begins with the characters of a specified string, otherwise &lt;code&gt;false&lt;/code&gt;. The optional &lt;code&gt;position&lt;/code&gt; parameter is the position in this string at which to begin search for &lt;code&gt;searchString&lt;/code&gt;. Default value is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b13a1c00ddce61ac94f6eb88a055735cf80242" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if a string ends with the characters of a specified string, otherwise &lt;code&gt;false&lt;/code&gt;. The optional &lt;code&gt;length&lt;/code&gt; parameter is the the length of string. If omitted, the default value is the length of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c199e350886a8383e2cf1537c5c32abb193a3af4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if a string is found within another string, otherwise &lt;code&gt;false&lt;/code&gt;. The optional &lt;code&gt;position&lt;/code&gt; parameter is the position within the string at which to begin search for &lt;code&gt;searchString&lt;/code&gt;. Default value is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6ae8c4f81561f653f4f605abef1abf0323307c" translate="yes" xml:space="preserve">
          <source>Returns SSL statistics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4c88f20b6eaddb89722b8dd5032a49da877ac4" translate="yes" xml:space="preserve">
          <source>Returns a list of first level HTTP endpoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3487e79be75c9adc962329dc8afd978611492de" translate="yes" xml:space="preserve">
          <source>Returns a list of first level stream endpoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a32363fca54e73e4ffa097a9fcfe6ec42654b3" translate="yes" xml:space="preserve">
          <source>Returns a list of root endpoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9eb316e9277492a33a904d417416f8174303e3" translate="yes" xml:space="preserve">
          <source>Returns a new string containing a part of an original string between &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; or from &lt;code&gt;start&lt;/code&gt; to the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04abe1616d87eb2fb8096855debf88bf1ffe57a1" translate="yes" xml:space="preserve">
          <source>Returns a new string with matches of a pattern (&lt;code&gt;string&lt;/code&gt; or a &lt;code&gt;regexp&lt;/code&gt;) replaced by a &lt;code&gt;string&lt;/code&gt; or a &lt;code&gt;function&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25800782f58eb1417dfebbe818996d871ffe864" translate="yes" xml:space="preserve">
          <source>Returns a number representing the code point value of the character at the given &lt;code&gt;position&lt;/code&gt;; &lt;code&gt;undefined&lt;/code&gt; if there is no element at position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ec86927b6e9571a6dd192b4a53dc7342ba9ca0" translate="yes" xml:space="preserve">
          <source>Returns a string from one or more Unicode code points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c9eb19bef3e8d20163db08f6aa915c8efdf802" translate="yes" xml:space="preserve">
          <source>Returns a string of a specified &lt;code&gt;length&lt;/code&gt; with the pad &lt;code&gt;string&lt;/code&gt; applied to the end of the specified string (&lt;a href=&quot;changes#njs0.2.3&quot;&gt;0.2.3&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e790942ad8c98e699b32a779b2d7a908e079a0" translate="yes" xml:space="preserve">
          <source>Returns a string of a specified &lt;code&gt;length&lt;/code&gt; with the pad &lt;code&gt;string&lt;/code&gt; applied to the start of the specified string (&lt;a href=&quot;changes#njs0.2.3&quot;&gt;0.2.3&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ddb8c075b346de60326cce5cd8cb0031c5a6d99" translate="yes" xml:space="preserve">
          <source>Returns a string representing one Unicode code unit at the specified &lt;code&gt;index&lt;/code&gt;; empty string if index is out of range. The index can be an integer between 0 and 1-less-than the length of the string. If no index is provided, the default is &lt;code&gt;0&lt;/code&gt;, so the first character in the string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88c1b27e9e70944f3bbfa9cbc0fcaf12f94842c" translate="yes" xml:space="preserve">
          <source>Returns a string that contains the concatenation of specified &lt;code&gt;strings&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0679c41b127f92a43d0a956e5847692146199b" translate="yes" xml:space="preserve">
          <source>Returns a string with the specified &lt;code&gt;number&lt;/code&gt; of copies of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b3a669ed68f39cb21b2cd6360bf5707a3cbc89" translate="yes" xml:space="preserve">
          <source>Returns an array that contains the command line arguments passed when the current process was launched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012020a61fceb252af062eb9a8889eeec13af494" translate="yes" xml:space="preserve">
          <source>Returns an object containing the user environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed3676345dc033a4af0e88bc6da0ef2eaddef90" translate="yes" xml:space="preserve">
          <source>Returns configuration of a particular server in the HTTP upstream server group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2341ab0bb64a314fb090dd97390bfda53c189e3" translate="yes" xml:space="preserve">
          <source>Returns configuration of a particular server in the stream upstream server group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5003a0d6b82d2061119e9db2a1c7c352d00a9a09" translate="yes" xml:space="preserve">
          <source>Returns configuration of each server in a particular HTTP upstream server group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2dd358cb5b83631da1699f0ef18c1683098811" translate="yes" xml:space="preserve">
          <source>Returns configuration of each server in a particular stream upstream server group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ebea49e2805e17184c29021dbfa02520d8c58b" translate="yes" xml:space="preserve">
          <source>Returns key-value pairs for each HTTP keyval shared memory &lt;a href=&quot;ngx_http_keyval_module#keyval_zone&quot;&gt;zone&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c2995403bf8eb85cf7207ced350b66ac9a4ff5" translate="yes" xml:space="preserve">
          <source>Returns key-value pairs for each stream keyval shared memory &lt;a href=&quot;../stream/ngx_stream_keyval_module#keyval_zone&quot;&gt;zone&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3ffc3829722fd6772f469927bad70f7defa6f2" translate="yes" xml:space="preserve">
          <source>Returns key-value pairs stored in a particular HTTP keyval shared memory &lt;a href=&quot;ngx_http_keyval_module#keyval_zone&quot;&gt;zone&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c161bebe40d832c9de2b0b779d1deeb2957dbd" translate="yes" xml:space="preserve">
          <source>Returns key-value pairs stored in a particular stream keyval shared memory &lt;a href=&quot;../stream/ngx_stream_keyval_module#keyval_zone&quot;&gt;zone&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2d5635f14e185af4b0dddfcfd30f33d11a2fd8" translate="yes" xml:space="preserve">
          <source>Returns match of a string against a &lt;code&gt;regexp&lt;/code&gt;. The optional &lt;code&gt;limit&lt;/code&gt; parameter is an integer that specifies a limit on the number of splits to be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe92c5fec5ad8dd191fadccc794d5df607cfe52" translate="yes" xml:space="preserve">
          <source>Returns nginx version, build name, address, number of configuration reloads, IDs of master and worker processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba0b6fc8afbfe291ac9b75250350264a868ab966" translate="yes" xml:space="preserve">
          <source>Returns statistics of client connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b2551b656f2ba3ba901368b90ecf698c4249d3" translate="yes" xml:space="preserve">
          <source>Returns status information for each HTTP &lt;a href=&quot;ngx_http_api_module#status_zone&quot;&gt;server zone&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0b90e74450a96c6982ec32840a08ea397bcc4a" translate="yes" xml:space="preserve">
          <source>Returns status information for each stream &lt;a href=&quot;ngx_http_api_module#status_zone&quot;&gt;server zone&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab9206bca0204b250fddb3ddf47db03eaa3b18d" translate="yes" xml:space="preserve">
          <source>Returns status of a particular HTTP server zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01718472973468d99a58526e65a9c389b609f188" translate="yes" xml:space="preserve">
          <source>Returns status of a particular HTTP upstream server group and its servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2c96d2a9e2401dd027714340a75eccf4ceeb4a" translate="yes" xml:space="preserve">
          <source>Returns status of a particular cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f7d024fa9342ec7fd3fdcf15b04ed93758e8eb" translate="yes" xml:space="preserve">
          <source>Returns status of a particular stream server zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c52dca386943e3b71718266bf14d845795fa4fa" translate="yes" xml:space="preserve">
          <source>Returns status of a particular stream upstream server group and its servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ee363a4642319b7609d676c2ad0531f8add8263" translate="yes" xml:space="preserve">
          <source>Returns status of client HTTP requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b250457925cbadba0625160e9f8f3229717de54c" translate="yes" xml:space="preserve">
          <source>Returns status of each HTTP upstream server group and its servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5239ac4a5bceecc467cb16aab8ef72653d5ed2" translate="yes" xml:space="preserve">
          <source>Returns status of each cache configured by &lt;a href=&quot;ngx_http_proxy_module#proxy_cache_path&quot;&gt;proxy_cache_path&lt;/a&gt; and other &amp;ldquo;&lt;code&gt;*_cache_path&lt;/code&gt;&amp;rdquo; directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db717a4974d56dd89ea727bb3c642694ed075d9b" translate="yes" xml:space="preserve">
          <source>Returns status of each stream upstream server group and its servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb60fcb85a63f5b67199e0ac8c60aed7fc006220" translate="yes" xml:space="preserve">
          <source>Returns status of slabs for a particular shared memory zone with slab allocator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e49c11e26e62f9911606f09fe7d0b0290bdf04e" translate="yes" xml:space="preserve">
          <source>Returns status of slabs for each shared memory zone with slab allocator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc429b5797de7e7633e7548546ca1e57c3577039" translate="yes" xml:space="preserve">
          <source>Returns synchronization status of a cluster node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557b14dc32f4ff24a4e37a4e414ca2585de17025" translate="yes" xml:space="preserve">
          <source>Returns the PID of the current parent process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb7edbdc968519762c8b6108c6c947a1bd87352" translate="yes" xml:space="preserve">
          <source>Returns the PID of the current process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3168592b6d206f4a5442c7e09cfe774ad6e5eb8b" translate="yes" xml:space="preserve">
          <source>Returns the length of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998b05686f45f4ac01edcebc386e13929f0f1d7c" translate="yes" xml:space="preserve">
          <source>Returns the number of abnormally terminated and respawned child processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971ea90799261a24e1bd496936c3616a5b454f99" translate="yes" xml:space="preserve">
          <source>Returns the part of the string between &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; or from &lt;code&gt;start&lt;/code&gt; to the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e6484cc02394bad652c4570142fb93dea4a99d" translate="yes" xml:space="preserve">
          <source>Returns the part of the string of the specified &lt;code&gt;length&lt;/code&gt; from &lt;code&gt;start&lt;/code&gt; or from &lt;code&gt;start&lt;/code&gt; to the end of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="802fbdfa044b42048897c7e57ec3f6690cf26b88" translate="yes" xml:space="preserve">
          <source>Returns the position of the first occurrence of the &lt;code&gt;searchString&lt;/code&gt;. The search is started at &lt;code&gt;fromIndex&lt;/code&gt;. Returns &lt;code&gt;&lt;i&gt;-1&lt;/i&gt;&lt;/code&gt; if the value is not found. The &lt;code&gt;fromIndex&lt;/code&gt; is an integer, default value is 0. If &lt;code&gt;fromIndex&lt;/code&gt; is lower than 0 or greater than &lt;a href=&quot;#string_length&quot;&gt;String.prototype.length&lt;/a&gt;, the search starts at index &lt;code&gt;&lt;i&gt;0&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;String.prototype.length&lt;/i&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408902725d5955fe8cffe7838ff117b31a56d247" translate="yes" xml:space="preserve">
          <source>Returns the position of the last occurrence of the &lt;code&gt;searchString&lt;/code&gt;, searching backwards from &lt;code&gt;fromIndex&lt;/code&gt;. Returns &lt;code&gt;&lt;i&gt;-1&lt;/i&gt;&lt;/code&gt; if the value is not found. If &lt;code&gt;searchString&lt;/code&gt; is empty, then &lt;code&gt;fromIndex&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7131b60490362594001b9a29d49868bb812625d7" translate="yes" xml:space="preserve">
          <source>Reverse proxy implementation in nginx includes in-band (or passive) server health checks. If the response from a particular server fails with an error, nginx will mark this server as failed, and will try to avoid selecting this server for subsequent inbound requests for a while.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a554245afdadaf8a6aadca17525c7c69bd0936b6" translate="yes" xml:space="preserve">
          <source>Reverse proxy implementation in nginx includes load balancing for HTTP, HTTPS, FastCGI, uwsgi, SCGI, memcached, and gRPC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77b02f0e702a18d9164fa52281871990badb51b" translate="yes" xml:space="preserve">
          <source>Rotating Log-files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d325fc8ffe222ad9ba70f81f95172a64cc7bc2ad" translate="yes" xml:space="preserve">
          <source>Run configure script:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332f9bfe6561a27c6a34407c21e07ac205084099" translate="yes" xml:space="preserve">
          <source>Run make:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4732b347a897b66166d2d84d810481d951e17fbe" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;tasklist&lt;/code&gt; command-line utility to see nginx processes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b6b1abb0478921b64516525a02713fd054e6f2" translate="yes" xml:space="preserve">
          <source>Running as a service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9fa7c314ae65ed3e53525f0ba55f254d168307" translate="yes" xml:space="preserve">
          <source>SCGI and uwsgi protocols do not have a notion of keepalive connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733474df18339639ccdbc7b53593f1cf212aa79d" translate="yes" xml:space="preserve">
          <source>SNI has been supported since 0.5.23.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89b0d2b09ecc11003fea6da408daa8045b945a8" translate="yes" xml:space="preserve">
          <source>SPDY protocol version for SPDY connections, or an empty string otherwise;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdde40168cb40393a2519650874e1c98658328eb" translate="yes" xml:space="preserve">
          <source>SSI Commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7078db941c72fb445a7de7bf27657b72f440972" translate="yes" xml:space="preserve">
          <source>SSI commands have the following generic format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfe5221388efdb5711c601e4988691b373e177a" translate="yes" xml:space="preserve">
          <source>SSL certificate chains</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c8ecf83a039d0b1a7bceef96ca4f340b3c3ee08" translate="yes" xml:space="preserve">
          <source>SSL operations consume extra CPU resources. On multi-processor systems several &lt;a href=&quot;../ngx_core_module#worker_processes&quot;&gt;worker processes&lt;/a&gt; should be run, no less than the number of available CPU cores. The most CPU-intensive operation is the SSL handshake. There are two ways to minimize the number of these operations per client: the first is by enabling &lt;a href=&quot;ngx_http_core_module#keepalive_timeout&quot;&gt;keepalive&lt;/a&gt; connections to send several requests via one connection and the second is to reuse SSL session parameters to avoid SSL handshakes for parallel and subsequent connections. The sessions are stored in an SSL session cache shared between workers and configured by the &lt;a href=&quot;ngx_http_ssl_module#ssl_session_cache&quot;&gt;ssl_session_cache&lt;/a&gt; directive. One megabyte of the cache contains about 4000 sessions. The default cache timeout is 5 minutes. It can be increased by using the &lt;a href=&quot;ngx_http_ssl_module#ssl_session_timeout&quot;&gt;ssl_session_timeout&lt;/a&gt; directive. Here is a sample configuration optimized for a multi-core system with 10 megabyte shared session cache:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54707475df503a064d0baec339f36cbe9ad2379f" translate="yes" xml:space="preserve">
          <source>SSL:</source>
          <target state="translated">SSL:</target>
        </trans-unit>
        <trans-unit id="99dba872c16e218805055b2f290120012f16d87a" translate="yes" xml:space="preserve">
          <source>Same as the &amp;ldquo;&lt;code&gt;address&lt;/code&gt;&amp;rdquo; parameter of the &lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;http&lt;/a&gt; or &lt;a href=&quot;../stream/ngx_stream_upstream_module#server&quot;&gt;stream&lt;/a&gt; upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32609f36370c0164fb130dd090d08504705f068" translate="yes" xml:space="preserve">
          <source>Same as the &amp;ldquo;&lt;code&gt;down&lt;/code&gt;&amp;rdquo; parameter of the &lt;a href=&quot;ngx_http_upstream_module#down&quot;&gt;http&lt;/a&gt; or &lt;a href=&quot;../stream/ngx_stream_upstream_module#down&quot;&gt;stream&lt;/a&gt; upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49d46fdf200430a150b0b9c82eb75b4ad2f85d7" translate="yes" xml:space="preserve">
          <source>Same as the &amp;ldquo;&lt;code&gt;fail_timeout&lt;/code&gt;&amp;rdquo; parameter of the &lt;a href=&quot;ngx_http_upstream_module#fail_timeout&quot;&gt;http&lt;/a&gt; or &lt;a href=&quot;../stream/ngx_stream_upstream_module#fail_timeout&quot;&gt;stream&lt;/a&gt; upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b4fe45569dfabbd3e963aad54e433f0c69ae2c" translate="yes" xml:space="preserve">
          <source>Same as the &amp;ldquo;&lt;code&gt;max_conns&lt;/code&gt;&amp;rdquo; parameter of the &lt;a href=&quot;ngx_http_upstream_module#max_conns&quot;&gt;http&lt;/a&gt; or &lt;a href=&quot;../stream/ngx_stream_upstream_module#max_conns&quot;&gt;stream&lt;/a&gt; upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5408de392ac3ccd52dea2383c3ed295006824b02" translate="yes" xml:space="preserve">
          <source>Same as the &amp;ldquo;&lt;code&gt;max_fails&lt;/code&gt;&amp;rdquo; parameter of the &lt;a href=&quot;ngx_http_upstream_module#max_fails&quot;&gt;http&lt;/a&gt; or &lt;a href=&quot;../stream/ngx_stream_upstream_module#max_fails&quot;&gt;stream&lt;/a&gt; upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ddd07de2963690ec5535a1c34e36afa3804233" translate="yes" xml:space="preserve">
          <source>Same as the &amp;ldquo;&lt;code&gt;route&lt;/code&gt;&amp;rdquo; parameter of the &lt;a href=&quot;ngx_http_upstream_module#route&quot;&gt;http&lt;/a&gt; upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f841bbdd8741f2e93f63d9c751c9f0a2351bb43e" translate="yes" xml:space="preserve">
          <source>Same as the &amp;ldquo;&lt;code&gt;service&lt;/code&gt;&amp;rdquo; parameter of the &lt;a href=&quot;ngx_http_upstream_module#service&quot;&gt;http&lt;/a&gt; or &lt;a href=&quot;../stream/ngx_stream_upstream_module#service&quot;&gt;stream&lt;/a&gt; upstream server (1.9.13).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9241364a23b42ba4c54a938a88b9c69130ef0c8" translate="yes" xml:space="preserve">
          <source>Same as the &amp;ldquo;&lt;code&gt;slow_start&lt;/code&gt;&amp;rdquo; parameter of the &lt;a href=&quot;ngx_http_upstream_module#slow_start&quot;&gt;http&lt;/a&gt; or &lt;a href=&quot;../stream/ngx_stream_upstream_module#slow_start&quot;&gt;stream&lt;/a&gt; upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177fab394c7d3a27168c1bee71634b2e65f93a56" translate="yes" xml:space="preserve">
          <source>Same as the &amp;ldquo;&lt;code&gt;weight&lt;/code&gt;&amp;rdquo; parameter of the &lt;a href=&quot;ngx_http_upstream_module#weight&quot;&gt;http&lt;/a&gt; or &lt;a href=&quot;../stream/ngx_stream_upstream_module#weight&quot;&gt;stream&lt;/a&gt; upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a23a861af15b60416dabb9c03bffe8362d4d574d" translate="yes" xml:space="preserve">
          <source>Same as the &lt;a href=&quot;../stream/ngx_stream_upstream_module#down&quot;&gt;down&lt;/a&gt; parameter of the stream upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ed5c8b5e2627d165de933accbf1d51c9ebf90f" translate="yes" xml:space="preserve">
          <source>Same as the &lt;a href=&quot;../stream/ngx_stream_upstream_module#fail_timeout&quot;&gt;fail_timeout&lt;/a&gt; parameter of the stream upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e3535c1e3a1c1eda9e7a08e095141050f51584" translate="yes" xml:space="preserve">
          <source>Same as the &lt;a href=&quot;../stream/ngx_stream_upstream_module#max_conns&quot;&gt;max_conns&lt;/a&gt; parameter of the stream upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="431849346c3ed9bb3e4694accf83ace1a007282a" translate="yes" xml:space="preserve">
          <source>Same as the &lt;a href=&quot;../stream/ngx_stream_upstream_module#max_fails&quot;&gt;max_fails&lt;/a&gt; parameter of the stream upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8609a4f622fa042ce683d6ffeed24c37697bd760" translate="yes" xml:space="preserve">
          <source>Same as the &lt;a href=&quot;../stream/ngx_stream_upstream_module#server&quot;&gt;address&lt;/a&gt; parameter of the stream upstream server. When adding a server, it is possible to specify it as a domain name. In this case, changes of the IP addresses that correspond to a domain name will be monitored and automatically applied to the upstream configuration without the need of restarting nginx. This requires the &lt;a href=&quot;../stream/ngx_stream_core_module#resolver&quot;&gt;resolver&lt;/a&gt; directive in the &amp;ldquo;&lt;code&gt;stream&lt;/code&gt;&amp;rdquo; block. See also the &lt;a href=&quot;../stream/ngx_stream_upstream_module#resolve&quot;&gt;resolve&lt;/a&gt; parameter of the stream upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0588b4a48006f0b003164d06095e2f2648e588" translate="yes" xml:space="preserve">
          <source>Same as the &lt;a href=&quot;../stream/ngx_stream_upstream_module#service&quot;&gt;service&lt;/a&gt; parameter of the stream upstream server. This parameter cannot be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8de7232923cd93c28d97b85def0c551f6317ed" translate="yes" xml:space="preserve">
          <source>Same as the &lt;a href=&quot;../stream/ngx_stream_upstream_module#slow_start&quot;&gt;slow_start&lt;/a&gt; parameter of the stream upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d2ce9aaec9dbf67bee5b22fdef7a9d65a823e2" translate="yes" xml:space="preserve">
          <source>Same as the &lt;a href=&quot;../stream/ngx_stream_upstream_module#weight&quot;&gt;weight&lt;/a&gt; parameter of the stream upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0afbcb64cc72ac857879857d805d64ef828ba9fc" translate="yes" xml:space="preserve">
          <source>Same as the &lt;a href=&quot;ngx_http_upstream_module#address&quot;&gt;address&lt;/a&gt; parameter of the HTTP upstream server. When adding a server, it is possible to specify it as a domain name. In this case, changes of the IP addresses that correspond to a domain name will be monitored and automatically applied to the upstream configuration without the need of restarting nginx. This requires the &lt;a href=&quot;ngx_http_core_module#resolver&quot;&gt;resolver&lt;/a&gt; directive in the &amp;ldquo;&lt;code&gt;http&lt;/code&gt;&amp;rdquo; block. See also the &lt;a href=&quot;ngx_http_upstream_module#resolve&quot;&gt;resolve&lt;/a&gt; parameter of the HTTP upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7590291dd8b8334ada553d59db99ebd2912d258a" translate="yes" xml:space="preserve">
          <source>Same as the &lt;a href=&quot;ngx_http_upstream_module#down&quot;&gt;down&lt;/a&gt; parameter of the HTTP upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2567c37fcdf95e0ce47d7d9dfd8a901b34ced20f" translate="yes" xml:space="preserve">
          <source>Same as the &lt;a href=&quot;ngx_http_upstream_module#drain&quot;&gt;drain&lt;/a&gt; parameter of the HTTP upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475a8c1169cbc29420bd306103cb71c130465176" translate="yes" xml:space="preserve">
          <source>Same as the &lt;a href=&quot;ngx_http_upstream_module#fail_timeout&quot;&gt;fail_timeout&lt;/a&gt; parameter of the HTTP upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42994f8ea1d91ada7a39815f1dc8c46eb4f76392" translate="yes" xml:space="preserve">
          <source>Same as the &lt;a href=&quot;ngx_http_upstream_module#max_conns&quot;&gt;max_conns&lt;/a&gt; parameter of the HTTP upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08bd9bc3f7ee50483f044971b24accb8a7daf993" translate="yes" xml:space="preserve">
          <source>Same as the &lt;a href=&quot;ngx_http_upstream_module#max_fails&quot;&gt;max_fails&lt;/a&gt; parameter of the HTTP upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9074825ebaa6492a3382ba8ee98ab9f1bc1a25" translate="yes" xml:space="preserve">
          <source>Same as the &lt;a href=&quot;ngx_http_upstream_module#route&quot;&gt;route&lt;/a&gt; parameter of the HTTP upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6f75204d3f22772fe78bc32a92e63e829a102d" translate="yes" xml:space="preserve">
          <source>Same as the &lt;a href=&quot;ngx_http_upstream_module#service&quot;&gt;service&lt;/a&gt; parameter of the HTTP upstream server. This parameter cannot be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb80c4564081a1881c49c136938e0b42ae3487d6" translate="yes" xml:space="preserve">
          <source>Same as the &lt;a href=&quot;ngx_http_upstream_module#slow_start&quot;&gt;slow_start&lt;/a&gt; parameter of the HTTP upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928f23ea9c1cf2d76cd2d8830f36a52bf154f511" translate="yes" xml:space="preserve">
          <source>Same as the &lt;a href=&quot;ngx_http_upstream_module#weight&quot;&gt;weight&lt;/a&gt; parameter of the HTTP upstream server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc855f77acedff7616caba06de4d817ce8488d53" translate="yes" xml:space="preserve">
          <source>Scripting with njs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a38d9c18fe483e79197f4448ae3eb390ac6e4c" translate="yes" xml:space="preserve">
          <source>Searches for a string using a &lt;code&gt;regexp&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ba0b487489e91b8a619d4b909bdacefe197422" translate="yes" xml:space="preserve">
          <source>Searching wildcard names hash table is slower than searching exact names hash table because names are searched by domain parts. Note that the special wildcard form &amp;ldquo;&lt;code&gt;.example.org&lt;/code&gt;&amp;rdquo; is stored in a wildcard names hash table and not in an exact names hash table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33db9c5979c4d7c7892cac96713b96d308989eb7" translate="yes" xml:space="preserve">
          <source>Secured uwsgi protocol is supported since version 1.5.8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba7c085c24d80fcad926db5f96a3892c856f1f4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;examples&quot;&gt;examples&lt;/a&gt; and &lt;a href=&quot;https://www.nginx.com/blog/tag/nginx-javascript-module/&quot;&gt;blog posts&lt;/a&gt; for more njs use cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">参照</target>
        </trans-unit>
        <trans-unit id="ab63a67992ed6476fed88aa48d258a494a0f5dc2" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#server_name_in_redirect&quot;&gt;server_name_in_redirect&lt;/a&gt; and &lt;a href=&quot;#port_in_redirect&quot;&gt;port_in_redirect&lt;/a&gt; directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621f8209d8dfed7d076b4de17149466e94d40fbe" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;#proxy_set_header&quot;&gt;proxy_set_header&lt;/a&gt; and &lt;a href=&quot;#proxy_pass_request_body&quot;&gt;proxy_pass_request_body&lt;/a&gt; directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08597eb47f8dd58e7ca3af07e8ef84061bcf82ec" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;#proxy_set_header&quot;&gt;proxy_set_header&lt;/a&gt; and &lt;a href=&quot;#proxy_pass_request_headers&quot;&gt;proxy_pass_request_headers&lt;/a&gt; directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b915fbbc0121f38ead49d828e08a143657798e" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;#sendfile&quot;&gt;sendfile&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa0e3d7ed66e9fb993797f327dc80990bfb8cba" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;ngx_http_core_module#error_page&quot;&gt;error_page&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c0f00fb1386a67fa7464562e7171e09e0b28d3" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;use_temp_path&lt;/code&gt; parameter of the &lt;a href=&quot;#fastcgi_cache_path&quot;&gt;fastcgi_cache_path&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6107db88c24e506e8832374e2d7c24facb053ace" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;use_temp_path&lt;/code&gt; parameter of the &lt;a href=&quot;#proxy_cache_path&quot;&gt;proxy_cache_path&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01773f54431910f827c47b5588ee8e2ba9eb0ac8" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;use_temp_path&lt;/code&gt; parameter of the &lt;a href=&quot;#scgi_cache_path&quot;&gt;scgi_cache_path&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c9e9020277b100303ff0c9c6f86d9faf53c197" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;use_temp_path&lt;/code&gt; parameter of the &lt;a href=&quot;#uwsgi_cache_path&quot;&gt;uwsgi_cache_path&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db66cf2bf62f9605e2ba97bc5d4ca33ba408409" translate="yes" xml:space="preserve">
          <source>Selecting an upstream based on SSL protocol version:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe5837789cf308b9bed1ed59f494025570f6b5a" translate="yes" xml:space="preserve">
          <source>Selecting an upstream based on protocol:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25332fb68be869c412e77a8edba2217b528bbaec" translate="yes" xml:space="preserve">
          <source>Selecting an upstream based on server name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0467b5d931842d881654337e7e66cb49e424a87" translate="yes" xml:space="preserve">
          <source>Selects a &lt;a href=&quot;../stream/ngx_stream_upstream_module&quot;&gt;stream&lt;/a&gt; upstream server group. Without this parameter, selects an &lt;a href=&quot;ngx_http_upstream_module&quot;&gt;http&lt;/a&gt; upstream server group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3092d348ce364f3cedf089b4ae6a2b81fdb665ea" translate="yes" xml:space="preserve">
          <source>Selects a group to work with. This parameter is mandatory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b216f2042cc00d1aef6abd69d6d607627e30c191" translate="yes" xml:space="preserve">
          <source>Selects a server for viewing, modifying, or removing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbaf7e6fd61d892a084bfd67bf844864e913a5f4" translate="yes" xml:space="preserve">
          <source>Send the HUP signal to the old master process. The old master process will start new worker processes without re-reading the configuration. After that, all new processes can be shut down gracefully, by sending the QUIT signal to the new master process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac0e19e0f8ce57ca4137c16fdeee9ef61e877b3d" translate="yes" xml:space="preserve">
          <source>Send the TERM signal to the new master process. It will then send a message to its worker processes requesting them to exit immediately, and they will all exit almost immediately. (If new processes do not exit for some reason, the KILL signal should be sent to them to force them to exit.) When the new master process exits, the old master process will start new worker processes automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4088e54dc4e611bb45e3968736ee0b02ab8ec32f" translate="yes" xml:space="preserve">
          <source>Server Name Indication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32280b5a9a1cb2f7c3c1935a70000724189cc2ba" translate="yes" xml:space="preserve">
          <source>Server configuration &amp;mdash; Applies to a single &lt;code&gt;server&lt;/code&gt; block. Functions as server-specific settings for a module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c12278801c3e111900a4423f9ed7770218615411" translate="yes" xml:space="preserve">
          <source>Server names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5211e4f7a277ff01fc84900f92d5255fe1d603ce" translate="yes" xml:space="preserve">
          <source>Server names are defined using the &lt;a href=&quot;ngx_http_core_module#server_name&quot;&gt;server_name&lt;/a&gt; directive and determine which &lt;a href=&quot;ngx_http_core_module#server&quot;&gt;server&lt;/a&gt; block is used for a given request. See also &amp;ldquo;&lt;a href=&quot;request_processing&quot;&gt;How nginx processes a request&lt;/a&gt;&amp;rdquo;. They may be defined using exact names, wildcard names, or regular expressions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc88f7afd35d3c854053015dee3ce33f10acc165" translate="yes" xml:space="preserve">
          <source>Server names can include an asterisk (&amp;ldquo;&lt;code&gt;*&lt;/code&gt;&amp;rdquo;) replacing the first or last part of a name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee3407a6a315b8fb3a40518e30e4028e904ad58" translate="yes" xml:space="preserve">
          <source>Server parameters, specified in the JSON format. The &amp;ldquo;&lt;code&gt;ID&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;backup&lt;/code&gt;&amp;rdquo;, and &amp;ldquo;&lt;code&gt;service&lt;/code&gt;&amp;rdquo; parameters cannot be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9085fa61811a94f5e205ecace8b338a3924c610c" translate="yes" xml:space="preserve">
          <source>Serving Static Content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb9f32942a13081bfd8dbb184e962b4ec9138f3" translate="yes" xml:space="preserve">
          <source>Session Object Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e38db4fe234572804bf1c6bc645fe26e2811bb" translate="yes" xml:space="preserve">
          <source>Session persistence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9fc8500b2242b736f03b52f5c5cb78ab9b515e4" translate="yes" xml:space="preserve">
          <source>Sessions are stored in a shared memory zone, whose &lt;code&gt;&lt;i&gt;name&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; are configured by the &lt;code&gt;zone&lt;/code&gt; parameter. One megabyte zone can store about 4000 sessions on the 64-bit platform. The sessions that are not accessed during the time specified by the &lt;code&gt;timeout&lt;/code&gt; parameter get removed from the zone. By default, &lt;code&gt;timeout&lt;/code&gt; is set to 10 minutes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3be9aaa9b45b751adce67efab1ffcfffdbe41e4" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of a per-connection receive buffer used to parse incoming stream of synchronization messages. The buffer size must be equal or greater than one of the &lt;a href=&quot;#zone_sync_buffers&quot;&gt;zone_sync_buffers&lt;/a&gt;. By default, the buffer size is equal to &lt;a href=&quot;#zone_sync_buffers&quot;&gt;zone_sync_buffers&lt;/a&gt;&lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; multiplied by &lt;code&gt;&lt;i&gt;number&lt;/i&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712da545f5fec44491e1f71ec6bd96cea2ecb8b9" translate="yes" xml:space="preserve">
          <source>Sets a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with the secret key used to encrypt and decrypt TLS session tickets. The directive is necessary if the same key has to be shared between multiple servers. By default, a randomly generated key is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8e8e57a750892a1a200d37dea20a32b1b19108" translate="yes" xml:space="preserve">
          <source>Sets a &lt;code&gt;&lt;i&gt;parameter&lt;/i&gt;&lt;/code&gt; that should be passed to the FastCGI server. The &lt;code&gt;&lt;i&gt;value&lt;/i&gt;&lt;/code&gt; can contain text, variables, and their combination. These directives are inherited from the previous level if and only if there are no &lt;code&gt;fastcgi_param&lt;/code&gt; directives defined on the current level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bdda79370f06b7c8643e1d3ef2b1f1133fe19fc" translate="yes" xml:space="preserve">
          <source>Sets a &lt;code&gt;&lt;i&gt;parameter&lt;/i&gt;&lt;/code&gt; that should be passed to the SCGI server. The &lt;code&gt;&lt;i&gt;value&lt;/i&gt;&lt;/code&gt; can contain text, variables, and their combination. These directives are inherited from the previous level if and only if there are no &lt;code&gt;scgi_param&lt;/code&gt; directives defined on the current level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042288c605903365b381be7b39e143363fb25359" translate="yes" xml:space="preserve">
          <source>Sets a &lt;code&gt;&lt;i&gt;parameter&lt;/i&gt;&lt;/code&gt; that should be passed to the uwsgi server. The &lt;code&gt;&lt;i&gt;value&lt;/i&gt;&lt;/code&gt; can contain text, variables, and their combination. These directives are inherited from the previous level if and only if there are no &lt;code&gt;uwsgi_param&lt;/code&gt; directives defined on the current level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4643f6649a9b9379bd5953c4bc900f94ecac69a6" translate="yes" xml:space="preserve">
          <source>Sets a &lt;code&gt;&lt;i&gt;value&lt;/i&gt;&lt;/code&gt; for the specified &lt;code&gt;&lt;i&gt;variable&lt;/i&gt;&lt;/code&gt;. The &lt;code&gt;&lt;i&gt;value&lt;/i&gt;&lt;/code&gt; can contain text, variables, and their combination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22aa3311174762592af2979664497e73e455de0e" translate="yes" xml:space="preserve">
          <source>Sets a Perl handler for the given location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d811f33e3ac67e93814bcd7a2897690bb50c2d00" translate="yes" xml:space="preserve">
          <source>Sets a data filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0cd6c054fa0b5cf4d821aa40a1f7cc2dc49b724" translate="yes" xml:space="preserve">
          <source>Sets a file name that keeps profiling information of nginx worker process. The ID of the worker process is always a part of the file name and is appended to the end of the file name, after a dot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57a9618d96a126532bc45cb2b7e6d302672eed9" translate="yes" xml:space="preserve">
          <source>Sets a file name that will be appended after a URI that ends with a slash, in the value of the &lt;code&gt;$fastcgi_script_name&lt;/code&gt; variable. For example, with these settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57bb7ccd7b9cb871074f455baedafe72f8a2219b" translate="yes" xml:space="preserve">
          <source>Sets a gzip compression &lt;code&gt;&lt;i&gt;level&lt;/i&gt;&lt;/code&gt; of a response. Acceptable values are in the range from 1 to 9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d4b639bcc990b08a267c96946bde00d04a97c7" translate="yes" xml:space="preserve">
          <source>Sets a pause between iterations (1.7.12). By default, &lt;code&gt;purger_sleep&lt;/code&gt; is set to 50 milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c90a79ba43d9871eb2e69061a4c02cf962ebc7" translate="yes" xml:space="preserve">
          <source>Sets a string to replace and a replacement string. The string to replace is matched ignoring the case. The string to replace (1.9.4) and replacement string can contain variables. Several &lt;code&gt;sub_filter&lt;/code&gt; directives can be specified on one configuration level (1.9.4). These directives are inherited from the previous level if and only if there are no &lt;code&gt;sub_filter&lt;/code&gt; directives defined on the current level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5dde9fa653b66ebfd3b3f4c43378d26cfb7d771" translate="yes" xml:space="preserve">
          <source>Sets a string to search for in the error stream of a response received from a FastCGI server. If the &lt;code&gt;&lt;i&gt;string&lt;/i&gt;&lt;/code&gt; is found then it is considered that the FastCGI server has returned an &lt;a href=&quot;#fastcgi_next_upstream&quot;&gt;invalid response&lt;/a&gt;. This allows handling application errors in nginx, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc549ccb5e167b34430e8ba326ebe4d12fbd12c4" translate="yes" xml:space="preserve">
          <source>Sets a text that should be changed in the &lt;code&gt;domain&lt;/code&gt; attribute of the &amp;ldquo;Set-Cookie&amp;rdquo; header fields of a proxied server response. Suppose a proxied server returned the &amp;ldquo;Set-Cookie&amp;rdquo; header field with the attribute &amp;ldquo;&lt;code&gt;domain=localhost&lt;/code&gt;&amp;rdquo;. The directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903cbe0f3e8f8942b249862413b03aa8202d5977" translate="yes" xml:space="preserve">
          <source>Sets a text that should be changed in the &lt;code&gt;path&lt;/code&gt; attribute of the &amp;ldquo;Set-Cookie&amp;rdquo; header fields of a proxied server response. Suppose a proxied server returned the &amp;ldquo;Set-Cookie&amp;rdquo; header field with the attribute &amp;ldquo;&lt;code&gt;path=/two/some/uri/&lt;/code&gt;&amp;rdquo;. The directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a6760ff59b06751906066d4c672d48b763842f" translate="yes" xml:space="preserve">
          <source>Sets a time after which &lt;a href=&quot;#open_file_cache&quot;&gt;open_file_cache&lt;/a&gt; elements should be validated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7aa9a50ba5c2ae10cc76347a557a73701f7712f" translate="yes" xml:space="preserve">
          <source>Sets a time during which a browser should keep the cookie. The parameter &lt;code&gt;max&lt;/code&gt; will cause the cookie to expire on &amp;ldquo;&lt;code&gt;31 Dec 2037 23:55:55 GMT&lt;/code&gt;&amp;rdquo;. The parameter &lt;code&gt;off&lt;/code&gt; will cause the cookie to expire at the end of a browser session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae06f34b5c5b1e1e709521ad6894ee6610b2a46b" translate="yes" xml:space="preserve">
          <source>Sets a timeout during which an idle keepalive connection to an upstream server will stay open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022cb8efe48a09f759426ff695fe5fae6ac09ec1" translate="yes" xml:space="preserve">
          <source>Sets a timeout for &lt;a href=&quot;#fastcgi_cache_lock&quot;&gt;fastcgi_cache_lock&lt;/a&gt;. When the &lt;code&gt;&lt;i&gt;time&lt;/i&gt;&lt;/code&gt; expires, the request will be passed to the FastCGI server, however, the response will not be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2581b0a3c959b187f2bc469cef16c894172d1c92" translate="yes" xml:space="preserve">
          <source>Sets a timeout for &lt;a href=&quot;#proxy_cache_lock&quot;&gt;proxy_cache_lock&lt;/a&gt;. When the &lt;code&gt;&lt;i&gt;time&lt;/i&gt;&lt;/code&gt; expires, the request will be passed to the proxied server, however, the response will not be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da5e99f7aba31539db072b835482ba8f3c99fcc" translate="yes" xml:space="preserve">
          <source>Sets a timeout for &lt;a href=&quot;#scgi_cache_lock&quot;&gt;scgi_cache_lock&lt;/a&gt;. When the &lt;code&gt;&lt;i&gt;time&lt;/i&gt;&lt;/code&gt; expires, the request will be passed to the SCGI server, however, the response will not be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc69dac74e5e546efcd051a7a2198358be23e106" translate="yes" xml:space="preserve">
          <source>Sets a timeout for &lt;a href=&quot;#uwsgi_cache_lock&quot;&gt;uwsgi_cache_lock&lt;/a&gt;. When the &lt;code&gt;&lt;i&gt;time&lt;/i&gt;&lt;/code&gt; expires, the request will be passed to the uwsgi server, however, the response will not be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc152767a2282b411472a173b43196134ab9c39" translate="yes" xml:space="preserve">
          <source>Sets a timeout for DNS operations, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2658dbf074d68057523564f905a1817efed4f7df" translate="yes" xml:space="preserve">
          <source>Sets a timeout for name resolution, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746a49e9e7872d9a43ae7063cc8e442d6f7c70bb" translate="yes" xml:space="preserve">
          <source>Sets a timeout for transmitting a request to the FastCGI server. The timeout is set only between two successive write operations, not for the transmission of the whole request. If the FastCGI server does not receive anything within this time, the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35fd4fb5e6b6bb09bd1aeb1dbb08ab6f2ee95f68" translate="yes" xml:space="preserve">
          <source>Sets a timeout for transmitting a request to the SCGI server. The timeout is set only between two successive write operations, not for the transmission of the whole request. If the SCGI server does not receive anything within this time, the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4eb9483108490826aa09e719121d855c0b5707" translate="yes" xml:space="preserve">
          <source>Sets a timeout for transmitting a request to the gRPC server. The timeout is set only between two successive write operations, not for the transmission of the whole request. If the gRPC server does not receive anything within this time, the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b90be519ab62d50b4fc9e954914634188ada8a" translate="yes" xml:space="preserve">
          <source>Sets a timeout for transmitting a request to the memcached server. The timeout is set only between two successive write operations, not for the transmission of the whole request. If the memcached server does not receive anything within this time, the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be09fe6d78af5b64e74c2a9b123018750bb83967" translate="yes" xml:space="preserve">
          <source>Sets a timeout for transmitting a request to the proxied server. The timeout is set only between two successive write operations, not for the transmission of the whole request. If the proxied server does not receive anything within this time, the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f6396e698b1869c10a75dcb5b9188f198f6b5e" translate="yes" xml:space="preserve">
          <source>Sets a timeout for transmitting a request to the uwsgi server. The timeout is set only between two successive write operations, not for the transmission of the whole request. If the uwsgi server does not receive anything within this time, the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bfd0b2506c5de1f5c187ded33e8c3b9df6be49" translate="yes" xml:space="preserve">
          <source>Sets a timeout for transmitting a response to the client. The timeout is set only between two successive write operations, not for the transmission of the whole response. If the client does not receive anything within this time, the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2447927a2b154cda70b5b8bc91a2d7a66ec43141" translate="yes" xml:space="preserve">
          <source>Sets a value for the &amp;ldquo;P3P&amp;rdquo; header field that will be sent along with the cookie. If the directive is set to the special value &lt;code&gt;none&lt;/code&gt;, the &amp;ldquo;P3P&amp;rdquo; header will not be sent in a response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f887581177f7a439f0af14f7571a9be9a10ecbdc" translate="yes" xml:space="preserve">
          <source>Sets a value for the &lt;code&gt;$ancient_browser&lt;/code&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ecf0858446d020548f9b8dd93f7c33afea7f012" translate="yes" xml:space="preserve">
          <source>Sets a value for the &lt;code&gt;$modern_browser&lt;/code&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11894749b928714a0d1f4ea47aead21f5633d37c" translate="yes" xml:space="preserve">
          <source>Sets a value of a variable. The command has the following parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e57779ab0eda46becf5f694beed25583413d5d51" translate="yes" xml:space="preserve">
          <source>Sets access permissions for newly created files and directories, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aefe0830b6e48fd8907fdacbd2694d05c443de00" translate="yes" xml:space="preserve">
          <source>Sets an additional path for Perl modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634ff92e3ebd49b88131b764e25c2e6d6f236976" translate="yes" xml:space="preserve">
          <source>Sets an additional path for njs modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1e9f90e7d092cc2655aad06d515eb1a3e880d6" translate="yes" xml:space="preserve">
          <source>Sets an njs function as a location content handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba932bfeb43022d259c5fe0a12823bb5ebddf79" translate="yes" xml:space="preserve">
          <source>Sets an njs function for the specified variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca89f365e96eac13b303e88a9928c5fa76d07679" translate="yes" xml:space="preserve">
          <source>Sets an njs function which will be called at the &lt;a href=&quot;stream_processing#access_phase&quot;&gt;access&lt;/a&gt; phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca3133c8fe25887f7282ec0513faed04259fcd9" translate="yes" xml:space="preserve">
          <source>Sets an njs function which will be called at the &lt;a href=&quot;stream_processing#preread_phase&quot;&gt;preread&lt;/a&gt; phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eedaae65201479b388c631ff33d20cd27914502f" translate="yes" xml:space="preserve">
          <source>Sets an offset in bytes for byte-range requests. If the range is beyond the offset, the range request will be passed to the FastCGI server and the response will not be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5a5e2b170e256cc38e15fe40df52a4d7ecdb8b" translate="yes" xml:space="preserve">
          <source>Sets an offset in bytes for byte-range requests. If the range is beyond the offset, the range request will be passed to the SCGI server and the response will not be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4ad39dd16d77f558be600ba1ddc41d9bdeaf3e" translate="yes" xml:space="preserve">
          <source>Sets an offset in bytes for byte-range requests. If the range is beyond the offset, the range request will be passed to the proxied server and the response will not be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2de6252126b7a3608b475c76b4542a6854e854" translate="yes" xml:space="preserve">
          <source>Sets an offset in bytes for byte-range requests. If the range is beyond the offset, the range request will be passed to the uwsgi server and the response will not be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7da08777a015ad38848ca01b2392a086b9f938c" translate="yes" xml:space="preserve">
          <source>Sets buffer size for reading client request body. In case the request body is larger than the buffer, the whole body or only its part is written to a &lt;a href=&quot;#client_body_temp_path&quot;&gt;temporary file&lt;/a&gt;. By default, buffer size is equal to two memory pages. This is 8K on x86, other 32-bit platforms, and x86-64. It is usually 16K on other 64-bit platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c22d481d70d68b6c7579af718534c759ca9748" translate="yes" xml:space="preserve">
          <source>Sets buffer size for reading client request header. For most requests, a buffer of 1K bytes is enough. However, if a request includes long cookies, or comes from a WAP client, it may not fit into 1K. If a request line or a request header field does not fit into this buffer then larger buffers, configured by the &lt;a href=&quot;#large_client_header_buffers&quot;&gt;large_client_header_buffers&lt;/a&gt; directive, are allocated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4f165cfec0bda7075e2d62c0fa04b1a41f0fbe" translate="yes" xml:space="preserve">
          <source>Sets caching time for different response codes. For example, the following directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="638896be36cae79807ffe6423f7598093f5cd0a6" translate="yes" xml:space="preserve">
          <source>Sets configuration depending on a request URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33df60b25c12c7b6593ac57200112e1c9b41d13d" translate="yes" xml:space="preserve">
          <source>Sets configuration for a virtual server. There is no clear separation between IP-based (based on the IP address) and name-based (based on the &amp;ldquo;Host&amp;rdquo; request header field) virtual servers. Instead, the &lt;a href=&quot;#listen&quot;&gt;listen&lt;/a&gt; directives describe all addresses and ports that should accept connections for the server, and the &lt;a href=&quot;#server_name&quot;&gt;server_name&lt;/a&gt; directive lists all server names. Example configurations are provided in the &amp;ldquo;&lt;a href=&quot;request_processing&quot;&gt;How nginx processes a request&lt;/a&gt;&amp;rdquo; document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65087049eaf64007a113c8b67048045d5d9cb98b" translate="yes" xml:space="preserve">
          <source>Sets facility of syslog messages, as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3164#section-4.1.1&quot;&gt;RFC 3164&lt;/a&gt;. Facility can be one of &amp;ldquo;&lt;code&gt;kern&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;user&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;mail&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;daemon&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;auth&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;intern&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;lpr&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;news&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;uucp&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;clock&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;authpriv&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;ftp&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;ntp&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;audit&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;alert&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;cron&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;local0&lt;/code&gt;&amp;rdquo;..&amp;ldquo;&lt;code&gt;local7&lt;/code&gt;&amp;rdquo;. Default is &amp;ldquo;&lt;code&gt;local7&lt;/code&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3789d05cf18d89ae9795fc2204b19653a32444" translate="yes" xml:space="preserve">
          <source>Sets names of a virtual server, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff0dc4e9041af2982309d5f89db11875695a784e" translate="yes" xml:space="preserve">
          <source>Sets parameters for a shared memory zone that will keep states for various keys. In particular, the state includes the current number of connections. The &lt;code&gt;&lt;i&gt;key&lt;/i&gt;&lt;/code&gt; can contain text, variables, and their combination. Requests with an empty key value are not accounted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4bc08e6f6b4e7fad37f56ac239090204aad6d9" translate="yes" xml:space="preserve">
          <source>Sets parameters for a shared memory zone that will keep states for various keys. In particular, the state includes the current number of connections. The &lt;code&gt;&lt;i&gt;key&lt;/i&gt;&lt;/code&gt; can contain text, variables, and their combinations (1.11.2). Connections with an empty key value are not accounted. Usage example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0df4f95573ac40c5f389728614264919021425" translate="yes" xml:space="preserve">
          <source>Sets parameters for a shared memory zone that will keep states for various keys. In particular, the state stores the current number of excessive requests. The &lt;code&gt;&lt;i&gt;key&lt;/i&gt;&lt;/code&gt; can contain text, variables, and their combination. Requests with an empty key value are not accounted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d177417939bbca48936533f54a9c1d615cf87a5" translate="yes" xml:space="preserve">
          <source>Sets permitted methods of &lt;a href=&quot;https://tools.ietf.org/html/rfc2554&quot;&gt;SASL authentication&lt;/a&gt; for SMTP clients. Supported methods are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c318e64018c2f06341759e11a3db86dc187e34" translate="yes" xml:space="preserve">
          <source>Sets permitted methods of authentication for IMAP clients. Supported methods are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91656948f26f2f6f6322ffb2c57fe26aaefb0a4c" translate="yes" xml:space="preserve">
          <source>Sets permitted methods of authentication for POP3 clients. Supported methods are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d59b963f0146ee65084f34c997d53ffc72d758f" translate="yes" xml:space="preserve">
          <source>Sets severity of syslog messages for &lt;a href=&quot;http/ngx_http_log_module#access_log&quot;&gt;access_log&lt;/a&gt;, as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3164#section-4.1.1&quot;&gt;RFC 3164&lt;/a&gt;. Possible values are the same as for the second parameter (level) of the &lt;a href=&quot;ngx_core_module#error_log&quot;&gt;error_log&lt;/a&gt; directive. Default is &amp;ldquo;&lt;code&gt;info&lt;/code&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6adeece22344f9ed64886fd079aef602dbe6a9b" translate="yes" xml:space="preserve">
          <source>Sets some parameters used during SSI processing, namely:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ac2910e91cd0d63b7a133407ee7140f998f6f7" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;https://tools.ietf.org/html/rfc2449&quot;&gt;POP3 protocol&lt;/a&gt; extensions list that is passed to the client in response to the &lt;code&gt;CAPA&lt;/code&gt; command. The authentication methods specified in the &lt;a href=&quot;#pop3_auth&quot;&gt;pop3_auth&lt;/a&gt; directive (&lt;a href=&quot;https://tools.ietf.org/html/rfc2449&quot;&gt;SASL&lt;/a&gt; extension) and &lt;a href=&quot;https://tools.ietf.org/html/rfc2595&quot;&gt;STLS&lt;/a&gt; are automatically added to this list depending on the &lt;a href=&quot;ngx_mail_ssl_module#starttls&quot;&gt;starttls&lt;/a&gt; directive value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff523f61038dc0554fa113ecd32e03980c73aea" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;https://tools.ietf.org/html/rfc3501&quot;&gt;IMAP protocol&lt;/a&gt; extensions list that is passed to the client in response to the &lt;code&gt;CAPABILITY&lt;/code&gt; command. The authentication methods specified in the &lt;a href=&quot;#imap_auth&quot;&gt;imap_auth&lt;/a&gt; directive and &lt;a href=&quot;https://tools.ietf.org/html/rfc2595&quot;&gt;STARTTLS&lt;/a&gt; are automatically added to this list depending on the &lt;a href=&quot;ngx_mail_ssl_module#starttls&quot;&gt;starttls&lt;/a&gt; directive value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761b132178fb4a3e625d41c541008d8af9025648" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;address&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;port&lt;/i&gt;&lt;/code&gt; for IP, or the &lt;code&gt;&lt;i&gt;path&lt;/i&gt;&lt;/code&gt; for a UNIX-domain socket on which the server will accept requests. Both &lt;code&gt;&lt;i&gt;address&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;port&lt;/i&gt;&lt;/code&gt;, or only &lt;code&gt;&lt;i&gt;address&lt;/i&gt;&lt;/code&gt; or only &lt;code&gt;&lt;i&gt;port&lt;/i&gt;&lt;/code&gt; can be specified. An &lt;code&gt;&lt;i&gt;address&lt;/i&gt;&lt;/code&gt; may also be a hostname, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebac2285f579d97b71901ba53b397b381135a0c" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;address&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;port&lt;/i&gt;&lt;/code&gt; for the socket on which the server will accept connections. It is possible to specify just the port. The address can also be a hostname, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d24799a2ae214166389e77981a6bfe4dc203f62" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;address&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;port&lt;/i&gt;&lt;/code&gt; for the socket on which the server will accept requests. It is possible to specify just the port. The address can also be a hostname, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a6b34d7a6149609e10ec502da4d8142a76d2ea" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;name&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the shared memory zone that keeps the key-value database. Key-value pairs are managed by the &lt;a href=&quot;../http/ngx_http_api_module#stream_keyvals_&quot;&gt;API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b82df2f7ce33a255998d8f550226ee9c385a68a" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;name&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the shared memory zone that keeps the key-value database. Key-value pairs are managed by the &lt;a href=&quot;ngx_http_api_module#http_keyvals_&quot;&gt;API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ef9375fd01a239e5d4bc1329852799280a5b75" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;number&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of buffers used to compress a response. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0741d6402a7a01636dd2ff1469b6c5385c2ebb" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;number&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of buffers used to decompress a response. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0bf52c7a52a90d04804b9e9f45ea4771eee6fa" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;number&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the buffers used for reading a response from a disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fcdf0e1cf700bf9ea0360ca09802f8bd8dadddb" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;number&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the buffers used for reading a response from the FastCGI server, for a single connection. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6cc2fae27476baf6234ac39ddf5b5c08539376d" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;number&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the buffers used for reading a response from the SCGI server, for a single connection. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3302311b06bbbec3f0d6e7386801a1b23a80672a" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;number&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the buffers used for reading a response from the proxied server, for a single connection. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9980251637a79cc690c2d595ed852619456745f" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;number&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the buffers used for reading a response from the uwsgi server, for a single connection. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e20267922bc2d395ebe0ba76d7a682869583a6d" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;number&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the per-zone buffers used for pushing zone contents. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f96ce1a77951dd34779efdbde5671807f6747b" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;number&lt;/i&gt;&lt;/code&gt; of requests after which the response will be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0f747d5bf569b8feb5df000336930e6fa8f369" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the buffer per each request in which the request body may be saved before it is started to be processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e057c379169164c4edfdb55e19a58e4daa4befb5" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the buffer used for reading IMAP commands. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d217cc5321bffa02548708930872c9312d9c826" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the buffer used for reading SMTP commands. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322a4390430713bd411a7c8aa14e9f38d8087cb4" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the buffer used for reading data from the proxied server. Also sets the &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the buffer used for reading data from the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f868ae5a773048942802249de33986fc99d8942f" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the buffer used for reading the &lt;code&gt;.f4x&lt;/code&gt; index file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba599b643cafd1453a0f743812ad4bec3db2798f" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the buffer used for reading the first part of the response received from the FastCGI server. This part usually contains a small response header. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform. It can be made smaller, however.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91d98454a42db6c7e2586c3fa48523d62abcb51" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the buffer used for reading the first part of the response received from the SCGI server. This part usually contains a small response header. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform. It can be made smaller, however.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ab433062c2db4e63f893b825c41d5e50516a62" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the buffer used for reading the first part of the response received from the proxied server. This part usually contains a small response header. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform. It can be made smaller, however.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49362ff6f810d0406865dabced2b35c767d9be5" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the buffer used for reading the first part of the response received from the uwsgi server. This part usually contains a small response header. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform. It can be made smaller, however.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca45f0398d210eb502fd03b33fba20b54a1156a6" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the buffer used for reading the response received from the gRPC server. The response is passed to the client synchronously, as soon as it is received.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1890d9206de2c29d2d7e4505180e8f2f81ab5608" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the buffer used for reading the response received from the memcached server. The response is passed to the client synchronously, as soon as it is received.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a97cda733a478ac53f5453d62aa211120a2b11c1" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the buffer used for storing the response body of a subrequest. By default, the buffer size is equal to one memory page. This is either 4K or 8K, depending on a platform. It can be made smaller, however.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0d1d0cc537f6cc25c33edf6a0a1269d33f239c" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the slice. The zero value disables splitting responses into slices. Note that a too low value may result in excessive memory usage and opening a large number of files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50c1103fa5f90b1c484da3eb571b19a59ab0961" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;time&lt;/i&gt;&lt;/code&gt; for which a browser should keep the cookie. The special value &lt;code&gt;max&lt;/code&gt; will cause the cookie to expire on &amp;ldquo;&lt;code&gt;31 Dec 2037 23:55:55 GMT&lt;/code&gt;&amp;rdquo;. If the parameter is not specified, it will cause the cookie to expire at the end of a browser session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b628791ef1e218e235500b006bb83364aef7fb1" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;timeout&lt;/i&gt;&lt;/code&gt; between two successive read or write operations on client or proxied server connections. If no data is transmitted within this time, the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be90589a4d014021472092b325654e0cc81ce33e" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;timeout&lt;/i&gt;&lt;/code&gt; between two successive read or write operations on connection to another cluster node. If no data is transmitted within this time, the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18e91896d0043b703e023f532653e7473d55dee" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;variable&lt;/i&gt;&lt;/code&gt; to a JOSE header parameter identified by key names. Name matching starts from the top level of the JSON tree. For arrays, the variable keeps a list of array elements separated by commas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6984d88929bb5754b91ee53d9d3b1d46ff3458c" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;i&gt;variable&lt;/i&gt;&lt;/code&gt; to a JWT claim parameter identified by key names. Name matching starts from the top level of the JSON tree. For arrays, the variable keeps a list of array elements separated by commas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3287c3768f04f5873ef8e77e7490f4da07131f" translate="yes" xml:space="preserve">
          <source>Sets the HTTP protocol version for proxying. By default, version 1.0 is used. Version 1.1 is recommended for use with &lt;a href=&quot;ngx_http_upstream_module#keepalive&quot;&gt;keepalive&lt;/a&gt; connections and &lt;a href=&quot;ngx_http_upstream_module#ntlm&quot;&gt;NTLM authentication&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfd4367928d2728dea222b7c91c6aa02bf76e99" translate="yes" xml:space="preserve">
          <source>Sets the SMTP protocol extensions list that is passed to the client in response to the &lt;code&gt;EHLO&lt;/code&gt; command. The authentication methods specified in the &lt;a href=&quot;#smtp_auth&quot;&gt;smtp_auth&lt;/a&gt; directive and &lt;a href=&quot;https://tools.ietf.org/html/rfc3207&quot;&gt;STARTTLS&lt;/a&gt; are automatically added to this list depending on the &lt;a href=&quot;ngx_mail_ssl_module#starttls&quot;&gt;starttls&lt;/a&gt; directive value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ea9a06d78d2f827231f5caabbf1671ca56cd6f" translate="yes" xml:space="preserve">
          <source>Sets the URI to which an original request will be mirrored. Several mirrors can be specified on the same level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60725ac06cd72ab90d38aade45c7d02be1ed412a" translate="yes" xml:space="preserve">
          <source>Sets the URL of the HTTP authentication server. The protocol is described &lt;a href=&quot;#protocol&quot;&gt;below&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f895e7dabbd998d3e6afa23c477a57fd94e3b4" translate="yes" xml:space="preserve">
          <source>Sets the address of a FastCGI server. The address can be specified as a domain name or IP address, and a port:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd02c858c126c1a987b2b717d9c467df95070073" translate="yes" xml:space="preserve">
          <source>Sets the address of a proxied server. The address can be specified as a domain name or IP address, and a port:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23045c4007d05e372c8ff92582e413b01fdd3e9b" translate="yes" xml:space="preserve">
          <source>Sets the address of an SCGI server. The address can be specified as a domain name or IP address, and a port:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0c4f0be2f2e51b1841e05be45dc0e2db2fcffd" translate="yes" xml:space="preserve">
          <source>Sets the alignment for &lt;a href=&quot;#directio&quot;&gt;directio&lt;/a&gt;. In most cases, a 512-byte alignment is enough. However, when using XFS under Linux, it needs to be increased to 4K.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04dfd1557e8cacac2df931bf7a914e0073f4e9f3" translate="yes" xml:space="preserve">
          <source>Sets the amount of pre-reading for the kernel when working with file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e61fc72a48aed8bb9774fd770361861edb0bc4e" translate="yes" xml:space="preserve">
          <source>Sets the bucket &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; for hash tables used by the &lt;a href=&quot;#proxy_hide_header&quot;&gt;proxy_hide_header&lt;/a&gt; and &lt;a href=&quot;#proxy_set_header&quot;&gt;proxy_set_header&lt;/a&gt; directives. The details of setting up hash tables are provided in a separate &lt;a href=&quot;../hash&quot;&gt;document&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="258b4b29b9043ed557e928b1cb403107eb82812b" translate="yes" xml:space="preserve">
          <source>Sets the bucket size for the &lt;a href=&quot;#map&quot;&gt;map&lt;/a&gt; variables hash tables. Default value depends on the processor&amp;rsquo;s cache line size. The details of setting up hash tables are provided in a separate &lt;a href=&quot;../hash&quot;&gt;document&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d489237335d22baf67a8c0bcfc939d76c602410" translate="yes" xml:space="preserve">
          <source>Sets the bucket size for the server names hash tables. The default value depends on the size of the processor&amp;rsquo;s cache line. The details of setting up hash tables are provided in a separate &lt;a href=&quot;../hash&quot;&gt;document&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0eaa97a5d5f64de3ec2f49ce9f39cbf9a1619c8" translate="yes" xml:space="preserve">
          <source>Sets the bucket size for the types hash tables. The details of setting up hash tables are provided in a separate &lt;a href=&quot;../hash&quot;&gt;document&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9331a6fc45b36d05ed57a5a584ae2cc269f97375" translate="yes" xml:space="preserve">
          <source>Sets the bucket size for the valid referers hash tables. The details of setting up hash tables are provided in a separate &lt;a href=&quot;../hash&quot;&gt;document&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33922482ddc2cbb99c0ef4086ceca59312eac0c" translate="yes" xml:space="preserve">
          <source>Sets the bucket size for the variables hash table. The details of setting up hash tables are provided in a separate &lt;a href=&quot;../hash&quot;&gt;document&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ace4866252a1c1d5694c64f8118443a3a9e707e" translate="yes" xml:space="preserve">
          <source>Sets the configuration for a server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36ec46c4dbb1394652ac74b5da0442be7f2abd5" translate="yes" xml:space="preserve">
          <source>Sets the cookie name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4be9575511dc1ab16b8c8e6c79af6b48c79836" translate="yes" xml:space="preserve">
          <source>Sets the desired &lt;code&gt;&lt;i&gt;quality&lt;/i&gt;&lt;/code&gt; of the transformed JPEG images. Acceptable values are in the range from 1 to 100. Lesser values usually imply both lower image quality and less data to transfer. The maximum recommended value is 95. Parameter value can contain variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013cbee799feb1b5fbd2423ef77c90a3143c4e83" translate="yes" xml:space="preserve">
          <source>Sets the desired &lt;code&gt;&lt;i&gt;quality&lt;/i&gt;&lt;/code&gt; of the transformed WebP images. Acceptable values are in the range from 1 to 100. Lesser values usually imply both lower image quality and less data to transfer. Parameter value can contain variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5840c30b251bd7187552135f89ea6d6a1317ee" translate="yes" xml:space="preserve">
          <source>Sets the desired logging level for cases when the server limits the number of connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996b6bc78a9fffe5cec86ec528a346c20a01aecd" translate="yes" xml:space="preserve">
          <source>Sets the desired logging level for cases when the server refuses to process requests due to rate exceeding, or delays request processing. Logging level for delays is one point less than for refusals; for example, if &amp;ldquo;&lt;code&gt;limit_req_log_level notice&lt;/code&gt;&amp;rdquo; is specified, delays are logged with the &lt;code&gt;info&lt;/code&gt; level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39da4cf0f7dd0cf1dafb44c3f9f15dab09a5d57f" translate="yes" xml:space="preserve">
          <source>Sets the duration of one iteration (1.7.12). By default, &lt;code&gt;purger_threshold&lt;/code&gt; is set to 50 milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4730a5e31025c0647b6f509bb099e5ec0484a69d" translate="yes" xml:space="preserve">
          <source>Sets the format of a directory listing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e87c123389459c98a41c4dc757c1539bf337f5" translate="yes" xml:space="preserve">
          <source>Sets the gRPC server address. The address can be specified as a domain name or IP address, and a port:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8098e7b8bc872d3e05301a4311d9836a02a5d249" translate="yes" xml:space="preserve">
          <source>Sets the header compression &lt;code&gt;&lt;i&gt;level&lt;/i&gt;&lt;/code&gt; of a response in a range from 1 (fastest, less compression) to 9 (slowest, best compression). The special value 0 turns off the header compression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d4a69e3ad5e6f1517d6270650a0b13b260f47f" translate="yes" xml:space="preserve">
          <source>Sets the initial &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the buffer used for processing MP4 and MOV files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed5fc19f77ee2d54d5078ddffa32c21f65d6c7ec" translate="yes" xml:space="preserve">
          <source>Sets the initial &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the buffer used for processing MP4 files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abcaf87bddb83af0898c96e02b7e7d770e791caf" translate="yes" xml:space="preserve">
          <source>Sets the initial amount after which the further transmission of a response to a client will be rate limited. Parameter value can contain variables (1.17.0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0930da5bfa8f24bff8fe4cb90ec697c30676d37" translate="yes" xml:space="preserve">
          <source>Sets the initial amount of media data (measured in playback time) after which the further transmission of the response to a client will be rate limited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7105d6a3f2a2a70be9f3ebff43d0077270df4cde" translate="yes" xml:space="preserve">
          <source>Sets the maximum &lt;code&gt;&lt;i&gt;number&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of buffers that are used for reading and writing data frames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0a0cf1bc95fb3a3623d4112f57648abc48f8f0" translate="yes" xml:space="preserve">
          <source>Sets the maximum &lt;code&gt;&lt;i&gt;number&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of buffers used for reading large client request header. A request line cannot exceed the size of one buffer, or the 414 (Request-URI Too Large) error is returned to the client. A request header field cannot exceed the size of one buffer as well, or the 400 (Bad Request) error is returned to the client. Buffers are allocated only on demand. By default, the buffer size is equal to 8K bytes. If after the end of request processing a connection is transitioned into the keep-alive state, these buffers are released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4021ab6be6b76b0e4579a30f3a4e864438ef8aa5" translate="yes" xml:space="preserve">
          <source>Sets the maximum &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of hash tables used by the &lt;a href=&quot;#proxy_hide_header&quot;&gt;proxy_hide_header&lt;/a&gt; and &lt;a href=&quot;#proxy_set_header&quot;&gt;proxy_set_header&lt;/a&gt; directives. The details of setting up hash tables are provided in a separate &lt;a href=&quot;../hash&quot;&gt;document&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab85d6e98eb2558fb7d59aa2c78b019b578ba71f" translate="yes" xml:space="preserve">
          <source>Sets the maximum &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the &lt;a href=&quot;#map&quot;&gt;map&lt;/a&gt; variables hash tables. The details of setting up hash tables are provided in a separate &lt;a href=&quot;../hash&quot;&gt;document&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92995692e305cfe7ce4f1c37ba61a1bdbe2e310" translate="yes" xml:space="preserve">
          <source>Sets the maximum &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the server names hash tables. The details of setting up hash tables are provided in a separate &lt;a href=&quot;../hash&quot;&gt;document&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa6ace96421dcdd03988b522c1dc14988975986" translate="yes" xml:space="preserve">
          <source>Sets the maximum &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the types hash tables. The details of setting up hash tables are provided in a separate &lt;a href=&quot;../hash&quot;&gt;document&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3409a310739a593886351541366a41dbee674fd" translate="yes" xml:space="preserve">
          <source>Sets the maximum &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the valid referers hash tables. The details of setting up hash tables are provided in a separate &lt;a href=&quot;../hash&quot;&gt;document&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2895132558cebbe4a05eaf1e9de9e49cba25255" translate="yes" xml:space="preserve">
          <source>Sets the maximum &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the variables hash table. The details of setting up hash tables are provided in a separate &lt;a href=&quot;../hash&quot;&gt;document&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e207a04ab9b4ba56e50206196ee5163bdc69a66b" translate="yes" xml:space="preserve">
          <source>Sets the maximum allowable leeway to compensate clock skew when verifying the &lt;a href=&quot;https://tools.ietf.org/html/rfc7519#section-4.1.4&quot;&gt;exp&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc7519#section-4.1.5&quot;&gt;nbf&lt;/a&gt; JWT claims.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a235e1c2239b07ceea88bd9be4a16bceeb35c0" translate="yes" xml:space="preserve">
          <source>Sets the maximum allowed size of the client request body, specified in the &amp;ldquo;Content-Length&amp;rdquo; request header field. If the size in a request exceeds the configured value, the 413 (Request Entity Too Large) error is returned to the client. Please be aware that browsers cannot correctly display this error. Setting &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; to 0 disables checking of client request body size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bcbb1c630813918f4d8a8be59d6a32de6878bc1" translate="yes" xml:space="preserve">
          <source>Sets the maximum length of parameter values in SSI commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac56075c1bdf7c3deabb12d7afa25ec059936b5" translate="yes" xml:space="preserve">
          <source>Sets the maximum number of concurrent HTTP/2 streams in a connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b03566a7a01ec0061037f63195439bd8303cd67" translate="yes" xml:space="preserve">
          <source>Sets the maximum number of requests (including &lt;a href=&quot;#http2_push&quot;&gt;push&lt;/a&gt; requests) that can be served through one HTTP/2 connection, after which the next client request will lead to connection closing and the need of establishing a new connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe3ea23fc5d736d5d7905b0541cc881e6c03ba2" translate="yes" xml:space="preserve">
          <source>Sets the maximum number of requests that can be served through one keep-alive connection. After the maximum number of requests are made, the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a9e6b5ad2fda036e8f85a5858519158de95368" translate="yes" xml:space="preserve">
          <source>Sets the maximum number of requests that can be served through one keepalive connection. After the maximum number of requests is made, the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a1f91a6dd1edf194b15a747fb3cb0b29201675" translate="yes" xml:space="preserve">
          <source>Sets the maximum number of simultaneous connections that can be opened by a worker process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e443cb06c98043891c6d2c88e366f9feb9e9aa9" translate="yes" xml:space="preserve">
          <source>Sets the maximum size of chunks into which the response body is &lt;a href=&quot;http://www.chromium.org/spdy/spdy-protocol/spdy-protocol-draft2#TOC-Data-frames&quot;&gt; sliced&lt;/a&gt;. A too low value results in higher overhead. A too high value impairs prioritization due to &lt;a href=&quot;http://en.wikipedia.org/wiki/Head-of-line_blocking&quot;&gt; HOL blocking&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3237a448dcfd9b5ba18508e22ce4b0ff7cfc503d" translate="yes" xml:space="preserve">
          <source>Sets the maximum size of chunks into which the response body is sliced. A too low value results in higher overhead. A too high value impairs prioritization due to &lt;a href=&quot;http://en.wikipedia.org/wiki/Head-of-line_blocking&quot;&gt; HOL blocking&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262aaadab1ee27a60e6895af9256d16459794bda" translate="yes" xml:space="preserve">
          <source>Sets the maximum size of the buffer used for reading images. When the size is exceeded the server returns error 415 (Unsupported Media Type).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32cd1488c5c1458f6a36b833b9f5ca0a7f836f7b" translate="yes" xml:space="preserve">
          <source>Sets the memcached server address. The address can be specified as a domain name or IP address, and a port:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a77e02dee2ceb7e4f8a37806e97f804487cde0" translate="yes" xml:space="preserve">
          <source>Sets the minimum &lt;code&gt;&lt;i&gt;number&lt;/i&gt;&lt;/code&gt; of file accesses during the period configured by the &lt;code&gt;inactive&lt;/code&gt; parameter of the &lt;a href=&quot;#open_file_cache&quot;&gt;open_file_cache&lt;/a&gt; directive, required for a file descriptor to remain open in the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675cf58e9f4ef235e5b9de1ac41e08fe9aaf625d" translate="yes" xml:space="preserve">
          <source>Sets the minimum &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; for parts of a response stored on disk, starting from which it makes sense to send them using &lt;a href=&quot;ngx_http_core_module#sendfile&quot;&gt;sendfile&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7374f26c15e94623efd77631a3afecd187552f" translate="yes" xml:space="preserve">
          <source>Sets the minimum HTTP version of a request required to compress a response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4dd5ba0ee92602bb7f6be51af5699f6d132da05" translate="yes" xml:space="preserve">
          <source>Sets the minimum length of a response that will be gzipped. The length is determined only from the &amp;ldquo;Content-Length&amp;rdquo; response header field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9c235efdf107fc4cf5a99af408dddaf4d3c589" translate="yes" xml:space="preserve">
          <source>Sets the number of client datagrams at which binding between a client and existing UDP stream session is dropped. After receiving the specified number of datagrams, next datagram from the same client starts a new session. The session terminates when all client datagrams are transmitted to a proxied server and the expected number of &lt;a href=&quot;#proxy_responses&quot;&gt;responses&lt;/a&gt; is received, or when it reaches a &lt;a href=&quot;#proxy_timeout&quot;&gt;timeout&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64acdee7c6406c5a037fc14974b04beb4b719d5e" translate="yes" xml:space="preserve">
          <source>Sets the number of datagrams expected from the proxied server in response to a client datagram if the &lt;a href=&quot;ngx_stream_core_module#udp&quot;&gt;UDP&lt;/a&gt; protocol is used. The number serves as a hint for session termination. By default, the number of datagrams is not limited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47cdcc23f7797645cfdbd5bc30e8ea0b401d2d73" translate="yes" xml:space="preserve">
          <source>Sets the number of items that will be scanned during one iteration (1.7.12). By default, &lt;code&gt;purger_files&lt;/code&gt; is set to 10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f425301096d5ac400f26e452761a1c7b0684f4" translate="yes" xml:space="preserve">
          <source>Sets the path and other parameters of a cache. Cache data are stored in files. Both the key and file name in a cache are a result of applying the MD5 function to the proxied URL. The &lt;code&gt;levels&lt;/code&gt; parameter defines hierarchy levels of a cache: from 1 to 3, each level accepts values 1 or 2. For example, in the following configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7a610ba0a42886c5504b4fff69186d9db237c0" translate="yes" xml:space="preserve">
          <source>Sets the path and other parameters of a cache. Cache data are stored in files. The file name in a cache is a result of applying the MD5 function to the &lt;a href=&quot;#proxy_cache_key&quot;&gt;cache key&lt;/a&gt;. The &lt;code&gt;levels&lt;/code&gt; parameter defines hierarchy levels of a cache: from 1 to 3, each level accepts values 1 or 2. For example, in the following configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1cdfd5c25bf59b338904e534764f2a3f40844a4" translate="yes" xml:space="preserve">
          <source>Sets the path and other parameters of a cache. Cache data are stored in files. The file name in a cache is a result of applying the MD5 function to the &lt;a href=&quot;#scgi_cache_key&quot;&gt;cache key&lt;/a&gt;. The &lt;code&gt;levels&lt;/code&gt; parameter defines hierarchy levels of a cache: from 1 to 3, each level accepts values 1 or 2. For example, in the following configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc773dd1d5023d7a629070a7b68b66b446455df1" translate="yes" xml:space="preserve">
          <source>Sets the path and other parameters of a cache. Cache data are stored in files. The file name in a cache is a result of applying the MD5 function to the &lt;a href=&quot;#uwsgi_cache_key&quot;&gt;cache key&lt;/a&gt;. The &lt;code&gt;levels&lt;/code&gt; parameter defines hierarchy levels of a cache: from 1 to 3, each level accepts values 1 or 2. For example, in the following configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74405b3f21c9fafde2181d5e4ab6b67a192d721" translate="yes" xml:space="preserve">
          <source>Sets the path to a log file and configures the shared memory zone that is used to store currently active sessions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d406bf44aae0836084f210122ae62a31fec2fc" translate="yes" xml:space="preserve">
          <source>Sets the path, &lt;a href=&quot;#log_format&quot;&gt;format&lt;/a&gt;, and configuration for a buffered log write. Several logs can be specified on the same level. Logging to &lt;a href=&quot;../syslog&quot;&gt;syslog&lt;/a&gt; can be configured by specifying the &amp;ldquo;&lt;code&gt;syslog:&lt;/code&gt;&amp;rdquo; prefix in the first parameter. The special value &lt;code&gt;off&lt;/code&gt; cancels all &lt;code&gt;access_log&lt;/code&gt; directives on the current level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9793bc95473e7a18501e8433e302dc333fd53fa" translate="yes" xml:space="preserve">
          <source>Sets the path, format, and configuration for a buffered log write. Several logs can be specified on the same level. Logging to &lt;a href=&quot;../syslog&quot;&gt;syslog&lt;/a&gt; can be configured by specifying the &amp;ldquo;&lt;code&gt;syslog:&lt;/code&gt;&amp;rdquo; prefix in the first parameter. The special value &lt;code&gt;off&lt;/code&gt; cancels all &lt;code&gt;access_log&lt;/code&gt; directives on the current level. If the format is not specified then the predefined &amp;ldquo;&lt;code&gt;combined&lt;/code&gt;&amp;rdquo; format is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebac52bce3f7be3bd2ea3fe76ad84791140632e" translate="yes" xml:space="preserve">
          <source>Sets the protocol and address of a proxied server and an optional URI to which a location should be mapped. As a protocol, &amp;ldquo;&lt;code&gt;http&lt;/code&gt;&amp;rdquo; or &amp;ldquo;&lt;code&gt;https&lt;/code&gt;&amp;rdquo; can be specified. The address can be specified as a domain name or IP address, and an optional port:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b2895800336b072e3f9d0bf091c636bb74ebee" translate="yes" xml:space="preserve">
          <source>Sets the protocol and address of a uwsgi server. As a &lt;code&gt;&lt;i&gt;protocol&lt;/i&gt;&lt;/code&gt;, &amp;ldquo;&lt;code&gt;uwsgi&lt;/code&gt;&amp;rdquo; or &amp;ldquo;&lt;code&gt;suwsgi&lt;/code&gt;&amp;rdquo; (secured uwsgi, uwsgi over SSL) can be specified. The address can be specified as a domain name or IP address, and a port:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab329fdbd306c76401be92a4e265b3723be5765f" translate="yes" xml:space="preserve">
          <source>Sets the protocol for a proxied server. Supported protocols are &lt;a href=&quot;ngx_mail_imap_module&quot;&gt;IMAP&lt;/a&gt;, &lt;a href=&quot;ngx_mail_pop3_module&quot;&gt;POP3&lt;/a&gt;, and &lt;a href=&quot;ngx_mail_smtp_module&quot;&gt;SMTP&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a7f2f3dd92d10766dd353c4d8871b87dbb1fae" translate="yes" xml:space="preserve">
          <source>Sets the request &lt;code&gt;&lt;i&gt;variable&lt;/i&gt;&lt;/code&gt; to the given &lt;code&gt;&lt;i&gt;value&lt;/i&gt;&lt;/code&gt; after the authorization request completes. The value may contain variables from the authorization request, such as &lt;code&gt;$upstream_http_*&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329c5570fc73bc86771f4f15ce6e01ef5ef0e43e" translate="yes" xml:space="preserve">
          <source>Sets the root directory for requests. For example, with the following configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e858ae85313e69bcfa691a55eec76d743230bbe" translate="yes" xml:space="preserve">
          <source>Sets the server name that is used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd085b2fb06fc1db0d5b2d838125667b81c7714" translate="yes" xml:space="preserve">
          <source>Sets the shared memory zone and the maximum allowed number of connections for a given key value. When this limit is exceeded, the server will close the connection. For example, the directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8c2a3c77130bace5131cadc49e9993f3dac964" translate="yes" xml:space="preserve">
          <source>Sets the shared memory zone and the maximum allowed number of connections for a given key value. When this limit is exceeded, the server will return the &lt;a href=&quot;#limit_conn_status&quot;&gt;error&lt;/a&gt; in reply to a request. For example, the directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="442868bcf0c216bc4028e6c57c5c905fd4e7ce7a" translate="yes" xml:space="preserve">
          <source>Sets the shared memory zone and the maximum burst size of requests. If the requests rate exceeds the rate configured for a zone, their processing is delayed such that requests are processed at a defined rate. Excessive requests are delayed until their number exceeds the maximum burst size in which case the request is terminated with an &lt;a href=&quot;#limit_req_status&quot;&gt;error&lt;/a&gt;. By default, the maximum burst size is equal to zero. For example, the directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c575ef96dd280f6cbf9fd12524601f87c0b6ed" translate="yes" xml:space="preserve">
          <source>Sets the size of the buffer used for proxying. By default, the buffer size is equal to one memory page. Depending on a platform, it is either 4K or 8K.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8856c8ab1713721113a982f519cd6b9a2e1b13cc" translate="yes" xml:space="preserve">
          <source>Sets the size of the buffer used for sending data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e404a1701e3529f8e0c5ce3c7a2a54d47e5128" translate="yes" xml:space="preserve">
          <source>Sets the size of the per &lt;a href=&quot;../ngx_core_module#worker_processes&quot;&gt;worker&lt;/a&gt; input buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="506b4a02b4c6c5400f1b86fb4090ff88b1cd378d" translate="yes" xml:space="preserve">
          <source>Sets the status code to return in response to rejected requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1adddda4f549e49e1977aef025b627a86ff3d48" translate="yes" xml:space="preserve">
          <source>Sets the tag of syslog messages. Default is &amp;ldquo;&lt;code&gt;nginx&lt;/code&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a8f290c9ff8c501d2d35c6a7711dda29b380b5" translate="yes" xml:space="preserve">
          <source>Sets the text that should be changed in the &amp;ldquo;Location&amp;rdquo; and &amp;ldquo;Refresh&amp;rdquo; header fields of a proxied server response. Suppose a proxied server returned the header field &amp;ldquo;&lt;code&gt;Location: http://localhost:8000/two/some/uri/&lt;/code&gt;&amp;rdquo;. The directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77f01ce013696bf222c5efa48449c2e2ccc1950" translate="yes" xml:space="preserve">
          <source>Sets the timeout for communication with the authentication server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227e6b6fcf95d8561b457aed6583332089a56009" translate="yes" xml:space="preserve">
          <source>Sets the timeout for expecting more data from the client, after which the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e61f7b8c1c45dd19a0be8c5a68c77237e539873" translate="yes" xml:space="preserve">
          <source>Sets the timeout of inactivity after which the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43392b1c51b29485c4d19a8989f1985f4dbb3200" translate="yes" xml:space="preserve">
          <source>Sets the timeout that is used before proxying to the backend starts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df51244361f3294ff116e645a76908052f8f91b" translate="yes" xml:space="preserve">
          <source>Sets the type of transformation to perform on images:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461225118dd7ed17693b300838ad37cb5f3dee31" translate="yes" xml:space="preserve">
          <source>Sets the types and sizes of caches that store session parameters. A cache can be of any of the following types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4194b55bb3abbcb41747ab2a4b3eb7dfb2541488" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;modifier1&lt;/code&gt; field in the &lt;a href=&quot;http://uwsgi-docs.readthedocs.org/en/latest/Protocol.html#uwsgi-packet-header&quot;&gt;uwsgi packet header&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca68b044d7a5d2cc41606c111295c71ffd8b61b" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;modifier2&lt;/code&gt; field in the &lt;a href=&quot;http://uwsgi-docs.readthedocs.org/en/latest/Protocol.html#uwsgi-packet-header&quot;&gt;uwsgi packet header&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e88a31a687e7b9bd70e8a896019e884d9e7c8e" translate="yes" xml:space="preserve">
          <source>Sets the verification depth in another cluster server certificates chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72b480265fb7770f0c61aa524b00aa31a8e3712" translate="yes" xml:space="preserve">
          <source>Sets the verification depth in the client certificates chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5346449cc43814f2c01c77a22d9bb822a53bb7" translate="yes" xml:space="preserve">
          <source>Sets the verification depth in the gRPC SSL server certificates chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09c3bf978e6d4774f637e1a5e70c3f4e715d723" translate="yes" xml:space="preserve">
          <source>Sets the verification depth in the proxied HTTPS server certificates chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c478796ee1b939a4d04e2a29198ee8aff1f384ba" translate="yes" xml:space="preserve">
          <source>Sets the verification depth in the proxied server certificates chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f18018f77dfc966b4988e74b77ba26576bd5a56" translate="yes" xml:space="preserve">
          <source>Sets the verification depth in the secured uwsgi server certificates chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b434ac59590fd5c5ce8d31bd9cb71b9a23d29972" translate="yes" xml:space="preserve">
          <source>Setting Up FastCGI Proxying</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b04a5e080ea42405ea75603e70d8d18c0ae6f6d" translate="yes" xml:space="preserve">
          <source>Setting Up a Simple Proxy Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed73c5f9150ddbbaa9ce352d69703d0e67d3468" translate="yes" xml:space="preserve">
          <source>Setting up NGINX Plus environment on Amazon EC2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721978a4acb5d8d487416d699fd7080bd7d877d5" translate="yes" xml:space="preserve">
          <source>Setting up hashes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="639e50eeb55a5abdb4519a6af445550352209711" translate="yes" xml:space="preserve">
          <source>Several &lt;code&gt;http2_push&lt;/code&gt; directives can be specified on the same configuration level. The &lt;code&gt;off&lt;/code&gt; parameter cancels the effect of the &lt;code&gt;http2_push&lt;/code&gt; directives inherited from the previous configuration level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8afdca284392a2371d90b58eeb9617d8e2cc840d" translate="yes" xml:space="preserve">
          <source>Several functions for numeric conversion are implemented in nginx. The first four each convert a string of given length to a positive integer of the indicated type. They return &lt;code&gt;NGX_ERROR&lt;/code&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca85b57ba0d7a63c6f77703ed4af4090756d759" translate="yes" xml:space="preserve">
          <source>Several requests specified on one page and processed by proxied or FastCGI/uwsgi/SCGI/gRPC servers run in parallel. If sequential processing is desired, the &lt;code&gt;wait&lt;/code&gt; parameter should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298cbdc0e3d1375ae3dfa6edcbd552fb12e71ea1" translate="yes" xml:space="preserve">
          <source>Severity of error messages is determined by nginx, thus the parameter is ignored in the &lt;code&gt;error_log&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122ae25e75a21ed0115c31580c3ed933ce192d09" translate="yes" xml:space="preserve">
          <source>Shared memory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf1972dd0e75e60c0b61a6ecec7d8676ad8a648" translate="yes" xml:space="preserve">
          <source>Shared memory is used by nginx to share common data between processes. The &lt;code&gt;ngx_shared_memory_add(cf, name, size, tag)&lt;/code&gt; function adds a new shared memory entry &lt;code&gt;ngx_shm_zone_t&lt;/code&gt; to a cycle. The function receives the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; of the zone. Each shared zone must have a unique name. If a shared zone entry with the provided &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;tag&lt;/code&gt; already exists, the existing zone entry is reused. The function fails with an error if an existing entry with the same name has a different tag. Usually, the address of the module structure is passed as &lt;code&gt;tag&lt;/code&gt;, making it possible to reuse shared zones by name within one nginx module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a55c61f112bb8ffa3f4f263e9357ac856f7c97" translate="yes" xml:space="preserve">
          <source>Shared memory zone with slab allocator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8cfd31bcaf3bddbe904f377cc77fa26388f325" translate="yes" xml:space="preserve">
          <source>Shared zone entries are mapped to actual memory in &lt;code&gt;ngx_init_cycle()&lt;/code&gt; after the configuration is parsed. On POSIX systems, the &lt;code&gt;mmap()&lt;/code&gt; syscall is used to create the shared anonymous mapping. On Windows, the &lt;code&gt;CreateFileMapping()&lt;/code&gt;/ &lt;code&gt;MapViewOfFileEx()&lt;/code&gt; pair is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7167311644e7911331db0729be62b93f7d912f" translate="yes" xml:space="preserve">
          <source>Similar formatting rules are applied to &amp;ldquo;&lt;code&gt;do&lt;/code&gt;&amp;rdquo; and &amp;ldquo;&lt;code&gt;while&lt;/code&gt;&amp;rdquo; loops:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a938435641d281b6ae2fc1232d6224f23880ed5" translate="yes" xml:space="preserve">
          <source>Since OpenSSL 0.9.8j this option is enabled by default. If nginx was built with SNI support, then nginx will show this when run with the &amp;ldquo;-V&amp;rdquo; switch:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bacad54d8c2813913c7d3f09d238900ea17e20ea" translate="yes" xml:space="preserve">
          <source>Since addresses in a group are not required to be unique, specific servers in a group are referenced by their IDs. IDs are assigned automatically and shown when adding a new server or viewing the group configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58ad8f8f07b89e2c38a757f9ee474d180f86afa" translate="yes" xml:space="preserve">
          <source>Since variables are evaluated only when they are used, the mere declaration even of a large number of &amp;ldquo;&lt;code&gt;map&lt;/code&gt;&amp;rdquo; variables does not add any extra costs to connection processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04244fd2383ccb5dd0924a485beadc28cb2120d" translate="yes" xml:space="preserve">
          <source>Since variables are evaluated only when they are used, the mere declaration even of a large number of &amp;ldquo;&lt;code&gt;map&lt;/code&gt;&amp;rdquo; variables does not add any extra costs to request processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd68cd199a045e31f4f51b8d26989d3492b6a03b" translate="yes" xml:space="preserve">
          <source>Since variables are evaluated only when used, the mere existence of even a large number of declared &amp;ldquo;&lt;code&gt;geo&lt;/code&gt;&amp;rdquo; variables does not cause any extra costs for connection processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9faf0ec1543a09a316101faec544ffc9f8690f6" translate="yes" xml:space="preserve">
          <source>Since variables are evaluated only when used, the mere existence of even a large number of declared &amp;ldquo;&lt;code&gt;geo&lt;/code&gt;&amp;rdquo; variables does not cause any extra costs for request processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09dea6f70b0c5fbe7f8c3dca6c2bc743c24968a" translate="yes" xml:space="preserve">
          <source>Since version 0.8.48, this is the default setting for the server name, so the &lt;code&gt;server_name &quot;&quot;&lt;/code&gt; can be omitted. In earlier versions, the machine&amp;rsquo;s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d23bac9ab9deb261d14587beeb78b63dba9dc6d" translate="yes" xml:space="preserve">
          <source>Since version 1.11.0, this directive can be specified multiple times to load certificates of different types, for example, RSA and ECDSA:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79dcaacf7da64af20c74cdcca66a5744a80caa03" translate="yes" xml:space="preserve">
          <source>Since version 1.15.9, variables can be used in the &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; name when using OpenSSL 1.0.2 or higher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f824912de253c1d2a4e3e32741771cd707f3ebab" translate="yes" xml:space="preserve">
          <source>Since version 1.15.9, variables can be used in the &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; name when using OpenSSL 1.0.2 or higher:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="890a1a0e4bdea4328dbfa1246f4cfdfa2bfd3a7d" translate="yes" xml:space="preserve">
          <source>Since version 1.17.2, the method accepts escaped URIs and supports redirections to named locations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6297e4d6ad16975cbda099c836fb1d1969da45a8" translate="yes" xml:space="preserve">
          <source>Since version 1.3.13, nginx implements special mode of operation that allows setting up a tunnel between a client and proxied server if the proxied server returned a response with the code 101 (Switching Protocols), and the client asked for a protocol switch via the &amp;ldquo;Upgrade&amp;rdquo; header in a request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e2d48860b4f7a89d8374432938376fc26d08af" translate="yes" xml:space="preserve">
          <source>Since version 1.5.9 and prior to version 1.11.5, this parameter was available as part of our &lt;a href=&quot;http://nginx.com/products/&quot;&gt;commercial subscription&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df2a53ae5729295618ac29cc10089f11d924785" translate="yes" xml:space="preserve">
          <source>Sizes can be specified in bytes, kilobytes (suffixes &lt;code&gt;k&lt;/code&gt; and &lt;code&gt;K&lt;/code&gt;) or megabytes (suffixes &lt;code&gt;m&lt;/code&gt; and &lt;code&gt;M&lt;/code&gt;), for example, &amp;ldquo;&lt;code&gt;1024&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;8k&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;1m&lt;/code&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c7ddf318b0788f0e1d738fa01d0fe971c450d5" translate="yes" xml:space="preserve">
          <source>Slab pool divides all shared zone into pages. Each page is used for allocating objects of the same size. The specified size must be a power of 2, and greater than the minimum size of 8 bytes. Nonconforming values are rounded up. A bitmask for each page tracks which blocks are in use and which are free for allocation. For sizes greater than a half page (which is usually 2048 bytes), allocation is done an entire page at a time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10346356a4f94848819fb7da596048a3cf396c99" translate="yes" xml:space="preserve">
          <source>Solaris Dynamic Tracing Guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8aafffd080db652521796228e9d277942293534" translate="yes" xml:space="preserve">
          <source>Some browsers may complain about a certificate signed by a well-known certificate authority, while other browsers may accept the certificate without issues. This occurs because the issuing authority has signed the server certificate using an intermediate certificate that is not present in the certificate base of well-known trusted certificate authorities which is distributed with a particular browser. In this case the authority provides a bundle of chained certificates which should be concatenated to the signed server certificate. The server certificate must appear before the chained certificates in the combined file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b21862581914279f3cb1a869b8d9a9f4d07f53a" translate="yes" xml:space="preserve">
          <source>Some modules, such as SSI and Perl, need to deal with variables for which the name is not known at configuration time. An index therefore cannot be used to access them, but the &lt;code&gt;ngx_http_get_variable(r, name, key)&lt;/code&gt; function is available. It searches for a variable with a given &lt;code&gt;name&lt;/code&gt; and its hash &lt;code&gt;key&lt;/code&gt; derived from the name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f323f111a948be1ee520cdf8f293dd5cf581e6" translate="yes" xml:space="preserve">
          <source>Some of the time intervals can be specified only with a seconds resolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168ca1c082de07769f504ce272e6c64362df7c5c" translate="yes" xml:space="preserve">
          <source>Some older distributions like SuSE 8.2 provide patches that add epoll support to 2.4 kernels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b23b51614931ed7f73415cb47b58a262ef268716" translate="yes" xml:space="preserve">
          <source>Sometimes, it is convenient to wrap an expression after a cast. In this case, the continuation line is indented:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7efc65c04bbdd802881796a6df239088c6a1ef2" translate="yes" xml:space="preserve">
          <source>Source values are specified as strings or regular expressions (0.9.6).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22a22af3e99227fd5ea7bbd879af63adde7f14b" translate="yes" xml:space="preserve">
          <source>Source values are specified as strings or regular expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c9b4a487823ed126796aadf800926001d7a4ce" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;curve&lt;/i&gt;&lt;/code&gt; for ECDHE ciphers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bffabe268fe80972ed94323adceecdafc9db204e" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; in &lt;a href=&quot;https://tools.ietf.org/html/rfc7517#section-5&quot;&gt;JSON Web Key Set&lt;/a&gt; format for validating JWT signature. Parameter value can contain variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf22c11c00d36a70d109d3dc73dc87b186102971" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; that keeps the state of the dynamically configurable group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720b1b01114a374a0cea0c35b3b54007bc128352" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with DH parameters for DHE ciphers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c46433d756c45bd0c19e3ee6a72c06efc1aa285" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with passphrases for &lt;a href=&quot;#grpc_ssl_certificate_key&quot;&gt;secret keys&lt;/a&gt; where each passphrase is specified on a separate line. Passphrases are tried in turn when loading the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6adfc8b950a184c5f55d9b502f29b02b8b26a36" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with passphrases for &lt;a href=&quot;#proxy_ssl_certificate_key&quot;&gt;secret keys&lt;/a&gt; where each passphrase is specified on a separate line. Passphrases are tried in turn when loading the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab8050916199e1d431ba7a68f9f2daa699a380b" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with passphrases for &lt;a href=&quot;#ssl_certificate_key&quot;&gt;secret keys&lt;/a&gt; where each passphrase is specified on a separate line. Passphrases are tried in turn when loading the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acacf523d3c3b1b0d5fea90869cb6b37d65d2c98" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with passphrases for &lt;a href=&quot;#uwsgi_ssl_certificate_key&quot;&gt;secret keys&lt;/a&gt; where each passphrase is specified on a separate line. Passphrases are tried in turn when loading the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98ac5fab9469eaf28274e31072d191707968629" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with passphrases for &lt;a href=&quot;#zone_sync_ssl_certificate_key&quot;&gt;secret keys&lt;/a&gt; where each passphrase is specified on a separate line. Passphrases are tried in turn when loading the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124b0df7d1a81cbad45c2ba18007d52ea4969417" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with revoked certificates (CRL) in the PEM format used to &lt;a href=&quot;#grpc_ssl_verify&quot;&gt;verify&lt;/a&gt; the certificate of the gRPC SSL server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1173185d6af8c8ca1e175ba7281d397d9a0c5669" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with revoked certificates (CRL) in the PEM format used to &lt;a href=&quot;#proxy_ssl_verify&quot;&gt;verify&lt;/a&gt; the certificate of the proxied HTTPS server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6294312463f7c60f0f5d599d2dd9595e7f3543e" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with revoked certificates (CRL) in the PEM format used to &lt;a href=&quot;#proxy_ssl_verify&quot;&gt;verify&lt;/a&gt; the certificate of the proxied server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dadbd82bae1616d2b85115aa84bdb7e93c7bb4e" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with revoked certificates (CRL) in the PEM format used to &lt;a href=&quot;#ssl_verify_client&quot;&gt;verify&lt;/a&gt; client certificates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce3c22bf926e520d38b9b680849b603bc7fa501" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with revoked certificates (CRL) in the PEM format used to &lt;a href=&quot;#uwsgi_ssl_verify&quot;&gt;verify&lt;/a&gt; the certificate of the secured uwsgi server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085cf13f5a58c04001a00789ce18184195bc77d2" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with revoked certificates (CRL) in the PEM format used to &lt;a href=&quot;#zone_sync_ssl_verify&quot;&gt;verify&lt;/a&gt; the certificate of another cluster server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37127807afb5f4d74e1fbd4a6f38ff42df5e3b0" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with the certificate in the PEM format for the given server. If intermediate certificates should be specified in addition to a primary certificate, they should be specified in the same file in the following order: the primary certificate comes first, then the intermediate certificates. A secret key in the PEM format may be placed in the same file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b5da4fcfa209c7af5935c127164037226172dc" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with the certificate in the PEM format for the given virtual server. If intermediate certificates should be specified in addition to a primary certificate, they should be specified in the same file in the following order: the primary certificate comes first, then the intermediate certificates. A secret key in the PEM format may be placed in the same file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdeaedaf5dbcc0e2cc8b53d5d775f0b5a03b0c25" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with the certificate in the PEM format used for authentication to a gRPC SSL server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f036e7c75707ab225cf17e5231be75dbd45455b4" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with the certificate in the PEM format used for authentication to a proxied HTTPS server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852802ad72ee0e189ef32798e16f557e1278366a" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with the certificate in the PEM format used for authentication to a proxied server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5a334a652952a6a8d69050c75c0f3121968402" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with the certificate in the PEM format used for authentication to a secured uwsgi server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f1791bf68752b1d601392736dfe415fdb95d50" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with the certificate in the PEM format used for authentication to another cluster server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01bf244ce557a1d54d71212c3e14acc24aa471fc" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with the secret key in the PEM format for the given server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719d0591ddbd7ff00a3e59301e6fdaf4c8631375" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with the secret key in the PEM format for the given virtual server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f517b09a99493b4a8724f6b63c496406a21327" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with the secret key in the PEM format used for authentication to a gRPC SSL server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="143838676cfd58a498546ee06c5dbade5fede729" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with the secret key in the PEM format used for authentication to a proxied HTTPS server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b979f1ce5e59e9941faabf12a987a1d315c4b3" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with the secret key in the PEM format used for authentication to a proxied server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637ad4b6dd8a27ecb9f5a5d1864e371b74198711" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with the secret key in the PEM format used for authentication to a secured uwsgi server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3157ebdd2836ed750607eada1a2f6938a8e4b54b" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with the secret key in the PEM format used for authentication to another cluster server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63dfbb6e021d118fb0d96aad3a3133aac5921140" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with trusted CA certificates in the PEM format used to &lt;a href=&quot;#grpc_ssl_verify&quot;&gt;verify&lt;/a&gt; the certificate of the gRPC SSL server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211846b46acd9ec3a1a1482ad6b3ae0dea050c81" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with trusted CA certificates in the PEM format used to &lt;a href=&quot;#proxy_ssl_verify&quot;&gt;verify&lt;/a&gt; the certificate of the proxied HTTPS server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af5b313d8326783dbc1b6d28e341b71f143d0e9" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with trusted CA certificates in the PEM format used to &lt;a href=&quot;#proxy_ssl_verify&quot;&gt;verify&lt;/a&gt; the certificate of the proxied server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd8a5c543ffeaeb3517868aeedffaa33d20ecd0" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with trusted CA certificates in the PEM format used to &lt;a href=&quot;#ssl_verify_client&quot;&gt;verify&lt;/a&gt; client certificates and OCSP responses if &lt;a href=&quot;#ssl_stapling&quot;&gt;ssl_stapling&lt;/a&gt; is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb81d837dc6c85477a46c1291589d91411e2bb99" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with trusted CA certificates in the PEM format used to &lt;a href=&quot;#ssl_verify_client&quot;&gt;verify&lt;/a&gt; client certificates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f2c71fd98631353265d5515a3342d34b0bf370" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with trusted CA certificates in the PEM format used to &lt;a href=&quot;#uwsgi_ssl_verify&quot;&gt;verify&lt;/a&gt; the certificate of the secured uwsgi server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b6940fa79a3eaee05f871e39522616ea582ec2" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; with trusted CA certificates in the PEM format used to &lt;a href=&quot;#zone_sync_ssl_verify&quot;&gt;verify&lt;/a&gt; the certificate of another cluster server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8d698d087a13f2dc379e6f80f2f06ef3bb9c39" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the &lt;a href=&quot;stream_processing#preread_phase&quot;&gt;preread&lt;/a&gt; buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80454d24422ed46dd7846d1a49c7c20417017e0e" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;timeout&lt;/i&gt;&lt;/code&gt; for reading the PROXY protocol header to complete. If no entire header is transmitted within this time, the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd19fb75a8625a7e0213e77e7eb9f979052513c" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;timeout&lt;/i&gt;&lt;/code&gt; of the &lt;a href=&quot;stream_processing#preread_phase&quot;&gt;preread&lt;/a&gt; phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c75d806d3bc11696984f74260384905bc8abe87" translate="yes" xml:space="preserve">
          <source>Specifies a &lt;code&gt;&lt;i&gt;value&lt;/i&gt;&lt;/code&gt; to send to the client. The value can contain text, variables, and their combination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d217b527459805fce99e637c206edec9d8fd77b" translate="yes" xml:space="preserve">
          <source>Specifies a database used to determine the country depending on the client IP address. The following variables are available when using this database:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ee8fd45add38f887ff98fc92ae7f59e1a4dc43" translate="yes" xml:space="preserve">
          <source>Specifies a database used to determine the country, region, and city depending on the client IP address. The following variables are available when using this database:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c983b2747a14cf01e92c0c560299a9fc5807be2d" translate="yes" xml:space="preserve">
          <source>Specifies a database used to determine the organization depending on the client IP address. The following variable is available when using this database:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d133c9c874a3f8a96d57041a38a1420b677218cc" translate="yes" xml:space="preserve">
          <source>Specifies a file that implements location and variable handlers in njs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10fbcbc7c0e66fde8dcb79c2c3aae68860f50ef1" translate="yes" xml:space="preserve">
          <source>Specifies a file that implements server and variable handlers in njs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e867b0d1fb4ac280b666f5e68c80798eb99301a" translate="yes" xml:space="preserve">
          <source>Specifies a file that keeps user names and passwords, in the following format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="defbc0a22b2b3b1e90c2dd46e8f0f5f2f03d0d4b" translate="yes" xml:space="preserve">
          <source>Specifies a load balancing method for a server group where the client-server mapping is based on the hashed &lt;code&gt;&lt;i&gt;key&lt;/i&gt;&lt;/code&gt; value. The &lt;code&gt;&lt;i&gt;key&lt;/i&gt;&lt;/code&gt; can contain text, variables, and their combinations (1.11.2). Usage example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c104e4dcae88c8dcac752e31f66c051972eda455" translate="yes" xml:space="preserve">
          <source>Specifies a load balancing method for a server group where the client-server mapping is based on the hashed &lt;code&gt;&lt;i&gt;key&lt;/i&gt;&lt;/code&gt; value. The &lt;code&gt;&lt;i&gt;key&lt;/i&gt;&lt;/code&gt; can contain text, variables, and their combinations. Note that adding or removing a server from the group may result in remapping most of the keys to different servers. The method is compatible with the &lt;a href=&quot;https://metacpan.org/pod/Cache::Memcached&quot;&gt;Cache::Memcached&lt;/a&gt; Perl library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="605f472b545981f82246886afa4335afb61d52f6" translate="yes" xml:space="preserve">
          <source>Specifies a time during which a client may reuse the session parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ac719b4013535981d9a38da82a4be4dee78f44" translate="yes" xml:space="preserve">
          <source>Specifies a timeout for the SSL handshake to complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4533007438cc751be197ed1322fddee9b8020c" translate="yes" xml:space="preserve">
          <source>Specifies a version starting from which a browser is considered modern. A browser can be any one of the following: &lt;code&gt;msie&lt;/code&gt;, &lt;code&gt;gecko&lt;/code&gt; (browsers based on Mozilla), &lt;code&gt;opera&lt;/code&gt;, &lt;code&gt;safari&lt;/code&gt;, or &lt;code&gt;konqueror&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c2b7f65c4ae7e8a078ce9210c35266a04d7e8e" translate="yes" xml:space="preserve">
          <source>Specifies how to compare modification time of a response with the time in the &amp;ldquo;If-Modified-Since&amp;rdquo; request header field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b90cec893f9777a69667bc729227a584d7a097" translate="yes" xml:space="preserve">
          <source>Specifies in which cases a request should be passed to the next server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b385392821bcb3b1373c7b85a742f6eaa643ff" translate="yes" xml:space="preserve">
          <source>Specifies log format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e8e621fbca17f86cce75ea46cd0bdfbf9cd183" translate="yes" xml:space="preserve">
          <source>Specifies that a given location can only be used for internal requests. For external requests, the client error 404 (Not Found) is returned. Internal requests are the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae365bbfec35fcf641f325065001c2c43be3084f" translate="yes" xml:space="preserve">
          <source>Specifies that a group should use a load balancing method where a connection is passed to a randomly selected server, taking into account weights of servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4ecca9c7042c92ba837ad44150a22417d6f53c" translate="yes" xml:space="preserve">
          <source>Specifies that a group should use a load balancing method where a connection is passed to the server with the least average time and least number of active connections, taking into account weights of servers. If there are several such servers, they are tried in turn using a weighted round-robin balancing method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f7cb9590fe94edf5b32e497394c7be842335b1" translate="yes" xml:space="preserve">
          <source>Specifies that a group should use a load balancing method where a connection is passed to the server with the least number of active connections, taking into account weights of servers. If there are several such servers, they are tried in turn using a weighted round-robin balancing method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2eae8b8b7db09c94595dfe2c0e3864c75c98382" translate="yes" xml:space="preserve">
          <source>Specifies that a group should use a load balancing method where a request is passed to a randomly selected server, taking into account weights of servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bead46aa411998af36d8bcfdbeffc16da2a61604" translate="yes" xml:space="preserve">
          <source>Specifies that a group should use a load balancing method where a request is passed to the server with the least average response time and least number of active connections, taking into account weights of servers. If there are several such servers, they are tried in turn using a weighted round-robin balancing method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634a690b044ac819ff7247c6f649bc0a11abe0a0" translate="yes" xml:space="preserve">
          <source>Specifies that a group should use a load balancing method where a request is passed to the server with the least number of active connections, taking into account weights of servers. If there are several such servers, they are tried in turn using a weighted round-robin balancing method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc0a62b36c7c99a5621bbe2e3573ce8e0b5e409" translate="yes" xml:space="preserve">
          <source>Specifies that a group should use a load balancing method where requests are distributed between servers based on client IP addresses. The first three octets of the client IPv4 address, or the entire IPv6 address, are used as a hashing key. The method ensures that requests from the same client will always be passed to the same server except when this server is unavailable. In the latter case client requests will be passed to another server. Most probably, it will always be the same server as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="771cf52b2c1f46c374b1ae6c53b441ed98fed43b" translate="yes" xml:space="preserve">
          <source>Specifies that server ciphers should be preferred over client ciphers when the SSLv3 and TLS protocols are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4767be6484a8026ac8ec261e55a3714f91335fc" translate="yes" xml:space="preserve">
          <source>Specifies that server ciphers should be preferred over client ciphers when using the SSLv3 and TLS protocols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299e53e5fd05d51eb88ac19f28d3fa0450e71634" translate="yes" xml:space="preserve">
          <source>Specifies the &amp;ldquo;Referer&amp;rdquo; request header field values that will cause the embedded &lt;code&gt;$invalid_referer&lt;/code&gt; variable to be set to an empty string. Otherwise, the variable will be set to &amp;ldquo;&lt;code&gt;1&lt;/code&gt;&amp;rdquo;. Search for a match is case-insensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f2738af8acdde152c0bf8bea26c3f11a33ddd1" translate="yes" xml:space="preserve">
          <source>Specifies the &lt;a href=&quot;events&quot;&gt;connection processing&lt;/a&gt;&lt;code&gt;&lt;i&gt;method&lt;/i&gt;&lt;/code&gt; to use. There is normally no need to specify it explicitly, because nginx will by default use the most efficient method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea586ab746700085272fa0ea4932d47fe0a5b7ff" translate="yes" xml:space="preserve">
          <source>Specifies the DTD file that declares character entities. This file is compiled at the configuration stage. For technical reasons, the module is unable to use the external subset declared in the processed XML, so it is ignored and a specially defined file is used instead. This file should not describe the XML structure. It is enough to declare just the required character entities, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122c7ae8e2882a73260262e0cc634b0639fda412" translate="yes" xml:space="preserve">
          <source>Specifies the HTTP &lt;code&gt;&lt;i&gt;method&lt;/i&gt;&lt;/code&gt; to use in requests forwarded to the proxied server instead of the method from the client request. Parameter value can contain variables (1.11.6).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1010464b25974dfddf6b4577a8e96d5ca9074a0" translate="yes" xml:space="preserve">
          <source>Specifies the enabled ciphers for connections to a proxied server. The ciphers are specified in the format understood by the OpenSSL library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7afd7a0c188aefea60c1eb2f67da0e4bd75738e1" translate="yes" xml:space="preserve">
          <source>Specifies the enabled ciphers for connections to another cluster server. The ciphers are specified in the format understood by the OpenSSL library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b9ac75ea9202f8845f9b3fd27fe75c7535e764" translate="yes" xml:space="preserve">
          <source>Specifies the enabled ciphers for requests to a gRPC SSL server. The ciphers are specified in the format understood by the OpenSSL library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f964ee4697492ee26f57ad2cabfb45f33de6e08c" translate="yes" xml:space="preserve">
          <source>Specifies the enabled ciphers for requests to a proxied HTTPS server. The ciphers are specified in the format understood by the OpenSSL library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90d48a44b9bc700b444d059df201746b3fefe25" translate="yes" xml:space="preserve">
          <source>Specifies the enabled ciphers for requests to a secured uwsgi server. The ciphers are specified in the format understood by the OpenSSL library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e272a7d63a1e79f8e5e010aa4bceca144d8843" translate="yes" xml:space="preserve">
          <source>Specifies the enabled ciphers. The ciphers are specified in the format understood by the OpenSSL library, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b196918aa0b2711dc7ea003fd543d5bc47631f" translate="yes" xml:space="preserve">
          <source>Specifies the log format, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a96f33fbdf8d4c97de61a387e6e286de90b38a6" translate="yes" xml:space="preserve">
          <source>Specifies the output format of a log. The value of the &lt;code&gt;$body_bytes_sent&lt;/code&gt; variable is aggregated across all requests in a session. The values of all other variables available for logging correspond to the first request in a session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657f5597fcb6f92033e36ad0cb0ccbbefe12c14c" translate="yes" xml:space="preserve">
          <source>Standard &lt;a href=&quot;https://tools.ietf.org/html/rfc3875#section-4.1&quot;&gt;CGI environment variables&lt;/a&gt; should be provided as SCGI headers, see the &lt;code&gt;scgi_params&lt;/code&gt; file provided in the distribution:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f966a968c35ed55510fc8ec082ee4615950551" translate="yes" xml:space="preserve">
          <source>Standard &lt;a href=&quot;https://tools.ietf.org/html/rfc3875#section-4.1&quot;&gt;CGI environment variables&lt;/a&gt; should be provided as uwsgi headers, see the &lt;code&gt;uwsgi_params&lt;/code&gt; file provided in the distribution:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e863f4b7608882cb61d22f4020f9df2dc9f3e66" translate="yes" xml:space="preserve">
          <source>Start MSYS bash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586285bed53334209830802e5c70d9d36a6888d0" translate="yes" xml:space="preserve">
          <source>Starting from nginx 0.8.12 and FreeBSD 5.2.1, &lt;a href=&quot;#aio&quot;&gt;aio&lt;/a&gt; can be used to pre-load data for &lt;code&gt;sendfile()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c110f759556afd1968407b5ba217b3a4483abe" translate="yes" xml:space="preserve">
          <source>Starting from version 0.8.42, it is possible to specify either a redirect URL (for codes 301, 302, 303, 307, and 308) or the response body &lt;code&gt;&lt;i&gt;text&lt;/i&gt;&lt;/code&gt; (for other codes). A response body text and redirect URL can contain variables. As a special case, a redirect URL can be specified as a URI local to this server, in which case the full redirect URL is formed according to the request scheme (&lt;code&gt;$scheme&lt;/code&gt;) and the &lt;a href=&quot;ngx_http_core_module#server_name_in_redirect&quot;&gt;server_name_in_redirect&lt;/a&gt; and &lt;a href=&quot;ngx_http_core_module#port_in_redirect&quot;&gt;port_in_redirect&lt;/a&gt; directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962cea62cbf14bf5c966260ef98e1cf8a72756f4" translate="yes" xml:space="preserve">
          <source>Starting, Stopping, and Reloading Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0323f2ffbc16cfb8864bb5885686750482e5f741" translate="yes" xml:space="preserve">
          <source>Starting, stopping, removing a cluster node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ebbb1d5091de1ea1adf876a04eca1c12914d71" translate="yes" xml:space="preserve">
          <source>Static and global variables may be initialized on declaration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40d54696d1023e9cd5ddc60139a13b8d9ed02db" translate="yes" xml:space="preserve">
          <source>Status data for memory slots (8, 16, 32, 64, 128, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c4602b7b1d0c53ceee9ce604a5370ffd32a9f1" translate="yes" xml:space="preserve">
          <source>Stops processing and returns the specified &lt;code&gt;&lt;i&gt;code&lt;/i&gt;&lt;/code&gt; to a client. The non-standard code 444 closes a connection without sending a response header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a8363b0ef6f0d62edacdf1e2a9d08199ccedd03" translate="yes" xml:space="preserve">
          <source>Stops processing the current set of &lt;code&gt;ngx_http_rewrite_module&lt;/code&gt; directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f60870bbc5916b895cab8b1b80a09b750909a2e0" translate="yes" xml:space="preserve">
          <source>Stream Keyval Shared Memory Zone:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b38ebb290c0e4383b1e50655e38a9e73fb7f79" translate="yes" xml:space="preserve">
          <source>Stream Server Zone:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68eb5d171a7c30374ca26c1dd77acb8f90626d62" translate="yes" xml:space="preserve">
          <source>Stream Session</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81ff8ccabca719c731f9bd69e49e74dcc9017d3" translate="yes" xml:space="preserve">
          <source>Stream Upstream Server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203ed364e4440d5de63cd859e5d81aae6bf289a3" translate="yes" xml:space="preserve">
          <source>Stream Upstream:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d76b6a90ca3e342cf1c26ecca7ca9f409ffcef0" translate="yes" xml:space="preserve">
          <source>Stream Zone Sync Node:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae95a22e821d114e2ae3652b9ce1931e2e2269e" translate="yes" xml:space="preserve">
          <source>Stream code should include</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="3816c4beac471c733eed1d91c213f8c2b6a29262" translate="yes" xml:space="preserve">
          <source>Strings</source>
          <target state="translated">Strings</target>
        </trans-unit>
        <trans-unit id="57b0b08e211712a33d70e9206904166c35a9d565" translate="yes" xml:space="preserve">
          <source>Strings are matched ignoring the case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9320a292b69b52af21f2d5cf17ce4564c8d03c" translate="yes" xml:space="preserve">
          <source>Structure types are defined using &lt;code&gt;typedef&lt;/code&gt;. Inside structures, member types and names are aligned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce5f664592951d18fbe1c5d4ff371e240d2405d9" translate="yes" xml:space="preserve">
          <source>Subrequests</source>
          <target state="translated">Subrequests</target>
        </trans-unit>
        <trans-unit id="8dd93ad7cac298b34c80ad5922eb846a428413fb" translate="yes" xml:space="preserve">
          <source>Subrequests are normally created in a body filter, in which case their output can be treated like the output from any explicit request. This means that eventually the output of a subrequest is sent to the client, after all explicit buffers that are passed before subrequest creation and before any buffers that are passed after creation. This ordering is preserved even for large hierarchies of subrequests. The following example inserts output from a subrequest after all request data buffers, but before the final buffer with the &lt;code&gt;last_buf&lt;/code&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fff68138ecb57906032ee9bb4e68b1e7969ab50" translate="yes" xml:space="preserve">
          <source>Subrequests are primarily used to insert output of one request into another, possibly mixed with other data. A subrequest looks like a normal request, but shares some data with its parent. In particular, all fields related to client input are shared because a subrequest does not receive any other input from the client. The request field &lt;code&gt;parent&lt;/code&gt; for a subrequest contains a link to its parent request and is NULL for the main request. The field &lt;code&gt;main&lt;/code&gt; contains a link to the main request in a group of requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea189f564c4c2bedc39a88c13e7e13f9f553ad49" translate="yes" xml:space="preserve">
          <source>Subrequests are related to the concept of active requests. A request &lt;code&gt;r&lt;/code&gt; is considered active if &lt;code&gt;c-&amp;gt;data == r&lt;/code&gt;, where &lt;code&gt;c&lt;/code&gt; is the client connection object. At any given point, only the active request in a request group is allowed to output its buffers to the client. An inactive request can still send its output to the filter chain, but it does not pass beyond the &lt;code&gt;ngx_http_postpone_filter&lt;/code&gt; and remains buffered by that filter until the request becomes active. Here are some rules of request activation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353980349ac24aeacad09307e5d30c30ab30283c" translate="yes" xml:space="preserve">
          <source>Such names are called wildcard names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43727940658680040865603304cce9bd70d6ba51" translate="yes" xml:space="preserve">
          <source>Support for &lt;code&gt;SHA&lt;/code&gt; scheme was added only to aid in migration from other web servers. It should not be used for new passwords, since unsalted SHA-1 hashing that it employs is vulnerable to &lt;a href=&quot;http://en.wikipedia.org/wiki/Rainbow_attack&quot;&gt;rainbow table&lt;/a&gt; attacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f4135b790d5d39e0820eec5db69e687dccbb72a" translate="yes" xml:space="preserve">
          <source>Supported methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68dc931e288c6fc4a65e420c902312b3326476a0" translate="yes" xml:space="preserve">
          <source>Symbolic links in the pathname are allowed and not checked. This is the default behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1107cbc1cbeb47fd5aefd2b3f0d53ce8aab609fb" translate="yes" xml:space="preserve">
          <source>Sync Zone:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e4de7c494d27145680fc015ee388201f0d3070" translate="yes" xml:space="preserve">
          <source>Synchronization information per each shared memory zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857b9b16b5d57d7fa2f5a79c822df2aa052d3fa5" translate="yes" xml:space="preserve">
          <source>Synchronization information per node in a cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="811f43a5dce580f384c97fa1271e43f670ef4fa9" translate="yes" xml:space="preserve">
          <source>Synchronization status of a shared memory zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88228855697ed07f518c6621a16b85aba6525e59" translate="yes" xml:space="preserve">
          <source>Synchronously appends specified &lt;code&gt;data&lt;/code&gt; to a file with provided &lt;code&gt;filename&lt;/code&gt;. If the file does not exist, it will be created. The &lt;code&gt;options&lt;/code&gt; parameter is expected to be an object with the following keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5761b2c171b99f1191e763b3071501dbad8338" translate="yes" xml:space="preserve">
          <source>Synchronously returns the contents of the file with provided &lt;code&gt;filename&lt;/code&gt;. The &lt;code&gt;options&lt;/code&gt; parameter holds &lt;code&gt;string&lt;/code&gt; that specifies encoding. If not specified, a &lt;a href=&quot;#string_tobytes&quot;&gt;byte string&lt;/a&gt; is returned. If &lt;code&gt;utf8&lt;/code&gt; encoding is specified, a Unicode string is returned. Otherwise, &lt;code&gt;options&lt;/code&gt; is expected to be an object with the following keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f3983935bc84d5f3f5659d2af342f9d822ebc4" translate="yes" xml:space="preserve">
          <source>Synchronously writes &lt;code&gt;data&lt;/code&gt; to a file with provided &lt;code&gt;filename&lt;/code&gt;. If the file does not exist, it will be created, if the file exists, it will be replaced. The &lt;code&gt;options&lt;/code&gt; parameter is expected to be an object with the following keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de8dba368e7754dc199c99b017f5c51265ee8dc" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Syntax:</target>
        </trans-unit>
        <trans-unit id="2813e247bd694ef15ec427e76a667dacf19cc97b" translate="yes" xml:space="preserve">
          <source>TERM, INT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="143d64ae7b5cb70490b7e7b12fdc6ee86260ea17" translate="yes" xml:space="preserve">
          <source>TLS/SSL termination. The &lt;a href=&quot;ngx_stream_ssl_module&quot;&gt;ngx_stream_ssl_module&lt;/a&gt; module is invoked at this phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9428d48df6745e78a2dfdc9898890d9a37b1d1d" translate="yes" xml:space="preserve">
          <source>Template literals: multiline strings, expression interpolation, nesting templates (&lt;a href=&quot;changes#njs0.3.2&quot;&gt;0.3.2&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa68e4533f4ca3f81daa897ce2982e4e52ffecb" translate="yes" xml:space="preserve">
          <source>Terminate the array with the special value &lt;code&gt;ngx_null_command&lt;/code&gt;. The &lt;code&gt;name&lt;/code&gt; is the name of a directive as it appears in the configuration file, for example &quot;worker_processes&quot; or &quot;listen&quot;. The &lt;code&gt;type&lt;/code&gt; is a bit-field of flags that specify the number of arguments the directive takes, its type, and the context in which it appears. The flags are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb041c1ffe85440005ac6888a9ff6ce78f96ad27" translate="yes" xml:space="preserve">
          <source>The $r Request Object Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729e6afa7f87ed3dad682fa813db42f1f4635ac4" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;&lt;a href=&quot;https://tools.ietf.org/html/rfc5861#section-3&quot;&gt;stale-while-revalidate&lt;/a&gt;&amp;rdquo; extension of the &amp;ldquo;Cache-Control&amp;rdquo; header field permits using a stale cached response if it is currently being updated.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
