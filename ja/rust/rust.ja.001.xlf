<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="">
    <body>
      <group id="">
        <trans-unit id="ce6f09bc5b885dd3b6b5f82696df823fdbcca76d" translate="yes" xml:space="preserve">
          <source>&quot;A &amp;cup; B&quot; denotes set union, &quot;A &amp;cap; B&quot; denotes set intersection, and &quot;A \ B&quot; denotes set difference (i.e. all elements of A that are not present in B).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b429d3b5a3098a82a488e94140c6c2b7e6e5980" translate="yes" xml:space="preserve">
          <source>&quot;Not a Number&quot;, often obtained by dividing by zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc515cf5dce177ad351e9990dfe6a4382dd28bdf" translate="yes" xml:space="preserve">
          <source>&quot;SEP&quot; will range over separator tokens, &quot;OP&quot; over the repetition operators &lt;code&gt;\*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, and &lt;code&gt;?&lt;/code&gt;, &quot;OPEN&quot;/&quot;CLOSE&quot; over matching token pairs surrounding a delimited sequence (e.g. &lt;code&gt;[&lt;/code&gt; and &lt;code&gt;]&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582683685d6d2aba5f660a07539bb5a7e6759a67" translate="yes" xml:space="preserve">
          <source>#[repr(C)] Enums</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2bfd884238d821e4fa980c8d399e19588004e0e" translate="yes" xml:space="preserve">
          <source>#[repr(C)] Structs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066501b8eb13890c9fc5f61d88950220297ec891" translate="yes" xml:space="preserve">
          <source>#[repr(C)] Unions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f9e20086591db5aa9f5f6afae17e7e1070a89f" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2010 The Rust Project Developers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8a40996725864bf3a02d1fb45b63d5ea56d28d" translate="yes" xml:space="preserve">
          <source>&amp;epsilon;&amp;lambda;&amp;lambda;&amp;eta;&amp;nu;&amp;iota;&amp;kappa;ή</source>
          <target state="translated">&amp;epsilon;&amp;lambda;&amp;lambda;&amp;eta;&amp;nu;&amp;iota;&amp;kappa;ή</target>
        </trans-unit>
        <trans-unit id="621f400b221994f5ee4b45b6ab30aaa80d9029ac" translate="yes" xml:space="preserve">
          <source>&amp;hellip; and eventually deprecate &lt;code&gt;Infallible&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3da19d2b3afc3b9d0654dbfd6cd595251b7d77" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;And the rest&amp;rdquo; pattern binding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c64b75ef6debfd84bff7870190f61931298f72" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Ignored&amp;rdquo; pattern binding; also used to make integer literals readable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844702d5cdfb0ffd10a42f3ce9738d309a2eabef" translate="yes" xml:space="preserve">
          <source>&amp;mdash; Nicholas Matsakis and Aaron Turon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01908d7e8784859bffeb538eb8bdaa3c822f3b2" translate="yes" xml:space="preserve">
          <source>&amp;pi;/2</source>
          <target state="translated">&amp;pi;/2</target>
        </trans-unit>
        <trans-unit id="6897aa9350bbdf94806b44c5d022c168149ae880" translate="yes" xml:space="preserve">
          <source>&amp;pi;/3</source>
          <target state="translated">&amp;pi;/3</target>
        </trans-unit>
        <trans-unit id="2739bea9b66c80efa5f189e2ee2cdef954e8f8ee" translate="yes" xml:space="preserve">
          <source>&amp;pi;/4</source>
          <target state="translated">&amp;pi;/4</target>
        </trans-unit>
        <trans-unit id="05c6bf287d9e0f356f4ae81033dd027d640cfe45" translate="yes" xml:space="preserve">
          <source>&amp;pi;/6</source>
          <target state="translated">&amp;pi;/6</target>
        </trans-unit>
        <trans-unit id="17211aa13143899e91821be5b9f051fce69a2c13" translate="yes" xml:space="preserve">
          <source>&amp;pi;/8</source>
          <target state="translated">&amp;pi;/8</target>
        </trans-unit>
        <trans-unit id="6ae6777a48af3d95074d07b84703fcd1d1cbecea" translate="yes" xml:space="preserve">
          <source>'.5', or, equivalently, '0.5'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ed7ad1f6d0826027e3b183b4a369f0aa794f8d" translate="yes" xml:space="preserve">
          <source>'2.5E-10'</source>
          <target state="translated">'2.5E-10'</target>
        </trans-unit>
        <trans-unit id="2f827657cb06cbb46469992c9ec17ea73f1d1e85" translate="yes" xml:space="preserve">
          <source>'2.5E10', or equivalently, '2.5e10'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c506ac226ee5c4a710fb412fa46192434c25958" translate="yes" xml:space="preserve">
          <source>'Alphanumeric'-ness is defined in terms of the Unicode General Categories 'Nd', 'Nl', 'No' and the Derived Core Property 'Alphabetic'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e716cd19650e9f3781839f4be2efc937dba1acf5" translate="yes" xml:space="preserve">
          <source>'Control code point' is defined in terms of the Unicode General Category &lt;code&gt;Cc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a03f8c1d7c07fe8bea70c4bc6279fbb3f899ef3" translate="yes" xml:space="preserve">
          <source>'Digit' is defined to be only the following characters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b334afd8293ff1483d421d2f0b6d02565705bd49" translate="yes" xml:space="preserve">
          <source>'Dotless': I / ı, sometimes written &amp;iuml;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69248ef1ccbe5c0547e5b6640d39d9cdd954653" translate="yes" xml:space="preserve">
          <source>'Dotted': İ / i</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d56a53beae1f21785dc55058264cd2873e2b08" translate="yes" xml:space="preserve">
          <source>'Greater than or equal to' comparison for two &lt;code&gt;Arc&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2e526f82c4fc1a3bc5b582826eaa9d340db3c1" translate="yes" xml:space="preserve">
          <source>'Greater than or equal to' comparison for two &lt;code&gt;Rc&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb1a966ebbc7ee0e87e0c36425365f93c6166348" translate="yes" xml:space="preserve">
          <source>'Length' is also sometimes called 'arity' here; each tuple of a different length is a different, distinct type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8717a54e8f9ae85fffbd683678d4389c3631be" translate="yes" xml:space="preserve">
          <source>'Less than or equal to' comparison for two &lt;code&gt;Arc&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e61305ef5cbeebb78d95ba1597b0d6e3928c17" translate="yes" xml:space="preserve">
          <source>'Less than or equal to' comparison for two &lt;code&gt;Rc&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b145cf91bddf5558cd0e02a7a608fac939e7a9" translate="yes" xml:space="preserve">
          <source>'Lowercase' is defined according to the terms of the Unicode Derived Core Property &lt;code&gt;Lowercase&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f07a8ae22c05905e64c664749ef9d844b2c478b" translate="yes" xml:space="preserve">
          <source>'Numeric'-ness is defined in terms of the Unicode General Categories 'Nd', 'Nl', 'No'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8917a77ee873d43d34271830277229b9614f112" translate="yes" xml:space="preserve">
          <source>'Uppercase' is defined according to the terms of the Unicode Derived Core Property &lt;code&gt;Uppercase&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5043ac6e54532dd21eae83df1259bdd5b0783f9b" translate="yes" xml:space="preserve">
          <source>'Whitespace' is defined according to the terms of the Unicode Derived Core Property &lt;code&gt;White_Space&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce74ce2f230aea7adb591716fcd8410b31945d1f" translate="yes" xml:space="preserve">
          <source>'Whitespace' is defined according to the terms of the Unicode Derived Core Property &lt;code&gt;White_Space&lt;/code&gt;. If you only want to split on ASCII whitespace instead, use &lt;a href=&quot;#method.split_ascii_whitespace&quot;&gt;&lt;code&gt;split_ascii_whitespace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88af8fca59d59cbb3124c344d25cd8903791fd67" translate="yes" xml:space="preserve">
          <source>'XID_Continue' is a Unicode Derived Property specified in &lt;a href=&quot;http://unicode.org/reports/tr31/#NFKC_Modifications&quot;&gt;UAX #31&lt;/a&gt;, mostly similar to 'ID_Continue' but modified for closure under NFKx.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f2958214649c15c5f49d2112bf29fd6243fbf0e" translate="yes" xml:space="preserve">
          <source>'XID_Start' is a Unicode Derived Property specified in &lt;a href=&quot;http://unicode.org/reports/tr31/#NFKC_Modifications&quot;&gt;UAX #31&lt;/a&gt;, mostly similar to &lt;code&gt;ID_Start&lt;/code&gt; but modified for closure under &lt;code&gt;NFKx&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47902c1a4e55b8970667a8ee16c891b4b0d89557" translate="yes" xml:space="preserve">
          <source>'Zips up' two iterators into a single iterator of pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e76446a8d2fb03714c4280d5d0ba8d55aad138" translate="yes" xml:space="preserve">
          <source>'Zips up' two iterators into a single iterator of pairs. &lt;a href=&quot;../../../iter/trait.iterator#method.zip&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60957e9d9599a5c5baba0892a247e619a66788f" translate="yes" xml:space="preserve">
          <source>'Zips up' two iterators into a single iterator of pairs. &lt;a href=&quot;../../iter/trait.iterator#method.zip&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6c6749c51fc52bd64eb74a21d19db6c79c5164" translate="yes" xml:space="preserve">
          <source>'Zips up' two iterators into a single iterator of pairs. &lt;a href=&quot;../iter/trait.iterator#method.zip&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09304631d23d5162e2335d1bc0c8e020572e3742" translate="yes" xml:space="preserve">
          <source>'Zips up' two iterators into a single iterator of pairs. &lt;a href=&quot;iter/trait.iterator#method.zip&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026f86910cc9e2f28e0a1107dd6120600b6d3453" translate="yes" xml:space="preserve">
          <source>'Zips up' two iterators into a single iterator of pairs. &lt;a href=&quot;trait.iterator#method.zip&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9c4d755237a4ff5155dfcac2eb130ff4726b72" translate="yes" xml:space="preserve">
          <source>'inf', '-inf', 'NaN'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ed3a797da3c48c309a4ef792147f3c56cfec40" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>
        </trans-unit>
        <trans-unit id="4b88c8d0cce2e19b57b798a26dfd96e2d68f16cd" translate="yes" xml:space="preserve">
          <source>( ( &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; | &lt;code&gt;_&lt;/code&gt; ) &lt;code&gt;:&lt;/code&gt; )&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc44c6b16970e2ea8b6be7d616d2f134c07fc31" translate="yes" xml:space="preserve">
          <source>( )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4de3726472078b0feac2e475548c3a77f4ec153" translate="yes" xml:space="preserve">
          <source>( &lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt; (&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt; )&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375c6900eb4921014e8f8852c8baef2dbf6174fa" translate="yes" xml:space="preserve">
          <source>( &lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;,&lt;/code&gt; )&lt;sup&gt;+&lt;/sup&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73b5f8418483fcc7904636141f999f287f38a1d" translate="yes" xml:space="preserve">
          <source>( &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; | &lt;code&gt;_&lt;/code&gt; ) &lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481a57ab2f2ebecbc52bec4b88a95ba0ef4669e8" translate="yes" xml:space="preserve">
          <source>( &lt;a href=&quot;../patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;&lt;code&gt;:&lt;/code&gt; )&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00cbd4abd2f11457879eba4d9912e02dfe025a8b" translate="yes" xml:space="preserve">
          <source>( &lt;code&gt;||&lt;/code&gt; | &lt;code&gt;|&lt;/code&gt;&lt;em&gt;ClosureParameters&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;|&lt;/code&gt; )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e81408e8ab7b0527416f56000a805f81363b69" translate="yes" xml:space="preserve">
          <source>( &lt;em&gt;ExternalStaticItem&lt;/em&gt; | &lt;em&gt;ExternalFunctionItem&lt;/em&gt; )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5629d10e53c072e4fab75221b3fc18879184eb" translate="yes" xml:space="preserve">
          <source>( &lt;em&gt;Lifetime&lt;/em&gt;&lt;code&gt;+&lt;/code&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;Lifetime&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186bfe843f7f2ce8184c47fafa1ebf784e1d6068" translate="yes" xml:space="preserve">
          <source>( &lt;em&gt;LifetimeParam&lt;/em&gt;&lt;code&gt;,&lt;/code&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;LifetimeParam&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f56003eaf71e3bb5845881bf44e169604d5813" translate="yes" xml:space="preserve">
          <source>( &lt;em&gt;MatchArm&lt;/em&gt;&lt;code&gt;=&amp;gt;&lt;/code&gt; ( &lt;a href=&quot;block-expr#block-expressions&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt; | &lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;,&lt;/code&gt; ) )&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539221e6ba2ddb812fe53d859f6a047ecfdd7d27" translate="yes" xml:space="preserve">
          <source>( &lt;em&gt;MaybeNamedParam&lt;/em&gt;&lt;code&gt;,&lt;/code&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;MaybeNamedParam&lt;/em&gt;&lt;code&gt;,&lt;/code&gt;&lt;code&gt;...&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4722b4a6ecd882859065aede37654547988fd63" translate="yes" xml:space="preserve">
          <source>( &lt;em&gt;NamedFunctionParam&lt;/em&gt;&lt;code&gt;,&lt;/code&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;NamedFunctionParam&lt;/em&gt;&lt;code&gt;,&lt;/code&gt;&lt;code&gt;...&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af69e445c5baae590e1456b910bda5e818a9462a" translate="yes" xml:space="preserve">
          <source>( &lt;em&gt;TypeParam&lt;/em&gt;&lt;code&gt;,&lt;/code&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;TypeParam&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141c4cbbf31b052ae73789b6597c8e4d0ebd6444" translate="yes" xml:space="preserve">
          <source>( DEC_LITERAL | BIN_LITERAL | OCT_LITERAL | HEX_LITERAL ) INTEGER_SUFFIX&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87df960221219c6115e0632266f4130135d7e6dd" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt; | &lt;code&gt;-&amp;gt;&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeNoBounds&lt;/em&gt;&lt;/a&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5ad5b51bfde1ae83b314abb2dc4c1118c00471" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;../paths#simple-paths&quot;&gt;&lt;em&gt;SimplePath&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;::&lt;/code&gt;)&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;*&lt;/code&gt;</source>
          <target state="translated">(&lt;a href=&quot;../paths#simple-paths&quot;&gt;&lt;em&gt;SimplePath&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;::&lt;/code&gt;)&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ce4453aa0ed2e16c6d69521a0f2a385373e6b541" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;&amp;amp;&lt;/code&gt; | &lt;code&gt;&amp;amp;&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;Lifetime&lt;/em&gt;&lt;/a&gt;)&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;self&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208e5aab1ecf65ab3100cfabc5b3e39de0ab5fac" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;&amp;amp;&lt;/code&gt;|&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;) &lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ae25643111ebb98ab7cd0794cad1a773abc0d1" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;&amp;amp;&lt;/code&gt;|&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;) &lt;code&gt;mut&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;em&gt;Pattern&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6241b35cca6a79fd5f029e039609c4d623bc8c0d" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;,&lt;/code&gt;&lt;em&gt;Parameter&lt;/em&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">(&lt;code&gt;,&lt;/code&gt;&lt;em&gt;Parameter&lt;/em&gt;)&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ccd12915704e4cb45a8ba62ed446df12de74505c" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;e&lt;/code&gt;|&lt;code&gt;E&lt;/code&gt;) (&lt;code&gt;+&lt;/code&gt;|&lt;code&gt;-&lt;/code&gt;)? (DEC_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt; DEC_DIGIT (DEC_DIGIT|&lt;code&gt;_&lt;/code&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c232fe1076e02022a2275f230ffba9273a6d64aa" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;else&lt;/code&gt; ( &lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt; | &lt;em&gt;IfExpression&lt;/em&gt; | &lt;em&gt;IfLetExpression&lt;/em&gt; ) )&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1efa3339bf7e3f27a42cf14f9cf8764eebf3eab" translate="yes" xml:space="preserve">
          <source>(All implementors of &lt;code&gt;usable_size&lt;/code&gt; must ensure that &lt;code&gt;l &amp;lt;= k.size() &amp;lt;= u&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d1b14bee19814d02e2b283521c9855519884c8" translate="yes" xml:space="preserve">
          <source>(Extension subtraits might provide more specific bounds on behavior, e.g., guarantee a sentinel address or a null pointer in response to a zero-size allocation request.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a778fe829f46495c32aea3b07b52fc687f406dc" translate="yes" xml:space="preserve">
          <source>(Note however that layouts are &lt;em&gt;not&lt;/em&gt; required to have positive size, even though many allocators require that all memory requests have positive size. A caller to the &lt;code&gt;Alloc::alloc&lt;/code&gt; method must either ensure that conditions like this are met, or use specific allocators with looser requirements.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45dbef9e5646b64fccebfeb011b9b9dde080c262" translate="yes" xml:space="preserve">
          <source>(Note that &lt;code&gt;&amp;amp;self&lt;/code&gt; and &lt;code&gt;&amp;amp;mut self&lt;/code&gt; are okay, it's additional &lt;code&gt;Self&lt;/code&gt; types which cause this problem.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08bf74acff2b78f9845a5a4e997df1ca4ab7abb" translate="yes" xml:space="preserve">
          <source>(Note that Rust's parser ensures that delimited sequences always occur with proper nesting of token tree structure and correct matching of open- and close-delimiters.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a55ffdca3d73188e1b265f488d3f7a5b15893dcc" translate="yes" xml:space="preserve">
          <source>(Note: this covers the case where M starts with a delimited token-tree sequence, &lt;code&gt;M = OPEN tt ... CLOSE ...&lt;/code&gt;, in which case &lt;code&gt;t = OPEN&lt;/code&gt; and thus FIRST(M) = { &lt;code&gt;OPEN&lt;/code&gt; }.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43665a0af2fb4635278ee3e152da7a19a33cdc41" translate="yes" xml:space="preserve">
          <source>(Note: this critically relies on the property that no simple NT matches the empty fragment.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689e5cd4625efebe2f07873b914abc282adbb4c1" translate="yes" xml:space="preserve">
          <source>(Notice that the rules around references to uninitialized data are not finalized yet, but until they are, it is advisable to avoid them.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8672988b7ee48fb788d701bdf961052de2024000" translate="yes" xml:space="preserve">
          <source>(Notice that the rules around uninitialized integers are not finalized yet, but until they are, it is advisable to avoid them.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e3911bf3338d35aa28d088d0a461fdbd049203" translate="yes" xml:space="preserve">
          <source>(See also the &lt;a href=&quot;../fs/fn.read&quot;&gt;&lt;code&gt;std::fs::read&lt;/code&gt;&lt;/a&gt; convenience function for reading from a file.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e41eeb7a61e76f74e3bd0073af76983dfb0bbe9" translate="yes" xml:space="preserve">
          <source>(See also the &lt;a href=&quot;../fs/fn.read_to_string&quot;&gt;&lt;code&gt;std::fs::read_to_string&lt;/code&gt;&lt;/a&gt; convenience function for reading from a file.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7e89485417c6377e18579703eb7eebf7625d75" translate="yes" xml:space="preserve">
          <source>(To review one's understanding of the above informal descriptions, the reader at this point may want to jump ahead to the &lt;a href=&quot;macro-ambiguity#examples-of-first-and-last&quot;&gt;examples of FIRST/LAST&lt;/a&gt; before reading their formal definitions.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7064f0b80f61dbc65915311032d27baa569ae2a" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>
        </trans-unit>
        <trans-unit id="1076e1fd8081a59bc9e807f55376bc1934be74e1" translate="yes" xml:space="preserve">
          <source>)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;&quot;&lt;/code&gt;</source>
          <target state="translated">)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="208d9b0cbab6ce45b7ec9540f1f37542604286d1" translate="yes" xml:space="preserve">
          <source>* Integer division rounds towards zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3552a9f82a5ba6fc24f7f2b5b0d2dbd3bad95a" translate="yes" xml:space="preserve">
          <source>* Only for signed integer types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5656a7869292a1599b9b26f241491a77253572d1" translate="yes" xml:space="preserve">
          <source>* The number of &lt;code&gt;#&lt;/code&gt;s on each side of the same literal must be equivalent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c9c4ad8c6025429bd782dbf726baed120a6594" translate="yes" xml:space="preserve">
          <source>* This order was stabilized in &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/1857-stabilize-drop-order.md&quot;&gt;RFC 1857&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c649e8029e87b6fd749ae3cc4955b82d00a6bc" translate="yes" xml:space="preserve">
          <source>* or &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;V&lt;/code&gt; are compatible unsized types, e.g., both slices, both the same trait object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1060dfef4f1604cffa14164089fb1b4255cdf9bd" translate="yes" xml:space="preserve">
          <source>** Arithmetic right shift on signed integer types, logical right shift on unsigned integer types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3fd7c78fab21fa3f388c2589de63f7a307c15e3" translate="yes" xml:space="preserve">
          <source>** only for closures that do not capture (close over) any local variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d8f64321008e3eb31112f84dc7e0c9b7647b82" translate="yes" xml:space="preserve">
          <source>, operating over the disjunction of all such string table entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dafdde1be0fcadafbf4fd6e8a03f2c03ef2c9120" translate="yes" xml:space="preserve">
          <source>, trait objects are used behind some type of pointer; for example &lt;code&gt;&amp;amp;dyn SomeTrait&lt;/code&gt; or &lt;code&gt;Box&amp;lt;dyn SomeTrait&amp;gt;&lt;/code&gt;. Each instance of a pointer to a trait object includes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc15c8aae3e4124dd409035f32ea2fd6835efc9" translate="yes" xml:space="preserve">
          <source>-</source>
          <target state="translated">-</target>
        </trans-unit>
        <trans-unit id="80a388c32c165a0a2bf1fb2eb3b76ec11e8445be" translate="yes" xml:space="preserve">
          <source>-(2&lt;sup&gt;127&lt;/sup&gt;)</source>
          <target state="translated">-(2&lt;sup&gt;127&lt;/sup&gt;)</target>
        </trans-unit>
        <trans-unit id="a1c6d4217f627b47ada98f8b0e28c91787545c15" translate="yes" xml:space="preserve">
          <source>-(2&lt;sup&gt;15&lt;/sup&gt;)</source>
          <target state="translated">-(2&lt;sup&gt;15&lt;/sup&gt;)</target>
        </trans-unit>
        <trans-unit id="22077b7302f969854d501e26c0ae65452b4d47ef" translate="yes" xml:space="preserve">
          <source>-(2&lt;sup&gt;31&lt;/sup&gt;)</source>
          <target state="translated">-(2&lt;sup&gt;31&lt;/sup&gt;)</target>
        </trans-unit>
        <trans-unit id="28896e2d4330c1b81bf932db6f5c810ef87e580b" translate="yes" xml:space="preserve">
          <source>-(2&lt;sup&gt;63&lt;/sup&gt;)</source>
          <target state="translated">-(2&lt;sup&gt;63&lt;/sup&gt;)</target>
        </trans-unit>
        <trans-unit id="f3b72140eedb3c679983dba8dbac85d120f32e59" translate="yes" xml:space="preserve">
          <source>-(2&lt;sup&gt;7&lt;/sup&gt;)</source>
          <target state="translated">-(2&lt;sup&gt;7&lt;/sup&gt;)</target>
        </trans-unit>
        <trans-unit id="69589a805db4746317bf16102d7d14e4baa50384" translate="yes" xml:space="preserve">
          <source>. Such types can only be used in certain cases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e87887810039426ad5cf692420ba87db5a617f" translate="yes" xml:space="preserve">
          <source>. Unlike type parameters &lt;code&gt;Self: ?Sized&lt;/code&gt; by default in trait definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8e421fd06c28cd1ef9eedef52dd42244fc312c" translate="yes" xml:space="preserve">
          <source>...or by using the &lt;a href=&quot;../macro.vec&quot;&gt;&lt;code&gt;vec!&lt;/code&gt;&lt;/a&gt; macro:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e68a65cce98da78e6fa59f7acde8480614e6c25f" translate="yes" xml:space="preserve">
          <source>.dll</source>
          <target state="translated">.dll</target>
        </trans-unit>
        <trans-unit id="b8774efc68a21df684d745230dc30b08e1044040" translate="yes" xml:space="preserve">
          <source>.dylib</source>
          <target state="translated">.dylib</target>
        </trans-unit>
        <trans-unit id="fc4302a8973108f7b86565d5a49182ded2b0bf31" translate="yes" xml:space="preserve">
          <source>.exe</source>
          <target state="translated">.exe</target>
        </trans-unit>
        <trans-unit id="b13b46b76732e66621a6cfcafd13307e31324306" translate="yes" xml:space="preserve">
          <source>.nexe</source>
          <target state="translated">.nexe</target>
        </trans-unit>
        <trans-unit id="f8a78e8b039ab4e74c207edcde1183b70d1ebe8a" translate="yes" xml:space="preserve">
          <source>.pexe</source>
          <target state="translated">.pexe</target>
        </trans-unit>
        <trans-unit id="c17b4000f3f9edf25c74222bf5e8a16e787cee11" translate="yes" xml:space="preserve">
          <source>.so</source>
          <target state="translated">.so</target>
        </trans-unit>
        <trans-unit id="b6589fc6ab0dc82cf12099d1c2d40ab994e8410c" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>
        </trans-unit>
        <trans-unit id="6f1e3375bf89382f300f4be400ecb0b34eec8c6e" translate="yes" xml:space="preserve">
          <source>0 or more of x</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="950907b9fd984d5a2de79a40d89be4ec8e431d8c" translate="yes" xml:space="preserve">
          <source>0 or more*</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356a192b7913b04c54574d18c28d46e6395428ab" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>
        </trans-unit>
        <trans-unit id="a9a318c47669efdbc82f665aea67a6c3f2cad276" translate="yes" xml:space="preserve">
          <source>1 or more of x</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c8cedaa22165d059e69854ee5c7db0ee5cb3b4b" translate="yes" xml:space="preserve">
          <source>1. Coerce a reference (&lt;code&gt;&amp;amp;T&lt;/code&gt;) or mutable reference (&lt;code&gt;&amp;amp;mut T&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3ebd597aa6ddd4ae095da01e4b2309e2192675" translate="yes" xml:space="preserve">
          <source>1. Getting Started</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05243a6485cf4a176741604dc6fff149a44c52e8" translate="yes" xml:space="preserve">
          <source>1. Notation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f901236c62699e8c074293fee97b2acb6542defd" translate="yes" xml:space="preserve">
          <source>1.1. Installation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b142f36cd5ad638a94d57cfd2e1931c57dac34a4" translate="yes" xml:space="preserve">
          <source>1.2. Hello, World!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e70af0b07939b333ce3de520f019c8a6a8ff200" translate="yes" xml:space="preserve">
          <source>1.2.0&lt;span id=&quot;variant.TimedOut&quot;&gt;&lt;code id=&quot;TimedOut.v&quot;&gt;TimedOut&lt;/code&gt;&lt;/span&gt;</source>
          <target state="translated">1.2.0&lt;span id=&quot;variant.TimedOut&quot;&gt;&lt;code id=&quot;TimedOut.v&quot;&gt;TimedOut&lt;/code&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="addb19ddb6802d5d2817a7ba0248a696207c6546" translate="yes" xml:space="preserve">
          <source>1.3. Hello, Cargo!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad0ea3b2a18aa475c675f10c3c95fc683e6da5c" translate="yes" xml:space="preserve">
          <source>1/&amp;pi;</source>
          <target state="translated">1/&amp;pi;</target>
        </trans-unit>
        <trans-unit id="a7ca8a85fda5256c12bcbca0feb38e74e519fa7d" translate="yes" xml:space="preserve">
          <source>1/sqrt(2)</source>
          <target state="translated">1/sqrt(2)</target>
        </trans-unit>
        <trans-unit id="d481c0ce1e8382d3e241492140e791657b43e636" translate="yes" xml:space="preserve">
          <source>10. Generic Types, Traits, and Lifetimes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb14e500993ffdf7747148f3599d736afa6b758" translate="yes" xml:space="preserve">
          <source>10. Type system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc35554ad933962ae6f11b41b0b2bb4d16d7496" translate="yes" xml:space="preserve">
          <source>10.1. Generic Data Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8819d14d23ade987325031b14751ec84050cd0aa" translate="yes" xml:space="preserve">
          <source>10.1. Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe676be0e5cdafb6190d328a8a67ce071230083b" translate="yes" xml:space="preserve">
          <source>10.1.1. Boolean type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7374dba65ee4ebbadd3bd557cfe9c0204a786e7a" translate="yes" xml:space="preserve">
          <source>10.1.10. Union types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f05c30fbb4f58422b9cbdc8492cd131ced2867" translate="yes" xml:space="preserve">
          <source>10.1.11. Function item types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c7e61cbb9a9bdd208aef76547c80a09ce2a1c9b" translate="yes" xml:space="preserve">
          <source>10.1.12. Closure types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee96142ac0b2894ad5b18956ee6545b7d434b095" translate="yes" xml:space="preserve">
          <source>10.1.13. Pointer types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e57e4b2706da4bc23671e9a0e20c997136210b24" translate="yes" xml:space="preserve">
          <source>10.1.14. Function pointer types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee246e9360b0bf3c9561334d6442a807a3f5eab0" translate="yes" xml:space="preserve">
          <source>10.1.15. Trait object types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03391900dadae859eec80901101ff3724e91a88d" translate="yes" xml:space="preserve">
          <source>10.1.16. Impl trait type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e713a1c5aa09314653a022ce570066e29dec9613" translate="yes" xml:space="preserve">
          <source>10.1.17. Type parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568daf6780f2f30bf929ef54c53832eb5de2e412" translate="yes" xml:space="preserve">
          <source>10.1.18. Inferred type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a650de97e1cd161f3771545a322bd48622ba39e4" translate="yes" xml:space="preserve">
          <source>10.1.2. Numeric types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69975563e329fd8fef354c8729dd9d4a896bf700" translate="yes" xml:space="preserve">
          <source>10.1.3. Textual types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d5a7376f784aab9608de5aa72d5f38ec014550" translate="yes" xml:space="preserve">
          <source>10.1.4. Never type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a0c3a920c04006686cc703bf8e9b360ca15014" translate="yes" xml:space="preserve">
          <source>10.1.5. Tuple types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc267a490496d090d62b06f0a586cc06988cfcd" translate="yes" xml:space="preserve">
          <source>10.1.6. Array types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af705593b749a31df41e3b941ba6c3ef61be58f2" translate="yes" xml:space="preserve">
          <source>10.1.7. Slice types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc672d9e034422ba18138753862588c3b1b8fe6" translate="yes" xml:space="preserve">
          <source>10.1.8. Struct types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e883a51f3e7a1afd00409e240bc0465f94a8a836" translate="yes" xml:space="preserve">
          <source>10.1.9. Enumerated types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57de89c4f1f5aba66ccc98aa406d7ff88bb3ce71" translate="yes" xml:space="preserve">
          <source>10.2. Dynamically Sized Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5c949e01c00fbec96e136c29ef41d5442c25ff" translate="yes" xml:space="preserve">
          <source>10.2. Traits: Defining Shared Behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b38a37254c8d081d6d24cc28a91fbfdd8b72e2e" translate="yes" xml:space="preserve">
          <source>10.3. Type layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88d7bab4a8ddb4ee3cf3d07dc7ba9386a65efa4" translate="yes" xml:space="preserve">
          <source>10.3. Validating References with Lifetimes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750c248fa0ecf2bbde381df090ced07778f6d69b" translate="yes" xml:space="preserve">
          <source>10.4. Interior mutability</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dccd663d39881b1b1bfb599ddf9f6db15df60a7" translate="yes" xml:space="preserve">
          <source>10.5. Subtyping and Variance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b69958d751c1a412c7da18c0f7f5fa61b35a637" translate="yes" xml:space="preserve">
          <source>10.6. Trait and lifetime bounds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f896066ab3311b3f6a9084c9252ce19555be2d" translate="yes" xml:space="preserve">
          <source>10.7. Type coercions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c60b95732b203dbf0f6664e7d293bef8ba927de" translate="yes" xml:space="preserve">
          <source>10.8. Destructors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ad7158a7f11eaac2240dd7bb2cff02dec51a1f" translate="yes" xml:space="preserve">
          <source>10.9. Lifetime elision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10aff6de4424ad74feb94a9a13fbd1c334bb99d6" translate="yes" xml:space="preserve">
          <source>11. Special types and traits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5fe55358867501c657c7ed8cdd080720f4cabd" translate="yes" xml:space="preserve">
          <source>11. Writing Automated Tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5714d62209fc96f1089d61470957432649e3b6" translate="yes" xml:space="preserve">
          <source>11.1. How to Write Tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab1ffab0b621ab91954ff9e38576bf7806d7cb1" translate="yes" xml:space="preserve">
          <source>11.2. Controlling How Tests Are Run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d23031f3565b505b424d2dec270f6691eb172bd" translate="yes" xml:space="preserve">
          <source>11.3. Test Organization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b47eb4dbb41c89d1c99759691c23f0f3da85cc" translate="yes" xml:space="preserve">
          <source>12. An I/O Project: Building a Command Line Program</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bdc1cb3bba8e7d34d359540d21965a7b3492935" translate="yes" xml:space="preserve">
          <source>12. Memory model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094426522d77702659d39d4cf66829870a5d89ac" translate="yes" xml:space="preserve">
          <source>12.1. Accepting Command Line Arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae07e2145e64e2c23f43f34b0183ceeccc3b9a05" translate="yes" xml:space="preserve">
          <source>12.1. Memory allocation and lifetime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6c4b5ae8d80bae808979d84adc8ac9548e949b" translate="yes" xml:space="preserve">
          <source>12.2. Memory ownership</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7972b98523450fd976b16243fa2e8811ade158" translate="yes" xml:space="preserve">
          <source>12.2. Reading a File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c330d5bcb9b99367fd6b96f55ae38bee093c1f" translate="yes" xml:space="preserve">
          <source>12.3. Refactoring to Improve Modularity and Error Handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50b43f460601b315a861bce2ab3302b6296a1a7" translate="yes" xml:space="preserve">
          <source>12.3. Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0642c668d617969f8f4e7f701389cdfaefa27d72" translate="yes" xml:space="preserve">
          <source>12.4. Developing the Library’s Functionality with Test Driven Development</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59066278a0864b49b250a79dd3f85eb3df8b0b17" translate="yes" xml:space="preserve">
          <source>12.5. Working with Environment Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc2652ef6b624ead519353ba86b1564b7ecb14d" translate="yes" xml:space="preserve">
          <source>12.6. Writing Error Messages to Standard Error Instead of Standard Output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313564d9e7152d12da4f017d6361e1db25c8c26d" translate="yes" xml:space="preserve">
          <source>128-bit</source>
          <target state="translated">128-bit</target>
        </trans-unit>
        <trans-unit id="c55506345694947b2244e956db160d2d931fd2d5" translate="yes" xml:space="preserve">
          <source>13. Functional Language Features: Iterators and Closures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ab1d571bde6432afac1cd1867ea5d5103b04a3" translate="yes" xml:space="preserve">
          <source>13. Linkage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fff2907b86c531d67c63475d42edae8a2e3b2cc" translate="yes" xml:space="preserve">
          <source>13.1. Closures: Anonymous Functions that Can Capture Their Environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ddc7ffd60048985a3dac92c67e5d1de619b0e6" translate="yes" xml:space="preserve">
          <source>13.2. Processing a Series of Items with Iterators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7457360738ebfb21d19d9da69c599c77f9f13a" translate="yes" xml:space="preserve">
          <source>13.3. Improving Our I/O Project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ce37e34bc6dff72a231afba041c99fe28d116b" translate="yes" xml:space="preserve">
          <source>13.4. Comparing Performance: Loops vs. Iterators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c600299d53d44d799ca9e10a882795997c115f5d" translate="yes" xml:space="preserve">
          <source>14. More about Cargo and Crates.io</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e6dfeaf821704c66cb44987f7db3784bcccb85d" translate="yes" xml:space="preserve">
          <source>14. Unsafety</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e606c1967dd813eb97998ee43f76c88ee4a4fcf" translate="yes" xml:space="preserve">
          <source>14.1. Customizing Builds with Release Profiles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a1d5eeed4a9ae5d2725daa4e6dcdf4e27c0064" translate="yes" xml:space="preserve">
          <source>14.1. Unsafe functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c17672dc3cb8e139ab535958c505eb91328eefe" translate="yes" xml:space="preserve">
          <source>14.2. Publishing a Crate to Crates.io</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6428494a960ea9141826a8a2f66eecf27219dd9b" translate="yes" xml:space="preserve">
          <source>14.2. Unsafe blocks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcfd729eead0d4b78336e60ea95d0b352e7a885f" translate="yes" xml:space="preserve">
          <source>14.3. Behavior considered undefined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3eaa1d1bb9a5ae0078682eea4c8841241ab324" translate="yes" xml:space="preserve">
          <source>14.3. Cargo Workspaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b826c6487b32a1b05710d6c667c3fa0859649f13" translate="yes" xml:space="preserve">
          <source>14.4. Behavior not considered unsafe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79c65b9e518e44374c3f07ec68cbefc00a94ac4" translate="yes" xml:space="preserve">
          <source>14.4. Installing Binaries from Crates.io with cargo install</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c429936cec46e4cdf56b017c378c14020758c19" translate="yes" xml:space="preserve">
          <source>14.5. Extending Cargo with Custom Commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ddfb39a929a207db47bc2535123660758ce2458" translate="yes" xml:space="preserve">
          <source>15. Constant Evaluation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df5c745fc181214af7ce897d9bf73d0ce861631" translate="yes" xml:space="preserve">
          <source>15. Smart Pointers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b91c1767365e435b96f3f1b5750a41e6eef1cb0" translate="yes" xml:space="preserve">
          <source>15.1. Using Box to Point to Data on the Heap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1669222cef69c112cd80a8206b48b3a2ebd4ba" translate="yes" xml:space="preserve">
          <source>15.2. Treating Smart Pointers Like Regular References with the Deref Trait</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="addbae5bd9e9b016fa2c57306b9851ce0fa94abd" translate="yes" xml:space="preserve">
          <source>15.3. Running Code on Cleanup with the Drop Trait</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7a6ffdc4d5eff6face6f466971d08fee632bcd" translate="yes" xml:space="preserve">
          <source>15.4. Rc, the Reference Counted Smart Pointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6fb9c319b5398414ae17893bd9b40ceff9a283" translate="yes" xml:space="preserve">
          <source>15.5. RefCell and the Interior Mutability Pattern</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84588abb5b7394ab7a40207d181540190867446b" translate="yes" xml:space="preserve">
          <source>15.6. Reference Cycles Can Leak Memory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1574bddb75c78a6fd2251d61e2993b5146201319" translate="yes" xml:space="preserve">
          <source>16</source>
          <target state="translated">16</target>
        </trans-unit>
        <trans-unit id="dc40838b49e55ae302ba74ac4208411ea11f01be" translate="yes" xml:space="preserve">
          <source>16-bit</source>
          <target state="translated">16-bit</target>
        </trans-unit>
        <trans-unit id="1db94f16a12c8909ddb04ccf728220036c9c7ab4" translate="yes" xml:space="preserve">
          <source>16. Application Binary Interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dbd9bb6e775060a91d81d28581f2481a9e7117f" translate="yes" xml:space="preserve">
          <source>16. Fearless Concurrency</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c008c99596532199ef1eb9886d102fa4518bda74" translate="yes" xml:space="preserve">
          <source>16.1. Using Threads to Run Code Simultaneously</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de34d76871c4610f2bbac9270804c9f5488d25ef" translate="yes" xml:space="preserve">
          <source>16.2. Using Message Passing to Transfer Data Between Threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661e9e9ada25df977a90a6607e96a2391137cf00" translate="yes" xml:space="preserve">
          <source>16.3. Shared-State Concurrency</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344ddb72e4a712dde682a643352af56d42bca483" translate="yes" xml:space="preserve">
          <source>16.4. Extensible Concurrency with the Sync and Send Traits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba30942d91832641d0b13b0b25c1de60ba970cd2" translate="yes" xml:space="preserve">
          <source>17. Object Oriented Programming Features of Rust</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce91fce25077d14f6d6214f1be4ef3b5343db262" translate="yes" xml:space="preserve">
          <source>17. The Rust runtime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c1711d681ba64c91d495e023b608add69e6bf15" translate="yes" xml:space="preserve">
          <source>17.1. Characteristics of Object-Oriented Languages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b1d24b417da8e3113f4a8e82ea14a1bdc80fab" translate="yes" xml:space="preserve">
          <source>17.2. Using Trait Objects That Allow for Values of Different Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8345ffc945e6da8c9273a8923632f35e1de1a5" translate="yes" xml:space="preserve">
          <source>17.3. Implementing an Object-Oriented Design Pattern</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828f530fe0dda58538e7cfe2ccf8f5dee47de612" translate="yes" xml:space="preserve">
          <source>18. Appendices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a934f5df9be3e3d3256c42a246f3834d5b5edb" translate="yes" xml:space="preserve">
          <source>18. Patterns and Matching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04132051cc53b1d1c7b18d67d54be7f25b31674e" translate="yes" xml:space="preserve">
          <source>18.1. All the Places Patterns Can Be Used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26cf9c7c36594564e5f423507efe4c7b2f331b02" translate="yes" xml:space="preserve">
          <source>18.1. Macro Follow-Set Ambiguity Formal Specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b5ee8dc44999477a1062988bc252d75297aff4" translate="yes" xml:space="preserve">
          <source>18.2. Influences</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d52e0e0572ffca100cb7ca5097f54f42b4e97a" translate="yes" xml:space="preserve">
          <source>18.2. Refutability: Whether a Pattern Might Fail to Match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a89d7cd201ef3e40b3e21843b1bf71f30659773" translate="yes" xml:space="preserve">
          <source>18.3. Glossary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c36bb2a4a94f75416127a14ec768be6743b8c0" translate="yes" xml:space="preserve">
          <source>18.3. Pattern Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de47c707f75cf42f33e2f41cd3c58b46c0558579" translate="yes" xml:space="preserve">
          <source>19. Advanced Features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c3886e11af3135f3a37acb38da776523bda4d8" translate="yes" xml:space="preserve">
          <source>19.1. Unsafe Rust</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1b02f9f9fd18ac2d81023358ff0eb6cfa167e8" translate="yes" xml:space="preserve">
          <source>19.2. Advanced Traits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f578f0c1a1fd177a1da1490bde98df68840c8ac6" translate="yes" xml:space="preserve">
          <source>19.3. Advanced Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96cd00c05e003e8dcc1feec0ef9f042236478e86" translate="yes" xml:space="preserve">
          <source>19.4. Advanced Functions and Closures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9e8b802d3de4fce3d7dac0f194d33d58afb324" translate="yes" xml:space="preserve">
          <source>19.5. Macros</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1383a9484a68e433b1bc7c569f8ca6c178dc8b" translate="yes" xml:space="preserve">
          <source>192.0.2.0/24 (TEST-NET-1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af859e951756f450a3db59dc31f110d7c4db3b09" translate="yes" xml:space="preserve">
          <source>198.51.100.0/24 (TEST-NET-2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4b9237bacccdf19c0760cab7aec4a8359010b0" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>
        </trans-unit>
        <trans-unit id="069a75a2422ece7f12bdbaf6f35d34c3893f6eac" translate="yes" xml:space="preserve">
          <source>2. Consume a box (&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb4f8444aa0c0535b47fe7b24ecd93d6620ae48" translate="yes" xml:space="preserve">
          <source>2. Lexical structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010d306c96de4cf415157a2b4c2b52f19b66c710" translate="yes" xml:space="preserve">
          <source>2. Programming a Guessing Game</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f3c874e02b22bebe320365c667dbe74c8ff957" translate="yes" xml:space="preserve">
          <source>2.1. Input format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f867e96b4b781fbdcb5661aecf31ca2f3a5ce5" translate="yes" xml:space="preserve">
          <source>2.2. Keywords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d577dae04ac634b50f7b00dcb6af0ad4fd5e167" translate="yes" xml:space="preserve">
          <source>2.3. Identifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa501b000ef89686920e5da80320d59ccee6f11" translate="yes" xml:space="preserve">
          <source>2.4. Comments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3bbdc85b769495595425971f5745f7d23c292b0" translate="yes" xml:space="preserve">
          <source>2.5. Whitespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c0ca47fd8243c5c8668444496ed110a82a9555" translate="yes" xml:space="preserve">
          <source>2.6. Tokens</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0eaac3e2fc13d015e75ceeed3cf34dbcecf851" translate="yes" xml:space="preserve">
          <source>2.7. Paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68cdb406096a3bc1750f98405a28a40958b80240" translate="yes" xml:space="preserve">
          <source>2/&amp;pi;</source>
          <target state="translated">2/&amp;pi;</target>
        </trans-unit>
        <trans-unit id="81b001f230018941ba0a1052cd8d36bc942c169f" translate="yes" xml:space="preserve">
          <source>2/sqrt(&amp;pi;)</source>
          <target state="translated">2/sqrt(&amp;pi;)</target>
        </trans-unit>
        <trans-unit id="3c49cd108883333ea86875dcd4ea8213782f252e" translate="yes" xml:space="preserve">
          <source>20. Final Project: Building a Multithreaded Web Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3752f1e4c4d6f550802d03c4d6d2142e3d6f7865" translate="yes" xml:space="preserve">
          <source>20.1. Building a Single-Threaded Web Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed027c761dbe0c88b14bfb3d1f487d1ffb80526b" translate="yes" xml:space="preserve">
          <source>20.2. Turning Our Single-Threaded Server into a Multithreaded Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c1135e564e45f98b5e932ac96c73c46a11e68a" translate="yes" xml:space="preserve">
          <source>20.3. Graceful Shutdown and Cleanup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87cd9602e3ee25750cc19610b131e8dc3c13347" translate="yes" xml:space="preserve">
          <source>203.0.113.0/24 (TEST-NET-3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0124d60c07f476cecfdf426324efdd9d2c8a9fda" translate="yes" xml:space="preserve">
          <source>21. Appendix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74fdab93602aab26872bf31d659868982c50acd0" translate="yes" xml:space="preserve">
          <source>21.1. A - Keywords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724a86b013d3564e1be068b730cacbbfffe1ddfb" translate="yes" xml:space="preserve">
          <source>21.2. B - Operators and Symbols</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae89a1b85e9cc3a76e22128c5b3a5a5a413e8c3f" translate="yes" xml:space="preserve">
          <source>21.3. C - Derivable Traits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f494d8e5eb3d0e7eea1f6ed623ca97d1edb437ed" translate="yes" xml:space="preserve">
          <source>21.4. D - Useful Development Tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6714c784c06a4fb40c477c53ef4bb3816dc890b6" translate="yes" xml:space="preserve">
          <source>21.5. E - Editions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610ca1c74f35746fe0198dea4860a0b94aba141e" translate="yes" xml:space="preserve">
          <source>21.6. F - Translations of the Book</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770c668a6cee0f1e8895d4ec367fac27524b68a5" translate="yes" xml:space="preserve">
          <source>21.7. G - How Rust is Made and “Nightly Rust”</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ca8801463f15e8332100e181e09382d1d8ea5c" translate="yes" xml:space="preserve">
          <source>24-bit Unicode character code (up to 6 digits)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9f64ad5a48fe25978166318acb39ebc926e626" translate="yes" xml:space="preserve">
          <source>2&lt;sup&gt;127&lt;/sup&gt;-1</source>
          <target state="translated">2&lt;sup&gt;127&lt;/sup&gt;-1</target>
        </trans-unit>
        <trans-unit id="8e3ecced0ce9c6d0b2e423a00912754e97712008" translate="yes" xml:space="preserve">
          <source>2&lt;sup&gt;128&lt;/sup&gt;-1</source>
          <target state="translated">2&lt;sup&gt;128&lt;/sup&gt;-1</target>
        </trans-unit>
        <trans-unit id="c148f806836bff5f2d289f9ec7429a5e6a6ecca1" translate="yes" xml:space="preserve">
          <source>2&lt;sup&gt;15&lt;/sup&gt;-1</source>
          <target state="translated">2&lt;sup&gt;15&lt;/sup&gt;-1</target>
        </trans-unit>
        <trans-unit id="d2ee278d7be59cecaa67716082d8f6409a096de4" translate="yes" xml:space="preserve">
          <source>2&lt;sup&gt;16&lt;/sup&gt;-1</source>
          <target state="translated">2&lt;sup&gt;16&lt;/sup&gt;-1</target>
        </trans-unit>
        <trans-unit id="95f9304d067f1dd6ff40faef23bc3471953009fd" translate="yes" xml:space="preserve">
          <source>2&lt;sup&gt;31&lt;/sup&gt;-1</source>
          <target state="translated">2&lt;sup&gt;31&lt;/sup&gt;-1</target>
        </trans-unit>
        <trans-unit id="936d69788bc076bf76a1e980c82b8141d5094f9f" translate="yes" xml:space="preserve">
          <source>2&lt;sup&gt;32&lt;/sup&gt;-1</source>
          <target state="translated">2&lt;sup&gt;32&lt;/sup&gt;-1</target>
        </trans-unit>
        <trans-unit id="6e52b309f7d9119d88e4e9385c519534709357ba" translate="yes" xml:space="preserve">
          <source>2&lt;sup&gt;63&lt;/sup&gt;-1</source>
          <target state="translated">2&lt;sup&gt;63&lt;/sup&gt;-1</target>
        </trans-unit>
        <trans-unit id="755ab7b08ac013c8df60a7a3c2d027566e139f30" translate="yes" xml:space="preserve">
          <source>2&lt;sup&gt;64&lt;/sup&gt;-1</source>
          <target state="translated">2&lt;sup&gt;64&lt;/sup&gt;-1</target>
        </trans-unit>
        <trans-unit id="855d799a67523e91b3e1ba8ae9ca6a839a1ac26d" translate="yes" xml:space="preserve">
          <source>2&lt;sup&gt;7&lt;/sup&gt;-1</source>
          <target state="translated">2&lt;sup&gt;7&lt;/sup&gt;-1</target>
        </trans-unit>
        <trans-unit id="5fe25c5960b3720fd597ae655082a684e9960a64" translate="yes" xml:space="preserve">
          <source>2&lt;sup&gt;8&lt;/sup&gt;-1</source>
          <target state="translated">2&lt;sup&gt;8&lt;/sup&gt;-1</target>
        </trans-unit>
        <trans-unit id="5e84bff0be545d365942669c3bc9959db87bdf81" translate="yes" xml:space="preserve">
          <source>3. Common Programming Concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcec7191f7b247140f9371e32eb703e70bfc0359" translate="yes" xml:space="preserve">
          <source>3. Get it from C.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e4e71791f64980c6e53aabac9f73d7089d8414" translate="yes" xml:space="preserve">
          <source>3. Macros</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a871173e3a16b7b019102953236ef5679a2ef535" translate="yes" xml:space="preserve">
          <source>3.1. Macros By Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85c82f5bac33ffadc8bac88e27f9d2311d63d37" translate="yes" xml:space="preserve">
          <source>3.1. Variables and Mutability</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593784b5ec06bc6fafeb1b4a5a630cc5e68a0aa7" translate="yes" xml:space="preserve">
          <source>3.2. Data Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dbebc3cfd10fbd562610d2bd92dc3b247a97aeb" translate="yes" xml:space="preserve">
          <source>3.2. Procedural Macros</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb6f916ba45487ef21caeb2ff8ec25df799e1c0" translate="yes" xml:space="preserve">
          <source>3.3. Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9575a14a3a548f2cd05d69e8219e28def326f1a" translate="yes" xml:space="preserve">
          <source>3.4. Comments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409865ab3b57cc77540e4ee95b9b69abb0ec3ded" translate="yes" xml:space="preserve">
          <source>3.5. Control Flow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ecc30e1fd210714612b4ee15e19cea67330beb" translate="yes" xml:space="preserve">
          <source>32-bit</source>
          <target state="translated">32-bit</target>
        </trans-unit>
        <trans-unit id="1b6453892473a467d07372d45eb05abc2031647a" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>
        </trans-unit>
        <trans-unit id="e258ed553ca8b0743a5e6ce67fcfef52fc0441c5" translate="yes" xml:space="preserve">
          <source>4. Crates and source files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e37940bf00e7a8290b4965e91e02302c7bdc0e6" translate="yes" xml:space="preserve">
          <source>4. Understanding Ownership</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14556ef80950b1a5a2810c79fc73f6766a6a76d7" translate="yes" xml:space="preserve">
          <source>4.1. What is Ownership?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f82cf5ade48aeca6cf82100e00280e47f3211cb" translate="yes" xml:space="preserve">
          <source>4.2. References and Borrowing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1c3ebc1f87c4852c8a100b0d4ab178a366c5a9" translate="yes" xml:space="preserve">
          <source>4.3. The Slice Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b12665a1ae6b590382c3dc0ba2d4e28dc7d186" translate="yes" xml:space="preserve">
          <source>5. Conditional compilation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d34aa32a46d4fabbf31fad56e0382e71e7c09e0" translate="yes" xml:space="preserve">
          <source>5. Using Structs to Structure Related Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8687dfe5f6ac346142f522f222ad3dec065feee5" translate="yes" xml:space="preserve">
          <source>5.1. Defining and Instantiating Structs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c34fe2dd505685cece9009ab2538b9f7312066e" translate="yes" xml:space="preserve">
          <source>5.2. An Example Program Using Structs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a4a9a26d6a77b5f9819dd52b9eb0d16722e0db" translate="yes" xml:space="preserve">
          <source>5.3. Method Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c732a016cb98d72c1ff49e0616d2d3cd331634cf" translate="yes" xml:space="preserve">
          <source>6. Enums and Pattern Matching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b230baf6791cf41dc5d60221d6947aada1b79d" translate="yes" xml:space="preserve">
          <source>6. Items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19fa4e93eb90af4ffa26c9b2c7f8e1b4182204a1" translate="yes" xml:space="preserve">
          <source>6.1. Defining an Enum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656128357ca9c68491f97391169359cacb36e587" translate="yes" xml:space="preserve">
          <source>6.1. Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80fcc467f03e2c2f06cc480c046bdc2f10726ec" translate="yes" xml:space="preserve">
          <source>6.10. Static items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09acc6e301bf73f9e5e579063582ea4a2653950b" translate="yes" xml:space="preserve">
          <source>6.11. Traits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02f204a23b33ca19a3d0c9b479bba713d3b6c1a" translate="yes" xml:space="preserve">
          <source>6.12. Implementations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55edc05d227f9bfd95761e8449b1f7e55d0edd9" translate="yes" xml:space="preserve">
          <source>6.13. External blocks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0622d2fced5f42332c4f6221f71f0e922c71bde" translate="yes" xml:space="preserve">
          <source>6.14. Type and lifetime parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e56d871dd57a3ce1cab8988d50525806dccaca15" translate="yes" xml:space="preserve">
          <source>6.15. Associated Items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0328d1c8b9920f867d0998dcd65e19511b8d377" translate="yes" xml:space="preserve">
          <source>6.16. Visibility and Privacy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b7f1ddb91ac41b9edd190538d032be13d1d80a" translate="yes" xml:space="preserve">
          <source>6.2. Extern crates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ca07b3219094955a0cd050991ba440dde48fc7" translate="yes" xml:space="preserve">
          <source>6.2. The match Control Flow Operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784d63623f9fc4f0c8bf4b054da7c38fd2efe5b9" translate="yes" xml:space="preserve">
          <source>6.3. Concise Control Flow with if let</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c286f8a94294e9853982594f1287ae00268b60c" translate="yes" xml:space="preserve">
          <source>6.3. Use declarations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ef9e9e14d29fa188b734efe35111f48e6496f9" translate="yes" xml:space="preserve">
          <source>6.4. Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4430fc795758046721f1aabc29cbfc93964f8cb3" translate="yes" xml:space="preserve">
          <source>6.5. Type aliases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a3072dc9ec861b96d7850109f51d5be7d3f9ec" translate="yes" xml:space="preserve">
          <source>6.6. Structs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c252fd9800105098a4f6384ffbd4423b7346ce5c" translate="yes" xml:space="preserve">
          <source>6.7. Enumerations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fade87ee4841767b4ab4677c1c62c988153a933" translate="yes" xml:space="preserve">
          <source>6.8. Unions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e085ad5fe4d902ea86a1a2e2cff08ec5224d7252" translate="yes" xml:space="preserve">
          <source>6.9. Constant items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb904d5558d1ecfa10faa3c346ecf286755b851" translate="yes" xml:space="preserve">
          <source>64-bit</source>
          <target state="translated">64-bit</target>
        </trans-unit>
        <trans-unit id="e1f1a6eeb7acc905de333a515c9cb92b3d8e6f5c" translate="yes" xml:space="preserve">
          <source>7-bit character code (exactly 2 digits, up to 0x7F)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f22d72bf5f75a5088a9869f6d470133893e143" translate="yes" xml:space="preserve">
          <source>7. Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14282760a192e13c114a07fa81e74632fccf60bb" translate="yes" xml:space="preserve">
          <source>7. Managing Growing Projects with Packages, Crates, and Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a7a0e995f84adb10b91566a6623d6759210918" translate="yes" xml:space="preserve">
          <source>7.1. Packages and Crates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d2da48a4de6037a6bbd36600ada9037f738212" translate="yes" xml:space="preserve">
          <source>7.1. Testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e929e297d7f8b33da5edc69dbdb332ac28bee098" translate="yes" xml:space="preserve">
          <source>7.2. Defining Modules to Control Scope and Privacy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb756d1a1b2e8a1a112a5819bd61679754779bf" translate="yes" xml:space="preserve">
          <source>7.2. Derive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b498ce890b76dd3ab48d91842f26a66cd948cc71" translate="yes" xml:space="preserve">
          <source>7.3. Diagnostics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f63ce93047ee3188281fda27a5fe575b0bb3dac" translate="yes" xml:space="preserve">
          <source>7.3. Paths for Referring to an Item in the Module Tree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e24aa3c080a0cd51ede466034dd25f1c7e2c86" translate="yes" xml:space="preserve">
          <source>7.4. Bringing Paths Into Scope with the use Keyword</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b3c1f9ea69631d016ea9ed06777a4e3f678a67" translate="yes" xml:space="preserve">
          <source>7.4. Code generation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c011173bc7fa6c43da254518b8d6845c1ad4f50" translate="yes" xml:space="preserve">
          <source>7.5. Limits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53bfb01b731e6f258bf29932bcb89d3f5da85e7a" translate="yes" xml:space="preserve">
          <source>7.5. Separating Modules into Different Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5dbbcea5ce7e2988b8c69bcfdfde8904aabc1f" translate="yes" xml:space="preserve">
          <source>8</source>
          <target state="translated">8</target>
        </trans-unit>
        <trans-unit id="a35efade6038313f986dda1d58dd332042a97837" translate="yes" xml:space="preserve">
          <source>8-bit</source>
          <target state="translated">8-bit</target>
        </trans-unit>
        <trans-unit id="8bc4c929fab71eff674327d8605a153cea806bf3" translate="yes" xml:space="preserve">
          <source>8-bit character code (exactly 2 digits)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0140f35b66e66f6021c0e558d3c8f7b369ac263c" translate="yes" xml:space="preserve">
          <source>8. Common Collections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8749b3f0f03c447e0625630c0969038d29638f" translate="yes" xml:space="preserve">
          <source>8. Statements and expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b2f2ae197b81109862103a849ec08e319ccbf5" translate="yes" xml:space="preserve">
          <source>8.1. Statements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e46ad08576b38b6486343a2e231c957be398e5" translate="yes" xml:space="preserve">
          <source>8.1. Storing Lists of Values with Vectors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc4a86bd8d03a2b196025712597598e3a125aee" translate="yes" xml:space="preserve">
          <source>8.2. Expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72786373d50799b5548a92856795de0fe3f9df01" translate="yes" xml:space="preserve">
          <source>8.2. Storing UTF-8 Encoded Text with Strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2141885f79c682069748d9b0aef1b3c0261f09" translate="yes" xml:space="preserve">
          <source>8.2.1. Literal expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="932481ffe9c1245003df0aa34e29c6f01a20a8a9" translate="yes" xml:space="preserve">
          <source>8.2.10. Call expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244f83da81b89107eedcee4bda8cceb6ec924c95" translate="yes" xml:space="preserve">
          <source>8.2.11. Method call expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ad44234ea3a2848bf8a49c6a3c6f9a2d9f566b" translate="yes" xml:space="preserve">
          <source>8.2.12. Field access expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8bf4e9cddfd69b55bb5bc259045fab4ef38db0" translate="yes" xml:space="preserve">
          <source>8.2.13. Closure expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4147052cbbe3e1825345a8f8eafca65aeac27e4" translate="yes" xml:space="preserve">
          <source>8.2.14. Loop expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520a8bbbaf48739af5469f47e024e714e0058424" translate="yes" xml:space="preserve">
          <source>8.2.15. Range expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008e713555d7234990fdde5a4d88d464a251e9ed" translate="yes" xml:space="preserve">
          <source>8.2.16. If and if let expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e45c867aac1aef2c5e8c04e1119c81a6ee1fb5" translate="yes" xml:space="preserve">
          <source>8.2.17. Match expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9353d695a5490e95024105a6abc90d0214ff5bbf" translate="yes" xml:space="preserve">
          <source>8.2.18. Return expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbc4632af98451edea32556234544ff42935c98" translate="yes" xml:space="preserve">
          <source>8.2.2. Path expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72630a1f3a44abf227e1c30b1dbc61f6276966e3" translate="yes" xml:space="preserve">
          <source>8.2.3. Block expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4badc6d5bd62d9f0ce2bc8fd7fb74b08ff16f945" translate="yes" xml:space="preserve">
          <source>8.2.4. Operator expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8935ac13ae427735803178afa9ec38b897212625" translate="yes" xml:space="preserve">
          <source>8.2.5. Grouped expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3597d364ba60e801ae289943c007e0fc3a60d40" translate="yes" xml:space="preserve">
          <source>8.2.6. Array and index expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84c2e1ceedcdbd5f2f1c642cbcd9a38c29341a0" translate="yes" xml:space="preserve">
          <source>8.2.7. Tuple and index expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca49a544f011bd9fc82e578051d1bd5ff446804" translate="yes" xml:space="preserve">
          <source>8.2.8. Struct expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8941bf8696681ad71d7a9a410469fd98e81c4873" translate="yes" xml:space="preserve">
          <source>8.2.9. Enum variant expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f868ac1c7e63892f20b7e8da0eb328b58212e3ee" translate="yes" xml:space="preserve">
          <source>8.3. Storing Keys with Associated Values in Hash Maps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c3685d4e3f9a1767014c76891755e36d46c6ba" translate="yes" xml:space="preserve">
          <source>9. Error Handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc737cfed3bd23bb6cc17c4d87ce5ae75de36c0a" translate="yes" xml:space="preserve">
          <source>9. Patterns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4087466bd34165fa526f083615b22f778b8d998b" translate="yes" xml:space="preserve">
          <source>9.1. Unrecoverable Errors with panic!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d28c8ec6c28d0b95412ea0cd522a596f44dc9c9" translate="yes" xml:space="preserve">
          <source>9.2. Recoverable Errors with Result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097dcae251b88318106e7a7e2505268cb40f8b17" translate="yes" xml:space="preserve">
          <source>9.3. To panic! or Not To panic!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc643343278d3aaf24f9844758d60b10a779ea0" translate="yes" xml:space="preserve">
          <source>::a.b.c.d and ::ffff:a.b.c.d become a.b.c.d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7de3a032d7552005394b42ff8d96a757c132567" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#functions&quot;&gt;Functions&lt;/a&gt; provide some helpful ways to create some basic iterators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d552868796d8ac72b61bfe7f4ec5dbec1eeda4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#method.peek&quot;&gt;peek&lt;/a&gt;/&lt;a href=&quot;#method.peek_mut&quot;&gt;peek_mut&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#method.peek&quot;&gt;peek&lt;/a&gt;/&lt;a href=&quot;#method.peek_mut&quot;&gt;peek_mut&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40d173a02374b52d6eb518e9cc2b7b6d42b684ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#structs&quot;&gt;Structs&lt;/a&gt; are often the return types of the various methods on this module's traits. You'll usually want to look at the method that creates the &lt;code&gt;struct&lt;/code&gt;, rather than the &lt;code&gt;struct&lt;/code&gt; itself. For more detail about why, see '&lt;a href=&quot;#implementing-iterator&quot;&gt;Implementing Iterator&lt;/a&gt;'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e50725ff5ccf861dbe887bf17876dfaca7b5fd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#traits&quot;&gt;Traits&lt;/a&gt; are the core portion: these traits define what kind of iterators exist and what you can do with them. The methods of these traits are worth putting some extra study time into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29187b08093d31b9fe97744b51ae1acbd3a2cedd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; is the Rust wrapper for owned strings in the preferred representation of the operating system. On Windows, this struct gets augmented with an implementation of the &lt;a href=&quot;trait.osstringext&quot;&gt;&lt;code&gt;OsStringExt&lt;/code&gt;&lt;/a&gt; trait, which has a &lt;a href=&quot;trait.osstringext#tymethod.from_wide&quot;&gt;&lt;code&gt;from_wide&lt;/code&gt;&lt;/a&gt; method. This lets you create an &lt;a href=&quot;../../../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; from a &lt;code&gt;&amp;amp;[u16]&lt;/code&gt; slice; presumably you get such a slice out of a &lt;code&gt;WCHAR&lt;/code&gt; Windows API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7d1fd938681a0615218d15520fcbfe953d1d93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; will be returned when there are no pending values remaining or if the corresponding channel has hung up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9edb5c0e90b61a39a24bdc6ef6fca188e3af8a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="af09e7c372e552b224fee4c7b5fe8494ea04389e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;OuterAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;OuterAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f37bfb9e890d53b44eb1a116bda891dfa8139590" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;OuterAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt; (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ab06b3d45f77e6344f7000b2e8ce691045342d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;OuterAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;MatchArmPatterns&lt;/em&gt;&lt;em&gt;MatchArmGuard&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;OuterAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;MatchArmPatterns&lt;/em&gt;&lt;em&gt;MatchArmGuard&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="5c616cb96cc893e9fa003cc5b8e6aafddac7da5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;OuterAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; ( &lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt; )&lt;sup&gt;?&lt;/sup&gt; ( &lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt; )&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5be5383c2983a73edc76a7dc98b0b4b61a02dab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;OuterAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../tokens#lifetimes-and-loop-labels&quot;&gt;LIFETIME_OR_LABEL&lt;/a&gt; ( &lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;LifetimeBounds&lt;/em&gt;&lt;/a&gt; )&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b0653603b1080b76c8c0ee16ec9d6ceb3e5a16a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../attributes&quot;&gt;Inner attributes&lt;/a&gt; are allowed directly after the opening brace of a block expression in the following situations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6dfcebb421fd7dfb142e70df7188e7bab1f4102" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../attributes&quot;&gt;Inner attributes&lt;/a&gt; are allowed directly after the opening brace of the match expression in the same expression contexts as &lt;a href=&quot;block-expr#attributes-on-block-expressions&quot;&gt;attributes on block expressions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f873d01d9a371c25bf396d958179a4c3c84be9e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../attributes&quot;&gt;Inner attributes&lt;/a&gt; are allowed directly after the opening brace or parenthesis of a struct expression in the same expression contexts as &lt;a href=&quot;block-expr#attributes-on-block-expressions&quot;&gt;attributes on block expressions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31238074f24e68ea22b98daf5edafc19107ff5cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../attributes&quot;&gt;Inner attributes&lt;/a&gt; are allowed directly after the opening bracket of an array expression in the same expression contexts as &lt;a href=&quot;block-expr#attributes-on-block-expressions&quot;&gt;attributes on block expressions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d032e9e4ce9767ddaf7b80fed887606171112c4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../attributes&quot;&gt;Inner attributes&lt;/a&gt; are allowed directly after the opening parenthesis of a group expression in the same expression contexts as &lt;a href=&quot;block-expr#attributes-on-block-expressions&quot;&gt;attributes on block expressions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab55ef1acb6a0b32068c4946c7d8bfb9b826c07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../attributes&quot;&gt;Inner attributes&lt;/a&gt; are allowed directly after the opening parenthesis of a tuple expression in the same expression contexts as &lt;a href=&quot;block-expr#attributes-on-block-expressions&quot;&gt;attributes on block expressions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ee46ef27de69e008ebe914d3ce19633c65caf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../attributes&quot;&gt;Outer attributes&lt;/a&gt; are allowed on functions. &lt;a href=&quot;../attributes&quot;&gt;Inner attributes&lt;/a&gt; are allowed directly after the &lt;code&gt;{&lt;/code&gt; inside its &lt;a href=&quot;../expressions/block-expr&quot;&gt;block&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a91c3be84f0f1b3a37de5c7b6e5dc4be73cf786" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../attributes#meta-item-attribute-syntax&quot;&gt;&lt;em&gt;MetaListNameValueStr&lt;/em&gt;&lt;/a&gt; syntax with two optional fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="843dc8cf3b6e770df7b031739c3a40b422a075f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../borrow/index&quot;&gt;&lt;code&gt;std::borrow&lt;/code&gt;&lt;/a&gt;::&lt;a href=&quot;../borrow/trait.toowned&quot;&gt;&lt;code&gt;ToOwned&lt;/code&gt;&lt;/a&gt;, The conversion trait that defines &lt;a href=&quot;../borrow/trait.toowned#tymethod.to_owned&quot;&gt;&lt;code&gt;to_owned&lt;/code&gt;&lt;/a&gt;, the generic method for creating an owned type from a borrowed type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31887383e70d75586417999f1eed0082ab6e69fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../boxed/index&quot;&gt;&lt;code&gt;std::boxed&lt;/code&gt;&lt;/a&gt;::&lt;a href=&quot;../boxed/struct.box&quot;&gt;&lt;code&gt;Box&lt;/code&gt;&lt;/a&gt;, a way to allocate values on the heap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18b12a0e57db05b1dee7a5e5a037205ee86bf04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../clone/index&quot;&gt;&lt;code&gt;std::clone&lt;/code&gt;&lt;/a&gt;::&lt;a href=&quot;../clone/trait.clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt;, the ubiquitous trait that defines &lt;a href=&quot;../clone/trait.clone#tymethod.clone&quot;&gt;&lt;code&gt;clone&lt;/code&gt;&lt;/a&gt;, the method for producing a copy of a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a03ad3aca2cbbe71ad437d496882945c2180bfe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../clone/trait.clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt; is a supertrait of &lt;code&gt;Copy&lt;/code&gt;, so everything which is &lt;code&gt;Copy&lt;/code&gt; must also implement &lt;a href=&quot;../clone/trait.clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt;. If a type is &lt;code&gt;Copy&lt;/code&gt; then its &lt;a href=&quot;../clone/trait.clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt; implementation only needs to return &lt;code&gt;*self&lt;/code&gt; (see the example above).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0de80d8fd8b7cf027093f35051bc562ebae11f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../cmp/index&quot;&gt;&lt;code&gt;std::cmp&lt;/code&gt;&lt;/a&gt;::{&lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;&lt;code&gt;PartialEq&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;&lt;code&gt;PartialOrd&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../cmp/trait.eq&quot;&gt;&lt;code&gt;Eq&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../cmp/trait.ord&quot;&gt;&lt;code&gt;Ord&lt;/code&gt;&lt;/a&gt; }. The comparison traits, which implement the comparison operators and are often seen in trait bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d0e906ee36e0f14c37dd781fdfced2a91a9e644" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../cmp/trait.eq&quot;&gt;&lt;code&gt;Eq&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../cmp/trait.ord&quot;&gt;&lt;code&gt;Ord&lt;/code&gt;&lt;/a&gt; - for slices whose element type are &lt;a href=&quot;../cmp/trait.eq&quot;&gt;&lt;code&gt;Eq&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../cmp/trait.ord&quot;&gt;&lt;code&gt;Ord&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13563e5264782a5f88e6e646572b2caac5d280a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../convert/index&quot;&gt;&lt;code&gt;std::convert&lt;/code&gt;&lt;/a&gt;::{&lt;a href=&quot;../convert/trait.asref&quot;&gt;&lt;code&gt;AsRef&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../convert/trait.asmut&quot;&gt;&lt;code&gt;AsMut&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../convert/trait.into&quot;&gt;&lt;code&gt;Into&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../convert/trait.from&quot;&gt;&lt;code&gt;From&lt;/code&gt;&lt;/a&gt;}. Generic conversions, used by savvy API authors to create overloaded methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3669a31d5f47c004c64b52002ae1f5364fd228" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../default/index&quot;&gt;&lt;code&gt;std::default&lt;/code&gt;&lt;/a&gt;::&lt;a href=&quot;../default/trait.default&quot;&gt;&lt;code&gt;Default&lt;/code&gt;&lt;/a&gt;, types that have default values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b82f78f68c5aa4b685c2df546fd2de25536d19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt; ( &lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46a4787695b456cc0c4ec760ef2fc43e75c15ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;CallParams&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;CallParams&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="97dec256d6ea6047f93232ef236cd0079e4f7777" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;+&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;+&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0008a4123c3167a9c82620ebfa3160482dd232c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;+=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;+=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e44f517db3b11fc0597aef8f10a9e257fedabe4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;..&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;..&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="11e2876542a851d14b93e129921e0ec052082c8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;..&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;..&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c0de7d3d5f8afb73a1af7a8f15142cf6be027043" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;..=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;..=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9be6bb3c74c6b4823787f293baf57dca83c7f6d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;.&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;.&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7eaa34c8149147bd9d54d42ffde1e47fb3f386ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;.&lt;/code&gt;&lt;a href=&quot;../paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathExprSegment&lt;/em&gt;&lt;/a&gt;&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;call-expr&quot;&gt;&lt;em&gt;CallParams&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;.&lt;/code&gt;&lt;a href=&quot;../paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathExprSegment&lt;/em&gt;&lt;/a&gt;&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;call-expr&quot;&gt;&lt;em&gt;CallParams&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ddc5a512c20da8d5e288d06906e98d0ceece0cbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;.&lt;/code&gt;&lt;a href=&quot;../tokens#integer-literals&quot;&gt;TUPLE_INDEX&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;.&lt;/code&gt;&lt;a href=&quot;../tokens#integer-literals&quot;&gt;TUPLE_INDEX&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e5a373af96755968a95e645db4b08933f27d884" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c41be078828ff1fc32d60d767c84d6070f3652e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;==&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;==&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e814d9e98a6858f337fa274df6753acb8a522a96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;?&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;?&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="642c2fd46699cf505c934ba78ba5622f9ae81597" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="334c4d68c74a0f85e11fb01f00b32b8ab67a96fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;as&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeNoBounds&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;as&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeNoBounds&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7c694278f71c88ff12a3b4a9169ea72c73eebdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;||&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;||&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a8d7f9f4d5596746941cd64ab98f5548d76acbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../fs/struct.file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;s implement &lt;code&gt;Read&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d816cc0b6fc91f22fac300fb756c569829ffc54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../fs/struct.file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;s implement &lt;code&gt;Seek&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c751b76ae67a7c39cd36bee45327e9c21afa118" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../hash/trait.hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; - for slices whose element type is &lt;a href=&quot;../hash/trait.hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e126e73986fb7b21374586fa3682519ba858281" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; ( &lt;em&gt;EnumItemTuple&lt;/em&gt; | &lt;em&gt;EnumItemStruct&lt;/em&gt; | &lt;em&gt;EnumItemDiscriminant&lt;/em&gt; )&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f07dfe5e2637d44b2e13659f4d488618f164f3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; | &lt;code&gt;self&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff14271e859717e815ee216a320dcb4210717b39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0dc16d18cfce003a51d702d65ed91cd0f7e5e10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/enum.errorkind#variant.AlreadyExists&quot;&gt;&lt;code&gt;AlreadyExists&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;create_new&lt;/code&gt; was specified and the file already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96137b3dac6d9e8d5bf91713724c28ec0c9dd689" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/enum.errorkind#variant.InvalidInput&quot;&gt;&lt;code&gt;InvalidInput&lt;/code&gt;&lt;/a&gt;: Invalid combinations of open options (truncate without write access, no access mode set, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba2559465b5e7c10f024455e70c32d8bb77ec58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/enum.errorkind#variant.NotFound&quot;&gt;&lt;code&gt;NotFound&lt;/code&gt;&lt;/a&gt;: One of the directory components of the file path does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="626549b2783cfe944c0c9b2c83e330ce98bfdcde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/enum.errorkind#variant.NotFound&quot;&gt;&lt;code&gt;NotFound&lt;/code&gt;&lt;/a&gt;: The specified file does not exist and neither &lt;code&gt;create&lt;/code&gt; or &lt;code&gt;create_new&lt;/code&gt; is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8991671192e388ecaf7211adf1a3ad9000e030fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/enum.errorkind#variant.Other&quot;&gt;&lt;code&gt;Other&lt;/code&gt;&lt;/a&gt;: Filesystem-level errors: full disk, write permission requested on a read-only file system, exceeded disk quota, too many open files, too long filename, too many symbolic links in the specified path (Unix-like systems only), etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08fe955e3a3002f5b32e44df9cced5b060326909" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/enum.errorkind#variant.Other&quot;&gt;&lt;code&gt;Other&lt;/code&gt;&lt;/a&gt;: One of the directory components of the specified file path was not, in fact, a directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10cb8d1215e0c9b5f87157341f009e670a085eac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/enum.errorkind#variant.PermissionDenied&quot;&gt;&lt;code&gt;PermissionDenied&lt;/code&gt;&lt;/a&gt;: The user lacks permission to get the specified access rights for the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ec5e348b4cdc238627784349b83fbd1239855b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/enum.errorkind#variant.PermissionDenied&quot;&gt;&lt;code&gt;PermissionDenied&lt;/code&gt;&lt;/a&gt;: The user lacks permission to open one of the directory components of the specified path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c400519f75e1ba598b07f3de2c048c5e359da0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../items&quot;&gt;&lt;em&gt;Item&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;../items&quot;&gt;&lt;em&gt;Item&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="86ca9fb79365dcfc8a22e21787b63019b7ebdef9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../items/functions&quot;&gt;Function&lt;/a&gt; and &lt;a href=&quot;../items/associated-items#methods&quot;&gt;method&lt;/a&gt; bodies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eedb4d0b193e4d0a33732404e6f3a8973e724e1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../items/generics#where-clauses&quot;&gt;&lt;em&gt;ForLifetimes&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../items/functions&quot;&gt;&lt;em&gt;FunctionQualifiers&lt;/em&gt;&lt;/a&gt;&lt;code&gt;fn&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../items/generics#where-clauses&quot;&gt;&lt;em&gt;ForLifetimes&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../items/functions&quot;&gt;&lt;em&gt;FunctionQualifiers&lt;/em&gt;&lt;/a&gt;&lt;code&gt;fn&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="16343cf68efeba12b2cfc6170113a3df0c938e29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../iter/index&quot;&gt;&lt;code&gt;std::iter&lt;/code&gt;&lt;/a&gt;::{&lt;a href=&quot;../iter/trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../iter/trait.extend&quot;&gt;&lt;code&gt;Extend&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../iter/trait.intoiterator&quot;&gt;&lt;code&gt;IntoIterator&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../iter/trait.doubleendediterator&quot;&gt;&lt;code&gt;DoubleEndedIterator&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../iter/trait.exactsizeiterator&quot;&gt;&lt;code&gt;ExactSizeIterator&lt;/code&gt;&lt;/a&gt;}. Iterators of various kinds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c2b2373cd7111cda80e92bb9c540a762f1d6a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../macro.try&quot;&gt;&lt;code&gt;?&lt;/code&gt;&lt;/a&gt; can only be used in functions that return &lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; because of the early return of &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; that it provides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a673ff1e7e14642bd7b2af5975dd17a12a1c7247" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../marker/index&quot;&gt;&lt;code&gt;std::marker&lt;/code&gt;&lt;/a&gt;::{&lt;a href=&quot;../marker/trait.copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../marker/trait.sized&quot;&gt;&lt;code&gt;Sized&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../marker/trait.sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../marker/trait.unpin&quot;&gt;&lt;code&gt;Unpin&lt;/code&gt;&lt;/a&gt;}. The marker traits indicate fundamental properties of types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fe093a2f7a474412f7c2587feed252d715c044" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../marker/trait.unsize&quot;&gt;&lt;code&gt;Unsize&lt;/code&gt;&lt;/a&gt; is used to mark types which can be coerced to DSTs if behind pointers. It is implemented automatically by the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a954b94ea0893ba69454c813f1f918670a3f1da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../mem/index&quot;&gt;&lt;code&gt;std::mem&lt;/code&gt;&lt;/a&gt;::&lt;a href=&quot;../mem/fn.drop&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt;, a convenience function for explicitly dropping a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3fbe45659110189af6142a9df734d32629dbece" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ops/index&quot;&gt;&lt;code&gt;std::ops&lt;/code&gt;&lt;/a&gt;::{&lt;a href=&quot;../ops/trait.drop&quot;&gt;&lt;code&gt;Drop&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ops/trait.fn&quot;&gt;&lt;code&gt;Fn&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ops/trait.fnmut&quot;&gt;&lt;code&gt;FnMut&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ops/trait.fnonce&quot;&gt;&lt;code&gt;FnOnce&lt;/code&gt;&lt;/a&gt;}. Various operations for both destructors and overloading &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ab46deeb5ff44ee6a9c773537969573f0f64ff6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, if the file name begins with &lt;code&gt;.&lt;/code&gt; and has no other &lt;code&gt;.&lt;/code&gt;s within;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc57fe326efcac623c3de2c9d096332f1d59633" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, if there is no embedded &lt;code&gt;.&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d338e5014b1b606c8e92c88f1a822b17e99fd9ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, if there is no file name;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45304306f8e702c0523c6f4f093fc9c9a3dc2df1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../option/index&quot;&gt;&lt;code&gt;std::option&lt;/code&gt;&lt;/a&gt;::&lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;::{&lt;code&gt;self&lt;/code&gt;, &lt;code&gt;Some&lt;/code&gt;, &lt;code&gt;None&lt;/code&gt;}. A type which expresses the presence or absence of a value. This type is so commonly used, its variants are also exported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92141bc3aeb5bddf76ef47f0969fed57a4848389" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;(&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;(&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c3ce3e02343e49a2dd6b05b16ef2d5f45a8e4af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;{&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt; (&lt;em&gt;StructExprFields&lt;/em&gt; | &lt;em&gt;StructBase&lt;/em&gt;)&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89193a5b45156fc8605acc39d1224952bf1009cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;{&lt;/code&gt;&lt;em&gt;EnumExprFields&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;{&lt;/code&gt;&lt;em&gt;EnumExprFields&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="75700f2f546ea09cd38e38d20951e03dc161c6be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt; ( &lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt; )&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e431f131c32fce066d6437284e76202419fc1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8dc76763f0b0af304aacc491bd0a262c2021b7c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../primitive.slice#method.iter&quot;&gt;&lt;code&gt;.iter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../primitive.slice#method.iter_mut&quot;&gt;&lt;code&gt;.iter_mut&lt;/code&gt;&lt;/a&gt; are the explicit methods to return the default iterators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72202eabb5d71459b8e21e1a413abecf469ca6cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;: the string should be either a string representation of a &lt;a href=&quot;enum.socketaddr&quot;&gt;&lt;code&gt;SocketAddr&lt;/code&gt;&lt;/a&gt; as expected by its &lt;a href=&quot;../str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt; implementation or a string like &lt;code&gt;&amp;lt;host_name&amp;gt;:&amp;lt;port&amp;gt;&lt;/code&gt; pair where &lt;code&gt;&amp;lt;port&amp;gt;&lt;/code&gt; is a &lt;a href=&quot;../primitive.u16&quot;&gt;&lt;code&gt;u16&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a9e7bb21feb332ff33e8cf90d77fbd8491aeb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../result/index&quot;&gt;&lt;code&gt;std::result&lt;/code&gt;&lt;/a&gt;::&lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;::{&lt;code&gt;self&lt;/code&gt;, &lt;code&gt;Ok&lt;/code&gt;, &lt;code&gt;Err&lt;/code&gt;}. A type for functions that may succeed or fail. Like &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;, its variants are exported as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332ed02edb18b40795382bd5ae7d7e7d831f7ec4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../slice/index&quot;&gt;&lt;code&gt;std::slice&lt;/code&gt;&lt;/a&gt;::&lt;a href=&quot;../slice/trait.sliceconcatext&quot;&gt;&lt;code&gt;SliceConcatExt&lt;/code&gt;&lt;/a&gt;, a trait that exists for technical reasons, but shouldn't have to exist. It provides a few useful methods on slices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053d80a43e16829f1fef793d245825fe0aa0c0df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../special-types-and-traits#copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../special-types-and-traits#clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../special-types-and-traits#sized&quot;&gt;&lt;code&gt;Sized&lt;/code&gt;&lt;/a&gt; bounds are also checked for certain generic types when defining the item. It is an error to have &lt;code&gt;Copy&lt;/code&gt; or &lt;code&gt;Clone&lt;/code&gt;as a bound on a mutable reference, &lt;a href=&quot;../types/trait-object&quot;&gt;trait object&lt;/a&gt; or &lt;a href=&quot;../types/array&quot;&gt;slice&lt;/a&gt; or &lt;code&gt;Sized&lt;/code&gt; as a bound on a trait object or slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba01dacdf6e546f61dff741812e61e5f5bfdc75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../special-types-and-traits#pinp&quot;&gt;&lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt;&lt;/a&gt; where &lt;code&gt;P&lt;/code&gt; is one of the above types except &lt;code&gt;Self&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb4ef4e364100b91772ab812dacf93976c37a0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../special-types-and-traits#sync&quot;&gt;&lt;code&gt;Sync&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../special-types-and-traits#send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; are examples of unsafe traits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c15302cfce62036bab088b51cf01a0b7419e99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../statements&quot;&gt;&lt;em&gt;Statement&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;+&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;../statements&quot;&gt;&lt;em&gt;Statement&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;+&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="189888cfcf28d8090b5586e1aaa84a25fe1e1426" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../std/boxed/struct.box&quot;&gt;&lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; has a few special features that Rust doesn't currently allow for user defined types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc67200b554960daf37acafba44983ecd3f893d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../std/cell/struct.unsafecell&quot;&gt;&lt;code&gt;std::cell::UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; is used for &lt;a href=&quot;interior-mutability&quot;&gt;interior mutability&lt;/a&gt;. It ensures that the compiler doesn't perform optimisations that are incorrect for such types. It also ensures that &lt;a href=&quot;items/static-items&quot;&gt;&lt;code&gt;static&lt;/code&gt; items&lt;/a&gt; which have a type with interior mutability aren't placed in memory marked as read only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d6418fa875ab298917de068214ad168f32eb94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../std/cell/struct.unsafecell&quot;&gt;&lt;code&gt;std::cell::UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; type is the only allowed way in Rust to disable this requirement. When &lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; is immutably aliased, it is still safe to mutate, or obtain a mutable reference to, the &lt;code&gt;T&lt;/code&gt; it contains. As with all other types, it is undefined behavior to have multiple &lt;code&gt;&amp;amp;mut UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; aliases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1602ae5572fa1a3d11f9b1b43371b8274374344" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../std/marker/struct.phantomdata&quot;&gt;&lt;code&gt;std::marker::PhantomData&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; is a zero-sized, minimum alignment, type that is considered to own a &lt;code&gt;T&lt;/code&gt; for the purposes of &lt;a href=&quot;subtyping#variance&quot;&gt;variance&lt;/a&gt;, &lt;a href=&quot;https://doc.rust-lang.org/nomicon/dropck.html&quot;&gt;drop check&lt;/a&gt; and &lt;a href=&quot;special-types-and-traits#auto-traits&quot;&gt;auto traits&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90abaa011e6d7fb87dd08bff53827fa054a4783" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../string/index&quot;&gt;&lt;code&gt;std::string&lt;/code&gt;&lt;/a&gt;::{&lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../string/trait.tostring&quot;&gt;&lt;code&gt;ToString&lt;/code&gt;&lt;/a&gt;}, heap allocated strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ed4aaafc2462a3e936e1be4ca470c1e00862e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; implements &lt;code&gt;From&amp;lt;&amp;amp;str&amp;gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2f9b6a98a00a3c4144e1f48e6c23b73627aea0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; implements &lt;code&gt;Into&amp;lt;Vec&amp;lt;u8&amp;gt;&amp;gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8358ceb896545c797769eaf3434a6ae6c441a8f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../task/enum.poll#variant.Pending&quot;&gt;&lt;code&gt;Poll::Pending&lt;/code&gt;&lt;/a&gt; if the future is not ready yet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d98e24b32d0195ec38b42bf90043fd8a9c6a29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../task/enum.poll#variant.Ready&quot;&gt;&lt;code&gt;Poll::Ready(val)&lt;/code&gt;&lt;/a&gt; with the result &lt;code&gt;val&lt;/code&gt; of this future if it finished successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11bb90470bb0cab5463b6f7fe9fb10451b2cd4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../tokens#lifetimes-and-loop-labels&quot;&gt;LIFETIME_OR_LABEL&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../tokens#lifetimes-and-loop-labels&quot;&gt;LIFETIME_OR_LABEL&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec7509bc2f32138b595ef560e8e40b6b744f4bda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../tokens#string-literals&quot;&gt;STRING_LITERAL&lt;/a&gt; | &lt;a href=&quot;../tokens#raw-string-literals&quot;&gt;RAW_STRING_LITERAL&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd9bbb509544cb79cb9fa30963a1d79c0cbaadb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;Lifetime&lt;/em&gt;&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;LifetimeBounds&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;Lifetime&lt;/em&gt;&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;LifetimeBounds&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14926b2a7b42c2623b7b47821f4e0d644700d8f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../types/array&quot;&gt;Array&lt;/a&gt; and &lt;a href=&quot;../types/slice&quot;&gt;slice&lt;/a&gt;-typed expressions can be indexed by writing a square-bracket-enclosed expression of type &lt;code&gt;usize&lt;/code&gt; (the index) after them. When the array is mutable, the resulting &lt;a href=&quot;../expressions#place-expressions-and-value-expressions&quot;&gt;memory location&lt;/a&gt; can be assigned to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f70ea53290bfbe32d64fe765d9ef4ba76b802d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../types/pointer#shared-references-&quot;&gt;References&lt;/a&gt;, &lt;a href=&quot;../types/pointer#raw-pointers-const-and-mut&quot;&gt;raw pointers&lt;/a&gt;, &lt;a href=&quot;../types/array&quot;&gt;arrays&lt;/a&gt;, &lt;a href=&quot;../types/array&quot;&gt;slices&lt;/a&gt;, &lt;a href=&quot;../types/tuple&quot;&gt;tuples&lt;/a&gt; and &lt;a href=&quot;../types/function-pointer&quot;&gt;function pointers&lt;/a&gt; have lifetime or type parameters as well, but are not referred to with path syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb9a10dcf8accd468e7ee33299fcacac424e409" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../types/tuple&quot;&gt;Tuples&lt;/a&gt; and &lt;a href=&quot;../items/structs&quot;&gt;struct tuples&lt;/a&gt; can be indexed using the number corresponding to the position of the field. The index must be written as a &lt;a href=&quot;../tokens#integer-literals&quot;&gt;decimal literal&lt;/a&gt; with no underscores or suffix. Tuple indexing expressions also differ from field expressions in that they can unambiguously be called as a function. In all other aspects they have the same behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff6def8e6e4cea056f94396e6b1ad6d91fdef45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../vec/index&quot;&gt;&lt;code&gt;std::vec&lt;/code&gt;&lt;/a&gt;::&lt;a href=&quot;../vec/struct.vec&quot;&gt;&lt;code&gt;Vec&lt;/code&gt;&lt;/a&gt;, a growable, heap-allocated vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df63ea070a5b0ca5372fb05d332f5454b0c5532" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../visibility-and-privacy&quot;&gt;&lt;em&gt;Visibility&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;../visibility-and-privacy&quot;&gt;&lt;em&gt;Visibility&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d41ea3186e7afe8166165032861afb6352cb7c57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;abi#the-export_name-attribute&quot;&gt;&lt;code&gt;export_name&lt;/code&gt;&lt;/a&gt; &amp;mdash; Specifies the exported symbol name for a function or static.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6165033f8e6d6006be45c960118b831e33304cc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;abi#the-link_section-attribute&quot;&gt;&lt;code&gt;link_section&lt;/code&gt;&lt;/a&gt; &amp;mdash; Specifies the section of an object file to use for a function or static.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac751f5a9e1d6aee928ff8d8a219bf76f7e5a80a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;abi#the-no_mangle-attribute&quot;&gt;&lt;code&gt;no_mangle&lt;/code&gt;&lt;/a&gt; &amp;mdash; Disables symbol name encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466b059727ae249b7b50702baa3b7a3e100a5034" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;abi#the-used-attribute&quot;&gt;&lt;code&gt;used&lt;/code&gt;&lt;/a&gt; &amp;mdash; Forces the compiler to keep a static item in the output object file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598832861822db375c61de1d9d88ba49b16fc0d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;atomic/fn.fence&quot;&gt;memory fences&lt;/a&gt; to ensure memory accesses are made visible to other CPUs in the right order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8dd1c8fdfbf89eb3e967b8e77ace222fbc5e2e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;atomic/index&quot;&gt;atomic operations&lt;/a&gt; to ensure simultaneous access to the same memory location doesn't lead to undefined behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e2f750463f46950628b29064fb788229ff7f52c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attributes&quot;&gt;&lt;em&gt;Attr&lt;/em&gt;&lt;/a&gt; (&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;attributes&quot;&gt;&lt;em&gt;Attr&lt;/em&gt;&lt;/a&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e1554d551358db43b3cb5ad74f2cf48e13ab8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ca27fae3299e696204d3ca1a9aed17fc823fcfed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attributes&quot;&gt;&lt;em&gt;OuterAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;attributes&quot;&gt;&lt;em&gt;OuterAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7b93d6743386769f91d20896238b164ee2e95a55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attributes&quot;&gt;&lt;em&gt;OuterAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;a href=&quot;expressions#expression-attributes&quot;&gt;&amp;dagger;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;attributes&quot;&gt;&lt;em&gt;OuterAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;a href=&quot;expressions#expression-attributes&quot;&gt;&amp;dagger;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50edf079a8e6c1ceb5efc6d85869c89ff0cdfbfa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attributes&quot;&gt;&lt;em&gt;OuterAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;let&lt;/code&gt;&lt;a href=&quot;patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt; ( &lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;types&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt; )&lt;sup&gt;?&lt;/sup&gt; (&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt; )&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61e084c8551118d6e61a3b7437840c53bbd90a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attributes&quot;&gt;Outer attributes&lt;/a&gt; before an expression are allowed only in a few specific cases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f5df4d9020576c63c1e2684db40d2cbf832145" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attributes/codegen#the-cold-attribute&quot;&gt;&lt;code&gt;cold&lt;/code&gt;&lt;/a&gt; &amp;mdash; Hint that a function is unlikely to be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8309c455fa2480ef2941396749693d914b0b5d3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attributes/codegen#the-inline-attribute&quot;&gt;&lt;code&gt;inline&lt;/code&gt;&lt;/a&gt; &amp;mdash; Hint to inline code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f28715eb2793d8c7e325e1fd91358484bf98537" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attributes/codegen#the-no_builtins-attribute&quot;&gt;&lt;code&gt;no_builtins&lt;/code&gt;&lt;/a&gt; &amp;mdash; Disables use of certain built-in functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588cb129f1cf4ed8c17a62473077d7b84ed65182" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attributes/codegen#the-target_feature-attribute&quot;&gt;&lt;code&gt;target_feature&lt;/code&gt;&lt;/a&gt; &amp;mdash; Configure platform-specific code generation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95af98a110e9dbf2692e358b71238a9b9f3ae37a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attributes/derive&quot;&gt;&lt;code&gt;derive&lt;/code&gt;&lt;/a&gt; &amp;mdash; Automatic trait implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d6f0d0724420fe801b9b02981077569129b760" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attributes/diagnostics#lint-check-attributes&quot;&gt;&lt;code&gt;allow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;attributes/diagnostics#lint-check-attributes&quot;&gt;&lt;code&gt;warn&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;attributes/diagnostics#lint-check-attributes&quot;&gt;&lt;code&gt;deny&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;attributes/diagnostics#lint-check-attributes&quot;&gt;&lt;code&gt;forbid&lt;/code&gt;&lt;/a&gt; &amp;mdash; Alters the default lint level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78581878794a8e23ab6b436ff53a146285e1850a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attributes/diagnostics#the-deprecated-attribute&quot;&gt;&lt;code&gt;deprecated&lt;/code&gt;&lt;/a&gt; &amp;mdash; Generates deprecation notices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851bfdbdd09ab32aa97d02b17eef83fce2cf0267" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attributes/diagnostics#the-must_use-attribute&quot;&gt;&lt;code&gt;must_use&lt;/code&gt;&lt;/a&gt; &amp;mdash; Generates a lint for unused values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e281827c061cbf0cf65965e66f09bd7419fee14f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attributes/limits#the-recursion_limit-attribute&quot;&gt;&lt;code&gt;recursion_limit&lt;/code&gt;&lt;/a&gt; &amp;mdash; Sets the maximum recursion limit for certain compile-time operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afeb75f6283474adc067fe46479bfb0c385d2618" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attributes/limits#the-type_length_limit-attribute&quot;&gt;&lt;code&gt;type_length_limit&lt;/code&gt;&lt;/a&gt; &amp;mdash; Sets the maximum size of a polymorphic type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0473d54542d09db15343847ec8f0d1af19931b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attributes/testing#the-ignore-attribute&quot;&gt;&lt;code&gt;ignore&lt;/code&gt;&lt;/a&gt; &amp;mdash; Disables a test function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc814741e2d0a72bcca065ff3aa09ee31907b7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attributes/testing#the-should_panic-attribute&quot;&gt;&lt;code&gt;should_panic&lt;/code&gt;&lt;/a&gt; &amp;mdash; Indicates a test should generate a panic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62b5250ecba071d3ac271bc953afe67c4966139" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;attributes/testing#the-test-attribute&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; &amp;mdash; Marks a function as a test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ea00844f7b30d3e156b49783913c458bbed08a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;borrow/trait.borrow&quot;&gt;&lt;code&gt;Borrow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;borrow/trait.borrowmut&quot;&gt;&lt;code&gt;BorrowMut&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d404f6ccbb0be5e67e7d07f915ca5ec294e5614" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;boxed/index&quot;&gt;&lt;code&gt;Box&amp;lt;[T]&amp;gt;&lt;/code&gt;&lt;/a&gt; - &lt;em&gt;owned slice&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ea505409d0dd02c322ea90f2904212e5cd936e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;clone/trait.clone&quot;&gt;&lt;code&gt;Clone&lt;/code&gt;&lt;/a&gt; (Note that this will not defer to &lt;code&gt;T&lt;/code&gt;'s &lt;code&gt;Clone&lt;/code&gt; implementation if it exists!)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c806827fb8b896db648b9b3c4bd6af613b4923b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cmp/trait.partialeq&quot;&gt;&lt;code&gt;PartialEq&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cmp/trait.partialord&quot;&gt;&lt;code&gt;PartialOrd&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cmp/trait.eq&quot;&gt;&lt;code&gt;Eq&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cmp/trait.ord&quot;&gt;&lt;code&gt;Ord&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28906d667443f268760ba86f3da0e6d9616bb00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;conditional-compilation#the-cfg-attribute&quot;&gt;&lt;code&gt;cfg&lt;/code&gt;&lt;/a&gt; &amp;mdash; Controls conditional compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ae5dd322c86307efd8687622597600a4445a4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;conditional-compilation#the-cfg_attr-attribute&quot;&gt;&lt;code&gt;cfg_attr&lt;/code&gt;&lt;/a&gt; &amp;mdash; Conditionally includes attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7844c43b0d91ce67fd1ee50ce00ac5cdf8d0ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;convert/trait.asref&quot;&gt;&lt;code&gt;AsRef&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;convert/trait.asmut&quot;&gt;&lt;code&gt;AsMut&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be1218364c24ca8ca5d3b1e0239bea35048e901" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;crates-and-source-files#preludes-and-no_std&quot;&gt;&lt;code&gt;no_std&lt;/code&gt;&lt;/a&gt; &amp;mdash; Removes std from the prelude.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8142556874b0085a95f00978184ec2a529065c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;crates-and-source-files#the-crate_name-attribute&quot;&gt;&lt;code&gt;crate_name&lt;/code&gt;&lt;/a&gt; &amp;mdash; Specifies the crate name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89cd42bd117409b56f23bfb1a8fe7e9aa3f7d60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;crates-and-source-files#the-no_main-attribute&quot;&gt;&lt;code&gt;no_main&lt;/code&gt;&lt;/a&gt; &amp;mdash; Disables emitting the &lt;code&gt;main&lt;/code&gt; symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a51d4865074d84a36c2a583080c50dd924b90d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum.ipaddr&quot;&gt;&lt;code&gt;IpAddr&lt;/code&gt;&lt;/a&gt; doesn't handle the port. Use &lt;a href=&quot;enum.socketaddr&quot;&gt;&lt;code&gt;SocketAddr&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52dc8320180f7831c121a0548d81b36b17c05b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum.ipaddr&quot;&gt;&lt;code&gt;IpAddr&lt;/code&gt;&lt;/a&gt; represents IP addresses of either IPv4 or IPv6; &lt;a href=&quot;struct.ipv4addr&quot;&gt;&lt;code&gt;Ipv4Addr&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.ipv6addr&quot;&gt;&lt;code&gt;Ipv6Addr&lt;/code&gt;&lt;/a&gt; are respectively IPv4 and IPv6 addresses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be7daa714d8ad27ec8ffc5464a5853c297b3427" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;s are commonly paired with pattern matching to query the presence of a value and take action, always accounting for the &lt;a href=&quot;enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab484f0fdd4416f778e8512d276331c69d08a83d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;&lt;/a&gt; is the type used for returning and propagating errors. It is an enum with the variants, &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok(T)&lt;/code&gt;&lt;/a&gt;, representing success and containing a value, and &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err(E)&lt;/code&gt;&lt;/a&gt;, representing error and containing an error value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dac8dbf603f0f04b6aac13f629c53f7b0ea00bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum.socketaddr&quot;&gt;&lt;code&gt;SocketAddr&lt;/code&gt;&lt;/a&gt; represents socket addresses of either IPv4 or IPv6; &lt;a href=&quot;struct.socketaddrv4&quot;&gt;&lt;code&gt;SocketAddrV4&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.socketaddrv6&quot;&gt;&lt;code&gt;SocketAddrV6&lt;/code&gt;&lt;/a&gt; are respectively IPv4 and IPv6 socket addresses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8046ac68cdab3f3bff3dbba1ac8953084d70a93e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum.socketaddr&quot;&gt;&lt;code&gt;SocketAddr&lt;/code&gt;&lt;/a&gt;: &lt;a href=&quot;#tymethod.to_socket_addrs&quot;&gt;&lt;code&gt;to_socket_addrs&lt;/code&gt;&lt;/a&gt; is the identity function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dabb26b29e68c416c3d96c714983b6d678bf75cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions&quot;&gt;&lt;em&gt;ExpressionWithoutBlock&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;expressions&quot;&gt;&lt;em&gt;ExpressionWithoutBlock&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd56e64e32944503171749bb06d91bfd2782b199" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions&quot;&gt;Expressions&lt;/a&gt; and &lt;a href=&quot;statements&quot;&gt;statements&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cafdde2cec1461f9e155094dbf12ec6698b6b0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions#temporary-lifetimes&quot;&gt;Temporary values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c4bffe45de2eb110492d7668013bf4ed58bf83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/array-expr&quot;&gt;Array expressions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7442e630041b734117816736d9ab03a8d7ca8694" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/array-expr#array-and-slice-indexing-expressions&quot;&gt;Array indexing&lt;/a&gt; of a type that implements &lt;code&gt;DerefMut&lt;/code&gt;, this then evaluates the value being indexed, but not the index, in mutable place expression context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04b084953e0a9938a90001782796672e4181049" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/block-expr&quot;&gt;Block expressions&lt;/a&gt; accept outer and inner attributes, but only when they are the outer expression of an &lt;a href=&quot;statements#expression-statements&quot;&gt;expression statement&lt;/a&gt; or the final expression of another block expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c025395d7347292d47d1dfdfae1149a2dbce2ff6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/block-expr&quot;&gt;Block expressions&lt;/a&gt;, including &lt;code&gt;unsafe&lt;/code&gt; blocks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266edcd64500232ffae2c6e1a6bc88f1cf72e04d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/closure-expr&quot;&gt;Closure expressions&lt;/a&gt; which don't capture variables from the environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c65a372fb1254dfb79f7d4abaa83ecb548aaf8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/enum-variant-expr&quot;&gt;Enum variant&lt;/a&gt; expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d0d0e150af6b7e1c105d1d1d4b26cf78628c04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/field-expr&quot;&gt;Field access&lt;/a&gt;, &lt;a href=&quot;expressions/tuple-expr#tuple-indexing-expressions&quot;&gt;Tuple index&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44cb8df67f82852688e66ae2bab41e8252ef8990" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/field-expr&quot;&gt;Field&lt;/a&gt; expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1153b18c106f2e50c438a38ede2b36bf93edf0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/field-expr&quot;&gt;Fields&lt;/a&gt; of a place expression which can be moved out of and doesn't implement &lt;a href=&quot;special-types-and-traits#drop&quot;&gt;&lt;code&gt;Drop&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb543891d72c23f614ff6c5c6111f0cb3ae7017" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/field-expr&quot;&gt;Fields&lt;/a&gt;, this evaluates the subexpression in a mutable place expression context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a7c74942b3cad7f93d48d13f418464c6ac7b68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/grouped-expr&quot;&gt;Grouped&lt;/a&gt; expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15e4b32acd1bc4164fa5775b308b96fedb2300c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/if-expr#if-expressions&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;expressions/if-expr#if-let-expressions&quot;&gt;&lt;code&gt;if let&lt;/code&gt;&lt;/a&gt; expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75b6a11879d89d305505db64660e012661ff0a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/literal-expr&quot;&gt;Literals&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;expressions/literal-expr&quot;&gt;Literals&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d4717923daa4fd3f9ed0fbb3156af6bbf09f3efd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/match-expr&quot;&gt;Match arms&lt;/a&gt;, &lt;a href=&quot;macros-by-example&quot;&gt;Macros&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18121016184e2b316002d44bc0f5548a3fcc2604" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/match-expr&quot;&gt;Match expression arms&lt;/a&gt; accept outer attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa828e5fc97174fefa756b6f1702e1d2dd6ec8e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/operator-expr#arithmetic-and-logical-binary-operators&quot;&gt;Addition&lt;/a&gt;, &lt;a href=&quot;trait-bounds&quot;&gt;Trait Bounds&lt;/a&gt;, &lt;a href=&quot;macros-by-example&quot;&gt;Macro Kleene Matcher&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f479efc917af48fcefe330d4bc14c7478e99e4bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/operator-expr#arithmetic-and-logical-binary-operators&quot;&gt;Bitwise and Logical AND&lt;/a&gt;, &lt;a href=&quot;expressions/operator-expr#borrow-operators&quot;&gt;Borrow&lt;/a&gt;, &lt;a href=&quot;types/pointer&quot;&gt;References&lt;/a&gt;, &lt;a href=&quot;patterns#reference-patterns&quot;&gt;Reference patterns&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ece6ceb95910e1987694b2009b42d4c4dd3fb9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/operator-expr#arithmetic-and-logical-binary-operators&quot;&gt;Bitwise and Logical OR&lt;/a&gt;, &lt;a href=&quot;expressions/closure-expr&quot;&gt;Closures&lt;/a&gt;, &lt;a href=&quot;expressions/match-expr&quot;&gt;Match&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb0cee17450baaa22391aeb38d11a61d9ffd7e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/operator-expr#arithmetic-and-logical-binary-operators&quot;&gt;Multiplication&lt;/a&gt;, &lt;a href=&quot;expressions/operator-expr#the-dereference-operator&quot;&gt;Dereference&lt;/a&gt;, &lt;a href=&quot;types/pointer#raw-pointers-const-and-mut&quot;&gt;Raw Pointers&lt;/a&gt;, &lt;a href=&quot;macros-by-example&quot;&gt;Macro Kleene Matcher&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a197402e6210ae8f98a80b817ba6e0ca1026463" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/operator-expr#arithmetic-and-logical-binary-operators&quot;&gt;Shift Left&lt;/a&gt;, &lt;a href=&quot;items/generics&quot;&gt;Nested Generics&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d44b10e53c58edff4d21ba68cf7d208d759511" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/operator-expr#arithmetic-and-logical-binary-operators&quot;&gt;Shift Right&lt;/a&gt;, &lt;a href=&quot;items/generics&quot;&gt;Nested Generics&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796bd17a2427a002f1bddf97cf2f090cd6dc1ec8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/operator-expr#arithmetic-and-logical-binary-operators&quot;&gt;Subtraction&lt;/a&gt;, &lt;a href=&quot;expressions/operator-expr#negation-operators&quot;&gt;Negation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e32952fae6b538b9ba594957c1016619287f998" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/operator-expr#assignment-expressions&quot;&gt;Assignment&lt;/a&gt;, &lt;a href=&quot;attributes&quot;&gt;Attributes&lt;/a&gt;, Various type definitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d3f3ab1dd0018f7efd2354f1283231ba38f9f66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/operator-expr#comparison-operators&quot;&gt;Greater than or equal to&lt;/a&gt;, &lt;a href=&quot;items/generics&quot;&gt;Generics&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37795b339d9288896b717bb7a7d21a72d1a10ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/operator-expr#comparison-operators&quot;&gt;Greater than&lt;/a&gt;, &lt;a href=&quot;items/generics&quot;&gt;Generics&lt;/a&gt;, &lt;a href=&quot;paths&quot;&gt;Paths&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69220226171d1778a5db582df0b2bd56f80b131" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/operator-expr#comparison-operators&quot;&gt;Less than&lt;/a&gt;, &lt;a href=&quot;items/generics&quot;&gt;Generics&lt;/a&gt;, &lt;a href=&quot;paths&quot;&gt;Paths&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e77d9544305304c6a25136b004dd168598edeb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/operator-expr#compound-assignment-expressions&quot;&gt;Shift Right assignment&lt;/a&gt;, &lt;a href=&quot;items/generics&quot;&gt;Nested Generics&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32eb1d3707b1fb7029e41898739940c0d1cdae0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/operator-expr#lazy-boolean-operators&quot;&gt;Lazy AND&lt;/a&gt;, &lt;a href=&quot;expressions/operator-expr#borrow-operators&quot;&gt;Borrow&lt;/a&gt;, &lt;a href=&quot;types/pointer&quot;&gt;References&lt;/a&gt;, &lt;a href=&quot;patterns#reference-patterns&quot;&gt;Reference patterns&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e61d57c446db3d44b7bc4e27de29b5f76ed57d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/operator-expr#lazy-boolean-operators&quot;&gt;Lazy OR&lt;/a&gt;, &lt;a href=&quot;expressions/closure-expr&quot;&gt;Closures&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fe4618ef091345b48a6da2ef4bec69955d6e1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/operator-expr#negation-operators&quot;&gt;Bitwise and Logical NOT&lt;/a&gt;, &lt;a href=&quot;macros-by-example&quot;&gt;Macro Calls&lt;/a&gt;, &lt;a href=&quot;attributes&quot;&gt;Inner Attributes&lt;/a&gt;, &lt;a href=&quot;types/never&quot;&gt;Never Type&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02902586d4a26ea998cc899815834392a64eb1ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/operator-expr#the-dereference-operator&quot;&gt;Dereferences&lt;/a&gt; of a &lt;code&gt;*mut T&lt;/code&gt; pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd4d84d0b8f831492294662bfb3e031e097bb70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/operator-expr#the-question-mark-operator&quot;&gt;Question mark operator&lt;/a&gt;, &lt;a href=&quot;trait-bounds#sized&quot;&gt;Questionably sized&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27e11224695a4b1d325f56f82112c1681f1a224" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/operator-expr#type-cast-expressions&quot;&gt;Cast&lt;/a&gt; expressions, except pointer to address and function pointer to address casts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="871e40d2d865d3502f91b8672cf9569679f90c96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/path-expr&quot;&gt;Paths&lt;/a&gt; to &lt;a href=&quot;items/functions&quot;&gt;functions&lt;/a&gt; and constants. Recursively defining constants is not allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815c8054c5aeedcb6bc606507c7f6a12ae5d7ff2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/range-expr&quot;&gt;Inclusive Range&lt;/a&gt;, &lt;a href=&quot;patterns#range-patterns&quot;&gt;Range patterns&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8249e47b0c143267a73a2e788b07298f29b4da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/range-expr&quot;&gt;Range expressions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e82d52b0fe6195649718f290d20c0d710e34b67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/range-expr&quot;&gt;Range&lt;/a&gt; expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4528e63782c6375598718b9b3eb63c0bab0f3e86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/range-expr&quot;&gt;Range&lt;/a&gt;, &lt;a href=&quot;expressions/struct-expr&quot;&gt;Struct expressions&lt;/a&gt;, &lt;a href=&quot;patterns&quot;&gt;Patterns&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc747e9a11a355337134a93c78a7cddd78b23b5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/struct-expr&quot;&gt;Struct&lt;/a&gt; expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b43fcae1b96d73daa24adf4acf6bd2fb5f94337" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions/tuple-expr&quot;&gt;Tuple expressions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be08c42273d5a6c857d460914e11a003f6c4fdac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.abort&quot;&gt;abort&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.abort&quot;&gt;abort&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e598e19003c37ed7060b9959607f93e483e74190" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.alloc&quot;&gt;alloc&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.alloc&quot;&gt;alloc&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b3b7efb21349a4f947c21ad07c8716a7b8801722" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.alloc_zeroed&quot;&gt;alloc_zeroed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.alloc_zeroed&quot;&gt;alloc_zeroed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b8b4d39ebf0d1a98c4a5cafa0659b56aa0352d65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.arith_offset&quot;&gt;arith_offset&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.arith_offset&quot;&gt;arith_offset&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2ca533890dcac110a9a466c9226ab00818baa46e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.assume&quot;&gt;assume&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.assume&quot;&gt;assume&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f2e78d62af185ef706299c21765679669e0aabda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_and&quot;&gt;atomic_and&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_and&quot;&gt;atomic_and&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a514b387be5c60858678f25004f0a65752f83608" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_and_acq&quot;&gt;atomic_and_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_and_acq&quot;&gt;atomic_and_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="98707f32ff36ae7f66774abeab3cf9fa950c8260" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_and_acqrel&quot;&gt;atomic_and_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_and_acqrel&quot;&gt;atomic_and_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="780a4605da7d89fc15e44f134795a3834fac4e67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_and_rel&quot;&gt;atomic_and_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_and_rel&quot;&gt;atomic_and_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="12ab44bb00d97618bfa1f4431e4caeeb87e9c4b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_and_relaxed&quot;&gt;atomic_and_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_and_relaxed&quot;&gt;atomic_and_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="bb49a218624ff025fcb7c9f096730f592c4dfcf4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_cxchg&quot;&gt;atomic_cxchg&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_cxchg&quot;&gt;atomic_cxchg&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a8b951833e006134e01cd0481e8ab4c1f11b93c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_cxchg_acq&quot;&gt;atomic_cxchg_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_cxchg_acq&quot;&gt;atomic_cxchg_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="61b48ad12b555e38b147297cff74db10e95854ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_cxchg_acq_failrelaxed&quot;&gt;atomic_cxchg_acq_failrelaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_cxchg_acq_failrelaxed&quot;&gt;atomic_cxchg_acq_failrelaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d4da122c60fa9cd59466cef08396c820df287124" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_cxchg_acqrel&quot;&gt;atomic_cxchg_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_cxchg_acqrel&quot;&gt;atomic_cxchg_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="cdee8e9798083c06ae3f889f747bea787b3f04fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_cxchg_acqrel_failrelaxed&quot;&gt;atomic_cxchg_acqrel_failrelaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_cxchg_acqrel_failrelaxed&quot;&gt;atomic_cxchg_acqrel_failrelaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="86a9c564878c9969b0a70fbdf542594cf609fe44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_cxchg_failacq&quot;&gt;atomic_cxchg_failacq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_cxchg_failacq&quot;&gt;atomic_cxchg_failacq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="20349ac592d7807bfdd83ab15109bec1a7e947ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_cxchg_failrelaxed&quot;&gt;atomic_cxchg_failrelaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_cxchg_failrelaxed&quot;&gt;atomic_cxchg_failrelaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f11c5bb0da01c02b5b8382ad3e1383fb7c7c0ef5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_cxchg_rel&quot;&gt;atomic_cxchg_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_cxchg_rel&quot;&gt;atomic_cxchg_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7ea15150587897b57e55694df4cfb78453e330de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_cxchg_relaxed&quot;&gt;atomic_cxchg_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_cxchg_relaxed&quot;&gt;atomic_cxchg_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="04dbc3dec5929d873d338dd49cd7dc1629eb9929" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_cxchgweak&quot;&gt;atomic_cxchgweak&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_cxchgweak&quot;&gt;atomic_cxchgweak&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="fa0859749fd7136efda2f1ec26dc62fe8cfd410f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_cxchgweak_acq&quot;&gt;atomic_cxchgweak_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_cxchgweak_acq&quot;&gt;atomic_cxchgweak_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a1b05b7d4aeaa68162412b8badba2d506ae0238c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_cxchgweak_acq_failrelaxed&quot;&gt;atomic_cxchgweak_acq_failrelaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_cxchgweak_acq_failrelaxed&quot;&gt;atomic_cxchgweak_acq_failrelaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="10c3b3f87a48661c732903ab43fe6876cd3f1e67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_cxchgweak_acqrel&quot;&gt;atomic_cxchgweak_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_cxchgweak_acqrel&quot;&gt;atomic_cxchgweak_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3a49110e31c75f63391d7f669704cb400748dffc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_cxchgweak_acqrel_failrelaxed&quot;&gt;atomic_cxchgweak_acqrel_failrelaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_cxchgweak_acqrel_failrelaxed&quot;&gt;atomic_cxchgweak_acqrel_failrelaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0e18ac40a5ca786f87402e677a8197dfcfe5a44f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_cxchgweak_failacq&quot;&gt;atomic_cxchgweak_failacq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_cxchgweak_failacq&quot;&gt;atomic_cxchgweak_failacq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a96f89e12786134422d88fb8a63a5b05964aa211" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_cxchgweak_failrelaxed&quot;&gt;atomic_cxchgweak_failrelaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_cxchgweak_failrelaxed&quot;&gt;atomic_cxchgweak_failrelaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4d1005c9dc90c3ed954a1ab6467647151888bba1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_cxchgweak_rel&quot;&gt;atomic_cxchgweak_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_cxchgweak_rel&quot;&gt;atomic_cxchgweak_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="65ee3418b4a2c62b936c218c62d48434db2ae079" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_cxchgweak_relaxed&quot;&gt;atomic_cxchgweak_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_cxchgweak_relaxed&quot;&gt;atomic_cxchgweak_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="fa4b34144d9abbc633694b99c4df391bcefc0113" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_fence&quot;&gt;atomic_fence&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_fence&quot;&gt;atomic_fence&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ffd7f82301980428ba04188f663b7bae2165dd89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_fence_acq&quot;&gt;atomic_fence_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_fence_acq&quot;&gt;atomic_fence_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2ce70ff8c2f2b568b9ed17a363d985a20feffe9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_fence_acqrel&quot;&gt;atomic_fence_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_fence_acqrel&quot;&gt;atomic_fence_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0ed02d7ac3eb40f5b5b03d2191d413bc967095a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_fence_rel&quot;&gt;atomic_fence_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_fence_rel&quot;&gt;atomic_fence_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7f25c4fc63c56914b1b1548bbbf06d8b1251d92e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_load&quot;&gt;atomic_load&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_load&quot;&gt;atomic_load&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1593c06d80f1cbb795fdc0b473d4041ed36ee854" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_load_acq&quot;&gt;atomic_load_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_load_acq&quot;&gt;atomic_load_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b9bee7b92ce1f0c95d723c8f4838337ce9559de0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_load_relaxed&quot;&gt;atomic_load_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_load_relaxed&quot;&gt;atomic_load_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e1e1987f3830c0c7d826fd11faafebf38da835aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_load_unordered&quot;&gt;atomic_load_unordered&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_load_unordered&quot;&gt;atomic_load_unordered&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7a064b247ace06fb6f3137d4cd376a900a2e4e1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_max&quot;&gt;atomic_max&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_max&quot;&gt;atomic_max&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7b84da2de7b8f724149b7e83cf4d8cbb5ff72fa4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_max_acq&quot;&gt;atomic_max_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_max_acq&quot;&gt;atomic_max_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0e8767bda568e42081ff6ec16cc8a71045a50a4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_max_acqrel&quot;&gt;atomic_max_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_max_acqrel&quot;&gt;atomic_max_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b8757db65b4434fdf9247fa1dadfe6d0e805d8c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_max_rel&quot;&gt;atomic_max_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_max_rel&quot;&gt;atomic_max_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="21cd6d1366e7aae03ee5e2933b9c1dc2d0e0b2e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_max_relaxed&quot;&gt;atomic_max_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_max_relaxed&quot;&gt;atomic_max_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e5a64d252586c6087f15cdd50ea264919e9a68a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_min&quot;&gt;atomic_min&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_min&quot;&gt;atomic_min&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3df5fa5ad51586eb2794893d1359217ea26880cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_min_acq&quot;&gt;atomic_min_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_min_acq&quot;&gt;atomic_min_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c47f645b133128efc1b1ade5ab5cb5d93deb38a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_min_acqrel&quot;&gt;atomic_min_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_min_acqrel&quot;&gt;atomic_min_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d03672c583febb9ff5b6faed72278db35967f881" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_min_rel&quot;&gt;atomic_min_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_min_rel&quot;&gt;atomic_min_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="57aab98e62a814e9f6a1e0206311f0cb9f3a7e20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_min_relaxed&quot;&gt;atomic_min_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_min_relaxed&quot;&gt;atomic_min_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="dfd49ae8b8814fa020f819297383c26559097b6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_nand&quot;&gt;atomic_nand&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_nand&quot;&gt;atomic_nand&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="15fd3b7aaf8e577668bc4c95153ae96b05781237" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_nand_acq&quot;&gt;atomic_nand_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_nand_acq&quot;&gt;atomic_nand_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="8f178458c382ec13e5d6a358ee9d88a398cc9f60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_nand_acqrel&quot;&gt;atomic_nand_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_nand_acqrel&quot;&gt;atomic_nand_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="5c8ced4b9feb46b680c01e05b797db7f752c80a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_nand_rel&quot;&gt;atomic_nand_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_nand_rel&quot;&gt;atomic_nand_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="03eeddd02b53252a78aecb8d8a4283caf275e0e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_nand_relaxed&quot;&gt;atomic_nand_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_nand_relaxed&quot;&gt;atomic_nand_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="07e8372e5a919bc08c4ebeb614a2a029869254c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_or&quot;&gt;atomic_or&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_or&quot;&gt;atomic_or&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="652d370a460db3b06f055589cd647755568303d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_or_acq&quot;&gt;atomic_or_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_or_acq&quot;&gt;atomic_or_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ac9eed07e119e94a7927420808976ee5a4bd6901" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_or_acqrel&quot;&gt;atomic_or_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_or_acqrel&quot;&gt;atomic_or_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d0e2dbdc9d2e24aff5c3053ed6d0fd51ea610047" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_or_rel&quot;&gt;atomic_or_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_or_rel&quot;&gt;atomic_or_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d0229d6bb56ecb76ce177200711acb24406076a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_or_relaxed&quot;&gt;atomic_or_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_or_relaxed&quot;&gt;atomic_or_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="44836cb4d400f2a6c6c69b1cac6b3aafd247db52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_singlethreadfence&quot;&gt;atomic_singlethreadfence&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_singlethreadfence&quot;&gt;atomic_singlethreadfence&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="689b11b34524628a7a85e473c2494c6966f6e364" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_singlethreadfence_acq&quot;&gt;atomic_singlethreadfence_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_singlethreadfence_acq&quot;&gt;atomic_singlethreadfence_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0de27ea07029af11b1473c344ffbb88a63a60e32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_singlethreadfence_acqrel&quot;&gt;atomic_singlethreadfence_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_singlethreadfence_acqrel&quot;&gt;atomic_singlethreadfence_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7c3d6b7de7fbfeb65c27c9c38682877fc1a02bc0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_singlethreadfence_rel&quot;&gt;atomic_singlethreadfence_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_singlethreadfence_rel&quot;&gt;atomic_singlethreadfence_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f84b58d170583754c8f3daca493eb8558307e798" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_store&quot;&gt;atomic_store&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_store&quot;&gt;atomic_store&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b2b4f973e6dddd3412c9b4abc5011d33261d9b00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_store_rel&quot;&gt;atomic_store_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_store_rel&quot;&gt;atomic_store_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1ffc4a9af80dcf668b5263787845d99b4d4d0b72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_store_relaxed&quot;&gt;atomic_store_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_store_relaxed&quot;&gt;atomic_store_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="654fc27112da45616ec40b775cc310e86c34f998" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_store_unordered&quot;&gt;atomic_store_unordered&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_store_unordered&quot;&gt;atomic_store_unordered&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="69d7d6efd8e299b45bcc511441987458b2ebddd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_umax&quot;&gt;atomic_umax&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_umax&quot;&gt;atomic_umax&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="8be88b3cf133d508136315ff2c6e7d3840c73c6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_umax_acq&quot;&gt;atomic_umax_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_umax_acq&quot;&gt;atomic_umax_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1106591d306b8a74bd81cc165e07eefab9a5bd39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_umax_acqrel&quot;&gt;atomic_umax_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_umax_acqrel&quot;&gt;atomic_umax_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2bbcea865f2ded585c74b38cc0d8f9320d202f53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_umax_rel&quot;&gt;atomic_umax_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_umax_rel&quot;&gt;atomic_umax_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="93136177745e4620c6c3375aa6620d3b45bd3eb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_umax_relaxed&quot;&gt;atomic_umax_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_umax_relaxed&quot;&gt;atomic_umax_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2058ed6a244ffa849ad57e7edbfde67354eed0fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_umin&quot;&gt;atomic_umin&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_umin&quot;&gt;atomic_umin&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e5063a68e7fb517ab520dbe50d5b571d251b30f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_umin_acq&quot;&gt;atomic_umin_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_umin_acq&quot;&gt;atomic_umin_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d1a508c27ffab51ad924b1cb104318269ec2802c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_umin_acqrel&quot;&gt;atomic_umin_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_umin_acqrel&quot;&gt;atomic_umin_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ca699ec37470172d021693d7acb5002b75058876" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_umin_rel&quot;&gt;atomic_umin_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_umin_rel&quot;&gt;atomic_umin_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="bdd30e2b69366ad0296851b22cbc47eeb08bfe69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_umin_relaxed&quot;&gt;atomic_umin_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_umin_relaxed&quot;&gt;atomic_umin_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="daea94cf8762d6c351687644ba62739c8ca00a0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_xadd&quot;&gt;atomic_xadd&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_xadd&quot;&gt;atomic_xadd&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f50342c0380be21158ed7a5f9b787d7e68483391" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_xadd_acq&quot;&gt;atomic_xadd_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_xadd_acq&quot;&gt;atomic_xadd_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d74a3ff882892d2a0699947bb709b71be962f59d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_xadd_acqrel&quot;&gt;atomic_xadd_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_xadd_acqrel&quot;&gt;atomic_xadd_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="5613a6057a65a8cad881e29478562fb9e33c2e14" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_xadd_rel&quot;&gt;atomic_xadd_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_xadd_rel&quot;&gt;atomic_xadd_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0e14bde405615fd704c193363352a18e6bd1c27f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_xadd_relaxed&quot;&gt;atomic_xadd_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_xadd_relaxed&quot;&gt;atomic_xadd_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="862599a10aff44530e51cb09f5c793540d734538" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_xchg&quot;&gt;atomic_xchg&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_xchg&quot;&gt;atomic_xchg&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="8500ec08700032bbf03052947bc58a9666445816" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_xchg_acq&quot;&gt;atomic_xchg_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_xchg_acq&quot;&gt;atomic_xchg_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0bd9ea3872cbaacc5f0e9f8aa2743fd76b9f63ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_xchg_acqrel&quot;&gt;atomic_xchg_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_xchg_acqrel&quot;&gt;atomic_xchg_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f2bea0010f38388418b0fbfc90c45d406c4a594b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_xchg_rel&quot;&gt;atomic_xchg_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_xchg_rel&quot;&gt;atomic_xchg_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b9dc44510002ef0a365a45e43cc58dfa76f42c49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_xchg_relaxed&quot;&gt;atomic_xchg_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_xchg_relaxed&quot;&gt;atomic_xchg_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e993dbfe33a3474457dc827189e1b9192d1477ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_xor&quot;&gt;atomic_xor&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_xor&quot;&gt;atomic_xor&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1905803b21a53298ffd95452d992dd0b45fac675" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_xor_acq&quot;&gt;atomic_xor_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_xor_acq&quot;&gt;atomic_xor_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e4c9e5afbb9d236bac6d1da1f31e19b5a03818d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_xor_acqrel&quot;&gt;atomic_xor_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_xor_acqrel&quot;&gt;atomic_xor_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7e09131456483661d6930366554d26eef974d76d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_xor_rel&quot;&gt;atomic_xor_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_xor_rel&quot;&gt;atomic_xor_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="49ad311f2af0c715a4b8875b4f4c2ec332b97b90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_xor_relaxed&quot;&gt;atomic_xor_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_xor_relaxed&quot;&gt;atomic_xor_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="378cef0a667fbd825952b2dd7173c2f4f4ee5e18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_xsub&quot;&gt;atomic_xsub&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_xsub&quot;&gt;atomic_xsub&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1c5741e4d78ee1192928b3f06945045cda156d05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_xsub_acq&quot;&gt;atomic_xsub_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_xsub_acq&quot;&gt;atomic_xsub_acq&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b6f38a99db3825f12787a4bc2d0258b8e8c1990e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_xsub_acqrel&quot;&gt;atomic_xsub_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_xsub_acqrel&quot;&gt;atomic_xsub_acqrel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="facc35af54cafd22325590f7404f36794e17ab21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_xsub_rel&quot;&gt;atomic_xsub_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_xsub_rel&quot;&gt;atomic_xsub_rel&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="dbf2abd57957882bdd648b3f61fbc17b174b9199" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.atomic_xsub_relaxed&quot;&gt;atomic_xsub_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.atomic_xsub_relaxed&quot;&gt;atomic_xsub_relaxed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="930238a4567ddee2d9fd7ee6fc0b66ff001417fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.breakpoint&quot;&gt;breakpoint&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.breakpoint&quot;&gt;breakpoint&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c3f7fde861c0e1b917cdcca4f9115cd761f13311" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.ceilf32&quot;&gt;ceilf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.ceilf32&quot;&gt;ceilf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6df04afef776f46eee027f2b6ac8a486cab23c59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.ceilf64&quot;&gt;ceilf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.ceilf64&quot;&gt;ceilf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6ba84742bfef906334007b35b203cec4d577bb08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.copy&quot;&gt;copy&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.copy&quot;&gt;copy&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="61b8a5ea93bae41147834c2a475822bfa29ee5c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.copy_nonoverlapping&quot;&gt;copy_nonoverlapping&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.copy_nonoverlapping&quot;&gt;copy_nonoverlapping&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c7a069dd352b86f03356f72303a73c044d99b364" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.copysignf32&quot;&gt;copysignf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.copysignf32&quot;&gt;copysignf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="86f6825376236fb0720b209b9e6ce34d782ba6ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.copysignf64&quot;&gt;copysignf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.copysignf64&quot;&gt;copysignf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="79d057cf1241c13f8c48143f8cdd827a23c07a6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.cosf32&quot;&gt;cosf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.cosf32&quot;&gt;cosf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="73f56615f57ed75b11799ad19152fe962e999384" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.cosf64&quot;&gt;cosf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.cosf64&quot;&gt;cosf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="32ce9b1cec78422d5df1b1debea2ab9702126cdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.ctlz_nonzero&quot;&gt;ctlz_nonzero&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.ctlz_nonzero&quot;&gt;ctlz_nonzero&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b6b69505eb51cf328f2162c493d2e70f0ced6656" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.cttz_nonzero&quot;&gt;cttz_nonzero&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.cttz_nonzero&quot;&gt;cttz_nonzero&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d4e9dd3554885394c652dce99141b06bc1726ecc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.dealloc&quot;&gt;dealloc&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.dealloc&quot;&gt;dealloc&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="cbc72d1ee1d87032597f2ece9f7dfeb84b3ee06a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.discriminant_value&quot;&gt;discriminant_value&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.discriminant_value&quot;&gt;discriminant_value&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7dffd44a77c24336fc56083ecea113bbf5c95bc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.drop_in_place&quot;&gt;drop_in_place&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.drop_in_place&quot;&gt;drop_in_place&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="721d428acd1b8df9df6b0359508c576e67eea44f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.exact_div&quot;&gt;exact_div&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.exact_div&quot;&gt;exact_div&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b9cbd3971ff37610ba83956ee35e64208f31add1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.exp2f32&quot;&gt;exp2f32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.exp2f32&quot;&gt;exp2f32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3cdf8ae267ddc5fa74998867c1900d1feef7c6b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.exp2f64&quot;&gt;exp2f64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.exp2f64&quot;&gt;exp2f64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3a36c2630dc10b44483829349a3f57f5a503a96c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.expf32&quot;&gt;expf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.expf32&quot;&gt;expf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f8a7e948d4e7c8aa1e21b26168a76a08fc2a9910" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.expf64&quot;&gt;expf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.expf64&quot;&gt;expf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2f3bed2d8a4270c6819711fc835db547f27939fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.fabsf32&quot;&gt;fabsf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.fabsf32&quot;&gt;fabsf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="48b0958c8973e83c97f4f5184087c16c0ba5ba84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.fabsf64&quot;&gt;fabsf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.fabsf64&quot;&gt;fabsf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6885e1b659419523c960810b51497b5a851cb984" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.fadd_fast&quot;&gt;fadd_fast&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.fadd_fast&quot;&gt;fadd_fast&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="927397b4edf32728ff49438257404d8d19fb13f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.fdiv_fast&quot;&gt;fdiv_fast&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.fdiv_fast&quot;&gt;fdiv_fast&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6e545be15121040248b372ce2c11380e802e74cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.floorf32&quot;&gt;floorf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.floorf32&quot;&gt;floorf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2aa2351a64b31ce6ac5caab0e51a258f67aef048" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.floorf64&quot;&gt;floorf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.floorf64&quot;&gt;floorf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="91463cf0973cf578603ab400edb08a929af3a3e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.fmaf32&quot;&gt;fmaf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.fmaf32&quot;&gt;fmaf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d9d14dcca5fa459b5247623d7833811241a26f25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.fmaf64&quot;&gt;fmaf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.fmaf64&quot;&gt;fmaf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="af929dd20eb32f5490d071d91022f4933f57eb79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.fmul_fast&quot;&gt;fmul_fast&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.fmul_fast&quot;&gt;fmul_fast&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b50b3c33c81937ce69afab582e2bb1ff90fe12e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.forget&quot;&gt;forget&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.forget&quot;&gt;forget&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3892011af80b29651fc596eefe5541cf61ab1ede" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.frem_fast&quot;&gt;frem_fast&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.frem_fast&quot;&gt;frem_fast&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="738465cc9af9c66c704c909148966d2052fdbaff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.from_boxed_utf8_unchecked&quot;&gt;from_boxed_utf8_unchecked&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.from_boxed_utf8_unchecked&quot;&gt;from_boxed_utf8_unchecked&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="cbb510e124c5db26aaf09f832b64d86b3d46289a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.from_raw_parts&quot;&gt;from_raw_parts&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.from_raw_parts&quot;&gt;from_raw_parts&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e1a72651fd65f3a237eadcf2d94fc6220176f9fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.from_raw_parts_mut&quot;&gt;from_raw_parts_mut&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.from_raw_parts_mut&quot;&gt;from_raw_parts_mut&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9d9948e4920652878175765e9096cb41292d2bd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.from_u32_unchecked&quot;&gt;from_u32_unchecked&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.from_u32_unchecked&quot;&gt;from_u32_unchecked&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1aa55462e852f98e784cb8d9a619054df1a340ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.from_utf8_unchecked&quot;&gt;from_utf8_unchecked&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.from_utf8_unchecked&quot;&gt;from_utf8_unchecked&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e0ac0956063b880080baf7ab2de2c5a1a76fb18d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.from_utf8_unchecked_mut&quot;&gt;from_utf8_unchecked_mut&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.from_utf8_unchecked_mut&quot;&gt;from_utf8_unchecked_mut&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c076b10269805330bebb24de2fb766be748d7109" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.fsub_fast&quot;&gt;fsub_fast&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.fsub_fast&quot;&gt;fsub_fast&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c456fca2a9341245e9f39c117ca3c74b3eed156f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.init&quot;&gt;init&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.init&quot;&gt;init&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1a4fcea4764bb80a25185adf82ba43abbffb1d79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.likely&quot;&gt;likely&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.likely&quot;&gt;likely&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9e39d6841b2b0ee9ed7a05c288ad72a2381a8660" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.log10f32&quot;&gt;log10f32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.log10f32&quot;&gt;log10f32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c74fbbef69265cdc5b500da97e88aabbd155077d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.log10f64&quot;&gt;log10f64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.log10f64&quot;&gt;log10f64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="271b567fbfce725874bc2cbc59f5f2aa68fd2c13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.log2f32&quot;&gt;log2f32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.log2f32&quot;&gt;log2f32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="867cf76ed6191ab82c43960b151593834fd5b1ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.log2f64&quot;&gt;log2f64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.log2f64&quot;&gt;log2f64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ed4cbce780fb83d6d49c6c320e01baf65008c066" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.logf32&quot;&gt;logf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.logf32&quot;&gt;logf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="44d09bc2142528a921a0ec948509678c586179e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.logf64&quot;&gt;logf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.logf64&quot;&gt;logf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="bd2aef9624d5af968d52944e0376024bcf35829b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.min_align_of_val&quot;&gt;min_align_of_val&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.min_align_of_val&quot;&gt;min_align_of_val&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6e05773a4cbd1dcd64f4ce495a3718d0b33db725" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.move_val_init&quot;&gt;move_val_init&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.move_val_init&quot;&gt;move_val_init&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="8515c7072c35455b1e3cef0877560a91d3c3a23f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.nearbyintf32&quot;&gt;nearbyintf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.nearbyintf32&quot;&gt;nearbyintf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b05d9c0f4ea4cdbdb9d67bdd1750884503673e84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.nearbyintf64&quot;&gt;nearbyintf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.nearbyintf64&quot;&gt;nearbyintf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4106df4bdff2d371d0ece8cde562063a7eae8b9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.nontemporal_store&quot;&gt;nontemporal_store&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.nontemporal_store&quot;&gt;nontemporal_store&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="5072acf36dae14ac71d5e999dbe68aede9de9784" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.offset&quot;&gt;offset&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.offset&quot;&gt;offset&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="38c627eec27e78c9f5127756441c4052e0f7f472" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.panic_if_uninhabited&quot;&gt;panic_if_uninhabited&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.panic_if_uninhabited&quot;&gt;panic_if_uninhabited&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c6327d998b61b23a5019cdd0584d29c0f376a8f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.powf32&quot;&gt;powf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.powf32&quot;&gt;powf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="904989774b80271e14c027647681d83030414031" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.powf64&quot;&gt;powf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.powf64&quot;&gt;powf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3e18c867d7c07da7681e4c2cfcda3732df0328a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.powif32&quot;&gt;powif32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.powif32&quot;&gt;powif32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6801280cdb8b83e4c10019685442dec7eaae855c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.powif64&quot;&gt;powif64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.powif64&quot;&gt;powif64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4969b28262bbec1671d2d853a61462f4ebb376b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.pref_align_of&quot;&gt;pref_align_of&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.pref_align_of&quot;&gt;pref_align_of&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3ad8cde760f35578bd9f17a02d2ed5f018467b09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.prefetch_read_data&quot;&gt;prefetch_read_data&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.prefetch_read_data&quot;&gt;prefetch_read_data&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="184d777f239985a97fab7767abdc83e5ef2e86aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.prefetch_read_instruction&quot;&gt;prefetch_read_instruction&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.prefetch_read_instruction&quot;&gt;prefetch_read_instruction&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="5095bbe80fbbcbf8b0d24248b2392bd4e8307cc6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.prefetch_write_data&quot;&gt;prefetch_write_data&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.prefetch_write_data&quot;&gt;prefetch_write_data&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f553106b45a6fb2ffa778111591c1eafc6f09adb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.prefetch_write_instruction&quot;&gt;prefetch_write_instruction&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.prefetch_write_instruction&quot;&gt;prefetch_write_instruction&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7481a799945be7e842e76fb61de35edd9fddc1e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.read&quot;&gt;read&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.read&quot;&gt;read&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f66183e2ace59e606258a3c31ee28328414e61db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.read_unaligned&quot;&gt;read_unaligned&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.read_unaligned&quot;&gt;read_unaligned&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f01e54263b5f5bcf9236017c989ea5d52bd17e6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.read_volatile&quot;&gt;read_volatile&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.read_volatile&quot;&gt;read_volatile&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="53fe05e31f6d812a5e6b15058327aa7cece37cff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.realloc&quot;&gt;realloc&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.realloc&quot;&gt;realloc&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="cf866641d1c5fd0e721e0c196d11ac0953182a6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.replace&quot;&gt;replace&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.replace&quot;&gt;replace&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="5407cba6e4273a046c8c829ec8853fe1630cf422" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.rintf32&quot;&gt;rintf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.rintf32&quot;&gt;rintf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6e03b409f0a0ddc293f804f5357bf4cd509ffb64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.rintf64&quot;&gt;rintf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.rintf64&quot;&gt;rintf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4a3c0cbd9b1b5d85d5fa220da367d768c35c0457" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.roundf32&quot;&gt;roundf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.roundf32&quot;&gt;roundf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6f34a0f6812b8c67cd97113f4262c1e57feb3cf2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.roundf64&quot;&gt;roundf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.roundf64&quot;&gt;roundf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c4e35a9d4ddd016cb809f1e2aa2f8ed6d210b1d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.rustc_peek&quot;&gt;rustc_peek&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.rustc_peek&quot;&gt;rustc_peek&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b3cb4be59f603f442a432a4a5cd4dc74a1e5a467" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.sinf32&quot;&gt;sinf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.sinf32&quot;&gt;sinf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0bed348c35dfb5a1bb6073edb8325d3830b7205d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.sinf64&quot;&gt;sinf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.sinf64&quot;&gt;sinf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="bcc577cf1d11cbc5d7cb9ffb61fbeac9baab72bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.size_of_val&quot;&gt;size_of_val&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.size_of_val&quot;&gt;size_of_val&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="225c99371dc8e97365b17c3a4970f5e04fd9e429" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.sqrtf32&quot;&gt;sqrtf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.sqrtf32&quot;&gt;sqrtf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="dd0c15326fa982e1f47b2981069a17e33cf86386" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.sqrtf64&quot;&gt;sqrtf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.sqrtf64&quot;&gt;sqrtf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3fe107248d1d49465fe8c65dbf6a4418b7afb4b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.swap&quot;&gt;swap&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.swap&quot;&gt;swap&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="830facce8c15da36f29ae2d853663dc6968b9250" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.swap_nonoverlapping&quot;&gt;swap_nonoverlapping&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.swap_nonoverlapping&quot;&gt;swap_nonoverlapping&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="da63d9e4f40d871f059c0e3803b5c702852f56d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.transmute&quot;&gt;transmute&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.transmute&quot;&gt;transmute&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="597bbefa1a6549989e07d7172f963bd3293dbb47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.transmute_copy&quot;&gt;transmute_copy&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.transmute_copy&quot;&gt;transmute_copy&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="51816976b790c75fe11c348d4cfe7e13bab6a3c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.truncf32&quot;&gt;truncf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.truncf32&quot;&gt;truncf32&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0a9cff3c2e71b33c5e96c0686b397f37e98c08c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.truncf64&quot;&gt;truncf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.truncf64&quot;&gt;truncf64&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="477914f8a47030af4f0a87203b18f439a5cff20a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.try&quot;&gt;try&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.try&quot;&gt;try&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1446163ffcce1a4a0ac8fbd47049f23ddeca6ce2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.type_id&quot;&gt;type_id&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.type_id&quot;&gt;type_id&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9c10a49529b82c873b23fe894da94ecee6c74205" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.type_name&quot;&gt;type_name&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.type_name&quot;&gt;type_name&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6f174834f8465983826b929ddcc89871a6798d07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.unaligned_volatile_load&quot;&gt;unaligned_volatile_load&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.unaligned_volatile_load&quot;&gt;unaligned_volatile_load&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a0d68a7b6d06114fa3f08f4d48b99d1f71bbcb5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.unaligned_volatile_store&quot;&gt;unaligned_volatile_store&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.unaligned_volatile_store&quot;&gt;unaligned_volatile_store&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e5cd25fc5f1408883fa7abe49e28a4e9fe13582f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.unchecked_add&quot;&gt;unchecked_add&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="50dc12795056e5664e5b13fb1be42a8ba29187e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.unchecked_div&quot;&gt;unchecked_div&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.unchecked_div&quot;&gt;unchecked_div&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="10d9a60cb05bb99feffea9a36f5bb9f010ec699e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.unchecked_mul&quot;&gt;unchecked_mul&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="be0095ea83b91f9adc93b93dcd9a620d7d61fcad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.unchecked_rem&quot;&gt;unchecked_rem&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.unchecked_rem&quot;&gt;unchecked_rem&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ee1a70c1205aa0fbdfdf1d9b0ecbd4d0e45e6dad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.unchecked_shl&quot;&gt;unchecked_shl&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.unchecked_shl&quot;&gt;unchecked_shl&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ab5b42010c7f8b7c6b99c4beba9fa5b5bc01f6c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.unchecked_shr&quot;&gt;unchecked_shr&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.unchecked_shr&quot;&gt;unchecked_shr&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7ed405518868f78cd51fdbcbf962e8952ab2f15d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.unchecked_sub&quot;&gt;unchecked_sub&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4c5e9314792040d3947e71012e79c543dafecb70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.uninit&quot;&gt;uninit&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.uninit&quot;&gt;uninit&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="79596f1751f740bc75082204e2e4b55635377579" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.uninitialized&quot;&gt;uninitialized&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.uninitialized&quot;&gt;uninitialized&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d8270b0f01562805b53dc8cb033a2007f59115d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.unlikely&quot;&gt;unlikely&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.unlikely&quot;&gt;unlikely&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="5f88ace54c7e60697a6fe5a41067119be211aa46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.unreachable&quot;&gt;unreachable&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.unreachable&quot;&gt;unreachable&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4f920d25596099d3b0c390cb2170637c8144f3c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.unreachable_unchecked&quot;&gt;unreachable_unchecked&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.unreachable_unchecked&quot;&gt;unreachable_unchecked&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b8a136c09530472bf2d119a0a4df7fae7a93272c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.volatile_copy_memory&quot;&gt;volatile_copy_memory&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.volatile_copy_memory&quot;&gt;volatile_copy_memory&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="93b83fb4961d49f887313bae130f39b1104d4875" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.volatile_copy_nonoverlapping_memory&quot;&gt;volatile_copy_nonoverlapping_memory&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.volatile_copy_nonoverlapping_memory&quot;&gt;volatile_copy_nonoverlapping_memory&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="27adf71bca550b5fc9c7d322c9bf73bbb5d2add3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.volatile_load&quot;&gt;volatile_load&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.volatile_load&quot;&gt;volatile_load&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="71004bc3b3ffe9ca173ec7f1f2da6fde4860bba0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.volatile_set_memory&quot;&gt;volatile_set_memory&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.volatile_set_memory&quot;&gt;volatile_set_memory&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="bb25fc7581f230557a1d658982676d468c007e2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.volatile_store&quot;&gt;volatile_store&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.volatile_store&quot;&gt;volatile_store&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e55660136ca825cc3c3792d4bbcf723f5d134360" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; can be used to overwrite data without causing it to be dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689b63658c41606adfe82127ee7528ffef328599" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.write&quot;&gt;write&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.write&quot;&gt;write&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="adfa551e1ed88ba6fd11ec66cb6ed31cea46b8d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.write_bytes&quot;&gt;write_bytes&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.write_bytes&quot;&gt;write_bytes&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="8ede861523ff77bdf1287cfff88770048c4de757" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.write_unaligned&quot;&gt;write_unaligned&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.write_unaligned&quot;&gt;write_unaligned&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="914b20c1cd02cdbc386394fa78cf35150c246f22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.write_volatile&quot;&gt;write_volatile&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.write_volatile&quot;&gt;write_volatile&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="295a14f9f2839e7993a464a1ae9ff987c0052f50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fn.zeroed&quot;&gt;zeroed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;fn.zeroed&quot;&gt;zeroed&lt;/a&gt;&lt;sup&gt;⚠&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="16cafdf26ca70bb704c66ac7c0860e0551db4452" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;functions&quot;&gt;&lt;em&gt;FunctionQualifiers&lt;/em&gt;&lt;/a&gt;&lt;code&gt;fn&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;functions&quot;&gt;&lt;em&gt;FunctionQualifiers&lt;/em&gt;&lt;/a&gt;&lt;code&gt;fn&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="805a37b330f2c2aced483e0dc82d720a7267641a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;functions&quot;&gt;&lt;em&gt;FunctionReturnType&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;functions&quot;&gt;&lt;em&gt;FunctionReturnType&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f496c40dafd6c8789dca179dacf303883cd87e73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;functions&quot;&gt;&lt;em&gt;FunctionReturnType&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;functions&quot;&gt;&lt;em&gt;FunctionReturnType&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac7948829a4d5e7335060b33a038716c0df5e296" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="60fc19ccc48337b8cf179dff9f37c08bee061f1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.unicode.org/reports/tr31/&quot;&gt;Unicode Annex #31&lt;/a&gt;: identifier and pattern syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8c48253089ed7c26fd2bd152e2fd256d10cce1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.rust-lang.org/cargo/index.html&quot;&gt;Cargo&amp;rsquo;s documentation&lt;/a&gt; describes other metadata you can specify to ensure others can discover and use your crate more easily.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0598cc367909c7972882831a6bd36c07b109e0f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.rust-lang.org/nomicon/hrtb.html&quot;&gt;Higher-ranked&lt;/a&gt;&lt;a href=&quot;types/function-pointer&quot;&gt;function pointers&lt;/a&gt; and &lt;a href=&quot;types/trait-object&quot;&gt;trait objects&lt;/a&gt; have another subtype relation. They are subtypes of types that are given by substitutions of the higher-ranked lifetimes. Some examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef39249ecc5cfb0263fbd4c69565fa8900a6465" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/AES_instruction_set&quot;&gt;AES&lt;/a&gt; &amp;mdash; Advanced Encryption Standard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1042d2d882625657553dc5335f507c8ac464cf7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Advanced_Vector_Extensions&quot;&gt;AVX&lt;/a&gt; &amp;mdash; Advanced Vector Extensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8602ff399d43424b33d631f1ada1e55239f4f716" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Advanced_Vector_Extensions#AVX2&quot;&gt;AVX2&lt;/a&gt; &amp;mdash; Advanced Vector Extensions 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa766accc41c1a0610cf17bdf164572b22091be5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Bit_Manipulation_Instruction_Sets&quot;&gt;BMI1&lt;/a&gt; &amp;mdash; Bit Manipulation Instruction Sets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfac6b26a7df1c928a06d0a00c20fc1570fcb29b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Bit_Manipulation_Instruction_Sets#BMI2&quot;&gt;BMI2&lt;/a&gt; &amp;mdash; Bit Manipulation Instruction Sets 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c8bc3a0532e93169475359fdb16eee1cd11cea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/C_data_types#Basic_types&quot;&gt;C's &lt;code&gt;char&lt;/code&gt; type&lt;/a&gt; is completely unlike &lt;a href=&quot;../../primitive.char&quot;&gt;Rust's &lt;code&gt;char&lt;/code&gt; type&lt;/a&gt;; while Rust's type represents a unicode scalar value, C's &lt;code&gt;char&lt;/code&gt; type is just an ordinary integer. This type will always be either &lt;a href=&quot;../../primitive.i8&quot;&gt;&lt;code&gt;i8&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../primitive.u8&quot;&gt;&lt;code&gt;u8&lt;/code&gt;&lt;/a&gt;, as the type is defined as being one byte long.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4337a112e9a3a8c99521629805f1f32ebf46a242" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/FMA_instruction_set&quot;&gt;FMA3&lt;/a&gt; &amp;mdash; Three-operand fused multiply-add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8396804ccfe2f89c9c654fb53c9c11e455dfc2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Intel_SHA_extensions&quot;&gt;SHA&lt;/a&gt; &amp;mdash; Secure Hash Algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff2175500c15863fb23691f4c920f287698cad6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Machine_epsilon&quot;&gt;Machine epsilon&lt;/a&gt; value for &lt;code&gt;f32&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce2a36ef06ccd5a3e3d6b49802d4da2286fbd9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Machine_epsilon&quot;&gt;Machine epsilon&lt;/a&gt; value for &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a83d7c1445c337341d324bb960870c64fbdc4fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/RdRand&quot;&gt;&lt;code&gt;rdrand&lt;/code&gt;&lt;/a&gt; &amp;mdash; Read random number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c867278052905ce0d761b636a2b3d7f745cf35b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/RdRand&quot;&gt;&lt;code&gt;rdseed&lt;/code&gt;&lt;/a&gt; &amp;mdash; Read random seed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8266b9de37119fc16f16bf38afbe493b4a3f5bd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/SSE2&quot;&gt;SSE2&lt;/a&gt; &amp;mdash; Streaming SIMD Extensions 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c462e7363d000d48045b6799cdc5731cdf916a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/SSE3&quot;&gt;SSE3&lt;/a&gt; &amp;mdash; Streaming SIMD Extensions 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2220caf5d47536bb95cb665e23259211a8a69529" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/SSE4#SSE4.1&quot;&gt;SSE4.1&lt;/a&gt; &amp;mdash; Streaming SIMD Extensions 4.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf8b538f12d1f12e117862f1b6940ce9b72c2d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/SSE4#SSE4.2&quot;&gt;SSE4.2&lt;/a&gt; &amp;mdash; Streaming SIMD Extensions 4.2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dfd1c71ce9c6c5de2ce25ecd3fe0c5abd4b39e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/SSSE3&quot;&gt;SSSE3&lt;/a&gt; &amp;mdash; Supplemental Streaming SIMD Extensions 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a1d49c20ef01f59ac70bf69293faeaff7d87c63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Streaming_SIMD_Extensions&quot;&gt;SSE&lt;/a&gt; &amp;mdash; Streaming</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0ed1b62748f2f1ed6ad9c4c976124960e8c152" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/nunojesus/rust-book-pt-pt&quot;&gt;Portugu&amp;ecirc;s&lt;/a&gt; (PT)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4d0711ed12b33637a924e67eb2a35f53f6cedb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/rust-br/rust-book-pt-br&quot;&gt;Portugu&amp;ecirc;s&lt;/a&gt; (BR)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f55e465205d6e325dc20bc99b7b1b783f7cf9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/thecodix/book&quot;&gt;Espa&amp;ntilde;ol&lt;/a&gt;, &lt;a href=&quot;https://github.com/ManRR/rust-book-es&quot;&gt;alternate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41872f2a29efcf95f50361315716e7503929551" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.felixcloutier.com/x86/fxsave&quot;&gt;&lt;code&gt;fxsave&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.felixcloutier.com/x86/fxrstor&quot;&gt;&lt;code&gt;fxrstor&lt;/code&gt;&lt;/a&gt; &amp;mdash; Save and restore x87 FPU, MMX Technology, and SSE State</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc9cc6109e68539c08102959b8c8f67294ec73d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.felixcloutier.com/x86/lzcnt&quot;&gt;&lt;code&gt;lzcnt&lt;/code&gt;&lt;/a&gt; &amp;mdash; Leading zeros count</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6695db7013689e0e8c9d4942aa1f51a8ddf2b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.felixcloutier.com/x86/pclmulqdq&quot;&gt;&lt;code&gt;pclmulqdq&lt;/code&gt;&lt;/a&gt; &amp;mdash; Packed carry-less multiplication quadword</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0065c05543862166fadd1ebfd13511d971af317" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.felixcloutier.com/x86/popcnt&quot;&gt;&lt;code&gt;popcnt&lt;/code&gt;&lt;/a&gt; &amp;mdash; Count of bits set to 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e017b98b4a5033857a06234b7c73dce6da5b38b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.felixcloutier.com/x86/xsave&quot;&gt;&lt;code&gt;xsave&lt;/code&gt;&lt;/a&gt; &amp;mdash; Save processor extended states</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc21d37d4bb0d221f1fe12202bcf28f97c9c2ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.felixcloutier.com/x86/xsavec&quot;&gt;&lt;code&gt;xsavec&lt;/code&gt;&lt;/a&gt; &amp;mdash; Save processor extended states with compaction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918c8cb818fb3238f86576370588e633023ca295" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.felixcloutier.com/x86/xsaveopt&quot;&gt;&lt;code&gt;xsaveopt&lt;/code&gt;&lt;/a&gt; &amp;mdash; Save processor extended states optimized</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54213c3449b36d670e5d3ac483e33e217ccfec37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.felixcloutier.com/x86/xsaves&quot;&gt;&lt;code&gt;xsaves&lt;/code&gt;&lt;/a&gt; &amp;mdash; Save processor extended states supervisor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522ff00ec9f92d3f42f0d961b85b154fd3d85e33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; (&lt;code&gt;=&lt;/code&gt; (&lt;a href=&quot;tokens#string-literals&quot;&gt;STRING_LITERAL&lt;/a&gt; | &lt;a href=&quot;tokens#raw-string-literals&quot;&gt;RAW_STRING_LITERAL&lt;/a&gt;))&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ff9e31aea8b91d143600f4321056655a7369f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; | &lt;code&gt;super&lt;/code&gt; | &lt;code&gt;self&lt;/code&gt; | &lt;code&gt;Self&lt;/code&gt; | &lt;code&gt;crate&lt;/code&gt; | &lt;code&gt;$crate&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2797567391fc3f367d98c67f50e8e40a63c4fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; | &lt;code&gt;super&lt;/code&gt; | &lt;code&gt;self&lt;/code&gt; | &lt;code&gt;crate&lt;/code&gt; | &lt;code&gt;$crate&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade80bc86854af3e7ef1d03fb234394af7cb4a5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;(&lt;/code&gt; ( &lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; (&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;)* &lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt; )&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba74b236be5b6505ea69a6783f372666f61de6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;(&lt;/code&gt; ( &lt;a href=&quot;paths#simple-paths&quot;&gt;&lt;em&gt;SimplePath&lt;/em&gt;&lt;/a&gt; (&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;paths#simple-paths&quot;&gt;&lt;em&gt;SimplePath&lt;/em&gt;&lt;/a&gt;)* &lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt; )&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1fc64374f2965b21ceaf131d4779df8c0aa9d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;(&lt;/code&gt; ( &lt;em&gt;MetaNameValueStr&lt;/em&gt; (&lt;code&gt;,&lt;/code&gt;&lt;em&gt;MetaNameValueStr&lt;/em&gt;)* &lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt; )&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b614ef9ade91328830cdc37826749b86b91c2d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;=&lt;/code&gt; (&lt;a href=&quot;tokens#string-literals&quot;&gt;STRING_LITERAL&lt;/a&gt; | &lt;a href=&quot;tokens#raw-string-literals&quot;&gt;RAW_STRING_LITERAL&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5053880659a5df23fc8d64051a56abad7cb583" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="675fa09219bc24d623f28b404e8b1c61b0ca4f30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;items&quot;&gt;&lt;em&gt;Item&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;items&quot;&gt;&lt;em&gt;Item&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="70c4804ac08176344bd33db735026d3802716191" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;items&quot;&gt;Items&lt;/a&gt; including &lt;a href=&quot;items/associated-items&quot;&gt;associated items&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430c1a490c04ecaef3575d3f565c2ddbc7e548bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;items/associated-items#associated-functions-and-methods&quot;&gt;Methods&lt;/a&gt; can take &lt;a href=&quot;../std/pin/struct.pin&quot;&gt;&lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt;&lt;/a&gt; as a receiver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abf90d3475470188b5f4599d73d0d713817bc60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;items/associated-items#associated-functions-and-methods&quot;&gt;Methods&lt;/a&gt; can take &lt;a href=&quot;../std/rc/struct.rc&quot;&gt;&lt;code&gt;Rc&amp;lt;Self&amp;gt;&lt;/code&gt;&lt;/a&gt; as a receiver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29667b129a8727815e014ac7a0ab0b6a2fdbc8a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;items/associated-items#associated-functions-and-methods&quot;&gt;Methods&lt;/a&gt; can take &lt;a href=&quot;../std/sync/struct.arc&quot;&gt;&lt;code&gt;Arc&amp;lt;Self&amp;gt;&lt;/code&gt;&lt;/a&gt; as a receiver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621f1e40dc0e02b10c64ab4d9b50ff66a5a32a6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;items/associated-items#associated-functions-and-methods&quot;&gt;Methods&lt;/a&gt; can take &lt;code&gt;Box&amp;lt;Self&amp;gt;&lt;/code&gt; as a receiver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e74cd44651a9113073a654219b255e8664351b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;items/enumerations&quot;&gt;Enum&lt;/a&gt; variants and &lt;a href=&quot;items/structs&quot;&gt;struct&lt;/a&gt; and &lt;a href=&quot;items/unions&quot;&gt;union&lt;/a&gt; fields accept outer attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d79fe2d4a252b2a07fc8a2b217de3e8d450135" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;items/extern-crates#the-no_link-attribute&quot;&gt;&lt;code&gt;no_link&lt;/code&gt;&lt;/a&gt; &amp;mdash; Prevents linking an extern crate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b910e2d953eb4c6f9d770f26ad281e1aa778fdb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;items/external-blocks&quot;&gt;Variadic functions&lt;/a&gt;, &lt;a href=&quot;patterns#range-patterns&quot;&gt;Range patterns&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7746ba4420120db6d1464f3744396b5503242c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;items/external-blocks#the-link-attribute&quot;&gt;&lt;code&gt;link&lt;/code&gt;&lt;/a&gt; &amp;mdash; Specifies a native library to link with an &lt;code&gt;extern&lt;/code&gt; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a90047fc524156ec48b39400778b8772fb052d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;items/external-blocks#the-link_name-attribute&quot;&gt;&lt;code&gt;link_name&lt;/code&gt;&lt;/a&gt; &amp;mdash; Specifies the name of the symbol for functions or statics in an &lt;code&gt;extern&lt;/code&gt; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfed7228b02bb3bf29311961ddcd10f73d8b0508" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;items/functions&quot;&gt;Function return type&lt;/a&gt;, &lt;a href=&quot;expressions/closure-expr&quot;&gt;Closure return type&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f2f1acab9b696ca26fab9ddc22c5ed3cbd6359" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;items/functions&quot;&gt;Function&lt;/a&gt; and &lt;a href=&quot;expressions/closure-expr&quot;&gt;closure&lt;/a&gt; parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a732a6fbfe2cc394aae5ce7e071d71036127cfb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;items/generics&quot;&gt;Generic lifetime or type parameter&lt;/a&gt; accept outer attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e900eb5caaf121687b97fce4ed77cfbe7341902" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;items/implementations&quot;&gt;Implementations&lt;/a&gt; and &lt;a href=&quot;items/use-declarations&quot;&gt;use declarations&lt;/a&gt; do not have canonical paths, although the items that implementations define do have them. Items defined in block expressions do not have canonical paths. Items defined in a module that does not have a canonical path do not have a canonical path. Associated items defined in an implementation that refers to an item without a canonical path, e.g. as the implementing type, the trait being implemented, a type parameter or bound on a type parameter, do not have canonical paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e519b67c56d87608529d701c6f26b5751234c0bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;items/modules#prelude-items&quot;&gt;&lt;code&gt;no_implicit_prelude&lt;/code&gt;&lt;/a&gt; &amp;mdash; Disables prelude lookups within a module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7dcd24fb2b47a011d7e913ddd13ebfc9939fc2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;items/modules#the-path-attribute&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt; &amp;mdash; Specifies the filename for a module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f34a56ef9fe33a7e99ee000512ed99c9141280" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;items/static-items#mutable-statics&quot;&gt;Mutable &lt;code&gt;static&lt;/code&gt; items&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52eada6162bd1b99df7bb32fcf538bc8a0c7d62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;items/traits&quot;&gt;Traits&lt;/a&gt; that can be used as &lt;a href=&quot;types/trait-object&quot;&gt;trait objects&lt;/a&gt;. Only traits that follow specific &lt;a href=&quot;items/traits#object-safety&quot;&gt;rules&lt;/a&gt; are object safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a1f63fcd740b8a7a0cd528fbaf4f7303f90765" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;items/traits#trait-bounds&quot;&gt;Trait&lt;/a&gt; and lifetime bounds provide a way for &lt;a href=&quot;items/generics&quot;&gt;generic items&lt;/a&gt; to restrict which types and lifetimes are used as their parameters. Bounds can be provided on any type in a &lt;a href=&quot;items/generics#where-clauses&quot;&gt;where clause&lt;/a&gt;. There are also shorter forms for certain common cases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a0e39b205bac0d7d371b2ff22dd6057e182e20a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iter/trait.intoiterator&quot;&gt;&lt;code&gt;IntoIterator&lt;/code&gt;&lt;/a&gt; (implemented for &lt;code&gt;&amp;amp;[T; N]&lt;/code&gt; and &lt;code&gt;&amp;amp;mut [T; N]&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6c0501fb4aa54a6f7f0f48b77415b1c11f7d66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;linkage&quot;&gt;&lt;code&gt;crate_type&lt;/code&gt;&lt;/a&gt; &amp;mdash; Specifies the type of crate (library, executable, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aba1f47e922330c75203ba1661cc97ef7156b3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;loop-expr#loop-labels&quot;&gt;&lt;em&gt;LoopLabel&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt; (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6654e120a73ac348427bae718236ededfc86ab4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;loop-expr#predicate-pattern-loops&quot;&gt;&lt;em&gt;PredicatePatternLoopExpression&lt;/em&gt;&lt;/a&gt; :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac43291fd69e5aba83233cf7d161ce6b0aa3da76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;macros&quot;&gt;Macros&lt;/a&gt; or &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfcd340ae7cb1ab6d4c8de7800cf206553793878" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;macros&quot;&gt;Macros&lt;/a&gt; which expand to a type expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30c2bbc1111d799756819e847532b6f8416293c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;macros-by-example&quot;&gt;&lt;code&gt;macro_rules&lt;/code&gt;&lt;/a&gt; transcribers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154054aea05a08ffe156e929ded5818d295266d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;macros-by-example&quot;&gt;Macros by Example&lt;/a&gt; define new syntax in a higher-level, declarative way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a13b8402788f8deb5286b701b9909bbf7a4f1458" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;macros-by-example#path-based-scope&quot;&gt;&lt;code&gt;macro_export&lt;/code&gt;&lt;/a&gt; &amp;mdash; Exports a &lt;code&gt;macro_rules&lt;/code&gt; macro for cross-crate usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b570a8f60a0d508d11e5c7e339505f333ca94e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;macros-by-example#the-macro_use-attribute&quot;&gt;&lt;code&gt;macro_use&lt;/code&gt;&lt;/a&gt; &amp;mdash; Expands macro visibility, or imports macros from other crates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6980e555103ba6920d7e99108c905b836dc772" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt; (note that &lt;code&gt;&amp;amp;T&lt;/code&gt; references only get &lt;code&gt;Send&lt;/code&gt; if &lt;code&gt;T: Sync&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4a03248e0ff38c18f752e229f07917f93faca4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mpsc/index&quot;&gt;&lt;code&gt;mpsc&lt;/code&gt;&lt;/a&gt;: Multi-producer, single-consumer queues, used for message-based communication. Can provide a lightweight inter-thread synchronisation mechanism, at the cost of some extra memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abddd90cc1404e07076add7d033cdf571138c162" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ops/trait.fn&quot;&gt;&lt;code&gt;Fn&lt;/code&gt;&lt;/a&gt; (in addition, &lt;code&gt;&amp;amp;T&lt;/code&gt; references get &lt;a href=&quot;ops/trait.fnmut&quot;&gt;&lt;code&gt;FnMut&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;ops/trait.fnonce&quot;&gt;&lt;code&gt;FnOnce&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;T: Fn&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ebaaf5bbb40fd032053f1df02c81ebe225b94f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ops/trait.fnmut&quot;&gt;&lt;code&gt;FnMut&lt;/code&gt;&lt;/a&gt; (in addition, &lt;code&gt;&amp;amp;mut T&lt;/code&gt; references get &lt;a href=&quot;ops/trait.fnonce&quot;&gt;&lt;code&gt;FnOnce&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;T: FnMut&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afec7c0a1b39e814154e86a66490fe1af1c31c80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TupleStructItems&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TupleStructItems&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a5a0c5e54df07cdcac04bee1a7b6b571324c460" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;{&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;paths#paths-in-expressions&quot;&gt;&lt;em&gt;PathInExpression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ad639ccd8219905bbd8e52c69df38d0a2c86f3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;paths#paths-in-types&quot;&gt;Type paths&lt;/a&gt; which can reference:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e5a78e784aa25cf9f5aaf86807a1622c527c30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;paths#self-1&quot;&gt;&lt;code&gt;Self&lt;/code&gt; path&lt;/a&gt; where &lt;code&gt;Self&lt;/code&gt; is the implementing type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc11ebaac2b6b5932df95fb943abd225fd75bcc6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;paths#simple-paths&quot;&gt;&lt;em&gt;SimplePath&lt;/em&gt;&lt;/a&gt;&lt;code&gt;!&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TokenTree&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;paths#simple-paths&quot;&gt;&lt;em&gt;SimplePath&lt;/em&gt;&lt;/a&gt;&lt;code&gt;!&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;TokenTree&lt;/em&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd310ef551bc52e773db86329ba78a524e2ccf38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;paths#simple-paths&quot;&gt;&lt;em&gt;SimplePath&lt;/em&gt;&lt;/a&gt;&lt;code&gt;!&lt;/code&gt;&lt;em&gt;DelimTokenTree&lt;/em&gt;</source>
          <target state="translated">&lt;a href=&quot;paths#simple-paths&quot;&gt;&lt;em&gt;SimplePath&lt;/em&gt;&lt;/a&gt;&lt;code&gt;!&lt;/code&gt;&lt;em&gt;DelimTokenTree&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="47d1194f57c527640a924622f9fb7d64fc4963d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;paths#simple-paths&quot;&gt;&lt;em&gt;SimplePath&lt;/em&gt;&lt;/a&gt;&lt;em&gt;AttrInput&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;paths#simple-paths&quot;&gt;&lt;em&gt;SimplePath&lt;/em&gt;&lt;/a&gt;&lt;em&gt;AttrInput&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="36b5a86fe668d800d97f0d34aad1d6f554607c78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;patterns#path-patterns&quot;&gt;Path patterns&lt;/a&gt; take precedence over identifier patterns. It is an error if &lt;code&gt;ref&lt;/code&gt; or &lt;code&gt;ref mut&lt;/code&gt; is specified and the identifier shadows a constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1739d0c5ad930b7083a5e78b0cd193ab9494d39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt; ( &lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt; )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fab4f00c6ae5532d2c16535237ba9656f393bcd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;&lt;code&gt;,&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;&lt;code&gt;,&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="89cbbbc41ef53f933ff42c8bba039e7b685a4fb8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;patterns#wildcard-pattern&quot;&gt;Wildcard patterns&lt;/a&gt;, &lt;a href=&quot;types/inferred&quot;&gt;Inferred types&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30deea66c8cca3e3a69cf9e837838dfb416c1fbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;primitive.array&quot;&gt;&lt;code&gt;[T; n]&lt;/code&gt;&lt;/a&gt; - An inline &lt;em&gt;array&lt;/em&gt; with a fixed size at compile time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e582a0c5735e9817a9220ff5e9e9a649c61f1281" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;primitive.slice&quot;&gt;&lt;code&gt;[T]&lt;/code&gt;&lt;/a&gt; - A dynamically sized &lt;em&gt;slice&lt;/em&gt; into any other kind of contiguous storage, whether heap-allocated or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d767fd17eca43145b1f0fc53cf3940d8792793" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, a UTF-8 string slice, is a primitive type, and the standard library defines many methods for it. Rust &lt;a href=&quot;primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;s are typically accessed as immutable references: &lt;code&gt;&amp;amp;str&lt;/code&gt;. Use the owned &lt;a href=&quot;string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; for building and mutating strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d9e762e7e2501255b4f13559d18e58e185dd0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;procedural-macros&quot;&gt;Procedural Macros&lt;/a&gt; can be used to implement custom derive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7320d1b24ab4c887e8aca79321aeb56e7936f36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;procedural-macros#attribute-macros&quot;&gt;&lt;code&gt;proc_macro_attribute&lt;/code&gt;&lt;/a&gt; &amp;mdash; Defines an attribute macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225194e26ac20a7b1f7f9affe1619a19a6ce4127" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;procedural-macros#attribute-macros&quot;&gt;Attribute macros&lt;/a&gt; - &lt;code&gt;#[CustomAttribute]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d8eefecfea32a73e72d5097e4c3c41a35ca1ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;procedural-macros#derive-macros&quot;&gt;&lt;code&gt;proc_macro_derive&lt;/code&gt;&lt;/a&gt; &amp;mdash; Defines a derive macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee98c872c5e51fb418598b01ccfe94739fb918b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;procedural-macros#derive-macros&quot;&gt;Derive macros&lt;/a&gt; - &lt;code&gt;#[derive(CustomDerive)]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827b45e545af309dd671e94187bc79cc0a582a6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;procedural-macros#function-like-procedural-macros&quot;&gt;&lt;code&gt;proc_macro&lt;/code&gt;&lt;/a&gt; &amp;mdash; Defines a function-like macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af436723c5d7cc340ba20b89af0085ca4fd2b4af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;procedural-macros#function-like-procedural-macros&quot;&gt;Function-like macros&lt;/a&gt; - &lt;code&gt;custom!(...)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67726874a2ed57230f97981107733a5d430a379" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;result/enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; enum is often a better solution for recovering from errors than using the &lt;code&gt;panic!&lt;/code&gt; macro. This macro should be used to avoid proceeding using incorrect values, such as from external sources. Detailed information about error handling is found in the &lt;a href=&quot;../book/ch09-00-error-handling&quot;&gt;book&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b6bc084c8419f153ffccaa3d3c5e3fc2190f5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;runtime#the-global_allocator-attribute&quot;&gt;&lt;code&gt;global_allocator&lt;/code&gt;&lt;/a&gt; &amp;mdash; Sets the global memory allocator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e330ad0e3e5ba4e7b9192c79f3a96f1db85710d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;runtime#the-panic_handler-attribute&quot;&gt;&lt;code&gt;panic_handler&lt;/code&gt;&lt;/a&gt; &amp;mdash; Sets the function to handle panics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86f133834a42385f10dbc96b1518a3536e534c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;runtime#the-windows_subsystem-attribute&quot;&gt;&lt;code&gt;windows_subsystem&lt;/code&gt;&lt;/a&gt; &amp;mdash; Specifies the windows subsystem to link with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="401da5c6ee74f3826a70733d4d6529c72e27f6a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;statements#let-statements&quot;&gt;let statements&lt;/a&gt; and thus irrefutable &lt;a href=&quot;patterns&quot;&gt;patterns&lt;/a&gt;, with the caveat that until &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;match&lt;/code&gt; are implemented, one cannot use both short circuiting operators (&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt;) and let statements within the same constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e43a479fe82dbebebd56caa97d66ab13860db1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;std/marker/struct.phantomdata&quot;&gt;PhantomData&lt;/a&gt; can also be used to express information about unused type parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf767954dafe316a2a5251a40948e6f28f78ae79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;: Atomically Reference-Counted pointer, which can be used in multithreaded environments to prolong the lifetime of some data until all the threads have finished using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390608029bc7b08de142531926a19016b2498d6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.barrier&quot;&gt;&lt;code&gt;Barrier&lt;/code&gt;&lt;/a&gt;: Ensures multiple threads will wait for each other to reach a point in the program, before continuing execution all together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc239818d90fa808d27bf2f22361d1ac7b9d426" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.bufwriter&quot;&gt;&lt;code&gt;BufWriter&lt;/code&gt;&lt;/a&gt; doesn't add any new ways of writing; it just buffers every call to &lt;a href=&quot;trait.write#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b52814b791b18c0e51a807b42bce4fc058da150" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.builder#method.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;: specifies an &lt;a href=&quot;index#naming-threads&quot;&gt;associated name for the thread&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac884809201a9a2a859a437d0697b4bd7a7ca106" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.builder#method.stack_size&quot;&gt;&lt;code&gt;stack_size&lt;/code&gt;&lt;/a&gt;: specifies the &lt;a href=&quot;index#stack-size&quot;&gt;desired stack size for the thread&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24bf1f6126b1d750d01bf383aafff0d91e15c91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.condvar&quot;&gt;&lt;code&gt;Condvar&lt;/code&gt;&lt;/a&gt;: Condition Variable, providing the ability to block a thread while waiting for an event to occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7bb16808bcb523cb261a88b42717028179a5861" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt; are useful when you need to transfer UTF-8 strings to and from languages with a C ABI, like Python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509e32659b29ae0babe3140fae71c0f71b498b16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.cursor&quot;&gt;&lt;code&gt;std::io::Cursor&lt;/code&gt;&lt;/a&gt; is a type that implements &lt;code&gt;BufRead&lt;/code&gt;. In this example, we use &lt;a href=&quot;struct.cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; to iterate over all hyphen delimited segments in a byte slice</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3894b1ba25704de5b115f6be87043434c2a6e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.cursor&quot;&gt;&lt;code&gt;std::io::Cursor&lt;/code&gt;&lt;/a&gt; is a type that implements &lt;code&gt;BufRead&lt;/code&gt;. In this example, we use &lt;a href=&quot;struct.cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; to iterate over all the lines in a byte slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc78f5ebd146bece3a5740d70ddb1b98667e2bbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.cursor&quot;&gt;&lt;code&gt;std::io::Cursor&lt;/code&gt;&lt;/a&gt; is a type that implements &lt;code&gt;BufRead&lt;/code&gt;. In this example, we use &lt;a href=&quot;struct.cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; to read all the bytes in a byte slice in hyphen delimited segments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e164affff88c7827a7ab75755aeaa9d1b010b5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.cursor&quot;&gt;&lt;code&gt;std::io::Cursor&lt;/code&gt;&lt;/a&gt; is a type that implements &lt;code&gt;BufRead&lt;/code&gt;. In this example, we use &lt;a href=&quot;struct.cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; to read all the lines in a byte slice:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f27e6a3a08b5acb7535ce32721d7ec5c66cbc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.mutex&quot;&gt;&lt;code&gt;Mutex&lt;/code&gt;&lt;/a&gt;: Mutual Exclusion mechanism, which ensures that at most one thread at a time is able to access some data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4e2e908eddc92de7f9b27df9e09e222ef0f42b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.once&quot;&gt;&lt;code&gt;Once&lt;/code&gt;&lt;/a&gt;: Used for thread-safe, one-time initialization of a global variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1446ad2ad0e3b3c9b03ec3f1a45814d1ef8f0681" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; represents a borrowed reference to a string in a format that can be passed to the operating system. It can be converted into an UTF-8 Rust string slice in a similar way to &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3b5429613314310ebb33c6bcbb645dfef1d761" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; are useful when you need to transfer strings to and from the operating system itself, or when capturing the output of external commands. Conversions between &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; and Rust strings work similarly to those for &lt;a href=&quot;struct.cstring&quot;&gt;&lt;code&gt;CString&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96cba1d687566a24f6682b9e47b76ea384aca027" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; represents an owned string in whatever representation the operating system prefers. In the Rust standard library, various APIs that transfer strings to/from the operating system use &lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt; instead of plain strings. For example, &lt;a href=&quot;../env/fn.var_os&quot;&gt;&lt;code&gt;env::var_os()&lt;/code&gt;&lt;/a&gt; is used to query environment variables; it returns an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;. If the environment variable exists you will get a &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt;&lt;code&gt;Some&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(os_string)&lt;/code&gt;, which you can &lt;em&gt;then&lt;/em&gt; try to convert to a Rust string. This yields a &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&amp;lt;&amp;gt;&lt;/code&gt;&lt;/a&gt;, so that your code can detect errors in case the environment variable did not in fact contain valid Unicode data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ecae49ccef82ba6eb19161c8b875fad2866ebab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt;&lt;/a&gt; can be used to wrap any pointer type &lt;code&gt;P&lt;/code&gt;, and as such it interacts with &lt;a href=&quot;../ops/trait.deref&quot;&gt;&lt;code&gt;Deref&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ops/trait.derefmut&quot;&gt;&lt;code&gt;DerefMut&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt; where &lt;code&gt;P: Deref&lt;/code&gt; should be considered as a &quot;&lt;code&gt;P&lt;/code&gt;-style pointer&quot; to a pinned &lt;code&gt;P::Target&lt;/code&gt; -- so, a &lt;code&gt;Pin&amp;lt;Box&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; is an owned pointer to a pinned &lt;code&gt;T&lt;/code&gt;, and a &lt;code&gt;Pin&amp;lt;Rc&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; is a reference-counted pointer to a pinned &lt;code&gt;T&lt;/code&gt;. For correctness, &lt;a href=&quot;struct.pin&quot;&gt;&lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt;&lt;/a&gt; relies on the implementations of &lt;a href=&quot;../ops/trait.deref&quot;&gt;&lt;code&gt;Deref&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ops/trait.derefmut&quot;&gt;&lt;code&gt;DerefMut&lt;/code&gt;&lt;/a&gt; not to move out of their &lt;code&gt;self&lt;/code&gt; parameter, and only ever to return a pointer to pinned data when they are called on a pinned pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef8d63eac317d59c19780ae038dcbba67df8cf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt; uses non-atomic reference counting. This means that overhead is very low, but an &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt; cannot be sent between threads, and consequently &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt; does not implement &lt;a href=&quot;../marker/trait.send&quot;&gt;&lt;code&gt;Send&lt;/code&gt;&lt;/a&gt;. As a result, the Rust compiler will check &lt;em&gt;at compile time&lt;/em&gt; that you are not sending &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;s between threads. If you need multi-threaded, atomic reference counting, use &lt;a href=&quot;../sync/struct.arc&quot;&gt;&lt;code&gt;sync::Arc&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68531d987caaca3380b63209d6415f30199d6c63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.rwlock&quot;&gt;&lt;code&gt;RwLock&lt;/code&gt;&lt;/a&gt;: Provides a mutual exclusion mechanism which allows multiple readers at the same time, while allowing only one writer at a time. In some cases, this can be more efficient than a mutex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79da93070b5a2cfb22b9f9cb48a21c8908460f3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.socketaddrv4&quot;&gt;&lt;code&gt;SocketAddrV4&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.socketaddrv6&quot;&gt;&lt;code&gt;SocketAddrV6&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;enum.ipaddr&quot;&gt;&lt;code&gt;IpAddr&lt;/code&gt;&lt;/a&gt;&lt;code&gt;, &lt;/code&gt;&lt;a href=&quot;../primitive.u16&quot;&gt;&lt;code&gt;u16&lt;/code&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;struct.ipv4addr&quot;&gt;&lt;code&gt;Ipv4Addr&lt;/code&gt;&lt;/a&gt;&lt;code&gt;, &lt;/code&gt;&lt;a href=&quot;../primitive.u16&quot;&gt;&lt;code&gt;u16&lt;/code&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;struct.ipv6addr&quot;&gt;&lt;code&gt;Ipv6Addr&lt;/code&gt;&lt;/a&gt;&lt;code&gt;, &lt;/code&gt;&lt;a href=&quot;../primitive.u16&quot;&gt;&lt;code&gt;u16&lt;/code&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;: &lt;a href=&quot;#tymethod.to_socket_addrs&quot;&gt;&lt;code&gt;to_socket_addrs&lt;/code&gt;&lt;/a&gt; constructs a &lt;a href=&quot;enum.socketaddr&quot;&gt;&lt;code&gt;SocketAddr&lt;/code&gt;&lt;/a&gt; trivially.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b5b418150a0d67abf886801563e17f4c6bb332" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.syncsender#method.send&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt; will block if there is no space in the internal buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f025af56c7b84e745630f984d6c789a366c1a7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.tcplistener&quot;&gt;&lt;code&gt;TcpListener&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.tcpstream&quot;&gt;&lt;code&gt;TcpStream&lt;/code&gt;&lt;/a&gt; provide functionality for communication over TCP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c107761cfe786e1b4e3c2a5b4f4ca4f3b6d8a72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.tcpstream#method.connect&quot;&gt;&lt;code&gt;TcpStream::connect&lt;/code&gt;&lt;/a&gt; is an example of an function that utilizes &lt;code&gt;ToSocketAddrs&lt;/code&gt; as a trait bound on its parameter in order to accept different types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e38ea33a4f702f65a71eeedce07e9846be42c43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.udpsocket&quot;&gt;&lt;code&gt;UdpSocket&lt;/code&gt;&lt;/a&gt; provides functionality for communication over UDP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26301c2082db64cb0486f70a68a2f2c52d3c8d6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.vec#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.vec#method.insert&quot;&gt;&lt;code&gt;insert&lt;/code&gt;&lt;/a&gt; will never (re)allocate if the reported capacity is sufficient. &lt;a href=&quot;struct.vec#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;struct.vec#method.insert&quot;&gt;&lt;code&gt;insert&lt;/code&gt;&lt;/a&gt;&lt;em&gt;will&lt;/em&gt; (re)allocate if &lt;a href=&quot;struct.vec#method.len&quot;&gt;&lt;code&gt;len&lt;/code&gt;&lt;/a&gt;&lt;code&gt;==&lt;/code&gt;&lt;a href=&quot;struct.vec#method.capacity&quot;&gt;&lt;code&gt;capacity&lt;/code&gt;&lt;/a&gt;. That is, the reported capacity is completely accurate, and can be relied on. It can even be used to manually free the memory allocated by a &lt;code&gt;Vec&lt;/code&gt; if desired. Bulk insertion methods &lt;em&gt;may&lt;/em&gt; reallocate, even when not necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e376ed3679217ac877a2a91fde93dee7f60e42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.weak&quot;&gt;&lt;code&gt;Weak&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; does not auto-dereference to &lt;code&gt;T&lt;/code&gt;, because the value may have already been destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd88152624743e35b1964213af35ea6cc403183" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;struct.weak&quot;&gt;&lt;code&gt;Weak&lt;/code&gt;&lt;/a&gt; pointers will be dissassociated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8474170cccc561a208eff31dbd3c2622df94e172" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tokens&quot;&gt;&lt;em&gt;Token&lt;/em&gt;&lt;/a&gt;&lt;sub&gt;&lt;em&gt;except $ and delimiters&lt;/em&gt;&lt;/sub&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78df0429a478e599578dac67383cc0e633032713" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tokens&quot;&gt;&lt;em&gt;Token&lt;/em&gt;&lt;/a&gt;&lt;sub&gt;&lt;em&gt;except &lt;a href=&quot;tokens#delimiters&quot;&gt;delimiters&lt;/a&gt;&lt;/em&gt;&lt;/sub&gt; | &lt;em&gt;DelimTokenTree&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569530623cea4a961af6b44af2e6728533d4cfcc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tokens&quot;&gt;&lt;em&gt;Token&lt;/em&gt;&lt;/a&gt;&lt;sub&gt;&lt;em&gt;except delimiters and repetition operators&lt;/em&gt;&lt;/sub&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf642792dd2478177c9a8fd650f1d0b5cf4af18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tokens#integer-literals&quot;&gt;TUPLE_INDEX&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;tokens#integer-literals&quot;&gt;TUPLE_INDEX&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ef0784c99c4cc043c5efa9e908b04386cf36dcb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tokens#number-literals&quot;&gt;Number literals&lt;/a&gt;&lt;code&gt;*&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d458c63c4de773dc34b571f6660dedc442d5974" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tokens#quote-escapes&quot;&gt;Quote&lt;/a&gt; &amp;amp; &lt;a href=&quot;tokens#ascii-escapes&quot;&gt;ASCII&lt;/a&gt; &amp;amp; &lt;a href=&quot;tokens#unicode-escapes&quot;&gt;Unicode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfa3ddfd6a08e5ca3fe537bcd53c1a5b0468130" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tokens#quote-escapes&quot;&gt;Quote&lt;/a&gt; &amp;amp; &lt;a href=&quot;tokens#byte-escapes&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23ab0cf3743638e20037ec260d5972243513faa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;trait-bounds&quot;&gt;&lt;em&gt;Lifetime&lt;/em&gt;&lt;/a&gt; (&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;trait-bounds&quot;&gt;&lt;em&gt;Lifetime&lt;/em&gt;&lt;/a&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91adde0f669c1b2c5e8dbb63555c05464b57de7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;trait.asref&quot;&gt;&lt;code&gt;AsRef&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.asmut&quot;&gt;&lt;code&gt;AsMut&lt;/code&gt;&lt;/a&gt; auto-dereference if the inner type is a reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc87f2a975353ccfb0ee017aaa48f9352ac83767" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;trait.bufread&quot;&gt;&lt;code&gt;BufRead&lt;/code&gt;&lt;/a&gt; uses an internal buffer to provide a number of other ways to read, but to show it off, we'll need to talk about buffers in general. Keep reading!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c533297ec97ed062c9533a8eb3fc4c4abdaf9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;trait.debug&quot;&gt;&lt;code&gt;fmt::Debug&lt;/code&gt;&lt;/a&gt; implementations should be implemented for &lt;strong&gt;all&lt;/strong&gt; public types. Output will typically represent the internal state as faithfully as possible. The purpose of the &lt;a href=&quot;trait.debug&quot;&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/a&gt; trait is to facilitate debugging Rust code. In most cases, using &lt;code&gt;#[derive(Debug)]&lt;/code&gt; is sufficient and recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b955902223591809e8ee26da507b4ad3707bb56b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;trait.display&quot;&gt;&lt;code&gt;fmt::Display&lt;/code&gt;&lt;/a&gt; implementations assert that the type can be faithfully represented as a UTF-8 string at all times. It is &lt;strong&gt;not&lt;/strong&gt; expected that all types implement the &lt;a href=&quot;trait.display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt; trait.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa5a97759554305a98836b57744c58e7ba395c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;trait.from&quot;&gt;&lt;code&gt;From&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.into&quot;&gt;&lt;code&gt;Into&lt;/code&gt;&lt;/a&gt; are reflexive, which means that all types can &lt;code&gt;into&lt;/code&gt; themselves and &lt;code&gt;from&lt;/code&gt; themselves</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e0a87c0643962a081da09006cf1bc1bda5016e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;trait.from&quot;&gt;&lt;code&gt;From&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt; for U&lt;/code&gt; implies &lt;code&gt;Into&amp;lt;U&amp;gt; for T&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327c8d6d5e9bc2c6e066945885ec2362b09147cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;trait.from&quot;&gt;&lt;code&gt;From&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;U&amp;gt; for T&lt;/code&gt; implies &lt;a href=&quot;trait.into&quot;&gt;&lt;code&gt;Into&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt; for U&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf98e3979d8c10cee5c0704b4220b943565a51b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;trait.into&quot;&gt;&lt;code&gt;Into&lt;/code&gt;&lt;/a&gt; is reflexive, which means that &lt;code&gt;Into&amp;lt;T&amp;gt; for T&lt;/code&gt; is implemented</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149618459c6e383f1111e36cb4564c42a6b713c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;'s full definition includes a number of other methods as well, but they are default methods, built on top of &lt;a href=&quot;trait.iterator#tymethod.next&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt;, and so you get them for free.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58704f9170ea74e5fe4239ddccec00b9563f736" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;trait.read&quot;&gt;&lt;code&gt;Read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;trait.write&quot;&gt;&lt;code&gt;Write&lt;/code&gt;&lt;/a&gt; are so important, implementors of the two traits have a nickname: readers and writers. So you'll sometimes see 'a reader' instead of 'a type that implements the &lt;a href=&quot;trait.read&quot;&gt;&lt;code&gt;Read&lt;/code&gt;&lt;/a&gt; trait'. Much easier!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84f734784dc16cbefee51eeecaaaf032fb3cc08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;trait.tosocketaddrs&quot;&gt;&lt;code&gt;ToSocketAddrs&lt;/code&gt;&lt;/a&gt; is a trait that used for generic address resolution when interacting with networking objects like &lt;a href=&quot;struct.tcplistener&quot;&gt;&lt;code&gt;TcpListener&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;struct.tcpstream&quot;&gt;&lt;code&gt;TcpStream&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;struct.udpsocket&quot;&gt;&lt;code&gt;UdpSocket&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d22cea74c33687814bfd9c5ffddce0108d543b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;trait.tryfrom&quot;&gt;&lt;code&gt;TryFrom&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;U&amp;gt; for T&lt;/code&gt; implies &lt;a href=&quot;trait.tryinto&quot;&gt;&lt;code&gt;TryInto&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt; for U&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e12ae9231c45e1331ea5ade5ea4063bca64df4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;trait.tryfrom#tymethod.try_from&quot;&gt;&lt;code&gt;try_from&lt;/code&gt;&lt;/a&gt; is reflexive, which means that &lt;code&gt;TryFrom&amp;lt;T&amp;gt; for T&lt;/code&gt; is implemented and cannot fail -- the associated &lt;code&gt;Error&lt;/code&gt; type for calling &lt;code&gt;T::try_from()&lt;/code&gt; on a value of type &lt;code&gt;T&lt;/code&gt; is &lt;code&gt;Infallible&lt;/code&gt;. When the &lt;code&gt;!&lt;/code&gt; type is stablized &lt;code&gt;Infallible&lt;/code&gt; and &lt;code&gt;!&lt;/code&gt; will be equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced4cd2b46d317e5da1d6bb0cda01a8273e6baaf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;traits&quot;&gt;trait&lt;/a&gt; implementations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6814137af3c63c870ccb872b97c41fc4692fa2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;traits#unsafe-traits&quot;&gt;Unsafe traits&lt;/a&gt; require the trait implementation to begin with the &lt;code&gt;unsafe&lt;/code&gt; keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381c8a4d5d2b5c2156876097dfc3a38d493c15fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;type-layout#representations&quot;&gt;&lt;code&gt;repr&lt;/code&gt;&lt;/a&gt; &amp;mdash; Controls type layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7185d4475e67cca8dd73a197344abbfb70d376" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;type-layout#size-and-alignment&quot;&gt;More&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;type-layout#size-and-alignment&quot;&gt;More&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="993b14f4c25b05cce5149e66b8cbd17ee623c0f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;types#parenthesized-types&quot;&gt;Parentheses&lt;/a&gt; which are used for disambiguation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d026de6688a5156ae6b7ab9d678c8c4752c8ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt; (&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;)&lt;sup&gt;*&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="258c0aad0758b539029245a626e546675086e2f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt; (&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a6d960f85f28674b9fba9dae706d74719b69e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;types/array&quot;&gt;Arrays&lt;/a&gt; of &lt;code&gt;Clone&lt;/code&gt; types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad249ff08808ecbde3200c9b639f4977626feac3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;types/array&quot;&gt;Arrays&lt;/a&gt; of &lt;code&gt;Copy&lt;/code&gt; types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1686daaa96dd1b7e4ac485d8364ffc8afaa87176" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;types/boolean&quot;&gt;Boolean&lt;/a&gt; &amp;mdash; &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9962e0f3172fba55b5ccabe2e4fee8c11f52bbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;types/function-pointer&quot;&gt;Function pointers&lt;/a&gt; and &lt;a href=&quot;types/function-item&quot;&gt;function item types&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32706a953e9ac3bb92dc0a0707f9d1d97d7425ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;types/never&quot;&gt;Never&lt;/a&gt; &amp;mdash; &lt;code&gt;!&lt;/code&gt; &amp;mdash; a type with no values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29eb0a3ddf60be612cf43fff1595dd3fb2e9921a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;types/numeric&quot;&gt;Numeric&lt;/a&gt; &amp;mdash; integer and float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d614c34c70272f5c894063965b82575dbf9ccc98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;types/pointer&quot;&gt;Pointer types&lt;/a&gt; to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6fa6eb76031ec2c8571117cffc8bdd99da527e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;types/textual&quot;&gt;Textual&lt;/a&gt; &amp;mdash; &lt;code&gt;char&lt;/code&gt; and &lt;code&gt;str&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5540e548196aab08c719f82d57ece7254257e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;types/trait-object&quot;&gt;Trait objects&lt;/a&gt; run the destructor of the underlying type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a987ce673bb708622c0cda6692946d3eda16a0ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;types/tuple&quot;&gt;Tuples&lt;/a&gt; of &lt;code&gt;Clone&lt;/code&gt; types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0b5e6b415df3d9bedb321d45a2a829ee601555" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;types/tuple&quot;&gt;Tuples&lt;/a&gt; of &lt;code&gt;Copy&lt;/code&gt; types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4acd29b27aacf9e335eca730057a9cced34484c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;variables&quot;&gt;Variables&lt;/a&gt; and function parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b255ff769278947ea60f67eaccaaa3fb213d1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;variables&quot;&gt;Variables&lt;/a&gt; which are not currently borrowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac5317be805c678692e74dad08b81576c1927c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;vec/index&quot;&gt;&lt;code&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; - A heap-allocated &lt;em&gt;vector&lt;/em&gt; that is resizable at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d908c3a9b58f401043efe2b98dc305a307bc8386" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;visibility-and-privacy&quot;&gt;&lt;em&gt;Visibility&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;a href=&quot;visibility-and-privacy&quot;&gt;&lt;em&gt;Visibility&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="544e8cde33e07399fd2566cfe96d0e53b926956c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;-bindings&quot;&gt;@&lt;/code&gt; Bindings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede25c10ae2dc3ce363abff1ac66f945ca3dd3bd" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;BROADCAST.v&quot;&gt;pub const &lt;a href=&quot;#associatedconstant.BROADCAST&quot;&gt;&lt;b&gt;BROADCAST&lt;/b&gt;&lt;/a&gt;: Self&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#383&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ac0d7a34c47b6a9e7d139f81b5fd2b647ba8af" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;FAILURE.v&quot;&gt;pub const &lt;a href=&quot;#associatedconstant.FAILURE&quot;&gt;&lt;b&gt;FAILURE&lt;/b&gt;&lt;/a&gt;: &lt;a href=&quot;struct.exitcode&quot;&gt;ExitCode&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#1273&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9427e152c4b00423ed6e8c89f81e603a345b5a0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;LOCALHOST.v&quot;&gt;pub const &lt;a href=&quot;#associatedconstant.LOCALHOST&quot;&gt;&lt;b&gt;LOCALHOST&lt;/b&gt;&lt;/a&gt;: Self&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#1066&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5014908d6bba7b7779928b35503f0a3bec63d291" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;LOCALHOST.v&quot;&gt;pub const &lt;a href=&quot;#associatedconstant.LOCALHOST&quot;&gt;&lt;b&gt;LOCALHOST&lt;/b&gt;&lt;/a&gt;: Self&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#357&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220eeca47ea62b58dc95e889be858641bd6609fa" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;MICROSECOND.v&quot;&gt;pub const &lt;a href=&quot;#associatedconstant.MICROSECOND&quot;&gt;&lt;b&gt;MICROSECOND&lt;/b&gt;&lt;/a&gt;: &lt;a href=&quot;struct.duration&quot;&gt;Duration&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/time.rs.html#98&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab4465ef4ec14bbc343a46053675b081167e4b9" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;MILLISECOND.v&quot;&gt;pub const &lt;a href=&quot;#associatedconstant.MILLISECOND&quot;&gt;&lt;b&gt;MILLISECOND&lt;/b&gt;&lt;/a&gt;: &lt;a href=&quot;struct.duration&quot;&gt;Duration&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/time.rs.html#85&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9f896e715cc6aa3ec88bd9936b9a5630947a58" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;NANOSECOND.v&quot;&gt;pub const &lt;a href=&quot;#associatedconstant.NANOSECOND&quot;&gt;&lt;b&gt;NANOSECOND&lt;/b&gt;&lt;/a&gt;: &lt;a href=&quot;struct.duration&quot;&gt;Duration&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/time.rs.html#111&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea714cc08eecc6ba7981736534cd1510f2c5fbe3" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;Output.t&quot;&gt;type &lt;a href=&quot;#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;1.12.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c09690e7c534980d8a982ddf3ff0033db48c43" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;SECOND.v&quot;&gt;pub const &lt;a href=&quot;#associatedconstant.SECOND&quot;&gt;&lt;b&gt;SECOND&lt;/b&gt;&lt;/a&gt;: &lt;a href=&quot;struct.duration&quot;&gt;Duration&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/time.rs.html#72&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a464b43d299c3a8a8027c724fa0f07e4c8dc61" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;SUCCESS.v&quot;&gt;pub const &lt;a href=&quot;#associatedconstant.SUCCESS&quot;&gt;&lt;b&gt;SUCCESS&lt;/b&gt;&lt;/a&gt;: &lt;a href=&quot;struct.exitcode&quot;&gt;ExitCode&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#1265&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bab8609573f857107a67061012b5be5d20a9e5a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;UNIX_EPOCH.v&quot;&gt;pub const &lt;a href=&quot;#associatedconstant.UNIX_EPOCH&quot;&gt;&lt;b&gt;UNIX_EPOCH&lt;/b&gt;&lt;/a&gt;: &lt;a href=&quot;struct.systemtime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#378&quot;&gt;[src]&lt;/a&gt;1.28.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df6566e579c5d01d8a1b7be34cc164d8bb757c5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;UNSPECIFIED.v&quot;&gt;pub const &lt;a href=&quot;#associatedconstant.UNSPECIFIED&quot;&gt;&lt;b&gt;UNSPECIFIED&lt;/b&gt;&lt;/a&gt;: Self&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#1079&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242799bba5cd669c6ce09d1e6bf0f378f30d517c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;UNSPECIFIED.v&quot;&gt;pub const &lt;a href=&quot;#associatedconstant.UNSPECIFIED&quot;&gt;&lt;b&gt;UNSPECIFIED&lt;/b&gt;&lt;/a&gt;: Self&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#370&quot;&gt;[src]&lt;/a&gt;1.30.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bbd3cb8129fd30dee68f12793220a21efa84201" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;abs.v&quot;&gt;pub fn &lt;a href=&quot;#method.abs&quot;&gt;abs&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#163-165&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39d3ec1cebe73f2477ea4476ec9faeacc2d9e340" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;abs.v&quot;&gt;pub fn &lt;a href=&quot;#method.abs&quot;&gt;abs&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#141-143&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66de88da47c06a6006123ed8d44cddf78d17c6da" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;abs.v&quot;&gt;pub fn &lt;a href=&quot;#method.abs&quot;&gt;abs&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1966-1975&quot;&gt;[src]&lt;/a&gt;1.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c01cfb65b14f668d5517359cfa67edfd0794fe0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;abs.v&quot;&gt;pub fn &lt;a href=&quot;#method.abs&quot;&gt;abs&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1966-1975&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4a867123b6873a276efb6876b233ecccdb37f6" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;abs.v&quot;&gt;pub fn &lt;a href=&quot;#method.abs&quot;&gt;abs&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1966-1975&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b991c1a6f23dbdbf58b1d5b253a919b0898643ab" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;abs.v&quot;&gt;pub fn &lt;a href=&quot;#method.abs&quot;&gt;abs&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1966-1975&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb6d78d52c739f9abd449095cce2de61fe3b1a0a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;abs.v&quot;&gt;pub fn &lt;a href=&quot;#method.abs&quot;&gt;abs&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1966-1975&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96fe734ec64797f61a64296631f4a7919b6e2c8d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;abs.v&quot;&gt;pub fn &lt;a href=&quot;#method.abs&quot;&gt;abs&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#1966-1975&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7083c8f27e9e48e4503de9c7bd436a9e0efd234e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;abs.v&quot;&gt;pub fn &lt;a href=&quot;#method.abs&quot;&gt;abs&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#731-733&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a25cf24b2de2c229b4659b523b4a69f0934dc8c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;abs.v-1&quot;&gt;pub fn &lt;a href=&quot;#method.abs-1&quot;&gt;abs&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#731-733&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1ec9c10a005e78537f7620fd4456bdd371bc6f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;abs.v-2&quot;&gt;pub fn &lt;a href=&quot;#method.abs-2&quot;&gt;abs&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#731-733&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92315cdd9b1851a7826af1129d6866568816b942" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;abs.v-3&quot;&gt;pub fn &lt;a href=&quot;#method.abs-3&quot;&gt;abs&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#731-733&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf039993b37dafeadf9e49aa31c67e360d62b92e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;abs.v-4&quot;&gt;pub fn &lt;a href=&quot;#method.abs-4&quot;&gt;abs&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#731-733&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc343f74ed487030866bcab9f21a734d1737825" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;abs.v-5&quot;&gt;pub fn &lt;a href=&quot;#method.abs-5&quot;&gt;abs&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/wrapping.rs.html#731-733&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80404e6818acb150e8baeb05dea57b14c6e97e6e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;abs_sub.v&quot;&gt;pub fn &lt;a href=&quot;#method.abs_sub&quot;&gt;abs_sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#552-554&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d076aa589c5a874b6c92729507541efb2f33028" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;abs_sub.v&quot;&gt;pub fn &lt;a href=&quot;#method.abs_sub&quot;&gt;abs_sub&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#493-495&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387992ed9be9803b6a02b94a38d861503e8c6970" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;accept.v&quot;&gt;pub fn &lt;a href=&quot;#method.accept&quot;&gt;accept&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../../../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;struct.unixstream&quot;&gt;UnixStream&lt;/a&gt;, &lt;a href=&quot;struct.socketaddr&quot;&gt;SocketAddr&lt;/a&gt;&lt;a href=&quot;../../../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#784-790&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e49841906f03179f464434b7547dbaa053f4f0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;accept.v&quot;&gt;pub fn &lt;a href=&quot;#method.accept&quot;&gt;accept&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.tuple&quot;&gt;(&lt;/a&gt;&lt;a href=&quot;struct.tcpstream&quot;&gt;TcpStream&lt;/a&gt;, &lt;a href=&quot;enum.socketaddr&quot;&gt;SocketAddr&lt;/a&gt;&lt;a href=&quot;../primitive.tuple&quot;&gt;)&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/tcp.rs.html#739-744&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e775dae84b76119c846522d481faab9866c76b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;access_mode.v&quot;&gt;fn &lt;a href=&quot;../os/windows/fs/trait.openoptionsext#tymethod.access_mode&quot;&gt;access_mode&lt;/a&gt;(&amp;amp;mut self, access: &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;amp;mut &lt;a href=&quot;struct.openoptions&quot;&gt;OpenOptions&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/fs.rs.html#267-269&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0566987cd63366256b26f3eeabaa2a603748ed01" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;access_mode.v-1&quot;&gt;fn &lt;a href=&quot;#method.access_mode&quot;&gt;access_mode&lt;/a&gt;(&amp;amp;mut self, access: &lt;a href=&quot;../../../primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;amp;mut &lt;a href=&quot;../../../fs/struct.openoptions&quot;&gt;OpenOptions&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/windows/ext/fs.rs.html#267-269&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9188607ff2c0143afdef3e11bd0baf7a1d22dd7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;accessed.v&quot;&gt;pub fn &lt;a href=&quot;#method.accessed&quot;&gt;accessed&lt;/a&gt;(&amp;amp;self) -&amp;gt; &lt;a href=&quot;../io/type.result&quot;&gt;Result&lt;/a&gt;&amp;lt;&lt;a href=&quot;../time/struct.systemtime&quot;&gt;SystemTime&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#1082-1084&quot;&gt;[src]&lt;/a&gt;1.10.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c10ea4d0774078e6451f94e8c5a7090ca052c440" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;acos.v&quot;&gt;pub fn &lt;a href=&quot;#method.acos&quot;&gt;acos&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#702-704&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1138b5b80180fcf8df4c9518906e5d7aa64c8ae1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;acos.v&quot;&gt;pub fn &lt;a href=&quot;#method.acos&quot;&gt;acos&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#631-633&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05362e07bb91d13ce5a9d67357396961e3c40bf3" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;acosh.v&quot;&gt;pub fn &lt;a href=&quot;#method.acosh&quot;&gt;acosh&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f32.rs.html#936-941&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01971021cc35b084a35e0093f26103aeeeba822" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;acosh.v&quot;&gt;pub fn &lt;a href=&quot;#method.acosh&quot;&gt;acosh&lt;/a&gt;(self) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/f64.rs.html#857-862&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa7c78688b84170df6e76e9f2b679d2e1945217" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;fn &lt;a href=&quot;../ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b96c199a7fb1891e101da88ef6bd0f79374875d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;fn &lt;a href=&quot;../ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, dur: &lt;a href=&quot;struct.duration&quot;&gt;Duration&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.systemtime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#484-487&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd642451bff3d0cc06ecb4749814e78156a9ce5d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;fn &lt;a href=&quot;../ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#1940-1943&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a652f519b6175964e89d0f8ae8dc908f1a435d2f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;fn &lt;a href=&quot;../ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;struct.duration&quot;&gt;Duration&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.instant&quot;&gt;Instant&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#311-314&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965272d7324226b9fc689f6ee49fe5f591df05fb" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;fn &lt;a href=&quot;../ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, rhs: &amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;enum.cow&quot;&gt;Cow&lt;/a&gt;&amp;lt;'a, &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&amp;amp;'a &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/borrow.rs.html#389-392&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d800c580910162a5990788c492220465678641" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;fn &lt;a href=&quot;../ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, rhs: &lt;a href=&quot;struct.duration&quot;&gt;Duration&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.duration&quot;&gt;Duration&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/time.rs.html#735-737&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34589cddacafa20de5b5e9eaae259edf15e8f94" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5330f966c53845285bf6b80d3cfcc9aeef8752" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827cb0d8d7a1265aad6b9d8c901c6563367c997a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579b6829215c2673c2b1caed776949038b5683e0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="970ff39bd28f8578131ef4d452d24819b002a10f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="631e4115c8f505211cdbcbd456ef5c81567a9de0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78013e92402827c496bf3c0eee087869af5ed40" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973892f69a8b42c783f5adb6065c5375fdad0e37" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f791040cb486982c69674efc544d39119cfabb" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34781c17d1b3a1122f0bdcbae52158f825e53a6" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4ec8c6f1e29ea23df5f5e17c9593ea57df9d5f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b3c43c0031db74167197737fd8083790e94b63" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19370b02c20db3f707f5732e59defb35ea7aed7" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e44b840dcdee11920c04dce7ed3e1f702a6c6f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ca39d6a0eaa47cb42e1d00004b7c7714c49959" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v&quot;&gt;pub unsafe fn &lt;a href=&quot;#method.add&quot;&gt;add&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*const T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mod.rs.html#1352-1356&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4278c1454defa52d060a0a9904f4139b979d6378" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-1&quot;&gt;fn &lt;a href=&quot;#method.add&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c7348472122c50571ccc8c33c501272e9175c4a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-1&quot;&gt;fn &lt;a href=&quot;../ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ffbf5fb76c32863fd9a066820c72c56bc75e11" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-1&quot;&gt;fn &lt;a href=&quot;../ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;struct.duration&quot;&gt;Duration&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;struct.instant&quot;&gt;Instant&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#311-314&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf727a394c2d8ebf18a10cf530796bd074dff24d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-1&quot;&gt;fn &lt;a href=&quot;../ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, rhs: &lt;a href=&quot;enum.cow&quot;&gt;Cow&lt;/a&gt;&amp;lt;'a, &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;enum.cow&quot;&gt;Cow&lt;/a&gt;&amp;lt;'a, &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.cow&quot;&gt;Cow&lt;/a&gt;&amp;lt;'a, &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/borrow.rs.html#400-403&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732700e8ad8037cbedb37cbf93eaf82fef8de4de" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-1&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.f64&quot;&gt;f64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c6195be43b1034f3d6e36a360e8619aa21bcd5" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-1&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d017fbc32db9700783b08e3d6b2ad2b6b39dd268" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-1&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23caf263094472d007c7de399430c674cc7935b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-1&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#44-46&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f90200e3430190df338e12a18c680b7235f58e" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-1&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6db0ebfb25ab84ba9a50fc964dc1eff53892f1c" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-1&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a333a27b5cfe27f07d70f8bb77ce1f67550525b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-1&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &amp;amp;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3deac8c11a16c9f71afc09a284de0eda75fbea1b" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-1&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.f32&quot;&gt;f32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918037995f0c94c6ece5e4eac717fdefc63f2729" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-1&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d88c8f5d038d81a851f7ea076bd704215d38f0" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-1&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7efca814044104dc53b8ff5fa820f5723744c4dc" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-1&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b12042aa0280b399a521fd7687e60d950828b6be" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-1&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82256c026315c33dfe57ff7ce1e67e02a2dd9c3a" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-1&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt; as &lt;a href=&quot;ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt;&amp;gt;::&lt;a href=&quot;ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e334f23b30a4614439aceda0f60e5915b01e60" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-1&quot;&gt;fn &lt;a href=&quot;ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cbd697e07ec7c1742c65b15be1f20d4663eba95" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-1&quot;&gt;pub unsafe fn &lt;a href=&quot;#method.add-1&quot;&gt;add&lt;/a&gt;(self, count: &lt;a href=&quot;primitive.usize&quot;&gt;usize&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;primitive.pointer&quot;&gt;*mut T&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ptr/mod.rs.html#2019-2023&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c86d991e4bc3b1ecb754ff5a942e63b23a9e84f" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-10&quot;&gt;fn &lt;a href=&quot;#method.add-9&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;) -&amp;gt; &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/arith.rs.html#100&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43cdaa55f26944fd5c6daa7dac11e02419fc78d" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-10&quot;&gt;fn &lt;a href=&quot;../ops/trait.add#tymethod.add&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &amp;amp;&lt;a href=&quot;struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;../ops/trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;../ops/trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#54-56&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769977d173a8d54e6e2e938d59f7e81cbd911583" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-100&quot;&gt;fn &lt;a href=&quot;#method.add-99&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a714fdb46092f00c8ca1a6a9b254c488cc03667" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-101&quot;&gt;fn &lt;a href=&quot;#method.add-100&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd71e663deb56a814da9efb52697b7b6f45bcac3" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-102&quot;&gt;fn &lt;a href=&quot;#method.add-101&quot;&gt;add&lt;/a&gt;(&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;self, &lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&lt;br/&gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4928ec7707f5a4fe6fb3f098be342994c77ed1" translate="yes" xml:space="preserve">
          <source>&lt;code id=&quot;add.v-103&quot;&gt;fn &lt;a href=&quot;#method.add-102&quot;&gt;add&lt;/a&gt;(self, other: &lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;) -&amp;gt; &amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt; as &lt;a href=&quot;trait.add&quot;&gt;Add&lt;/a&gt;&amp;lt;&lt;a href=&quot;../num/struct.wrapping&quot;&gt;Wrapping&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;::&lt;a href=&quot;trait.add#associatedtype.Output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/internal_macros.rs.html#34-36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
