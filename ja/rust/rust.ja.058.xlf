<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="ansible">
    <body>
      <group id="ansible">
        <trans-unit id="62a5a90afa5fbb53aff61b9a8c2fc3d66d83b35e" translate="yes" xml:space="preserve">
          <source>Only the last field of &lt;code&gt;Foo&lt;/code&gt; has a type involving &lt;code&gt;T&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa278176dd71a6e098f1078a99115e300d8910ce" translate="yes" xml:space="preserve">
          <source>Only the test with the name &lt;code&gt;one_hundred&lt;/code&gt; ran; the other two tests didn&amp;rsquo;t match that name. The test output lets us know we had more tests than what this command ran by displaying &lt;code&gt;2 filtered out&lt;/code&gt; at the end of the summary line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa9f253f7801e4d949e62ca0dcb20642b072d46" translate="yes" xml:space="preserve">
          <source>Only types implementing &lt;code&gt;std::ops::Deref&lt;/code&gt; can be dereferenced (such as &lt;code&gt;&amp;amp;T&lt;/code&gt;). Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7cee0492b998101b493b89f7410ea880e0f8c8" translate="yes" xml:space="preserve">
          <source>Only use the item in the scope it has been defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737047a48ebff11c2ae87259e8e12b5a0ea9f000" translate="yes" xml:space="preserve">
          <source>Opaque type representing the discriminant of an enum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba5a04eec7ab34d16390d75e26fc3fe98620cc4" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;Cargo.toml&lt;/em&gt; in your text editor of choice. It should look similar to the code in Listing 1-2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3dfe100cddab4329734c9e3ee2eed64968e7db" translate="yes" xml:space="preserve">
          <source>Open Source Developers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e593a95e08dd5f0164cac54edffcaa5d02e5a5e" translate="yes" xml:space="preserve">
          <source>Open a TCP connection to &lt;code&gt;127.0.0.1:8080&lt;/code&gt;. If the connection fails, open a TCP connection to &lt;code&gt;127.0.0.1:8081&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36758b7ca5d96a8abc3401009a4668433b033b74" translate="yes" xml:space="preserve">
          <source>Open a TCP connection to &lt;code&gt;127.0.0.1:8080&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c15f3ba1726083fcf5e460a4e8e6321cd0586e" translate="yes" xml:space="preserve">
          <source>Open a terminal and enter the following commands to make a &lt;em&gt;projects&lt;/em&gt; directory and a directory for the Hello, world! project within the &lt;em&gt;projects&lt;/em&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4eb537f2a91bae055600573be45de77a27b9ed7" translate="yes" xml:space="preserve">
          <source>Open locally installed documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84587cdad70cebf6217908dcf7d0133574192d78" translate="yes" xml:space="preserve">
          <source>Open your I/O project&amp;rsquo;s &lt;em&gt;src/main.rs&lt;/em&gt; file, which should look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa0399eaec8c7efbd5c34bb50abdda7465b3ccba" translate="yes" xml:space="preserve">
          <source>OpenOptions</source>
          <target state="translated">OpenOptions</target>
        </trans-unit>
        <trans-unit id="8de57f288f4a4084e69c7c4b2aa9da0a06b4257d" translate="yes" xml:space="preserve">
          <source>OpenOptions::access_mode</source>
          <target state="translated">OpenOptions::access_mode</target>
        </trans-unit>
        <trans-unit id="b67e2c499284523d04746aeea5c1bfc24b967904" translate="yes" xml:space="preserve">
          <source>OpenOptions::append</source>
          <target state="translated">OpenOptions::append</target>
        </trans-unit>
        <trans-unit id="32e358709483fecc1c34aed91a515c84a061da75" translate="yes" xml:space="preserve">
          <source>OpenOptions::attributes</source>
          <target state="translated">OpenOptions::attributes</target>
        </trans-unit>
        <trans-unit id="e5c7a13c833ad959de5247957e258cf0746e21f9" translate="yes" xml:space="preserve">
          <source>OpenOptions::borrow</source>
          <target state="translated">OpenOptions::borrow</target>
        </trans-unit>
        <trans-unit id="0acab324be26d91ab189d61abdf16dc747c5192c" translate="yes" xml:space="preserve">
          <source>OpenOptions::borrow_mut</source>
          <target state="translated">OpenOptions::borrow_mut</target>
        </trans-unit>
        <trans-unit id="ebf38deb5d5125bd571ab2fbede6b16bab299f15" translate="yes" xml:space="preserve">
          <source>OpenOptions::clone</source>
          <target state="translated">OpenOptions::clone</target>
        </trans-unit>
        <trans-unit id="f31d22dcf8f9c141ab8ed3fbc1d9d368635388e2" translate="yes" xml:space="preserve">
          <source>OpenOptions::clone_from</source>
          <target state="translated">OpenOptions::clone_from</target>
        </trans-unit>
        <trans-unit id="b0b15f6e5b6b2ad70a686d3798f9b969c1be6e56" translate="yes" xml:space="preserve">
          <source>OpenOptions::clone_into</source>
          <target state="translated">OpenOptions::clone_into</target>
        </trans-unit>
        <trans-unit id="2924b17a8e2b9d34f65d2694a37b0e1b92b85fc1" translate="yes" xml:space="preserve">
          <source>OpenOptions::create</source>
          <target state="translated">OpenOptions::create</target>
        </trans-unit>
        <trans-unit id="518de4d4d480c6aa0ee355b7e8b68e44c261345e" translate="yes" xml:space="preserve">
          <source>OpenOptions::create_new</source>
          <target state="translated">OpenOptions::create_new</target>
        </trans-unit>
        <trans-unit id="5af121b8450a8bfc83582fafa544f257437f0c14" translate="yes" xml:space="preserve">
          <source>OpenOptions::custom_flags</source>
          <target state="translated">OpenOptions::custom_flags</target>
        </trans-unit>
        <trans-unit id="676df7a6e2a4b55c69a37308e4d1e8ab3f83cd3a" translate="yes" xml:space="preserve">
          <source>OpenOptions::fmt</source>
          <target state="translated">OpenOptions::fmt</target>
        </trans-unit>
        <trans-unit id="82f3b255624db61ae979a06d980867d5802d4709" translate="yes" xml:space="preserve">
          <source>OpenOptions::from</source>
          <target state="translated">OpenOptions::from</target>
        </trans-unit>
        <trans-unit id="96ad0ddadc43e2419e6227a5777a55351dd9ac83" translate="yes" xml:space="preserve">
          <source>OpenOptions::into</source>
          <target state="translated">OpenOptions::into</target>
        </trans-unit>
        <trans-unit id="8b77c907fad19cddc5960121fab1fa49b4431f22" translate="yes" xml:space="preserve">
          <source>OpenOptions::mode</source>
          <target state="translated">OpenOptions::mode</target>
        </trans-unit>
        <trans-unit id="1285fb69a9cc28fa9fdf3579b2f9690ab52069d7" translate="yes" xml:space="preserve">
          <source>OpenOptions::new</source>
          <target state="translated">OpenOptions::new</target>
        </trans-unit>
        <trans-unit id="aa320b137860771a593f171b8bca56f205bab7e2" translate="yes" xml:space="preserve">
          <source>OpenOptions::open</source>
          <target state="translated">OpenOptions::open</target>
        </trans-unit>
        <trans-unit id="add50a5d5957c658756ea3d2bf5f0dc20542a4ce" translate="yes" xml:space="preserve">
          <source>OpenOptions::read</source>
          <target state="translated">OpenOptions::read</target>
        </trans-unit>
        <trans-unit id="7e91e59a4c689bbc7efae946cf7ef51cecceeefe" translate="yes" xml:space="preserve">
          <source>OpenOptions::security_qos_flags</source>
          <target state="translated">OpenOptions::security_qos_flags</target>
        </trans-unit>
        <trans-unit id="90b2992d4cec48c28058dee872298370548406ec" translate="yes" xml:space="preserve">
          <source>OpenOptions::share_mode</source>
          <target state="translated">OpenOptions::share_mode</target>
        </trans-unit>
        <trans-unit id="48a692736f06da779873a596d6bb2424b9ad7161" translate="yes" xml:space="preserve">
          <source>OpenOptions::to_owned</source>
          <target state="translated">OpenOptions::to_owned</target>
        </trans-unit>
        <trans-unit id="46e980851a36d656e0daadb411e16ffdbbc2e1eb" translate="yes" xml:space="preserve">
          <source>OpenOptions::truncate</source>
          <target state="translated">OpenOptions::truncate</target>
        </trans-unit>
        <trans-unit id="5f197b60663b22df305247c4bfa1a457e5c0d835" translate="yes" xml:space="preserve">
          <source>OpenOptions::try_from</source>
          <target state="translated">OpenOptions::try_from</target>
        </trans-unit>
        <trans-unit id="747eda4c8e3b44e7c01f7e027a9bd03352e1f790" translate="yes" xml:space="preserve">
          <source>OpenOptions::try_into</source>
          <target state="translated">OpenOptions::try_into</target>
        </trans-unit>
        <trans-unit id="5058de688dcc60c90693a5096962f6405ea1f171" translate="yes" xml:space="preserve">
          <source>OpenOptions::type_id</source>
          <target state="translated">OpenOptions::type_id</target>
        </trans-unit>
        <trans-unit id="19a0518d3e6a36eb2eabd3b78700ce36d617b64d" translate="yes" xml:space="preserve">
          <source>OpenOptions::write</source>
          <target state="translated">OpenOptions::write</target>
        </trans-unit>
        <trans-unit id="6dc0ebb4fa3738b9bc9aac0db1fdc06f34fea9fc" translate="yes" xml:space="preserve">
          <source>OpenOptionsExt</source>
          <target state="translated">OpenOptionsExt</target>
        </trans-unit>
        <trans-unit id="45d6a023e7aaf3a8b617725a7efb650cf62cdf6c" translate="yes" xml:space="preserve">
          <source>Opening a file for both reading and writing, as well as creating it if it doesn't exist:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0521aae78e8ad155838f7de5e8f14d0ef7781f3" translate="yes" xml:space="preserve">
          <source>Opening a file to read:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d34b4c8e94f4c904313459b9fb9b442177d441" translate="yes" xml:space="preserve">
          <source>Opens a TCP connection to a remote host with a timeout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209d3641e1fce80e2ba36a03cac2a67f569fb4c6" translate="yes" xml:space="preserve">
          <source>Opens a TCP connection to a remote host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48dea963058d766cb37add48852fe3f445feaf08" translate="yes" xml:space="preserve">
          <source>Opens a file at &lt;code&gt;path&lt;/code&gt; with the options specified by &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ebe50b26242826a11bca679d30a026d4444d1a2" translate="yes" xml:space="preserve">
          <source>Opens a file in write-only mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127d959111790c197f023d709985c8cb7e583159" translate="yes" xml:space="preserve">
          <source>Operand of the &lt;a href=&quot;expressions/operator-expr#the-dereference-operator&quot;&gt;dereference operator&lt;/a&gt; (&lt;code&gt;*&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b28f00441a9534ad36bef8779425496277b4521" translate="yes" xml:space="preserve">
          <source>Operands of &lt;a href=&quot;expressions/operator-expr#comparison-operators&quot;&gt;comparison&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7809a925050c789646447f7ccccf00c4e8608c" translate="yes" xml:space="preserve">
          <source>Operations like &lt;code&gt;+&lt;/code&gt; on &lt;code&gt;u32&lt;/code&gt; values is intended to never overflow, and in some debug configurations overflow is detected and results in a panic. While most arithmetic falls into this category, some code explicitly expects and relies upon modular arithmetic (e.g., hashing).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732a02d050941e6169a56caaf931604a39dfcf26" translate="yes" xml:space="preserve">
          <source>Operations on ASCII strings and characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e687b079fb70f2208d1f8d2c75d64d74925496" translate="yes" xml:space="preserve">
          <source>Operator</source>
          <target state="translated">Operator</target>
        </trans-unit>
        <trans-unit id="e2cce0c9ff63663c1cea812414bb03fc6e974bec" translate="yes" xml:space="preserve">
          <source>Operator Traits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cad0fd3139ef048c0168daf393a34c1807af1a2" translate="yes" xml:space="preserve">
          <source>Operator expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae1b0ed74ef02f2a20320b8054a76c10c592467" translate="yes" xml:space="preserve">
          <source>Operator/Expression</source>
          <target state="translated">Operator/Expression</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="a48efc62628a97b690c020f8a1e8f8cb0bb0733d" translate="yes" xml:space="preserve">
          <source>Operators are defined for built in types by the Rust language. Many of the following operators can also be overloaded using traits in &lt;code&gt;std::ops&lt;/code&gt; or &lt;code&gt;std::cmp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b5d154187c93c9da7d2603b606ea0b5d7ebfc3" translate="yes" xml:space="preserve">
          <source>Optimization hints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="9a8587bd4b256cb6bf9e533c046c7ec07658a2a8" translate="yes" xml:space="preserve">
          <source>Option::and</source>
          <target state="translated">Option::and</target>
        </trans-unit>
        <trans-unit id="ad6a1d3208211ea9f4a0bbc163a21ab722dcc207" translate="yes" xml:space="preserve">
          <source>Option::and_then</source>
          <target state="translated">Option::and_then</target>
        </trans-unit>
        <trans-unit id="3f27b9ef99923ea0d93a7d269559394c38b333c3" translate="yes" xml:space="preserve">
          <source>Option::as_mut</source>
          <target state="translated">Option::as_mut</target>
        </trans-unit>
        <trans-unit id="e2458bfdc527d230aa943b40bea1e47ef7c1716a" translate="yes" xml:space="preserve">
          <source>Option::as_pin_mut</source>
          <target state="translated">Option::as_pin_mut</target>
        </trans-unit>
        <trans-unit id="627cd8388f389dc8a414dc64f0bd2aeb93b8bdb8" translate="yes" xml:space="preserve">
          <source>Option::as_pin_ref</source>
          <target state="translated">Option::as_pin_ref</target>
        </trans-unit>
        <trans-unit id="9e1386f584a53f30c4efc9f16fd6a42d3d390020" translate="yes" xml:space="preserve">
          <source>Option::as_ref</source>
          <target state="translated">Option::as_ref</target>
        </trans-unit>
        <trans-unit id="7e71699a5e7a9d061403b6a9d9cd2031f35e7d57" translate="yes" xml:space="preserve">
          <source>Option::borrow</source>
          <target state="translated">Option::borrow</target>
        </trans-unit>
        <trans-unit id="5a2fc76bcd6cc7797b2fc8e79077c3b905ad253b" translate="yes" xml:space="preserve">
          <source>Option::borrow_mut</source>
          <target state="translated">Option::borrow_mut</target>
        </trans-unit>
        <trans-unit id="f8c7733356cc897d454d9d0b3ed5583a86a4fc0c" translate="yes" xml:space="preserve">
          <source>Option::clamp</source>
          <target state="translated">Option::clamp</target>
        </trans-unit>
        <trans-unit id="b2ed5b3da837f6c02fff44b90e9fcf28f2c92857" translate="yes" xml:space="preserve">
          <source>Option::clone</source>
          <target state="translated">Option::clone</target>
        </trans-unit>
        <trans-unit id="41a138cf124c5fbd9ab6a71d2a521b6f7b355bd9" translate="yes" xml:space="preserve">
          <source>Option::clone_from</source>
          <target state="translated">Option::clone_from</target>
        </trans-unit>
        <trans-unit id="428c2ed3ef54229edff7bb1c574b0bfd79b5c01e" translate="yes" xml:space="preserve">
          <source>Option::clone_into</source>
          <target state="translated">Option::clone_into</target>
        </trans-unit>
        <trans-unit id="7cd06b03e80642a3e13258da69f36190c57d76fe" translate="yes" xml:space="preserve">
          <source>Option::cloned</source>
          <target state="translated">Option::cloned</target>
        </trans-unit>
        <trans-unit id="7ea9e4985c5cd3b4ff11c4891148d8ba5e1cf7f3" translate="yes" xml:space="preserve">
          <source>Option::cmp</source>
          <target state="translated">Option::cmp</target>
        </trans-unit>
        <trans-unit id="0498a1a6447eab280dd5d4ffdbbf44f5e3cd0a3e" translate="yes" xml:space="preserve">
          <source>Option::copied</source>
          <target state="translated">Option::copied</target>
        </trans-unit>
        <trans-unit id="cb4ad142555a29053e45e10fc10d79edcbc2a96c" translate="yes" xml:space="preserve">
          <source>Option::default</source>
          <target state="translated">Option::default</target>
        </trans-unit>
        <trans-unit id="ba7eb304c78625b7673ed4fb2b20bafd2105ff7d" translate="yes" xml:space="preserve">
          <source>Option::deref</source>
          <target state="translated">Option::deref</target>
        </trans-unit>
        <trans-unit id="cb4668f98374c478c313d6124b78706cb9deedbc" translate="yes" xml:space="preserve">
          <source>Option::eq</source>
          <target state="translated">Option::eq</target>
        </trans-unit>
        <trans-unit id="76cfff0c978f7770807e24ce63e5dfca252d4367" translate="yes" xml:space="preserve">
          <source>Option::expect</source>
          <target state="translated">Option::expect</target>
        </trans-unit>
        <trans-unit id="6a0b764b6cbe10497b80db91840a28c114598907" translate="yes" xml:space="preserve">
          <source>Option::filter</source>
          <target state="translated">Option::filter</target>
        </trans-unit>
        <trans-unit id="560bd097e6d518e06d94482f4a9697ad398f15d0" translate="yes" xml:space="preserve">
          <source>Option::flatten</source>
          <target state="translated">Option::flatten</target>
        </trans-unit>
        <trans-unit id="d94a2e5f0e616513666e331c6d9144bddb878e9c" translate="yes" xml:space="preserve">
          <source>Option::fmt</source>
          <target state="translated">Option::fmt</target>
        </trans-unit>
        <trans-unit id="cbd7d776e3b699aac19b698f4ca1165601a486cb" translate="yes" xml:space="preserve">
          <source>Option::from</source>
          <target state="translated">Option::from</target>
        </trans-unit>
        <trans-unit id="e4ce8c942f648512db0f55fca12f5af00d0f8696" translate="yes" xml:space="preserve">
          <source>Option::from_error</source>
          <target state="translated">Option::from_error</target>
        </trans-unit>
        <trans-unit id="7e569e7075b5cfd328272103d6b5f8ce7d4d2194" translate="yes" xml:space="preserve">
          <source>Option::from_iter</source>
          <target state="translated">Option::from_iter</target>
        </trans-unit>
        <trans-unit id="a43b3b6ad08c70527052c24fb47f39fcaa4ebb0e" translate="yes" xml:space="preserve">
          <source>Option::from_ok</source>
          <target state="translated">Option::from_ok</target>
        </trans-unit>
        <trans-unit id="39c61b7ca243afc1e123c7964d51460ccf7ce39f" translate="yes" xml:space="preserve">
          <source>Option::ge</source>
          <target state="translated">Option::ge</target>
        </trans-unit>
        <trans-unit id="9b6edfb0a8e4a4f18c5a5177c880df9517534d89" translate="yes" xml:space="preserve">
          <source>Option::get_or_insert</source>
          <target state="translated">Option::get_or_insert</target>
        </trans-unit>
        <trans-unit id="998b5cc317f56f6b2107c170f3756fdcf6a6be39" translate="yes" xml:space="preserve">
          <source>Option::get_or_insert_with</source>
          <target state="translated">Option::get_or_insert_with</target>
        </trans-unit>
        <trans-unit id="ff18d337dd9fab1c83bb85ddea3fd7d94d3281c1" translate="yes" xml:space="preserve">
          <source>Option::gt</source>
          <target state="translated">Option::gt</target>
        </trans-unit>
        <trans-unit id="501ecb8b666b964e28da12f4615b48d3b7e450ee" translate="yes" xml:space="preserve">
          <source>Option::hash</source>
          <target state="translated">Option::hash</target>
        </trans-unit>
        <trans-unit id="8801dd069757ebf03df00700d2f0d8f4ca13be56" translate="yes" xml:space="preserve">
          <source>Option::hash_slice</source>
          <target state="translated">Option::hash_slice</target>
        </trans-unit>
        <trans-unit id="f71ce62ec4a3ad0f752a7c591ebba32d36455564" translate="yes" xml:space="preserve">
          <source>Option::into</source>
          <target state="translated">Option::into</target>
        </trans-unit>
        <trans-unit id="551bf0cc26ba2d59fc63fcbd70e362e1518cf5f4" translate="yes" xml:space="preserve">
          <source>Option::into_iter</source>
          <target state="translated">Option::into_iter</target>
        </trans-unit>
        <trans-unit id="acac2476c84bf169ea317554e6fccedcf73128cf" translate="yes" xml:space="preserve">
          <source>Option::into_result</source>
          <target state="translated">Option::into_result</target>
        </trans-unit>
        <trans-unit id="495a0a7509c9951579c075005e7b0266bf1a69f9" translate="yes" xml:space="preserve">
          <source>Option::is_none</source>
          <target state="translated">Option::is_none</target>
        </trans-unit>
        <trans-unit id="a5dbcd7af5f3480d6b9a0c381da167cc002b596c" translate="yes" xml:space="preserve">
          <source>Option::is_some</source>
          <target state="translated">Option::is_some</target>
        </trans-unit>
        <trans-unit id="da8976bc81fc53470a3fc8a5b2319faadd2e5469" translate="yes" xml:space="preserve">
          <source>Option::iter</source>
          <target state="translated">Option::iter</target>
        </trans-unit>
        <trans-unit id="4938dbe4f632b13fbb7938f29e586697061d0533" translate="yes" xml:space="preserve">
          <source>Option::iter_mut</source>
          <target state="translated">Option::iter_mut</target>
        </trans-unit>
        <trans-unit id="7b1a1684dd39ce6dd73cf515b242f23a85ff1b4b" translate="yes" xml:space="preserve">
          <source>Option::le</source>
          <target state="translated">Option::le</target>
        </trans-unit>
        <trans-unit id="488cf9c5fcceb69fb2b839af923c0fb53e272ed1" translate="yes" xml:space="preserve">
          <source>Option::lt</source>
          <target state="translated">Option::lt</target>
        </trans-unit>
        <trans-unit id="86dab5a9d3dc8266baf2ccd67588a2c19c44f695" translate="yes" xml:space="preserve">
          <source>Option::map</source>
          <target state="translated">Option::map</target>
        </trans-unit>
        <trans-unit id="9191b28fc19ae2afb4047d887913361af7f182b6" translate="yes" xml:space="preserve">
          <source>Option::map_or</source>
          <target state="translated">Option::map_or</target>
        </trans-unit>
        <trans-unit id="7de284a6d01f951e374aa763b2767eae6a3c5ccb" translate="yes" xml:space="preserve">
          <source>Option::map_or_else</source>
          <target state="translated">Option::map_or_else</target>
        </trans-unit>
        <trans-unit id="66654aab17a6b3aa6f143b9ae3fc8b7dca5dabd2" translate="yes" xml:space="preserve">
          <source>Option::max</source>
          <target state="translated">Option::max</target>
        </trans-unit>
        <trans-unit id="1adb57018df709f1877032a8ddcc892c8dac1998" translate="yes" xml:space="preserve">
          <source>Option::min</source>
          <target state="translated">Option::min</target>
        </trans-unit>
        <trans-unit id="eb7a9479460140930952934380e221ea1697242c" translate="yes" xml:space="preserve">
          <source>Option::ne</source>
          <target state="translated">Option::ne</target>
        </trans-unit>
        <trans-unit id="e51e9c41e5e117e0e07f5dfcd46ea7199497f649" translate="yes" xml:space="preserve">
          <source>Option::ok_or</source>
          <target state="translated">Option::ok_or</target>
        </trans-unit>
        <trans-unit id="d3009c3d13c96510f1ca710672d0c816ed55d018" translate="yes" xml:space="preserve">
          <source>Option::ok_or_else</source>
          <target state="translated">Option::ok_or_else</target>
        </trans-unit>
        <trans-unit id="dfb07ec794538d88d7c6482aed34a705f3390f21" translate="yes" xml:space="preserve">
          <source>Option::or</source>
          <target state="translated">Option::or</target>
        </trans-unit>
        <trans-unit id="197db9177edef17365dcd83807a4634b079ac530" translate="yes" xml:space="preserve">
          <source>Option::or_else</source>
          <target state="translated">Option::or_else</target>
        </trans-unit>
        <trans-unit id="47d22a5e34207ea66404113eba50209751121ad9" translate="yes" xml:space="preserve">
          <source>Option::partial_cmp</source>
          <target state="translated">Option::partial_cmp</target>
        </trans-unit>
        <trans-unit id="3e59f933c6766bd1ca8ae161c652e7b1f7df0e0f" translate="yes" xml:space="preserve">
          <source>Option::product</source>
          <target state="translated">Option::product</target>
        </trans-unit>
        <trans-unit id="43654d863e5a9272f5fcee9e6318f91e4ee0f0d7" translate="yes" xml:space="preserve">
          <source>Option::replace</source>
          <target state="translated">Option::replace</target>
        </trans-unit>
        <trans-unit id="33de023317fb385ec03a2bfdc37c470e03771088" translate="yes" xml:space="preserve">
          <source>Option::sum</source>
          <target state="translated">Option::sum</target>
        </trans-unit>
        <trans-unit id="1eb0b7661e8e838c0043a0e9891c68ec0fbe9581" translate="yes" xml:space="preserve">
          <source>Option::take</source>
          <target state="translated">Option::take</target>
        </trans-unit>
        <trans-unit id="281a61201db99ce270b59bd9978c0c4a876c16d2" translate="yes" xml:space="preserve">
          <source>Option::to_owned</source>
          <target state="translated">Option::to_owned</target>
        </trans-unit>
        <trans-unit id="3923e90861904a7d50dc82fa7bf9be53e14859da" translate="yes" xml:space="preserve">
          <source>Option::transpose</source>
          <target state="translated">Option::transpose</target>
        </trans-unit>
        <trans-unit id="29a44fa076b1666e1ed7b6e9a41abfa7aa142ab4" translate="yes" xml:space="preserve">
          <source>Option::try_from</source>
          <target state="translated">Option::try_from</target>
        </trans-unit>
        <trans-unit id="14385e832f6fb04b85656e914cf56c48e8369aff" translate="yes" xml:space="preserve">
          <source>Option::try_into</source>
          <target state="translated">Option::try_into</target>
        </trans-unit>
        <trans-unit id="a80b7a13a9d97e9cdb20ea081ae3532129b7ba72" translate="yes" xml:space="preserve">
          <source>Option::type_id</source>
          <target state="translated">Option::type_id</target>
        </trans-unit>
        <trans-unit id="fde8f7a5fc9d3f658b63f5e23bda1110f162ed70" translate="yes" xml:space="preserve">
          <source>Option::unwrap</source>
          <target state="translated">Option::unwrap</target>
        </trans-unit>
        <trans-unit id="3a5910b9b482b80f2d66da87c051adfb8d8bf61e" translate="yes" xml:space="preserve">
          <source>Option::unwrap_or</source>
          <target state="translated">Option::unwrap_or</target>
        </trans-unit>
        <trans-unit id="976c733f76ae18fb91e76013cca3578adab70346" translate="yes" xml:space="preserve">
          <source>Option::unwrap_or_default</source>
          <target state="translated">Option::unwrap_or_default</target>
        </trans-unit>
        <trans-unit id="f1995eada89f4dc6ecedad44f0c0c2330349c1bc" translate="yes" xml:space="preserve">
          <source>Option::unwrap_or_else</source>
          <target state="translated">Option::unwrap_or_else</target>
        </trans-unit>
        <trans-unit id="68786e698cfd6fd27d36f1fba3b6a686517fa05c" translate="yes" xml:space="preserve">
          <source>Option::xor</source>
          <target state="translated">Option::xor</target>
        </trans-unit>
        <trans-unit id="e3c9c006d7dd32e4af03ce0e476b71491a8d4b8a" translate="yes" xml:space="preserve">
          <source>Optional function arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e47febec66d688ce101287ee00d853516af2cfa" translate="yes" xml:space="preserve">
          <source>Optional struct fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a34f2c7171c8f888634b370538fba1e9d6296a5" translate="yes" xml:space="preserve">
          <source>Optional values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d6758103e11af5591d29f41814c8b3a39a2aa1" translate="yes" xml:space="preserve">
          <source>Optionally inspects an environment variable at compile time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3b56b50deaba4f743a2a6fc1b83731273806d4" translate="yes" xml:space="preserve">
          <source>Optionally specified integer width that the output should be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2048d6f0b11cf29779cd20fa71eaae6ce5ed3b2c" translate="yes" xml:space="preserve">
          <source>Optionally specified precision for numeric types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04373894adc677092b8d9a4d5813bcd7335dffdf" translate="yes" xml:space="preserve">
          <source>Optionally, we can also include an &lt;code&gt;else&lt;/code&gt; expression, which we chose to do here, to give the program an alternative block of code to execute should the condition evaluate to false. If you don&amp;rsquo;t provide an &lt;code&gt;else&lt;/code&gt; expression and the condition is false, the program will just skip the &lt;code&gt;if&lt;/code&gt; block and move on to the next bit of code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="502d9e6ffaa61a4c673c37dfc595e040fc80f37d" translate="yes" xml:space="preserve">
          <source>Options and flags which can be used to configure how a file is opened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2972721d46b095876455597aebeba50e3a239b32" translate="yes" xml:space="preserve">
          <source>Options and pointers (&quot;nullable&quot; pointers)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72184f55cc026514b7160d78c3c5aef63c2a050" translate="yes" xml:space="preserve">
          <source>Or</source>
          <target state="translated">Or</target>
        </trans-unit>
        <trans-unit id="3bc6e013cee463ae97ecfa631a2e64cad8625c6a" translate="yes" xml:space="preserve">
          <source>Or by cloning &lt;code&gt;value&lt;/code&gt; before borrowing it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b4e6d65f4c6512515713febc219b11096f10cd" translate="yes" xml:space="preserve">
          <source>Or by moving the reference into a function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b578c07095ed6ed46d6f153638a36e12535cf287" translate="yes" xml:space="preserve">
          <source>Or if you want to &lt;code&gt;break&lt;/code&gt; the labeled block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543cf658926daaaf4b0291516127021d4e7895e7" translate="yes" xml:space="preserve">
          <source>Or in a generic context, an erroneous code example would look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25ee9f0412b435226c79f36ce66d89e6ad4a334" translate="yes" xml:space="preserve">
          <source>Or in the &lt;code&gt;where&lt;/code&gt; clause:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b11240c2114782b42391bcc69fead4c1890df6" translate="yes" xml:space="preserve">
          <source>Or make the outer reference mutable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f651c3b7a885d71e3753d367a44690ed57098104" translate="yes" xml:space="preserve">
          <source>Or maybe did you mean to unify? Consider using a guard:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63cbe0fb14548b7cc3943b49c3283f01873fa23" translate="yes" xml:space="preserve">
          <source>Or propagate the error up the call stack with &lt;a href=&quot;../macro.try&quot;&gt;&lt;code&gt;?&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0995f3133b7ba0da84026e83b875a8d8f53ccb9" translate="yes" xml:space="preserve">
          <source>Or put an end to your inclusive range:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a55f1def49ba2cf28edd04aebe0ae914d6adc01" translate="yes" xml:space="preserve">
          <source>Or this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9530c0225cb87d6d4bf8e3185c27b10d6c71d11a" translate="yes" xml:space="preserve">
          <source>Or use &lt;code&gt;if let&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273aeb6aa2ac245c7ceee53c519ceb04f6599128" translate="yes" xml:space="preserve">
          <source>Or we could name a function as the argument to &lt;code&gt;map&lt;/code&gt; instead of the closure, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52286981391759a88ba22e7a9a24f451bd18e85" translate="yes" xml:space="preserve">
          <source>Or we could use an &lt;code&gt;if let&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt; expression like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6bd34bc197da74a1c27a575e977239ccfe16684" translate="yes" xml:space="preserve">
          <source>Or you can pass the variable as a parameter to the closure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f7258ca7f4f4e82cbb45da80b92cb552d5cffe" translate="yes" xml:space="preserve">
          <source>Or you can reference the item with its parent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29edca74e59817dda05bb2e131ecfb108fa5284" translate="yes" xml:space="preserve">
          <source>Or, if the type implements the &lt;code&gt;Clone&lt;/code&gt; trait, you can clone it between closures:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12dfe56e60634e928fd42ae5d599dda01263dc2d" translate="yes" xml:space="preserve">
          <source>Or, if you tried to use a module from an external crate, you may have missed the &lt;code&gt;extern crate&lt;/code&gt; declaration (which is usually placed in the crate root):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">Or:</target>
        </trans-unit>
        <trans-unit id="756e00b4ce5e9d39383d2b108674676d2a5eb78e" translate="yes" xml:space="preserve">
          <source>OrEq</source>
          <target state="translated">OrEq</target>
        </trans-unit>
        <trans-unit id="564b40230868f4b78bca3166973a37e562d97dee" translate="yes" xml:space="preserve">
          <source>OrOr</source>
          <target state="translated">OrOr</target>
        </trans-unit>
        <trans-unit id="2813ca76372ef7834dbf7b83dd19ec3f7be3b60a" translate="yes" xml:space="preserve">
          <source>Ord</source>
          <target state="translated">Ord</target>
        </trans-unit>
        <trans-unit id="74b60f23ebce31b7a22a55c578f050bcee26fe5b" translate="yes" xml:space="preserve">
          <source>Ord::clamp</source>
          <target state="translated">Ord::clamp</target>
        </trans-unit>
        <trans-unit id="c1c60ff58cc75226de9806234302570046dbd8f5" translate="yes" xml:space="preserve">
          <source>Ord::cmp</source>
          <target state="translated">Ord::cmp</target>
        </trans-unit>
        <trans-unit id="5aac35ef704655ca052ef8370ff03afac6b470d9" translate="yes" xml:space="preserve">
          <source>Ord::max</source>
          <target state="translated">Ord::max</target>
        </trans-unit>
        <trans-unit id="44eb8ae78f7ff3385e9ae21dbb73540bf94e22db" translate="yes" xml:space="preserve">
          <source>Ord::min</source>
          <target state="translated">Ord::min</target>
        </trans-unit>
        <trans-unit id="d3ed86c1334d74f0ae883f47feef902d83b9d8c6" translate="yes" xml:space="preserve">
          <source>Ordering</source>
          <target state="translated">Ordering</target>
        </trans-unit>
        <trans-unit id="c8683d7a9b3cca82d5bfc4fb160497e659833355" translate="yes" xml:space="preserve">
          <source>Ordering::borrow</source>
          <target state="translated">Ordering::borrow</target>
        </trans-unit>
        <trans-unit id="2110fd32ceaf8e35714b9f4c770ee6cbc575392b" translate="yes" xml:space="preserve">
          <source>Ordering::borrow_mut</source>
          <target state="translated">Ordering::borrow_mut</target>
        </trans-unit>
        <trans-unit id="2d789d0561eb273919f31e5f66336ffda8097e51" translate="yes" xml:space="preserve">
          <source>Ordering::clamp</source>
          <target state="translated">Ordering::clamp</target>
        </trans-unit>
        <trans-unit id="6de6fd1c26e0555f07bc1925f3805557c3fda70f" translate="yes" xml:space="preserve">
          <source>Ordering::clone</source>
          <target state="translated">Ordering::clone</target>
        </trans-unit>
        <trans-unit id="eee5275789348dde36794118669be1ff7cd1bb4a" translate="yes" xml:space="preserve">
          <source>Ordering::clone_from</source>
          <target state="translated">Ordering::clone_from</target>
        </trans-unit>
        <trans-unit id="40853728568d4672aba47821accc24160a1b99f8" translate="yes" xml:space="preserve">
          <source>Ordering::clone_into</source>
          <target state="translated">Ordering::clone_into</target>
        </trans-unit>
        <trans-unit id="d214ed8406272d61a0d7c592025d6abf1f5d1473" translate="yes" xml:space="preserve">
          <source>Ordering::cmp</source>
          <target state="translated">Ordering::cmp</target>
        </trans-unit>
        <trans-unit id="6359dfdce4c6d799333d91033efe381426c22804" translate="yes" xml:space="preserve">
          <source>Ordering::eq</source>
          <target state="translated">Ordering::eq</target>
        </trans-unit>
        <trans-unit id="e55fb4de4f643ffa35cfa13e29a8d8ae17c99930" translate="yes" xml:space="preserve">
          <source>Ordering::fmt</source>
          <target state="translated">Ordering::fmt</target>
        </trans-unit>
        <trans-unit id="8223604ca595d0dc7d03ed1d15beee5d38176846" translate="yes" xml:space="preserve">
          <source>Ordering::from</source>
          <target state="translated">Ordering::from</target>
        </trans-unit>
        <trans-unit id="a579d7a090bb1dc3fd3d2f9a3e37ce7352737881" translate="yes" xml:space="preserve">
          <source>Ordering::ge</source>
          <target state="translated">Ordering::ge</target>
        </trans-unit>
        <trans-unit id="4618dec778641079f26c6e4998d38724ccd55bc3" translate="yes" xml:space="preserve">
          <source>Ordering::gt</source>
          <target state="translated">Ordering::gt</target>
        </trans-unit>
        <trans-unit id="efe1e62a68b71bab75ead05adff759d1187652f7" translate="yes" xml:space="preserve">
          <source>Ordering::hash</source>
          <target state="translated">Ordering::hash</target>
        </trans-unit>
        <trans-unit id="c05089412848f92294833568d422af5dbf1903b4" translate="yes" xml:space="preserve">
          <source>Ordering::hash_slice</source>
          <target state="translated">Ordering::hash_slice</target>
        </trans-unit>
        <trans-unit id="2250580789c212cd410023ce2ecb8bbc3f4ed5d2" translate="yes" xml:space="preserve">
          <source>Ordering::into</source>
          <target state="translated">Ordering::into</target>
        </trans-unit>
        <trans-unit id="70a87b5390eddefc5bd61055a8da6b411465a3b4" translate="yes" xml:space="preserve">
          <source>Ordering::le</source>
          <target state="translated">Ordering::le</target>
        </trans-unit>
        <trans-unit id="e07fd04110fe52e557d54608bb0d4cf4cd5af061" translate="yes" xml:space="preserve">
          <source>Ordering::lt</source>
          <target state="translated">Ordering::lt</target>
        </trans-unit>
        <trans-unit id="2da6624e13df6b2930a58d521c8512c0ee8d6a7b" translate="yes" xml:space="preserve">
          <source>Ordering::max</source>
          <target state="translated">Ordering::max</target>
        </trans-unit>
        <trans-unit id="9beab77e1fd3338267c9abb1b7bdf0317c0f161a" translate="yes" xml:space="preserve">
          <source>Ordering::min</source>
          <target state="translated">Ordering::min</target>
        </trans-unit>
        <trans-unit id="110f4e4f96d577bdee265f9f4c84f0bc5a9e62d9" translate="yes" xml:space="preserve">
          <source>Ordering::ne</source>
          <target state="translated">Ordering::ne</target>
        </trans-unit>
        <trans-unit id="932d7efe4223aad7b2447933dc9fc2df76690914" translate="yes" xml:space="preserve">
          <source>Ordering::partial_cmp</source>
          <target state="translated">Ordering::partial_cmp</target>
        </trans-unit>
        <trans-unit id="bd351c74f745da13de54fe0d9a1669cfb9e21ee6" translate="yes" xml:space="preserve">
          <source>Ordering::reverse</source>
          <target state="translated">Ordering::reverse</target>
        </trans-unit>
        <trans-unit id="8db4349ef9928c9f97e125860622b05714dc2737" translate="yes" xml:space="preserve">
          <source>Ordering::then</source>
          <target state="translated">Ordering::then</target>
        </trans-unit>
        <trans-unit id="ad25d15baa7a0275cbc02b73accdf10273dae875" translate="yes" xml:space="preserve">
          <source>Ordering::then_with</source>
          <target state="translated">Ordering::then_with</target>
        </trans-unit>
        <trans-unit id="5266204925b37c2e8fbeb44187ac5ae55ef0ceee" translate="yes" xml:space="preserve">
          <source>Ordering::to_owned</source>
          <target state="translated">Ordering::to_owned</target>
        </trans-unit>
        <trans-unit id="1021043cb17ea480cf742910888e38334eccb5e0" translate="yes" xml:space="preserve">
          <source>Ordering::try_from</source>
          <target state="translated">Ordering::try_from</target>
        </trans-unit>
        <trans-unit id="d7fda93cca2b35645e782a8cad0106bd8488e1ff" translate="yes" xml:space="preserve">
          <source>Ordering::try_into</source>
          <target state="translated">Ordering::try_into</target>
        </trans-unit>
        <trans-unit id="fcfc78161ff2a24d952d0059fa4182641cc917f9" translate="yes" xml:space="preserve">
          <source>Ordering::type_id</source>
          <target state="translated">Ordering::type_id</target>
        </trans-unit>
        <trans-unit id="519255ae1f74ffc5ddd29979295c7572f048ad81" translate="yes" xml:space="preserve">
          <source>Organization</source>
          <target state="translated">Organization</target>
        </trans-unit>
        <trans-unit id="5065a843766fd7080cee74229c5035721dfbaf44" translate="yes" xml:space="preserve">
          <source>Organize code into &lt;a href=&quot;../reference/items/modules&quot;&gt;modules&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c037896c3d7d61ff179675edabd6484f44719e2" translate="yes" xml:space="preserve">
          <source>Organize large projects with workspaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32c014eaf11ad9e4bbf5e85159bee172f2bd221" translate="yes" xml:space="preserve">
          <source>Organizing code (using what you learned about modules in &lt;a href=&quot;ch07-00-managing-growing-projects-with-packages-crates-and-modules&quot;&gt;Chapter 7&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee41445c200801ea9fbf6274e97db6586289a236" translate="yes" xml:space="preserve">
          <source>OsStr</source>
          <target state="translated">OsStr</target>
        </trans-unit>
        <trans-unit id="ac78b45740efbd2536654e00fa8976f2de0098a2" translate="yes" xml:space="preserve">
          <source>OsStr::as_bytes</source>
          <target state="translated">OsStr::as_bytes</target>
        </trans-unit>
        <trans-unit id="f755c63dce374d2cd8123b73b1dd4de3e66ae36b" translate="yes" xml:space="preserve">
          <source>OsStr::as_ref</source>
          <target state="translated">OsStr::as_ref</target>
        </trans-unit>
        <trans-unit id="79eaad0b134d02d5a8a3b219fea43cf82505483f" translate="yes" xml:space="preserve">
          <source>OsStr::borrow</source>
          <target state="translated">OsStr::borrow</target>
        </trans-unit>
        <trans-unit id="bfa4d2525dd3bb64cf12c0c54ba0831b012c7cfd" translate="yes" xml:space="preserve">
          <source>OsStr::borrow_mut</source>
          <target state="translated">OsStr::borrow_mut</target>
        </trans-unit>
        <trans-unit id="2d969a374bcc571cff3bb654c0d2a624ed26d159" translate="yes" xml:space="preserve">
          <source>OsStr::clamp</source>
          <target state="translated">OsStr::clamp</target>
        </trans-unit>
        <trans-unit id="7f1396f2e8255fe6f5c9a4390d7098b8034c8699" translate="yes" xml:space="preserve">
          <source>OsStr::clone_into</source>
          <target state="translated">OsStr::clone_into</target>
        </trans-unit>
        <trans-unit id="569b89a072350ca831472f039e3799986d4f11db" translate="yes" xml:space="preserve">
          <source>OsStr::cmp</source>
          <target state="translated">OsStr::cmp</target>
        </trans-unit>
        <trans-unit id="02e4586950251d98cb8068b61addb477edffaa5f" translate="yes" xml:space="preserve">
          <source>OsStr::default</source>
          <target state="translated">OsStr::default</target>
        </trans-unit>
        <trans-unit id="1ca22c665e0765af3d1f73e68414935fa3b71420" translate="yes" xml:space="preserve">
          <source>OsStr::encode_wide</source>
          <target state="translated">OsStr::encode_wide</target>
        </trans-unit>
        <trans-unit id="fa5103a2532ae1fa374ed2927f602df85a454480" translate="yes" xml:space="preserve">
          <source>OsStr::eq</source>
          <target state="translated">OsStr::eq</target>
        </trans-unit>
        <trans-unit id="ef3f35d77c080423fa7da5fdd1ccb7cf95b71966" translate="yes" xml:space="preserve">
          <source>OsStr::fmt</source>
          <target state="translated">OsStr::fmt</target>
        </trans-unit>
        <trans-unit id="e3396244efc29b3316f86bd28df2f41d538010a9" translate="yes" xml:space="preserve">
          <source>OsStr::from</source>
          <target state="translated">OsStr::from</target>
        </trans-unit>
        <trans-unit id="9964c092761696f03f0660510726f34c37a101ba" translate="yes" xml:space="preserve">
          <source>OsStr::from_bytes</source>
          <target state="translated">OsStr::from_bytes</target>
        </trans-unit>
        <trans-unit id="20db41b61263f9037ce0775edf41bb748db52953" translate="yes" xml:space="preserve">
          <source>OsStr::ge</source>
          <target state="translated">OsStr::ge</target>
        </trans-unit>
        <trans-unit id="78612c827c884f24395b52a0e978a02ae1553397" translate="yes" xml:space="preserve">
          <source>OsStr::gt</source>
          <target state="translated">OsStr::gt</target>
        </trans-unit>
        <trans-unit id="320510460598d45269ce9bb2345c35feadc65354" translate="yes" xml:space="preserve">
          <source>OsStr::hash</source>
          <target state="translated">OsStr::hash</target>
        </trans-unit>
        <trans-unit id="2d1ef587fbe4200c7d4f9c12c46688036aba59bf" translate="yes" xml:space="preserve">
          <source>OsStr::hash_slice</source>
          <target state="translated">OsStr::hash_slice</target>
        </trans-unit>
        <trans-unit id="0020d09dec473595eec574f96d727910a223a8c2" translate="yes" xml:space="preserve">
          <source>OsStr::into_os_string</source>
          <target state="translated">OsStr::into_os_string</target>
        </trans-unit>
        <trans-unit id="03e0477c96addfca9b6c52bb8c2a51379c80e50b" translate="yes" xml:space="preserve">
          <source>OsStr::is_empty</source>
          <target state="translated">OsStr::is_empty</target>
        </trans-unit>
        <trans-unit id="9b6be64e74b26edd733b5abecea0d6e130bb8530" translate="yes" xml:space="preserve">
          <source>OsStr::le</source>
          <target state="translated">OsStr::le</target>
        </trans-unit>
        <trans-unit id="42ab8f4050f992b35836d4c6c791ac02ceb47de0" translate="yes" xml:space="preserve">
          <source>OsStr::len</source>
          <target state="translated">OsStr::len</target>
        </trans-unit>
        <trans-unit id="26a782a3c88c68f441ebbb7e07135b266f502a7e" translate="yes" xml:space="preserve">
          <source>OsStr::lt</source>
          <target state="translated">OsStr::lt</target>
        </trans-unit>
        <trans-unit id="96c41ae9f3f5a0afa117d7b0c1f0d8f14b6ad682" translate="yes" xml:space="preserve">
          <source>OsStr::max</source>
          <target state="translated">OsStr::max</target>
        </trans-unit>
        <trans-unit id="b6ada99738929e011cce58a8a1894064aa33f1c5" translate="yes" xml:space="preserve">
          <source>OsStr::min</source>
          <target state="translated">OsStr::min</target>
        </trans-unit>
        <trans-unit id="9779de4259895832c6000749300b1e884eaf3771" translate="yes" xml:space="preserve">
          <source>OsStr::ne</source>
          <target state="translated">OsStr::ne</target>
        </trans-unit>
        <trans-unit id="f62b92e58f40cddea76007419338471014c88556" translate="yes" xml:space="preserve">
          <source>OsStr::new</source>
          <target state="translated">OsStr::new</target>
        </trans-unit>
        <trans-unit id="69d32b580a0a7fc56f54834922e1ebc2ed90dd8f" translate="yes" xml:space="preserve">
          <source>OsStr::partial_cmp</source>
          <target state="translated">OsStr::partial_cmp</target>
        </trans-unit>
        <trans-unit id="71de02492654f161c7d616d82efe20f7246fff90" translate="yes" xml:space="preserve">
          <source>OsStr::to_os_string</source>
          <target state="translated">OsStr::to_os_string</target>
        </trans-unit>
        <trans-unit id="922c1b6b75bc73f9ec7e1ce34c75dd120595e71e" translate="yes" xml:space="preserve">
          <source>OsStr::to_owned</source>
          <target state="translated">OsStr::to_owned</target>
        </trans-unit>
        <trans-unit id="e32adb9e0e7fdfd7c025541e85d143ec5c74f1d0" translate="yes" xml:space="preserve">
          <source>OsStr::to_str</source>
          <target state="translated">OsStr::to_str</target>
        </trans-unit>
        <trans-unit id="bb2e4753fe627ce0f1bf0c683a900db127e08ec2" translate="yes" xml:space="preserve">
          <source>OsStr::to_string_lossy</source>
          <target state="translated">OsStr::to_string_lossy</target>
        </trans-unit>
        <trans-unit id="dbcbed83a2bb794dc501b27ebb739dedef369b66" translate="yes" xml:space="preserve">
          <source>OsStr::type_id</source>
          <target state="translated">OsStr::type_id</target>
        </trans-unit>
        <trans-unit id="1088f5a844b295ed089a98113972dbab8d734ea9" translate="yes" xml:space="preserve">
          <source>OsStrExt</source>
          <target state="translated">OsStrExt</target>
        </trans-unit>
        <trans-unit id="c3e4ec69b476c21a31135f26f6e1eb099354582b" translate="yes" xml:space="preserve">
          <source>OsString</source>
          <target state="translated">OsString</target>
        </trans-unit>
        <trans-unit id="859fe191dd2729e9636e923ce4c6010c065350e7" translate="yes" xml:space="preserve">
          <source>OsString::as_os_str</source>
          <target state="translated">OsString::as_os_str</target>
        </trans-unit>
        <trans-unit id="ae48ed668160d2660222446dc33130e3b99195f4" translate="yes" xml:space="preserve">
          <source>OsString::as_ref</source>
          <target state="translated">OsString::as_ref</target>
        </trans-unit>
        <trans-unit id="6c154a705bbfda0f8caa78dc3c83c688ceee4be3" translate="yes" xml:space="preserve">
          <source>OsString::borrow</source>
          <target state="translated">OsString::borrow</target>
        </trans-unit>
        <trans-unit id="d9285a7312a04823cbec150024a67d6051a0009c" translate="yes" xml:space="preserve">
          <source>OsString::borrow_mut</source>
          <target state="translated">OsString::borrow_mut</target>
        </trans-unit>
        <trans-unit id="8a8add6d5f7047dabf38c9708dbfcb9af76b753d" translate="yes" xml:space="preserve">
          <source>OsString::capacity</source>
          <target state="translated">OsString::capacity</target>
        </trans-unit>
        <trans-unit id="50f898a7828fada3d305d75a881fa7124881e2fb" translate="yes" xml:space="preserve">
          <source>OsString::clamp</source>
          <target state="translated">OsString::clamp</target>
        </trans-unit>
        <trans-unit id="fabd01818745e590afdeb16840705b296b4f807c" translate="yes" xml:space="preserve">
          <source>OsString::clear</source>
          <target state="translated">OsString::clear</target>
        </trans-unit>
        <trans-unit id="36e853d6cde946db2cccb29c4b429f832343aee2" translate="yes" xml:space="preserve">
          <source>OsString::clone</source>
          <target state="translated">OsString::clone</target>
        </trans-unit>
        <trans-unit id="6677d860d733e3ddcebb3f1bd2f72aa39598eb34" translate="yes" xml:space="preserve">
          <source>OsString::clone_from</source>
          <target state="translated">OsString::clone_from</target>
        </trans-unit>
        <trans-unit id="fd2ac952ffefdec51ff75b3d8c4bd391741ff1aa" translate="yes" xml:space="preserve">
          <source>OsString::clone_into</source>
          <target state="translated">OsString::clone_into</target>
        </trans-unit>
        <trans-unit id="315aba73fb5b2c6e23b4c97ac9884d2d33416e0c" translate="yes" xml:space="preserve">
          <source>OsString::cmp</source>
          <target state="translated">OsString::cmp</target>
        </trans-unit>
        <trans-unit id="997c73836512dc762004a3abdc5f64badf532f66" translate="yes" xml:space="preserve">
          <source>OsString::default</source>
          <target state="translated">OsString::default</target>
        </trans-unit>
        <trans-unit id="4e609361ff7ebe3dda2c2af92f6bf48fc86e09ed" translate="yes" xml:space="preserve">
          <source>OsString::deref</source>
          <target state="translated">OsString::deref</target>
        </trans-unit>
        <trans-unit id="a49ed3e5e5b9f62e906780fb5c5b78ac4a2a0b5c" translate="yes" xml:space="preserve">
          <source>OsString::eq</source>
          <target state="translated">OsString::eq</target>
        </trans-unit>
        <trans-unit id="5ff83c8f690658cf0d00115fedc8222c0236bcb8" translate="yes" xml:space="preserve">
          <source>OsString::fmt</source>
          <target state="translated">OsString::fmt</target>
        </trans-unit>
        <trans-unit id="d829d856e0a7a3deaac1d6966fc1b56a61c44355" translate="yes" xml:space="preserve">
          <source>OsString::from</source>
          <target state="translated">OsString::from</target>
        </trans-unit>
        <trans-unit id="8b016e304ada7a6de67311a8e7bd75a8a30eaf55" translate="yes" xml:space="preserve">
          <source>OsString::from_vec</source>
          <target state="translated">OsString::from_vec</target>
        </trans-unit>
        <trans-unit id="a2eb5354a38de73c95f950cccc782fb4d3776aee" translate="yes" xml:space="preserve">
          <source>OsString::from_wide</source>
          <target state="translated">OsString::from_wide</target>
        </trans-unit>
        <trans-unit id="977e48357172af9c7749af46184abf10a9947e2a" translate="yes" xml:space="preserve">
          <source>OsString::ge</source>
          <target state="translated">OsString::ge</target>
        </trans-unit>
        <trans-unit id="314983aa089e7916ba19eefbde10540d490c42ec" translate="yes" xml:space="preserve">
          <source>OsString::gt</source>
          <target state="translated">OsString::gt</target>
        </trans-unit>
        <trans-unit id="d83cedf1ea2574802fd81387a247eaac5739dc8f" translate="yes" xml:space="preserve">
          <source>OsString::hash</source>
          <target state="translated">OsString::hash</target>
        </trans-unit>
        <trans-unit id="6471585df89443f18cf65690eeb246e384a5afc1" translate="yes" xml:space="preserve">
          <source>OsString::hash_slice</source>
          <target state="translated">OsString::hash_slice</target>
        </trans-unit>
        <trans-unit id="a3083a37ba1b773dac91a510ae8576268b2f1358" translate="yes" xml:space="preserve">
          <source>OsString::index</source>
          <target state="translated">OsString::index</target>
        </trans-unit>
        <trans-unit id="df165c7ea6f9026088706c74d86435360f8329c2" translate="yes" xml:space="preserve">
          <source>OsString::into</source>
          <target state="translated">OsString::into</target>
        </trans-unit>
        <trans-unit id="7b6bb618d98ad820b98be022b6f7ab21e27f48a9" translate="yes" xml:space="preserve">
          <source>OsString::into_boxed_os_str</source>
          <target state="translated">OsString::into_boxed_os_str</target>
        </trans-unit>
        <trans-unit id="5fb180fdd023e0d002b850baebc43995b6922d6f" translate="yes" xml:space="preserve">
          <source>OsString::into_string</source>
          <target state="translated">OsString::into_string</target>
        </trans-unit>
        <trans-unit id="703c49b20d1d36582961bf46cf1aaf46d794f379" translate="yes" xml:space="preserve">
          <source>OsString::into_vec</source>
          <target state="translated">OsString::into_vec</target>
        </trans-unit>
        <trans-unit id="7a9071ad2ca6707ddd075812eb2d9bbf1fbd1754" translate="yes" xml:space="preserve">
          <source>OsString::is_empty</source>
          <target state="translated">OsString::is_empty</target>
        </trans-unit>
        <trans-unit id="a389a86add52b0902ca1ba2740d69696a8dddda5" translate="yes" xml:space="preserve">
          <source>OsString::le</source>
          <target state="translated">OsString::le</target>
        </trans-unit>
        <trans-unit id="3cb68f0936840ee30472030decd42b714beb3d76" translate="yes" xml:space="preserve">
          <source>OsString::len</source>
          <target state="translated">OsString::len</target>
        </trans-unit>
        <trans-unit id="56ef3320c0111ea02994b262a3cb861dbbb34f17" translate="yes" xml:space="preserve">
          <source>OsString::lt</source>
          <target state="translated">OsString::lt</target>
        </trans-unit>
        <trans-unit id="575270b5621cafd0101a5eb1bb050bc3b7e64b45" translate="yes" xml:space="preserve">
          <source>OsString::max</source>
          <target state="translated">OsString::max</target>
        </trans-unit>
        <trans-unit id="68564a48326d166c885a4ae2b7d3f0bad4e64da0" translate="yes" xml:space="preserve">
          <source>OsString::min</source>
          <target state="translated">OsString::min</target>
        </trans-unit>
        <trans-unit id="16abd935f98a70793180d4823ab08017279d0508" translate="yes" xml:space="preserve">
          <source>OsString::ne</source>
          <target state="translated">OsString::ne</target>
        </trans-unit>
        <trans-unit id="e6e8d533b010a6662c3913ad01078c70169e049a" translate="yes" xml:space="preserve">
          <source>OsString::new</source>
          <target state="translated">OsString::new</target>
        </trans-unit>
        <trans-unit id="9f53066685538b1d11ce53a4356dbcab1eb4a849" translate="yes" xml:space="preserve">
          <source>OsString::partial_cmp</source>
          <target state="translated">OsString::partial_cmp</target>
        </trans-unit>
        <trans-unit id="98f9021005b406d62879209d12b7a0b671d50c32" translate="yes" xml:space="preserve">
          <source>OsString::push</source>
          <target state="translated">OsString::push</target>
        </trans-unit>
        <trans-unit id="3d381aaee3f35c33f3658ad6121f892e6c693335" translate="yes" xml:space="preserve">
          <source>OsString::reserve</source>
          <target state="translated">OsString::reserve</target>
        </trans-unit>
        <trans-unit id="cc3d6518430a6da401547d4c22ea3d8cf229d297" translate="yes" xml:space="preserve">
          <source>OsString::reserve_exact</source>
          <target state="translated">OsString::reserve_exact</target>
        </trans-unit>
        <trans-unit id="7dcd71178aa021af3ef23a7f736f91a63dc04a08" translate="yes" xml:space="preserve">
          <source>OsString::shrink_to</source>
          <target state="translated">OsString::shrink_to</target>
        </trans-unit>
        <trans-unit id="a78619a63262a6398074a44d67d1e1c0055a9e42" translate="yes" xml:space="preserve">
          <source>OsString::shrink_to_fit</source>
          <target state="translated">OsString::shrink_to_fit</target>
        </trans-unit>
        <trans-unit id="e677a0fce97086e2dbd5116d8c73422a5b17335f" translate="yes" xml:space="preserve">
          <source>OsString::to_os_string</source>
          <target state="translated">OsString::to_os_string</target>
        </trans-unit>
        <trans-unit id="1e5d3ed2984e0c0a94e3614d04a4b6d1e5283af6" translate="yes" xml:space="preserve">
          <source>OsString::to_owned</source>
          <target state="translated">OsString::to_owned</target>
        </trans-unit>
        <trans-unit id="2010c47df96f790856e2a60e7f3995e78eada375" translate="yes" xml:space="preserve">
          <source>OsString::to_str</source>
          <target state="translated">OsString::to_str</target>
        </trans-unit>
        <trans-unit id="c5ab5192e0b8fd775bd3e8f9b3e0573d969f29b3" translate="yes" xml:space="preserve">
          <source>OsString::to_string_lossy</source>
          <target state="translated">OsString::to_string_lossy</target>
        </trans-unit>
        <trans-unit id="effa33ff4c0c0309f8ac54bad875e745daa055b5" translate="yes" xml:space="preserve">
          <source>OsString::try_from</source>
          <target state="translated">OsString::try_from</target>
        </trans-unit>
        <trans-unit id="fb369eb73b7652c7f64f7858a0ab00fb0d746ca4" translate="yes" xml:space="preserve">
          <source>OsString::try_into</source>
          <target state="translated">OsString::try_into</target>
        </trans-unit>
        <trans-unit id="2df035af1f5a524f1b084c9f6fb3b92ba6dc0ed1" translate="yes" xml:space="preserve">
          <source>OsString::type_id</source>
          <target state="translated">OsString::type_id</target>
        </trans-unit>
        <trans-unit id="5174f93493c600b6d13e517fcdf7e8efbdb14dca" translate="yes" xml:space="preserve">
          <source>OsString::with_capacity</source>
          <target state="translated">OsString::with_capacity</target>
        </trans-unit>
        <trans-unit id="746c2997c2de636223c1bd2e6ffbcac4d777ef7f" translate="yes" xml:space="preserve">
          <source>OsStringExt</source>
          <target state="translated">OsStringExt</target>
        </trans-unit>
        <trans-unit id="5bc9a5878701d6eea8963b31b0c3a5a1dc4ff057" translate="yes" xml:space="preserve">
          <source>Other Rust features, such as pattern matching and enums, which we&amp;rsquo;ve covered in other chapters, are influenced by the functional style as well. Mastering closures and iterators is an important part of writing idiomatic, fast Rust code, so we&amp;rsquo;ll devote this entire chapter to them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f4a1803901c79b472a31aac60c766c79e0cd1d" translate="yes" xml:space="preserve">
          <source>Other Slices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ebd492d99acb79e16a874d198f25fa4ea4ca260" translate="yes" xml:space="preserve">
          <source>Other duplication includes the similar implementations of the &lt;code&gt;request_review&lt;/code&gt; and &lt;code&gt;approve&lt;/code&gt; methods on &lt;code&gt;Post&lt;/code&gt;. Both methods delegate to the implementation of the same method on the value in the &lt;code&gt;state&lt;/code&gt; field of &lt;code&gt;Option&lt;/code&gt; and set the new value of the &lt;code&gt;state&lt;/code&gt; field to the result. If we had a lot of methods on &lt;code&gt;Post&lt;/code&gt; that followed this pattern, we might consider defining a macro to eliminate the repetition (see the &lt;a href=&quot;ch19-06-macros#macros&quot;&gt;&amp;ldquo;Macros&amp;rdquo;&lt;/a&gt; section in Chapter 19).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752d28b2015c4a5a9b75eaf4a1216f39bbdf32b1" translate="yes" xml:space="preserve">
          <source>Other languages, like C, will attempt to give you exactly what you asked for in this situation, even though it isn&amp;rsquo;t what you want: you&amp;rsquo;ll get whatever is at the location in memory that would correspond to that element in the vector, even though the memory doesn&amp;rsquo;t belong to the vector. This is called a &lt;em&gt;buffer overread&lt;/em&gt; and can lead to security vulnerabilities if an attacker is able to manipulate the index in such a way as to read data they shouldn&amp;rsquo;t be allowed to that is stored after the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648ace77ed0f39aac89b4770e105e365ba693a3e" translate="yes" xml:space="preserve">
          <source>Other methods defined on the &lt;code&gt;Iterator&lt;/code&gt; trait, known as &lt;em&gt;iterator adaptors&lt;/em&gt;, allow you to change iterators into different kinds of iterators. You can chain multiple calls to iterator adaptors to perform complex actions in a readable way. But because all iterators are lazy, you have to call one of the consuming adaptor methods to get results from calls to iterator adaptors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2249508fdf94c149e36ab432d8b683b49f9e6995" translate="yes" xml:space="preserve">
          <source>Other places &lt;code&gt;as&lt;/code&gt; is used include as extra syntax for &lt;a href=&quot;keyword.crate&quot;&gt;&lt;code&gt;crate&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;use&lt;/code&gt;, to change the name something is imported as.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7f9932674bb9c25f134a0105ec09c2c00e169d" translate="yes" xml:space="preserve">
          <source>Other places the &lt;code&gt;let&lt;/code&gt; keyword is used include along with &lt;a href=&quot;keyword.if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt;, in the form of &lt;code&gt;if let&lt;/code&gt; expressions. They're useful if the pattern being matched isn't exhaustive, such as with enumerations. &lt;code&gt;while let&lt;/code&gt; also exists, which runs a loop with a pattern matched value until that pattern can't be matched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995a627762e880a789090e71c29696dd2233250e" translate="yes" xml:space="preserve">
          <source>Other preludes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="446bad3bff9defd3006cda2835a7a1319d8a35e5" translate="yes" xml:space="preserve">
          <source>Other programming languages don&amp;rsquo;t require you to connect arguments to return values in the signature. Although this might seem strange, it will get easier over time. You might want to compare this example with the &lt;a href=&quot;ch10-03-lifetime-syntax#validating-references-with-lifetimes&quot;&gt;&amp;ldquo;Validating References with Lifetimes&amp;rdquo;&lt;/a&gt; section in Chapter 10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60eaf9cabcdeaacd84dda8af53312b70b5da796b" translate="yes" xml:space="preserve">
          <source>Other than that, attribute-like macros work the same way as custom derive macros: you create a crate with the &lt;code&gt;proc-macro&lt;/code&gt; crate type and implement a function that generates the code you want!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d96cb86d3646fb81607f614e4ed101dbb61f72" translate="yes" xml:space="preserve">
          <source>Other traits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9112d41ffd7475a6522498133c87c82589bd20c2" translate="yes" xml:space="preserve">
          <source>Other types are return or parameter types for various methods in this module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a231351b0f4e7aeebda1053a5e76d13dcb380a5" translate="yes" xml:space="preserve">
          <source>Other types don't result in any further drops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7020ce2c6597276032beef17fd5a264945d38617" translate="yes" xml:space="preserve">
          <source>Other types with interior mutability can be created by using &lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; as a field. The standard library provides a variety of types that provide safe interior mutability APIs. For example, &lt;a href=&quot;../std/cell/struct.refcell&quot;&gt;&lt;code&gt;std::cell::RefCell&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; uses run-time borrow checks to ensure the usual rules around multiple references. The &lt;a href=&quot;../std/sync/atomic/index&quot;&gt;&lt;code&gt;std::sync::atomic&lt;/code&gt;&lt;/a&gt; module contains types that wrap a value that is only accessed with atomic operations, allowing the value to be shared and mutated across threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599ae630fe84d3beb8513b4b711cd547079431cd" translate="yes" xml:space="preserve">
          <source>Other use-cases of &lt;code&gt;assert!&lt;/code&gt; include testing and enforcing run-time invariants in safe code (whose violation cannot result in unsafety).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8937a7fc4e72088623e287ce30c97cb2dfe7283" translate="yes" xml:space="preserve">
          <source>Otherwise it is equivalent to calling &lt;a href=&quot;struct.pathbuf#method.pop&quot;&gt;&lt;code&gt;pop&lt;/code&gt;&lt;/a&gt; and then pushing &lt;code&gt;file_name&lt;/code&gt;. The new path will be a sibling of the original path. (That is, it will have the same parent.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37fe747217886166ea371a631e142a031b6a7b7" translate="yes" xml:space="preserve">
          <source>Otherwise, M is a token-tree sequence starting with a complex NT: &lt;code&gt;M = $( tt ... ) OP &amp;alpha;&lt;/code&gt;, or &lt;code&gt;M = $( tt ... ) SEP OP &amp;alpha;&lt;/code&gt;, (where &lt;code&gt;&amp;alpha;&lt;/code&gt; is the (potentially empty) sequence of token trees for the rest of the matcher).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3979bc5186a96b9165f258e5cf3641aa97f2109" translate="yes" xml:space="preserve">
          <source>Otherwise, a temporary vector is allocated and the tail is moved twice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924bccd077970d788135a7832dffedb5e19ed44b" translate="yes" xml:space="preserve">
          <source>Otherwise, an &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; is returned with the same &lt;code&gt;Arc&lt;/code&gt; that was passed in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a74754ed30587d7524fb80829f9c67f0fd59f6" translate="yes" xml:space="preserve">
          <source>Otherwise, an &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt; is returned with the same &lt;code&gt;Rc&lt;/code&gt; that was passed in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea00676375cce55b25c24c3900ad8d91fe8b198" translate="yes" xml:space="preserve">
          <source>Otherwise, edit the code to pass the lint check, and remove the overruled attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e85707b79250bd8b856e5ae665d19d426f3f381" translate="yes" xml:space="preserve">
          <source>Otherwise, it tries to determine the home directory by invoking the &lt;code&gt;getpwuid_r&lt;/code&gt; function using the UID of the current user. An empty home directory field returned from the &lt;code&gt;getpwuid_r&lt;/code&gt; function is considered to be a valid value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5085664d3dd97fdbb0b3f9d3d918e581e0986f55" translate="yes" xml:space="preserve">
          <source>Otherwise, returns the value of the 'USERPROFILE' environment variable if it is set (including to an empty string).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8101e7cf6341fccad86da30ddd075e4eab3ee5" translate="yes" xml:space="preserve">
          <source>Otherwise, the portion of the file name after the final &lt;code&gt;.&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="080897ebd41df30ce96e1487fbd29e58924856eb" translate="yes" xml:space="preserve">
          <source>Otherwise, the portion of the file name before the final &lt;code&gt;.&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d86ad59ea40d5cf59b8de4ede8f6b7e49f58d63e" translate="yes" xml:space="preserve">
          <source>Otherwise, the sequence &lt;code&gt;uu ...&lt;/code&gt; must be non-empty; then LAST(M) = LAST(&lt;code&gt;uu ...&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5270e35ef24eac532a4d91eeaaf7988bb3731097" translate="yes" xml:space="preserve">
          <source>Otherwise, they work just like regular lint attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0d61497954041bb9b7946612d5835e3fcd762c" translate="yes" xml:space="preserve">
          <source>Otherwise, you may want to jump to one of these useful sections:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7655b057b9db516628b6ec609cbbac4394a83302" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;MyBox&amp;lt;T&amp;gt;&lt;/code&gt; type can&amp;rsquo;t be dereferenced because we haven&amp;rsquo;t implemented that ability on our type. To enable dereferencing with the &lt;code&gt;*&lt;/code&gt; operator, we implement the &lt;code&gt;Deref&lt;/code&gt; trait.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9207a8de5e841e4cc95ac4f3689ea87897da5c7" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;area&lt;/code&gt; function is now defined with one parameter, which we&amp;rsquo;ve named &lt;code&gt;rectangle&lt;/code&gt;, whose type is an immutable borrow of a struct &lt;code&gt;Rectangle&lt;/code&gt; instance. As mentioned in Chapter 4, we want to borrow the struct rather than take ownership of it. This way, &lt;code&gt;main&lt;/code&gt; retains its ownership and can continue using &lt;code&gt;rect1&lt;/code&gt;, which is the reason we use the &lt;code&gt;&amp;amp;&lt;/code&gt; in the function signature and where we call the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a3bac1f2dca57cc73f9221b0cab7bd13107caf" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;area&lt;/code&gt; function is very specific: it only computes the area of rectangles. It would be helpful to tie this behavior more closely to our &lt;code&gt;Rectangle&lt;/code&gt; struct, because it won&amp;rsquo;t work with any other type. Let&amp;rsquo;s look at how we can continue to refactor this code by turning the &lt;code&gt;area&lt;/code&gt; function into an &lt;code&gt;area&lt;/code&gt;&lt;em&gt;method&lt;/em&gt; defined on our &lt;code&gt;Rectangle&lt;/code&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfaad3af2e76dcb6534645f49f572bb14dcdc4f2" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;grep&lt;/code&gt; project will combine a number of concepts you&amp;rsquo;ve learned so far:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52a72cb6754c1fcd4ce1c66bc4693a888ef0a14" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;minigrep&lt;/code&gt; project is looking good so far! Now we&amp;rsquo;ll split the &lt;em&gt;src/main.rs&lt;/em&gt; file and put some code into the &lt;em&gt;src/lib.rs&lt;/em&gt; file so we can test it and have a &lt;em&gt;src/main.rs&lt;/em&gt; file with fewer responsibilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b5e063d7a3c760c57b190162bbd9b74d1a3d4d2" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;new&lt;/code&gt; function now returns a &lt;code&gt;Result&lt;/code&gt; with a &lt;code&gt;Config&lt;/code&gt; instance in the success case and a &lt;code&gt;&amp;amp;'static str&lt;/code&gt; in the error case. Recall from &lt;a href=&quot;ch10-03-lifetime-syntax#the-static-lifetime&quot;&gt;&amp;ldquo;The Static Lifetime&amp;rdquo;&lt;/a&gt; section in Chapter 10 that &lt;code&gt;&amp;amp;'static str&lt;/code&gt; is the type of string literals, which is our error message type for now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe671180d978c835b8f59ac0f3f67492ee61022" translate="yes" xml:space="preserve">
          <source>Our concurrency mistake has caused a compile time error. The &lt;code&gt;send&lt;/code&gt; function takes ownership of its parameter, and when the value is moved, the receiver takes ownership of it. This stops us from accidentally using the value again after sending it; the ownership system checks that everything is okay.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4444c88cfb7348be7065a71b67411c38cf815d8" translate="yes" xml:space="preserve">
          <source>Our first example is presented in a tree structure to elaborate on how the analysis of the matcher composes. (Some of the simpler subtrees have been elided.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03dc9c7158dfa2429d4c3d6b283a663461fb78f3" translate="yes" xml:space="preserve">
          <source>Our library will only provide the functionality of tracking how close to the maximum a value is and what the messages should be at what times. Applications that use our library will be expected to provide the mechanism for sending the messages: the application could put a message in the application, send an email, send a text message, or something else. The library doesn&amp;rsquo;t need to know that detail. All it needs is something that implements a trait we&amp;rsquo;ll provide called &lt;code&gt;Messenger&lt;/code&gt;. Listing 15-20 shows the library code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4872fe1ff4af8ea372abc0eed84c5f2cc971ce" translate="yes" xml:space="preserve">
          <source>Our library&amp;rsquo;s user can now write their &lt;code&gt;main&lt;/code&gt; function to create a &lt;code&gt;Screen&lt;/code&gt; instance. To the &lt;code&gt;Screen&lt;/code&gt; instance, they can add a &lt;code&gt;SelectBox&lt;/code&gt; and a &lt;code&gt;Button&lt;/code&gt; by putting each in a &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; to become a trait object. They can then call the &lt;code&gt;run&lt;/code&gt; method on the &lt;code&gt;Screen&lt;/code&gt; instance, which will call &lt;code&gt;draw&lt;/code&gt; on each of the components. Listing 17-9 shows this implementation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f97ecd7d9bde89d0ef157149e44feaabe641749" translate="yes" xml:space="preserve">
          <source>Our solution to this problem is what we call &amp;ldquo;stability without stagnation&amp;rdquo;, and our guiding principle is this: you should never have to fear upgrading to a new version of stable Rust. Each upgrade should be painless, but should also bring you new features, fewer bugs, and faster compile times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f7b86920d282f1c8d565f0454438b9d0c724e1" translate="yes" xml:space="preserve">
          <source>Our test caught the bug! The &lt;code&gt;it_adds_two&lt;/code&gt; test failed, displaying the message &lt;code&gt;assertion failed: `(left == right)`&lt;/code&gt; and showing that &lt;code&gt;left&lt;/code&gt; was &lt;code&gt;4&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; was &lt;code&gt;5&lt;/code&gt;. This message is useful and helps us start debugging: it means the &lt;code&gt;left&lt;/code&gt; argument to &lt;code&gt;assert_eq!&lt;/code&gt; was &lt;code&gt;4&lt;/code&gt; but the &lt;code&gt;right&lt;/code&gt; argument, where we had &lt;code&gt;add_two(2)&lt;/code&gt;, was &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069f6f48b22dbba6f3aadbd66c65751d3e689873" translate="yes" xml:space="preserve">
          <source>Our test passed, so we know it works!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3fb5986f91b2dcdf4f3ae02d18ace519c5ef26d" translate="yes" xml:space="preserve">
          <source>Our tests caught the bug! Because &lt;code&gt;larger.width&lt;/code&gt; is 8 and &lt;code&gt;smaller.width&lt;/code&gt; is 5, the comparison of the widths in &lt;code&gt;can_hold&lt;/code&gt; now returns &lt;code&gt;false&lt;/code&gt;: 8 is not less than 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a456009a7c6e37690dc20c96fd3a00e2535e519a" translate="yes" xml:space="preserve">
          <source>Our two crates are tightly related, so we create the procedural macro crate within the directory of our &lt;code&gt;hello_macro&lt;/code&gt; crate. If we change the trait definition in &lt;code&gt;hello_macro&lt;/code&gt;, we&amp;rsquo;ll have to change the implementation of the procedural macro in &lt;code&gt;hello_macro_derive&lt;/code&gt; as well. The two crates will need to be published separately, and programmers using these crates will need to add both as dependencies and bring them both into scope. We could instead have the &lt;code&gt;hello_macro&lt;/code&gt; crate use &lt;code&gt;hello_macro_derive&lt;/code&gt; as a dependency and reexport the procedural macro code. However, the way we&amp;rsquo;ve structured the project makes it possible for programmers to use &lt;code&gt;hello_macro&lt;/code&gt; even if they don&amp;rsquo;t want the &lt;code&gt;derive&lt;/code&gt; functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04d54136e7055f33bb3e1bbb4cb0ac4fca594a8" translate="yes" xml:space="preserve">
          <source>Our web server needs to listen to a TCP connection, so that&amp;rsquo;s the first part we&amp;rsquo;ll work on. The standard library offers a &lt;code&gt;std::net&lt;/code&gt; module that lets us do this. Let&amp;rsquo;s make a new project in the usual fashion:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e421fbadb43b474b631f0045b2106bd87824cc" translate="yes" xml:space="preserve">
          <source>Out-of-order execution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="730dfeeb12a571e95bc1961c0b2230a903923296" translate="yes" xml:space="preserve">
          <source>Outer attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2522054e66f17e8ce74357f93aa3d55cec3e5c37" translate="yes" xml:space="preserve">
          <source>Outer attributes are allowed on match arms. The only attributes that have meaning on match arms are &lt;a href=&quot;../conditional-compilation&quot;&gt;&lt;code&gt;cfg&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../attributes/codegen#the-cold-attribute&quot;&gt;&lt;code&gt;cold&lt;/code&gt;&lt;/a&gt;, and the &lt;a href=&quot;../attributes/diagnostics#lint-check-attributes&quot;&gt;lint check attributes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17ac49e59e3c24f65b6eb7eb800c128e2d0327f" translate="yes" xml:space="preserve">
          <source>Outer block doc comment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49bb2a2dcd1d2f083a137acbbd937d73adfc4ddf" translate="yes" xml:space="preserve">
          <source>Outer line doc comment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="d1823c68a7e59aee497eaf6bcce7cab74d25109b" translate="yes" xml:space="preserve">
          <source>Output::borrow</source>
          <target state="translated">Output::borrow</target>
        </trans-unit>
        <trans-unit id="bd4894b30dacbb463e4f9b290aef62366ceaea5b" translate="yes" xml:space="preserve">
          <source>Output::borrow_mut</source>
          <target state="translated">Output::borrow_mut</target>
        </trans-unit>
        <trans-unit id="91e25cbffb5245c6c4c63c7f061f2d786fdb521f" translate="yes" xml:space="preserve">
          <source>Output::clone</source>
          <target state="translated">Output::clone</target>
        </trans-unit>
        <trans-unit id="6df4f0510aea77969aaaa10e205502ea42c93963" translate="yes" xml:space="preserve">
          <source>Output::clone_from</source>
          <target state="translated">Output::clone_from</target>
        </trans-unit>
        <trans-unit id="687e30cb7117f28eda51e39e7bab28b83cc9e405" translate="yes" xml:space="preserve">
          <source>Output::clone_into</source>
          <target state="translated">Output::clone_into</target>
        </trans-unit>
        <trans-unit id="3032d1424e084a9f76413e7e6788cdfd8a67b58a" translate="yes" xml:space="preserve">
          <source>Output::eq</source>
          <target state="translated">Output::eq</target>
        </trans-unit>
        <trans-unit id="865dec7fa701b8a9ca5f805a39100052bfe318b6" translate="yes" xml:space="preserve">
          <source>Output::fmt</source>
          <target state="translated">Output::fmt</target>
        </trans-unit>
        <trans-unit id="993990d97649b770ccd9d98ea8487d704986b6d9" translate="yes" xml:space="preserve">
          <source>Output::from</source>
          <target state="translated">Output::from</target>
        </trans-unit>
        <trans-unit id="5b9601c898cded464f2e06dadaf7ab7c9741cd5c" translate="yes" xml:space="preserve">
          <source>Output::into</source>
          <target state="translated">Output::into</target>
        </trans-unit>
        <trans-unit id="1c87bedb995cad24d365f47966cbd4346b591666" translate="yes" xml:space="preserve">
          <source>Output::ne</source>
          <target state="translated">Output::ne</target>
        </trans-unit>
        <trans-unit id="62c76b51d4718e2ffcbe3b7aa04ddda3b2b70e94" translate="yes" xml:space="preserve">
          <source>Output::to_owned</source>
          <target state="translated">Output::to_owned</target>
        </trans-unit>
        <trans-unit id="9a87d3e2cc9f1d250bfa315a36823fa4cbec36e3" translate="yes" xml:space="preserve">
          <source>Output::try_from</source>
          <target state="translated">Output::try_from</target>
        </trans-unit>
        <trans-unit id="5be92053871d2c9c72d6bad5e8965eb4276aed9e" translate="yes" xml:space="preserve">
          <source>Output::try_into</source>
          <target state="translated">Output::try_into</target>
        </trans-unit>
        <trans-unit id="a0027fc28599b52fba5b8c93b690e40203fbae0a" translate="yes" xml:space="preserve">
          <source>Output::type_id</source>
          <target state="translated">Output::type_id</target>
        </trans-unit>
        <trans-unit id="fc89893a1de62fd92a4d6c68804db741e3ea0dcd" translate="yes" xml:space="preserve">
          <source>Outputs the detailed cause of parsing an integer failing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da7bc9200c71949eae8135d4a25bb5b299cf7cc" translate="yes" xml:space="preserve">
          <source>Overflow</source>
          <target state="translated">Overflow</target>
        </trans-unit>
        <trans-unit id="3467b7b5de17cb6f124e7f7c4127e41ae85ffcdf" translate="yes" xml:space="preserve">
          <source>Overflow Behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ff3d30af6aecf4f3bfff401ee0c4026a8aeafc" translate="yes" xml:space="preserve">
          <source>Overflow behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268ceeb8fd762749a7c0aa0e18a308d2a3e0eae9" translate="yes" xml:space="preserve">
          <source>Overflowing Euclidean remainder. Calculates &lt;code&gt;self.rem_euclid(rhs)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a536f91d51d79c240c5d894b51ca7769b45b744" translate="yes" xml:space="preserve">
          <source>Overloadable operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40546cb9c881ab1291c600fcc0df156813d3befe" translate="yes" xml:space="preserve">
          <source>Overloadable?</source>
          <target state="translated">Overloadable?</target>
        </trans-unit>
        <trans-unit id="1541c7c02fe167096e792d52736b0810a9fb3cfa" translate="yes" xml:space="preserve">
          <source>Overloading Trait</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ecfec5f0e4ba427d318353841c4d754fd5e25f" translate="yes" xml:space="preserve">
          <source>Overloading Traits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a5b884e85ec2d623399dce4a7f443948a467bd" translate="yes" xml:space="preserve">
          <source>Overloading method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd333bcce81d89530a67062d3af83d0e05013841" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;code&gt;dwDesiredAccess&lt;/code&gt; argument to the call to &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858.aspx&quot;&gt;&lt;code&gt;CreateFile&lt;/code&gt;&lt;/a&gt; with the specified value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c959035dcdad00a6f6547d8f9d2286eb95a249a" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;code&gt;dwDesiredAccess&lt;/code&gt; argument to the call to [&lt;code&gt;CreateFile&lt;/code&gt;] with the specified value. &lt;a href=&quot;../os/windows/fs/trait.openoptionsext#tymethod.access_mode&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b87109866c9e881094fc3108cb2582359d9f6aa9" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;code&gt;dwShareMode&lt;/code&gt; argument to the call to &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858.aspx&quot;&gt;&lt;code&gt;CreateFile&lt;/code&gt;&lt;/a&gt; with the specified value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf2d85760bd185994ef5bf2f175143dec9ca3909" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;code&gt;dwShareMode&lt;/code&gt; argument to the call to [&lt;code&gt;CreateFile&lt;/code&gt;] with the specified value. &lt;a href=&quot;../os/windows/fs/trait.openoptionsext#tymethod.share_mode&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="cd8f194e8d7e958260d7af2051984d8f3e683b51" translate="yes" xml:space="preserve">
          <source>Overwrites a memory location with the given value without reading or dropping the old value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949a410afc355b96a7905ccc83a834749836d22c" translate="yes" xml:space="preserve">
          <source>Overwriting a Value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebf9d2abbf1cc7aae1c696ee32449969d19a22c" translate="yes" xml:space="preserve">
          <source>Owned data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fbf13be9f8b7616cdb154755370e6d320e7e90d" translate="yes" xml:space="preserve">
          <source>Ownership Rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1340f6fc9cc4c2d08ca6cee78e483a7eadf7311f" translate="yes" xml:space="preserve">
          <source>Ownership affects how lots of other parts of Rust work, so we&amp;rsquo;ll talk about these concepts further throughout the rest of the book. Let&amp;rsquo;s move on to Chapter 5 and look at grouping pieces of data together in a &lt;code&gt;struct&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061f3ef75cdf7d220844151ec65f84114fd6c667" translate="yes" xml:space="preserve">
          <source>Ownership and Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e783f9dc891702d006be5ffb27e982821fefa6e5" translate="yes" xml:space="preserve">
          <source>Ownership and the drop check</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd97430c54818d57ae7f4721676609e1836384c3" translate="yes" xml:space="preserve">
          <source>Ownership is Rust&amp;rsquo;s most unique feature, and it enables Rust to make memory safety guarantees without needing a garbage collector. Therefore, it&amp;rsquo;s important to understand how ownership works in Rust. In this chapter, we&amp;rsquo;ll talk about ownership as well as several related features: borrowing, slices, and how Rust lays data out in memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bcd32d1ab543a47fbd7ea77937460f4ae2b2e40" translate="yes" xml:space="preserve">
          <source>Ownership of Struct Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0b385e3bf746d2a40063b477100d32fc06fbb3" translate="yes" xml:space="preserve">
          <source>Ownership of the Returned Value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa7ff6fb00a7ace8d98cf880a492dc6c5ffc8ca7" translate="yes" xml:space="preserve">
          <source>PI</source>
          <target state="translated">PI</target>
        </trans-unit>
        <trans-unit id="99a088ed6d9619a992c784e598231666dc79ef59" translate="yes" xml:space="preserve">
          <source>Packages and Crates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6664ac6a163b68baf85aa80b0de081ae92d3945" translate="yes" xml:space="preserve">
          <source>Panic support in the standard library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64750ba8905f79ec9b27121f796de54641de81e8" translate="yes" xml:space="preserve">
          <source>Panic-free bitwise shift-left; yields &lt;code&gt;self &amp;lt;&amp;lt; mask(rhs)&lt;/code&gt;, where &lt;code&gt;mask&lt;/code&gt; removes any high-order bits of &lt;code&gt;rhs&lt;/code&gt; that would cause the shift to exceed the bitwidth of the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa0a650679136bf5c6a5c931f1774da4aa63dd5" translate="yes" xml:space="preserve">
          <source>Panic-free bitwise shift-right; yields &lt;code&gt;self &amp;gt;&amp;gt; mask(rhs)&lt;/code&gt;, where &lt;code&gt;mask&lt;/code&gt; removes any high-order bits of &lt;code&gt;rhs&lt;/code&gt; that would cause the shift to exceed the bitwidth of the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab31f4ac9fc3c9e915343e6e27bd26eabe596bd8" translate="yes" xml:space="preserve">
          <source>PanicInfo</source>
          <target state="translated">PanicInfo</target>
        </trans-unit>
        <trans-unit id="643cc2152accd53993d549a5d958a2a8112c605d" translate="yes" xml:space="preserve">
          <source>PanicInfo::borrow</source>
          <target state="translated">PanicInfo::borrow</target>
        </trans-unit>
        <trans-unit id="6f87929cce7f37a4643cf9668cce7fd2a3c0a867" translate="yes" xml:space="preserve">
          <source>PanicInfo::borrow_mut</source>
          <target state="translated">PanicInfo::borrow_mut</target>
        </trans-unit>
        <trans-unit id="0627e71cb9d2ea5c4e376502d4b534944d95a2b5" translate="yes" xml:space="preserve">
          <source>PanicInfo::fmt</source>
          <target state="translated">PanicInfo::fmt</target>
        </trans-unit>
        <trans-unit id="a75f88ef036635c57bb6c3f294eb1864b080d92b" translate="yes" xml:space="preserve">
          <source>PanicInfo::from</source>
          <target state="translated">PanicInfo::from</target>
        </trans-unit>
        <trans-unit id="f5d51dd33ffc0fc2d5c8579f0762bbffa7356d33" translate="yes" xml:space="preserve">
          <source>PanicInfo::into</source>
          <target state="translated">PanicInfo::into</target>
        </trans-unit>
        <trans-unit id="1a5376f14ebb31aa62bb71354df743f4ab22d90f" translate="yes" xml:space="preserve">
          <source>PanicInfo::location</source>
          <target state="translated">PanicInfo::location</target>
        </trans-unit>
        <trans-unit id="f4f5b6dcf5ba5934d97c8506165f90b66a53635d" translate="yes" xml:space="preserve">
          <source>PanicInfo::message</source>
          <target state="translated">PanicInfo::message</target>
        </trans-unit>
        <trans-unit id="41ad71622e704da94b5ec33eec78cbe35e9d9051" translate="yes" xml:space="preserve">
          <source>PanicInfo::payload</source>
          <target state="translated">PanicInfo::payload</target>
        </trans-unit>
        <trans-unit id="0c5da16342c18730d19426fb04fb7d13e95927ef" translate="yes" xml:space="preserve">
          <source>PanicInfo::to_string</source>
          <target state="translated">PanicInfo::to_string</target>
        </trans-unit>
        <trans-unit id="128dfe7ed8ea9040dfa6b755a8f58a058809a754" translate="yes" xml:space="preserve">
          <source>PanicInfo::try_from</source>
          <target state="translated">PanicInfo::try_from</target>
        </trans-unit>
        <trans-unit id="124e8d1366dede099902e66296c0fd7c941d22c8" translate="yes" xml:space="preserve">
          <source>PanicInfo::try_into</source>
          <target state="translated">PanicInfo::try_into</target>
        </trans-unit>
        <trans-unit id="7d559bee200d64d9ed14e627440fc27efa09a6ed" translate="yes" xml:space="preserve">
          <source>PanicInfo::type_id</source>
          <target state="translated">PanicInfo::type_id</target>
        </trans-unit>
        <trans-unit id="b6d2a57e62de0b05a8e65f1687e4f544c18dd949" translate="yes" xml:space="preserve">
          <source>Panics</source>
          <target state="translated">Panics</target>
        </trans-unit>
        <trans-unit id="45e26bbcde013da7d92e500c033afb14073380bf" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; are out of bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3cf74e01d7358bfd9a5fe8f5999d1266efbbdf0" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;at &amp;gt; len&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a00b9bcb539cbd67965e71599dbb2232d727abe" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;at&lt;/code&gt; is not on a &lt;code&gt;UTF-8&lt;/code&gt; code point boundary, or if it is beyond the last code point of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc29dc108576e18e0990d54dd465b6a57e3a4505" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;begin&lt;/code&gt; does not point to the starting byte offset of a character (as defined by &lt;code&gt;is_char_boundary&lt;/code&gt;), if &lt;code&gt;end&lt;/code&gt; does not point to the ending byte offset of a character (&lt;code&gt;end + 1&lt;/code&gt; is either a starting byte offset or equal to &lt;code&gt;len&lt;/code&gt;), if &lt;code&gt;begin &amp;gt; end&lt;/code&gt;, or if &lt;code&gt;end &amp;gt;= len&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d883f0070f09958226988ed7cfef750adf9a7212" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;begin&lt;/code&gt; does not point to the starting byte offset of a character (as defined by &lt;code&gt;is_char_boundary&lt;/code&gt;), or if &lt;code&gt;begin &amp;gt;= len&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227c67bc70f8605678180bb1c51bde64cbfc241f" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;begin&lt;/code&gt; or &lt;code&gt;end&lt;/code&gt; does not point to the starting byte offset of a character (as defined by &lt;code&gt;is_char_boundary&lt;/code&gt;), if &lt;code&gt;begin &amp;gt; end&lt;/code&gt;, or if &lt;code&gt;end &amp;gt; len&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87f5b8a7bcf907dca18470bd2c4295b8f82a333" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;chunk_size&lt;/code&gt; is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26629f2e9cb257daf9479ce741e24d310ef11cc" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;end&lt;/code&gt; does not point to the ending byte offset of a character (&lt;code&gt;end + 1&lt;/code&gt; is either a starting byte offset as defined by &lt;code&gt;is_char_boundary&lt;/code&gt;, or equal to &lt;code&gt;len&lt;/code&gt;), or if &lt;code&gt;end &amp;gt;= len&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6581cda5b120f3ca8bd07261fc66544bbbb296d9" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;end&lt;/code&gt; does not point to the starting byte offset of a character (as defined by &lt;code&gt;is_char_boundary&lt;/code&gt;), or if &lt;code&gt;end &amp;gt; len&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ddb566979a8cefa7ab88568dfde52979e9e43e" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;idx&lt;/code&gt; is larger than or equal to the &lt;code&gt;String&lt;/code&gt;'s length, or if it does not lie on a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; boundary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4fbb5ee18ecf3f5a538e825a413fd33543bd1e6" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;idx&lt;/code&gt; is larger than the &lt;code&gt;String&lt;/code&gt;'s length, or if it does not lie on a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; boundary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb624a10654cb4a56db6e44b767ca6a0dba685cc" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;index &amp;gt; len&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b539932ef8f75866ed477be731b46e3b053498" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;index&lt;/code&gt; is greater than &lt;code&gt;VecDeque&lt;/code&gt;'s length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb005fe72f354846adb76e0ab4acd8f29abe4e6" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;index&lt;/code&gt; is out of bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c04419c74aa294d52cbbf31d948f2f7cd0a07f" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;mid &amp;gt; len&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a48194ae20dadbbd17b00dfdb474b779a5aafb1" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;mid&lt;/code&gt; is not on a UTF-8 code point boundary, or if it is beyond the last code point of the string slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab954b931701b8da184e0a67886350522dec87e" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;min &amp;gt; max&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt; is NaN, or &lt;code&gt;max&lt;/code&gt; is NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8912d24903a8818fab8284266f4f35dba2e8f134" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;min &amp;gt; max&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908fa080369d16b2e2ca521bd400a0e5aa53ebe2" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;new_len&lt;/code&gt; does not lie on a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; boundary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2356083873f65d82e74b582e43d99cd12e3c782f" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;order&lt;/code&gt; is &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;enum.ordering#variant.AcqRel&quot;&gt;&lt;code&gt;AcqRel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a12385fe263416be6302b81e17e9a0a0bffd4f" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;order&lt;/code&gt; is &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f80b9307a2043dbddd529fabbe538dba66015e6" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;order&lt;/code&gt; is &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;enum.ordering#variant.AcqRel&quot;&gt;&lt;code&gt;AcqRel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e914bd8d0f1bd40b4f4bac162c44f46715bb3623" translate="yes" xml:space="preserve">
          <source>Panics if &lt;code&gt;size&lt;/code&gt; is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7688e6229d78e60342a90db63778f05e43aaee12" translate="yes" xml:space="preserve">
          <source>Panics if a thread name was set and it contained null bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72909bbaf77e0b69918d8918676af890c7768aa7" translate="yes" xml:space="preserve">
          <source>Panics if called from a panicking thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2308f7f00f1d6ff736779ab68e1e0f8bf967103" translate="yes" xml:space="preserve">
          <source>Panics if either index is out of bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2c3dc1ec920746fc716b29e3cc4bc3f0189b1f" translate="yes" xml:space="preserve">
          <source>Panics if given a radix larger than 36.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0913d3b5e43e239a73323788fb43b0c6f6052008" translate="yes" xml:space="preserve">
          <source>Panics if range &lt;code&gt;start &amp;gt; end&lt;/code&gt;. Panics if range &lt;code&gt;start == end&lt;/code&gt; and both bounds are &lt;code&gt;Excluded&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44d53cd113615ff1349f4d3538c98db7b03e4ec" translate="yes" xml:space="preserve">
          <source>Panics if the OS fails to create a thread; use &lt;a href=&quot;struct.builder#method.spawn&quot;&gt;&lt;code&gt;Builder::spawn&lt;/code&gt;&lt;/a&gt; to recover from such errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c48ff9b4f2747980d945325572a3544fcc9df6" translate="yes" xml:space="preserve">
          <source>Panics if the buffer is not large enough. A buffer of length 2 is large enough to encode any &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf3a4329aa717a2054250e735bcb1f2d8fd7381" translate="yes" xml:space="preserve">
          <source>Panics if the buffer is not large enough. A buffer of length four is large enough to encode any &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b8ed6f06694f15fefe1c0b17faa9d42e6982e8" translate="yes" xml:space="preserve">
          <source>Panics if the current capacity is smaller than the supplied minimum capacity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7bf8ce8c77ffa6b002f5e2807367bc02986ed6b" translate="yes" xml:space="preserve">
          <source>Panics if the key is not present in the &lt;code&gt;BTreeMap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5b9677859ff1a4d420878e023fad91fd920de5" translate="yes" xml:space="preserve">
          <source>Panics if the key is not present in the &lt;code&gt;HashMap&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ed7c828acdf0040178262bed0b9ea36222f6ec" translate="yes" xml:space="preserve">
          <source>Panics if the new allocation size overflows &lt;a href=&quot;../../primitive.usize&quot;&gt;&lt;code&gt;usize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afad6f84139152f62b0eb03028c1b7c7d9c01601" translate="yes" xml:space="preserve">
          <source>Panics if the new allocation size overflows &lt;a href=&quot;../primitive.usize&quot;&gt;&lt;code&gt;usize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c444f9efed700504a7bb0d4c2f32f2526b33ad" translate="yes" xml:space="preserve">
          <source>Panics if the new allocation size overflows &lt;code&gt;usize&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6878720af9130ae768c50d9182eced223ac3e9" translate="yes" xml:space="preserve">
          <source>Panics if the new capacity overflows &lt;a href=&quot;../primitive.usize&quot;&gt;&lt;code&gt;usize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8162a617d1e0ddf0e6e4e23d693bc6d9f0f41a" translate="yes" xml:space="preserve">
          <source>Panics if the new capacity overflows &lt;code&gt;usize&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422fbebf143eefa32b9d4a5126ccd9d1b7062c43" translate="yes" xml:space="preserve">
          <source>Panics if the new number of elements in self overflows a &lt;code&gt;usize&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="410b8e5ee57f65adb3283515f0752baf3f50ca5a" translate="yes" xml:space="preserve">
          <source>Panics if the number of elements in the vector overflows a &lt;code&gt;usize&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6153c72412b85c5d99a4afc48f284ef1722a76d6" translate="yes" xml:space="preserve">
          <source>Panics if the self value equals &lt;a href=&quot;#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4ee5da2c39c039af6911bcc90e3764b2547239" translate="yes" xml:space="preserve">
          <source>Panics if the starting point is greater than the end point or if the end point is greater than the length of the vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912479e44668c6d2b6da0ceea601f7999f026665" translate="yes" xml:space="preserve">
          <source>Panics if the starting point or end point do not lie on a &lt;a href=&quot;../primitive.char&quot;&gt;&lt;code&gt;char&lt;/code&gt;&lt;/a&gt; boundary, or if they're out of bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51693545d322dc753e96f9cf34f459ce11bb08e5" translate="yes" xml:space="preserve">
          <source>Panics if the value in either &lt;code&gt;RefCell&lt;/code&gt; is currently borrowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05300875c11c11e7c88f7afe1cfa831f3a9f5e9" translate="yes" xml:space="preserve">
          <source>Panics if the value is a &lt;a href=&quot;#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; with a custom panic message provided by &lt;code&gt;msg&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0a9b48bbad15ee7ad80214e68a3a69b17b4613" translate="yes" xml:space="preserve">
          <source>Panics if the value is an &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt;, with a panic message including the passed message, and the content of the &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079f2b0f810a8a6fd0d539c8d239581c551132b3" translate="yes" xml:space="preserve">
          <source>Panics if the value is an &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt;, with a panic message provided by the &lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt;'s value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a29e171705710555a50c938893a151367adf00a" translate="yes" xml:space="preserve">
          <source>Panics if the value is an &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;, with a custom panic message provided by the &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;'s value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdf713e8009541f1b4b0acb586ef9e24a85ce80" translate="yes" xml:space="preserve">
          <source>Panics if the value is an &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;, with a panic message including the passed message, and the content of the &lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5a2bccec408c087394118e72273e50c7c3a908" translate="yes" xml:space="preserve">
          <source>Panics if the value is currently borrowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f43b8ce48e0f6b40c92d388586bda2aabec640d" translate="yes" xml:space="preserve">
          <source>Panics if the value is currently borrowed. For a non-panicking variant, use &lt;a href=&quot;#method.try_borrow_mut&quot;&gt;&lt;code&gt;try_borrow_mut&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76bf04ea0e230a6eb1435c3b437b0898416fd95e" translate="yes" xml:space="preserve">
          <source>Panics if the value is currently mutably borrowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9a9655c36bb496e01300e457ed684478450ddc" translate="yes" xml:space="preserve">
          <source>Panics if the value is currently mutably borrowed. For a non-panicking variant, use &lt;a href=&quot;#method.try_borrow&quot;&gt;&lt;code&gt;try_borrow&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0058788ae9139eac368864a7afd01481f75fd504" translate="yes" xml:space="preserve">
          <source>Panics if writing to &lt;code&gt;io::stderr&lt;/code&gt; fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e022dcdac2398a56fe20723404915ae303bbf3f7" translate="yes" xml:space="preserve">
          <source>Panics if writing to &lt;code&gt;io::stdout()&lt;/code&gt; fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b6c23e128cd74ca2303b9792cb907904c51551" translate="yes" xml:space="preserve">
          <source>Panics if writing to &lt;code&gt;io::stdout&lt;/code&gt; fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223dba1c3ab97175b4c9b2ec63766508ab8766fa" translate="yes" xml:space="preserve">
          <source>Panics on Windows if the slice is larger than 4GB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca88777006308ed33a173e7ff16f27a5142b1c92" translate="yes" xml:space="preserve">
          <source>Panics the current thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc54bc05077cd1dff8f90257913651d4ede06cd" translate="yes" xml:space="preserve">
          <source>Panics when &lt;code&gt;index &amp;gt;= len()&lt;/code&gt;, meaning it always panics on empty slices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586cc6931ce1887cb9e3f36bca4b79cfde3e3858" translate="yes" xml:space="preserve">
          <source>Parameter patterns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9627107a88876f4aaf6d7e0b0c19984c3a631ae" translate="yes" xml:space="preserve">
          <source>Parentheses</source>
          <target state="translated">Parentheses</target>
        </trans-unit>
        <trans-unit id="2ba6296ed07c087ca42764b220541ea56c043fe8" translate="yes" xml:space="preserve">
          <source>Parenthesized expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70529210a0e7f6abe9c518afdf5be60f426db4f6" translate="yes" xml:space="preserve">
          <source>Parenthesized sub-expressions (&lt;code&gt;(e)&lt;/code&gt;): if the expression has type &lt;code&gt;U&lt;/code&gt;, then the sub-expression is a coercion site to &lt;code&gt;U&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f30b7563d9a017e0ddf7d0f5f42e138262ae343" translate="yes" xml:space="preserve">
          <source>Parenthesized types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66fd693e614d43cbdcd588298ad4f5002ceaa56e" translate="yes" xml:space="preserve">
          <source>Parse a &lt;code&gt;bool&lt;/code&gt; from a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a95cb762eaa943dba79da612a1899d9bd26e23" translate="yes" xml:space="preserve">
          <source>Parse a small number of HTTP requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e9bfbc9e7b5bd1dc3e0af9bcdbe3a4e57ce525f" translate="yes" xml:space="preserve">
          <source>Parse a value from a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df51f3d8b209dd445e699c45b87f287f60318d6" translate="yes" xml:space="preserve">
          <source>ParseBoolError</source>
          <target state="translated">ParseBoolError</target>
        </trans-unit>
        <trans-unit id="8eb2a2d48e84950684e227568ccd24f89cecf634" translate="yes" xml:space="preserve">
          <source>ParseBoolError::borrow</source>
          <target state="translated">ParseBoolError::borrow</target>
        </trans-unit>
        <trans-unit id="258132f4733fe2e800896b65d61760284a9b1108" translate="yes" xml:space="preserve">
          <source>ParseBoolError::borrow_mut</source>
          <target state="translated">ParseBoolError::borrow_mut</target>
        </trans-unit>
        <trans-unit id="5276aeca7e20e6847083cb8eef37935daafad7ac" translate="yes" xml:space="preserve">
          <source>ParseBoolError::cause</source>
          <target state="translated">ParseBoolError::cause</target>
        </trans-unit>
        <trans-unit id="57320a957365114b3f6cd168deddf189fec5e18f" translate="yes" xml:space="preserve">
          <source>ParseBoolError::clone</source>
          <target state="translated">ParseBoolError::clone</target>
        </trans-unit>
        <trans-unit id="497967e0f614fc9ca0747df820fb19eb5fe3e67f" translate="yes" xml:space="preserve">
          <source>ParseBoolError::clone_from</source>
          <target state="translated">ParseBoolError::clone_from</target>
        </trans-unit>
        <trans-unit id="69ff34ce5af0385383b93bcfc19433b374513a7e" translate="yes" xml:space="preserve">
          <source>ParseBoolError::clone_into</source>
          <target state="translated">ParseBoolError::clone_into</target>
        </trans-unit>
        <trans-unit id="f0de52ad7c2d15233e1decfe190d8d64d505e29e" translate="yes" xml:space="preserve">
          <source>ParseBoolError::description</source>
          <target state="translated">ParseBoolError::description</target>
        </trans-unit>
        <trans-unit id="30f346a13d291f3b5e4eb6bd1d6ec6aafc52025a" translate="yes" xml:space="preserve">
          <source>ParseBoolError::eq</source>
          <target state="translated">ParseBoolError::eq</target>
        </trans-unit>
        <trans-unit id="9f24eaf42a0dd5efa93b9d6bf258ba6d5a0f5fa2" translate="yes" xml:space="preserve">
          <source>ParseBoolError::fmt</source>
          <target state="translated">ParseBoolError::fmt</target>
        </trans-unit>
        <trans-unit id="334c6f2349bcf569758fb76b8afa7675c0be4d5a" translate="yes" xml:space="preserve">
          <source>ParseBoolError::from</source>
          <target state="translated">ParseBoolError::from</target>
        </trans-unit>
        <trans-unit id="f029f365ba49aa75095e5155e48b22eefe09e055" translate="yes" xml:space="preserve">
          <source>ParseBoolError::into</source>
          <target state="translated">ParseBoolError::into</target>
        </trans-unit>
        <trans-unit id="9b8fb7ea4f60c2cb57692370bac41ef31d56a54a" translate="yes" xml:space="preserve">
          <source>ParseBoolError::ne</source>
          <target state="translated">ParseBoolError::ne</target>
        </trans-unit>
        <trans-unit id="1bfc4bb4a2e0f11827dc8a2ba5b2f7e8c2844955" translate="yes" xml:space="preserve">
          <source>ParseBoolError::source</source>
          <target state="translated">ParseBoolError::source</target>
        </trans-unit>
        <trans-unit id="581399ba6139e99be1fcaaa609d0a4de6e07c0b9" translate="yes" xml:space="preserve">
          <source>ParseBoolError::to_owned</source>
          <target state="translated">ParseBoolError::to_owned</target>
        </trans-unit>
        <trans-unit id="d438670aac49aa97a691966390da9690d0043bdf" translate="yes" xml:space="preserve">
          <source>ParseBoolError::to_string</source>
          <target state="translated">ParseBoolError::to_string</target>
        </trans-unit>
        <trans-unit id="380adb9cc070f49995f274237bb31b63fcd6c8ea" translate="yes" xml:space="preserve">
          <source>ParseBoolError::try_from</source>
          <target state="translated">ParseBoolError::try_from</target>
        </trans-unit>
        <trans-unit id="8dcc9623e98d085f8047791826ebce758be73063" translate="yes" xml:space="preserve">
          <source>ParseBoolError::try_into</source>
          <target state="translated">ParseBoolError::try_into</target>
        </trans-unit>
        <trans-unit id="47c08161a00a4de632e1b571c00e3a8cd6a11ff7" translate="yes" xml:space="preserve">
          <source>ParseBoolError::type_id</source>
          <target state="translated">ParseBoolError::type_id</target>
        </trans-unit>
        <trans-unit id="55910152455e8c1512c509be28b2e68ffb96fe99" translate="yes" xml:space="preserve">
          <source>ParseCharError</source>
          <target state="translated">ParseCharError</target>
        </trans-unit>
        <trans-unit id="3f7423dc73c611d39b9fa7b1936998ce76aedfe3" translate="yes" xml:space="preserve">
          <source>ParseCharError::borrow</source>
          <target state="translated">ParseCharError::borrow</target>
        </trans-unit>
        <trans-unit id="3a455b34b44077504332f20c2d1877d37864447b" translate="yes" xml:space="preserve">
          <source>ParseCharError::borrow_mut</source>
          <target state="translated">ParseCharError::borrow_mut</target>
        </trans-unit>
        <trans-unit id="8263bf16cda460ce5ced006557b37ec37f6c9ab5" translate="yes" xml:space="preserve">
          <source>ParseCharError::cause</source>
          <target state="translated">ParseCharError::cause</target>
        </trans-unit>
        <trans-unit id="0938a81d313fd31bac7e8d2909cb97d0e8c807b9" translate="yes" xml:space="preserve">
          <source>ParseCharError::clone</source>
          <target state="translated">ParseCharError::clone</target>
        </trans-unit>
        <trans-unit id="4284751dde6acdbbaf4cb99ce60c69687673a856" translate="yes" xml:space="preserve">
          <source>ParseCharError::clone_from</source>
          <target state="translated">ParseCharError::clone_from</target>
        </trans-unit>
        <trans-unit id="e56302817da2041aa38e1fcd42b61f0261c3dd10" translate="yes" xml:space="preserve">
          <source>ParseCharError::clone_into</source>
          <target state="translated">ParseCharError::clone_into</target>
        </trans-unit>
        <trans-unit id="aea60ceadb6a8e59f093ce17cb60686cd6199677" translate="yes" xml:space="preserve">
          <source>ParseCharError::description</source>
          <target state="translated">ParseCharError::description</target>
        </trans-unit>
        <trans-unit id="ea5a8d34eee50dfe0576f0590f9d482664d29440" translate="yes" xml:space="preserve">
          <source>ParseCharError::eq</source>
          <target state="translated">ParseCharError::eq</target>
        </trans-unit>
        <trans-unit id="337c5b581ac221ba390cb0cda517ff185e2c4576" translate="yes" xml:space="preserve">
          <source>ParseCharError::fmt</source>
          <target state="translated">ParseCharError::fmt</target>
        </trans-unit>
        <trans-unit id="b2811f02a352a03ba2f39653edb08b5690b34cb5" translate="yes" xml:space="preserve">
          <source>ParseCharError::from</source>
          <target state="translated">ParseCharError::from</target>
        </trans-unit>
        <trans-unit id="20a72bcaab25e0f57c481411a33264e0da9b9364" translate="yes" xml:space="preserve">
          <source>ParseCharError::into</source>
          <target state="translated">ParseCharError::into</target>
        </trans-unit>
        <trans-unit id="9a3736678a5b233699fcf0676aea34d1cf8d76a9" translate="yes" xml:space="preserve">
          <source>ParseCharError::ne</source>
          <target state="translated">ParseCharError::ne</target>
        </trans-unit>
        <trans-unit id="32eef01c42bd1e6d72a6c537f4b73de1225b4774" translate="yes" xml:space="preserve">
          <source>ParseCharError::source</source>
          <target state="translated">ParseCharError::source</target>
        </trans-unit>
        <trans-unit id="bc3d04a55d38fc4fac38c6ff27f665b86f447b5e" translate="yes" xml:space="preserve">
          <source>ParseCharError::to_owned</source>
          <target state="translated">ParseCharError::to_owned</target>
        </trans-unit>
        <trans-unit id="507d79d1b8320efa455f51934cb2fc503eea094b" translate="yes" xml:space="preserve">
          <source>ParseCharError::to_string</source>
          <target state="translated">ParseCharError::to_string</target>
        </trans-unit>
        <trans-unit id="6f53df6eede4f2871d323a039b19761356e56bca" translate="yes" xml:space="preserve">
          <source>ParseCharError::try_from</source>
          <target state="translated">ParseCharError::try_from</target>
        </trans-unit>
        <trans-unit id="0310e4d39b5d32478d3fccf9f03afc28e9c48220" translate="yes" xml:space="preserve">
          <source>ParseCharError::try_into</source>
          <target state="translated">ParseCharError::try_into</target>
        </trans-unit>
        <trans-unit id="44784c8a11136f0c1dec9729cf42ac571eb4bb40" translate="yes" xml:space="preserve">
          <source>ParseCharError::type_id</source>
          <target state="translated">ParseCharError::type_id</target>
        </trans-unit>
        <trans-unit id="df633b0d4b46131792d5ed485e94f872474b0ba2" translate="yes" xml:space="preserve">
          <source>ParseError</source>
          <target state="translated">ParseError</target>
        </trans-unit>
        <trans-unit id="27aa507e1b6a21cc7fa33d0ebbf85f0046950620" translate="yes" xml:space="preserve">
          <source>ParseError::cause</source>
          <target state="translated">ParseError::cause</target>
        </trans-unit>
        <trans-unit id="ccf5c467001c5d736427697170ed656edab406a4" translate="yes" xml:space="preserve">
          <source>ParseError::description</source>
          <target state="translated">ParseError::description</target>
        </trans-unit>
        <trans-unit id="f9576a86d0abd9304b1fbd8cf354aec2bd92d2a8" translate="yes" xml:space="preserve">
          <source>ParseError::source</source>
          <target state="translated">ParseError::source</target>
        </trans-unit>
        <trans-unit id="d1f2758b4997b4a577cd9df0770a024a931bc0c8" translate="yes" xml:space="preserve">
          <source>ParseFloatError</source>
          <target state="translated">ParseFloatError</target>
        </trans-unit>
        <trans-unit id="d808fdee5bb1df31cf2b3879a9b5543936f6e3bd" translate="yes" xml:space="preserve">
          <source>ParseFloatError::borrow</source>
          <target state="translated">ParseFloatError::borrow</target>
        </trans-unit>
        <trans-unit id="6b32b5df110af6fcda80e0ce706bc34c90265a57" translate="yes" xml:space="preserve">
          <source>ParseFloatError::borrow_mut</source>
          <target state="translated">ParseFloatError::borrow_mut</target>
        </trans-unit>
        <trans-unit id="b95776ed4ca420a84dd2cf3ed13a7bc491cb2d37" translate="yes" xml:space="preserve">
          <source>ParseFloatError::cause</source>
          <target state="translated">ParseFloatError::cause</target>
        </trans-unit>
        <trans-unit id="d0b774087bf42ef2f882f7b14d31a1c864b819b7" translate="yes" xml:space="preserve">
          <source>ParseFloatError::clone</source>
          <target state="translated">ParseFloatError::clone</target>
        </trans-unit>
        <trans-unit id="64af4753d7baa8e3e8d5979b8876b2279e3cd3f5" translate="yes" xml:space="preserve">
          <source>ParseFloatError::clone_from</source>
          <target state="translated">ParseFloatError::clone_from</target>
        </trans-unit>
        <trans-unit id="0fb8548298d0daf64f16217a8cc03215d56701b5" translate="yes" xml:space="preserve">
          <source>ParseFloatError::clone_into</source>
          <target state="translated">ParseFloatError::clone_into</target>
        </trans-unit>
        <trans-unit id="1466bab88f83552700952d8acd32d15ef39e9523" translate="yes" xml:space="preserve">
          <source>ParseFloatError::description</source>
          <target state="translated">ParseFloatError::description</target>
        </trans-unit>
        <trans-unit id="0c4a67320e1e2b4e024c9fd759703830d423e65a" translate="yes" xml:space="preserve">
          <source>ParseFloatError::eq</source>
          <target state="translated">ParseFloatError::eq</target>
        </trans-unit>
        <trans-unit id="36f188cc8665be0e5e71a5a9ba7a9f8d1f2c56bd" translate="yes" xml:space="preserve">
          <source>ParseFloatError::fmt</source>
          <target state="translated">ParseFloatError::fmt</target>
        </trans-unit>
        <trans-unit id="064f92c98da44ab5b81572739bc88d960a6ae4ea" translate="yes" xml:space="preserve">
          <source>ParseFloatError::from</source>
          <target state="translated">ParseFloatError::from</target>
        </trans-unit>
        <trans-unit id="cce5eb946b7757ed2fd10a12008839e8fe699fc4" translate="yes" xml:space="preserve">
          <source>ParseFloatError::into</source>
          <target state="translated">ParseFloatError::into</target>
        </trans-unit>
        <trans-unit id="fc50317b17ea79fa776173e15dbd9f4ab0ad23f3" translate="yes" xml:space="preserve">
          <source>ParseFloatError::ne</source>
          <target state="translated">ParseFloatError::ne</target>
        </trans-unit>
        <trans-unit id="88c695c809ed740b93df04b641ee32e49bd69c8a" translate="yes" xml:space="preserve">
          <source>ParseFloatError::source</source>
          <target state="translated">ParseFloatError::source</target>
        </trans-unit>
        <trans-unit id="08127b0136646df49355b8c4f689ce4e3a05d46a" translate="yes" xml:space="preserve">
          <source>ParseFloatError::to_owned</source>
          <target state="translated">ParseFloatError::to_owned</target>
        </trans-unit>
        <trans-unit id="50938a3b176d0ef47536112a77657f4d2028f433" translate="yes" xml:space="preserve">
          <source>ParseFloatError::to_string</source>
          <target state="translated">ParseFloatError::to_string</target>
        </trans-unit>
        <trans-unit id="171d21e93730948c3c2e71be60ddb9933d6ebaea" translate="yes" xml:space="preserve">
          <source>ParseFloatError::try_from</source>
          <target state="translated">ParseFloatError::try_from</target>
        </trans-unit>
        <trans-unit id="94c45ad7ac3eaed981ba2d8483ab364c81cae006" translate="yes" xml:space="preserve">
          <source>ParseFloatError::try_into</source>
          <target state="translated">ParseFloatError::try_into</target>
        </trans-unit>
        <trans-unit id="791e38fe3bb8c19d6e02780d6dd4a7d1d447549d" translate="yes" xml:space="preserve">
          <source>ParseFloatError::type_id</source>
          <target state="translated">ParseFloatError::type_id</target>
        </trans-unit>
        <trans-unit id="8a90ae9aec3bdb7e66d281b866fa1e8b49fc5dcc" translate="yes" xml:space="preserve">
          <source>ParseIntError</source>
          <target state="translated">ParseIntError</target>
        </trans-unit>
        <trans-unit id="a064ee8b911d6da74b0d1ae145b921277b11472f" translate="yes" xml:space="preserve">
          <source>ParseIntError::borrow</source>
          <target state="translated">ParseIntError::borrow</target>
        </trans-unit>
        <trans-unit id="5c124da2118d65cecbca96b5b2b54c6843eb1e28" translate="yes" xml:space="preserve">
          <source>ParseIntError::borrow_mut</source>
          <target state="translated">ParseIntError::borrow_mut</target>
        </trans-unit>
        <trans-unit id="823dae2feaae4d4e15dddc9dae22566643829a60" translate="yes" xml:space="preserve">
          <source>ParseIntError::cause</source>
          <target state="translated">ParseIntError::cause</target>
        </trans-unit>
        <trans-unit id="eb3cd033182e30e01d4a1a46bc94a01a03b1e5f9" translate="yes" xml:space="preserve">
          <source>ParseIntError::clone</source>
          <target state="translated">ParseIntError::clone</target>
        </trans-unit>
        <trans-unit id="4abb17093556f46db397751ecd419ac72056da17" translate="yes" xml:space="preserve">
          <source>ParseIntError::clone_from</source>
          <target state="translated">ParseIntError::clone_from</target>
        </trans-unit>
        <trans-unit id="83e4eb8ef6c9935a15d84f34574fea97f3f0c3c7" translate="yes" xml:space="preserve">
          <source>ParseIntError::clone_into</source>
          <target state="translated">ParseIntError::clone_into</target>
        </trans-unit>
        <trans-unit id="b014db4609b5ed29b9f0a2919cc25ada01269da5" translate="yes" xml:space="preserve">
          <source>ParseIntError::description</source>
          <target state="translated">ParseIntError::description</target>
        </trans-unit>
        <trans-unit id="2e3353901cae78924f92e63d6aa41e557482f6ad" translate="yes" xml:space="preserve">
          <source>ParseIntError::eq</source>
          <target state="translated">ParseIntError::eq</target>
        </trans-unit>
        <trans-unit id="a3777970a65db83e92f8b32f04b59b378f1573f2" translate="yes" xml:space="preserve">
          <source>ParseIntError::fmt</source>
          <target state="translated">ParseIntError::fmt</target>
        </trans-unit>
        <trans-unit id="92b9b5679623749ba53201bf11d4c4c149fac4fa" translate="yes" xml:space="preserve">
          <source>ParseIntError::from</source>
          <target state="translated">ParseIntError::from</target>
        </trans-unit>
        <trans-unit id="214f1884d22a162e2407b12ae716701b5b7f6281" translate="yes" xml:space="preserve">
          <source>ParseIntError::into</source>
          <target state="translated">ParseIntError::into</target>
        </trans-unit>
        <trans-unit id="68f7bc83fe56bd734dbe2c838bd2e272e186c6f7" translate="yes" xml:space="preserve">
          <source>ParseIntError::kind</source>
          <target state="translated">ParseIntError::kind</target>
        </trans-unit>
        <trans-unit id="76c2afd70bf7b05a7729be27038dfd01d24aa898" translate="yes" xml:space="preserve">
          <source>ParseIntError::ne</source>
          <target state="translated">ParseIntError::ne</target>
        </trans-unit>
        <trans-unit id="014bcba745f37f74e3fdc161272fbed85267edf5" translate="yes" xml:space="preserve">
          <source>ParseIntError::source</source>
          <target state="translated">ParseIntError::source</target>
        </trans-unit>
        <trans-unit id="f88af31a92211658a3d32a441216475665966ef5" translate="yes" xml:space="preserve">
          <source>ParseIntError::to_owned</source>
          <target state="translated">ParseIntError::to_owned</target>
        </trans-unit>
        <trans-unit id="540c91a4a76de51357ec88d8961899953fce5e48" translate="yes" xml:space="preserve">
          <source>ParseIntError::to_string</source>
          <target state="translated">ParseIntError::to_string</target>
        </trans-unit>
        <trans-unit id="31b97930065c3a9f66b8b661f24cedf005b1b1e5" translate="yes" xml:space="preserve">
          <source>ParseIntError::try_from</source>
          <target state="translated">ParseIntError::try_from</target>
        </trans-unit>
        <trans-unit id="048e2649830be9fd409f0e3bb5b49a1eb1cb8cdd" translate="yes" xml:space="preserve">
          <source>ParseIntError::try_into</source>
          <target state="translated">ParseIntError::try_into</target>
        </trans-unit>
        <trans-unit id="cc834078ab81511aa2b0cc1eaf5600960918d8c7" translate="yes" xml:space="preserve">
          <source>ParseIntError::type_id</source>
          <target state="translated">ParseIntError::type_id</target>
        </trans-unit>
        <trans-unit id="31215a6ffc6459c0acca6b7108280f5adb8e1b58" translate="yes" xml:space="preserve">
          <source>Parses a file as an expression or an item according to the context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a9cbe09f2465060beef1045f03eaf25f84fb4b" translate="yes" xml:space="preserve">
          <source>Parses a string &lt;code&gt;s&lt;/code&gt; to return a value of this type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf7410c728208ffd3994258e490922a54469a49" translate="yes" xml:space="preserve">
          <source>Parses a string &lt;code&gt;s&lt;/code&gt; to return a value of this type. &lt;a href=&quot;../str/trait.fromstr#tymethod.from_str&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038fa2af1853c1f10b7a0379324c1b25313938e6" translate="yes" xml:space="preserve">
          <source>Parses a string &lt;code&gt;s&lt;/code&gt; to return a value of this type. &lt;a href=&quot;str/trait.fromstr#tymethod.from_str&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca90ca3ce47d2c08d50afd31be3b98e6a86bbe6" translate="yes" xml:space="preserve">
          <source>Parses input according to platform conventions for the &lt;code&gt;PATH&lt;/code&gt; environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3e477fbb6455d6088245526cb1efb49bc90a35" translate="yes" xml:space="preserve">
          <source>Parses this string slice into another type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858d11c16dc1f5e72da14b84be76cd9a20b57deb" translate="yes" xml:space="preserve">
          <source>Part of fixed-size array syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429f52df7e0268601f242b182fd7c4686bc8308e" translate="yes" xml:space="preserve">
          <source>Part of match arm syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257f0edfa1aa9ffb184098d8ae49670388a4861d" translate="yes" xml:space="preserve">
          <source>Partial comparison for two &lt;code&gt;Arc&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033cfbee8f88c129d431ffb6b44f6f05b5943cc1" translate="yes" xml:space="preserve">
          <source>Partial comparison for two &lt;code&gt;Rc&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35aa7d9349c130eb660b634c9f6ba42fd737f2dd" translate="yes" xml:space="preserve">
          <source>PartialEq</source>
          <target state="translated">PartialEq</target>
        </trans-unit>
        <trans-unit id="000e0887c2bd3175ff424fdb23fe932aeab7c2ec" translate="yes" xml:space="preserve">
          <source>PartialEq only requires the &lt;code&gt;eq&lt;/code&gt; method to be implemented; &lt;code&gt;ne&lt;/code&gt; is defined in terms of it by default. Any manual implementation of &lt;code&gt;ne&lt;/code&gt;&lt;em&gt;must&lt;/em&gt; respect the rule that &lt;code&gt;eq&lt;/code&gt; is a strict inverse of &lt;code&gt;ne&lt;/code&gt;; that is, &lt;code&gt;!(a == b)&lt;/code&gt; if and only if &lt;code&gt;a != b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17e99b45dd9c5ac16ef4602a7824f127312a2bc" translate="yes" xml:space="preserve">
          <source>PartialEq::eq</source>
          <target state="translated">PartialEq::eq</target>
        </trans-unit>
        <trans-unit id="9ffa343490447ceeaf72d538b8f668422340f768" translate="yes" xml:space="preserve">
          <source>PartialEq::ne</source>
          <target state="translated">PartialEq::ne</target>
        </trans-unit>
        <trans-unit id="bf54561effd6c08288624564d0d1dda07d1e97c8" translate="yes" xml:space="preserve">
          <source>PartialOrd</source>
          <target state="translated">PartialOrd</target>
        </trans-unit>
        <trans-unit id="23dab41f06771237ac0c750109e5471ef09e864e" translate="yes" xml:space="preserve">
          <source>PartialOrd::ge</source>
          <target state="translated">PartialOrd::ge</target>
        </trans-unit>
        <trans-unit id="c2a5300af8f16247504ada1f9c9fd5222c4a9b35" translate="yes" xml:space="preserve">
          <source>PartialOrd::gt</source>
          <target state="translated">PartialOrd::gt</target>
        </trans-unit>
        <trans-unit id="5c0333c6897f97806be91eb4bfaeedbfff4e1c21" translate="yes" xml:space="preserve">
          <source>PartialOrd::le</source>
          <target state="translated">PartialOrd::le</target>
        </trans-unit>
        <trans-unit id="56bbc9fde9dd3a25292f5e2bd0d6808e804e64ff" translate="yes" xml:space="preserve">
          <source>PartialOrd::lt</source>
          <target state="translated">PartialOrd::lt</target>
        </trans-unit>
        <trans-unit id="fa18407ce0e9220df492b9c6383ae62219e1aeec" translate="yes" xml:space="preserve">
          <source>PartialOrd::partial_cmp</source>
          <target state="translated">PartialOrd::partial_cmp</target>
        </trans-unit>
        <trans-unit id="b760d584e83cde0d304c6ddc7eedd29738d08728" translate="yes" xml:space="preserve">
          <source>Pass custom flags to the &lt;code&gt;flags&lt;/code&gt; argument of &lt;code&gt;open&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429cbd80dfb70be36cd817fddca12cdfe2bbf061" translate="yes" xml:space="preserve">
          <source>Pass custom flags to the &lt;code&gt;flags&lt;/code&gt; argument of &lt;code&gt;open&lt;/code&gt;. &lt;a href=&quot;../os/unix/fs/trait.openoptionsext#tymethod.custom_flags&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3915be4790a6a9fc6850ad578d0e44cf9d5b09c6" translate="yes" xml:space="preserve">
          <source>Passing a Rust-originating C string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e82107ba4774c876a03b86ca05b4b0a4c59697" translate="yes" xml:space="preserve">
          <source>Passing a large radix, causing a panic:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b018c56d189d0976ff7b56fcc450fb9199613939" translate="yes" xml:space="preserve">
          <source>Passing a non-digit results in failure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519e39132bb98418cc0483cc446ccf5f3c8dcffe" translate="yes" xml:space="preserve">
          <source>Path</source>
          <target state="translated">Path</target>
        </trans-unit>
        <trans-unit id="c05a7dde4e8ae01915e872a2ecdbb5cd167032f4" translate="yes" xml:space="preserve">
          <source>Path expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f02f1c3287c611184053d3b070796422cf3c68" translate="yes" xml:space="preserve">
          <source>Path manipulation includes both parsing components from slices and building new owned paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c042827f9707981e24a00e70aca73fd66dbe198" translate="yes" xml:space="preserve">
          <source>Path patterns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dadfab6f71b684c43d0c862dce0dcc77b2e071d6" translate="yes" xml:space="preserve">
          <source>Path patterns are irrefutable when they refer to structs or an enum variant when the enum has only one variant or a constant whose type is irrefutable. They are refutable when they refer to refutable constants or enum variants for enums with multiple variants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b0c4da35d2bf4667e6cb523abea501d8223a9b3" translate="yes" xml:space="preserve">
          <source>Path qualifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c755319786dc1f5258caaa0d3d5b18b10306ffc" translate="yes" xml:space="preserve">
          <source>Path relative to the crate root (i.e., an explicitly absolute path)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2d6ab92924496ea4193399488de9ce8ce5518d" translate="yes" xml:space="preserve">
          <source>Path relative to the current module (i.e., an explicitly relative path).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2b6293593560b5bb66cabcd548c9afdadcabf6" translate="yes" xml:space="preserve">
          <source>Path relative to the parent of the current module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226c3226dd2e05c38dc8b0f2a6fdd337934a5e72" translate="yes" xml:space="preserve">
          <source>Path separator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2652cad50b5ba083254601daf45e75f7c3e438" translate="yes" xml:space="preserve">
          <source>Path-Based Scope</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5edf3c9077b55351239a1da6f017a62f428b1b2" translate="yes" xml:space="preserve">
          <source>Path::ancestors</source>
          <target state="translated">Path::ancestors</target>
        </trans-unit>
        <trans-unit id="dafd7d485c87ee015f7bb28312438d4f9f10e7e1" translate="yes" xml:space="preserve">
          <source>Path::as_os_str</source>
          <target state="translated">Path::as_os_str</target>
        </trans-unit>
        <trans-unit id="1c19feae889b1caf60fc949590aa45ed95e5db98" translate="yes" xml:space="preserve">
          <source>Path::as_ref</source>
          <target state="translated">Path::as_ref</target>
        </trans-unit>
        <trans-unit id="d09b4d2d8b66671599b7f84ce56c5249805dca39" translate="yes" xml:space="preserve">
          <source>Path::borrow</source>
          <target state="translated">Path::borrow</target>
        </trans-unit>
        <trans-unit id="bb7a2672e9e3e4628ff171fe9ab6dad9404f4dd0" translate="yes" xml:space="preserve">
          <source>Path::borrow_mut</source>
          <target state="translated">Path::borrow_mut</target>
        </trans-unit>
        <trans-unit id="94900a502b067e85e40884f446d45cc8bbd76eac" translate="yes" xml:space="preserve">
          <source>Path::canonicalize</source>
          <target state="translated">Path::canonicalize</target>
        </trans-unit>
        <trans-unit id="90e48642273009cccff418e85588df6f2c9b4446" translate="yes" xml:space="preserve">
          <source>Path::clamp</source>
          <target state="translated">Path::clamp</target>
        </trans-unit>
        <trans-unit id="371a96b3805e7767119b243ae91d0a8cd882e059" translate="yes" xml:space="preserve">
          <source>Path::clone_into</source>
          <target state="translated">Path::clone_into</target>
        </trans-unit>
        <trans-unit id="e4f3417602e9e6c75a6b628f610ae1532bfde5ef" translate="yes" xml:space="preserve">
          <source>Path::cmp</source>
          <target state="translated">Path::cmp</target>
        </trans-unit>
        <trans-unit id="8b78373feefa8bcb9ecbd6fde2c9c5e78b218df4" translate="yes" xml:space="preserve">
          <source>Path::components</source>
          <target state="translated">Path::components</target>
        </trans-unit>
        <trans-unit id="93c87962264ffebcef3484bfedcbbc9ae2c6b57f" translate="yes" xml:space="preserve">
          <source>Path::display</source>
          <target state="translated">Path::display</target>
        </trans-unit>
        <trans-unit id="fe7feda3c8a9bcaf62ccf04f36f856df45e476a0" translate="yes" xml:space="preserve">
          <source>Path::ends_with</source>
          <target state="translated">Path::ends_with</target>
        </trans-unit>
        <trans-unit id="4da43859522e2dedab4ef882dcce342616401b3f" translate="yes" xml:space="preserve">
          <source>Path::eq</source>
          <target state="translated">Path::eq</target>
        </trans-unit>
        <trans-unit id="37e6de92b1aa3c4cfc70ab1de45ada331598beab" translate="yes" xml:space="preserve">
          <source>Path::exists</source>
          <target state="translated">Path::exists</target>
        </trans-unit>
        <trans-unit id="e9f61d43e7410b116c112cab6aeaba065bbdd811" translate="yes" xml:space="preserve">
          <source>Path::extension</source>
          <target state="translated">Path::extension</target>
        </trans-unit>
        <trans-unit id="189f2ac8596661f82fb82df27a2305c6a5e3442a" translate="yes" xml:space="preserve">
          <source>Path::file_name</source>
          <target state="translated">Path::file_name</target>
        </trans-unit>
        <trans-unit id="32a0527f8ad29c418117032f8a3ce4accdc69ce5" translate="yes" xml:space="preserve">
          <source>Path::file_stem</source>
          <target state="translated">Path::file_stem</target>
        </trans-unit>
        <trans-unit id="47602805de49d4cf39790f51c11b4d0f4cd7cbca" translate="yes" xml:space="preserve">
          <source>Path::fmt</source>
          <target state="translated">Path::fmt</target>
        </trans-unit>
        <trans-unit id="6b15b5a1394e790f6e983a8309159dd7de018757" translate="yes" xml:space="preserve">
          <source>Path::from</source>
          <target state="translated">Path::from</target>
        </trans-unit>
        <trans-unit id="a8d6bfd8177d1203fa4c4760dbfc85e1286d23ce" translate="yes" xml:space="preserve">
          <source>Path::ge</source>
          <target state="translated">Path::ge</target>
        </trans-unit>
        <trans-unit id="775b71aa7a521a79d2908bb47e686628a357eb7c" translate="yes" xml:space="preserve">
          <source>Path::gt</source>
          <target state="translated">Path::gt</target>
        </trans-unit>
        <trans-unit id="858248726bf1302dbf890c2604d766dc0d83bf7c" translate="yes" xml:space="preserve">
          <source>Path::has_root</source>
          <target state="translated">Path::has_root</target>
        </trans-unit>
        <trans-unit id="2fe5ba138b0831b88dca49ebec22de4fc2e9dbf3" translate="yes" xml:space="preserve">
          <source>Path::hash</source>
          <target state="translated">Path::hash</target>
        </trans-unit>
        <trans-unit id="30ee63daa1e7712fea4f8be158051aa5db3ca500" translate="yes" xml:space="preserve">
          <source>Path::hash_slice</source>
          <target state="translated">Path::hash_slice</target>
        </trans-unit>
        <trans-unit id="ecb4e3d0986680dca3bddb747e31781c90342a60" translate="yes" xml:space="preserve">
          <source>Path::into_iter</source>
          <target state="translated">Path::into_iter</target>
        </trans-unit>
        <trans-unit id="52342bf04b598485dc3613368a1fca0e025c1b25" translate="yes" xml:space="preserve">
          <source>Path::into_path_buf</source>
          <target state="translated">Path::into_path_buf</target>
        </trans-unit>
        <trans-unit id="fb3de0ca23590f0a3514d3492d42960b41e00f2d" translate="yes" xml:space="preserve">
          <source>Path::is_absolute</source>
          <target state="translated">Path::is_absolute</target>
        </trans-unit>
        <trans-unit id="9f74adb6ec12397fc688eb0f879bebdc7d663c4f" translate="yes" xml:space="preserve">
          <source>Path::is_dir</source>
          <target state="translated">Path::is_dir</target>
        </trans-unit>
        <trans-unit id="b44155fdb9a415d7099f17f5267d4e9dd2da81cc" translate="yes" xml:space="preserve">
          <source>Path::is_file</source>
          <target state="translated">Path::is_file</target>
        </trans-unit>
        <trans-unit id="38b4c870a64f8fa08a626fcea60738a68c8fc810" translate="yes" xml:space="preserve">
          <source>Path::is_relative</source>
          <target state="translated">Path::is_relative</target>
        </trans-unit>
        <trans-unit id="b88ba8ff0dd5d53db777596e07c5b2cdad24bf01" translate="yes" xml:space="preserve">
          <source>Path::iter</source>
          <target state="translated">Path::iter</target>
        </trans-unit>
        <trans-unit id="14e8e615743246feba65afb20c394d7c05a3ed8c" translate="yes" xml:space="preserve">
          <source>Path::join</source>
          <target state="translated">Path::join</target>
        </trans-unit>
        <trans-unit id="304c8dcf9112acadaf074d85ebe21b0176500adc" translate="yes" xml:space="preserve">
          <source>Path::le</source>
          <target state="translated">Path::le</target>
        </trans-unit>
        <trans-unit id="11d3c4f4bfd8aaec9122523581f730ecdfead2ea" translate="yes" xml:space="preserve">
          <source>Path::lt</source>
          <target state="translated">Path::lt</target>
        </trans-unit>
        <trans-unit id="c65a5453a3db85378f64853e5058c49fa3e2b969" translate="yes" xml:space="preserve">
          <source>Path::max</source>
          <target state="translated">Path::max</target>
        </trans-unit>
        <trans-unit id="f69fe04929dc6208701575a82e079045d8abcd2f" translate="yes" xml:space="preserve">
          <source>Path::metadata</source>
          <target state="translated">Path::metadata</target>
        </trans-unit>
        <trans-unit id="5bc59cf08199ac14decc7236eaad19c44663dccb" translate="yes" xml:space="preserve">
          <source>Path::min</source>
          <target state="translated">Path::min</target>
        </trans-unit>
        <trans-unit id="37d15718b2316de1e6fb9c5a8803684d55e66b74" translate="yes" xml:space="preserve">
          <source>Path::ne</source>
          <target state="translated">Path::ne</target>
        </trans-unit>
        <trans-unit id="603ca1b5bd524b6a70a9a8462c7d5dd1597f30a0" translate="yes" xml:space="preserve">
          <source>Path::new</source>
          <target state="translated">Path::new</target>
        </trans-unit>
        <trans-unit id="0ee34335ef461e9cebc3075fe11093de4d70cc95" translate="yes" xml:space="preserve">
          <source>Path::parent</source>
          <target state="translated">Path::parent</target>
        </trans-unit>
        <trans-unit id="6c19f8b3bd672867149d35553e2d2ca7fc0d9c19" translate="yes" xml:space="preserve">
          <source>Path::partial_cmp</source>
          <target state="translated">Path::partial_cmp</target>
        </trans-unit>
        <trans-unit id="685f296bb385f2eeca9d50369e618e7c4e4548f4" translate="yes" xml:space="preserve">
          <source>Path::read_dir</source>
          <target state="translated">Path::read_dir</target>
        </trans-unit>
        <trans-unit id="8007df51ade61a184d0c8ea2d815fd3ec43afc2a" translate="yes" xml:space="preserve">
          <source>Path::read_link</source>
          <target state="translated">Path::read_link</target>
        </trans-unit>
        <trans-unit id="b3968fb6a1a02f40e47515c526890766afe9dd49" translate="yes" xml:space="preserve">
          <source>Path::starts_with</source>
          <target state="translated">Path::starts_with</target>
        </trans-unit>
        <trans-unit id="c3f47413a9dfcd63fcb1f04e28f009dd20954e68" translate="yes" xml:space="preserve">
          <source>Path::strip_prefix</source>
          <target state="translated">Path::strip_prefix</target>
        </trans-unit>
        <trans-unit id="45f1ff541fd9b82dd6d4d0cc51a0d050e2890756" translate="yes" xml:space="preserve">
          <source>Path::symlink_metadata</source>
          <target state="translated">Path::symlink_metadata</target>
        </trans-unit>
        <trans-unit id="a99adabe6b56ab685a7262a962f441a199db312c" translate="yes" xml:space="preserve">
          <source>Path::to_owned</source>
          <target state="translated">Path::to_owned</target>
        </trans-unit>
        <trans-unit id="6f2574b3661d713e798c75f2ecaea01c62493284" translate="yes" xml:space="preserve">
          <source>Path::to_path_buf</source>
          <target state="translated">Path::to_path_buf</target>
        </trans-unit>
        <trans-unit id="82cb6fe818ffe499a7fe89f63658cb66bb7f5fd5" translate="yes" xml:space="preserve">
          <source>Path::to_str</source>
          <target state="translated">Path::to_str</target>
        </trans-unit>
        <trans-unit id="f259accf61436b5b343c98a9f80f41f87cd79a72" translate="yes" xml:space="preserve">
          <source>Path::to_string_lossy</source>
          <target state="translated">Path::to_string_lossy</target>
        </trans-unit>
        <trans-unit id="3f77b5e7b93c7e0a48c77883d6239cefcbde4107" translate="yes" xml:space="preserve">
          <source>Path::type_id</source>
          <target state="translated">Path::type_id</target>
        </trans-unit>
        <trans-unit id="0ff66078b45d83d2ddbf6795e0b7cf179d03820c" translate="yes" xml:space="preserve">
          <source>Path::with_extension</source>
          <target state="translated">Path::with_extension</target>
        </trans-unit>
        <trans-unit id="d38e4d8a8223efc1c66f0682dbc41c6722d33608" translate="yes" xml:space="preserve">
          <source>Path::with_file_name</source>
          <target state="translated">Path::with_file_name</target>
        </trans-unit>
        <trans-unit id="14deb3ff7e0408544a00079d26b61652777c3efe" translate="yes" xml:space="preserve">
          <source>PathBuf</source>
          <target state="translated">PathBuf</target>
        </trans-unit>
        <trans-unit id="737f21e3a9c9f8b01fc8d9666ed36488fad0d206" translate="yes" xml:space="preserve">
          <source>PathBuf::ancestors</source>
          <target state="translated">PathBuf::ancestors</target>
        </trans-unit>
        <trans-unit id="e7136807a0a92ed01a68dc8ef3c68a3e8dafd1bb" translate="yes" xml:space="preserve">
          <source>PathBuf::as_os_str</source>
          <target state="translated">PathBuf::as_os_str</target>
        </trans-unit>
        <trans-unit id="cfa0153097f8529902225adc66628fdd6d22ebd0" translate="yes" xml:space="preserve">
          <source>PathBuf::as_path</source>
          <target state="translated">PathBuf::as_path</target>
        </trans-unit>
        <trans-unit id="241343009b07c09f91e81e01ba3a1710078eb559" translate="yes" xml:space="preserve">
          <source>PathBuf::as_ref</source>
          <target state="translated">PathBuf::as_ref</target>
        </trans-unit>
        <trans-unit id="9b7081815388b6e6a9faefa0a89077eae68b4402" translate="yes" xml:space="preserve">
          <source>PathBuf::borrow</source>
          <target state="translated">PathBuf::borrow</target>
        </trans-unit>
        <trans-unit id="a99e510fe3cce6af1a32b4ccf53e56672671b17f" translate="yes" xml:space="preserve">
          <source>PathBuf::borrow_mut</source>
          <target state="translated">PathBuf::borrow_mut</target>
        </trans-unit>
        <trans-unit id="c45c70e00b3375919b6abfec22d084ac9ad214ec" translate="yes" xml:space="preserve">
          <source>PathBuf::canonicalize</source>
          <target state="translated">PathBuf::canonicalize</target>
        </trans-unit>
        <trans-unit id="f4e98cdaa7963819acc5761d688534a571950912" translate="yes" xml:space="preserve">
          <source>PathBuf::capacity</source>
          <target state="translated">PathBuf::capacity</target>
        </trans-unit>
        <trans-unit id="e47cd7d5125c10002e933a1c922784a3e1937466" translate="yes" xml:space="preserve">
          <source>PathBuf::clamp</source>
          <target state="translated">PathBuf::clamp</target>
        </trans-unit>
        <trans-unit id="ca770b22c63e3c757af9d9c8736cc9371d700a8e" translate="yes" xml:space="preserve">
          <source>PathBuf::clear</source>
          <target state="translated">PathBuf::clear</target>
        </trans-unit>
        <trans-unit id="d256b2f2ff9eb86c769a4900eb985628d86fe279" translate="yes" xml:space="preserve">
          <source>PathBuf::clone</source>
          <target state="translated">PathBuf::clone</target>
        </trans-unit>
        <trans-unit id="f1f1023fd2d809593ade7b3401584397415e3b9c" translate="yes" xml:space="preserve">
          <source>PathBuf::clone_from</source>
          <target state="translated">PathBuf::clone_from</target>
        </trans-unit>
        <trans-unit id="0742b0b95e410cae939105f6fa15c992cfd09b7a" translate="yes" xml:space="preserve">
          <source>PathBuf::clone_into</source>
          <target state="translated">PathBuf::clone_into</target>
        </trans-unit>
        <trans-unit id="161cd55c7bf0bcdcbc19a7098c519a36fffeef36" translate="yes" xml:space="preserve">
          <source>PathBuf::cmp</source>
          <target state="translated">PathBuf::cmp</target>
        </trans-unit>
        <trans-unit id="39b8f278157d4b3a7f9e5d49d8a03dc878ebe96b" translate="yes" xml:space="preserve">
          <source>PathBuf::components</source>
          <target state="translated">PathBuf::components</target>
        </trans-unit>
        <trans-unit id="c493561e08e820cb71ee33e1b7a845997c20c085" translate="yes" xml:space="preserve">
          <source>PathBuf::default</source>
          <target state="translated">PathBuf::default</target>
        </trans-unit>
        <trans-unit id="d140f22cb9f8c0aa7ea7a3b5c1310b8fb6143786" translate="yes" xml:space="preserve">
          <source>PathBuf::deref</source>
          <target state="translated">PathBuf::deref</target>
        </trans-unit>
        <trans-unit id="3898bdd1e737301afb34847294437081bb921724" translate="yes" xml:space="preserve">
          <source>PathBuf::display</source>
          <target state="translated">PathBuf::display</target>
        </trans-unit>
        <trans-unit id="18a98557dce6b8ba664f64779bdb7c9544ad0d60" translate="yes" xml:space="preserve">
          <source>PathBuf::ends_with</source>
          <target state="translated">PathBuf::ends_with</target>
        </trans-unit>
        <trans-unit id="cf1516a2f782dd753c72b303acbad5b27845fb77" translate="yes" xml:space="preserve">
          <source>PathBuf::eq</source>
          <target state="translated">PathBuf::eq</target>
        </trans-unit>
        <trans-unit id="c917e802f27006b91ff9843efe8bd721e9579662" translate="yes" xml:space="preserve">
          <source>PathBuf::exists</source>
          <target state="translated">PathBuf::exists</target>
        </trans-unit>
        <trans-unit id="63cdf284fb1df95c4d4ee8a944b1d54108fa1aa5" translate="yes" xml:space="preserve">
          <source>PathBuf::extend</source>
          <target state="translated">PathBuf::extend</target>
        </trans-unit>
        <trans-unit id="073f9f393cba7ff6bd063311de98750bee2670f2" translate="yes" xml:space="preserve">
          <source>PathBuf::extension</source>
          <target state="translated">PathBuf::extension</target>
        </trans-unit>
        <trans-unit id="aab3008c725d6e87a4d73a4b9669e0ab39b8f6db" translate="yes" xml:space="preserve">
          <source>PathBuf::file_name</source>
          <target state="translated">PathBuf::file_name</target>
        </trans-unit>
        <trans-unit id="6bf9a2008300314acfbd03827b418225b4237151" translate="yes" xml:space="preserve">
          <source>PathBuf::file_stem</source>
          <target state="translated">PathBuf::file_stem</target>
        </trans-unit>
        <trans-unit id="526a820cb5fdb572e5da1f7148d4555e95e53149" translate="yes" xml:space="preserve">
          <source>PathBuf::fmt</source>
          <target state="translated">PathBuf::fmt</target>
        </trans-unit>
        <trans-unit id="82a1d2c9948e2373ca2cb3918f4baccc1f624134" translate="yes" xml:space="preserve">
          <source>PathBuf::from</source>
          <target state="translated">PathBuf::from</target>
        </trans-unit>
        <trans-unit id="10b735e6ba9b97e2e728aedacddf35f520a44c6e" translate="yes" xml:space="preserve">
          <source>PathBuf::from_iter</source>
          <target state="translated">PathBuf::from_iter</target>
        </trans-unit>
        <trans-unit id="6a3ebf0a7ab4948faf7344c6ed50fe204a91596d" translate="yes" xml:space="preserve">
          <source>PathBuf::from_str</source>
          <target state="translated">PathBuf::from_str</target>
        </trans-unit>
        <trans-unit id="296439094940ddcb9d7ca05d1a0bc1cfe65f22dd" translate="yes" xml:space="preserve">
          <source>PathBuf::ge</source>
          <target state="translated">PathBuf::ge</target>
        </trans-unit>
        <trans-unit id="3b1a6f25bee6d16fa18fc49a1019d4edb753d74f" translate="yes" xml:space="preserve">
          <source>PathBuf::gt</source>
          <target state="translated">PathBuf::gt</target>
        </trans-unit>
        <trans-unit id="9736db1a35c06f9a7e86682b682224916e1a8441" translate="yes" xml:space="preserve">
          <source>PathBuf::has_root</source>
          <target state="translated">PathBuf::has_root</target>
        </trans-unit>
        <trans-unit id="822f89673c4116911526ffbfff7a7fc4e905efcd" translate="yes" xml:space="preserve">
          <source>PathBuf::hash</source>
          <target state="translated">PathBuf::hash</target>
        </trans-unit>
        <trans-unit id="de60d0a045bddfc3590742aa6bcb3ac06512db7e" translate="yes" xml:space="preserve">
          <source>PathBuf::hash_slice</source>
          <target state="translated">PathBuf::hash_slice</target>
        </trans-unit>
        <trans-unit id="eb291dfd224de8cf1c7b3542ff709ea9d2c3093f" translate="yes" xml:space="preserve">
          <source>PathBuf::into</source>
          <target state="translated">PathBuf::into</target>
        </trans-unit>
        <trans-unit id="be981fb3b06beb869c73305695b33b295840b1eb" translate="yes" xml:space="preserve">
          <source>PathBuf::into_boxed_path</source>
          <target state="translated">PathBuf::into_boxed_path</target>
        </trans-unit>
        <trans-unit id="720d01eedf5f2520ea8860b75671853c2dc4463e" translate="yes" xml:space="preserve">
          <source>PathBuf::into_iter</source>
          <target state="translated">PathBuf::into_iter</target>
        </trans-unit>
        <trans-unit id="ecf6be4725540f61a09cd54c9b0a0be074af48f0" translate="yes" xml:space="preserve">
          <source>PathBuf::into_os_string</source>
          <target state="translated">PathBuf::into_os_string</target>
        </trans-unit>
        <trans-unit id="3d157898633886f599986f7eb549d80b6e4da628" translate="yes" xml:space="preserve">
          <source>PathBuf::is_absolute</source>
          <target state="translated">PathBuf::is_absolute</target>
        </trans-unit>
        <trans-unit id="201e0ac1056c0fdffe28c2856d58c02cede77f20" translate="yes" xml:space="preserve">
          <source>PathBuf::is_dir</source>
          <target state="translated">PathBuf::is_dir</target>
        </trans-unit>
        <trans-unit id="08db84b955abe4e547fa1961bec565c61e96787c" translate="yes" xml:space="preserve">
          <source>PathBuf::is_file</source>
          <target state="translated">PathBuf::is_file</target>
        </trans-unit>
        <trans-unit id="7e69a1dd0f14387fe8ff141d660985cc8383d79f" translate="yes" xml:space="preserve">
          <source>PathBuf::is_relative</source>
          <target state="translated">PathBuf::is_relative</target>
        </trans-unit>
        <trans-unit id="e64045af7bd20b7f81024dffca78d9e118439c26" translate="yes" xml:space="preserve">
          <source>PathBuf::iter</source>
          <target state="translated">PathBuf::iter</target>
        </trans-unit>
        <trans-unit id="435957b9c3f4b8dc2cdeb50daa5bb52e9e8a76d1" translate="yes" xml:space="preserve">
          <source>PathBuf::join</source>
          <target state="translated">PathBuf::join</target>
        </trans-unit>
        <trans-unit id="0ce751c60a5e3db00f4a23078e729bb3e7246eef" translate="yes" xml:space="preserve">
          <source>PathBuf::le</source>
          <target state="translated">PathBuf::le</target>
        </trans-unit>
        <trans-unit id="2978ee878d92cd09f9aa28368a69727c0e9ef48c" translate="yes" xml:space="preserve">
          <source>PathBuf::lt</source>
          <target state="translated">PathBuf::lt</target>
        </trans-unit>
        <trans-unit id="396fdd4b669b01459bb0d90d2814faa91a725c6f" translate="yes" xml:space="preserve">
          <source>PathBuf::max</source>
          <target state="translated">PathBuf::max</target>
        </trans-unit>
        <trans-unit id="18deaa8a06fa53c1701ae81a796660972a6d6114" translate="yes" xml:space="preserve">
          <source>PathBuf::metadata</source>
          <target state="translated">PathBuf::metadata</target>
        </trans-unit>
        <trans-unit id="8e94fb7876496cf218e87a0bf221484f0e34ba55" translate="yes" xml:space="preserve">
          <source>PathBuf::min</source>
          <target state="translated">PathBuf::min</target>
        </trans-unit>
        <trans-unit id="e0cd278a500a65f04b3dbbc1d842adffa928e37e" translate="yes" xml:space="preserve">
          <source>PathBuf::ne</source>
          <target state="translated">PathBuf::ne</target>
        </trans-unit>
        <trans-unit id="a0fd365689fa1f3c84824e0a30aa35ad6f4901d6" translate="yes" xml:space="preserve">
          <source>PathBuf::new</source>
          <target state="translated">PathBuf::new</target>
        </trans-unit>
        <trans-unit id="b94a57f00c4b25f0ae9839bc69ec486f7e40eb25" translate="yes" xml:space="preserve">
          <source>PathBuf::parent</source>
          <target state="translated">PathBuf::parent</target>
        </trans-unit>
        <trans-unit id="ae9441100788c25c8df205122b97f1b08a7a87a3" translate="yes" xml:space="preserve">
          <source>PathBuf::partial_cmp</source>
          <target state="translated">PathBuf::partial_cmp</target>
        </trans-unit>
        <trans-unit id="f3713520482064a4df0fcd4799bdce91fcb9750f" translate="yes" xml:space="preserve">
          <source>PathBuf::pop</source>
          <target state="translated">PathBuf::pop</target>
        </trans-unit>
        <trans-unit id="4e1a9da86d73f55ef0df58349d373422a6bdcf5d" translate="yes" xml:space="preserve">
          <source>PathBuf::push</source>
          <target state="translated">PathBuf::push</target>
        </trans-unit>
        <trans-unit id="4eac492deef3a341cc55d6f9567bf8a7c6af6a07" translate="yes" xml:space="preserve">
          <source>PathBuf::read_dir</source>
          <target state="translated">PathBuf::read_dir</target>
        </trans-unit>
        <trans-unit id="eb9ebafe89391a12926fcbe659371485328a5248" translate="yes" xml:space="preserve">
          <source>PathBuf::read_link</source>
          <target state="translated">PathBuf::read_link</target>
        </trans-unit>
        <trans-unit id="8f7ebe61a5868c938787c291a30576741c212a97" translate="yes" xml:space="preserve">
          <source>PathBuf::reserve</source>
          <target state="translated">PathBuf::reserve</target>
        </trans-unit>
        <trans-unit id="9fea710514b7120d379c32aa942e9b87f720645f" translate="yes" xml:space="preserve">
          <source>PathBuf::reserve_exact</source>
          <target state="translated">PathBuf::reserve_exact</target>
        </trans-unit>
        <trans-unit id="5d3e7f3758c3a3d947256d24b0b796b270819b65" translate="yes" xml:space="preserve">
          <source>PathBuf::set_extension</source>
          <target state="translated">PathBuf::set_extension</target>
        </trans-unit>
        <trans-unit id="1bdabde3160a6e53ff28292a4b959eadced925e0" translate="yes" xml:space="preserve">
          <source>PathBuf::set_file_name</source>
          <target state="translated">PathBuf::set_file_name</target>
        </trans-unit>
        <trans-unit id="5647d8fb96a19d9d78bda616248265974a0031bd" translate="yes" xml:space="preserve">
          <source>PathBuf::shrink_to</source>
          <target state="translated">PathBuf::shrink_to</target>
        </trans-unit>
        <trans-unit id="eee8a4f99eba8f0dac0f9c0e7deabe3a1d04eb14" translate="yes" xml:space="preserve">
          <source>PathBuf::shrink_to_fit</source>
          <target state="translated">PathBuf::shrink_to_fit</target>
        </trans-unit>
        <trans-unit id="3cfcc8cbd27f9e3ee0ea9ead621866f124305eae" translate="yes" xml:space="preserve">
          <source>PathBuf::starts_with</source>
          <target state="translated">PathBuf::starts_with</target>
        </trans-unit>
        <trans-unit id="edd5bf9af7961e8dd90350d8c75a59ac96b6e15e" translate="yes" xml:space="preserve">
          <source>PathBuf::strip_prefix</source>
          <target state="translated">PathBuf::strip_prefix</target>
        </trans-unit>
        <trans-unit id="29da0be962e892cd89251f040bdf11a7fe508d6b" translate="yes" xml:space="preserve">
          <source>PathBuf::symlink_metadata</source>
          <target state="translated">PathBuf::symlink_metadata</target>
        </trans-unit>
        <trans-unit id="98731e3c001353ab32ef12ba2f38c2953ee270a4" translate="yes" xml:space="preserve">
          <source>PathBuf::to_owned</source>
          <target state="translated">PathBuf::to_owned</target>
        </trans-unit>
        <trans-unit id="f1c8861b3f92429585c6b4acc39e441f53237913" translate="yes" xml:space="preserve">
          <source>PathBuf::to_path_buf</source>
          <target state="translated">PathBuf::to_path_buf</target>
        </trans-unit>
        <trans-unit id="e2a6620fa350b34052bc0e1c9acf0c0535690b5d" translate="yes" xml:space="preserve">
          <source>PathBuf::to_str</source>
          <target state="translated">PathBuf::to_str</target>
        </trans-unit>
        <trans-unit id="7345f0e5617a40600657b00c57e5e3df729c0d2e" translate="yes" xml:space="preserve">
          <source>PathBuf::to_string_lossy</source>
          <target state="translated">PathBuf::to_string_lossy</target>
        </trans-unit>
        <trans-unit id="36aed337e103223c8f9003eba7f4f561fa3acd6b" translate="yes" xml:space="preserve">
          <source>PathBuf::try_from</source>
          <target state="translated">PathBuf::try_from</target>
        </trans-unit>
        <trans-unit id="fd393d5b8f203850f4899fd99726ff4ef56f2cf4" translate="yes" xml:space="preserve">
          <source>PathBuf::try_into</source>
          <target state="translated">PathBuf::try_into</target>
        </trans-unit>
        <trans-unit id="5b781fc8e7d342ff48df1a8b7f20b1142f6c6da1" translate="yes" xml:space="preserve">
          <source>PathBuf::type_id</source>
          <target state="translated">PathBuf::type_id</target>
        </trans-unit>
        <trans-unit id="67b05d25ea3613982fccd57cae55082253377477" translate="yes" xml:space="preserve">
          <source>PathBuf::with_capacity</source>
          <target state="translated">PathBuf::with_capacity</target>
        </trans-unit>
        <trans-unit id="41e15ca81151ab7ad77bcf885f648411fa4b2e15" translate="yes" xml:space="preserve">
          <source>PathBuf::with_extension</source>
          <target state="translated">PathBuf::with_extension</target>
        </trans-unit>
        <trans-unit id="255c3f4e4a73ce28dda6d26ce0f45588c3e21010" translate="yes" xml:space="preserve">
          <source>PathBuf::with_file_name</source>
          <target state="translated">PathBuf::with_file_name</target>
        </trans-unit>
        <trans-unit id="2153f81480bb6816e2f010826ea4a9969bb0ddde" translate="yes" xml:space="preserve">
          <source>PathSep</source>
          <target state="translated">PathSep</target>
        </trans-unit>
        <trans-unit id="13e7e11722f7d8309c367ea7823bd6cd32011ced" translate="yes" xml:space="preserve">
          <source>Paths</source>
          <target state="translated">Paths</target>
        </trans-unit>
        <trans-unit id="6b90838764f01f9da735c7cadbf18122acc34806" translate="yes" xml:space="preserve">
          <source>Paths can be denoted with various leading qualifiers to change the meaning of how it is resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ee0f99d74971ea1e66410d74e13e15cc000182" translate="yes" xml:space="preserve">
          <source>Paths can be parsed into &lt;a href=&quot;enum.component&quot;&gt;&lt;code&gt;Component&lt;/code&gt;&lt;/a&gt;s by iterating over the structure returned by the &lt;a href=&quot;struct.path#method.components&quot;&gt;&lt;code&gt;components&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;struct.path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;enum.component&quot;&gt;&lt;code&gt;Component&lt;/code&gt;&lt;/a&gt;s roughly correspond to the substrings between path separators (&lt;code&gt;/&lt;/code&gt; or ). You can reconstruct an equivalent path from components with the &lt;a href=&quot;struct.pathbuf#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;struct.pathbuf&quot;&gt;&lt;code&gt;PathBuf&lt;/code&gt;&lt;/a&gt;; note that the paths may differ syntactically by the normalization described in the documentation for the &lt;a href=&quot;struct.path#method.components&quot;&gt;&lt;code&gt;components&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="433b11a1e57b9075747d7aec5df3b14f351e42aa" translate="yes" xml:space="preserve">
          <source>Paths for Referring to an Item in the Module Tree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db0b6c1f4237a481c543466479312959d4374a6" translate="yes" xml:space="preserve">
          <source>Paths in &lt;code&gt;use&lt;/code&gt; items must start with a crate name or one of the &lt;a href=&quot;../paths#path-qualifiers&quot;&gt;path qualifiers&lt;/a&gt;&lt;code&gt;crate&lt;/code&gt;, &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;super&lt;/code&gt;, or &lt;code&gt;::&lt;/code&gt;. &lt;code&gt;crate&lt;/code&gt; refers to the current crate. &lt;code&gt;self&lt;/code&gt; refers to the current module. &lt;code&gt;super&lt;/code&gt; refers to the parent module. &lt;code&gt;::&lt;/code&gt; can be used to explicitly refer to a crate, requiring an extern crate name to follow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3a861106adf61014ce86d7eac3593005b505d9" translate="yes" xml:space="preserve">
          <source>Paths in &lt;code&gt;use&lt;/code&gt; statements are relative to the crate root. To import items relative to the current and parent modules, use the &lt;code&gt;self::&lt;/code&gt; and &lt;code&gt;super::&lt;/code&gt; prefixes, respectively. Also verify that you didn't misspell the import name and that the import exists in the module from where you tried to import it. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464813f4652803fc864169bf2379f0b7b0053708" translate="yes" xml:space="preserve">
          <source>Paths in expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56f606f636676c4e0ee8274796d0ddd96a7c64b2" translate="yes" xml:space="preserve">
          <source>Paths in expressions allow for paths with generic arguments to be specified. They are used in various places in &lt;a href=&quot;expressions&quot;&gt;expressions&lt;/a&gt; and &lt;a href=&quot;patterns&quot;&gt;patterns&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69aa89243244275f9a7f7f93a0075be44fc78951" translate="yes" xml:space="preserve">
          <source>Paths in types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c806c2666d5493434b3ac0763841100d5be8fad7" translate="yes" xml:space="preserve">
          <source>Paths starting with &lt;code&gt;::&lt;/code&gt; are considered to be global paths where the segments of the path start being resolved from the crate root. Each identifier in the path must resolve to an item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0ac4da15ee59468dbf0f2db4777d37f045204b" translate="yes" xml:space="preserve">
          <source>Paths to an &lt;a href=&quot;items&quot;&gt;item&lt;/a&gt; (&lt;a href=&quot;types/struct&quot;&gt;struct&lt;/a&gt;, &lt;a href=&quot;types/enum&quot;&gt;enum&lt;/a&gt;, &lt;a href=&quot;types/union&quot;&gt;union&lt;/a&gt;, &lt;a href=&quot;items/type-aliases&quot;&gt;type alias&lt;/a&gt;, &lt;a href=&quot;types/trait-object&quot;&gt;trait&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fff6a31661b491fc40cc9c1ad7fe5e479cb7500" translate="yes" xml:space="preserve">
          <source>Pattern</source>
          <target state="translated">Pattern</target>
        </trans-unit>
        <trans-unit id="0455fa2e087e890a9ef485b0a234ddd7eb7733b9" translate="yes" xml:space="preserve">
          <source>Pattern Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cef6bc2c30fbef2cc02f4cba4c5c05d09cab24e" translate="yes" xml:space="preserve">
          <source>Pattern alternatives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bbcb4a5e8f9a06201285997dd3360a47c99e49" translate="yes" xml:space="preserve">
          <source>Pattern arm did not match expected kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3ff4be03a32ac550852c68aea1e56f5fac6ad9" translate="yes" xml:space="preserve">
          <source>Pattern binding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4432f65bd71bff7c319dfbc0e73b6d86a27bb894" translate="yes" xml:space="preserve">
          <source>Pattern matching may match a union as a field of a larger structure. In particular, when using a Rust union to implement a C tagged union via FFI, this allows matching on the tag and the corresponding field simultaneously:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa9a5df2b73b279886466584a231927994fe0d8" translate="yes" xml:space="preserve">
          <source>Pattern matching on &lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt;s is clear and straightforward for simple cases, but &lt;a href=&quot;enum.result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; comes with some convenience methods that make working with it more succinct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d34f7a2b0b3b6df62a051917d7e7ac2de8a38df" translate="yes" xml:space="preserve">
          <source>Patterns</source>
          <target state="translated">Patterns</target>
        </trans-unit>
        <trans-unit id="086bf00232516f0f54fda9d326e453858c07d70f" translate="yes" xml:space="preserve">
          <source>Patterns and Matching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c36f5692f501636712fde2fa7a9380d06e3e20e" translate="yes" xml:space="preserve">
          <source>Patterns are a special syntax in Rust for matching against the structure of types, both complex and simple. Using patterns in conjunction with &lt;code&gt;match&lt;/code&gt; expressions and other constructs gives you more control over a program&amp;rsquo;s control flow. A pattern consists of some combination of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e660524b94deb296fe45c259dab3788bf04031" translate="yes" xml:space="preserve">
          <source>Patterns are used in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255c26e423c5e22dd301528ba2c58173ed809d4a" translate="yes" xml:space="preserve">
          <source>Patterns are used to match values against structures and to, optionally, bind variables to values inside these structures. They are also used in variable declarations and parameters for functions and closures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e8030cab43dca4b186890f1fe0d0d61ca3d031" translate="yes" xml:space="preserve">
          <source>Patterns can be used to &lt;em&gt;destructure&lt;/em&gt;&lt;a href=&quot;items/structs&quot;&gt;structs&lt;/a&gt;, &lt;a href=&quot;items/enumerations&quot;&gt;enums&lt;/a&gt;, and &lt;a href=&quot;types/tuple&quot;&gt;tuples&lt;/a&gt;. Destructuring breaks up a value into its component pieces. The syntax used is almost the same as when creating such values. In a pattern whose &lt;a href=&quot;glossary#scrutinee&quot;&gt;scrutinee&lt;/a&gt; expression has a &lt;code&gt;struct&lt;/code&gt;, &lt;code&gt;enum&lt;/code&gt; or &lt;code&gt;tuple&lt;/code&gt; type, a placeholder (&lt;code&gt;_&lt;/code&gt;) stands in for a &lt;em&gt;single&lt;/em&gt; data field, whereas a wildcard &lt;code&gt;..&lt;/code&gt; stands in for &lt;em&gt;all&lt;/em&gt; the remaining fields of a particular variant. When destructuring a data structure with named (but not numbered) fields, it is allowed to write &lt;code&gt;fieldname&lt;/code&gt; as a shorthand for &lt;code&gt;fieldname: fieldname&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697b31d7f14c84dd346d1506f547b512c57a671f" translate="yes" xml:space="preserve">
          <source>Patterns come in two forms: refutable and irrefutable. Patterns that will match for any possible value passed are &lt;em&gt;irrefutable&lt;/em&gt;. An example would be &lt;code&gt;x&lt;/code&gt; in the statement &lt;code&gt;let x = 5;&lt;/code&gt; because &lt;code&gt;x&lt;/code&gt; matches anything and therefore cannot fail to match. Patterns that can fail to match for some possible value are &lt;em&gt;refutable&lt;/em&gt;. An example would be &lt;code&gt;Some(x)&lt;/code&gt; in the expression &lt;code&gt;if let Some(x) = a_value&lt;/code&gt; because if the value in the &lt;code&gt;a_value&lt;/code&gt; variable is &lt;code&gt;None&lt;/code&gt; rather than &lt;code&gt;Some&lt;/code&gt;, the &lt;code&gt;Some(x)&lt;/code&gt; pattern will not match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd80c5b72ebbf6a9882d51f2582900d902531c0" translate="yes" xml:space="preserve">
          <source>Patterns pop up in a number of places in Rust, and you&amp;rsquo;ve been using them a lot without realizing it! This section discusses all the places where patterns are valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef99d12d4a258cded331d809c52c1607856c818b" translate="yes" xml:space="preserve">
          <source>Patterns that Bind to Values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e354ca06768234c77988cc5793391d11223f7593" translate="yes" xml:space="preserve">
          <source>Patterns that consist of only an identifier, possibly with a &lt;code&gt;mut&lt;/code&gt;, match any value and bind it to that identifier. This is the most commonly used pattern in variable declarations and parameters for functions and closures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f8ceb370585dfef1c93abb918ffb44d48a5e7d" translate="yes" xml:space="preserve">
          <source>Patterns used to bind names must be irrefutable, that is, they must guarantee that a name will be extracted in all cases. Erroneous code example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24c46f3d268631477c993fc966a8cda8d7554e0" translate="yes" xml:space="preserve">
          <source>Patterns used to bind names must be irrefutable. That is, they must guarantee that a name will be extracted in all cases. Instead of pattern matching the loop variable, consider using a &lt;code&gt;match&lt;/code&gt; or &lt;code&gt;if let&lt;/code&gt; inside the loop body. For instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654133c4d40229f3ececa2afb6e1ea1d28899a21" translate="yes" xml:space="preserve">
          <source>PeekMut</source>
          <target state="translated">PeekMut</target>
        </trans-unit>
        <trans-unit id="3e6faf432531cb6bb3829346e08a5f4d6c8eda9b" translate="yes" xml:space="preserve">
          <source>Peekable</source>
          <target state="translated">Peekable</target>
        </trans-unit>
        <trans-unit id="03b843a603c3e3d92128b6e020a0e3bd47b6fbc7" translate="yes" xml:space="preserve">
          <source>Peekable::all</source>
          <target state="translated">Peekable::all</target>
        </trans-unit>
        <trans-unit id="cdf47c7f6cefd6e7373d78a354bf38be70885dc7" translate="yes" xml:space="preserve">
          <source>Peekable::any</source>
          <target state="translated">Peekable::any</target>
        </trans-unit>
        <trans-unit id="87c9c4adbab61748213d9173e14f35132edde943" translate="yes" xml:space="preserve">
          <source>Peekable::borrow</source>
          <target state="translated">Peekable::borrow</target>
        </trans-unit>
        <trans-unit id="cbcc3090dfd280c435c233428b65abda3fae598c" translate="yes" xml:space="preserve">
          <source>Peekable::borrow_mut</source>
          <target state="translated">Peekable::borrow_mut</target>
        </trans-unit>
        <trans-unit id="4dbd74dc14b37ff16c53255cfaeb23f25188666f" translate="yes" xml:space="preserve">
          <source>Peekable::by_ref</source>
          <target state="translated">Peekable::by_ref</target>
        </trans-unit>
        <trans-unit id="97e9f6cda2fd69f373d589eaef9c1a435cc963e5" translate="yes" xml:space="preserve">
          <source>Peekable::chain</source>
          <target state="translated">Peekable::chain</target>
        </trans-unit>
        <trans-unit id="dc3310b149b0c81e400d4af58efcb07a044257fa" translate="yes" xml:space="preserve">
          <source>Peekable::clone</source>
          <target state="translated">Peekable::clone</target>
        </trans-unit>
        <trans-unit id="69b8b0a8ce14afb5ba28cc24deaf87ed357ac226" translate="yes" xml:space="preserve">
          <source>Peekable::clone_from</source>
          <target state="translated">Peekable::clone_from</target>
        </trans-unit>
        <trans-unit id="42f377f564256d80267f03a15b7772a09ffad361" translate="yes" xml:space="preserve">
          <source>Peekable::clone_into</source>
          <target state="translated">Peekable::clone_into</target>
        </trans-unit>
        <trans-unit id="8ac15b37e6c25e42639f207fad02c0c9cbd034ec" translate="yes" xml:space="preserve">
          <source>Peekable::cloned</source>
          <target state="translated">Peekable::cloned</target>
        </trans-unit>
        <trans-unit id="45ef0b85b6433ce0cf56495a5e47f6d969a96c72" translate="yes" xml:space="preserve">
          <source>Peekable::cmp</source>
          <target state="translated">Peekable::cmp</target>
        </trans-unit>
        <trans-unit id="57875d47693b1cd290db1c29bbf3bd5a4a2973c7" translate="yes" xml:space="preserve">
          <source>Peekable::collect</source>
          <target state="translated">Peekable::collect</target>
        </trans-unit>
        <trans-unit id="8c642b6478428c6bd762cd39575e9ea294292dbb" translate="yes" xml:space="preserve">
          <source>Peekable::copied</source>
          <target state="translated">Peekable::copied</target>
        </trans-unit>
        <trans-unit id="42e6b060898e1e06e82fcfe31be61149674fe58b" translate="yes" xml:space="preserve">
          <source>Peekable::count</source>
          <target state="translated">Peekable::count</target>
        </trans-unit>
        <trans-unit id="5f6d53c62767ea5ec9ac74b6282435f62b7fe74d" translate="yes" xml:space="preserve">
          <source>Peekable::cycle</source>
          <target state="translated">Peekable::cycle</target>
        </trans-unit>
        <trans-unit id="c547c24c629de71298f6ce67020298e51654292b" translate="yes" xml:space="preserve">
          <source>Peekable::enumerate</source>
          <target state="translated">Peekable::enumerate</target>
        </trans-unit>
        <trans-unit id="027dbdaa75f70c7e5f926704e9e1438d70b277a8" translate="yes" xml:space="preserve">
          <source>Peekable::eq</source>
          <target state="translated">Peekable::eq</target>
        </trans-unit>
        <trans-unit id="fe00827d2474a9bc72ed1d4eff8cf2c464f2faa8" translate="yes" xml:space="preserve">
          <source>Peekable::filter</source>
          <target state="translated">Peekable::filter</target>
        </trans-unit>
        <trans-unit id="fe075295d4a2a9c4519b79fbf3c1c54af8ae7fed" translate="yes" xml:space="preserve">
          <source>Peekable::filter_map</source>
          <target state="translated">Peekable::filter_map</target>
        </trans-unit>
        <trans-unit id="5af217f747e9b767bee5fe3aee114c2fffb617b0" translate="yes" xml:space="preserve">
          <source>Peekable::find</source>
          <target state="translated">Peekable::find</target>
        </trans-unit>
        <trans-unit id="7541b67f3b1cb7433569aa91b9e6e2a2c013dea0" translate="yes" xml:space="preserve">
          <source>Peekable::find_map</source>
          <target state="translated">Peekable::find_map</target>
        </trans-unit>
        <trans-unit id="cc88bee5646574c5206515686ca377421b564406" translate="yes" xml:space="preserve">
          <source>Peekable::flat_map</source>
          <target state="translated">Peekable::flat_map</target>
        </trans-unit>
        <trans-unit id="85e0d74b9c521bae8db72799f753176234ef1920" translate="yes" xml:space="preserve">
          <source>Peekable::flatten</source>
          <target state="translated">Peekable::flatten</target>
        </trans-unit>
        <trans-unit id="625927580fb7a745ad6973420ba0263e75b703fa" translate="yes" xml:space="preserve">
          <source>Peekable::fmt</source>
          <target state="translated">Peekable::fmt</target>
        </trans-unit>
        <trans-unit id="8f674210d0fe5583b3e6c79793e8326656380833" translate="yes" xml:space="preserve">
          <source>Peekable::fold</source>
          <target state="translated">Peekable::fold</target>
        </trans-unit>
        <trans-unit id="25826d2b3a50f8a531d21dc9513499e9c6a7dd7a" translate="yes" xml:space="preserve">
          <source>Peekable::for_each</source>
          <target state="translated">Peekable::for_each</target>
        </trans-unit>
        <trans-unit id="d5f903c59e111122f24eaf2a0a953e7763304937" translate="yes" xml:space="preserve">
          <source>Peekable::from</source>
          <target state="translated">Peekable::from</target>
        </trans-unit>
        <trans-unit id="2308361f4b6eeffbf2c10381ce86c38a3fec126d" translate="yes" xml:space="preserve">
          <source>Peekable::fuse</source>
          <target state="translated">Peekable::fuse</target>
        </trans-unit>
        <trans-unit id="f550ba1f98532d8061c980302355610bd6cffc61" translate="yes" xml:space="preserve">
          <source>Peekable::ge</source>
          <target state="translated">Peekable::ge</target>
        </trans-unit>
        <trans-unit id="1fd0b449b80ab6c60be0e97837a8cf104543fdb8" translate="yes" xml:space="preserve">
          <source>Peekable::gt</source>
          <target state="translated">Peekable::gt</target>
        </trans-unit>
        <trans-unit id="6357761ec70467ca21ed86f50851ff7347248233" translate="yes" xml:space="preserve">
          <source>Peekable::inspect</source>
          <target state="translated">Peekable::inspect</target>
        </trans-unit>
        <trans-unit id="58ad8cc7031f19728b624c95797c8ffe5c659e85" translate="yes" xml:space="preserve">
          <source>Peekable::into</source>
          <target state="translated">Peekable::into</target>
        </trans-unit>
        <trans-unit id="4b6d3dcc165ad447a78a1833701f5b154c25f4a7" translate="yes" xml:space="preserve">
          <source>Peekable::into_iter</source>
          <target state="translated">Peekable::into_iter</target>
        </trans-unit>
        <trans-unit id="3dd631acb7cf86e48c681c1183de3a0106ec98c1" translate="yes" xml:space="preserve">
          <source>Peekable::is_empty</source>
          <target state="translated">Peekable::is_empty</target>
        </trans-unit>
        <trans-unit id="d03e36e9af5c7ed6308b36c6d6fa9c795c9e0199" translate="yes" xml:space="preserve">
          <source>Peekable::is_sorted</source>
          <target state="translated">Peekable::is_sorted</target>
        </trans-unit>
        <trans-unit id="2bcf86f82ea642f4792a75e88b08a879a97fb5d7" translate="yes" xml:space="preserve">
          <source>Peekable::is_sorted_by</source>
          <target state="translated">Peekable::is_sorted_by</target>
        </trans-unit>
        <trans-unit id="21b31d8bc6e390a6f02d29ae8cca9788ffd1c7e0" translate="yes" xml:space="preserve">
          <source>Peekable::is_sorted_by_key</source>
          <target state="translated">Peekable::is_sorted_by_key</target>
        </trans-unit>
        <trans-unit id="90e100e14321e7a2dc78f6b25ffba9340cbe8102" translate="yes" xml:space="preserve">
          <source>Peekable::last</source>
          <target state="translated">Peekable::last</target>
        </trans-unit>
        <trans-unit id="f81f0e642f5b5cae83b5ac66b1e5e95eff628ec2" translate="yes" xml:space="preserve">
          <source>Peekable::le</source>
          <target state="translated">Peekable::le</target>
        </trans-unit>
        <trans-unit id="e344adb463676eb9291b4ef73a585d285b6d8027" translate="yes" xml:space="preserve">
          <source>Peekable::len</source>
          <target state="translated">Peekable::len</target>
        </trans-unit>
        <trans-unit id="8f9d256c88e35d4ea16b059fcbf7d918d008b0c0" translate="yes" xml:space="preserve">
          <source>Peekable::lt</source>
          <target state="translated">Peekable::lt</target>
        </trans-unit>
        <trans-unit id="05f10e6a064d9aec914e722684f21a1ac7025432" translate="yes" xml:space="preserve">
          <source>Peekable::map</source>
          <target state="translated">Peekable::map</target>
        </trans-unit>
        <trans-unit id="f84c142bd16aee2de4a5f080f13499e214866a6d" translate="yes" xml:space="preserve">
          <source>Peekable::max</source>
          <target state="translated">Peekable::max</target>
        </trans-unit>
        <trans-unit id="cae6bfc4e452db74aa0d66038aecab569afca507" translate="yes" xml:space="preserve">
          <source>Peekable::max_by</source>
          <target state="translated">Peekable::max_by</target>
        </trans-unit>
        <trans-unit id="0434889407a0f728b64d9d371c419671588d39d0" translate="yes" xml:space="preserve">
          <source>Peekable::max_by_key</source>
          <target state="translated">Peekable::max_by_key</target>
        </trans-unit>
        <trans-unit id="7b5bc3294801e21d900a9fce47ab9e327706a790" translate="yes" xml:space="preserve">
          <source>Peekable::min</source>
          <target state="translated">Peekable::min</target>
        </trans-unit>
        <trans-unit id="dece9def633658c063fbcfd37bd38d33cd581bd3" translate="yes" xml:space="preserve">
          <source>Peekable::min_by</source>
          <target state="translated">Peekable::min_by</target>
        </trans-unit>
        <trans-unit id="31392ec832ca190026a788431a53fa45f6a4b4ec" translate="yes" xml:space="preserve">
          <source>Peekable::min_by_key</source>
          <target state="translated">Peekable::min_by_key</target>
        </trans-unit>
        <trans-unit id="4012840fb9c78d7c4184c1288fcaa5cdd75c256b" translate="yes" xml:space="preserve">
          <source>Peekable::ne</source>
          <target state="translated">Peekable::ne</target>
        </trans-unit>
        <trans-unit id="7c08c5e1747b6232645978eebe76d4ee408ea51d" translate="yes" xml:space="preserve">
          <source>Peekable::next</source>
          <target state="translated">Peekable::next</target>
        </trans-unit>
        <trans-unit id="ea2d93832f8d1c81b6c4455ec1837578794d0824" translate="yes" xml:space="preserve">
          <source>Peekable::nth</source>
          <target state="translated">Peekable::nth</target>
        </trans-unit>
        <trans-unit id="908ed6f94f65504216e7574e44975f7a6d350b1d" translate="yes" xml:space="preserve">
          <source>Peekable::partial_cmp</source>
          <target state="translated">Peekable::partial_cmp</target>
        </trans-unit>
        <trans-unit id="fefc38ba98e2b35ae50043e420d6c58ea40c4319" translate="yes" xml:space="preserve">
          <source>Peekable::partition</source>
          <target state="translated">Peekable::partition</target>
        </trans-unit>
        <trans-unit id="f7875116f03c9a78c38ecc45f78faf37d62e81f3" translate="yes" xml:space="preserve">
          <source>Peekable::peek</source>
          <target state="translated">Peekable::peek</target>
        </trans-unit>
        <trans-unit id="832656053b0751b5c4932fd1b09e7b8a12a17066" translate="yes" xml:space="preserve">
          <source>Peekable::peekable</source>
          <target state="translated">Peekable::peekable</target>
        </trans-unit>
        <trans-unit id="21c28bb0853ba6842a50c52baae08bc38ff3f416" translate="yes" xml:space="preserve">
          <source>Peekable::position</source>
          <target state="translated">Peekable::position</target>
        </trans-unit>
        <trans-unit id="5b9cca3c80279f737767c42728ae8a448a018b5f" translate="yes" xml:space="preserve">
          <source>Peekable::product</source>
          <target state="translated">Peekable::product</target>
        </trans-unit>
        <trans-unit id="1ab06dafb7aa1dbe3ee33b9450a9f1a95bb0e9c9" translate="yes" xml:space="preserve">
          <source>Peekable::rev</source>
          <target state="translated">Peekable::rev</target>
        </trans-unit>
        <trans-unit id="cfbcb7d0bf295c1e3b3f5c5047f80573ff170277" translate="yes" xml:space="preserve">
          <source>Peekable::rposition</source>
          <target state="translated">Peekable::rposition</target>
        </trans-unit>
        <trans-unit id="7ad2a605ebfd20468895e318931545ed366ff650" translate="yes" xml:space="preserve">
          <source>Peekable::scan</source>
          <target state="translated">Peekable::scan</target>
        </trans-unit>
        <trans-unit id="9d02ee00542af94ed4bd2fc57f9c08c713db3c24" translate="yes" xml:space="preserve">
          <source>Peekable::size_hint</source>
          <target state="translated">Peekable::size_hint</target>
        </trans-unit>
        <trans-unit id="cff1c7a1fbdc541ce15f613c6d9562f337a44d36" translate="yes" xml:space="preserve">
          <source>Peekable::skip</source>
          <target state="translated">Peekable::skip</target>
        </trans-unit>
        <trans-unit id="25bb0b91f31bbae75e51d3448deea7dc478b77a0" translate="yes" xml:space="preserve">
          <source>Peekable::skip_while</source>
          <target state="translated">Peekable::skip_while</target>
        </trans-unit>
        <trans-unit id="8bb6a01fe4a6222c950a5598bb234710b35c159a" translate="yes" xml:space="preserve">
          <source>Peekable::step_by</source>
          <target state="translated">Peekable::step_by</target>
        </trans-unit>
        <trans-unit id="7f4afc69069f17f172b5a430de49b74b49cb10d4" translate="yes" xml:space="preserve">
          <source>Peekable::sum</source>
          <target state="translated">Peekable::sum</target>
        </trans-unit>
        <trans-unit id="d415cb33241fd1558b53bfff727d773c8766c06f" translate="yes" xml:space="preserve">
          <source>Peekable::take</source>
          <target state="translated">Peekable::take</target>
        </trans-unit>
        <trans-unit id="7db9b74c482e82d4e1e37f5da307ec787e445f15" translate="yes" xml:space="preserve">
          <source>Peekable::take_while</source>
          <target state="translated">Peekable::take_while</target>
        </trans-unit>
        <trans-unit id="9dfb042b65f02bef900352676f5dccc13800749b" translate="yes" xml:space="preserve">
          <source>Peekable::to_owned</source>
          <target state="translated">Peekable::to_owned</target>
        </trans-unit>
        <trans-unit id="e1556c4e5c4ce3bd257e4975199ff431d1fa0725" translate="yes" xml:space="preserve">
          <source>Peekable::try_fold</source>
          <target state="translated">Peekable::try_fold</target>
        </trans-unit>
        <trans-unit id="215baab73dea179df9c6118e90397722ffab943c" translate="yes" xml:space="preserve">
          <source>Peekable::try_for_each</source>
          <target state="translated">Peekable::try_for_each</target>
        </trans-unit>
        <trans-unit id="3689ab9ce5269c1dbdde6c97677a46f4387e32d9" translate="yes" xml:space="preserve">
          <source>Peekable::try_from</source>
          <target state="translated">Peekable::try_from</target>
        </trans-unit>
        <trans-unit id="6995eae1d7e4c8582917c85d2236900652fbc385" translate="yes" xml:space="preserve">
          <source>Peekable::try_into</source>
          <target state="translated">Peekable::try_into</target>
        </trans-unit>
        <trans-unit id="a4e09eb7dee2c7ef50fc4a7a42060a0e8efc06a6" translate="yes" xml:space="preserve">
          <source>Peekable::type_id</source>
          <target state="translated">Peekable::type_id</target>
        </trans-unit>
        <trans-unit id="f728053653eaa1fc3a736a6033929bd10cd04667" translate="yes" xml:space="preserve">
          <source>Peekable::unzip</source>
          <target state="translated">Peekable::unzip</target>
        </trans-unit>
        <trans-unit id="ae808fefbb62522a29230624e9ceb41729108fa1" translate="yes" xml:space="preserve">
          <source>Peekable::zip</source>
          <target state="translated">Peekable::zip</target>
        </trans-unit>
        <trans-unit id="a53b0ecc634486e3053fe25199da96253ca66c3a" translate="yes" xml:space="preserve">
          <source>People Who Value Speed and Stability</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c5437d1ac316009b0d0177c1102d49e4e0973f" translate="yes" xml:space="preserve">
          <source>People are fallible, and mistakes will happen, but by requiring these four unsafe operations to be inside blocks annotated with &lt;code&gt;unsafe&lt;/code&gt; you&amp;rsquo;ll know that any errors related to memory safety must be within an &lt;code&gt;unsafe&lt;/code&gt; block. Keep &lt;code&gt;unsafe&lt;/code&gt; blocks small; you&amp;rsquo;ll be thankful later when you investigate memory bugs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8797b50bd4d3fce36159f9b2bfe742c8d0f0e0e" translate="yes" xml:space="preserve">
          <source>Per &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0401-coercions.md&quot;&gt;RFC 401&lt;/a&gt;, if you have a function declaration &lt;code&gt;foo&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac556cf5938d2104533c38103305f6cf60ba245d" translate="yes" xml:space="preserve">
          <source>Percent</source>
          <target state="translated">Percent</target>
        </trans-unit>
        <trans-unit id="39a8f2dc1fb99e8abe246367a46f93415b1c112c" translate="yes" xml:space="preserve">
          <source>PercentEq</source>
          <target state="translated">PercentEq</target>
        </trans-unit>
        <trans-unit id="7a97934e13227abf359e89050b89431cb3a692c1" translate="yes" xml:space="preserve">
          <source>Perfect!</source>
          <target state="translated">Perfect!</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="6f913279c61f85bd0ed28e867a48263498ae5cd7" translate="yes" xml:space="preserve">
          <source>Performance of Code Using Generics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609306d9237865e5f59385f4d5c022aaf0a46d9a" translate="yes" xml:space="preserve">
          <source>Performs Euclidean division.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae249623ee80a60d5e06bbd14ad2b83091135ab" translate="yes" xml:space="preserve">
          <source>Performs a bitwise &quot;and&quot; operation on the current value and the argument &lt;code&gt;val&lt;/code&gt;, and sets the new value to the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f361efb4ebd92bccdb44096c8c3b461f75f18e3" translate="yes" xml:space="preserve">
          <source>Performs a bitwise &quot;nand&quot; operation on the current value and the argument &lt;code&gt;val&lt;/code&gt;, and sets the new value to the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996e4b8d687abb33fd7eb2f7c5aa9feb537d67fb" translate="yes" xml:space="preserve">
          <source>Performs a bitwise &quot;or&quot; operation on the current value and the argument &lt;code&gt;val&lt;/code&gt;, and sets the new value to the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c940c93262dd9aae08f4cc305f3127cebbfd1f0" translate="yes" xml:space="preserve">
          <source>Performs a bitwise &quot;xor&quot; operation on the current value and the argument &lt;code&gt;val&lt;/code&gt;, and sets the new value to the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5c903396f36915cc1df084b939cb2035607e42" translate="yes" xml:space="preserve">
          <source>Performs a logical &quot;and&quot; operation on the current value and the argument &lt;code&gt;val&lt;/code&gt;, and sets the new value to the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdc832d057769a0fc09157da63c6f4a724ebe9b" translate="yes" xml:space="preserve">
          <source>Performs a logical &quot;nand&quot; operation on the current value and the argument &lt;code&gt;val&lt;/code&gt;, and sets the new value to the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2910c6668af0f58ee795c534e962deec576a6dfe" translate="yes" xml:space="preserve">
          <source>Performs a logical &quot;or&quot; operation on the current value and the argument &lt;code&gt;val&lt;/code&gt;, and sets the new value to the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2197846d290a36cf5cb11892ef971f6ea9cff3e" translate="yes" xml:space="preserve">
          <source>Performs a logical &quot;xor&quot; operation on the current value and the argument &lt;code&gt;val&lt;/code&gt;, and sets the new value to the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50c341f7ca732e16c3b6f9d3d1ee564540cc347" translate="yes" xml:space="preserve">
          <source>Performs a volatile load from the &lt;code&gt;src&lt;/code&gt; pointer The pointer is not required to be aligned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9be9a9ba909369839de4d16e5fbfaa86ee48823" translate="yes" xml:space="preserve">
          <source>Performs a volatile load from the &lt;code&gt;src&lt;/code&gt; pointer. The stabilized version of this intrinsic is &lt;a href=&quot;../ptr/fn.read_volatile&quot;&gt;&lt;code&gt;std::ptr::read_volatile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d58166b3d618dde1db5bdfbdd71668090bf0f6" translate="yes" xml:space="preserve">
          <source>Performs a volatile read of the value from &lt;code&gt;self&lt;/code&gt; without moving it. This leaves the memory in &lt;code&gt;self&lt;/code&gt; unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea87d8dce5730b7a5ffcf42a7860a330648e5bfd" translate="yes" xml:space="preserve">
          <source>Performs a volatile read of the value from &lt;code&gt;src&lt;/code&gt; without moving it. This leaves the memory in &lt;code&gt;src&lt;/code&gt; unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05644c6cc6fbb80f1e45df0e47920e9501a6b84" translate="yes" xml:space="preserve">
          <source>Performs a volatile store to the &lt;code&gt;dst&lt;/code&gt; pointer. The pointer is not required to be aligned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f01bbd65b07f115df4daefa2a5046208c7a4ae4b" translate="yes" xml:space="preserve">
          <source>Performs a volatile store to the &lt;code&gt;dst&lt;/code&gt; pointer. The stabilized version of this intrinsic is &lt;a href=&quot;../ptr/fn.write_volatile&quot;&gt;&lt;code&gt;std::ptr::write_volatile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e839b3ecc9f5740e6ad6c962aa41454d0295377" translate="yes" xml:space="preserve">
          <source>Performs a volatile write of a memory location with the given value without reading or dropping the old value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b8e5adf82a0e6aaf206f576b25a71325b3622b" translate="yes" xml:space="preserve">
          <source>Performs all the required setup by this &lt;code&gt;Command&lt;/code&gt;, followed by calling the &lt;code&gt;execvp&lt;/code&gt; syscall.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69599888906b9cc1651c91b89b599e07911d64a" translate="yes" xml:space="preserve">
          <source>Performs all the required setup by this &lt;code&gt;Command&lt;/code&gt;, followed by calling the &lt;code&gt;execvp&lt;/code&gt; syscall. &lt;a href=&quot;../os/unix/process/trait.commandext#tymethod.exec&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b110aa0a8555b4838611ad344c2ac72becf46c" translate="yes" xml:space="preserve">
          <source>Performs an exact division, resulting in undefined behavior where &lt;code&gt;x % y != 0&lt;/code&gt; or &lt;code&gt;y == 0&lt;/code&gt; or &lt;code&gt;x == T::min_value() &amp;amp;&amp;amp; y == -1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b2b5fcde509d687752480ff7a88fd8504054b3" translate="yes" xml:space="preserve">
          <source>Performs an initialization routine once and only once. The given closure will be executed if this is the first time &lt;code&gt;call_once&lt;/code&gt; has been called, and otherwise the routine will &lt;em&gt;not&lt;/em&gt; be invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c5d5e1d33d1c904491b4b292f99c8a123de8a1" translate="yes" xml:space="preserve">
          <source>Performs an unchecked division, resulting in undefined behavior where y = 0 or x = &lt;code&gt;T::min_value()&lt;/code&gt; and y = -1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd00e766220b2d8ef2a8686f895096e0390e9e11" translate="yes" xml:space="preserve">
          <source>Performs an unchecked left shift, resulting in undefined behavior when y &amp;lt; 0 or y &amp;gt;= N, where N is the width of T in bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed5e2c1550ab007021c8c48a3738939b5a4e3a5" translate="yes" xml:space="preserve">
          <source>Performs an unchecked right shift, resulting in undefined behavior when y &amp;lt; 0 or y &amp;gt;= N, where N is the width of T in bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd7a49924722f0e55057a6f8c6c0dc48db4d5cf" translate="yes" xml:space="preserve">
          <source>Performs checked integer addition. The stabilized versions of this intrinsic are available on the integer primitives via the &lt;code&gt;overflowing_add&lt;/code&gt; method. For example, &lt;a href=&quot;../primitive.u32#method.overflowing_add&quot;&gt;&lt;code&gt;std::u32::overflowing_add&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c603c62c1cf8fa55d0593e9c1e475c843c5a66" translate="yes" xml:space="preserve">
          <source>Performs checked integer multiplication The stabilized versions of this intrinsic are available on the integer primitives via the &lt;code&gt;overflowing_mul&lt;/code&gt; method. For example, &lt;a href=&quot;../primitive.u32#method.overflowing_mul&quot;&gt;&lt;code&gt;std::u32::overflowing_mul&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d89264cd9ffa1238912dcc0860b1ea43ffe4f5" translate="yes" xml:space="preserve">
          <source>Performs checked integer subtraction The stabilized versions of this intrinsic are available on the integer primitives via the &lt;code&gt;overflowing_sub&lt;/code&gt; method. For example, &lt;a href=&quot;../primitive.u32#method.overflowing_sub&quot;&gt;&lt;code&gt;std::u32::overflowing_sub&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040425d66288d4a53fb76846e26b878a08dae392" translate="yes" xml:space="preserve">
          <source>Performs copy-assignment from &lt;code&gt;source&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd52f576ea7af5170a8392619720ca929804d269" translate="yes" xml:space="preserve">
          <source>Performs copy-assignment from &lt;code&gt;source&lt;/code&gt;. &lt;a href=&quot;../../../clone/trait.clone#method.clone_from&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d6ec9355f3cb305db7ed90446c415d2a1a1e4c" translate="yes" xml:space="preserve">
          <source>Performs copy-assignment from &lt;code&gt;source&lt;/code&gt;. &lt;a href=&quot;../../clone/trait.clone#method.clone_from&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5bdda737780a0820edfbe3238c462144486522" translate="yes" xml:space="preserve">
          <source>Performs copy-assignment from &lt;code&gt;source&lt;/code&gt;. &lt;a href=&quot;../clone/trait.clone#method.clone_from&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955213a36c3f4aea46e85a7c56440ba99c98d339" translate="yes" xml:space="preserve">
          <source>Performs copy-assignment from &lt;code&gt;source&lt;/code&gt;. &lt;a href=&quot;clone/trait.clone#method.clone_from&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c7305d5f0020d0ad9583cd021efa7c6f21b5d7" translate="yes" xml:space="preserve">
          <source>Performs rotate left. The stabilized versions of this intrinsic are available on the integer primitives via the &lt;code&gt;rotate_left&lt;/code&gt; method. For example, &lt;a href=&quot;../primitive.u32#method.rotate_left&quot;&gt;&lt;code&gt;std::u32::rotate_left&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62dc10cb52155978ae4b017a31ddca55066ba78" translate="yes" xml:space="preserve">
          <source>Performs rotate right. The stabilized versions of this intrinsic are available on the integer primitives via the &lt;code&gt;rotate_right&lt;/code&gt; method. For example, &lt;a href=&quot;../primitive.u32#method.rotate_right&quot;&gt;&lt;code&gt;std::u32::rotate_right&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="510e066dc6c296b4c614561b995a7180c6b97b7f" translate="yes" xml:space="preserve">
          <source>Performs the &lt;code&gt;%&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594d5baeeddf944869874d082a6b1963fbea1c98" translate="yes" xml:space="preserve">
          <source>Performs the &lt;code&gt;%=&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a16eca961df928e52fb5b35b8297eacbf1c416d" translate="yes" xml:space="preserve">
          <source>Performs the &lt;code&gt;&amp;amp;&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5c5eb5d90d49cf134e1f3355559755a639b715" translate="yes" xml:space="preserve">
          <source>Performs the &lt;code&gt;&amp;amp;=&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d445087050d0a9107f6b3b6b3b92f8130835ca8" translate="yes" xml:space="preserve">
          <source>Performs the &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fffe6511067f5d1189d87347ff90573c13fd838c" translate="yes" xml:space="preserve">
          <source>Performs the &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b7e8a6659a47105fdb2dbd889a44964747471b" translate="yes" xml:space="preserve">
          <source>Performs the &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c9e3adaa142e27b93754f8f67778c982d3f8d8" translate="yes" xml:space="preserve">
          <source>Performs the &lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d0ba05ef8016d4dc722fedee79d8efcb502b98" translate="yes" xml:space="preserve">
          <source>Performs the &lt;code&gt;*&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20da4ba393ad65e3a3aa714e29748ec29b93d904" translate="yes" xml:space="preserve">
          <source>Performs the &lt;code&gt;*=&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a586a5214bc2875058ad9cd8437fadc34aad33d1" translate="yes" xml:space="preserve">
          <source>Performs the &lt;code&gt;+&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1421e7333694cb9c3316a5c6654d02b019364ca" translate="yes" xml:space="preserve">
          <source>Performs the &lt;code&gt;+=&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d2d545b6085f6dff0fe5821d22f09e794ed6e8" translate="yes" xml:space="preserve">
          <source>Performs the &lt;code&gt;-&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc3cc024824d183960feb5cfda77a71c6d001c6" translate="yes" xml:space="preserve">
          <source>Performs the &lt;code&gt;-=&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fbee4dc3503d3234c3107272bc151b9f6c3d8e8" translate="yes" xml:space="preserve">
          <source>Performs the &lt;code&gt;/&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3782085e3404a60a9bd0efa412fb915d2887dfcb" translate="yes" xml:space="preserve">
          <source>Performs the &lt;code&gt;/=&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8550cf961a99b7b2f5fdab5c17d9fb59764a85" translate="yes" xml:space="preserve">
          <source>Performs the &lt;code&gt;^&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63717d8faf393e60c5ba34600ad1265e9b1fc0b" translate="yes" xml:space="preserve">
          <source>Performs the &lt;code&gt;^=&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74027e7171b63200a9240799983443f585d696a9" translate="yes" xml:space="preserve">
          <source>Performs the &lt;code&gt;|&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ee8e0509b0cb201cf1bd27f68b46a7e54c433f" translate="yes" xml:space="preserve">
          <source>Performs the &lt;code&gt;|=&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24454fc0698a9c78c7a18e5522c8bd6484825be3" translate="yes" xml:space="preserve">
          <source>Performs the call operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7557e1169c39baad80e5c9a5859b0dd7a83cbd" translate="yes" xml:space="preserve">
          <source>Performs the conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aad295377c92b9034a912a54e08ca30995aca36" translate="yes" xml:space="preserve">
          <source>Performs the correct padding for an integer which has already been emitted into a str. The str should &lt;em&gt;not&lt;/em&gt; contain the sign for the integer, that will be added by this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae78db46a3187a0fd9f9a1b828a64bd6e04aae9" translate="yes" xml:space="preserve">
          <source>Performs the indexing (&lt;code&gt;container[index]&lt;/code&gt;) operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d84fa46c9575742e2d7a277cdb7f6267219fd0" translate="yes" xml:space="preserve">
          <source>Performs the mutable indexing (&lt;code&gt;container[index]&lt;/code&gt;) operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed145e6174b6f807b304af5e6cf5e2da8102e7d0" translate="yes" xml:space="preserve">
          <source>Performs the next search step starting from the back.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2824c54c18c8a4a79c7f64efcb3431b5bec34a7" translate="yes" xml:space="preserve">
          <source>Performs the next search step starting from the back. &lt;a href=&quot;trait.reversesearcher#tymethod.next_back&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a51e1a839e19cc554d9019c9cd0436c48cd1ae" translate="yes" xml:space="preserve">
          <source>Performs the next search step starting from the front.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a74ecff0a1c2f108afcd9e10505cd8fa25f78f8" translate="yes" xml:space="preserve">
          <source>Performs the next search step starting from the front. &lt;a href=&quot;trait.searcher#tymethod.next&quot;&gt;Read more&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47af3859ae5c26c259a389901af6153e55fab3d1" translate="yes" xml:space="preserve">
          <source>Performs the same function as &lt;a href=&quot;struct.once#method.call_once&quot;&gt;&lt;code&gt;call_once&lt;/code&gt;&lt;/a&gt; except ignores poisoning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249c728b6b241f25ec4ce72ad228d18ed230f0a7" translate="yes" xml:space="preserve">
          <source>Performs the same functionality as &lt;a href=&quot;../slice/fn.from_raw_parts&quot;&gt;&lt;code&gt;from_raw_parts&lt;/code&gt;&lt;/a&gt;, except that a mutable slice is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8aa2e25cf918e033c9715d51fb9594fecfe980d" translate="yes" xml:space="preserve">
          <source>Performs the same functionality as &lt;a href=&quot;fn.from_raw_parts&quot;&gt;&lt;code&gt;from_raw_parts&lt;/code&gt;&lt;/a&gt;, except that a mutable slice is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156224d2cd237dcab34e18c8358d61bcc5045d4b" translate="yes" xml:space="preserve">
          <source>Performs the unary &lt;code&gt;!&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3bedd295825dc3468f3d4971c9573f438991125" translate="yes" xml:space="preserve">
          <source>Performs the unary &lt;code&gt;-&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6614c65327495b49729b9f8196dde531352c1089" translate="yes" xml:space="preserve">
          <source>Perhaps the most common use case for &lt;code&gt;PhantomData&lt;/code&gt; is a struct that has an unused lifetime parameter, typically as part of some unsafe code. For example, here is a struct &lt;code&gt;Slice&lt;/code&gt; that has two pointers of type &lt;code&gt;*const T&lt;/code&gt;, presumably pointing into an array somewhere:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06d55570938d12f87db3bf2b48caa9de22d9c67" translate="yes" xml:space="preserve">
          <source>Permissions</source>
          <target state="translated">Permissions</target>
        </trans-unit>
        <trans-unit id="1e71b3b513ef6a7d8a5e57755f0c0af8d90d7ab0" translate="yes" xml:space="preserve">
          <source>Permissions::borrow</source>
          <target state="translated">Permissions::borrow</target>
        </trans-unit>
        <trans-unit id="cc45c8840f3e651ece736a5eedfebe3a47d9a075" translate="yes" xml:space="preserve">
          <source>Permissions::borrow_mut</source>
          <target state="translated">Permissions::borrow_mut</target>
        </trans-unit>
        <trans-unit id="1677687834c46f5063cc3e17f934b075c670d98d" translate="yes" xml:space="preserve">
          <source>Permissions::clone</source>
          <target state="translated">Permissions::clone</target>
        </trans-unit>
        <trans-unit id="f6727365bf9379d6e5057578fb2618106f965fdd" translate="yes" xml:space="preserve">
          <source>Permissions::clone_from</source>
          <target state="translated">Permissions::clone_from</target>
        </trans-unit>
        <trans-unit id="00c767b7caba753b8d30707428b0ca96a325d3e0" translate="yes" xml:space="preserve">
          <source>Permissions::clone_into</source>
          <target state="translated">Permissions::clone_into</target>
        </trans-unit>
        <trans-unit id="67ea516c1a6b399e18d18237cd2b1eee818f5148" translate="yes" xml:space="preserve">
          <source>Permissions::eq</source>
          <target state="translated">Permissions::eq</target>
        </trans-unit>
        <trans-unit id="d3112b7ab9316aba5489364d3b1a5910d6a07e3f" translate="yes" xml:space="preserve">
          <source>Permissions::fmt</source>
          <target state="translated">Permissions::fmt</target>
        </trans-unit>
        <trans-unit id="bede9d1acd0e07f91fcd1a4a10c5627e131bcfe9" translate="yes" xml:space="preserve">
          <source>Permissions::from</source>
          <target state="translated">Permissions::from</target>
        </trans-unit>
        <trans-unit id="d34f9caef962202063a997a96738d11cb6962305" translate="yes" xml:space="preserve">
          <source>Permissions::from_mode</source>
          <target state="translated">Permissions::from_mode</target>
        </trans-unit>
        <trans-unit id="568b47b35eb1e38bd9e165e7830150f44bd4e7ee" translate="yes" xml:space="preserve">
          <source>Permissions::into</source>
          <target state="translated">Permissions::into</target>
        </trans-unit>
        <trans-unit id="361c421b8251a6dbdd0b25a64fa13f679e13700f" translate="yes" xml:space="preserve">
          <source>Permissions::mode</source>
          <target state="translated">Permissions::mode</target>
        </trans-unit>
        <trans-unit id="1efae4ee23b4cdba103f69421e45614f77d30b64" translate="yes" xml:space="preserve">
          <source>Permissions::ne</source>
          <target state="translated">Permissions::ne</target>
        </trans-unit>
        <trans-unit id="91c110ac6caeeba144d2a9890c62a3ff8ae32800" translate="yes" xml:space="preserve">
          <source>Permissions::readonly</source>
          <target state="translated">Permissions::readonly</target>
        </trans-unit>
        <trans-unit id="08f3ec45d6b350c4a0d4d9f52888f561fb840b38" translate="yes" xml:space="preserve">
          <source>Permissions::set_mode</source>
          <target state="translated">Permissions::set_mode</target>
        </trans-unit>
        <trans-unit id="cdbbbab25279eac6c7dee863c82d99760a09e4c3" translate="yes" xml:space="preserve">
          <source>Permissions::set_readonly</source>
          <target state="translated">Permissions::set_readonly</target>
        </trans-unit>
        <trans-unit id="b1072771892b9fac0ce85a9dff465bc1bb459d93" translate="yes" xml:space="preserve">
          <source>Permissions::to_owned</source>
          <target state="translated">Permissions::to_owned</target>
        </trans-unit>
        <trans-unit id="b6fc0eca8f54cdcb6c71ddceac9f8b44e6d12210" translate="yes" xml:space="preserve">
          <source>Permissions::try_from</source>
          <target state="translated">Permissions::try_from</target>
        </trans-unit>
        <trans-unit id="1753f8bf749734cc95d921d4077d13a099d26317" translate="yes" xml:space="preserve">
          <source>Permissions::try_into</source>
          <target state="translated">Permissions::try_into</target>
        </trans-unit>
        <trans-unit id="c0b59113d7d9ef8578b38e5a97272528185f95ae" translate="yes" xml:space="preserve">
          <source>Permissions::type_id</source>
          <target state="translated">Permissions::type_id</target>
        </trans-unit>
        <trans-unit id="63d0eeb95106e976e51946cff0e7f5de18611d42" translate="yes" xml:space="preserve">
          <source>PermissionsExt</source>
          <target state="translated">PermissionsExt</target>
        </trans-unit>
        <trans-unit id="0ed94dccc899238a2056c2530e49d87c99d9f035" translate="yes" xml:space="preserve">
          <source>PhantomData</source>
          <target state="translated">PhantomData</target>
        </trans-unit>
        <trans-unit id="39c59c82d5869309d13d4cb87e9df0ec64a3ef66" translate="yes" xml:space="preserve">
          <source>PhantomData::borrow</source>
          <target state="translated">PhantomData::borrow</target>
        </trans-unit>
        <trans-unit id="2873843739c53ac2ff4cd96edbe27966f9552822" translate="yes" xml:space="preserve">
          <source>PhantomData::borrow_mut</source>
          <target state="translated">PhantomData::borrow_mut</target>
        </trans-unit>
        <trans-unit id="776e0b0334b7a3ae30da2a136dce2480bced7b1d" translate="yes" xml:space="preserve">
          <source>PhantomData::clamp</source>
          <target state="translated">PhantomData::clamp</target>
        </trans-unit>
        <trans-unit id="d881c479897d1e10b2b64cd15ea3f6e76854103b" translate="yes" xml:space="preserve">
          <source>PhantomData::clone</source>
          <target state="translated">PhantomData::clone</target>
        </trans-unit>
        <trans-unit id="6bca0853c96d96b72571b791bd85d710bdd771df" translate="yes" xml:space="preserve">
          <source>PhantomData::clone_from</source>
          <target state="translated">PhantomData::clone_from</target>
        </trans-unit>
        <trans-unit id="50895c95418dc287f4f5ef79a51945ff92a4205e" translate="yes" xml:space="preserve">
          <source>PhantomData::clone_into</source>
          <target state="translated">PhantomData::clone_into</target>
        </trans-unit>
        <trans-unit id="d2f0ff4b91a6fa3b2b5660e0e853b7a4833e1a0b" translate="yes" xml:space="preserve">
          <source>PhantomData::cmp</source>
          <target state="translated">PhantomData::cmp</target>
        </trans-unit>
        <trans-unit id="31d28d176cdc38e4bde46fb117f24bc6f84bf744" translate="yes" xml:space="preserve">
          <source>PhantomData::default</source>
          <target state="translated">PhantomData::default</target>
        </trans-unit>
        <trans-unit id="e8efcc05ff48f88f42f9dd802663fc9ec6bed504" translate="yes" xml:space="preserve">
          <source>PhantomData::eq</source>
          <target state="translated">PhantomData::eq</target>
        </trans-unit>
        <trans-unit id="ddabd2c33a406b6d125fce852d117cda859da295" translate="yes" xml:space="preserve">
          <source>PhantomData::fmt</source>
          <target state="translated">PhantomData::fmt</target>
        </trans-unit>
        <trans-unit id="f156de24b6aa743763a9edb1a75cf7abe370918d" translate="yes" xml:space="preserve">
          <source>PhantomData::from</source>
          <target state="translated">PhantomData::from</target>
        </trans-unit>
        <trans-unit id="900e5938a78927a35b476b413f1dd2b8f6cdd5e4" translate="yes" xml:space="preserve">
          <source>PhantomData::ge</source>
          <target state="translated">PhantomData::ge</target>
        </trans-unit>
        <trans-unit id="d7942170f91788c1f17238bff93eae5f213bf715" translate="yes" xml:space="preserve">
          <source>PhantomData::gt</source>
          <target state="translated">PhantomData::gt</target>
        </trans-unit>
        <trans-unit id="9b7f57e369ff1fc9dccf480a7ccd62b063c6e582" translate="yes" xml:space="preserve">
          <source>PhantomData::hash</source>
          <target state="translated">PhantomData::hash</target>
        </trans-unit>
        <trans-unit id="d9dc11b4d5112471db0d84b968a22f06d87dd2ce" translate="yes" xml:space="preserve">
          <source>PhantomData::hash_slice</source>
          <target state="translated">PhantomData::hash_slice</target>
        </trans-unit>
        <trans-unit id="4135af6768371a4a8546f06e096f57c32b4e8153" translate="yes" xml:space="preserve">
          <source>PhantomData::into</source>
          <target state="translated">PhantomData::into</target>
        </trans-unit>
        <trans-unit id="5b5cd09e1532cf0169862541ce1749d7a5cb8cb0" translate="yes" xml:space="preserve">
          <source>PhantomData::le</source>
          <target state="translated">PhantomData::le</target>
        </trans-unit>
        <trans-unit id="92ff0ade2eb51c7d827545c530403ca73aaeef1f" translate="yes" xml:space="preserve">
          <source>PhantomData::lt</source>
          <target state="translated">PhantomData::lt</target>
        </trans-unit>
        <trans-unit id="afc56ab108b4f6dba8312b1e8f430a08525d3ed9" translate="yes" xml:space="preserve">
          <source>PhantomData::max</source>
          <target state="translated">PhantomData::max</target>
        </trans-unit>
        <trans-unit id="a9131bda88e14f81b031ceb4da2d5c63e3f9e29b" translate="yes" xml:space="preserve">
          <source>PhantomData::min</source>
          <target state="translated">PhantomData::min</target>
        </trans-unit>
        <trans-unit id="1bcaca36a7da601f4a2acbb73210fc949236a02f" translate="yes" xml:space="preserve">
          <source>PhantomData::ne</source>
          <target state="translated">PhantomData::ne</target>
        </trans-unit>
        <trans-unit id="49fcf04dc8cdb1cac52336d7dfe2e9c70bb46e25" translate="yes" xml:space="preserve">
          <source>PhantomData::partial_cmp</source>
          <target state="translated">PhantomData::partial_cmp</target>
        </trans-unit>
        <trans-unit id="81982ec179847105dec02e8f6659ba2719a350c5" translate="yes" xml:space="preserve">
          <source>PhantomData::to_owned</source>
          <target state="translated">PhantomData::to_owned</target>
        </trans-unit>
        <trans-unit id="18d81b8ec321f6b7211f97ed0d0a180539b2cf19" translate="yes" xml:space="preserve">
          <source>PhantomData::try_from</source>
          <target state="translated">PhantomData::try_from</target>
        </trans-unit>
        <trans-unit id="6ef232547e41d6a3c508e868eb0e1dcda9acebb6" translate="yes" xml:space="preserve">
          <source>PhantomData::try_into</source>
          <target state="translated">PhantomData::try_into</target>
        </trans-unit>
        <trans-unit id="459826fc3c69123294561846f5811b7d17fbb650" translate="yes" xml:space="preserve">
          <source>PhantomData::type_id</source>
          <target state="translated">PhantomData::type_id</target>
        </trans-unit>
        <trans-unit id="d75ddddf2d395eed6e40ebdddd4ba779a2c224be" translate="yes" xml:space="preserve">
          <source>PhantomPinned</source>
          <target state="translated">PhantomPinned</target>
        </trans-unit>
        <trans-unit id="451eae124367aba9f11610eae0b340026e56cff0" translate="yes" xml:space="preserve">
          <source>PhantomPinned::borrow</source>
          <target state="translated">PhantomPinned::borrow</target>
        </trans-unit>
        <trans-unit id="786c8455f8787d94470e74fc15a20491c060ff7d" translate="yes" xml:space="preserve">
          <source>PhantomPinned::borrow_mut</source>
          <target state="translated">PhantomPinned::borrow_mut</target>
        </trans-unit>
        <trans-unit id="a1cf01c9df75f343ffbacbd021215e66b7c0faaa" translate="yes" xml:space="preserve">
          <source>PhantomPinned::clamp</source>
          <target state="translated">PhantomPinned::clamp</target>
        </trans-unit>
        <trans-unit id="69d750a61d068b488c7c7207f8901cde186ed385" translate="yes" xml:space="preserve">
          <source>PhantomPinned::clone</source>
          <target state="translated">PhantomPinned::clone</target>
        </trans-unit>
        <trans-unit id="da4a55814808a963fb8e6017f05b9ce964991037" translate="yes" xml:space="preserve">
          <source>PhantomPinned::clone_from</source>
          <target state="translated">PhantomPinned::clone_from</target>
        </trans-unit>
        <trans-unit id="a0858745b27d009acc40d4d17fa322f7bf84f804" translate="yes" xml:space="preserve">
          <source>PhantomPinned::clone_into</source>
          <target state="translated">PhantomPinned::clone_into</target>
        </trans-unit>
        <trans-unit id="661f9651f0456b63094ec0858a585f9d7f320f6c" translate="yes" xml:space="preserve">
          <source>PhantomPinned::cmp</source>
          <target state="translated">PhantomPinned::cmp</target>
        </trans-unit>
        <trans-unit id="956634eaa8f684a96d9f7c4a9f256058117d3cdc" translate="yes" xml:space="preserve">
          <source>PhantomPinned::eq</source>
          <target state="translated">PhantomPinned::eq</target>
        </trans-unit>
        <trans-unit id="d1d05933f5e16b41b5606853cba697cca168c4bc" translate="yes" xml:space="preserve">
          <source>PhantomPinned::fmt</source>
          <target state="translated">PhantomPinned::fmt</target>
        </trans-unit>
        <trans-unit id="db284987b2b7569a5ee4b8bf6524802cf2668e51" translate="yes" xml:space="preserve">
          <source>PhantomPinned::from</source>
          <target state="translated">PhantomPinned::from</target>
        </trans-unit>
        <trans-unit id="60bfc35f195c0dbbcc4eedc1f559462780efae96" translate="yes" xml:space="preserve">
          <source>PhantomPinned::ge</source>
          <target state="translated">PhantomPinned::ge</target>
        </trans-unit>
        <trans-unit id="eeac9404d5a36b2fb54d77a72b65a171e9307985" translate="yes" xml:space="preserve">
          <source>PhantomPinned::gt</source>
          <target state="translated">PhantomPinned::gt</target>
        </trans-unit>
        <trans-unit id="d7443d3bcf38baa1b77bc6a0df4ebf9888869339" translate="yes" xml:space="preserve">
          <source>PhantomPinned::hash</source>
          <target state="translated">PhantomPinned::hash</target>
        </trans-unit>
        <trans-unit id="6ad9cac34c156e58b2b6838a11253e5470df15ed" translate="yes" xml:space="preserve">
          <source>PhantomPinned::hash_slice</source>
          <target state="translated">PhantomPinned::hash_slice</target>
        </trans-unit>
        <trans-unit id="dc94d9179a7f864f0ce74c2bab6ee0ebf97fea4f" translate="yes" xml:space="preserve">
          <source>PhantomPinned::into</source>
          <target state="translated">PhantomPinned::into</target>
        </trans-unit>
        <trans-unit id="477b09ef5ca7ba3819ad2d1b266b63ac7662c084" translate="yes" xml:space="preserve">
          <source>PhantomPinned::le</source>
          <target state="translated">PhantomPinned::le</target>
        </trans-unit>
        <trans-unit id="a74d2d58ef23dc0996cd1e5aa344b63b67595914" translate="yes" xml:space="preserve">
          <source>PhantomPinned::lt</source>
          <target state="translated">PhantomPinned::lt</target>
        </trans-unit>
        <trans-unit id="48956d4bc2b1867ae78426c097693696e461e98c" translate="yes" xml:space="preserve">
          <source>PhantomPinned::max</source>
          <target state="translated">PhantomPinned::max</target>
        </trans-unit>
        <trans-unit id="86554bdc17b74f7ed4cf54f3288408a7ffbeb0c6" translate="yes" xml:space="preserve">
          <source>PhantomPinned::min</source>
          <target state="translated">PhantomPinned::min</target>
        </trans-unit>
        <trans-unit id="b467babb6614d240cc826ec4af46de082639c9f3" translate="yes" xml:space="preserve">
          <source>PhantomPinned::ne</source>
          <target state="translated">PhantomPinned::ne</target>
        </trans-unit>
        <trans-unit id="109112ad625371587433e50d62c45da7500e0164" translate="yes" xml:space="preserve">
          <source>PhantomPinned::partial_cmp</source>
          <target state="translated">PhantomPinned::partial_cmp</target>
        </trans-unit>
        <trans-unit id="b2101a800b85cc9202665e7d6dca08307ef40b30" translate="yes" xml:space="preserve">
          <source>PhantomPinned::to_owned</source>
          <target state="translated">PhantomPinned::to_owned</target>
        </trans-unit>
        <trans-unit id="cbb62df26589bea5e825a42613035c74949fee0c" translate="yes" xml:space="preserve">
          <source>PhantomPinned::try_from</source>
          <target state="translated">PhantomPinned::try_from</target>
        </trans-unit>
        <trans-unit id="0c3b108f1b369fa14e44deac48e07a76d72c20d3" translate="yes" xml:space="preserve">
          <source>PhantomPinned::try_into</source>
          <target state="translated">PhantomPinned::try_into</target>
        </trans-unit>
        <trans-unit id="2f23cd70b11623ffc2d3b9626c9ed43b736696a2" translate="yes" xml:space="preserve">
          <source>PhantomPinned::type_id</source>
          <target state="translated">PhantomPinned::type_id</target>
        </trans-unit>
        <trans-unit id="9c918414710c579b80732bc369eb7087f0d8c8d1" translate="yes" xml:space="preserve">
          <source>Pin</source>
          <target state="translated">Pin</target>
        </trans-unit>
        <trans-unit id="7e8976e3f20cf715c1cde8a8c57687d2b7270442" translate="yes" xml:space="preserve">
          <source>Pin::as_mut</source>
          <target state="translated">Pin::as_mut</target>
        </trans-unit>
        <trans-unit id="1a120c3831b5981aa1e956c7d6444c73d4cf547c" translate="yes" xml:space="preserve">
          <source>Pin::as_ref</source>
          <target state="translated">Pin::as_ref</target>
        </trans-unit>
        <trans-unit id="d9deef1401f9f49bac5a1b57eba1aad8796ddbe0" translate="yes" xml:space="preserve">
          <source>Pin::borrow</source>
          <target state="translated">Pin::borrow</target>
        </trans-unit>
        <trans-unit id="2a8662460cef340eba59b53998156f884f4390a3" translate="yes" xml:space="preserve">
          <source>Pin::borrow_mut</source>
          <target state="translated">Pin::borrow_mut</target>
        </trans-unit>
        <trans-unit id="1049ae51c6623339bfe834a79e7fe32a4dc208d2" translate="yes" xml:space="preserve">
          <source>Pin::clamp</source>
          <target state="translated">Pin::clamp</target>
        </trans-unit>
        <trans-unit id="0b413632576e94791110785ac80f6a7dd9a7e6fc" translate="yes" xml:space="preserve">
          <source>Pin::clone</source>
          <target state="translated">Pin::clone</target>
        </trans-unit>
        <trans-unit id="6d3451997ef793fd351960db146174a00c95f9ca" translate="yes" xml:space="preserve">
          <source>Pin::clone_from</source>
          <target state="translated">Pin::clone_from</target>
        </trans-unit>
        <trans-unit id="154b89b387c1cbe2fe2aac0552cb0897a2797ce4" translate="yes" xml:space="preserve">
          <source>Pin::clone_into</source>
          <target state="translated">Pin::clone_into</target>
        </trans-unit>
        <trans-unit id="2b51eef39badba01baf3d2db778991909f556ec3" translate="yes" xml:space="preserve">
          <source>Pin::cmp</source>
          <target state="translated">Pin::cmp</target>
        </trans-unit>
        <trans-unit id="89ed2254300b3c427517e0298bb1c5d1192be067" translate="yes" xml:space="preserve">
          <source>Pin::deref</source>
          <target state="translated">Pin::deref</target>
        </trans-unit>
        <trans-unit id="8461540fe32a36af52e23e1afde77a31bc1f9635" translate="yes" xml:space="preserve">
          <source>Pin::deref_mut</source>
          <target state="translated">Pin::deref_mut</target>
        </trans-unit>
        <trans-unit id="41fed19a721176445a5c5e7ff6d599f8e2677845" translate="yes" xml:space="preserve">
          <source>Pin::eq</source>
          <target state="translated">Pin::eq</target>
        </trans-unit>
        <trans-unit id="97f7de124cfeb472b38aa3b471b4343cdec18845" translate="yes" xml:space="preserve">
          <source>Pin::fmt</source>
          <target state="translated">Pin::fmt</target>
        </trans-unit>
        <trans-unit id="7637b2b8e239cbe5189446f22f17c5ed199b15b8" translate="yes" xml:space="preserve">
          <source>Pin::from</source>
          <target state="translated">Pin::from</target>
        </trans-unit>
        <trans-unit id="095f0e2d6d297ed3fa9e8db3ed6855c01c946c3a" translate="yes" xml:space="preserve">
          <source>Pin::ge</source>
          <target state="translated">Pin::ge</target>
        </trans-unit>
        <trans-unit id="07731da90b5d75ea10b397b6dd78af9daa412e77" translate="yes" xml:space="preserve">
          <source>Pin::get_mut</source>
          <target state="translated">Pin::get_mut</target>
        </trans-unit>
        <trans-unit id="f904518fba1c9d40a1045a79f51abcb32b41b6b9" translate="yes" xml:space="preserve">
          <source>Pin::get_ref</source>
          <target state="translated">Pin::get_ref</target>
        </trans-unit>
        <trans-unit id="3b3d62ddd7c667a0d6f63aeeeecb306772ed602c" translate="yes" xml:space="preserve">
          <source>Pin::get_unchecked_mut</source>
          <target state="translated">Pin::get_unchecked_mut</target>
        </trans-unit>
        <trans-unit id="44ab2a2733d1aee858400910cd00ae01838f382d" translate="yes" xml:space="preserve">
          <source>Pin::gt</source>
          <target state="translated">Pin::gt</target>
        </trans-unit>
        <trans-unit id="08d0447c9ec141011432829da7fd0cc6191d4b35" translate="yes" xml:space="preserve">
          <source>Pin::hash</source>
          <target state="translated">Pin::hash</target>
        </trans-unit>
        <trans-unit id="c17d51dce275a4092df1d8f961f0c591ace51f7e" translate="yes" xml:space="preserve">
          <source>Pin::hash_slice</source>
          <target state="translated">Pin::hash_slice</target>
        </trans-unit>
        <trans-unit id="abda161de333210366e23511812fc4cde79e2921" translate="yes" xml:space="preserve">
          <source>Pin::into</source>
          <target state="translated">Pin::into</target>
        </trans-unit>
        <trans-unit id="b388a2c4b873e0d1d48142973cd938d04ab5c943" translate="yes" xml:space="preserve">
          <source>Pin::into_inner</source>
          <target state="translated">Pin::into_inner</target>
        </trans-unit>
        <trans-unit id="120cba2c7564888c39d98cbe311c85d95ab65557" translate="yes" xml:space="preserve">
          <source>Pin::into_inner_unchecked</source>
          <target state="translated">Pin::into_inner_unchecked</target>
        </trans-unit>
        <trans-unit id="6a8153050c5a843c717920bb33ed6928fc20e065" translate="yes" xml:space="preserve">
          <source>Pin::into_ref</source>
          <target state="translated">Pin::into_ref</target>
        </trans-unit>
        <trans-unit id="5f41a763b9c13d195ec9418fe1d7746be71a4ce5" translate="yes" xml:space="preserve">
          <source>Pin::le</source>
          <target state="translated">Pin::le</target>
        </trans-unit>
        <trans-unit id="a71e6c11e606ae36c07e9590b02111dc258a4fc1" translate="yes" xml:space="preserve">
          <source>Pin::lt</source>
          <target state="translated">Pin::lt</target>
        </trans-unit>
        <trans-unit id="8198644f84e26327a71a152612db482b5b52c292" translate="yes" xml:space="preserve">
          <source>Pin::map_unchecked</source>
          <target state="translated">Pin::map_unchecked</target>
        </trans-unit>
        <trans-unit id="99e5e0d531d14ea5dbb1c33220378b4b6a2b0e02" translate="yes" xml:space="preserve">
          <source>Pin::map_unchecked_mut</source>
          <target state="translated">Pin::map_unchecked_mut</target>
        </trans-unit>
        <trans-unit id="4cf2963577eec3cd3fc680909e43ac4fb509f168" translate="yes" xml:space="preserve">
          <source>Pin::max</source>
          <target state="translated">Pin::max</target>
        </trans-unit>
        <trans-unit id="bd1f9e3d11f97e4d06601f144434a76017ad3631" translate="yes" xml:space="preserve">
          <source>Pin::min</source>
          <target state="translated">Pin::min</target>
        </trans-unit>
        <trans-unit id="8e7cb774ad43d888a56cec5ed5c0e5a2f3278efa" translate="yes" xml:space="preserve">
          <source>Pin::ne</source>
          <target state="translated">Pin::ne</target>
        </trans-unit>
        <trans-unit id="8492d6592b9d8dd1c1e91ad3b039cc5b0e1e0eb2" translate="yes" xml:space="preserve">
          <source>Pin::new</source>
          <target state="translated">Pin::new</target>
        </trans-unit>
        <trans-unit id="0756bbaf99dad63201ab0d17be61de684d20c080" translate="yes" xml:space="preserve">
          <source>Pin::new_unchecked</source>
          <target state="translated">Pin::new_unchecked</target>
        </trans-unit>
        <trans-unit id="3015e039e3976e91e2fb978335ea539bdf5f0afb" translate="yes" xml:space="preserve">
          <source>Pin::partial_cmp</source>
          <target state="translated">Pin::partial_cmp</target>
        </trans-unit>
        <trans-unit id="6103f902c14336cae4ef27e3117af777b8966e7c" translate="yes" xml:space="preserve">
          <source>Pin::poll</source>
          <target state="translated">Pin::poll</target>
        </trans-unit>
        <trans-unit id="5dbd03b3c8c828d74fced2d910e5037f24b1767b" translate="yes" xml:space="preserve">
          <source>Pin::resume</source>
          <target state="translated">Pin::resume</target>
        </trans-unit>
        <trans-unit id="7c16bb8d7e8f682d40c05d79651746d4b7972893" translate="yes" xml:space="preserve">
          <source>Pin::set</source>
          <target state="translated">Pin::set</target>
        </trans-unit>
        <trans-unit id="331b4d8c6239b098778164f982f62f3844205d49" translate="yes" xml:space="preserve">
          <source>Pin::to_owned</source>
          <target state="translated">Pin::to_owned</target>
        </trans-unit>
        <trans-unit id="6222b43ed827202396ce96bf818e8e27559d7653" translate="yes" xml:space="preserve">
          <source>Pin::to_string</source>
          <target state="translated">Pin::to_string</target>
        </trans-unit>
        <trans-unit id="8512dc6c6cada1608d4abd2ed30f9301b411ebd5" translate="yes" xml:space="preserve">
          <source>Pin::try_from</source>
          <target state="translated">Pin::try_from</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
