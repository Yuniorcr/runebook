<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="b7c27b818f5c2be878d2c1c3bb4290534e099c89" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry.buffer&quot;&gt;&lt;code&gt;buffer()&lt;/code&gt;&lt;/a&gt;, but allows customizing the style of the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e472023710ce0e8e421de5fd812017ef9b705d" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#django.db.models.ForeignKey.limit_choices_to&quot;&gt;&lt;code&gt;ForeignKey.limit_choices_to&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934a58a121f6cbd6e9693080d3f4a199e6b20572" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;ForeignKey.related_name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d353bbfbb5ffc18d5d97371b8e2b92d215f85e" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#django.db.models.ForeignKey.related_query_name&quot;&gt;&lt;code&gt;ForeignKey.related_query_name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd29b14afdd49981a0425d08dfe23c4e15393b0" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#django.forms.ModelChoiceField.queryset&quot;&gt;&lt;code&gt;ModelChoiceField.queryset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e9a1aff55af5139699c563691295497b475ba44" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#django.forms.ModelChoiceField.to_field_name&quot;&gt;&lt;code&gt;ModelChoiceField.to_field_name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922b28f3a4d8d6c96b9169e100dc13ab774ad182" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;nodata_value&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8df132e7c76ca05d12bd9172de2aa6379991be" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;sender&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87531ddd46fa73699db586aa0223c7d30141b51c" translate="yes" xml:space="preserve">
          <source>Same as for &lt;a href=&quot;#django.contrib.auth.decorators.login_required&quot;&gt;&lt;code&gt;login_required()&lt;/code&gt;&lt;/a&gt;. Setting it to &lt;code&gt;None&lt;/code&gt; removes it from the URL, which you may want to do if you are redirecting users that don&amp;rsquo;t pass the test to a non-login page where there&amp;rsquo;s no &amp;ldquo;next page&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d21cfc38107d6cabe919d40910e9600997d27f16" translate="yes" xml:space="preserve">
          <source>Same as sender</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe2e0e4894626797a9d3a3a9b994426726b8b41" translate="yes" xml:space="preserve">
          <source>Same as size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221261b9bb2eee5a2a8a78902b2ba3aa6c4a0926" translate="yes" xml:space="preserve">
          <source>Same as the &lt;a href=&quot;#django.db.models.Field.get_db_prep_value&quot;&gt;&lt;code&gt;get_db_prep_value()&lt;/code&gt;&lt;/a&gt;, but called when the field value must be &lt;em&gt;saved&lt;/em&gt; to the database. By default returns &lt;a href=&quot;#django.db.models.Field.get_db_prep_value&quot;&gt;&lt;code&gt;get_db_prep_value()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741143e01c73ff3362c2e42fe3f4a02eb1031c1a" translate="yes" xml:space="preserve">
          <source>Same as the non-lazy versions above, but using lazy execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4792821ef8469f26ebfa815e053309e4f37eef1" translate="yes" xml:space="preserve">
          <source>Same goes for underscores. Both percentage signs and underscores are handled for you transparently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeedb27bcd07351146709e12cf9006dcc91d11ba" translate="yes" xml:space="preserve">
          <source>Same-origin versus cross-origin: a link from &lt;code&gt;https://example.com/1.html&lt;/code&gt; to &lt;code&gt;https://example.com/2.html&lt;/code&gt; is same-origin. A link from &lt;code&gt;https://example.com/page.html&lt;/code&gt; to &lt;code&gt;https://not.example.com/page.html&lt;/code&gt; is cross-origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04e684d67113e296e39895c274ab97f9283fadf" translate="yes" xml:space="preserve">
          <source>Sample &lt;code&gt;registration/password_reset_email.html&lt;/code&gt; (email body template):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93cc16cad7601675158b9331513b5740a09166e4" translate="yes" xml:space="preserve">
          <source>Sample Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3409c76532f2ff56204d0e6566e878683cc674aa" translate="yes" xml:space="preserve">
          <source>Sample usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e048cb1b668e6110fd6c56723b5298a8ffb6ed21" translate="yes" xml:space="preserve">
          <source>Save &amp;ndash; Saves changes and returns to the change-list page for this type of object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe408916ba470efc143319ed2b2cc5bc511b82e" translate="yes" xml:space="preserve">
          <source>Save Keyword Arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b800966afc337acf93c4a247e70220bebb4258a" translate="yes" xml:space="preserve">
          <source>Save and add another &amp;ndash; Saves changes and loads a new, blank form for this type of object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5806ad54d79792c74b3848c696776a8247f5376d" translate="yes" xml:space="preserve">
          <source>Save and continue editing &amp;ndash; Saves changes and reloads the admin page for this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6faacb41cff46ae038794ae0f31994407c26f5" translate="yes" xml:space="preserve">
          <source>Save it!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994670531879cf0a003d5fcfb4f50cad3f4597bb" translate="yes" xml:space="preserve">
          <source>Save these changes and start a new Python interactive shell by running &lt;code&gt;python manage.py shell&lt;/code&gt; again:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab2d514703f4a7f7045d96403ac643b3c9f06c3" translate="yes" xml:space="preserve">
          <source>Save this as a file by using standard Unix output redirection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="404ecf5c82888330f6bb4f1caae7ff380b31f4e2" translate="yes" xml:space="preserve">
          <source>Save this somewhere in your project. For example, you might put this in a file like &lt;code&gt;myproject/hashers.py&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168ba28ab9e8bdf6a363494b5ab4db9b9eb4e92c" translate="yes" xml:space="preserve">
          <source>Savepoint rollback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74ed8e87da0851118fc159806fbe103dac70bbe" translate="yes" xml:space="preserve">
          <source>Savepoints</source>
          <target state="translated">Savepoints</target>
        </trans-unit>
        <trans-unit id="8adf41aafa7a5694c80c0c4d611d8f46a2f5e8cb" translate="yes" xml:space="preserve">
          <source>Savepoints (i.e. nested &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; blocks) are handled correctly. That is, an &lt;a href=&quot;#django.db.transaction.on_commit&quot;&gt;&lt;code&gt;on_commit()&lt;/code&gt;&lt;/a&gt; callable registered after a savepoint (in a nested &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; block) will be called after the outer transaction is committed, but not if a rollback to that savepoint or any previous savepoint occurred during the transaction:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a89c03a8bb67733ba419da14784e6c7116e9753" translate="yes" xml:space="preserve">
          <source>Savepoints are controlled by three functions in &lt;a href=&quot;#module-django.db.transaction&quot;&gt;&lt;code&gt;django.db.transaction&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7200f0a087a1b4b2190930b401eb2974694f569e" translate="yes" xml:space="preserve">
          <source>Savepoints aren&amp;rsquo;t especially useful if you are using autocommit, the default behavior of Django. However, once you open a transaction with &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt;, you build up a series of database operations awaiting a commit or rollback. If you issue a rollback, the entire transaction is rolled back. Savepoints provide the ability to perform a fine-grained rollback, rather than the full rollback that would be performed by &lt;code&gt;transaction.rollback()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d611b74cb8e712eb22f9c364ae9d8307909984bc" translate="yes" xml:space="preserve">
          <source>Savepoints in SQLite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b952b499d689485a1e8be5a8dee9a685161abe" translate="yes" xml:space="preserve">
          <source>Savepoints may be used to recover from a database error by performing a partial rollback. If you&amp;rsquo;re doing this inside an &lt;a href=&quot;#django.db.transaction.atomic&quot;&gt;&lt;code&gt;atomic()&lt;/code&gt;&lt;/a&gt; block, the entire block will still be rolled back, because it doesn&amp;rsquo;t know you&amp;rsquo;ve handled the situation at a lower level! To prevent this, you can control the rollback behavior with the following functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d99180a2cd22ec9db6b64c331f3f85f18c7d555" translate="yes" xml:space="preserve">
          <source>Saves a new file using the storage system, preferably with the name specified. If there already exists a file with this name &lt;code&gt;name&lt;/code&gt;, the storage system may modify the filename as necessary to get a unique name. The actual name of the stored file will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047c252903061bcae6886cb1aa49ed37793665e2" translate="yes" xml:space="preserve">
          <source>Saves a new file with the file name and contents provided. This will not replace the existing file, but will create a new file and update the object to point to it. If &lt;code&gt;save&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, the model&amp;rsquo;s &lt;code&gt;save()&lt;/code&gt; method will be called once the file is saved. That is, these two lines:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b202fb86337ed51e5e82d99a5cfe4cf9826a8e5" translate="yes" xml:space="preserve">
          <source>Saves session data for a provided session key, or deletes the session in case the data is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e596160839a2e126159adb38e424ce23256951fd" translate="yes" xml:space="preserve">
          <source>Saves the form instance, sets the current object for the view, and redirects to &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_success_url&quot;&gt;&lt;code&gt;get_success_url()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22de41d8cae59a3ffefb1e93c0ad6925a08ba573" translate="yes" xml:space="preserve">
          <source>Saving &lt;code&gt;ForeignKey&lt;/code&gt; and &lt;code&gt;ManyToManyField&lt;/code&gt; fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f7445bd2cd1848fcc7e0c6716b4fc6e639c352" translate="yes" xml:space="preserve">
          <source>Saving changes to objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dcb773a91538f6cf112d4e3fe587fe609e61200" translate="yes" xml:space="preserve">
          <source>Saving objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db36225bf61dc10a19eada5cce7c4e5f1ae9842f" translate="yes" xml:space="preserve">
          <source>Saving objects in the formset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dfd5e9d03daafc080bf8ef30e2c26512a8f71a0" translate="yes" xml:space="preserve">
          <source>Say you&amp;rsquo;ve created a PostgreSQL custom type called &lt;code&gt;mytype&lt;/code&gt;. You can subclass &lt;code&gt;Field&lt;/code&gt; and implement the &lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_type&quot;&gt;&lt;code&gt;db_type()&lt;/code&gt;&lt;/a&gt; method, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd4a83d012acd714fbd600cfb9847611783fea3" translate="yes" xml:space="preserve">
          <source>Scenarios</source>
          <target state="translated">Scenarios</target>
        </trans-unit>
        <trans-unit id="54e7d39735f9b246353024547f800611945756b6" translate="yes" xml:space="preserve">
          <source>Schema Operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7902051cafb8339c2619da6174f9f1e4d45b92" translate="yes" xml:space="preserve">
          <source>SchemaEditor</source>
          <target state="translated">SchemaEditor</target>
        </trans-unit>
        <trans-unit id="fa9cbeb33a97971999f087bf3fe74a1ef634f425" translate="yes" xml:space="preserve">
          <source>Scheme is handled correctly when making comparisons between two URLs. If there isn&amp;rsquo;t any scheme specified in the location where we are redirected to, the original request&amp;rsquo;s scheme is used. If present, the scheme in &lt;code&gt;expected_url&lt;/code&gt; is the one used to make the comparisons to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce06414177f72ab70e6387b6af9f8ceef0d6049" translate="yes" xml:space="preserve">
          <source>Search</source>
          <target state="translated">Search</target>
        </trans-unit>
        <trans-unit id="95ab064f11f946ff31aae78c3b96e81ea428f933" translate="yes" xml:space="preserve">
          <source>Search for information in the archives of the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/mailing-lists/#django-users-mailing-list&quot;&gt;django-users&lt;/a&gt; mailing list, or &lt;a href=&quot;https://groups.google.com/d/forum/django-users&quot;&gt;post a question&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19762231930633d16a4b870c0adadb6c197e3bed" translate="yes" xml:space="preserve">
          <source>Searches for and loads the contents of the named fixture into the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ceac1b8d74a171ffbc3df46d65ef4faf9fd177" translate="yes" xml:space="preserve">
          <source>Searches for one or more relative paths with the enabled finders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a75411f8784a4ffe29449baa178400ed44e32c" translate="yes" xml:space="preserve">
          <source>Searching against a single field is great but rather limiting. The &lt;code&gt;Entry&lt;/code&gt; instances we&amp;rsquo;re searching belong to a &lt;code&gt;Blog&lt;/code&gt;, which has a &lt;code&gt;tagline&lt;/code&gt; field. To query against both fields, use a &lt;code&gt;SearchVector&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187aea97d320904e4377691491bd1b25bcd80e5f" translate="yes" xml:space="preserve">
          <source>Searching in other databases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a793720e14ebf28e238d43b147492fa4fc69d6" translate="yes" xml:space="preserve">
          <source>Second, here&amp;rsquo;s an example of how to make the logging system print Django&amp;rsquo;s logging to the console. It may be useful during local development.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6afea496b5e496de8ce07780c24dc616cff866cc" translate="yes" xml:space="preserve">
          <source>Second, the lookup doesn&amp;rsquo;t guarantee that only one object will be returned. If the query matches more than one object, it will retrieve and transfer all of them from the database. This penalty could be substantial if hundreds or thousands of records are returned. The penalty will be compounded if the database lives on a separate server, where network overhead and latency also play a factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114056dda1bba58c9480ae97989ae720656974cf" translate="yes" xml:space="preserve">
          <source>Second, you can manually render the formset, but let the form deal with itself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d09fd2fd7c6f6ac5cf59524572397ebbe6df69" translate="yes" xml:space="preserve">
          <source>Secondly, the &lt;code&gt;GroupAdmin&lt;/code&gt; must manually exclude the &lt;code&gt;members&lt;/code&gt; field. Django displays an admin widget for a many-to-many field on the model that defines the relation (in this case, &lt;code&gt;Group&lt;/code&gt;). If you want to use an inline model to represent the many-to-many relationship, you must tell Django&amp;rsquo;s admin to &lt;em&gt;not&lt;/em&gt; display this widget - otherwise you will end up with two widgets on your admin page for managing the relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a10cf723466d144d2eb887ee10cb1b49e26127" translate="yes" xml:space="preserve">
          <source>Secondly, there are other options to consider: in a real-life case, &lt;code&gt;{{
my_bicycles.count }}&lt;/code&gt;, which invokes the &lt;code&gt;QuerySet&lt;/code&gt;&lt;code&gt;count()&lt;/code&gt; method directly from the template, might be the most appropriate choice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4077224c5fb3ef6e7a65535dea9195657a149b" translate="yes" xml:space="preserve">
          <source>Secondly, when you use the form, you need to bind the file data. File data is handled separately to normal form data, so when your form contains a &lt;code&gt;FileField&lt;/code&gt; and &lt;code&gt;ImageField&lt;/code&gt;, you will need to specify a second argument when you bind your form. So if we extend our ContactForm to include an &lt;code&gt;ImageField&lt;/code&gt; called &lt;code&gt;mugshot&lt;/code&gt;, we need to bind the file data containing the mugshot image:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b2437bd705e09b1fcb99f53e13aacc4ce658ee" translate="yes" xml:space="preserve">
          <source>Secondly, you can include an object that contains embedded namespace data. If you &lt;code&gt;include()&lt;/code&gt; a list of &lt;a href=&quot;../../ref/urls#django.urls.path&quot;&gt;&lt;code&gt;path()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../ref/urls#django.urls.re_path&quot;&gt;&lt;code&gt;re_path()&lt;/code&gt;&lt;/a&gt; instances, the URLs contained in that object will be added to the global namespace. However, you can also &lt;code&gt;include()&lt;/code&gt; a 2-tuple containing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d2ac5e97a1590fdf53c286500725ccda7d8ef6" translate="yes" xml:space="preserve">
          <source>Seconds since the Unix Epoch (January 1 1970 00:00:00 UTC).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ccc8ded1e41170d501fe81db7cdb845b97b7c2" translate="yes" xml:space="preserve">
          <source>Seconds, 2 digits with leading zeros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="688b6c031adaa3963c6871b14d4e25b5e66eb4bb" translate="yes" xml:space="preserve">
          <source>Security Middleware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e50593df9fd50ba7a3d2487cf1f5f1eb42512b" translate="yes" xml:space="preserve">
          <source>Security in Django</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea71385a85f5a2035a058ba204d8abe4c928a002" translate="yes" xml:space="preserve">
          <source>Security is a topic of paramount importance in the development of Web applications and Django provides multiple protection tools and mechanisms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb82652f7b61784f4a74671050c9bce586846105" translate="yes" xml:space="preserve">
          <source>Security middleware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da1b832960f29a21c2d18a0ea2766acdf3ee95f" translate="yes" xml:space="preserve">
          <source>Security overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0edd2f81f6777cddbcba511ed241d6e846b003ad" translate="yes" xml:space="preserve">
          <source>Security researchers recently revealed that when compression techniques (including &lt;code&gt;GZipMiddleware&lt;/code&gt;) are used on a website, the site may become exposed to a number of possible attacks. Before using &lt;code&gt;GZipMiddleware&lt;/code&gt; on your site, you should consider very carefully whether you are subject to these attacks. If you&amp;rsquo;re in &lt;em&gt;any&lt;/em&gt; doubt about whether you&amp;rsquo;re affected, you should avoid using &lt;code&gt;GZipMiddleware&lt;/code&gt;. For more details, see the &lt;a href=&quot;http://breachattack.com/resources/BREACH%20-%20SSL,%20gone%20in%2030%20seconds.pdf&quot;&gt;the BREACH paper (PDF)&lt;/a&gt; and &lt;a href=&quot;http://breachattack.com&quot;&gt;breachattack.com&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b2128f4bfb4a7bae184c23cdd23a13d3a96f79" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#a-complex-example&quot;&gt;a complex example&lt;/a&gt; below that uses a description template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772de2846485ee83c29371f4019df06e26c96e87" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#custom-users-admin-full-example&quot;&gt;a full example&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5cdedaf5175f5aaf3ea58ad0a2ef96d2d6e0ead" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#django.contrib.admin.InlineModelAdmin&quot;&gt;&lt;code&gt;InlineModelAdmin&lt;/code&gt;&lt;/a&gt; objects below as well as &lt;a href=&quot;#django.contrib.admin.ModelAdmin.get_formsets_with_inlines&quot;&gt;&lt;code&gt;ModelAdmin.get_formsets_with_inlines()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1442894a1ae3696c845b69845048bb25d65aac9d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#django.contrib.gis.geos.WKBWriter.outdim&quot;&gt;&lt;code&gt;WKBWriter.outdim&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7cef36fc0a6569da164db22685bdba0f532f8b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#django.db.models.query.QuerySet.union&quot;&gt;&lt;code&gt;union()&lt;/code&gt;&lt;/a&gt; for some restrictions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb91e7937ae514e87ffcd35361b196567595a69" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c034446f8e09be163a2f3fbffa100303d531bf3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#how-django-knows-to-update-vs-insert&quot;&gt;How Django knows to UPDATE vs. INSERT&lt;/a&gt;, below, for the reason this happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918f138910c8fbc3af94dc869be83b67afa60e33" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#invalid-template-variables&quot;&gt;How invalid variables are handled&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2bc4c52c4fe041afa7f95d7f287edd55936bc8f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#postgresql-fts-search-configuration&quot;&gt;Changing the search configuration&lt;/a&gt; and &lt;a href=&quot;#postgresql-fts-weighting-queries&quot;&gt;Weighting queries&lt;/a&gt; for an explanation of the &lt;code&gt;config&lt;/code&gt; and &lt;code&gt;weight&lt;/code&gt; parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4432730147d7d70cc0da7270291de9522fe0ea7a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#postgresql-fts-search-configuration&quot;&gt;Changing the search configuration&lt;/a&gt; for an explanation of the &lt;code&gt;config&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51c504a03a1236af76b32735d77d0b6905c7139" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#postgresql-fts-weighting-queries&quot;&gt;Weighting queries&lt;/a&gt; for an explanation of the &lt;code&gt;weights&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40ecbd8f41ebcd4cd9f34e4bd2631d70f29fe8a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#std:setting-SESSION_COOKIE_HTTPONLY&quot;&gt;&lt;code&gt;SESSION_COOKIE_HTTPONLY&lt;/code&gt;&lt;/a&gt; for details on &lt;code&gt;HttpOnly&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00af5ea61bcfa413dd46b15bd11827afe9cd4ff" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#std:setting-SESSION_COOKIE_SAMESITE&quot;&gt;&lt;code&gt;SESSION_COOKIE_SAMESITE&lt;/code&gt;&lt;/a&gt; for details about &lt;code&gt;SameSite&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab8c6d4f046d1a8032d994f32e170e5d6912e1d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#std:templatefilter-localize&quot;&gt;&lt;code&gt;localize&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:templatefilter-unlocalize&quot;&gt;&lt;code&gt;unlocalize&lt;/code&gt;&lt;/a&gt; for template filters that will do the same job on a per-variable basis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d310bc328ff621e1ae10dda72dbb119361a7b0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#template-loaders&quot;&gt;Loader types&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a89b189e88c4a3983a741cd8357a598453c7e93" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../howto/custom-model-fields#converting-model-field-to-serialization&quot;&gt;Converting field data for serialization&lt;/a&gt; for usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5834e9a6976542f11a391c14fbfba13b88cb5e4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../howto/custom-model-fields#converting-python-objects-to-query-values&quot;&gt;Converting Python objects to query values&lt;/a&gt; for usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23cdf302798b457e58e5f15145abcb18a49e6c2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../howto/custom-model-fields#converting-query-values-to-database-values&quot;&gt;Converting query values to database values&lt;/a&gt; for usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd95863e4b07f9f22addc055cd3d5364e20d2a4a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../howto/custom-model-fields#converting-values-to-python-objects&quot;&gt;Converting values to Python objects&lt;/a&gt; for usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b570b4e581646e8889773892ce4896573ffbbb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../howto/custom-model-fields#custom-database-types&quot;&gt;Custom database types&lt;/a&gt; for usage in custom fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8a1fe8816c06d996147094cae0537a94e89e97" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../howto/custom-model-fields#emulating-built-in-field-types&quot;&gt;Emulating built-in field types&lt;/a&gt; for usage in custom fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0498a79ac6b7ecf3be18edadf2714b58016d3999" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../howto/custom-model-fields#preprocessing-values-before-saving&quot;&gt;Preprocessing values before saving&lt;/a&gt; for usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6463959fd8144024096caa2f52865c36e4bd825c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../howto/custom-model-fields#specifying-form-field-for-model-field&quot;&gt;Specifying the form field for a model field&lt;/a&gt; for usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be246b56317b509dd754a720adbc4e96bbc3432" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../howto/custom-template-tags&quot;&gt;Custom tag and filter libraries&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862cb1a1727236a9aeadaceef1dc685397c7b0f9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../howto/custom-template-tags&quot;&gt;Custom template tags and filters&lt;/a&gt; for information on writing your own custom template libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bcf905db6203bcf526ab960096910d9ea3b301" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../ref/class-based-views/index&quot;&gt;Built-in class-based views API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4feb533793ab9934bc1c05c6c58cfcc47b3ae3a9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../ref/forms/api&quot;&gt;The Forms API&lt;/a&gt; for more on errors, styling, and working with form attributes in templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c856add6c16d90fff7d42b10ca8d387cdf2f8d6a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../ref/forms/api#ref-forms-api-outputting-html&quot;&gt;Outputting forms as HTML&lt;/a&gt; for more on this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2368ff0924fd9aa5a760a6437bf797eeb5ea9831" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../topics/auth/default#topics-auth-creating-users&quot;&gt;Creating users&lt;/a&gt; for example usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c760c1e9edcc0e3c60d9caecb8fdf96fef689fd9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../topics/auth/index&quot;&gt;User authentication in Django&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ad808d942d67950a4b2e447002ee01f80dbf64" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../topics/db/examples/one_to_one&quot;&gt;One-to-one relationships&lt;/a&gt; for usage examples of &lt;code&gt;OneToOneField&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1336b194f987682e037d139ef34ef7277ddd90a3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../topics/forms/formsets&quot;&gt;formsets&lt;/a&gt; for example usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61cd7951de2202a6d77a03527739052058b05a2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../topics/forms/modelforms#inline-formsets&quot;&gt;Inline formsets&lt;/a&gt; for example usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1454b38a444bcbbc047ea53b95bc09b20efb604f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../topics/forms/modelforms#model-formsets&quot;&gt;Model formsets&lt;/a&gt; for example usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58963d1318ea6e7b49dce406c21f906b4a32cdb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../topics/forms/modelforms#modelforms-factory&quot;&gt;ModelForm factory function&lt;/a&gt; for example usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fa17bda9fa0ab479d361dd09b08d56d24a37f2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../topics/i18n/formatting#topic-l10n-templates&quot;&gt;Controlling localization in templates&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c35fcc7fdb20257a062b435f2908e08dc579b3a1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../topics/i18n/timezones#time-zones-in-templates&quot;&gt;Time zone aware output in templates&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c394a0336a6968430ebf2e44eb92064724e41371" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../topics/i18n/translation#i18n-template-tags&quot;&gt;i18n template tags&lt;/a&gt; for template tags that generate the same values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3f16aa4ae200a5e1432fb5c3b58020a93d97ea" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../topics/i18n/translation#specifying-translation-strings-in-template-code&quot;&gt;Internationalization: in template code&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38b0b5c73b80dff0cad301b26d7b2aaff2fcff5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../topics/logging&quot;&gt;Logging&lt;/a&gt; for details on logging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6423820ff19928c30b3efb1f48273f4e9c204908" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../topics/templates#django.template.backends.jinja2.Jinja2&quot;&gt;&lt;code&gt;Jinja2&lt;/code&gt;&lt;/a&gt; for information on using the &lt;code&gt;static&lt;/code&gt; tag with Jinja2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92bd53f4846363d3027c5c88023322adb8bd7af" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../cache#using-vary-headers&quot;&gt;using vary headers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272dbc261349fe1d866e08d62e6fe311d57dada4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../class-based-views/intro#id1&quot;&gt;Decorating the class&lt;/a&gt; for how to use these decorators with class-based views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74799855d793caa1b32eb4e08b1e93eaea3e7595" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../error-reporting&quot;&gt;Error reporting&lt;/a&gt; for details on error reporting by email.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df38f3f4f3776c6f7f0f87e3063fd4e8f9ddca69" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../howto/custom-management-commands&quot;&gt;Writing custom django-admin commands&lt;/a&gt; for how to add customized actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea715a3a7738f0149343f29ee89479e5a3b5a64" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../howto/deployment/wsgi/modwsgi&quot;&gt;How to use Django with mod_wsgi&lt;/a&gt; for information on how to configure mod_wsgi once you have it installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59bcd5bac0d3ed329bf927c80d2f3e049c702fad" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../howto/initial-data#initial-data-via-fixtures&quot;&gt;Providing data with fixtures&lt;/a&gt; and &lt;a href=&quot;../topics/testing/tools#topics-testing-fixtures&quot;&gt;Fixture loading&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f260c32d77d726dc0d9225235e50a401953b6f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../http/urls&quot;&gt;the URL documentation&lt;/a&gt; for details on using named URL patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4bcd0bda9599b2f050a7b95259be3e12feeacbb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../ref/django-admin#syntax-coloring&quot;&gt;Syntax coloring&lt;/a&gt; to learn how to modify the color palette and to see the available styles (use uppercased versions of the &amp;ldquo;roles&amp;rdquo; described in that section).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0da9e3e5cd91d4e0cc38f368f6746e117ec66b1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../ref/files/storage&quot;&gt;File storage API&lt;/a&gt; for the file storage API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1290c049111f70ef59d0d59dcf3ce29e29b822a6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../ref/templates/api#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4470a404cd07f49e6357f617b64f3a4718a1a99" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../ref/templates/api#invalid-template-variables&quot;&gt;How invalid variables are handled&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be05e2cf43286009803d23a35a7ae035328002d9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../ref/templates/api#template-loaders&quot;&gt;Loader types&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e80ce8f21d66480df18924699869212765f784" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../settings#settings-staticfiles&quot;&gt;staticfiles settings&lt;/a&gt; for details on the following settings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623af46552f03e84c30f146caf2404d27e1b7bed" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../static-files/index&quot;&gt;Managing static files (e.g. images, JavaScript, CSS)&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53400c0e77a981f540b971804efbd57bfd4ec1b2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../testing/tools#testing-multi-db&quot;&gt;Multi-database support&lt;/a&gt; for information about testing with multiple databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2f6680784bebdcd3f636b0aa719b49a5c12fab" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../topics/auth/passwords#auth-password-storage&quot;&gt;How Django stores passwords&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed80c70d18ef025174709ec5873ffb7345d50e5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../topics/cache&quot;&gt;Django&amp;rsquo;s cache framework&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808bb6b5ec01ad31cc3d5ddfebd7a84f05819afa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../topics/class-based-views/intro#id1&quot;&gt;decorating class based views&lt;/a&gt; for example usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e3b303233c60834bd86587d8a053972f9a5fd10" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../topics/files&quot;&gt;Managing files&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5820372b904fca1765496cb6773f5c162ecc346e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../topics/files&quot;&gt;Managing files&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1bc29a69f4c35f966104a2b30397041a27b55e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../topics/http/sessions#configuring-sessions&quot;&gt;Configuring the session engine&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62996e601ed188d6f7ee1572122a38cf9cd5ab4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../topics/http/sessions#session-serialization&quot;&gt;Session serialization&lt;/a&gt; for details, including a warning regarding possible remote code execution when using &lt;a href=&quot;../topics/http/sessions#django.contrib.sessions.serializers.PickleSerializer&quot;&gt;&lt;code&gt;PickleSerializer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418c261ea1d5cafab1137a6a41f85c80c0a70ff3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../topics/http/urls#including-other-urlconfs&quot;&gt;Including other URLconfs&lt;/a&gt; and &lt;a href=&quot;../topics/http/urls#namespaces-and-include&quot;&gt;URL namespaces and included URLconfs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf3a8c00e4985ff2d62fde00bdc4033ed752f3a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../topics/http/urls#naming-url-patterns&quot;&gt;Naming URL patterns&lt;/a&gt; for why the &lt;code&gt;name&lt;/code&gt; argument is useful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e87f1c729414ea68ba83df79079fa1d57c63082" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../topics/i18n/translation#customizing-makemessages&quot;&gt;Customizing the makemessages command&lt;/a&gt; for instructions on how to customize the keywords that &lt;a href=&quot;#django-admin-makemessages&quot;&gt;&lt;code&gt;makemessages&lt;/code&gt;&lt;/a&gt; passes to &lt;code&gt;xgettext&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f94f96ba359b256e66e782baf4a92f397f8ef78" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../topics/i18n/translation#how-django-discovers-language-preference&quot;&gt;How Django discovers language preference&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="077b91e3186c4ad6580a7460ca0f528d48e4a991" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../topics/i18n/translation#lazy-translations&quot;&gt;lazy translations documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d27ea88d8149e5c216f13451df2e62c61db8b91" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../topics/install&quot;&gt;How to install Django&lt;/a&gt; for advice on how to remove older versions of Django and install a newer one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d44e890eacbf8cfa925e862ecc672e27c43675" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../topics/install#database-installation&quot;&gt;Get your database running&lt;/a&gt; for information on database installation with Django.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b7f001c089f16177f6b6565604a57b21a34e53" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../topics/signing&quot;&gt;cryptographic signing&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4752c1317c6c1e16fa74ecd62ae859766584c13" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../topics/testing/overview#the-test-database&quot;&gt;The test database&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ac6486f9fd2c19bf8e95414a513bf1c3c7f8cf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;conditional-expressions#conditional-aggregation&quot;&gt;Conditional aggregation&lt;/a&gt; and &lt;a href=&quot;../../topics/db/aggregation#filtering-on-annotations&quot;&gt;Filtering on annotations&lt;/a&gt; for example usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95fcfb5ff5aae6d31f4deb4097bb65844f05ec7c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;contrib/messages#message-storage-backends&quot;&gt;message storage backends&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6715348a3461174590877108e651846e69fb410" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;database-functions&quot;&gt;Database Functions&lt;/a&gt; for a list of built-in database functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f180fbebdf16c472b027d07ea7e0864db73fe462" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;deployment&quot;&gt;Deploying static files&lt;/a&gt; for proper strategies to serve static files in production environments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00708567ee222d2555fdf3d64265eb14bdeb04c7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http/middleware&quot;&gt;Middleware&lt;/a&gt; for more on middleware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfa783337de56e853a0ee087074ed15b13a9b98b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/django/deps/blob/master/final/0182-multiple-template-engines.rst&quot;&gt;DEP 182&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee823d0d63099c02413a6af2b9e7517441d5763b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://web.archive.org/web/20110514113830/http://diveintomark.org/archives/2004/05/28/howto-atom-id&quot;&gt;https://web.archive.org/web/20110514113830/http://diveintomark.org/archives/2004/05/28/howto-atom-id&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8545e29b0388ef5ac383fa4f98172088d143338d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.w3.org/Provider/Style/URI&quot;&gt;Cool URIs don&amp;rsquo;t change&lt;/a&gt;, by World Wide Web creator Tim Berners-Lee, for excellent arguments on why URLs should be clean and usable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3410cefc82611ec1a92fc92617abbdc2884a7f8b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;django.db.models.Model.save()&lt;/code&gt;&lt;/a&gt; for more about the old and new saving algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5402102fdd127d52790cafa53291d50e207f3aca" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;language#template-inheritance&quot;&gt;Template inheritance&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4dd4a92404b479345f8eb9d7316530f6f1028b6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; for further information on &lt;a href=&quot;#django.core.exceptions.ObjectDoesNotExist&quot;&gt;&lt;code&gt;ObjectDoesNotExist&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;models/instances#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;DoesNotExist&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a24ab3564badbc21d4de5102fb5f2d42f9021b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; for further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77249b90158a0ca903229f5d619a98236ad8c65" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;settings#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f2d5e1eaa57f9015ebcab93a824c1dbb11f65c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;allowed date format strings&lt;/code&gt;&lt;/a&gt;. See also &lt;a href=&quot;#std:setting-DATE_FORMAT&quot;&gt;&lt;code&gt;DATE_FORMAT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#std:setting-DATETIME_FORMAT&quot;&gt;&lt;code&gt;DATETIME_FORMAT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#std:setting-TIME_FORMAT&quot;&gt;&lt;code&gt;TIME_FORMAT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-MONTH_DAY_FORMAT&quot;&gt;&lt;code&gt;MONTH_DAY_FORMAT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ddae6a5d79b05637f8665e19ccfadcca2a3ea57" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;templates/builtins#std:templatefilter-date&quot;&gt;&lt;code&gt;allowed date format strings&lt;/code&gt;&lt;/a&gt;. See also &lt;a href=&quot;#std:setting-DATE_FORMAT&quot;&gt;&lt;code&gt;DATE_FORMAT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#std:setting-DATETIME_FORMAT&quot;&gt;&lt;code&gt;DATETIME_FORMAT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#std:setting-TIME_FORMAT&quot;&gt;&lt;code&gt;TIME_FORMAT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-YEAR_MONTH_FORMAT&quot;&gt;&lt;code&gt;YEAR_MONTH_FORMAT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edf7e4ea15d26a9a443761269fc941a5cd9683c" translate="yes" xml:space="preserve">
          <source>See Gunicorn&amp;rsquo;s &lt;a href=&quot;https://docs.gunicorn.org/en/latest/deploy.html&quot;&gt;deployment documentation&lt;/a&gt; for additional tips.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">参照</target>
        </trans-unit>
        <trans-unit id="2231d8eb7f21a1efdf01bf02fb2ab963e53f556c" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#configuring-logging&quot;&gt;Configuring logging&lt;/a&gt; to learn how you can complement or replace this default logging configuration defined in &lt;a href=&quot;https://github.com/django/django/blob/master/django/utils/log.py&quot;&gt;django/utils/log.py&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a3d5daf3bcf15aa23d1cd36f7058432a8a01c1" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#model-formsets-overriding-clean&quot;&gt;Overriding clean() on a ModelFormSet&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c1c7ab4444dda650794cfa05352db73f4d57082" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-DATA_UPLOAD_MAX_MEMORY_SIZE&quot;&gt;&lt;code&gt;DATA_UPLOAD_MAX_MEMORY_SIZE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5023f85a8782438f253ac0a67d77b14cbf4472fb" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-DATETIME_FORMAT&quot;&gt;&lt;code&gt;DATETIME_FORMAT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#std:setting-TIME_FORMAT&quot;&gt;&lt;code&gt;TIME_FORMAT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-SHORT_DATE_FORMAT&quot;&gt;&lt;code&gt;SHORT_DATE_FORMAT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b6bd1267f3c9dea551ff12fc6df303b222e0d7" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-DATETIME_INPUT_FORMATS&quot;&gt;&lt;code&gt;DATETIME_INPUT_FORMATS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-TIME_INPUT_FORMATS&quot;&gt;&lt;code&gt;TIME_INPUT_FORMATS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d2e022dd2ffa09e8a3ae5f28d74141c32687d4" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-DATE_FORMAT&quot;&gt;&lt;code&gt;DATE_FORMAT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-DATETIME_FORMAT&quot;&gt;&lt;code&gt;DATETIME_FORMAT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0792609d52f81c381dbb5099322587bcdc5a23" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-DATE_FORMAT&quot;&gt;&lt;code&gt;DATE_FORMAT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-SHORT_DATETIME_FORMAT&quot;&gt;&lt;code&gt;SHORT_DATETIME_FORMAT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc74568087927206429a2a142afb25703a872a5" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-DATE_FORMAT&quot;&gt;&lt;code&gt;DATE_FORMAT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-SHORT_DATE_FORMAT&quot;&gt;&lt;code&gt;SHORT_DATE_FORMAT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddedfc7f3c480371aeb64d5002b6bd540e59500a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-DATE_FORMAT&quot;&gt;&lt;code&gt;DATE_FORMAT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#std:setting-TIME_FORMAT&quot;&gt;&lt;code&gt;TIME_FORMAT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-SHORT_DATETIME_FORMAT&quot;&gt;&lt;code&gt;SHORT_DATETIME_FORMAT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9aa30f3c5b3cd6db2cf7b41a2b65bfa8378e649" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-DATE_INPUT_FORMATS&quot;&gt;&lt;code&gt;DATE_INPUT_FORMATS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-DATETIME_INPUT_FORMATS&quot;&gt;&lt;code&gt;DATETIME_INPUT_FORMATS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5bd3c944204e6f412ca5e53529a8d26b13248f0" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-DATE_INPUT_FORMATS&quot;&gt;&lt;code&gt;DATE_INPUT_FORMATS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-TIME_INPUT_FORMATS&quot;&gt;&lt;code&gt;TIME_INPUT_FORMATS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f217f7336e79991f75c08e731cd32675b73c1a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-DECIMAL_SEPARATOR&quot;&gt;&lt;code&gt;DECIMAL_SEPARATOR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#std:setting-NUMBER_GROUPING&quot;&gt;&lt;code&gt;NUMBER_GROUPING&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-THOUSAND_SEPARATOR&quot;&gt;&lt;code&gt;THOUSAND_SEPARATOR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931411f12ad021d89097654b40480b86127808ce" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-DECIMAL_SEPARATOR&quot;&gt;&lt;code&gt;DECIMAL_SEPARATOR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#std:setting-THOUSAND_SEPARATOR&quot;&gt;&lt;code&gt;THOUSAND_SEPARATOR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-USE_THOUSAND_SEPARATOR&quot;&gt;&lt;code&gt;USE_THOUSAND_SEPARATOR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71ee4ffc50027a5283b05f08560af5dcd0a0fd8" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-EMAIL_HOST_PASSWORD&quot;&gt;&lt;code&gt;EMAIL_HOST_PASSWORD&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9320035c68eb0c736c08fc9a05a976b8c0fc38c" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-EMAIL_HOST_USER&quot;&gt;&lt;code&gt;EMAIL_HOST_USER&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92fe0da7d2464b9ee3af78ebc3d98c5c97bebb77" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-EMAIL_PORT&quot;&gt;&lt;code&gt;EMAIL_PORT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633fef2cccbd732e95806bc65b62d91017d34af1" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-FILE_UPLOAD_MAX_MEMORY_SIZE&quot;&gt;&lt;code&gt;FILE_UPLOAD_MAX_MEMORY_SIZE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760a24180f63816879992806f26d74f19a6f533f" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-LANGUAGE_CODE&quot;&gt;&lt;code&gt;LANGUAGE_CODE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#std:setting-USE_I18N&quot;&gt;&lt;code&gt;USE_I18N&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d25c3725cc40fc9732854685b7687f748318df" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-LANGUAGE_CODE&quot;&gt;&lt;code&gt;LANGUAGE_CODE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160fa3e75e85fe668a6de801c70035365d88e0ab" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d3aff85f2375d30916d5455fb8fef46d0d3289" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-NUMBER_GROUPING&quot;&gt;&lt;code&gt;NUMBER_GROUPING&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#std:setting-DECIMAL_SEPARATOR&quot;&gt;&lt;code&gt;DECIMAL_SEPARATOR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-USE_THOUSAND_SEPARATOR&quot;&gt;&lt;code&gt;USE_THOUSAND_SEPARATOR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e588d3f519ac290dda5d2b6e50ffc05f93fb831e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-NUMBER_GROUPING&quot;&gt;&lt;code&gt;NUMBER_GROUPING&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#std:setting-THOUSAND_SEPARATOR&quot;&gt;&lt;code&gt;THOUSAND_SEPARATOR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-USE_THOUSAND_SEPARATOR&quot;&gt;&lt;code&gt;USE_THOUSAND_SEPARATOR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea59667cc6722b79ffe5891bc3857f886896989" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#std:setting-USE_I18N&quot;&gt;&lt;code&gt;USE_I18N&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5987d444674c3d102cba798abec6aa6e359192b" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../../../topics/forms/modelforms#saving-objects-in-the-formset&quot;&gt;Saving objects in the formset&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552c9bff3cd5fac02d058510918de3017d61cb47" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../geos#geos-exceptions-in-logfile&quot;&gt;My logs are filled with GEOS-related errors&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0996ee4044d4ed64782f2c6738ade170c058ab7" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;advanced#testing-reusable-applications&quot;&gt;Using the Django test runner to test reusable applications&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ad360f1878c0c292b6bf74fc08b25943b41ba7" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://trac.osgeo.org/postgis/wiki/UsersWikiPostgreSQLPostGIS&quot;&gt;this comparison matrix&lt;/a&gt; on the OSGeo Wiki for PostgreSQL/PostGIS/GEOS/GDAL possible combinations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da796d190c9d8ad8f91fd34604a62ba459216ed" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;../topics/signing&quot;&gt;Cryptographic signing&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b12d4866c65dbf94bd43efcecbfc8ef86ba42dd4" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;checks&quot;&gt;System check framework&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e4ee77faa23513a9265bdcf1cf3eff03087347" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;http/shortcuts#django.shortcuts.render&quot;&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/a&gt; shortcut which calls &lt;a href=&quot;#django.template.loader.render_to_string&quot;&gt;&lt;code&gt;render_to_string()&lt;/code&gt;&lt;/a&gt; and feeds the result into an &lt;a href=&quot;../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; suitable for returning from a view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a605bea659bf1929726d4e155f4fcf47a6badfa" translate="yes" xml:space="preserve">
          <source>See below</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02872e5db56a1d446ede911d60aedf0149ed8310" translate="yes" xml:space="preserve">
          <source>See below for details of the built-in default file storage system, and see &lt;a href=&quot;../howto/custom-file-storage&quot;&gt;Writing a custom storage system&lt;/a&gt; for information on writing your own file storage system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0409d2f1a58f1342a10b0320c2cf6f9b914d5b0" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#built-in-widgets&quot;&gt;Built-in widgets&lt;/a&gt; for more information about which widgets are available and which arguments they accept.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c9d30ffedb3eca786c873a601f0c0e5c503c02" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#cache-key-prefixing&quot;&gt;cache documentation&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57163cac6f18d1abee4aa9f71c13261d36eebc0b" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#cache-key-transformation&quot;&gt;cache documentation&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35093fbe6a642fea750f1fabbd80e239044b8775" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#cache-versioning&quot;&gt;cache documentation&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30991adcba53ef2fa0f50d1c7b3d4c05628d5c75" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#custom-serializers&quot;&gt;Write your own serializer&lt;/a&gt; section for more details on limitations of JSON serialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c226516cb3c2fa49adab00b57b26c8869f0031a1" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#the-save-method&quot;&gt;section on saving forms&lt;/a&gt; for more details on using &lt;code&gt;save(commit=False)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a26302118563be35fac8da61807395e7060315" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../../ref/unicode#unicode-files&quot;&gt;Files&lt;/a&gt; section of the Unicode reference guide for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390c39776e17728c5e0b985a269ee0f5f461afe9" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../ref/contrib/auth#authentication-backends-reference&quot;&gt;authentication backend reference&lt;/a&gt; for information on the authentication backends included with Django.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed257868659bbfd236d467fe2e670c31b691695c" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;full API documentation&lt;/code&gt;&lt;/a&gt; for full reference, the documentation that follows is more task oriented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61526c7bba743fafdbc923b613d5ea0a61fa7a80" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../ref/forms/fields&quot;&gt;form field documentation&lt;/a&gt; for more information on fields and their arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59ef56777c03411bc68eebc962a58ba17036b56" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../topics/db/sql&quot;&gt;Performing raw SQL queries&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777044aa23f2d8715dec8590d6175da1e128e043" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../topics/http/sessions&quot;&gt;sessions documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ee222d038c5de9b49540272f67e1192c2cce5d" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../topics/i18n/formatting&quot;&gt;format localization&lt;/a&gt; documentation for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82fa62a8b412d64f2f38195d18c098c112db3495" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../contenttypes&quot;&gt;contenttypes documentation&lt;/a&gt; for more specific information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f6c3f3238349a1bca7f59daedccc2f0b1c938e" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../ref/signals&quot;&gt;built-in signal documentation&lt;/a&gt; for a complete list, and a complete explanation of each signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ed6a6a41bec30ff49ef6f75168d62b0f1e6f3b" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../topics/cache#cache-key-prefixing&quot;&gt;cache documentation&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a3add7f68313a96dfb0f510ae6347bbf3b3e1c" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../topics/cache#cache-key-transformation&quot;&gt;cache documentation&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855880311f9baadcedf670823896ac3994ac171f" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../topics/cache#cache-versioning&quot;&gt;cache documentation&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93fef65cbbe7b57ec04c41e88644e687cf82c704" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../topics/templates&quot;&gt;template guide&lt;/a&gt; for more about templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc3e0557f53cf04839ca9571fde3e3b9b7a3fba" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../topics/templates#template-loading&quot;&gt;template loading documentation&lt;/a&gt; for more information about how Django finds its templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa4a09392152b567fc5644a10b818d9e38a4875" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../validators&quot;&gt;validators documentation&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19802d4e9c7d25fa2d41807ac06f2abfabf2501" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;api#django.forms.Form.has_changed&quot;&gt;&lt;code&gt;Form.has_changed()&lt;/code&gt;&lt;/a&gt; documentation for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab58a79f867864cee1ee57e84860d7852956b29" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;contenttypes&quot;&gt;contenttypes documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc8b3ac2ec96ee99fca231836195026d3d39060" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;examples/many_to_many&quot;&gt;Many-to-many relationship model example&lt;/a&gt; for a full example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487cf118eeb4a19ab34fd51685e8d808c8f27c75" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;examples/one_to_one&quot;&gt;One-to-one relationship model example&lt;/a&gt; for a full example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e20cc7b6fb7de7fc04bcead55d1671b196a822" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;flatpages&quot;&gt;flatpages documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="716efbbfb0333933ed9a88d99329e7a7e854ecbf" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;forms/validation&quot;&gt;form validation&lt;/a&gt; for more information on how validators are run in forms, and &lt;a href=&quot;models/instances#validating-objects&quot;&gt;Validating objects&lt;/a&gt; for how they&amp;rsquo;re run in models. Note that validators will not be run automatically when you save a model, but if you are using a &lt;a href=&quot;../topics/forms/modelforms#django.forms.ModelForm&quot;&gt;&lt;code&gt;ModelForm&lt;/code&gt;&lt;/a&gt;, it will run your validators on any fields that are included in your form. See the &lt;a href=&quot;../topics/forms/modelforms&quot;&gt;ModelForm documentation&lt;/a&gt; for information on how model validation interacts with forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4614bcab4d43a0d49a6ed9ba886fcab6cff2719d" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;gis/index&quot;&gt;GeoDjango&lt;/a&gt; documentation for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd216f595eccf500e958305b901204dd2bae13d" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;humanize&quot;&gt;humanize documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad3e59b2dfe3d5f488fbd9976e9f502a8ff4850" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;messages&quot;&gt;messages documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ba4fccf45c71158b11668ef9725078de42a280" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;postgres/index&quot;&gt;contrib.postgres documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fcbb32da73fe4772a09eecdfa9215f0c38ab0be" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;querysets#django.db.models.query.QuerySet.latest&quot;&gt;&lt;code&gt;latest()&lt;/code&gt;&lt;/a&gt; docs for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50ab307636f5164eebcb9ce45fdc21b381de808" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;redirects&quot;&gt;redirects documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539056d95ceec031341998ce003021fdfa2dd9b6" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;sitemaps&quot;&gt;sitemaps documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67fd12b6b09f257c9f66a954e01d1038d9ead97a" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;sites&quot;&gt;sites documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0ebd855835920538d3d7b3c2ee5238bbe72052" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;syndication&quot;&gt;syndication documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb245e2710b6bd5b68b1edf9b7fde8c37515367" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;contrib.postgres&lt;/code&gt;&lt;a href=&quot;../../ref/contrib/postgres/search&quot;&gt;Full text search&lt;/a&gt; document for complete details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757248c139a1e55d2b63cc5045f03431a5957029" translate="yes" xml:space="preserve">
          <source>See the chain of redirects (if any) and check the URL and status code at each step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ccc4f1ae2237c8e8e8adac31536aa325005ee6f" translate="yes" xml:space="preserve">
          <source>See the default template provided by Django (&lt;code&gt;admin/filter.html&lt;/code&gt;) for a concrete example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02083d628843ef9a05971364e6c8d1d9f4ad31da" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;#django.views.i18n.JavaScriptCatalog&quot;&gt;&lt;code&gt;JavaScriptCatalog&lt;/code&gt;&lt;/a&gt; to learn about possible values and use of the &lt;code&gt;domain&lt;/code&gt; and &lt;code&gt;packages&lt;/code&gt; attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030b6e6b4abf3f385c65ab55db89c48e54448f39" translate="yes" xml:space="preserve">
          <source>See the documentation for the &lt;a href=&quot;../../ref/settings#std:setting-STATICFILES_FINDERS&quot;&gt;&lt;code&gt;STATICFILES_FINDERS&lt;/code&gt;&lt;/a&gt; setting for details on how &lt;code&gt;staticfiles&lt;/code&gt; finds your files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6594b9d4e5dd0dc280014693726d9a51c88c7280" translate="yes" xml:space="preserve">
          <source>See the documentation on &lt;a href=&quot;../topics/db/multi-db#topics-db-multi-db-routing&quot;&gt;automatic database routing in multi database configurations&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996d3b3567d92099cdb26726a0b7989706225da0" translate="yes" xml:space="preserve">
          <source>See the documentation on &lt;a href=&quot;views#customizing-error-views&quot;&gt;customizing error views&lt;/a&gt; for the full details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0fd43f167815cb55bfcf2047d51a5741e32f141" translate="yes" xml:space="preserve">
          <source>See the documentation on the &lt;a href=&quot;../topics/signals&quot;&gt;signal dispatcher&lt;/a&gt; for information regarding how to register for and receive signals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0ea507d6676f4e788d3d4e86512ce8198e2591" translate="yes" xml:space="preserve">
          <source>See the official mod_wsgi documentation for &lt;a href=&quot;https://modwsgi.readthedocs.io/en/develop/user-guides/quick-configuration-guide.html#delegation-to-daemon-process&quot;&gt;details on setting up daemon mode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200c83326b174b316cc544ee57ea49780ca25e60" translate="yes" xml:space="preserve">
          <source>See the section on &lt;a href=&quot;#media-objects&quot;&gt;Media objects&lt;/a&gt; for more details on how to construct return values for dynamic &lt;code&gt;media&lt;/code&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9df96bae52269d1e148d3664b8cd996aaf7c842" translate="yes" xml:space="preserve">
          <source>See the uWSGI docs on &lt;a href=&quot;https://uwsgi-docs.readthedocs.io/en/latest/Management.html&quot;&gt;managing the uWSGI process&lt;/a&gt; for information on starting, stopping and reloading the uWSGI workers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77469b1ffa2d919e413e66e192bd31eaf477bc73" translate="yes" xml:space="preserve">
          <source>Seeing which settings you&amp;rsquo;ve changed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92c99d23cd8b67dda4002cef1da537aa6de17ee" translate="yes" xml:space="preserve">
          <source>Select widget with options &amp;lsquo;Unknown&amp;rsquo;, &amp;lsquo;Yes&amp;rsquo; and &amp;lsquo;No&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b1c1786a71101eeb61b279fffaf2bce58dae92" translate="yes" xml:space="preserve">
          <source>Selecting a database for &lt;code&gt;save()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a55d764676f1a431fa12002d0236fd0fb27035" translate="yes" xml:space="preserve">
          <source>Selecting a database to delete from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f96b93636ef6ff658718362234a202e9a2bd4b" translate="yes" xml:space="preserve">
          <source>Selecting an SRID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7feab4483833da9b12ef0ed65059b39eaf12215" translate="yes" xml:space="preserve">
          <source>Selecting the authentication backend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0190637546a2a67d58056d1c4634964ad9882a5" translate="yes" xml:space="preserve">
          <source>Selecting the current time zone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77474985476c87d25b1239577425c7f31d8046a" translate="yes" xml:space="preserve">
          <source>Selecting the fields to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058d8d97233ec925ea372abbb3a8a8c21a6eedf2" translate="yes" xml:space="preserve">
          <source>Selector and checkbox widgets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a269f6a09d672c9c0cae715d58c7c24be36e09a0" translate="yes" xml:space="preserve">
          <source>Sending alternative content types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c6dd89269e0908f7021ada7b8990f386afb49b" translate="yes" xml:space="preserve">
          <source>Sending email</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b087bb44af4ac3c2394ff238e5aab333c57ce055" translate="yes" xml:space="preserve">
          <source>Sending emails</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88b36d931b4fb7ae011d65a7375f7bcf16bd39a" translate="yes" xml:space="preserve">
          <source>Sending multiple emails</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af5eab8c1c4368fcdd626600364204a74e3ae44" translate="yes" xml:space="preserve">
          <source>Sending signals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519dcb91441bacf85e0f806385cb23ddb2918f73" translate="yes" xml:space="preserve">
          <source>Sends a message to the user using the &lt;a href=&quot;../messages#module-django.contrib.messages&quot;&gt;&lt;code&gt;django.contrib.messages&lt;/code&gt;&lt;/a&gt; backend. See the &lt;a href=&quot;actions#custom-admin-action&quot;&gt;custom ModelAdmin example&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744ceacf16dbb901627f880818284ddfc6a27a7b" translate="yes" xml:space="preserve">
          <source>Sends a test email (to confirm email sending through Django is working) to the recipient(s) specified. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5871045b1c8849ba3e0f9f31d03927c55287ecd7" translate="yes" xml:space="preserve">
          <source>Sends an email to the user. If &lt;code&gt;from_email&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, Django uses the &lt;a href=&quot;../settings#std:setting-DEFAULT_FROM_EMAIL&quot;&gt;&lt;code&gt;DEFAULT_FROM_EMAIL&lt;/code&gt;&lt;/a&gt;. Any &lt;code&gt;**kwargs&lt;/code&gt; are passed to the underlying &lt;a href=&quot;../../topics/email#django.core.mail.send_mail&quot;&gt;&lt;code&gt;send_mail()&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9a6f411c7d20fd224d33e0cfb71656365e123c" translate="yes" xml:space="preserve">
          <source>Sends broken link notification emails to &lt;a href=&quot;settings#std:setting-MANAGERS&quot;&gt;&lt;code&gt;MANAGERS&lt;/code&gt;&lt;/a&gt; (see &lt;a href=&quot;../howto/error-reporting&quot;&gt;Error reporting&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8219a3532fc67869262d842543eda5f4ada328" translate="yes" xml:space="preserve">
          <source>Sends emails to admin users. To customize this behavior, you can subclass the &lt;a href=&quot;#django.utils.log.AdminEmailHandler&quot;&gt;&lt;code&gt;AdminEmailHandler&lt;/code&gt;&lt;/a&gt; class and override this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="346ccdb05da2ca01f7bb0f21123021a7869abd70" translate="yes" xml:space="preserve">
          <source>Sent &lt;em&gt;after&lt;/em&gt; one or more objects are added to the relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4316da805bc31d9516e267a452ee63832e7610fe" translate="yes" xml:space="preserve">
          <source>Sent &lt;em&gt;after&lt;/em&gt; one or more objects are removed from the relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc4f764fb5c82c207ce31d02729d07a2231c2d8" translate="yes" xml:space="preserve">
          <source>Sent &lt;em&gt;after&lt;/em&gt; the relation is cleared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389b0658dfb6b6b68a85631c119e9246edb51d25" translate="yes" xml:space="preserve">
          <source>Sent &lt;em&gt;before&lt;/em&gt; one or more objects are added to the relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f3472b42b93f7f7d0797c2550f90b30fcb1215" translate="yes" xml:space="preserve">
          <source>Sent &lt;em&gt;before&lt;/em&gt; one or more objects are removed from the relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a4a1103bbc1c7c80b38b9ebae9fe41580aba56" translate="yes" xml:space="preserve">
          <source>Sent &lt;em&gt;before&lt;/em&gt; the relation is cleared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233378373f590046919c3bdc7286c2c35ec89e39" translate="yes" xml:space="preserve">
          <source>Sent at the beginning of a model&amp;rsquo;s &lt;a href=&quot;models/instances#django.db.models.Model.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method and a queryset&amp;rsquo;s &lt;a href=&quot;models/querysets#django.db.models.query.QuerySet.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8804525c95a2962d71f3d745d357389c77d5e23d" translate="yes" xml:space="preserve">
          <source>Sent at the end of the &lt;a href=&quot;django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; (even if no migrations are run) and &lt;a href=&quot;django-admin#django-admin-flush&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; commands. It&amp;rsquo;s not emitted for applications that lack a &lt;code&gt;models&lt;/code&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597d71f48aaba07767a518d880586100df7b7306" translate="yes" xml:space="preserve">
          <source>Sent before or after a model&amp;rsquo;s &lt;a href=&quot;../ref/models/instances#django.db.models.Model.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method or queryset&amp;rsquo;s &lt;a href=&quot;../ref/models/querysets#django.db.models.query.QuerySet.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd61d1b2da0f11ddeeabd92899398e158d94ffad" translate="yes" xml:space="preserve">
          <source>Sent before or after a model&amp;rsquo;s &lt;a href=&quot;../ref/models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74840fac8753df0bccf39fd176d395ef417b5bac" translate="yes" xml:space="preserve">
          <source>Sent by the &lt;a href=&quot;django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; command before it starts to install an application. It&amp;rsquo;s not emitted for applications that lack a &lt;code&gt;models&lt;/code&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7ed6326f3245922849562bbe98a53eb23bff97" translate="yes" xml:space="preserve">
          <source>Sent when Django begins processing an HTTP request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa3c58a57a8fdb1994ac4f09bd4de9eafe8159f" translate="yes" xml:space="preserve">
          <source>Sent when Django finishes delivering an HTTP response to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8723b170add7dc7ad163e9e16b862079a839b7e" translate="yes" xml:space="preserve">
          <source>Sent when Django starts or finishes an HTTP request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766716457992b644a32481db8d74e0ce7e1a74f8" translate="yes" xml:space="preserve">
          <source>Sent when a &lt;a href=&quot;../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; on a model is changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d1dd8473d189d98a15ff9773a78c376f0b0f9b" translate="yes" xml:space="preserve">
          <source>Sent when a &lt;a href=&quot;models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; is changed on a model instance. Strictly speaking, this is not a model signal since it is sent by the &lt;a href=&quot;models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;, but since it complements the &lt;a href=&quot;#django.db.models.signals.pre_save&quot;&gt;&lt;code&gt;pre_save&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#django.db.models.signals.post_save&quot;&gt;&lt;code&gt;post_save&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.signals.pre_delete&quot;&gt;&lt;code&gt;pre_delete&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#django.db.models.signals.post_delete&quot;&gt;&lt;code&gt;post_delete&lt;/code&gt;&lt;/a&gt; when it comes to tracking changes to models, it is included here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8476941272f5b363713224d68e8fb2b0af06912d" translate="yes" xml:space="preserve">
          <source>Sent when a user logs in successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3c6e8305a7ad334d24aff65c4ae8213a7444f3" translate="yes" xml:space="preserve">
          <source>Sent when the database wrapper makes the initial connection to the database. This is particularly useful if you&amp;rsquo;d like to send any post connection commands to the SQL backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acba2e9fbd25a0cfca5c9c6a95e87a55e79cf3f8" translate="yes" xml:space="preserve">
          <source>Sent when the logout method is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="646c7c4765b885c5a101beff7cf44cb22ae37f38" translate="yes" xml:space="preserve">
          <source>Sent when the test system renders a template. This signal is not emitted during normal operation of a Django server &amp;ndash; it is only available during testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0570e7b7407a75d0d0b3fe4a16e15c9b5fe93ceb" translate="yes" xml:space="preserve">
          <source>Sent when the user failed to login successfully</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee56007737e7ca94bf3aa9a7a875423bf41d79f" translate="yes" xml:space="preserve">
          <source>Sent whenever a model class has been &amp;ldquo;prepared&amp;rdquo; &amp;ndash; that is, once model has been defined and registered with Django&amp;rsquo;s model system. Django uses this signal internally; it&amp;rsquo;s not generally used in third-party applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a5be54e7d9c9e9eb6ccff26404c1be477f38724" translate="yes" xml:space="preserve">
          <source>Separate multiple extensions with commas and/or use &lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--extension&lt;/code&gt; multiple times:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5289cf1319eab76b4265a16f941e771d4c731020" translate="yes" xml:space="preserve">
          <source>Separate multiple extensions with commas or use &lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--extension&lt;/code&gt; multiple times:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835131d90570e59450731084db2acfced2573988" translate="yes" xml:space="preserve">
          <source>Sequence of URLs to any extra JavaScript to include.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed29a846ca30e058a8e04f9d515801da419579e" translate="yes" xml:space="preserve">
          <source>Sequences are indexes used by some database engines to track the next available number for automatically incremented fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89282363da677473acdbf45f0831bde9f4d3b6c4" translate="yes" xml:space="preserve">
          <source>Serialization</source>
          <target state="translated">Serialization</target>
        </trans-unit>
        <trans-unit id="aef68a9fe9f53349193d12498ea1d41ca60c22c6" translate="yes" xml:space="preserve">
          <source>Serialization formats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6f1203fd2db525ba74e884e61326c9b4e31924" translate="yes" xml:space="preserve">
          <source>Serialization of natural keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae9619c2c6314d0a1ff2483a7d543331514067f" translate="yes" xml:space="preserve">
          <source>Serialization support for &lt;code&gt;NoneType&lt;/code&gt; was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364bbe9937096a5164608c964c3881e61a47106f" translate="yes" xml:space="preserve">
          <source>Serializers cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25dbfc9a6aba42608bc2cdf8764988e93f2c077" translate="yes" xml:space="preserve">
          <source>Serializes to YAML (YAML Ain&amp;rsquo;t a Markup Language). This serializer is only available if &lt;a href=&quot;https://pyyaml.org/&quot;&gt;PyYAML&lt;/a&gt; is installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a17764403eccd84f15e0b9e43f1f17d226565a" translate="yes" xml:space="preserve">
          <source>Serializes to and from &lt;a href=&quot;https://json.org/&quot;&gt;JSON&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e674eb2d9c668e2c52c7bd3520142cb91d2d4b" translate="yes" xml:space="preserve">
          <source>Serializes to and from a simple XML dialect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdd346e167ff83f104e1b5f3572aa088dbb7d74" translate="yes" xml:space="preserve">
          <source>Serializing Django objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6edf7fc831bffe6e5a134a009514253d62d8de93" translate="yes" xml:space="preserve">
          <source>Serializing data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829aaa5f66852398a7585243d4dd1a335b677610" translate="yes" xml:space="preserve">
          <source>Serializing non-dictionary objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3420c121d1e0c0884e35ed40166cf537eef57d" translate="yes" xml:space="preserve">
          <source>Serializing references to &lt;code&gt;ContentType&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0d872cf2dc81e07b6cfb5f650cb65cd0e4e851" translate="yes" xml:space="preserve">
          <source>Serializing values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6415490f1db793bf63380d0f61c69f2ea314b096" translate="yes" xml:space="preserve">
          <source>Serious errors will prevent Django commands (such as &lt;a href=&quot;../ref/django-admin#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt;) from running at all. Minor problems are reported to the console. If you have inspected the cause of a warning and are happy to ignore it, you can hide specific warnings using the &lt;a href=&quot;../ref/settings#std:setting-SILENCED_SYSTEM_CHECKS&quot;&gt;&lt;code&gt;SILENCED_SYSTEM_CHECKS&lt;/code&gt;&lt;/a&gt; setting in your project settings file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9d5e0e30c931da65fb08b19bd7d283e259ac8f" translate="yes" xml:space="preserve">
          <source>Serve static/media files directly from Apache only to authenticated users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9651948a790c41a1a5e93158d411ad018f91b17" translate="yes" xml:space="preserve">
          <source>Server checks to see if the resource has changed, by computing the ETag the same way it does for a &lt;code&gt;GET&lt;/code&gt; request (using the same function). If the resource &lt;em&gt;has&lt;/em&gt; changed, it will return a 412 status code, meaning &amp;ldquo;precondition failed&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab104693b9a9b32962ce12152aa5ec0422a3ec2c" translate="yes" xml:space="preserve">
          <source>Server error emails are sent using the logging framework, so you can customize this behavior by &lt;a href=&quot;../topics/logging&quot;&gt;customizing your logging configuration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb5475caaa2a7dd5c79333dbc71c287fb56b475" translate="yes" xml:space="preserve">
          <source>Server errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b916577b372fc76cd55120bf4f7621bfc17f8051" translate="yes" xml:space="preserve">
          <source>Server responds with some content with an ETag of &lt;code&gt;&quot;abcd1234&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3266c38d7b7bf496e88d2ee685a504d84e15c102" translate="yes" xml:space="preserve">
          <source>Server-side caching will reduce CPU load. It&amp;rsquo;s easily implemented with the &lt;a href=&quot;../cache#django.views.decorators.cache.cache_page&quot;&gt;&lt;code&gt;cache_page()&lt;/code&gt;&lt;/a&gt; decorator. To trigger cache invalidation when your translations change, provide a version-dependent key prefix, as shown in the example below, or map the view at a version-dependent URL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae423b65a40b6b528830a916372c3493aed6218" translate="yes" xml:space="preserve">
          <source>Server-side cursors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59b4b48f5337b962fea4c2a0f39a1a75e348194" translate="yes" xml:space="preserve">
          <source>Server-side cursors are local to a connection and remain open at the end of a transaction when &lt;a href=&quot;settings#std:setting-DATABASE-AUTOCOMMIT&quot;&gt;&lt;code&gt;AUTOCOMMIT&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;. A subsequent transaction may attempt to fetch more results from a server-side cursor. In transaction pooling mode, there&amp;rsquo;s no guarantee that subsequent transactions will use the same connection. If a different connection is used, an error is raised when the transaction references the server-side cursor, because server-side cursors are only accessible in the connection in which they were created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6490e279c6f24ddd8cb3862034c90322d13fbb" translate="yes" xml:space="preserve">
          <source>Serving files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66b589f735465daadbec1ec42fe9f0d399f7a37" translate="yes" xml:space="preserve">
          <source>Serving files in development</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0389ca3ef977c6aea2c254749ca246f225222a52" translate="yes" xml:space="preserve">
          <source>Serving files uploaded by a user during development</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71dbd8780600a9d42c6fb13b6e0525f3206ddf75" translate="yes" xml:space="preserve">
          <source>Serving static files during development</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e46d72546aba862aca81f96093343b3189fe1a8" translate="yes" xml:space="preserve">
          <source>Serving static files from a cloud service or CDN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2cca4692fb7af4e75748053c42adb7d1b03cfd2" translate="yes" xml:space="preserve">
          <source>Serving static files from a dedicated server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b78f16ccd6913c0429b9a8a01023ba4bdcb9cac" translate="yes" xml:space="preserve">
          <source>Serving static files in production</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c979d558bf8c54386eaeb8374192670f36175739" translate="yes" xml:space="preserve">
          <source>Serving static files with the development server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e61d958e136d732dda3f9a4c8288d6d8deae26c" translate="yes" xml:space="preserve">
          <source>Serving the admin files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf41d68f4d917f254a27eb08b6e6ad23546befe" translate="yes" xml:space="preserve">
          <source>Serving the files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4253383fbc0933e596baa89e4a8cc5fbd25415" translate="yes" xml:space="preserve">
          <source>Serving the site and your static files from the same server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c17b2e1421d4d0c0f012081763a6898a2ca79b" translate="yes" xml:space="preserve">
          <source>Session IDs in URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109c1a1e069c2b68589e594700969388b1d31166" translate="yes" xml:space="preserve">
          <source>Session data is stored in a database table named &lt;code&gt;django_session&lt;/code&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc502377a95029d494dc7e40df3845eb00733456" translate="yes" xml:space="preserve">
          <source>Session dictionary keys that begin with an underscore are reserved for internal use by Django.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df89ae2f4270dd87890452d106fe4c259f81cd55" translate="yes" xml:space="preserve">
          <source>Session invalidation on password change</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17438671e47e97538902a98e69324158a40ca352" translate="yes" xml:space="preserve">
          <source>Session key under which the active language for the current session is stored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74d2830c7521697978ee53cb842ae36595715eb" translate="yes" xml:space="preserve">
          <source>Session middleware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4978969cd85f9b4f66abecff3a94a8037949260" translate="yes" xml:space="preserve">
          <source>Session object guidelines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48bbb0249f6ed7c4810bef5fbd64de2c32d76fa" translate="yes" xml:space="preserve">
          <source>Session security</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f01ab02092b085d5273ef2c106d8f1107334a0" translate="yes" xml:space="preserve">
          <source>Session serialization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11e37a9253b34ff1c7224447e143fabca1be9fd" translate="yes" xml:space="preserve">
          <source>Sessions</source>
          <target state="translated">Sessions</target>
        </trans-unit>
        <trans-unit id="19927072ffe77c26acbafcd324fc8854c4a741fc" translate="yes" xml:space="preserve">
          <source>Sessions are implemented via a piece of &lt;a href=&quot;../../ref/middleware&quot;&gt;middleware&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3742733f995b518a53971f5dbf5ba51753ab1de3" translate="yes" xml:space="preserve">
          <source>Set &lt;a href=&quot;../../ref/settings#std:setting-SESSION_ENGINE&quot;&gt;&lt;code&gt;SESSION_ENGINE&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;&quot;django.contrib.sessions.backends.cache&quot;&lt;/code&gt; for a simple caching session store. Session data will be stored directly in your cache. However, session data may not be persistent: cached data can be evicted if the cache fills up or if the cache server is restarted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f095425abb619c71d91f19559bb32d2a639ba0c" translate="yes" xml:space="preserve">
          <source>Set &lt;a href=&quot;../ref/settings#std:setting-CACHES-BACKEND&quot;&gt;&lt;code&gt;BACKEND&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;django.core.cache.backends.db.DatabaseCache&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24468bc006af6843da54a36d7bacd938135cd19" translate="yes" xml:space="preserve">
          <source>Set &lt;a href=&quot;../ref/settings#std:setting-CACHES-BACKEND&quot;&gt;&lt;code&gt;BACKEND&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;django.core.cache.backends.memcached.MemcachedCache&lt;/code&gt; or &lt;code&gt;django.core.cache.backends.memcached.PyLibMCCache&lt;/code&gt; (depending on your chosen memcached binding)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a829a2b0aa4b2d82c159a73b14973cb69d093df" translate="yes" xml:space="preserve">
          <source>Set &lt;a href=&quot;../ref/settings#std:setting-CACHES-LOCATION&quot;&gt;&lt;code&gt;LOCATION&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;ip:port&lt;/code&gt; values, where &lt;code&gt;ip&lt;/code&gt; is the IP address of the Memcached daemon and &lt;code&gt;port&lt;/code&gt; is the port on which Memcached is running, or to a &lt;code&gt;unix:path&lt;/code&gt; value, where &lt;code&gt;path&lt;/code&gt; is the path to a Memcached Unix socket file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d880d9ea6113a9d8c0a75208c52eae657c7720" translate="yes" xml:space="preserve">
          <source>Set &lt;a href=&quot;../ref/settings#std:setting-CACHES-LOCATION&quot;&gt;&lt;code&gt;LOCATION&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;tablename&lt;/code&gt;, the name of the database table. This name can be whatever you want, as long as it&amp;rsquo;s a valid table name that&amp;rsquo;s not already being used in your database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26e40c77f104b2b65621fff668f66fa7775da8e" translate="yes" xml:space="preserve">
          <source>Set &lt;a href=&quot;../ref/settings#std:setting-SECURE_SSL_REDIRECT&quot;&gt;&lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;True&lt;/code&gt;, so that requests over HTTP are redirected to HTTPS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380ea2169259f01006679515da1562f04816d394" translate="yes" xml:space="preserve">
          <source>Set &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-BACKEND&quot;&gt;&lt;code&gt;BACKEND&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;'django.template.backends.django.DjangoTemplates'&lt;/code&gt; to configure a Django template engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040db349467c2eef1b853a5e3326ebabc0531615" translate="yes" xml:space="preserve">
          <source>Set &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-BACKEND&quot;&gt;&lt;code&gt;BACKEND&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;'django.template.backends.jinja2.Jinja2'&lt;/code&gt; to configure a &lt;a href=&quot;http://jinja.pocoo.org/&quot;&gt;Jinja2&lt;/a&gt; engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b6ad8ecb57727fc125d0af2cecc0ac379556ce" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;date_hierarchy&lt;/code&gt; to the name of a &lt;code&gt;DateField&lt;/code&gt; or &lt;code&gt;DateTimeField&lt;/code&gt; in your model, and the change list page will include a date-based drilldown navigation by that field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06cb6b6ef4892a4d41281cb5b2bb2ae85e76b2fa" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;fieldsets&lt;/code&gt; to control the layout of admin &amp;ldquo;add&amp;rdquo; and &amp;ldquo;change&amp;rdquo; pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7278e8a595f134881fd461a819b89658842ccafb" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;html&lt;/code&gt; to &lt;code&gt;True&lt;/code&gt; to handle &lt;code&gt;text&lt;/code&gt; as HTML. The comparison with the response content will be based on HTML semantics instead of character-by-character equality. Whitespace is ignored in most cases, attribute ordering is not significant. See &lt;a href=&quot;#django.test.SimpleTestCase.assertHTMLEqual&quot;&gt;&lt;code&gt;assertHTMLEqual()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b379d2108e7786dbdb154cabdcf89ca6a0d507a" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;list_display&lt;/code&gt; to control which fields are displayed on the change list page of the admin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af909b1c16beda4aad27c5bf38e1a207bb1b5a0" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;list_editable&lt;/code&gt; to a list of field names on the model which will allow editing on the change list page. That is, fields listed in &lt;code&gt;list_editable&lt;/code&gt; will be displayed as form widgets on the change list page, allowing users to edit and save multiple rows at once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea896a6d6047e0a9c4c555edc127257ef1d1075" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;list_filter&lt;/code&gt; to activate filters in the right sidebar of the change list page of the admin, as illustrated in the following screenshot:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9f1c0b8bc332ee12ed6b29498d3028a04a4186" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;list_max_show_all&lt;/code&gt; to control how many items can appear on a &amp;ldquo;Show all&amp;rdquo; admin change list page. The admin will display a &amp;ldquo;Show all&amp;rdquo; link on the change list only if the total result count is less than or equal to this setting. By default, this is set to &lt;code&gt;200&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f707d161f43c19bfd6726166bdc8a6c7ba78bd28" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;list_per_page&lt;/code&gt; to control how many items appear on each paginated admin change list page. By default, this is set to &lt;code&gt;100&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20ab17de33a0d670ae3b154861a2f9d9bd423c7" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;list_select_related&lt;/code&gt; to tell Django to use &lt;a href=&quot;../../models/querysets#django.db.models.query.QuerySet.select_related&quot;&gt;&lt;code&gt;select_related()&lt;/code&gt;&lt;/a&gt; in retrieving the list of objects on the admin change list page. This can save you a bunch of database queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06aa2dee65261d134f7b0ef72de6825200d33d7e" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;ordering&lt;/code&gt; to specify how lists of objects should be ordered in the Django admin views. This should be a list or tuple in the same format as a model&amp;rsquo;s &lt;a href=&quot;../../models/options#django.db.models.Options.ordering&quot;&gt;&lt;code&gt;ordering&lt;/code&gt;&lt;/a&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e813a0b69721da420a6727464bb645826085e11" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;ordering_widget&lt;/code&gt; to specify the widget class to be used with &lt;code&gt;can_order&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd1bea09b59f0b11cdc7d9f72e929b1e8abeb00" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;prepopulated_fields&lt;/code&gt; to a dictionary mapping field names to the fields it should prepopulate from:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3aa5f02d6901ef982634c17f95513d28868472" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;save_as&lt;/code&gt; to enable a &amp;ldquo;save as new&amp;rdquo; feature on admin change forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d3e263de6a8fc7612e0d61024e8623ac7cbfcd" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;save_on_top&lt;/code&gt; to add save buttons across the top of your admin change forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a50cdd0808efc943014c51d2f5b48a3995225047" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;search_fields&lt;/code&gt; to enable a search box on the admin change list page. This should be set to a list of field names that will be searched whenever somebody submits a search query in that text box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84aa3fc27e73c7da96d70cdd9217d5f6772d418" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;show_full_result_count&lt;/code&gt; to control whether the full count of objects should be displayed on a filtered admin page (e.g. &lt;code&gt;99 results (103 total)&lt;/code&gt;). If this option is set to &lt;code&gt;False&lt;/code&gt;, a text like &lt;code&gt;99 results (Show all)&lt;/code&gt; is displayed instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deec6992ad9daa946838fe5c497521352e4e894b" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;view_on_site&lt;/code&gt; to control whether or not to display the &amp;ldquo;View on site&amp;rdquo; link. This link should bring you to a URL where you can display the saved object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06615b8753fc928c5d1b1215f461cf88a01e11e8" translate="yes" xml:space="preserve">
          <source>Set a tuple with two elements &amp;ndash; the name of the header to look for and the required value. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0944406caa3ad5266f15eeed1af86c2840336480" translate="yes" xml:space="preserve">
          <source>Set it to &lt;code&gt;None&lt;/code&gt; to get no links at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98773d611eab60f57dbc3e723edf66b5bcf694d5" translate="yes" xml:space="preserve">
          <source>Set it to a list or tuple of fields (in the same format as &lt;code&gt;list_display&lt;/code&gt;) whose columns you want converted to links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f2cf16a8288eeaec366520607c8150d77bce06" translate="yes" xml:space="preserve">
          <source>Set one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bbb6bff1b5f381e5f39aa7209d9426ba4afb932" translate="yes" xml:space="preserve">
          <source>Set the &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; null; this is only possible if &lt;a href=&quot;#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44ede9faf483f4668aef3d013a3b86c61db8d8c" translate="yes" xml:space="preserve">
          <source>Set the &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; to its default value; a default for the &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; must be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc40d6c0870035a981117e1e7b9aee56e6798171" translate="yes" xml:space="preserve">
          <source>Set the &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; to the value passed to &lt;a href=&quot;#django.db.models.SET&quot;&gt;&lt;code&gt;SET()&lt;/code&gt;&lt;/a&gt;, or if a callable is passed in, the result of calling it. In most cases, passing a callable will be necessary to avoid executing queries at the time your models.py is imported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645c1ac4dcef35320347bd90c8f1378f6fca3075" translate="yes" xml:space="preserve">
          <source>Set the &lt;a href=&quot;../../../settings#std:setting-DATABASE-ENGINE&quot;&gt;&lt;code&gt;ENGINE&lt;/code&gt;&lt;/a&gt; setting to one of the &lt;a href=&quot;../db-api#spatial-backends&quot;&gt;spatial backends&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850fd00464fa375928fc381dc4a33d75443eb0a2" translate="yes" xml:space="preserve">
          <source>Set the &lt;a href=&quot;../../ref/settings#std:setting-DATABASE-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt; option to the appropriate time zone for this database in the &lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6dccbc691fb89ec727be584c78836c061241391" translate="yes" xml:space="preserve">
          <source>Set the &lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt; setting to the directory from which you&amp;rsquo;d like to serve these files, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f56044fc12e8f0855715ab23e1cef6532fdacc99" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;autosummarize&lt;/code&gt; parameter to &lt;code&gt;True&lt;/code&gt; to enable &lt;a href=&quot;https://www.postgresql.org/docs/current/brin-intro.html#BRIN-OPERATION&quot;&gt;automatic summarization&lt;/a&gt; to be performed by autovacuum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033e2daa621349553771391def7dd1d3ca73c529" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;buffering&lt;/code&gt; parameter to &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; to manually enable or disable &lt;a href=&quot;https://www.postgresql.org/docs/current/gist-implementation.html#GIST-BUFFERING-BUILD&quot;&gt;buffering build&lt;/a&gt; of the index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147916ec4514eefa524509cf1523fb6b1e126d78" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;exclude&lt;/code&gt; attribute of the &lt;code&gt;ModelForm&lt;/code&gt;&amp;rsquo;s inner &lt;code&gt;Meta&lt;/code&gt; class to a list of fields to be excluded from the form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7511cb04283927d5bbe691d88220a773e8ecdd60" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;fastupdate&lt;/code&gt; parameter to &lt;code&gt;False&lt;/code&gt; to disable the &lt;a href=&quot;https://www.postgresql.org/docs/current/gin-implementation.html#GIN-FAST-UPDATE&quot;&gt;GIN Fast Update Technique&lt;/a&gt; that&amp;rsquo;s enabled by default in PostgreSQL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547846d512776eb67fb37b07807ab284628ce376" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;fields&lt;/code&gt; attribute to the special value &lt;code&gt;'__all__'&lt;/code&gt; to indicate that all fields in the model should be used. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0dd8fcd9c0cc77bda9b0511886360d08838fd4" translate="yes" xml:space="preserve">
          <source>Set the place back again, using assignment in the reverse direction:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82237b4979c7ec398406d61fe745b1ca9857ffca" translate="yes" xml:space="preserve">
          <source>Set the place using assignment notation. Because place is the primary key on Restaurant, the save will create a new restaurant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ef295641211957538c8abd1e105b65547d83f0" translate="yes" xml:space="preserve">
          <source>Set this property with a boolean to indicate whether the SRID of the geometry should be included with the WKB representation. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4ab052cafd8b4e54052f234e9a4639bd037251" translate="yes" xml:space="preserve">
          <source>Set this to &lt;code&gt;False&lt;/code&gt; if you want to &lt;a href=&quot;../topics/db/transactions#deactivate-transaction-management&quot;&gt;disable Django&amp;rsquo;s transaction management&lt;/a&gt; and implement your own.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d20805b3371d374b1d1478a1fc18a1f1a4f429" translate="yes" xml:space="preserve">
          <source>Set this to &lt;code&gt;True&lt;/code&gt; if you want the bounding box to be included in the returned GeoJSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9d14950c3f66b88df8e708c560d9014ab8f641" translate="yes" xml:space="preserve">
          <source>Set this to &lt;code&gt;True&lt;/code&gt; if you want the coordinate reference system to be included in the returned GeoJSON. Ignored on MySQL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00faeb2ec93e1347278c6112fda9e4a33621c96c" translate="yes" xml:space="preserve">
          <source>Set this to &lt;code&gt;True&lt;/code&gt; if you want to disable the use of server-side cursors with &lt;a href=&quot;models/querysets#django.db.models.query.QuerySet.iterator&quot;&gt;&lt;code&gt;QuerySet.iterator()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;databases#transaction-pooling-server-side-cursors&quot;&gt;Transaction pooling and server-side cursors&lt;/a&gt; describes the use case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b78e2cdc7c539f8fd74c497680823fd0a55096a" translate="yes" xml:space="preserve">
          <source>Set this to &lt;code&gt;True&lt;/code&gt; to avoid transmitting the CSRF cookie over HTTP accidentally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0169afca414fc1eb9e04ffc7f9db2cd6c89b0f4" translate="yes" xml:space="preserve">
          <source>Set this to &lt;code&gt;True&lt;/code&gt; to avoid transmitting the session cookie over HTTP accidentally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5ef06f264c4cefe4b52e76833f95f0b837b4f9" translate="yes" xml:space="preserve">
          <source>Set this to &lt;code&gt;True&lt;/code&gt; to wrap each view in a transaction on this database. See &lt;a href=&quot;../topics/db/transactions#tying-transactions-to-http-requests&quot;&gt;Tying transactions to HTTP requests&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b2e85a862f78276c5eb92a6fc8bc29c890d9224" translate="yes" xml:space="preserve">
          <source>Set this to return the geometry for each &lt;em&gt;item&lt;/em&gt; in the feed. This can be a &lt;code&gt;GEOSGeometry&lt;/code&gt; instance, or a tuple that represents a point coordinate or bounding box. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02aafd5db7460b60e8ed1d162dd1f4d1cec313ea" translate="yes" xml:space="preserve">
          <source>Set this to the name of a &lt;a href=&quot;#django.db.models.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt; to require that this field be unique for the value of the date field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77dfd470aee6ca5e2366f1213480f2897bf27bf" translate="yes" xml:space="preserve">
          <source>Set two:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556c425da17ab01f651160da7bf82728231bd7b0" translate="yes" xml:space="preserve">
          <source>Set up &lt;a href=&quot;#id1&quot;&gt;template inheritance&lt;/a&gt; (see below), a powerful way of cutting down on &amp;ldquo;boilerplate&amp;rdquo; in templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1afaa5ba0e096bb9e50f1962733863c9b09641f" translate="yes" xml:space="preserve">
          <source>Set up a database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97fd13194fd3cb22c1cbd4ed2eac0a25c0b52e7c" translate="yes" xml:space="preserve">
          <source>Set up the hstore extension in PostgreSQL before the first &lt;code&gt;CreateModel&lt;/code&gt; or &lt;code&gt;AddField&lt;/code&gt; operation that involves &lt;a href=&quot;fields#django.contrib.postgres.fields.HStoreField&quot;&gt;&lt;code&gt;HStoreField&lt;/code&gt;&lt;/a&gt; by adding a migration with the &lt;a href=&quot;#django.contrib.postgres.operations.HStoreExtension&quot;&gt;&lt;code&gt;HStoreExtension&lt;/code&gt;&lt;/a&gt; operation. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ded3d55f3eb7df61ff40480cf0a0bce477f5009" translate="yes" xml:space="preserve">
          <source>Set up your projects admin template directories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49bcb26884abafb26569f6f7f16bd2ccec66a27" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;response.content&lt;/code&gt; to the result obtained by &lt;a href=&quot;#django.template.response.SimpleTemplateResponse.rendered_content&quot;&gt;&lt;code&gt;SimpleTemplateResponse.rendered_content&lt;/code&gt;&lt;/a&gt;, runs all post-rendering callbacks, and returns the resulting response object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408f40a5fe43edc715efa57f014cfbad947dd030" translate="yes" xml:space="preserve">
          <source>Sets a cookie. The parameters are the same as in the &lt;a href=&quot;https://docs.python.org/3/library/http.cookies.html#http.cookies.Morsel&quot;&gt;&lt;code&gt;Morsel&lt;/code&gt;&lt;/a&gt; cookie object in the Python standard library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c515046f01771f4526378b421d8ba5b4e169a1a" translate="yes" xml:space="preserve">
          <source>Sets a header unless it has already been set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdca6cc895cc30c955b0b950fec5e8bc6259cf4e" translate="yes" xml:space="preserve">
          <source>Sets a limit to the available choices for this field when this field is rendered using a &lt;code&gt;ModelForm&lt;/code&gt; or the admin (by default, all objects in the queryset are available to choose). Either a dictionary, a &lt;a href=&quot;querysets#django.db.models.Q&quot;&gt;&lt;code&gt;Q&lt;/code&gt;&lt;/a&gt; object, or a callable returning a dictionary or &lt;a href=&quot;querysets#django.db.models.Q&quot;&gt;&lt;code&gt;Q&lt;/code&gt;&lt;/a&gt; object can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632eb1f0531c26082b7a79d32dce48d5b6201736" translate="yes" xml:space="preserve">
          <source>Sets a test cookie to determine whether the user&amp;rsquo;s browser supports cookies. Due to the way cookies work, you won&amp;rsquo;t be able to test this until the user&amp;rsquo;s next page request. See &lt;a href=&quot;#setting-test-cookies&quot;&gt;Setting test cookies&lt;/a&gt; below for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05dfa7fb6cebcdcf2beabb0f70373bd1aa5b659" translate="yes" xml:space="preserve">
          <source>Sets of field names that, taken together, are indexed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52667eddca77089fbc28d755e7e76e0f1f77ed69" translate="yes" xml:space="preserve">
          <source>Sets of field names that, taken together, must be unique:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f4a00cf7b87c9b1063afa4aa8e1c3526dc91b6" translate="yes" xml:space="preserve">
          <source>Sets or unsets the current time zone in the contained block. When the current time zone is unset, the default time zone applies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ac40eb546b24145147ae03b91ddebbb99aa2dd" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;../topics/i18n/timezones#default-current-time-zone&quot;&gt;current time zone&lt;/a&gt;. The &lt;code&gt;timezone&lt;/code&gt; argument must be an instance of a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclass or a time zone name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5103c5d452e2f6cb5c1933a10c95972e5d3cc950" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; setting to &lt;code&gt;True&lt;/code&gt; prior to running tests. This may help troubleshoot test failures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4d668d536d53ad93385f03b5371b98dec15212" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;Cache-Control&lt;/code&gt; header to give a max age for the page &amp;ndash; again, from the &lt;a href=&quot;../ref/settings#std:setting-CACHE_MIDDLEWARE_SECONDS&quot;&gt;&lt;code&gt;CACHE_MIDDLEWARE_SECONDS&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae603b6fc6618cf488705a1cf96cb00d25aa2b57" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;Content-Length&lt;/code&gt; header for non-streaming responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a2f13363ee41cab9583db5e0dc1cca7f30503c" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;Expires&lt;/code&gt; header to the current date/time plus the defined &lt;a href=&quot;../ref/settings#std:setting-CACHE_MIDDLEWARE_SECONDS&quot;&gt;&lt;code&gt;CACHE_MIDDLEWARE_SECONDS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bdf74ce6ca2ff8945590cd20a859da89bea6a09" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;domain&lt;/code&gt; attributes to the value of &lt;a href=&quot;../request-response#django.http.HttpRequest.get_host&quot;&gt;&lt;code&gt;get_host()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5819809ad73328e684b62f25daab602449fa6adc" translate="yes" xml:space="preserve">
          <source>Sets the SRID &lt;a href=&quot;#fnogcsrid&quot; id=&quot;id4&quot;&gt;[2]&lt;/a&gt; (Spatial Reference System Identity) of the geometry field to the given value. Defaults to 4326 (also known as &lt;a href=&quot;https://en.wikipedia.org/wiki/WGS84&quot;&gt;WGS84&lt;/a&gt;, units are in degrees of longitude and latitude).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b9274a804d2ecaa3195367f00bea7a434591d9" translate="yes" xml:space="preserve">
          <source>Sets the database to use when importing spatial data. Default is &lt;code&gt;'default'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf2eddb5b4b6ffe46fd95be0ac3e4d7ba5c02c3" translate="yes" xml:space="preserve">
          <source>Sets the expiration time for the session. You can pass a number of different values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f24dd079f20b79ef103229f1172344d814ef67" translate="yes" xml:space="preserve">
          <source>Sets the given header name to the given value. Both &lt;code&gt;header&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; should be strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b777c3f2c50ed5c7082c4ab62fc65aaf0472676" translate="yes" xml:space="preserve">
          <source>Sets the given key to &lt;code&gt;[value]&lt;/code&gt; (a list whose single element is &lt;code&gt;value&lt;/code&gt;). Note that this, as other dictionary functions that have side effects, can only be called on a mutable &lt;code&gt;QueryDict&lt;/code&gt; (such as one that was created via &lt;a href=&quot;#django.http.QueryDict.copy&quot;&gt;&lt;code&gt;QueryDict.copy()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5053eaffe55e888ce89c031af21019fd33faef0" translate="yes" xml:space="preserve">
          <source>Sets the given key to &lt;code&gt;list_&lt;/code&gt; (unlike &lt;a href=&quot;#django.http.QueryDict.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce195a23bd246795f71fd859aa4ec89b77eda722" translate="yes" xml:space="preserve">
          <source>Sets the minimum message level that will be recorded by the messages framework. See &lt;a href=&quot;contrib/messages#message-level&quot;&gt;message levels&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a038be4a7757c10e533982c76c04d85a95d5e0" translate="yes" xml:space="preserve">
          <source>Sets the name of the squashed migration. When omitted, the name is based on the first and last migration, with &lt;code&gt;_squashed_&lt;/code&gt; in between.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a97697aace2f54293e7b5eda11c35e1cb9a00cc3" translate="yes" xml:space="preserve">
          <source>Sets the user&amp;rsquo;s password to the given raw string, taking care of the password hashing. Doesn&amp;rsquo;t save the &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser&quot;&gt;&lt;code&gt;AbstractBaseUser&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8459b281517c48c462475bb38a8d73ff61f3e723" translate="yes" xml:space="preserve">
          <source>Sets the user&amp;rsquo;s password to the given raw string, taking care of the password hashing. Doesn&amp;rsquo;t save the &lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d36ff09f5d81122453523551e0e8c1881c667c" translate="yes" xml:space="preserve">
          <source>Sets up the test environment by calling &lt;a href=&quot;#django.test.utils.setup_test_environment&quot;&gt;&lt;code&gt;setup_test_environment()&lt;/code&gt;&lt;/a&gt; and setting &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;self.debug_mode&lt;/code&gt; (defaults to &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b0dc8f8ae1e494dded947c788c0e119c198d3b" translate="yes" xml:space="preserve">
          <source>Setting &lt;a href=&quot;../../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG = False&lt;/code&gt;&lt;/a&gt; disables several features that are only useful in development. In addition, you can tune the following settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72e1b603af5cb3db44f699b632c99146b328773" translate="yes" xml:space="preserve">
          <source>Setting &lt;a href=&quot;../ref/settings#std:setting-LOGGING_CONFIG&quot;&gt;&lt;code&gt;LOGGING_CONFIG&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;None&lt;/code&gt; only means that the automatic configuration process is disabled, not logging itself. If you disable the configuration process, Django will still make logging calls, falling back to whatever default logging behavior is defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed8f7cc38fbdaf331556f24d21c45a87ad324e8" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;X-Frame-Options&lt;/code&gt; for all responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132cfd6ffe75ccd5777a9a7d34096f2d17428788" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;X-Frame-Options&lt;/code&gt; per view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ed55d48126fe1990ba39c9f35de2f232ddcc3d" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;available_apps&lt;/code&gt; to a list of applications instructs Django to behave as if only the models from these applications were available. The behavior of &lt;code&gt;TransactionTestCase&lt;/code&gt; changes as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce871192d2e417ae6155e5820ab972d31ff0f39" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;fail_silently=True&lt;/code&gt; only hides the &lt;code&gt;MessageFailure&lt;/code&gt; that would otherwise occur when the messages framework disabled and one attempts to use one of the &lt;code&gt;add_message&lt;/code&gt; family of methods. It does not hide failures that may occur for other reasons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c661eb59e52123e31e3dd1e9702fcb6598bd93" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;prefix_default_language&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt; removes the prefix from the default language (&lt;a href=&quot;../../ref/settings#std:setting-LANGUAGE_CODE&quot;&gt;&lt;code&gt;LANGUAGE_CODE&lt;/code&gt;&lt;/a&gt;). This can be useful when adding translations to existing site so that the current URLs won&amp;rsquo;t change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0056c667576e354a5e663c95d62e7ef9927b4dc0" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;require_ready&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt; allows looking up models &lt;a href=&quot;#app-loading-process&quot;&gt;while the app registry is being populated&lt;/a&gt;, specifically during the second phase where it imports models. Then &lt;code&gt;get_model()&lt;/code&gt; has the same effect as importing the model. The main use case is to configure model classes with settings, such as &lt;a href=&quot;settings#std:setting-AUTH_USER_MODEL&quot;&gt;&lt;code&gt;AUTH_USER_MODEL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0cd66f01495f08ccc8d10eee1e9d67c79c5a014" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;reset_sequences = True&lt;/code&gt; on a &lt;code&gt;TransactionTestCase&lt;/code&gt; will make sure sequences are always reset before the test run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50918ec9532aeb7cd1ec5da9ce08113b71e778fa" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;sql_mode&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d60b0890a431be3750d67b0f7fe70b5f3af16d7e" translate="yes" xml:space="preserve">
          <source>Setting Up</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b965bcdec8a51f70c2f569e92d9a8f7ea73b181" translate="yes" xml:space="preserve">
          <source>Setting a variable in the context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e5d8afa8668590f57e7c54ac4454a2ade5fb02" translate="yes" xml:space="preserve">
          <source>Setting arguments for widgets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe0f8c19188f8ce734dd718293260407a61b792f" translate="yes" xml:space="preserve">
          <source>Setting header fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945bafd68150779ab45819d6a28e6ddb2de1192f" translate="yes" xml:space="preserve">
          <source>Setting it to &lt;code&gt;False&lt;/code&gt; does not mean you can reference a swappable model even if it is swapped out - &lt;code&gt;False&lt;/code&gt; means that the migrations made with this ForeignKey will always reference the exact model you specify (so it will fail hard if the user tries to run with a User model you don&amp;rsquo;t support, for example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28cacd8745a95fc18ae94161435322089b4163e2" translate="yes" xml:space="preserve">
          <source>Setting it to &lt;code&gt;False&lt;/code&gt; prevents such a rollback. Before doing that, make sure you&amp;rsquo;ve rolled back the transaction to a known-good savepoint within the current atomic block! Otherwise you&amp;rsquo;re breaking atomicity and data corruption may occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075bb4f28dadb7ff8ce20dda53f6efb8f30916a5" translate="yes" xml:space="preserve">
          <source>Setting names must be all uppercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16631f78efae0a8d74d4a2455f07a2e3a307f5c6" translate="yes" xml:space="preserve">
          <source>Setting permissions for actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac1ac2c549326e91452b0a30530bce65a21c002" translate="yes" xml:space="preserve">
          <source>Setting system library path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59535a2469317a361527e1e129868541fc3a4b8b" translate="yes" xml:space="preserve">
          <source>Setting test cookies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac5905f3c39f20c6f85ca274a70117415678188" translate="yes" xml:space="preserve">
          <source>Setting the language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d46f3f9862beae150f7ad035e6575bc712481a" translate="yes" xml:space="preserve">
          <source>Setting the rollback flag to &lt;code&gt;True&lt;/code&gt; forces a rollback when exiting the innermost atomic block. This may be useful to trigger a rollback without raising an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ecbb5620ff188d342ecdd844e0404486de01a1" translate="yes" xml:space="preserve">
          <source>Setting the token on the AJAX request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b9fd67626d43b20cb5a622d42c5adf6141a940" translate="yes" xml:space="preserve">
          <source>Setting this incorrectly can irreversibly (for some time) break your site. Read the &lt;a href=&quot;middleware#http-strict-transport-security&quot;&gt;HTTP Strict Transport Security&lt;/a&gt; documentation first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af04376bd1a36ea4fac76faf5ab993ad605c69a8" translate="yes" xml:space="preserve">
          <source>Setting this incorrectly can irreversibly (for the value of &lt;a href=&quot;#std:setting-SECURE_HSTS_SECONDS&quot;&gt;&lt;code&gt;SECURE_HSTS_SECONDS&lt;/code&gt;&lt;/a&gt;) break your site. Read the &lt;a href=&quot;middleware#http-strict-transport-security&quot;&gt;HTTP Strict Transport Security&lt;/a&gt; documentation first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b7f49bbe9dcb41865c13c13332d926ce70da09" translate="yes" xml:space="preserve">
          <source>Setting this to False will disable coordinate transformations. In other words, geometries will be inserted into the database unmodified from their original state in the data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148cc51328a7c1446f08657b5d9544259408be88" translate="yes" xml:space="preserve">
          <source>Setting this to the name, or a tuple of names, from the given model will create models unique only to the given name(s). Geometries from each feature will be added into the collection associated with the unique model. Forces the transaction mode to be &lt;code&gt;'autocommit'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb7f0e00827512ade25b17b60478ebe5400744db" translate="yes" xml:space="preserve">
          <source>Setting up logging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70141fb124d4755c0506b6893cb2bad35ead79df" translate="yes" xml:space="preserve">
          <source>Setting up the cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f73bb54d928922c3838bb789ee9fb8a5b1eb37" translate="yes" xml:space="preserve">
          <source>Settings</source>
          <target state="translated">Settings</target>
        </trans-unit>
        <trans-unit id="1ef6431fd00945acd25e4e17cf80b8b03b331864" translate="yes" xml:space="preserve">
          <source>Settings for &lt;a href=&quot;../topics/auth/index#module-django.contrib.auth&quot;&gt;&lt;code&gt;django.contrib.auth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab8f58b8730735a29f68a2c21df9be9e9a29e58" translate="yes" xml:space="preserve">
          <source>Settings for &lt;a href=&quot;../topics/http/sessions#module-django.contrib.sessions&quot;&gt;&lt;code&gt;django.contrib.sessions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc769e0a9c1072115af5f7676a8bd4ed0375aa6" translate="yes" xml:space="preserve">
          <source>Settings for &lt;a href=&quot;contrib/messages#module-django.contrib.messages&quot;&gt;&lt;code&gt;django.contrib.messages&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb73d4327a78b5f90d8b1f65e2a61bff79df67c3" translate="yes" xml:space="preserve">
          <source>Settings for &lt;a href=&quot;contrib/sites#module-django.contrib.sites&quot;&gt;&lt;code&gt;django.contrib.sites&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578f88ca202f7c652ff375f57c0322bb9446bbe8" translate="yes" xml:space="preserve">
          <source>Settings for &lt;a href=&quot;contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt;&lt;code&gt;django.contrib.staticfiles&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed7bddfc1f699043942baf70a668acdd2fa1c1b" translate="yes" xml:space="preserve">
          <source>Settings that don&amp;rsquo;t appear in the defaults are followed by &lt;code&gt;&quot;###&quot;&lt;/code&gt;. For example, the default settings don&amp;rsquo;t define &lt;a href=&quot;settings#std:setting-ROOT_URLCONF&quot;&gt;&lt;code&gt;ROOT_URLCONF&lt;/code&gt;&lt;/a&gt;, so &lt;a href=&quot;settings#std:setting-ROOT_URLCONF&quot;&gt;&lt;code&gt;ROOT_URLCONF&lt;/code&gt;&lt;/a&gt; is followed by &lt;code&gt;&quot;###&quot;&lt;/code&gt; in the output of &lt;code&gt;diffsettings&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">Setup</target>
        </trans-unit>
        <trans-unit id="9284281561d520bb05e937f00e6da0fc53291db0" translate="yes" xml:space="preserve">
          <source>Several contrib apps include models, and some apps depend on others. Since cross-database relationships are impossible, this creates some restrictions on how you can split these models across databases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9344a6ba50482b25203bdb67214a869e99f0a167" translate="yes" xml:space="preserve">
          <source>Several fields that use the mixin are provided:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e844c425e4a9e83822ecbff02e9457714cca273" translate="yes" xml:space="preserve">
          <source>Several of Django&amp;rsquo;s built-in views are documented in &lt;a href=&quot;../topics/http/views&quot;&gt;Writing views&lt;/a&gt; as well as elsewhere in the documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae897ad3c8b4b666503f4ed61afc4672e9f08f9" translate="yes" xml:space="preserve">
          <source>Several of Django&amp;rsquo;s bundled applications make use of the latter technique. For example, &lt;a href=&quot;auth#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;the permissions system&lt;/code&gt;&lt;/a&gt; in Django&amp;rsquo;s authentication framework uses a &lt;a href=&quot;auth#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt; model with a foreign key to &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt;; this lets &lt;a href=&quot;auth#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt; represent concepts like &amp;ldquo;can add blog entry&amp;rdquo; or &amp;ldquo;can delete news story&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ecfeb649f2d8e778a6c97c427db59adfa0b8bb9" translate="yes" xml:space="preserve">
          <source>Several other &lt;a href=&quot;https://mysqlclient.readthedocs.io/user_guide.html#functions-and-attributes&quot;&gt;MySQLdb connection options&lt;/a&gt; may be useful, such as &lt;code&gt;ssl&lt;/code&gt;, &lt;code&gt;init_command&lt;/code&gt;, and &lt;code&gt;sql_mode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32021c108dc863de8f4807de237ca3983104f57" translate="yes" xml:space="preserve">
          <source>Several third-party Django tools and packages provide the ability to &amp;ldquo;minify&amp;rdquo; HTML, CSS, and JavaScript. They remove unnecessary whitespace, newlines, and comments, and shorten variable names, and thus reduce the size of the documents that your site publishes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f638a2e71c40d289aafac60d9b3cfbda0652523f" translate="yes" xml:space="preserve">
          <source>Short name for the application, e.g. &lt;code&gt;'admin'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c93523ff95f6469ea7fab8ffa47ed0ddc9bc0c" translate="yes" xml:space="preserve">
          <source>Shortcuts</source>
          <target state="translated">Shortcuts</target>
        </trans-unit>
        <trans-unit id="8f1975142f502df3e8d09b55af4cb0a330b81e73" translate="yes" xml:space="preserve">
          <source>Shortcuts for only computing one value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cca6eb63a90d0ef9133a6ca8e703b4fb9e07052" translate="yes" xml:space="preserve">
          <source>Should be near the bottom as it&amp;rsquo;s a last-resort type of middleware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61b6acb4a934e58af44ca35a08d08e5dd4ce1ff" translate="yes" xml:space="preserve">
          <source>Should return &lt;code&gt;True&lt;/code&gt; if adding an inline object is permitted, &lt;code&gt;False&lt;/code&gt; otherwise. &lt;code&gt;obj&lt;/code&gt; is the parent object being edited or &lt;code&gt;None&lt;/code&gt; when adding a new parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4161c2b557a65c3863b16566bb470eb3ee69270a" translate="yes" xml:space="preserve">
          <source>Should return &lt;code&gt;True&lt;/code&gt; if adding an object is permitted, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7867ab59f158050fb9450af380050acc73703f" translate="yes" xml:space="preserve">
          <source>Should return &lt;code&gt;True&lt;/code&gt; if deleting &lt;code&gt;obj&lt;/code&gt; is permitted, &lt;code&gt;False&lt;/code&gt; otherwise. If &lt;code&gt;obj&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, should return &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; to indicate whether deleting objects of this type is permitted in general (e.g., &lt;code&gt;False&lt;/code&gt; will be interpreted as meaning that the current user is not permitted to delete any object of this type).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39d6973541351798d6dd56aa7140384c0a5b4263" translate="yes" xml:space="preserve">
          <source>Should return &lt;code&gt;True&lt;/code&gt; if deleting an inline object is permitted, &lt;code&gt;False&lt;/code&gt; otherwise. &lt;code&gt;obj&lt;/code&gt; is the parent object being edited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86247f2a73736ffe3ef50a6443204e9742e03c0c" translate="yes" xml:space="preserve">
          <source>Should return &lt;code&gt;True&lt;/code&gt; if displaying the module on the admin index page and accessing the module&amp;rsquo;s index page is permitted, &lt;code&gt;False&lt;/code&gt; otherwise. Uses &lt;a href=&quot;../auth#django.contrib.auth.models.User.has_module_perms&quot;&gt;&lt;code&gt;User.has_module_perms()&lt;/code&gt;&lt;/a&gt; by default. Overriding it does not restrict access to the view, add, change, or delete views, &lt;a href=&quot;#django.contrib.admin.ModelAdmin.has_view_permission&quot;&gt;&lt;code&gt;has_view_permission()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.contrib.admin.ModelAdmin.has_add_permission&quot;&gt;&lt;code&gt;has_add_permission()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.contrib.admin.ModelAdmin.has_change_permission&quot;&gt;&lt;code&gt;has_change_permission()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#django.contrib.admin.ModelAdmin.has_delete_permission&quot;&gt;&lt;code&gt;has_delete_permission()&lt;/code&gt;&lt;/a&gt; should be used for that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30dea5b0ad1fc4b04533c7581b96ecf171094fb5" translate="yes" xml:space="preserve">
          <source>Should return &lt;code&gt;True&lt;/code&gt; if editing &lt;code&gt;obj&lt;/code&gt; is permitted, &lt;code&gt;False&lt;/code&gt; otherwise. If &lt;code&gt;obj&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, should return &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; to indicate whether editing of objects of this type is permitted in general (e.g., &lt;code&gt;False&lt;/code&gt; will be interpreted as meaning that the current user is not permitted to edit any object of this type).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4a81ea29e04f0e25ec548b0a554497342f5d50" translate="yes" xml:space="preserve">
          <source>Should return &lt;code&gt;True&lt;/code&gt; if editing an inline object is permitted, &lt;code&gt;False&lt;/code&gt; otherwise. &lt;code&gt;obj&lt;/code&gt; is the parent object being edited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab07be1e4a2f63b3d2ade3c3148c1caefa546bf" translate="yes" xml:space="preserve">
          <source>Should return &lt;code&gt;True&lt;/code&gt; if viewing &lt;code&gt;obj&lt;/code&gt; is permitted, &lt;code&gt;False&lt;/code&gt; otherwise. If obj is &lt;code&gt;None&lt;/code&gt;, should return &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; to indicate whether viewing of objects of this type is permitted in general (e.g., &lt;code&gt;False&lt;/code&gt; will be interpreted as meaning that the current user is not permitted to view any object of this type).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa999095c9fda3e450c8cbc18a32ed1b7f128f04" translate="yes" xml:space="preserve">
          <source>Should return the actual name of name of the file saved (usually the &lt;code&gt;name&lt;/code&gt; passed in, but if the storage needs to change the file name return the new name instead).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f070afee584e5151c2354a21e0889d6ff2160373" translate="yes" xml:space="preserve">
          <source>Shows all migrations in a project. You can choose from one of two formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c814ac75a94960d602836460f27363550ae680c" translate="yes" xml:space="preserve">
          <source>Shows the migration operations that will be performed for the given &lt;code&gt;migrate&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c59cc942c1446e47f0fc9957da215e262e5780" translate="yes" xml:space="preserve">
          <source>Shows the migration plan Django will follow to apply migrations. Like &lt;code&gt;--list&lt;/code&gt;, applied migrations are marked by an &lt;code&gt;[X]&lt;/code&gt;. For a &lt;code&gt;--verbosity&lt;/code&gt; of 2 and above, all dependencies of a migration will also be shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ecb559f1ca7e99d214210982e365a773ac40a6f" translate="yes" xml:space="preserve">
          <source>Shows what migrations would be made without actually writing any migrations files to disk. Using this option along with &lt;code&gt;--verbosity 3&lt;/code&gt; will also show the complete migrations files that would be written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a52875b93c94a58094975a230f4221b31a518b" translate="yes" xml:space="preserve">
          <source>Sign &lt;code&gt;value&lt;/code&gt; and append current timestamp to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2346a18ea3002ff04eca3a130c7f40e65c56f0c9" translate="yes" xml:space="preserve">
          <source>Signals</source>
          <target state="translated">Signals</target>
        </trans-unit>
        <trans-unit id="2179f2424b312cba799925391bd4015c33e1c8a2" translate="yes" xml:space="preserve">
          <source>Signals are implicit function calls which make debugging harder. If the sender and receiver of your custom signal are both within your project, you&amp;rsquo;re better off using an explicit function call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2bb138d6a55597db887035bb3f8637617ba2c3" translate="yes" xml:space="preserve">
          <source>Signals only sent when &lt;a href=&quot;../topics/testing/overview#running-tests&quot;&gt;running tests&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ca6cebaeaf523355bf260955031f58782457c6" translate="yes" xml:space="preserve">
          <source>Signals sent by &lt;a href=&quot;django-admin&quot;&gt;django-admin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb189a181447a9630bb12cea3a86802f018eb0f" translate="yes" xml:space="preserve">
          <source>Signals sent by the core framework when processing a request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ccd48fbffe6c12334095e4eac6e84f519cc03a" translate="yes" xml:space="preserve">
          <source>Signals sent by the database wrapper when a database connection is initiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c43d93addd3410bda3aefd8f9311efccc69e2e9" translate="yes" xml:space="preserve">
          <source>Signals that this template extends a parent template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8debf91f8821ef2f21b92447ce37ac3cdc5fb83" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.db.models.fields.related.RelatedManager.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;e.save()&lt;/code&gt; is called in the example above to perform the update. Using &lt;code&gt;remove()&lt;/code&gt; with a many-to-many relationship, however, will delete the relationships using &lt;a href=&quot;querysets#django.db.models.query.QuerySet.delete&quot;&gt;&lt;code&gt;QuerySet.delete()&lt;/code&gt;&lt;/a&gt; which means no model &lt;code&gt;save()&lt;/code&gt; methods are called; listen to the &lt;a href=&quot;../signals#django.db.models.signals.m2m_changed&quot;&gt;&lt;code&gt;m2m_changed&lt;/code&gt;&lt;/a&gt; signal if you wish to execute custom code when a relationship is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1cbf3c161c5c409bf7e9181b4519e9321e704f" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.db.models.functions.LPad&quot;&gt;&lt;code&gt;LPad&lt;/code&gt;&lt;/a&gt;, but pads on the right side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f2d7cb87f39f717cf02e7843db92d0976389fd2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.db.models.functions.Trim&quot;&gt;&lt;code&gt;Trim&lt;/code&gt;&lt;/a&gt;, but removes only leading spaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74cc060a0095d828a58c4ef3bb02b411b26a1f7f" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.db.models.functions.Trim&quot;&gt;&lt;code&gt;Trim&lt;/code&gt;&lt;/a&gt;, but removes only trailing spaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3fa8a9e5b4fc529d30ed1b2ec46931f0eca728" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.forms.DateInput.format&quot;&gt;&lt;code&gt;DateInput.format&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86687c835c38a6983c5066e56cabaa07e7ea44ab" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.forms.Select&quot;&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/a&gt;, but allows multiple selection: &lt;code&gt;&amp;lt;select multiple&amp;gt;...&amp;lt;/select&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e9cf94c8a839ec893eae0ef20a63cf8b7f914d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.forms.Select&quot;&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/a&gt;, but rendered as a list of radio buttons within &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; tags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83da217ea4ec6e2adc48b3c174609e5bc260d551" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.forms.SelectMultiple&quot;&gt;&lt;code&gt;SelectMultiple&lt;/code&gt;&lt;/a&gt;, but rendered as a list of checkboxes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be6852b789da8d905da912f5699d62ec9bec4f0" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.forms.SplitDateTimeWidget&quot;&gt;&lt;code&gt;SplitDateTimeWidget&lt;/code&gt;&lt;/a&gt;, but uses &lt;a href=&quot;#django.forms.HiddenInput&quot;&gt;&lt;code&gt;HiddenInput&lt;/code&gt;&lt;/a&gt; for both date and time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12c7f51ba93d84b2fbfff1bd2dcd7a8dcefc91a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.forms.TimeInput.format&quot;&gt;&lt;code&gt;TimeInput.format&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e62068127fd9d1a565ef9278774b259ed68a379" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#django.forms.Widget.attrs&quot;&gt;&lt;code&gt;Widget.attrs&lt;/code&gt;&lt;/a&gt;. A dictionary containing HTML attributes to be set on the rendered &lt;a href=&quot;#django.forms.DateInput&quot;&gt;&lt;code&gt;DateInput&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.forms.TimeInput&quot;&gt;&lt;code&gt;TimeInput&lt;/code&gt;&lt;/a&gt; widgets, respectively. If these attributes aren&amp;rsquo;t set, &lt;a href=&quot;#django.forms.Widget.attrs&quot;&gt;&lt;code&gt;Widget.attrs&lt;/code&gt;&lt;/a&gt; is used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57babeca1dfc7f2b59a3076547e7ae730ba3f841" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#std:templatefilter-truncatechars&quot;&gt;&lt;code&gt;truncatechars&lt;/code&gt;&lt;/a&gt;, except that it is aware of HTML tags. Any tags that are opened in the string and not closed before the truncation point are closed immediately after the truncation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d60844f62a755c9e5814d485768ecd7d6f7071c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#std:templatefilter-truncatewords&quot;&gt;&lt;code&gt;truncatewords&lt;/code&gt;&lt;/a&gt;, except that it is aware of HTML tags. Any tags that are opened in the string and not closed before the truncation point, are closed immediately after the truncation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43734047a0f7462617df980c5b9d963c1c2bac7" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;can_order&lt;/code&gt; this adds a new field to each form named &lt;code&gt;DELETE&lt;/code&gt; and is a &lt;code&gt;forms.BooleanField&lt;/code&gt;. When data comes through marking any of the delete fields you can access them with &lt;code&gt;deleted_forms&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c0b6c216844d97be2d95b352619e1d1253a278" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;escape()&lt;/code&gt;, except that it doesn&amp;rsquo;t operate on pre-escaped strings, so it will not double escape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675cbd53aa99e7bee2d89a46281338c2599a64e5" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;smart_bytes&lt;/code&gt;, except that lazy instances are resolved to bytestrings, rather than kept as lazy objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104947765387dcd948510330bf9e19346561b89d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;smart_str()&lt;/code&gt;, except that lazy instances are resolved to strings, rather than kept as lazy objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d81697914896bfa780cd919e1bbbcfbf5563b7" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;timesince&lt;/code&gt;, except that it measures the time from now until the given date or datetime. For example, if today is 1 June 2006 and &lt;code&gt;conference_date&lt;/code&gt; is a date instance holding 29 June 2006, then &lt;code&gt;{{ conference_date|timeuntil }}&lt;/code&gt; will return &amp;ldquo;4 weeks&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3ebafc9aa514a1a16623ae6016856389dcbe23" translate="yes" xml:space="preserve">
          <source>Similar to the &amp;ldquo;references to historical functions&amp;rdquo; considerations described in the previous section, removing custom model fields from your project or third-party app will cause a problem if they are referenced in old migrations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab700196b96532cbd0627273bb50c3753e69207" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;#std:templatetag-get_static_prefix&quot;&gt;&lt;code&gt;get_static_prefix&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;get_media_prefix&lt;/code&gt; populates a template variable with the media prefix &lt;a href=&quot;../settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt;, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e23fd6396b222e17a5d7007a450f9ef70e78a6" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;a href=&quot;../ref/csrf#csrf-limitations&quot;&gt;CSRF limitations&lt;/a&gt; requiring a site to be deployed such that untrusted users don&amp;rsquo;t have access to any subdomains, &lt;a href=&quot;http/sessions#module-django.contrib.sessions&quot;&gt;&lt;code&gt;django.contrib.sessions&lt;/code&gt;&lt;/a&gt; also has limitations. See &lt;a href=&quot;http/sessions#topics-session-security&quot;&gt;the session topic guide section on security&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe72a5c5994b330128a039d3b6c0b3fe40f9753f" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;a href=&quot;#django.db.models.fields.related.RelatedManager.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;remove()&lt;/code&gt; also accepts the field the relation points to as an argument. The above example can be rewritten as &lt;code&gt;b.entry_set.remove(234)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9553ed920ea1657b2512210340abf2c38973a382" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;a href=&quot;#django.db.models.fields.related.RelatedManager.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;set()&lt;/code&gt; also accepts the field the relation points to as an argument. The above example can be rewritten as &lt;code&gt;e.related_set.set([obj1.pk, obj2.pk, obj3.pk])&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58082351132ca5fbd7c5b85008ef996f6c70f3bf" translate="yes" xml:space="preserve">
          <source>Similarly, &lt;a href=&quot;../models/querysets&quot;&gt;QuerySets&lt;/a&gt; provide a &lt;code&gt;count()&lt;/code&gt; method to count the number of objects they contain. Therefore, you can obtain a count of all comments related to the current task with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab42ac8e63f0adecab040af094dd1273f9a98206" translate="yes" xml:space="preserve">
          <source>Similarly, Django executes special-case behavior in the case of runtime errors in view code. If a view results in an exception, Django will, by default, call the view &lt;code&gt;django.views.defaults.server_error&lt;/code&gt;, which either produces a &amp;ldquo;Server Error&amp;rdquo; message or loads and renders the template &lt;code&gt;500.html&lt;/code&gt; if you created it in your root template directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7309a92ee9e1847fd539b0dc080e4438970672c6" translate="yes" xml:space="preserve">
          <source>Similarly, Django provides &lt;a href=&quot;utils#django.utils.encoding.uri_to_iri&quot;&gt;&lt;code&gt;django.utils.encoding.uri_to_iri()&lt;/code&gt;&lt;/a&gt; which implements the conversion from URI to IRI as per &lt;a href=&quot;https://tools.ietf.org/html/rfc3987.html#section-3.2&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3987#section-3.2&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0370e41c8b95e4467e55ee8c314289169a65fe99" translate="yes" xml:space="preserve">
          <source>Similarly, Django will complain if more than one item matches the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; query. In this case, it will raise &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.MultipleObjectsReturned&quot;&gt;&lt;code&gt;MultipleObjectsReturned&lt;/code&gt;&lt;/a&gt;, which again is an attribute of the model class itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863cdc071865bede461e047fe7e658383bf41fc8" translate="yes" xml:space="preserve">
          <source>Similarly, a couple of other bits of Django, such as the &lt;a href=&quot;../contrib/syndication&quot;&gt;syndication feed framework&lt;/a&gt;, use &lt;code&gt;get_absolute_url()&lt;/code&gt; when it is defined. If it makes sense for your model&amp;rsquo;s instances to each have a unique URL, you should define &lt;code&gt;get_absolute_url()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2462d3488df835366d0db331efbf07cddf80050a" translate="yes" xml:space="preserve">
          <source>Similarly, data that can&amp;rsquo;t be encoded in JSON, such as non-UTF8 bytes like &lt;code&gt;'\xd9'&lt;/code&gt; (which raises &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#UnicodeDecodeError&quot;&gt;&lt;code&gt;UnicodeDecodeError&lt;/code&gt;&lt;/a&gt;), can&amp;rsquo;t be stored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31549e7b497ca81d9266efabccd6ec6cb1627e42" translate="yes" xml:space="preserve">
          <source>Similarly, fields defined declaratively do not draw their attributes like &lt;code&gt;max_length&lt;/code&gt; or &lt;code&gt;required&lt;/code&gt; from the corresponding model. If you want to maintain the behavior specified in the model, you must set the relevant arguments explicitly when declaring the form field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df71fc13d5b3c7c28086a01df560e69297478d0" translate="yes" xml:space="preserve">
          <source>Similarly, if the formset has the ability to order (&lt;code&gt;can_order=True&lt;/code&gt;), it is possible to render it with &lt;code&gt;{{ form.ORDER }}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c1cf066eef5d91c3032554bf1a989ef032d3e0" translate="yes" xml:space="preserve">
          <source>Similarly, if you use a &lt;a href=&quot;#django.db.models.query.QuerySet.values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; query to restrict the columns selected, the columns used in any &lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt; (or default model ordering) will still be involved and may affect uniqueness of the results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b6163ccb8f756325cb9dd4a0f11f0685539186" translate="yes" xml:space="preserve">
          <source>Similarly, on Red Hat and CentOS systems:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d7d9012aa3409f16056b841d47286ba62926f1" translate="yes" xml:space="preserve">
          <source>Similarly, the &lt;a href=&quot;../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; generic view uses a default template called &lt;code&gt;&amp;lt;app name&amp;gt;/&amp;lt;model
name&amp;gt;_list.html&lt;/code&gt;; we use &lt;code&gt;template_name&lt;/code&gt; to tell &lt;a href=&quot;../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; to use our existing &lt;code&gt;&quot;polls/index.html&quot;&lt;/code&gt; template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e7d0bbf6a707473314126f03169984f6a24c7e" translate="yes" xml:space="preserve">
          <source>Similarly, the &lt;code&gt;expires&lt;/code&gt; part of a session cookie is updated each time the session cookie is sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffac2418d6640b3199498de3b14a18222fe7de6" translate="yes" xml:space="preserve">
          <source>Similarly, the current effective level can be retrieved with &lt;code&gt;get_level&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e6c77873921e5941f690411854f1258bcf763d" translate="yes" xml:space="preserve">
          <source>Similarly, what if the name contained a &lt;code&gt;'&amp;lt;'&lt;/code&gt; symbol, like this?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5855f571b87eeca52e71d5d3cdfe1be2b4b7077" translate="yes" xml:space="preserve">
          <source>Similarly, when querying a reverse foreign key, &lt;code&gt;None&lt;/code&gt; appears for entries not having any author:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29662e616beed5aff4427d7439c1d3cc2f18696d" translate="yes" xml:space="preserve">
          <source>Similarly, you can associate a model to the &lt;a href=&quot;#django.contrib.sites.models.Site&quot;&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/a&gt; model in a many-to-one relationship, using &lt;a href=&quot;../models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4740361937f4c5fe6f7b908f9d221f12c914f70" translate="yes" xml:space="preserve">
          <source>Similarly, you can pass extra options to &lt;a href=&quot;../../ref/urls#django.urls.include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; and each line in the included URLconf will be passed the extra options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fcdd1bd18644200f83cfc979025b7ab1f51e135" translate="yes" xml:space="preserve">
          <source>Similarly, you can specify the &lt;code&gt;labels&lt;/code&gt;, &lt;code&gt;help_texts&lt;/code&gt; and &lt;code&gt;error_messages&lt;/code&gt; attributes of the inner &lt;code&gt;Meta&lt;/code&gt; class if you want to further customize a field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760873c6c6dd35108a40595027a1a2bd00967ac7" translate="yes" xml:space="preserve">
          <source>Similarly, you may also use a &lt;a href=&quot;geos&quot;&gt;GEOS geometry object&lt;/a&gt;. Here, you can combine the &lt;code&gt;intersects&lt;/code&gt; spatial lookup with the &lt;code&gt;get&lt;/code&gt; method to retrieve only the &lt;code&gt;WorldBorder&lt;/code&gt; instance for San Marino instead of a queryset:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192f4c5f953da1f0bc1388e180060f223750055d" translate="yes" xml:space="preserve">
          <source>Simple &lt;a href=&quot;clickjacking&quot;&gt;clickjacking protection via the X-Frame-Options header&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035bc3518e9f7fc7ce3973464ef2da2d5821df05" translate="yes" xml:space="preserve">
          <source>Simple generic views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ea1bd98e1f60def5d83b35553729cf8dd4d635" translate="yes" xml:space="preserve">
          <source>Simple mixins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e2b2dfed090dfaf7096a0e39ab3255342015ba" translate="yes" xml:space="preserve">
          <source>Simple tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779b02c0b6d50c53e776d75100e90b8e12bff632" translate="yes" xml:space="preserve">
          <source>Simplistically, it defines the look-and-feel of the site (with the site&amp;rsquo;s logo), and provides &amp;ldquo;holes&amp;rdquo; for child templates to fill. This means that a site redesign can be done by changing a single file &amp;ndash; the base template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0315b60e56c0c1db548469ca700923652642fead" translate="yes" xml:space="preserve">
          <source>Simply printing the queryset will not populate the cache. This is because the call to &lt;code&gt;__repr__()&lt;/code&gt; only returns a slice of the entire queryset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b93436ff6e66c39bf0d060498ee85041461a83b" translate="yes" xml:space="preserve">
          <source>Simulate GET and POST requests on a URL and observe the response &amp;ndash; everything from low-level HTTP (result headers and status codes) to page content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1c153b32cf49009a13cff0456fb3b53310f701" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;../../ref/signals#django.db.models.signals.post_migrate&quot;&gt;&lt;code&gt;post_migrate&lt;/code&gt;&lt;/a&gt; isn&amp;rsquo;t emitted after flushing the database, its state after a &lt;code&gt;TransactionTestCase&lt;/code&gt; isn&amp;rsquo;t the same as after a &lt;code&gt;TestCase&lt;/code&gt;: it&amp;rsquo;s missing the rows created by listeners to &lt;a href=&quot;../../ref/signals#django.db.models.signals.post_migrate&quot;&gt;&lt;code&gt;post_migrate&lt;/code&gt;&lt;/a&gt;. Considering the &lt;a href=&quot;overview#order-of-tests&quot;&gt;order in which tests are executed&lt;/a&gt;, this isn&amp;rsquo;t an issue, provided either all &lt;code&gt;TransactionTestCase&lt;/code&gt; in a given test suite declare &lt;code&gt;available_apps&lt;/code&gt;, or none of them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa3f22f5bc395edb16aad24d86e0bb910f57102" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;../topics/i18n/translation&quot;&gt;translation&lt;/a&gt; is turned on by default, the login screen may be displayed in your own language, depending on your browser&amp;rsquo;s settings and if Django has a translation for this language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ec3997a306a3a984f277646297741715a71fc3" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;customizing#django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash&quot;&gt;&lt;code&gt;get_session_auth_hash()&lt;/code&gt;&lt;/a&gt; is based on &lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt;, updating your site to use a new secret will invalidate all existing sessions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1238e3c1f23afc0fbbb564862f28d3935d589b" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;Aggregate&lt;/code&gt;s are expressions and wrap expressions, you can represent some complex computations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb9645e3feabbc26190192e8ba50904e0bdb5cd" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;DateField&lt;/code&gt;s don&amp;rsquo;t have a time component, only &lt;code&gt;Extract&lt;/code&gt; subclasses that deal with date-parts can be used with &lt;code&gt;DateField&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a21a54714a8c3fb4ec990884dc6dbb8e0b0066" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;DateField&lt;/code&gt;s don&amp;rsquo;t have a time component, only &lt;code&gt;Trunc&lt;/code&gt; subclasses that deal with date-parts can be used with &lt;code&gt;DateField&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ab2ba6f0139da4e0475599769ce4cacb2d3377" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;TimeField&lt;/code&gt;s don&amp;rsquo;t have a date component, only &lt;code&gt;Trunc&lt;/code&gt; subclasses that deal with time-parts can be used with &lt;code&gt;TimeField&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daef13f67a99d7a878cec548548eac1ff57e9ae4" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;defer()&lt;/code&gt; acts incrementally (adding fields to the deferred list), you can combine calls to &lt;code&gt;only()&lt;/code&gt; and &lt;code&gt;defer()&lt;/code&gt; and things will behave logically:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240288c7b51585d5a2ecc74a808eea5e72ff479d" translate="yes" xml:space="preserve">
          <source>Since Django was first released with the &lt;a href=&quot;#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;'America/Chicago'&lt;/code&gt;, the global setting (used if nothing is defined in your project&amp;rsquo;s &lt;code&gt;settings.py&lt;/code&gt;) remains &lt;code&gt;'America/Chicago'&lt;/code&gt; for backwards compatibility. New project templates default to &lt;code&gt;'UTC'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd79b65f2ad2a31c4a51930692e7147f5912aa23" translate="yes" xml:space="preserve">
          <source>Since QuerySets are lazy, this does no database queries if &amp;lsquo;display_inbox&amp;rsquo; is False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="172c0c3e99cfb346c9d365d3563bea027f83d597" translate="yes" xml:space="preserve">
          <source>Since a &lt;code&gt;Func&lt;/code&gt;&amp;rsquo;s keyword arguments for &lt;code&gt;__init__()&lt;/code&gt; (&lt;code&gt;**extra&lt;/code&gt;) and &lt;code&gt;as_sql()&lt;/code&gt; (&lt;code&gt;**extra_context&lt;/code&gt;) are interpolated into the SQL string rather than passed as query parameters (where the database driver would escape them), they must not contain untrusted user input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f69f717fb88e9e7d2709ab3c11438829844e07" translate="yes" xml:space="preserve">
          <source>Since all &lt;code&gt;Field&lt;/code&gt; subclasses have &lt;code&gt;required=True&lt;/code&gt; by default, the validation condition here is important. If you want to include a boolean in your form that can be either &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; (e.g. a checked or unchecked checkbox), you must remember to pass in &lt;code&gt;required=False&lt;/code&gt; when creating the &lt;code&gt;BooleanField&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc54ca6f45a12fcedfe3d52590e22a728a1bd717" translate="yes" xml:space="preserve">
          <source>Since any string could be a key in a JSON object, any lookup other than those listed below will be interpreted as a key lookup. No errors are raised. Be extra careful for typing mistakes, and always check your queries work as you intend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621a1c621f0bbe09a57200c015bf93156fd04e22" translate="yes" xml:space="preserve">
          <source>Since any string could be a key in a hstore value, any lookup other than those listed below will be interpreted as a key lookup. No errors are raised. Be extra careful for typing mistakes, and always check your queries work as you intend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267b191c4f9ae19b2d34ad0481c1fb674cfebe65" translate="yes" xml:space="preserve">
          <source>Since creating the MD5 hash can be a performance burden to your website during runtime, &lt;code&gt;staticfiles&lt;/code&gt; will automatically store the mapping with hashed names for all processed files in a file called &lt;code&gt;staticfiles.json&lt;/code&gt;. This happens once when you run the &lt;a href=&quot;#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; management command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53586df0fd0f1952173d60b0a403ff1c0c6ad92b" translate="yes" xml:space="preserve">
          <source>Since each thread maintains its own connection, your database must support at least as many simultaneous connections as you have worker threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b3be76ab62b3ee1076c3dc6523e940a85a35e9" translate="yes" xml:space="preserve">
          <source>Since environment variables are process-wide, this doesn&amp;rsquo;t work when you run multiple Django sites in the same process. This happens with mod_wsgi.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e11fb951839a00a6f59ef404c6085b7b62928e" translate="yes" xml:space="preserve">
          <source>Since it can become a bit cumbersome to define this URL pattern, Django ships with a small URL helper function &lt;a href=&quot;urls#django.conf.urls.static.static&quot;&gt;&lt;code&gt;static()&lt;/code&gt;&lt;/a&gt; that takes as parameters the prefix such as &lt;a href=&quot;settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; and a dotted path to a view, such as &lt;code&gt;'django.views.static.serve'&lt;/code&gt;. Any other function parameter will be transparently passed to the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3694b6589835e6030ff9bac5e64cc188f769b05" translate="yes" xml:space="preserve">
          <source>Since keeping multiple authentication databases in sync is a common problem when dealing with Apache, you can configure Apache to authenticate against Django&amp;rsquo;s &lt;a href=&quot;../../../topics/auth/index&quot;&gt;authentication system&lt;/a&gt; directly. This requires Apache version &amp;gt;= 2.2 and mod_wsgi &amp;gt;= 2.0. For example, you could:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033dea3e6e8d5dd2bfdb7785be7eb322d915dce9" translate="yes" xml:space="preserve">
          <source>Since most engines load templates from files, the top-level configuration for each engine contains two common settings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f81aa179db91abb18c1735c1b2d764c37b593d" translate="yes" xml:space="preserve">
          <source>Since ordering is delegated to the database, results on fields that allow null values may be ordered differently if you use different databases. For example, PostgreSQL and MySQL sort null values as if they are higher than non-null values, while SQLite does the opposite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3785fd34b88aa8550a180686f7e7f2fe6ae8096" translate="yes" xml:space="preserve">
          <source>Since pickle compatibility errors can be difficult to diagnose, such as silently corrupted objects, a &lt;code&gt;RuntimeWarning&lt;/code&gt; is raised when you try to unpickle a model in a Django version that is different than the one in which it was pickled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602f88f12af1580252ee95f973928f4ffb892234" translate="yes" xml:space="preserve">
          <source>Since pickle compatibility errors can be difficult to diagnose, such as silently corrupted objects, a &lt;code&gt;RuntimeWarning&lt;/code&gt; is raised when you try to unpickle a queryset in a Django version that is different than the one in which it was pickled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b259318075cca37cf94d413ec2884ef4b3ae2b1" translate="yes" xml:space="preserve">
          <source>Since static files might reference other static files that need to have their paths replaced, multiple passes of replacing paths may be needed until the file hashes converge. To prevent an infinite loop due to hashes not converging (for example, if &lt;code&gt;'foo.css'&lt;/code&gt; references &lt;code&gt;'bar.css'&lt;/code&gt; which references &lt;code&gt;'foo.css'&lt;/code&gt;) there is a maximum number of passes before post-processing is abandoned. In cases with a large number of references, a higher number of passes might be needed. Increase the maximum number of passes by subclassing &lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt; and setting the &lt;code&gt;max_post_process_passes&lt;/code&gt; attribute. It defaults to 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e8a55f499e4e88c7af09bba2b408f084a615c9" translate="yes" xml:space="preserve">
          <source>Since string extraction is done by the &lt;code&gt;xgettext&lt;/code&gt; command, only syntaxes supported by &lt;code&gt;gettext&lt;/code&gt; are supported by Django. Python &lt;a href=&quot;https://docs.python.org/3/reference/lexical_analysis.html#f-strings&quot;&gt;f-strings&lt;/a&gt; and &lt;a href=&quot;https://savannah.gnu.org/bugs/?50920&quot;&gt;JavaScript template strings&lt;/a&gt; are not yet supported by &lt;code&gt;xgettext&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c0ffa4efff3f9d6045b602f97fbbf0afe758d5" translate="yes" xml:space="preserve">
          <source>Since that&amp;rsquo;s a bit abstract, let&amp;rsquo;s look at a concrete example. The most common use of &lt;code&gt;formfield_overrides&lt;/code&gt; is to add a custom widget for a certain type of field. So, imagine we&amp;rsquo;ve written a &lt;code&gt;RichTextEditorWidget&lt;/code&gt; that we&amp;rsquo;d like to use for large text fields instead of the default &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;. Here&amp;rsquo;s how we&amp;rsquo;d do that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c462c09bbc7f45fb51780a896bd0e6b27044953" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;views#error-views&quot;&gt;default error views&lt;/a&gt; require the CSRF token, &lt;a href=&quot;middleware#django.contrib.sessions.middleware.SessionMiddleware&quot;&gt;&lt;code&gt;SessionMiddleware&lt;/code&gt;&lt;/a&gt; must appear in &lt;a href=&quot;#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; before any middleware that may raise an exception to trigger an error view (such as &lt;a href=&quot;exceptions#django.core.exceptions.PermissionDenied&quot;&gt;&lt;code&gt;PermissionDenied&lt;/code&gt;&lt;/a&gt;) if you&amp;rsquo;re using &lt;code&gt;CSRF_USE_SESSIONS&lt;/code&gt;. See &lt;a href=&quot;middleware#middleware-ordering&quot;&gt;Middleware ordering&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3680c70751a4259e89baeed5c2f2f5f28c9a23a3" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;Author&lt;/code&gt; model has the 3 fields &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;birth_date&lt;/code&gt;, this will result in the fields &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;birth_date&lt;/code&gt; being present on the form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d452aef8debbe23356a70033afef2753cb14e5" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;RemoteUserBackend&lt;/code&gt; inherits from &lt;code&gt;ModelBackend&lt;/code&gt;, you will still have all of the same permissions checking that is implemented in &lt;code&gt;ModelBackend&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdbb68b33c6d311502916cc7184838f9f5e8ae17" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;then&lt;/code&gt; keyword argument is reserved for the result of the &lt;code&gt;When()&lt;/code&gt;, there is a potential conflict if a &lt;a href=&quot;instances#django.db.models.Model&quot;&gt;&lt;code&gt;Model&lt;/code&gt;&lt;/a&gt; has a field named &lt;code&gt;then&lt;/code&gt;. This can be resolved in two ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6618e989db2273bbc1f3c54308050a36bea8f7d7" translate="yes" xml:space="preserve">
          <source>Since the &lt;em&gt;tests&lt;/em&gt; package is included in &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; when running your tests, you can define test-only models in its &lt;code&gt;models.py&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="182f25b8a48332fd0cfbbc4244db09a814c6d976" translate="yes" xml:space="preserve">
          <source>Since the Author model only has three fields, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt;, and &lt;code&gt;birth_date&lt;/code&gt;, the forms resulting from the above declarations will contain exactly the same fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba476890856fa0063dbc5286fec4c773b2be9ea" translate="yes" xml:space="preserve">
          <source>Since the case where the enum values need to be integers is extremely common, Django provides an &lt;code&gt;IntegerChoices&lt;/code&gt; class. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ddb3180871881fcfae61f580859f414abfcece9" translate="yes" xml:space="preserve">
          <source>Since the database isn&amp;rsquo;t fully flushed, if a test creates instances of models not included in &lt;code&gt;available_apps&lt;/code&gt;, they will leak and they may cause unrelated tests to fail. Be careful with tests that use sessions; the default session engine stores them in the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3df5c0a0844a50893192052cdcd2089b4fc644" translate="yes" xml:space="preserve">
          <source>Since the field validation methods have been run by the time &lt;code&gt;clean()&lt;/code&gt; is called, you also have access to the form&amp;rsquo;s &lt;code&gt;errors&lt;/code&gt; attribute which contains all the errors raised by cleaning of individual fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee7b32523a98739c39993323ca126b1ab6f12b1" translate="yes" xml:space="preserve">
          <source>Since the prefetch is executed after the main query (which includes the joins needed by &lt;code&gt;select_related&lt;/code&gt;), it is able to detect that the &lt;code&gt;best_pizza&lt;/code&gt; objects have already been fetched, and it will skip fetching them again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e894456a6ae804c6a8bd8eaccaaea486170048d" translate="yes" xml:space="preserve">
          <source>Since the template language doesn&amp;rsquo;t provide exception handling, any exception raised from a template filter will be exposed as a server error. Thus, filter functions should avoid raising exceptions if there is a reasonable fallback value to return. In case of input that represents a clear bug in a template, raising an exception may still be better than silent failure which hides the bug.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54bd5c48a829c41f37d160efc395674c13b0816" translate="yes" xml:space="preserve">
          <source>Since the template system has no concept of &amp;ldquo;escaping&amp;rdquo;, to display one of the bits used in template tags, you must use the &lt;code&gt;{% templatetag %}&lt;/code&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8102763f7cdc49ed64d110ebdc10ec98644b74ef" translate="yes" xml:space="preserve">
          <source>Since the underlying file is opened implicitly when accessing it, it may be unnecessary to call this method except to reset the pointer to the underlying file or to change the &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f6474d73677fd0c7d0495951ca9562af720155" translate="yes" xml:space="preserve">
          <source>Since things in the future are not &amp;lsquo;recent&amp;rsquo;, this is clearly wrong.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f004032c76f1b45110354f5c8f2c8d9174dd49" translate="yes" xml:space="preserve">
          <source>Since this is a bit finicky, there&amp;rsquo;s also a helper function that&amp;rsquo;ll do this for you:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a9a7c1dcff132243a3afb77a83dc9f53136bce" translate="yes" xml:space="preserve">
          <source>Since this is a subclass of &lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectMixin&quot;&gt;&lt;code&gt;SingleObjectMixin&lt;/code&gt;&lt;/a&gt;, instances of this mixin have access to the &lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectMixin.model&quot;&gt;&lt;code&gt;model&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mixins-single-object#django.views.generic.detail.SingleObjectMixin.queryset&quot;&gt;&lt;code&gt;queryset&lt;/code&gt;&lt;/a&gt; attributes, describing the type of object that the &lt;code&gt;ModelForm&lt;/code&gt; is manipulating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b836e3b2be807beecd8bb58d4c3d7119ec00e5a" translate="yes" xml:space="preserve">
          <source>Since this is usually not what you want, Django provides a convenience wrapper to check permissions and mark the view as non-cacheable. This wrapper is &lt;code&gt;AdminSite.admin_view()&lt;/code&gt; (i.e. &lt;code&gt;self.admin_site.admin_view&lt;/code&gt; inside a &lt;code&gt;ModelAdmin&lt;/code&gt; instance); use it like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce280ef1e65769fe1562be2510357317b2198d19" translate="yes" xml:space="preserve">
          <source>Since this new feature will be in an upcoming release it is also added to the release notes for the next version of Django. Open the release notes for the latest version in &lt;code&gt;docs/releases/&lt;/code&gt;, which at time of writing is &lt;code&gt;2.2.txt&lt;/code&gt;. Add a note under the &amp;ldquo;Minor Features&amp;rdquo; header:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e1007acfcc38bed3a58e1d177253ed96b3b170" translate="yes" xml:space="preserve">
          <source>Since this signal is sent during the app registry population process, and &lt;a href=&quot;applications#django.apps.AppConfig.ready&quot;&gt;&lt;code&gt;AppConfig.ready()&lt;/code&gt;&lt;/a&gt; runs after the app registry is fully populated, receivers cannot be connected in that method. One possibility is to connect them &lt;code&gt;AppConfig.__init__()&lt;/code&gt; instead, taking care not to import models or trigger calls to the app registry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a86ca2fbc6ea755af8f5f6612e77aed753ca20a7" translate="yes" xml:space="preserve">
          <source>Since translation deactivation requires access to configured settings, the decorator can&amp;rsquo;t be used for commands that work without configured settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa717881c11bde35b0145dff4b5c09425edae91" translate="yes" xml:space="preserve">
          <source>Since using a database requires conversion in both ways, if you override &lt;a href=&quot;../ref/models/fields#django.db.models.Field.to_python&quot;&gt;&lt;code&gt;to_python()&lt;/code&gt;&lt;/a&gt; you also have to override &lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_prep_value&quot;&gt;&lt;code&gt;get_prep_value()&lt;/code&gt;&lt;/a&gt; to convert Python objects back to query values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a0b9c31f60423d805f6522b383f5998b304606d" translate="yes" xml:space="preserve">
          <source>Since we have access to the &lt;code&gt;Publisher&lt;/code&gt; whose books we want to list, we override &lt;code&gt;get_queryset()&lt;/code&gt; and use the &lt;code&gt;Publisher&lt;/code&gt;&amp;rsquo;s &lt;a href=&quot;../db/queries#backwards-related-objects&quot;&gt;reverse foreign key manager&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83cb27b5980fec2422e18c05c4b1e792946c4f43" translate="yes" xml:space="preserve">
          <source>Since we haven&amp;rsquo;t made any modifications to &lt;code&gt;django.shortcuts&lt;/code&gt; yet, our test should fail. Let&amp;rsquo;s run all the tests in the &lt;code&gt;shortcuts&lt;/code&gt; folder to make sure that&amp;rsquo;s really what happens. &lt;code&gt;cd&lt;/code&gt; to the Django &lt;code&gt;tests/&lt;/code&gt; directory and run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74aaa0c05af691e500eb421f55175b31a2b3c64" translate="yes" xml:space="preserve">
          <source>Since we moved the &lt;code&gt;polls&lt;/code&gt; directory out of the project, it&amp;rsquo;s no longer working. We&amp;rsquo;ll now fix this by installing our new &lt;code&gt;django-polls&lt;/code&gt; package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cca87da26dab748a65a3d865fe2eecf9090771b" translate="yes" xml:space="preserve">
          <source>Since we&amp;rsquo;re creating a POST form (which can have the effect of modifying data), we need to worry about Cross Site Request Forgeries. Thankfully, you don&amp;rsquo;t have to worry too hard, because Django comes with a helpful system for protecting against it. In short, all POST forms that are targeted at internal URLs should use the &lt;a href=&quot;../ref/templates/builtins#std:templatetag-csrf_token&quot;&gt;&lt;code&gt;{% csrf_token %}&lt;/code&gt;&lt;/a&gt; template tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad37d97bd6f0098fd77a93b928c99a690af8225" translate="yes" xml:space="preserve">
          <source>Since you&amp;rsquo;re already entering raw HTML into the admin page for a flatpage, both &lt;code&gt;flatpage.title&lt;/code&gt; and &lt;code&gt;flatpage.content&lt;/code&gt; are marked as &lt;strong&gt;not&lt;/strong&gt; requiring &lt;a href=&quot;../templates/language#automatic-html-escaping&quot;&gt;automatic HTML escaping&lt;/a&gt; in the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb819bf4cfb2932ee65634e73d63261d48b4ff0" translate="yes" xml:space="preserve">
          <source>Since you&amp;rsquo;re overriding templates located outside of one of your project&amp;rsquo;s apps, it&amp;rsquo;s more common to use the first method and put template overrides in a project&amp;rsquo;s templates folder. If you prefer, however, it&amp;rsquo;s also possible to put the overrides in an app&amp;rsquo;s template directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0afd134835f007c574a20ffac22a88bef83653b" translate="yes" xml:space="preserve">
          <source>Since your static file server won&amp;rsquo;t be running Django, you&amp;rsquo;ll need to modify the deployment strategy to look something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a758a9b96f0a0cb1c9df99cb7fcf0a0f5ab2e0b3" translate="yes" xml:space="preserve">
          <source>Single object mixins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4279b6f4a158808f3065d3c5f9f2a8fbbc9fae1" translate="yes" xml:space="preserve">
          <source>Site middleware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ec3e71d2c9d85aaaf417a243c8e7d9f42135fc" translate="yes" xml:space="preserve">
          <source>Sitemap</source>
          <target state="translated">Sitemap</target>
        </trans-unit>
        <trans-unit id="519aa036bc82c5ea1d73d3993e032cfb72fb484f" translate="yes" xml:space="preserve">
          <source>Sitemap for static views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2764eabb8749c77d247a8a75752a9ecde7eb5597" translate="yes" xml:space="preserve">
          <source>Sitemaps</source>
          <target state="translated">Sitemaps</target>
        </trans-unit>
        <trans-unit id="5cae88ddf5336e6a23091c01317b646467eb857e" translate="yes" xml:space="preserve">
          <source>Sites</source>
          <target state="translated">Sites</target>
        </trans-unit>
        <trans-unit id="67e61f4409b1fb54be195bdc07794c772323f4db" translate="yes" xml:space="preserve">
          <source>Sixteen bit signed integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0446b596265d74a5e393db2060d6318b0e4d5dda" translate="yes" xml:space="preserve">
          <source>Sixteen bit unsigned integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41f42e02f52f797b4047cc88bef99a9e7759ac5" translate="yes" xml:space="preserve">
          <source>Sixty-four bit floating point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ee68a599b7e2021a429bed896ed452a76885eb" translate="yes" xml:space="preserve">
          <source>Size, in bytes, of the &amp;ldquo;chunks&amp;rdquo; Django should store into memory and feed into the handler. That is, this attribute controls the size of chunks fed into &lt;code&gt;FileUploadHandler.receive_data_chunk&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d331e555aa18cca5864ec6dade9b1177eb6ce280" translate="yes" xml:space="preserve">
          <source>Skew coefficients used to georeference the raster, as a point object with &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; members. In case of north up images, these coefficients are both &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ebf353dabdb492babc0f780261c7124f7b9c0c" translate="yes" xml:space="preserve">
          <source>Skip the decorated test or &lt;code&gt;TestCase&lt;/code&gt; if all of the named database features are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee27085f15e9cddd87759168c0488fcd2cd99629" translate="yes" xml:space="preserve">
          <source>Skip the decorated test or &lt;code&gt;TestCase&lt;/code&gt; if any of the named database features are &lt;em&gt;not&lt;/em&gt; supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b12e4c720acefa1432f876e9447d079b2ec2431" translate="yes" xml:space="preserve">
          <source>Skipped tests are typically due to missing external libraries required to run the test; see &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/unit-tests/#running-unit-tests-dependencies&quot;&gt;Running all the tests&lt;/a&gt; for a list of dependencies and be sure to install any for tests related to the changes you are making (we won&amp;rsquo;t need any for this tutorial). Some tests are specific to a particular database backend and will be skipped if not testing with that backend. SQLite is the database backend for the default settings. To run the tests using a different backend, see &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/unit-tests/#running-unit-tests-settings&quot;&gt;Using another settings module&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a516a3ce4b9fd1e3a2a9186564fe4ca0d9da8218" translate="yes" xml:space="preserve">
          <source>Skipping tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8989d491cc86145811a20ac193d7ccbc68aad3ce" translate="yes" xml:space="preserve">
          <source>Skips running system checks prior to running the command. This option is only available if the &lt;a href=&quot;../howto/custom-management-commands#django.core.management.BaseCommand.requires_system_checks&quot;&gt;&lt;code&gt;requires_system_checks&lt;/code&gt;&lt;/a&gt; command attribute is set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4311442b14df158474972aefe316fe0015216940" translate="yes" xml:space="preserve">
          <source>Slice transforms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c17b90ab78d86e62c72c3dbcd8cb199edcf89a0" translate="yes" xml:space="preserve">
          <source>Slice transforms take a slice of the array. Any two non-negative integers can be used, separated by a single underscore. The lookups available after the transform do not change. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd11852ab5f872acf123cf810b3e4452375ff0b" translate="yes" xml:space="preserve">
          <source>Slightly complex built-in &lt;code&gt;Field&lt;/code&gt; classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8406bd88e7e3a01d4e4da0fc3d9fe43a26302684" translate="yes" xml:space="preserve">
          <source>So - if you wanted to get a reference to the Change view for a particular &lt;code&gt;Choice&lt;/code&gt; object (from the polls application) in the default admin, you would call:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f561932be65722b9d44a8be0c2d5b554e4294e2c" translate="yes" xml:space="preserve">
          <source>So - what does this mean in practice? Let&amp;rsquo;s consider another sample configuration. This one will have several databases: one for the &lt;code&gt;auth&lt;/code&gt; application, and all other apps using a primary/replica setup with two read replicas. Here are the settings specifying these databases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598d09837c274e79aa4ceb6e5cdf49a6beb84930" translate="yes" xml:space="preserve">
          <source>So a child model does not have access to its parent&amp;rsquo;s &lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt; class. However, there are a few limited cases where the child inherits behavior from the parent: if the child does not specify an &lt;a href=&quot;../../ref/models/options#django.db.models.Options.ordering&quot;&gt;&lt;code&gt;ordering&lt;/code&gt;&lt;/a&gt; attribute or a &lt;a href=&quot;../../ref/models/options#django.db.models.Options.get_latest_by&quot;&gt;&lt;code&gt;get_latest_by&lt;/code&gt;&lt;/a&gt; attribute, it will inherit these from its parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233051ddd7bf751229384544c29d3b1075d67834" translate="yes" xml:space="preserve">
          <source>So far, this document has focused on caching your &lt;em&gt;own&lt;/em&gt; data. But another type of caching is relevant to Web development, too: caching performed by &amp;ldquo;downstream&amp;rdquo; caches. These are systems that cache pages for users even before the request reaches your website.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="683cf4990b5e54a0c5cac35fb823156284b118a2" translate="yes" xml:space="preserve">
          <source>So far, we have dealt with aggregates over fields that belong to the model being queried. However, sometimes the value you want to aggregate will belong to a model that is related to the model you are querying.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ad77851902fd991b08e548de03986e08bfe07e" translate="yes" xml:space="preserve">
          <source>So far, we&amp;rsquo;ve returned the results for which any match between the vector and the query are possible. It&amp;rsquo;s likely you may wish to order the results by some sort of relevancy. PostgreSQL provides a ranking function which takes into account how often the query terms appear in the document, how close together the terms are in the document, and how important the part of the document is where they occur. The better the match, the higher the value of the rank. To order by relevancy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76d28a93a56412c9079f8f2a2fb2b4ef88241ab" translate="yes" xml:space="preserve">
          <source>So how do you get Django to emit a natural key when serializing an object? Firstly, you need to add another method &amp;ndash; this time to the model itself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d46b4cdce588dddd936913fdf44c2259f1e789" translate="yes" xml:space="preserve">
          <source>So let&amp;rsquo;s do that right away.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fdecc262c1629f88b66330834aca08d30051882" translate="yes" xml:space="preserve">
          <source>So the second step is to refactor your code wherever you instantiate datetime objects to make them aware. This can be done incrementally. &lt;a href=&quot;../../ref/utils#module-django.utils.timezone&quot;&gt;&lt;code&gt;django.utils.timezone&lt;/code&gt;&lt;/a&gt; defines some handy helpers for compatibility code: &lt;a href=&quot;../../ref/utils#django.utils.timezone.now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/utils#django.utils.timezone.is_aware&quot;&gt;&lt;code&gt;is_aware()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/utils#django.utils.timezone.is_naive&quot;&gt;&lt;code&gt;is_naive()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/utils#django.utils.timezone.make_aware&quot;&gt;&lt;code&gt;make_aware()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../ref/utils#django.utils.timezone.make_naive&quot;&gt;&lt;code&gt;make_naive()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9fa6df1030c681f4b653cab38b34c79d168b905" translate="yes" xml:space="preserve">
          <source>So using the &lt;a href=&quot;queries#queryset-model-example&quot;&gt;example Weblog models&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd952b0234203e118fc3c69ff6ebaa6773f713b" translate="yes" xml:space="preserve">
          <source>So we would like &lt;code&gt;Experiment.objects.filter(change__abs__lt=27)&lt;/code&gt; to generate the following SQL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ebec154fa5a5260976679b0d14ca66b0cb2923" translate="yes" xml:space="preserve">
          <source>So when we handle a model instance in a view, we typically retrieve it from the database. When we&amp;rsquo;re dealing with a form we typically instantiate it in the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d128cae741730115b6ac893458e0f8b757ebd154" translate="yes" xml:space="preserve">
          <source>So where the code to handle HTTP &lt;code&gt;GET&lt;/code&gt; in a view function would look something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a3b13f9aeeb915283db7cd3bc96f1339924480" translate="yes" xml:space="preserve">
          <source>So why create tests, and why now?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f33483d117b1be82e626da94e988a40efc3f88" translate="yes" xml:space="preserve">
          <source>So you can safely call it multiple times on the same URI/IRI without risking double-quoting problems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b3d1927c58bb77b286261f38b39d20d0eaa5aa" translate="yes" xml:space="preserve">
          <source>So, instead of writing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25747342519ffca33e4647ec8682177965a6348a" translate="yes" xml:space="preserve">
          <source>So, to handle situations like this, the Django authentication system lets you plug in other authentication sources. You can override Django&amp;rsquo;s default database-based scheme, or you can use the default system in tandem with other systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2b08f406111951f741efe38048a503154b1311b" translate="yes" xml:space="preserve">
          <source>So, to recap, this view function returns an HTML page that includes the current date and time. To display this view at a particular URL, you&amp;rsquo;ll need to create a &lt;em&gt;URLconf&lt;/em&gt;; see &lt;a href=&quot;urls&quot;&gt;URL dispatcher&lt;/a&gt; for instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce78f441b208d6b519ed2450af0dd83db6051131" translate="yes" xml:space="preserve">
          <source>So, you need to know what performance improvements you are aiming for, and you also need to know that you have a good reason for aiming in that direction - and for that you need:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc0c6df181b92cda0ef2f0658e79cb1f18ed57d" translate="yes" xml:space="preserve">
          <source>Solution: rather than disabling the middleware and applying &lt;code&gt;csrf_protect&lt;/code&gt; to all the views that need it, enable the middleware and use &lt;a href=&quot;#django.views.decorators.csrf.csrf_exempt&quot;&gt;&lt;code&gt;csrf_exempt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1732f301ddac16a7401bb484115a6a9de2fb56b4" translate="yes" xml:space="preserve">
          <source>Solution: use &lt;a href=&quot;#django.views.decorators.csrf.csrf_exempt&quot;&gt;&lt;code&gt;csrf_exempt()&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;#django.views.decorators.csrf.requires_csrf_token&quot;&gt;&lt;code&gt;requires_csrf_token()&lt;/code&gt;&lt;/a&gt;. (i.e. &lt;code&gt;requires_csrf_token&lt;/code&gt; should be the innermost decorator).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7259ee02aa1d277b0913c286a1aca5a960d7047" translate="yes" xml:space="preserve">
          <source>Solution: use &lt;a href=&quot;#django.views.decorators.csrf.csrf_exempt&quot;&gt;&lt;code&gt;csrf_exempt()&lt;/code&gt;&lt;/a&gt; for the whole view function, and &lt;a href=&quot;#django.views.decorators.csrf.csrf_protect&quot;&gt;&lt;code&gt;csrf_protect()&lt;/code&gt;&lt;/a&gt; for the path within it that needs protection. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606449e793ebc99c4d94ce3bbff5cc3c7a91a9a5" translate="yes" xml:space="preserve">
          <source>Solution: use &lt;a href=&quot;#django.views.decorators.csrf.ensure_csrf_cookie&quot;&gt;&lt;code&gt;ensure_csrf_cookie()&lt;/code&gt;&lt;/a&gt; on the view that sends the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a88f55173c70a5542600ba64028d2c57e930304" translate="yes" xml:space="preserve">
          <source>Solution: use &lt;a href=&quot;#django.views.decorators.csrf.requires_csrf_token&quot;&gt;&lt;code&gt;requires_csrf_token()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33814f0df41ae834316457d8c08ab73721260bbb" translate="yes" xml:space="preserve">
          <source>Some (older) shortcuts for specifying a field lookup are also available. You can prefix a field in &lt;code&gt;search_fields&lt;/code&gt; with the following characters and it&amp;rsquo;s equivalent to adding &lt;code&gt;__&amp;lt;lookup&amp;gt;&lt;/code&gt; to the field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ee08374bb6fe16779c8ca5e3e0522d2fc7572c" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;../ref/models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; classes have required arguments. &lt;a href=&quot;../ref/models/fields#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;, for example, requires that you give it a &lt;a href=&quot;../ref/models/fields#django.db.models.CharField.max_length&quot;&gt;&lt;code&gt;max_length&lt;/code&gt;&lt;/a&gt;. That&amp;rsquo;s used not only in the database schema, but in validation, as we&amp;rsquo;ll soon see.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad23bdf1898c6566dc19368d531825cc233dc88" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;index&quot;&gt;django.contrib&lt;/a&gt; applications take advantage of the sites framework but are architected in a way that doesn&amp;rsquo;t &lt;em&gt;require&lt;/em&gt; the sites framework to be installed in your database. (Some people don&amp;rsquo;t want to, or just aren&amp;rsquo;t &lt;em&gt;able&lt;/em&gt; to install the extra database table that the sites framework requires.) For those cases, the framework provides a &lt;a href=&quot;#django.contrib.sites.requests.RequestSite&quot;&gt;&lt;code&gt;django.contrib.sites.requests.RequestSite&lt;/code&gt;&lt;/a&gt; class, which can be used as a fallback when the database-backed sites framework is not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f9ec2fcd24e83e4cbf05ef25ff3d184e319a8ca" translate="yes" xml:space="preserve">
          <source>Some Django templates context processors return a fixed value. For Jinja2 templates, this layer of indirection isn&amp;rsquo;t necessary since you can add constants directly in &lt;code&gt;jinja2.Environment&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9beeac4fefe22b2ac7a5959e4c79700f9e5ab3c0" translate="yes" xml:space="preserve">
          <source>Some Python libraries are also implemented in C, and can be much faster. They aim to offer the same APIs. Note that compatibility issues and behavior differences are not unknown (and not always immediately evident).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6004eaaf1dfc5fe3224f697cb779bde6a25056" translate="yes" xml:space="preserve">
          <source>Some actions are best if they&amp;rsquo;re made available to &lt;em&gt;any&lt;/em&gt; object in the admin site &amp;ndash; the export action defined above would be a good candidate. You can make an action globally available using &lt;a href=&quot;#django.contrib.admin.AdminSite.add_action&quot;&gt;&lt;code&gt;AdminSite.add_action()&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860276ec0a952cfccbad6fa70ecb9e9d0ae63381" translate="yes" xml:space="preserve">
          <source>Some attributes won&amp;rsquo;t make sense to include in the &lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt; class of an abstract base class. For example, including &lt;code&gt;db_table&lt;/code&gt; would mean that all the child classes (the ones that don&amp;rsquo;t specify their own &lt;a href=&quot;#meta-options&quot;&gt;Meta&lt;/a&gt;) would use the same database table, which is almost certainly not what you want.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ddac3ff9ee3fffde3bc9983055377483a00c3d" translate="yes" xml:space="preserve">
          <source>Some browsers (Chrome, for example) provide settings that allow users to continue browsing sessions after closing and re-opening the browser. In some cases, this can interfere with the &lt;a href=&quot;../../ref/settings#std:setting-SESSION_EXPIRE_AT_BROWSER_CLOSE&quot;&gt;&lt;code&gt;SESSION_EXPIRE_AT_BROWSER_CLOSE&lt;/code&gt;&lt;/a&gt; setting and prevent sessions from expiring on browser close. Please be aware of this while testing Django applications which have the &lt;a href=&quot;../../ref/settings#std:setting-SESSION_EXPIRE_AT_BROWSER_CLOSE&quot;&gt;&lt;code&gt;SESSION_EXPIRE_AT_BROWSER_CLOSE&lt;/code&gt;&lt;/a&gt; setting enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e343a5d579ed723e961eec44f99895b796fa4c79" translate="yes" xml:space="preserve">
          <source>Some browsers (specifically Internet Explorer) can disallow the use of persistent cookies or can have the indexes to the cookie jar corrupted on disk, thereby causing CSRF protection checks to (sometimes intermittently) fail. Change this setting to &lt;code&gt;None&lt;/code&gt; to use session-based CSRF cookies, which keep the cookies in-memory instead of on persistent storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38e44e93652ea2e6cea516bd33630476f164097" translate="yes" xml:space="preserve">
          <source>Some browsers have the ability to accept hints about whether they should send the HTTP &lt;code&gt;Referer&lt;/code&gt; header when a user clicks a link; this hint is provided via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy&quot;&gt;the Referrer-Policy header&lt;/a&gt;. This header can suggest any of three behaviors to browsers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f17d1dcbe8751b34f3b9eba967a1bd70fe65e6" translate="yes" xml:space="preserve">
          <source>Some browsers have the ability to block content that appears to be an &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;XSS attack&lt;/a&gt;. They work by looking for JavaScript content in the GET or POST parameters of a page. If the JavaScript is replayed in the server&amp;rsquo;s response, the page is blocked from rendering and an error page is shown instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9928877027204c843d4efa084c546dc20bc25e" translate="yes" xml:space="preserve">
          <source>Some browsers will try to guess the content types of the assets that they fetch, overriding the &lt;code&gt;Content-Type&lt;/code&gt; header. While this can help display sites with improperly configured servers, it can also pose a security risk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5947ef1c3ff79affc0a0f315b61caf1ca05b732d" translate="yes" xml:space="preserve">
          <source>Some checks may be registered with multiple tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="819f9354118a97dfea48164b3aac077a84091237" translate="yes" xml:space="preserve">
          <source>Some command options have different names when using &lt;code&gt;call_command()&lt;/code&gt; instead of &lt;code&gt;django-admin&lt;/code&gt; or &lt;code&gt;manage.py&lt;/code&gt;. For example, &lt;code&gt;django-admin
createsuperuser --no-input&lt;/code&gt; translates to &lt;code&gt;call_command('createsuperuser',
interactive=False)&lt;/code&gt;. To find what keyword argument name to use for &lt;code&gt;call_command()&lt;/code&gt;, check the command&amp;rsquo;s source code for the &lt;code&gt;dest&lt;/code&gt; argument passed to &lt;code&gt;parser.add_argument()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ed5069719ca706a052b71ed888fb914044b4bd" translate="yes" xml:space="preserve">
          <source>Some commands are only available when the &lt;code&gt;django.contrib&lt;/code&gt; application that &lt;a href=&quot;../howto/custom-management-commands&quot;&gt;implements&lt;/a&gt; them has been &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;enabled&lt;/code&gt;&lt;/a&gt;. This section describes them grouped by their application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5025f5d674e485b55f68ce091f6acfa0c0ba68ec" translate="yes" xml:space="preserve">
          <source>Some commonly used options are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ee5f1aba7a690b33d96780b096a0051bbc6b17" translate="yes" xml:space="preserve">
          <source>Some data types (for example, dates) need to be in a specific format before they can be used by a database backend. &lt;a href=&quot;../ref/models/fields#django.db.models.Field.get_db_prep_value&quot;&gt;&lt;code&gt;get_db_prep_value()&lt;/code&gt;&lt;/a&gt; is the method where those conversions should be made. The specific connection that will be used for the query is passed as the &lt;code&gt;connection&lt;/code&gt; parameter. This allows you to use backend-specific conversion logic if it is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4eb09639ac8f304e3c1a27ef0ae0e9f9e76a12" translate="yes" xml:space="preserve">
          <source>Some database column types accept parameters, such as &lt;code&gt;CHAR(25)&lt;/code&gt;, where the parameter &lt;code&gt;25&lt;/code&gt; represents the maximum column length. In cases like these, it&amp;rsquo;s more flexible if the parameter is specified in the model rather than being hard-coded in the &lt;code&gt;db_type()&lt;/code&gt; method. For example, it wouldn&amp;rsquo;t make much sense to have a &lt;code&gt;CharMaxlength25Field&lt;/code&gt;, shown here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2afc9560a0399a1863719f5c344bff8cf0e6311f" translate="yes" xml:space="preserve">
          <source>Some databases accept flags that can return more information about the query. Pass these flags as keyword arguments. For example, when using PostgreSQL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12081cb143936f05d46d555968708fe3567a874" translate="yes" xml:space="preserve">
          <source>Some databases may handle a nonexistent nth-value differently. For example, Oracle returns an empty string rather than &lt;code&gt;None&lt;/code&gt; for character-based expressions. Django doesn&amp;rsquo;t do any conversions in these cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0da3ba10c0561259c61cc02d3e3cfd1503233c" translate="yes" xml:space="preserve">
          <source>Some developers like to make available both Atom &lt;em&gt;and&lt;/em&gt; RSS versions of their feeds. To do that, you can create a subclass of your &lt;a href=&quot;#django.contrib.syndication.views.Feed&quot;&gt;&lt;code&gt;Feed&lt;/code&gt;&lt;/a&gt; class and set the &lt;code&gt;feed_type&lt;/code&gt; to something different. Then update your URLconf to add the extra versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b15ddd9bbae2a42a5c96bc2b644d8162ba90e8" translate="yes" xml:space="preserve">
          <source>Some examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2907c1539c155d2d06cf7124339feb9815ef8918" translate="yes" xml:space="preserve">
          <source>Some field types need some extra handling. For example, files that are uploaded using a form need to be handled differently (they can be retrieved from &lt;code&gt;request.FILES&lt;/code&gt;, rather than &lt;code&gt;request.POST&lt;/code&gt;). For details of how to handle file uploads with your form, see &lt;a href=&quot;../../ref/forms/api#binding-uploaded-files&quot;&gt;Binding uploaded files to a form&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7066db4e492a0be3a6b4063c837dd4af308da5ad" translate="yes" xml:space="preserve">
          <source>Some fields define extra attributes on the model, e.g. a &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; defines an extra attribute with &lt;code&gt;_id&lt;/code&gt; appended to the field name, as well as &lt;code&gt;related_name&lt;/code&gt; and &lt;code&gt;related_query_name&lt;/code&gt; on the foreign model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5793debf164ca6cec38def668a248ae75d3483b" translate="yes" xml:space="preserve">
          <source>Some fields in a model won&amp;rsquo;t be deferred, even if you ask for them. You can never defer the loading of the primary key. If you are using &lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt;&lt;code&gt;select_related()&lt;/code&gt;&lt;/a&gt; to retrieve related models, you shouldn&amp;rsquo;t defer the loading of the field that connects from the primary model to the related one, doing so will result in an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6387aa2204d8874bbb172b741895ccb637353b5f" translate="yes" xml:space="preserve">
          <source>Some filters take an argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337ae5df2b22204a5e03939b03b67510bbb5e057" translate="yes" xml:space="preserve">
          <source>Some filters take arguments. A filter argument looks like this: &lt;code&gt;{{
bio|truncatewords:30 }}&lt;/code&gt;. This will display the first 30 words of the &lt;code&gt;bio&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0991310fccbc2fc5417e6fc0c6b37dc5d602987" translate="yes" xml:space="preserve">
          <source>Some general advice</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9394ce57d7c6767a48bd5d52816526aefde5f6c8" translate="yes" xml:space="preserve">
          <source>Some information on available parameters can be found in the &lt;a href=&quot;../topics/cache#cache-arguments&quot;&gt;cache arguments&lt;/a&gt; documentation. For more information, consult your backend module&amp;rsquo;s own documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6a2765c22e184a074a9229f28efcd48fbd37ba" translate="yes" xml:space="preserve">
          <source>Some information on available parameters can be found in the &lt;a href=&quot;databases&quot;&gt;Database Backends&lt;/a&gt; documentation. For more information, consult your backend module&amp;rsquo;s own documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5868ed7c92929805cff3172e912f66f09e2b60ed" translate="yes" xml:space="preserve">
          <source>Some kinds of projects may have authentication requirements for which Django&amp;rsquo;s built-in &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; model is not always appropriate. For instance, on some sites it makes more sense to use an email address as your identification token instead of a username.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b5eb4bf16aee0330b0131fc6ed82a084a86536" translate="yes" xml:space="preserve">
          <source>Some locales use context-sensitive formats for numbers, which Django&amp;rsquo;s localization system cannot handle automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1097822e6fb12b7ad28d75f598d30c339f9629" translate="yes" xml:space="preserve">
          <source>Some locales use non-uniform digit grouping, e.g. &lt;code&gt;10,00,00,000&lt;/code&gt; in &lt;code&gt;en_IN&lt;/code&gt;. For this case, you can provide a sequence with the number of digit group sizes to be applied. The first number defines the size of the group preceding the decimal delimiter, and each number that follows defines the size of preceding groups. If the sequence is terminated with &lt;code&gt;-1&lt;/code&gt;, no further grouping is performed. If the sequence terminates with a &lt;code&gt;0&lt;/code&gt;, the last group size is used for the remainder of the number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c14b638974672a908e07dee2bd01d9b9a080929" translate="yes" xml:space="preserve">
          <source>Some of the admin templates, such as &lt;code&gt;change_list_results.html&lt;/code&gt; are used to render custom inclusion tags. These may be overridden, but in such cases you are probably better off creating your own version of the tag in question and giving it a different name. That way you can use it selectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6101ff172eb911dcde2b1ca593f435b77a080069" translate="yes" xml:space="preserve">
          <source>Some of the checks described below can be automated using the &lt;a href=&quot;../../ref/django-admin#cmdoption-check-deploy&quot;&gt;&lt;code&gt;check
--deploy&lt;/code&gt;&lt;/a&gt; option. Be sure to run it against your production settings file as described in the option&amp;rsquo;s documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da331f17e98722c8e0b5969c1ecc015cb60ddb68" translate="yes" xml:space="preserve">
          <source>Some of the examples on this page assume that an &lt;code&gt;Article&lt;/code&gt; model has been defined as follows in &lt;code&gt;myapp/models.py&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6083ebf6de6ba95038ffc54f98581c39955816" translate="yes" xml:space="preserve">
          <source>Some of the examples on this page assume that an &lt;code&gt;Author&lt;/code&gt; model has been defined as follows in &lt;code&gt;myapp/models.py&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6de71cf9c1db874e223b4d1991e96b3757e16f1" translate="yes" xml:space="preserve">
          <source>Some of the middleware included in Django&amp;rsquo;s contrib apps set attributes on the request. If you don&amp;rsquo;t see the attribute on a request, be sure the appropriate middleware class is listed in &lt;a href=&quot;settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55cdcaa17b2d4ef686332c95d1abb29cd60ee8ab" translate="yes" xml:space="preserve">
          <source>Some of the things you can do with the test client are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a7428f49f7906d462e795f9dbcbf65b483414f" translate="yes" xml:space="preserve">
          <source>Some of these applications make use of at least one database table, though, so we need to create the tables in the database before we can use them. To do that, run the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3eab720e146373ff52bed04b0d67143a12e7505" translate="yes" xml:space="preserve">
          <source>Some of these checks may not be appropriate for your particular deployment configuration. For instance, if you do your HTTP to HTTPS redirection in a load balancer, it&amp;rsquo;d be irritating to be constantly warned about not having enabled &lt;a href=&quot;settings#std:setting-SECURE_SSL_REDIRECT&quot;&gt;&lt;code&gt;SECURE_SSL_REDIRECT&lt;/code&gt;&lt;/a&gt;. Use &lt;a href=&quot;settings#std:setting-SILENCED_SYSTEM_CHECKS&quot;&gt;&lt;code&gt;SILENCED_SYSTEM_CHECKS&lt;/code&gt;&lt;/a&gt; to silence unneeded checks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ad33065f8090538b0c6acc0863627699aea233" translate="yes" xml:space="preserve">
          <source>Some of these form interface elements - text input or checkboxes - are built into HTML itself. Others are much more complex; an interface that pops up a date picker or allows you to move a slider or manipulate controls will typically use JavaScript and CSS as well as HTML form &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements to achieve these effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19eb1b5065405427669f495e58ed9b1ea0e2fbf3" translate="yes" xml:space="preserve">
          <source>Some of these other loaders are disabled by default, but you can activate them by adding a &lt;code&gt;'loaders'&lt;/code&gt; option to your &lt;code&gt;DjangoTemplates&lt;/code&gt; backend in the &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting or passing a &lt;code&gt;loaders&lt;/code&gt; argument to &lt;a href=&quot;#django.template.Engine&quot;&gt;&lt;code&gt;Engine&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;loaders&lt;/code&gt; should be a list of strings or tuples, where each represents a template loader class. Here are the template loaders that come with Django:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daaa65d31ecc6474b926e6dcd6aeb65b14ea78a0" translate="yes" xml:space="preserve">
          <source>Some operations &amp;ndash; such as caching &amp;ndash; cannot be performed on an unrendered template. They must be performed on a fully complete and rendered response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1da87e8fdc5d580d29ea9aa687bd55e4bebdb5" translate="yes" xml:space="preserve">
          <source>Some possible workarounds for this are &lt;a href=&quot;https://www.sqlite.org/faq.html#q18&quot;&gt;documented at sqlite.org&lt;/a&gt;, but they aren&amp;rsquo;t utilized by the default SQLite backend in Django, as incorporating them would be fairly difficult to do robustly. Thus, Django exposes the default SQLite behavior and you should be aware of this when doing case-insensitive or substring filtering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa794be9052acadd3135f0e7a395d9862ddc995" translate="yes" xml:space="preserve">
          <source>Some programmers follow a discipline called &amp;ldquo;&lt;a href=&quot;https://en.wikipedia.org/wiki/Test-driven_development&quot;&gt;test-driven development&lt;/a&gt;&amp;rdquo;; they actually write their tests before they write their code. This might seem counter-intuitive, but in fact it&amp;rsquo;s similar to what most people will often do anyway: they describe a problem, then create some code to solve it. Test-driven development formalizes the problem in a Python test case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160314f52a6a38c580552266e868afa1e35e8519" translate="yes" xml:space="preserve">
          <source>Some security audit tools flag this as a problem but as mentioned before, an attacker cannot steal a user&amp;rsquo;s browser&amp;rsquo;s CSRF cookie. &amp;ldquo;Stealing&amp;rdquo; or modifying &lt;em&gt;your own&lt;/em&gt; token using Firebug, Chrome dev tools, etc. isn&amp;rsquo;t a vulnerability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a681b2e5d2e7e7655f4c07a14fa98678dcaaec7" translate="yes" xml:space="preserve">
          <source>Some shortcut methods provide a standard way to add messages with commonly used tags (which are usually represented as HTML classes for the message):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469d634137a4321a22b10566961e6bc83fc140ad" translate="yes" xml:space="preserve">
          <source>Some signals get sent many times, but you&amp;rsquo;ll only be interested in receiving a certain subset of those signals. For example, consider the &lt;a href=&quot;../ref/signals#django.db.models.signals.pre_save&quot;&gt;&lt;code&gt;django.db.models.signals.pre_save&lt;/code&gt;&lt;/a&gt; signal sent before a model gets saved. Most of the time, you don&amp;rsquo;t need to know when &lt;em&gt;any&lt;/em&gt; model gets saved &amp;ndash; just when one &lt;em&gt;specific&lt;/em&gt; model is saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9dc530f5e119144034e346e1c5031a908f66bf" translate="yes" xml:space="preserve">
          <source>Some subclasses of &lt;a href=&quot;#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;, including &lt;a href=&quot;#django.core.files.base.ContentFile&quot;&gt;&lt;code&gt;ContentFile&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../models/fields#django.db.models.fields.files.FieldFile&quot;&gt;&lt;code&gt;FieldFile&lt;/code&gt;&lt;/a&gt;, may replace this attribute with an object other than a Python &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. In these cases, this attribute may itself be a &lt;a href=&quot;#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; subclass (and not necessarily the same subclass). Whenever possible, use the attributes and methods of the subclass itself rather than the those of the subclass&amp;rsquo;s &lt;code&gt;file&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a04e5275baf7095708209a494fbc4d87835cd2" translate="yes" xml:space="preserve">
          <source>Some tags require beginning and ending tags (i.e. &lt;code&gt;{% tag %} ... tag contents
... {% endtag %}&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd96e5a38db9a96308e6d8caf3aa4dd6af8f598" translate="yes" xml:space="preserve">
          <source>Some tags require beginning and ending tags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430149e5ab7c3968616c46d76026b790f7cfc545" translate="yes" xml:space="preserve">
          <source>Some technical notes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f21d6d9133d637f625350d6411381df7986c52b" translate="yes" xml:space="preserve">
          <source>Some test suites also create views or materialized views; to run these, the user also needs &lt;code&gt;CREATE VIEW WITH ADMIN OPTION&lt;/code&gt; and &lt;code&gt;CREATE MATERIALIZED VIEW WITH ADMIN OPTION&lt;/code&gt; privileges. In particular, this is needed for Django&amp;rsquo;s own test suite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe91dbd517e1619f524c6cc3d78de6f788ca2326" translate="yes" xml:space="preserve">
          <source>Some things to note:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9bc95dd99725fed830e73ca2e14abbf0af76b7" translate="yes" xml:space="preserve">
          <source>Some useful assertions like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d363e5b683aba5c83e7ca29c9b1204532c6e0484" translate="yes" xml:space="preserve">
          <source>Some widgets add further information to the context. For instance, all widgets that subclass &lt;code&gt;Input&lt;/code&gt; defines &lt;code&gt;widget['type']&lt;/code&gt; and &lt;a href=&quot;widgets#django.forms.MultiWidget&quot;&gt;&lt;code&gt;MultiWidget&lt;/code&gt;&lt;/a&gt; defines &lt;code&gt;widget['subwidgets']&lt;/code&gt; for looping purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917b7e7494ef688e0cf340247848548709210a81" translate="yes" xml:space="preserve">
          <source>Some work in optimization involves tackling performance shortcomings, but some of the work can be built-in to what you&amp;rsquo;d do anyway, as part of the good practices you should adopt even before you start thinking about improving performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593fefe39e764d82f69ff407a66000a957c3ce7e" translate="yes" xml:space="preserve">
          <source>Sometimes (in fact, quite often) you can create functions to rapidly compute the &lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.3&quot;&gt;ETag&lt;/a&gt; value or the last-modified time for a resource, &lt;strong&gt;without&lt;/strong&gt; needing to do all the computations needed to construct the full view. Django can then use these functions to provide an &amp;ldquo;early bailout&amp;rdquo; option for the view processing. Telling the client that the content has not been modified since the last request, perhaps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="673c13bcd5af7f99ea336abb1b149140c4d91a59" translate="yes" xml:space="preserve">
          <source>Sometimes a database won&amp;rsquo;t be accessed by the majority of your views, for example because it&amp;rsquo;s the database of an external system, or thanks to caching. In such cases, you should set &lt;a href=&quot;settings#std:setting-CONN_MAX_AGE&quot;&gt;&lt;code&gt;CONN_MAX_AGE&lt;/code&gt;&lt;/a&gt; to a low value or even &lt;code&gt;0&lt;/code&gt;, because it doesn&amp;rsquo;t make sense to maintain a connection that&amp;rsquo;s unlikely to be reused. This will help keep the number of simultaneous connections to this database small.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1aaa7fc81491501b0570c47f9e07109364ee57" translate="yes" xml:space="preserve">
          <source>Sometimes database expressions can&amp;rsquo;t easily express a complex &lt;code&gt;WHERE&lt;/code&gt; clause. In these edge cases, use the &lt;code&gt;RawSQL&lt;/code&gt; expression. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8777603f8fd0ff4e4efc9d8fe66e90a1639a32" translate="yes" xml:space="preserve">
          <source>Sometimes different database vendors require different SQL for the same operation. For this example we will rewrite a custom implementation for MySQL for the NotEqual operator. Instead of &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; we will be using &lt;code&gt;!=&lt;/code&gt; operator. (Note that in reality almost all databases support both, including all the official databases supported by Django).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3bc1e56efc0b2a0c8f199ec05380d6c2a61d7e" translate="yes" xml:space="preserve">
          <source>Sometimes even &lt;a href=&quot;#django.db.models.Manager.raw&quot;&gt;&lt;code&gt;Manager.raw()&lt;/code&gt;&lt;/a&gt; isn&amp;rsquo;t quite enough: you might need to perform queries that don&amp;rsquo;t map cleanly to models, or directly execute &lt;code&gt;UPDATE&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt;, or &lt;code&gt;DELETE&lt;/code&gt; queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc36a41eeb518efe23ce133cd1acb02e33245cb1" translate="yes" xml:space="preserve">
          <source>Sometimes it may seem a chore to tear yourself away from your productive, creative programming work to face the unglamorous and unexciting business of writing tests, particularly when you know your code is working properly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf403f88d3d392ed9216f02e8c43f5789050770" translate="yes" xml:space="preserve">
          <source>Sometimes it&amp;rsquo;s difficult to figure out where to get started with writing tests. If you have written several thousand lines of Python, choosing something to test might not be easy. In such a case, it&amp;rsquo;s fruitful to write your first test the next time you make a change, either when you add a new feature or fix a bug.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229736a5fc6ef7c561080e9933dc735533c69f6b" translate="yes" xml:space="preserve">
          <source>Sometimes particular views require different upload behavior. In these cases, you can override upload handlers on a per-request basis by modifying &lt;code&gt;request.upload_handlers&lt;/code&gt;. By default, this list will contain the upload handlers given by &lt;a href=&quot;../../ref/settings#std:setting-FILE_UPLOAD_HANDLERS&quot;&gt;&lt;code&gt;FILE_UPLOAD_HANDLERS&lt;/code&gt;&lt;/a&gt;, but you can modify the list as you would any other list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd6b92ca1138a34dc6738b6b0dd2d8a474e6e9c" translate="yes" xml:space="preserve">
          <source>Sometimes tests will need to be updated. Suppose that we amend our views so that only &lt;code&gt;Questions&lt;/code&gt; with &lt;code&gt;Choices&lt;/code&gt; are published. In that case, many of our existing tests will fail - &lt;em&gt;telling us exactly which tests need to be amended to bring them up to date&lt;/em&gt;, so to that extent tests help look after themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd12f80384af1fa7e96b2e203d80d64f7e5c7f08" translate="yes" xml:space="preserve">
          <source>Sometimes the basic features for custom template tag creation aren&amp;rsquo;t enough. Don&amp;rsquo;t worry, Django gives you complete access to the internals required to build a template tag from the ground up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6e7ec53c4bc63d7b2948ab07efa15d50fcaf1d" translate="yes" xml:space="preserve">
          <source>Sometimes when you use &lt;a href=&quot;#topics-serialization-natural-keys&quot;&gt;natural foreign keys&lt;/a&gt; you&amp;rsquo;ll need to deserialize data where an object has a foreign key referencing another object that hasn&amp;rsquo;t yet been deserialized. This is called a &amp;ldquo;forward reference&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24133e3cc375ed07684dff074d4f0110dc671a7" translate="yes" xml:space="preserve">
          <source>Sometimes with &lt;a href=&quot;../../topics/db/models#multi-table-inheritance&quot;&gt;multi-table inheritance&lt;/a&gt; you may want to delete only a child model&amp;rsquo;s data. Specifying &lt;code&gt;keep_parents=True&lt;/code&gt; will keep the parent model&amp;rsquo;s data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4806a1a7b873a8447eee39bc86f71e23772ad650" translate="yes" xml:space="preserve">
          <source>Sometimes words have several meanings, such as &lt;code&gt;&quot;May&quot;&lt;/code&gt; in English, which refers to a month name and to a verb. To enable translators to translate these words correctly in different contexts, you can use the &lt;a href=&quot;../../ref/utils#django.utils.translation.pgettext&quot;&gt;&lt;code&gt;django.utils.translation.pgettext()&lt;/code&gt;&lt;/a&gt; function, or the &lt;a href=&quot;../../ref/utils#django.utils.translation.npgettext&quot;&gt;&lt;code&gt;django.utils.translation.npgettext()&lt;/code&gt;&lt;/a&gt; function if the string needs pluralization. Both take a context string as the first variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a867b8b6ca6927331226f683223505e5b2ac7c7" translate="yes" xml:space="preserve">
          <source>Sometimes you might want to cache multiple copies of a fragment depending on some dynamic data that appears inside the fragment. For example, you might want a separate cached copy of the sidebar used in the previous example for every user of your site. Do this by passing one or more additional arguments, which may be variables with or without filters, to the &lt;code&gt;{% cache %}&lt;/code&gt; template tag to uniquely identify the cache fragment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8046e8375a5dfd646993146d2dd96622032c132a" translate="yes" xml:space="preserve">
          <source>Sometimes you need to disable certain actions &amp;ndash; especially those &lt;a href=&quot;#adminsite-actions&quot;&gt;registered site-wide&lt;/a&gt; &amp;ndash; for particular objects. There&amp;rsquo;s a few ways you can disable actions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a377fda803bd1771bdf0ac49923ce88acdc92be" translate="yes" xml:space="preserve">
          <source>Sometimes you need to perform an action related to the current database transaction, but only if the transaction successfully commits. Examples might include a &lt;a href=&quot;http://www.celeryproject.org/&quot;&gt;Celery&lt;/a&gt; task, an email notification, or a cache invalidation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd13259a23274369029b7cb69af3d5b3f160796" translate="yes" xml:space="preserve">
          <source>Sometimes you want to set a field to a particular value for all the objects in a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;. You can do this with the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt; method. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97058f74ecdfb489bcf45ff09ce6be5952379609" translate="yes" xml:space="preserve">
          <source>Sometimes you&amp;rsquo;ll need to perform a simple arithmetic task on a field, such as incrementing or decrementing the current value. The obvious way to achieve this is to do something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bea8249cb764a1960aae8e009b2ea180fd9cce7" translate="yes" xml:space="preserve">
          <source>Sometimes you&amp;rsquo;ll need to work with &lt;code&gt;jQuery&lt;/code&gt; plugins that are not registered in the &lt;code&gt;django.jQuery&lt;/code&gt; namespace. To do that, change how the code listens for events. Instead of wrapping the listener in the &lt;code&gt;django.jQuery&lt;/code&gt; namespace, listen to the event triggered from there. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36239ea3abc95625c5eaec86d5a3809bd9cd1018" translate="yes" xml:space="preserve">
          <source>Sometimes your form class takes custom parameters, like &lt;code&gt;MyArticleForm&lt;/code&gt;. You can pass this parameter when instantiating the formset:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7bfc08f48d8ee6c80bbec98ccd11323f967d18" translate="yes" xml:space="preserve">
          <source>Sometimes, caching an entire rendered page doesn&amp;rsquo;t gain you very much and is, in fact, inconvenient overkill.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19ff2ac49541f752a132fe0594daacb39ba675c" translate="yes" xml:space="preserve">
          <source>Sometimes, the Django query syntax by itself can&amp;rsquo;t easily express a complex &lt;code&gt;WHERE&lt;/code&gt; clause. For these edge cases, Django provides the &lt;code&gt;extra()&lt;/code&gt;&lt;code&gt;QuerySet&lt;/code&gt; modifier &amp;mdash; a hook for injecting specific clauses into the SQL generated by a &lt;code&gt;QuerySet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d03cff398dcbb052de3496e18b3de306ed05da" translate="yes" xml:space="preserve">
          <source>Sometimes, you should use &lt;a href=&quot;../../ref/utils#django.utils.translation.gettext_lazy&quot;&gt;&lt;code&gt;gettext_lazy()&lt;/code&gt;&lt;/a&gt; as the default translation method for a particular file. Without &lt;code&gt;_()&lt;/code&gt; in the global namespace, the developer has to think about which is the most appropriate translation function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c4b6e86117f9d35aa0277b6ff8d228083a3634" translate="yes" xml:space="preserve">
          <source>Sometimes, your inclusion tags might require a large number of arguments, making it a pain for template authors to pass in all the arguments and remember their order. To solve this, Django provides a &lt;code&gt;takes_context&lt;/code&gt; option for inclusion tags. If you specify &lt;code&gt;takes_context&lt;/code&gt; in creating a template tag, the tag will have no required arguments, and the underlying Python function will have one argument &amp;ndash; the template context as of when the tag was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d338a5b259fae6b52e8c644b2b8e266907c1369d" translate="yes" xml:space="preserve">
          <source>Sorts test cases in the opposite execution order. This may help in debugging the side effects of tests that aren&amp;rsquo;t properly isolated. &lt;a href=&quot;../topics/testing/overview#order-of-tests&quot;&gt;Grouping by test class&lt;/a&gt; is preserved when using this option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999f57baf74de2235e3d5c10a7ccf14d3748dfff" translate="yes" xml:space="preserve">
          <source>Spanning multi-valued relationships</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0c0dcc3e191d8a93422ad4b030723534089c62" translate="yes" xml:space="preserve">
          <source>SpatiaLite</source>
          <target state="translated">SpatiaLite</target>
        </trans-unit>
        <trans-unit id="a0bf42a4203bdb2eb6cb9e8dfca7a195f6f4e262" translate="yes" xml:space="preserve">
          <source>SpatiaLite SQL equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c731895f2558175b7f77799d0a7195615ebc03d8" translate="yes" xml:space="preserve">
          <source>SpatiaLite library (&lt;code&gt;libspatialite&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4c5bceea9ab6d6f201bfeb88af85e4166e6f5b" translate="yes" xml:space="preserve">
          <source>SpatiaLite support was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6e5b63edebeb8c17c1a18226130e0a59fabe9d" translate="yes" xml:space="preserve">
          <source>SpatiaLite users should consult the &lt;a href=&quot;spatialite#spatialite-macos&quot;&gt;macOS-specific instructions&lt;/a&gt; section after installing the packages for additional instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f8e81ae936d109e58e11c2773983818de0bd3a" translate="yes" xml:space="preserve">
          <source>Spatial Backends</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8134c4967477dfc6180c1d4a9fe5b671e01954ed" translate="yes" xml:space="preserve">
          <source>Spatial Field Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b86133559f30918fd72d1881e5b112fe0e1990a" translate="yes" xml:space="preserve">
          <source>Spatial Field Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01310c097041114df38abc77c165f1a1fd56f8d8" translate="yes" xml:space="preserve">
          <source>Spatial Lookups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f544fcb4fbf18009d10a543a8406f74be97b76" translate="yes" xml:space="preserve">
          <source>Spatial Predicate Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d66fc49d73c443d063d0f9390e82234d813dbf" translate="yes" xml:space="preserve">
          <source>Spatial Queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3886585aa8470409bca6927fe20745d221fea9d7" translate="yes" xml:space="preserve">
          <source>Spatial database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="580964ad4fc4de556472d96347fbb4442183520d" translate="yes" xml:space="preserve">
          <source>Spatial extensions for PostgreSQL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd2390a488102412e0af2137a1174126b490943" translate="yes" xml:space="preserve">
          <source>Spatial extensions for SQLite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57dfa97e2f6cb0877e6ce2eea9d011572f6d7282" translate="yes" xml:space="preserve">
          <source>Spatial fields consist of a series of geometry field types and one raster field type. Each of the geometry field types correspond to the OpenGIS Simple Features specification &lt;a href=&quot;#fnogc&quot; id=&quot;id3&quot;&gt;[1]&lt;/a&gt;. There is no such standard for raster data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e374a2ef4fb224b69d678dcfddc73d007a3bcc8" translate="yes" xml:space="preserve">
          <source>Spatial lookups with rasters are only supported for PostGIS backends (denominated as PGRaster in this section).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43a324fcf99e23a7aca4ca95358433f9a177ede" translate="yes" xml:space="preserve">
          <source>Spatial reference objects are initialized on the given &lt;code&gt;srs_input&lt;/code&gt;, which may be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f10869e91382c502cbeb84ebb87e8d3b9b624cb4" translate="yes" xml:space="preserve">
          <source>Spawns a &lt;code&gt;pdb&lt;/code&gt; debugger at each test error or failure. If you have it installed, &lt;code&gt;ipdb&lt;/code&gt; is used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c5f7e173a2fc47b01340a8a38b381221fe6bb5" translate="yes" xml:space="preserve">
          <source>Spec: &lt;a href=&quot;http://backend.userland.com/rss091&quot;&gt;http://backend.userland.com/rss091&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aec49fb9c99ddb1e17bc247a08802d46724c365" translate="yes" xml:space="preserve">
          <source>Spec: &lt;a href=&quot;https://cyber.harvard.edu/rss/rss.html&quot;&gt;https://cyber.harvard.edu/rss/rss.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b93691db88baa92ebec95ff7d87fd353a26193" translate="yes" xml:space="preserve">
          <source>Spec: &lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;https://tools.ietf.org/html/rfc4287&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c45887169f3ae3db5a92c036ed072db90f4474" translate="yes" xml:space="preserve">
          <source>Special Operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae998898b87b3e37c14d2da66ae2816638dd53d" translate="yes" xml:space="preserve">
          <source>Special cases are &lt;a href=&quot;#django.forms.CheckboxInput&quot;&gt;&lt;code&gt;CheckboxInput&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.forms.CheckboxSelectMultiple&quot;&gt;&lt;code&gt;CheckboxSelectMultiple&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#django.forms.SelectMultiple&quot;&gt;&lt;code&gt;SelectMultiple&lt;/code&gt;&lt;/a&gt;, which always return &lt;code&gt;False&lt;/code&gt; because an unchecked checkbox and unselected &lt;code&gt;&amp;lt;select multiple&amp;gt;&lt;/code&gt; don&amp;rsquo;t appear in the data of an HTML form submission, so it&amp;rsquo;s unknown whether or not the user submitted a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84500c51f943f4daf36fc10d49e539cedf015c2f" translate="yes" xml:space="preserve">
          <source>Special database configuration isn&amp;rsquo;t necessary to use any of these functions, however, if you&amp;rsquo;re searching more than a few hundred records, you&amp;rsquo;re likely to run into performance problems. Full text search is a more intensive process than comparing the size of an integer, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83ef37d9bf2abff03f45932aed3d496f9e2a22c" translate="yes" xml:space="preserve">
          <source>Special thanks to Bj&amp;oslash;rn Sandvik of &lt;a href=&quot;https://thematicmapping.org/&quot;&gt;thematicmapping.org&lt;/a&gt; for providing and maintaining this dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd1e4adbd79840eaf0af8a2ff9d3c44255e3cb8" translate="yes" xml:space="preserve">
          <source>Specialized test case to support &amp;lsquo;live testing&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c64fba74a9d3b9ab170c799c06e2e7e0cb9eb72" translate="yes" xml:space="preserve">
          <source>Specialties of Django translation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035d4728ce083e0adad0e402f1a673ae38015d6b" translate="yes" xml:space="preserve">
          <source>Specifically, GeoDjango provides support for the &lt;a href=&quot;https://gdal.org/user/vector_data_model.html&quot;&gt;OGR&lt;/a&gt; library, a component of GDAL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae4543b983317276738e348924cf9cb4005ea73" translate="yes" xml:space="preserve">
          <source>Specifically, a &lt;code&gt;Response&lt;/code&gt; object has the following attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ccf5d25dfedda0749e3abb6685b56a5fed8013a" translate="yes" xml:space="preserve">
          <source>Specification</source>
          <target state="translated">Specification</target>
        </trans-unit>
        <trans-unit id="9c73e4568c9f81581ed13506319670ca87c6a1b9" translate="yes" xml:space="preserve">
          <source>Specifies a different port, or IP address and port, from the default of &lt;code&gt;127.0.0.1:8000&lt;/code&gt;. This value follows exactly the same format and serves exactly the same function as the argument to the &lt;a href=&quot;#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf725613a31639e889942ed7be19a30b4952db4" translate="yes" xml:space="preserve">
          <source>Specifies a directory, file path, or URL of a custom project template. See the &lt;a href=&quot;#cmdoption-startapp-template&quot;&gt;&lt;code&gt;startapp --template&lt;/code&gt;&lt;/a&gt; documentation for examples and usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7e957372db350176d463124ad26d80d04f33e6" translate="yes" xml:space="preserve">
          <source>Specifies a file to write the serialized data to. By default, the data goes to standard output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d9783494550604f721f0332d9b4cdbfcaaae99" translate="yes" xml:space="preserve">
          <source>Specifies a list of file extensions to examine (default: &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;txt&lt;/code&gt;, &lt;code&gt;py&lt;/code&gt; or &lt;code&gt;js&lt;/code&gt; if &lt;a href=&quot;#cmdoption-makemessages-domain&quot;&gt;&lt;code&gt;--domain&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;js&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02028d9b62993c3e8d3ea3e6bc8d7d65dff7d839" translate="yes" xml:space="preserve">
          <source>Specifies a single app to look for fixtures in rather than looking in all apps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be23bd60a710b4ed4b20363f65e8d8e45651e1cd" translate="yes" xml:space="preserve">
          <source>Specifies a timeout in seconds for blocking operations like the connection attempt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bbdf19eb95698275c554e18da430738f54d0735" translate="yes" xml:space="preserve">
          <source>Specifies the &lt;a href=&quot;../topics/serialization#serialization-formats&quot;&gt;serialization format&lt;/a&gt; (e.g., &lt;code&gt;json&lt;/code&gt; or &lt;code&gt;xml&lt;/code&gt;) for fixtures &lt;a href=&quot;#loading-fixtures-stdin&quot;&gt;read from stdin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea229d9172fbde0eaba2a431e32e46e506b01a26" translate="yes" xml:space="preserve">
          <source>Specifies the &lt;a href=&quot;renderers&quot;&gt;renderer&lt;/a&gt; to use for the form. Defaults to &lt;code&gt;None&lt;/code&gt; which means to use the default renderer specified by the &lt;a href=&quot;../settings#std:setting-FORM_RENDERER&quot;&gt;&lt;code&gt;FORM_RENDERER&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47bd66d8c3b6e638bc5303da0bd1763c4a8c18c5" translate="yes" xml:space="preserve">
          <source>Specifies the GML version to use: 2 (default) or 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4934cc864dc927dc44d3d097b4ef9dbc58ffc6" translate="yes" xml:space="preserve">
          <source>Specifies the amount of notification and debug information that a command should print to the console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dec095c5c7b648fcb931ffcb935dd4764f736b1" translate="yes" xml:space="preserve">
          <source>Specifies the character set encoding of the strings in the OGR data source. For example, &lt;code&gt;'latin-1'&lt;/code&gt;, &lt;code&gt;'utf-8'&lt;/code&gt;, and &lt;code&gt;'cp437'&lt;/code&gt; are all valid encoding parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f6092ac1611ff5ba9664b1521fda789c3fc1797" translate="yes" xml:space="preserve">
          <source>Specifies the database for which to generate the SQL. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040af291fbdf9f9d644a2f78f9c2be3d16b1a378" translate="yes" xml:space="preserve">
          <source>Specifies the database for which to print the SQL. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102273d708a8470ec808016316626c4390b04a82" translate="yes" xml:space="preserve">
          <source>Specifies the database from which data will be dumped. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9c4570decee757ee29074ffa870486a1669f12" translate="yes" xml:space="preserve">
          <source>Specifies the database in which the cache table(s) will be created. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d789cfeb1b1342b6b8d3b77d1a2f70d27caf4f63" translate="yes" xml:space="preserve">
          <source>Specifies the database into which the data will be loaded. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd063dbe43e887f05153b8d79add2a3e72154d60" translate="yes" xml:space="preserve">
          <source>Specifies the database into which the superuser object will be saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d4b5a4010a7a70875a0bd65fa72586906a4a62" translate="yes" xml:space="preserve">
          <source>Specifies the database onto which to open a shell. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc6d270292d4cac84a4a7d5376699a3abb4547f" translate="yes" xml:space="preserve">
          <source>Specifies the database to examine. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3e33d8e3776f33a65a93cf1b7c4a031706a54b" translate="yes" xml:space="preserve">
          <source>Specifies the database to flush. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c1f733cf845fc9e76db6090ec33a3c19c73345f" translate="yes" xml:space="preserve">
          <source>Specifies the database to introspect. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be57b9404ad364746974e651c6beb6159362f509" translate="yes" xml:space="preserve">
          <source>Specifies the database to migrate. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b174068613fe7c88c96e814746911e831a64217" translate="yes" xml:space="preserve">
          <source>Specifies the database to query for the user. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f335506359d8651e422577573b15084d03688d" translate="yes" xml:space="preserve">
          <source>Specifies the database to use. Defaults to &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136575feb2ce3743594fd8b00d285618491adccc" translate="yes" xml:space="preserve">
          <source>Specifies the domain of the messages files. Supported options are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78b6b96b4c24a2617eeaf4f590be5bae9700abc0" translate="yes" xml:space="preserve">
          <source>Specifies the locale(s) to exclude from processing. If not provided, no locales are excluded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f48bdfae462918c17be822a81783874f02096f" translate="yes" xml:space="preserve">
          <source>Specifies the locale(s) to process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df49b8fb9f05c8ab1e87ff57b35d2d16eb6ead1" translate="yes" xml:space="preserve">
          <source>Specifies the locale(s) to process. If not provided, all locales are processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec01d9de708430f11be16a5b2143d525ee7e1dc" translate="yes" xml:space="preserve">
          <source>Specifies the message level that will cause the command to exit with a non-zero status. Default is &lt;code&gt;ERROR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c742627bb8cdcd3e2d64eee9a53f3c8880efd7c8" translate="yes" xml:space="preserve">
          <source>Specifies the model attribute name to use for the geometry field. Defaults to &lt;code&gt;'geom'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e16e8a45666393a05c228d25d9e8b3e8348cd0" translate="yes" xml:space="preserve">
          <source>Specifies the number of indentation spaces to use in the output. Defaults to &lt;code&gt;None&lt;/code&gt; which displays all data on single line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbcaa5032127345f09bbe34dead9122fd88159e6" translate="yes" xml:space="preserve">
          <source>Specifies the number of significant digits for the coordinates in the GML representation &amp;ndash; the default value is 8. Ignored on Oracle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513026a367fd36f728406b29911ccc38d5dded81" translate="yes" xml:space="preserve">
          <source>Specifies the output format. Available values are &lt;code&gt;hash&lt;/code&gt; and &lt;code&gt;unified&lt;/code&gt;. &lt;code&gt;hash&lt;/code&gt; is the default mode that displays the output that&amp;rsquo;s described above. &lt;code&gt;unified&lt;/code&gt; displays the output similar to &lt;code&gt;diff -u&lt;/code&gt;. Default settings are prefixed with a minus sign, followed by the changed setting prefixed with a plus sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ba2d961cf71c98d1d9c466c966a0a80fcff3b3" translate="yes" xml:space="preserve">
          <source>Specifies the serialization format of the output. Defaults to JSON. Supported formats are listed in &lt;a href=&quot;../topics/serialization#serialization-formats&quot;&gt;Serialization formats&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23cab68bfd2acaa1233320ecc705be1628e0e43b" translate="yes" xml:space="preserve">
          <source>Specifies the settings module to use. The settings module should be in Python package syntax, e.g. &lt;code&gt;mysite.settings&lt;/code&gt;. If this isn&amp;rsquo;t provided, &lt;code&gt;django-admin&lt;/code&gt; will use the &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a0076920d8fc848faec0f83c816d8ec4427a1e" translate="yes" xml:space="preserve">
          <source>Specifies the shell to use. By default, Django will use &lt;a href=&quot;https://ipython.org/&quot;&gt;IPython&lt;/a&gt; or &lt;a href=&quot;https://bpython-interpreter.org/&quot;&gt;bpython&lt;/a&gt; if either is installed. If both are installed, specify which one you want like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a1bca43465aaeca153da4ee738966841008ad5" translate="yes" xml:space="preserve">
          <source>Specifies the underlying data type and behavior for the array. It should be an instance of a subclass of &lt;a href=&quot;../../models/fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt;. For example, it could be an &lt;a href=&quot;../../models/fields#django.db.models.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;../../models/fields#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;. Most field types are permitted, with the exception of those handling relational data (&lt;a href=&quot;../../models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0478399c16e5a36924413257ca1edfab3f336361" translate="yes" xml:space="preserve">
          <source>Specifies whether or not inline objects can be deleted in the inline. Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1537fb21d812507dc96bbbb1f5a8899c347f0b3" translate="yes" xml:space="preserve">
          <source>Specifies whether or not inline objects that can be changed in the admin have a link to the change form. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497afe699651aac553ab1ccf098c0965d0635868" translate="yes" xml:space="preserve">
          <source>Specifies which file extensions in the app template should be rendered with the template engine. Defaults to &lt;code&gt;py&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db65966f0c3b6641a173b5b3edd351900c1c9eda" translate="yes" xml:space="preserve">
          <source>Specifies which file extensions in the project template should be rendered with the template engine. Defaults to &lt;code&gt;py&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025a27df0442583f1645339e20c6b8d00208535f" translate="yes" xml:space="preserve">
          <source>Specifies which files in the app template (in addition to those matching &lt;code&gt;--extension&lt;/code&gt;) should be rendered with the template engine. Defaults to an empty list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be179dd56e79e32cb59be753f949c5e698e146b1" translate="yes" xml:space="preserve">
          <source>Specifies which files in the project template (in addition to those matching &lt;code&gt;--extension&lt;/code&gt;) should be rendered with the template engine. Defaults to an empty list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684dff5b6bdc4c33909328c7a828709feb80f29f" translate="yes" xml:space="preserve">
          <source>Specify a translation string by using the function &lt;a href=&quot;../../ref/utils#django.utils.translation.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt;. It&amp;rsquo;s convention to import this as a shorter alias, &lt;code&gt;_&lt;/code&gt;, to save typing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef4c3372859c9a20edbd005d85668631f1d99785" translate="yes" xml:space="preserve">
          <source>Specify both the singular and plural forms separating them with the &lt;code&gt;{% plural %}&lt;/code&gt; tag within the &lt;code&gt;{% blocktrans %}&lt;/code&gt; and &lt;code&gt;{% endblocktrans %}&lt;/code&gt; tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab24ca02aaad2bf4d48268fccf9889ff02fac662" translate="yes" xml:space="preserve">
          <source>Specify one or more of &lt;code&gt;params&lt;/code&gt;, &lt;code&gt;select&lt;/code&gt;, &lt;code&gt;where&lt;/code&gt; or &lt;code&gt;tables&lt;/code&gt;. None of the arguments is required, but you should use at least one of them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aca3e2503d7d682e22fe6da77f704584fbd9b94" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;model = Publisher&lt;/code&gt; is shorthand for saying &lt;code&gt;queryset =
Publisher.objects.all()&lt;/code&gt;. However, by using &lt;code&gt;queryset&lt;/code&gt; to define a filtered list of objects you can be more specific about the objects that will be visible in the view (see &lt;a href=&quot;../db/queries&quot;&gt;Making queries&lt;/a&gt; for more information about &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; objects, and see the &lt;a href=&quot;../../ref/class-based-views/index&quot;&gt;class-based views reference&lt;/a&gt; for the complete details).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eddf90d9bdd080567f5c16c49e26ef8355f7a4a3" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;symmetrical=True&lt;/code&gt; for recursive many-to-many relationships using an intermediary model was allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad7cdad3351a181796ef3482e01a1a48b8f9169" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;update_fields&lt;/code&gt; will force an update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c05e64c70090e0361a1831495143cfd6750c0d" translate="yes" xml:space="preserve">
          <source>Specifying a custom user model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa36dd0d4d3098ca9746ef874f118b35d1e6a776" translate="yes" xml:space="preserve">
          <source>Specifying authentication backends</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b192380f1aec51686c1c607d55e21300c0f01680" translate="yes" xml:space="preserve">
          <source>Specifying defaults for view arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b92e0f67db69f307a8d123f470bbee82d943143" translate="yes" xml:space="preserve">
          <source>Specifying per-view cache in the URLconf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbdd950f05266fd92b26516b493f91a156c4e270" translate="yes" xml:space="preserve">
          <source>Specifying the form field for a model field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7533cbfe534c73a0817a3887816418293857d0c" translate="yes" xml:space="preserve">
          <source>Specifying the parent link field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4580f1184f9d7faed109bf18b53b8f2430280b14" translate="yes" xml:space="preserve">
          <source>Specifying the type of feed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053dc293beb27f7736035f74eb034bc9d8000f9e" translate="yes" xml:space="preserve">
          <source>Specifying which fields to save</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbedaf851bb22303fcfe72276f8ead9d0d61127f" translate="yes" xml:space="preserve">
          <source>Specifying widgets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bcb4249c4a552b91351e2cacb57f86f10a74f9d" translate="yes" xml:space="preserve">
          <source>Specifying widgets to use in the form with &lt;code&gt;widgets&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6b4b415846f22333672619fc18998ffff60e25" translate="yes" xml:space="preserve">
          <source>Specifying widgets to use in the inline form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b918622bed127b25593a5419b3321abd3d957a" translate="yes" xml:space="preserve">
          <source>Speeding up test execution with non-durable settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d8970cf679c2386c36f097290a16fc16246aea" translate="yes" xml:space="preserve">
          <source>Speeding up the tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0769dd62bb8bd1c586f460234ebaed5ff85a966" translate="yes" xml:space="preserve">
          <source>Squashes the migrations for &lt;code&gt;app_label&lt;/code&gt; up to and including &lt;code&gt;migration_name&lt;/code&gt; down into fewer migrations, if possible. The resulting squashed migrations can live alongside the unsquashed ones safely. For more information, please read &lt;a href=&quot;../topics/migrations#migration-squashing&quot;&gt;Squashing migrations&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f58f40fcc14ad733a045210687dd09b0ebab59a" translate="yes" xml:space="preserve">
          <source>Squashing is the act of reducing an existing set of many migrations down to one (or sometimes a few) migrations which still represent the same changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d13de0a8b9d8e41667b56366813b78e468894f" translate="yes" xml:space="preserve">
          <source>Squashing migrations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa220b2aedb00e1775d18b724fdf45a025232941" translate="yes" xml:space="preserve">
          <source>Stacking &lt;code&gt;UserPassesTestMixin&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afaba89802bd2ded3004deadc4950f729b566880" translate="yes" xml:space="preserve">
          <source>Standalone scripts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a5a3b8ff69038ebe02a48488fb72e5c00418a6" translate="yes" xml:space="preserve">
          <source>Standard &lt;a href=&quot;request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; objects are static structures. They are provided with a block of pre-rendered content at time of construction, and while that content can be modified, it isn&amp;rsquo;t in a form that makes it easy to perform modifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fcf6f2b778cffcd496bc580f2e0e7fac09fbd2c" translate="yes" xml:space="preserve">
          <source>Standard database operations stop being a useful approach when you start considering large blocks of text. Whereas the examples above can be thought of as operations on a string of characters, full text search looks at the actual words. Depending on the system used, it&amp;rsquo;s likely to use some of the following ideas:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b59b89d6a68dbca952a92af58029daaaa05fb2b" translate="yes" xml:space="preserve">
          <source>Standard textual queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5b05772bdbb8a11ef1436312a851d8acf661fb" translate="yes" xml:space="preserve">
          <source>Standard translation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298edc8a2fdf4fdab865c1fb56cbd4f13f1394d5" translate="yes" xml:space="preserve">
          <source>Start the development server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e2b89ef9291060b979126c686b3c89edd9a6fc" translate="yes" xml:space="preserve">
          <source>Start the server (or restart it if it&amp;rsquo;s already running):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a823a7956e6cd9f21924a0ba72a774b7b8ef9c" translate="yes" xml:space="preserve">
          <source>Starting with a URL requested by the user/browser, it calls the right Django view providing any arguments it might need with their values as extracted from the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4e16b43d77310c34e452f4744346499fa03ee1" translate="yes" xml:space="preserve">
          <source>Starting with the identification of the corresponding Django view plus the values of arguments that would be passed to it, obtain the associated URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f6dd81b785d0304fc0cf63ac1a45a6b5d1c38a" translate="yes" xml:space="preserve">
          <source>Starts a lightweight development Web server on the local machine. By default, the server runs on port 8000 on the IP address &lt;code&gt;127.0.0.1&lt;/code&gt;. You can pass in an IP address and port number explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55b00cf79640336955f6a15915752ea03e1a31c" translate="yes" xml:space="preserve">
          <source>Starts the Python interactive interpreter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1311d086ffc80574fdac4b47d1554d6837801f56" translate="yes" xml:space="preserve">
          <source>Starts-with and ends-with search, respectively. There are also case-insensitive versions called &lt;a href=&quot;../../ref/models/querysets#std:fieldlookup-istartswith&quot;&gt;&lt;code&gt;istartswith&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/models/querysets#std:fieldlookup-iendswith&quot;&gt;&lt;code&gt;iendswith&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c031153c642e8130ab037b056c28c991496c45" translate="yes" xml:space="preserve">
          <source>Static Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724c3fdcb1fa9db153cf0da4805f683eea9d882f" translate="yes" xml:space="preserve">
          <source>Static file development view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="debb4f3d06504b322041b5f31ffe50abc8366b79" translate="yes" xml:space="preserve">
          <source>Static file finders are currently considered a private interface, and this interface is thus undocumented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f98c53e58f76b16d184481e3d220bb1ced41c7" translate="yes" xml:space="preserve">
          <source>Static file namespacing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67b41072f6be9918effb94b462d59a413773f62" translate="yes" xml:space="preserve">
          <source>Static files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c6a23bcbb02c6bc5b7baeb4d46204aae98ef57" translate="yes" xml:space="preserve">
          <source>Static files are automatically served by the development server. In production, you must define a &lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt; directory where &lt;a href=&quot;../../ref/contrib/staticfiles#django-admin-collectstatic&quot;&gt;&lt;code&gt;collectstatic&lt;/code&gt;&lt;/a&gt; will copy them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea50b68a12ea4bffd77d98cfe32c34e31ef4556d" translate="yes" xml:space="preserve">
          <source>Static files management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468b015716ba67db5c5137a15fe96453744f97cb" translate="yes" xml:space="preserve">
          <source>Static files, which by definition are not dynamic, make an excellent target for optimization gains.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb55501b6182a55d5ef0bb9d8983448c1e4000b" translate="yes" xml:space="preserve">
          <source>Status information will be written to this file handle. Defaults to using &lt;code&gt;sys.stdout&lt;/code&gt;, but any object with a &lt;code&gt;write&lt;/code&gt; method is supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4f785a32aeb81e0a7ff919e91121617ede171c" translate="yes" xml:space="preserve">
          <source>Stemming words, so that &amp;ldquo;pony&amp;rdquo; and &amp;ldquo;ponies&amp;rdquo; are considered similar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474ca822a4222d269a95e4e93701c49d8054ad74" translate="yes" xml:space="preserve">
          <source>Still, note that there are always going to be sections of your debug output that are inappropriate for public consumption. File paths, configuration options and the like all give attackers extra information about your server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ee0e5ac1d56dbf0d06477a93bc5d14e01359b9" translate="yes" xml:space="preserve">
          <source>Stops running tests and reports the failure immediately after a test fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b75a63f772a6610a2d1a1c30a7c6f8c7c6bc7f" translate="yes" xml:space="preserve">
          <source>Stops the template engine from rendering the contents of this block tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab1557ec70d1b0010ae03328efc7140e3d7014fd" translate="yes" xml:space="preserve">
          <source>Storage backends</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567ce2a52a8dc37c3d7c374479ee12ec4da2a5b5" translate="yes" xml:space="preserve">
          <source>Storage engines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8690ab496342e3b23e722655f434e9d599df2ebd" translate="yes" xml:space="preserve">
          <source>Storage objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687c6980fa4b88314893c4d3905f3cafb0bfe1ce" translate="yes" xml:space="preserve">
          <source>Storages</source>
          <target state="translated">Storages</target>
        </trans-unit>
        <trans-unit id="b0f1f8c9c2dcba9655d70d26929b8b1d0e48ddcd" translate="yes" xml:space="preserve">
          <source>Store your static files in a folder called &lt;code&gt;static&lt;/code&gt; in your app. For example &lt;code&gt;my_app/static/my_app/example.jpg&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073bbbf48c6eb83a2852f4678919ceac4595d300" translate="yes" xml:space="preserve">
          <source>Stores a &lt;a href=&quot;gdal#django.contrib.gis.gdal.GDALRaster&quot;&gt;&lt;code&gt;GDALRaster&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6daa5c20d23f84881e9fa95fa1893b088841b2" translate="yes" xml:space="preserve">
          <source>Stores a &lt;a href=&quot;geos#django.contrib.gis.geos.GeometryCollection&quot;&gt;&lt;code&gt;GeometryCollection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="315308ae7944998b72975dc9466019d314cc79c5" translate="yes" xml:space="preserve">
          <source>Stores a &lt;a href=&quot;geos#django.contrib.gis.geos.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6d1e5283b30474c1c0300f9f460481be4e65e0" translate="yes" xml:space="preserve">
          <source>Stores a &lt;a href=&quot;geos#django.contrib.gis.geos.MultiLineString&quot;&gt;&lt;code&gt;MultiLineString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78b908bf6cde5510284e225461ad89380678f0c" translate="yes" xml:space="preserve">
          <source>Stores a &lt;a href=&quot;geos#django.contrib.gis.geos.MultiPoint&quot;&gt;&lt;code&gt;MultiPoint&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519189173bec278630442b11bfe8e42391c667f9" translate="yes" xml:space="preserve">
          <source>Stores a &lt;a href=&quot;geos#django.contrib.gis.geos.MultiPolygon&quot;&gt;&lt;code&gt;MultiPolygon&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e5d386e8b193cbae72ddbdf0df69e07d8cd6be" translate="yes" xml:space="preserve">
          <source>Stores a &lt;a href=&quot;geos#django.contrib.gis.geos.Point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20d820edd4ee8d8aaa6faeceda245bf3d15f4bb" translate="yes" xml:space="preserve">
          <source>Stores a &lt;a href=&quot;geos#django.contrib.gis.geos.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="442fdb9b3e170ac8a03783b7cc6d935563aba9c2" translate="yes" xml:space="preserve">
          <source>Stores a range of dates. Based on a &lt;a href=&quot;../../models/fields#django.db.models.DateField&quot;&gt;&lt;code&gt;DateField&lt;/code&gt;&lt;/a&gt;. Represented by a &lt;code&gt;daterange&lt;/code&gt; in the database and a &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.DateRange&quot;&gt;&lt;code&gt;DateRange&lt;/code&gt;&lt;/a&gt; in Python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f1dbb79b52ddd161446eb05b9d70feab70ce79" translate="yes" xml:space="preserve">
          <source>Stores a range of floating point values. Based on a &lt;a href=&quot;../../models/fields#django.db.models.DecimalField&quot;&gt;&lt;code&gt;DecimalField&lt;/code&gt;&lt;/a&gt;. Represented by a &lt;code&gt;numrange&lt;/code&gt; in the database and a &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt;&lt;code&gt;NumericRange&lt;/code&gt;&lt;/a&gt; in Python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6ab479b0af5a4f83f7e297e862610934953058" translate="yes" xml:space="preserve">
          <source>Stores a range of floating point values. Based on a &lt;a href=&quot;../../models/fields#django.db.models.FloatField&quot;&gt;&lt;code&gt;FloatField&lt;/code&gt;&lt;/a&gt;. Represented by a &lt;code&gt;numrange&lt;/code&gt; in the database and a &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt;&lt;code&gt;NumericRange&lt;/code&gt;&lt;/a&gt; in Python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d974c9ba76aa3ebf85128823bcb263bcad904b18" translate="yes" xml:space="preserve">
          <source>Stores a range of integers. Based on an &lt;a href=&quot;../../models/fields#django.db.models.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt;. Represented by an &lt;code&gt;int4range&lt;/code&gt; in the database and a &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt;&lt;code&gt;NumericRange&lt;/code&gt;&lt;/a&gt; in Python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7fc9f68a40c2bb5262ed6710268e98141687b4b" translate="yes" xml:space="preserve">
          <source>Stores a range of large integers. Based on a &lt;a href=&quot;../../models/fields#django.db.models.BigIntegerField&quot;&gt;&lt;code&gt;BigIntegerField&lt;/code&gt;&lt;/a&gt;. Represented by an &lt;code&gt;int8range&lt;/code&gt; in the database and a &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.NumericRange&quot;&gt;&lt;code&gt;NumericRange&lt;/code&gt;&lt;/a&gt; in Python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d2fd4ba60083f3af9475d6bedf8c5e0b57cf7f" translate="yes" xml:space="preserve">
          <source>Stores a range of timestamps. Based on a &lt;a href=&quot;../../models/fields#django.db.models.DateTimeField&quot;&gt;&lt;code&gt;DateTimeField&lt;/code&gt;&lt;/a&gt;. Represented by a &lt;code&gt;tstzrange&lt;/code&gt; in the database and a &lt;a href=&quot;https://www.psycopg.org/docs/extras.html#psycopg2.extras.DateTimeTZRange&quot;&gt;&lt;code&gt;DateTimeTZRange&lt;/code&gt;&lt;/a&gt; in Python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85fefa25af8ac03aed394db3aa8716969e73a82a" translate="yes" xml:space="preserve">
          <source>Stores changes to miscellaneous model options (settings on a model&amp;rsquo;s &lt;code&gt;Meta&lt;/code&gt;) like &lt;code&gt;permissions&lt;/code&gt; and &lt;code&gt;verbose_name&lt;/code&gt;. Does not affect the database, but persists these changes for &lt;a href=&quot;#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt; instances to use. &lt;code&gt;options&lt;/code&gt; should be a dictionary mapping option names to values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26d85acdc9c1382a17178263f16f66529e2935f" translate="yes" xml:space="preserve">
          <source>Storing the CSRF token in a cookie (Django&amp;rsquo;s default) is safe, but storing it in the session is common practice in other web frameworks and therefore sometimes demanded by security auditors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53bd973c8e9ec072b83032a646a616c6e1d937c5" translate="yes" xml:space="preserve">
          <source>Streaming large CSV files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1d81db2bbbab8255afb828704753d2e3a5742c" translate="yes" xml:space="preserve">
          <source>Strictly speaking, &lt;code&gt;filesizeformat&lt;/code&gt; does not conform to the International System of Units which recommends using KiB, MiB, GiB, etc. when byte sizes are calculated in powers of 1024 (which is the case here). Instead, Django uses traditional unit names (KB, MB, GB, etc.) corresponding to names that are more commonly used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95041f41349683b64a22765014d2875f3ec50b39" translate="yes" xml:space="preserve">
          <source>Strictly speaking, Django allows importing models once their application configuration is loaded. However, in order to avoid needless constraints on the order of &lt;a href=&quot;settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;, it&amp;rsquo;s strongly recommended not import any models at this stage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6d28eafa6bafa726940b259dfd49f021cc9df3" translate="yes" xml:space="preserve">
          <source>Strictly speaking, signal handling and registration code can live anywhere you like, although it&amp;rsquo;s recommended to avoid the application&amp;rsquo;s root module and its &lt;code&gt;models&lt;/code&gt; module to minimize side-effects of importing code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d48c7c680a0f2ebf70d8ae1b79309ebb93d71c7" translate="yes" xml:space="preserve">
          <source>String literals and automatic escaping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce5220f1291fc968b8a624034f3ec2f95fc3951" translate="yes" xml:space="preserve">
          <source>String literals passed to tags and filters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aaa087b298e0e5411ed543eaab495db54cb115f" translate="yes" xml:space="preserve">
          <source>String marked safe will become unsafe again if modified. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df60868121cc45b530430369578cf2586acf3487" translate="yes" xml:space="preserve">
          <source>String representing the name of the raster. When creating a file-based raster, this parameter must be the file path for the new raster. If the name starts with &lt;code&gt;/vsimem/&lt;/code&gt;, the raster is created in GDAL&amp;rsquo;s virtual filesystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b2dc6cae3949b7f2226b9d18544755ac711dd8" translate="yes" xml:space="preserve">
          <source>Strings for setting both keys and values will be converted from &lt;code&gt;encoding&lt;/code&gt; to &lt;code&gt;str&lt;/code&gt;. If &lt;code&gt;encoding&lt;/code&gt; is not set, it defaults to &lt;a href=&quot;settings#std:setting-DEFAULT_CHARSET&quot;&gt;&lt;code&gt;DEFAULT_CHARSET&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af15dcaf8028884a9c1a0a95b1d40fa996014cc" translate="yes" xml:space="preserve">
          <source>Strings that can be coerced to integers will be &lt;strong&gt;summed&lt;/strong&gt;, not concatenated, as in the first example above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f2950d019840cc87935eabaf5673f9a0cf7c77" translate="yes" xml:space="preserve">
          <source>Strings that reference fields on the model, or &lt;a href=&quot;expressions&quot;&gt;query expressions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f3fe26cc5b643b13d9bd40452d1189e59da23e8" translate="yes" xml:space="preserve">
          <source>Styling required or erroneous form rows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c18baa1aff6f31add9fe33da98e6b67f5bf6ff5" translate="yes" xml:space="preserve">
          <source>Styling widget classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b7fa0469dcbcc7c3f97ccad782bda65e0fa25f" translate="yes" xml:space="preserve">
          <source>Styling widget instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6e828c93be239a620d004062d68ac259f58e47" translate="yes" xml:space="preserve">
          <source>Subclass of &lt;a href=&quot;../../../topics/auth/default#django.contrib.auth.forms.AuthenticationForm&quot;&gt;&lt;code&gt;AuthenticationForm&lt;/code&gt;&lt;/a&gt; that will be used by the admin site login view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec350404dede323315e21592094d0f2e748f1e9b" translate="yes" xml:space="preserve">
          <source>Subclasses can override this method to perform initialization tasks such as registering signals. It is called as soon as the registry is fully populated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409849940f59d8ed41a8b1565b740b8e430ff459" translate="yes" xml:space="preserve">
          <source>Subclasses inherit tags from superclasses, and methods inherit tags from their class. Given:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2be9a5594c630d47fb4f2c94d9ca7bceb92f66" translate="yes" xml:space="preserve">
          <source>Subclasses of &lt;a href=&quot;#django.contrib.contenttypes.admin.GenericInlineModelAdmin&quot;&gt;&lt;code&gt;GenericInlineModelAdmin&lt;/code&gt;&lt;/a&gt; with stacked and tabular layouts, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa977c146c2071b4ce342e125028f8b620e4d46" translate="yes" xml:space="preserve">
          <source>Subclasses of &lt;code&gt;UploadedFile&lt;/code&gt; include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a399f95cfb14652c6e13e8e042ddd17077f31cc" translate="yes" xml:space="preserve">
          <source>Subclassing forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed922813c03a5685e87c852ef9fd8374f089b6ef" translate="yes" xml:space="preserve">
          <source>Subclassing generic views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d55e035efba5af0a6b8a554cd827ae4af8fde6b4" translate="yes" xml:space="preserve">
          <source>Subclassing the &lt;a href=&quot;#django.core.management.BaseCommand&quot;&gt;&lt;code&gt;BaseCommand&lt;/code&gt;&lt;/a&gt; class requires that you implement the &lt;a href=&quot;#django.core.management.BaseCommand.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bcbc67121fea319355279cd6b26ffb2db342c49" translate="yes" xml:space="preserve">
          <source>Subclassing the built-in database backends</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468cbafbc734999dafb4d52cc18cff7be6d5c802" translate="yes" xml:space="preserve">
          <source>Subdomains within a site are able to set cookies on the client for the whole domain. This makes session fixation possible if cookies are permitted from subdomains not controlled by trusted users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c42d70326da53bf6f6e18301737e29bdacbf370" translate="yes" xml:space="preserve">
          <source>Subdomains within a site will be able to set cookies on the client for the whole domain. By setting the cookie and using a corresponding token, subdomains will be able to circumvent the CSRF protection. The only way to avoid this is to ensure that subdomains are controlled by trusted users (or, are at least unable to set cookies). Note that even without CSRF, there are other vulnerabilities, such as session fixation, that make giving subdomains to untrusted parties a bad idea, and these vulnerabilities cannot easily be fixed with current browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a930fe006f9385062109a10f98bb67877b6896" translate="yes" xml:space="preserve">
          <source>Subject-line prefix for email messages sent with &lt;code&gt;django.core.mail.mail_admins&lt;/code&gt; or &lt;code&gt;django.core.mail.mail_managers&lt;/code&gt;. You&amp;rsquo;ll probably want to include the trailing space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112e5633557aabe0554412178f18993f469e9d1b" translate="yes" xml:space="preserve">
          <source>Submitting a pull request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7943280a77a00e447d4b61749b26ff5f2447c28a" translate="yes" xml:space="preserve">
          <source>Submitting files is a special case. To POST a file, you need only provide the file field name as a key, and a file handle to the file you wish to upload as a value. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4fb6812fd7c01babca42c65c2c4494d98213946" translate="yes" xml:space="preserve">
          <source>Subset of fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0efeebd93696e01321323568fe6cd5ea45e10f" translate="yes" xml:space="preserve">
          <source>Subsets of assets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8256727b4c81539d429b19dfe0af74a32fcf9fb2" translate="yes" xml:space="preserve">
          <source>Substituting a custom &lt;code&gt;User&lt;/code&gt; model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b529dd20b16ee9e09835fb0f297059f2a13c8a" translate="yes" xml:space="preserve">
          <source>Substring matching and case sensitivity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c0370b9a90b04b716ca152c18e0f8fcf868699" translate="yes" xml:space="preserve">
          <source>Such quoted names can also be used with Django&amp;rsquo;s other supported database backends; except for Oracle, however, the quotes have no effect. See the &lt;a href=&quot;../databases#oracle-notes&quot;&gt;Oracle notes&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351320823415fa40986a1e879a6ec65e8b8f599d" translate="yes" xml:space="preserve">
          <source>Such values can be set in your root URLconf. Setting these variables in any other URLconf will have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6b73d601ef3e2b985989c69ec5e52240b57ae4" translate="yes" xml:space="preserve">
          <source>Suggest the database that should be used for read operations for objects of type &lt;code&gt;model&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7c037012cda74dc2316e0500df4b0164373f35" translate="yes" xml:space="preserve">
          <source>Suggest the database that should be used for writes of objects of type Model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed816d75e1c95434823496141b81fdcea2cbda9" translate="yes" xml:space="preserve">
          <source>Summary:</source>
          <target state="translated">Summary:</target>
        </trans-unit>
        <trans-unit id="9848450458cb5c40feea2458c5eb4cf7c5176c8f" translate="yes" xml:space="preserve">
          <source>Support for &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt; was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bf703bfc47555aef6e042d642d910d9c517ef9" translate="yes" xml:space="preserve">
          <source>Support for &lt;a href=&quot;https://docs.python.org/3/library/pathlib.html#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt;&lt;code&gt;path&lt;/code&gt; was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4603fd8e4ae188addeb3efab4fb7f63e693f58ff" translate="yes" xml:space="preserve">
          <source>Support for &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt; was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bda4a0b159c10056a1215103f251b0060d8ba92" translate="yes" xml:space="preserve">
          <source>Support for &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt;&lt;code&gt;content&lt;/code&gt; was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a206d05bd0f1154f56b420532c7d2a40a5891c00" translate="yes" xml:space="preserve">
          <source>Support for &lt;code&gt;distinct=True&lt;/code&gt; was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f583f36c813f3b5984dd58c4e32bb0e469ecf17" translate="yes" xml:space="preserve">
          <source>Support for XZ archives (&lt;code&gt;.tar.xz&lt;/code&gt;, &lt;code&gt;.txz&lt;/code&gt;) and LZMA archives (&lt;code&gt;.tar.lzma&lt;/code&gt;, &lt;code&gt;.tlz&lt;/code&gt;) was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704980d755ccbecf222ba838fbca85ee13a9273c" translate="yes" xml:space="preserve">
          <source>Support for boolean &lt;a href=&quot;expressions#django.db.models.Expression&quot;&gt;&lt;code&gt;Expression&lt;/code&gt;&lt;/a&gt; was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ee9bdac5921499c4a394030c41ffd3312c5030" translate="yes" xml:space="preserve">
          <source>Support for foreign tables and materialized views was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed202a5e38310e8d01322d85eca3458b1995133" translate="yes" xml:space="preserve">
          <source>Support for lookups using underscores was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1339102540db71df212442f1ca38a1006f890c34" translate="yes" xml:space="preserve">
          <source>Support for result streaming on SQLite was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d608e6c62c528f19f377e69aeccc67385f59ec4" translate="yes" xml:space="preserve">
          <source>Support for spatial functions operating on real geometries was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e81f78b6f449055d90229a296946393c606b9703" translate="yes" xml:space="preserve">
          <source>Support for template engines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27cb2500c403fd473b374e87a1641b025be1072f" translate="yes" xml:space="preserve">
          <source>Support for using &lt;code&gt;DJANGO_SUPERUSER_PASSWORD&lt;/code&gt; and &lt;code&gt;DJANGO_SUPERUSER_&amp;lt;uppercase_field_name&amp;gt;&lt;/code&gt; environment variables was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27688c5327abb2b73ea437b43fa29c356a128ee7" translate="yes" xml:space="preserve">
          <source>Supported Versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc57d2f52439e55baace17d6c6a93606a82454c" translate="yes" xml:space="preserve">
          <source>Supported arithmetic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b115db32505ae0ddc8de5c0903011b4132418629" translate="yes" xml:space="preserve">
          <source>Supported by the &lt;a href=&quot;https://www.postgresql.org/docs/current/multibyte.html&quot;&gt;PostgreSQL&lt;/a&gt; (&lt;code&gt;postgresql&lt;/code&gt;) and &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/charset-charsets.html&quot;&gt;MySQL&lt;/a&gt; (&lt;code&gt;mysql&lt;/code&gt;) backends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7acd741312970e521a1a939cb8b7d591ee9a9233" translate="yes" xml:space="preserve">
          <source>Supported units</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a98e56c9beb231c7293acbc09df596c4291da6e" translate="yes" xml:space="preserve">
          <source>Supporting multiple Django versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687b4e67fa6a60b5c3ea388a9c2f304d1d874599" translate="yes" xml:space="preserve">
          <source>Supporting other HTTP methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbfd1d44320b9ad6da14e0f21c3ff11cba7de09" translate="yes" xml:space="preserve">
          <source>Supports arbitrary Python objects, but, as described above, can lead to a remote code execution vulnerability if &lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt; becomes known by an attacker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56da4ebdd2d382907acc67f7a1adf557d5e94cc1" translate="yes" xml:space="preserve">
          <source>Suppose an online store has a page where a logged in user can click &amp;ldquo;Buy Now&amp;rdquo; to purchase an item. A user has chosen to stay logged into the store all the time for convenience. An attacker site might create an &amp;ldquo;I Like Ponies&amp;rdquo; button on one of their own pages, and load the store&amp;rsquo;s page in a transparent iframe such that the &amp;ldquo;Buy Now&amp;rdquo; button is invisibly overlaid on the &amp;ldquo;I Like Ponies&amp;rdquo; button. If the user visits the attacker&amp;rsquo;s site, clicking &amp;ldquo;I Like Ponies&amp;rdquo; will cause an inadvertent click on the &amp;ldquo;Buy Now&amp;rdquo; button and an unknowing purchase of the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d53f6916ad3f530795e0ddf3f219a32b3b3e6c" translate="yes" xml:space="preserve">
          <source>Suppose somebody wants to access our book library over HTTP using the views as an API. The API client would connect every now and then and download book data for the books published since last visit. But if no new books appeared since then, it is a waste of CPU time and bandwidth to fetch the books from the database, render a full response and send it to the client. It might be preferable to ask the API when the most recent book was published.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ba09f6a9abc8fab10e50155241dfe9e94d114e" translate="yes" xml:space="preserve">
          <source>Suppose there is only one blog that had both entries containing &lt;em&gt;&amp;ldquo;Lennon&amp;rdquo;&lt;/em&gt; and entries from 2008, but that none of the entries from 2008 contained &lt;em&gt;&amp;ldquo;Lennon&amp;rdquo;&lt;/em&gt;. The first query would not return any blogs, but the second query would return that one blog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01c1bd98cbad17b9e751a239ba2a890d43c3da2" translate="yes" xml:space="preserve">
          <source>Suppose we add another requirement to our contact form: if the &lt;code&gt;cc_myself&lt;/code&gt; field is &lt;code&gt;True&lt;/code&gt;, the &lt;code&gt;subject&lt;/code&gt; must contain the word &lt;code&gt;&quot;help&quot;&lt;/code&gt;. We are performing validation on more than one field at a time, so the form&amp;rsquo;s &lt;a href=&quot;api#django.forms.Form.clean&quot;&gt;&lt;code&gt;clean()&lt;/code&gt;&lt;/a&gt; method is a good spot to do this. Notice that we are talking about the &lt;code&gt;clean()&lt;/code&gt; method on the form here, whereas earlier we were writing a &lt;code&gt;clean()&lt;/code&gt; method on a field. It&amp;rsquo;s important to keep the field and form difference clear when working out where to validate things. Fields are single data points, forms are a collection of fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc928eeefb324a7e3109ea15428221b799b26b5" translate="yes" xml:space="preserve">
          <source>Suppose we have the following models:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d28bd5e458f4fc4b481360c8060508c95dab2f7" translate="yes" xml:space="preserve">
          <source>Suppose you have a model with fields &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;age&lt;/code&gt; and &lt;code&gt;biography&lt;/code&gt;. The following two querysets are the same, in terms of deferred fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46407ba998152b94352cb74fcd3d95c0fd34b4f" translate="yes" xml:space="preserve">
          <source>Suppose you want to create a simple form on your website, in order to obtain the user&amp;rsquo;s name. You&amp;rsquo;d need something like this in your template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae86ce9c555b820767bdbe11b09caabe5b466aa" translate="yes" xml:space="preserve">
          <source>Suppresses all user prompts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef93342aeaf01b703522c1350c01c4fb9f8959c8" translate="yes" xml:space="preserve">
          <source>Suppresses all user prompts. A typical prompt is a warning about deleting an existing test database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b525332492769ffca01746b65e231df41abb2136" translate="yes" xml:space="preserve">
          <source>Suppresses all user prompts. An example prompt is asking about removing stale content types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebf312595aa5fa3dc78321993514dd4d7680393" translate="yes" xml:space="preserve">
          <source>Suppresses all user prompts. If a suppressed prompt cannot be resolved automatically, the command will exit with error code 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928ad51e23b59101e44e31f76917df83badad38b" translate="yes" xml:space="preserve">
          <source>Suppresses all user prompts. If a suppressed prompt cannot be resolved automatically, the command will exit with error code 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f17570fb14c4f5cd50be20ab61869fc4b72522" translate="yes" xml:space="preserve">
          <source>Suppresses the &lt;code&gt;from django.contrib.gis.db import models&lt;/code&gt; import statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe7d55e7b6b312edd8850a405798196f79b8e4c" translate="yes" xml:space="preserve">
          <source>Suppresses writing &amp;lsquo;&lt;code&gt;#: filename:line&lt;/code&gt;&amp;rsquo; comment lines in language files. Using this option makes it harder for technically skilled translators to understand each message&amp;rsquo;s context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4bdcd9c81927fdbcfdf37ea974fafdcd6320d5" translate="yes" xml:space="preserve">
          <source>Switching language in templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50109e8663c4559272b873c515087a9b7e816ee9" translate="yes" xml:space="preserve">
          <source>Switching to another database backend. At a certain point SQLite becomes too &amp;ldquo;lite&amp;rdquo; for real-world applications, and these sorts of concurrency errors indicate you&amp;rsquo;ve reached that point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2379d0a4e286f32090f139f1c2d5d244f32bf44a" translate="yes" xml:space="preserve">
          <source>Switzerland (German)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00065594c7228bd19c1b7ee623c8e3ce49c2ffa0" translate="yes" xml:space="preserve">
          <source>Synchronizes the database state with the current set of models and migrations. Migrations, their relationship with apps and more are covered in depth in &lt;a href=&quot;../topics/migrations&quot;&gt;the migrations documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a8010f64d5599164ae371796a865cce9ca670f" translate="yes" xml:space="preserve">
          <source>Synchronizing your databases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175d4ce98df6f28483bb30a64e8ebbeebb41943d" translate="yes" xml:space="preserve">
          <source>Syndication feeds (RSS/Atom)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="e9ffe4e6d9f053f0a17fa96bbf4ba07178030465" translate="yes" xml:space="preserve">
          <source>Syntax coloring</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f6f77ce0df4f07a260813db5935a76e8cae2d4" translate="yes" xml:space="preserve">
          <source>Syntax of the &lt;code&gt;urlpatterns&lt;/code&gt; variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa98ba039441a09bbd5eacca40ae266b04b91ccd" translate="yes" xml:space="preserve">
          <source>System check framework</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdcf532ac8bec837e8835ecab27f3cd87f17d118" translate="yes" xml:space="preserve">
          <source>TEMPLATES</source>
          <target state="translated">TEMPLATES</target>
        </trans-unit>
        <trans-unit id="8e2aa60817a7263a0b4974318b101f20823f482e" translate="yes" xml:space="preserve">
          <source>Table name quoting for Oracle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76d55fc89e815be76269a01255c85581f68714c" translate="yes" xml:space="preserve">
          <source>Table names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f3f5d18e18715cfca8bf0aaef8d2d81fdf3063" translate="yes" xml:space="preserve">
          <source>Table names are automatically generated by combining the name of the app (&lt;code&gt;polls&lt;/code&gt;) and the lowercase name of the model &amp;ndash; &lt;code&gt;question&lt;/code&gt; and &lt;code&gt;choice&lt;/code&gt;. (You can override this behavior.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5b9ddf2dd81525ac5b0fb5fcd732fc5c174692" translate="yes" xml:space="preserve">
          <source>Tablespaces</source>
          <target state="translated">Tablespaces</target>
        </trans-unit>
        <trans-unit id="982963c1c41cbed8cab073724749592fe35c532b" translate="yes" xml:space="preserve">
          <source>Tag</source>
          <target state="translated">Tag</target>
        </trans-unit>
        <trans-unit id="f7fe4cb5179d77ce0ec4f4db1fa1fab652691e69" translate="yes" xml:space="preserve">
          <source>Tagging tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848eed0fbd5429f556b2982dec3ea87136e33e44" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="translated">Tags</target>
        </trans-unit>
        <trans-unit id="7c3bfddeb3549c2531c880fed0b852bebd802527" translate="yes" xml:space="preserve">
          <source>Tags and filters from built-in libraries can be used without first calling the &lt;a href=&quot;../ref/templates/builtins#std:templatetag-load&quot;&gt;&lt;code&gt;{% load %}&lt;/code&gt;&lt;/a&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4d3be07ce9fd4a171e28067e2660cb089ff5e5" translate="yes" xml:space="preserve">
          <source>Tags and filters from built-in libraries can be used without first calling the &lt;a href=&quot;builtins#std:templatetag-load&quot;&gt;&lt;code&gt;{% load %}&lt;/code&gt;&lt;/a&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf8e113e4c51396f927e3d31dbb96dcc5b9ef76" translate="yes" xml:space="preserve">
          <source>Tags are more complex than filters, because tags can do anything. Django provides a number of shortcuts that make writing most types of tags easier. First we&amp;rsquo;ll explore those shortcuts, then explain how to write a tag from scratch for those cases when the shortcuts aren&amp;rsquo;t powerful enough.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1e439784d27f3c08c2bef976fea5a0afd4e4da" translate="yes" xml:space="preserve">
          <source>Tags are surrounded by &lt;code&gt;{%&lt;/code&gt; and &lt;code&gt;%}&lt;/code&gt; like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5d91c5febf69739b24c08f67bad4993c7c13d0" translate="yes" xml:space="preserve">
          <source>Tags look like this: &lt;code&gt;{% tag %}&lt;/code&gt;. Tags are more complex than variables: Some create text in the output, some control flow by performing loops or logic, and some load external information into the template to be used by later variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc90860252a4e1f64d21cd685b1c5f06893b7a4b" translate="yes" xml:space="preserve">
          <source>Tags provide arbitrary logic in the rendering process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65d13c8fdc902282ebd08b7480b7e90e1642741" translate="yes" xml:space="preserve">
          <source>Take a look at &lt;a href=&quot;https://virtualenv.pypa.io/&quot;&gt;virtualenv&lt;/a&gt; and &lt;a href=&quot;https://virtualenvwrapper.readthedocs.io/en/latest/&quot;&gt;virtualenvwrapper&lt;/a&gt;. These tools provide isolated Python environments, which are more practical than installing packages systemwide. They also allow installing packages without administrator privileges. The &lt;a href=&quot;../intro/contributing&quot;&gt;contributing tutorial&lt;/a&gt; walks through how to create a virtualenv.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4faec5f0e219f4fc22e2e2f7caf14dc2730bd45" translate="yes" xml:space="preserve">
          <source>Take a look at the Open Web Application Security Project (OWASP) &lt;a href=&quot;https://www.owasp.org/index.php/Top_10-2017_Top_10&quot;&gt;Top 10 list&lt;/a&gt; which identifies some common vulnerabilities in web applications. While Django has tools to address some of the issues, other issues must be accounted for in the design of your project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6294a1321c911bfb38483cba894223ac9e435c" translate="yes" xml:space="preserve">
          <source>Take a look in your browser, at &amp;ldquo;/polls/34/&amp;rdquo;. It&amp;rsquo;ll run the &lt;code&gt;detail()&lt;/code&gt; method and display whatever ID you provide in the URL. Try &amp;ldquo;/polls/34/results/&amp;rdquo; and &amp;ldquo;/polls/34/vote/&amp;rdquo; too &amp;ndash; these will display the placeholder results and voting pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d019029719dc60edf4660a8b6eb87c5b5912ddf" translate="yes" xml:space="preserve">
          <source>Take care with any &lt;a href=&quot;../ref/models/fields#file-upload-security&quot;&gt;user uploaded files&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191fc7c119ac28233aad3cc77d7c63f0416f8009" translate="yes" xml:space="preserve">
          <source>Take no action. If your database backend enforces referential integrity, this will cause an &lt;a href=&quot;../exceptions#django.db.IntegrityError&quot;&gt;&lt;code&gt;IntegrityError&lt;/code&gt;&lt;/a&gt; unless you manually add an SQL &lt;code&gt;ON DELETE&lt;/code&gt; constraint to the database field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66262efd388801bee844148c0ce1d9b7a3e60b3" translate="yes" xml:space="preserve">
          <source>Take the following examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94d65a923911eebf16ede6b0fef0fa3840270cd" translate="yes" xml:space="preserve">
          <source>Taken together, these views provide interfaces to perform the most common tasks developers encounter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe10636e4e70a5eb624d50bcf55958f7401fe06" translate="yes" xml:space="preserve">
          <source>Takes &lt;code&gt;request&lt;/code&gt; as its first positional argument, which is stored on the form instance for use by sub-classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf8f600e1883c0bd723b884b10c6801c5305d85" translate="yes" xml:space="preserve">
          <source>Takes a URI in ASCII bytes and returns a string containing the encoded result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c05e38a3969bc67faad8c6d523e7e1f9e517f3" translate="yes" xml:space="preserve">
          <source>Takes a list of dictionaries and returns that list sorted by the key given in the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fcc46eddee03c18098e6d160eca2f8008c60b1a" translate="yes" xml:space="preserve">
          <source>Takes a list of dictionaries and returns that list sorted in reverse order by the key given in the argument. This works exactly the same as the above filter, but the returned value will be in reverse order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fbbaede70e8d2c6ed298781e7dad342da2445f6" translate="yes" xml:space="preserve">
          <source>Takes a list of expressions and stores them such that &lt;code&gt;get_source_expressions()&lt;/code&gt; can return them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0772fc4149778cd71fa4898784aa9e5cf303f431" translate="yes" xml:space="preserve">
          <source>Takes a list of field values (&lt;code&gt;id_list&lt;/code&gt;) and the &lt;code&gt;field_name&lt;/code&gt; for those values, and returns a dictionary mapping each value to an instance of the object with the given field value. If &lt;code&gt;id_list&lt;/code&gt; isn&amp;rsquo;t provided, all objects in the queryset are returned. &lt;code&gt;field_name&lt;/code&gt; must be a unique field, and it defaults to the primary key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d008c0090616a0ba91686c3c083c7576d94eac1" translate="yes" xml:space="preserve">
          <source>Takes a list of valid values and returns a &amp;ldquo;compressed&amp;rdquo; version of those values &amp;ndash; in a single value. For example, &lt;a href=&quot;#django.forms.SplitDateTimeField&quot;&gt;&lt;code&gt;SplitDateTimeField&lt;/code&gt;&lt;/a&gt; is a subclass which combines a time field and a date field into a &lt;code&gt;datetime&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7419d8c59a8aced5be5a7d4acd033a9525bd7452" translate="yes" xml:space="preserve">
          <source>Takes a raw SQL query, executes it, and returns a &lt;code&gt;django.db.models.query.RawQuerySet&lt;/code&gt; instance. This &lt;code&gt;RawQuerySet&lt;/code&gt; instance can be iterated over just like a normal &lt;code&gt;QuerySet&lt;/code&gt; to provide object instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d019ff8451d64f492cbb17f3d499a07d7b1d22" translate="yes" xml:space="preserve">
          <source>Takes a set of valid &lt;a href=&quot;../../topics/db/queries#field-lookups-intro&quot;&gt;lookup arguments&lt;/a&gt; for the model the &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; represents, and does &lt;a href=&quot;../models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;a get() lookup&lt;/code&gt;&lt;/a&gt; on that model, returning the corresponding object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c142e1735e7935ff6dddc231c2aafe4d90365183" translate="yes" xml:space="preserve">
          <source>Takes a single &amp;ldquo;compressed&amp;rdquo; value of a field, for example a &lt;a href=&quot;fields#django.contrib.postgres.fields.DateRangeField&quot;&gt;&lt;code&gt;DateRangeField&lt;/code&gt;&lt;/a&gt;, and returns a tuple representing and lower and upper bound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ed7078b176cb4bea35270c3a1eefa335556b3b" translate="yes" xml:space="preserve">
          <source>Takes a variadic number of model classes, and returns a dictionary mapping the model classes to the &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; instances representing them. &lt;code&gt;for_concrete_models=False&lt;/code&gt; allows fetching the &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; of proxy models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505a3fd6681ea65d8ffba8c7322b5d052e91991a" translate="yes" xml:space="preserve">
          <source>Takes an &lt;code&gt;expression&lt;/code&gt; representing a &lt;code&gt;DateField&lt;/code&gt;, &lt;code&gt;DateTimeField&lt;/code&gt;, &lt;code&gt;TimeField&lt;/code&gt;, or &lt;code&gt;DurationField&lt;/code&gt; and a &lt;code&gt;lookup_name&lt;/code&gt;, and returns the part of the date referenced by &lt;code&gt;lookup_name&lt;/code&gt; as an &lt;code&gt;IntegerField&lt;/code&gt;. Django usually uses the databases&amp;rsquo; extract function, so you may use any &lt;code&gt;lookup_name&lt;/code&gt; that your database supports. A &lt;code&gt;tzinfo&lt;/code&gt; subclass, usually provided by &lt;code&gt;pytz&lt;/code&gt;, can be passed to extract a value in a specific timezone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245870f1389bd9da9e034ecec14be4f9d3c4cf6a" translate="yes" xml:space="preserve">
          <source>Takes an IRI (string or UTF-8 bytes) and returns a string containing the encoded result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3004275b133f125d6531613f3f026744487bbf" translate="yes" xml:space="preserve">
          <source>Takes an instance of &lt;a href=&quot;#django.forms.Form&quot;&gt;&lt;code&gt;Form&lt;/code&gt;&lt;/a&gt; and the name of the field. The return value will be used when accessing the field in a template. Most likely it will be an instance of a subclass of &lt;a href=&quot;#django.forms.BoundField&quot;&gt;&lt;code&gt;BoundField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6380a827a9d575613b46bbcee1f6db0a03fb1a" translate="yes" xml:space="preserve">
          <source>Takes an integer value representing the day of week from 1 (Sunday) to 7 (Saturday).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0069ac37a50df7f0a013b4b27a33abe9a00e60" translate="yes" xml:space="preserve">
          <source>Takes an optional argument that is a variable containing the date to use as the comparison point (instead of &lt;em&gt;now&lt;/em&gt;). If &lt;code&gt;from_date&lt;/code&gt; contains 22 June 2006, then the following will return &amp;ldquo;1 week&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cef8bba1ccc6cbfd938895cba722338e9153756" translate="yes" xml:space="preserve">
          <source>Takes an optional argument that is a variable containing the date to use as the comparison point (without the argument, the comparison point is &lt;em&gt;now&lt;/em&gt;). For example, if &lt;code&gt;blog_date&lt;/code&gt; is a date instance representing midnight on 1 June 2006, and &lt;code&gt;comment_date&lt;/code&gt; is a date instance for 08:00 on 1 June 2006, then the following would return &amp;ldquo;8 hours&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ed1c0e05d4f8f576e6b5df26f1a3950f9494fa" translate="yes" xml:space="preserve">
          <source>Takes an optional parameter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a62fc3414ff9705f2873fea34271b19b2b102ad" translate="yes" xml:space="preserve">
          <source>Takes either &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;, which correspond to SQL queries of &lt;code&gt;IS NULL&lt;/code&gt; and &lt;code&gt;IS NOT NULL&lt;/code&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bfbc1249983c45c2299b3046840a38d798bbcb5" translate="yes" xml:space="preserve">
          <source>Takes either a &lt;code&gt;QueryDict&lt;/code&gt; or a dictionary. Like &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict.update&quot;&gt;&lt;code&gt;dict.update()&lt;/code&gt;&lt;/a&gt;, except it &lt;em&gt;appends&lt;/em&gt; to the current dictionary items rather than replacing them. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7218393cd985e921c1c82534bbd52d1a6a83ffb9" translate="yes" xml:space="preserve">
          <source>Takes either a model class or an instance of a model, and returns the &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; instance representing that model. &lt;code&gt;for_concrete_model=False&lt;/code&gt; allows fetching the &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; of a proxy model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b3736f83090aa055c0337fb2baadaba089837e" translate="yes" xml:space="preserve">
          <source>Takes extra arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf8e0548f45c96f56b8769d4835546d28c82775" translate="yes" xml:space="preserve">
          <source>Takes four optional arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f14b8de543ac30132d25179d65b567705d0a76a" translate="yes" xml:space="preserve">
          <source>Takes one extra argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321aa30338bb8bf0f59c48270355b07b1053e09b" translate="yes" xml:space="preserve">
          <source>Takes one extra required argument, &lt;code&gt;choices&lt;/code&gt;, as for &lt;a href=&quot;#django.forms.ChoiceField&quot;&gt;&lt;code&gt;ChoiceField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650c7950ea6a2401c787901f18b8f2e94f374fb7" translate="yes" xml:space="preserve">
          <source>Takes one extra required argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f66680d9d77c696dd1378c37850e0576e4aa67" translate="yes" xml:space="preserve">
          <source>Takes one optional argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5f3b3f2b6ea232f73220192ff4ff00fce37a45" translate="yes" xml:space="preserve">
          <source>Takes one required argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04daa827f5193f9b9854fa1f430af5c42f31c427" translate="yes" xml:space="preserve">
          <source>Takes same arguments as &lt;a href=&quot;#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;, with one more optional argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0656ede68eb556db5d234f7a75a23d80bdfb1091" translate="yes" xml:space="preserve">
          <source>Takes several optional arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be25f7140cc5d2a971e13110785f791f9f70df3" translate="yes" xml:space="preserve">
          <source>Takes the &lt;code&gt;user&lt;/code&gt; as the first positional argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5424a9095c6735126a0b7bf4ef95f3655b2e02" translate="yes" xml:space="preserve">
          <source>Takes the following optional arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63ba5f2f2be04d40eb23c4f4113adb89498890b" translate="yes" xml:space="preserve">
          <source>Takes the object returned by &lt;code&gt;get_object()&lt;/code&gt; and returns the &lt;em&gt;feed&amp;rsquo;s&lt;/em&gt; geometry. Typically this is a &lt;code&gt;GEOSGeometry&lt;/code&gt; instance, or can be a tuple to represent a point or a box. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbdc2eaefea783dd7d355fbfaaec35b90ed521b1" translate="yes" xml:space="preserve">
          <source>Takes two extra arguments, &lt;code&gt;coerce&lt;/code&gt; and &lt;code&gt;empty_value&lt;/code&gt;, as for &lt;a href=&quot;#django.forms.TypedChoiceField&quot;&gt;&lt;code&gt;TypedChoiceField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e9b2e3c0b8b7c322151289fa866294c36904c47" translate="yes" xml:space="preserve">
          <source>Takes two optional arguments for validation, &lt;code&gt;max_value&lt;/code&gt; and &lt;code&gt;min_value&lt;/code&gt;. These control the range of values permitted in the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100c4e7181d3c6b555d4f733684d380b0f1ebdb8" translate="yes" xml:space="preserve">
          <source>Takes two optional arguments for validation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d66a9e2de3cdba016edc3d652c9fef0578a91f9" translate="yes" xml:space="preserve">
          <source>Takes two optional arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d3062aaa21504f429afb4b4225dbbf3f7da854" translate="yes" xml:space="preserve">
          <source>Takes two required arguments: &lt;code&gt;name&lt;/code&gt; which is the name of the file, and &lt;code&gt;content&lt;/code&gt; which is an object containing the file&amp;rsquo;s contents. The optional &lt;code&gt;save&lt;/code&gt; argument controls whether or not the model instance is saved after the file associated with this field has been altered. Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a112afd1dc67ec8b3ed4ddfd9176d3e694f6b6" translate="yes" xml:space="preserve">
          <source>Taking PBKDF2 as example, if &lt;code&gt;encoded&lt;/code&gt; contains 20,000 iterations and the hasher&amp;rsquo;s default &lt;code&gt;iterations&lt;/code&gt; is 30,000, the method should run &lt;code&gt;password&lt;/code&gt; through another 10,000 iterations of PBKDF2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d778426248899286cd4912493a7e582a2d9607" translate="yes" xml:space="preserve">
          <source>Taking a closer look at the implementation, the first required attribute is &lt;code&gt;lookup_name&lt;/code&gt;. This allows the ORM to understand how to interpret &lt;code&gt;name__ne&lt;/code&gt; and use &lt;code&gt;NotEqual&lt;/code&gt; to generate the SQL. By convention, these names are always lowercase strings containing only letters, but the only hard requirement is that it must not contain the string &lt;code&gt;__&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2e85de9cb4375cec8e7adc7a55781656f283ab" translate="yes" xml:space="preserve">
          <source>Taking care in &lt;code&gt;get_absolute_url()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73047412313ab9e8d476860fb3b307189c059c83" translate="yes" xml:space="preserve">
          <source>Technical Information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be37be90bfccb09eab627d2a5d3f9b1c85287e5" translate="yes" xml:space="preserve">
          <source>Technical details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f71867f00e589bc7de57848f25b9a00414170a" translate="yes" xml:space="preserve">
          <source>Technicality</source>
          <target state="translated">Technicality</target>
        </trans-unit>
        <trans-unit id="e0a1c8bb9b89f4d9041bc74b2adb1607502e6b3b" translate="yes" xml:space="preserve">
          <source>Technically, it isn&amp;rsquo;t correct to say that &lt;code&gt;iri_to_uri()&lt;/code&gt; implements the full algorithm in the IRI specification. It doesn&amp;rsquo;t (yet) perform the international domain name encoding portion of the algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de6a3d17023f841806590b868af528694e6e5d8" translate="yes" xml:space="preserve">
          <source>Technically, these models are defined in &lt;a href=&quot;#module-django.db.models.fields&quot;&gt;&lt;code&gt;django.db.models.fields&lt;/code&gt;&lt;/a&gt;, but for convenience they&amp;rsquo;re imported into &lt;a href=&quot;../../topics/db/models#module-django.db.models&quot;&gt;&lt;code&gt;django.db.models&lt;/code&gt;&lt;/a&gt;; the standard convention is to use &lt;code&gt;from django.db import models&lt;/code&gt; and refer to fields as &lt;code&gt;models.&amp;lt;Foo&amp;gt;Field&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74376d78871f7f5ba72b35fbe8f98e3c1307a3e2" translate="yes" xml:space="preserve">
          <source>Technically, these variables are only made available in the template context if you use &lt;a href=&quot;../../ref/templates/api#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt; and the &lt;code&gt;'django.contrib.auth.context_processors.auth'&lt;/code&gt; context processor is enabled. It is in the default generated settings file. For more, see the &lt;a href=&quot;../../ref/templates/api#subclassing-context-requestcontext&quot;&gt;RequestContext docs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383b13c1ac0b179247b0ee1a75193a5051b04366" translate="yes" xml:space="preserve">
          <source>Technically, when the template system encounters a dot, it tries the following lookups, in this order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fbae78ab80347d0c18f97d10a3ab53bee66425" translate="yes" xml:space="preserve">
          <source>Tell Django what your template directories are by using the &lt;a href=&quot;../settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt; option in the &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting in your settings file &amp;mdash; or the &lt;code&gt;dirs&lt;/code&gt; argument of &lt;a href=&quot;#django.template.Engine&quot;&gt;&lt;code&gt;Engine&lt;/code&gt;&lt;/a&gt;. This should be set to a list of strings that contain full paths to your template directories:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12617a938f0ea192637de7a721d7781bb1f0197d" translate="yes" xml:space="preserve">
          <source>Telling the browser to treat the response as a file attachment</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
