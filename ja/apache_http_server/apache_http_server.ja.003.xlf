<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="apache_http_server">
    <body>
      <group id="apache_http_server">
        <trans-unit id="e2e3bb3b906f7a8b4fb3724c57a62ee498f322cd" translate="yes" xml:space="preserve">
          <source>For more information about this technique, see the &quot;&lt;a href=&quot;http://www.serverwatch.com/tutorials/article.php/1132731&quot;&gt;Keeping Your Images from Adorning Other Sites&lt;/a&gt;&quot; tutorial on ServerWatch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d48f5bd7f28ed7bff0e2055801b87fd436618ed8" translate="yes" xml:space="preserve">
          <source>For more information on &lt;code&gt;.htaccess&lt;/code&gt; files, see the &lt;a href=&quot;howto/htaccess&quot;&gt;.htaccess tutorial&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="667de674d924e75f9af293041f7a08c6e96cf551" translate="yes" xml:space="preserve">
          <source>For more information on these and other MPMs, please see the MPM &lt;a href=&quot;../mpm&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd635e02dd4bc26c7e0dc581a9fe0ed9afe4bde5" translate="yes" xml:space="preserve">
          <source>For more information, see our &lt;a href=&quot;../howto/ssi&quot;&gt;Tutorial on Server Side Includes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6acc44fd96ca754b201d128e6d3e8e26c32e7410" translate="yes" xml:space="preserve">
          <source>For network mounted files, this feature may be disabled explicitly for the offending files by specifying:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b8c3a368f47578aebe905f0a6c7bccfced09b9" translate="yes" xml:space="preserve">
          <source>For performance reasons, the reference time used by this directive is based on when the LDAP connection is returned to the pool, not the time of the last successful I/O with the LDAP server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36dcfe8b38b098d8587d9d5bd2147d72b26386c2" translate="yes" xml:space="preserve">
          <source>For portability reasons, the names of environment variables may contain only letters, numbers, and the underscore character. In addition, the first character may not be a number. Characters which do not match this restriction will be replaced by an underscore when passed to CGI scripts and SSI pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac81c308f7b1c3c3955c795199dcd4ce9658e598" translate="yes" xml:space="preserve">
          <source>For regular ldap, use the string &lt;code&gt;ldap&lt;/code&gt;. For secure LDAP, use &lt;code&gt;ldaps&lt;/code&gt; instead. Secure LDAP is only available if Apache was linked to an LDAP library with SSL support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f06a28ebf26824cf7256d5eaf62229afa1d049" translate="yes" xml:space="preserve">
          <source>For requests which come from a HTTP/1.0 compliant client (either a browser or a cache), the directive &lt;code&gt;&lt;a href=&quot;mod/mod_negotiation#cachenegotiateddocs&quot;&gt;CacheNegotiatedDocs&lt;/a&gt;&lt;/code&gt; can be used to allow caching of responses which were subject to negotiation. This directive can be given in the server config or virtual host, and takes no arguments. It has no effect on requests from HTTP/1.1 clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d92dfbb14f4b6dd51980ccc16a91e630feb550" translate="yes" xml:space="preserve">
          <source>For security and performance reasons, do not set &lt;code&gt;AllowOverride&lt;/code&gt; to anything other than &lt;code&gt;None&lt;/code&gt; in your &lt;code&gt;&amp;lt;Directory &quot;/&quot;&amp;gt;&lt;/code&gt; block. Instead, find (or create) the &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; block that refers to the directory where you're actually planning to place a &lt;code&gt;.htaccess&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4529718dac291e2b7c9e24439a6e4183f8f10f" translate="yes" xml:space="preserve">
          <source>For security reasons, starting with version 2.0.46, non-printable and other special characters in &lt;code&gt;%r&lt;/code&gt;, &lt;code&gt;%i&lt;/code&gt; and &lt;code&gt;%o&lt;/code&gt; are escaped using &lt;code&gt;\xhh&lt;/code&gt; sequences, where &lt;var&gt;hh&lt;/var&gt; stands for the hexadecimal representation of the raw byte. Exceptions from this rule are &lt;code&gt;&quot;&lt;/code&gt; and &lt;code&gt;\&lt;/code&gt;, which are escaped by prepending a backslash, and all whitespace characters, which are written in their C-style notation (&lt;code&gt;\n&lt;/code&gt;, &lt;code&gt;\t&lt;/code&gt;, etc). In versions prior to 2.0.46, no escaping was performed on these strings so you had to be quite careful when dealing with raw log files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5004066165f1a376f6e2c28f5198fbb3d072d93" translate="yes" xml:space="preserve">
          <source>For server configurations that are not vulnerable to these problems, you may enable this feature by specifying:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2209507b746dfae0d660555e1cc0236f4a16d1b6" translate="yes" xml:space="preserve">
          <source>For server configurations that are vulnerable to these problems, you should disable memory-mapping of delivered files by specifying:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48370941b847f8648c1ba68d7723181a960534a1" translate="yes" xml:space="preserve">
          <source>For some of the support scripts like &lt;code&gt;&lt;a href=&quot;programs/apxs&quot;&gt;apxs&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;programs/dbmmanage&quot;&gt;dbmmanage&lt;/a&gt;&lt;/code&gt; (which are written in Perl) the Perl 5 interpreter is required (versions 5.003 or newer are sufficient). If no Perl 5 interpreter is found by the &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; script, you will not be able to use the affected support scripts. Of course, you will still be able to build and use Apache httpd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062f9a2f4c8490e2eb469390b89104795b9f69c1" translate="yes" xml:space="preserve">
          <source>For the URL &lt;code&gt;http://example.com/~rbowen/file.html&lt;/code&gt;, Apache will search for &lt;code&gt;~rbowen&lt;/code&gt;. If it isn't found, Apache will search for &lt;code&gt;rbowen&lt;/code&gt; in &lt;code&gt;/var/html&lt;/code&gt;. If found, the above URL will then be translated to the file path &lt;code&gt;/var/html/rbowen/file.html&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff84fa5a64547a01cf223ee8632a90d53a283f4" translate="yes" xml:space="preserve">
          <source>For the access log, there is a very good compromise. By adding information on the virtual host to the log format string, it is possible to log all hosts to the same log, and later split the log into individual files. For example, consider the following directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb370346b692d1a7e68c09475907aa42a832cd4" translate="yes" xml:space="preserve">
          <source>For the most part, Apache implements this in a function called &lt;code&gt;lingering_close&lt;/code&gt; (in &lt;code&gt;http_main.c&lt;/code&gt;). The function looks roughly like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae5fdf8e60e77fdfab052d9169f682af092b023" translate="yes" xml:space="preserve">
          <source>For this reason we have found that many architectures behave more &quot;nicely&quot; if we serialize even the single socket case. So this is actually the default in almost all cases. Crude experiments under Linux (2.0.30 on a dual Pentium pro 166 w/128Mb RAM) have shown that the serialization of the single socket case causes less than a 3% decrease in requests per second over unserialized single-socket. But unserialized single-socket showed an extra 100ms latency on each request. This latency is probably a wash on long haul lines, and only an issue on LANs. If you want to override the single socket serialization, you can define &lt;code&gt;SINGLE_LISTEN_UNSERIALIZED_ACCEPT&lt;/code&gt;, and then single-socket servers will not serialize at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4348caf1a0ab1c4c615cc34846c5d6fa4b7968" translate="yes" xml:space="preserve">
          <source>For this reason, when two or more of these directives apply to the same sub-path, you must list the most specific path first in order for all the directives to have an effect. For example, the following configuration will work as expected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ff0e6559dc13b568795c48f740cce9984baa82" translate="yes" xml:space="preserve">
          <source>For those new to hooks, basically each hook will be invoked until one of them returns apache2.OK. If your hook doesn't want to do the translation it should just return apache2.DECLINED. If the request should stop processing, then return apache2.DONE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531b123cbd9eb8b5f1d6197ad8a65691d49d3371" translate="yes" xml:space="preserve">
          <source>For versions 2.4.23 and prior, the Windows &lt;code&gt;data&lt;/code&gt; accept filter waited until data had been transmitted and the initial data buffer and network endpoint addresses had been retrieved from the single AcceptEx() invocation. This implementation was subject to a denial of service attack and has been disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1fae761c27bff2c696b9a1018d3fd9e19bd4b3" translate="yes" xml:space="preserve">
          <source>Force gracefully finishing processes to close their connections in keep-alive state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1a1357debd5c05e627cae8821f0d8e14bf99b6" translate="yes" xml:space="preserve">
          <source>Force server certificate verification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f06b7855fce4bb725bbcd6ea719fba6cab453e4" translate="yes" xml:space="preserve">
          <source>ForceLanguagePriority Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88e9d3deb68867d7a878a3ba53996d42c09ee9e" translate="yes" xml:space="preserve">
          <source>ForceType Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4024213fe7e46ecc87d3f9ed02092498fa67b83" translate="yes" xml:space="preserve">
          <source>Forces all matching files to be processed by a handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33a8c2a60fc548cce9aa3041309f504a84a9274" translate="yes" xml:space="preserve">
          <source>Forces all matching files to be served with the specified media type in the HTTP Content-Type header field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f03524670eab439f08e55dc3405db3e8e1bcee1" translate="yes" xml:space="preserve">
          <source>Forensic Log Format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5845b88e01aa38229a42882dee017a4b6418b587" translate="yes" xml:space="preserve">
          <source>Forensic Logging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e42e8d0e5244bb0f17e73bc6074545306dba456" translate="yes" xml:space="preserve">
          <source>Forensic Logging of the requests made to the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6204733a9bf9915945be0064f1258fcf9679a1bb" translate="yes" xml:space="preserve">
          <source>ForensicLog Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f60d26e31a2ec050be0aeb46a4d40cc5233e7f" translate="yes" xml:space="preserve">
          <source>Form authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a22f1d128f015784578d54bbca671d0a3aa9e1e" translate="yes" xml:space="preserve">
          <source>Form authentication depends on the &lt;code&gt;&lt;a href=&quot;mod_session&quot;&gt;mod_session&lt;/a&gt;&lt;/code&gt; modules, and these modules make use of HTTP cookies, and as such can fall victim to Cross Site Scripting attacks, or expose potentially private information to clients. Please ensure that the relevant risks have been taken into account before enabling the session functionality on your server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77d1dc7d73f2f6f6149652d480b97c29c27193b" translate="yes" xml:space="preserve">
          <source>Form login handler example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="885f1743f1d481c85ca73439893f1819c2556a19" translate="yes" xml:space="preserve">
          <source>Format Notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150d9f841097f64a42b925806fe3290abd9bc35d" translate="yes" xml:space="preserve">
          <source>Format String</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17a7285a039b3e6a2f8c61adf07c5f7c5b9b6ab" translate="yes" xml:space="preserve">
          <source>Format of the Magic File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83633ad6eb3816a4888dcc6191d24221a181818" translate="yes" xml:space="preserve">
          <source>Format specification for error log entries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e2a4c58972ae9a7637fab286ece625d040c919b" translate="yes" xml:space="preserve">
          <source>Fragment size to be compressed at one time by zlib</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b6b8cd2cca46e7ec05de53035c0ab5505ef3f9" translate="yes" xml:space="preserve">
          <source>FreeTDS (for MSSQL and SyBase)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d790b402d79ac1a723c790313bcd679999474630" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f65d3258c00dabad5c37b8eb74ce4ce4a3a9b10b" translate="yes" xml:space="preserve">
          <source>Fresh</source>
          <target state="translated">Fresh</target>
        </trans-unit>
        <trans-unit id="9dc3dc46b1e8ca5d66f859fa327a953c232edcf1" translate="yes" xml:space="preserve">
          <source>Freshness Lifetime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7c2931346ae93352d7ce9bb723cf7921f8afef" translate="yes" xml:space="preserve">
          <source>From 2.4.13, &lt;a href=&quot;../expr&quot;&gt;expression syntax&lt;/a&gt; can be used inside the directive to produce dynamic strings and URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa44558ef5d4838385db6a77f3567aba213a48c" translate="yes" xml:space="preserve">
          <source>From 2.4.24 onward, mpm-event is smarter and it is able to handle graceful terminations in a much better way. Some of the improvements are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3d36785c5165c659a55cc15cada7b1f4acde64" translate="yes" xml:space="preserve">
          <source>From 2.4.8 onwards, named groups and backreferences are captured and written to the environment with the corresponding name prefixed with &quot;MATCH_&quot; and in upper case. This allows elements of URLs to be referenced from within &lt;a href=&quot;../expr&quot;&gt;expressions&lt;/a&gt; and modules like &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;. In order to prevent confusion, numbered (unnamed) backreferences are ignored. Use named groups instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2995958594c3a9361565a9536dde5012eab65f15" translate="yes" xml:space="preserve">
          <source>From 2.4.8 onwards, named groups and backreferences are captured and written to the environment with the corresponding name prefixed with &quot;MATCH_&quot; and in upper case. This allows elements of files to be referenced from within &lt;a href=&quot;../expr&quot;&gt;expressions&lt;/a&gt; and modules like &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;. In order to prevent confusion, numbered (unnamed) backreferences are ignored. Use named groups instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a894b686efa31d975bb6c77a045212a9d08d808" translate="yes" xml:space="preserve">
          <source>From 2.4.8 onwards, named groups and backreferences are captured and written to the environment with the corresponding name prefixed with &quot;MATCH_&quot; and in upper case. This allows elements of paths to be referenced from within &lt;a href=&quot;../expr&quot;&gt;expressions&lt;/a&gt; and modules like &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;. In order to prevent confusion, numbered (unnamed) backreferences are ignored. Use named groups instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55859a723b880df9e5bb635a9aa1505555adb06e" translate="yes" xml:space="preserve">
          <source>FrontPage restricts access to a web by adding the &lt;code&gt;Require valid-user&lt;/code&gt; directive to the &lt;code&gt;.htaccess&lt;/code&gt; files. The &lt;code&gt;Require valid-user&lt;/code&gt; directive will succeed for any user who is valid &lt;em&gt;as far as LDAP is concerned&lt;/em&gt;. This means that anybody who has an entry in the LDAP directory is considered a valid user, whereas FrontPage considers only those people in the local user file to be valid. By substituting the ldap-group with group file authorization, Apache is allowed to consult the local user file (which is managed by FrontPage) - instead of LDAP - when handling authorizing the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6cd73dd0789e6b2b20e0ddf99f41e8fda3798d9" translate="yes" xml:space="preserve">
          <source>Full Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca270de3a865e1f75b0322abaecec903212ac1d" translate="yes" xml:space="preserve">
          <source>Full details of how HTTP caching works can be found in &lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html&quot;&gt; Section 13 of RFC2616&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb014ff5ae37dc3096361ae2f48329648ceb4f94" translate="yes" xml:space="preserve">
          <source>Function calls use the %{funcname:arg} syntax rather than funcname(arg).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="f3a997c4d9ffd341d5aa58170cf80df42e39009b" translate="yes" xml:space="preserve">
          <source>Functions have been changed to get their parameters from the server configuration instead of globals. (It should be reentrant now but has not been tested in a threaded environment.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dea678fbdd1aa2286bd760c653a93f5cccfec80" translate="yes" xml:space="preserve">
          <source>Further details, discussion, and examples, are provided in the &lt;a href=&quot;../caching&quot;&gt;Caching Guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b28c33e67dde338c8ee52fcdb83713e3082153" translate="yes" xml:space="preserve">
          <source>Further note that httpd must look for &lt;code&gt;.htaccess&lt;/code&gt; files in all higher-level directories, in order to have a full complement of directives that it must apply. (See section on &lt;a href=&quot;#how&quot;&gt;how directives are applied&lt;/a&gt;.) Thus, if a file is requested out of a directory &lt;code&gt;/www/htdocs/example&lt;/code&gt;, httpd must look for the following files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94f6b7a1a0a204a6a8c481e1d6ef8fd7a4b87ad" translate="yes" xml:space="preserve">
          <source>GET /disk1/storage/apache/htdocs/images/imagestore1/food/apples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4b4cb0f5bcaea7d2c4e8a5b62ec0e67d77f1fd" translate="yes" xml:space="preserve">
          <source>General Two-state Key/Value Shared Object Caching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="334eed7963ae7b8d299f0bf99c641e21efbf1cd8" translate="yes" xml:space="preserve">
          <source>General caveats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82236c350a88a6f0b9f42367e06b8e67b2219509" translate="yes" xml:space="preserve">
          <source>General messages for debugging are logged at log level &lt;code&gt;debug&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1025fb5fe15b15fd432ad531c2ad098b68fc6585" translate="yes" xml:space="preserve">
          <source>Generally speaking, the &lt;code&gt;thread&lt;/code&gt; and &lt;code&gt;server&lt;/code&gt; scopes execute roughly 2-3 times faster than the rest, because they don't have to spawn new Lua states on every request (especially with the event MPM, as even keepalive requests will use a new thread for each request). If you are satisfied that your scripts will not have problems reusing a state, then the &lt;code&gt;thread&lt;/code&gt; or &lt;code&gt;server&lt;/code&gt; scopes should be used for maximum performance. While the &lt;code&gt;thread&lt;/code&gt; scope will provide the fastest responses, the &lt;code&gt;server&lt;/code&gt; scope will use less memory, as states are pooled, allowing f.x. 1000 threads to share only 100 Lua states, thus using only 10% of the memory required by the &lt;code&gt;thread&lt;/code&gt; scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd3d3e48e878273f0cabd1850ed6c56ca16a8cc" translate="yes" xml:space="preserve">
          <source>Generate a search filter by combining the attribute and filter provided in the &lt;code&gt;&lt;a href=&quot;#authldapurl&quot;&gt;AuthLDAPURL&lt;/a&gt;&lt;/code&gt; directive with the username passed by the HTTP client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134879e285e62a0d0ae0fc53c7771a3957b79836" translate="yes" xml:space="preserve">
          <source>Generates directory indexes, automatically, similar to the Unix &lt;code&gt;ls&lt;/code&gt; command or the Win32 &lt;code&gt;dir&lt;/code&gt; shell command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d54bd5f3cc5341b969c0009a2a25c168cb9fe9e" translate="yes" xml:space="preserve">
          <source>Generating CRYPT and MD5 values with the OpenSSL command-line program</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e421ff19589a366fce13b73605dacb641594e5bc" translate="yes" xml:space="preserve">
          <source>Generating HTML from some other type of response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c671ed9410a7e898c49518cd6b040abc8a9e509" translate="yes" xml:space="preserve">
          <source>Generating values with htpasswd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3be9a8b149f90e5a9de9e9bf065fa7ce8e5923b" translate="yes" xml:space="preserve">
          <source>Generation of &lt;code&gt;Expires&lt;/code&gt; and &lt;code&gt;Cache-Control&lt;/code&gt; HTTP headers according to user-specified criteria</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103143106ddff939886aa0ce52bc2a44172208a8" translate="yes" xml:space="preserve">
          <source>Generic locking module for &lt;code&gt;&lt;a href=&quot;mod_dav&quot;&gt;mod_dav&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d385ec7f12ba388d89e709e0a3a05a505ecb10" translate="yes" xml:space="preserve">
          <source>Get HTTP request header; header names may be added to the Vary header, see below</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46de131d6d40af574b379eb74be20da91b35d5e" translate="yes" xml:space="preserve">
          <source>Get HTTP response header (most response headers will not yet be set during &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b0001e8cc4b49e9cec7fb29bfd6f632916f62a" translate="yes" xml:space="preserve">
          <source>Get debug/diagnostic information from &lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a55f148020a72590ea8fdc7f8e0112cc724e02" translate="yes" xml:space="preserve">
          <source>Getting it working</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a184e14123b4c47918290961b1852de998194094" translate="yes" xml:space="preserve">
          <source>GlobalLog Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7427cf697be16a4ec1d916910128a59d920125e7" translate="yes" xml:space="preserve">
          <source>Glossary</source>
          <target state="translated">Glossary</target>
        </trans-unit>
        <trans-unit id="c5e2db4f8135a34d21854051cc9c882412cd0d97" translate="yes" xml:space="preserve">
          <source>GprofDir Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20d4f2bf8af7fd0d7677962632a8188ac78eb09" translate="yes" xml:space="preserve">
          <source>Graceful process termination and Scoreboard usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6badfed1d328f5fd2521d4c2fec899d120bd974" translate="yes" xml:space="preserve">
          <source>Grammar in Backus-Naur Form notation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8198bf13e79b5735c040eb1bdf324b995b75bd" translate="yes" xml:space="preserve">
          <source>Grant access if there is a &lt;a href=&quot;#reqattribute&quot;&gt; &lt;code&gt;Require ldap-attribute&lt;/code&gt;&lt;/a&gt; directive, and the attribute fetched from the LDAP directory matches the given value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="958c2e526671cd06c3ae02a0702aeeec307cb6fe" translate="yes" xml:space="preserve">
          <source>Grant access if there is a &lt;a href=&quot;#reqdn&quot;&gt;&lt;code&gt;Require ldap-dn&lt;/code&gt;&lt;/a&gt; directive, and the DN in the directive matches the DN fetched from the LDAP directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46cd8df719058d020ae99f9d4396c504f33fdad7" translate="yes" xml:space="preserve">
          <source>Grant access if there is a &lt;a href=&quot;#reqfilter&quot;&gt; &lt;code&gt;Require ldap-filter&lt;/code&gt;&lt;/a&gt; directive, and the search filter successfully finds a single user object that matches the dn of the authenticated user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a6993d503991be2fb2ceb8ccdf31cd3f9ce8a1" translate="yes" xml:space="preserve">
          <source>Grant access if there is a &lt;a href=&quot;#reqgroup&quot;&gt;&lt;code&gt;Require group&lt;/code&gt;&lt;/a&gt; directive, and &lt;code&gt;&lt;a href=&quot;mod_authz_groupfile&quot;&gt;mod_authz_groupfile&lt;/a&gt;&lt;/code&gt; has been loaded with the &lt;code&gt;&lt;a href=&quot;mod_authz_groupfile#authgroupfile&quot;&gt;AuthGroupFile&lt;/a&gt;&lt;/code&gt; directive set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a089fa18726010712cb3e48d8189b3c34267eca0" translate="yes" xml:space="preserve">
          <source>Grant access if there is a &lt;a href=&quot;#reqgroup&quot;&gt;&lt;code&gt;Require ldap-group&lt;/code&gt;&lt;/a&gt; directive, and the DN fetched from the LDAP directory (or the username passed by the client) occurs in the LDAP group or, potentially, in one of its sub-groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522f866bc351c08bc54ebbf19f2146f42c895b60" translate="yes" xml:space="preserve">
          <source>Grant access if there is a &lt;a href=&quot;#reqgroup&quot;&gt;&lt;code&gt;Require ldap-user&lt;/code&gt;&lt;/a&gt; directive, and the username in the directive matches the username passed by the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0fa319419fc7243b95880a7a7f2adcfed8001ba" translate="yes" xml:space="preserve">
          <source>Grant access to all successfully authenticated users if there is a &lt;a href=&quot;#requser&quot;&gt;&lt;code&gt;Require valid-user&lt;/code&gt;&lt;/a&gt; directive. (requires &lt;code&gt;&lt;a href=&quot;mod_authz_user&quot;&gt;mod_authz_user&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e57985dab44f3fe3efc5365a61e506dd1ca1ec0" translate="yes" xml:space="preserve">
          <source>Grant access to anybody in the Administrators group. The users must authenticate using their UID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="819a0687b34f2c757e20fb244a12ddcfaf62dfd7" translate="yes" xml:space="preserve">
          <source>Grant access to anybody in the group whose name matches the hostname of the virtual host. In this example an &lt;a href=&quot;../expr&quot;&gt;expression&lt;/a&gt; is used to build the filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9a1049c54c322ad6e20e1260f06e3b92ed0d81" translate="yes" xml:space="preserve">
          <source>Grant access to anyone who exists in the LDAP directory, using their UID for searches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91754d9cf48eb1d56ac4291b26b4ce767ea6d530" translate="yes" xml:space="preserve">
          <source>Great! That means everything worked fine. If the output is correct, but the browser is not processing it correctly, make sure you have the correct &lt;code&gt;Content-Type&lt;/code&gt; set in your CGI program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd11c037c6f487705e1ab6a808a49d892379b81" translate="yes" xml:space="preserve">
          <source>Group Authorization and Login using SQL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900535807c57a37230539900a325dbe4eaefbee5" translate="yes" xml:space="preserve">
          <source>Group authorization using DBM files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a6d0bec8445dcd0079c686f033118ef46a2abb" translate="yes" xml:space="preserve">
          <source>Group authorization using plaintext files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dedcd16a92844fbf46f883fcdf4132bdfcf59a6c" translate="yes" xml:space="preserve">
          <source>Group authorizations based on host (name or IP address)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf073fae640ded81eeb7a4cee70faff4a623c16c" translate="yes" xml:space="preserve">
          <source>Guide</source>
          <target state="translated">ガイド</target>
        </trans-unit>
        <trans-unit id="3b7d8bc6028cb182e4c004a87a24b245dbd09fc1" translate="yes" xml:space="preserve">
          <source>Guide: Rewrite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b4b8b83bb3eae5793175441ff03e6a698f6dcf" translate="yes" xml:space="preserve">
          <source>Guide: SSL/TLS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237d151411a23fbac0a34b9afa11bd1106ee6e2c" translate="yes" xml:space="preserve">
          <source>Guide: Virtual Host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e87c0c27f1a2c3fb9a911d746378debbc47a5e" translate="yes" xml:space="preserve">
          <source>H2 Direct Protocol Switch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fc3b8d9fb230be0c5f51cb8cc81f54e6020dd6" translate="yes" xml:space="preserve">
          <source>H2 Server Push Diary Size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5fe621d692df3d6c5ec349522d5dbaff19679a5" translate="yes" xml:space="preserve">
          <source>H2 Server Push Priority</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a2529ceb6c6e32d8c359d2b20a3e0ff55ca01e" translate="yes" xml:space="preserve">
          <source>H2 Server Push Switch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be70ba9014984e430923a9c3765d84b4f46c11a3" translate="yes" xml:space="preserve">
          <source>H2 Upgrade Protocol Switch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7bec66160aa7bb05164278762e67ff8832a8ae" translate="yes" xml:space="preserve">
          <source>H2CopyFiles Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb479004ba7bc043d14f839ef3c18ebdf4ba768" translate="yes" xml:space="preserve">
          <source>H2Direct Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8bfbe3411779c07fd476bacfc781a4478c260c" translate="yes" xml:space="preserve">
          <source>H2EarlyHints Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab31d3a89953c5712f71008df8477b88b8ea8d6" translate="yes" xml:space="preserve">
          <source>H2MaxSessionStreams Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf3f398cab604925c4a61dda54036221fba29b5" translate="yes" xml:space="preserve">
          <source>H2MaxWorkerIdleSeconds Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b550eed870ba7d5546c306c9029f8b57103dc3" translate="yes" xml:space="preserve">
          <source>H2MaxWorkers Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311eb02429792bb8bc47aa9b9e24f4daf3849a12" translate="yes" xml:space="preserve">
          <source>H2MinWorkers Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01aabca8c4e32eb874b9936e448968618a7e9f45" translate="yes" xml:space="preserve">
          <source>H2ModernTLSOnly Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070081084cb24c17c9a84fa8330337877ef16339" translate="yes" xml:space="preserve">
          <source>H2Push Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcf3e863d585b024770b439e615ce8b63df87c4" translate="yes" xml:space="preserve">
          <source>H2PushDiarySize Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d49bcfea542913fa2777783fdf122a09438368d" translate="yes" xml:space="preserve">
          <source>H2PushPriority Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445b35c3b3a8acc98eb23288604ee8960736934a" translate="yes" xml:space="preserve">
          <source>H2PushResource Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c21995d56f7b28c3399686f5642da80e62ac5b5a" translate="yes" xml:space="preserve">
          <source>H2SerializeHeaders Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f8ebd8c7ac2b8e46144cb52c5b080d8d28f1de7" translate="yes" xml:space="preserve">
          <source>H2StreamMaxMemSize Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548126b9315e5804806e0ba53e7c438989b81561" translate="yes" xml:space="preserve">
          <source>H2TLSCoolDownSecs Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ca86451b40153cd9dcb7139645a3c4f9fc4e78" translate="yes" xml:space="preserve">
          <source>H2TLSWarmUpSize Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b747274c9dd29ac0a228f462745351bb85cbfb33" translate="yes" xml:space="preserve">
          <source>H2Upgrade Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033d995188f3e0434b1a214070f64bb5c1bdc7a7" translate="yes" xml:space="preserve">
          <source>H2WindowSize Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed913d987a76e37e72185da3bd95944468bf2a7" translate="yes" xml:space="preserve">
          <source>HTML 3.2 Reference Specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967870c7eade4b53a4f94902161ec8d06f1bdb65" translate="yes" xml:space="preserve">
          <source>HTML Recommendations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155c6fa6498f0e9f10586f967af7a37fc9a411dc" translate="yes" xml:space="preserve">
          <source>HTML and XML processing and rewriting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5a6f2b2374458a86f7801a1fe3a6b22b94ec76" translate="yes" xml:space="preserve">
          <source>HTML example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2a7f533500294c3a73ee681a10f7531c19eff69" translate="yes" xml:space="preserve">
          <source>HTMLTable</source>
          <target state="translated">HTMLTable</target>
        </trans-unit>
        <trans-unit id="8e34eb58d27936b0b39f5edc28ca658a4369de6b" translate="yes" xml:space="preserve">
          <source>HTTP Recommendations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209073d20ee6bd8db45b3d0d9de969215b7a5f3b" translate="yes" xml:space="preserve">
          <source>HTTP basic authentication is provided by &lt;code&gt;&lt;a href=&quot;mod_auth_basic&quot;&gt;mod_auth_basic&lt;/a&gt;&lt;/code&gt;, and HTTP digest authentication is provided by &lt;code&gt;&lt;a href=&quot;mod_auth_digest&quot;&gt;mod_auth_digest&lt;/a&gt;&lt;/code&gt;. This module should be combined with at least one authentication module such as &lt;code&gt;&lt;a href=&quot;mod_authn_file&quot;&gt;mod_authn_file&lt;/a&gt;&lt;/code&gt; and one authorization module such as &lt;code&gt;&lt;a href=&quot;mod_authz_user&quot;&gt;mod_authz_user&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f229ba9fad0819dad34757f276e176e1f9815df" translate="yes" xml:space="preserve">
          <source>HTTP status code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b105ca90fd5b22cebf3e7f00d664e625945c82" translate="yes" xml:space="preserve">
          <source>HTTP support module for &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789b6f39b353081566ecf0f2f95198595cc4f33b" translate="yes" xml:space="preserve">
          <source>HTTP/2 Dimensioning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81268e765a15927a93657fb9c7f4d293427e772c" translate="yes" xml:space="preserve">
          <source>HTTP/2 Server Push is enabled for this connection and also supported by the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dec2bfce0d199128cc1ceea709499efa6bde1d6" translate="yes" xml:space="preserve">
          <source>HTTP/2 guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f6ce8ecfc9d6c0c4089a5eb19be7ba94b6d70ca" translate="yes" xml:space="preserve">
          <source>HTTP/2 in Apache httpd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2aefbd30eac984c4bc6380a7550829ae195e75" translate="yes" xml:space="preserve">
          <source>HTTP/2 is a &lt;strong&gt;binary protocol&lt;/strong&gt;, as opposed to HTTP 1.1 that is plain text. The latter is meant to be human readable (for example sniffing network traffic) meanwhile the former is not. More info in the official FAQ &lt;a href=&quot;https://http2.github.io/faq/#why-is-http2-binary&quot;&gt;question&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed500e7d9d8a2f8b0ed250fdb814403f05d11433" translate="yes" xml:space="preserve">
          <source>HTTP/2 is able to run &lt;strong&gt;multiple streams&lt;/strong&gt; of data over the same TCP connection, avoiding the classic HTTP 1.1 head of blocking slow request and avoiding to re-instantiate TCP connections for each request/response (KeepAlive patched the problem in HTTP 1.1 but did not fully solve it).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d045660266007b4fb1027ec11f8234e2653246f" translate="yes" xml:space="preserve">
          <source>HTTP/2 is being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e0ab3454787d44a2ad2d88398918897dd007a0" translate="yes" xml:space="preserve">
          <source>HTTP/2 is supported in all multi-processing modules that come with httpd. However, if you use the &lt;code&gt;&lt;a href=&quot;../mod/prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt; mpm, there will be severe restrictions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f1edc7286d17bbb25f4d8c87e2842047827ef6" translate="yes" xml:space="preserve">
          <source>HTTP/2 is the evolution of the world's most successful application layer protocol, HTTP. It focuses on making more efficient use of network resources. It does not change the fundamentals of HTTP, the semantics. There are still request and responses and headers and all that. So, if you already know HTTP/1, you know 95% about HTTP/2 as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa436866781ae6bc375edb815152771883292063" translate="yes" xml:space="preserve">
          <source>HTTP/2 process unique stream identifier, consisting of connection id and stream id separated by &lt;code&gt;-&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb6cac41d52cbd8ee69c1cfb5a085a41e48f65e0" translate="yes" xml:space="preserve">
          <source>HTTP/2 server pushes are always related to a client request. Each such request/response pairs, or &lt;em&gt;streams&lt;/em&gt; have a dependency and a weight, together defining the &lt;em&gt;priority&lt;/em&gt; of a stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ab758619ec5d5ac4d3b99027e865699f7300bc" translate="yes" xml:space="preserve">
          <source>HTTP/2 server pushes are enabled by default. This directive allows it to be switch off on all resources of this server/virtual host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a23857342c9f3982518206da0e3f66d15b69bb" translate="yes" xml:space="preserve">
          <source>HTTP/2 stream number of this request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff726c8d441d9bbc944b742d1859ec35ecdcf043" translate="yes" xml:space="preserve">
          <source>HTTP/2 stream number that triggered the push of this request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c91b43fb3839e1fec2d2afc5fc8b125868eab02" translate="yes" xml:space="preserve">
          <source>HTTP/2 support module for &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4c2dd5b8098515b79eab53b65cd22379bf6672" translate="yes" xml:space="preserve">
          <source>Had severe limitations before being moved to &lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; in version 2.3.7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362f233bfd36bbe9ffba21ece507104cececa24e" translate="yes" xml:space="preserve">
          <source>Handlers</source>
          <target state="translated">Handlers</target>
        </trans-unit>
        <trans-unit id="4c163dd50c47c48934daf52cc526413bb8e493cf" translate="yes" xml:space="preserve">
          <source>Handlers can either be built into the server or included in a module, or they can be added with the &lt;code&gt;&lt;a href=&quot;mod/mod_actions#action&quot;&gt;Action&lt;/a&gt;&lt;/code&gt; directive. The built-in handlers in the standard distribution are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce71b1ebbf6d24a2a7f1d0b79dd38f930b29a50" translate="yes" xml:space="preserve">
          <source>Handlers may also be configured explicitly, based on either filename extensions or on location, without relation to file type. This is advantageous both because it is a more elegant solution, and because it also allows for both a type &lt;strong&gt;and&lt;/strong&gt; a handler to be associated with a file. (See also &lt;a href=&quot;mod/mod_mime#multipleext&quot;&gt;Files with Multiple Extensions&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d997669d03ea82d03236a2995da89d1be2664c1a" translate="yes" xml:space="preserve">
          <source>Hardware and Operating System Issues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8336462af6a84411ec1bd42847ff1b1608ad98c4" translate="yes" xml:space="preserve">
          <source>Has the effect of &lt;code&gt;&amp;lt;base href=&quot;value&quot;&amp;gt;&lt;/code&gt;. The non-absolute URLs of the map-file are taken relative to this value. The &lt;code&gt;base&lt;/code&gt; directive overrides &lt;code&gt;&lt;a href=&quot;#imapbase&quot;&gt;ImapBase&lt;/a&gt;&lt;/code&gt; as set in a &lt;code&gt;.htaccess&lt;/code&gt; file or in the server configuration files. In the absence of an &lt;code&gt;ImapBase&lt;/code&gt; configuration directive, &lt;code&gt;base&lt;/code&gt; defaults to &lt;code&gt;http://server_name/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7fba929c6c1b70ba4125218083ce43879c2d4d" translate="yes" xml:space="preserve">
          <source>Has the exact same behavior as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75dac585e8c1175f8d5fedc0e0fdd511453d3690" translate="yes" xml:space="preserve">
          <source>Hash the string using MD5, then encode the hash with hexadecimal encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75971ea62319f935f0ca9cf56cdca93bed5a70e" translate="yes" xml:space="preserve">
          <source>Hash the string using SHA1, then encode the hash with hexadecimal encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364e4a3bbab57ccf5bff27c0970f25d30f22f504" translate="yes" xml:space="preserve">
          <source>Have a look at the Apache manual under &lt;code&gt;&lt;em&gt;PREFIX&lt;/em&gt;/docs/manual/&lt;/code&gt; or consult &lt;a href=&quot;http://httpd.apache.org/docs/2.4/&quot;&gt;http://httpd.apache.org/docs/2.4/&lt;/a&gt; for the most recent version of this manual and a complete reference of available &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/mod/directives.html&quot;&gt;configuration directives&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80fa5501887d15a0a538cb41220d4c5aade6032" translate="yes" xml:space="preserve">
          <source>Having said that, if you still think you need to use a &lt;code&gt;.htaccess&lt;/code&gt; file, you may find that a configuration such as what follows may work for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="658c7a9e4f33b9362e6674ac3321d56900178e9c" translate="yes" xml:space="preserve">
          <source>Header Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e659043e4449bc20f205a984b25ce70cff5951c5" translate="yes" xml:space="preserve">
          <source>Header row of listing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf31eb8470e5b9f2f076fa843601f2e05f5dcd8" translate="yes" xml:space="preserve">
          <source>HeaderName Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9521df02c85dd51ae7493164f1a455f31e005564" translate="yes" xml:space="preserve">
          <source>Heartbeat Traffic Counting load balancer scheduler algorithm for &lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46d102ab191ba394652055e389424998dfd9f3c" translate="yes" xml:space="preserve">
          <source>HeartbeatAddress Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d9b9624fbf0d2fced32c2916374eacd9c35c9f" translate="yes" xml:space="preserve">
          <source>HeartbeatListen Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b726dd1d54cfbd36b781a162d6d97522bf638ac" translate="yes" xml:space="preserve">
          <source>HeartbeatMaxServers Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6205162f65726312f1a8ff4f5431dd6b752b35" translate="yes" xml:space="preserve">
          <source>HeartbeatStorage Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="776742f407ff5071e73d918004abf0f79ae962fe" translate="yes" xml:space="preserve">
          <source>Helping with the documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3462965fa6182abab720e49f6d67b801a17ee2" translate="yes" xml:space="preserve">
          <source>Here is a snippet that avoids both of these problems:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb357664ec6ac11aa9e4f756a85e79233ec1dece" translate="yes" xml:space="preserve">
          <source>Here is a system call trace of Apache 2.0.38 with the worker MPM on Solaris 8. This trace was collected using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd48a1c181391f323b71ef42633c528ab7f8433" translate="yes" xml:space="preserve">
          <source>Here is the filter which traces the data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2255a5e5410152775607a633c9a1cbe438345aa" translate="yes" xml:space="preserve">
          <source>Here some more examples of filenames together with valid and invalid hyperlinks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d564aefb7892f347028d4391988afd4a93c634" translate="yes" xml:space="preserve">
          <source>Here's an example of a file whose contents are sent &lt;em&gt;as is&lt;/em&gt; so as to tell the client that a file has redirected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a66443452c08fe1457b3fa44a2ed515dc2724bd" translate="yes" xml:space="preserve">
          <source>Here's something else that you can do with the &lt;code&gt;exec&lt;/code&gt; function. You can actually have SSI execute a command using the shell (&lt;code&gt;/bin/sh&lt;/code&gt;, to be precise - or the DOS shell, if you're on Win32). The following, for example, will give you a directory listing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b48e4f298102a103a3f2cc0bce5b3e27001c939" translate="yes" xml:space="preserve">
          <source>Here's the basics of password protecting a directory on your server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5286bdb1658c80dbb084ac2e0ede1b1a597239b1" translate="yes" xml:space="preserve">
          <source>Historical note: The Linux port of Apache didn't start to use shared memory until version 1.2 of Apache. This oversight resulted in really poor and unreliable behavior of earlier versions of Apache on Linux.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0faca42ef676d80c7e6b6a8f5cdf3222563c5efd" translate="yes" xml:space="preserve">
          <source>Historically, each filter is responsible for ensuring that whatever changes it makes are correctly represented in the HTTP response headers, and that it does not run when it would make an illegal change. This imposes a burden on filter authors to re-implement some common functionality in every filter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36938e9f37fd7b443d03060d5f3b7177aa8e0043" translate="yes" xml:space="preserve">
          <source>Historically, there are several syntax variants for expressions used to express a condition in the different modules of the Apache HTTP Server. There is some ongoing effort to only use a single variant, called &lt;em&gt;ap_expr&lt;/em&gt;, for all configuration directives. This document describes the &lt;em&gt;ap_expr&lt;/em&gt; expression parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abcf7e70171472138bc3cb35b8e7cc94a592f771" translate="yes" xml:space="preserve">
          <source>Hook functions are how modules (and Lua scripts) participate in the processing of requests. Each type of hook exposed by the server exists for a specific purpose, such as mapping requests to the file system, performing access control, or setting mime types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1607bcf3c2cdc3d29ef0df28d6b2d83a605e676" translate="yes" xml:space="preserve">
          <source>Hook functions are passed the request object as their only argument (except for LuaAuthzProvider, which also gets passed the arguments from the Require directive). They can return any value, depending on the hook, but most commonly they'll return OK, DONE, or DECLINED, which you can write in Lua as &lt;code&gt;apache2.OK&lt;/code&gt;, &lt;code&gt;apache2.DONE&lt;/code&gt;, or &lt;code&gt;apache2.DECLINED&lt;/code&gt;, or else an HTTP status code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45da0ac20c0f97123992cb5c7685f5ba1c4f14ea" translate="yes" xml:space="preserve">
          <source>Hook phase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37dd35afe0de9b3584142b970f248216171d7e8c" translate="yes" xml:space="preserve">
          <source>Hopefully, end users will never see this message, because you will have resolved all the problems with your SSI directives before your site goes live. (Right?)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a7ea3224d0208f6f8539cb5224ef442ee33b8d" translate="yes" xml:space="preserve">
          <source>Horizontal rule at the bottom of the table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05cc26ad3091649eb2c3e5fd29c6babe627198e" translate="yes" xml:space="preserve">
          <source>Hostname and port that the server uses to identify itself</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70741f6b554163b239584c9f0e03fa9a7b79ffd" translate="yes" xml:space="preserve">
          <source>HostnameLookups Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03655fcfe63ec850a0ed71f0d9044dc3b4470ed0" translate="yes" xml:space="preserve">
          <source>HostnameLookups and other DNS considerations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ecc096bfd2902732b2768db68a0879b1604b558" translate="yes" xml:space="preserve">
          <source>Hostnames and DNS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9dd4734a6ab2c2ae72781229350a77656ba861" translate="yes" xml:space="preserve">
          <source>Hosts whose names match, or end in, this string are allowed access. Only complete components are matched, so the above example will match &lt;code&gt;foo.example.org&lt;/code&gt; but it will not match &lt;code&gt;fooexample.org&lt;/code&gt;. This configuration will cause Apache httpd to perform a double DNS lookup on the client IP address, regardless of the setting of the &lt;code&gt;&lt;a href=&quot;core#hostnamelookups&quot;&gt;HostnameLookups&lt;/a&gt;&lt;/code&gt; directive. It will do a reverse DNS lookup on the IP address to find the associated hostname, and then do a forward lookup on the hostname to assure that it matches the original IP address. Only if the forward and reverse DNS are consistent and the hostname matches will access be allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cee4c898eb23ba9a57a69bb07db64d1e15715af" translate="yes" xml:space="preserve">
          <source>Hosts whose names match, or end in, this string are allowed access. Only complete components are matched, so the above example will match &lt;code&gt;foo.example.org&lt;/code&gt; but it will not match &lt;code&gt;fooexample.org&lt;/code&gt;. This configuration will cause Apache to perform a double reverse DNS lookup on the client IP address, regardless of the setting of the &lt;code&gt;&lt;a href=&quot;core#hostnamelookups&quot;&gt;HostnameLookups&lt;/a&gt;&lt;/code&gt; directive. It will do a reverse DNS lookup on the IP address to find the associated hostname, and then do a forward lookup on the hostname to assure that it matches the original IP address. Only if the forward and reverse DNS are consistent and the hostname matches will access be allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed21dedc084881ae99ff34bc2273237131ae6536" translate="yes" xml:space="preserve">
          <source>How Apache Starts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cecc82d72d68f9151cb0901cfe40eeac15bfca6" translate="yes" xml:space="preserve">
          <source>How It Works</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38d6bf5e3b2625202888dcad5eeaa48a65b3ea6" translate="yes" xml:space="preserve">
          <source>How This Works With Virtual Hosts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b016cf1a56925920b70cfc504809aaf08024c3" translate="yes" xml:space="preserve">
          <source>How directives are applied</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100cb0b9b76cf128bd36c57de623e9519f3f1a9c" translate="yes" xml:space="preserve">
          <source>How it Works</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd6a17cb4033f4f74df1bb6912b8a28a8074084" translate="yes" xml:space="preserve">
          <source>How it works</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd5d406df5b7b7adeb222552008161a38545212" translate="yes" xml:space="preserve">
          <source>How long the server nonce is valid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da14aa670e31d3c56492056dc4f7c973fac7d2a0" translate="yes" xml:space="preserve">
          <source>How much compression do we apply to the output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a35338f8974882a72d47a3276db8dec78b8f327" translate="yes" xml:space="preserve">
          <source>How much memory should be used by zlib for compression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4a71a5adcfa94ba1681e26b6584ba313fc68bb" translate="yes" xml:space="preserve">
          <source>How the method, mimetype and body of the original request are embedded within the login form will depend on the platform and technology being used within the website.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c09a07afdaca487f2ff7567ab6920adea05fdb4" translate="yes" xml:space="preserve">
          <source>How the outgoing ETag header should be modified during compression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff04180eb3f0ac11071a732a70950e138895e22d" translate="yes" xml:space="preserve">
          <source>How-To / Tutorials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb60b6d7f22dd5bd6e37a21940c24ed046246cf" translate="yes" xml:space="preserve">
          <source>However if you have some fancy port forwarding in place, your server may be reachable from the Internet on port 443, but the local port that httpd uses is another one. Your server might only listen on ports 5001 and 5002, but be reached on ports 443 and 80. How should &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; figure that one out?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c4aa8e85ec3825bf59d7259f21a340038240ad0" translate="yes" xml:space="preserve">
          <source>However, an effort was made to improve the performance of the original &lt;code&gt;file(1)&lt;/code&gt; code to make it fit in a busy web server. It was designed for a server where there are thousands of users who publish their own documents. This is probably very common on intranets. Many times, it's helpful if the server can make more intelligent decisions about a file's contents than the file name allows ...even if just to reduce the &quot;why doesn't my page work&quot; calls when users improperly name their own files. You have to decide if the extra work suits your environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63d0e2dcb94761a10c7b6bad1ccbba58e20088b" translate="yes" xml:space="preserve">
          <source>However, if the redirection is to a page that uses a different character set, some broken browser versions will try to use the character set from the redirection text rather than the actual page. This can result in Greek, for instance, being incorrectly rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a61d53134b005e46c37f882f4b995dd76bacab" translate="yes" xml:space="preserve">
          <source>However, in general, use of &lt;code&gt;.htaccess&lt;/code&gt; files should be avoided when possible. Any configuration that you would consider putting in a &lt;code&gt;.htaccess&lt;/code&gt; file, can just as effectively be made in a &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; section in your main server configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59011f4ad5625e79c6bfaf4f58cb768e12773bb6" translate="yes" xml:space="preserve">
          <source>However, putting this configuration in your server configuration file will result in less of a performance hit, as the configuration is loaded once when httpd starts, rather than every time a file is requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7dffd5e239258b817838af0ca2cd9cf9f02e518" translate="yes" xml:space="preserve">
          <source>However, the &lt;var&gt;FreeTDS&lt;/var&gt; driver is inherently &lt;strong&gt;unsafe&lt;/strong&gt;. The underlying library doesn't support prepared statements, so the driver emulates them, and the untrusted input is merged into the SQL statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505f2c2cd5239abe07497d238517b902866b0a18" translate="yes" xml:space="preserve">
          <source>However, there may be circumstances in which it is desirable for a configuration section's authorization to be combined with that of its predecessor while configuration sections are being merged. Two options are available for this case, &lt;code&gt;And&lt;/code&gt; and &lt;code&gt;Or&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8daa2fa1a36a4b0c56deff423538686b65dcbb39" translate="yes" xml:space="preserve">
          <source>However, we are trying to phase out &quot;magic MIME types&quot; so we are deprecating this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebf5747393f3f1a607dd9b49cb22f6ccb12da98" translate="yes" xml:space="preserve">
          <source>HttpProtocolOptions Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11de99a00506b19b7a198eee53076973ce18ee27" translate="yes" xml:space="preserve">
          <source>Hybrid multi-process, multi-threaded MPM for OS/2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7090737033addaf423c3bb5d913ccdcd164688" translate="yes" xml:space="preserve">
          <source>I'll frequently combine the last two things, putting a &lt;code&gt;LAST_MODIFIED&lt;/code&gt; directive inside a footer file to be included. SSI directives can be contained in the included file, and includes can be nested - that is, the included file can include another file, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af7a9c4dfd3704b9712d4cf41f066eb92d8a01f" translate="yes" xml:space="preserve">
          <source>IP address matches address/netmask</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef9908ce9c7f4cb6c8dfa07a00bf05a249ee1bf" translate="yes" xml:space="preserve">
          <source>IP-based Virtual Host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0233b2e64376dbba5ec4e5f43b81d901151f610" translate="yes" xml:space="preserve">
          <source>IPv6 addresses and IPv6 subnets can be specified as shown below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93fcee9c975ff3e25ca812d82c4d7137202e7f95" translate="yes" xml:space="preserve">
          <source>IPv6 addresses must be enclosed in square brackets, as in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f0c6bceeccb5131651c4a8cc3c0eda0ad10478" translate="yes" xml:space="preserve">
          <source>IPv6 addresses must be specified in square brackets because the optional port number could not be determined otherwise. An IPv6 example is shown below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5bd21208a7fda43f182ad5e2045b09332242eac" translate="yes" xml:space="preserve">
          <source>ISAPI .dll files to be loaded at startup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c65d7906b892163e13f44b40d7f78e4f789c4d7" translate="yes" xml:space="preserve">
          <source>ISAPI Extensions within Apache for Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf3573b45f0cf76b402cf66420a25c12e6cec53" translate="yes" xml:space="preserve">
          <source>ISAPI extension modules (.dll files) are written by third parties. The Apache Group does not author these modules, so we provide no support for them. Please contact the ISAPI's author directly if you are experiencing problems running their ISAPI extension. &lt;strong&gt;Please &lt;em&gt;do not&lt;/em&gt; post such problems to Apache's lists or bug reporting pages.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c160450dd210fbf021ca024713beb4a0ff81aa22" translate="yes" xml:space="preserve">
          <source>ISAPIAppendLogToErrors Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20912b5e1a71e96d37ba5d9ae9ba2e1e45385760" translate="yes" xml:space="preserve">
          <source>ISAPIAppendLogToQuery Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb065b192ad06dd66fcf7ba7c8d2953ecd5ef35f" translate="yes" xml:space="preserve">
          <source>ISAPICacheFile Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6987d320cb5e4265db78eab1b0fa743a444989bd" translate="yes" xml:space="preserve">
          <source>ISAPIFakeAsync Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd7d28ee8027d7463175ea3b927f384401e35e1" translate="yes" xml:space="preserve">
          <source>ISAPILogNotSupported Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe04528cf9c78a8395dba35b556c85241df0855d" translate="yes" xml:space="preserve">
          <source>ISAPIReadAheadBuffer Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd3d42d50a3817bacd89159bab6a571fc550df8" translate="yes" xml:space="preserve">
          <source>ISO 3166-1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938ba86ead48ad6e2182a67bcbd7441d89b4862e" translate="yes" xml:space="preserve">
          <source>ISO 639 provides two sets of language codes, one as a two-letter code set (639-1) and another as a three-letter code set (this part of ISO 639) for the representation of names of languages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f964a9af0bf547fd0c82b12999e735fff35c0d5c" translate="yes" xml:space="preserve">
          <source>ISO 639-2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96398505567aa96f2078fbe2c58e6ad76452f3aa" translate="yes" xml:space="preserve">
          <source>Icon column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55424e2909aec885d15462a27f621d6d07d3ce5f" translate="yes" xml:space="preserve">
          <source>Icon to display for a file selected by name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5dbb7eea4a912d531e3af6a0677e0ccb06482ae" translate="yes" xml:space="preserve">
          <source>Icon to display for files when no specific icon is configured</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc9d2ddcf2257f526bc840553452c87244be8d5" translate="yes" xml:space="preserve">
          <source>Icon to display next to files selected by MIME content-encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3045cc0979639080d73fcea07fa8f457446bdc" translate="yes" xml:space="preserve">
          <source>Icon to display next to files selected by MIME content-type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ed42ba53dbc34641007a2878cdf81abe9928d9" translate="yes" xml:space="preserve">
          <source>IconHeight[=&lt;var&gt;pixels&lt;/var&gt;]</source>
          <target state="translated">IconHeight[=&lt;var&gt;pixels&lt;/var&gt;]</target>
        </trans-unit>
        <trans-unit id="8267b83f97dcb10df8e1bfd997d1d26e0500f972" translate="yes" xml:space="preserve">
          <source>IconWidth[=&lt;var&gt;pixels&lt;/var&gt;]</source>
          <target state="translated">IconWidth[=&lt;var&gt;pixels&lt;/var&gt;]</target>
        </trans-unit>
        <trans-unit id="8a57faaf30ba2a475cec8a69294c0f2c85f47ad7" translate="yes" xml:space="preserve">
          <source>IconsAreLinks</source>
          <target state="translated">IconsAreLinks</target>
        </trans-unit>
        <trans-unit id="7d367f0be6acd2a3951ad8f4ec0fc19478b3809a" translate="yes" xml:space="preserve">
          <source>Ideally you should run servers without multiple &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; statements if you want the highest performance. But read on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a076076483b413eb53b4d3db1e3e8e306ffc0cc" translate="yes" xml:space="preserve">
          <source>IdentityCheck Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20614693d0bb52bf8a7a7b4b62487724d60884e" translate="yes" xml:space="preserve">
          <source>IdentityCheckTimeout Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16268ba95f56dac4aee3daaee4b3d2ef774861bb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;#authldapinitialbindasuser&quot;&gt;AuthLDAPInitialBindAsUser&lt;/a&gt;&lt;/code&gt; is set to &lt;em&gt;ON&lt;/em&gt;, the basic authentication username will be transformed according to the regular expression and substitution arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb44751fcf64024654927a593ec0d0a1bfe6bc74" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;../mod/mod_http2#h2push&quot;&gt;H2Push&lt;/a&gt;&lt;/code&gt; is enabled, this will also start the PUSH right after the 103 response. If &lt;code&gt;&lt;a href=&quot;../mod/mod_http2#h2push&quot;&gt;H2Push&lt;/a&gt;&lt;/code&gt; is disabled however, the 103 response will be send nevertheless to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79448b559326597ec511a08d4e8c8ecebeb7e4ca" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;../programs/htpasswd&quot;&gt;htpasswd&lt;/a&gt;&lt;/code&gt; is not in your path, of course you'll have to type the full path to the file to get it to run. With a default installation, it's located at &lt;code&gt;/usr/local/apache2/bin/htpasswd&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb74ca23c369247d30a1af0c6c087347d520a3a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;mod/mod_log_config#customlog&quot;&gt;CustomLog&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod/core#errorlog&quot;&gt;ErrorLog&lt;/a&gt;&lt;/code&gt; directives are placed inside a &lt;code&gt;&lt;a href=&quot;mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; section, all requests or errors for that virtual host will be logged only to the specified file. Any virtual host which does not have logging directives will still have its requests sent to the main server logs. This technique is very useful for a small number of virtual hosts, but if the number of hosts is very large, it can be complicated to manage. In addition, it can often create problems with &lt;a href=&quot;vhosts/fd-limits&quot;&gt;insufficient file descriptors&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f044f4f6464d0ce4f1d3250b31a9a0744f49b213" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;mod_authz_owner&quot;&gt;mod_authz_owner&lt;/a&gt;&lt;/code&gt; is used in order to authorize a resource that is not actually present in the filesystem (&lt;em&gt;i.e.&lt;/em&gt; a virtual resource), it will deny the access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcc0cb20f5fb406a771525acef685f343bae8d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;KeepAliveTimeout&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; set for a name-based virtual host, the value of the first defined virtual host best matching the local IP and port will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938c0402960ac831fa427eb67d96edf5594b4289" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;LDAPRetryDelay&lt;/code&gt; is set to a non-zero value, the server will delay retrying an LDAP request for the specified amount of time. Setting this directive to 0 will result in any retry to occur without delay.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0e84697fa05616b782c377072f2808b24e68d1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Multiviews&lt;/code&gt; is enabled, and &lt;code&gt;&lt;a href=&quot;mod_mime#multiviewsmatch&quot;&gt;MultiviewsMatch&lt;/a&gt;&lt;/code&gt; is set to &quot;handlers&quot; or &quot;any&quot;, a request to &lt;code&gt;document.html&lt;/code&gt; will discover &lt;code&gt;document.html.var&lt;/code&gt; and continue negotiating with the explicit type map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736609d15d1de0258845d81721d629609c59859d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;append&lt;/code&gt; was used instead of &lt;code&gt;merge&lt;/code&gt;, then the response would contain the following header:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369e9caf51156b2d29b557803b8409d06bc70ce0" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;file-path&lt;/var&gt; is not an absolute path, the location specified will be relative to the value of &lt;code&gt;&lt;a href=&quot;core#defaultruntimedir&quot;&gt;DefaultRuntimeDir&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a304c64061c90077e2b0848f9bedf1cf50305f12" translate="yes" xml:space="preserve">
          <source>If Apache httpd is handling &lt;code&gt;GET /disk1/storage/apache/htdocs/images/imagestore1/food/apples.jpg HTTP/1.1&lt;/code&gt; mod_status displays as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429b1b8fdf8dee5069ddf9a0d119469b25568622" translate="yes" xml:space="preserve">
          <source>If Apache suffers a fatal problem during startup, it will write a message describing the problem either to the console or to the &lt;code&gt;&lt;a href=&quot;mod/core#errorlog&quot;&gt;ErrorLog&lt;/a&gt;&lt;/code&gt; before exiting. One of the most common error messages is &quot;&lt;code&gt;Unable to bind to Port ...&lt;/code&gt;&quot;. This message is usually caused by either:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e1ff30661373f8f27ac6cbf1fd18f3b5a66997" translate="yes" xml:space="preserve">
          <source>If CGI processes are &lt;strong&gt;not&lt;/strong&gt; running under user ids other than the web server user id, this directive will limit the number of processes that the server itself can create. Evidence of this situation will be indicated by &lt;strong&gt;&lt;code&gt;cannot fork&lt;/code&gt;&lt;/strong&gt; messages in the &lt;code&gt;error_log&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672bf0a83cf5078496008055b9c7a56edc40fe0d" translate="yes" xml:space="preserve">
          <source>If CGIs make assumptions about the values of &lt;code&gt;SERVER_NAME&lt;/code&gt;, they may be broken by this option. The client is essentially free to give whatever value they want as a hostname. But if the CGI is only using &lt;code&gt;SERVER_NAME&lt;/code&gt; to construct self-referential URLs, then it should be just fine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345125dd19087cda5d224e52b51a7c244e0331ac" translate="yes" xml:space="preserve">
          <source>If ImapMenu is &lt;code&gt;none&lt;/code&gt;, no menu is generated, and the &lt;code&gt;default&lt;/code&gt; action is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e8dd834665fd5fa165982711a2a47498914e71" translate="yes" xml:space="preserve">
          <source>If a URL which maps to a directory is requested and there is no &lt;code&gt;&lt;a href=&quot;mod_dir#directoryindex&quot;&gt;DirectoryIndex&lt;/a&gt;&lt;/code&gt; (&lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;index.html&lt;/code&gt;) in that directory, then &lt;code&gt;&lt;a href=&quot;mod_autoindex&quot;&gt;mod_autoindex&lt;/a&gt;&lt;/code&gt; will return a formatted listing of the directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ed0f861e1195f9a4855224cbfcaa437b4bcf0d" translate="yes" xml:space="preserve">
          <source>If a balancer is configured as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1d874f8e8b93f22defa4b3fa7a2dd73c60ed48" translate="yes" xml:space="preserve">
          <source>If a connection is not successful with the timeout period, either an error will be returned or the LDAP client library will attempt to connect to a secondary LDAP server if one is specified (via a space-separated list of hostnames in the &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap#authldapurl&quot;&gt;AuthLDAPURL&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d155ebd489faf81886eaca4f98a81d75d17b94" translate="yes" xml:space="preserve">
          <source>If a database query for example returned the username, full name and telephone number of a user, a CGI program will have access to this information without the need to make a second independent database query to gather this additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b53b2c37995328f1879038eb55d8975e93de74d" translate="yes" xml:space="preserve">
          <source>If a directory's configuration includes &lt;code&gt;FileETag INode MTime Size&lt;/code&gt;, and a subdirectory's includes &lt;code&gt;FileETag -INode&lt;/code&gt;, the setting for that subdirectory (which will be inherited by any sub-subdirectories that don't override it) will be equivalent to &lt;code&gt;FileETag MTime Size&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e083cb05dcf8afd3125a0cb4133d8effef507e3f" translate="yes" xml:space="preserve">
          <source>If a document is file-based, no &lt;code&gt;ETag&lt;/code&gt; field will be included in the response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec7abe740c409098e5112e5f25fad65a6a83703" translate="yes" xml:space="preserve">
          <source>If a login request arrives that exceeds this size, the whole request will be aborted with the HTTP response code &lt;code&gt;HTTP_REQUEST_TOO_LARGE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263471172738fbf06f6b27c907df465dc53aa033" translate="yes" xml:space="preserve">
          <source>If a non-authenticated user attempts to access a page protected by &lt;code&gt;&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt;&lt;/code&gt; that isn't configured with a &lt;code&gt;&lt;a href=&quot;#authformloginrequiredlocation&quot;&gt;AuthFormLoginRequiredLocation&lt;/a&gt;&lt;/code&gt; directive, a &lt;var&gt;HTTP_UNAUTHORIZED&lt;/var&gt; status code is returned to the browser indicating to the user that they are not authorized to view the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f19834f47ac49a738c74c701253ff2bced07d49" translate="yes" xml:space="preserve">
          <source>If a path is given starting with a slash, a directory path will be constructed using that path, plus the username specified. Given this configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028413e6dc59d36e753df023d4d63980467c1615" translate="yes" xml:space="preserve">
          <source>If a path is given which does not start with a leading slash, it is assumed to be a directory path relative to the home directory of the specified user. Given this configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea094b700bc76d3091a34ea6b0e2bd8fccbe3dd" translate="yes" xml:space="preserve">
          <source>If a path is provided which contains an asterisk (*), a path is used in which the asterisk is replaced with the username. Given this configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5267c2d57a455a82c88e6f627f93e6544def7433" translate="yes" xml:space="preserve">
          <source>If a program is used, then it will be run as the user who started &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt;. This will be root if the server was started by root; be sure that the program is secure or switches to a less privileged user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb02c3b2024b05c224d137bfcdc3115d4050f1a3" translate="yes" xml:space="preserve">
          <source>If a program is used, then it will be run as the user who started &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt;. This will be root if the server was started by root; be sure that the program is secure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959267d5cc10975d72f42db5913758627c67dc18" translate="yes" xml:space="preserve">
          <source>If a query string is present in the request for the active SSI document, this variable contains the (%-decoded) query string, which is &lt;em&gt;escaped&lt;/em&gt; for shell usage (special characters like &lt;code&gt;&amp;amp;&lt;/code&gt; etc. are preceded by backslashes). It is not set if a query string is not present. Use &lt;code&gt;DOCUMENT_ARGS&lt;/code&gt; if shell escaping is not desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3818773cb256ea94dffe57f892f13e3f047af93" translate="yes" xml:space="preserve">
          <source>If a relative &lt;var&gt;filename&lt;/var&gt; is supplied, the check is &lt;code&gt;&lt;a href=&quot;#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; relative. In the case where this directive occurs before the &lt;code&gt;&lt;a href=&quot;#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;, the path will be checked relative to the compiled-in server root or the server root passed in on the command line via the &lt;code&gt;-d&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43562cc934e0df99de4f6090e4feca95b57e4710" translate="yes" xml:space="preserve">
          <source>If a response does not include an &lt;code&gt;Expires&lt;/code&gt; header but does include a &lt;code&gt;Last-Modified&lt;/code&gt; header, &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; can infer a freshness lifetime based on a heuristic, which can be controlled through the use of the &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachelastmodifiedfactor&quot;&gt;CacheLastModifiedFactor&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835ba3c2558fd7f0a09cd539b5892b8dea75bd58" translate="yes" xml:space="preserve">
          <source>If a variable reference needs to be substituted in the middle of a character sequence that might otherwise be considered a valid identifier in its own right, it can be disambiguated by enclosing the reference in braces, &lt;em&gt;a la&lt;/em&gt; shell substitution:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147a831be04322b14f95aa0760293812d6de6047" translate="yes" xml:space="preserve">
          <source>If all goes well during startup, the server will detach from the terminal and the command prompt will return almost immediately. This indicates that the server is up and running. You can then use your browser to connect to the server and view the test page in the &lt;code&gt;&lt;a href=&quot;mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518b0f7253629879fa550c74e30b4b574a8108ed" translate="yes" xml:space="preserve">
          <source>If all load balancer set &lt;code&gt;0&lt;/code&gt; workers, spares, and the standby are unavailable, only then will the &lt;code&gt;http://bkup1.example.com:8080&lt;/code&gt; and &lt;code&gt;http://bkup2.example.com:8080&lt;/code&gt; workers from balancer set &lt;code&gt;1&lt;/code&gt; be brought into rotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f6ebed2ea9a304ed8ef9cf6f83c10e56c13f49" translate="yes" xml:space="preserve">
          <source>If all the processes have all threads idle then:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a80c0a1f1ebbaf8d89be268772e0a2dcea61b1" translate="yes" xml:space="preserve">
          <source>If an authentication check has been made, this is set to the name of the authenticated user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebceca98835ea4465f5e63ab46f15c9d2fd86924" translate="yes" xml:space="preserve">
          <source>If an authentication check was made, this is set to the type of authentication (f.x. &lt;code&gt;basic&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc8fa7317fa3f9e7035bc4fde7700aaeb86859d" translate="yes" xml:space="preserve">
          <source>If an error can be detected within the configuration, this directive can be used to generate a custom error message, and halt configuration parsing. The typical use is for reporting required modules which are missing from the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf2ad2ce57944b9c32aa3708dbc36b672c60b08" translate="yes" xml:space="preserve">
          <source>If an ldaps:// URL is specified, the mode becomes SSL and the setting of LDAPTrustedMode is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123f8497de7f9539f9218e5e627fcc61c494ad37" translate="yes" xml:space="preserve">
          <source>If at all possible, avoid content negotiation if you're really interested in every last ounce of performance. In practice the benefits of negotiation outweigh the performance penalties. There's one case where you can speed up the server. Instead of using a wildcard such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659d76c805ba67f560c91d9b3040ccd01b26e1d6" translate="yes" xml:space="preserve">
          <source>If authentication succeeds but authorization fails, Apache HTTPD will respond with an HTTP response code of '401 UNAUTHORIZED' by default. This usually causes browsers to display the password dialogue to the user again, which is not wanted in all situations. &lt;code&gt;AuthzSendForbiddenOnFailure&lt;/code&gt; allows to change the response code to '403 FORBIDDEN'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f859fa5bfd6a3f254f1845343a9a04b1db03b946" translate="yes" xml:space="preserve">
          <source>If configured Off, the client supplied list order of protocols has precedence over the order in the server configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04fff39f793a051fafc3eddd6fdbeb6afa2245ee" translate="yes" xml:space="preserve">
          <source>If content changes often, expressed by a freshness lifetime of minutes or seconds, the content can still be cached, however it is highly desirable that the origin server supports &lt;strong&gt;conditional requests&lt;/strong&gt; correctly to ensure that full responses do not have to be generated on a regular basis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a62deaadc595248aea81100d9c653cf431562a" translate="yes" xml:space="preserve">
          <source>If enabled, the Global Catalog is an independent directory server that runs on port 3268 (3269 for SSL). To search for a user, do a subtree search for the attribute &lt;em&gt;userPrincipalName&lt;/em&gt;, with an empty search root, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2ce63ca762e2fec964df0886bed9fccdb80069" translate="yes" xml:space="preserve">
          <source>If encoded slashes are needed in path info, use of &lt;code&gt;NoDecode&lt;/code&gt; is strongly recommended as a security measure. Allowing slashes to be decoded could potentially allow unsafe paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cff94e726613ec82b0d149d73860e96b77d85a7" translate="yes" xml:space="preserve">
          <source>If for example, a response is received with a vary header such as;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751bb3d8dc2b8b188ffd3c519bfd3a7dc19afd5a" translate="yes" xml:space="preserve">
          <source>If headers like &lt;code&gt;Expires&lt;/code&gt; which are needed for proper cache management are not stored due to a &lt;code&gt;CacheIgnoreHeaders&lt;/code&gt; setting, the behaviour of mod_cache is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52036b9e9d6f3ec9e88aea1fb78ae6c79b191dec" translate="yes" xml:space="preserve">
          <source>If httpd was built against &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR&lt;/a&gt; version 1.3.0 or higher, any additional column values in the first row returned by the query statement will be stored as environment variables with names of the form &lt;code&gt;AUTHENTICATE_COLUMN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="286e09d9594b85b2fdc8dd862f4abe68b1ccc468" translate="yes" xml:space="preserve">
          <source>If httpd was built against &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR&lt;/a&gt; version 1.3.0 or higher, then whenever a query is made to the database server, all column values in the first row returned by the query are placed in the environment, using environment variables with the prefix &quot;AUTHENTICATE_&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea358f5a77421472cb766fa6a7f119214881ea2" translate="yes" xml:space="preserve">
          <source>If it cannot write its data, the child process exits immediately and may dump core (depending on your &lt;code&gt;&lt;a href=&quot;mpm_common#coredumpdirectory&quot;&gt;CoreDumpDirectory&lt;/a&gt;&lt;/code&gt; configuration).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2c0fec54cd078e4b4b410f16fcc6d6f456324c" translate="yes" xml:space="preserve">
          <source>If mod_authnz_fcgi runs in an EBCDIC compilation environment, all FastCGI protocol data is written in EBCDIC and expected to be received in EBCDIC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb206953830064f50466c6cdfba161af883c2ff" translate="yes" xml:space="preserve">
          <source>If more than one &lt;var&gt;filter&lt;/var&gt; is specified, they must be separated by semicolons in the order in which they should process the content. The &lt;var&gt;filter&lt;/var&gt; is case-insensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f181dafefb33f55161e307ca0cedb2e428be8ca2" translate="yes" xml:space="preserve">
          <source>If more than one filter is specified, they must be separated by semicolons in the order in which they should process the content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4988ab71750e2cf944b889996d799bcd663856" translate="yes" xml:space="preserve">
          <source>If more than one filter is specified, they must be separated by semicolons in the order in which they should process the content. The &lt;var&gt;filter&lt;/var&gt; argument is case-insensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc258ddd66e6cc7cb70bba045a34410c9e10b01f" translate="yes" xml:space="preserve">
          <source>If multiple (non-regular expression) &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; sections match the directory (or one of its parents) containing a document, then the directives are applied in the order of shortest match first, interspersed with the directives from the &lt;a href=&quot;#accessfilename&quot;&gt;.htaccess&lt;/a&gt; files. For example, with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a8cf64c9e8327f60bc74c2c2cdcd59ceece965" translate="yes" xml:space="preserve">
          <source>If multiple language assignments are made for the same extension, the last one encountered is the one that is used. That is, for the case of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8331037b733855a9a3cf241d755201a0c056ca2" translate="yes" xml:space="preserve">
          <source>If multiple virtual hosts contain the best matching IP address and port, the server selects from these virtual hosts the best match based on the requested hostname. If no matching name-based virtual host is found, then the first listed virtual host that matched the IP address will be used. As a consequence, the first listed virtual host for a given IP address and port combination is the default virtual host for that IP and port combination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0103d53cb38101a5b1a8f5c1c05f63182ec084" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;DefaultLanguage&lt;/code&gt; directive is in force and a file does not have any language extensions as configured by &lt;code&gt;&lt;a href=&quot;#addlanguage&quot;&gt;AddLanguage&lt;/a&gt;&lt;/code&gt;, then no Content-Language header field will be generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06957e4ac117f84c506cb12762a02e08b9224f5e" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;ServerName&lt;/code&gt; is specified, the server attempts to deduce the client visible hostname by first asking the operating system for the system hostname, and if that fails, performing a reverse lookup on an IP address present on the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513eb45254c4bd78e8a395027760f220a039472c" translate="yes" xml:space="preserve">
          <source>If no &lt;var&gt;status&lt;/var&gt; argument is given, the redirect will be &quot;temporary&quot; (HTTP status 302). This indicates to the client that the resource has moved temporarily. The &lt;var&gt;status&lt;/var&gt; argument can be used to return other HTTP status codes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c9367079b7f29bb513ad5878dd073facd6567f" translate="yes" xml:space="preserve">
          <source>If no handler is explicitly set for a request, the specified content type will also be used as the handler name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c4817085a47f2e73701377dc46c733dfbcf0f5" translate="yes" xml:space="preserve">
          <source>If no port is specified in the &lt;code&gt;ServerName&lt;/code&gt;, then the server will use the port from the incoming request. For optimal reliability and predictability, you should specify an explicit hostname and port using the &lt;code&gt;ServerName&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecdb8233398cd674ea8ef9b98b61c389a6d2d163" translate="yes" xml:space="preserve">
          <source>If no quoted text is present, the name of the link will be used as the text:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92370cc2c774d07d929615014d5d6d5bddcd2d4" translate="yes" xml:space="preserve">
          <source>If none of the directives contained within the &lt;code&gt;&amp;lt;RequireAll&amp;gt;&lt;/code&gt; directive fails, and at least one succeeds, then the &lt;code&gt;&amp;lt;RequireAll&amp;gt;&lt;/code&gt; directive succeeds. If none succeed and none fail, then it returns a neutral result. In all other cases, it fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92912bb1ccecfb524dde0b80d7baf6ccbef9a859" translate="yes" xml:space="preserve">
          <source>If one of the files found when reading the directory does not have an extension recognized by &lt;code&gt;mod_mime&lt;/code&gt; to designate its Charset, Content-Type, Language, or Encoding, then the result depends on the setting of the &lt;code&gt;&lt;a href=&quot;mod/mod_mime#multiviewsmatch&quot;&gt;MultiViewsMatch&lt;/a&gt;&lt;/code&gt; directive. This directive determines whether handlers, filters, and other extension types can participate in MultiViews negotiation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4a4ca075b232c3b5ee06481e6e3c7db1a59a26" translate="yes" xml:space="preserve">
          <source>If one or more of the directives contained within the &lt;code&gt;&amp;lt;RequireAny&amp;gt;&lt;/code&gt; directive succeed, then the &lt;code&gt;&amp;lt;RequireAny&amp;gt;&lt;/code&gt; directive succeeds. If none succeed and none fail, then it returns a neutral result. In all other cases, it fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6266111d84e09bc50f1f16ee87de824252b0bd71" translate="yes" xml:space="preserve">
          <source>If one or more of the directives contained within the &lt;code&gt;&amp;lt;RequireNone&amp;gt;&lt;/code&gt; directive succeed, then the &lt;code&gt;&amp;lt;RequireNone&amp;gt;&lt;/code&gt; directive fails. In all other cases, it returns a neutral result. Thus as with the other negated authorization directive &lt;code&gt;Require not&lt;/code&gt;, it can never independently authorize a request because it can never return a successful result. It can be used, however, to restrict the set of users who are authorized to access a resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a90c2e3f96332233d531f64ae7da5128ad5a030" translate="yes" xml:space="preserve">
          <source>If set to Off, persistent and pooled connections are disabled. A new database connection is opened when requested by a client, and closed immediately on release. This option is for debugging and low-usage servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9863ed6c47e1c96860a5fc4a1b1fed7e4099367d" translate="yes" xml:space="preserve">
          <source>If set, this directive allows content-negotiated documents to be cached by proxy servers. This could mean that clients behind those proxys could retrieve versions of the documents that are not the best match for their abilities, but it will make caching more efficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59bad35f2ba55f5509fb534a335b0a85257b4673" translate="yes" xml:space="preserve">
          <source>If several parameters are needed in &lt;var&gt;Require-Parameters&lt;/var&gt;, they must be enclosed in quotation marks. Otherwise, only the first one is taken into account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3475024ea3d62ec86bf18cae7664a82b30f7bf" translate="yes" xml:space="preserve">
          <source>If some workers are disabled, the others will still be scheduled correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae9fe5d859b228e3baaab3adba9a6d4d38a32da6" translate="yes" xml:space="preserve">
          <source>If specified, Apache httpd will not make the column headings in a FancyIndexed directory listing into links for sorting. The default behavior is for them to be links; selecting the column heading will sort the directory listing by the values in that column. However, query string arguments which are appended to the URL will still be honored. That behavior is controlled by &lt;a href=&quot;#indexoptions.ignoreclient&quot;&gt;&lt;code&gt;IndexOptions IgnoreClient&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e436c8bfe805ac9d6e412d6ccdc8e895ee727aa" translate="yes" xml:space="preserve">
          <source>If specified, Apache httpd will show files normally hidden because the subrequest returned &lt;code&gt;HTTP_UNAUTHORIZED&lt;/code&gt; or &lt;code&gt;HTTP_FORBIDDEN&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4a50a8270934cd12bc7da1b6c8fae734a41e4a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;a href=&quot;#indexoptions.fancyindexing&quot;&gt;FancyIndexing&lt;/a&gt;&lt;/code&gt; option is given with the &lt;code&gt;&lt;a href=&quot;#indexoptions&quot;&gt;IndexOptions&lt;/a&gt;&lt;/code&gt; directive, the column headers are links that control the order of the display. If you select a header link, the listing will be regenerated, sorted by the values in that column. Selecting the same header repeatedly toggles between ascending and descending order. These column header links are suppressed with the &lt;code&gt;&lt;a href=&quot;#indexoptions&quot;&gt;IndexOptions&lt;/a&gt;&lt;/code&gt; directive's &lt;code&gt;&lt;a href=&quot;#indexoptions.suppresscolumnsorting&quot;&gt;SuppressColumnSorting&lt;/a&gt;&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187a2fe037e023ef190f5f02e979a7d2fa95cc57" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;a href=&quot;mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; specified in the configuration file is default of 80 (or any other port below 1024), then it is necessary to have root privileges in order to start apache, so that it can bind to this privileged port. Once the server has started and performed a few preliminary activities such as opening its log files, it will launch several &lt;em&gt;child&lt;/em&gt; processes which do the work of listening for and answering requests from clients. The main &lt;code&gt;httpd&lt;/code&gt; process continues to run as the root user, but the child processes run as a less privileged user. This is controlled by the selected &lt;a href=&quot;mpm&quot;&gt;Multi-Processing Module&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b8c9102d77c7d55ca41887662cb5776eaccb8e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;a href=&quot;mod_request#keptbodysize&quot;&gt;KeptBodySize&lt;/a&gt;&lt;/code&gt; directive is correctly configured and valid for this included file, attempts to POST requests to the enclosing HTML document will be passed through to subrequests as POST requests as well. Without the directive, all subrequests are processed as GET requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4ba4453b4f97065207066c52f04a72403d976e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Accept:&lt;/code&gt; header contains &lt;em&gt;no&lt;/em&gt; q factors at all, httpd sets the q value of &quot;*/*&quot;, if present, to 0.01 to emulate the desired behavior. It also sets the q value of wildcards of the format &quot;type/*&quot; to 0.02 (so these are preferred over matches against &quot;*/*&quot;. If any media type on the &lt;code&gt;Accept:&lt;/code&gt; header contains a q factor, these special values are &lt;em&gt;not&lt;/em&gt; applied, so requests from browsers which send the explicit information to start with work as expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584fb91ce6324deb929eb384947711096d64889e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Alias&lt;/code&gt; directive is used within a &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; section the URL-path is omitted, and the file-path is interpreted using &lt;a href=&quot;../expr&quot;&gt;expression syntax&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f975a6c70a8a40418bb630fa25ab501c05d63f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Redirect&lt;/code&gt; directive is used within a &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; section with the &lt;var&gt;URL-path&lt;/var&gt; omitted, then the &lt;var&gt;URL&lt;/var&gt; parameter will be interpreted using &lt;a href=&quot;../expr&quot;&gt;expression syntax&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3c028b26b0a98efeb2c7ceeb6a06d6f6f90df3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ScriptAlias&lt;/code&gt; directive is used within a &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; section with the URL-path omitted, then the URL parameter will be interpreted using &lt;a href=&quot;../expr&quot;&gt;expression syntax&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af236c4126475898a1387b24b79386162c46b241" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;uid&lt;/code&gt; attribute was used instead of the &lt;code&gt;cn&lt;/code&gt; attribute in the URL above, the above three lines could be condensed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a335426bb1bc53928ea1adcbf27925c85c60b49" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;file-path&lt;/var&gt; begins with a pipe character &quot;&lt;code&gt;|&lt;/code&gt;&quot; then it is assumed to be a command to spawn to handle the error log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d747714645d22056e6436f1d9ea1e98dce4b2458" translate="yes" xml:space="preserve">
          <source>If the Apache user is compromised, for example through a flaw in a CGI process, it is possible that the cache may be targeted. When using &lt;code&gt;&lt;a href=&quot;mod/mod_cache_disk&quot;&gt;mod_cache_disk&lt;/a&gt;&lt;/code&gt;, it is relatively easy to insert or modify a cached entity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2fa946abfb1a911ca46a05e531a9450d015a14a" translate="yes" xml:space="preserve">
          <source>If the CACHE filter is specified more than once, the last instance will apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e244716d2bf3f55686b6a2b2063aa2db0f8c86b" translate="yes" xml:space="preserve">
          <source>If the ErrorDocument specifies a local redirect to a CGI script, the script should include a &quot;&lt;code&gt;Status:&lt;/code&gt;&quot; header field in its output in order to ensure the propagation all the way back to the client of the error condition that caused it to be invoked. For instance, a Perl ErrorDocument script might include the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c14626595bac93bb3a579a09abbe840c5085eb5f" translate="yes" xml:space="preserve">
          <source>If the LDAP server goes down and breaks an existing connection, &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; will attempt to re-connect, starting with the primary server, and trying each redundant server in turn. Note that this is different than a true round-robin search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9e7d61ae559148802142fd994f42db401bac23" translate="yes" xml:space="preserve">
          <source>If the URL included a query string (e.g. from a HTML form GET method) it will not be cached unless the response specifies an explicit expiration by including an &quot;Expires:&quot; header or the max-age or s-maxage directive of the &quot;Cache-Control:&quot; header, as per RFC2616 sections 13.9 and 13.2.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76db290ed92b1865df4ac49a69a06843ffacd710" translate="yes" xml:space="preserve">
          <source>If the URL is not found within the cache, &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; will add a &lt;a href=&quot;filter&quot;&gt;filter&lt;/a&gt; to the filter stack in order to record the response to the cache, and then stand down, allowing normal request processing to continue. If the content is determined to be cacheable, the content will be saved to the cache for future serving, otherwise the content will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ccedf3c1fd071fa61236861e014b40a67e34b9" translate="yes" xml:space="preserve">
          <source>If the attribute field contains the username, common name and telephone number of a user, a CGI program will have access to this information without the need to make a second independent LDAP query to gather this additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbcf7205890b5518b70bb67b290f76b50d0107a" translate="yes" xml:space="preserve">
          <source>If the cache gets full, it reserves the option to delete content from the cache to make space. Content can be deleted at any time, and can be stale or fresh. The &lt;a href=&quot;programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt; tool can be run on a once off basis, or deployed as a daemon to keep the size of the cache within the given size, or the given number of inodes. The tool attempts to delete stale content before attempting to delete fresh content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c1c17c837245aee22a0ca6abd74c0d81f01754" translate="yes" xml:space="preserve">
          <source>If the client requests &lt;code&gt;http://example.com/service/foo.txt&lt;/code&gt;, it will be told to access &lt;code&gt;http://foo2.example.com/service/foo.txt&lt;/code&gt; instead. This includes requests with &lt;code&gt;GET&lt;/code&gt; parameters, such as &lt;code&gt;http://example.com/service/foo.pl?q=23&amp;amp;a=42&lt;/code&gt;, it will be redirected to &lt;code&gt;http://foo2.example.com/service/foo.pl?q=23&amp;amp;a=42&lt;/code&gt;. Note that &lt;code&gt;POST&lt;/code&gt;s will be discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dec122707f5e194cdac5a7a70c1fe2d618dd879" translate="yes" xml:space="preserve">
          <source>If the config define &lt;code&gt;-DDUMP_CONFIG&lt;/code&gt; is set, &lt;code&gt;&lt;a href=&quot;mod_info&quot;&gt;mod_info&lt;/a&gt;&lt;/code&gt; will dump the pre-parsed configuration to &lt;code&gt;stdout&lt;/code&gt; during server startup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a601cb22559a2eb8a51c32babb677e8e2dfb053c" translate="yes" xml:space="preserve">
          <source>If the connection supports PUSH, these two resources will be sent to the client. As a web developer, you may set these headers either directly in your application response or you configure the server via</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66c6eab68db705bb8f07e1084159ad0d4f547cd" translate="yes" xml:space="preserve">
          <source>If the content found within the cache is stale, the &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; module converts the request into a &lt;strong&gt;conditional request&lt;/strong&gt;. If the origin server responds with a normal response, the normal response is cached, replacing the content already cached. If the origin server responds with a 304 Not Modified response, the content is marked as fresh again, and the cached content is served by the filter instead of saving it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed470f34eb69884e4bce98c0bb64d4b74826057" translate="yes" xml:space="preserve">
          <source>If the content has changed, then the content is served as if the request were not conditional to begin with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c42b25fe793bdfccdd6c21e189074681acaf84" translate="yes" xml:space="preserve">
          <source>If the content is new enough (younger than its &lt;strong&gt;freshness lifetime&lt;/strong&gt;), it is considered &lt;strong&gt;fresh&lt;/strong&gt;. An HTTP cache is free to serve fresh content without making any calls to the origin server at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2499f7db11188367f2690abefd5033229cf2f58" translate="yes" xml:space="preserve">
          <source>If the content is too old (older than its &lt;strong&gt;freshness lifetime&lt;/strong&gt;), it is considered &lt;strong&gt;stale&lt;/strong&gt;. An HTTP cache should contact the origin server and check whether the content is still fresh before serving stale content to a client. The origin server will either respond with replacement content if not still valid, or ideally, the origin server will respond with a code to tell the cache the content is still fresh, without the need to generate or send the content again. The content becomes fresh again and the cycle continues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52739adf786064186985f91946f14f8d25580ed1" translate="yes" xml:space="preserve">
          <source>If the directory actually contains a file specified by the &lt;code&gt;&lt;a href=&quot;#headername&quot;&gt;HeaderName&lt;/a&gt;&lt;/code&gt; directive, the module usually includes the contents of the file after a standard HTML preamble (&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;, &lt;em&gt;et cetera&lt;/em&gt;). The &lt;code&gt;SuppressHTMLPreamble&lt;/code&gt; option disables this behaviour, causing the module to start the display with the header file contents. The header file must contain appropriate HTML instructions in this case. If there is no header file, the preamble is generated as usual. If you also specify a &lt;code&gt;&lt;a href=&quot;#readmename&quot;&gt;ReadmeName&lt;/a&gt;&lt;/code&gt;, and if that file exists, The closing &amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt; tags are also ommitted from the output, under the assumption that you'll likely put those closing tags in that file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8cb75cb3649dd76791190854db4b0924be4485e" translate="yes" xml:space="preserve">
          <source>If the error is that CGI script cannot be run, the log file will contain an extra two lines:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73134ca5731abf97fff43e59ac4f3eceef967f3b" translate="yes" xml:space="preserve">
          <source>If the expressions become more complex and slow down processing significantly, you can try to optimize them according to the evaluation rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f8dd9a02b417354b090fff2a419d17c121e66c" translate="yes" xml:space="preserve">
          <source>If the file is removed while httpd is running, it will continue to maintain an open file descriptor and serve the file as it was when httpd was started. This usually also means that although the file will have been deleted, and not show up on the filesystem, extra free space will not be recovered until httpd is stopped and the file descriptor closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9063c78d878f65d8791b1290b5a29a159b5ba4f" translate="yes" xml:space="preserve">
          <source>If the file specified by &lt;code&gt;HeaderName&lt;/code&gt; contains the beginnings of an HTML document (&amp;lt;html&amp;gt;, &amp;lt;head&amp;gt;, etc.) then you will probably want to set &lt;a href=&quot;#indexoptions.suppresshtmlpreamble&quot;&gt;&lt;code&gt;IndexOptions +SuppressHTMLPreamble&lt;/code&gt;&lt;/a&gt;, so that these tags are not repeated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1141389e34a73988fa4efa3526efe349c5b626" translate="yes" xml:space="preserve">
          <source>If the header &lt;code&gt;MyRequestHeader: myvalue&lt;/code&gt; is present on the HTTP request, the response will contain the following header:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1aeab101372413c90795e3ad26c8064808e3f98" translate="yes" xml:space="preserve">
          <source>If the intent is that a URL &lt;strong&gt;starts with&lt;/strong&gt;&lt;code&gt;/extra/data&lt;/code&gt;, rather than merely &lt;strong&gt;contains&lt;/strong&gt;&lt;code&gt;/extra/data&lt;/code&gt;, prefix the regular expression with a &lt;code&gt;^&lt;/code&gt; to require this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6b98ddc783417c4e73044387a1bcddaf1030e2" translate="yes" xml:space="preserve">
          <source>If the location of the &lt;strong&gt;CACHE&lt;/strong&gt; filter in the filter chain is changed for any reason, you may need to &lt;strong&gt;flush your cache&lt;/strong&gt; to ensure that your data served remains consistent. &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; is not in a position to enforce this for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5318e67e53f912c3d08c5343a86071ff114c17f" translate="yes" xml:space="preserve">
          <source>If the maximum size is reached, newer entries replace the oldest ones. A diary entry uses 8 bytes, letting a default diary with 256 entries consume around 2 KB of memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2378e9a19eb3d676b6275d1d8efdf4e5e0dc71d8" translate="yes" xml:space="preserve">
          <source>If the normal handler is used, this directive may appear within a &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; directive. If the quick handler is used, this directive must appear within a server or virtual host context, otherwise the setting will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f07eafe59fbdc0940794e56b839ba9010d75187" translate="yes" xml:space="preserve">
          <source>If the number starts with a zero, then it is considered to be a fraction:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84755a1984cfd6108e365883bda1852dfc68ea0" translate="yes" xml:space="preserve">
          <source>If the password is not specified, the default value &quot;password&quot; will be used. To disable fake basic authentication for an URL space, specify &quot;AuthBasicFake off&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c640e1665672a7fa3f9517adf962c5b81edecd4a" translate="yes" xml:space="preserve">
          <source>If the response contains an &quot;Authorization:&quot; header, it must also contain an &quot;s-maxage&quot;, &quot;must-revalidate&quot; or &quot;public&quot; option in the &quot;Cache-Control:&quot; header, or it won't be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706df99cb2c56d2c63c2f8efc66297ed941eca4b" translate="yes" xml:space="preserve">
          <source>If the response has a status of 200 (OK), the response must also include at least one of the &quot;Etag&quot;, &quot;Last-Modified&quot; or the &quot;Expires&quot; headers, or the max-age or s-maxage directive of the &quot;Cache-Control:&quot; header, unless the &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cacheignorenolastmod&quot;&gt;CacheIgnoreNoLastMod&lt;/a&gt;&lt;/code&gt; directive has been used to require otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a8d58c20b1c4b360ea39282aeafffb41fb7e20" translate="yes" xml:space="preserve">
          <source>If the response has an HTTP status code other than 200, 203, 300, 301 or 410 it must also specify an &quot;Expires&quot; or &quot;Cache-Control&quot; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba83588c2432820ca57ea387c715ffce12784cf" translate="yes" xml:space="preserve">
          <source>If the response includes the &quot;private&quot; option in a &quot;Cache-Control:&quot; header, it will not be stored unless the &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachestoreprivate&quot;&gt;CacheStorePrivate&lt;/a&gt;&lt;/code&gt; has been used to require otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162685f4ec4bcb8d01298d0120d067be48714869" translate="yes" xml:space="preserve">
          <source>If the scoreboard is full, prevent more processes to finish gracefully due to reduced load until old processes have terminated (otherwise the situation would get worse once the load increases again).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16972bb9ba45170ae305399d61a1e385a5e9755" translate="yes" xml:space="preserve">
          <source>If the script is dedicated to handling a particular error condition, such as &lt;code&gt;404 Not Found&lt;/code&gt;, it can use the specific code and error text instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd3bfaec1c6f4bad43cd5abcb893ba70078d58a" translate="yes" xml:space="preserve">
          <source>If the script returns a &lt;code&gt;Location:&lt;/code&gt; header instead of output, then this will be translated into an HTML anchor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5382bea9cf441853416a79e3b53ffadf10b7397" translate="yes" xml:space="preserve">
          <source>If the session is exposed to the user through the use of &lt;code&gt;&lt;a href=&quot;mod_session_cookie&quot;&gt;mod_session_cookie&lt;/a&gt;&lt;/code&gt;, and the session is not protected with &lt;code&gt;&lt;a href=&quot;mod_session_crypto&quot;&gt;mod_session_crypto&lt;/a&gt;&lt;/code&gt;, the passphrase is open to potential exposure through a dictionary attack. Regardless of how the session is configured, ensure that this directive is not used within URL spaces where private user data could be exposed, or sensitive transactions can be conducted. Use at own risk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb3bed9ed12d01fc8cbfbd986ed216f5caec218" translate="yes" xml:space="preserve">
          <source>If the specified URL is a CGI program, the program will be executed and its output inserted in place of the directive in the parsed file. You may include a query string in a CGI url:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98cce125c24bc7b455d828b4ba8d2086995268e" translate="yes" xml:space="preserve">
          <source>If the timeout expires, httpd will retry in case an existing connection has been silently dropped by a firewall. However, performance will be much better if the firewall is configured to send TCP RST packets instead of silently dropping packets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc73e5cc1796fcd82c741307d1aed5aa44e9cf6" translate="yes" xml:space="preserve">
          <source>If the translation rules don't make sense for the content, translation can fail in various ways, including:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bef265198a19dbae8fbbb70b09b1aa9cfe33029" translate="yes" xml:space="preserve">
          <source>If the validity of the certificate falls below duration, &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; will get a new signed certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9716de436583dfe8712587916f936e9ce8c8ac4a" translate="yes" xml:space="preserve">
          <source>If the value begins with exec: the resulting command will be executed and the first line returned to standard output by the program will be used as the password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5786d632a1e2c3dbb2dd9320bcc60e7434e927b9" translate="yes" xml:space="preserve">
          <source>If the verbatim username can't directly bind, but needs some cosmetic transformation, see &lt;code&gt;&lt;a href=&quot;#authldapinitialbindpattern&quot;&gt; AuthLDAPInitialBindPattern&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997810c53554fdfd14ef47fd1648efc833831b70" translate="yes" xml:space="preserve">
          <source>If this directive is set to on, the value of the &lt;code&gt;REMOTE_USER&lt;/code&gt; environment variable will be set to the full distinguished name of the authenticated user, rather than just the username that was passed by the client. It is turned off by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67f44a3236c50797da6e500bbaf8a41f24e0ddb" translate="yes" xml:space="preserve">
          <source>If this directive is set, the value of the &lt;code&gt;REMOTE_USER&lt;/code&gt; environment variable will be set to the value of the attribute specified. Make sure that this attribute is included in the list of attributes in the AuthLDAPUrl definition, otherwise this directive will have no effect. This directive, if present, takes precedence over &lt;code&gt;&lt;a href=&quot;#authldapremoteuserisdn&quot;&gt;AuthLDAPRemoteUserIsDN&lt;/a&gt;&lt;/code&gt;. This directive is useful should you want people to log into a website using an email address, but a backend application expects the username as a userid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe08203b1292b2678ad231f8591fd6238e2dbf1a" translate="yes" xml:space="preserve">
          <source>If this feature is on, you can use the directive &lt;code&gt;&lt;a href=&quot;../mod/mod_http2#h2pushresource&quot;&gt;H2PushResource&lt;/a&gt;&lt;/code&gt; to trigger early hints and resource PUSHes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ca4c5dcf539e61c44922ff45b72d48f5635f0b" translate="yes" xml:space="preserve">
          <source>If this option is enabled, names are sorted in a case-insensitive manner. For instance, if the sort order is ascending by name, and &lt;code&gt;IgnoreCase&lt;/code&gt; is enabled, file Zeta will be listed after file alfa (Note: file GAMMA will always be listed before file gamma).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fbdfad6d15f59b959976155fd269c4c557798ff" translate="yes" xml:space="preserve">
          <source>If this option is enabled, subdirectory listings will &lt;em&gt;always&lt;/em&gt; appear first, followed by normal files in the directory. The listing is basically broken into two components, the files and the subdirectories, and each is sorted separately and then displayed subdirectories-first. For instance, if the sort order is descending by name, and &lt;code&gt;FoldersFirst&lt;/code&gt; is enabled, subdirectory &lt;code&gt;Zed&lt;/code&gt; will be listed before subdirectory &lt;code&gt;Beta&lt;/code&gt;, which will be listed before normal files &lt;code&gt;Gamma&lt;/code&gt; and &lt;code&gt;Alpha&lt;/code&gt;. &lt;strong&gt;This option only has an effect if &lt;a href=&quot;#indexoptions.fancyindexing&quot;&gt;&lt;code&gt;FancyIndexing&lt;/code&gt;&lt;/a&gt; is also enabled.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31aab77489282d730dcc11feb22c8ebbc40518e6" translate="yes" xml:space="preserve">
          <source>If this request header exists, its value is transformed according to a &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt; search-and-replace. The &lt;var&gt;value&lt;/var&gt; argument is a &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt;, and the &lt;var&gt;replacement&lt;/var&gt; is a replacement string, which may contain backreferences or format specifiers. The &lt;code&gt;edit&lt;/code&gt; form will match and replace exactly once in a header value, whereas the &lt;code&gt;edit*&lt;/code&gt; form will replace &lt;em&gt;every&lt;/em&gt; instance of the search pattern if it appears more than once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb7121ee4261fb74251fa5d73929edd8999fd74" translate="yes" xml:space="preserve">
          <source>If this response header exists, its value is transformed according to a &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt; search-and-replace. The &lt;var&gt;value&lt;/var&gt; argument is a &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt;, and the &lt;var&gt;replacement&lt;/var&gt; is a replacement string, which may contain backreferences or format specifiers. The &lt;code&gt;edit&lt;/code&gt; form will match and replace exactly once in a header value, whereas the &lt;code&gt;edit*&lt;/code&gt; form will replace &lt;em&gt;every&lt;/em&gt; instance of the search pattern if it appears more than once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400149d4017eec9958b169e3bfbd9b9ea787b9a5" translate="yes" xml:space="preserve">
          <source>If used in a &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; directive, the path needs to be specified below the Location, or if the word &quot;on&quot; is used, caching for the whole location will be disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3974bcf02073e9bd452d2abec2fb6b8c669fd65" translate="yes" xml:space="preserve">
          <source>If you allow non-root users to modify any files that root either executes or writes on then you open your system to root compromises. For example, someone could replace the &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; binary so that the next time you start it, it will execute some arbitrary code. If the logs directory is writeable (by a non-root user), someone could replace a log file with a symlink to some other system file, and then root might overwrite that file with arbitrary data. If the log files themselves are writeable (by a non-root user), then someone may be able to overwrite the log itself with bogus data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd654d76188f199920d718b61293ebd6596a3eee" translate="yes" xml:space="preserve">
          <source>If you are managing any site that is more than a few pages, you may find that making changes to all those pages can be a real pain, particularly if you are trying to maintain some kind of standard look across all those pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55655a8dcd8075b7231661ac57903cc83d0aa90a" translate="yes" xml:space="preserve">
          <source>If you are matching positive (&lt;code&gt;=&lt;/code&gt; or &lt;code&gt;==&lt;/code&gt;), you can capture grouped parts of the regular expression. The captured parts are stored in the special variables &lt;code&gt;$1&lt;/code&gt; .. &lt;code&gt;$9&lt;/code&gt;. The whole string matched by the regular expression is stored in the special variable &lt;code&gt;$0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27dde7e4bcf5b53971ae08d41ad374987d3386cf" translate="yes" xml:space="preserve">
          <source>If you are programming Apache 2.0 &lt;code&gt;&lt;a href=&quot;mod_isapi&quot;&gt;mod_isapi&lt;/a&gt;&lt;/code&gt; modules, you must limit your calls to &lt;code&gt;ServerSupportFunction&lt;/code&gt; to the following directives:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d54f0d893f59771db7008978d580d1de25f1e8" translate="yes" xml:space="preserve">
          <source>If you are proxying content to your server, you need to be aware that the client address will be the address of your proxy server, not the address of the client, and so using the &lt;code&gt;Require&lt;/code&gt; directive in this context may not do what you mean. See &lt;code&gt;&lt;a href=&quot;mod_remoteip&quot;&gt;mod_remoteip&lt;/a&gt;&lt;/code&gt; for one possible solution to this problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81069bf1271973c7e91a896aa740574930b7b28d" translate="yes" xml:space="preserve">
          <source>If you are really stuck with &lt;code&gt;&lt;a href=&quot;../mod/prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt; and want multiple requests, you can tweak the &lt;code&gt;&lt;a href=&quot;../mod/mod_http2#h2minworkers&quot;&gt;H2MinWorkers&lt;/a&gt;&lt;/code&gt; to make that possible. If it breaks, however, you own both parts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebdbfbfaffa36267b0cde70d16a7c04e02d0f36e" translate="yes" xml:space="preserve">
          <source>If you are testing a server that is not Internet-accessible, you can put host names in your hosts file in order to do local resolution. For example, you might want to put a record in your hosts file to map a request for &lt;code&gt;www.example.com&lt;/code&gt; to your local system, for testing purposes. This entry would look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c980d16248819c4e18d45e759b7355e200aaa778" translate="yes" xml:space="preserve">
          <source>If you are unsure whether a particular directive is permitted in a &lt;code&gt;.htaccess&lt;/code&gt; file, look at the documentation for that directive, and check the Context line for &quot;.htaccess&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40669ef956ac9d27b0fa09b8c04f35043177d12" translate="yes" xml:space="preserve">
          <source>If you are upgrading from one minor version to the next (for example, 2.4.9 to 2.4.10), please skip down to the &lt;a href=&quot;#upgrading&quot;&gt;upgrading&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794058e8ad218b25b3122b7f4e1407e9a615b80d" translate="yes" xml:space="preserve">
          <source>If you are upgrading, the installation will not overwrite your configuration files or documents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020cf8f3252135d43d1095a4d53ada0d3f78c418" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;../vhosts/name-based&quot;&gt;name-based virtual hosts&lt;/a&gt;, the &lt;code&gt;ServerName&lt;/code&gt; inside a &lt;code&gt;&lt;a href=&quot;#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; section specifies what hostname must appear in the request's &lt;code&gt;Host:&lt;/code&gt; header to match this virtual host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131d2e35e21825a8b23c08b844d01f00b0fb06f6" translate="yes" xml:space="preserve">
          <source>If you are using language negotiation you can choose between different naming conventions, because files can have more than one extension, and the order of the extensions is normally irrelevant (see the &lt;a href=&quot;mod/mod_mime#multipleext&quot;&gt;mod_mime&lt;/a&gt; documentation for details).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c548c1d1f2e583cdcffc8a0991961d75aa4393b" translate="yes" xml:space="preserve">
          <source>If you are using mod_proxy, you may wish to enable &lt;code&gt;&lt;a href=&quot;mod_proxy#proxyerroroverride&quot;&gt;ProxyErrorOverride&lt;/a&gt;&lt;/code&gt; so that you can provide custom error messages on behalf of your Origin servers. If you don't enable ProxyErrorOverride, Apache httpd will not generate custom error documents for proxied content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b0e83185b3a8c6c47325527e80932a74eeabab" translate="yes" xml:space="preserve">
          <source>If you check the &lt;a href=&quot;#errorlogs&quot;&gt;Apache error log&lt;/a&gt;, you will probably find that it says &quot;Premature end of script headers&quot;, possibly along with an error message generated by your CGI program. In this case, you will want to check each of the below sections to see what might be preventing your CGI program from emitting the proper HTTP headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd65b1b17cb73502299d059b48aa4d3fd6c7e259" translate="yes" xml:space="preserve">
          <source>If you do not want to offer any sites on port 80 any more, you may leave it open and redirect all requests to your https: sites instead. Use the &lt;code&gt;&lt;a href=&quot;#mdrequirehttps&quot;&gt;MDRequireHttps&lt;/a&gt;&lt;/code&gt; described below to do that in a convenient fashion. This will continue to answer http: challenges from Let's Encrypt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec871089d2e00ae31fe59c3c9ac3a990f586c2fb" translate="yes" xml:space="preserve">
          <source>If you don't know how to do this, you'll need to contact your network administrator, or Internet service provider, to perform this step for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dceef3c83131052ceaf4fc6132047827e720b21a" translate="yes" xml:space="preserve">
          <source>If you don't like the format in which the date gets printed, you can use the &lt;code&gt;config&lt;/code&gt; function, with a &lt;code&gt;timefmt&lt;/code&gt; attribute, to modify that formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387e2d6f3259230a8f27c1af948a400edd1b551a" translate="yes" xml:space="preserve">
          <source>If you don't want this effect &lt;em&gt;and&lt;/em&gt; the reasons above don't apply to you, you can turn off the redirect as shown below. However, be aware that there are possible security implications to doing this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7418a21a9e97b7b660f0dc1055007b90df85021" translate="yes" xml:space="preserve">
          <source>If you evaluate the request body yourself, &lt;em&gt;don't trust the &lt;code&gt;Content-Length&lt;/code&gt; header!&lt;/em&gt; The Content-Length header reflects the length of the incoming data from the client and &lt;em&gt;not&lt;/em&gt; the byte count of the decompressed data stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e3dffbaa89311ca312b6ca34804b7288b8bf97" translate="yes" xml:space="preserve">
          <source>If you fear that this lookup might fail because your DNS server is down then you can insert the hostname in &lt;code&gt;/etc/hosts&lt;/code&gt; (where you probably already have it so that the machine can boot properly). Then ensure that your machine is configured to use &lt;code&gt;/etc/hosts&lt;/code&gt; in the event that DNS fails. Depending on what OS you are using this might be accomplished by editing &lt;code&gt;/etc/resolv.conf&lt;/code&gt;, or maybe &lt;code&gt;/etc/nsswitch.conf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb52a5219d7a15e7e19373fab723a294995c4ca" translate="yes" xml:space="preserve">
          <source>If you have a request for &lt;code&gt;/index.php/foo.shtml&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt; will now treat the incoming request as &lt;code&gt;/index.php/foo.shtml&lt;/code&gt; and directives like &lt;code&gt;AddOutputFilter INCLUDES .shtml&lt;/code&gt; will add the &lt;code&gt;INCLUDES&lt;/code&gt; filter to the request. If &lt;code&gt;ModMimeUsePathInfo&lt;/code&gt; is not set, the &lt;code&gt;INCLUDES&lt;/code&gt; filter will not be added. This will work analogously for virtual paths, such as those defined by &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a230c668553a335789926a50af5e4a7e3588699" translate="yes" xml:space="preserve">
          <source>If you have information on your web site that is sensitive or intended for only a small group of people, the techniques in this article will help you make sure that the people that see those pages are the people that you wanted to see them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62338e0c4c35275d3737e32bfb5890fb7574393" translate="yes" xml:space="preserve">
          <source>If you have no intention of using dynamically loaded modules (you probably don't if you're reading this and tuning your server for every last ounce of performance), then you should add &lt;code&gt;-DDYNAMIC_MODULE_LIMIT=0&lt;/code&gt; when building your server. This will save RAM that's allocated only for supporting dynamically loaded modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11400b36d543d0c5b3c5222dfc9889591f05ef0a" translate="yes" xml:space="preserve">
          <source>If you have populated the form with fields described by &lt;code&gt;&lt;a href=&quot;#authformmethod&quot;&gt;AuthFormMethod&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#authformmimetype&quot;&gt;AuthFormMimetype&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#authformbody&quot;&gt;AuthFormBody&lt;/a&gt;&lt;/code&gt;, you probably want to set this field to a similar size as the &lt;code&gt;&lt;a href=&quot;mod_request#keptbodysize&quot;&gt;KeptBodySize&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7026827403076bef16a2b49f7a38f1d1c416115d" translate="yes" xml:space="preserve">
          <source>If you have the &lt;code&gt;DEFLATE&lt;/code&gt; filter activated, this environment variable will ignore the accept-encoding setting of your browser and will send compressed output unconditionally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698371c9888b3fb35c08929dccc845d3a052dfcd" translate="yes" xml:space="preserve">
          <source>If you have to support a client which sends broken headers and which can't be fixed, a simple workaround involving &lt;code&gt;&lt;a href=&quot;mod/mod_setenvif&quot;&gt;mod_setenvif &lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod/mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt; allows you to still accept these headers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3f946a4c60d7988037dfddb3913030d8db1cda" translate="yes" xml:space="preserve">
          <source>If you include &lt;code&gt;&lt;a href=&quot;../mod/mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt; and you also set &lt;code&gt;ExtendedStatus On&lt;/code&gt; when building and running Apache, then on every request Apache will perform two calls to &lt;code&gt;gettimeofday(2)&lt;/code&gt; (or &lt;code&gt;times(2)&lt;/code&gt; depending on your operating system), and (pre-1.3) several extra calls to &lt;code&gt;time(2)&lt;/code&gt;. This is all done so that the status report contains timing indications. For highest performance, set &lt;code&gt;ExtendedStatus off&lt;/code&gt; (which is the default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0123d84955c58dce22153fc6c63330775aced7" translate="yes" xml:space="preserve">
          <source>If you intend to cache a large number of files in this manner, you must ensure that your operating system's limit for the number of open files is set appropriately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1886459373c12ab4a9f86a13a9cd65ae7fbb2ff2" translate="yes" xml:space="preserve">
          <source>If you intend to use SSL or TLS, read this section CAREFULLY so as to understand the differences between configurations on the different LDAP toolkits supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb558a506d8517858f268daa518def264177d717" translate="yes" xml:space="preserve">
          <source>If you jumped directly to this part of the document to find out how to do authentication, it is important to note one thing. There is a common misconception that you are required to use &lt;code&gt;.htaccess&lt;/code&gt; files in order to implement password authentication. This is not the case. Putting authentication directives in a &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; section, in your main server configuration file, is the preferred way to implement this, and &lt;code&gt;.htaccess&lt;/code&gt; files should be used only if you don't have access to the main server configuration file. See &lt;a href=&quot;#when&quot;&gt;above&lt;/a&gt; for a discussion of when you should and should not use &lt;code&gt;.htaccess&lt;/code&gt; files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71d0e83be0177b0962f4417ba4b89fb5ffdd554" translate="yes" xml:space="preserve">
          <source>If you memory-map a file located on an NFS-mounted filesystem and a process on another NFS client machine deletes or truncates the file, your process may get a bus error the next time it tries to access the mapped file content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c9f742e5508d9db4a3a2a0854ab6eca5162744" translate="yes" xml:space="preserve">
          <source>If you mix things, Apache httpd will detect it and return a special response code, 421 Misdirected Request, to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7981d4c6f2bf9eb0af251a79d071ee55e8dddb" translate="yes" xml:space="preserve">
          <source>If you move this and have already data, be sure to move/copy the data first to the new location, reconfigure and then restart the server. If you reconfigure and restart first, the server will try to get new certificates that it thinks are missing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf041f937decaa6ffa02929217cc3df9b46d0d7a" translate="yes" xml:space="preserve">
          <source>If you omit the &lt;var&gt;value&lt;/var&gt; argument, the variable is set to an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146b6aa1011c7657b77e70d5ff1dd5ee9d1a1a47" translate="yes" xml:space="preserve">
          <source>If you open your favorite browser and tell it to get the address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dcde7e0bec98fc56c4a05c62b0f5a818b053ad7" translate="yes" xml:space="preserve">
          <source>If you plan to use &lt;code&gt;.htaccess&lt;/code&gt; files, you will need to have a server configuration that permits putting authentication directives in these files. This is done with the &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; directive, which specifies which directives, if any, may be put in per-directory configuration files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ffd4b41ada6e8b8abc35bd12683a16f166d12b" translate="yes" xml:space="preserve">
          <source>If you point your &lt;code&gt;ErrorDocument&lt;/code&gt; to some variety of dynamic handler such as a server-side include document, CGI script, or some variety of other handler, you may wish to use the available custom environment variables to customize this response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ebaa24887f29cc5edffd1c23654b8f4a4009e7" translate="yes" xml:space="preserve">
          <source>If you prefer to explicitly declare all the domain names, use 'manual' mode. An error will be logged if the names do not match with the expected ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e513da335c0408a371870dfe212d7526e308e738" translate="yes" xml:space="preserve">
          <source>If you set this globally, it applies to all managed domains. If you want it for a specific domain only, use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd513d98e0ed784abfe3b9e27df96c04c1f9e912" translate="yes" xml:space="preserve">
          <source>If you use any &lt;code&gt;&lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; from domain&lt;/code&gt; or &lt;code&gt;&lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; from domain&lt;/code&gt; directives (i.e., using a hostname, or a domain name, rather than an IP address) then you will pay for two DNS lookups (a reverse, followed by a forward lookup to make sure that the reverse is not being spoofed). For best performance, therefore, use IP addresses, rather than names, when using these directives, if possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a74196109337c98e4ee1572a14caa5fab551d08" translate="yes" xml:space="preserve">
          <source>If you use it in the global context, outside a specific MD, you can only specify one value, 'auto' or 'manual' as the default for all other MDs. See &lt;code&gt;&lt;a href=&quot;#mdomain&quot;&gt;MDomain&lt;/a&gt;&lt;/code&gt; for a description of these special values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c025b6231497e4932fd9f7b420856fe29dd195" translate="yes" xml:space="preserve">
          <source>If you use some special exclusions dependent on, for example, the &lt;code&gt;User-Agent&lt;/code&gt; header, you must manually configure an addition to the &lt;code&gt;Vary&lt;/code&gt; header to alert proxies of the additional restrictions. For example, in a typical configuration where the addition of the &lt;code&gt;BROTLI_COMPRESS&lt;/code&gt; filter depends on the &lt;code&gt;User-Agent&lt;/code&gt;, you should add:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2562309644518451fb4d2cb3ddef3e9f99813d79" translate="yes" xml:space="preserve">
          <source>If you use some special exclusions dependent on, for example, the &lt;code&gt;User-Agent&lt;/code&gt; header, you must manually configure an addition to the &lt;code&gt;Vary&lt;/code&gt; header to alert proxies of the additional restrictions. For example, in a typical configuration where the addition of the &lt;code&gt;DEFLATE&lt;/code&gt; filter depends on the &lt;code&gt;User-Agent&lt;/code&gt;, you should add:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d9c3685d19deec3a67a5fb3baabaed53ce32f5" translate="yes" xml:space="preserve">
          <source>If you want httpd to handle IPv4 connections only, regardless of what your platform and APR will support, specify an IPv4 address on all &lt;code&gt;&lt;a href=&quot;mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; directives, as in the following examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="376c39f06112d7ee94df440aa45a7ff0d4ce2088" translate="yes" xml:space="preserve">
          <source>If you want the content to be processed by more than one filter, their names have to be separated by semicolons. It's also possible to use one &lt;code&gt;AddOutputFilterByType&lt;/code&gt; directive for each of these filters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90fae2c31a2c6af13baad1f6a771e1e8a77fc9f2" translate="yes" xml:space="preserve">
          <source>If you want to allows users to modify the server configuration in their web space, they will need to use &lt;code&gt;.htaccess&lt;/code&gt; files to make these changes. Ensure that you have set &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; to a value sufficient for the directives that you want to permit the users to modify. See the &lt;a href=&quot;htaccess&quot;&gt;.htaccess tutorial&lt;/a&gt; for additional details on how this works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6202e10e1fe603fb30396cce85838fccd4eb4ecf" translate="yes" xml:space="preserve">
          <source>If you want to call your &lt;code&gt;.htaccess&lt;/code&gt; file something else, you can change the name of the file using the &lt;code&gt;&lt;a href=&quot;../mod/core#accessfilename&quot;&gt;AccessFileName&lt;/a&gt;&lt;/code&gt; directive. For example, if you would rather call the file &lt;code&gt;.config&lt;/code&gt; then you can put the following in your server configuration file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362143d3336485f578cadc7533842c13c08a1b27" translate="yes" xml:space="preserve">
          <source>If you want to change that message to something else, you can do so with the &lt;code&gt;errmsg&lt;/code&gt; attribute to the &lt;code&gt;config&lt;/code&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3bce406ccd1e0ba41281395763054ecab03d5a9" translate="yes" xml:space="preserve">
          <source>If you want to continue to use a MIME-type in your hyperlinks (&lt;em&gt;e.g.&lt;/em&gt;&lt;code&gt;foo.html&lt;/code&gt;) the language extension (including an encoding extension if there is one) must be on the right hand side of the MIME-type extension (&lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;foo.html.en&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e215f195fc8209164557e75ed19f0d13418b9146" translate="yes" xml:space="preserve">
          <source>If you want to extract more accurate values from your logs, you can use the &lt;var&gt;type&lt;/var&gt; argument to specify the type of data left as a note for logging. &lt;var&gt;type&lt;/var&gt; can be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e81ab13718913b917a615a4c5cd9f796a30b3e" translate="yes" xml:space="preserve">
          <source>If you want to let more than one person in, you'll need to create a group file that associates group names with a list of users in that group. The format of this file is pretty simple, and you can create it with your favorite editor. The contents of the file will look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3a270222f1f7bc3459028ca1c3b1399b4127b8" translate="yes" xml:space="preserve">
          <source>If you want to look how a particular expression is handled, you can recompile &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; using the &lt;code&gt;-DDEBUG_INCLUDE&lt;/code&gt; compiler option. This inserts for every parsed expression tokenizer information, the parse tree and how it is evaluated into the output sent to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20157084947f731db2ee1b452f73294c013b14e2" translate="yes" xml:space="preserve">
          <source>If you want to restrict the compression to particular MIME types in general, you may use the &lt;code&gt;&lt;a href=&quot;mod_filter#addoutputfilterbytype&quot;&gt;AddOutputFilterByType&lt;/a&gt;&lt;/code&gt; directive. Here is an example of enabling compression only for the html files of the Apache documentation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9087584288dd582cb9a8fb0426892004b016a6e6" translate="yes" xml:space="preserve">
          <source>If you want to specify more than one LDAP URL that Apache should try in turn, the syntax is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3957a75f21d2a62ec387710a1ab29f1908fc34e" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;code&gt;preload&lt;/code&gt; links without triggering a PUSH, you can use the &lt;code&gt;nopush&lt;/code&gt; parameter, as in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e151d666e97d53d0bebd328e3e4927f33dd2e4" translate="yes" xml:space="preserve">
          <source>If you want to use a value within another string, it is useful to surround the parameter in braces, to avoid confusion:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce442c59e0e711d95feac5edeb432920d4440fc5" translate="yes" xml:space="preserve">
          <source>If you want to use double quotes within this text, you have to write them as &lt;code&gt;&amp;amp;quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347d7f495fadd4c5ece7b26429346a74dfb59a8b" translate="yes" xml:space="preserve">
          <source>If you want your server to continue running after a system reboot, you should add a call to &lt;code&gt;&lt;a href=&quot;programs/apachectl&quot;&gt;apachectl&lt;/a&gt;&lt;/code&gt; to your system startup files (typically &lt;code&gt;rc.local&lt;/code&gt; or a file in an &lt;code&gt;rc.N&lt;/code&gt; directory). This will start Apache as root. Before doing this ensure that your server is properly configured for security and access restrictions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbebe90b78fb22d5372ab5a373a80418254917a8" translate="yes" xml:space="preserve">
          <source>If you wish designate a &lt;code&gt;cgi-bin&lt;/code&gt; subdirectory of a user's directory where everything will be treated as a CGI program, you can use the following.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d546bf2b02aaaf69651784b7692dab740a37c6" translate="yes" xml:space="preserve">
          <source>If you wish to have your module engage a handler, you need only to set &lt;code&gt;r-&amp;gt;handler&lt;/code&gt; to the name of the handler at any time prior to the &lt;code&gt;invoke_handler&lt;/code&gt; stage of the request. Handlers are implemented as they were before, albeit using the handler name instead of a content type. While it is not necessary, the naming convention for handlers is to use a dash-separated word, with no slashes, so as to not invade the media type name-space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2711c7664e764e449edc8dadc43cc042148cab44" translate="yes" xml:space="preserve">
          <source>If you wish to restrict access to portions of your site based on the host address of your visitors, this is most easily done using &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a9259b2ae0161f8cc7d662b6fe892abbe8e862" translate="yes" xml:space="preserve">
          <source>If you would prefer only the last dot-separated part of the filename to be mapped to a particular piece of meta-data, then do not use the &lt;code&gt;Add*&lt;/code&gt; directives. For example, if you wish to have the file &lt;code&gt;foo.html.cgi&lt;/code&gt; processed as a CGI script, but not the file &lt;code&gt;bar.cgi.html&lt;/code&gt;, then instead of using &lt;code&gt;AddHandler cgi-script .cgi&lt;/code&gt;, use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc46b7a58b277c6e4b60d9ba448686ebaa7bfa79" translate="yes" xml:space="preserve">
          <source>If you're completely new to the Apache HTTP Server, or even to running a website at all, you might not know where to start, or what questions to ask. This document walks you through the basics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a811b167e821c5b82064a100351e498b62d16fa0" translate="yes" xml:space="preserve">
          <source>If you're writing CGI programs in C, there are a variety of options. One of these is the &lt;code&gt;CGIC&lt;/code&gt; library, from &lt;a href=&quot;http://www.boutell.com/cgic/&quot;&gt;http://www.boutell.com/cgic/&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f89c9018d1ff69f800d63b79201169e2e77a49" translate="yes" xml:space="preserve">
          <source>If you're writing CGI programs in Perl, modules are available on &lt;a href=&quot;http://www.cpan.org/&quot;&gt;CPAN&lt;/a&gt;. The most popular module for this purpose is &lt;code&gt;CGI.pm&lt;/code&gt;. You might also consider &lt;code&gt;CGI::Lite&lt;/code&gt;, which implements a minimal set of functionality, which is all you need in most programs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1347626dd04a93ba22e8078997b0f3ff6e6484" translate="yes" xml:space="preserve">
          <source>If your CGI program depends on non-standard &lt;a href=&quot;#env&quot;&gt;environment variables&lt;/a&gt;, you will need to assure that those variables are passed by Apache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4c34a6fd2e24211e653bafb627e0042a913b77" translate="yes" xml:space="preserve">
          <source>If your OS supports a &lt;code&gt;sendfile(2)&lt;/code&gt; system call, make sure you install the release and/or patches needed to enable it. (With Linux, for example, this means using Linux 2.4 or later. For early releases of Solaris 8, you may need to apply a patch.) On systems where it is available, &lt;code&gt;sendfile&lt;/code&gt; enables Apache 2 to deliver static content faster and with lower CPU utilization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b0a4b5ebe8c36d6e0c7a8bd8ec503cf72ea771" translate="yes" xml:space="preserve">
          <source>If your application supports the generic &lt;code&gt;AUTHORIZER&lt;/code&gt; role (authentication and authorizer in one invocation), define a single provider as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc3e8e936ab86983908b760ff3feaf69fbc1469" translate="yes" xml:space="preserve">
          <source>If your application supports the separate authentication and authorization roles (&lt;code&gt;AUTHENTICATOR&lt;/code&gt; and &lt;code&gt;AUTHORIZER&lt;/code&gt;), define separate providers as follows, even if they map to the same application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a7afef16c44016ebf135d588e800bf80f4388a" translate="yes" xml:space="preserve">
          <source>If your data really needs to be secure, consider using &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; in addition to any authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f016fb1534dd33b0141c3239104e98c15274e871" translate="yes" xml:space="preserve">
          <source>If your decision about compression depends on other information than request headers (&lt;em&gt;e.g.&lt;/em&gt; HTTP version), you have to set the &lt;code&gt;Vary&lt;/code&gt; header to the value &lt;code&gt;*&lt;/code&gt;. This prevents compliant proxies from caching entirely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c667f75d9ac1b0501b1065ff426aa86350a6071" translate="yes" xml:space="preserve">
          <source>If your module needs additional C compiler flags, linker flags or libraries, add them to CFLAGS, LDFLAGS and LIBS accordingly. See other &lt;code&gt;config.m4&lt;/code&gt; files in modules directory for examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fad64125f88d128c97c214309d49f0610ad568f" translate="yes" xml:space="preserve">
          <source>If your platform supports it and you want httpd to handle IPv4 and IPv6 connections on separate sockets (i.e., to disable IPv4-mapped addresses), specify the &lt;code&gt;--disable-v4-mapped&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; option. &lt;code&gt;--disable-v4-mapped&lt;/code&gt; is the default on FreeBSD, NetBSD, and OpenBSD.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe354e7f422b3332f9cc0c8aa6badc84e51bc71" translate="yes" xml:space="preserve">
          <source>If your server doesn't have to perform DNS for any other reason then you might be able to get away with running httpd with the &lt;code&gt;HOSTRESORDER&lt;/code&gt; environment variable set to &quot;local&quot;. This all depends on what OS and resolver libraries you are using. It also affects CGIs unless you use &lt;code&gt;&lt;a href=&quot;mod/mod_env&quot;&gt;mod_env&lt;/a&gt;&lt;/code&gt; to control the environment. It's best to consult the man pages or FAQs for your OS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7903af2a1cd91ecfd86cd07130149bf010d52d32" translate="yes" xml:space="preserve">
          <source>If your setup can handle it, configuring &lt;code&gt;&lt;a href=&quot;../mod/event&quot;&gt;event&lt;/a&gt;&lt;/code&gt; mpm is nowadays the best one (if supported on your platform).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ea3b68208be9cbe3afd4e10f55d23bb793fe5a" translate="yes" xml:space="preserve">
          <source>If your site needs content negotiation, consider using &lt;code&gt;type-map&lt;/code&gt; files, rather than the &lt;code&gt;Options MultiViews&lt;/code&gt; directive to accomplish the negotiation. See the &lt;a href=&quot;../content-negotiation&quot;&gt;Content Negotiation&lt;/a&gt; documentation for a full discussion of the methods of negotiation, and instructions for creating &lt;code&gt;type-map&lt;/code&gt; files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc36d332c17c745054778c304a873983d341a79" translate="yes" xml:space="preserve">
          <source>If your system is POSIX compliant or if it implements the &lt;code&gt;pthread_mutexattr_setrobust_np()&lt;/code&gt; function, you may be able to use the &lt;code&gt;pthread&lt;/code&gt; option safely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d8b51bc5831e957dd3678966f1abc5661de3d1" translate="yes" xml:space="preserve">
          <source>If, for example, you are permitting file upload to a particular location and wish to limit the size of the uploaded file to 100K, you might use the following directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27fe1c360a69d371ba22dbd88b4718c27dbf38f" translate="yes" xml:space="preserve">
          <source>If, for example, your configuration permits access to a resource by IP address you should ensure that this content is not cached. You can do this by using the &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachedisable&quot;&gt;CacheDisable&lt;/a&gt;&lt;/code&gt; directive, or &lt;code&gt;&lt;a href=&quot;mod/mod_expires&quot;&gt;mod_expires&lt;/a&gt;&lt;/code&gt;. Left unchecked, &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; - very much like a reverse proxy - would cache the content when served and then serve it to any client, on any IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594e3b4d5d088cfa164a276546997bbe62a44b43" translate="yes" xml:space="preserve">
          <source>If, on the other hand, you are getting server errors when trying to access documents, check your httpd error log. It will likely tell you that the directive used in your &lt;code&gt;.htaccess&lt;/code&gt; file is not permitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c079cb294b28ae3d6521df9d0afca15dc4194e6" translate="yes" xml:space="preserve">
          <source>If, on the other hand, you have modules statically linked into your Apache binary, you will need to recompile Apache in order to remove unwanted modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4018ed5bbb53942b79e93f12905678f54417f934" translate="yes" xml:space="preserve">
          <source>Ignore defined session identifiers encoded in the URL when caching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e5b4946ddc33923edcd604c412398c40477edf6" translate="yes" xml:space="preserve">
          <source>Ignore query string when caching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ee52b078bceeb16f6400461ba53be634829765" translate="yes" xml:space="preserve">
          <source>Ignore request to not serve cached content to client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2691f1c22d27202887f403c05b14027b9490d2f" translate="yes" xml:space="preserve">
          <source>Ignore the fact that a response has no Last Modified header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36099609b63a93090d2faa1dbdb6a9d2ed799b28" translate="yes" xml:space="preserve">
          <source>IgnoreCase</source>
          <target state="translated">IgnoreCase</target>
        </trans-unit>
        <trans-unit id="c297c37a6db3c996a6588a64e3680ee260005e3f" translate="yes" xml:space="preserve">
          <source>IgnoreClient</source>
          <target state="translated">IgnoreClient</target>
        </trans-unit>
        <trans-unit id="f52483c8aa11d319d29e4cde2e137487fe62a4df" translate="yes" xml:space="preserve">
          <source>Illustrates the Apache module API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f0fa8b43b020120d0cde0bca2a60bb843701fc" translate="yes" xml:space="preserve">
          <source>Image Downsampling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb3ad26e2fda3cd343bd1dc49196d9e2b80c785" translate="yes" xml:space="preserve">
          <source>Image processing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b446f7b3ec681a9ba666f496199a1e963931d3c" translate="yes" xml:space="preserve">
          <source>Imagemap File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f11976cd1f2b519c8e2ce09fed0fc85ed95e846" translate="yes" xml:space="preserve">
          <source>Imagemap File Directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7163a14ad5db3e2b9b1815fa834af259db06d47b" translate="yes" xml:space="preserve">
          <source>ImapBase Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa0ac8209f07212b6e6efa4c923d8e63f1bdb30" translate="yes" xml:space="preserve">
          <source>ImapDefault Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f78ece8669356fdf1974db95c201d0068cfb450" translate="yes" xml:space="preserve">
          <source>ImapMenu Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8781d615fd77be9578225c40ac67b9471394cced" translate="yes" xml:space="preserve">
          <source>Implementation</source>
          <target state="translated">Implementation</target>
        </trans-unit>
        <trans-unit id="eef725bb17c4ef924087c55d09a53cbfecb3e7d5" translate="yes" xml:space="preserve">
          <source>Implementing a content encoding filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8878faf9f60187f368966ab642c1424ca7df8a43" translate="yes" xml:space="preserve">
          <source>Implements a disk based storage manager. Headers and bodies are stored separately on disk, in a directory structure derived from the md5 hash of the cached URL. Multiple content negotiated responses can be stored concurrently, however the caching of partial content is not supported by this module. The &lt;code&gt;&lt;a href=&quot;../programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt;&lt;/code&gt; tool is provided to list cached URLs, remove cached URLs, or to maintain the size of the disk cache within size and inode limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b432dac2775cfe23e8649bf9d6614dfd0a5dd9d0" translate="yes" xml:space="preserve">
          <source>Implements a non-threaded, pre-forking web server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748c9ae5120ad4da24698370850fc2a6d7d34c76" translate="yes" xml:space="preserve">
          <source>Implements a shared object cache based storage manager. Headers and bodies are stored together beneath a single key based on the URL of the response being cached. Multiple content negotiated responses can be stored concurrently, however the caching of partial content is not supported by this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e2df3a72f01923d5f141c193c7b348a84af734" translate="yes" xml:space="preserve">
          <source>Important compatibility note: The implementation of &lt;code&gt;dbmopen&lt;/code&gt; in the Apache modules reads the string length of the hashed values from the DBM data structures, rather than relying upon the string being NULL-appended. Some applications, such as the Netscape web server, rely upon the string being NULL-appended, so if you are having trouble using DBM files interchangeably between applications this may be a part of the problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5accdf9c2e442f1bd44af23f40fb1df697964bcb" translate="yes" xml:space="preserve">
          <source>Importantly, as the cached files are locally stored, operating system in-memory caching will typically be applied to their access also. So although the files are stored on disk, if they are frequently accessed it is likely the operating system will ensure that they are actually served from memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5581c31adb95b00fbd43bea4b5a838d47e136af2" translate="yes" xml:space="preserve">
          <source>Improving Cache Hits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4cfb74250825e25c41687e223ced16286839a1" translate="yes" xml:space="preserve">
          <source>In 'auto' mode, &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; will &lt;em&gt;drive&lt;/em&gt; a Managed Domain's properties (e.g. certificate management) whenever necessary. When a MD is not used in any virtual host, the module will do nothing. When a certificate is missing, it will try to get one. When a certificate expires soon (see &lt;code&gt;&lt;a href=&quot;#mdrenewwindow&quot;&gt;MDRenewWindow&lt;/a&gt;&lt;/code&gt;), it will renew it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5c9f83c0652943ebd31ba64437ee4ebf827468" translate="yes" xml:space="preserve">
          <source>In 'manual' mode, it is your duty to do all this. The module will provide the existing certificate to &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt;, if available. But it will not contact the CA for signup/renewal. This can be useful in clustered setups where you want just one node to perform the driving.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eccca75d5daae389d2af447f6be28fb2894ad9d" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&lt;a href=&quot;../mod/prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/mod_http2&quot;&gt;mod_http2&lt;/a&gt;&lt;/code&gt; will only process one request at at time per connection. But clients, such as browsers, will send many requests at the same time. If one of these takes long to process (or is a long polling one), the other requests will stall.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0541f0147ebef7897569877b8648b8b2326175" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_cgid&quot;&gt;mod_cgid&lt;/a&gt;&lt;/code&gt;, the length of time to wait for any individual block of output from a CGI script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e7e1635e2542c3ec872a4ad432a25dbbab202e9" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&lt;a href=&quot;mod_ext_filter&quot;&gt;mod_ext_filter&lt;/a&gt;&lt;/code&gt;, the length of time to wait for output from a filtering process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1acfc33ead488ca01a11e818a774c79cdbd5dc9" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;, the default timeout value if &lt;code&gt;&lt;a href=&quot;mod_proxy#proxytimeout&quot;&gt;ProxyTimeout&lt;/a&gt;&lt;/code&gt; is not configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efefb2680323da6d465046e862d6ceae09ccc1d6" translate="yes" xml:space="preserve">
          <source>In a &lt;code&gt;.htaccess&lt;/code&gt; in your document directory, the leading slash is removed from the value supplied to &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt;, and in the &lt;code&gt;images&lt;/code&gt; subdirectory, &lt;code&gt;/images/&lt;/code&gt; is removed from it. Thus, your regular expression needs to omit that portion as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144a35c98d4aaaae099e47af57d1a4c194f9c5f8" translate="yes" xml:space="preserve">
          <source>In a caching scenario one would want to know about the efficiency of the cache. A very simple method to find this out would be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92b41759dc342f326d3bbd659ef971af3fd9b9e" translate="yes" xml:space="preserve">
          <source>In a minimal configuration the following directive is all that is needed to enable the thundering herd lock in the default system temp directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50fbaffc70b58ed46e336d81f69a6df922300d29" translate="yes" xml:space="preserve">
          <source>In a sub-URI, such as &lt;em&gt;http://example.com/blog/&lt;/em&gt; this &lt;em&gt;sub-URI&lt;/em&gt; has to be supplied as &lt;var&gt;local-url&lt;/var&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1790a32c23df18875ed46bd42bc7d11320d6c9be" translate="yes" xml:space="preserve">
          <source>In addition to all environment variables set within the Apache configuration and passed from the shell, CGI scripts and SSI pages are provided with a set of environment variables containing meta-information about the request as required by the &lt;a href=&quot;http://www.ietf.org/rfc/rfc3875&quot;&gt;CGI specification&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2256a74f9b4c54b5d16149a99d519044f899b56e" translate="yes" xml:space="preserve">
          <source>In addition to being a &quot;basic&quot; web server, and providing static and dynamic content to end-users, Apache httpd (as well as most other web servers) can also act as a reverse proxy server, also-known-as a &quot;gateway&quot; server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b1b3cbd0d3cafba17aee90d0dad5b530bd9496" translate="yes" xml:space="preserve">
          <source>In addition to being able to &lt;code&gt;config&lt;/code&gt; the time format, you can also &lt;code&gt;config&lt;/code&gt; two other things.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a15682183ca3b2f8a606a425eaf71d37a27c14d" translate="yes" xml:space="preserve">
          <source>In addition to file type and the file encoding, another important piece of information is what language a particular document is in, and in what character set the file should be displayed. For example, the document might be written in the Vietnamese alphabet, or in Cyrillic, and should be displayed as such. This information, also, is transmitted in HTTP headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d0e2c4b8b5614dd66728231d57cc0562b89229" translate="yes" xml:space="preserve">
          <source>In addition to merely setting values literally like that, you can use any other variable, including &lt;a href=&quot;../env&quot;&gt;environment variables&lt;/a&gt; or the variables discussed above (like &lt;code&gt;LAST_MODIFIED&lt;/code&gt;, for example) to give values to your variables. You will specify that something is a variable, rather than a literal string, by using the dollar sign ($) before the name of the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e744a421956e82e65c90cdce96f7e38a5aef25" translate="yes" xml:space="preserve">
          <source>In addition to spitting out content, Apache SSI gives you the option of setting variables, and using those variables in comparisons and conditionals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0752226cc3d489a74f9d8eed99d74e3127027a3f" translate="yes" xml:space="preserve">
          <source>In addition to string-valued functions, there are also list-valued functions which take one string as argument and return a wordlist, i.e. a list of strings. The wordlist can be used with the special &lt;code&gt;-in&lt;/code&gt; operator. Functions names are not case sensitive. Modules may register additional functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb7033bbe4329609e6f8cddeb3fd022bb6c7b41" translate="yes" xml:space="preserve">
          <source>In addition to that, if the second parameter is given, a config variable is set to this value. The variable can be used in the configuration using the &lt;code&gt;${VAR}&lt;/code&gt; syntax. The variable is always globally defined and not limited to the scope of the surrounding config section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c46e40c839fe86859f1dfe393d09f557f5e4c8" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;env=&lt;/code&gt; syntax, &lt;code&gt;&lt;a href=&quot;mod/mod_log_config#logformat&quot;&gt;LogFormat&lt;/a&gt;&lt;/code&gt; supports logging values conditional upon the HTTP response code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a326911b1c9123bec51205f1ee7a264343dea2e" translate="yes" xml:space="preserve">
          <source>In addition to the information listed below, the following resources should be consulted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414d78a2db1b0425c47101eac2d7cda849d98696" translate="yes" xml:space="preserve">
          <source>In addition to the main configuration files, certain directives may go in &lt;code&gt;.htaccess&lt;/code&gt; files located in the content directories. &lt;code&gt;.htaccess&lt;/code&gt; files are primarily for people who do not have access to the main server configuration file(s). You can read more about &lt;code&gt;.htaccess&lt;/code&gt; files in the &lt;a href=&quot;howto/htaccess&quot;&gt;&lt;code&gt;.htaccess&lt;/code&gt; howto&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad1dc77a94c9aeb666fd23e36a71fdb967b3ede" translate="yes" xml:space="preserve">
          <source>In addition to the standard authorization function of checking group membership, this module can also provide server-side user session management via database-backed login/logout capabilities. Specifically, it can update a user's session status in the database whenever the user visits designated URLs (subject of course to users supplying the necessary credentials).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70621f2a9c40ebd42f23eb0f00b7e33037da869" translate="yes" xml:space="preserve">
          <source>In addition to the variables in the standard CGI environment, these are available for the &lt;code&gt;echo&lt;/code&gt; command, for &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;elif&lt;/code&gt;, and to any program invoked by the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a8dbb0670f3c544beefc67560b3d5bcacea1fc" translate="yes" xml:space="preserve">
          <source>In addition to these modules, there are also &lt;code&gt;&lt;a href=&quot;../mod/mod_authn_core&quot;&gt;mod_authn_core&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_core&quot;&gt;mod_authz_core&lt;/a&gt;&lt;/code&gt;. These modules implement core directives that are core to all auth modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762fc2ef87c6de53246de828d8191825ddd56726" translate="yes" xml:space="preserve">
          <source>In addition, &lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt; may define the &lt;a href=&quot;../handler&quot;&gt;handler&lt;/a&gt; and &lt;a href=&quot;../filter&quot;&gt;filters&lt;/a&gt; that originate and process content. The directives &lt;code&gt;&lt;a href=&quot;#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#addinputfilter&quot;&gt;AddInputFilter&lt;/a&gt;&lt;/code&gt; control the modules or scripts that serve the document. The &lt;code&gt;&lt;a href=&quot;#multiviewsmatch&quot;&gt;MultiviewsMatch&lt;/a&gt;&lt;/code&gt; directive allows &lt;code&gt;&lt;a href=&quot;mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt; to consider these file extensions to be included when testing Multiviews matches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7caa0861de9c26c106a48f54da3bcf02d12fb571" translate="yes" xml:space="preserve">
          <source>In addition, a location for the DAV lock database must be specified in the global section of your &lt;code&gt;httpd.conf&lt;/code&gt; file using the &lt;code&gt;&lt;a href=&quot;mod_dav_fs#davlockdb&quot;&gt;DavLockDB&lt;/a&gt;&lt;/code&gt; directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3bdc77702c03c792ce02afb00b37e2edb88379" translate="yes" xml:space="preserve">
          <source>In addition, it is sometimes necessary to provide the &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; script with extra information about the location of your compiler, libraries, or header files. This is done by passing either environment variables or command line options to &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt;. For more information, see the &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; manual page. Or invoke &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; using the &lt;code&gt;--help&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d9ee3e3c7a45e857d9433f4bb05c25b22ba5a8" translate="yes" xml:space="preserve">
          <source>In addition, log files may contain information supplied directly by the client, without escaping. Therefore, it is possible for malicious clients to insert control-characters in the log files, so care must be taken in dealing with raw logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8787a16f204030029b180f934606df038d8dd09e" translate="yes" xml:space="preserve">
          <source>In addition, on some platforms, like Win32, and on unix when using &lt;a href=&quot;../suexec&quot;&gt;suexec&lt;/a&gt;, you cannot pass arguments to a command in an &lt;code&gt;exec&lt;/code&gt; directive, or otherwise include spaces in the command. Thus, while the following will work under a non-suexec configuration on unix, it will not produce the desired result under Win32, or when running suexec:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73340fdad957cfbf97b861b0dedcb9eec3e42317" translate="yes" xml:space="preserve">
          <source>In addition, the administrator may optionally specify the &lt;strong&gt;precise point within the filter chain&lt;/strong&gt; where caching is to take place by adding the &lt;strong&gt;CACHE&lt;/strong&gt; filter to the output filter chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda3cdf3fe5b5fea6621a5d3b4f2935a1ee95489" translate="yes" xml:space="preserve">
          <source>In all cases, once the shared module is compiled, you must use a &lt;code&gt;&lt;a href=&quot;mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; directive in &lt;code&gt;httpd.conf&lt;/code&gt; to tell Apache httpd to activate the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4558371caf3fed5f9a02531fa25b3ce9ff90dc3" translate="yes" xml:space="preserve">
          <source>In all cases, the user's ID will be passed as a single string parameter when the SQL query is executed. It may be referenced within the query statement using a &lt;code&gt;%s&lt;/code&gt; format specifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c9e6c862046deab37984264be57151e8c57e0a" translate="yes" xml:space="preserve">
          <source>In case of Let's Encrypt, their current &lt;a href=&quot;https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf&quot;&gt;Terms of Service are here&lt;/a&gt;. Those terms might (and probably will) change over time. So, the certificate renewal might require you to update this agreement URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091a444a2fd4b2dc0601a1b9e131e1da6296d5b2" translate="yes" xml:space="preserve">
          <source>In conjunction with &lt;code&gt;Require dbd-login&lt;/code&gt; or &lt;code&gt;Require dbd-logout&lt;/code&gt;, this provides the option to redirect the client back to the Referring page (the URL in the &lt;code&gt;Referer&lt;/code&gt; HTTP request header, if present). When there is no &lt;code&gt;Referer&lt;/code&gt; header, &lt;code&gt;AuthzDBDLoginToReferer On&lt;/code&gt; will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00a8dc4bc5e40a835337ada732985caa78e07d0" translate="yes" xml:space="preserve">
          <source>In contrast to setting &lt;code&gt;Link&lt;/code&gt; response headers via &lt;code&gt;&lt;a href=&quot;mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt;, this directive will only take effect on HTTP/2 connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e58074228e139925c880a677e170c2b74a43579" translate="yes" xml:space="preserve">
          <source>In contrast to the &lt;code&gt;host&lt;/code&gt; provider, this provider does not rely on reverse DNS lookups: it simply queries the DNS for the host name and allows a client if its IP matches. As a consequence, it will only work with host names, not domain names. However, as the reverse DNS is not used, it will work with clients which use a dynamic DNS service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b630d29aa93b02c4acfd00b229780cda308a7743" translate="yes" xml:space="preserve">
          <source>In deployments where connections can be considered reliable, this timer can be disabled by setting it to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb5d5e385d6976d59560292932121107598ee45" translate="yes" xml:space="preserve">
          <source>In deployments where servers are reached locally or over reliable connections only, the value might be decreased with 0 disabling any warmup phase altogether.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad48c7d42ff39f7a52b20a3be9b2cd523b71dd7" translate="yes" xml:space="preserve">
          <source>In earlier versions of httpd, this effect typically required &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;, and the use of the &lt;code&gt;-f&lt;/code&gt; and &lt;code&gt;-d&lt;/code&gt; tests for file and directory existence. This now requires only one line of configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2baea62b8cb3752d298b9d081e0e7762be54450e" translate="yes" xml:space="preserve">
          <source>In general stat or forever is good for production, and stat or never for development.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697be94801903173f6c8047e2d77d2aed822d496" translate="yes" xml:space="preserve">
          <source>In general, &lt;code&gt;.htaccess&lt;/code&gt; files use the same syntax as the &lt;a href=&quot;../configuring#syntax&quot;&gt;main configuration files&lt;/a&gt;. What you can put in these files is determined by the &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; directive. This directive specifies, in categories, what directives will be honored if they are found in a &lt;code&gt;.htaccess&lt;/code&gt; file. If a directive is permitted in a &lt;code&gt;.htaccess&lt;/code&gt; file, the documentation for that directive will contain an Override section, specifying what value must be in &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; in order for that directive to be permitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1041061b6ff96149c069d97dc60c9b283319f9" translate="yes" xml:space="preserve">
          <source>In general, access restriction directives apply to all access methods (&lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, etc). This is the desired behavior in most cases. However, it is possible to restrict some methods, while leaving other methods unrestricted, by enclosing the directives in a &lt;code&gt;&lt;a href=&quot;core#limit&quot;&gt;&amp;lt;Limit&amp;gt;&lt;/a&gt;&lt;/code&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e66b2e555f57d87adaa9acc014d311307906125" translate="yes" xml:space="preserve">
          <source>In general, you should only use &lt;code&gt;.htaccess&lt;/code&gt; files when you don't have access to the main server configuration file. There is, for example, a common misconception that user authentication should always be done in &lt;code&gt;.htaccess&lt;/code&gt; files, and, in more recent years, another misconception that &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; directives must go in &lt;code&gt;.htaccess&lt;/code&gt; files. This is simply not the case. You can put user authentication configurations in the main server configuration, and this is, in fact, the preferred way to do things. Likewise, &lt;code&gt;mod_rewrite&lt;/code&gt; directives work better, in many respects, in the main server configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d09c19ef7d2b62797742c9ddba1def96167fc7" translate="yes" xml:space="preserve">
          <source>In its default configuration, Apache does not send the last modified date or content length HTTP headers on SSI pages, because these values are difficult to calculate for dynamic content. This can prevent your document from being cached, and result in slower perceived client performance. There are two ways to solve this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09711eb52e967a7ae7963f891033e002895aaedd" translate="yes" xml:space="preserve">
          <source>In its one parameter form, &lt;code&gt;Define&lt;/code&gt; is equivalent to passing the &lt;code&gt;-D&lt;/code&gt; argument to &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt;. It can be used to toggle the use of &lt;code&gt;&lt;a href=&quot;#ifdefine&quot;&gt;&amp;lt;IfDefine&amp;gt;&lt;/a&gt;&lt;/code&gt; sections without needing to alter &lt;code&gt;-D&lt;/code&gt; arguments in any startup scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021ee1575b413140effa382cf6666141d79beeb2" translate="yes" xml:space="preserve">
          <source>In many situations Apache httpd must construct a &lt;em&gt;self-referential&lt;/em&gt; URL -- that is, a URL that refers back to the same server. With &lt;code&gt;UseCanonicalName On&lt;/code&gt; Apache httpd will use the hostname and port specified in the &lt;code&gt;&lt;a href=&quot;#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; directive to construct the canonical name for the server. This name is used in all self-referential URLs, and for the values of &lt;code&gt;SERVER_NAME&lt;/code&gt; and &lt;code&gt;SERVER_PORT&lt;/code&gt; in CGIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99a1dbd5650335a2ecc8cf81593f079fd3971f2" translate="yes" xml:space="preserve">
          <source>In many situations Apache httpd must construct a &lt;em&gt;self-referential&lt;/em&gt; URL -- that is, a URL that refers back to the same server. With &lt;code&gt;UseCanonicalPhysicalPort On&lt;/code&gt;, Apache httpd will, when constructing the canonical port for the server to honor the &lt;code&gt;&lt;a href=&quot;#usecanonicalname&quot;&gt;UseCanonicalName&lt;/a&gt;&lt;/code&gt; directive, provide the actual physical port number being used by this request as a potential port. With &lt;code&gt;UseCanonicalPhysicalPort Off&lt;/code&gt;, Apache httpd will not ever use the actual physical port number, instead relying on all configured information to construct a valid port number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc01cd136923aaa99909cd029fa931891435b24b" translate="yes" xml:space="preserve">
          <source>In most cases, for a complete authentication and authorization configuration, &lt;code&gt;Require&lt;/code&gt; must be accompanied by &lt;code&gt;&lt;a href=&quot;mod_authn_core#authname&quot;&gt;AuthName&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_authn_core#authtype&quot;&gt;AuthType&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_auth_basic#authbasicprovider&quot;&gt;AuthBasicProvider&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_auth_digest#authdigestprovider&quot;&gt;AuthDigestProvider&lt;/a&gt;&lt;/code&gt; directives, and directives such as &lt;code&gt;&lt;a href=&quot;mod_authn_file#authuserfile&quot;&gt;AuthUserFile&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_authz_groupfile#authgroupfile&quot;&gt;AuthGroupFile&lt;/a&gt;&lt;/code&gt; (to define users and groups) in order to work correctly. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bae8c4b2a496b979902faa85351654667f666fd" translate="yes" xml:space="preserve">
          <source>In older versions of the Apache server, &lt;code&gt;isapi-isa&lt;/code&gt; was the proper handler name, rather than &lt;code&gt;isapi-handler&lt;/code&gt;. As of 2.3 development versions of the Apache server, &lt;code&gt;isapi-isa&lt;/code&gt; is no longer valid. You will need to change your configuration to use &lt;code&gt;isapi-handler&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eda3448b6c380f197d9305938311284df8bbf4e" translate="yes" xml:space="preserve">
          <source>In order for &lt;code&gt;&lt;a href=&quot;mod_dav&quot;&gt;mod_dav&lt;/a&gt;&lt;/code&gt; to manage files, it must be able to write to the directories and files under its control using the &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt; under which Apache is running. New files created will also be owned by this &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt;. For this reason, it is important to control access to this account. The DAV repository is considered private to Apache; modifying files outside of Apache (for example using FTP or filesystem-level tools) should not be allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8959d8c8ce0108363442113188cea70cb50fde0a" translate="yes" xml:space="preserve">
          <source>In order for the server to function properly, it absolutely needs to have two pieces of information about each virtual host: the &lt;code&gt;&lt;a href=&quot;mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; and at least one IP address that the server will bind and respond to. The above example does not include the IP address, so httpd must use DNS to find the address of &lt;code&gt;www.example.dom&lt;/code&gt;. If for some reason DNS is not available at the time your server is parsing its config file, then this virtual host &lt;strong&gt;will not be configured&lt;/strong&gt;. It won't be able to respond to any hits to this virtual host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a5b6e209654188584fed0cfecd6ee077cef40a" translate="yes" xml:space="preserve">
          <source>In order to aid in debugging, the &lt;code&gt;&lt;a href=&quot;mod/mod_cgi#scriptlog&quot;&gt;ScriptLog&lt;/a&gt;&lt;/code&gt; directive allows you to record the input to and output from CGI scripts. This should only be used in testing - not for live servers. More information is available in the &lt;a href=&quot;mod/mod_cgi&quot;&gt;mod_cgi&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c7e2aa789d3de1bf13da87cc78db1c073ffc20" translate="yes" xml:space="preserve">
          <source>In order to avoid cross-site scripting issues, you should &lt;em&gt;always&lt;/em&gt; encode user supplied data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920b465fa4b2d001ab582722210356eff8b5476c" translate="yes" xml:space="preserve">
          <source>In order to connect to a server, the client will first have to resolve the servername to an IP address - the location on the Internet where the server resides. Thus, in order for your web server to be reachable, it is necessary that the servername be in DNS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71631f2787d20340427b5c42a6442f160b6516f" translate="yes" xml:space="preserve">
          <source>In order to effectively manage a web server, it is necessary to get feedback about the activity and performance of the server as well as any problems that may be occurring. The Apache HTTP Server provides very comprehensive and flexible logging capabilities. This document describes how to configure its logging capabilities, and how to understand what the logs contain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad996e64a84829d9edba66cb0c59e49e7f91e980" translate="yes" xml:space="preserve">
          <source>In order to get your CGI programs to work properly, you'll need to have Apache configured to permit CGI execution. There are several ways to do this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405efbfef10475f0060b251d4913870ad17c2dcc" translate="yes" xml:space="preserve">
          <source>In order to give each user their own cgi-bin directory, you can use a &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; directive to make a particular subdirectory of a user's home directory cgi-enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc43f34c97daaf25c08b57caf0d33e49ee47b551" translate="yes" xml:space="preserve">
          <source>In order to identify each request, a unique request ID is assigned. This forensic ID can be cross logged in the normal transfer log using the &lt;code&gt;%{forensic-id}n&lt;/code&gt; format string. If you're using &lt;code&gt;&lt;a href=&quot;mod_unique_id&quot;&gt;mod_unique_id&lt;/a&gt;&lt;/code&gt;, its generated ID will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d258800d6528d9303221698013103d654592a6" translate="yes" xml:space="preserve">
          <source>In order to implement the handler features, an addition has been made to the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/developer/API.html&quot;&gt;Apache API&lt;/a&gt; that you may wish to make use of. Specifically, a new record has been added to the &lt;code&gt;request_rec&lt;/code&gt; structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f6f90f1fc95b8281d85a20118df47c39fbd6037" translate="yes" xml:space="preserve">
          <source>In order to implement virtual hosts, Apache needs to know the local socket address used to accept the connection. It is possible to eliminate this call in many situations (such as when there are no virtual hosts, or when &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; directives are used which do not have wildcard addresses). But no effort has yet been made to do these optimizations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42116ec57a79e99e93910f8cc0e34c3252f137e6" translate="yes" xml:space="preserve">
          <source>In order to make &lt;code&gt;&lt;a href=&quot;mod_dav_lock&quot;&gt;mod_dav_lock&lt;/a&gt;&lt;/code&gt; functional, you just have to specify the location of the lock database using the &lt;code&gt;&lt;a href=&quot;#davgenericlockdb&quot;&gt;DavGenericLockDB&lt;/a&gt;&lt;/code&gt; directive described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6a6505f0442410da8b7c1e9cc74642f8dad06a" translate="yes" xml:space="preserve">
          <source>In order to negotiate a resource, the server needs to be given information about each of the variants. This is done in one of two ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2758e000978706c9ae6bb10f35caec735dca4f3f" translate="yes" xml:space="preserve">
          <source>In order to retrieve the pointer to the locking provider function, you have to use the &lt;code&gt;ap_lookup_provider&lt;/code&gt; API with the arguments &lt;code&gt;dav-lock&lt;/code&gt;, &lt;code&gt;generic&lt;/code&gt;, and &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b7e0d498825e8db62cdc1d0321e2d580cb1ef3" translate="yes" xml:space="preserve">
          <source>In order to support advanced techniques (such as cookies or special URL-paths) to determine the user's preferred language, since httpd 2.0.47 &lt;code&gt;&lt;a href=&quot;mod/mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt; recognizes the &lt;a href=&quot;env&quot;&gt;environment variable&lt;/a&gt;&lt;code&gt;prefer-language&lt;/code&gt;. If it exists and contains an appropriate language tag, &lt;code&gt;&lt;a href=&quot;mod/mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt; will try to select a matching variant. If there's no such variant, the normal negotiation process applies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b23f07135a529cfd84338192975a62591b3f4b26" translate="yes" xml:space="preserve">
          <source>In order to use this, you need to explicitly enable it on the server via</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81dc4a1976ea75193757dcda0c0751e2aad342b" translate="yes" xml:space="preserve">
          <source>In other cases, there may be a need to change the URL of a particular resource on every request, usually by adding a &quot;cachebuster&quot; string to the URL. If this content is declared cacheable by a server for a significant freshness lifetime, these entries can crowd out legitimate entries in a cache. While &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; provides a &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cacheignoreurlsessionidentifiers&quot;&gt;CacheIgnoreURLSessionIdentifiers&lt;/a&gt;&lt;/code&gt; directive, this directive should be used with care to ensure that downstream proxy or browser caches aren't subjected to the same denial of service issue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28f34077bfdf358347ec677728e60ed47918395" translate="yes" xml:space="preserve">
          <source>In other words, just changing &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; will not have the same effect. At a minimum, you need to add &lt;code&gt;^&lt;/code&gt; to the beginning of the regular expression and add &lt;code&gt;(.*)$&lt;/code&gt; to the end, and add &lt;code&gt;$1&lt;/code&gt; to the end of the replacement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b1b9cf0952e2f31df101d3ad00ed473710fcc4" translate="yes" xml:space="preserve">
          <source>In particular, if you are creating an &lt;code&gt;Alias&lt;/code&gt; to a directory outside of your &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt;, you may need to explicitly permit access to the target directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9733494e0aa979a912c30ffdc44926c4ba56c936" translate="yes" xml:space="preserve">
          <source>In particular, this module can leak sensitive information from the configuration directives of other Apache modules such as system paths, usernames/passwords, database names, etc. Therefore, this module should &lt;strong&gt;only&lt;/strong&gt; be used in a controlled environment and always with caution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0ab17ef3f44a22cf0b8ad12e6b1210341c283a" translate="yes" xml:space="preserve">
          <source>In previous 2.3.x releases, the default was effectively to ignore LuaHook* directives from parent configuration sections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa11ab8a306b41071f151022755977ec2d567046" translate="yes" xml:space="preserve">
          <source>In releases prior to 2.4, this module did not take any action if any other handler was configured for a URL. This allows directory indexes to be served even when a &lt;code&gt;SetHandler&lt;/code&gt; directive is specified for an entire directory, but it can also result in some conflicts with modules such as &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc17b2aac0d9bf584f4c0aa53431a65d1503313c" translate="yes" xml:space="preserve">
          <source>In situations where Apache 2.x can ignore the contents of the file to be delivered -- for example, when serving static file content -- it normally uses the kernel sendfile support for the file if the OS supports the &lt;code&gt;sendfile(2)&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e628e148cdf08986cfa9f0ddc033c1780441240c" translate="yes" xml:space="preserve">
          <source>In situations where Apache 2.x needs to look at the contents of a file being delivered--for example, when doing server-side-include processing--it normally memory-maps the file if the OS supports some form of &lt;code&gt;mmap(2)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f1a3e792d05cdf14f75d1a886444546b6cae90" translate="yes" xml:space="preserve">
          <source>In such scenarios, httpd itself does not generate or host the data, but rather the content is obtained by one or several backend servers, which normally have no direct connection to the external network. As httpd receives a request from a client, the request itself is &lt;em&gt;proxied&lt;/em&gt; to one of these backend servers, which then handles the request, generates the content and then sends this content back to httpd, which then generates the actual HTTP response back to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d881a7ff121abad262163b99962573ae2507b02" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;semiformatted&lt;/code&gt; menu, comments are printed where they occur in the imagemap file. Blank lines are turned into HTML breaks. No header or hrule is printed, but otherwise the menu is the same as a &lt;code&gt;formatted&lt;/code&gt; menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2947fce709df5603a75706378c2d960b5f04f0e" translate="yes" xml:space="preserve">
          <source>In the &lt;em&gt;balancer-manager&lt;/em&gt; the current state, or &lt;em&gt;status&lt;/em&gt;, of a worker is displayed and can be set/reset. The meanings of these statuses are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc73e3e63c6dfb6b18d5a466dfa84edbd266157" translate="yes" xml:space="preserve">
          <source>In the Apache HTTP Server API, the handler is a specific kind of hook responsible for generating the response. Examples of modules that include a handler are &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ecdd8799a8937c2203f90faf90a7e654d32b1a6" translate="yes" xml:space="preserve">
          <source>In the above example, authentication will be required for the &lt;code&gt;/var/www/private&lt;/code&gt; directory, but will not be required for the &lt;code&gt;/var/www/private/public&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcb3d90dcf1d7734dd7d60c09fda6140e73000ab" translate="yes" xml:space="preserve">
          <source>In the above, any requests which start with the &lt;code&gt;/images&lt;/code&gt; path with be proxied to the specified backend, otherwise it will be handled locally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e143fa7f0b573ce250e9c837cbab019682fd810" translate="yes" xml:space="preserve">
          <source>In the case of &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directives, in &lt;code&gt;.htaccess&lt;/code&gt; context these regular expressions must be re-compiled with every request to the directory, whereas in main server configuration context they are compiled once and cached. Additionally, the rules themselves are more complicated, as one must work around the restrictions that come with per-directory context and &lt;code&gt;mod_rewrite&lt;/code&gt;. Consult the &lt;a href=&quot;../rewrite/intro#htaccess&quot;&gt;Rewrite Guide&lt;/a&gt; for more detail on this subject.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb84611880b49e28cc8c529093a6da6e9e2ebbf4" translate="yes" xml:space="preserve">
          <source>In the case of a content negotiated via the &quot;Vary&quot; header, a &quot;.vary&quot; directory will be created for the URL in question. This directory will have multiple &quot;.data&quot; files corresponding to the differently negotiated content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8230ddde0cf4c04b5829eed34deff59370c2ba54" translate="yes" xml:space="preserve">
          <source>In the case of multiple least-busy workers, the statistics (and weightings) used by the Request Counting method are used to break the tie. Over time, the distribution of work will come to resemble that characteristic of &lt;code&gt;byrequests&lt;/code&gt; (as implemented by &lt;code&gt;&lt;a href=&quot;mod_lbmethod_byrequests&quot;&gt;mod_lbmethod_byrequests&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbeba7cd23dd1ed29f7d8c31521aa0935a9915ed" translate="yes" xml:space="preserve">
          <source>In the current implementation, these workers use a separate thread pool from the MPM workers that you might be familiar with. This is just how things are right now and not intended to be like this forever. (It might be forever for the 2.4.x release line, though.) So, HTTP/2 workers, or shorter H2Workers, will not show up in &lt;code&gt;&lt;a href=&quot;mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt;. They are also not counted against directives such as &lt;code&gt;&lt;a href=&quot;mpm_common#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt;. However they take &lt;code&gt;&lt;a href=&quot;mpm_common#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt; as default if you have not configured something else via &lt;code&gt;&lt;a href=&quot;#h2minworkers&quot;&gt;H2MinWorkers&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#h2maxworkers&quot;&gt;H2MaxWorkers&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2b0eefa3c7eb6de87e6830b2362d7e4bd6aad8" translate="yes" xml:space="preserve">
          <source>In the default configuration, &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; inserts the caching filter as far forward as possible within the filter stack, utilising the &lt;strong&gt;quick handler&lt;/strong&gt; to bypass all per request processing when returning content to the client. In this mode of operation, &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; may be thought of as a caching proxy server bolted to the front of the webserver, while running within the webserver itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52730053baed86ecacf713e9592c908cd9ae15a5" translate="yes" xml:space="preserve">
          <source>In the default enabled configuration, the cache operates within the quick handler phase. This phase short circuits the majority of server processing, and represents the most performant mode of operation for a typical server. The cache &lt;strong&gt;bolts onto&lt;/strong&gt; the front of the server, and the majority of server processing is avoided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100b5585f2c76516c603381664553d30ac617200" translate="yes" xml:space="preserve">
          <source>In the directory &lt;code&gt;/www/htdocs/example1/example2&lt;/code&gt; we have a &lt;code&gt;.htaccess&lt;/code&gt; file containing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2f4f6fc9f22164e7b7882f142832c95b7f72d5" translate="yes" xml:space="preserve">
          <source>In the directory &lt;code&gt;/www/htdocs/example1&lt;/code&gt; we have a &lt;code&gt;.htaccess&lt;/code&gt; file containing the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5da14321d9036ef6d866f52249c1a35c22a2a9" translate="yes" xml:space="preserve">
          <source>In the event of a problem or error, Apache httpd can be configured to do one of four things,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b368a86e6901ee79f40f56f029be3115bb0366b" translate="yes" xml:space="preserve">
          <source>In the event that a document does not provide an expiry date but does provide a last-modified date, an expiry date can be calculated based on the time since the document was last modified. The &lt;code&gt;CacheLastModifiedFactor&lt;/code&gt; directive specifies a &lt;var&gt;factor&lt;/var&gt; to be used in the generation of this expiry date according to the following formula: &lt;code&gt;expiry-period = time-since-last-modified-date * factor expiry-date = current-date + expiry-period&lt;/code&gt; For example, if the document was last modified 10 hours ago, and &lt;var&gt;factor&lt;/var&gt; is 0.1 then the expiry-period will be set to 10*0.1 = 1 hour. If the current time was 3:00pm then the computed expiry-date would be 3:00pm + 1hour = 4:00pm. If the expiry-period would be longer than that set by &lt;code&gt;CacheMaxExpire&lt;/code&gt;, then the latter takes precedence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a95c2c129b65ecd0f60da8cd983ef92767c0e08" translate="yes" xml:space="preserve">
          <source>In the event that the URL space overlaps between different &lt;code&gt;CacheEnable&lt;/code&gt; directives (as in the example below), each possible storage manager will be run until the first one that actually processes the request. The order in which the storage managers are run is determined by the order of the &lt;code&gt;CacheEnable&lt;/code&gt; directives in the configuration file. &lt;code&gt;CacheEnable&lt;/code&gt; directives within &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;LocationMatch&amp;gt;&lt;/code&gt; sections are processed before globally defined &lt;code&gt;CacheEnable&lt;/code&gt; directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900cc283d2bca00ba4d16994876ca9e426139790" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;code&gt;&lt;a href=&quot;#allowoverride&quot;&gt;AllowOverride &lt;/a&gt;&lt;/code&gt; grants permission to the &lt;code&gt;AuthConfig&lt;/code&gt; directive grouping and &lt;code&gt;AllowOverrideList&lt;/code&gt; grants permission to only two directives from the &lt;code&gt;FileInfo&lt;/code&gt; directive grouping. All others will cause an internal server error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e102f773efcad198bfd61da7c574bbd172bcecb" translate="yes" xml:space="preserve">
          <source>In the example above, all directives that are neither in the group &lt;code&gt;AuthConfig&lt;/code&gt; nor &lt;code&gt;Indexes&lt;/code&gt; cause an internal server error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0507498a6b6a21ce268e9d0518276e1e9cc5d5" translate="yes" xml:space="preserve">
          <source>In the example above, only the &lt;code&gt;Redirect&lt;/code&gt; and &lt;code&gt;RedirectMatch&lt;/code&gt; directives are allowed. All others will cause an internal server error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764e7bbf6937273b4df357da0d2255518112f817" translate="yes" xml:space="preserve">
          <source>In the example below, where a trailing slash is used, requests to /private2/ and /private2/file.txt will have the enclosed directives applied, but /private2 and /private2other would not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0198fe34b25825a466cbdf29c555e4d9b0e1b3d" translate="yes" xml:space="preserve">
          <source>In the example below, where no trailing slash is used, requests to /private1, /private1/ and /private1/file.txt will have the enclosed directives applied, but /private1other would not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c793ddb391799f9676ebb0bda0f5850fa7bbf098" translate="yes" xml:space="preserve">
          <source>In the first example, the &lt;code&gt;User-agent&lt;/code&gt; will be logged if the HTTP status code is 400 or 501. In other cases, a literal &quot;-&quot; will be logged instead. Likewise, in the second example, the &lt;code&gt;Referer&lt;/code&gt; will be logged if the HTTP status code is &lt;strong&gt;not&lt;/strong&gt; 200, 204, or 302. (Note the &quot;!&quot; before the status codes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81da996241c2f8b4480bd0dcf977960fd76b8a52" translate="yes" xml:space="preserve">
          <source>In the first form, &lt;var&gt;address&lt;/var&gt; is a fully qualified domain name (or a partial domain name); you may provide multiple addresses or domain names, if desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f868aa0eda0e3af6b7871085b700eecc810503c" translate="yes" xml:space="preserve">
          <source>In the first way the DSO's are usually called &lt;em&gt;shared libraries&lt;/em&gt; or &lt;em&gt;DSO libraries&lt;/em&gt; and named &lt;code&gt;libfoo.so&lt;/code&gt; or &lt;code&gt;libfoo.so.1.2&lt;/code&gt;. They reside in a system directory (usually &lt;code&gt;/usr/lib&lt;/code&gt;) and the link to the executable program is established at build-time by specifying &lt;code&gt;-lfoo&lt;/code&gt; to the linker command. This hard-codes library references into the executable program file so that at start-time the Unix loader is able to locate &lt;code&gt;libfoo.so&lt;/code&gt; in &lt;code&gt;/usr/lib&lt;/code&gt;, in paths hard-coded via linker-options like &lt;code&gt;-R&lt;/code&gt; or in paths configured via the environment variable &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;. It then resolves any (yet unresolved) symbols in the executable program which are available in the DSO.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca079e26dce1b7d6fad032ba43f7df7c8ea774e5" translate="yes" xml:space="preserve">
          <source>In the following example, all hosts in the example.org domain are allowed access; all other hosts are denied access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243d10e71b877b094d398254deb772e9eecf071d" translate="yes" xml:space="preserve">
          <source>In the following example, all users in the &lt;code&gt;alpha&lt;/code&gt; and &lt;code&gt;beta&lt;/code&gt; groups are authorized, except for those who are also in the &lt;code&gt;reject&lt;/code&gt; group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b142e6288d833347e7dec9596a285fe96ca26cff" translate="yes" xml:space="preserve">
          <source>In the following example, the mutex mechanism for the MPM accept mutex will be changed from the compiled-in default to &lt;code&gt;fcntl&lt;/code&gt;, with the associated lock file created in directory &lt;code&gt;/var/httpd/locks&lt;/code&gt;. The mutex mechanism for all other mutexes will be changed from the compiled-in default to &lt;code&gt;sysvsem&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665505f3f1914cbefd9e1181122f18bac8228565" translate="yes" xml:space="preserve">
          <source>In the former case, the directives between the start and end markers are only processed if a directive of the given name is available at the time of processing. The second format reverses the test, and only processes the directives if &lt;var&gt;directive-name&lt;/var&gt; is &lt;strong&gt;not&lt;/strong&gt; available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9294be38bb571023c8672b38497dc30d5a273b43" translate="yes" xml:space="preserve">
          <source>In the former case, the directives between the start and end markers are only processed if a section directive of the given name is available at the time of processing. The second format reverses the test, and only processes the directives if &lt;var&gt;section-name&lt;/var&gt; is &lt;strong&gt;not&lt;/strong&gt; an available section directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e1cea19981ff895355226406c56db1de53df492" translate="yes" xml:space="preserve">
          <source>In the former case, the directives between the start and end markers are only processed if the module named &lt;var&gt;module&lt;/var&gt; is included in Apache httpd -- either compiled in or dynamically loaded using &lt;code&gt;&lt;a href=&quot;mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt;. The second format reverses the test, and only processes the directives if &lt;var&gt;module&lt;/var&gt; is &lt;strong&gt;not&lt;/strong&gt; included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd049bbcdeb128550c493dedde0034f9433163df" translate="yes" xml:space="preserve">
          <source>In the former case, the directives between the start and end markers are only processed if the parameter named &lt;var&gt;parameter-name&lt;/var&gt; is defined. The second format reverses the test, and only processes the directives if &lt;var&gt;parameter-name&lt;/var&gt; is &lt;strong&gt;not&lt;/strong&gt; defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1372707efc2c398ddd4d11281cc77e0970f8ae71" translate="yes" xml:space="preserve">
          <source>In the latter part of the article, we'll talk about some of the somewhat more advanced things that can be done with SSI, such as conditional statements in your SSI directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec87deb1db93922e2104568dfbc7848b3c7c22e6" translate="yes" xml:space="preserve">
          <source>In the next example, all hosts in the example.org domain are allowed access, except for the hosts which are in the foo.example.org subdomain, who are denied access. All hosts not in the example.org domain are denied access because the default state is to &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; access to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e1673815243d32021bd18336f6a9e61a11e8f7" translate="yes" xml:space="preserve">
          <source>In the second form, &lt;var&gt;ip.address&lt;/var&gt; is an IP address, a partial IP address, a network/netmask pair, or a network/nnn CIDR specification. Either IPv4 or IPv6 addresses may be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bfdf608a58172d0b1194e9669ba4deb98f60aca" translate="yes" xml:space="preserve">
          <source>In the second way the DSO's are usually called &lt;em&gt;shared objects&lt;/em&gt; or &lt;em&gt;DSO files&lt;/em&gt; and can be named with an arbitrary extension (although the canonical name is &lt;code&gt;foo.so&lt;/code&gt;). These files usually stay inside a program-specific directory and there is no automatically established link to the executable program where they are used. Instead the executable program manually loads the DSO at run-time into its address space via &lt;code&gt;dlopen()&lt;/code&gt;. At this time no resolving of symbols from the DSO for the executable program is done. But instead the Unix loader automatically resolves any (yet unresolved) symbols in the DSO from the set of symbols exported by the executable program and its already loaded DSO libraries (especially all symbols from the ubiquitous &lt;code&gt;libc.so&lt;/code&gt;). This way the DSO gets knowledge of the executable program's symbol set as if it had been statically linked with it in the first place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c088e4c8ff3b9615721bc67eef89f9b04a4474af" translate="yes" xml:space="preserve">
          <source>In the server configuration file, associate files with the &lt;code&gt;send-as-is&lt;/code&gt; handler &lt;em&gt;e.g.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9509d8dc4540fcf4afaf5fc119581939396842" translate="yes" xml:space="preserve">
          <source>In the server configuration file, put</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f22dae1310638ecf8d7adefb54ed1ce8635d4b6" translate="yes" xml:space="preserve">
          <source>In the server configuration file, use the &lt;code&gt;&lt;a href=&quot;mod_mime#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt; directive to associate ISAPI files with the &lt;code&gt;isapi-handler&lt;/code&gt; handler, and map it to them with their file extensions. To enable any .dll file to be processed as an ISAPI extension, edit the httpd.conf file and add the following line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0451d6f83be2cddb287e7a38e02aad92dd658025" translate="yes" xml:space="preserve">
          <source>In the simple example above, a URL has been protected by &lt;code&gt;&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt;&lt;/code&gt;, but the user has yet to be given an opportunity to enter their username and password. Options for doing so include providing a dedicated standalone login page for this purpose, or for providing the login page inline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af6ed86a8f8ec31db3156ff7ee5e40b0501a8220" translate="yes" xml:space="preserve">
          <source>In the traditional filtering model, filters are inserted unconditionally using &lt;code&gt;&lt;a href=&quot;mod_mime#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; and family. Each filter then needs to determine whether to run, and there is little flexibility available for server admins to allow the chain to be configured dynamically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad0c9ca189b82ce1849d901851d7d08f53be7eb0" translate="yes" xml:space="preserve">
          <source>In the traditional model, output filters are a simple chain from the content generator (handler) to the client. This works well provided the filter chain can be correctly configured, but presents problems when the filters need to be configured dynamically based on the outcome of the handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86635c7fbeec4b0298ba6544b56152b2ae7bf39d" translate="yes" xml:space="preserve">
          <source>In their recent documentation, Microsoft appears to have abandoned the distinction between the two &lt;code&gt;HSE_REQ_SEND_URL&lt;/code&gt; functions. Apache continues to treat them as two distinct functions with different requirements and behaviors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ecac168f35254ad658d142ab61e2ea589a1b4a" translate="yes" xml:space="preserve">
          <source>In this case, browsers with a user-agent string beginning with &lt;code&gt;KnockKnock/2.0&lt;/code&gt; will be allowed access, and all others will be denied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201a37fdc0b0a453489f6a62da6adf2af5b3cf85" translate="yes" xml:space="preserve">
          <source>In this case, the error message should be specific to the particular syntax error that you have committed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f624839ca9027cfbe6b1e4bf7ee098057f4b3bbc" translate="yes" xml:space="preserve">
          <source>In this document we discuss the logging modules that are a standard part of the http server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74cceabeb689c320ea020e94fe16452a5416b32" translate="yes" xml:space="preserve">
          <source>In this example the file provider will attempt to authenticate the user first. If it is unable to authenticate the user, the LDAP provider will be called. This allows the scope of authentication to be broadened if your organization implements more than one type of authentication store. Other authentication and authorization scenarios may include mixing one type of authentication with a different type of authorization. For example, authenticating against a password file yet authorizing against an LDAP directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc82b4125b2c46da46094f6c9950818e650079b0" translate="yes" xml:space="preserve">
          <source>In this example, requests for files with a MIME content type of &lt;code&gt;image/gif&lt;/code&gt; will be handled by the specified cgi script &lt;code&gt;/cgi-bin/images.cgi&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ae4cb5b93cb4ffc0c441e69fa5eaa398122e0d" translate="yes" xml:space="preserve">
          <source>In this example, requests for files with a file extension of &lt;code&gt;.xyz&lt;/code&gt; are handled by the specified cgi script &lt;code&gt;/cgi-bin/program.cgi&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc078aa8eb489bcf02031a8fb0aff5573827ad37" translate="yes" xml:space="preserve">
          <source>In this example, the domain 'www.example.org' is automatically added to the MD 'example.org'. Similarly for 'example2.org' where 'auto' is configured explicitly. Whenever you add more ServerAlias names to this virtual host, they will be added as well to the Managed Domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74072832a10b07f84b64d936698e8e9f12a9a6eb" translate="yes" xml:space="preserve">
          <source>In this example, the httpd is able to send the HTTP response header and the requested file with a single &lt;code&gt;sendfilev(2)&lt;/code&gt; system call. Sendfile semantics vary among operating systems. On some other systems, it is necessary to do a &lt;code&gt;write(2)&lt;/code&gt; or &lt;code&gt;writev(2)&lt;/code&gt; call to send the headers before calling &lt;code&gt;sendfile(2)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb7e6a3abe35bf30c4022d83251bcaa6077e891" translate="yes" xml:space="preserve">
          <source>In this example, we pass a fixed username and password to a backend server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d8f982a049673d48aea63055c761663d17b653" translate="yes" xml:space="preserve">
          <source>In this example, we pass the email address extracted from a client certificate, extending the functionality of the FakeBasicAuth option within the &lt;code&gt;&lt;a href=&quot;mod_ssl#ssloptions&quot;&gt;SSLOptions&lt;/a&gt;&lt;/code&gt; directive. Like the FakeBasicAuth option, the password is set to the fixed string &quot;password&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a57a712c1e1c6e57c0a564c4ec1ab15cdc21f4" translate="yes" xml:space="preserve">
          <source>In this mode, &lt;code&gt;FCGI_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHORIZER&lt;/code&gt; and &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHENTICATOR&lt;/code&gt;. The application must be defined as provider type &lt;em&gt;authn&lt;/em&gt; using &lt;code&gt;&lt;a href=&quot;#authnzfcgidefineprovider&quot;&gt; AuthnzFcgiDefineProvider&lt;/a&gt;&lt;/code&gt; and enabled with &lt;code&gt;&lt;a href=&quot;mod_auth_basic#authbasicprovider&quot;&gt;AuthBasicProvider&lt;/a&gt;&lt;/code&gt;. When invoked, the application is expected to authenticate the client using the provided user id and password. Example application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f88dbc93e24cc89acc8bf0f85a4d8e1210c16d0" translate="yes" xml:space="preserve">
          <source>In this mode, &lt;code&gt;FCGI_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHORIZER&lt;/code&gt; and &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHENTICATOR&lt;/code&gt;. The application must be defined as provider type &lt;em&gt;authn&lt;/em&gt; using &lt;code&gt;&lt;a href=&quot;#authnzfcgidefineprovider&quot;&gt; AuthnzFcgiDefineProvider&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;#authnzfcgicheckauthnprovider&quot;&gt;AuthnzFcgiCheckAuthnProvider&lt;/a&gt;&lt;/code&gt; specifies when it is called. Example application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a355d5d14e661e37316e5c2ae9f3aeead9b508d9" translate="yes" xml:space="preserve">
          <source>In this mode, &lt;code&gt;FCGI_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHORIZER&lt;/code&gt; and &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHORIZER&lt;/code&gt;. The application must be defined as provider type &lt;em&gt;authz&lt;/em&gt; using &lt;code&gt;&lt;a href=&quot;#authnzfcgidefineprovider&quot;&gt; AuthnzFcgiDefineProvider&lt;/a&gt;&lt;/code&gt;. When invoked, the application is expected to authorize the client using the provided user id and other request data. Example application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2777994ae73785cd20b3f91647c6c6ec7e0d875" translate="yes" xml:space="preserve">
          <source>In this mode, the cache &lt;strong&gt;bolts onto&lt;/strong&gt; the front of the server, acting as if a free standing RFC 2616 caching proxy had been placed in front of the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1df8aa9c5282cbf88fea36f55ec9fb26659f893" translate="yes" xml:space="preserve">
          <source>In this mode, which supports the web server-agnostic FastCGI &lt;code&gt;AUTHORIZER&lt;/code&gt; protocol, &lt;code&gt;FCGI_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHORIZER&lt;/code&gt; and &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; is not set. The application must be defined as provider type &lt;em&gt;authnz&lt;/em&gt; using &lt;code&gt;&lt;a href=&quot;#authnzfcgidefineprovider&quot;&gt; AuthnzFcgiDefineProvider&lt;/a&gt;&lt;/code&gt;. The application is expected to handle both authentication and authorization in the same invocation using the user id, password, and other request data. The invocation occurs during the Apache httpd API authentication phase. If the application returns 200 and the same provider is invoked during the authorization phase (via &lt;code&gt;Require&lt;/code&gt;), mod_authnz_fcgi will return success for the authorization phase without invoking the application. Example application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645ddd70d4398fd46db12501940cfae5e9ae7b84" translate="yes" xml:space="preserve">
          <source>In this scenario all files requested in &lt;code&gt;/cgi-bin/&lt;/code&gt; will be handled by the file you have configured, this allows you to use your own custom handler. You may want to use this as a wrapper for CGI so that you can add content, or some other bespoke action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bcdf5b48d6c8fcb1c0c0236a490e008ca41c3d3" translate="yes" xml:space="preserve">
          <source>In this scenario, the cache behaves as if it has been &quot;bolted on&quot; to the back of the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29ddb25e9435785b8c6b449418ff365ec1875b8" translate="yes" xml:space="preserve">
          <source>In this scenario, the cache behaves as if it has been &quot;bolted on&quot; to the front of the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3ae4281c6f6e26dc13dcce73e9de5150ac897b" translate="yes" xml:space="preserve">
          <source>In this trace, a client has requested a 10KB static file from the httpd. Traces of non-static requests or requests with content negotiation look wildly different (and quite ugly in some cases).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d20292d1efb7e80bb2830657bef9c667c0b773" translate="yes" xml:space="preserve">
          <source>In this trace, the listener thread is running within LWP #67.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc2ec3fcaa7a16479521200d5da5d15aa187ea3" translate="yes" xml:space="preserve">
          <source>In typical operation, Apache is started by the root user, and it switches to the user defined by the &lt;code&gt;&lt;a href=&quot;../mod/mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; directive to serve hits. As is the case with any command that root executes, you must take care that it is protected from modification by non-root users. Not only must the files themselves be writeable only by root, but so must the directories, and parents of all directories. For example, if you choose to place ServerRoot in &lt;code&gt;/usr/local/apache&lt;/code&gt; then it is suggested that you create that directory as root, with commands like these:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c66429b8ac221feef28ca30aebe876b9b4b7fe" translate="yes" xml:space="preserve">
          <source>In your server configuration file, you'll see a line such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc56364317cf88f74596613a331ab9866894ec05" translate="yes" xml:space="preserve">
          <source>In-Memory Caching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f461d3ca7d12a08d907beea3284b66b61e324789" translate="yes" xml:space="preserve">
          <source>Include Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0537d7dfb2f6436ddb848c19841e34bf47adf2ad" translate="yes" xml:space="preserve">
          <source>Include Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2f30a34bc4d7847696c0adfea923e5d9c322bd" translate="yes" xml:space="preserve">
          <source>Include the provider you're cacheing for in an &lt;code&gt;AuthnCacheProvideFor&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beca8e894fe113f1a53b75e0e51d6f072bfc985f" translate="yes" xml:space="preserve">
          <source>IncludeOptional Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f06e3b6ff40817d88f03cf87f7c344647d48d1" translate="yes" xml:space="preserve">
          <source>Includes other configuration files from within the server configuration files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74f0dbf400d3ae05a3b7f43b899ad122211bda0" translate="yes" xml:space="preserve">
          <source>Including a standard footer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc9ab92f6f5677021de486d6b660f0611bb0ffb" translate="yes" xml:space="preserve">
          <source>Including the results of a CGI program</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1496da1d37865b9a22c43fda76935a6ed2360ed" translate="yes" xml:space="preserve">
          <source>Incremental IndexOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7a5901a9e1a7c51f959e216002fe706896538a" translate="yes" xml:space="preserve">
          <source>IndexHeadInsert Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3eb03ebfb8feb898db19c7eef8e21f199452fed" translate="yes" xml:space="preserve">
          <source>IndexIgnore Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa04e8c9ee5024e9b4460491bc506131fccab762" translate="yes" xml:space="preserve">
          <source>IndexIgnoreReset Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58ef343dbeeccc0875d1edb7cd13e7a6a938f20" translate="yes" xml:space="preserve">
          <source>IndexOptions Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b042a78462b941921fdbe199b0e3fc533f504c" translate="yes" xml:space="preserve">
          <source>IndexOrderDefault Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536e7f5b206da5653b7b677a94f00e7542c71b9e" translate="yes" xml:space="preserve">
          <source>IndexStyleSheet Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f642ee196088372ea886186c6c617515599afd3f" translate="yes" xml:space="preserve">
          <source>Indexes</source>
          <target state="translated">Indexes</target>
        </trans-unit>
        <trans-unit id="aea5a35644a6038ea4b9ed3fbbbdbb7d894a875b" translate="yes" xml:space="preserve">
          <source>Individual directives that are allowed in &lt;code&gt;.htaccess&lt;/code&gt; files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa9dbeb9939842bde9307c90e385dafa26993e97" translate="yes" xml:space="preserve">
          <source>Influenced by &lt;code&gt;&lt;a href=&quot;core#limit&quot;&gt;&amp;lt;Limit&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;core#limitexcept&quot;&gt;&amp;lt;LimitExcept&amp;gt;&lt;/a&gt;&lt;/code&gt; in version 2.0.51 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31405a1a8929a8c848e159aba889f1e3aea9d103" translate="yes" xml:space="preserve">
          <source>Informational.</source>
          <target state="translated">Informational.</target>
        </trans-unit>
        <trans-unit id="dcb49b8402c085d502915ad3e2fc19353eace148" translate="yes" xml:space="preserve">
          <source>Initial caching of an entry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86895df783eef6d42a7638aab5d419c0ebe6a182" translate="yes" xml:space="preserve">
          <source>Inline Login</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ccc04104520c4ec96f916bc2af0e8614eff2c2" translate="yes" xml:space="preserve">
          <source>Inline Login with Body Preservation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7688a604fb2f68c037f91f852daa6253aab53c8b" translate="yes" xml:space="preserve">
          <source>Input Decompression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f48b508fe7f7aadd73bd38182a3e4c277f45b3e" translate="yes" xml:space="preserve">
          <source>Insert &lt;var&gt;filter-name&lt;/var&gt; at the start of the filter chain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41814aef32ab12845d320fc0a5dfa31e4e23e591" translate="yes" xml:space="preserve">
          <source>Insert INFLATE filter only if &quot;gzip&quot; is NOT in the Accept-Encoding header. This filter runs with ftype CONTENT_SET.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bebb658d8064779630693e250eca0d19de5f8835" translate="yes" xml:space="preserve">
          <source>Inserts text in the HEAD section of an index page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">Install</target>
        </trans-unit>
        <trans-unit id="25698238529e36c36bbff9a1cf8864afeb7e862b" translate="yes" xml:space="preserve">
          <source>Installing from source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a1e1ced0e07213cbfa6f33d6a26ffd394053a4" translate="yes" xml:space="preserve">
          <source>Installing on Fedora/CentOS/Red Hat Enterprise Linux</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5628a9680ce3130226426c266f8760192803c47" translate="yes" xml:space="preserve">
          <source>Installing on Ubuntu/Debian</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a53e86ba7d4b4f6f55e30b3861ead0ba1220100" translate="yes" xml:space="preserve">
          <source>Instead of listing all dns names on the same line, you may use &lt;code&gt;MDMember&lt;/code&gt; to add such names to a managed domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="441cd62e4eff11e12f87b88fc025333c0822ef8c" translate="yes" xml:space="preserve">
          <source>Instead, provided with httpd is the &lt;a href=&quot;programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt; tool which allows you to clean the cache periodically. Determining how frequently to run &lt;a href=&quot;programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt; and what target size to use for the cache is somewhat complex and trial and error may be needed to select optimal values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee73d86e8c3fba0e58f78bb3fb22a6e6cf892fc" translate="yes" xml:space="preserve">
          <source>Integer equality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a373cb06f849745d1e3f88685c87b525c46b7a" translate="yes" xml:space="preserve">
          <source>Integer greater than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97fab31e5da2e11e0a43753c6de14b4c2b13fd85" translate="yes" xml:space="preserve">
          <source>Integer greater than or equal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8513165462817031f57dc66d8683e569bf33892" translate="yes" xml:space="preserve">
          <source>Integer inequality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2295a599b2be24f7be34f909f6305e21d3158e" translate="yes" xml:space="preserve">
          <source>Integer less than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9a5b5c159eb25d3e153cccff50b4968e9fa886" translate="yes" xml:space="preserve">
          <source>Integer less than or equal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb838e9ccd07e8b7fa352b08baa333726cd2e06f" translate="yes" xml:space="preserve">
          <source>Interaction between host-level access control and user authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301b2222062d0cd682168bda56f6664b16feb8ca" translate="yes" xml:space="preserve">
          <source>Interaction with the Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe9a0ef809ba887aa5875883a88580551336c502" translate="yes" xml:space="preserve">
          <source>Interleaved Priority Rule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373b5e08f5fc88cded97669a6d0b933cefcf2eda" translate="yes" xml:space="preserve">
          <source>Interoperability problems have led to the introduction of mechanisms to modify the way Apache behaves when talking to particular clients. To make these mechanisms as flexible as possible, they are invoked by defining environment variables, typically with &lt;code&gt;&lt;a href=&quot;mod/mod_setenvif#browsermatch&quot;&gt;BrowserMatch&lt;/a&gt;&lt;/code&gt;, though &lt;code&gt;&lt;a href=&quot;mod/mod_env#setenv&quot;&gt;SetEnv&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod/mod_env#passenv&quot;&gt;PassEnv&lt;/a&gt;&lt;/code&gt; could also be used, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="5d824b95e8144a5378dc4a31cb9fbe74625bfb61" translate="yes" xml:space="preserve">
          <source>Introduction to Server Side Includes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d10f669df8738631d36a3d53daa201cc6404f5" translate="yes" xml:space="preserve">
          <source>Invalid character set names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc2ff723b5fbcf65f535d567797ec1300969e957" translate="yes" xml:space="preserve">
          <source>Invalid hyperlink</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f63d5c1b6033a0fded9e877bbe55ee9caaf6b71c" translate="yes" xml:space="preserve">
          <source>Invocation modes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256daf39bbbd5b0623bdb1ea206eb3b9e39fe885" translate="yes" xml:space="preserve">
          <source>Invoke a lua function in the auth_checker phase of processing a request. This can be used to implement arbitrary authentication and authorization checking. A very simple example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b6383fd8f90c8b3882d99afb1e424882b6fd2ee" translate="yes" xml:space="preserve">
          <source>Issues Regarding DNS and Apache HTTP Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfafb016ebe91f6ebaca919740ba3cbfb6d02a26" translate="yes" xml:space="preserve">
          <source>It can be made safe by &lt;em&gt;untainting&lt;/em&gt; all inputs: a process inspired by Perl's taint checking. Each input is matched against a regexp, and only the match is used, according to the Perl idiom:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="673a825c2cb69d47ae612033d96659479124277c" translate="yes" xml:space="preserve">
          <source>It can be useful during development of cached RESTful services to have additional information about the caching decision written to the response headers, so as to confirm whether &lt;code&gt;Cache-Control&lt;/code&gt; and other headers have been correctly used by the service and client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cfc83fa062ba79310ca43286ab95ade8779bca2" translate="yes" xml:space="preserve">
          <source>It can happen that some format string items do not produce output. For example, the Referer header is only present if the log message is associated to a request and the log message happens at a time when the Referer header has already been read from the client. If no output is produced, the default behavior is to delete everything from the preceding space character to the next space character. This means the log line is implicitly divided into fields on non-whitespace to whitespace transitions. If a format string item does not produce output, the whole field is omitted. For example, if the remote address &lt;code&gt;%a&lt;/code&gt; in the log format &lt;code&gt;[%t] [%l] [%a] %M&lt;/code&gt; is not available, the surrounding brackets are not logged either. Space characters can be escaped with a backslash to prevent them from delimiting a field. The combination '% ' (percent space) is a zero-width field delimiter that does not produce any output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7aa7190336590cba3c398a0b9704e5df845c6a" translate="yes" xml:space="preserve">
          <source>It insists that the user enters a password. (&lt;code&gt;&lt;a href=&quot;#anonymous_mustgiveemail&quot;&gt;Anonymous_MustGiveEmail&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a28fe1cef9425081c44eefe023093ed8535abf05" translate="yes" xml:space="preserve">
          <source>It insists that the user enters a userID. (&lt;code&gt;&lt;a href=&quot;#anonymous_nouserid&quot;&gt;Anonymous_NoUserID&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4617759b878fff2b99bace262cdca6ab50e0c4fc" translate="yes" xml:space="preserve">
          <source>It is a module that sends static content at a bandwidth rate limit, defined by the various old modem standards. So, you can browse your site with a 56k V.92 modem, by adding something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8930d631dbbe53bf5e5bcc7b182d1e1f24a63c2c" translate="yes" xml:space="preserve">
          <source>It is also possible to change the level per directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9680b8aa0e1d13945bcda47074aa47d592c5169" translate="yes" xml:space="preserve">
          <source>It is also possible, when the quick handler is disabled, for the administrator to choose the precise location within the filter chain where caching is to be performed, by adding the &lt;strong&gt;CACHE&lt;/strong&gt; filter to the chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84fa0a84925cfe1e20a3c634f65f3a84a8684474" translate="yes" xml:space="preserve">
          <source>It is also recommended that an appropriate &quot;nice&quot; level is chosen for htcacheclean so that the tool does not cause excessive disk io while the server is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ccc5d8e95446d6510b360290014ea86fb2226a" translate="yes" xml:space="preserve">
          <source>It is assumed that &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;/usr&lt;/code&gt;, and &lt;code&gt;/usr/local&lt;/code&gt; are only modifiable by root. When you install the &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; executable, you should ensure that it is similarly protected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db128f1b6e287493215a5f97b55b56776c08cf70" translate="yes" xml:space="preserve">
          <source>It is best to &lt;em&gt;avoid&lt;/em&gt; putting mutex files in a world-writable directory such as &lt;code&gt;/var/tmp&lt;/code&gt; because someone could create a denial of service attack and prevent the server from starting by creating a lockfile with the same name as the one the server will try to create.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596e232171bc77b4d2c8989950c98437b71d6a99" translate="yes" xml:space="preserve">
          <source>It is crucial that whatever program you use to create your group files is configured to use the same type of database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe7299f695f5fd5e299912a0d84c8b67e72ffcf" translate="yes" xml:space="preserve">
          <source>It is crucial that whatever program you use to create your password files is configured to use the same type of database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd90df5213b641de4e747f53b5676181ab9cc85f" translate="yes" xml:space="preserve">
          <source>It is formatted like an HTML comment, so if you don't have SSI correctly enabled, the browser will ignore it, but it will still be visible in the HTML source. If you have SSI correctly configured, the directive will be replaced with its results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcefea24fba0f1f53e443fe859a11ac284bcb1d8" translate="yes" xml:space="preserve">
          <source>It is frequently desirable to have a single file or resource handle all requests to a particular directory, except those requests that correspond to an existing file or script. This is often referred to as a 'front controller.'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7c8442732e5b3d8bf6262671c33dcfb67f3aef" translate="yes" xml:space="preserve">
          <source>It is not possible to override or change the standard CGI variables using the environment manipulation directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0cf899eb355ecd4ca15b5193ea4a3cdf8f9e82" translate="yes" xml:space="preserve">
          <source>It is possible to &quot;leak&quot; SysV semaphores if processes crash before the semaphore is removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aeca8c1f691936781b6d3c6e1ba5307e052b93b" translate="yes" xml:space="preserve">
          <source>It is possible to have the time displayed in another format by specifying &lt;code&gt;%{format}t&lt;/code&gt; in the log format string, where &lt;code&gt;format&lt;/code&gt; is either as in &lt;code&gt;strftime(3)&lt;/code&gt; from the C standard library, or one of the supported special tokens. For details see the &lt;code&gt;&lt;a href=&quot;mod/mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;mod/mod_log_config#formats&quot;&gt;format strings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6fb39947684331e68c6c3c7a1ac6618fe2647f6" translate="yes" xml:space="preserve">
          <source>It is recommended that new media types be added using the &lt;code&gt;AddType&lt;/code&gt; directive rather than changing the &lt;code&gt;&lt;a href=&quot;#typesconfig&quot;&gt;TypesConfig&lt;/a&gt;&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4812266c1a251b00701253af3f416406e99586be" translate="yes" xml:space="preserve">
          <source>It is recommended that you do this sort of postprocessing of your log files on some machine other than the production web server machine, in order that this activity not adversely affect server performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194a1bcf0683d12efd161b6bdb757c9c81bc6f03" translate="yes" xml:space="preserve">
          <source>It is safe to specify protocols that are unavailable/disabled. Such protocol names will simply be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d09623b9855a7b8e855213fe66f6e4dac469e2" translate="yes" xml:space="preserve">
          <source>It is safer to avoid placing CGI scripts under the &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; in order to avoid accidentally revealing their source code if the configuration is ever changed. The &lt;code&gt;ScriptAlias&lt;/code&gt; makes this easy by mapping a URL and designating CGI scripts at the same time. If you do choose to place your CGI scripts in a directory already accessible from the web, do not use &lt;code&gt;ScriptAlias&lt;/code&gt;. Instead, use &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;core#sethandler&quot;&gt;SetHandler&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;core#options&quot;&gt;Options&lt;/a&gt;&lt;/code&gt; as in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e3c82fcaba7338cb179ede4cbde9bbd2b094eb" translate="yes" xml:space="preserve">
          <source>It is up to dbd user modules to use the prepared statements and document what statements can be specified in httpd.conf, or to provide their own directives and use &lt;code&gt;ap_dbd_prepare&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70d775e50c806e6898f32931bb781bd4d50397e" translate="yes" xml:space="preserve">
          <source>It may be worth setting up a dedicated address for this, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2206dd7a4de6ec593f95085c5d0b08dc7bd34575" translate="yes" xml:space="preserve">
          <source>It should be up to the client creating the request, or the origin server constructing the response to decide whether or not the content should be cacheable or not by correctly setting the &lt;code&gt;Cache-Control&lt;/code&gt; header, and &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; should be left alone to honor the wishes of the client or server as appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdb2814ae75cb0d08f5a988640d561b19b64a40" translate="yes" xml:space="preserve">
          <source>It specifies the directory path and file name of the trusted CA certificates and/or system wide client certificates &lt;code&gt;&lt;a href=&quot;mod_ldap&quot;&gt;mod_ldap&lt;/a&gt;&lt;/code&gt; should use when establishing an SSL or TLS connection to an LDAP server. Note that all certificate information specified using this directive is applied globally to the entire server installation. Some LDAP toolkits (notably Novell) require all client certificates to be set globally using this directive. Most other toolkits require clients certificates to be set per Directory or per Location using LDAPTrustedClientCert. If you get this wrong, an error may be logged when an attempt is made to contact the LDAP server, or the connection may silently fail (See the SSL/TLS certificate guide above for details). The type specifies the kind of certificate parameter being set, depending on the LDAP toolkit being used. Supported types are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb684bd5bc4a69f58a3e67c109c20da186dcf796" translate="yes" xml:space="preserve">
          <source>It specifies the directory path, file name or nickname of a per connection client certificate used when establishing an SSL or TLS connection to an LDAP server. Different locations or directories may have their own independent client certificate settings. Some LDAP toolkits (notably Novell) do not support per connection client certificates, and will throw an error on LDAP server connection if you try to use this directive (Use the LDAPTrustedGlobalCert directive instead for Novell client certificates - See the SSL/TLS certificate guide above for details). The type specifies the kind of certificate parameter being set, depending on the LDAP toolkit being used. Supported types are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba498f0152f1fbdfbcb23b3ad7bfb216c3064fb0" translate="yes" xml:space="preserve">
          <source>It's recommended that you undefine a macro once you've used it. This avoids confusion in a complex configuration file where there may be conflicts in variable names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffe9ac1edd755341bfb383df71948021987304b" translate="yes" xml:space="preserve">
          <source>It's strongly recommended that the magic username '&lt;code&gt;anonymous&lt;/code&gt;' is always one of the allowed userIDs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e027e57610f85225767aafbbf23fed7457e55828" translate="yes" xml:space="preserve">
          <source>Java</source>
          <target state="translated">Java</target>
        </trans-unit>
        <trans-unit id="5cef758291a02c974c15e53c0299ecc215cfd868" translate="yes" xml:space="preserve">
          <source>Just as multiple authentication providers can be implemented, multiple authorization methods can also be used. In this example both file group authorization as well as LDAP group authorization is being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ad39e8e742c96fbbb8ed569495d1c9a612f4e5" translate="yes" xml:space="preserve">
          <source>Just like LuaHookTranslateName, but executed at the fixups phase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e89b86631da3915b94ab2c6cd96276cd8904fb" translate="yes" xml:space="preserve">
          <source>Just the configuration directives, not sorted by module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa6b9ce5252e56bf06b425d5e9844d6b6dc51f4" translate="yes" xml:space="preserve">
          <source>KEY_BASE64 - PEM encoded private key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f61009ea455b96610f986ea949cb7397023e94" translate="yes" xml:space="preserve">
          <source>KEY_DER - binary DER encoded private key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9414ac7bf68c65c4b3fe1b3b73e3e0bdaca699" translate="yes" xml:space="preserve">
          <source>KEY_PFX - PKCS#12 encoded private key (Novell SDK)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5a4247990561eef6a4a3851b9244cb1c30d1e4" translate="yes" xml:space="preserve">
          <source>Keep Alive handling is the most basic improvement from the worker MPM. Once a worker thread finishes to flush the response to the client, it can offload the socket handling to the listener thread, that in turns will wait for any event from the OS, like &quot;the socket is readable&quot;. If any new request comes from the client, then the listener will forward it to the first worker thread available. Conversely, if the &lt;code&gt;&lt;a href=&quot;core#keepalivetimeout&quot;&gt;KeepAliveTimeout&lt;/a&gt;&lt;/code&gt; occurs then the socket will be closed by the listener. In this way the worker threads are not responsible for idle sockets and they can be re-used to serve other requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d91104cf8a6e4b00be1f33abe20fe5c9566ff9" translate="yes" xml:space="preserve">
          <source>Keep track of extended status information for each request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc1ba3041a96d563647ab2b5f68de11612f6496" translate="yes" xml:space="preserve">
          <source>Keep up to Date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d7a3a4338312412258517850785e2023dfca81" translate="yes" xml:space="preserve">
          <source>Keep-alive</source>
          <target state="translated">Keep-alive</target>
        </trans-unit>
        <trans-unit id="8775d89e9cb6ceaf6f9a68c0a7a2eaf95ccb0a4a" translate="yes" xml:space="preserve">
          <source>KeepAlive Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478e31722ea68c674a167a8cb1261d4a822e3c58" translate="yes" xml:space="preserve">
          <source>KeepAliveTimeout Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc276b676e70e7370f80c783d512d36815b6efe" translate="yes" xml:space="preserve">
          <source>Keepalive time for idle connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84cebd6c527d5cc04572a1db246e5d82a02f4222" translate="yes" xml:space="preserve">
          <source>Keywords may only be separated by a comma; &lt;em&gt;no whitespace&lt;/em&gt; is allowed between them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616ae0e516f073c066a59a8a38d5b52110f5407c" translate="yes" xml:space="preserve">
          <source>Known Limitations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719fb592fff2f0043580d0373cf7239a4c92b368" translate="yes" xml:space="preserve">
          <source>Known to support the &lt;a href=&quot;http://www.openldap.org/&quot;&gt;OpenLDAP SDK&lt;/a&gt; (both 1.x and 2.x), &lt;a href=&quot;http://developer.novell.com/ndk/cldap.htm&quot;&gt; Novell LDAP SDK&lt;/a&gt; and the &lt;a href=&quot;http://www.iplanet.com/downloads/developer/&quot;&gt;iPlanet (Netscape)&lt;/a&gt; SDK.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4ea09c602750b0a244d8e174179eb5b33473f9" translate="yes" xml:space="preserve">
          <source>LDAP Cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a1e12129d6dd9940768a6b0ee5445593b41e78" translate="yes" xml:space="preserve">
          <source>LDAP Connection Pool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48bb39f003832ac2d27dad2fa617ea675531e433" translate="yes" xml:space="preserve">
          <source>LDAP attributes used to identify the user members of groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc256d1e15de346fb4d0656d919b176aef9000ad" translate="yes" xml:space="preserve">
          <source>LDAP connection pooling and result caching services for use by other LDAP modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c057e282c9296bd8a581bbafab48e15782497983" translate="yes" xml:space="preserve">
          <source>LDAP connections are pooled from request to request. This allows the LDAP server to remain connected and bound ready for the next request, without the need to unbind/connect/rebind. The performance advantages are similar to the effect of HTTP keepalives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f9c07186ce742ae3cdbf648ed8da1a6720b604" translate="yes" xml:space="preserve">
          <source>LDAP connections can keep track of the ldap client credentials used when binding to an LDAP server. These credentials can be provided to LDAP servers that do not allow anonymous binds during referral chasing. To control this feature, see the &lt;code&gt;&lt;a href=&quot;#ldapreferrals&quot;&gt;LDAPReferrals&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#ldapreferralhoplimit&quot;&gt;LDAPReferralHopLimit&lt;/a&gt;&lt;/code&gt; directives. By default, this feature is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49948d9323e88bbfcd2b71f2ce058cecc8eb63a" translate="yes" xml:space="preserve">
          <source>LDAP errors such as timeouts and refused connections are retryable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52783a5cfaedf6263f76038d8cb4f49abc83ceae" translate="yes" xml:space="preserve">
          <source>LDAP result cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc96552852e6ef15f4a8a37ca40fb8d6e646c9d" translate="yes" xml:space="preserve">
          <source>LDAPCacheEntries Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9531c779c963850b89b2b43c2eeefd7c416b5e9" translate="yes" xml:space="preserve">
          <source>LDAPCacheTTL Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1979915839a930fbdc98a888602cbef8a5ba490b" translate="yes" xml:space="preserve">
          <source>LDAPConnectionPoolTTL Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b501f21bacdc2ae652f563f48060f5d2af9681f" translate="yes" xml:space="preserve">
          <source>LDAPConnectionTimeout Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38a847bb559df810735b5fa6252a8d5625d0e08" translate="yes" xml:space="preserve">
          <source>LDAPConnectionTimeout is only available when the LDAP client library linked with the server supports the LDAP_OPT_NETWORK_TIMEOUT (or LDAP_OPT_CONNECT_TIMEOUT) option, and the ultimate behavior is dictated entirely by the LDAP client library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f202dad8e82ffaf103098e4130e4e5b28da38e" translate="yes" xml:space="preserve">
          <source>LDAPLibraryDebug Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0c67a89b4bab0d9c90324c72f7b01a457ac0b8" translate="yes" xml:space="preserve">
          <source>LDAPOpCacheEntries Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8abb353ed8237deaade07b7157b9e01a3f5d49b7" translate="yes" xml:space="preserve">
          <source>LDAPOpCacheTTL Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ffee5764d5275c5a5b12fede73fe1a355f7324" translate="yes" xml:space="preserve">
          <source>LDAPReferralHopLimit Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdcfb42a3baecaa58ceac3483d5ee8822b816ec4" translate="yes" xml:space="preserve">
          <source>LDAPReferrals Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62517bf19de04c36cdb110e3a1985a9ee3516f7" translate="yes" xml:space="preserve">
          <source>LDAPRetries Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5435a60c03bcd2504d593a223358392927702fe5" translate="yes" xml:space="preserve">
          <source>LDAPRetryDelay Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3b61f517741483b9803006939880142598a490" translate="yes" xml:space="preserve">
          <source>LDAPSharedCacheFile Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62649f7625e1ae34990d7aa2af8a1c373e07a63" translate="yes" xml:space="preserve">
          <source>LDAPSharedCacheSize Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="658b3145762d4a0466cf2c0a585203ffda77b5ac" translate="yes" xml:space="preserve">
          <source>LDAPTimeout Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682b2e5c3f66d54474063c85450d346ed5221a04" translate="yes" xml:space="preserve">
          <source>LDAPTrustedClientCert Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725a8673a57c206ef315e3104d9e255aca7a74f2" translate="yes" xml:space="preserve">
          <source>LDAPTrustedGlobalCert Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1401e67c473d51efbbd03967719410b26f6b2f9" translate="yes" xml:space="preserve">
          <source>LDAPTrustedMode Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b4feb0f6b038c037214feb1e31dc60821f3e3a" translate="yes" xml:space="preserve">
          <source>LDAPVerifyServerCert Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43808cdb8b3a1fb0a33ea340636c33469fcd6fba" translate="yes" xml:space="preserve">
          <source>LE Staging Setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="8bab785769b60a584536a98bdc3b1163f440f99b" translate="yes" xml:space="preserve">
          <source>Language Negotiation Exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed4e69fad209f53f1bf8de50dc11a9030d1b57ee" translate="yes" xml:space="preserve">
          <source>Language to charset conversion configuration file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236c1868784fe00723619ff8a1d4af7d4e279c10" translate="yes" xml:space="preserve">
          <source>Language/Country Codes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4762f4eb97e67d21394c70fb3dc56a7b26078b5" translate="yes" xml:space="preserve">
          <source>LanguagePriority Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56028cb07a329d8197076651bd192ea3670a0996" translate="yes" xml:space="preserve">
          <source>Last but not least, pushes happen only when the client signals its willingness to accept those. Most browsers do, some, like Safari 9, do not. Also, pushes also only happen for resources from the same &lt;em&gt;authority&lt;/em&gt; as the original response is for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7461e5712b19eef4e37ecc8c4c7b879e9ecd8bb" translate="yes" xml:space="preserve">
          <source>Last modified column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a97387a1225e207b04ed5938ff9fbb2b79d088" translate="yes" xml:space="preserve">
          <source>Last, but not least, there are some specifics of the syntax to be used in this directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f5ffd0d51e2f49ef8ba0981774d6cd798d90ec" translate="yes" xml:space="preserve">
          <source>Legacy URL pathname for a name-based virtual host that is accessed by an incompatible browser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5c187685b1e666ceca9c7f4ca6ca6eb49fccee" translate="yes" xml:space="preserve">
          <source>Legacy expression syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed776f6f8af425b23e10f114b554b5667edcb78d" translate="yes" xml:space="preserve">
          <source>Let's Encrypt offers, right now, two such URLs. One for the real certificates and one for testing (their staging area, at https://acme-staging.api.letsencrypt.org/directory). In order to have &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; use this testing service, configure your server like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9ff64ba2eb5976348851e41bfab4ae91d7b8e5" translate="yes" xml:space="preserve">
          <source>Let's examine each of those directives individually. The &lt;code&gt;&lt;a href=&quot;../mod/mod_authn_core#authtype&quot;&gt;AuthType&lt;/a&gt;&lt;/code&gt; directive selects that method that is used to authenticate the user. The most common method is &lt;code&gt;Basic&lt;/code&gt;, and this is the method implemented by &lt;code&gt;&lt;a href=&quot;../mod/mod_auth_basic&quot;&gt;mod_auth_basic&lt;/a&gt;&lt;/code&gt;. It is important to be aware, however, that Basic authentication sends the password from the client to the server unencrypted. This method should therefore not be used for highly sensitive data, unless accompanied by &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt;. Apache supports one other authentication method: &lt;code&gt;AuthType Digest&lt;/code&gt;. This method is implemented by &lt;code&gt;&lt;a href=&quot;../mod/mod_auth_digest&quot;&gt;mod_auth_digest&lt;/a&gt;&lt;/code&gt; and was intended to be more secure. This is no longer the case and the connection should be encrypted with &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e735bfff8811f18ef1ef9c87e52c2c74f79e3fb" translate="yes" xml:space="preserve">
          <source>Letting more than one person in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec793eb7fd1d6c9106d97e622f4fcbf89e666960" translate="yes" xml:space="preserve">
          <source>Licensed under the Apache License, Version 2.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a1d68bf0fb4ffaf48124958e3d38a2583a59b1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;LuaHookTranslateName&lt;/code&gt; but executed at the map-to-storage phase of a request. Modules like mod_cache run at this phase, which makes for an interesting example on what to do here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8d61cbb05d41504ae0193da79bad1761156539" translate="yes" xml:space="preserve">
          <source>Likewise, if the response includes the &quot;no-store&quot; option in a &quot;Cache-Control:&quot; header, it will not be stored unless the &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachestorenostore&quot;&gt;CacheStoreNoStore&lt;/a&gt;&lt;/code&gt; has been used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d948e4bdbe5b8224bbc0dfbab1923fab00b98e" translate="yes" xml:space="preserve">
          <source>Limit</source>
          <target state="translated">Limit</target>
        </trans-unit>
        <trans-unit id="3c66efd5521c1c0c6060258a7bfa224657297c94" translate="yes" xml:space="preserve">
          <source>Limit (in bytes) on maximum size of an XML-based request body. A value of &lt;code&gt;0&lt;/code&gt; will disable any checking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb14a4dbc774a35292b08adfb903a97fa7eb056c" translate="yes" xml:space="preserve">
          <source>Limit concurrent connections per process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccac49dc9336627ea290dddde7ddf4da3d662e7c" translate="yes" xml:space="preserve">
          <source>Limit the size of the HTTP request line that will be accepted from the client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728b16c854d61e22ae68842ecee949017e8d3154" translate="yes" xml:space="preserve">
          <source>LimitInternalRecursion Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331843b0400d9f5ddae87ff2452273b50b04f9dd" translate="yes" xml:space="preserve">
          <source>LimitRequestBody Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6196272a227c4cce02efac336d058b75a9d741f" translate="yes" xml:space="preserve">
          <source>LimitRequestFieldSize Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dcf08d56c5530a51627c142f9e46a3e6fe7f068" translate="yes" xml:space="preserve">
          <source>LimitRequestFields Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4939d74f49ee9d89a27de288b2041cee27b29c" translate="yes" xml:space="preserve">
          <source>LimitRequestLine Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590dfd45f530363dfebd553d5f42abecb84bf0d2" translate="yes" xml:space="preserve">
          <source>LimitXMLRequestBody Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="c32bd2403d8b6f32946b24d8b20bbe8e43441661" translate="yes" xml:space="preserve">
          <source>Limiting CGI to special directories gives the admin control over what goes into those directories. This is inevitably more secure than non script aliased CGI, but only if users with write access to the directories are trusted or the admin is willing to test each new CGI script/program for potential security holes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fcb79c35c1a82fd190e45f14bf807d4a612e5d" translate="yes" xml:space="preserve">
          <source>Limits the CPU consumption of processes launched by Apache httpd children</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76abae9146c9023b6fc8db48a6995703a84ec31" translate="yes" xml:space="preserve">
          <source>Limits the memory consumption of processes launched by Apache httpd children</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b685583333caf820d452cda79ab3ee0aeaf7d8c8" translate="yes" xml:space="preserve">
          <source>Limits the number of HTTP request header fields that will be accepted from the client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e929fe060548846246737643c856d3361d2b9ed3" translate="yes" xml:space="preserve">
          <source>Limits the number of overlapping ranges to a compile-time default of 20.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfff028ae33085fed378c246149d13b7fa9935c8" translate="yes" xml:space="preserve">
          <source>Limits the number of processes that can be launched by processes launched by Apache httpd children</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9083f7cbb77202d70751066a99572f30343ef030" translate="yes" xml:space="preserve">
          <source>Limits the number of range reversals to a compile-time default of 20.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0133fbda7aee59ac4b6419ca783009763af0056" translate="yes" xml:space="preserve">
          <source>Limits the number of ranges to a compile-time default of 200.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6778d2c69d890a76a7f58e62a8f7216e6d2f93c2" translate="yes" xml:space="preserve">
          <source>Limits the size of an XML-based request body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1f8352a76145a50d27fa80ca2a10efbac7140b" translate="yes" xml:space="preserve">
          <source>Limits the size of the HTTP request header allowed from the client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6686de40762cada1fdb82623e537c0a02405d8c7" translate="yes" xml:space="preserve">
          <source>Lingering Close</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209af2e5542d91772bc2ac2a5b7739c2b8c9d935" translate="yes" xml:space="preserve">
          <source>Link headers in responses are either set by the application or can be configured via &lt;code&gt;&lt;a href=&quot;mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt; as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2ebc7ac96a993a47a116095618515cf161046b" translate="yes" xml:space="preserve">
          <source>Linux on x86</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c1bfd87cbfcf248432942c161081a15039fe4f" translate="yes" xml:space="preserve">
          <source>Linux's &lt;code&gt;TCP_DEFER_ACCEPT&lt;/code&gt; does not support buffering http requests. Any value besides &lt;code&gt;none&lt;/code&gt; will enable &lt;code&gt;TCP_DEFER_ACCEPT&lt;/code&gt; on that listener. For more details see the Linux &lt;a href=&quot;http://man7.org/linux/man-pages/man7/tcp.7.html&quot;&gt; tcp(7)&lt;/a&gt; man page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac796df210307ef0f4c2510c0f89c1985843c9b0" translate="yes" xml:space="preserve">
          <source>List &lt;var&gt;socache&lt;/var&gt; ahead of the provider you're cacheing for in your &lt;code&gt;&lt;a href=&quot;mod_auth_basic#authbasicprovider&quot;&gt;AuthBasicProvider&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_auth_digest#authdigestprovider&quot;&gt;AuthDigestProvider&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="812726760767935d2c046d196e7d456b1065c341" translate="yes" xml:space="preserve">
          <source>List of resources to look for when the client requests a directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5224b84a1a610d3fb13a9c1a0a4cde9879b1d202" translate="yes" xml:space="preserve">
          <source>List the providers that are available on your server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d42d01490dfe362df2544d553e3d84a615c8040" translate="yes" xml:space="preserve">
          <source>Loading of executable code and modules into the server at start-up or restart time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731c1e165b554f3959a2fec54da85f3d97d0e060" translate="yes" xml:space="preserve">
          <source>Local (Unix) sockets or pipes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951db9a0c0adfa48b0738e002c75ba63f68f87e0" translate="yes" xml:space="preserve">
          <source>Local IP-address and port</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2168e832ac6e01137441a7965f620e99042c56b" translate="yes" xml:space="preserve">
          <source>Local IP-address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89b69e274a48ae38649ed32f46d034f55bf2b0f" translate="yes" xml:space="preserve">
          <source>Local exploits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45cd437849b45860388b70d3301a28f3ee080bee" translate="yes" xml:space="preserve">
          <source>Location of the CGI script error logfile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3ed12dbbb85e1e7b6cd562847b3fffcad9ebf9" translate="yes" xml:space="preserve">
          <source>Location of the DAV lock database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718b8e98ba0c14c53065f292a8279ead23a2be57" translate="yes" xml:space="preserve">
          <source>Location where the server will log errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44acb3886a1b28e841e91e84d93a85d09728e91a" translate="yes" xml:space="preserve">
          <source>Locks and Cache-Control: no-cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2726e83301d74702a40416350a8f406870723c3f" translate="yes" xml:space="preserve">
          <source>Locks are used as a &lt;strong&gt;hint only&lt;/strong&gt; to enable the cache to be more gentle on backend servers, however the lock can be overridden if necessary. If the client sends a request with a Cache-Control header forcing a reload, any lock that may be present will be ignored, and the client's request will be honored immediately and the cached entry refreshed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92568ed56fa1cfe15a1c3c976d00ea13bd2efac" translate="yes" xml:space="preserve">
          <source>Log Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e394479c8244d689cd9abe49e7b708e926a7e388" translate="yes" xml:space="preserve">
          <source>Log Files and Troubleshooting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5a478511cc69edf0f8dd18d8b8628716ff14bf" translate="yes" xml:space="preserve">
          <source>Log ID of the connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c5fac403ae901ce2122bbfea709c37f86e6302" translate="yes" xml:space="preserve">
          <source>Log ID of the connection if used in connection scope, empty otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed6e5b909157058b2d8a08d5c517ca178826789" translate="yes" xml:space="preserve">
          <source>Log ID of the request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb48c7877806d17e4623c02a5893cb88c9e4367" translate="yes" xml:space="preserve">
          <source>Log Rotation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f037e0e03f5f9088c20094dcd5ef13889b7e4dd4" translate="yes" xml:space="preserve">
          <source>Log message after request to /foo/* is processed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8bb20d26cead5c059de6135aad8b5a3abbdb5a" translate="yes" xml:space="preserve">
          <source>Log message if an IPv6 client causes a request timeout:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffb78a88519820e7218312efeb01d4f8bb8cffd" translate="yes" xml:space="preserve">
          <source>Log message if request to /foo/* is processed in a sub-request:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ed4967c61f7ddd83213eae369664b77b54c44e" translate="yes" xml:space="preserve">
          <source>Log the value of the &quot;X-Foo&quot; request environment variable in each stage of the request:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a5d9e8f8c1aba9c050d10a4be66d9247fd77c2" translate="yes" xml:space="preserve">
          <source>Log unsupported feature requests from ISAPI extensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df25ebcc43fb5b3eb46ab8d537643887cda0310a" translate="yes" xml:space="preserve">
          <source>Log user-defined message to error log</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0461ae13bb7465845e1518853476b26c981568" translate="yes" xml:space="preserve">
          <source>LogFormat Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60867af9f4eb246b651770ccf55034d4c326e53e" translate="yes" xml:space="preserve">
          <source>LogIOTrackTTFB Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b888a4bccde991d3435af3562b14e04850df5e" translate="yes" xml:space="preserve">
          <source>LogLevel Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff235d261790054cf9bf82116d9a234969f97949" translate="yes" xml:space="preserve">
          <source>LogMessage Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="a596b3089855158116013fae3b94a3569f207596" translate="yes" xml:space="preserve">
          <source>Logging Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c816ebdd9fac2c178b10f425ad795e1609b0ac4" translate="yes" xml:space="preserve">
          <source>Logging Out</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c138d7457fdd2bcfd0eb758080dda2c10a1ab267" translate="yes" xml:space="preserve">
          <source>Logging actual bytes sent and received</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040b58b76baa052f8bfe0c263f8e113a302cf233" translate="yes" xml:space="preserve">
          <source>Logging of input and output bytes per request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95c90bcd14078c1f3dcbc24e2f7c953409db5f6" translate="yes" xml:space="preserve">
          <source>Logging of the requests made to the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548f65f7ac584f0d45578ce03d60dc8db5092643" translate="yes" xml:space="preserve">
          <source>Loglevel of the message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d84cba6e5934972030ed291050552d1759c9e60" translate="yes" xml:space="preserve">
          <source>Logs &lt;code&gt;Referer&lt;/code&gt; on all requests that do &lt;em&gt;not&lt;/em&gt; return one of the three specified codes, &quot;&lt;code&gt;-&lt;/code&gt;&quot; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796c19b0940374aecf6be580574ed856a6f01f82" translate="yes" xml:space="preserve">
          <source>Logs &lt;code&gt;User-agent&lt;/code&gt; on 400 errors and 501 errors only. For other status codes, the literal string &lt;code&gt;&quot;-&quot;&lt;/code&gt; will be logged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524ac72cce1325b8b9524f918c58341900d932a1" translate="yes" xml:space="preserve">
          <source>Logs a &lt;code&gt;-&lt;/code&gt; if &lt;code&gt;Referer&lt;/code&gt; is not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fbf0e42ff2bb8d14ba41e411f710e041379fb27" translate="yes" xml:space="preserve">
          <source>Logs all requests for unsupported features from ISAPI extensions in the server error log. This may help administrators to track down problems. Once set to on and all desired ISAPI modules are functioning, it should be set back to off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f951ecbccba369b334cbd7bfa2b9cb66394bda" translate="yes" xml:space="preserve">
          <source>Logs the &lt;code&gt;Referer&lt;/code&gt; only if the log message severity is higher than 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3101cfe1538168cf2ccc7820de91d516e2eaa60f" translate="yes" xml:space="preserve">
          <source>Looking at the table above, you will notice that it is always possible to use the name without any extensions in a hyperlink (&lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;foo&lt;/code&gt;). The advantage is that you can hide the actual type of a document rsp. file and can change it later, &lt;em&gt;e.g.&lt;/em&gt;, from &lt;code&gt;html&lt;/code&gt; to &lt;code&gt;shtml&lt;/code&gt; or &lt;code&gt;cgi&lt;/code&gt; without changing any hyperlink references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba925740f58d3d48a5492511cebd7ed18b195ab" translate="yes" xml:space="preserve">
          <source>Lookup operating system environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7b197b56c3e847c3192a1932bf1b410cf8ce00" translate="yes" xml:space="preserve">
          <source>Lookup request environment variable (as a shortcut, &lt;code&gt;v&lt;/code&gt; can also be used to access variables).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea7689ebab6c771bafa9a0ffc7ed09f593efcae" translate="yes" xml:space="preserve">
          <source>Lookup request note</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf9022ef8d018f1ddc0751755d72dabb09c2c45" translate="yes" xml:space="preserve">
          <source>LuaAuthzProvider Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993a459743a74bede759e1c46c45648bc2c173a9" translate="yes" xml:space="preserve">
          <source>LuaCodeCache Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8bb70c615b22b66fdb17f7eee246b4d861e6411" translate="yes" xml:space="preserve">
          <source>LuaHookAccessChecker Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085c90861b42815dd89d324f3fc47cfe8c71546a" translate="yes" xml:space="preserve">
          <source>LuaHookAuthChecker Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1415022356fd6b7a7a9cf10e8f17c383372c3da3" translate="yes" xml:space="preserve">
          <source>LuaHookCheckUserID Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feacb22ee1193b8a2a903e7fdfaf03bca19329a4" translate="yes" xml:space="preserve">
          <source>LuaHookFixups Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7666814ec57a4ed5227c655c6904f5842c5b6728" translate="yes" xml:space="preserve">
          <source>LuaHookInsertFilter Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d489119e7fa1301bc1140ead7144f2a86806c6" translate="yes" xml:space="preserve">
          <source>LuaHookLog Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ff0ba29e7bab20e878beff375bde7012e409ad" translate="yes" xml:space="preserve">
          <source>LuaHookMapToStorage Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3cfd2b285379480e12ba7a9b72fa1845ed911f2" translate="yes" xml:space="preserve">
          <source>LuaHookTranslateName Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4b02f8f9c012229174d6e3bca04ed237301b26c" translate="yes" xml:space="preserve">
          <source>LuaHookTypeChecker Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3b5337e941b4f1c61a032c4a0f31c498e96093" translate="yes" xml:space="preserve">
          <source>LuaInherit Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c2c3352d42815db84e27f63f1c4b333e39f5a1" translate="yes" xml:space="preserve">
          <source>LuaInputFilter Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ffdff6df880b3f40441ad6dc620b288b946f763" translate="yes" xml:space="preserve">
          <source>LuaMapHandler Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9cc889ee35b0ef0388bcbd834cb4a6a98bb38c" translate="yes" xml:space="preserve">
          <source>LuaOutputFilter Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79cd905e55f2646eb8ffbb481db315e50d30a37" translate="yes" xml:space="preserve">
          <source>LuaPackageCPath Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13bf11f253d8f9c225c0427cad3c61ca0ae4359" translate="yes" xml:space="preserve">
          <source>LuaPackagePath Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d7f49798971e1e5405864ef123d82c137188da" translate="yes" xml:space="preserve">
          <source>LuaQuickHandler Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfa4feee3d5dca687887d45f5d0da592441337a" translate="yes" xml:space="preserve">
          <source>LuaRoot Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dfd93f0e75a13af2293f7436587c49c6eef49e4" translate="yes" xml:space="preserve">
          <source>LuaScope Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b773bed04a48de200b96981bb79467413a222066" translate="yes" xml:space="preserve">
          <source>MD5</source>
          <target state="translated">MD5</target>
        </trans-unit>
        <trans-unit id="45920ec298737003751d497e830f8f9fdc4aa66b" translate="yes" xml:space="preserve">
          <source>MD5 is an algorithm for computing a &quot;message digest&quot; (sometimes called &quot;fingerprint&quot;) of arbitrary-length data, with a high degree of confidence that any alterations in the data will be reflected in alterations in the message digest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a213c395b7aa6f363996d2ff4311d526a933e4" translate="yes" xml:space="preserve">
          <source>MDBaseServer Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6296ce92c75784b09c92b55764c6757e87e982e9" translate="yes" xml:space="preserve">
          <source>MDCAChallenges Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55fc643a095e836f901c0135c0f01bae7eba653c" translate="yes" xml:space="preserve">
          <source>MDCertificateAgreement Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e6b718f8b4c03e7ca4cd58251e24b9a1655c63" translate="yes" xml:space="preserve">
          <source>MDCertificateAuthority Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5371f0fad08b90fba4e69fac47a350eb744ce507" translate="yes" xml:space="preserve">
          <source>MDCertificateProtocol Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f160242a85eb9d3c49bf7b12e195bd1ec9f32e" translate="yes" xml:space="preserve">
          <source>MDDriveMode Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce1363aa9605ab4a49ad4a0ffd2ac33446c9388" translate="yes" xml:space="preserve">
          <source>MDHttpProxy Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc846613547c9d9a908726ceb092c82e156f4450" translate="yes" xml:space="preserve">
          <source>MDMember Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4d0544eb6e0592e1bc3dd637db8128090dd5e4" translate="yes" xml:space="preserve">
          <source>MDMembers Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e467d9c38ad10f688e8c8c4867bc56586755892b" translate="yes" xml:space="preserve">
          <source>MDMustStaple Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc4b0b15f381cd3d423feb0444331848eb21ba6" translate="yes" xml:space="preserve">
          <source>MDNotifyCmd Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efdc7c92a380b66912b0cfe04ce3d19a6bb651c" translate="yes" xml:space="preserve">
          <source>MDPortMap Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb82a84674fe9cf65947c1fba96e67c87d5f76f8" translate="yes" xml:space="preserve">
          <source>MDPrivateKeys Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76485398544b3ea3f7a20bdc7678c75481ff360" translate="yes" xml:space="preserve">
          <source>MDRenewWindow Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5279e74fe141b5a7429d46e4efc1708dfe0b0b4" translate="yes" xml:space="preserve">
          <source>MDRequireHttps Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372c9ffe439d37472c001eba26d5164ce4058f5f" translate="yes" xml:space="preserve">
          <source>MDStoreDir Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19c0d381e675d82c71ea5a1233c3f25b705289d" translate="yes" xml:space="preserve">
          <source>MDomain Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50a56e6b24876323870770315c1f896cd3771820" translate="yes" xml:space="preserve">
          <source>MIME encoding if matched (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b836e832142e1bea303e129017ba73fc75f1b99" translate="yes" xml:space="preserve">
          <source>MIME header environment for the response, printed even on errors and persist across internal redirects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f257f00748ea94461f45c9e4f599495b63b540bc" translate="yes" xml:space="preserve">
          <source>MIME header environment for the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4f63c022bd2c8d5e5dc32fd14ad262477ef0e1" translate="yes" xml:space="preserve">
          <source>MIME header environment from the request. This contains headers such as &lt;code&gt;Host, User-Agent, Referer&lt;/code&gt; and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3598d04f235f5868dcab96ad4f4e0b52a561284f" translate="yes" xml:space="preserve">
          <source>MIME type if matched</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f837a8fd9a2d6d0fd621e0c5b5a14bb8ec27fe93" translate="yes" xml:space="preserve">
          <source>MMapFile Caching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b118254e7894be13dfade9d66ff73a28fe8260b" translate="yes" xml:space="preserve">
          <source>MMapFile Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3bb99cab18887c2548fd080f34f3d9af953e07" translate="yes" xml:space="preserve">
          <source>MPM</source>
          <target state="translated">MPM</target>
        </trans-unit>
        <trans-unit id="1b9096b45975016c3392baffc10f03e92c7f5520" translate="yes" xml:space="preserve">
          <source>MPM Common Directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9399543ee31c8f8c658f01f608d4df0538f3d21a" translate="yes" xml:space="preserve">
          <source>MPM Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408886c3a72d7b56dd21c612c81bd6884f6867ed" translate="yes" xml:space="preserve">
          <source>MPM event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b92e168a7249aee3f5371172309f09856f47af1" translate="yes" xml:space="preserve">
          <source>MPM netware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209003d500826307d264351db4512c4445912bf8" translate="yes" xml:space="preserve">
          <source>MPM os2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94141d5868dafbd5a16c032760eb3d7c7f9fcfe" translate="yes" xml:space="preserve">
          <source>MPM prefork</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fcae179a05061da91e2a085055c354d4adbec1" translate="yes" xml:space="preserve">
          <source>MPM winnt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae7eec4f0ec06dbb156651902a5975d338e2c3d" translate="yes" xml:space="preserve">
          <source>MPM worker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b65fb93038793da7a4eefb62599fa4eb64bc6b" translate="yes" xml:space="preserve">
          <source>MPM: AsyncRequestWorkerFactor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d5dd49f9d4fdc38dcded21443aea3a81949a3d" translate="yes" xml:space="preserve">
          <source>MPM: CoreDumpDirectory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b063f9cc584f1aced1310374788de1683a8eb0" translate="yes" xml:space="preserve">
          <source>MPM: EnableExceptionHook</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57d04db46bd33be245af3f953c714bfc9b28f58" translate="yes" xml:space="preserve">
          <source>MPM: GracefulShutdownTimeout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421c067d91bdb77c9a977d415aa75dbd3015b4db" translate="yes" xml:space="preserve">
          <source>MPM: Listen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f39c0dfb862bac92045b01a6518464053c3cbe" translate="yes" xml:space="preserve">
          <source>MPM: ListenBackLog</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c518c4dfe90bf0a029d69865d2a398da4f19786a" translate="yes" xml:space="preserve">
          <source>MPM: ListenCoresBucketsRatio</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888c4081e32e33ab7f2bc212656f5f0a64433053" translate="yes" xml:space="preserve">
          <source>MPM: MaxConnectionsPerChild</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b16cc3bcbcdf953274a433b1d8964c1862942e95" translate="yes" xml:space="preserve">
          <source>MPM: MaxMemFree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a62daea20034bf945f2e7bb67d83c0058d0915" translate="yes" xml:space="preserve">
          <source>MPM: MaxRequestWorkers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ebc9becae46e7e2d36b0fe11db595e053146b3" translate="yes" xml:space="preserve">
          <source>MPM: MaxSpareServers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8639843a4733116ab407720c2c28c07372f689dd" translate="yes" xml:space="preserve">
          <source>MPM: MaxSpareThreads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649e1695034b0d86c1960e990332350fe4c6de4a" translate="yes" xml:space="preserve">
          <source>MPM: MaxThreads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10037fd7a004f9b364908fe0efb53c3ca322daae" translate="yes" xml:space="preserve">
          <source>MPM: MinSpareServers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e2de2ce8b34a2cd4e0ac76882635b4877756b1" translate="yes" xml:space="preserve">
          <source>MPM: MinSpareThreads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc54d4e9b52866931553956778c039f90c8311e" translate="yes" xml:space="preserve">
          <source>MPM: PidFile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7753a8e798df98281a4f6b4dcb02bf0a5515684b" translate="yes" xml:space="preserve">
          <source>MPM: ReceiveBufferSize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e3e3a4f0bbaad99f61fc2d04469b8614e7e523" translate="yes" xml:space="preserve">
          <source>MPM: ScoreBoardFile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="270afa4e948354968447ee925bbf7a76c6e148c9" translate="yes" xml:space="preserve">
          <source>MPM: SendBufferSize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96501ae98939f1dae3f2f08f2c4491db24e7ba6" translate="yes" xml:space="preserve">
          <source>MPM: ServerLimit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8343ae1c4c99a94ddf7a28ca618975e40972669" translate="yes" xml:space="preserve">
          <source>MPM: StartServers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd499c801a3afa724ab7921acb67f0818491a34" translate="yes" xml:space="preserve">
          <source>MPM: StartThreads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fcd47788a1c2f275a6868c2446283235027b7b2" translate="yes" xml:space="preserve">
          <source>MPM: ThreadLimit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d166b0a3277d97088cf23221ff5009a8bfc611" translate="yes" xml:space="preserve">
          <source>MPM: ThreadStackSize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3ef2cca74f973159ba26223ae3cff329af0a0d" translate="yes" xml:space="preserve">
          <source>MPM: ThreadsPerChild</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff59c8ee3779775d40623bfa24c765ef5a0162a" translate="yes" xml:space="preserve">
          <source>Macro names are case-insensitive, like httpd configuration directives. However, variable names are case sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ba04ad9eae2b135b4d249362b058316015521a" translate="yes" xml:space="preserve">
          <source>Macros are defined using &lt;code&gt;&lt;a href=&quot;#macro&quot;&gt;&amp;lt;Macro&amp;gt;&lt;/a&gt;&lt;/code&gt; blocks, which contain the portion of your configuration that needs to be repeated, complete with variables for those parts that will need to be substituted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05dbfff589b95d20d090e26afb7f3d924875610" translate="yes" xml:space="preserve">
          <source>Main Configuration Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04d871a29f23ca79a85657b3f4d927061c7a629" translate="yes" xml:space="preserve">
          <source>Maintaining the Disk Cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac8a95ad89f47a045c1dd928aa4c3a8f761482d" translate="yes" xml:space="preserve">
          <source>Maintains a cache of authentication credentials, so that a new backend lookup is not required for every authenticated request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6fa366b626f18f3c8300c26e2045cdb261e9a3e" translate="yes" xml:space="preserve">
          <source>Make sure that the &lt;code&gt;AuthDBMGroupFile&lt;/code&gt; is stored outside the document tree of the web-server. Do &lt;strong&gt;not&lt;/strong&gt; put it in the directory that it protects. Otherwise, clients will be able to download the &lt;code&gt;AuthDBMGroupFile&lt;/code&gt; unless otherwise protected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913a0bbb8012d08ef01170184ab4be2db93679b4" translate="yes" xml:space="preserve">
          <source>Make sure that the &lt;code&gt;AuthDBMUserFile&lt;/code&gt; is stored outside the document tree of the web-server; do &lt;em&gt;not&lt;/em&gt; put it in the directory that it protects. Otherwise, clients will be able to download the &lt;code&gt;AuthDBMUserFile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562c1a27cc06231103132a126bc56b1c66b69ef2" translate="yes" xml:space="preserve">
          <source>Make sure that the &lt;code&gt;AuthGroupFile&lt;/code&gt; is stored outside the document tree of the web-server; do &lt;em&gt;not&lt;/em&gt; put it in the directory that it protects. Otherwise, clients may be able to download the &lt;code&gt;AuthGroupFile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d51ec123fed50fa74fe4cfae9425ea3aeb4acc" translate="yes" xml:space="preserve">
          <source>Make sure that the &lt;code&gt;AuthUserFile&lt;/code&gt; is stored outside the document tree of the web-server. Do &lt;strong&gt;not&lt;/strong&gt; put it in the directory that it protects. Otherwise, clients may be able to download the &lt;code&gt;AuthUserFile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b85ecc8dd4de779c113a178c3699e351c9fb2f53" translate="yes" xml:space="preserve">
          <source>Make sure that this is in fact the path to the interpreter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2f334c275f31df282557d99a1c283e2e74c0dd" translate="yes" xml:space="preserve">
          <source>Make sure you have APR and APR-Util already installed on your system. If you don't, or prefer to not use the system-provided versions, download the latest versions of both APR and APR-Util from &lt;a href=&quot;http://apr.apache.org/&quot;&gt;Apache APR&lt;/a&gt;, unpack them into &lt;code&gt;/httpd_source_tree_root/srclib/apr&lt;/code&gt; and &lt;code&gt;/httpd_source_tree_root/srclib/apr-util&lt;/code&gt; (be sure the directory names do not have version numbers; for example, the APR distribution must be under /httpd_source_tree_root/srclib/apr/) and use &lt;code&gt;./configure&lt;/code&gt;'s &lt;code&gt;--with-included-apr&lt;/code&gt; option. On some platforms, you may have to install the corresponding &lt;code&gt;-dev&lt;/code&gt; packages to allow httpd to build against your installed copy of APR and APR-Util.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffcb84daa676ba8ff6fb5089c9f8c7e773bbe46c" translate="yes" xml:space="preserve">
          <source>Make sure you have an ANSI-C compiler installed. The &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;GNU C compiler (GCC)&lt;/a&gt; from the &lt;a href=&quot;http://www.gnu.org/&quot;&gt;Free Software Foundation (FSF)&lt;/a&gt; is recommended. If you don't have GCC then at least make sure your vendor's compiler is ANSI compliant. In addition, your &lt;code&gt;PATH&lt;/code&gt; must contain basic build tools such as &lt;code&gt;make&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b970fa9b40152176c23df1d443c4db1245203cfe" translate="yes" xml:space="preserve">
          <source>Make sure you have at least 50 MB of temporary free disk space available. After installation the server occupies approximately 10 MB of disk space. The actual disk space requirements will vary considerably based on your chosen configuration options, any third-party modules, and, of course, the size of the web site or sites that you have on the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1ea797fc3f2edeb0c2ae5e7b623c099c826074" translate="yes" xml:space="preserve">
          <source>Make the server (run &quot;&lt;code&gt;make&lt;/code&gt;&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921fce91203fc1b75b751afeda9e3de58c206e80" translate="yes" xml:space="preserve">
          <source>Manages SQL database connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69290b8c78f75a82a820aaa665fe5e27c048f2a8" translate="yes" xml:space="preserve">
          <source>Manages a cache of authentication credentials to relieve the load on backends</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5dc31c07c9f7009280145027ef74f21519402f" translate="yes" xml:space="preserve">
          <source>Managing domains across virtual hosts, certificate provisioning via the ACME protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3eb51e063764abafb7c0571a7449b34293f112" translate="yes" xml:space="preserve">
          <source>Many filters will change the content, invalidating existing content tags, checksums, hashes, and lengths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae71ce93193a705a69317b65eaccf259ae110c8d" translate="yes" xml:space="preserve">
          <source>Many sites use the same TLS certificate for multiple virtual hosts. The certificate either has a wildcard name, such as '*.example.org' or carries several alternate names. Browsers using HTTP/2 will recognize that and reuse an already opened connection for such hosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ad38f86d18499de3e55343220277232972d083" translate="yes" xml:space="preserve">
          <source>Map a list of files into memory at startup time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31287db26c4d73d50299b90d14812e6ce2d0d528" translate="yes" xml:space="preserve">
          <source>Map a path to a lua handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0086ba1032914db1a30a093b2a9ccd43ca4ed68" translate="yes" xml:space="preserve">
          <source>Map external to internal ports for domain ownership verification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133ed0654d5a0ebc702f2b3b797fd4f27902a44f" translate="yes" xml:space="preserve">
          <source>Map to storage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b791887f455f92bac9c736083632e621d31ba399" translate="yes" xml:space="preserve">
          <source>Mapping URLs to Filesystem Locations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2e121d22b7fc9f14041e14b54216ce82fb8eea" translate="yes" xml:space="preserve">
          <source>Mapping URLs to the Filesystem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4dce4a0d904e809383c39b8a26e0a485f12726" translate="yes" xml:space="preserve">
          <source>Maps URLs to filesystem locations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf15a0e7991cd65da08966aa6fe9aba471a4eddf" translate="yes" xml:space="preserve">
          <source>Maps URLs to filesystem locations using regular expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea4810b586076f5907f5962ddfbdf12f12c910e" translate="yes" xml:space="preserve">
          <source>Maps a URL to a filesystem location and designates the target as a CGI script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f66472fa1598c6f1b2166f254f17773da6e25f1" translate="yes" xml:space="preserve">
          <source>Maps a URL to a filesystem location using a regular expression and designates the target as a CGI script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1162913ec96ddc2c1388fd9c4fb9aeec8b5c99b2" translate="yes" xml:space="preserve">
          <source>Maps filename extensions to the filters that will process client requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38fc13104ffced309d5500af0b2bc2bef5af3d96" translate="yes" xml:space="preserve">
          <source>Maps filename extensions to the filters that will process responses from the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1293e38c4224ccced8f2f76c76536228f85e65be" translate="yes" xml:space="preserve">
          <source>Maps the filename extensions to the specified handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63fec5008f83e81ae381b0b4152fd1b69940477d" translate="yes" xml:space="preserve">
          <source>Maps the given filename extension to the specified content language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734a77562fe113d3de0a96849f49f4e450cc301e" translate="yes" xml:space="preserve">
          <source>Maps the given filename extensions onto the specified content type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b07cf2228c35b45b28a3b12355f9c1b3cdd28f" translate="yes" xml:space="preserve">
          <source>Maps the given filename extensions to the specified content charset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173e704062e40edb035ed145798d31b6d7d24bc6" translate="yes" xml:space="preserve">
          <source>Maps the given filename extensions to the specified encoding type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0335207f5e840d81afa158c6c2bb6e3fa02653b4" translate="yes" xml:space="preserve">
          <source>Match</source>
          <target state="translated">Match</target>
        </trans-unit>
        <trans-unit id="3233835c66dc7c3d2a74ee7534606dd9855abb5a" translate="yes" xml:space="preserve">
          <source>Match Allow only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92e9744e689f2236c88a602a23beff316ffb2f8" translate="yes" xml:space="preserve">
          <source>Match Deny only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab33be95d724bfbea354f3d3dda959479e72674" translate="yes" xml:space="preserve">
          <source>Match both Allow &amp;amp; Deny</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067982bee83dad28bc53a2edc09d6799e8df8215" translate="yes" xml:space="preserve">
          <source>MaxKeepAliveRequests Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c0d8d0a7c1753ad14489b7f71ad22b7e160088" translate="yes" xml:space="preserve">
          <source>MaxRangeOverlaps Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624479f4a047710d313c72e4fc8c59fe4fcb3937" translate="yes" xml:space="preserve">
          <source>MaxRangeReversals Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8187e87e942fbbfd88f929f1e231e5a867a1d69a" translate="yes" xml:space="preserve">
          <source>MaxRanges Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4b681f851f4c0f35ca5ba3db807637b257561f" translate="yes" xml:space="preserve">
          <source>Maximum amount of PUT or POST requests that will be recorded in the scriptlog</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3c5218b5a2d41e98293fc20eaf0f5fc8e5b393" translate="yes" xml:space="preserve">
          <source>Maximum amount of output data buffered per stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c92f8f9204c479b59d686221f4b7d2d89eaa6a8" translate="yes" xml:space="preserve">
          <source>Maximum inflation ratio for request bodies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867712d55ec0089a333b9615af5e57867c59dd53" translate="yes" xml:space="preserve">
          <source>Maximum input block size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5718c502319ce23025457cec83006ceff95dd2" translate="yes" xml:space="preserve">
          <source>Maximum number of active streams per HTTP/2 session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8575730fc901df68f9812937ede31bfeca0fc7" translate="yes" xml:space="preserve">
          <source>Maximum number of connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4231f18f7c58732e5ca44c5ffdf10c636d52757d" translate="yes" xml:space="preserve">
          <source>Maximum number of entries in the primary LDAP cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="431644d91f54db8b0d25f563914156621732b8a5" translate="yes" xml:space="preserve">
          <source>Maximum number of seconds h2 workers remain idle until shut down.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00aa9630f26836258af65aee5c967484b1cb6e66" translate="yes" xml:space="preserve">
          <source>Maximum number of times the inflation ratio for request bodies can be crossed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb953f2d62131507f63fe5ecabedfa72e0fafd83" translate="yes" xml:space="preserve">
          <source>Maximum number of worker threads to use per child process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451ae682eea51a1c2643c471c8f8be35741ebee3" translate="yes" xml:space="preserve">
          <source>Maximum size in bytes to buffer by the buffer filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7edc47236e9e627f2fd0cdea1207479ce52053c" translate="yes" xml:space="preserve">
          <source>Maximum size of inflated request bodies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123f0c3fbd5da52e54ccde4db06f87fd659963ef" translate="yes" xml:space="preserve">
          <source>Maximum sustained number of connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="1fe2c243854d2f937c57dddc889ce6aedbdd8386" translate="yes" xml:space="preserve">
          <source>Meanwhile, the listener thread is able to accept another connection as soon as it has dispatched this connection to a worker thread (subject to some flow-control logic in the worker MPM that throttles the listener if all the available workers are busy). Though it isn't apparent from this trace, the next &lt;code&gt;accept(2)&lt;/code&gt; can (and usually does, under high load conditions) occur in parallel with the worker thread's handling of the just-accepted connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afcdb9cbfda1c073e0a9251c27db8b4933abae7d" translate="yes" xml:space="preserve">
          <source>Measurements by &lt;a href=&quot;https://www.igvita.com&quot;&gt;google performance labs&lt;/a&gt; show that best performance on TLS connections is reached, if initial record sizes stay below the MTU level, to allow a complete record to fit into an IP packet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622a2e56f6d7c0edc29dd1ba6eff3f8fab20db4f" translate="yes" xml:space="preserve">
          <source>Media Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d7e6cacbe43ceccde4342c6d4b812025ee76fb" translate="yes" xml:space="preserve">
          <source>Media Types and Wildcards</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec7dd956e07328852b10f357c285563f8f0b8aa" translate="yes" xml:space="preserve">
          <source>Members can also be found within sub-groups of a specified LDAP group if &lt;code&gt;&lt;a href=&quot;#authldapmaxsubgroupdepth&quot;&gt;AuthLDAPMaxSubGroupDepth&lt;/a&gt;&lt;/code&gt; is set to a value greater than 0. For example, assume the following entries exist in the LDAP directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cea11e59c3b2afbf9fde770828b0118f607f576" translate="yes" xml:space="preserve">
          <source>Memcache based shared object cache provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ce749b40044a04cf755d98ac98d53c3737865d" translate="yes" xml:space="preserve">
          <source>Memcache based shared object cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9959b5cba20cdc65baaa25bcbf373cb7e66d65a3" translate="yes" xml:space="preserve">
          <source>Memory allocation is done through the Apache API's pool structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99237a7654624a79630e0a7bb2960f9ba302cecb" translate="yes" xml:space="preserve">
          <source>Memory resource limits are expressed in bytes per process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f761cd3518f5bdec52f69b1540c9f01a0f6d7aa2" translate="yes" xml:space="preserve">
          <source>Memory-mapping</source>
          <target state="translated">Memory-mapping</target>
        </trans-unit>
        <trans-unit id="c59bec818ff18e0824756db1a041c8c0d1e8e4f7" translate="yes" xml:space="preserve">
          <source>MergeTrailers Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4abf69189ddd9cbc673dce8c7c9573b6f686ce1" translate="yes" xml:space="preserve">
          <source>Merging of .htaccess with the main configuration files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df80484ae2c02329bec763a78fbe6f9ba7b7e009" translate="yes" xml:space="preserve">
          <source>Merging of configuration sections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d72cb29e88037c7f96aad266062bd052ea6ae1c" translate="yes" xml:space="preserve">
          <source>Messages written by the application are logged at log level &lt;code&gt;warn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc02dd2f9680b4fe10a9116bef71ee35dd42cbcc" translate="yes" xml:space="preserve">
          <source>Messages written to the filter's standard error will be stored in the Apache error log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0909de765185cd4bd144ac1647ca7a3801eda129" translate="yes" xml:space="preserve">
          <source>MetaDir Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba4c807b1a93ab23d9909a38ac54ccd6687d3ced" translate="yes" xml:space="preserve">
          <source>MetaFiles Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc14de67f5a8240ba7ee2e1132e36ec6b065018" translate="yes" xml:space="preserve">
          <source>MetaSuffix Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e5609d5f42eb5a7674861a10c16586fa5dcec1" translate="yes" xml:space="preserve">
          <source>Microsoft Internet Explorer (MSIE) will by default ignore server-generated error messages when they are &quot;too small&quot; and substitute its own &quot;friendly&quot; error messages. The size threshold varies depending on the type of error, but in general, if you make your error document greater than 512 bytes, then MSIE will show the server-generated error rather than masking it. More information is available in Microsoft Knowledge Base article &lt;a href=&quot;http://support.microsoft.com/default.aspx?scid=kb;en-us;Q294807&quot;&gt;Q294807&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c234792bf02f9cfa7386db5bba568ee82634dc" translate="yes" xml:space="preserve">
          <source>Microsoft SDK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86d6956c2fad54938e3bc8f2087e0ec793c9ed8" translate="yes" xml:space="preserve">
          <source>Microsoft Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44e87c1912cdebec65b48bb607c80cd3e00043e" translate="yes" xml:space="preserve">
          <source>MimeMagicFile Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38a1ab7514aabb5a8283b617dfb4d7ba8bd3b4a" translate="yes" xml:space="preserve">
          <source>Minimal number of worker threads to use per child process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39b57fb2a3f52f7e6193049830e2fe2e80dc2c1" translate="yes" xml:space="preserve">
          <source>Minimum amount of time the server holds a lock on a DAV resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6054203262566ad6a96a2ac2d86c32f0fc885cd" translate="yes" xml:space="preserve">
          <source>Minimum number of connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecbecd18d93f98ccb683bc4868c423770065d5b0" translate="yes" xml:space="preserve">
          <source>Misc variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="0cc43731c5fd03fb614383cfe8bf09240c08cac2" translate="yes" xml:space="preserve">
          <source>Mismatch between character set of content and translation rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e89ce43428dfc4510553f5f210e4a3827a8030" translate="yes" xml:space="preserve">
          <source>Missing environment variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98f488937f9678a8af29bfeb25a7c83770b2a35" translate="yes" xml:space="preserve">
          <source>Mixing &lt;code&gt;Options&lt;/code&gt; with a &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; with those without is not valid syntax and will be rejected during server startup by the syntax check with an abort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd27433f1752ec6972f8dbd3fd86adea8bf367f1" translate="yes" xml:space="preserve">
          <source>ModMimeUsePathInfo Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b73d9f847bee3e4b2f8f010ee436e30f9971de" translate="yes" xml:space="preserve">
          <source>Mod_lua implements a simple database feature for querying and running commands on the most popular database engines (mySQL, PostgreSQL, FreeTDS, ODBC, SQLite, Oracle) as well as mod_dbd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e831d2ba3c593510b92ca4c78b18f1986fa221" translate="yes" xml:space="preserve">
          <source>Modem standard to simulate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7f6faf834d09f2d761ea86c25eab488ac4fd56" translate="yes" xml:space="preserve">
          <source>ModemStandard Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb4229e0f05f1b1b889c8042f4c293ac1f7ebaa" translate="yes" xml:space="preserve">
          <source>Modification date of the file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a57bd342d8fbccdac0a5eb2c4d08e02fb009e33" translate="yes" xml:space="preserve">
          <source>Modified Token</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="6d11c3c403714bf5b700a0c8176ceb15eececff4" translate="yes" xml:space="preserve">
          <source>Modifies the environment which is passed to CGI scripts and SSI pages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f1b37753dc2f44472192fe639fe8b63f4643b3" translate="yes" xml:space="preserve">
          <source>Modify restrictions on HTTP Request Messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98d47d8a58a5b1d5609c091a048022ce4587c35" translate="yes" xml:space="preserve">
          <source>Modify the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f03675ae29646cd61cbb68664c74899bfeef5d4" translate="yes" xml:space="preserve">
          <source>Modifying contents with Lua filters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09a42e84edb465fa3f8fbe1b642999018a53da9" translate="yes" xml:space="preserve">
          <source>Modifying static content using a CGI script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feadcf2ef777306574eb4a7b509c2de49e4bca13" translate="yes" xml:space="preserve">
          <source>Modifying the response in case of missing authorization weakens the security of the password, because it reveals to a possible attacker, that his guessed password was right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb22c5e4eabc0e7d3ccf2b60e66f53421b63149" translate="yes" xml:space="preserve">
          <source>Module Index</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
